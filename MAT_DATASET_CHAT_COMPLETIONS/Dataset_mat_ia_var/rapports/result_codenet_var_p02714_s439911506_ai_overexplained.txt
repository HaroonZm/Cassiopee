================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer un nombre entier, puis le convertit et le stocke dans la variable N.
# Cette variable représente le nombre de caractères qui seront traités par le programme.
N = int(input())

# Demande à l'utilisateur d'entrer une chaîne de caractères, puis la convertit en une liste de caractères.
# Chaque élément de la liste S correspond à un caractère individuel de la chaîne entrée.
S = list(input())

# Initialise trois listes vides :
# R stockera les indices des caractères 'R' (probablement pour "Red").
# G stockera les indices des caractères 'G' (probablement pour "Green").
# B stockera les indices des caractères 'B' (probablement pour "Blue").
R = []
G = []
B = []

# Initialise un compteur à zéro. Cette variable servira à compter le résultat final.
cnt = 0

# Parcourt chaque indice i de 0 jusqu'à N-1 pour examiner chaque caractère de la liste S.
for i in range(N):
    # Vérifie si le caractère à l'indice i de S est 'R'.
    if S[i] == "R":
        # Si oui, ajoute l'indice i à la liste R.
        R.append(i)
    # Si ce n'est pas un 'R', vérifie si c'est un 'G'.
    elif S[i] == "G":
        # Si oui, ajoute l'indice i à la liste G.
        G.append(i)
    # Si le caractère n'est ni 'R' ni 'G', il considère que c'est 'B' (car il n'y a que trois couleurs possibles).
    else:
        # Ajoute l'indice i à la liste B.
        B.append(i)

# Convertit la liste B en un ensemble pour accélérer la recherche d'éléments.
# Les ensembles permettent des recherches plus rapides que les listes via l'opérateur 'in'.
B = set(B)

# Calcule le nombre total d'indices de type 'B' en utilisant la fonction len() sur l'ensemble B,
# puis stocke cette valeur dans la variable b.
b = len(B)

# Boucle externe : Parcourt chaque indice i stocké dans la liste R (i.e., positions des 'R').
for i in R:
    # Boucle interne imbriquée : Parcourt chaque indice j stocké dans la liste G (i.e., positions des 'G').
    for j in G:
        # Initialise une variable check à 0 pour ce couple (i, j).
        # Cette variable servira à compter combien de cas particuliers sont détectés et seront soustraits plus tard.
        check = 0

        # Calcule le minimum (m) et maximum (M) des indices i et j.
        # Cela permet de simplifier le calcul des autres indices pertinents.
        m = min(i, j)
        M = max(i, j)

        # Calcule la distance r entre les indices M et m.
        r = M - m

        # Calcule l'indice situé à gauche (left) et à droite (right) à une distance r de m et M.
        left = m - r
        right = M + r

        # Vérifie si la distance r est paire (i.e., r % 2 == 0).
        # Cela permet de savoir s'il existe un centre exactement entre m et M.
        if r % 2 == 0:
            # Si c'est le cas, calcule l'indice du centre.
            center = m + r // 2
            # Vérifie si l'indice center fait partie de l'ensemble B.
            # Si oui, cela signifie qu'il y a un 'B' exactement entre le 'R' et le 'G'.
            if center in B:
                # Incrémente la variable check de 1 pour ce cas particulier.
                check += 1

        # Vérifie si l'indice left (donc symétrique à m par rapport à M) fait partie de l'ensemble B.
        if left in B:
            # Si oui, incrémente check de 1.
            check += 1

        # Vérifie si l'indice right (symétrique à M par rapport à m) appartient à l'ensemble B.
        if right in B:
            # Si oui, incrémente check de 1.
            check += 1

        # Calcule la différence entre le nombre total de 'B' (b) et le nombre de cas particuliers détectés (check).
        # Ajoute cette valeur à la variable de comptage totale (cnt).
        # Cela correspond au nombre de triplets où le 'B' choisi n'est PAS dans une des positions interdites.
        cnt += b - check

# Affiche la valeur totale finale du compteur cnt,
# qui représente le nombre total de façons de choisir un indice 'R', un indice 'G' et un indice 'B'
# ne formant pas un triplet interdit selon les conditions du problème.
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00870274007320404
    2. ' l' → logprob: -4.883702754974365
    3. 'user' → logprob: -7.633702754974365
    4. 'util' → logprob: -8.508702278137207
    5. '#' → logprob: -9.258702278137207
    6. 'la' → logprob: -10.133702278137207
    7. ''' → logprob: -10.258702278137207
    8. '_' → logprob: -10.758702278137207
    9. '`' → logprob: -10.758702278137207
    10. '```' → logprob: -10.758702278137207

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6535242199897766
    2. 'util' → logprob: -1.4035241603851318
    3. 'u' → logprob: -1.6535241603851318
    4. ' utilisateur' → logprob: -4.278524398803711
    5. 'a' → logprob: -4.528524398803711
    6. ''' → logprob: -4.903524398803711
    7. '’utilisateur' → logprob: -5.028524398803711
    8. 'us' → logprob: -6.653524398803711
    9. '_util' → logprob: -7.528524398803711
    10. 'Utilisateur' → logprob: -7.653524398803711

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.1753106564283371
    2. 'name' → logprob: -2.6753106117248535
    3. 'n' → logprob: -3.4253106117248535
    4. 's' → logprob: -4.3003106117248535
    5. ' nom' → logprob: -4.8003106117248535
    6. 'user' → logprob: -4.9253106117248535
    7. ' =' → logprob: -6.0503106117248535
    8. 'prenom' → logprob: -6.0503106117248535
    9. 'print' → logprob: -6.1753106117248535
    10. 'input' → logprob: -6.1753106117248535

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1427343785762787
    2. ''' → logprob: -2.1427342891693115
    3. ''entrée' → logprob: -4.892734527587891
    4. 'é' → logprob: -6.517734527587891
    5. 'a' → logprob: -7.017734527587891
    6. 'u' → logprob: -7.267734527587891
    7. ''é' → logprob: -7.517734527587891
    8. 'entrée' → logprob: -7.517734527587891
    9. ''ent' → logprob: -7.642734527587891
    10. '```' → logprob: -8.01773452758789

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.35284939408302307
    2. 'entrée' → logprob: -1.7278493642807007
    3. 'ent' → logprob: -2.2278494834899902
    4. 's' → logprob: -5.60284948348999
    5. 'input' → logprob: -6.35284948348999
    6. 'être' → logprob: -6.85284948348999
    7. 'identifier' → logprob: -6.85284948348999
    8. 'entre' → logprob: -7.35284948348999
    9. 'enter' → logprob: -7.60284948348999
    10. 'avoir' → logprob: -7.97784948348999

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00025978617486543953
    2. 'éer' → logprob: -9.125259399414062
    3. 'rer' → logprob: -9.500259399414062
    4. 'e' → logprob: -11.250259399414062
    5. 'é' → logprob: -11.625259399414062
    6. 'érer' → logprob: -11.625259399414062
    7. ''er' → logprob: -11.750259399414062
    8. ' er' → logprob: -11.875259399414062
    9. 'erer' → logprob: -12.000259399414062
    10. 'trer' → logprob: -12.250259399414062

Token 10: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09051872789859772
    2. ' un' → logprob: -3.2155187129974365
    3. ''' → logprob: -4.090518951416016
    4. ' une' → logprob: -4.590518951416016
    5. '_' → logprob: -4.840518951416016
    6. 'u' → logprob: -5.965518951416016
    7. 'une' → logprob: -6.715518951416016
    8. ' u' → logprob: -6.965518951416016
    9. 'un' → logprob: -6.965518951416016
    10. ''un' → logprob: -6.965518951416016

Token 11: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16828948259353638
    2. 'e' → logprob: -2.5432894229888916
    3. '_' → logprob: -3.7932894229888916
    4. ' espace' → logprob: -4.043289661407471
    5. ''' → logprob: -4.668289661407471
    6. 'é' → logprob: -4.793289661407471
    7. '```' → logprob: -5.918289661407471
    8. 'es' → logprob: -6.168289661407471
    9. 'r' → logprob: -6.668289661407471
    10. '\' → logprob: -6.918289661407471

Token 12: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015009364113211632
    2. 'nombre' → logprob: -4.64000940322876
    3. 'x' → logprob: -5.76500940322876
    4. '#' → logprob: -7.51500940322876
    5. '```' → logprob: -8.015008926391602
    6. '\n' → logprob: -8.265008926391602
    7. '`' → logprob: -8.890008926391602
    8. 'input' → logprob: -9.015008926391602
    9. '=' → logprob: -9.265008926391602
    10. 'i' → logprob: -9.515008926391602

Token 13: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01935720257461071
    2. 'x' → logprob: -4.769357204437256
    3. 'nombre' → logprob: -6.019357204437256
    4. 'i' → logprob: -6.144357204437256
    5. '`' → logprob: -6.644357204437256
    6. '```' → logprob: -6.894357204437256
    7. '#' → logprob: -7.269357204437256
    8. ':' → logprob: -7.519357204437256
    9. '_' → logprob: -7.644357204437256
    10. 'input' → logprob: -7.769357204437256

Token 14: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.499306321144104
    2. 'n' → logprob: -1.249306321144104
    3. '```' → logprob: -4.2493062019348145
    4. 'x' → logprob: -4.3743062019348145
    5. 'a' → logprob: -4.6243062019348145
    6. ' n' → logprob: -4.7493062019348145
    7. 'input' → logprob: -5.2493062019348145
    8. '#' → logprob: -5.2493062019348145
    9. 'i' → logprob: -5.3743062019348145
    10. ',' → logprob: -5.3743062019348145

Token 15: ' le' (ID: 505)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.4413813650608063
    2. 'cal' → logprob: -2.4413814544677734
    3. 'calcul' → logprob: -2.8163814544677734
    4. 'print' → logprob: -3.0663814544677734
    5. ' affiche' → logprob: -3.3163814544677734
    6. ' calc' → logprob: -3.5663814544677734
    7. 's' → logprob: -4.566381454467773
    8. 'contin' → logprob: -4.691381454467773
    9. 'l' → logprob: -4.691381454467773
    10. 'mult' → logprob: -4.941381454467773

Token 16: ' convert' (ID: 8452)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.3118747472763062
    2. 'nombre' → logprob: -1.6868747472763062
    3. 'print' → logprob: -2.0618748664855957
    4. 's' → logprob: -2.3118748664855957
    5. 'car' → logprob: -2.9368748664855957
    6. 'n' → logprob: -3.1868748664855957
    7. 'cal' → logprob: -3.4368748664855957
    8. 'calcul' → logprob: -3.5618748664855957
    9. 'c' → logprob: -4.186874866485596
    10. 'val' → logprob: -4.436874866485596

Token 17: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04409651830792427
    2. '_' → logprob: -3.2940964698791504
    3. '_r' → logprob: -6.04409646987915
    4. ' ' → logprob: -6.41909646987915
    5. 'er' → logprob: -7.66909646987915
    6. 'z' → logprob: -8.169096946716309
    7. 's' → logprob: -8.544096946716309
    8. 'u' → logprob: -8.794096946716309
    9. 'space' → logprob: -8.794096946716309
    10. '_space' → logprob: -8.794096946716309

Token 18: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9688153266906738
    2. 'i' → logprob: -1.8438153266906738
    3. ' ' → logprob: -1.8438153266906738
    4. 'n' → logprob: -2.093815326690674
    5. 'x' → logprob: -3.343815326690674
    6. '```' → logprob: -3.968815326690674
    7. 'input' → logprob: -4.093815326690674
    8. '(' → logprob: -4.218815326690674
    9. '`' → logprob: -4.218815326690674
    10. '#' → logprob: -4.468815326690674

Token 19: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3925320506095886
    2. ''' → logprob: -2.1425321102142334
    3. ' le' → logprob: -3.0175321102142334
    4. '_' → logprob: -3.1425321102142334
    5. ' l' → logprob: -3.6425321102142334
    6. '`' → logprob: -4.142531871795654
    7. '"' → logprob: -4.517531871795654
    8. 's' → logprob: -4.642531871795654
    9. '```' → logprob: -5.392531871795654
    10. ' i' → logprob: -5.517531871795654

Token 20: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3270745873451233
    2. 's' → logprob: -3.0770745277404785
    3. 'n' → logprob: -3.3270745277404785
    4. ' transforme' → logprob: -3.8270745277404785
    5. ' convert' → logprob: -4.2020745277404785
    6. ''' → logprob: -4.2020745277404785
    7. ' print' → logprob: -4.5770745277404785
    8. 'i' → logprob: -4.7020745277404785
    9. 'convert' → logprob: -4.8270745277404785
    10. ' n' → logprob: -4.8270745277404785

Token 21: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22861143946647644
    2. 'r' → logprob: -2.103611469268799
    3. ' ' → logprob: -2.603611469268799
    4. ' =' → logprob: -6.228611469268799
    5. 'n' → logprob: -6.603611469268799
    6. '=' → logprob: -6.978611469268799
    7. '   ' → logprob: -7.353611469268799
    8. 'e' → logprob: -7.603611469268799
    9. 'a' → logprob: -7.603611469268799
    10. 'i' → logprob: -7.728611469268799

Token 22: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05610081925988197
    2. 'nombre' → logprob: -3.931100845336914
    3. 'x' → logprob: -4.056100845336914
    4. 'i' → logprob: -4.931100845336914
    5. '_' → logprob: -5.806100845336914
    6. '`' → logprob: -6.431100845336914
    7. '```' → logprob: -7.056100845336914
    8. 'u' → logprob: -7.681100845336914
    9. 'e' → logprob: -7.681100845336914
    10. 'user' → logprob: -7.806100845336914

Token 23: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.39808395504951477
    2. ' ' → logprob: -2.1480839252471924
    3. 'une' → logprob: -2.2730839252471924
    4. ' la' → logprob: -3.1480839252471924
    5. ' un' → logprob: -4.0230841636657715
    6. '_' → logprob: -4.0230841636657715
    7. 'la' → logprob: -5.0230841636657715
    8. ' a' → logprob: -5.3980841636657715
    9. ' ' → logprob: -5.5230841636657715
    10. 'a' → logprob: -6.0230841636657715

Token 24: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -1.058213233947754
    2. 'variable' → logprob: -1.058213233947754
    3. ' ' → logprob: -1.808213233947754
    4. '_' → logprob: -2.183213233947754
    5. '```' → logprob: -4.808213233947754
    6. 'nombre' → logprob: -6.183213233947754
    7. 'v' → logprob: -6.183213233947754
    8. ' ' → logprob: -6.308213233947754
    9. '`' → logprob: -6.683213233947754
    10. '_variable' → logprob: -6.808213233947754

Token 25: ' N' (ID: 478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12263976782560349
    2. ' ' → logprob: -2.9976396560668945
    3. 'n' → logprob: -3.1226396560668945
    4. 'nombre' → logprob: -5.7476396560668945
    5. 's' → logprob: -5.8726396560668945
    6. 'i' → logprob: -5.8726396560668945
    7. '`' → logprob: -5.9976396560668945
    8. 'x' → logprob: -6.1226396560668945
    9. '```' → logprob: -6.4976396560668945
    10. 'u' → logprob: -6.6226396560668945

Token 26: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07010582834482193
    2. 'n' → logprob: -2.695105791091919
    3. '#' → logprob: -10.32010555267334
    4. 'x' → logprob: -10.57010555267334
    5. '```' → logprob: -10.57010555267334
    6. 'i' → logprob: -10.82010555267334
    7. '\n' → logprob: -11.19510555267334
    8. '`' → logprob: -11.32010555267334
    9. '_' → logprob: -11.69510555267334
    10. '\' → logprob: -11.94510555267334

Token 27: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34976696968078613
    2. 'N' → logprob: -1.2247669696807861
    3. 'i' → logprob: -8.224766731262207
    4. '#' → logprob: -8.224766731262207
    5. 'x' → logprob: -8.349766731262207
    6. '```' → logprob: -8.724766731262207
    7. ' ' → logprob: -8.849766731262207
    8. '_' → logprob: -10.099766731262207
    9. ' 
' → logprob: -10.224766731262207
    10. '`' → logprob: -10.599766731262207

Token 28: ' Cette' (ID: 27383)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16167515516281128
    2. 'n' → logprob: -1.911675214767456
    3. ' N' → logprob: -7.036674976348877
    4. '#' → logprob: -8.786675453186035
    5. ' n' → logprob: -9.286675453186035
    6. 'num' → logprob: -9.411675453186035
    7. 'number' → logprob: -10.036675453186035
    8. 'nombre' → logprob: -10.161675453186035
    9. '```' → logprob: -10.661675453186035
    10. 'x' → logprob: -10.661675453186035

Token 29: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.2348446547985077
    2. ' valeur' → logprob: -1.98484468460083
    3. ' ' → logprob: -3.73484468460083
    4. 'variable' → logprob: -4.73484468460083
    5. '_' → logprob: -4.98484468460083
    6. 'val' → logprob: -5.23484468460083
    7. ' ' → logprob: -5.23484468460083
    8. 'n' → logprob: -5.35984468460083
    9. 's' → logprob: -6.10984468460083
    10. ' N' → logprob: -6.85984468460083

Token 30: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.763750433921814
    2. ' ' → logprob: -1.263750433921814
    3. ' est' → logprob: -2.3887505531311035
    4. '_' → logprob: -2.5137505531311035
    5. ' n' → logprob: -4.5137505531311035
    6. 's' → logprob: -4.6387505531311035
    7. ' vaut' → logprob: -4.7637505531311035
    8. ' a' → logprob: -5.1387505531311035
    9. ' sera' → logprob: -5.3887505531311035
    10. 'est' → logprob: -5.3887505531311035

Token 31: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.16827496886253357
    2. 'le' → logprob: -2.1682748794555664
    3. ' la' → logprob: -4.293274879455566
    4. 'l' → logprob: -4.668274879455566
    5. ' un' → logprob: -4.793274879455566
    6. ' ' → logprob: -5.543274879455566
    7. ' l' → logprob: -6.293274879455566
    8. 'la' → logprob: -6.668274879455566
    9. ' ' → logprob: -7.293274879455566
    10. 'un' → logprob: -7.668274879455566

Token 32: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.42921626567840576
    2. ' nombre' → logprob: -1.0542162656784058
    3. 'n' → logprob: -9.429216384887695
    4. 'nom' → logprob: -9.554216384887695
    5. ' nombres' → logprob: -9.929216384887695
    6. 's' → logprob: -10.429216384887695
    7. ' ' → logprob: -10.554216384887695
    8. ' nom' → logprob: -10.554216384887695
    9. 'nb' → logprob: -10.804216384887695
    10. 'Nombre' → logprob: -10.804216384887695

Token 33: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.34796255826950073
    2. 'd' → logprob: -2.5979626178741455
    3. ' entier' → logprob: -2.8479626178741455
    4. '_ent' → logprob: -3.0979626178741455
    5. ' de' → logprob: -3.3479626178741455
    6. '_' → logprob: -3.3479626178741455
    7. ' ' → logprob: -3.9729626178741455
    8. 'ent' → logprob: -5.097962379455566
    9. ' total' → logprob: -5.597962379455566
    10. '_total' → logprob: -5.597962379455566

Token 34: ' caractères' (ID: 183106)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.8600335717201233
    2. 'élé' → logprob: -2.1100335121154785
    3. ' répét' → logprob: -2.3600335121154785
    4. ' tours' → logprob: -2.4850335121154785
    5. ' ' → logprob: -2.7350335121154785
    6. ' fois' → logprob: -2.8600335121154785
    7. ' éléments' → logprob: -3.9850335121154785
    8. 'é' → logprob: -4.2350335121154785
    9. 'l' → logprob: -4.2350335121154785
    10. 'fois' → logprob: -4.6100335121154785

Token 35: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4460963308811188
    2. 's' → logprob: -1.3210963010787964
    3. '.' → logprob: -3.571096420288086
    4. ' )' → logprob: -4.446096420288086
    5. ' à' → logprob: -4.571096420288086
    6. 'n' → logprob: -4.946096420288086
    7. ' :' → logprob: -5.446096420288086
    8. ' ,' → logprob: -5.446096420288086
    9. '```' → logprob: -5.946096420288086
    10. ' ```' → logprob: -6.196096420288086

Token 36: ' seront' (ID: 35024)
  Prédit: ' vont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vont' → logprob: -0.7029592990875244
    2. ' seront' → logprob: -1.8279592990875244
    3. 's' → logprob: -1.9529592990875244
    4. ' doivent' → logprob: -2.4529592990875244
    5. ' suivent' → logprob: -3.5779592990875244
    6. ' devront' → logprob: -3.9529592990875244
    7. 'su' → logprob: -4.202959060668945
    8. 'ser' → logprob: -5.202959060668945
    9. ' suiv' → logprob: -5.452959060668945
    10. ' doit' → logprob: -5.577959060668945

Token 37: ' trait' (ID: 15458)
  Prédit: ' affich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -0.07333457469940186
    2. 'aff' → logprob: -2.9483346939086914
    3. ' analys' → logprob: -5.448334693908691
    4. 's' → logprob: -5.573334693908691
    5. ' demand' → logprob: -5.823334693908691
    6. ' trait' → logprob: -7.198334693908691
    7. 'l' → logprob: -7.198334693908691
    8. 'à' → logprob: -7.698334693908691
    9. 'd' → logprob: -7.823334693908691
    10. ' génér' → logprob: -7.948334693908691

Token 38: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.006746512372046709
    2. 'é' → logprob: -5.006746292114258
    3. '#' → logprob: -11.631746292114258
    4. 'es' → logprob: -12.006746292114258
    5. '```' → logprob: -12.256746292114258
    6. 'ées' → logprob: -12.756746292114258
    7. 'ée' → logprob: -13.006746292114258
    8. 'ès' → logprob: -13.256746292114258
    9. 'ÉS' → logprob: -13.506746292114258
    10. 'er' → logprob: -14.631746292114258

Token 39: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3207129240036011
    2. 'N' → logprob: -1.320712924003601
    3. '#' → logprob: -5.945713043212891
    4. ' 
' → logprob: -6.570713043212891
    5. '
' → logprob: -7.320713043212891
    6. '.' → logprob: -7.445713043212891
    7. '```' → logprob: -7.695713043212891
    8. '  
' → logprob: -8.19571304321289
    9. '\' → logprob: -8.32071304321289
    10. '\n' → logprob: -8.32071304321289

Token 40: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.33773186802864075
    2. 'la' → logprob: -1.8377318382263184
    3. 'le' → logprob: -2.8377318382263184
    4. ' le' → logprob: -2.8377318382263184
    5. 'l' → logprob: -5.462731838226318
    6. ' l' → logprob: -6.712731838226318
    7. ' une' → logprob: -7.087731838226318
    8. ' input' → logprob: -7.337731838226318
    9. 'une' → logprob: -7.462731838226318
    10. ' ' → logprob: -7.587731838226318

Token 41: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.3001756966114044
    2. ' programme' → logprob: -1.425175666809082
    3. 'program' → logprob: -5.175175666809082
    4. ' code' → logprob: -5.175175666809082
    5. 'code' → logprob: -5.550175666809082
    6. '#' → logprob: -7.550175666809082
    7. ' program' → logprob: -7.800175666809082
    8. 'pro' → logprob: -7.800175666809082
    9. 'texte' → logprob: -8.175175666809082
    10. '```' → logprob: -8.425175666809082

Token 42: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12755423784255981
    2. 'n' → logprob: -2.127554178237915
    3. '#' → logprob: -7.877554416656494
    4. '\' → logprob: -9.752553939819336
    5. '\n' → logprob: -9.752553939819336
    6. '```' → logprob: -9.877553939819336
    7. 'i' → logprob: -11.127553939819336
    8. '' → logprob: -11.377553939819336
    9. '
' → logprob: -11.502553939819336
    10. ' 
' → logprob: -12.002553939819336

Token 43: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003631550120189786
    2. 'n' → logprob: -5.628631591796875
    3. '```' → logprob: -11.128631591796875
    4. '#' → logprob: -11.378631591796875
    5. ' N' → logprob: -13.878631591796875
    6. '\' → logprob: -14.003631591796875
    7. 'x' → logprob: -14.378631591796875
    8. '\n' → logprob: -14.378631591796875
    9. '`' → logprob: -14.878631591796875
    10. 'i' → logprob: -15.253631591796875

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014172914437949657
    2. '=' → logprob: -4.2641730308532715
    3. '=int' → logprob: -12.264172554016113
    4. ' ' → logprob: -12.639172554016113
    5. ',' → logprob: -14.764172554016113
    6. '=input' → logprob: -14.764172554016113
    7. 'space' → logprob: -15.514172554016113
    8. ' ' → logprob: -15.889172554016113
    9. 's' → logprob: -16.01417350769043
    10. '.' → logprob: -16.38917350769043

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0007395883440040052
    2. 'int' → logprob: -7.250739574432373
    3. ' ' → logprob: -10.875740051269531
    4. ' input' → logprob: -11.625740051269531
    5. '=int' → logprob: -14.125740051269531
    6. ' ' → logprob: -14.625740051269531
    7. ' in' → logprob: -15.625740051269531
    8. '	int' → logprob: -16.50074005126953
    9. '  ' → logprob: -16.75074005126953
    10. 'input' → logprob: -16.75074005126953

Token 46: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760008096694946
    2. '(input' → logprob: -0.8260008096694946
    3. 'input' → logprob: -10.451001167297363
    4. '('' → logprob: -11.326001167297363
    5. '()' → logprob: -12.201001167297363
    6. ' (' → logprob: -12.451001167297363
    7. '(
' → logprob: -12.576001167297363
    8. '(int' → logprob: -12.701001167297363
    9. '(user' → logprob: -13.076001167297363
    10. '(

' → logprob: -15.201001167297363

Token 47: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07193946093320847
    2. '("("' → logprob: -3.196939468383789
    3. '('' → logprob: -3.821939468383789
    4. '()' → logprob: -5.821939468383789
    5. '("' → logprob: -6.071939468383789
    6. '("")' → logprob: -7.196939468383789
    7. '(""))' → logprob: -8.071939468383789
    8. '(">' → logprob: -9.196939468383789
    9. '(
' → logprob: -10.071939468383789
    10. '("(' → logprob: -10.196939468383789

Token 48: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7276187539100647
    2. ' ' → logprob: -1.22761869430542
    3. '#' → logprob: -2.10261869430542
    4. '<|end|>' → logprob: -3.97761869430542
    5. '```' → logprob: -3.97761869430542
    6. '(' → logprob: -4.60261869430542
    7. '()' → logprob: -4.72761869430542
    8. '\' → logprob: -5.22761869430542
    9. ' )' → logprob: -5.22761869430542
    10. '.' → logprob: -5.35261869430542

Token 49: ' Dem' (ID: 9458)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5488091111183167
    2. 'for' → logprob: -1.1738090515136719
    3. 'car' → logprob: -3.298809051513672
    4. ' caract' → logprob: -4.673809051513672
    5. ' result' → logprob: -4.923809051513672
    6. 'texte' → logprob: -5.048809051513672
    7. 'chaine' → logprob: -5.173809051513672
    8. 'result' → logprob: -5.423809051513672
    9. ' text' → logprob: -5.548809051513672
    10. 'text' → logprob: -5.548809051513672

Token 50: 'ande' (ID: 4102)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2282301187515259
    2. '#' → logprob: -2.3532299995422363
    3. 'andez' → logprob: -2.3532299995422363
    4. '.' → logprob: -2.6032299995422363
    5. 'a' → logprob: -2.7282299995422363
    6. 'ande' → logprob: -2.9782299995422363
    7. 'e' → logprob: -2.9782299995422363
    8. ' ' → logprob: -3.1032299995422363
    9. 'if' → logprob: -3.1032299995422363
    10. '   ' → logprob: -3.6032299995422363

Token 51: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04833387956023216
    2. '("' → logprob: -3.1733338832855225
    3. '()' → logprob: -5.423333644866943
    4. '('' → logprob: -7.173333644866943
    5. ' (' → logprob: -10.423334121704102
    6. '("")' → logprob: -10.548334121704102
    7. '(
' → logprob: -10.923334121704102
    8. '("""' → logprob: -11.048334121704102
    9. ')' → logprob: -11.173334121704102
    10. '(">' → logprob: -11.798334121704102

Token 52: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3770955204963684
    2. 'l' → logprob: -1.2520954608917236
    3. ' ' → logprob: -5.127095699310303
    4. ' une' → logprob: -5.627095699310303
    5. ' ' → logprob: -5.877095699310303
    6. ' la' → logprob: -6.002095699310303
    7. 'user' → logprob: -6.127095699310303
    8. 'une' → logprob: -6.252095699310303
    9. ' user' → logprob: -6.627095699310303
    10. 'input' → logprob: -6.627095699310303

Token 53: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.002457460854202509
    2. '’utilisateur' → logprob: -7.252457618713379
    3. 'util' → logprob: -7.377457618713379
    4. ' utilisateur' → logprob: -8.002457618713379
    5. 'user' → logprob: -8.502457618713379
    6. ''' → logprob: -8.877457618713379
    7. ''user' → logprob: -9.002457618713379
    8. ''util' → logprob: -9.002457618713379
    9. 'u' → logprob: -9.627457618713379
    10. 'a' → logprob: -9.752457618713379

Token 54: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34870725870132446
    2. '()' → logprob: -1.5987071990966797
    3. '("' → logprob: -2.4737071990966797
    4. '('' → logprob: -5.84870719909668
    5. ')' → logprob: -6.72370719909668
    6. '("")' → logprob: -7.22370719909668
    7. ' ' → logprob: -7.34870719909668
    8. ' (' → logprob: -7.34870719909668
    9. '("""' → logprob: -7.72370719909668
    10. ' )' → logprob: -8.97370719909668

Token 55: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08925918489694595
    2. ''entrée' → logprob: -2.839259147644043
    3. '_' → logprob: -5.339259147644043
    4. 'e' → logprob: -5.589259147644043
    5. ' ' → logprob: -5.964259147644043
    6. '''' → logprob: -6.339259147644043
    7. 'a' → logprob: -6.464259147644043
    8. ''ent' → logprob: -6.464259147644043
    9. ''utilisateur' → logprob: -6.714259147644043
    10. ' '' → logprob: -7.339259147644043

Token 56: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.0074846455827355385
    2. 'entrée' → logprob: -5.882484436035156
    3. ''' → logprob: -6.632484436035156
    4. ' entrer' → logprob: -6.882484436035156
    5. 'enter' → logprob: -7.132484436035156
    6. ' entr' → logprob: -8.257484436035156
    7. 'entrant' → logprob: -8.382484436035156
    8. ''entrée' → logprob: -8.507484436035156
    9. 'ent' → logprob: -9.007484436035156
    10. 'Entr' → logprob: -9.257484436035156

Token 57: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.018522609025239944
    2. 'ter' → logprob: -4.1435227394104
    3. 't' → logprob: -6.3935227394104
    4. 'e' → logprob: -7.8935227394104
    5. 'te' → logprob: -9.268522262573242
    6. 'trer' → logprob: -9.518522262573242
    7. 'ant' → logprob: -9.893522262573242
    8. 'a' → logprob: -10.143522262573242
    9. 'ent' → logprob: -10.393522262573242
    10. 'erp' → logprob: -11.143522262573242

Token 58: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7475728988647461
    2. '(' → logprob: -0.8725728988647461
    3. '("' → logprob: -2.872572898864746
    4. ' un' → logprob: -3.497572898864746
    5. ' ' → logprob: -5.372572898864746
    6. '('' → logprob: -5.747572898864746
    7. ' ()' → logprob: -6.122572898864746
    8. ' (' → logprob: -6.247572898864746
    9. '("")' → logprob: -6.247572898864746
    10. ' une' → logprob: -6.372572898864746

Token 59: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7559261918067932
    2. ' chaîne' → logprob: -0.7559261918067932
    3. ' chaine' → logprob: -3.6309261322021484
    4. ' phrase' → logprob: -4.505926132202148
    5. 'phrase' → logprob: -5.005926132202148
    6. 'cha' → logprob: -5.505926132202148
    7. 'string' → logprob: -5.755926132202148
    8. ' ' → logprob: -6.130926132202148
    9. 's' → logprob: -6.255926132202148
    10. ' string' → logprob: -6.380926132202148

Token 60: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.027619315311312675
    2. 's' → logprob: -4.402619361877441
    3. ' de' → logprob: -4.777619361877441
    4. '()' → logprob: -5.527619361877441
    5. 'chaine' → logprob: -6.652619361877441
    6. 'car' → logprob: -7.402619361877441
    7. '_' → logprob: -8.527619361877441
    8. ')' → logprob: -9.402619361877441
    9. ' =' → logprob: -9.402619361877441
    10. '_de' → logprob: -9.652619361877441

Token 61: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.16158358752727509
    2. 'car' → logprob: -1.9115835428237915
    3. ' caracteres' → logprob: -7.286583423614502
    4. ' caract' → logprob: -8.53658390045166
    5. ' caractère' → logprob: -8.91158390045166
    6. 's' → logprob: -9.78658390045166
    7. '#' → logprob: -9.91158390045166
    8. ' car' → logprob: -10.03658390045166
    9. 'chars' → logprob: -10.03658390045166
    10. 'texte' → logprob: -10.41158390045166

Token 62: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.485446035861969
    2. 'chaine' → logprob: -0.985446035861969
    3. 'texte' → logprob: -5.735445976257324
    4. 'text' → logprob: -5.735445976257324
    5. 'txt' → logprob: -6.610445976257324
    6. 'string' → logprob: -7.110445976257324
    7. 'str' → logprob: -7.610445976257324
    8. 'S' → logprob: -7.860445976257324
    9. 'car' → logprob: -8.110445976257324
    10. 'ch' → logprob: -8.360445976257324

Token 63: ' puis' (ID: 18766)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8181148171424866
    2. ' puis' → logprob: -1.0681147575378418
    3. ' que' → logprob: -2.318114757537842
    4. ' s' → logprob: -3.443114757537842
    5. 'chaine' → logprob: -3.943114757537842
    6. ' qui' → logprob: -4.318114757537842
    7. 'ens' → logprob: -4.443114757537842
    8. 'sans' → logprob: -5.068114757537842
    9. ' la' → logprob: -5.443114757537842
    10. 'car' → logprob: -5.693114757537842

Token 64: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7732629179954529
    2. 's' → logprob: -1.5232629776000977
    3. 'chaine' → logprob: -2.0232629776000977
    4. ' ' → logprob: -3.2732629776000977
    5. ' string' → logprob: -3.5232629776000977
    6. ' text' → logprob: -3.7732629776000977
    7. ' chaine' → logprob: -4.273262977600098
    8. ' str' → logprob: -4.398262977600098
    9. 'texte' → logprob: -4.898262977600098
    10. 'string' → logprob: -5.023262977600098

Token 65: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.2463953495025635
    2. 's' → logprob: -1.3713953495025635
    3. 'chaine' → logprob: -1.4963953495025635
    4. 'string' → logprob: -2.1213953495025635
    5. ' string' → logprob: -2.4963953495025635
    6. ' s' → logprob: -5.121395111083984
    7. 'rstrip' → logprob: -5.246395111083984
    8. 'chars' → logprob: -5.871395111083984
    9. '.strip' → logprob: -6.496395111083984
    10. ' strip' → logprob: -6.496395111083984

Token 66: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0010064927628263831
    2. 't' → logprob: -7.876006603240967
    3. 'ie' → logprob: -8.001006126403809
    4. 'i' → logprob: -8.626006126403809
    5. 'input' → logprob: -10.376006126403809
    6. 'e' → logprob: -10.501006126403809
    7. 'et' → logprob: -11.751006126403809
    8. 'iert' → logprob: -12.001006126403809
    9. 'ît' → logprob: -12.251006126403809
    10. 'eit' → logprob: -12.376006126403809

Token 67: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0643941164016724
    2. ' en' → logprob: -2.064393997192383
    3. 'str' → logprob: -2.189393997192383
    4. '()' → logprob: -2.564393997192383
    5. '=input' → logprob: -2.564393997192383
    6. ' =' → logprob: -2.689393997192383
    7. 'input' → logprob: -3.189393997192383
    8. ')' → logprob: -3.689393997192383
    9. ' ' → logprob: -3.814393997192383
    10. '(input' → logprob: -3.939393997192383

Token 68: ' une' (ID: 2463)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5411294102668762
    2. ' string' → logprob: -1.9161293506622314
    3. ' str' → logprob: -2.5411293506622314
    4. ' une' → logprob: -2.6661293506622314
    5. 'chaine' → logprob: -3.0411293506622314
    6. ' chaîne' → logprob: -3.7911293506622314
    7. 'string' → logprob: -4.1661295890808105
    8. 'une' → logprob: -4.6661295890808105
    9. 's' → logprob: -4.9161295890808105
    10. ' chaine' → logprob: -5.1661295890808105

Token 69: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5221492052078247
    2. ' chaîne' → logprob: -1.0221492052078247
    3. 'chaine' → logprob: -4.147149085998535
    4. 'liste' → logprob: -4.272149085998535
    5. ' chaine' → logprob: -4.647149085998535
    6. ' string' → logprob: -6.147149085998535
    7. 'str' → logprob: -6.522149085998535
    8. 's' → logprob: -6.897149085998535
    9. 'list' → logprob: -7.022149085998535
    10. ' list' → logprob: -7.397149085998535

Token 70: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6811487674713135
    2. 's' → logprob: -1.1811487674713135
    3. '()' → logprob: -1.8061487674713135
    4. 'car' → logprob: -5.681148529052734
    5. '(input' → logprob: -5.931148529052734
    6. '(s' → logprob: -6.431148529052734
    7. '(list' → logprob: -6.556148529052734
    8. '('' → logprob: -6.681148529052734
    9. 'list' → logprob: -6.681148529052734
    10. 'str' → logprob: -6.931148529052734

Token 71: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.4265422523021698
    2. 'car' → logprob: -1.1765422821044922
    3. ' list' → logprob: -4.551542282104492
    4. ' caracteres' → logprob: -4.926542282104492
    5. 'list' → logprob: -5.051542282104492
    6. 'str' → logprob: -5.176542282104492
    7. ' str' → logprob: -6.551542282104492
    8. ' liste' → logprob: -6.676542282104492
    9. 'chars' → logprob: -6.801542282104492
    10. 's' → logprob: -7.301542282104492

Token 72: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2306067794561386
    2. 'car' → logprob: -2.4806067943573
    3. 'chaine' → logprob: -2.8556067943573
    4. 'chars' → logprob: -3.7306067943573
    5. 'S' → logprob: -4.730606555938721
    6. ' s' → logprob: -5.230606555938721
    7. 'txt' → logprob: -5.355606555938721
    8. 'string' → logprob: -5.605606555938721
    9. 'text' → logprob: -5.855606555938721
    10. 'char' → logprob: -6.105606555938721

Token 73: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.71089768409729
    2. 'chaine' → logprob: -1.46089768409729
    3. 'chars' → logprob: -2.21089768409729
    4. 'text' → logprob: -3.33589768409729
    5. 'car' → logprob: -3.58589768409729
    6. 'S' → logprob: -3.71089768409729
    7. 'string' → logprob: -4.085897445678711
    8. 'char' → logprob: -4.585897445678711
    9. 'characters' → logprob: -4.710897445678711
    10. 'txt' → logprob: -4.960897445678711

Token 74: ' Chaque' (ID: 94758)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.3728415369987488
    2. 's' → logprob: -2.1228415966033936
    3. 'chaine' → logprob: -2.2478415966033936
    4. 'char' → logprob: -3.8728415966033936
    5. 'string' → logprob: -4.1228413581848145
    6. ' chars' → logprob: -4.3728413581848145
    7. 'car' → logprob: -4.4978413581848145
    8. 'characters' → logprob: -4.7478413581848145
    9. 'text' → logprob: -4.8728413581848145
    10. 'ch' → logprob: -5.8728413581848145

Token 75: ' élément' (ID: 99627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5909973978996277
    2. 'car' → logprob: -1.0909974575042725
    3. '_car' → logprob: -3.3409974575042725
    4. ' caract' → logprob: -3.4659974575042725
    5. ' caractère' → logprob: -4.465997219085693
    6. 'c' → logprob: -4.965997219085693
    7. ' c' → logprob: -5.340997219085693
    8. ' _' → logprob: -5.465997219085693
    9. '_c' → logprob: -5.465997219085693
    10. ' ' → logprob: -5.465997219085693

Token 76: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04229736328125
    2. 'de' → logprob: -3.41729736328125
    3. ' of' → logprob: -5.91729736328125
    4. 's' → logprob: -6.66729736328125
    5. ' est' → logprob: -6.79229736328125
    6. ' =' → logprob: -7.04229736328125
    7. ' ' → logprob: -7.41729736328125
    8. ' s' → logprob: -8.41729736328125
    9. ' dans' → logprob: -8.54229736328125
    10. 'c' → logprob: -8.66729736328125

Token 77: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.13720612227916718
    2. 'la' → logprob: -2.5122060775756836
    3. 'chaine' → logprob: -3.8872060775756836
    4. ' cette' → logprob: -4.262206077575684
    5. ' liste' → logprob: -6.012206077575684
    6. ' chaîne' → logprob: -6.262206077575684
    7. 'car' → logprob: -6.387206077575684
    8. 's' → logprob: -6.762206077575684
    9. 'liste' → logprob: -7.012206077575684
    10. ' chaine' → logprob: -7.387206077575684

Token 78: ' liste' (ID: 31719)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.771831214427948
    2. 'chaine' → logprob: -1.0218312740325928
    3. ' liste' → logprob: -2.3968312740325928
    4. 'liste' → logprob: -3.1468312740325928
    5. 'cha' → logprob: -3.8968312740325928
    6. ' chaine' → logprob: -4.021831035614014
    7. 'string' → logprob: -6.271831035614014
    8. 'list' → logprob: -6.771831035614014
    9. ' string' → logprob: -6.771831035614014
    10. 'chain' → logprob: -8.021831512451172

Token 79: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4035719037055969
    2. 's' → logprob: -1.6535718441009521
    3. ' ' → logprob: -2.528571844100952
    4. ' est' → logprob: -4.403572082519531
    5. '=' → logprob: -4.528572082519531
    6. ' s' → logprob: -5.153572082519531
    7. ' correspond' → logprob: -5.278572082519531
    8. '[]' → logprob: -5.653572082519531
    9. 'c' → logprob: -6.028572082519531
    10. ' de' → logprob: -6.153572082519531

Token 80: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06010357663035393
    2. '=' → logprob: -2.93510365486145
    3. '_' → logprob: -6.185103416442871
    4. 's' → logprob: -6.435103416442871
    5. '.' → logprob: -8.185103416442871
    6. ' ' → logprob: -8.185103416442871
    7. ' ' → logprob: -8.310103416442871
    8. '[]' → logprob: -8.435103416442871
    9. 'S' → logprob: -8.685103416442871
    10. '[' → logprob: -9.560103416442871

Token 81: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1469825804233551
    2. '<|end|>' → logprob: -3.2719826698303223
    3. ' ' → logprob: -4.146982669830322
    4. 's' → logprob: -4.146982669830322
    5. 'à' → logprob: -4.271982669830322
    6. 'a' → logprob: -4.521982669830322
    7. ' a' → logprob: -4.521982669830322
    8. ' au' → logprob: -4.646982669830322
    9. '  ' → logprob: -5.646982669830322
    10. 'au' → logprob: -5.896982669830322

Token 82: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23082588613033295
    2. ' une' → logprob: -2.105825901031494
    3. 'un' → logprob: -3.980825901031494
    4. ' ' → logprob: -4.480825901031494
    5. 'une' → logprob: -4.605825901031494
    6. ' input' → logprob: -4.855825901031494
    7. ' l' → logprob: -4.980825901031494
    8. 's' → logprob: -4.980825901031494
    9. 'l' → logprob: -5.230825901031494
    10. ' la' → logprob: -5.605825901031494

Token 83: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.28871452808380127
    2. 'car' → logprob: -1.7887145280838013
    3. ' espace' → logprob: -4.038714408874512
    4. 's' → logprob: -4.413714408874512
    5. 'élé' → logprob: -4.538714408874512
    6. ' caract' → logprob: -4.538714408874512
    7. 'e' → logprob: -4.788714408874512
    8. 'c' → logprob: -5.038714408874512
    9. ' car' → logprob: -5.163714408874512
    10. ' caractères' → logprob: -5.913714408874512

Token 84: ' individuel' (ID: 178936)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8853845596313477
    2. 's' → logprob: -1.0103845596313477
    3. '_' → logprob: -2.2603845596313477
    4. ' de' → logprob: -2.8853845596313477
    5. ' =' → logprob: -4.510384559631348
    6. ' d' → logprob: -5.260384559631348
    7. 'S' → logprob: -5.385384559631348
    8. 'space' → logprob: -5.510384559631348
    9. ' '' → logprob: -5.510384559631348
    10. 'u' → logprob: -5.760384559631348

Token 85: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6359436511993408
    2. 's' → logprob: -0.8859436511993408
    3. ' S' → logprob: -3.385943651199341
    4. ' de' → logprob: -4.385943412780762
    5. ',' → logprob: -5.885943412780762
    6. 'de' → logprob: -6.635943412780762
    7. '_' → logprob: -6.760943412780762
    8. ' ' → logprob: -7.010943412780762
    9. ')' → logprob: -7.010943412780762
    10. ' =' → logprob: -7.260943412780762

Token 86: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7006235718727112
    2. ' l' → logprob: -1.0756235122680664
    3. ' input' → logprob: -2.7006235122680664
    4. ' ' → logprob: -3.3256235122680664
    5. 'l' → logprob: -3.5756235122680664
    6. 'la' → logprob: -4.450623512268066
    7. 's' → logprob: -4.575623512268066
    8. 'input' → logprob: -5.575623512268066
    9. ' ' → logprob: -6.450623512268066
    10. 'a' → logprob: -6.700623512268066

Token 87: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.18842275440692902
    2. 'chaine' → logprob: -2.063422679901123
    3. 'cha' → logprob: -3.813422679901123
    4. ' chaine' → logprob: -4.563422679901123
    5. 's' → logprob: -5.313422679901123
    6. ' input' → logprob: -6.188422679901123
    7. 'input' → logprob: -6.688422679901123
    8. 'string' → logprob: -6.938422679901123
    9. ' string' → logprob: -7.063422679901123
    10. 'entrée' → logprob: -7.313422679901123

Token 88: ' entrée' (ID: 95590)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.028073204681277275
    2. ' =' → logprob: -3.903073310852051
    3. 's' → logprob: -5.153073310852051
    4. ' S' → logprob: -6.903073310852051
    5. '=' → logprob: -7.403073310852051
    6. '=S' → logprob: -10.77807331085205
    7. '_' → logprob: -11.02807331085205
    8. '_s' → logprob: -11.02807331085205
    9. '_S' → logprob: -11.90307331085205
    10. '=input' → logprob: -12.15307331085205

Token 89: '.
' (ID: 558)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036767981946468353
    2. 's' → logprob: -5.628676891326904
    3. ',' → logprob: -10.503676414489746
    4. ' S' → logprob: -10.878676414489746
    5. ' =' → logprob: -11.753676414489746
    6. '.' → logprob: -12.378676414489746
    7. '=' → logprob: -12.753676414489746
    8. ')' → logprob: -12.878676414489746
    9. '_' → logprob: -13.253676414489746
    10. '[' → logprob: -13.378676414489746

Token 90: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.451116051815916e-05
    2. ' S' → logprob: -10.750024795532227
    3. 's' → logprob: -12.750024795532227
    4. '```' → logprob: -15.750024795532227
    5. '`' → logprob: -18.000024795532227
    6. 'string' → logprob: -19.750024795532227
    7. 'chaine' → logprob: -20.000024795532227
    8. '#' → logprob: -20.125024795532227
    9. '﻿' → logprob: -20.750024795532227
    10. ' ' → logprob: -20.750024795532227

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284902691841125
    2. '=' → logprob: -2.237848997116089
    3. 's' → logprob: -11.362849235534668
    4. '[' → logprob: -11.862849235534668
    5. '.' → logprob: -12.987849235534668
    6. '_' → logprob: -13.237849235534668
    7. '=[]' → logprob: -13.987849235534668
    8. '[:]' → logprob: -14.237849235534668
    9. ' ' → logprob: -14.612849235534668
    10. ',' → logprob: -14.737849235534668

Token 92: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42879796028137207
    2. ' list' → logprob: -1.053797960281372
    3. 'input' → logprob: -9.678797721862793
    4. ' input' → logprob: -10.928797721862793
    5. '[list' → logprob: -11.678797721862793
    6. '	list' → logprob: -13.553797721862793
    7. '[input' → logprob: -13.553797721862793
    8. '(list' → logprob: -13.928797721862793
    9. '=list' → logprob: -14.053797721862793
    10. ' ' → logprob: -14.178797721862793

Token 93: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10024744272232056
    2. '(' → logprob: -2.350247383117676
    3. '(
' → logprob: -11.350247383117676
    4. 'input' → logprob: -11.475247383117676
    5. '(str' → logprob: -11.725247383117676
    6. '()' → logprob: -12.100247383117676
    7. '(

' → logprob: -13.350247383117676
    8. ' (' → logprob: -13.725247383117676
    9. '('' → logprob: -14.475247383117676
    10. '=input' → logprob: -15.225247383117676

Token 94: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005268384236842394
    2. '()' → logprob: -5.255268573760986
    3. '()))' → logprob: -10.630268096923828
    4. ')' → logprob: -12.505268096923828
    5. ' ())' → logprob: -12.505268096923828
    6. '();)' → logprob: -13.630268096923828
    7. '(' → logprob: -14.505268096923828
    8. '().' → logprob: -15.380268096923828
    9. '())
' → logprob: -15.380268096923828
    10. '())

' → logprob: -15.630268096923828

Token 95: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11622941493988037
    2. '#' → logprob: -2.49122953414917
    3. ' for' → logprob: -4.61622953414917
    4. '
' → logprob: -5.11622953414917
    5. 'i' → logprob: -5.24122953414917
    6. '[' → logprob: -7.11622953414917
    7. '.' → logprob: -7.11622953414917
    8. 'if' → logprob: -7.11622953414917
    9. ' 
' → logprob: -7.24122953414917
    10. 'n' → logprob: -7.36622953414917

Token 96: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2399209588766098
    2. 'i' → logprob: -2.3649208545684814
    3. 'result' → logprob: -2.9899208545684814
    4. 'f' → logprob: -3.4899208545684814
    5. '#' → logprob: -4.7399210929870605
    6. 'r' → logprob: -4.7399210929870605
    7. 'count' → logprob: -5.1149210929870605
    8. 'c' → logprob: -5.4899210929870605
    9. 'res' → logprob: -6.1149210929870605
    10. 'if' → logprob: -6.3649210929870605

Token 97: ' trois' (ID: 25564)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7295435070991516
    2. ' une' → logprob: -1.6045434474945068
    3. ' i' → logprob: -2.604543447494507
    4. ' result' → logprob: -2.979543447494507
    5. ' a' → logprob: -3.104543447494507
    6. 'i' → logprob: -3.604543447494507
    7. 'result' → logprob: -3.979543447494507
    8. 'a' → logprob: -4.104543685913086
    9. 'un' → logprob: -4.229543685913086
    10. 'une' → logprob: -4.229543685913086

Token 98: ' listes' (ID: 179198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8636006116867065
    2. '_' → logprob: -0.9886006116867065
    3. 'i' → logprob: -3.363600730895996
    4. ' espaces' → logprob: -3.363600730895996
    5. ' compteur' → logprob: -4.113600730895996
    6. 'counts' → logprob: -4.113600730895996
    7. 'spaces' → logprob: -4.363600730895996
    8. ' count' → logprob: -4.863600730895996
    9. 'comp' → logprob: -4.988600730895996
    10. ' counts' → logprob: -4.988600730895996

Token 99: ' v' (ID: 323)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.224664568901062
    2. 'de' → logprob: -2.0996646881103516
    3. ' de' → logprob: -2.8496646881103516
    4. '[' → logprob: -2.9746646881103516
    5. '[]' → logprob: -3.0996646881103516
    6. 'd' → logprob: -3.0996646881103516
    7. ' d' → logprob: -3.0996646881103516
    8. 'counts' → logprob: -3.2246646881103516
    9. 'v' → logprob: -3.3496646881103516
    10. 's' → logprob: -3.7246646881103516

Token 100: 'ides' (ID: 4105)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.756114661693573
    2. 'ale' → logprob: -1.5061147212982178
    3. 'oy' → logprob: -2.3811147212982178
    4. 'oid' → logprob: -2.8811147212982178
    5. 'id' → logprob: -3.1311147212982178
    6. 'ides' → logprob: -3.2561147212982178
    7. 'ol' → logprob: -3.5061147212982178
    8. 'ide' → logprob: -3.8811147212982178
    9. '```' → logprob: -5.256114482879639
    10. 'alid' → logprob: -5.631114482879639

Token 101: ' :
' (ID: 10039)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4671427607536316
    2. ':' → logprob: -2.0921428203582764
    3. ',' → logprob: -2.7171428203582764
    4. 'uppercase' → logprob: -3.2171428203582764
    5. 'a' → logprob: -3.9671428203582764
    6. 'A' → logprob: -4.717142581939697
    7. 'de' → logprob: -4.967142581939697
    8. 'count' → logprob: -4.967142581939697
    9. 'V' → logprob: -5.217142581939697
    10. '_v' → logprob: -5.342142581939697

Token 102: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4245872497558594
    2. 'A' → logprob: -1.6745872497558594
    3. 'V' → logprob: -1.9245872497558594
    4. 'count' → logprob: -3.0495872497558594
    5. 'L' → logprob: -3.6745872497558594
    6. 'positions' → logprob: -3.7995872497558594
    7. 'freq' → logprob: -3.7995872497558594
    8. 'a' → logprob: -4.049587249755859
    9. 'res' → logprob: -4.174587249755859
    10. 'U' → logprob: -4.299587249755859

Token 103: ' R' (ID: 460)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1201529502868652
    2. 'A' → logprob: -1.8701529502868652
    3. 'V' → logprob: -2.6201529502868652
    4. ' vowels' → logprob: -2.8701529502868652
    5. 'positions' → logprob: -3.3701529502868652
    6. 'uppercase' → logprob: -3.6201529502868652
    7. 'a' → logprob: -3.7451529502868652
    8. 'count' → logprob: -3.8701529502868652
    9. 'maj' → logprob: -3.8701529502868652
    10. 'L' → logprob: -3.9951529502868652

Token 104: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0950416848063469
    2. ',' → logprob: -2.8450417518615723
    3. 'ed' → logprob: -4.970041751861572
    4. 'A' → logprob: -5.720041751861572
    5. 'R' → logprob: -5.970041751861572
    6. '=' → logprob: -6.220041751861572
    7. '1' → logprob: -6.220041751861572
    8. ' ,' → logprob: -6.845041751861572
    9. 'a' → logprob: -6.970041751861572
    10. 'V' → logprob: -7.095041751861572

Token 105: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.155440092086792
    2. ' =' → logprob: -2.155440092086792
    3. '=[]' → logprob: -4.280440330505371
    4. 'e' → logprob: -5.405440330505371
    5. 'é' → logprob: -5.405440330505371
    6. 'ed' → logprob: -6.780440330505371
    7. 'és' → logprob: -7.280440330505371
    8. 'es' → logprob: -7.530440330505371
    9. '=[]
' → logprob: -7.780440330505371
    10. '=[]
' → logprob: -7.780440330505371

Token 106: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7410162091255188
    2. 'les' → logprob: -0.9910162091255188
    3. '[]' → logprob: -1.991016149520874
    4. 'des' → logprob: -5.366016387939453
    5. ' des' → logprob: -5.741016387939453
    6. ' []' → logprob: -5.741016387939453
    7. '[' → logprob: -6.366016387939453
    8. ' la' → logprob: -7.366016387939453
    9. 'le' → logprob: -7.616016387939453
    10. ' ' → logprob: -8.116016387939453

Token 107: ' indices' (ID: 30378)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.8599893450737
    2. ' résultats' → logprob: -1.4849894046783447
    3. 'car' → logprob: -1.9849894046783447
    4. 'rés' → logprob: -2.6099894046783447
    5. 'result' → logprob: -2.8599894046783447
    6. ' indices' → logprob: -3.4849894046783447
    7. 'indices' → logprob: -3.8599894046783447
    8. ' caracteres' → logprob: -5.859989166259766
    9. 'res' → logprob: -5.984989166259766
    10. 's' → logprob: -6.109989166259766

Token 108: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5102800726890564
    2. '<|end|>' → logprob: -1.0102801322937012
    3. 'des' → logprob: -3.510280132293701
    4. 's' → logprob: -6.260280132293701
    5. ' ' → logprob: -7.635280132293701
    6. '[]' → logprob: -7.885280132293701
    7. ' i' → logprob: -7.885280132293701
    8. ' de' → logprob: -8.510279655456543
    9. 'de' → logprob: -8.510279655456543
    10. 'indices' → logprob: -8.510279655456543

Token 109: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1291815042495728
    2. 'car' → logprob: -1.6291815042495728
    3. ' espaces' → logprob: -2.754181385040283
    4. ' caractères' → logprob: -2.754181385040283
    5. 'r' → logprob: -3.004181385040283
    6. 'R' → logprob: -3.004181385040283
    7. 'positions' → logprob: -3.629181385040283
    8. 'indices' → logprob: -4.004181385040283
    9. '0' → logprob: -4.004181385040283
    10. ''r' → logprob: -4.379181385040283

Token 110: ' '' (ID: 461)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9715420007705688
    2. 's' → logprob: -1.5965420007705688
    3. 'des' → logprob: -2.8465418815612793
    4. ' espaces' → logprob: -2.8465418815612793
    5. 'de' → logprob: -3.2215418815612793
    6. ' ' → logprob: -3.4715418815612793
    7. ' de' → logprob: -3.8465418815612793
    8. ' dans' → logprob: -3.9715418815612793
    9. 'R' → logprob: -4.221541881561279
    10. ' qui' → logprob: -4.221541881561279

Token 111: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.177607536315918
    2. 'R' → logprob: -1.552607536315918
    3. 'A' → logprob: -1.802607536315918
    4. 'a' → logprob: -2.802607536315918
    5. 'r' → logprob: -2.927607536315918
    6. 'E' → logprob: -4.052607536315918
    7. 'C' → logprob: -4.302607536315918
    8. 'P' → logprob: -4.427607536315918
    9. 'B' → logprob: -4.552607536315918
    10. '0' → logprob: -4.552607536315918

Token 112: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013421354815363884
    2. '',' → logprob: -7.126342296600342
    3. 'e' → logprob: -8.626341819763184
    4. 'R' → logprob: -9.376341819763184
    5. 'a' → logprob: -10.626341819763184
    6. 'B' → logprob: -10.876341819763184
    7. '#' → logprob: -10.876341819763184
    8. '"' → logprob: -11.376341819763184
    9. ' '' → logprob: -11.501341819763184
    10. ''s' → logprob: -11.501341819763184

Token 113: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24711968004703522
    2. 'R' → logprob: -2.497119665145874
    3. 'r' → logprob: -3.372119665145874
    4. 's' → logprob: -3.872119665145874
    5. '[]' → logprob: -4.122119903564453
    6. '[' → logprob: -4.122119903564453
    7. 'indices' → logprob: -4.497119903564453
    8. '<|end|>' → logprob: -4.872119903564453
    9. '#' → logprob: -4.997119903564453
    10. '_r' → logprob: -5.622119903564453

Token 114: 'prob' (ID: 29823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4342837929725647
    2. ''' → logprob: -1.93428373336792
    3. 'R' → logprob: -2.05928373336792
    4. '')' → logprob: -3.80928373336792
    5. ' )' → logprob: -4.05928373336792
    6. 'e' → logprob: -4.55928373336792
    7. ' '' → logprob: -5.43428373336792
    8. ' R' → logprob: -5.68428373336792
    9. ',' → logprob: -5.80928373336792
    10. 'S' → logprob: -5.93428373336792

Token 115: 'ablement' (ID: 63986)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.3941934406757355
    2. 'o' → logprob: -1.894193410873413
    3. 'r' → logprob: -2.769193410873413
    4. 'R' → logprob: -2.894193410873413
    5. 'e' → logprob: -4.644193649291992
    6. 'rob' → logprob: -4.644193649291992
    7. 'a' → logprob: -5.144193649291992
    8. 'ro' → logprob: -5.644193649291992
    9. 'b' → logprob: -5.894193649291992
    10. 'em' → logprob: -6.019193649291992

Token 116: ' pour' (ID: 1930)
  Prédit: ' rouges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rouges' → logprob: -0.7086554169654846
    2. 'ed' → logprob: -1.5836553573608398
    3. ' rouge' → logprob: -3.20865535736084
    4. 'rou' → logprob: -3.20865535736084
    5. 'ou' → logprob: -3.45865535736084
    6. ')' → logprob: -3.58365535736084
    7. 'R' → logprob: -4.14615535736084
    8. 'Rou' → logprob: -4.20865535736084
    9. ' red' → logprob: -4.58365535736084
    10. ' Rouge' → logprob: -4.77115535736084

Token 117: ' "' (ID: 392)
  Prédit: ' Rouge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rouge' → logprob: -0.8307932615280151
    2. ' rouge' → logprob: -1.4557932615280151
    3. 'Rou' → logprob: -1.9557932615280151
    4. '"' → logprob: -2.9557933807373047
    5. ' "' → logprob: -3.5807933807373047
    6. 'rou' → logprob: -3.7057933807373047
    7. ' rouges' → logprob: -4.080793380737305
    8. 'Right' → logprob: -4.455793380737305
    9. ' Right' → logprob: -4.830793380737305
    10. 'Red' → logprob: -4.955793380737305

Token 118: 'Red' (ID: 7805)
  Prédit: 'Rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rou' → logprob: -0.5933351516723633
    2. ' rouge' → logprob: -1.9683351516723633
    3. 'rou' → logprob: -2.0933351516723633
    4. ' Rouge' → logprob: -2.7183351516723633
    5. 'Right' → logprob: -3.3433351516723633
    6. 'Red' → logprob: -3.5933351516723633
    7. ' rouges' → logprob: -4.968335151672363
    8. 'R' → logprob: -5.093335151672363
    9. 'right' → logprob: -5.093335151672363
    10. ' Red' → logprob: -5.093335151672363

Token 119: '").
' (ID: 88948)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.032206397503614426
    2. '"' → logprob: -3.9072062969207764
    3. '"),' → logprob: -4.6572065353393555
    4. '")
' → logprob: -7.6572065353393555
    5. '")
' → logprob: -7.7822065353393555
    6. '").' → logprob: -8.157206535339355
    7. '')' → logprob: -8.907206535339355
    8. ')' → logprob: -9.157206535339355
    9. 's' → logprob: -9.157206535339355
    10. 'R' → logprob: -9.532206535339355

Token 120: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5492404103279114
    2. 'B' → logprob: -1.2992403507232666
    3. 'G' → logprob: -2.9242403507232666
    4. 'V' → logprob: -3.4242403507232666
    5. 'O' → logprob: -3.9242403507232666
    6. 'I' → logprob: -4.924240589141846
    7. 'Y' → logprob: -5.424240589141846
    8. 'r' → logprob: -5.424240589141846
    9. 'A' → logprob: -5.549240589141846
    10. 'C' → logprob: -5.674240589141846

Token 121: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.4185784161090851
    2. 'B' → logprob: -1.2935783863067627
    3. 'V' → logprob: -3.0435783863067627
    4. 'L' → logprob: -5.418578624725342
    5. 'O' → logprob: -5.918578624725342
    6. ' G' → logprob: -5.918578624725342
    7. 'Y' → logprob: -6.418578624725342
    8. ' B' → logprob: -6.668578624725342
    9. 'J' → logprob: -6.793578624725342
    10. 'A' → logprob: -6.918578624725342

Token 122: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7744550108909607
    2. 'stock' → logprob: -1.1494550704956055
    3. ' =' → logprob: -2.3994550704956055
    4. '#' → logprob: -3.0244550704956055
    5. '[]' → logprob: -4.3994550704956055
    6. '=' → logprob: -4.6494550704956055
    7. 's' → logprob: -4.6494550704956055
    8. ' ' → logprob: -4.8994550704956055
    9. '<|end|>' → logprob: -4.8994550704956055
    10. ' ' → logprob: -5.1494550704956055

Token 123: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014787507243454456
    2. ' =' → logprob: -4.639787673950195
    3. 'era' → logprob: -6.014787673950195
    4. '=[]' → logprob: -6.389787673950195
    5. 'er' → logprob: -7.514787673950195
    6. 'éra' → logprob: -9.514787673950195
    7. 'erez' → logprob: -11.014787673950195
    8. '=[]
' → logprob: -11.014787673950195
    9. '=[]
' → logprob: -11.389787673950195
    10. 'store' → logprob: -11.514787673950195

Token 124: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1558128148317337
    2. 'les' → logprob: -2.0308127403259277
    3. '[]' → logprob: -4.905812740325928
    4. '<|end|>' → logprob: -5.905812740325928
    5. 's' → logprob: -6.530812740325928
    6. '#' → logprob: -7.905812740325928
    7. ' ' → logprob: -8.280813217163086
    8. 'Les' → logprob: -8.780813217163086
    9. ' ' → logprob: -9.030813217163086
    10. '[' → logprob: -9.155813217163086

Token 125: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.693684458732605
    2. 'indices' → logprob: -0.693684458732605
    3. 'les' → logprob: -9.068684577941895
    4. 'indice' → logprob: -9.443684577941895
    5. 'index' → logprob: -9.693684577941895
    6. 's' → logprob: -10.193684577941895
    7. '_indices' → logprob: -10.193684577941895
    8. '(indices' → logprob: -10.193684577941895
    9. ' les' → logprob: -10.443684577941895
    10. 'ind' → logprob: -10.693684577941895

Token 126: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.128836527466774
    2. 'des' → logprob: -2.1288366317749023
    3. '<|end|>' → logprob: -6.628836631774902
    4. '#' → logprob: -8.128836631774902
    5. ' ' → logprob: -8.753836631774902
    6. '_des' → logprob: -10.003836631774902
    7. 's' → logprob: -10.753836631774902
    8. ' ' → logprob: -11.003836631774902
    9. ' #' → logprob: -11.128836631774902
    10. ' of' → logprob: -12.003836631774902

Token 127: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.22895397245883942
    2. ' caractères' → logprob: -1.6039539575576782
    3. ''' → logprob: -6.478953838348389
    4. ' caracteres' → logprob: -7.103953838348389
    5. ' caract' → logprob: -8.478954315185547
    6. ' '' → logprob: -8.978954315185547
    7. 'c' → logprob: -9.103954315185547
    8. ' car' → logprob: -9.103954315185547
    9. 'chars' → logprob: -9.228954315185547
    10. ' S' → logprob: -10.103954315185547

Token 128: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5027106404304504
    2. ' '' → logprob: -1.8777105808258057
    3. ' des' → logprob: -2.0027105808258057
    4. 'des' → logprob: -2.3777105808258057
    5. ''O' → logprob: -6.002710819244385
    6. ''d' → logprob: -6.377710819244385
    7. ''o' → logprob: -6.752710819244385
    8. ''S' → logprob: -7.127710819244385
    9. ''a' → logprob: -7.252710819244385
    10. ''s' → logprob: -7.502710819244385

Token 129: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.14279286563396454
    2. ''' → logprob: -2.0177929401397705
    3. ' G' → logprob: -9.642792701721191
    4. ' '' → logprob: -10.892792701721191
    5. 'R' → logprob: -11.267792701721191
    6. '"G' → logprob: -12.142792701721191
    7. 'B' → logprob: -13.267792701721191
    8. '	G' → logprob: -13.580292701721191
    9. '"' → logprob: -13.705292701721191
    10. '`' → logprob: -13.767792701721191

Token 130: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.167572021484375
    2. ''' → logprob: -1.917572021484375
    3. '('' → logprob: -5.667572021484375
    4. '")' → logprob: -6.792572021484375
    5. '')
' → logprob: -6.792572021484375
    6. ' ')' → logprob: -7.667572021484375
    7. ')' → logprob: -8.417572021484375
    8. '()' → logprob: -8.417572021484375
    9. '')
' → logprob: -8.542572021484375
    10. ' '' → logprob: -9.292572021484375

Token 131: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2910614013671875
    2. '(' → logprob: -1.4160614013671875
    3. ')' → logprob: -1.6660614013671875
    4. '()' → logprob: -1.7910614013671875
    5. '('' → logprob: -2.9160614013671875
    6. ' (' → logprob: -4.0410614013671875
    7. ''' → logprob: -4.0410614013671875
    8. '(
' → logprob: -4.5410614013671875
    9. '(R' → logprob: -5.5410614013671875
    10. '=' → logprob: -6.0410614013671875

Token 132: 'prob' (ID: 29823)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5401358604431152
    2. ')' → logprob: -1.1651358604431152
    3. ' '' → logprob: -3.4151358604431152
    4. '')' → logprob: -3.6651358604431152
    5. ' )' → logprob: -4.165135860443115
    6. 'prob' → logprob: -4.790135860443115
    7. '#' → logprob: -5.040135860443115
    8. ' ')' → logprob: -5.290135860443115
    9. '"' → logprob: -6.540135860443115
    10. 'R' → logprob: -7.165135860443115

Token 133: 'ablement' (ID: 63986)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.43828144669532776
    2. '#' → logprob: -1.9382814168930054
    3. 'obal' → logprob: -2.313281536102295
    4. ')' → logprob: -2.688281536102295
    5. 'ab' → logprob: -5.563281536102295
    6. '')' → logprob: -5.563281536102295
    7. 'rob' → logprob: -5.688281536102295
    8. 'probably' → logprob: -5.688281536102295
    9. 'our' → logprob: -5.938281536102295
    10. ''' → logprob: -6.188281536102295

Token 134: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.1826235055923462
    2. ' for' → logprob: -2.4326233863830566
    3. 'pour' → logprob: -2.6826233863830566
    4. 'for' → logprob: -4.682623386383057
    5. ')' → logprob: -7.182623386383057
    6. '#' → logprob: -8.307623863220215
    7. '<|end|>' → logprob: -8.432623863220215
    8. ' ' → logprob: -9.432623863220215
    9. ' pentru' → logprob: -10.682623863220215
    10. ' для' → logprob: -10.807623863220215

Token 135: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.18522559106349945
    2. '"' → logprob: -1.8102256059646606
    3. 'Green' → logprob: -5.560225486755371
    4. ' Green' → logprob: -6.685225486755371
    5. ' ' → logprob: -9.060225486755371
    6. ''' → logprob: -9.685225486755371
    7. ' '' → logprob: -10.435225486755371
    8. ')' → logprob: -10.685225486755371
    9. '"G' → logprob: -10.685225486755371
    10. '"I' → logprob: -10.810225486755371

Token 136: 'Green' (ID: 27091)
  Prédit: 'Green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Green' → logprob: -0.03374021127820015
    2. ' Green' → logprob: -3.408740282058716
    3. '"' → logprob: -11.033740043640137
    4. 'G' → logprob: -11.033740043640137
    5. 'reen' → logprob: -11.033740043640137
    6. ' green' → logprob: -11.283740043640137
    7. 'Gre' → logprob: -11.408740043640137
    8. ''' → logprob: -12.033740043640137
    9. 'Blue' → logprob: -12.783740043640137
    10. 'Gr' → logprob: -12.908740043640137

Token 137: '").
' (ID: 88948)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14379297196865082
    2. '").' → logprob: -2.3937928676605225
    3. '")
' → logprob: -3.5187928676605225
    4. ')' → logprob: -4.768793106079102
    5. '#' → logprob: -6.518793106079102
    6. '')' → logprob: -6.518793106079102
    7. '"' → logprob: -8.143793106079102
    8. '").
' → logprob: -8.268793106079102
    9. '")
' → logprob: -8.393793106079102
    10. ').' → logprob: -8.643793106079102

Token 138: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04345790296792984
    2. '#' → logprob: -3.1684579849243164
    3. 'Y' → logprob: -8.418457984924316
    4. 'O' → logprob: -9.543457984924316
    5. 'R' → logprob: -9.543457984924316
    6. 'W' → logprob: -10.168457984924316
    7. 'P' → logprob: -11.418457984924316
    8. 'V' → logprob: -11.918457984924316
    9. '
' → logprob: -12.168457984924316
    10. 'G' → logprob: -12.168457984924316

Token 139: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0011036602081730962
    2. ' B' → logprob: -6.87610387802124
    3. 'Y' → logprob: -10.001103401184082
    4. ' ' → logprob: -11.501103401184082
    5. 'L' → logprob: -13.376103401184082
    6. 'A' → logprob: -13.563603401184082
    7. 'O' → logprob: -13.751103401184082
    8. '  ' → logprob: -14.001103401184082
    9. '	B' → logprob: -14.001103401184082
    10. 'M' → logprob: -14.126103401184082

Token 140: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603413075208664
    2. '=' → logprob: -1.9103412628173828
    3. '=[]' → logprob: -9.285341262817383
    4. 's' → logprob: -11.535341262817383
    5. ' ' → logprob: -12.410341262817383
    6. '[]' → logprob: -13.285341262817383
    7. ' ' → logprob: -13.285341262817383
    8. '=[]
' → logprob: -13.285341262817383
    9. ' stock' → logprob: -13.785341262817383
    10. 'stock' → logprob: -13.785341262817383

Token 141: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35401132702827454
    2. ' =' → logprob: -1.3540112972259521
    3. '=[]' → logprob: -3.354011297225952
    4. '.append' → logprob: -6.104011535644531
    5. '=[]
' → logprob: -7.229011535644531
    6. 'stock' → logprob: -7.479011535644531
    7. '=[]
' → logprob: -8.104011535644531
    8. ']' → logprob: -8.729011535644531
    9. 'ock' → logprob: -9.229011535644531
    10. '_' → logprob: -9.479011535644531

Token 142: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.14876233041286469
    2. ' les' → logprob: -2.1487622261047363
    3. '[]' → logprob: -4.023762226104736
    4. '(' → logprob: -6.523762226104736
    5. '#' → logprob: -7.273762226104736
    6. 'the' → logprob: -7.773762226104736
    7. '([]' → logprob: -8.023762702941895
    8. 'Les' → logprob: -8.148762702941895
    9. 's' → logprob: -8.648762702941895
    10. '[' → logprob: -9.273762702941895

Token 143: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.06204633042216301
    2. ' indices' → logprob: -2.8120462894439697
    3. 'ind' → logprob: -10.18704605102539
    4. 'indice' → logprob: -10.31204605102539
    5. '_indices' → logprob: -12.31204605102539
    6. '(indices' → logprob: -14.06204605102539
    7. 'index' → logprob: -14.31204605102539
    8. 'Indices' → logprob: -14.56204605102539
    9. '[]' → logprob: -14.68704605102539
    10. 'i' → logprob: -14.68704605102539

Token 144: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.43087461590766907
    2. ' des' → logprob: -1.0558745861053467
    3. '[]' → logprob: -7.055874824523926
    4. '_des' → logprob: -7.930874824523926
    5. '('' → logprob: -8.055874824523926
    6. '['' → logprob: -8.305874824523926
    7. '(' → logprob: -9.180874824523926
    8. '[' → logprob: -9.680874824523926
    9. 'Des' → logprob: -9.930874824523926
    10. ' =' → logprob: -10.430874824523926

Token 145: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.06350085884332657
    2. ' caractères' → logprob: -2.8135008811950684
    3. ' caracteres' → logprob: -6.938500881195068
    4. ' caract' → logprob: -8.31350040435791
    5. 'char' → logprob: -8.68850040435791
    6. 'characters' → logprob: -10.31350040435791
    7. '('' → logprob: -10.81350040435791
    8. 'chars' → logprob: -11.18850040435791
    9. 'la' → logprob: -11.31350040435791
    10. 'c' → logprob: -11.56350040435791

Token 146: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1679680496454239
    2. 'des' → logprob: -2.7929680347442627
    3. ' des' → logprob: -3.1679680347442627
    4. '(' → logprob: -3.6679680347442627
    5. '['' → logprob: -4.792968273162842
    6. ''' → logprob: -4.917968273162842
    7. '[' → logprob: -5.917968273162842
    8. ' ' → logprob: -6.292968273162842
    9. ' ('' → logprob: -6.542968273162842
    10. ' '' → logprob: -7.167968273162842

Token 147: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012309263460338116
    2. 'B' → logprob: -4.5123090744018555
    3. 'R' → logprob: -7.0123090744018555
    4. '')' → logprob: -8.262309074401855
    5. '']' → logprob: -11.012309074401855
    6. ''S' → logprob: -11.012309074401855
    7. ''C' → logprob: -11.887309074401855
    8. '"' → logprob: -12.012309074401855
    9. '('' → logprob: -12.012309074401855
    10. ''b' → logprob: -12.262309074401855

Token 148: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014765433967113495
    2. '")' → logprob: -5.13976526260376
    3. ''' → logprob: -5.38976526260376
    4. ')' → logprob: -6.51476526260376
    5. '']' → logprob: -6.76476526260376
    6. ''])' → logprob: -7.38976526260376
    7. '')
' → logprob: -8.389765739440918
    8. '('' → logprob: -8.639765739440918
    9. '')
' → logprob: -8.889765739440918
    10. '')

' → logprob: -9.389765739440918

Token 149: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3745476305484772
    2. '=' → logprob: -1.3745476007461548
    3. '=[]' → logprob: -2.8745477199554443
    4. '()' → logprob: -6.624547481536865
    5. '[]' → logprob: -7.374547481536865
    6. '(' → logprob: -8.624547958374023
    7. 'R' → logprob: -8.749547958374023
    8. '(R' → logprob: -8.874547958374023
    9. '<|end|>' → logprob: -9.124547958374023
    10. '([]' → logprob: -9.124547958374023

Token 150: 'prob' (ID: 29823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05303015187382698
    2. '])' → logprob: -3.053030252456665
    3. ''])' → logprob: -6.678030014038086
    4. '))' → logprob: -6.678030014038086
    5. '[])' → logprob: -7.803030014038086
    6. '')' → logprob: -7.928030014038086
    7. ')]' → logprob: -8.428030014038086
    8. ')])' → logprob: -8.428030014038086
    9. ''' → logprob: -8.928030014038086
    10. '[]' → logprob: -9.053030014038086

Token 151: 'ablement' (ID: 63986)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5578201413154602
    2. ')' → logprob: -1.0578200817108154
    3. ']' → logprob: -3.5578200817108154
    4. '])' → logprob: -3.9328200817108154
    5. ''])' → logprob: -4.9328203201293945
    6. ''' → logprob: -5.5578203201293945
    7. '')]' → logprob: -5.6828203201293945
    8. 'R' → logprob: -6.3078203201293945
    9. '['' → logprob: -6.3078203201293945
    10. ''))' → logprob: -6.3078203201293945

Token 152: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6818870902061462
    2. '#' → logprob: -1.806887149810791
    3. 'pour' → logprob: -2.306887149810791
    4. '"' → logprob: -2.431887149810791
    5. ' pour' → logprob: -2.931887149810791
    6. 'for' → logprob: -3.306887149810791
    7. '")' → logprob: -3.806887149810791
    8. ' "' → logprob: -4.431887149810791
    9. ' for' → logprob: -4.931887149810791
    10. ' #' → logprob: -5.431887149810791

Token 153: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008293398655951023
    2. 'les' → logprob: -6.008293628692627
    3. ' "' → logprob: -6.133293628692627
    4. ')' → logprob: -7.008293628692627
    5. ''' → logprob: -7.383293628692627
    6. '"B' → logprob: -7.633293628692627
    7. '#' → logprob: -7.883293628692627
    8. ' les' → logprob: -9.258293151855469
    9. '"T' → logprob: -9.258293151855469
    10. '")' → logprob: -9.258293151855469

Token 154: 'Blue' (ID: 15957)
  Prédit: 'Blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Blue' → logprob: -0.1350802332162857
    2. '")' → logprob: -3.010080337524414
    3. '')' → logprob: -3.385080337524414
    4. ''' → logprob: -4.385080337524414
    5. '"' → logprob: -4.510080337524414
    6. ' Blue' → logprob: -4.510080337524414
    7. ')' → logprob: -5.760080337524414
    8. 'Red' → logprob: -6.260080337524414
    9. 'R' → logprob: -6.885080337524414
    10. 'B' → logprob: -7.885080337524414

Token 155: '").
' (ID: 88948)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002144908532500267
    2. '")' → logprob: -7.002144813537598
    3. '')' → logprob: -7.127144813537598
    4. 'R' → logprob: -8.627144813537598
    5. ')

' → logprob: -9.502144813537598
    6. '#' → logprob: -9.752144813537598
    7. ')
' → logprob: -10.127144813537598
    8. '`)' → logprob: -10.502144813537598
    9. '()' → logprob: -11.377144813537598
    10. ')

' → logprob: -11.752144813537598

Token 156: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.2987729102605954e-05
    2. ' R' → logprob: -10.250042915344238
    3. '
' → logprob: -11.875042915344238
    4. '

' → logprob: -15.500042915344238
    5. '#' → logprob: -16.125043869018555
    6. '```' → logprob: -16.125043869018555
    7. 'for' → logprob: -16.250043869018555
    8. '
' → logprob: -16.625043869018555
    9. 'r' → logprob: -16.750043869018555
    10. '' → logprob: -17.375043869018555

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10436102002859116
    2. '=' → logprob: -2.604361057281494
    3. ',' → logprob: -3.729361057281494
    4. '=[]' → logprob: -6.854361057281494
    5. '=[]
' → logprob: -10.229360580444336
    6. ',R' → logprob: -11.104360580444336
    7. ' ,' → logprob: -11.479360580444336
    8. 'indices' → logprob: -12.229360580444336
    9. '=[]
' → logprob: -12.479360580444336
    10. ' ' → logprob: -12.979360580444336

Token 158: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00015359772078227252
    2. '[]
' → logprob: -9.000153541564941
    3. ' []' → logprob: -10.500153541564941
    4. '[' → logprob: -13.500153541564941
    5. '[]

' → logprob: -13.875153541564941
    6. '[]}' → logprob: -15.500153541564941
    7. '[]>' → logprob: -18.250154495239258
    8. '[])' → logprob: -19.125154495239258
    9. '=[]' → logprob: -19.375154495239258
    10. '[]"' → logprob: -19.500154495239258

Token 159: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -6.704273118884885e-07
    2. 'for' → logprob: -14.750000953674316
    3. ' G' → logprob: -15.375000953674316
    4. '
' → logprob: -18.625
    5. '	G' → logprob: -19.5
    6. '```' → logprob: -20.5
    7. '#' → logprob: -20.75
    8. '

' → logprob: -20.75
    9. ' for' → logprob: -21.0
    10. '  
' → logprob: -21.0625

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1272469311952591
    2. '=' → logprob: -2.127246856689453
    3. '=[]' → logprob: -8.127246856689453
    4. '[]' → logprob: -11.127246856689453
    5. '=[]
' → logprob: -11.752246856689453
    6. '=[]
' → logprob: -14.627246856689453
    7. ',' → logprob: -16.377246856689453
    8. '.' → logprob: -16.502246856689453
    9. ' ' → logprob: -16.502246856689453
    10. '[:]' → logprob: -16.502246856689453

Token 161: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0024806505534797907
    2. ' []' → logprob: -6.002480506896973
    3. '[]
' → logprob: -12.252480506896973
    4. '[]

' → logprob: -15.502480506896973
    5. '[' → logprob: -17.25248146057129
    6. '[]}' → logprob: -17.37748146057129
    7. ' []
' → logprob: -17.75248146057129
    8. '[]"' → logprob: -19.50248146057129
    9. '[])' → logprob: -19.62748146057129
    10. '([]' → logprob: -19.75248146057129

Token 162: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. ' B' → logprob: -17.0
    3. 'b' → logprob: -20.125
    4. '[]' → logprob: -21.125
    5. '```' → logprob: -21.25
    6. '[]
' → logprob: -21.5
    7. '	B' → logprob: -22.0
    8. '
' → logprob: -22.125
    9. 'for' → logprob: -22.375
    10. '[' → logprob: -22.875

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030131112784147263
    2. ' =' → logprob: -3.5301311016082764
    3. '=[]' → logprob: -8.405131340026855
    4. '[]' → logprob: -8.780131340026855
    5. ']' → logprob: -14.030131340026855
    6. '()' → logprob: -14.280131340026855
    7. '=[]
' → logprob: -14.655131340026855
    8. '.' → logprob: -14.905131340026855
    9. '[:]' → logprob: -15.280131340026855
    10. ')' → logprob: -15.530131340026855

Token 164: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1279553291387856e-05
    2. ' []' → logprob: -12.000011444091797
    3. '[]
' → logprob: -12.375011444091797
    4. '[]}' → logprob: -14.750011444091797
    5. '[]

' → logprob: -15.625011444091797
    6. '[' → logprob: -16.125011444091797
    7. '0' → logprob: -16.625011444091797
    8. '[])' → logprob: -18.125011444091797
    9. '[:]' → logprob: -20.000011444091797
    10. '[]>' → logprob: -20.000011444091797

Token 165: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -13.750001907348633
    3. '#' → logprob: -14.875001907348633
    4. 'i' → logprob: -18.500001907348633
    5. '
' → logprob: -19.500001907348633
    6. '	for' → logprob: -19.500001907348633
    7. 'For' → logprob: -20.500001907348633
    8. 'f' → logprob: -21.000001907348633
    9. '```' → logprob: -21.500001907348633
    10. 'fo' → logprob: -21.625001907348633

Token 166: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.676292231422849e-05
    2. ' for' → logprob: -11.250017166137695
    3. '#' → logprob: -12.750017166137695
    4. 'f' → logprob: -15.000017166137695
    5. 'fo' → logprob: -15.250017166137695
    6. 'For' → logprob: -16.625017166137695
    7. '
' → logprob: -16.875017166137695
    8. '```' → logprob: -17.875017166137695
    9. 'pour' → logprob: -17.875017166137695
    10. '	for' → logprob: -18.250017166137695

Token 167: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19075006246566772
    2. '_' → logprob: -2.6907501220703125
    3. 'i' → logprob: -2.9407501220703125
    4. 'une' → logprob: -3.6907501220703125
    5. ' for' → logprob: -4.8157501220703125
    6. ' une' → logprob: -5.4407501220703125
    7. ')' → logprob: -5.6907501220703125
    8. ' i' → logprob: -6.0657501220703125
    9. 'un' → logprob: -6.1907501220703125
    10. '#' → logprob: -6.3157501220703125

Token 168: ' compteur' (ID: 163344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17384999990463257
    2. ' for' → logprob: -2.2988500595092773
    3. 'i' → logprob: -3.9238500595092773
    4. 'index' → logprob: -4.798850059509277
    5. 'pour' → logprob: -5.173850059509277
    6. 'indice' → logprob: -5.173850059509277
    7. 'e' → logprob: -5.673850059509277
    8. ' index' → logprob: -5.673850059509277
    9. ' compteur' → logprob: -5.798850059509277
    10. 'range' → logprob: -7.173850059509277

Token 169: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004749915096908808
    2. 'for' → logprob: -6.254749774932861
    3. ' i' → logprob: -6.754749774932861
    4. 'count' → logprob: -7.254749774932861
    5. '=' → logprob: -7.754749774932861
    6. 'c' → logprob: -9.00475025177002
    7. ' =' → logprob: -9.25475025177002
    8. ' for' → logprob: -9.50475025177002
    9. 'comp' → logprob: -9.87975025177002
    10. 'counter' → logprob: -10.50475025177002

Token 170: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005257118493318558
    2. ' ' → logprob: -5.2552571296691895
    3. '1' → logprob: -11.880256652832031
    4. ' zéro' → logprob: -12.130256652832031
    5. 'zero' → logprob: -12.505256652832031
    6. 'z' → logprob: -12.630256652832031
    7. ' zero' → logprob: -13.005256652832031
    8. '-' → logprob: -14.630256652832031
    9. ' z' → logprob: -15.005256652832031
    10. '```' → logprob: -15.255256652832031

Token 171: '.' (ID: 13)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012061011977493763
    2. ' i' → logprob: -5.26206111907959
    3. 'for' → logprob: -5.76206111907959
    4. 'count' → logprob: -6.01206111907959
    5. ' for' → logprob: -7.88706111907959
    6. 'c' → logprob: -8.63706111907959
    7. ' compteur' → logprob: -8.63706111907959
    8. ',' → logprob: -9.13706111907959
    9. 'counter' → logprob: -9.13706111907959
    10. 'cnt' → logprob: -9.13706111907959

Token 172: ' Cette' (ID: 27383)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39115723967552185
    2. 'i' → logprob: -1.2661572694778442
    3. 'c' → logprob: -3.6411571502685547
    4. 'cnt' → logprob: -5.016157150268555
    5. 'counter' → logprob: -5.141157150268555
    6. ' count' → logprob: -7.016157150268555
    7. ' i' → logprob: -7.391157150268555
    8. 'comp' → logprob: -7.391157150268555
    9. ' compteur' → logprob: -7.391157150268555
    10. 'index' → logprob: -9.266157150268555

Token 173: ' variable' (ID: 11076)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.21680527925491333
    2. 'for' → logprob: -2.7168052196502686
    3. ' compteur' → logprob: -2.9668052196502686
    4. 'count' → logprob: -3.4668052196502686
    5. 'counter' → logprob: -4.091805458068848
    6. 'c' → logprob: -4.591805458068848
    7. 'i' → logprob: -4.966805458068848
    8. ' for' → logprob: -5.716805458068848
    9. 'cnt' → logprob: -6.341805458068848
    10. 'n' → logprob: -6.841805458068848

Token 174: ' serv' (ID: 2096)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35137805342674255
    2. ' i' → logprob: -1.851378083229065
    3. 'for' → logprob: -2.3513779640197754
    4. ' for' → logprob: -3.7263779640197754
    5. '=' → logprob: -4.851377964019775
    6. 'comp' → logprob: -5.851377964019775
    7. 'pour' → logprob: -5.851377964019775
    8. ' compteur' → logprob: -6.851377964019775
    9. ' =' → logprob: -6.976377964019775
    10. ' compte' → logprob: -7.101377964019775

Token 175: 'ira' (ID: 2633)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0000420808792114
    2. 'ira' → logprob: -1.8750420808792114
    3. 'era' → logprob: -2.125041961669922
    4. 'e' → logprob: -2.250041961669922
    5. 'ra' → logprob: -2.250041961669922
    6. 'r' → logprob: -3.000041961669922
    7. 'a' → logprob: -3.250041961669922
    8. 'er' → logprob: -4.000041961669922
    9. '=' → logprob: -5.000041961669922
    10. 'et' → logprob: -5.125041961669922

Token 176: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3960021436214447
    2. ' à' → logprob: -1.771002173423767
    3. ' i' → logprob: -2.3960020542144775
    4. 'à' → logprob: -3.0210020542144775
    5. ' ' → logprob: -4.771002292633057
    6. 'for' → logprob: -5.646002292633057
    7. ' a' → logprob: -6.771002292633057
    8. 'a' → logprob: -7.021002292633057
    9. '=' → logprob: -7.271002292633057
    10. ' for' → logprob: -7.646002292633057

Token 177: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.2086772322654724
    2. '0' → logprob: -2.708677291870117
    3. 'i' → logprob: -2.833677291870117
    4. ' compter' → logprob: -3.583677291870117
    5. 'com' → logprob: -4.708677291870117
    6. 'count' → logprob: -4.958677291870117
    7. '1' → logprob: -5.333677291870117
    8. ' ' → logprob: -6.083677291870117
    9. ' i' → logprob: -6.458677291870117
    10. 'su' → logprob: -6.583677291870117

Token 178: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' résultat' (ID: 62556)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5308132767677307
    2. ' nombre' → logprob: -0.9058132767677307
    3. 'i' → logprob: -6.030813217163086
    4. ' nombres' → logprob: -6.030813217163086
    5. '#' → logprob: -7.780813217163086
    6. 'indices' → logprob: -7.905813217163086
    7. 's' → logprob: -8.030813217163086
    8. 'for' → logprob: -8.155813217163086
    9. ' for' → logprob: -8.655813217163086
    10. 'indice' → logprob: -8.780813217163086

Token 180: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30723121762275696
    2. 'res' → logprob: -1.8072311878204346
    3. 'count' → logprob: -2.5572311878204346
    4. ' result' → logprob: -4.307231426239014
    5. 'r' → logprob: -5.682231426239014
    6. ' res' → logprob: -6.807231426239014
    7. 'answer' → logprob: -6.932231426239014
    8. 'c' → logprob: -7.307231426239014
    9. 'counter' → logprob: -7.307231426239014
    10. 'ans' → logprob: -7.557231426239014

Token 181: '.
' (ID: 558)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.42393264174461365
    2. 'result' → logprob: -1.298932671546936
    3. 'res' → logprob: -3.0489325523376465
    4. 'counter' → logprob: -4.1739325523376465
    5. 'c' → logprob: -5.6739325523376465
    6. 'cnt' → logprob: -6.0489325523376465
    7. 'answer' → logprob: -6.2989325523376465
    8. 'ans' → logprob: -6.4239325523376465
    9. 'comp' → logprob: -8.173933029174805
    10. 'r' → logprob: -9.298933029174805

Token 182: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.055584486573934555
    2. 'counter' → logprob: -4.18058443069458
    3. 'cnt' → logprob: -4.18058443069458
    4. 'c' → logprob: -4.43058443069458
    5. 'res' → logprob: -5.30558443069458
    6. 'result' → logprob: -5.55558443069458
    7. 'ans' → logprob: -6.43058443069458
    8. 'answer' → logprob: -7.80558443069458
    9. 'comp' → logprob: -8.055584907531738
    10. ' count' → logprob: -8.930584907531738

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687729835510254
    2. ' =' → logprob: -1.1368772983551025
    3. ' ' → logprob: -13.011877059936523
    4. '_' → logprob: -13.011877059936523
    5. ' ' → logprob: -14.386877059936523
    6. ')' → logprob: -15.386877059936523
    7. '  ' → logprob: -15.886877059936523
    8. 'u' → logprob: -16.136877059936523
    9. ',' → logprob: -16.261877059936523
    10. '   ' → logprob: -16.261877059936523

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.561967849731445
    4. '1' → logprob: -18.561967849731445
    5. '  ' → logprob: -19.999467849731445
    6. '```' → logprob: -20.374467849731445
    7. '000' → logprob: -20.561967849731445
    8. '۰' → logprob: -20.624467849731445
    9. 'int' → logprob: -20.749467849731445
    10. ' ' → logprob: -20.936967849731445

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '000' → logprob: -18.25
    4. '۰' → logprob: -19.25
    5. 'int' → logprob: -19.3125
    6. '3' → logprob: -19.5
    7. '```' → logprob: -19.5625
    8. '1' → logprob: -19.625
    9. '０' → logprob: -20.25
    10. '٠' → logprob: -20.625

Token 186: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034943778067827225
    2. '
' → logprob: -3.5349438190460205
    3. ' for' → logprob: -5.284943580627441
    4. '<|end|>' → logprob: -9.409943580627441
    5. ' 
' → logprob: -11.659943580627441
    6. '\n' → logprob: -11.784943580627441
    7. '

' → logprob: -12.534943580627441
    8. '
' → logprob: -12.784943580627441
    9. '#' → logprob: -12.909943580627441
    10. '  
' → logprob: -13.159943580627441

Token 187: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.869017852295656e-06
    2. ' for' → logprob: -12.250006675720215
    3. '
' → logprob: -13.125006675720215
    4. 'i' → logprob: -17.50000762939453
    5. 'f' → logprob: -17.75000762939453
    6. '#' → logprob: -18.50000762939453
    7. 'fo' → logprob: -19.62500762939453
    8. '

' → logprob: -20.12500762939453
    9. '
' → logprob: -21.37500762939453
    10. '' → logprob: -21.37500762939453

Token 188: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. '#' → logprob: -15.5
    3. ' for' → logprob: -16.625
    4. '
' → logprob: -17.5
    5. 'fo' → logprob: -17.625
    6. '```' → logprob: -21.125
    7. 'f' → logprob: -22.0
    8. 'For' → logprob: -22.25
    9. '	for' → logprob: -22.25
    10. '

' → logprob: -23.0

Token 189: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.17806577682495117
    2. 'ours' → logprob: -1.9280657768249512
    3. 'ourt' → logprob: -4.053065776824951
    4. 'er' → logprob: -9.67806625366211
    5. 'o' → logprob: -9.80306625366211
    6. 'or' → logprob: -9.92806625366211
    7. 'oure' → logprob: -10.05306625366211
    8. '#' → logprob: -10.05306625366211
    9. 'ou' → logprob: -10.55306625366211
    10. 'ourse' → logprob: -11.30306625366211

Token 190: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47495442628860474
    2. 'range' → logprob: -0.9749544262886047
    3. '(range' → logprob: -7.349954605102539
    4. 'for' → logprob: -9.099954605102539
    5. '_' → logprob: -9.599954605102539
    6. ' for' → logprob: -10.724954605102539
    7. 'i' → logprob: -11.724954605102539
    8. ' i' → logprob: -11.849954605102539
    9. ' ' → logprob: -12.224954605102539
    10. '(' → logprob: -12.349954605102539

Token 191: ' indice' (ID: 90848)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04860905185341835
    2. 'i' → logprob: -3.0486090183258057
    3. ' index' → logprob: -11.048608779907227
    4. 'index' → logprob: -13.423608779907227
    5. ' ' → logprob: -13.923608779907227
    6. '	i' → logprob: -14.173608779907227
    7. ' idx' → logprob: -14.173608779907227
    8. ' ' → logprob: -14.548608779907227
    9. ' range' → logprob: -15.173608779907227
    10. '_i' → logprob: -15.298608779907227

Token 192: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11591055989265442
    2. ' in' → logprob: -2.740910530090332
    3. 'i' → logprob: -3.740910530090332
    4. ',' → logprob: -4.115910530090332
    5. ' range' → logprob: -6.240910530090332
    6. 'in' → logprob: -6.615910530090332
    7. ' ' → logprob: -7.490910530090332
    8. 'range' → logprob: -7.865910530090332
    9. ' for' → logprob: -8.240910530090332
    10. ' ,' → logprob: -8.990910530090332

Token 193: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05731526017189026
    2. 'in' → logprob: -3.5573153495788574
    3. ',' → logprob: -4.307315349578857
    4. ' ' → logprob: -4.682315349578857
    5. ' ,' → logprob: -6.932315349578857
    6. ' i' → logprob: -7.307315349578857
    7. ' range' → logprob: -7.432315349578857
    8. ' en' → logprob: -7.557315349578857
    9. ' de' → logprob: -7.682315349578857
    10. ' for' → logprob: -7.932315349578857

Token 194: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25192990899086
    2. 'range' → logprob: -1.5019298791885376
    3. '(range' → logprob: -14.626930236816406
    4. ' la' → logprob: -15.626930236816406
    5. '	range' → logprob: -16.501930236816406
    6. ' rang' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.501930236816406
    8. 'rang' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.001930236816406
    10. 'ra' → logprob: -18.126930236816406

Token 195: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000488811288960278
    2. ' range' → logprob: -7.625488758087158
    3. 'S' → logprob: -14.625489234924316
    4. 'la' → logprob: -15.500489234924316
    5. 'rang' → logprob: -16.00048828125
    6. '(range' → logprob: -17.00048828125
    7. '```' → logprob: -17.62548828125
    8. '	range' → logprob: -17.75048828125
    9. 'R' → logprob: -18.00048828125
    10. 'r' → logprob: -18.37548828125

Token 196: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9228635430335999
    2. ' à' → logprob: -0.9228635430335999
    3. ',' → logprob: -2.172863483428955
    4. ' range' → logprob: -3.172863483428955
    5. 'range' → logprob: -3.547863483428955
    6. ' in' → logprob: -4.922863483428955
    7. 'à' → logprob: -5.422863483428955
    8. ' jusqu' → logprob: -5.422863483428955
    9. ' ,' → logprob: -6.797863483428955
    10. ' to' → logprob: -7.547863483428955

Token 197: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04016139730811119
    2. ' N' → logprob: -4.165161609649658
    3. ' a' → logprob: -4.665161609649658
    4. 'à' → logprob: -4.915161609649658
    5. ' to' → logprob: -6.540161609649658
    6. 'N' → logprob: -6.665161609649658
    7. ' ' → logprob: -6.665161609649658
    8. ''à' → logprob: -6.915161609649658
    9. 'a' → logprob: -7.540161609649658
    10. '’à' → logprob: -7.540161609649658

Token 198: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5759481191635132
    2. ' N' → logprob: -0.8259481191635132
    3. ' ' → logprob: -11.825947761535645
    4. ' ' → logprob: -14.575947761535645
    5. ' len' → logprob: -15.825947761535645
    6. 'len' → logprob: -15.825947761535645
    7. 'n' → logprob: -15.825947761535645
    8. '(N' → logprob: -16.07594871520996
    9. ' range' → logprob: -16.45094871520996
    10. '	N' → logprob: -16.45094871520996

Token 199: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028183190152049065
    2. ' :' → logprob: -4.0281829833984375
    3. 'for' → logprob: -5.1531829833984375
    4. ' for' → logprob: -6.1531829833984375
    5. '):' → logprob: -7.1531829833984375
    6. ':
' → logprob: -8.278182983398438
    7. ',' → logprob: -8.278182983398438
    8. 'range' → logprob: -8.778182983398438
    9. ' in' → logprob: -8.903182983398438
    10. ')' → logprob: -9.153182983398438

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005549400229938328
    2. ' ' → logprob: -7.500555038452148
    3. '-' → logprob: -13.375555038452148
    4. 'for' → logprob: -16.62555503845215
    5. ')' → logprob: -16.75055503845215
    6. '+' → logprob: -16.87555503845215
    7. '```' → logprob: -16.87555503845215
    8. ' -' → logprob: -17.00055503845215
    9. ',' → logprob: -17.25055503845215
    10. '2' → logprob: -17.37555503845215

Token 201: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.630313515663147
    2. 'for' → logprob: -1.005313515663147
    3. ' for' → logprob: -2.8803133964538574
    4. ':
' → logprob: -3.2553133964538574
    5. '
' → logprob: -5.130313396453857
    6. ' :' → logprob: -7.880313396453857
    7. ' :
' → logprob: -8.130313873291016
    8. ',' → logprob: -9.255313873291016
    9. 'range' → logprob: -9.505313873291016
    10. ' 
' → logprob: -10.130313873291016

Token 202: ' examiner' (ID: 115931)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15245561301708221
    2. 'i' → logprob: -2.0274555683135986
    3. ' range' → logprob: -5.402455806732178
    4. 'range' → logprob: -5.402455806732178
    5. '_' → logprob: -7.402455806732178
    6. ' ' → logprob: -10.15245532989502
    7. ' _' → logprob: -10.77745532989502
    8. 'r' → logprob: -11.65245532989502
    9. '  ' → logprob: -11.90245532989502
    10. 'in' → logprob: -12.02745532989502

Token 203: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15355603396892548
    2. 'range' → logprob: -2.1535561084747314
    3. ' S' → logprob: -4.028555870056152
    4. 'S' → logprob: -5.528555870056152
    5. ' ' → logprob: -6.028555870056152
    6. ' i' → logprob: -6.903555870056152
    7. ' la' → logprob: -7.153555870056152
    8. 'i' → logprob: -9.528555870056152
    9. ')' → logprob: -10.153555870056152
    10. '_' → logprob: -10.528555870056152

Token 204: ' caractère' (ID: 80509)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08541128784418106
    2. ' ' → logprob: -2.960411310195923
    3. 'i' → logprob: -4.210411071777344
    4. ' caract' → logprob: -5.335411071777344
    5. ' S' → logprob: -5.460411071777344
    6. ' caractère' → logprob: -5.710411071777344
    7. 'car' → logprob: -6.710411071777344
    8. ' range' → logprob: -7.835411071777344
    9. ' character' → logprob: -7.835411071777344
    10. ' car' → logprob: -8.585411071777344

Token 205: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6249039173126221
    2. ' for' → logprob: -1.624903917312622
    3. ':' → logprob: -1.999903917312622
    4. 'in' → logprob: -2.874903917312622
    5. ',' → logprob: -3.624903917312622
    6. ' in' → logprob: -3.624903917312622
    7. 'range' → logprob: -5.749903678894043
    8. 'dans' → logprob: -5.749903678894043
    9. 'en' → logprob: -5.999903678894043
    10. ' :' → logprob: -5.999903678894043

Token 206: ' la' (ID: 557)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.7052096724510193
    2. 'S' → logprob: -1.205209732055664
    3. ' range' → logprob: -1.705209732055664
    4. 'range' → logprob: -3.705209732055664
    5. ' ' → logprob: -11.705209732055664
    6. ' la' → logprob: -11.830209732055664
    7. 'Range' → logprob: -12.580209732055664
    8. 'N' → logprob: -12.705209732055664
    9. '(range' → logprob: -12.830209732055664
    10. 'R' → logprob: -13.080209732055664

Token 207: ' liste' (ID: 31719)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.038495492190122604
    2. ' S' → logprob: -4.0384955406188965
    3. 'range' → logprob: -4.5384955406188965
    4. ' range' → logprob: -4.6634955406188965
    5. 's' → logprob: -12.163495063781738
    6. 'for' → logprob: -12.538495063781738
    7. ' ' → logprob: -13.288495063781738
    8. ' for' → logprob: -13.288495063781738
    9. 'string' → logprob: -13.913495063781738
    10. ' ' → logprob: -14.413495063781738

Token 208: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6684059500694275
    2. ' for' → logprob: -1.5434060096740723
    3. 'S' → logprob: -2.2934060096740723
    4. 'range' → logprob: -2.4184060096740723
    5. ' range' → logprob: -2.9184060096740723
    6. ' S' → logprob: -4.293406009674072
    7. 's' → logprob: -5.168406009674072
    8. ' in' → logprob: -6.293406009674072
    9. '(range' → logprob: -6.793406009674072
    10. 'in' → logprob: -6.793406009674072

Token 209: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04046458378434181
    2. ' for' → logprob: -3.2904646396636963
    3. '
' → logprob: -6.915464401245117
    4. ':' → logprob: -7.290464401245117
    5. ':
' → logprob: -7.290464401245117
    6. ' 
' → logprob: -11.290464401245117
    7. ',' → logprob: -11.415464401245117
    8. '```' → logprob: -11.665464401245117
    9. 'i' → logprob: -12.040464401245117
    10. ' :
' → logprob: -12.165464401245117

Token 210: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044068231363780797
    2. ' for' → logprob: -7.75044059753418
    3. '
' → logprob: -11.62544059753418
    4. '```' → logprob: -14.75044059753418
    5. ' 
' → logprob: -15.00044059753418
    6. 'i' → logprob: -15.50044059753418
    7. 'f' → logprob: -16.75044059753418
    8. '  
' → logprob: -17.12544059753418
    9. '	for' → logprob: -18.12544059753418
    10. 'fo' → logprob: -18.37544059753418

Token 211: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007764681242406368
    2. 'i' → logprob: -4.88276481628418
    3. ' ' → logprob: -8.75776481628418
    4. ' ' → logprob: -14.25776481628418
    5. '	i' → logprob: -15.38276481628418
    6. ' _' → logprob: -15.88276481628418
    7. ' in' → logprob: -16.13276481628418
    8. '_' → logprob: -16.38276481628418
    9. ')' → logprob: -16.50776481628418
    10. '  ' → logprob: -17.25776481628418

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038048841059207916
    2. 'in' → logprob: -3.28804874420166
    3. ' ' → logprob: -12.28804874420166
    4. ')' → logprob: -14.41304874420166
    5. ',' → logprob: -14.53804874420166
    6. 'import' → logprob: -15.28804874420166
    7. 'In' → logprob: -15.66304874420166
    8. '	in' → logprob: -15.66304874420166
    9. ' i' → logprob: -15.91304874420166
    10. 'range' → logprob: -16.038049697875977

Token 213: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519305646419525
    2. 'range' → logprob: -1.501930594444275
    3. '(range' → logprob: -14.251930236816406
    4. ' ' → logprob: -15.501930236816406
    5. '	range' → logprob: -15.501930236816406
    6. '   ' → logprob: -16.501930236816406
    7. ')' → logprob: -16.626930236816406
    8. ' rang' → logprob: -17.001930236816406
    9. 'rang' → logprob: -17.126930236816406
    10. ' ' → logprob: -17.251930236816406

Token 214: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02325631119310856
    2. '(' → logprob: -3.773256301879883
    3. ' (' → logprob: -11.648256301879883
    4. '(len' → logprob: -13.898256301879883
    5. '(
' → logprob: -14.773256301879883
    6. '(n' → logprob: -14.898256301879883
    7. 'N' → logprob: -15.148256301879883
    8. '(i' → logprob: -16.898256301879883
    9. '((' → logprob: -17.648256301879883
    10. ' N' → logprob: -18.023256301879883

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003065030323341489
    2. '):
' → logprob: -8.125306129455566
    3. ' ):' → logprob: -12.000306129455566
    4. ')' → logprob: -13.125306129455566
    5. ':' → logprob: -13.625306129455566
    6. '):
' → logprob: -14.750306129455566
    7. '):

' → logprob: -16.000307083129883
    8. '():' → logprob: -16.250307083129883
    9. ']:' → logprob: -16.375307083129883
    10. '+' → logprob: -17.000307083129883

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27348312735557556
    2. ' if' → logprob: -1.523483157157898
    3. 'if' → logprob: -3.8984830379486084
    4. ' ' → logprob: -7.8984832763671875
    5. '    
' → logprob: -8.648483276367188
    6. '```' → logprob: -8.648483276367188
    7. '	if' → logprob: -9.023483276367188
    8. '  ' → logprob: -9.523483276367188
    9. '   ' → logprob: -10.398483276367188
    10. ':' → logprob: -10.898483276367188

Token 217: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2668551206588745
    2. '   ' → logprob: -1.7668551206588745
    3. ' if' → logprob: -2.766855239868164
    4. 'c' → logprob: -8.141855239868164
    5. ' ' → logprob: -10.016855239868164
    6. '```' → logprob: -10.141855239868164
    7. '    
' → logprob: -10.516855239868164
    8. '  ' → logprob: -10.641855239868164
    9. 'char' → logprob: -10.766855239868164
    10. 'ch' → logprob: -10.891855239868164

Token 218: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002259687054902315
    2. ' if' → logprob: -6.502259731292725
    3. 'c' → logprob: -7.877259731292725
    4. '   ' → logprob: -8.627259254455566
    5. 'char' → logprob: -8.627259254455566
    6. 'ch' → logprob: -11.752259254455566
    7. ' ' → logprob: -12.377259254455566
    8. 'car' → logprob: -12.627259254455566
    9. '```' → logprob: -13.127259254455566
    10. '  ' → logprob: -14.127259254455566

Token 219: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0012844024458900094
    2. 'if' → logprob: -6.751284599304199
    3. 'ife' → logprob: -9.3762845993042
    4. 'ifiez' → logprob: -11.5012845993042
    5. 'ifier' → logprob: -11.7512845993042
    6. 'ify' → logprob: -12.2512845993042
    7. ' if' → logprob: -12.5012845993042
    8. 'ifies' → logprob: -13.5012845993042
    9. 'ifi' → logprob: -14.5012845993042
    10. 'ifié' → logprob: -14.5012845993042

Token 220: ' si' (ID: 1784)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1822882741689682
    2. ' ' → logprob: -2.30728816986084
    3. ' if' → logprob: -3.18228816986084
    4. 'S' → logprob: -3.80728816986084
    5. 'if' → logprob: -6.30728816986084
    6. '  ' → logprob: -6.68228816986084
    7. '   ' → logprob: -8.80728816986084
    8. ' ' → logprob: -9.55728816986084
    9. '    ' → logprob: -9.80728816986084
    10. 's' → logprob: -11.30728816986084

Token 221: ' le' (ID: 505)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.2519705891609192
    2. 'S' → logprob: -1.5019705295562744
    3. ' ' → logprob: -10.376970291137695
    4. ' ' → logprob: -12.251970291137695
    5. '   ' → logprob: -12.376970291137695
    6. '    ' → logprob: -14.751970291137695
    7. '  ' → logprob: -14.876970291137695
    8. '	S' → logprob: -15.251970291137695
    9. 's' → logprob: -16.626970291137695
    10. '(S' → logprob: -16.689470291137695

Token 222: ' caractère' (ID: 80509)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.029752805829048157
    2. ' S' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.529752731323242
    4. 'i' → logprob: -15.279752731323242
    5. '[S' → logprob: -15.654752731323242
    6. ' ' → logprob: -15.904752731323242
    7. 's' → logprob: -16.029752731323242
    8. '  ' → logprob: -16.529752731323242
    9. ' i' → logprob: -16.654752731323242
    10. '   ' → logprob: -16.654752731323242

Token 223: ' à' (ID: 1221)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5773575901985168
    2. 'S' → logprob: -0.8273575901985168
    3. 's' → logprob: -7.577357769012451
    4. ' ' → logprob: -8.077357292175293
    5. ' ==' → logprob: -8.202357292175293
    6. '[i' → logprob: -9.202357292175293
    7. ' est' → logprob: -9.827357292175293
    8. '==' → logprob: -9.952357292175293
    9. '   ' → logprob: -10.327357292175293
    10. '[S' → logprob: -10.827357292175293

Token 224: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2493181973695755
    2. 'S' → logprob: -1.624318242073059
    3. ' i' → logprob: -3.9993181228637695
    4. ' S' → logprob: -5.2493181228637695
    5. '[i' → logprob: -10.37431812286377
    6. 's' → logprob: -13.12431812286377
    7. ' ' → logprob: -13.37431812286377
    8. '`' → logprob: -13.49931812286377
    9. 'index' → logprob: -13.49931812286377
    10. '```' → logprob: -14.12431812286377

Token 225: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10322099179029465
    2. '[i' → logprob: -2.6032209396362305
    3. 'index' → logprob: -4.2282209396362305
    4. ''i' → logprob: -5.7282209396362305
    5. 'indice' → logprob: -5.9782209396362305
    6. ''' → logprob: -7.3532209396362305
    7. ''ind' → logprob: -7.4782209396362305
    8. '[' → logprob: -7.4782209396362305
    9. ' i' → logprob: -7.8532209396362305
    10. 'S' → logprob: -7.9782209396362305

Token 226: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07751882821321487
    2. 'i' → logprob: -3.077518939971924
    3. 'ice' → logprob: -3.577518939971924
    4. 'e' → logprob: -8.077518463134766
    5. 'ices' → logprob: -9.452518463134766
    6. '[i' → logprob: -10.202518463134766
    7. '   ' → logprob: -10.827518463134766
    8. 'S' → logprob: -11.202518463134766
    9. '`' → logprob: -11.327518463134766
    10. 'x' → logprob: -11.452518463134766

Token 227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25202617049217224
    2. ' i' → logprob: -1.5020262002944946
    3. 'S' → logprob: -9.877026557922363
    4. '[i' → logprob: -10.127026557922363
    5. ' S' → logprob: -12.627026557922363
    6. ' ' → logprob: -14.502026557922363
    7. '(i' → logprob: -15.002026557922363
    8. '`' → logprob: -15.002026557922363
    9. '   ' → logprob: -15.502026557922363
    10. ')' → logprob: -15.627026557922363

Token 228: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.016989827156067
    2. ' est' → logprob: -1.391989827156067
    3. '==' → logprob: -1.641989827156067
    4. ']' → logprob: -2.0169897079467773
    5. ']==' → logprob: -4.141989707946777
    6. 'est' → logprob: -4.641989707946777
    7. '   ' → logprob: -4.891989707946777
    8. ' S' → logprob: -5.266989707946777
    9. 's' → logprob: -5.391989707946777
    10. 'S' → logprob: -5.391989707946777

Token 229: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.054883070290088654
    2. ' S' → logprob: -2.9298830032348633
    3. ' ' → logprob: -15.054883003234863
    4. 's' → logprob: -15.429883003234863
    5. ')' → logprob: -15.679883003234863
    6. ' la' → logprob: -15.804883003234863
    7. ']' → logprob: -16.80488395690918
    8. '`' → logprob: -16.80488395690918
    9. ' ' → logprob: -17.80488395690918
    10. '(S' → logprob: -18.30488395690918

Token 230: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8720583915710449
    2. '==' → logprob: -1.122058391571045
    3. '[i' → logprob: -2.622058391571045
    4. ']' → logprob: -2.747058391571045
    5. ' est' → logprob: -2.997058391571045
    6. '[' → logprob: -3.497058391571045
    7. '   ' → logprob: -4.497058391571045
    8. ' is' → logprob: -4.497058391571045
    9. ']==' → logprob: -4.747058391571045
    10. '[]' → logprob: -6.372058391571045

Token 231: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.028937386348843575
    2. ' '' → logprob: -3.653937339782715
    3. 'R' → logprob: -6.153937339782715
    4. '"' → logprob: -8.403937339782715
    5. '`' → logprob: -9.278937339782715
    6. ''S' → logprob: -9.778937339782715
    7. ''r' → logprob: -10.528937339782715
    8. ''un' → logprob: -10.903937339782715
    9. ' R' → logprob: -11.278937339782715
    10. '_R' → logprob: -12.028937339782715

Token 232: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00014561474381480366
    2. ''' → logprob: -8.87514591217041
    3. ' R' → logprob: -12.50014591217041
    4. 'B' → logprob: -13.37514591217041
    5. 'G' → logprob: -15.62514591217041
    6. '')' → logprob: -16.375144958496094
    7. '`' → logprob: -17.000144958496094
    8. '"' → logprob: -17.250144958496094
    9. 'S' → logprob: -17.875144958496094
    10. ')' → logprob: -18.000144958496094

Token 233: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35413092374801636
    2. '':' → logprob: -1.2291309833526611
    3. '':
' → logprob: -5.979130744934082
    4. ')' → logprob: -6.479130744934082
    5. ':' → logprob: -7.729130744934082
    6. '):' → logprob: -7.729130744934082
    7. '')' → logprob: -7.979130744934082
    8. ''):' → logprob: -8.604130744934082
    9. ' '' → logprob: -9.979130744934082
    10. ''):
' → logprob: -10.729130744934082

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007800741121172905
    2. ' if' → logprob: -5.382800579071045
    3. 'if' → logprob: -5.757800579071045
    4. ':' → logprob: -11.757801055908203
    5. '    
' → logprob: -12.882801055908203
    6. '```' → logprob: -13.132801055908203
    7. '   ' → logprob: -13.132801055908203
    8. '	if' → logprob: -14.757801055908203
    9. '
' → logprob: -14.757801055908203
    10. '       ' → logprob: -15.132801055908203

Token 235: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.306363582611084
    2. 'if' (adapté à ' if') → logprob: -1.806363582611084
    3. ' if' → logprob: -2.306363582611084
    4. '   ' → logprob: -12.806364059448242
    5. '```' → logprob: -13.056364059448242
    6. '	if' → logprob: -13.681364059448242
    7. ' ' → logprob: -14.931364059448242
    8. '    
' → logprob: -15.306364059448242
    9. '  ' → logprob: -15.306364059448242
    10. ':' → logprob: -15.306364059448242

Token 236: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.08895211666822433
    2. 'S' → logprob: -2.46395206451416
    3. ' ' → logprob: -11.83895206451416
    4. ' ' → logprob: -12.33895206451416
    5. '   ' → logprob: -14.46395206451416
    6. 's' → logprob: -15.33895206451416
    7. '	S' → logprob: -16.088953018188477
    8. '  ' → logprob: -16.713953018188477
    9. '    ' → logprob: -17.713953018188477
    10. '(S' → logprob: -17.713953018188477

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '[I' → logprob: -17.750001907348633
    5. '==' → logprob: -18.625001907348633
    6. '```' → logprob: -19.125001907348633
    7. '[
' → logprob: -19.625001907348633
    8. ' ==' → logprob: -19.750001907348633
    9. 'i' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.125001907348633

Token 238: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23163802921772003
    2. ' ==' → logprob: -2.231637954711914
    3. ']' → logprob: -2.356637954711914
    4. ']==' → logprob: -5.481637954711914
    5. '=='' → logprob: -8.106637954711914
    6. '']' → logprob: -9.731637954711914
    7. ']=='' → logprob: -9.981637954711914
    8. ' ]' → logprob: -10.231637954711914
    9. '=' → logprob: -10.981637954711914
    10. ''' → logprob: -11.356637954711914

Token 239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06240030750632286
    2. ' ==' → logprob: -2.8124003410339355
    3. '=='' → logprob: -7.8124003410339355
    4. '=' → logprob: -10.812399864196777
    5. '=="' → logprob: -13.187399864196777
    6. '[' → logprob: -13.312399864196777
    7. ' =='' → logprob: -13.437399864196777
    8. ']==' → logprob: -14.312399864196777
    9. '===' → logprob: -14.937399864196777
    10. ' ' → logprob: -15.062399864196777

Token 240: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006750782020390034
    2. ' '' → logprob: -5.006750583648682
    3. '"' → logprob: -10.38175106048584
    4. 'R' → logprob: -12.63175106048584
    5. ' ' → logprob: -14.50675106048584
    6. ' R' → logprob: -15.00675106048584
    7. ' ' → logprob: -15.75675106048584
    8. ' "' → logprob: -17.006750106811523
    9. ''S' → logprob: -17.131750106811523
    10. ''A' → logprob: -17.256750106811523

Token 241: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.339278580620885e-06
    2. ''' → logprob: -13.125001907348633
    3. ' R' → logprob: -15.625001907348633
    4. '"' → logprob: -16.375001907348633
    5. ''"' → logprob: -20.750001907348633
    6. '_R' → logprob: -22.125001907348633
    7. '	R' → logprob: -22.125001907348633
    8. '`' → logprob: -22.250001907348633
    9. 'r' → logprob: -22.250001907348633
    10. 'Ｒ' → logprob: -22.250001907348633

Token 242: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0070022400468587875
    2. '":
' → logprob: -5.507002353668213
    3. '"' → logprob: -6.007002353668213
    4. '"):' → logprob: -9.007001876831055
    5. '):' → logprob: -9.007001876831055
    6. '":
' → logprob: -9.257001876831055
    7. '"):
' → logprob: -10.257001876831055
    8. ':' → logprob: -10.507001876831055
    9. ')' → logprob: -10.757001876831055
    10. '):
' → logprob: -10.882001876831055

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43782147765159607
    2. '   ' → logprob: -1.8128215074539185
    3. ' R' → logprob: -2.187821388244629
    4. 'R' → logprob: -2.562821388244629
    5. ':' → logprob: -7.437821388244629
    6. '    
' → logprob: -7.812821388244629
    7. '        
' → logprob: -8.437821388244629
    8. '
' → logprob: -8.687821388244629
    9. '	R' → logprob: -8.687821388244629
    10. ':
' → logprob: -9.062821388244629

Token 244: ' #' (ID: 1069)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.025506561622023582
    2. ' R' → logprob: -3.7755064964294434
    3. '   ' → logprob: -6.150506496429443
    4. '       ' → logprob: -9.025506973266602
    5. '           ' → logprob: -12.650506973266602
    6. ' ' → logprob: -13.900506973266602
    7. '	R' → logprob: -14.650506973266602
    8. '  ' → logprob: -15.025506973266602
    9. '```' → logprob: -15.275506973266602
    10. '
' → logprob: -15.525506973266602

Token 245: ' Si' (ID: 7832)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0015030752401798964
    2. ' R' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.251502990722656
    4. '       ' → logprob: -16.376502990722656
    5. ' ' → logprob: -16.876502990722656
    6. '	R' → logprob: -16.876502990722656
    7. '
' → logprob: -17.626502990722656
    8. '_R' → logprob: -17.876502990722656
    9. '#' → logprob: -18.001502990722656
    10. 'RA' → logprob: -18.626502990722656

Token 246: ' oui' (ID: 50908)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.10023028403520584
    2. 'R' → logprob: -2.3502302169799805
    3. ' ' → logprob: -11.85023021697998
    4. ' ' → logprob: -11.97523021697998
    5. '   ' → logprob: -12.47523021697998
    6. '       ' → logprob: -12.85023021697998
    7. '           ' → logprob: -13.35023021697998
    8. '    ' → logprob: -13.97523021697998
    9. '        ' → logprob: -14.35023021697998
    10. '	R' → logprob: -15.22523021697998

Token 247: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7425628900527954
    2. 'R' → logprob: -1.7425628900527954
    3. ',' → logprob: -1.9925628900527954
    4. ' R' → logprob: -2.117562770843506
    5. '       ' → logprob: -2.742562770843506
    6. ':' → logprob: -4.117562770843506
    7. '   ' → logprob: -5.242562770843506
    8. ',R' → logprob: -6.367562770843506
    9. ':
' → logprob: -6.492562770843506
    10. ' ,' → logprob: -6.617562770843506

Token 248: ' ajoute' (ID: 91611)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03806834667921066
    2. ' R' → logprob: -3.2880682945251465
    3. '   ' → logprob: -11.038068771362305
    4. '       ' → logprob: -11.538068771362305
    5. ' ' → logprob: -15.163068771362305
    6. '
' → logprob: -15.163068771362305
    7. '	R' → logprob: -15.538068771362305
    8. '           ' → logprob: -15.788068771362305
    9. '_R' → logprob: -16.913068771362305
    10. '  ' → logprob: -17.163068771362305

Token 249: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05490056052803993
    2. 'i' → logprob: -2.929900646209717
    3. ' R' → logprob: -11.804900169372559
    4. 'R' → logprob: -12.429900169372559
    5. ' ' → logprob: -12.804900169372559
    6. '   ' → logprob: -13.429900169372559
    7. '	i' → logprob: -13.929900169372559
    8. ' ' → logprob: -14.679900169372559
    9. '       ' → logprob: -15.179900169372559
    10. '(i' → logprob: -15.304900169372559

Token 250: ''ind' (ID: 82245)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47474586963653564
    2. 'i' → logprob: -0.9747458696365356
    3. '(i' → logprob: -8.099745750427246
    4. '[i' → logprob: -8.849745750427246
    5. ''i' → logprob: -9.724745750427246
    6. 'a' → logprob: -9.974745750427246
    7. ' ' → logprob: -10.849745750427246
    8. '   ' → logprob: -11.224745750427246
    9. '`' → logprob: -11.349745750427246
    10. '=i' → logprob: -11.349745750427246

Token 251: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.001492961309850216
    2. 'ex' → logprob: -6.626492977142334
    3. 'i' → logprob: -8.751492500305176
    4. 'ices' → logprob: -12.001492500305176
    5. 'ic' → logprob: -14.001492500305176
    6. 'ace' → logprob: -14.251492500305176
    7. 'ce' → logprob: -14.626492500305176
    8. '(i' → logprob: -15.251492500305176
    9. 'e' → logprob: -15.626492500305176
    10. 'exe' → logprob: -16.251493453979492

Token 252: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890234887599945
    2. 'i' → logprob: -2.578902244567871
    3. '   ' → logprob: -11.828902244567871
    4. '(i' → logprob: -13.703902244567871
    5. '	i' → logprob: -13.828902244567871
    6. ' ' → logprob: -13.953902244567871
    7. ' à' → logprob: -14.203902244567871
    8. ' ' → logprob: -14.453902244567871
    9. ' R' → logprob: -15.578902244567871
    10. '    ' → logprob: -15.703902244567871

Token 253: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6666406393051147
    2. '       ' → logprob: -1.2916406393051147
    3. ' to' → logprob: -1.9166406393051147
    4. 'to' → logprob: -3.0416407585144043
    5. '           ' → logprob: -5.041640758514404
    6. 'à' → logprob: -5.416640758514404
    7. ' R' → logprob: -6.416640758514404
    8. ')' → logprob: -6.541640758514404
    9. '.append' → logprob: -7.041640758514404
    10. 'R' → logprob: -7.291640758514404

Token 254: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01416350994259119
    2. ' R' → logprob: -4.264163494110107
    3. ' ' → logprob: -18.264163970947266
    4. '	R' → logprob: -20.389163970947266
    5. '_R' → logprob: -20.514163970947266
    6. ' la' → logprob: -21.514163970947266
    7. '   ' → logprob: -22.139163970947266
    8. ' ' → logprob: -22.264163970947266
    9. ' the' → logprob: -22.639163970947266
    10. '```' → logprob: -22.764163970947266

Token 255: ' liste' (ID: 31719)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0009120595059357584
    2. ' R' → logprob: -7.000912189483643
    3. '`' → logprob: -16.000911712646484
    4. 'liste' → logprob: -16.500911712646484
    5. 'list' → logprob: -16.625911712646484
    6. ' ' → logprob: -16.625911712646484
    7. ' list' → logprob: -17.000911712646484
    8. '```' → logprob: -17.875911712646484
    9. 'r' → logprob: -18.625911712646484
    10. '   ' → logprob: -18.625911712646484

Token 256: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03804149478673935
    2. ' R' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.788042068481445
    4. ' ' → logprob: -18.663042068481445
    5. '_R' → logprob: -18.663042068481445
    6. '	R' → logprob: -18.913042068481445
    7. '(R' → logprob: -21.538042068481445
    8. '`' → logprob: -21.913042068481445
    9. '.R' → logprob: -22.038042068481445
    10. '  ' → logprob: -23.038042068481445

Token 257: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6970733404159546
    2. '.append' → logprob: -0.6970733404159546
    3. '.' → logprob: -5.697073459625244
    4. 'R' → logprob: -8.697072982788086
    5. '   ' → logprob: -9.072072982788086
    6. ' R' → logprob: -9.322072982788086
    7. '           ' → logprob: -10.197072982788086
    8. 'append' → logprob: -10.822072982788086
    9. ' .' → logprob: -10.947072982788086
    10. '.add' → logprob: -11.072072982788086

Token 258: '       ' (ID: 309)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.5888360142707825
    2. '       ' → logprob: -1.4638359546661377
    3. 'R' → logprob: -1.5888359546661377
    4. '           ' → logprob: -4.713836193084717
    5. '```' → logprob: -8.338835716247559
    6. '   ' → logprob: -8.463835716247559
    7. '
' → logprob: -10.838835716247559
    8. '``' → logprob: -11.338835716247559
    9. '	R' → logprob: -11.463835716247559
    10. '               ' → logprob: -11.463835716247559

Token 259: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.02325829118490219
    2. ' R' → logprob: -3.7732582092285156
    3. '       ' → logprob: -11.898258209228516
    4. '   ' → logprob: -12.148258209228516
    5. '           ' → logprob: -15.148258209228516
    6. '
' → logprob: -15.148258209228516
    7. '	R' → logprob: -16.023258209228516
    8. ' ' → logprob: -17.523258209228516
    9. '```' → logprob: -17.648258209228516
    10. '_R' → logprob: -18.273258209228516

Token 260: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009119403548538685
    2. '.' → logprob: -7.000911712646484
    3. ' .' → logprob: -16.000911712646484
    4. '.app' → logprob: -16.125911712646484
    5. '.push' → logprob: -16.500911712646484
    6. 'append' → logprob: -17.500911712646484
    7. '.extend' → logprob: -17.625911712646484
    8. '.add' → logprob: -17.750911712646484
    9. '.ap' → logprob: -18.000911712646484
    10. '.Append' → logprob: -18.250911712646484

Token 261: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. 'i' → logprob: -14.875123977661133
    4. ' (' → logprob: -15.375123977661133
    5. '(
' → logprob: -17.125123977661133
    6. ' i' → logprob: -18.375123977661133
    7. '(I' → logprob: -19.875123977661133
    8. '((' → logprob: -21.000123977661133
    9. ',i' → logprob: -21.375123977661133
    10. ' ' → logprob: -21.500123977661133

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ' )' → logprob: -11.500012397766113
    3. ')
' → logprob: -13.375012397766113
    4. '   ' → logprob: -15.500012397766113
    5. '<|end|>' → logprob: -16.375011444091797
    6. '))' → logprob: -17.125011444091797
    7. ')#' → logprob: -17.500011444091797
    8. '),' → logprob: -17.500011444091797
    9. ')}' → logprob: -17.500011444091797
    10. ')return' → logprob: -17.750011444091797

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002220318652689457
    2. 'elif' → logprob: -6.127220153808594
    3. ' elif' → logprob: -10.377220153808594
    4. '    
' → logprob: -13.377220153808594
    5. '	elif' → logprob: -13.377220153808594
    6. '   ' → logprob: -14.627220153808594
    7. '```' → logprob: -15.252220153808594
    8. '       ' → logprob: -17.002220153808594
    9. 'else' → logprob: -17.127220153808594
    10. '  ' → logprob: -17.502220153808594

Token 264: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.32042086124420166
    2. '   ' → logprob: -1.3204208612442017
    3. ' elif' → logprob: -4.945420742034912
    4. '	elif' → logprob: -12.07042121887207
    5. '```' → logprob: -12.57042121887207
    6. ' ' → logprob: -12.82042121887207
    7. 'el' → logprob: -12.82042121887207
    8. '    
' → logprob: -13.82042121887207
    9. '  ' → logprob: -14.32042121887207
    10. 'else' → logprob: -14.44542121887207

Token 265: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00866586435586214
    2. ' elif' → logprob: -4.758666038513184
    3. 'el' → logprob: -9.883666038513184
    4. ' el' → logprob: -16.008665084838867
    5. '   ' → logprob: -16.508665084838867
    6. 'if' → logprob: -16.633665084838867
    7. 'El' → logprob: -16.883665084838867
    8. 'else' → logprob: -17.383665084838867
    9. 'eli' → logprob: -17.508665084838867
    10. ' eli' → logprob: -18.258665084838867

Token 266: ' ce' (ID: 2357)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.08955450356006622
    2. 'S' → logprob: -2.46455454826355
    3. 'elif' → logprob: -7.964554309844971
    4. ' elif' → logprob: -8.839554786682129
    5. ' ' → logprob: -9.214554786682129
    6. 'else' → logprob: -12.089554786682129
    7. '   ' → logprob: -12.714554786682129
    8. ' ' → logprob: -12.839554786682129
    9. ' else' → logprob: -12.964554786682129
    10. '  ' → logprob: -13.339554786682129

Token 267: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.43095657229423523
    2. 'elif' → logprob: -2.0559566020965576
    3. 'lif' → logprob: -2.1809566020965576
    4. 'lse' → logprob: -2.4309566020965576
    5. 'ls' → logprob: -4.6809563636779785
    6. 'li' → logprob: -5.4309563636779785
    7. ' elif' → logprob: -6.5559563636779785
    8. '   ' → logprob: -6.6809563636779785
    9. 'lon' → logprob: -7.0559563636779785
    10. 'x' → logprob: -7.4309563636779785

Token 268: ''est' (ID: 6616)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0032245332840830088
    2. ' elif' → logprob: -5.8782243728637695
    3. 'e' → logprob: -8.75322437286377
    4. 'el' → logprob: -8.75322437286377
    5. ''est' → logprob: -9.50322437286377
    6. '   ' → logprob: -12.37822437286377
    7. 'o' → logprob: -12.62822437286377
    8. 'else' → logprob: -12.75322437286377
    9. 'é' → logprob: -13.00322437286377
    10. 'els' → logprob: -13.25322437286377

Token 269: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6700859665870667
    2. 'pas' → logprob: -1.2950859069824219
    3. 'elif' → logprob: -1.5450859069824219
    4. ' elif' → logprob: -7.545085906982422
    5. 'not' → logprob: -8.545085906982422
    6. 't' → logprob: -9.545085906982422
    7. 'else' → logprob: -9.545085906982422
    8. 'p' → logprob: -9.670085906982422
    9. 'el' → logprob: -9.795085906982422
    10. '#' → logprob: -10.170085906982422

Token 270: ' un' (ID: 537)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.19333405792713165
    2. 'S' → logprob: -1.9433341026306152
    3. 'elif' → logprob: -3.6933341026306152
    4. ' elif' → logprob: -4.943334102630615
    5. ' not' → logprob: -9.068333625793457
    6. '(S' → logprob: -9.193333625793457
    7. ' ' → logprob: -9.318333625793457
    8. ' pas' → logprob: -9.568333625793457
    9. 'else' → logprob: -9.568333625793457
    10. 'not' → logprob: -10.568333625793457

Token 271: ' '' (ID: 461)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.05071133002638817
    2. ' elif' → logprob: -3.1757113933563232
    3. 'e' → logprob: -5.175711154937744
    4. 'el' → logprob: -6.675711154937744
    5. 'else' → logprob: -8.175711631774902
    6. 'G' → logprob: -8.800711631774902
    7. ' G' → logprob: -9.550711631774902
    8. '"' → logprob: -9.675711631774902
    9. 'é' → logprob: -10.550711631774902
    10. 'if' → logprob: -10.675711631774902

Token 272: 'R' (ID: 49)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.01021320465952158
    2. ''' → logprob: -5.010213375091553
    3. '"' → logprob: -6.135213375091553
    4. ' G' → logprob: -7.385213375091553
    5. '"G' → logprob: -8.010212898254395
    6. 'B' → logprob: -8.885212898254395
    7. 'R' → logprob: -9.010212898254395
    8. 'S' → logprob: -10.385212898254395
    9. 'elif' → logprob: -10.385212898254395
    10. 'else' → logprob: -11.635212898254395

Token 273: '',' (ID: 787)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.14354299008846283
    2. ' elif' → logprob: -2.018543004989624
    3. ',' → logprob: -8.393543243408203
    4. 'el' → logprob: -8.643543243408203
    5. ':' → logprob: -8.893543243408203
    6. 'else' → logprob: -9.143543243408203
    7. '   ' → logprob: -9.268543243408203
    8. ')' → logprob: -9.768543243408203
    9. ' else' → logprob: -10.268543243408203
    10. ' ,' → logprob: -11.768543243408203

Token 274: ' vér' (ID: 42524)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.12696033716201782
    2. ' elif' → logprob: -2.126960277557373
    3. 'el' → logprob: -10.376960754394531
    4. ' el' → logprob: -14.376960754394531
    5. ' eli' → logprob: -14.751960754394531
    6. 'if' → logprob: -16.75196075439453
    7. 'eli' → logprob: -17.12696075439453
    8. 'e' → logprob: -17.37696075439453
    9. '	elif' → logprob: -17.62696075439453
    10. 'else' → logprob: -17.62696075439453

Token 275: 'ifie' (ID: 46409)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.006522460374981165
    2. 'el' → logprob: -5.5065226554870605
    3. 'els' → logprob: -6.8815226554870605
    4. 'if' → logprob: -7.0065226554870605
    5. 'e' → logprob: -9.131522178649902
    6. 'eli' → logprob: -9.506522178649902
    7. 'la' → logprob: -10.006522178649902
    8. 'es' → logprob: -10.256522178649902
    9. 'é' → logprob: -10.506522178649902
    10. 'El' → logprob: -10.506522178649902

Token 276: ' si' (ID: 1784)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08939404040575027
    2. ' elif' → logprob: -2.4643940925598145
    3. 'if' → logprob: -8.589393615722656
    4. '   ' → logprob: -9.339393615722656
    5. ' ' → logprob: -9.839393615722656
    6. 'el' → logprob: -10.339393615722656
    7. ' if' → logprob: -10.464393615722656
    8. ' si' → logprob: -11.214393615722656
    9. '  ' → logprob: -11.464393615722656
    10. 'e' → logprob: -11.589393615722656

Token 277: ' c' (ID: 274)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.11282773315906525
    2. 'S' → logprob: -2.237827777862549
    3. ' ' → logprob: -12.73782730102539
    4. ' ' → logprob: -13.36282730102539
    5. '(S' → logprob: -15.11282730102539
    6. 's' → logprob: -15.86282730102539
    7. '<S' → logprob: -16.61282730102539
    8. '[S' → logprob: -16.61282730102539
    9. '	S' → logprob: -16.86282730102539
    10. 'elif' → logprob: -16.98782730102539

Token 278: ''est' (ID: 6616)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02636799030005932
    2. ' S' → logprob: -3.6513679027557373
    3. 'elif' → logprob: -10.276368141174316
    4. '(S' → logprob: -11.026368141174316
    5. 'e' → logprob: -11.776368141174316
    6. '   ' → logprob: -13.026368141174316
    7. '[S' → logprob: -13.276368141174316
    8. '<S' → logprob: -13.651368141174316
    9. '=S' → logprob: -14.276368141174316
    10. ' ' → logprob: -14.526368141174316

Token 279: ' un' (ID: 537)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1276058554649353
    2. 'S' → logprob: -2.12760591506958
    3. '"S' → logprob: -8.002605438232422
    4. ' ' → logprob: -8.752605438232422
    5. ' "' → logprob: -10.127605438232422
    6. '"' → logprob: -10.502605438232422
    7. 'elif' → logprob: -10.877605438232422
    8. '(S' → logprob: -10.877605438232422
    9. '   ' → logprob: -11.377605438232422
    10. ' un' → logprob: -11.377605438232422

Token 280: ' '' (ID: 461)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.28283968567848206
    2. '"G' → logprob: -1.9078396558761597
    3. ' G' → logprob: -2.532839775085449
    4. ' "' → logprob: -5.032839775085449
    5. '"' → logprob: -5.032839775085449
    6. ''' → logprob: -5.532839775085449
    7. ' '' → logprob: -7.157839775085449
    8. ' ' → logprob: -8.03283977508545
    9. ' ' → logprob: -9.65783977508545
    10. '`' → logprob: -10.03283977508545

Token 281: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0007459024200215936
    2. ''' → logprob: -7.25074577331543
    3. '"G' → logprob: -11.62574577331543
    4. 'B' → logprob: -11.75074577331543
    5. '"' → logprob: -11.75074577331543
    6. ' G' → logprob: -11.87574577331543
    7. '')' → logprob: -14.68824577331543
    8. '`' → logprob: -14.75074577331543
    9. '```' → logprob: -15.12574577331543
    10. 'elif' → logprob: -15.37574577331543

Token 282: ''.
' (ID: 49980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9404110312461853
    2. 'elif' → logprob: -1.06541109085083
    3. '"):
' → logprob: -2.44041109085083
    4. ''):
' → logprob: -2.56541109085083
    5. '"):' → logprob: -3.69041109085083
    6. ':
' → logprob: -3.81541109085083
    7. '")' → logprob: -4.19041109085083
    8. '):
' → logprob: -4.69041109085083
    9. ''):' → logprob: -4.94041109085083
    10. 'else' → logprob: -5.19041109085083

Token 283: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.31819775700569153
    2. '   ' → logprob: -1.3181977272033691
    3. ' elif' → logprob: -5.318197727203369
    4. 'else' → logprob: -11.443198204040527
    5. 'el' → logprob: -11.943198204040527
    6. 'if' → logprob: -13.068198204040527
    7. '	elif' → logprob: -13.568198204040527
    8. '```' → logprob: -14.443198204040527
    9. ' ' → logprob: -15.193198204040527
    10. '  ' → logprob: -15.693198204040527

Token 284: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.07018161565065384
    2. '   ' → logprob: -2.8201816082000732
    3. ' elif' → logprob: -4.820181846618652
    4. 'else' → logprob: -9.195181846618652
    5. 'el' → logprob: -11.570181846618652
    6. ' else' → logprob: -13.445181846618652
    7. '	elif' → logprob: -14.195181846618652
    8. '```' → logprob: -14.445181846618652
    9. ' ' → logprob: -14.820181846618652
    10. 'if' → logprob: -15.195181846618652

Token 285: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.04859180003404617
    2. 'S' → logprob: -3.0485918521881104
    3. ' ' → logprob: -13.048591613769531
    4. ' ' → logprob: -13.173591613769531
    5. '   ' → logprob: -16.42359161376953
    6. '	S' → logprob: -16.54859161376953
    7. '(S' → logprob: -16.92359161376953
    8. 's' → logprob: -17.29859161376953
    9. '"S' → logprob: -18.36109161376953
    10. '  ' → logprob: -18.36109161376953

Token 286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. '[S' → logprob: -17.25
    4. ' [' → logprob: -17.375
    5. '[I' → logprob: -17.625
    6. '==' → logprob: -18.25
    7. 'S' → logprob: -18.375
    8. ' ==' → logprob: -18.75
    9. '[
' → logprob: -19.125
    10. '```' → logprob: -20.25

Token 287: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6226888298988342
    2. ' ==' → logprob: -1.1226887702941895
    3. '==' → logprob: -1.9976887702941895
    4. ']==' → logprob: -6.1226887702941895
    5. ' ]' → logprob: -8.497689247131348
    6. ')' → logprob: -11.122689247131348
    7. '=="' → logprob: -11.622689247131348
    8. ' ' → logprob: -11.872689247131348
    9. '"' → logprob: -12.372689247131348
    10. '=' → logprob: -12.497689247131348

Token 288: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694227695465088
    2. '==' → logprob: -2.1269421577453613
    3. '=="' → logprob: -11.75194263458252
    4. '=' → logprob: -12.75194263458252
    5. ' ' → logprob: -14.25194263458252
    6. ' =' → logprob: -14.25194263458252
    7. ' =="' → logprob: -14.25194263458252
    8. '[' → logprob: -15.12694263458252
    9. ']==' → logprob: -15.37694263458252
    10. '"' → logprob: -15.62694263458252

Token 289: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03650008887052536
    2. ' "' → logprob: -3.5364999771118164
    3. '"G' → logprob: -5.036499977111816
    4. ''' → logprob: -8.536499977111816
    5. ' ' → logprob: -10.786499977111816
    6. ' '' → logprob: -11.786499977111816
    7. ' ' → logprob: -12.536499977111816
    8. '"B' → logprob: -13.911499977111816
    9. ' G' → logprob: -14.786499977111816
    10. '	' → logprob: -15.286499977111816

Token 290: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.0921942703134846e-05
    2. '"G' → logprob: -11.62501049041748
    3. '"' → logprob: -13.50001049041748
    4. ' G' → logprob: -15.25001049041748
    5. ''' → logprob: -15.50001049041748
    6. '`' → logprob: -21.000011444091797
    7. 'R' → logprob: -21.375011444091797
    8. ''"' → logprob: -21.500011444091797
    9. '_G' → logprob: -21.625011444091797
    10. 'Ｇ' → logprob: -21.625011444091797

Token 291: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42841169238090515
    2. '":' → logprob: -1.9284117221832275
    3. ':
' → logprob: -2.1784117221832275
    4. '":
' → logprob: -2.6784117221832275
    5. '):
' → logprob: -4.678411483764648
    6. '):' → logprob: -4.928411483764648
    7. '"):
' → logprob: -6.178411483764648
    8. '   ' → logprob: -6.553411483764648
    9. '"' → logprob: -7.803411483764648
    10. '       ' → logprob: -8.053411483764648

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28161901235580444
    2. 'G' → logprob: -1.4066190719604492
    3. ' G' → logprob: -8.03161907196045
    4. '   ' → logprob: -9.03161907196045
    5. '           ' → logprob: -11.78161907196045
    6. '	G' → logprob: -12.03161907196045
    7. '     ' → logprob: -13.28161907196045
    8. '      ' → logprob: -13.65661907196045
    9. '_G' → logprob: -13.90661907196045
    10. ':' → logprob: -13.90661907196045

Token 293: ' #' (ID: 1069)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.023723021149635315
    2. '       ' → logprob: -3.7737231254577637
    3. ' G' → logprob: -7.648723125457764
    4. '	G' → logprob: -15.273722648620605
    5. '   ' → logprob: -15.398722648620605
    6. '
' → logprob: -15.648722648620605
    7. '           ' → logprob: -15.898722648620605
    8. '_G' → logprob: -16.523723602294922
    9. '```' → logprob: -17.773723602294922
    10. '.G' → logprob: -17.898723602294922

Token 294: ' Si' (ID: 7832)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00022010602697264403
    2. ' G' → logprob: -8.62522029876709
    3. '       ' → logprob: -10.12522029876709
    4. '   ' → logprob: -15.00022029876709
    5. '           ' → logprob: -17.000219345092773
    6. '        ' → logprob: -18.125219345092773
    7. '
' → logprob: -18.375219345092773
    8. '	G' → logprob: -18.375219345092773
    9. '      ' → logprob: -18.875219345092773
    10. '#' → logprob: -18.875219345092773

Token 295: ' oui' (ID: 50908)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.6609125733375549
    2. 'G' → logprob: -1.0359125137329102
    3. 'S' → logprob: -2.53591251373291
    4. ' S' → logprob: -3.03591251373291
    5. ' ' → logprob: -7.53591251373291
    6. 'True' → logprob: -7.91091251373291
    7. ' True' → logprob: -8.78591251373291
    8. ' ' → logprob: -9.03591251373291
    9. 's' → logprob: -9.66091251373291
    10. '	G' → logprob: -9.91091251373291

Token 296: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03716685622930527
    2. 'G' → logprob: -3.5371668338775635
    3. ':' → logprob: -5.287167072296143
    4. '           ' → logprob: -6.912167072296143
    5. ' G' → logprob: -7.287167072296143
    6. '.' → logprob: -8.287166595458984
    7. '.G' → logprob: -9.162166595458984
    8. ':
' → logprob: -9.662166595458984
    9. ':G' → logprob: -9.662166595458984
    10. '(G' → logprob: -10.037166595458984

Token 297: ' ajoute' (ID: 91611)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.25955575704574585
    2. ' G' → logprob: -1.5095558166503906
    3. '       ' → logprob: -4.884555816650391
    4. '           ' → logprob: -10.88455581665039
    5. '        ' → logprob: -12.38455581665039
    6. ' ' → logprob: -12.38455581665039
    7. '   ' → logprob: -12.75955581665039
    8. '	G' → logprob: -13.38455581665039
    9. ' ' → logprob: -14.00955581665039
    10. '
' → logprob: -14.25955581665039

Token 298: ' l' (ID: 305)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.022140713408589363
    2. '(G' → logprob: -4.2721405029296875
    3. '(' → logprob: -4.8971405029296875
    4. 'G' → logprob: -8.022140502929688
    5. 'i' → logprob: -9.772140502929688
    6. ' i' → logprob: -10.272140502929688
    7. 'l' → logprob: -10.897140502929688
    8. ' G' → logprob: -11.147140502929688
    9. 'the' → logprob: -11.522140502929688
    10. ' (' → logprob: -12.522140502929688

Token 299: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.860783576965332
    2. '[i' → logprob: -1.235783576965332
    3. '(i' → logprob: -2.485783576965332
    4. ' i' → logprob: -2.735783576965332
    5. ''i' → logprob: -2.735783576965332
    6. 'indice' → logprob: -3.235783576965332
    7. ''ind' → logprob: -3.610783576965332
    8. '=i' → logprob: -6.110783576965332
    9. 'indices' → logprob: -7.235783576965332
    10. ' indice' → logprob: -7.485783576965332

Token 300: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.11995657533407211
    2. 'ice' → logprob: -2.6199564933776855
    3. 'i' → logprob: -3.2449564933776855
    4. 'ices' → logprob: -7.7449564933776855
    5. '(i' → logprob: -7.9949564933776855
    6. 'e' → logprob: -8.119956970214844
    7. 'x' → logprob: -9.369956970214844
    8. '[i' → logprob: -10.744956970214844
    9. 'exe' → logprob: -11.119956970214844
    10. 'es' → logprob: -11.494956970214844

Token 301: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06618337333202362
    2. 'G' → logprob: -3.56618332862854
    3. ' i' → logprob: -3.94118332862854
    4. '(' → logprob: -4.441183567047119
    5. 'i' → logprob: -5.441183567047119
    6. ' G' → logprob: -8.566183090209961
    7. '(G' → logprob: -11.566183090209961
    8. ' (' → logprob: -11.816183090209961
    9. 's' → logprob: -11.941183090209961
    10. '[i' → logprob: -12.316183090209961

Token 302: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0035685887560248375
    2. ')' → logprob: -6.253568649291992
    3. ' a' → logprob: -7.878568649291992
    4. 'à' → logprob: -8.253568649291992
    5. 'G' → logprob: -8.378568649291992
    6. '       ' → logprob: -8.378568649291992
    7. ' G' → logprob: -8.878568649291992
    8. '   ' → logprob: -8.878568649291992
    9. ' to' → logprob: -9.253568649291992
    10. ' ' → logprob: -9.628568649291992

Token 303: ' la' (ID: 557)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0011708177626132965
    2. ' G' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.501171112060547
    4. '#' → logprob: -16.376171112060547
    5. ' la' → logprob: -16.376171112060547
    6. 'B' → logprob: -16.626171112060547
    7. '   ' → logprob: -16.751171112060547
    8. 'l' → logprob: -17.251171112060547
    9. 'S' → logprob: -17.376171112060547
    10. 'la' → logprob: -17.501171112060547

Token 304: ' liste' (ID: 31719)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -2.45848218582978e-06
    2. ' G' → logprob: -13.00000286102295
    3. 'list' → logprob: -15.87500286102295
    4. 'B' → logprob: -18.250001907348633
    5. '
' → logprob: -18.250001907348633
    6. ' ' → logprob: -19.750001907348633
    7. 'S' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '(G' → logprob: -20.375001907348633
    10. '#' → logprob: -20.500001907348633

Token 305: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -8.828512363834307e-05
    2. ' G' → logprob: -9.375088691711426
    3. '(G' → logprob: -12.750088691711426
    4. '(' → logprob: -15.250088691711426
    5. 'B' → logprob: -15.375088691711426
    6. '   ' → logprob: -16.62508773803711
    7. ' ' → logprob: -16.87508773803711
    8. '	G' → logprob: -17.62508773803711
    9. ')' → logprob: -18.00008773803711
    10. '  ' → logprob: -19.62508773803711

Token 306: '.
' (ID: 558)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5119432210922241
    2. '.' → logprob: -1.3869432210922241
    3. '.append' → logprob: -2.5119433403015137
    4. ')' → logprob: -3.1369433403015137
    5. '       ' → logprob: -3.7619433403015137
    6. ').' → logprob: -7.011943340301514
    7. '.)' → logprob: -7.761943340301514
    8. '[i' → logprob: -7.761943340301514
    9. '(' → logprob: -7.886943340301514
    10. '   ' → logprob: -7.886943340301514

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008844302967190742
    2. 'G' → logprob: -4.758844375610352
    3. ' G' → logprob: -8.508844375610352
    4. '           ' → logprob: -11.883844375610352
    5. '   ' → logprob: -12.258844375610352
    6. '	G' → logprob: -12.508844375610352
    7. 'elif' → logprob: -12.758844375610352
    8. '
' → logprob: -12.883844375610352
    9. '	' → logprob: -13.883844375610352
    10. 'else' → logprob: -13.883844375610352

Token 308: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -5.037835580878891e-05
    2. ' G' → logprob: -10.00005054473877
    3. '       ' → logprob: -12.25005054473877
    4. '   ' → logprob: -16.250049591064453
    5. '	G' → logprob: -19.625049591064453
    6. '           ' → logprob: -19.750049591064453
    7. '
' → logprob: -20.875049591064453
    8. '  ' → logprob: -21.000049591064453
    9. '_G' → logprob: -21.125049591064453
    10. '        ' → logprob: -21.250049591064453

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019377965945750475
    2. '.' → logprob: -6.2519378662109375
    3. ' .' → logprob: -11.626937866210938
    4. '.add' → logprob: -16.376937866210938
    5. '.app' → logprob: -16.626937866210938
    6. '.ap' → logprob: -17.251937866210938
    7. '.extend' → logprob: -17.501937866210938
    8. ').' → logprob: -17.626937866210938
    9. '.
' → logprob: -19.376937866210938
    10. 'append' → logprob: -19.501937866210938

Token 310: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -17.5
    3. 'i' → logprob: -18.75
    4. '(
' → logprob: -22.0
    5. ' (' → logprob: -22.25
    6. '(I' → logprob: -22.375
    7. ' i' → logprob: -23.0
    8. '(ii' → logprob: -23.0
    9. '   ' → logprob: -24.25
    10. '[i' → logprob: -24.375

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008388153510168195
    2. ')
' → logprob: -7.500838756561279
    3. '   ' → logprob: -8.250839233398438
    4. ')i' → logprob: -11.250839233398438
    5. ' )' → logprob: -12.125839233398438
    6. '[i' → logprob: -12.875839233398438
    7. '(i' → logprob: -13.625839233398438
    8. '       ' → logprob: -14.375839233398438
    9. '())' → logprob: -14.625839233398438
    10. ')
' → logprob: -14.750839233398438

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019343505846336484
    2. 'else' → logprob: -6.87693452835083
    3. 'elif' → logprob: -7.25193452835083
    4. ' else' → logprob: -9.001934051513672
    5. ' elif' → logprob: -9.751934051513672
    6. '	elif' → logprob: -12.751934051513672
    7. '```' → logprob: -12.751934051513672
    8. '    
' → logprob: -13.501934051513672
    9. '
' → logprob: -13.876934051513672
    10. '	else' → logprob: -14.126934051513672

Token 313: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.37656599283218384
    2. '   ' → logprob: -1.626565933227539
    3. 'elif' → logprob: -2.251565933227539
    4. ' else' → logprob: -4.501565933227539
    5. ' elif' → logprob: -7.126565933227539
    6. '```' → logprob: -10.626565933227539
    7. ' ' → logprob: -11.501565933227539
    8. '	else' → logprob: -12.251565933227539
    9. '	elif' → logprob: -12.376565933227539
    10. '  ' → logprob: -12.751565933227539

Token 314: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6861584782600403
    2. ' else' → logprob: -1.1861584186553955
    3. 'elif' → logprob: -1.9361584186553955
    4. ' elif' → logprob: -3.0611584186553955
    5. 'el' → logprob: -11.686158180236816
    6. ' el' → logprob: -14.436158180236816
    7. '```' → logprob: -14.686158180236816
    8. '   ' → logprob: -14.936158180236816
    9. 'els' → logprob: -15.061158180236816
    10. 'if' → logprob: -15.936158180236816

Token 315: ' le' (ID: 505)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.10027999430894852
    2. 'S' → logprob: -2.3502800464630127
    3. ' not' → logprob: -9.975279808044434
    4. 'not' → logprob: -11.475279808044434
    5. ' ' → logprob: -11.725279808044434
    6. 'else' → logprob: -12.350279808044434
    7. 's' → logprob: -14.100279808044434
    8. ' else' → logprob: -14.350279808044434
    9. '   ' → logprob: -14.850279808044434
    10. 'elif' → logprob: -14.850279808044434

Token 316: ' caractère' (ID: 80509)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0627552717924118
    2. ' S' → logprob: -2.8127553462982178
    3. 'car' → logprob: -7.312755107879639
    4. 's' → logprob: -9.687755584716797
    5. 'char' → logprob: -11.062755584716797
    6. ' caractère' → logprob: -11.187755584716797
    7. ' code' → logprob: -11.812755584716797
    8. 'code' → logprob: -12.312755584716797
    9. ' caract' → logprob: -12.562755584716797
    10. ' ' → logprob: -12.687755584716797

Token 317: ' n' (ID: 297)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006486453115940094
    2. 'S' → logprob: -5.131486415863037
    3. 's' → logprob: -8.631486892700195
    4. 'est' → logprob: -9.131486892700195
    5. ' S' → logprob: -9.631486892700195
    6. ' ==' → logprob: -9.756486892700195
    7. '[' → logprob: -10.006486892700195
    8. '==' → logprob: -10.506486892700195
    9. ' est' → logprob: -10.756486892700195
    10. 'elif' → logprob: -10.756486892700195

Token 318: ''est' (ID: 6616)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03964283689856529
    2. ''est' → logprob: -3.664642810821533
    3. 'elif' → logprob: -5.289642810821533
    4. 'est' → logprob: -5.914642810821533
    5. '['' → logprob: -6.039642810821533
    6. ' ==' → logprob: -7.039642810821533
    7. '[' → logprob: -7.289642810821533
    8. 'S' → logprob: -8.414643287658691
    9. '==' → logprob: -8.664643287658691
    10. 'e' → logprob: -8.789643287658691

Token 319: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.9712514877319336
    2. 'ni' → logprob: -1.2212514877319336
    3. 'pas' → logprob: -1.4712514877319336
    4. ' pas' → logprob: -2.3462514877319336
    5. '"B' → logprob: -7.471251487731934
    6. '"' → logprob: -8.471251487731934
    7. ' neither' → logprob: -9.471251487731934
    8. 'Ni' → logprob: -9.471251487731934
    9. '#' → logprob: -9.971251487731934
    10. ' ни' → logprob: -10.346251487731934

Token 320: ' '' (ID: 461)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.16544309258460999
    2. ''' → logprob: -1.9154430627822876
    3. 'B' → logprob: -5.540442943572998
    4. ' '' → logprob: -7.415442943572998
    5. ' "' → logprob: -7.665442943572998
    6. '"' → logprob: -9.165443420410156
    7. ' B' → logprob: -9.665443420410156
    8. ''b' → logprob: -11.540443420410156
    9. '#' → logprob: -12.415443420410156
    10. ' ' → logprob: -12.540443420410156

Token 321: 'R' (ID: 49)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006688326830044389
    2. ''' → logprob: -7.375669002532959
    3. '"B' → logprob: -10.7506685256958
    4. ' B' → logprob: -11.1256685256958
    5. 'R' → logprob: -12.8756685256958
    6. '"' → logprob: -13.0006685256958
    7. '`' → logprob: -15.5006685256958
    8. ' ' → logprob: -15.7506685256958
    9. '```' → logprob: -15.7506685256958
    10. 'S' → logprob: -15.7506685256958

Token 322: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08080167323350906
    2. '',' → logprob: -2.5808017253875732
    3. 'elif' → logprob: -7.705801486968994
    4. ' '' → logprob: -7.955801486968994
    5. '   ' → logprob: -8.455801963806152
    6. 'e' → logprob: -8.580801963806152
    7. ',' → logprob: -8.705801963806152
    8. ' nor' → logprob: -8.705801963806152
    9. ' ni' → logprob: -9.580801963806152
    10. ''''' → logprob: -9.830801963806152

Token 323: ' ni' (ID: 2565)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.561404287815094
    2. ' nor' → logprob: -1.1864042282104492
    3. ',' → logprob: -2.311404228210449
    4. ' elif' → logprob: -3.936404228210449
    5. ' neither' → logprob: -5.936404228210449
    6. '   ' → logprob: -6.936404228210449
    7. 'nor' → logprob: -7.061404228210449
    8. '==' → logprob: -8.31140422821045
    9. ' and' → logprob: -8.56140422821045
    10. ')' → logprob: -8.68640422821045

Token 324: ' '' (ID: 461)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.2886601984500885
    2. ''' → logprob: -1.4136601686477661
    3. 'B' → logprob: -5.413660049438477
    4. ' "' → logprob: -6.163660049438477
    5. '"' → logprob: -7.788660049438477
    6. ' '' → logprob: -7.913660049438477
    7. ' B' → logprob: -9.163660049438477
    8. ' ' → logprob: -11.288660049438477
    9. ' ' → logprob: -11.288660049438477
    10. ''b' → logprob: -12.788660049438477

Token 325: 'G' (ID: 38)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.231182826217264e-05
    2. ''' → logprob: -10.125072479248047
    3. '"B' → logprob: -10.875072479248047
    4. ' B' → logprob: -11.250072479248047
    5. '`' → logprob: -16.375072479248047
    6. '"' → logprob: -16.750072479248047
    7. ''b' → logprob: -17.250072479248047
    8. 'b' → logprob: -17.500072479248047
    9. '```' → logprob: -18.000072479248047
    10. '
' → logprob: -18.000072479248047

Token 326: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6448776125907898
    2. ':' → logprob: -1.8948776721954346
    3. ',' → logprob: -2.1448776721954346
    4. '':
' → logprob: -2.6448776721954346
    5. ':
' → logprob: -2.8948776721954346
    6. 'elif' → logprob: -2.8948776721954346
    7. '':' → logprob: -5.1448774337768555
    8. ''' → logprob: -5.2698774337768555
    9. '   ' → logprob: -5.8948774337768555
    10. '.' → logprob: -6.1448774337768555

Token 327: ' il' (ID: 1793)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9717789888381958
    2. 'elif' → logprob: -1.0967789888381958
    3. '   ' → logprob: -1.5967789888381958
    4. ' else' → logprob: -2.8467788696289062
    5. ' elif' → logprob: -3.7217788696289062
    6. 'if' → logprob: -6.471778869628906
    7. ' if' → logprob: -6.846778869628906
    8. ' B' → logprob: -9.096778869628906
    9. 'B' → logprob: -9.846778869628906
    10. ' ' → logprob: -10.346778869628906

Token 328: ' considère' (ID: 176437)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.021054808050394058
    2. 'else' → logprob: -4.146054744720459
    3. '==' → logprob: -6.021054744720459
    4. ' elif' → logprob: -6.271054744720459
    5. ' ==' → logprob: -8.396055221557617
    6. ' est' → logprob: -9.146055221557617
    7. ' else' → logprob: -9.271055221557617
    8. 'est' → logprob: -9.396055221557617
    9. 'e' → logprob: -9.646055221557617
    10. '```' → logprob: -10.771055221557617

Token 329: ' que' (ID: 661)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7849209904670715
    2. 's' → logprob: -1.5349209308624268
    3. 'if' → logprob: -2.1599209308624268
    4. 'elif' → logprob: -2.2849209308624268
    5. ' S' → logprob: -3.7849209308624268
    6. 'B' → logprob: -3.7849209308624268
    7. ' que' → logprob: -3.9099209308624268
    8. ' if' → logprob: -4.159921169281006
    9. ' elif' → logprob: -5.034921169281006
    10. 'que' → logprob: -5.409921169281006

Token 330: ' c' (ID: 274)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3484801948070526
    2. ' S' → logprob: -1.223480224609375
    3. ' it' → logprob: -10.723480224609375
    4. ' ' → logprob: -12.348480224609375
    5. 'it' → logprob: -12.973480224609375
    6. 's' → logprob: -13.473480224609375
    7. ' ' → logprob: -13.473480224609375
    8. '#' → logprob: -14.098480224609375
    9. 'elif' → logprob: -14.973480224609375
    10. ' the' → logprob: -15.098480224609375

Token 331: ''est' (ID: 6616)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002770405262708664
    2. ' S' → logprob: -6.12777042388916
    3. 'e' → logprob: -8.12777042388916
    4. 's' → logprob: -9.25277042388916
    5. ''est' → logprob: -9.25277042388916
    6. 'est' → logprob: -9.75277042388916
    7. '[S' → logprob: -11.62777042388916
    8. 'elif' → logprob: -12.25277042388916
    9. '#' → logprob: -12.25277042388916
    10. 'a' → logprob: -12.50277042388916

Token 332: ' '' (ID: 461)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.11451078951358795
    2. 'B' → logprob: -2.7395107746124268
    3. ' B' → logprob: -3.7395107746124268
    4. ' "' → logprob: -5.114511013031006
    5. '"' → logprob: -5.489511013031006
    6. ' un' → logprob: -5.864511013031006
    7. ' '' → logprob: -6.364511013031006
    8. ''' → logprob: -6.489511013031006
    9. ''un' → logprob: -6.614511013031006
    10. ' ' → logprob: -7.364511013031006

Token 333: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014547866769134998
    2. ' B' → logprob: -4.264547824859619
    3. ''' → logprob: -8.639548301696777
    4. '"B' → logprob: -8.764548301696777
    5. '"' → logprob: -10.139548301696777
    6. ' "' → logprob: -12.139548301696777
    7. ' '' → logprob: -12.764548301696777
    8. ' ' → logprob: -13.389548301696777
    9. '`' → logprob: -14.389548301696777
    10. ' ' → logprob: -15.264548301696777

Token 334: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.736509382724762
    2. ''.' → logprob: -1.9865093231201172
    3. '.
' → logprob: -2.111509323120117
    4. '.' → logprob: -2.236509323120117
    5. '       ' → logprob: -2.486509323120117
    6. ''' → logprob: -3.736509323120117
    7. ''.
' → logprob: -3.736509323120117
    8. '':
' → logprob: -4.486509323120117
    9. ':
' → logprob: -5.986509323120117
    10. ''
' → logprob: -6.111509323120117

Token 335: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01744356006383896
    2. '       ' → logprob: -4.392443656921387
    3. 'else' → logprob: -6.267443656921387
    4. '.' → logprob: -6.517443656921387
    5. 'B' → logprob: -6.892443656921387
    6. ' else' → logprob: -8.642443656921387
    7. ',' → logprob: -9.642443656921387
    8. ':
' → logprob: -9.642443656921387
    9. ' B' → logprob: -9.767443656921387
    10. ':' → logprob: -9.892443656921387

Token 336: 'car' (ID: 6830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059451520442962646
    2. '       ' → logprob: -3.4344515800476074
    3. ')' → logprob: -4.559451580047607
    4. 'else' → logprob: -4.559451580047607
    5. ' else' → logprob: -6.684451580047607
    6. ' B' → logprob: -7.059451580047607
    7. 'B' → logprob: -7.059451580047607
    8. ')
' → logprob: -7.184451580047607
    9. '```' → logprob: -8.55945110321045
    10. ' )' → logprob: -8.55945110321045

Token 337: ' il' (ID: 1793)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5014578700065613
    2. 'S' → logprob: -1.501457929611206
    3. 'else' → logprob: -2.251457929611206
    4. ' else' → logprob: -2.876457929611206
    5. '   ' → logprob: -6.251457691192627
    6. ' True' → logprob: -6.501457691192627
    7. ' not' → logprob: -6.626457691192627
    8. 'elif' → logprob: -6.876457691192627
    9. ' ' → logprob: -7.751457691192627
    10. 'True' → logprob: -8.001458168029785

Token 338: ' n' (ID: 297)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.42082223296165466
    2. '==' → logprob: -1.545822262763977
    3. ' ==' → logprob: -3.0458221435546875
    4. 'else' → logprob: -3.2958221435546875
    5. 's' → logprob: -4.4208221435546875
    6. '```' → logprob: -5.2958221435546875
    7. ']==' → logprob: -5.6708221435546875
    8. ' is' → logprob: -5.7958221435546875
    9. ' elif' → logprob: -5.7958221435546875
    10. ' else' → logprob: -5.9208221435546875

Token 339: ''y' (ID: 27913)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5820222496986389
    2. ''y' → logprob: -1.3320221900939941
    3. ''est' → logprob: -2.082022190093994
    4. 'y' → logprob: -3.707022190093994
    5. 'e' → logprob: -4.832022190093994
    6. '#' → logprob: -5.707022190093994
    7. ' y' → logprob: -6.082022190093994
    8. 'est' → logprob: -6.082022190093994
    9. 's' → logprob: -6.332022190093994
    10. 'a' → logprob: -6.957022190093994

Token 340: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0035000499337911606
    2. ' a' → logprob: -6.503499984741211
    3. 'est' → logprob: -6.878499984741211
    4. '#' → logprob: -8.378499984741211
    5. 'pas' → logprob: -8.378499984741211
    6. 'avait' → logprob: -8.503499984741211
    7. 'y' → logprob: -9.003499984741211
    8. 'elif' → logprob: -9.503499984741211
    9. ''a' → logprob: -10.503499984741211
    10. ' pas' → logprob: -10.878499984741211

Token 341: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.575437068939209
    2. 'pas' → logprob: -1.325437068939209
    3. 'else' → logprob: -2.825437068939209
    4. ' que' → logprob: -2.825437068939209
    5. 'que' → logprob: -3.450437068939209
    6. 'elif' → logprob: -4.950437068939209
    7. ' else' → logprob: -5.325437068939209
    8. ' plus' → logprob: -5.825437068939209
    9. 'plus' → logprob: -5.950437068939209
    10. 'qu' → logprob: -6.575437068939209

Token 342: ' trois' (ID: 25564)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8476127982139587
    2. ' trois' → logprob: -1.4726128578186035
    3. '"B' → logprob: -2.2226128578186035
    4. 'S' → logprob: -2.8476128578186035
    5. 'que' → logprob: -3.2226128578186035
    6. 'R' → logprob: -3.4726128578186035
    7. '"' → logprob: -3.4726128578186035
    8. 'tro' → logprob: -4.9726128578186035
    9. 'ces' → logprob: -4.9726128578186035
    10. '```' → logprob: -5.0976128578186035

Token 343: ' couleurs' (ID: 54001)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6951508522033691
    2. 'options' → logprob: -2.195150852203369
    3. 'types' → logprob: -2.195150852203369
    4. 'poss' → logprob: -2.445150852203369
    5. ' options' → logprob: -2.820150852203369
    6. ' types' → logprob: -2.820150852203369
    7. ' couleurs' → logprob: -4.070150852203369
    8. ' possibilités' → logprob: -4.195150852203369
    9. ' elif' → logprob: -4.570150852203369
    10. 'cases' → logprob: -5.320150852203369

Token 344: ' possibles' (ID: 97753)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.7047539949417114
    2. ')' → logprob: -2.079753875732422
    3. '):
' → logprob: -2.329753875732422
    4. '):' → logprob: -2.829753875732422
    5. ' possibles' → logprob: -2.829753875732422
    6. '   ' → logprob: -2.954753875732422
    7. ' possible' → logprob: -3.204753875732422
    8. 'possible' → logprob: -3.829753875732422
    9. ',' → logprob: -4.829753875732422
    10. ').
' → logprob: -4.954753875732422

Token 345: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.863122284412384
    2. ').
' → logprob: -1.2381222248077393
    3. '):
' → logprob: -1.7381222248077393
    4. '   ' → logprob: -3.1131222248077393
    5. ')
' → logprob: -3.4881222248077393
    6. ')' → logprob: -3.7381222248077393
    7. '):' → logprob: -5.613122463226318
    8. '.' → logprob: -5.988122463226318
    9. 'else' → logprob: -6.113122463226318
    10. ':' → logprob: -6.613122463226318

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.499674916267395
    2. 'else' → logprob: -1.249674916267395
    3. 'B' → logprob: -2.2496747970581055
    4. '       ' → logprob: -7.2496747970581055
    5. '```' → logprob: -8.249674797058105
    6. ' else' → logprob: -8.499674797058105
    7. ' B' → logprob: -10.249674797058105
    8. 'elif' → logprob: -10.749674797058105
    9. '  ' → logprob: -12.999674797058105
    10. '	B' → logprob: -12.999674797058105

Token 347: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13472941517829895
    2. '   ' → logprob: -2.1347293853759766
    3. 'B' → logprob: -5.509729385375977
    4. ' else' → logprob: -5.634729385375977
    5. '       ' → logprob: -9.384729385375977
    6. ' B' → logprob: -10.134729385375977
    7. '```' → logprob: -11.384729385375977
    8. 'elif' → logprob: -11.884729385375977
    9. '	else' → logprob: -12.509729385375977
    10. ' ' → logprob: -12.759729385375977

Token 348: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4097285866737366
    2. ':' → logprob: -1.1597285270690918
    3. '   ' → logprob: -4.284728527069092
    4. '       ' → logprob: -4.784728527069092
    5. 'B' → logprob: -8.03472900390625
    6. ':B' → logprob: -9.53472900390625
    7. ' :
' → logprob: -11.03472900390625
    8. ' B' → logprob: -11.15972900390625
    9. ':

' → logprob: -12.03472900390625
    10. ':
' → logprob: -12.15972900390625

Token 349: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7942574620246887
    2. '       ' → logprob: -0.7942574620246887
    3. ' B' → logprob: -2.919257402420044
    4. '   ' → logprob: -3.169257402420044
    5. '           ' → logprob: -9.419257164001465
    6. '	B' → logprob: -10.419257164001465
    7. '```' → logprob: -11.419257164001465
    8. '     ' → logprob: -11.419257164001465
    9. '    ' → logprob: -11.919257164001465
    10. ' ' → logprob: -12.169257164001465

Token 350: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0024802929256111383
    2. ' B' → logprob: -6.002480506896973
    3. '       ' → logprob: -12.877480506896973
    4. '   ' → logprob: -13.127480506896973
    5. '           ' → logprob: -17.502479553222656
    6. ' ' → logprob: -17.752479553222656
    7. '	B' → logprob: -17.752479553222656
    8. '```' → logprob: -18.002479553222656
    9. '  ' → logprob: -19.877479553222656
    10. 'b' → logprob: -20.377479553222656

Token 351: ' Aj' (ID: 28294)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004094547126442194
    2. ' B' → logprob: -5.50409460067749
    3. '       ' → logprob: -11.754094123840332
    4. '   ' → logprob: -11.879094123840332
    5. '           ' → logprob: -13.754094123840332
    6. ' ' → logprob: -16.62909507751465
    7. '```' → logprob: -16.87909507751465
    8. '	B' → logprob: -17.25409507751465
    9. '  ' → logprob: -17.50409507751465
    10. '        ' → logprob: -18.37909507751465

Token 352: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00022451656695920974
    2. 'B' → logprob: -9.125224113464355
    3. 'outer' → logprob: -9.750224113464355
    4. 'out' → logprob: -10.500224113464355
    5. 'outez' → logprob: -10.875224113464355
    6. 'uste' → logprob: -11.875224113464355
    7. 'outes' → logprob: -12.750224113464355
    8. 'b' → logprob: -14.625224113464355
    9. 'ute' → logprob: -15.750224113464355
    10. 't' → logprob: -16.250225067138672

Token 353: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.41503268480300903
    2. '(i' → logprob: -1.1650326251983643
    3. 'i' → logprob: -4.040032863616943
    4. ' i' → logprob: -5.165032863616943
    5. ' B' → logprob: -6.165032863616943
    6. '(B' → logprob: -6.415032863616943
    7. '(' → logprob: -7.415032863616943
    8. '   ' → logprob: -10.540032386779785
    9. 'l' → logprob: -10.665032386779785
    10. ' (' → logprob: -11.540032386779785

Token 354: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.398209810256958
    2. ' i' → logprob: -1.148209810256958
    3. '(i' → logprob: -4.523209571838379
    4. 'indice' → logprob: -7.898209571838379
    5. '	i' → logprob: -11.523209571838379
    6. '[i' → logprob: -11.773209571838379
    7. 'index' → logprob: -12.273209571838379
    8. ' indice' → logprob: -12.273209571838379
    9. '   ' → logprob: -12.523209571838379
    10. '(' → logprob: -12.523209571838379

Token 355: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2403792440891266
    2. 'ex' → logprob: -1.6153792142868042
    3. 'i' → logprob: -4.240379333496094
    4. 'ices' → logprob: -7.990379333496094
    5. 'ce' → logprob: -10.115379333496094
    6. 'exe' → logprob: -10.865379333496094
    7. 'e' → logprob: -11.240379333496094
    8. '   ' → logprob: -11.240379333496094
    9. 'index' → logprob: -12.115379333496094
    10. 'ix' → logprob: -12.490379333496094

Token 356: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16645756363868713
    2. 'B' → logprob: -2.4164576530456543
    3. 'i' → logprob: -3.1664576530456543
    4. ' i' → logprob: -3.9164576530456543
    5. '(' → logprob: -6.416457653045654
    6. ' B' → logprob: -8.416457176208496
    7. '   ' → logprob: -9.666457176208496
    8. ' (' → logprob: -10.041457176208496
    9. '(
' → logprob: -10.416457176208496
    10. '       ' → logprob: -11.916457176208496

Token 357: ' à' (ID: 1221)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8630990386009216
    2. ' à' → logprob: -0.9880990386009216
    3. '       ' → logprob: -1.7380990982055664
    4. 'to' → logprob: -4.738099098205566
    5. ' B' → logprob: -4.988099098205566
    6. ' to' → logprob: -4.988099098205566
    7. '   ' → logprob: -5.988099098205566
    8. '           ' → logprob: -6.613099098205566
    9. ')' → logprob: -7.488099098205566
    10. '```' → logprob: -7.613099098205566

Token 358: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004883344518020749
    2. ' B' → logprob: -7.62548828125
    3. ' la' → logprob: -15.62548828125
    4. 'b' → logprob: -17.75048828125
    5. ' ' → logprob: -18.00048828125
    6. 'la' → logprob: -18.00048828125
    7. 'the' → logprob: -18.25048828125
    8. '	B' → logprob: -18.50048828125
    9. 'l' → logprob: -18.62548828125
    10. '```' → logprob: -18.75048828125

Token 359: ' liste' (ID: 31719)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.4391956685576588e-05
    2. ' B' → logprob: -10.625024795532227
    3. 'list' → logprob: -19.750024795532227
    4. 'b' → logprob: -20.125024795532227
    5. '`' → logprob: -20.125024795532227
    6. '```' → logprob: -20.250024795532227
    7. '#' → logprob: -20.875024795532227
    8. '	B' → logprob: -21.250024795532227
    9. '   ' → logprob: -21.625024795532227
    10. ' ' → logprob: -21.875024795532227

Token 360: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.494741632603109e-05
    2. ' B' → logprob: -9.37508487701416
    3. '`' → logprob: -19.250085830688477
    4. '```' → logprob: -19.750085830688477
    5. 'b' → logprob: -20.000085830688477
    6. '(B' → logprob: -20.625085830688477
    7. '   ' → logprob: -20.625085830688477
    8. '(' → logprob: -20.875085830688477
    9. '	B' → logprob: -21.000085830688477
    10. ' ' → logprob: -21.000085830688477

Token 361: '.
' (ID: 558)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0037466296926140785
    2. '.' → logprob: -5.878746509552002
    3. 'B' → logprob: -7.503746509552002
    4. '       ' → logprob: -8.37874698638916
    5. ' .' → logprob: -9.37874698638916
    6. '   ' → logprob: -9.87874698638916
    7. '.B' → logprob: -11.50374698638916
    8. '```' → logprob: -12.00374698638916
    9. ' B' → logprob: -13.25374698638916
    10. '           ' → logprob: -13.75374698638916

Token 362: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07120303809642792
    2. '       ' → logprob: -3.0712029933929443
    3. ' B' → logprob: -3.8212029933929443
    4. '   ' → logprob: -7.696203231811523
    5. ' ' → logprob: -13.321203231811523
    6. '           ' → logprob: -13.946203231811523
    7. '	B' → logprob: -13.946203231811523
    8. '      ' → logprob: -14.321203231811523
    9. '        ' → logprob: -14.571203231811523
    10. '  ' → logprob: -14.696203231811523

Token 363: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -2.4391956685576588e-05
    2. ' B' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '       ' → logprob: -19.750024795532227
    5. '	B' → logprob: -20.000024795532227
    6. '```' → logprob: -21.125024795532227
    7. 'b' → logprob: -21.500024795532227
    8. ' ' → logprob: -21.750024795532227
    9. '  ' → logprob: -22.375024795532227
    10. '_B' → logprob: -22.500024795532227

Token 364: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.541112427134067e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -14.875075340270996
    4. '.app' → logprob: -16.375076293945312
    5. '.add' → logprob: -17.250076293945312
    6. '.extend' → logprob: -18.250076293945312
    7. '.ap' → logprob: -18.750076293945312
    8. '.push' → logprob: -19.875076293945312
    9. '.Append' → logprob: -20.000076293945312
    10. '.setdefault' → logprob: -20.125076293945312

Token 365: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. ' (' → logprob: -19.5
    4. '(
' → logprob: -20.5
    5. 'i' → logprob: -20.625
    6. '(I' → logprob: -20.875
    7. ')' → logprob: -22.875
    8. '(ii' → logprob: -23.375
    9. '[i' → logprob: -23.5
    10. ',i' → logprob: -23.75

Token 366: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7372048862162046e-05
    2. ')i' → logprob: -10.625027656555176
    3. ' )' → logprob: -13.750027656555176
    4. ')
' → logprob: -13.750027656555176
    5. '[i' → logprob: -14.625027656555176
    6. '   ' → logprob: -15.625027656555176
    7. ')`' → logprob: -16.00002670288086
    8. '))' → logprob: -16.87502670288086
    9. '(i' → logprob: -17.62502670288086
    10. ')}' → logprob: -18.00002670288086

Token 367: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021048612892627716
    2. 'from' → logprob: -3.8960485458374023
    3. 'import' → logprob: -8.271048545837402
    4. ' for' → logprob: -8.771048545837402
    5. '#' → logprob: -9.896048545837402
    6. '```' → logprob: -10.271048545837402
    7. '
' → logprob: -13.021048545837402
    8. 'R' → logprob: -13.271048545837402
    9. 'n' → logprob: -13.396048545837402
    10. ' from' → logprob: -13.771048545837402

Token 368: ' Convert' (ID: 15629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004146661143749952
    2. 'from' → logprob: -5.504146575927734
    3. 'import' → logprob: -9.629146575927734
    4. ' for' → logprob: -13.754146575927734
    5. '#' → logprob: -13.879146575927734
    6. 'len' → logprob: -15.754146575927734
    7. 'l' → logprob: -16.129146575927734
    8. 'def' → logprob: -16.254146575927734
    9. 'length' → logprob: -17.254146575927734
    10. '```' → logprob: -17.504146575927734

Token 369: 'it' (ID: 278)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2390609085559845
    2. 'for' → logprob: -1.739060878753662
    3. 'import' → logprob: -3.614060878753662
    4. ' from' → logprob: -5.489060878753662
    5. 'R' → logprob: -6.239060878753662
    6. ' for' → logprob: -6.239060878753662
    7. ' R' → logprob: -7.614060878753662
    8. 'er' → logprob: -7.614060878753662
    9. '#' → logprob: -9.11406135559082
    10. 's' → logprob: -9.23906135559082

Token 370: ' la' (ID: 557)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1534597873687744
    2. 'len' → logprob: -1.1534597873687744
    3. 'R' → logprob: -2.2784597873687744
    4. 'import' → logprob: -2.4034597873687744
    5. ' R' → logprob: -2.9034597873687744
    6. '(R' → logprob: -3.0284597873687744
    7. '```' → logprob: -4.403459548950195
    8. 'range' → logprob: -4.528459548950195
    9. 'for' → logprob: -4.653459548950195
    10. '(len' → logprob: -5.153459548950195

Token 371: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.44289493560791016
    2. 'R' → logprob: -1.4428949356079102
    3. 'from' → logprob: -3.06789493560791
    4. 'import' → logprob: -3.44289493560791
    5. 'for' → logprob: -4.31789493560791
    6. 'set' → logprob: -4.81789493560791
    7. 'length' → logprob: -5.31789493560791
    8. '#' → logprob: -5.56789493560791
    9. 'def' → logprob: -6.31789493560791
    10. 'it' → logprob: -6.56789493560791

Token 372: ' B' (ID: 418)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12958648800849915
    2. '(R' → logprob: -2.5045864582061768
    3. 'import' → logprob: -4.629586696624756
    4. 'from' → logprob: -4.629586696624756
    5. ' R' → logprob: -4.754586696624756
    6. 's' → logprob: -5.129586696624756
    7. '```' → logprob: -7.004586696624756
    8. 'de' → logprob: -7.254586696624756
    9. 'S' → logprob: -7.379586696624756
    10. 'for' → logprob: -7.504586696624756

Token 373: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1238147020339966
    2. '=' → logprob: -1.2488147020339966
    3. '.sort' → logprob: -1.8738147020339966
    4. '=set' → logprob: -1.8738147020339966
    5. 'set' → logprob: -3.248814582824707
    6. ')' → logprob: -4.873814582824707
    7. ',' → logprob: -4.998814582824707
    8. '=list' → logprob: -5.623814582824707
    9. 'B' → logprob: -5.623814582824707
    10. 'sort' → logprob: -5.998814582824707

Token 374: ' un' (ID: 537)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.010262882336974144
    2. 'sorted' → logprob: -5.760262966156006
    3. ' set' → logprob: -5.885262966156006
    4. 'un' → logprob: -5.885262966156006
    5. 'une' → logprob: -7.010262966156006
    6. 'list' → logprob: -8.135262489318848
    7. 'tuple' → logprob: -9.135262489318848
    8. 'ensemble' → logprob: -10.510262489318848
    9. 'a' → logprob: -10.635262489318848
    10. 'deque' → logprob: -10.760262489318848

Token 375: ' ensemble' (ID: 33081)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0013489264529198408
    2. ' set' → logprob: -6.626348972320557
    3. 'sorted' → logprob: -10.876348495483398
    4. 'ensemble' → logprob: -14.126348495483398
    5. 's' → logprob: -14.376348495483398
    6. 'tuple' → logprob: -14.751348495483398
    7. 'deque' → logprob: -15.376348495483398
    8. '_set' → logprob: -15.376348495483398
    9. '=set' → logprob: -15.501348495483398
    10. 'list' → logprob: -15.626348495483398

Token 376: ' pour' (ID: 1930)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011856287717819214
    2. ' =' → logprob: -5.0118560791015625
    3. 'b' → logprob: -5.8868560791015625
    4. 'set' → logprob: -6.5118560791015625
    5. ' B' → logprob: -7.8868560791015625
    6. '(B' → logprob: -8.761856079101562
    7. '=' → logprob: -9.136856079101562
    8. 's' → logprob: -9.761856079101562
    9. '=set' → logprob: -10.511856079101562
    10. '()' → logprob: -10.636856079101562

Token 377: ' accél' (ID: 152966)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.2666308879852295
    2. ' une' → logprob: -1.5166308879852295
    3. 'optim' → logprob: -1.8916308879852295
    4. ' faciliter' → logprob: -2.0166308879852295
    5. 'b' → logprob: -2.5166308879852295
    6. 'fac' → logprob: -3.6416308879852295
    7. ' permettre' → logprob: -3.8916308879852295
    8. ' optimiser' → logprob: -4.516631126403809
    9. 'set' → logprob: -4.641631126403809
    10. 'per' → logprob: -4.641631126403809

Token 378: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10065831243991852
    2. 'B' → logprob: -3.350658416748047
    3. 'e' → logprob: -3.475658416748047
    4. 'é' → logprob: -4.975658416748047
    5. '(B' → logprob: -4.975658416748047
    6. 'él' → logprob: -5.225658416748047
    7. 'es' → logprob: -6.600658416748047
    8. 'érer' → logprob: -6.600658416748047
    9. 'el' → logprob: -6.975658416748047
    10. ' B' → logprob: -7.225658416748047

Token 379: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04375529661774635
    2. ' B' → logprob: -3.668755292892456
    3. 'la' → logprob: -4.668755531311035
    4. ' la' → logprob: -5.293755531311035
    5. 'l' → logprob: -7.418755531311035
    6. 'b' → logprob: -7.418755531311035
    7. 'lookup' → logprob: -7.418755531311035
    8. 'set' → logprob: -8.293755531311035
    9. '(B' → logprob: -8.293755531311035
    10. ' sa' → logprob: -9.043755531311035

Token 380: ' recherche' (ID: 24975)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.6112503409385681
    2. 'B' → logprob: -1.111250400543213
    3. 'in' → logprob: -2.986250400543213
    4. 're' → logprob: -3.111250400543213
    5. 'set' → logprob: -4.111250400543213
    6. 'm' → logprob: -5.236250400543213
    7. '#' → logprob: -6.611250400543213
    8. 'membership' → logprob: -6.611250400543213
    9. 'O' → logprob: -6.986250400543213
    10. ' lookup' → logprob: -7.111250400543213

Token 381: ' d' (ID: 272)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0074838148429989815
    2. 'b' → logprob: -5.007483959197998
    3. ' B' → logprob: -7.882483959197998
    4. 'set' → logprob: -8.50748348236084
    5. '(B' → logprob: -9.50748348236084
    6. 's' → logprob: -10.50748348236084
    7. ' =' → logprob: -11.13248348236084
    8. '(b' → logprob: -11.25748348236084
    9. '(set' → logprob: -11.63248348236084
    10. '(' → logprob: -11.63248348236084

Token 382: ''' (ID: 6)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.061133164912462234
    2. 'indices' → logprob: -3.5611331462860107
    3. 'positions' → logprob: -4.43613338470459
    4. ' B' → logprob: -4.81113338470459
    5. 'b' → logprob: -5.68613338470459
    6. ' indices' → logprob: -6.31113338470459
    7. 'i' → logprob: -6.68613338470459
    8. 'élé' → logprob: -7.06113338470459
    9. 'indexes' → logprob: -7.56113338470459
    10. 'la' → logprob: -7.68613338470459

Token 383: 'élé' (ID: 15228)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.1574305146932602
    2. ' indices' → logprob: -2.532430410385132
    3. 'm' → logprob: -3.782430410385132
    4. 'élé' → logprob: -3.782430410385132
    5. ' B' → logprob: -5.407430648803711
    6. 'B' → logprob: -5.532430648803711
    7. 'i' → logprob: -5.782430648803711
    8. 'positions' → logprob: -6.157430648803711
    9. ' membership' → logprob: -6.907430648803711
    10. 'membership' → logprob: -7.032430648803711

Token 384: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.008939769119024277
    2. 'ment' → logprob: -5.008939743041992
    3. 'ts' → logprob: -7.258939743041992
    4. 'ements' → logprob: -7.508939743041992
    5. 'ces' → logprob: -8.008939743041992
    6. 'nements' → logprob: -8.133939743041992
    7. 't' → logprob: -9.883939743041992
    8. 'b' → logprob: -10.258939743041992
    9. 'r' → logprob: -10.258939743041992
    10. 'm' → logprob: -10.383939743041992

Token 385: '.
' (ID: 558)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019472026033326983
    2. 'b' → logprob: -6.376947402954102
    3. 'set' → logprob: -8.501947402954102
    4. ' B' → logprob: -10.501947402954102
    5. 's' → logprob: -12.376947402954102
    6. '_set' → logprob: -13.501947402954102
    7. '_b' → logprob: -13.626947402954102
    8. '_B' → logprob: -13.876947402954102
    9. 'Set' → logprob: -14.126947402954102
    10. ' =' → logprob: -14.251947402954102

Token 386: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0020993489306420088
    2. 'b' → logprob: -6.627099514007568
    3. 'set' → logprob: -7.377099514007568
    4. ' B' → logprob: -9.50209903717041
    5. 's' → logprob: -10.62709903717041
    6. 'Bs' → logprob: -10.75209903717041
    7. 'Set' → logprob: -11.62709903717041
    8. 'S' → logprob: -12.37709903717041
    9. 'sb' → logprob: -13.25209903717041
    10. 'bs' → logprob: -13.37709903717041

Token 387: ' Les' (ID: 7029)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007528193295001984
    2. 'b' → logprob: -5.382528305053711
    3. 'set' → logprob: -6.007528305053711
    4. 's' → logprob: -9.132528305053711
    5. ' B' → logprob: -9.257528305053711
    6. 'Bs' → logprob: -9.757528305053711
    7. 'Set' → logprob: -10.632528305053711
    8. 'bs' → logprob: -11.007528305053711
    9. 'BB' → logprob: -11.007528305053711
    10. 'sb' → logprob: -11.132528305053711

Token 388: ' ensembles' (ID: 144172)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16201798617839813
    2. ' B' → logprob: -1.9120179414749146
    3. 'b' → logprob: -6.662017822265625
    4. 'set' → logprob: -8.537017822265625
    5. ' b' → logprob: -9.162017822265625
    6. 's' → logprob: -9.662017822265625
    7. ' set' → logprob: -10.162017822265625
    8. '_B' → logprob: -10.287017822265625
    9. '#' → logprob: -12.099517822265625
    10. ' s' → logprob: -12.224517822265625

Token 389: ' permettent' (ID: 62922)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06633199006319046
    2. ' =' → logprob: -2.9413321018218994
    3. '=' → logprob: -6.31633186340332
    4. 's' → logprob: -6.44133186340332
    5. '_B' → logprob: -6.44133186340332
    6. ' (' → logprob: -6.56633186340332
    7. '(B' → logprob: -6.56633186340332
    8. ' B' → logprob: -6.94133186340332
    9. ')' → logprob: -6.94133186340332
    10. 'b' → logprob: -7.69133186340332

Token 390: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.29134103655815125
    2. 'des' → logprob: -2.2913410663604736
    3. ' une' → logprob: -2.4163410663604736
    4. 'd' → logprob: -3.1663410663604736
    5. 'de' → logprob: -4.2913408279418945
    6. 'un' → logprob: -5.6663408279418945
    7. ' des' → logprob: -6.7913408279418945
    8. '#' → logprob: -8.166340827941895
    9. ' d' → logprob: -8.291340827941895
    10. 'una' → logprob: -8.416340827941895

Token 391: ' recherches' (ID: 93304)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.2663658559322357
    2. ' recherches' → logprob: -2.1413657665252686
    3. 'temps' → logprob: -3.0163657665252686
    4. 'tests' → logprob: -3.5163657665252686
    5. ' opérations' → logprob: -4.766366004943848
    6. 'op' → logprob: -4.891366004943848
    7. ' tests' → logprob: -5.266366004943848
    8. 'rech' → logprob: -5.766366004943848
    9. 'lookup' → logprob: -5.891366004943848
    10. ' temps' → logprob: -6.016366004943848

Token 392: ' plus' (ID: 2932)
  Prédit: ' rapides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapides' → logprob: -0.8247520923614502
    2. ' en' → logprob: -1.6997520923614502
    3. 'en' → logprob: -1.8247520923614502
    4. ' plus' → logprob: -2.32475209236145
    5. 'plus' → logprob: -3.32475209236145
    6. 'rap' → logprob: -3.57475209236145
    7. 'O' → logprob: -3.82475209236145
    8. ' beaucoup' → logprob: -4.199751853942871
    9. ' O' → logprob: -4.824751853942871
    10. ' d' → logprob: -6.324751853942871

Token 393: ' rapides' (ID: 163697)
  Prédit: 'rap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rap' → logprob: -0.0060072410851716995
    2. ' rapides' → logprob: -5.131007194519043
    3. 'rapid' → logprob: -9.631007194519043
    4. 'perform' → logprob: -12.631007194519043
    5. 'optim' → logprob: -13.256007194519043
    6. ' rapide' → logprob: -13.506007194519043
    7. ' efficaces' → logprob: -13.631007194519043
    8. '#' → logprob: -14.006007194519043
    9. 'import' → logprob: -14.256007194519043
    10. ' rápidas' → logprob: -14.506007194519043

Token 394: ' que' (ID: 661)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.025590578094124794
    2. 'b' → logprob: -3.775590658187866
    3. ' B' → logprob: -6.275590419769287
    4. ' =' → logprob: -9.150590896606445
    5. '(B' → logprob: -9.525590896606445
    6. '_b' → logprob: -10.150590896606445
    7. 's' → logprob: -10.275590896606445
    8. ' b' → logprob: -10.275590896606445
    9. '(b' → logprob: -10.650590896606445
    10. ',' → logprob: -10.650590896606445

Token 395: ' les' (ID: 1341)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9254171848297119
    2. 'les' → logprob: -1.550417184829712
    3. 'list' → logprob: -1.550417184829712
    4. 'la' → logprob: -2.425417184829712
    5. 'lists' → logprob: -3.050417184829712
    6. ' des' → logprob: -4.300416946411133
    7. 'liste' → logprob: -4.300416946411133
    8. 'une' → logprob: -5.300416946411133
    9. 'B' → logprob: -5.550416946411133
    10. ' B' → logprob: -6.300416946411133

Token 396: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004117938689887524
    2. ' listes' → logprob: -5.879117965698242
    3. 'liste' → logprob: -7.254117965698242
    4. 'lists' → logprob: -8.129117965698242
    5. 'listas' → logprob: -8.504117965698242
    6. 'List' → logprob: -10.129117965698242
    7. 'li' → logprob: -10.754117965698242
    8. '#' → logprob: -11.004117965698242
    9. ' list' → logprob: -11.504117965698242
    10. 'l' → logprob: -12.004117965698242

Token 397: ' via' (ID: 4493)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012512121349573135
    2. 'b' → logprob: -4.51251220703125
    3. ' B' → logprob: -6.76251220703125
    4. 'set' → logprob: -9.26251220703125
    5. '_b' → logprob: -9.51251220703125
    6. '_B' → logprob: -10.63751220703125
    7. '#' → logprob: -10.76251220703125
    8. ' =' → logprob: -10.76251220703125
    9. 's' → logprob: -10.88751220703125
    10. ' b' → logprob: -11.76251220703125

Token 398: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7023599147796631
    2. 'la' → logprob: -1.702359914779663
    3. ' B' → logprob: -2.327359914779663
    4. ' la' → logprob: -2.827359914779663
    5. '#' → logprob: -3.452359914779663
    6. 'une' → logprob: -3.577359914779663
    7. 'l' → logprob: -3.952359914779663
    8. 'O' → logprob: -3.952359914779663
    9. 'des' → logprob: -4.202360153198242
    10. ' O' → logprob: -4.702360153198242

Token 399: ''op' (ID: 70747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5945814251899719
    2. ''op' → logprob: -1.8445813655853271
    3. ''ensemble' → logprob: -2.719581365585327
    4. 'e' → logprob: -2.844581365585327
    5. 'es' → logprob: -2.969581365585327
    6. ''utilisation' → logprob: -3.469581365585327
    7. 'set' → logprob: -3.469581365585327
    8. ''en' → logprob: -4.594581604003906
    9. 'in' → logprob: -4.844581604003906
    10. ''' → logprob: -5.344581604003906

Token 400: 'érateur' (ID: 108528)
  Prédit: 'tim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tim' → logprob: -0.12142930924892426
    2. 't' → logprob: -2.371429204940796
    3. 'set' → logprob: -4.621429443359375
    4. 'er' → logprob: -5.371429443359375
    5. 'ti' → logprob: -5.746429443359375
    6. '```' → logprob: -7.871429443359375
    7. 'erset' → logprob: -7.871429443359375
    8. 'in' → logprob: -7.996429443359375
    9. '#set' → logprob: -7.996429443359375
    10. '=set' → logprob: -8.496429443359375

Token 401: ' '' (ID: 461)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.027222296223044395
    2. ' in' → logprob: -3.6522223949432373
    3. '"in' → logprob: -8.027222633361816
    4. '`' → logprob: -8.777222633361816
    5. ' ' → logprob: -8.777222633361816
    6. ''in' → logprob: -8.777222633361816
    7. ' `' → logprob: -9.402222633361816
    8. ' "' → logprob: -10.652222633361816
    9. '```' → logprob: -12.277222633361816
    10. ' '' → logprob: -12.277222633361816

Token 402: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0006579888286069036
    2. ' in' → logprob: -7.37565803527832
    3. ''in' → logprob: -10.87565803527832
    4. '"in' → logprob: -11.87565803527832
    5. 'set' → logprob: -13.12565803527832
    6. 'not' → logprob: -13.87565803527832
    7. '`' → logprob: -14.00065803527832
    8. ''' → logprob: -15.37565803527832
    9. '"' → logprob: -15.37565803527832
    10. 'is' → logprob: -15.75065803527832

Token 403: ''.
' (ID: 49980)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6379541158676147
    2. ')' → logprob: -0.7629541158676147
    3. 'b' → logprob: -5.887954235076904
    4. ' B' → logprob: -7.012954235076904
    5. 'set' → logprob: -7.512954235076904
    6. 's' → logprob: -8.637953758239746
    7. '(B' → logprob: -8.762953758239746
    8. ' )' → logprob: -9.137953758239746
    9. '_B' → logprob: -9.387953758239746
    10. '()' → logprob: -9.387953758239746

Token 404: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0010887817479670048
    2. 'set' → logprob: -7.251088619232178
    3. 'b' → logprob: -8.001089096069336
    4. 's' → logprob: -11.376089096069336
    5. 'Bs' → logprob: -11.626089096069336
    6. ' B' → logprob: -11.751089096069336
    7. 'Set' → logprob: -12.876089096069336
    8. 'BS' → logprob: -13.251089096069336
    9. '```' → logprob: -13.376089096069336
    10. 'S' → logprob: -13.626089096069336

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5069325566291809
    2. '=' → logprob: -1.0069324970245361
    3. '=set' → logprob: -3.631932497024536
    4. '_set' → logprob: -5.256932735443115
    5. 'set' → logprob: -7.506932735443115
    6. 's' → logprob: -10.131932258605957
    7. 'Set' → logprob: -10.881932258605957
    8. '_sets' → logprob: -11.506932258605957
    9. 'et' → logprob: -11.631932258605957
    10. '=B' → logprob: -12.381932258605957

Token 406: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0031777136027812958
    2. ' set' → logprob: -5.753177642822266
    3. '	set' → logprob: -18.003177642822266
    4. '(set' → logprob: -18.878177642822266
    5. '=set' → logprob: -19.628177642822266
    6. 's' → logprob: -20.128177642822266
    7. 'se' → logprob: -21.128177642822266
    8. ')set' → logprob: -21.503177642822266
    9. ' ' → logprob: -21.753177642822266
    10. '{' → logprob: -21.878177642822266

Token 407: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.1756367712223437e-05
    2. 'B' → logprob: -12.000011444091797
    3. '(' → logprob: -12.500011444091797
    4. '(S' → logprob: -14.000011444091797
    5. '(b' → logprob: -14.500011444091797
    6. '([' → logprob: -16.250011444091797
    7. '((' → logprob: -16.750011444091797
    8. ' (' → logprob: -16.875011444091797
    9. '(
' → logprob: -16.875011444091797
    10. ')' → logprob: -17.125011444091797

Token 408: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -17.125001907348633
    4. ')
' → logprob: -17.125001907348633
    5. ')

' → logprob: -18.500001907348633
    6. ')}' → logprob: -19.000001907348633
    7. '())' → logprob: -19.125001907348633
    8. ')`' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.250001907348633
    10. '),' → logprob: -19.875001907348633

Token 409: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012654215970542282
    2. 'from' → logprob: -9.000126838684082
    3. ' for' → logprob: -13.750126838684082
    4. '```' → logprob: -13.750126838684082
    5. 'import' → logprob: -14.000126838684082
    6. '#' → logprob: -16.000125885009766
    7. '   ' → logprob: -18.250125885009766
    8. '
' → logprob: -18.375125885009766
    9. '	for' → logprob: -18.375125885009766
    10. '  
' → logprob: -20.875125885009766

Token 410: ' Cal' (ID: 4453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01846456341445446
    2. 'from' → logprob: -4.0184645652771
    3. 'import' → logprob: -8.268464088439941
    4. '#' → logprob: -9.768464088439941
    5. ' for' → logprob: -14.518464088439941
    6. 'def' → logprob: -16.018465042114258
    7. '```' → logprob: -16.018465042114258
    8. 'length' → logprob: -16.768465042114258
    9. 'l' → logprob: -17.643465042114258
    10. ' from' → logprob: -18.143465042114258

Token 411: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.6012178659439087
    2. 'for' → logprob: -1.6012178659439087
    3. 'c' → logprob: -2.351217746734619
    4. 'cule' → logprob: -2.351217746734619
    5. 'culate' → logprob: -3.601217746734619
    6. '#' → logprob: -3.976217746734619
    7. ' for' → logprob: -5.351217746734619
    8. '```' → logprob: -5.851217746734619
    9. 'cules' → logprob: -6.101217746734619
    10. '``' → logprob: -6.976217746734619

Token 412: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0496659018099308
    2. ' for' → logprob: -3.299665927886963
    3. 'len' → logprob: -5.299665927886963
    4. '(len' → logprob: -5.299665927886963
    5. ' len' → logprob: -7.174665927886963
    6. 'from' → logprob: -9.049665451049805
    7. '(' → logprob: -9.174665451049805
    8. '#' → logprob: -9.424665451049805
    9. 'le' → logprob: -9.424665451049805
    10. 'import' → logprob: -9.924665451049805

Token 413: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13647276163101196
    2. 'from' → logprob: -2.261472702026367
    3. 'len' → logprob: -4.136472702026367
    4. 'import' → logprob: -5.886472702026367
    5. 'length' → logprob: -6.261472702026367
    6. 'long' → logprob: -6.761472702026367
    7. ' for' → logprob: -7.386472702026367
    8. '#' → logprob: -7.761472702026367
    9. 'leng' → logprob: -8.886472702026367
    10. ' from' → logprob: -9.386472702026367

Token 414: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.381656676530838
    2. ' de' → logprob: -2.3816566467285156
    3. ' for' → logprob: -2.3816566467285156
    4. ' total' → logprob: -3.1316566467285156
    5. 'total' → logprob: -3.7566566467285156
    6. ' des' → logprob: -4.131656646728516
    7. '_' → logprob: -4.381656646728516
    8. ' d' → logprob: -5.131656646728516
    9. '_total' → logprob: -5.256656646728516
    10. '#' → logprob: -5.381656646728516

Token 415: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05288509652018547
    2. 'de' → logprob: -3.802885055541992
    3. '#' → logprob: -4.552885055541992
    4. ' for' → logprob: -5.552885055541992
    5. ' de' → logprob: -5.677885055541992
    6. '=' → logprob: -5.927885055541992
    7. 'R' → logprob: -6.427885055541992
    8. 'pour' → logprob: -6.802885055541992
    9. 'des' → logprob: -6.927885055541992
    10. ' =' → logprob: -7.177885055541992

Token 416: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2854139804840088
    2. 'R' → logprob: -1.7854139804840088
    3. 'e' → logprob: -1.9104139804840088
    4. ' R' → logprob: -2.410413980484009
    5. ' trip' → logprob: -2.785413980484009
    6. ' for' → logprob: -2.910413980484009
    7. 'a' → logprob: -3.285413980484009
    8. 'len' → logprob: -3.410413980484009
    9. '#' → logprob: -3.535413980484009
    10. 'i' → logprob: -3.910413980484009

Token 417: 'indices' (ID: 30992)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.5545272827148438
    2. 'R' → logprob: -1.1795272827148438
    3. 'comb' → logprob: -2.8045272827148438
    4. 'com' → logprob: -3.3045272827148438
    5. 'len' → logprob: -5.179527282714844
    6. 'tr' → logprob: -6.054527282714844
    7. 'élé' → logprob: -6.554527282714844
    8. 'for' → logprob: -6.804527282714844
    9. 'tri' → logprob: -6.804527282714844
    10. 'tro' → logprob: -7.429527282714844

Token 418: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.341743528842926
    2. ' for' → logprob: -1.4667434692382812
    3. 'R' → logprob: -3.5917434692382812
    4. ' R' → logprob: -3.9667434692382812
    5. ' pour' → logprob: -6.591743469238281
    6. ' len' → logprob: -6.591743469238281
    7. 'pour' → logprob: -6.716743469238281
    8. '#' → logprob: -6.716743469238281
    9. ' de' → logprob: -6.966743469238281
    10. 'len' → logprob: -7.091743469238281

Token 419: ' type' (ID: 1490)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0006777655798941851
    2. 'S' → logprob: -7.500677585601807
    3. ' R' → logprob: -9.500678062438965
    4. 'G' → logprob: -10.750678062438965
    5. 'B' → logprob: -12.250678062438965
    6. 'la' → logprob: -12.375678062438965
    7. 'l' → logprob: -13.250678062438965
    8. '```' → logprob: -13.500678062438965
    9. 's' → logprob: -13.750678062438965
    10. '#' → logprob: -13.750678062438965

Token 420: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.000824156915768981
    2. ''' → logprob: -7.625823974609375
    3. ' R' → logprob: -8.375823974609375
    4. 'S' → logprob: -10.250823974609375
    5. '"' → logprob: -10.250823974609375
    6. 'G' → logprob: -11.750823974609375
    7. '`' → logprob: -13.000823974609375
    8. 'B' → logprob: -13.063323974609375
    9. ' '' → logprob: -13.438323974609375
    10. 's' → logprob: -13.500823974609375

Token 421: 'B' (ID: 33)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -8.268254896393046e-05
    2. ''' → logprob: -10.500082969665527
    3. ' R' → logprob: -10.875082969665527
    4. 'G' → logprob: -11.250082969665527
    5. 'B' → logprob: -11.750082969665527
    6. 'S' → logprob: -12.375082969665527
    7. '```' → logprob: -13.625082969665527
    8. 'r' → logprob: -13.875082969665527
    9. '"' → logprob: -13.937582969665527
    10. '`' → logprob: -14.375082969665527

Token 422: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2301267385482788
    2. 'for' → logprob: -2.8551268577575684
    3. '()' → logprob: -2.9801268577575684
    4. ' )' → logprob: -3.8551268577575684
    5. 'R' → logprob: -4.355126857757568
    6. '+' → logprob: -5.105126857757568
    7. '#' → logprob: -5.105126857757568
    8. '<|end|>' → logprob: -5.105126857757568
    9. ' for' → logprob: -5.230126857757568
    10. '.' → logprob: -5.605126857757568

Token 423: ' en' (ID: 469)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5222755074501038
    2. 'b' → logprob: -1.147275447845459
    3. 'len' → logprob: -3.147275447845459
    4. 'cnt' → logprob: -3.897275447845459
    5. 'count' → logprob: -4.522275447845459
    6. 'length' → logprob: -5.147275447845459
    7. 'n' → logprob: -6.022275447845459
    8. ' =' → logprob: -6.522275447845459
    9. 'nb' → logprob: -6.772275447845459
    10. 'for' → logprob: -7.022275447845459

Token 424: ' utilisant' (ID: 92474)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01438455656170845
    2. ' len' → logprob: -4.514384746551514
    3. 'B' → logprob: -7.014384746551514
    4. 'range' → logprob: -7.139384746551514
    5. 'N' → logprob: -7.764384746551514
    6. '[len' → logprob: -8.139384269714355
    7. ' B' → logprob: -8.764384269714355
    8. ' N' → logprob: -8.764384269714355
    9. ' range' → logprob: -9.014384269714355
    10. 'cnt' → logprob: -9.014384269714355

Token 425: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003088871017098427
    2. ' len' → logprob: -8.125308990478516
    3. '```' → logprob: -12.250308990478516
    4. '(len' → logprob: -13.500308990478516
    5. '   ' → logprob: -13.750308990478516
    6. '[len' → logprob: -14.000308990478516
    7. '=len' → logprob: -14.000308990478516
    8. 'N' → logprob: -14.125308990478516
    9. 'B' → logprob: -14.500308990478516
    10. '	len' → logprob: -15.250308990478516

Token 426: ' fonction' (ID: 17610)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8624639324116288e-06
    2. ' len' → logprob: -14.250001907348633
    3. '```' → logprob: -14.375001907348633
    4. 'length' → logprob: -14.750001907348633
    5. '[len' → logprob: -16.500001907348633
    6. 'sum' → logprob: -17.000001907348633
    7. '=len' → logprob: -17.625001907348633
    8. 'le' → logprob: -17.625001907348633
    9. '	len' → logprob: -18.125001907348633
    10. 'leng' → logprob: -18.375001907348633

Token 427: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.896309739408025e-07
    2. ' len' → logprob: -14.125000953674316
    3. 'sum' → logprob: -17.625
    4. '=len' → logprob: -18.75
    5. '(len' → logprob: -18.875
    6. 'min' → logprob: -19.5
    7. 'range' → logprob: -19.625
    8. '	len' → logprob: -20.5
    9. '[len' → logprob: -20.75
    10. 'print' → logprob: -21.125

Token 428: '()' (ID: 416)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12752726674079895
    2. '_B' → logprob: -2.3775272369384766
    3. '(B' → logprob: -4.252527236938477
    4. '_b' → logprob: -4.752527236938477
    5. 'b' → logprob: -6.002527236938477
    6. 'len' → logprob: -7.627527236938477
    7. '_len' → logprob: -7.627527236938477
    8. 's' → logprob: -8.377527236938477
    9. 'S' → logprob: -9.627527236938477
    10. '_' → logprob: -9.877527236938477

Token 429: ' sur' (ID: 1512)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24566568434238434
    2. 'len' → logprob: -1.8706656694412231
    3. 'total' → logprob: -3.1206657886505127
    4. 'M' → logprob: -4.620665550231934
    5. 'B' → logprob: -6.245665550231934
    6. 'n' → logprob: -6.245665550231934
    7. 'nb' → logprob: -6.370665550231934
    8. 'm' → logprob: -6.995665550231934
    9. 'count' → logprob: -7.370665550231934
    10. 'cnt' → logprob: -7.495665550231934

Token 430: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003202114312443882
    2. '(B' → logprob: -8.750320434570312
    3. ' B' → logprob: -9.000320434570312
    4. 'l' → logprob: -10.750320434570312
    5. 'la' → logprob: -11.500320434570312
    6. 'S' → logprob: -12.375320434570312
    7. 'le' → logprob: -14.500320434570312
    8. ' la' → logprob: -14.750320434570312
    9. 'the' → logprob: -15.250320434570312
    10. '_B' → logprob: -15.375320434570312

Token 431: ''ensemble' (ID: 79341)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00038932388997636735
    2. ' B' → logprob: -7.875389099121094
    3. '`' → logprob: -12.875389099121094
    4. '(B' → logprob: -13.125389099121094
    5. 's' → logprob: -14.000389099121094
    6. '_B' → logprob: -14.250389099121094
    7. '#' → logprob: -14.500389099121094
    8. ')' → logprob: -14.875389099121094
    9. 'S' → logprob: -15.250389099121094
    10. '```' → logprob: -15.250389099121094

Token 432: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.21252700686454773
    2. 'b' → logprob: -1.7125270366668701
    3. '_b' → logprob: -5.837526798248291
    4. '(B' → logprob: -5.962526798248291
    5. 'total' → logprob: -6.712526798248291
    6. 'len' → logprob: -6.962526798248291
    7. '_B' → logprob: -7.087526798248291
    8. 'for' → logprob: -8.08752727508545
    9. 'n' → logprob: -8.08752727508545
    10. '#' → logprob: -8.21252727508545

Token 433: ',
' (ID: 412)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2577110826969147
    2. 'len' → logprob: -2.382711172103882
    3. 'total' → logprob: -2.382711172103882
    4. 'B' → logprob: -3.757711172103882
    5. 'M' → logprob: -5.007710933685303
    6. 'nb' → logprob: -5.882710933685303
    7. 'count' → logprob: -6.257710933685303
    8. 'n' → logprob: -6.632710933685303
    9. 'length' → logprob: -7.007710933685303
    10. 'cnt' → logprob: -7.257710933685303

Token 434: '#' (ID: 2)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2669681310653687
    2. '#' → logprob: -1.7669681310653687
    3. 'for' → logprob: -2.141968250274658
    4. 'b' → logprob: -2.141968250274658
    5. 'M' → logprob: -2.391968250274658
    6. 'total' → logprob: -2.391968250274658
    7. 'Rb' → logprob: -3.641968250274658
    8. 'n' → logprob: -4.141968250274658
    9. 'R' → logprob: -4.516968250274658
    10. 'B' → logprob: -4.516968250274658

Token 435: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.647632896900177
    2. 'len' → logprob: -1.5226328372955322
    3. 'total' → logprob: -2.0226328372955322
    4. 'for' → logprob: -3.1476328372955322
    5. 'max' → logprob: -4.147633075714111
    6. 'b' → logprob: -4.397633075714111
    7. 'M' → logprob: -4.522633075714111
    8. 'B' → logprob: -4.522633075714111
    9. 'n' → logprob: -5.272633075714111
    10. 'l' → logprob: -5.897633075714111

Token 436: ' stock' (ID: 6546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08442751318216324
    2. '#' → logprob: -3.20942759513855
    3. 'continue' → logprob: -4.459427356719971
    4. ' for' → logprob: -4.459427356719971
    5. 'len' → logprob: -5.334427356719971
    6. 'range' → logprob: -5.709427356719971
    7. ' multipl' → logprob: -6.334427356719971
    8. 'pour' → logprob: -6.834427356719971
    9. 'def' → logprob: -7.209427356719971
    10. '
' → logprob: -7.584427356719971

Token 437: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.8624639324116288e-06
    2. 'é' → logprob: -13.500001907348633
    3. 'ue' → logprob: -15.875001907348633
    4. 'er' → logprob: -16.375001907348633
    5. 'age' → logprob: -16.500001907348633
    6. 'ent' → logprob: -16.625001907348633
    7. 'ant' → logprob: -17.250001907348633
    8. '#' → logprob: -17.625001907348633
    9. 'E' → logprob: -17.750001907348633
    10. 'е' → logprob: -18.500001907348633

Token 438: ' cette' (ID: 7696)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7585510611534119
    2. 'la' → logprob: -1.0085511207580566
    3. ' la' → logprob: -3.2585511207580566
    4. '(len' → logprob: -3.2585511207580566
    5. 'le' → logprob: -3.3835511207580566
    6. ' len' → logprob: -4.008551120758057
    7. 'B' → logprob: -4.508551120758057
    8. 'total' → logprob: -4.633551120758057
    9. 'l' → logprob: -5.258551120758057
    10. ' le' → logprob: -6.008551120758057

Token 439: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2331106960773468
    2. 'result' → logprob: -3.2331106662750244
    3. 'nombre' → logprob: -3.6081106662750244
    4. ' valeur' → logprob: -3.6081106662750244
    5. 'total' → logprob: -3.8581106662750244
    6. ' total' → logprob: -3.9831106662750244
    7. ' result' → logprob: -4.1081109046936035
    8. 'value' → logprob: -4.3581109046936035
    9. ' nombre' → logprob: -4.6081109046936035
    10. ' value' → logprob: -5.3581109046936035

Token 440: ' dans' (ID: 2671)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7991993427276611
    2. 'b' → logprob: -0.7991993427276611
    3. 'len' → logprob: -3.799199342727661
    4. 'total' → logprob: -3.799199342727661
    5. '_b' → logprob: -4.424199104309082
    6. 'n' → logprob: -4.424199104309082
    7. 'N' → logprob: -4.549199104309082
    8. '_B' → logprob: -5.424199104309082
    9. 'Nb' → logprob: -5.549199104309082
    10. 'nb' → logprob: -6.549199104309082

Token 441: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6363226771354675
    2. 'total' → logprob: -1.2613227367401123
    3. 'len' → logprob: -2.1363227367401123
    4. 'nb' → logprob: -3.8863227367401123
    5. 'count' → logprob: -4.636322498321533
    6. 'n' → logprob: -5.261322498321533
    7. 'cnt' → logprob: -5.386322498321533
    8. 'l' → logprob: -5.511322498321533
    9. 'length' → logprob: -5.636322498321533
    10. 'B' → logprob: -5.636322498321533

Token 442: ' variable' (ID: 11076)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.632204532623291
    2. 'total' → logprob: -1.507204532623291
    3. 'len' → logprob: -2.007204532623291
    4. 'nb' → logprob: -3.632204532623291
    5. 'B' → logprob: -4.007204532623291
    6. 'num' → logprob: -5.007204532623291
    7. 'length' → logprob: -5.132204532623291
    8. 'tot' → logprob: -5.132204532623291
    9. 'n' → logprob: -5.257204532623291
    10. 'max' → logprob: -5.257204532623291

Token 443: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0699567794799805
    2. 'total' → logprob: -1.3199567794799805
    3. 'len' → logprob: -2.1949567794799805
    4. 'M' → logprob: -2.8199567794799805
    5. 'B' → logprob: -2.9449567794799805
    6. 'nb' → logprob: -3.4449567794799805
    7. 'm' → logprob: -3.9449567794799805
    8. 'num' → logprob: -4.1949567794799805
    9. 'n' → logprob: -4.4449567794799805
    10. 'cnt' → logprob: -4.4449567794799805

Token 444: '.
' (ID: 558)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0586082749068737
    2. '_count' → logprob: -3.933608293533325
    3. 'len' → logprob: -4.433608055114746
    4. ' =' → logprob: -4.683608055114746
    5. '=len' → logprob: -5.183608055114746
    6. '_cnt' → logprob: -5.433608055114746
    7. '=' → logprob: -6.058608055114746
    8. '_length' → logprob: -6.308608055114746
    9. '_size' → logprob: -7.058608055114746
    10. 'cnt' → logprob: -7.683608055114746

Token 445: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.500000953674316
    3. '```' → logprob: -19.625
    4. '
' → logprob: -20.625
    5. 'len' → logprob: -22.0
    6. '#' → logprob: -23.25
    7. '`' → logprob: -23.25
    8. 'B' → logprob: -23.375
    9. '	b' → logprob: -23.375
    10. '
' → logprob: -23.375

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759468078613281
    2. ' =' → logprob: -0.8259468078613281
    3. '=b' → logprob: -12.700946807861328
    4. '=len' → logprob: -12.950946807861328
    5. ' ' → logprob: -14.200946807861328
    6. ',' → logprob: -14.575946807861328
    7. ' ' → logprob: -15.325946807861328
    8. 'b' → logprob: -15.950946807861328
    9. 's' → logprob: -16.325946807861328
    10. '＝' → logprob: -16.575946807861328

Token 447: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00317783304490149
    2. ' len' → logprob: -5.753177642822266
    3. '(len' → logprob: -16.878177642822266
    4. '	len' → logprob: -18.128177642822266
    5. '[len' → logprob: -19.753177642822266
    6. ' ' → logprob: -20.003177642822266
    7. '  ' → logprob: -20.378177642822266
    8. '=len' → logprob: -20.753177642822266
    9. 'le' → logprob: -21.003177642822266
    10. '   ' → logprob: -21.253177642822266

Token 448: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.180879816180095e-05
    2. '(' → logprob: -9.875051498413086
    3. '(b' → logprob: -15.750051498413086
    4. 'B' → logprob: -16.375051498413086
    5. ' (' → logprob: -18.250051498413086
    6. '(
' → logprob: -18.875051498413086
    7. '(A' → logprob: -19.000051498413086
    8. '(S' → logprob: -19.375051498413086
    9. '((' → logprob: -19.625051498413086
    10. '()' → logprob: -20.125051498413086

Token 449: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')#' → logprob: -16.000001907348633
    5. '))' → logprob: -16.250001907348633
    6. '()' → logprob: -16.750001907348633
    7. ')

' → logprob: -17.625001907348633
    8. ')b' → logprob: -18.000001907348633
    9. '())' → logprob: -18.500001907348633
    10. ')`' → logprob: -18.500001907348633

Token 450: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019389885710552335
    2. 'from' → logprob: -6.876938819885254
    3. '#' → logprob: -7.126938819885254
    4. ' for' → logprob: -10.001938819885254
    5. '```' → logprob: -10.376938819885254
    6. 'import' → logprob: -11.001938819885254
    7. 'i' → logprob: -12.626938819885254
    8. 'def' → logprob: -13.251938819885254
    9. 'R' → logprob: -13.751938819885254
    10. '
' → logprob: -13.876938819885254

Token 451: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0331445187330246
    2. 'from' → logprob: -3.533144474029541
    3. 'import' → logprob: -6.283144474029541
    4. '#' → logprob: -6.658144474029541
    5. 'def' → logprob: -8.5331449508667
    6. 'RG' → logprob: -11.7831449508667
    7. 'R' → logprob: -11.9081449508667
    8. 'if' → logprob: -12.0331449508667
    9. '```' → logprob: -12.2831449508667
    10. 'r' → logprob: -12.7831449508667

Token 452: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24488697946071625
    2. 'r' → logprob: -2.244886875152588
    3. 't' → logprob: -2.994886875152588
    4. 'cle' → logprob: -3.119886875152588
    5. 'cles' → logprob: -4.619886875152588
    6. '#' → logprob: -6.369886875152588
    7. 'i' → logprob: -6.369886875152588
    8. 'n' → logprob: -6.619886875152588
    9. 'c' → logprob: -6.619886875152588
    10. ' for' → logprob: -7.994886875152588

Token 453: ' externe' (ID: 83003)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061983149498701096
    2. ' for' → logprob: -2.811983108520508
    3. 'from' → logprob: -12.311983108520508
    4. '
' → logprob: -13.186983108520508
    5. '#' → logprob: -13.311983108520508
    6. 'R' → logprob: -13.436983108520508
    7. 'r' → logprob: -13.561983108520508
    8. '```' → logprob: -13.561983108520508
    9. 'import' → logprob: -14.686983108520508
    10. '	for' → logprob: -14.811983108520508

Token 454: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015979631280060858
    2. ' for' → logprob: -8.750160217285156
    3. '```' → logprob: -14.375160217285156
    4. 'from' → logprob: -15.250160217285156
    5. 'range' → logprob: -16.375160217285156
    6. 'R' → logprob: -16.375160217285156
    7. '
' → logprob: -16.500160217285156
    8. '#' → logprob: -16.625160217285156
    9. '(' → logprob: -17.500160217285156
    10. 'r' → logprob: -17.625160217285156

Token 455: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.625000953674316
    3. '```' → logprob: -16.875
    4. 'from' → logprob: -17.375
    5. '	for' → logprob: -20.125
    6. '#' → logprob: -20.625
    7. 'i' → logprob: -21.125
    8. 'fo' → logprob: -21.5
    9. 'while' → logprob: -21.625
    10. 'len' → logprob: -21.625

Token 456: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05832033231854439
    2. 'ont' → logprob: -3.5583202838897705
    3. 'ourt' → logprob: -3.8083202838897705
    4. 'er' → logprob: -6.55832052230835
    5. ' for' → logprob: -6.80832052230835
    6. 'r' → logprob: -7.18332052230835
    7. 't' → logprob: -7.55832052230835
    8. 'rt' → logprob: -8.058320045471191
    9. 'ut' → logprob: -8.558320045471191
    10. 'range' → logprob: -8.683320045471191

Token 457: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19156970083713531
    2. 'range' → logprob: -2.6915698051452637
    3. 'R' → logprob: -2.8165698051452637
    4. 'len' → logprob: -3.1915698051452637
    5. ' for' → logprob: -6.191569805145264
    6. 'i' → logprob: -6.316569805145264
    7. 'r' → logprob: -7.191569805145264
    8. ' range' → logprob: -7.816569805145264
    9. ' len' → logprob: -8.691569328308105
    10. '(len' → logprob: -8.941569328308105

Token 458: ' indice' (ID: 90848)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6595342755317688
    2. ' i' → logprob: -0.9095342755317688
    3. ' range' → logprob: -3.659534215927124
    4. 'range' → logprob: -3.909534215927124
    5. 'R' → logprob: -4.534534454345703
    6. 'r' → logprob: -4.659534454345703
    7. 'for' → logprob: -5.159534454345703
    8. ' for' → logprob: -5.284534454345703
    9. ' R' → logprob: -6.409534454345703
    10. ' r' → logprob: -6.784534454345703

Token 459: ' i' (ID: 575)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.312469482421875
    2. 'i' → logprob: -1.312469482421875
    3. 'for' → logprob: -1.437469482421875
    4. ' for' → logprob: -2.187469482421875
    5. ' i' → logprob: -2.937469482421875
    6. 'r' → logprob: -3.312469482421875
    7. ' R' → logprob: -4.062469482421875
    8. ' in' → logprob: -5.937469482421875
    9. 'in' → logprob: -7.437469482421875
    10. 'range' → logprob: -7.562469482421875

Token 460: ' stock' (ID: 6546)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.21740157902240753
    2. ' in' → logprob: -1.7174016237258911
    3. 'for' → logprob: -4.467401504516602
    4. 'R' → logprob: -6.217401504516602
    5. 'dans' → logprob: -6.967401504516602
    6. ' for' → logprob: -7.842401504516602
    7. ' dans' → logprob: -8.467401504516602
    8. 'de' → logprob: -8.842401504516602
    9. ',' → logprob: -8.842401504516602
    10. ' R' → logprob: -9.092401504516602

Token 461: 'é' (ID: 377)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3412124216556549
    2. 'é' → logprob: -2.341212511062622
    3. 'dans' → logprob: -2.466212511062622
    4. ' in' → logprob: -3.216212511062622
    5. 'e' → logprob: -4.716212272644043
    6. '#' → logprob: -4.716212272644043
    7. ' dans' → logprob: -4.716212272644043
    8. 'er' → logprob: -4.966212272644043
    9. 'és' → logprob: -5.466212272644043
    10. 'Dans' → logprob: -5.716212272644043

Token 462: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.030575063079595566
    2. ' in' → logprob: -3.5305750370025635
    3. 'dans' → logprob: -7.905575275421143
    4. 'R' → logprob: -8.905574798583984
    5. ' dans' → logprob: -9.030574798583984
    6. 'for' → logprob: -9.030574798583984
    7. 'en' → logprob: -10.780574798583984
    8. 's' → logprob: -12.030574798583984
    9. 'd' → logprob: -12.155574798583984
    10. '#' → logprob: -12.280574798583984

Token 463: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.127333340875339e-06
    2. 'range' → logprob: -13.125003814697266
    3. ' R' → logprob: -13.500003814697266
    4. 'G' → logprob: -15.250003814697266
    5. 'B' → logprob: -16.250003814697266
    6. '(R' → logprob: -16.750003814697266
    7. '[R' → logprob: -16.750003814697266
    8. 'r' → logprob: -17.000003814697266
    9. '```' → logprob: -17.125003814697266
    10. 'Range' → logprob: -17.375003814697266

Token 464: ' liste' (ID: 31719)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.927930654550437e-05
    2. 'range' → logprob: -11.000029563903809
    3. ' R' → logprob: -12.375029563903809
    4. 'G' → logprob: -12.375029563903809
    5. '[R' → logprob: -14.125029563903809
    6. 'B' → logprob: -14.250029563903809
    7. '(R' → logprob: -15.000029563903809
    8. '```' → logprob: -15.000029563903809
    9. 'S' → logprob: -15.250029563903809
    10. '[' → logprob: -15.500029563903809

Token 465: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.080963092041202e-06
    2. ' R' → logprob: -12.500004768371582
    3. '(R' → logprob: -14.625004768371582
    4. 'range' → logprob: -15.125004768371582
    5. '[R' → logprob: -15.500004768371582
    6. '	R' → logprob: -17.1250057220459
    7. '_R' → logprob: -17.2500057220459
    8. 'G' → logprob: -17.5000057220459
    9. 'Ｒ' → logprob: -17.6250057220459
    10. 'for' → logprob: -17.6250057220459

Token 466: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2791031002998352
    2. ':' → logprob: -1.5291030406951904
    3. ' for' → logprob: -3.6541030406951904
    4. ':
' → logprob: -7.0291032791137695
    5. '.' → logprob: -10.90410327911377
    6. '   ' → logprob: -11.90410327911377
    7. ',' → logprob: -12.77910327911377
    8. '.for' → logprob: -13.15410327911377
    9. ' :' → logprob: -13.52910327911377
    10. 'in' → logprob: -13.90410327911377

Token 467: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021605610847473145
    2. ' for' → logprob: -4.396605491638184
    3. ')' → logprob: -5.146605491638184
    4. '):' → logprob: -5.771605491638184
    5. '):
' → logprob: -10.021605491638184
    6. ':' → logprob: -10.021605491638184
    7. 'R' → logprob: -12.021605491638184
    8. ' )' → logprob: -12.146605491638184
    9. '   ' → logprob: -12.271605491638184
    10. ').' → logprob: -12.646605491638184

Token 468: '.e' (ID: 2560)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2129337638616562
    2. ':' → logprob: -1.7129337787628174
    3. 'for' → logprob: -5.462933540344238
    4. '):
' → logprob: -5.837933540344238
    5. ')' → logprob: -6.212933540344238
    6. ' for' → logprob: -6.587933540344238
    7. ' ):' → logprob: -7.712933540344238
    8. '   ' → logprob: -8.962933540344238
    9. ' :' → logprob: -9.087933540344238
    10. '():' → logprob: -9.712933540344238

Token 469: '.,' (ID: 4213)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05418115854263306
    2. ' for' → logprob: -3.1791810989379883
    3. ')' → logprob: -5.679181098937988
    4. '):
' → logprob: -6.554181098937988
    5. '):' → logprob: -6.554181098937988
    6. '   ' → logprob: -6.804181098937988
    7. 'n' → logprob: -7.429181098937988
    8. ' ' → logprob: -7.429181098937988
    9. 'R' → logprob: -7.554181098937988
    10. ':' → logprob: -7.554181098937988

Token 470: ' positions' (ID: 15897)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.107485830783844
    2. ' R' → logprob: -2.357485771179199
    3. 'for' → logprob: -6.107485771179199
    4. ' range' → logprob: -6.232485771179199
    5. 'range' → logprob: -6.357485771179199
    6. ' for' → logprob: -7.357485771179199
    7. ')' → logprob: -7.732485771179199
    8. ' ' → logprob: -9.1074857711792
    9. '   ' → logprob: -9.6074857711792
    10. '  ' → logprob: -11.3574857711792

Token 471: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35968488454818726
    2. 'for' → logprob: -1.609684944152832
    3. ' for' → logprob: -2.734684944152832
    4. ' in' → logprob: -4.609684944152832
    5. ' )' → logprob: -4.734684944152832
    6. '):' → logprob: -4.734684944152832
    7. 'in' → logprob: -4.984684944152832
    8. '   ' → logprob: -7.484684944152832
    9. ' of' → logprob: -7.734684944152832
    10. '  ' → logprob: -8.484684944152832

Token 472: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0030693374574184418
    2. ' R' → logprob: -6.5030694007873535
    3. 'G' → logprob: -7.5030694007873535
    4. ')' → logprob: -7.7530694007873535
    5. 'S' → logprob: -8.378068923950195
    6. 'range' → logprob: -9.003068923950195
    7. 'B' → logprob: -9.128068923950195
    8. 'i' → logprob: -10.753068923950195
    9. ' range' → logprob: -10.878068923950195
    10. 'for' → logprob: -11.128068923950195

Token 473: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0005535095697268844
    2. ' R' → logprob: -8.000553131103516
    3. ')' → logprob: -9.750553131103516
    4. 'for' → logprob: -10.000553131103516
    5. 'i' → logprob: -10.625553131103516
    6. 'range' → logprob: -11.125553131103516
    7. 'G' → logprob: -11.250553131103516
    8. '"' → logprob: -11.750553131103516
    9. 'indices' → logprob: -12.000553131103516
    10. 'S' → logprob: -12.125553131103516

Token 474: '').
' (ID: 105328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1869376301765442
    2. ')' → logprob: -1.9369375705718994
    3. '):
' → logprob: -4.6869378089904785
    4. ' ):' → logprob: -4.9369378089904785
    5. ''):' → logprob: -4.9369378089904785
    6. '"):' → logprob: -7.6869378089904785
    7. ').' → logprob: -7.9369378089904785
    8. 'for' → logprob: -8.06193733215332
    9. ' )' → logprob: -8.06193733215332
    10. '')' → logprob: -8.18693733215332

Token 475: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.875
    3. '```' → logprob: -18.75
    4. '	for' → logprob: -22.0
    5. 'from' → logprob: -22.625
    6. 'i' → logprob: -23.125
    7. '   ' → logprob: -23.625
    8. '
' → logprob: -24.75
    9. 'while' → logprob: -25.5
    10. '#' → logprob: -26.25

Token 476: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.056949567049741745
    2. ' i' → logprob: -3.1819496154785156
    3. 'r' → logprob: -4.431949615478516
    4. 'R' → logprob: -6.806949615478516
    5. ' r' → logprob: -7.181949615478516
    6. ' R' → logprob: -9.681949615478516
    7. 'ri' → logprob: -11.806949615478516
    8. '_r' → logprob: -12.431949615478516
    9. '	i' → logprob: -12.806949615478516
    10. '_i' → logprob: -12.931949615478516

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34911832213401794
    2. 'in' → logprob: -1.2241183519363403
    3. ' ' → logprob: -7.349118232727051
    4. '  ' → logprob: -10.84911823272705
    5. '	in' → logprob: -13.09911823272705
    6. 'In' → logprob: -13.34911823272705
    7. ' ' → logprob: -13.84911823272705
    8. '_' → logprob: -14.09911823272705
    9. '   ' → logprob: -14.09911823272705
    10. '_in' → logprob: -14.22411823272705

Token 478: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.027204083278775215
    2. ' R' → logprob: -3.6522040367126465
    3. 'range' → logprob: -7.6522040367126465
    4. ' range' → logprob: -7.7772040367126465
    5. ' ' → logprob: -12.402204513549805
    6. 'Range' → logprob: -13.402204513549805
    7. '(R' → logprob: -14.027204513549805
    8. ')' → logprob: -14.652204513549805
    9. '  ' → logprob: -14.777204513549805
    10. '   ' → logprob: -15.027204513549805

Token 479: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004082793369889259
    2. ':
' → logprob: -5.504082679748535
    3. '   ' → logprob: -12.629082679748535
    4. ' :' → logprob: -14.254082679748535
    5. ':
' → logprob: -15.004082679748535
    6. ' :
' → logprob: -17.75408363342285
    7. 'for' → logprob: -17.87908363342285
    8. ' for' → logprob: -18.00408363342285
    9. '+:' → logprob: -18.12908363342285
    10. '):' → logprob: -18.37908363342285

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016212433576583862
    2. ' for' → logprob: -4.516212463378906
    3. '	for' → logprob: -5.641212463378906
    4. 'for' → logprob: -6.516212463378906
    5. '   ' → logprob: -9.266212463378906
    6. '```' → logprob: -11.891212463378906
    7. ' ' → logprob: -12.266212463378906
    8. '   ' → logprob: -12.391212463378906
    9. ',' → logprob: -13.266212463378906
    10. '\t' → logprob: -13.266212463378906

Token 481: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3104343116283417
    2. '   ' → logprob: -1.435434341430664
    3. ' for' → logprob: -3.560434341430664
    4. '#' (adapté à ' #') → logprob: -7.935434341430664
    5. '	for' → logprob: -10.185434341430664
    6. ' ' → logprob: -10.435434341430664
    7. '  ' → logprob: -12.560434341430664
    8. '```' → logprob: -13.310434341430664
    9. ' #' → logprob: -14.310434341430664
    10. '   ' → logprob: -14.560434341430664

Token 482: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037848003557883203
    2. '#' → logprob: -8.500378608703613
    3. '   ' → logprob: -8.750378608703613
    4. ' for' → logprob: -11.125378608703613
    5. 'j' → logprob: -13.500378608703613
    6. '	for' → logprob: -16.250377655029297
    7. ' ' → logprob: -16.375377655029297
    8. 'pass' → logprob: -17.375377655029297
    9. 'inner' → logprob: -17.375377655029297
    10. '  ' → logprob: -17.625377655029297

Token 483: 'cle' (ID: 3170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012742014601826668
    2. 'r' → logprob: -5.262742042541504
    3. 'for' → logprob: -5.262742042541504
    4. 'k' → logprob: -7.512742042541504
    5. '  ' → logprob: -8.262742042541504
    6. ' for' → logprob: -8.512742042541504
    7. 'n' → logprob: -8.762742042541504
    8. '#' → logprob: -8.887742042541504
    9. 'ter' → logprob: -9.137742042541504
    10. 'nt' → logprob: -9.262742042541504

Token 484: ' interne' (ID: 59673)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002491118386387825
    2. 'for' → logprob: -6.502490997314453
    3. ' in' → logprob: -7.877490997314453
    4. '   ' → logprob: -8.752490997314453
    5. '	for' → logprob: -9.127490997314453
    6. ' ' → logprob: -9.252490997314453
    7. ' inner' → logprob: -9.502490997314453
    8. ' j' → logprob: -10.627490997314453
    9. ' ' → logprob: -11.127490997314453
    10. ':' → logprob: -11.377490997314453

Token 485: ' imb' (ID: 63592)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03233186528086662
    2. '   ' → logprob: -4.157331943511963
    3. 'for' → logprob: -4.282331943511963
    4. ':' → logprob: -6.282331943511963
    5. ' in' → logprob: -8.282331466674805
    6. '	for' → logprob: -8.782331466674805
    7. '  ' → logprob: -10.657331466674805
    8. 'in' → logprob: -11.157331466674805
    9. ' ' → logprob: -11.407331466674805
    10. ':
' → logprob: -11.532331466674805

Token 486: 'ri' (ID: 872)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06268720328807831
    2. 'ri' → logprob: -3.1876871585845947
    3. 'quée' → logprob: -4.812687397003174
    4. 'd' → logprob: -5.437687397003174
    5. 'arqu' → logprob: -7.187687397003174
    6. 'ed' → logprob: -7.562687397003174
    7. 'b' → logprob: -7.812687397003174
    8. 'iqu' → logprob: -7.812687397003174
    9. 'lée' → logprob: -7.937687397003174
    10. 'our' → logprob: -7.937687397003174

Token 487: 'quée' (ID: 63772)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02369426190853119
    2. '   ' → logprob: -5.648694038391113
    3. 'ée' → logprob: -5.773694038391113
    4. 'in' → logprob: -5.898694038391113
    5. 'érée' → logprob: -6.023694038391113
    6. 'quée' → logprob: -6.898694038391113
    7. 'ee' → logprob: -6.898694038391113
    8. '#' → logprob: -7.148694038391113
    9. 'dee' → logprob: -7.273694038391113
    10. 'é' → logprob: -7.273694038391113

Token 488: ' :' (ID: 712)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7207067012786865
    2. '   ' → logprob: -1.0957067012786865
    3. 'for' → logprob: -1.7207067012786865
    4. ':' → logprob: -8.470706939697266
    5. '	for' → logprob: -9.595706939697266
    6. ' ' → logprob: -10.345706939697266
    7. '  ' → logprob: -11.345706939697266
    8. ':
' → logprob: -11.345706939697266
    9. ' in' → logprob: -12.845706939697266
    10. ',' → logprob: -13.095706939697266

Token 489: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1080239862203598
    2. '   ' → logprob: -2.3580238819122314
    3. ' for' → logprob: -4.8580241203308105
    4. '	for' → logprob: -10.858023643493652
    5. ' ' → logprob: -14.108023643493652
    6. '```' → logprob: -14.483023643493652
    7. '  ' → logprob: -14.983023643493652
    8. '       ' → logprob: -15.858023643493652
    9. '    ' → logprob: -16.23302459716797
    10. '   ' → logprob: -16.48302459716797

Token 490: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29013708233833313
    2. 'oter' → logprob: -2.2901370525360107
    3. 'otra' → logprob: -3.5401370525360107
    4. 'ête' → logprob: -4.54013729095459
    5. 'onter' → logprob: -4.91513729095459
    6. 'ote' → logprob: -5.04013729095459
    7. 'orer' → logprob: -5.16513729095459
    8. 'ar' → logprob: -5.41513729095459
    9. 'ot' → logprob: -5.66513729095459
    10. 'ro' → logprob: -5.66513729095459

Token 491: ' chaque' (ID: 21194)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.7096346616744995
    2. 'for' → logprob: -1.3346346616744995
    3. ' G' → logprob: -2.084634780883789
    4. ' for' → logprob: -2.584634780883789
    5. '   ' → logprob: -3.209634780883789
    6. ' ' → logprob: -6.209634780883789
    7. ' each' → logprob: -6.959634780883789
    8. '  ' → logprob: -7.459634780883789
    9. 'each' → logprob: -7.834634780883789
    10. 'j' → logprob: -8.584634780883789

Token 492: ' indice' (ID: 90848)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6962803602218628
    2. 'j' → logprob: -0.8212803602218628
    3. 'G' → logprob: -3.1962804794311523
    4. 'for' → logprob: -4.446280479431152
    5. ' G' → logprob: -5.071280479431152
    6. ' for' → logprob: -6.571280479431152
    7. 'g' → logprob: -7.446280479431152
    8. ' g' → logprob: -7.571280479431152
    9. '   ' → logprob: -9.696280479431152
    10. ' ' → logprob: -9.821280479431152

Token 493: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7621219754219055
    2. 'j' → logprob: -0.8871219754219055
    3. ' for' → logprob: -3.2621219158172607
    4. 'for' → logprob: -3.5121219158172607
    5. 'in' → logprob: -3.7621219158172607
    6. ' in' → logprob: -3.8871219158172607
    7. '   ' → logprob: -4.76212215423584
    8. '(j' → logprob: -7.88712215423584
    9. 'G' → logprob: -8.76212215423584
    10. '    ' → logprob: -8.88712215423584

Token 494: ' stock' (ID: 6546)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1603468954563141
    2. 'in' → logprob: -1.9103468656539917
    3. '   ' → logprob: -10.410346984863281
    4. 'for' → logprob: -10.535346984863281
    5. ' ' → logprob: -10.910346984863281
    6. ' dans' → logprob: -11.160346984863281
    7. ' for' → logprob: -11.410346984863281
    8. '	in' → logprob: -12.160346984863281
    9. ' en' → logprob: -12.410346984863281
    10. 'dans' → logprob: -12.910346984863281

Token 495: 'é' (ID: 377)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.236098051071167
    2. 'er' → logprob: -2.111098051071167
    3. '   ' → logprob: -2.111098051071167
    4. ' in' → logprob: -2.486098051071167
    5. 'G' → logprob: -2.861098051071167
    6. 'ur' → logprob: -3.111098051071167
    7. 'é' → logprob: -3.236098051071167
    8. 'int' → logprob: -3.986098051071167
    9. 'éré' → logprob: -4.111098289489746
    10. 'uré' → logprob: -4.361098289489746

Token 496: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4301643967628479
    2. ' in' → logprob: -1.0551643371582031
    3. 'dans' → logprob: -7.555164337158203
    4. '   ' → logprob: -7.680164337158203
    5. ' dans' → logprob: -8.055164337158203
    6. '	in' → logprob: -10.305164337158203
    7. ' en' → logprob: -10.430164337158203
    8. ' ' → logprob: -10.805164337158203
    9. '  ' → logprob: -11.305164337158203
    10. 'for' → logprob: -11.555164337158203

Token 497: ' la' (ID: 557)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0013273799559101462
    2. ' G' → logprob: -6.6263275146484375
    3. 'for' → logprob: -14.126327514648438
    4. '[G' → logprob: -15.876327514648438
    5. 'the' → logprob: -16.251327514648438
    6. '(G' → logprob: -16.251327514648438
    7. 'list' → logprob: -16.501327514648438
    8. ' ' → logprob: -16.876327514648438
    9. '   ' → logprob: -17.001327514648438
    10. '	G' → logprob: -17.251327514648438

Token 498: ' liste' (ID: 31719)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00014203863975126296
    2. ' G' → logprob: -9.000142097473145
    3. 'for' → logprob: -11.250142097473145
    4. '   ' → logprob: -13.375142097473145
    5. 'B' → logprob: -14.000142097473145
    6. 'list' → logprob: -14.500142097473145
    7. ' ' → logprob: -14.500142097473145
    8. 'range' → logprob: -14.500142097473145
    9. '(G' → logprob: -15.250142097473145
    10. '[G' → logprob: -15.437642097473145

Token 499: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0028395876288414
    2. ' G' → logprob: -5.8778395652771
    3. '   ' → logprob: -11.127840042114258
    4. '(G' → logprob: -11.877840042114258
    5. ' ' → logprob: -12.002840042114258
    6. 'for' → logprob: -13.127840042114258
    7. 'B' → logprob: -14.002840042114258
    8. '  ' → logprob: -14.002840042114258
    9. '[G' → logprob: -14.127840042114258
    10. '	G' → logprob: -14.377840042114258

Token 500: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4986039698123932
    2. ':' → logprob: -1.3736039400100708
    3. ' for' → logprob: -2.6236040592193604
    4. 'for' → logprob: -2.8736040592193604
    5. ':
' → logprob: -4.873603820800781
    6. 'in' → logprob: -6.748603820800781
    7. ' in' → logprob: -7.248603820800781
    8. '  ' → logprob: -8.123603820800781
    9. '	for' → logprob: -9.123603820800781
    10. '(G' → logprob: -9.248603820800781

Token 501: 'i' (ID: 72)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.5408865213394165
    2. 'for' → logprob: -1.1658865213394165
    3. ' for' → logprob: -3.040886402130127
    4. ' G' → logprob: -3.165886402130127
    5. '   ' → logprob: -4.540886402130127
    6. ')' → logprob: -5.290886402130127
    7. ' ' → logprob: -8.540886878967285
    8. '  ' → logprob: -9.540886878967285
    9. '(G' → logprob: -9.915886878967285
    10. '    ' → logprob: -10.665886878967285

Token 502: '.e' (ID: 2560)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.468147337436676
    2. '):' → logprob: -1.0931472778320312
    3. '):
' → logprob: -3.3431472778320312
    4. 'for' → logprob: -6.093147277832031
    5. ':
' → logprob: -7.843147277832031
    6. ')' → logprob: -8.843147277832031
    7. '+' → logprob: -8.843147277832031
    8. 'n' → logprob: -9.593147277832031
    9. '   ' → logprob: -9.718147277832031
    10. '```' → logprob: -9.718147277832031

Token 503: '.,' (ID: 4213)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018354900181293488
    2. '   ' → logprob: -4.518354892730713
    3. ' for' → logprob: -5.143354892730713
    4. '       ' → logprob: -6.768354892730713
    5. '           ' → logprob: -9.643355369567871
    6. ')' → logprob: -9.643355369567871
    7. 'j' → logprob: -10.393355369567871
    8. '  ' → logprob: -10.643355369567871
    9. '    ' → logprob: -11.143355369567871
    10. 'G' → logprob: -11.518355369567871

Token 504: ' positions' (ID: 15897)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.18055212497711182
    2. ' G' → logprob: -1.8055521249771118
    3. ')' → logprob: -7.805552005767822
    4. 'for' → logprob: -8.30555248260498
    5. ' ' → logprob: -9.43055248260498
    6. '   ' → logprob: -10.43055248260498
    7. 'j' → logprob: -11.18055248260498
    8. ' for' → logprob: -11.55555248260498
    9. '  ' → logprob: -12.05555248260498
    10. 'range' → logprob: -12.68055248260498

Token 505: ' des' (ID: 731)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7419629096984863
    2. ' in' → logprob: -0.9919629096984863
    3. 'for' → logprob: -2.9919629096984863
    4. ' for' → logprob: -3.2419629096984863
    5. '   ' → logprob: -3.4919629096984863
    6. ':' → logprob: -4.241962909698486
    7. '):' → logprob: -4.741962909698486
    8. ' of' → logprob: -5.991962909698486
    9. 'of' → logprob: -6.366962909698486
    10. ')' → logprob: -6.616962909698486

Token 506: ' '' (ID: 461)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.006896285805851221
    2. 'j' → logprob: -5.256896495819092
    3. 'range' → logprob: -7.256896495819092
    4. ' range' → logprob: -7.506896495819092
    5. ')' → logprob: -8.506896018981934
    6. ' G' → logprob: -8.756896018981934
    7. ' j' → logprob: -11.256896018981934
    8. 'for' → logprob: -11.631896018981934
    9. ' for' → logprob: -12.256896018981934
    10. '   ' → logprob: -13.006896018981934

Token 507: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.002683968050405383
    2. ')' → logprob: -6.002684116363525
    3. '):' → logprob: -9.127683639526367
    4. ' G' → logprob: -9.752683639526367
    5. 'j' → logprob: -10.252683639526367
    6. 'range' → logprob: -13.502683639526367
    7. ' )' → logprob: -13.752683639526367
    8. '):
' → logprob: -13.877683639526367
    9. ' ' → logprob: -15.002683639526367
    10. 'i' → logprob: -15.127683639526367

Token 508: '').
' (ID: 105328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023721272125840187
    2. '):
' → logprob: -3.773721218109131
    3. 'for' → logprob: -8.773721694946289
    4. ')' → logprob: -8.898721694946289
    5. ':' → logprob: -9.148721694946289
    6. '   ' → logprob: -10.148721694946289
    7. '):

' → logprob: -10.898721694946289
    8. '):
' → logprob: -12.273721694946289
    9. ' for' → logprob: -12.398721694946289
    10. ' ):' → logprob: -12.648721694946289

Token 509: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.944823682308197
    2. 'for' → logprob: -1.0698237419128418
    3. '   ' → logprob: -1.3198237419128418
    4. ':' → logprob: -7.819823741912842
    5. '	for' → logprob: -7.944823741912842
    6. ' ' → logprob: -8.819823265075684
    7. '```' → logprob: -10.194823265075684
    8. '       ' → logprob: -10.819823265075684
    9. ':
' → logprob: -11.319823265075684
    10. '  ' → logprob: -11.444823265075684

Token 510: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029813556000590324
    2. ' for' → logprob: -3.779813528060913
    3. '   ' → logprob: -5.029813766479492
    4. '	for' → logprob: -12.029813766479492
    5. ' ' → logprob: -15.154813766479492
    6. '```' → logprob: -15.654813766479492
    7. '       ' → logprob: -17.154813766479492
    8. 'if' → logprob: -17.154813766479492
    9. '  ' → logprob: -17.654813766479492
    10. '   ' → logprob: -19.779813766479492

Token 511: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022484004497528
    2. ' j' → logprob: -1.9102247953414917
    3. '	j' → logprob: -15.160224914550781
    4. ' ' → logprob: -16.28522491455078
    5. ' ' → logprob: -16.41022491455078
    6. '_j' → logprob: -16.78522491455078
    7. 'J' → logprob: -16.91022491455078
    8. '   ' → logprob: -17.03522491455078
    9. '$j' → logprob: -17.03522491455078
    10. 'G' → logprob: -17.66022491455078

Token 512: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269860088825226
    2. 'in' → logprob: -2.0176985263824463
    3. ' ' → logprob: -11.767698287963867
    4. 'In' → logprob: -12.642698287963867
    5. 'not' → logprob: -12.767698287963867
    6. '	in' → logprob: -12.767698287963867
    7. '   ' → logprob: -13.017698287963867
    8. 'import' → logprob: -13.892698287963867
    9. '  ' → logprob: -14.017698287963867
    10. 'n' → logprob: -15.392698287963867

Token 513: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.029751643538475037
    2. ' G' → logprob: -3.5297515392303467
    3. '   ' → logprob: -13.904751777648926
    4. ' ' → logprob: -15.904751777648926
    5. 'range' → logprob: -16.65475082397461
    6. '	G' → logprob: -16.90475082397461
    7. ' range' → logprob: -17.40475082397461
    8. '(G' → logprob: -17.40475082397461
    9. '[G' → logprob: -17.52975082397461
    10. '  ' → logprob: -18.02975082397461

Token 514: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11595281213521957
    2. ':
' → logprob: -2.240952730178833
    3. '       ' → logprob: -5.865952968597412
    4. '   ' → logprob: -8.240952491760254
    5. '():
' → logprob: -11.740952491760254
    6. '):
' → logprob: -11.990952491760254
    7. ':
' → logprob: -12.990952491760254
    8. ',' → logprob: -13.115952491760254
    9. '[' → logprob: -13.240952491760254
    10. ':

' → logprob: -13.240952491760254

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00543747004121542
    2. '	' → logprob: -6.13043737411499
    3. 'if' → logprob: -6.50543737411499
    4. ' if' → logprob: -8.005437850952148
    5. '    ' → logprob: -8.130437850952148
    6. '   ' → logprob: -8.380437850952148
    7. '      ' → logprob: -8.630437850952148
    8. '           ' → logprob: -8.880437850952148
    9. '	   ' → logprob: -9.005437850952148
    10. '#' → logprob: -9.380437850952148

Token 516: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6142748594284058
    2. 'if' → logprob: -0.9892748594284058
    3. '       ' → logprob: -3.4892749786376953
    4. '#' (adapté à ' #') → logprob: -3.7392749786376953
    5. '           ' → logprob: -4.489274978637695
    6. 'for' → logprob: -4.614274978637695
    7. 'diff' → logprob: -5.739274978637695
    8. 'd' → logprob: -6.114274978637695
    9. 'c' → logprob: -6.614274978637695
    10. 'distance' → logprob: -6.864274978637695

Token 517: ' Initialise' (ID: 179601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08273349702358246
    2. 'k' → logprob: -2.832733392715454
    3. 'd' → logprob: -4.957733631134033
    4. 'diff' → logprob: -5.082733631134033
    5. '#' → logprob: -5.332733631134033
    6. 'dist' → logprob: -6.832733631134033
    7. 'distance' → logprob: -7.457733631134033
    8. 'dif' → logprob: -7.832733631134033
    9. '   ' → logprob: -9.582733154296875
    10. 'for' → logprob: -10.082733154296875

Token 518: ' une' (ID: 2463)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04380220174789429
    2. 'if' → logprob: -3.918802261352539
    3. 'd' → logprob: -4.293802261352539
    4. 'diff' → logprob: -5.168802261352539
    5. 'dist' → logprob: -7.043802261352539
    6. '#' → logprob: -7.293802261352539
    7. 'distance' → logprob: -8.043802261352539
    8. 'c' → logprob: -8.418802261352539
    9. 'dif' → logprob: -8.418802261352539
    10. ' k' → logprob: -8.543802261352539

Token 519: ' variable' (ID: 11076)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4012291729450226
    2. 'if' → logprob: -1.9012291431427002
    3. 'd' → logprob: -2.2762291431427
    4. 'diff' → logprob: -2.9012291431427
    5. 'distance' → logprob: -4.401229381561279
    6. 'dist' → logprob: -5.526229381561279
    7. '#' → logprob: -5.526229381561279
    8. 'for' → logprob: -7.401229381561279
    9. 'step' → logprob: -7.526229381561279
    10. 'difference' → logprob: -7.526229381561279

Token 520: ' check' (ID: 2371)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02486279048025608
    2. 'diff' → logprob: -4.274862766265869
    3. 'd' → logprob: -4.899862766265869
    4. 'dist' → logprob: -6.774862766265869
    5. 'distance' → logprob: -7.274862766265869
    6. 'for' → logprob: -7.899862766265869
    7. 'x' → logprob: -8.774863243103027
    8. 'c' → logprob: -8.774863243103027
    9. 'abs' → logprob: -9.024863243103027
    10. 'min' → logprob: -9.524863243103027

Token 521: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04453636333346367
    2. '=' → logprob: -3.2945363521575928
    3. '=True' → logprob: -5.794536590576172
    4. '=False' → logprob: -6.169536590576172
    5. '       ' → logprob: -7.919536590576172
    6. '   ' → logprob: -8.669536590576172
    7. 'k' → logprob: -8.794536590576172
    8. '=k' → logprob: -9.044536590576172
    9. '1' → logprob: -9.919536590576172
    10. 'd' → logprob: -9.919536590576172

Token 522: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7312560081481934
    2. 'True' → logprob: -1.3562560081481934
    3. '1' → logprob: -2.1062560081481934
    4. 'False' → logprob: -2.6062560081481934
    5. 'abs' → logprob: -3.6062560081481934
    6. 'j' → logprob: -3.6062560081481934
    7. '""' → logprob: -5.981256008148193
    8. 'i' → logprob: -6.231256008148193
    9. '3' → logprob: -6.481256008148193
    10. '-' → logprob: -7.356256008148193

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7369101047515869
    2. '1' → logprob: -1.611910104751587
    3. 'True' → logprob: -1.986910104751587
    4. 'False' → logprob: -2.611910104751587
    5. 'j' → logprob: -2.861910104751587
    6. 'abs' → logprob: -3.361910104751587
    7. '3' → logprob: -5.111909866333008
    8. 'set' → logprob: -6.111909866333008
    9. '(j' → logprob: -6.236909866333008
    10. '-' → logprob: -6.861909866333008

Token 524: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1565847396850586
    2. 'check' → logprob: -2.1565847396850586
    3. '	' → logprob: -4.281584739685059
    4. '
' → logprob: -5.031584739685059
    5. '	check' → logprob: -5.656584739685059
    6. ' check' → logprob: -6.031584739685059
    7. '		
' → logprob: -7.156584739685059
    8. '   ' → logprob: -7.781584739685059
    9. '           ' → logprob: -8.031584739685059
    10. '        
' → logprob: -8.156584739685059

Token 525: ' ce' (ID: 2357)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08045326918363571
    2. '1' → logprob: -2.8304531574249268
    3. 'int' → logprob: -5.205453395843506
    4. ' ' → logprob: -5.455453395843506
    5. 'check' → logprob: -5.580453395843506
    6. 'continue' → logprob: -7.205453395843506
    7. 'abs' → logprob: -7.455453395843506
    8. 's' → logprob: -7.830453395843506
    9. '   ' → logprob: -8.455452919006348
    10. 'contin' → logprob: -8.455452919006348

Token 526: ' couple' (ID: 7167)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5693585872650146
    2. 'for' → logprob: -1.0693585872650146
    3. '#' → logprob: -3.5693585872650146
    4. ' if' → logprob: -4.569358825683594
    5. 't' → logprob: -4.819358825683594
    6. ' for' → logprob: -4.944358825683594
    7. 'abs' → logprob: -4.944358825683594
    8. '       ' → logprob: -5.569358825683594
    9. 'distance' → logprob: -5.694358825683594
    10. 'diff' → logprob: -5.819358825683594

Token 527: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006839453242719173
    2. 'check' → logprob: -5.131839275360107
    3. ' check' → logprob: -8.381839752197266
    4. '	' → logprob: -8.756839752197266
    5. '           ' → logprob: -9.131839752197266
    6. ',' → logprob: -9.381839752197266
    7. '   ' → logprob: -9.506839752197266
    8. '	check' → logprob: -10.006839752197266
    9. '
' → logprob: -10.131839752197266
    10. '               ' → logprob: -10.631839752197266

Token 528: 'i' (ID: 72)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.1553565114736557
    2. '1' → logprob: -2.7803564071655273
    3. 'cnt' → logprob: -3.4053564071655273
    4. '0' → logprob: -4.155356407165527
    5. 'i' → logprob: -4.530356407165527
    6. ')' → logprob: -4.655356407165527
    7. '3' → logprob: -6.155356407165527
    8. ' check' → logprob: -6.280356407165527
    9. 'j' → logprob: -6.780356407165527
    10. '       ' → logprob: -6.780356407165527

Token 529: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2501676082611084
    2. ',' → logprob: -1.8751676082611084
    3. '       ' → logprob: -2.8751676082611084
    4. '<|end|>' → logprob: -5.0001678466796875
    5. '   ' → logprob: -7.1251678466796875
    6. '),' → logprob: -7.7501678466796875
    7. ' ,' → logprob: -8.000167846679688
    8. '+' → logprob: -8.250167846679688
    9. ' =' → logprob: -8.375167846679688
    10. '           ' → logprob: -8.375167846679688

Token 530: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018935515254270285
    2. ' j' → logprob: -8.875189781188965
    3. '       ' → logprob: -11.000189781188965
    4. ')' → logprob: -11.250189781188965
    5. '           ' → logprob: -11.625189781188965
    6. 'check' → logprob: -12.500189781188965
    7. '   ' → logprob: -13.375189781188965
    8. '	j' → logprob: -14.500189781188965
    9. 'k' → logprob: -14.625189781188965
    10. ' ' → logprob: -14.875189781188965

Token 531: ').
' (ID: 6294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47674915194511414
    2. ')' → logprob: -0.9767491817474365
    3. ',' → logprob: -7.476748943328857
    4. '
' → logprob: -7.601748943328857
    5. '           ' → logprob: -7.601748943328857
    6. '<|end|>' → logprob: -7.726748943328857
    7. '   ' → logprob: -9.351749420166016
    8. '	' → logprob: -9.351749420166016
    9. ').' → logprob: -9.476749420166016
    10. '        ' → logprob: -9.476749420166016

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037522632628679276
    2. 'check' → logprob: -3.537522554397583
    3. '	' → logprob: -5.037522792816162
    4. ' check' → logprob: -7.412522792816162
    5. '	check' → logprob: -8.287522315979004
    6. '	   ' → logprob: -9.412522315979004
    7. '           ' → logprob: -9.662522315979004
    8. '   ' → logprob: -9.787522315979004
    9. '	       ' → logprob: -10.412522315979004
    10. '```' → logprob: -10.412522315979004

Token 533: ' #' (ID: 1069)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.004348940681666136
    2. ' check' → logprob: -5.8793487548828125
    3. '       ' → logprob: -6.5043487548828125
    4. '	check' → logprob: -10.129348754882812
    5. '   ' → logprob: -13.004348754882812
    6. '           ' → logprob: -13.629348754882812
    7. '	' → logprob: -14.004348754882812
    8. '```' → logprob: -14.254348754882812
    9. ' ' → logprob: -14.879348754882812
    10. '_check' → logprob: -16.004348754882812

Token 534: ' Cette' (ID: 27383)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -8.613945101387799e-05
    2. '       ' → logprob: -10.000085830688477
    3. ' check' → logprob: -10.125085830688477
    4. '	check' → logprob: -15.000085830688477
    5. '   ' → logprob: -15.250085830688477
    6. 'for' → logprob: -17.875085830688477
    7. '           ' → logprob: -18.000085830688477
    8. ' ' → logprob: -19.250085830688477
    9. 'count' → logprob: -19.250085830688477
    10. '```' → logprob: -19.250085830688477

Token 535: ' variable' (ID: 11076)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07558644562959671
    2. ' check' → logprob: -3.2005865573883057
    3. 'if' → logprob: -3.5755865573883057
    4. 'for' → logprob: -6.950586318969727
    5. '#' → logprob: -7.200586318969727
    6. ' if' → logprob: -7.200586318969727
    7. '=' → logprob: -8.450586318969727
    8. ' =' → logprob: -8.575586318969727
    9. '       ' → logprob: -8.700586318969727
    10. 'diff' → logprob: -8.825586318969727

Token 536: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6454623341560364
    2. '=' → logprob: -0.7704623341560364
    3. '<|end|>' → logprob: -5.270462512969971
    4. '+=' → logprob: -5.645462512969971
    5. ' +=' → logprob: -6.020462512969971
    6. ' ' → logprob: -7.270462512969971
    7. 'check' → logprob: -8.395462036132812
    8. ',' → logprob: -9.770462036132812
    9. '  ' → logprob: -10.020462036132812
    10. '+' → logprob: -10.270462036132812

Token 537: 'ira' (ID: 2633)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.05854666978120804
    2. 'era' → logprob: -2.933546781539917
    3. 'rait' → logprob: -6.183546543121338
    4. 'e' → logprob: -7.183546543121338
    5. 'ait' → logprob: -8.058547019958496
    6. 'ira' → logprob: -8.808547019958496
    7. 'er' → logprob: -9.058547019958496
    8. '#' → logprob: -9.558547019958496
    9. 'r' → logprob: -9.683547019958496
    10. '=' → logprob: -10.183547019958496

Token 538: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0158663988113403
    2. ' ' → logprob: -1.1408663988113403
    3. ' à' → logprob: -1.3908663988113403
    4. 'to' → logprob: -3.890866279602051
    5. '  ' → logprob: -3.890866279602051
    6. ' to' → logprob: -4.890866279602051
    7. '=' → logprob: -5.390866279602051
    8. 'a' → logprob: -5.890866279602051
    9. '#' → logprob: -6.015866279602051
    10. 'as' → logprob: -6.265866279602051

Token 539: ' compter' (ID: 81694)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.046948570758104324
    2. 'continue' → logprob: -3.4219486713409424
    3. 'abs' → logprob: -5.421948432922363
    4. 'diff' → logprob: -5.921948432922363
    5. 'count' → logprob: -6.546948432922363
    6. 'for' → logprob: -7.171948432922363
    7. ' check' → logprob: -7.296948432922363
    8. 'flag' → logprob: -7.921948432922363
    9. 'c' → logprob: -8.171948432922363
    10. 'distance' → logprob: -8.421948432922363

Token 540: ' combien' (ID: 106648)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5807805061340332
    2. 'check' → logprob: -2.580780506134033
    3. 'les' → logprob: -2.580780506134033
    4. 'diff' → logprob: -2.580780506134033
    5. 'if' → logprob: -3.330780506134033
    6. 'l' → logprob: -3.705780506134033
    7. 'the' → logprob: -3.705780506134033
    8. '<|end|>' → logprob: -3.955780506134033
    9. ' for' → logprob: -4.080780506134033
    10. ')' → logprob: -4.080780506134033

Token 541: ' de' (ID: 334)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.34918180108070374
    2. 'for' → logprob: -2.349181890487671
    3. 'd' → logprob: -2.599181890487671
    4. 'if' → logprob: -3.099181890487671
    5. ' k' → logprob: -4.224181652069092
    6. 'K' → logprob: -4.474181652069092
    7. 'de' → logprob: -4.849181652069092
    8. 'diff' → logprob: -5.224181652069092
    9. 's' → logprob: -5.349181652069092
    10. ' d' → logprob: -5.474181652069092

Token 542: ' cas' (ID: 2108)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19683310389518738
    2. 'B' → logprob: -2.4468331336975098
    3. 'for' → logprob: -3.3218331336975098
    4. 'if' → logprob: -3.5718331336975098
    5. 'diff' → logprob: -4.82183313369751
    6. ' k' → logprob: -5.94683313369751
    7. 't' → logprob: -6.19683313369751
    8. 'd' → logprob: -6.69683313369751
    9. ')' → logprob: -6.69683313369751
    10. 'b' → logprob: -6.82183313369751

Token 543: ' particuliers' (ID: 99172)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.754457712173462
    2. 'if' → logprob: -1.754457712173462
    3. '<|end|>' → logprob: -2.504457712173462
    4. ' if' → logprob: -2.629457712173462
    5. '   ' → logprob: -3.004457712173462
    6. ' =' → logprob: -3.004457712173462
    7. '       ' → logprob: -3.004457712173462
    8. '  ' → logprob: -3.004457712173462
    9. 'where' → logprob: -3.754457712173462
    10. ' ' → logprob: -3.754457712173462

Token 544: ' sont' (ID: 5242)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3568345308303833
    2. '       ' → logprob: -1.7318345308303833
    3. '<|end|>' → logprob: -2.9818344116210938
    4. ' check' → logprob: -3.2318344116210938
    5. '   ' → logprob: -5.731834411621094
    6. 'continue' → logprob: -5.856834411621094
    7. '	check' → logprob: -5.856834411621094
    8. '#' → logprob: -6.231834411621094
    9. '           ' → logprob: -6.356834411621094
    10. '\t' → logprob: -6.606834411621094

Token 545: ' détect' (ID: 118715)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8235046863555908
    2. 'check' → logprob: -2.073504686355591
    3. 'v' → logprob: -2.448504686355591
    4. '0' → logprob: -2.448504686355591
    5. 'True' → logprob: -3.198504686355591
    6. 'cnt' → logprob: -4.073504447937012
    7. 's' → logprob: -4.323504447937012
    8. 'enc' → logprob: -4.323504447937012
    9. ' ' → logprob: -4.573504447937012
    10. 'à' → logprob: -4.573504447937012

Token 546: 'és' (ID: 1756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6286264061927795
    2. 'e' → logprob: -2.1286263465881348
    3. 'é' → logprob: -2.3786263465881348
    4. 'if' → logprob: -2.5036263465881348
    5. 'er' → logprob: -3.1286263465881348
    6. 'és' → logprob: -3.2536263465881348
    7. '           ' → logprob: -3.2536263465881348
    8. '   ' → logprob: -4.003626346588135
    9. '=' → logprob: -5.378626346588135
    10. 'ations' → logprob: -5.503626346588135

Token 547: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005304669961333275
    2. ',' → logprob: -6.50530481338501
    3. 'check' → logprob: -6.63030481338501
    4. '.' → logprob: -7.00530481338501
    5. '	' → logprob: -7.38030481338501
    6. '<|end|>' → logprob: -8.380304336547852
    7. '#' → logprob: -9.380304336547852
    8. ' =' → logprob: -9.505304336547852
    9. '           ' → logprob: -9.630304336547852
    10. ' check' → logprob: -9.755304336547852

Token 548: ' seront' (ID: 35024)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3314954042434692
    2. 'continue' → logprob: -2.5814952850341797
    3. 'contin' → logprob: -2.9564952850341797
    4. '       ' → logprob: -3.2064952850341797
    5. ' continue' → logprob: -3.3314952850341797
    6. 'check' → logprob: -3.3314952850341797
    7. ' ' → logprob: -3.3314952850341797
    8. 'ignored' → logprob: -3.4564952850341797
    9. 'checked' → logprob: -3.7064952850341797
    10. 'increment' → logprob: -3.8314952850341797

Token 549: ' sou' (ID: 4069)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.27073967456817627
    2. 'cnt' → logprob: -2.6457395553588867
    3. '1' → logprob: -3.3957395553588867
    4. 'checked' → logprob: -3.5207395553588867
    5. 'continue' → logprob: -3.7707395553588867
    6. 'sub' → logprob: -3.8957395553588867
    7. 'excluded' → logprob: -4.145739555358887
    8. 'skip' → logprob: -4.270739555358887
    9. ' check' → logprob: -5.020739555358887
    10. 'ignored' → logprob: -5.395739555358887

Token 550: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.011753556318581104
    2. 'st' → logprob: -5.386753559112549
    3. 'stract' → logprob: -6.386753559112549
    4. 'str' → logprob: -6.511753559112549
    5. 'lev' → logprob: -6.761753559112549
    6. 'cnt' → logprob: -7.261753559112549
    7. 'm' → logprob: -7.761753559112549
    8. 's' → logprob: -8.26175308227539
    9. 'l' → logprob: -8.51175308227539
    10. 'mis' → logprob: -8.76175308227539

Token 551: 'its' (ID: 1348)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.009091824293136597
    2. '   ' → logprob: -6.259091854095459
    3. 'tracted' → logprob: -6.259091854095459
    4. '       ' → logprob: -6.634091854095459
    5. 'uct' → logprob: -6.634091854095459
    6. 'r' → logprob: -7.009091854095459
    7. 'stract' → logprob: -8.2590913772583
    8. 'it' → logprob: -8.3840913772583
    9. 'acted' → logprob: -8.3840913772583
    10. 'tract' → logprob: -8.7590913772583

Token 552: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10920269042253494
    2. 'from' → logprob: -2.7342026233673096
    3. ' de' → logprob: -4.359202861785889
    4. '   ' → logprob: -5.484202861785889
    5. '           ' → logprob: -5.859202861785889
    6. '=' → logprob: -5.859202861785889
    7. ',' → logprob: -5.984202861785889
    8. ' des' → logprob: -6.484202861785889
    9. ' from' → logprob: -6.484202861785889
    10. 'de' → logprob: -6.984202861785889

Token 553: ' tard' (ID: 30225)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5847378969192505
    2. '=' → logprob: -1.9597378969192505
    3. '+' → logprob: -2.834737777709961
    4. 't' → logprob: -3.334737777709961
    5. '```' → logprob: -3.459737777709961
    6. '#' → logprob: -4.084737777709961
    7. 'moins' → logprob: -4.084737777709961
    8. '+=' → logprob: -4.084737777709961
    9. '++' → logprob: -4.209737777709961
    10. 'continue' → logprob: -4.334737777709961

Token 554: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005964008742012084
    2. '.' → logprob: -8.500596046447754
    3. ',' → logprob: -8.625596046447754
    4. '	' → logprob: -9.500596046447754
    5. '<|end|>' → logprob: -9.625596046447754
    6. 'check' → logprob: -11.375596046447754
    7. '           ' → logprob: -11.625596046447754
    8. '   ' → logprob: -12.000596046447754
    9. '        
' → logprob: -12.000596046447754
    10. '               ' → logprob: -12.625596046447754

Token 555: '       ' (ID: 309)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6385740041732788
    2. '       ' → logprob: -0.7635740041732788
    3. ' check' → logprob: -5.513574123382568
    4. '	' → logprob: -6.888574123382568
    5. '	check' → logprob: -7.263574123382568
    6. '   ' → logprob: -9.63857364654541
    7. '	   ' → logprob: -10.01357364654541
    8. '           ' → logprob: -10.76357364654541
    9. '	       ' → logprob: -11.01357364654541
    10. '```' → logprob: -11.26357364654541

Token 556: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.0004757135466206819
    2. '       ' → logprob: -7.750475883483887
    3. ' check' → logprob: -10.375475883483887
    4. '	check' → logprob: -11.875475883483887
    5. '   ' → logprob: -12.000475883483887
    6. '           ' → logprob: -15.500475883483887
    7. '	' → logprob: -16.00047492980957
    8. 'count' → logprob: -16.87547492980957
    9. '```' → logprob: -16.87547492980957
    10. ' ' → logprob: -17.25047492980957

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478381156921
    2. ' =' → logprob: -0.6931478381156921
    3. ' ' → logprob: -14.318147659301758
    4. '   ' → logprob: -18.068147659301758
    5. ' ' → logprob: -18.193147659301758
    6. ',' → logprob: -18.318147659301758
    7. ')' → logprob: -18.318147659301758
    8. ' =
' → logprob: -18.443147659301758
    9. '＝' → logprob: -18.818147659301758
    10. '	' → logprob: -19.193147659301758

Token 558: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008111746865324676
    2. ' ' → logprob: -7.1258111000061035
    3. '3' → logprob: -12.500811576843262
    4. '1' → logprob: -13.375811576843262
    5. 'int' → logprob: -15.000811576843262
    6. '(' → logprob: -15.000811576843262
    7. '2' → logprob: -15.375811576843262
    8. '   ' → logprob: -15.375811576843262
    9. 'abs' → logprob: -17.188310623168945
    10. '4' → logprob: -17.313310623168945

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. '3' → logprob: -11.500015258789062
    3. '1' → logprob: -13.375015258789062
    4. '2' → logprob: -14.000015258789062
    5. ' ' → logprob: -14.000015258789062
    6. '(' → logprob: -14.875015258789062
    7. 'int' → logprob: -14.875015258789062
    8. '-' → logprob: -15.125015258789062
    9. 'abs' → logprob: -15.125015258789062
    10. '4' → logprob: -16.250015258789062

Token 560: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009704387746751308
    2. '<|end|>' → logprob: -4.88470458984375
    3. '	' → logprob: -6.63470458984375
    4. '        
' → logprob: -8.50970458984375
    5. '#' → logprob: -9.00970458984375
    6. ',' → logprob: -9.63470458984375
    7. '<|end|>' → logprob: -9.63470458984375
    8. '
' → logprob: -9.75970458984375
    9. 'for' → logprob: -10.00970458984375
    10. '		
' → logprob: -10.25970458984375

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11460518836975098
    2. '	' → logprob: -3.614605188369751
    3. 'for' → logprob: -3.739605188369751
    4. '<|end|>' → logprob: -3.864605188369751
    5. ' for' → logprob: -4.739604949951172
    6. '		
' → logprob: -5.364604949951172
    7. '        
' → logprob: -5.489604949951172
    8. '        ' → logprob: -5.614604949951172
    9. '#' → logprob: -5.864604949951172
    10. 'if' → logprob: -5.864604949951172

Token 562: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3636854887008667
    2. 'if' → logprob: -1.4886854887008667
    3. 'for' → logprob: -3.4886856079101562
    4. '<|end|>' → logprob: -3.4886856079101562
    5. ' if' → logprob: -4.738685607910156
    6. '#' (adapté à ' #') → logprob: -5.488685607910156
    7. '        
' → logprob: -6.238685607910156
    8. ' for' → logprob: -6.488685607910156
    9. '        ' → logprob: -8.113685607910156
    10. '<|end|>' → logprob: -8.738685607910156

Token 563: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9434560537338257
    2. '#' → logprob: -1.5684560537338257
    3. 'd' → logprob: -1.9434560537338257
    4. 'diff' → logprob: -2.1934561729431152
    5. 'k' → logprob: -2.5684561729431152
    6. 'for' → logprob: -3.0684561729431152
    7. 'dist' → logprob: -4.568456172943115
    8. 'mid' → logprob: -5.443456172943115
    9. 'distance' → logprob: -5.943456172943115
    10. 'dif' → logprob: -6.818456172943115

Token 564: 'cule' (ID: 45017)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04317742958664894
    2. 'for' → logprob: -3.543177366256714
    3. '       ' → logprob: -5.168177604675293
    4. '#' → logprob: -5.668177604675293
    5. 'cul' → logprob: -6.543177604675293
    6. 'culate' → logprob: -7.168177604675293
    7. '```' → logprob: -7.793177604675293
    8. '   ' → logprob: -8.043177604675293
    9. 'cule' → logprob: -8.043177604675293
    10. 'c' → logprob: -8.793177604675293

Token 565: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04050213843584061
    2. ' k' → logprob: -3.9155020713806152
    3. 'diff' → logprob: -4.540502071380615
    4. 'd' → logprob: -5.290502071380615
    5. 'mid' → logprob: -7.415502071380615
    6. 'dist' → logprob: -7.415502071380615
    7. 'abs' → logprob: -7.540502071380615
    8. 'l' → logprob: -7.665502071380615
    9. 'the' → logprob: -8.415502548217773
    10. 'c' → logprob: -8.540502548217773

Token 566: ' minimum' (ID: 11085)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12957988679409027
    2. 'd' → logprob: -3.004579782485962
    3. 'diff' → logprob: -3.129579782485962
    4. 'mid' → logprob: -4.754580020904541
    5. 'dist' → logprob: -4.879580020904541
    6. '#' → logprob: -5.754580020904541
    7. 'distance' → logprob: -6.379580020904541
    8. 'm' → logprob: -6.879580020904541
    9. 'c' → logprob: -7.004580020904541
    10. 'middle' → logprob: -7.254580020904541

Token 567: ' (' (ID: 350)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5540518760681152
    2. '_pos' → logprob: -2.1790518760681152
    3. 'idx' → logprob: -2.9290518760681152
    4. '_' → logprob: -3.0540518760681152
    5. 'pos' → logprob: -3.1790518760681152
    6. '_idx' → logprob: -3.3040518760681152
    7. 'val' → logprob: -3.5540518760681152
    8. 'ij' → logprob: -3.9290518760681152
    9. ' =' → logprob: -4.429051876068115
    10. '_index' → logprob: -4.429051876068115

Token 568: 'm' (ID: 76)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4396367073059082
    2. 'd' → logprob: -2.064636707305908
    3. 'val' → logprob: -2.189636707305908
    4. 'ij' → logprob: -2.314636707305908
    5. 'x' → logprob: -2.689636707305908
    6. 'i' → logprob: -2.689636707305908
    7. 'k' → logprob: -2.689636707305908
    8. 'pos' → logprob: -2.814636707305908
    9. 'm' → logprob: -3.439636707305908
    10. '(i' → logprob: -3.939636707305908

Token 569: ')' (ID: 8)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.37063631415367126
    2. '=' → logprob: -1.9956363439559937
    3. ' =' → logprob: -1.9956363439559937
    4. ',' → logprob: -4.245636463165283
    5. '=min' → logprob: -4.745636463165283
    6. 'i' → logprob: -5.495636463165283
    7. '(i' → logprob: -5.870636463165283
    8. '   ' → logprob: -6.245636463165283
    9. 'inum' → logprob: -6.745636463165283
    10. ')' → logprob: -6.745636463165283

Token 570: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3393396735191345
    2. '=' → logprob: -1.3393397331237793
    3. 'm' → logprob: -3.8393397331237793
    4. '_val' → logprob: -6.964339733123779
    5. '(' → logprob: -7.214339733123779
    6. '_m' → logprob: -7.589339733123779
    7. ',' → logprob: -7.964339733123779
    8. '=m' → logprob: -7.964339733123779
    9. '=min' → logprob: -8.214339256286621
    10. '_' → logprob: -8.589339256286621

Token 571: ' maximum' (ID: 10562)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.25488847494125366
    2. 'maximum' → logprob: -1.8798885345458984
    3. 'max' → logprob: -2.7548885345458984
    4. ' le' → logprob: -5.254888534545898
    5. 'l' → logprob: -6.504888534545898
    6. ' maximum' → logprob: -7.004888534545898
    7. 'm' → logprob: -7.504888534545898
    8. 'the' → logprob: -7.879888534545898
    9. 'minimum' → logprob: -10.004888534545898
    10. 'la' → logprob: -10.379888534545898

Token 572: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3293316960334778
    2. '(i' → logprob: -2.704331636428833
    3. '(' → logprob: -2.829331636428833
    4. ' =' → logprob: -3.329331636428833
    5. '=' → logprob: -3.579331636428833
    6. '_val' → logprob: -3.579331636428833
    7. '_m' → logprob: -4.079331874847412
    8. 'val' → logprob: -5.204331874847412
    9. '_' → logprob: -5.204331874847412
    10. 'i' → logprob: -5.329331874847412

Token 573: 'M' (ID: 44)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3908069133758545
    2. 'm' → logprob: -1.5158069133758545
    3. '(min' → logprob: -3.5158069133758545
    4. ' =' → logprob: -4.015807151794434
    5. '(m' → logprob: -4.515807151794434
    6. 'min' → logprob: -4.640807151794434
    7. ')' → logprob: -5.140807151794434
    8. '=' → logprob: -5.265807151794434
    9. '(' → logprob: -5.390807151794434
    10. 'val' → logprob: -5.640807151794434

Token 574: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4172140061855316
    2. ' =' → logprob: -1.167214035987854
    3. ')' → logprob: -3.7922139167785645
    4. 'm' → logprob: -6.1672139167785645
    5. '=i' → logprob: -6.2922139167785645
    6. ',' → logprob: -7.2922139167785645
    7. '_' → logprob: -7.7922139167785645
    8. '   ' → logprob: -7.7922139167785645
    9. '(i' → logprob: -7.9172139167785645
    10. '```' → logprob: -8.292214393615723

Token 575: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3191121518611908
    2. '=' → logprob: -1.4441121816635132
    3. 'm' → logprob: -3.6941120624542236
    4. '       ' → logprob: -6.319112300872803
    5. '(i' → logprob: -6.444112300872803
    6. '(m' → logprob: -6.569112300872803
    7. '=m' → logprob: -6.944112300872803
    8. ' between' → logprob: -7.069112300872803
    9. '=i' → logprob: -7.444112300872803
    10. ' entre' → logprob: -7.569112300872803

Token 576: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013744660653173923
    2. '(i' → logprob: -4.388744831085205
    3. '[i' → logprob: -6.888744831085205
    4. ' i' → logprob: -8.513744354248047
    5. ' (' → logprob: -12.013744354248047
    6. '(' → logprob: -12.138744354248047
    7. 'indices' → logprob: -14.388744354248047
    8. '{i' → logprob: -14.388744354248047
    9. '[' → logprob: -14.638744354248047
    10. '(
' → logprob: -14.763744354248047

Token 577: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2975587546825409
    2. ' =' → logprob: -2.0475587844848633
    3. 'm' → logprob: -2.9225587844848633
    4. '(i' → logprob: -3.7975587844848633
    5. '(m' → logprob: -4.047558784484863
    6. '=' → logprob: -4.047558784484863
    7. '(' → logprob: -5.922558784484863
    8. '```' → logprob: -6.047558784484863
    9. ' entre' → logprob: -6.172558784484863
    10. 'entre' → logprob: -6.547558784484863

Token 578: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36613431572914124
    2. ',' → logprob: -1.3661342859268188
    3. '       ' → logprob: -3.3661344051361084
    4. '=' → logprob: -4.241134166717529
    5. ',m' → logprob: -7.241134166717529
    6. 'm' → logprob: -7.616134166717529
    7. '=m' → logprob: -8.241134643554688
    8. ' m' → logprob: -8.366134643554688
    9. ' ,' → logprob: -8.741134643554688
    10. '   ' → logprob: -8.741134643554688

Token 579: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.048593729734420776
    2. ' j' → logprob: -3.048593759536743
    3. '       ' → logprob: -13.173593521118164
    4. '   ' → logprob: -13.548593521118164
    5. ' ' → logprob: -13.923593521118164
    6. '	j' → logprob: -14.048593521118164
    7. ' ' → logprob: -14.548593521118164
    8. '```' → logprob: -15.298593521118164
    9. '$j' → logprob: -15.548593521118164
    10. '    ' → logprob: -15.798593521118164

Token 580: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021595412399619818
    2. 'm' → logprob: -6.627159595489502
    3. ',' → logprob: -7.877159595489502
    4. ' =' → logprob: -8.502159118652344
    5. ' m' → logprob: -9.627159118652344
    6. '```' → logprob: -9.877159118652344
    7. '
' → logprob: -10.502159118652344
    8. '(m' → logprob: -10.752159118652344
    9. ',m' → logprob: -11.502159118652344
    10. '   ' → logprob: -11.627159118652344

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009202983230352402
    2. 'm' → logprob: -5.25920295715332
    3. ' m' → logprob: -5.75920295715332
    4. '```' → logprob: -8.00920295715332
    5. '(m' → logprob: -8.88420295715332
    6. '        
' → logprob: -9.50920295715332
    7. '	' → logprob: -9.63420295715332
    8. '	m' → logprob: -9.75920295715332
    9. ',' → logprob: -10.00920295715332
    10. ' =' → logprob: -11.00920295715332

Token 582: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14575399458408356
    2. 'm' → logprob: -2.145754098892212
    3. ' m' → logprob: -4.020753860473633
    4. '	m' → logprob: -8.645753860473633
    5. '(m' → logprob: -8.895753860473633
    6. ' ' → logprob: -9.520753860473633
    7. '        ' → logprob: -9.645753860473633
    8. '	' → logprob: -9.770753860473633
    9. '   ' → logprob: -10.020753860473633
    10. '        
' → logprob: -10.520753860473633

Token 583: ' Cela' (ID: 44403)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.33208778500556946
    2. '       ' → logprob: -1.957087755203247
    3. ' m' → logprob: -1.957087755203247
    4. ' ' → logprob: -11.582087516784668
    5. '	m' → logprob: -12.332087516784668
    6. '   ' → logprob: -12.457087516784668
    7. ' ' → logprob: -12.582087516784668
    8. '
' → logprob: -12.582087516784668
    9. '        ' → logprob: -13.082087516784668
    10. '```' → logprob: -13.457087516784668

Token 584: ' permet' (ID: 11798)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5308399200439453
    2. ' =' → logprob: -1.2808399200439453
    3. ' permet' → logprob: -2.4058399200439453
    4. 'm' → logprob: -4.655839920043945
    5. 'serv' → logprob: -4.780839920043945
    6. ' permettra' → logprob: -4.905839920043945
    7. ' sert' → logprob: -5.780839920043945
    8. 's' → logprob: -6.030839920043945
    9. 'per' → logprob: -6.155839920043945
    10. 'serve' → logprob: -6.405839920043945

Token 585: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4565093517303467
    2. 'd' → logprob: -1.0815093517303467
    3. ' de' → logprob: -3.9565093517303467
    4. '       ' → logprob: -5.456509590148926
    5. ' d' → logprob: -5.956509590148926
    6. '#' → logprob: -6.956509590148926
    7. '   ' → logprob: -8.456509590148926
    8. 'm' → logprob: -9.706509590148926
    9. '           ' → logprob: -10.331509590148926
    10. 'à' → logprob: -10.456509590148926

Token 586: ' simpl' (ID: 15693)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0758482217788696
    2. 'dé' → logprob: -1.3258482217788696
    3. 'm' → logprob: -1.8258482217788696
    4. ' déterminer' → logprob: -2.70084810256958
    5. 'tr' → logprob: -2.95084810256958
    6. 's' → logprob: -3.20084810256958
    7. '#' → logprob: -4.32584810256958
    8. ' définir' → logprob: -5.07584810256958
    9. 'determ' → logprob: -5.07584810256958
    10. ' s' → logprob: -5.45084810256958

Token 587: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.03299367055296898
    2. 'imiter' → logprob: -4.407993793487549
    3. 'im' → logprob: -4.907993793487549
    4. '```' → logprob: -5.657993793487549
    5. 'if' → logprob: -6.282993793487549
    6. 'er' → logprob: -6.782993793487549
    7. 'iter' → logprob: -7.407993793487549
    8. 'iquer' → logprob: -7.407993793487549
    9. '#' → logprob: -7.532993793487549
    10. 'iser' → logprob: -7.532993793487549

Token 588: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.16629958152771
    2. 'm' → logprob: -1.66629958152771
    3. ' m' → logprob: -1.91629958152771
    4. 'la' → logprob: -2.16629958152771
    5. ' l' → logprob: -2.29129958152771
    6. 'l' → logprob: -2.41629958152771
    7. ' le' → logprob: -4.041299819946289
    8. 'le' → logprob: -4.166299819946289
    9. 'range' → logprob: -5.291299819946289
    10. 'min' → logprob: -6.416299819946289

Token 589: ' calcul' (ID: 7559)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9453082084655762
    2. 'diff' → logprob: -1.3203082084655762
    3. 'interval' → logprob: -2.195308208465576
    4. 'distance' → logprob: -2.445308208465576
    5. 'min' → logprob: -2.570308208465576
    6. 'm' → logprob: -3.320308208465576
    7. 'for' → logprob: -5.070308208465576
    8. 'éc' → logprob: -5.195308208465576
    9. 'length' → logprob: -5.695308208465576
    10. 'if' → logprob: -5.945308208465576

Token 590: ' des' (ID: 731)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7595958113670349
    2. '       ' → logprob: -1.0095958709716797
    3. ' m' → logprob: -1.8845958709716797
    4. ' de' → logprob: -4.75959587097168
    5. 'min' → logprob: -6.38459587097168
    6. 'de' → logprob: -7.13459587097168
    7. ' min' → logprob: -7.38459587097168
    8. 'd' → logprob: -7.38459587097168
    9. '(m' → logprob: -7.88459587097168
    10. ' of' → logprob: -8.00959587097168

Token 591: ' autres' (ID: 18701)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6880388855934143
    2. ' M' → logprob: -0.8130388855934143
    3. 'abs' → logprob: -3.9380388259887695
    4. ' abs' → logprob: -3.9380388259887695
    5. 'distance' → logprob: -5.4380388259887695
    6. 'diff' → logprob: -6.1880388259887695
    7. 'interval' → logprob: -6.5630388259887695
    8. 'positions' → logprob: -6.8130388259887695
    9. ' distances' → logprob: -6.9380388259887695
    10. ' distance' → logprob: -7.3130388259887695

Token 592: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8614485263824463
    2. 'positions' → logprob: -1.8614485263824463
    3. 'for' → logprob: -2.2364485263824463
    4. 'm' → logprob: -3.1114485263824463
    5. ' indices' → logprob: -3.1114485263824463
    6. 'éc' → logprob: -3.3614485263824463
    7. 'diff' → logprob: -3.4864485263824463
    8. 'dist' → logprob: -3.8614485263824463
    9. ' for' → logprob: -4.111448287963867
    10. 'k' → logprob: -4.236448287963867

Token 593: ' pertin' (ID: 74549)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09407740831375122
    2. 'm' → logprob: -2.7190773487091064
    3. ' m' → logprob: -3.8440773487091064
    4. '   ' → logprob: -7.4690775871276855
    5. ' =' → logprob: -7.7190775871276855
    6. ',' → logprob: -8.094077110290527
    7. '(m' → logprob: -8.219077110290527
    8. '	m' → logprob: -8.469077110290527
    9. '           ' → logprob: -9.094077110290527
    10. '```' → logprob: -9.719077110290527

Token 594: 'ents' (ID: 1094)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004732249304652214
    2. 'imum' → logprob: -6.504732131958008
    3. 'min' → logprob: -6.879732131958008
    4. 's' → logprob: -8.004732131958008
    5. ' m' → logprob: -8.379732131958008
    6. '_m' → logprob: -8.379732131958008
    7. 'érieurs' → logprob: -8.879732131958008
    8. 'um' → logprob: -9.004732131958008
    9. '   ' → logprob: -9.004732131958008
    10. 'if' → logprob: -9.129732131958008

Token 595: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018286957638338208
    2. 'm' → logprob: -6.751828670501709
    3. ',' → logprob: -8.251829147338867
    4. ' m' → logprob: -9.001829147338867
    5. '```' → logprob: -9.251829147338867
    6. '.' → logprob: -9.501829147338867
    7. '   ' → logprob: -11.376829147338867
    8. ':' → logprob: -11.501829147338867
    9. '           ' → logprob: -11.751829147338867
    10. '(m' → logprob: -11.751829147338867

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006768120219931006
    2. 'm' → logprob: -8.000677108764648
    3. ' m' → logprob: -8.875677108764648
    4. ',' → logprob: -10.000677108764648
    5. '
' → logprob: -10.375677108764648
    6. '        
' → logprob: -10.625677108764648
    7. '	m' → logprob: -10.875677108764648
    8. '	' → logprob: -10.875677108764648
    9. '(m' → logprob: -11.250677108764648
    10. ',m' → logprob: -11.500677108764648

Token 597: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790555477142334
    2. 'm' (adapté à ' m') → logprob: -0.8290555477142334
    3. ' m' → logprob: -5.8290557861328125
    4. '	m' → logprob: -9.579055786132812
    5. '   ' → logprob: -10.454055786132812
    6. '	' → logprob: -11.204055786132812
    7. ' ' → logprob: -11.329055786132812
    8. ',' → logprob: -11.704055786132812
    9. '        ' → logprob: -12.204055786132812
    10. '        
' → logprob: -12.329055786132812

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13683784008026123
    2. ' =' → logprob: -2.136837959289551
    3. ',' → logprob: -4.636837959289551
    4. '=min' → logprob: -8.88683795928955
    5. '=m' → logprob: -10.88683795928955
    6. ',m' → logprob: -12.26183795928955
    7. '=int' → logprob: -12.51183795928955
    8. ',min' → logprob: -13.01183795928955
    9. ' ,' → logprob: -13.51183795928955
    10. '=i' → logprob: -13.63683795928955

Token 599: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931474208831787
    2. 'min' → logprob: -0.6931474208831787
    3. '	min' → logprob: -15.318147659301758
    4. '(min' → logprob: -16.693147659301758
    5. ' ' → logprob: -18.318147659301758
    6. '   ' → logprob: -18.943147659301758
    7. ',min' → logprob: -19.068147659301758
    8. '=min' → logprob: -19.568147659301758
    9. ' i' → logprob: -20.068147659301758
    10. '[min' → logprob: -20.193147659301758

Token 600: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(
' → logprob: -18.750001907348633
    4. ' (' → logprob: -19.375001907348633
    5. '(I' → logprob: -20.875001907348633
    6. 'i' → logprob: -20.875001907348633
    7. '[i' → logprob: -22.125001907348633
    8. '((' → logprob: -22.125001907348633
    9. '(ii' → logprob: -23.125001907348633
    10. '([' → logprob: -23.375001907348633

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019322136417031288
    2. ',j' → logprob: -4.019321918487549
    3. ' ,' → logprob: -6.769321918487549
    4. 'j' → logprob: -11.894322395324707
    5. ',
' → logprob: -11.894322395324707
    6. ',i' → logprob: -12.394322395324707
    7. ')' → logprob: -13.394322395324707
    8. ',m' → logprob: -13.769322395324707
    9. ' j' → logprob: -14.644322395324707
    10. ',n' → logprob: -14.894322395324707

Token 602: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005530327325686812
    2. ' j' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '	j' → logprob: -18.125553131103516
    5. ' ' → logprob: -19.750553131103516
    6. '  ' → logprob: -20.250553131103516
    7. '    ' → logprob: -20.500553131103516
    8. ')' → logprob: -20.625553131103516
    9. '       ' → logprob: -20.750553131103516
    10. ',j' → logprob: -20.875553131103516

Token 603: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029855774715542793
    2. ')' → logprob: -3.529855728149414
    3. ')
' → logprob: -9.404855728149414
    4. '       ' → logprob: -10.779855728149414
    5. ' )
' → logprob: -13.529855728149414
    6. ')

' → logprob: -14.654855728149414
    7. '   ' → logprob: -16.154855728149414
    8. '),' → logprob: -16.404855728149414
    9. ',' → logprob: -16.904855728149414
    10. ')`
' → logprob: -17.404855728149414

Token 604: '       ' (ID: 309)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.20941413938999176
    2. '       ' → logprob: -1.7094141244888306
    3. ' M' → logprob: -4.834414005279541
    4. '   ' → logprob: -11.8344144821167
    5. ',' → logprob: -12.7094144821167
    6. '           ' → logprob: -13.5844144821167
    7. ' ' → logprob: -13.5844144821167
    8. 'm' → logprob: -13.8344144821167
    9. '```' → logprob: -14.3344144821167
    10. '      ' → logprob: -14.7094144821167

Token 605: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -3.7697225252486533e-06
    2. ' M' → logprob: -12.500003814697266
    3. '       ' → logprob: -17.875003814697266
    4. 'm' → logprob: -20.375003814697266
    5. '```' → logprob: -20.750003814697266
    6. '
' → logprob: -22.000003814697266
    7. '        
' → logprob: -23.500003814697266
    8. '#' → logprob: -23.750003814697266
    9. '	M' → logprob: -24.000003814697266
    10. '`' → logprob: -24.250003814697266

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '=max' → logprob: -15.938261985778809
    4. 'max' → logprob: -18.313261032104492
    5. ' ' → logprob: -18.688261032104492
    6. ')' → logprob: -18.938261032104492
    7. '   ' → logprob: -19.063261032104492
    8. ',' → logprob: -19.188261032104492
    9. '＝' → logprob: -19.188261032104492
    10. '```' → logprob: -19.938261032104492

Token 607: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2014133334159851
    2. ' max' → logprob: -1.7014133930206299
    3. '(max' → logprob: -16.201414108276367
    4. '	max' → logprob: -18.076414108276367
    5. ' ' → logprob: -18.701414108276367
    6. '=max' → logprob: -18.951414108276367
    7. '[max' → logprob: -20.076414108276367
    8. ',max' → logprob: -20.701414108276367
    9. '   ' → logprob: -21.076414108276367
    10. '.max' → logprob: -21.451414108276367

Token 608: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. '(M' → logprob: -18.625
    4. '(I' → logprob: -18.875
    5. 'i' → logprob: -19.125
    6. ' (' → logprob: -20.0
    7. '(m' → logprob: -20.875
    8. '(
' → logprob: -20.875
    9. '(j' → logprob: -22.0
    10. '[i' → logprob: -22.25

Token 609: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0018478436395525932
    2. ',' → logprob: -6.501847743988037
    3. ')' → logprob: -8.751848220825195
    4. 'i' → logprob: -9.126848220825195
    5. ',i' → logprob: -9.876848220825195
    6. '(' → logprob: -10.876848220825195
    7. '),' → logprob: -12.626848220825195
    8. ' (' → logprob: -13.126848220825195
    9. ' ,' → logprob: -13.876848220825195
    10. ' i' → logprob: -14.126848220825195

Token 610: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5763984322547913
    2. 'j' → logprob: -0.8263984322547913
    3. ' i' → logprob: -7.9513983726501465
    4. ' j' → logprob: -9.201398849487305
    5. ')' → logprob: -12.701398849487305
    6. '   ' → logprob: -13.451398849487305
    7. 'M' → logprob: -14.951398849487305
    8. ' ' → logprob: -15.076398849487305
    9. '```' → logprob: -15.201398849487305
    10. 'm' → logprob: -15.701398849487305

Token 611: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018559236079454422
    2. '       ' → logprob: -4.143559455871582
    3. ')
' → logprob: -6.018559455871582
    4. '<|end|>' → logprob: -9.768559455871582
    5. '```' → logprob: -11.518559455871582
    6. ' )' → logprob: -12.518559455871582
    7. ',' → logprob: -13.143559455871582
    8. '#' → logprob: -13.143559455871582
    9. '<|end|>' → logprob: -13.518559455871582
    10. ')

' → logprob: -13.768559455871582

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3464296758174896
    2. 'k' → logprob: -2.0964295864105225
    3. '#' → logprob: -2.4714295864105225
    4. 'for' → logprob: -2.7214295864105225
    5. '```' → logprob: -4.596429824829102
    6. 't' → logprob: -5.971429824829102
    7. 'if' → logprob: -6.471429824829102
    8. '
' → logprob: -6.971429824829102
    9. '        
' → logprob: -7.346429824829102
    10. 'K' → logprob: -7.846429824829102

Token 613: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8053549528121948
    2. '       ' → logprob: -1.4303549528121948
    3. '#' (adapté à ' #') → logprob: -1.5553549528121948
    4. 'for' → logprob: -2.6803550720214844
    5. 'if' → logprob: -3.8053550720214844
    6. '```' → logprob: -6.305355072021484
    7. 'K' → logprob: -6.430355072021484
    8. 'x' → logprob: -6.680355072021484
    9. 'mid' → logprob: -6.930355072021484
    10. 't' → logprob: -7.055355072021484

Token 614: ' Cal' (ID: 4453)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3882805407047272
    2. '#' → logprob: -1.2632805109024048
    3. 'if' → logprob: -4.013280391693115
    4. 'for' → logprob: -4.263280391693115
    5. 'd' → logprob: -6.138280391693115
    6. 'x' → logprob: -6.638280391693115
    7. 'mid' → logprob: -7.013280391693115
    8. 'c' → logprob: -7.763280391693115
    9. 'C' → logprob: -8.138280868530273
    10. 'third' → logprob: -8.388280868530273

Token 615: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.1181255355477333
    2. 'cul' → logprob: -2.2431254386901855
    3. 'c' → logprob: -5.7431254386901855
    4. 'cules' → logprob: -7.1181254386901855
    5. '#' → logprob: -7.4931254386901855
    6. 'culate' → logprob: -7.7431254386901855
    7. 'cula' → logprob: -9.743125915527344
    8. '```' → logprob: -9.868125915527344
    9. '``' → logprob: -10.618125915527344
    10. '
' → logprob: -10.743125915527344

Token 616: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20734040439128876
    2. 'l' → logprob: -2.2073404788970947
    3. 'd' → logprob: -2.9573404788970947
    4. ' k' → logprob: -4.457340240478516
    5. '#' → logprob: -6.207340240478516
    6. 'diff' → logprob: -6.457340240478516
    7. ' l' → logprob: -6.582340240478516
    8. 'mid' → logprob: -6.707340240478516
    9. 'x' → logprob: -6.957340240478516
    10. 'the' → logprob: -7.082340240478516

Token 617: ' distance' (ID: 9324)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2857380211353302
    2. 'third' → logprob: -2.160737991333008
    3. 'd' → logprob: -2.410737991333008
    4. 'diff' → logprob: -4.160737991333008
    5. 'mid' → logprob: -4.535737991333008
    6. '#' → logprob: -6.035737991333008
    7. 'c' → logprob: -6.410737991333008
    8. 'other' → logprob: -6.535737991333008
    9. 't' → logprob: -6.535737991333008
    10. 'x' → logprob: -6.660737991333008

Token 618: ' r' (ID: 428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7121666073799133
    2. ' =' → logprob: -0.9621666073799133
    3. 'd' → logprob: -2.0871665477752686
    4. 'diff' → logprob: -6.462166786193848
    5. 'dist' → logprob: -7.087166786193848
    6. 'D' → logprob: -8.087166786193848
    7. '=d' → logprob: -8.462166786193848
    8. 'between' → logprob: -9.587166786193848
    9. 'distance' → logprob: -9.837166786193848
    10. ' d' → logprob: -9.837166786193848

Token 619: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09288790822029114
    2. '=' → logprob: -2.4678878784179688
    3. 'ight' → logprob: -5.717887878417969
    4. 'e' → logprob: -8.592887878417969
    5. ' ' → logprob: -8.717887878417969
    6. 'ange' → logprob: -9.467887878417969
    7. 'r' → logprob: -9.967887878417969
    8. ' ' → logprob: -10.467887878417969
    9. 'a' → logprob: -10.967887878417969
    10. '   ' → logprob: -11.092887878417969

Token 620: ' les' (ID: 1341)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.009783834218978882
    2. ' M' → logprob: -5.384783744812012
    3. 'i' → logprob: -5.509783744812012
    4. 'm' → logprob: -7.009783744812012
    5. 'j' → logprob: -9.259783744812012
    6. ' i' → logprob: -9.634783744812012
    7. 'l' → logprob: -11.134783744812012
    8. 'N' → logprob: -12.259783744812012
    9. ' m' → logprob: -12.759783744812012
    10. ' ' → logprob: -13.134783744812012

Token 621: ' indices' (ID: 30378)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.052898090332746506
    2. 'm' → logprob: -3.5528981685638428
    3. 'i' → logprob: -3.8028981685638428
    4. 'j' → logprob: -7.677897930145264
    5. ' M' → logprob: -9.802898406982422
    6. 'indices' → logprob: -10.677898406982422
    7. ' i' → logprob: -11.927898406982422
    8. 'N' → logprob: -13.052898406982422
    9. 'I' → logprob: -13.240398406982422
    10. ' m' → logprob: -13.302898406982422

Token 622: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.40527448058128357
    2. 'i' → logprob: -1.780274510383606
    3. '=' → logprob: -2.7802743911743164
    4. ' =' → logprob: -2.9052743911743164
    5. 'r' → logprob: -4.405274391174316
    6. 'm' → logprob: -4.780274391174316
    7. ' M' → logprob: -5.030274391174316
    8. 'd' → logprob: -5.155274391174316
    9. '(i' → logprob: -6.030274391174316
    10. 'diff' → logprob: -6.030274391174316

Token 623: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40798884630203247
    2. 'and' → logprob: -1.5329887866973877
    3. '-' → logprob: -2.9079887866973877
    4. ' et' → logprob: -3.5329887866973877
    5. ' -' → logprob: -4.157989025115967
    6. '+' → logprob: -5.032989025115967
    7. 'et' → logprob: -5.032989025115967
    8. ',' → logprob: -5.657989025115967
    9. 'm' → logprob: -7.282989025115967
    10. '-r' → logprob: -7.407989025115967

Token 624: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029753267765045166
    2. ' m' → logprob: -3.5297532081604004
    3. ' ' → logprob: -13.529753684997559
    4. ' ' → logprob: -14.779753684997559
    5. '	m' → logprob: -15.529753684997559
    6. ',' → logprob: -15.779753684997559
    7. 'i' → logprob: -16.279752731323242
    8. '```' → logprob: -16.279752731323242
    9. '<|end|>' → logprob: -16.529752731323242
    10. '`' → logprob: -16.967252731323242

Token 625: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49831780791282654
    2. ' =' → logprob: -0.9983178377151489
    3. 'r' → logprob: -4.123317718505859
    4. '       ' → logprob: -4.998317718505859
    5. '=r' → logprob: -7.623317718505859
    6. '+' → logprob: -7.873317718505859
    7. '   ' → logprob: -9.87331771850586
    8. 'd' → logprob: -10.49831771850586
    9. '-' → logprob: -11.49831771850586
    10. '=M' → logprob: -11.74831771850586

Token 626: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014193004928529263
    2. '       ' → logprob: -4.264193058013916
    3. ' r' → logprob: -10.639192581176758
    4. '```' → logprob: -13.389192581176758
    5. '        ' → logprob: -13.514192581176758
    6. '=' → logprob: -14.389192581176758
    7. '        
' → logprob: -14.389192581176758
    8. ' =' → logprob: -14.639192581176758
    9. '   ' → logprob: -14.764192581176758
    10. '           ' → logprob: -15.889192581176758

Token 627: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.004082078114151955
    2. '       ' → logprob: -5.504082202911377
    3. ' r' → logprob: -13.129081726074219
    4. '```' → logprob: -14.129081726074219
    5. '        
' → logprob: -15.254081726074219
    6. '        ' → logprob: -15.379081726074219
    7. '
' → logprob: -15.754081726074219
    8. '           ' → logprob: -16.25408172607422
    9. '   ' → logprob: -16.62908172607422
    10. '      ' → logprob: -16.62908172607422

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246178403496742
    2. ' =' → logprob: -3.7732462882995605
    3. '=r' → logprob: -14.648245811462402
    4. '=M' → logprob: -15.523245811462402
    5. ',' → logprob: -19.27324676513672
    6. '＝' → logprob: -19.52324676513672
    7. '=m' → logprob: -19.77324676513672
    8. '=int' → logprob: -20.39824676513672
    9. ' ' → logprob: -20.39824676513672
    10. '=s' → logprob: -20.89824676513672

Token 629: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007102862582542002
    2. ' M' → logprob: -7.250710487365723
    3. 'abs' → logprob: -15.375710487365723
    4. '   ' → logprob: -15.750710487365723
    5. '	M' → logprob: -17.875709533691406
    6. '(M' → logprob: -18.750709533691406
    7. ' ' → logprob: -19.125709533691406
    8. ' abs' → logprob: -19.500709533691406
    9. '  ' → logprob: -20.750709533691406
    10. '       ' → logprob: -21.125709533691406

Token 630: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141959190368652
    2. ' -' → logprob: -1.7014195919036865
    3. '-m' → logprob: -12.076419830322266
    4. 'm' → logprob: -16.076419830322266
    5. ' ' → logprob: -16.201419830322266
    6. '   ' → logprob: -16.451419830322266
    7. '-r' → logprob: -16.576419830322266
    8. '```' → logprob: -16.701419830322266
    9. ' ' → logprob: -17.576419830322266
    10. ' m' → logprob: -17.701419830322266

Token 631: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.2729995988775045e-06
    2. ' m' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -19.8750057220459
    4. '	m' → logprob: -22.2500057220459
    5. ' ' → logprob: -22.3750057220459
    6. '   ' → logprob: -22.6250057220459
    7. 'м' → logprob: -23.5000057220459
    8. '```' → logprob: -23.7500057220459
    9. '  ' → logprob: -24.1250057220459
    10. '`' → logprob: -25.0000057220459

Token 632: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19960016012191772
    2. 'for' → logprob: -2.1996002197265625
    3. 'if' → logprob: -2.9496002197265625
    4. 'k' → logprob: -4.9496002197265625
    5. '#' → logprob: -5.3246002197265625
    6. ' for' → logprob: -6.3246002197265625
    7. ' if' → logprob: -6.9496002197265625
    8. '<|end|>' → logprob: -7.3246002197265625
    9. '        
' → logprob: -7.9496002197265625
    10. '
' → logprob: -8.074600219726562

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14566980302333832
    2. '#' → logprob: -2.89566969871521
    3. 'k' → logprob: -3.27066969871521
    4. 'for' → logprob: -3.89566969871521
    5. 'if' → logprob: -4.020669937133789
    6. 't' → logprob: -6.645669937133789
    7. '```' → logprob: -7.645669937133789
    8. '        
' → logprob: -8.020669937133789
    9. '           ' → logprob: -8.520669937133789
    10. ' for' → logprob: -8.645669937133789

Token 634: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21913443505764008
    2. '#' (adapté à ' #') → logprob: -2.4691343307495117
    3. 'if' → logprob: -2.4691343307495117
    4. 'for' → logprob: -3.7191343307495117
    5. 'x' → logprob: -7.094134330749512
    6. 'c' → logprob: -7.469134330749512
    7. 'K' → logprob: -7.469134330749512
    8. 'idx' → logprob: -8.844134330749512
    9. 'mid' → logprob: -8.969134330749512
    10. 'C' → logprob: -9.094134330749512

Token 635: ' Cal' (ID: 4453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0771905183792114
    2. 'if' → logprob: -1.0771905183792114
    3. 'k' → logprob: -1.2021905183792114
    4. 'for' → logprob: -4.452190399169922
    5. 'c' → logprob: -6.202190399169922
    6. 'x' → logprob: -6.327190399169922
    7. 'mid' → logprob: -7.577190399169922
    8. 'p' → logprob: -7.702190399169922
    9. 'd' → logprob: -7.952190399169922
    10. 'C' → logprob: -7.952190399169922

Token 636: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.6228927373886108
    2. 'cule' → logprob: -0.8728927373886108
    3. 'culate' → logprob: -3.9978928565979004
    4. '#' → logprob: -4.4978928565979
    5. 'cules' → logprob: -5.2478928565979
    6. 'c' → logprob: -5.6228928565979
    7. 'if' → logprob: -6.2478928565979
    8. '       ' → logprob: -6.7478928565979
    9. '```' → logprob: -6.7478928565979
    10. '   ' → logprob: -6.9978928565979

Token 637: ' l' (ID: 305)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0025354712270200253
    2. ' k' → logprob: -6.877535343170166
    3. 'x' → logprob: -7.252535343170166
    4. 'c' → logprob: -8.627535820007324
    5. 'l' → logprob: -9.127535820007324
    6. '       ' → logprob: -9.377535820007324
    7. 'the' → logprob: -10.127535820007324
    8. 'K' → logprob: -10.127535820007324
    9. 't' → logprob: -10.377535820007324
    10. 'third' → logprob: -10.502535820007324

Token 638: ''ind' (ID: 82245)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11131249368190765
    2. 'x' → logprob: -2.6113123893737793
    3. 'c' → logprob: -4.361312389373779
    4. '#' → logprob: -5.361312389373779
    5. 'l' → logprob: -5.861312389373779
    6. 'mid' → logprob: -5.986312389373779
    7. 'd' → logprob: -6.236312389373779
    8. 'a' → logprob: -7.111312389373779
    9. 'p' → logprob: -7.361312389373779
    10. '```' → logprob: -7.486312389373779

Token 639: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.010254510678350925
    2. 'e' → logprob: -5.135254383087158
    3. 'x' → logprob: -6.635254383087158
    4. 'd' → logprob: -6.760254383087158
    5. 'é' → logprob: -7.260254383087158
    6. 'ices' → logprob: -7.885254383087158
    7. 'k' → logprob: -8.510254859924316
    8. '#' → logprob: -9.010254859924316
    9. 't' → logprob: -10.135254859924316
    10. 'è' → logprob: -10.260254859924316

Token 640: ' situé' (ID: 61343)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.021303629502654076
    2. ' k' → logprob: -4.271303653717041
    3. 'x' → logprob: -6.146303653717041
    4. 'c' → logprob: -6.771303653717041
    5. 'd' → logprob: -6.896303653717041
    6. 'mid' → logprob: -7.646303653717041
    7. 't' → logprob: -8.271303176879883
    8. 'r' → logprob: -8.771303176879883
    9. '```' → logprob: -8.771303176879883
    10. 'M' → logprob: -8.896303176879883

Token 641: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5797940492630005
    2. 'au' → logprob: -1.4547940492630005
    3. 'at' → logprob: -2.579793930053711
    4. '       ' → logprob: -3.579793930053711
    5. 'k' → logprob: -4.079793930053711
    6. ' à' → logprob: -4.204793930053711
    7. 'm' → logprob: -4.329793930053711
    8. 'M' → logprob: -4.454793930053711
    9. 'exact' → logprob: -4.579793930053711
    10. '```' → logprob: -4.954793930053711

Token 642: ' gauche' (ID: 58367)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02703724429011345
    2. '2' → logprob: -3.6520371437072754
    3. 'm' → logprob: -7.402037143707275
    4. ' M' → logprob: -9.652037620544434
    5. 'r' → logprob: -10.652037620544434
    6. ' ' → logprob: -11.277037620544434
    7. '(' → logprob: -11.902037620544434
    8. '(M' → logprob: -11.902037620544434
    9. '
' → logprob: -13.152037620544434
    10. '3' → logprob: -13.902037620544434

Token 643: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0468323230743408
    2. 'm' → logprob: -1.4218323230743408
    3. 'k' → logprob: -1.6718323230743408
    4. ' =' → logprob: -2.796832323074341
    5. '=' → logprob: -3.421832323074341
    6. 'left' → logprob: -3.421832323074341
    7. '       ' → logprob: -3.671832323074341
    8. 'g' → logprob: -4.296832084655762
    9. 'L' → logprob: -4.546832084655762
    10. 'de' → logprob: -4.796832084655762

Token 644: 'left' (ID: 4530)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010983562096953392
    2. 'l' → logprob: -5.260983467102051
    3. 'left' → logprob: -5.635983467102051
    4. 'g' → logprob: -6.510983467102051
    5. 'L' → logprob: -8.38598346710205
    6. 'M' → logprob: -10.26098346710205
    7. ')' → logprob: -10.26098346710205
    8. '2' → logprob: -10.51098346710205
    9. 'ml' → logprob: -10.51098346710205
    10. 'mid' → logprob: -10.63598346710205

Token 645: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2212076634168625
    2. '=' → logprob: -1.971207618713379
    3. 'm' → logprob: -3.221207618713379
    4. ')' → logprob: -4.721207618713379
    5. 'idx' → logprob: -6.596207618713379
    6. '_idx' → logprob: -6.846207618713379
    7. 'left' → logprob: -6.971207618713379
    8. 'x' → logprob: -6.971207618713379
    9. '_m' → logprob: -7.221207618713379
    10. ']' → logprob: -7.596207618713379

Token 646: ' et' (ID: 859)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.49781176447868347
    2. '=' → logprob: -1.4978117942810059
    3. ' =' → logprob: -1.8728117942810059
    4. 'l' → logprob: -5.122811794281006
    5. '       ' → logprob: -5.747811794281006
    6. ' left' → logprob: -5.872811794281006
    7. '   ' → logprob: -6.747811794281006
    8. '```' → logprob: -8.247811317443848
    9. '           ' → logprob: -8.497811317443848
    10. '[left' → logprob: -8.747811317443848

Token 647: ' à' (ID: 1221)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.19575592875480652
    2. 'à' → logprob: -2.445755958557129
    3. 'middle' → logprob: -3.195755958557129
    4. 'au' → logprob: -4.695755958557129
    5. 'r' → logprob: -4.695755958557129
    6. ' right' → logprob: -4.820755958557129
    7. 'm' → logprob: -4.820755958557129
    8. ' à' → logprob: -4.820755958557129
    9. ' au' → logprob: -6.695755958557129
    10. 'l' → logprob: -7.070755958557129

Token 648: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.16674315929412842
    2. ' droite' → logprob: -2.541743278503418
    3. 'right' → logprob: -2.666743278503418
    4. 'l' → logprob: -5.291743278503418
    5. 'la' → logprob: -9.041743278503418
    6. 'd' → logprob: -9.166743278503418
    7. 'distance' → logprob: -9.916743278503418
    8. ' right' → logprob: -11.041743278503418
    9. 'dre' → logprob: -11.416743278503418
    10. 'r' → logprob: -11.541743278503418

Token 649: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.9527496099472046
    2. '=' → logprob: -1.0777496099472046
    3. ' =' → logprob: -2.077749729156494
    4. 'left' → logprob: -2.327749729156494
    5. 'right' → logprob: -4.577749729156494
    6. '(right' → logprob: -4.827749729156494
    7. '(m' → logprob: -5.077749729156494
    8. '(l' → logprob: -5.452749729156494
    9. '   ' → logprob: -5.702749729156494
    10. ' (' → logprob: -5.702749729156494

Token 650: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0330260768532753
    2. '(right' → logprob: -3.5330259799957275
    3. ' right' → logprob: -6.533026218414307
    4. ')' → logprob: -7.408026218414307
    5. '[right' → logprob: -8.408025741577148
    6. ' (' → logprob: -8.533025741577148
    7. '```' → logprob: -8.658025741577148
    8. 'd' → logprob: -9.408025741577148
    9. 'left' → logprob: -9.533025741577148
    10. '#' → logprob: -9.908025741577148

Token 651: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5506705045700073
    2. '=' → logprob: -1.1756705045700073
    3. 'left' → logprob: -2.800670623779297
    4. ')' → logprob: -3.175670623779297
    5. '_left' → logprob: -5.550670623779297
    6. 'd' → logprob: -6.300670623779297
    7. 'right' → logprob: -7.175670623779297
    8. '_' → logprob: -7.300670623779297
    9. ']' → logprob: -7.300670623779297
    10. '```' → logprob: -7.425670623779297

Token 652: ' à' (ID: 1221)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.15959741175174713
    2. '=' → logprob: -2.034597396850586
    3. ' =' → logprob: -4.659597396850586
    4. 'l' → logprob: -5.784597396850586
    5. ' left' → logprob: -6.409597396850586
    6. '       ' → logprob: -6.909597396850586
    7. '[left' → logprob: -7.784597396850586
    8. '   ' → logprob: -8.034597396850586
    9. '(left' → logprob: -8.909597396850586
    10. 'L' → logprob: -9.034597396850586

Token 653: ' une' (ID: 2463)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08058041334152222
    2. 'l' → logprob: -3.455580472946167
    3. 'M' → logprob: -3.830580472946167
    4. '2' → logprob: -4.205580234527588
    5. 'r' → logprob: -5.080580234527588
    6. 'distance' → logprob: -6.705580234527588
    7. '1' → logprob: -8.080580711364746
    8. 'i' → logprob: -8.580580711364746
    9. 'mi' → logprob: -8.580580711364746
    10. 'equal' → logprob: -8.705580711364746

Token 654: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.014031394384801388
    2. 'm' → logprob: -5.139031410217285
    3. ' distance' → logprob: -6.014031410217285
    4. 'left' → logprob: -6.389031410217285
    5. 'd' → logprob: -6.889031410217285
    6. 'step' → logprob: -7.514031410217285
    7. 'pas' → logprob: -7.514031410217285
    8. 'l' → logprob: -7.639031410217285
    9. 'dist' → logprob: -7.889031410217285
    10. 'position' → logprob: -8.389031410217285

Token 655: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6637607216835022
    2. 'd' → logprob: -1.2887606620788574
    3. 'm' → logprob: -2.4137606620788574
    4. '2' → logprob: -3.1637606620788574
    5. 'de' → logprob: -3.7887606620788574
    6. ' d' → logprob: -5.038760662078857
    7. ' r' → logprob: -5.163760662078857
    8. 'l' → logprob: -5.288760662078857
    9. ' de' → logprob: -5.288760662078857
    10. ' m' → logprob: -5.288760662078857

Token 656: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04679841548204422
    2. 'à' → logprob: -3.9217984676361084
    3. 'from' → logprob: -4.921798229217529
    4. 'to' → logprob: -5.421798229217529
    5. '=' → logprob: -5.546798229217529
    6. '   ' → logprob: -6.171798229217529
    7. '       ' → logprob: -6.296798229217529
    8. 'g' → logprob: -6.671798229217529
    9. ' à' → logprob: -6.796798229217529
    10. ' left' → logprob: -6.921798229217529

Token 657: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011744368821382523
    2. 'M' → logprob: -5.386744499206543
    3. ' m' → logprob: -5.386744499206543
    4. 'l' → logprob: -6.136744499206543
    5. ' M' → logprob: -8.511744499206543
    6. 'la' → logprob: -9.761744499206543
    7. 'min' → logprob: -10.761744499206543
    8. ' l' → logprob: -10.761744499206543
    9. ' la' → logprob: -10.761744499206543
    10. ' ' → logprob: -11.636744499206543

Token 658: ' et' (ID: 859)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1098436564207077
    2. '-' → logprob: -2.6098437309265137
    3. ' -' → logprob: -4.734843730926514
    4. '*' → logprob: -5.109843730926514
    5. '-left' → logprob: -5.734843730926514
    6. '_left' → logprob: -5.734843730926514
    7. ' left' → logprob: -5.984843730926514
    8. '       ' → logprob: -6.109843730926514
    9. '
' → logprob: -6.734843730926514
    10. '+' → logprob: -7.359843730926514

Token 659: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00015157493180595338
    2. ' M' → logprob: -8.875151634216309
    3. 'm' → logprob: -13.000151634216309
    4. '```' → logprob: -13.375151634216309
    5. '   ' → logprob: -13.500151634216309
    6. ' ' → logprob: -13.500151634216309
    7. 'l' → logprob: -14.375151634216309
    8. '(M' → logprob: -14.500151634216309
    9. '<M' → logprob: -14.625151634216309
    10. 'r' → logprob: -15.187651634216309

Token 660: '.
' (ID: 558)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08261474967002869
    2. ' =' → logprob: -3.2076146602630615
    3. '=' → logprob: -4.207614898681641
    4. '       ' → logprob: -4.707614898681641
    5. ' left' → logprob: -4.957614898681641
    6. '   ' → logprob: -5.582614898681641
    7. '_left' → logprob: -6.332614898681641
    8. ',' → logprob: -7.957614898681641
    9. '
' → logprob: -8.20761489868164
    10. '[left' → logprob: -8.58261489868164

Token 661: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03182957321405411
    2. '       ' → logprob: -3.531829595565796
    3. ' left' → logprob: -6.281829357147217
    4. '```' → logprob: -9.531829833984375
    5. '[left' → logprob: -10.156829833984375
    6. '	left' → logprob: -10.406829833984375
    7. '
' → logprob: -10.906829833984375
    8. '   ' → logprob: -11.031829833984375
    9. '_left' → logprob: -12.531829833984375
    10. 'lef' → logprob: -12.531829833984375

Token 662: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -7.696077227592468e-05
    2. ' left' → logprob: -9.625077247619629
    3. 'right' → logprob: -12.375077247619629
    4. '
' → logprob: -13.125077247619629
    5. '	left' → logprob: -13.500077247619629
    6. '       ' → logprob: -14.125077247619629
    7. '[left' → logprob: -14.250077247619629
    8. 'lef' → logprob: -14.250077247619629
    9. 'l' → logprob: -14.625077247619629
    10. '_left' → logprob: -16.000076293945312

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. ',' → logprob: -14.951414108276367
    4. '＝' → logprob: -15.451414108276367
    5. ' ' → logprob: -15.951414108276367
    6. '```' → logprob: -17.326414108276367
    7. '=m' → logprob: -17.826414108276367
    8. '_' → logprob: -18.201414108276367
    9. 's' → logprob: -18.576414108276367
    10. ')' → logprob: -18.701414108276367

Token 664: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.6312321753939614e-05
    2. 'M' → logprob: -10.250036239624023
    3. ' m' → logprob: -14.250036239624023
    4. 'max' → logprob: -15.625036239624023
    5. '(m' → logprob: -18.750036239624023
    6. '_m' → logprob: -19.250036239624023
    7. '   ' → logprob: -19.375036239624023
    8. '	m' → logprob: -19.750036239624023
    9. ' ' → logprob: -20.125036239624023
    10. 'abs' → logprob: -20.375036239624023

Token 665: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03823805972933769
    2. ' -' → logprob: -3.288238048553467
    3. '-r' → logprob: -8.538238525390625
    4. ' r' → logprob: -15.788238525390625
    5. '−' → logprob: -15.913238525390625
    6. 'r' → logprob: -16.038238525390625
    7. '+' → logprob: -16.413238525390625
    8. '-R' → logprob: -16.413238525390625
    9. ' ' → logprob: -17.288238525390625
    10. '-ra' → logprob: -17.538238525390625

Token 666: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -15.625
    3. '_r' → logprob: -23.875
    4. '2' → logprob: -23.875
    5. '	r' → logprob: -24.75
    6. '
' → logprob: -25.5
    7. '1' → logprob: -25.5
    8. '$r' → logprob: -26.0
    9. '(r' → logprob: -26.375
    10. '(' → logprob: -26.5

Token 667: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09313057363033295
    2. '       ' → logprob: -2.843130588531494
    3. 'if' → logprob: -3.843130588531494
    4. ' right' → logprob: -4.843130588531494
    5. ' if' → logprob: -7.093130588531494
    6. '
' → logprob: -8.718130111694336
    7. ',right' → logprob: -9.343130111694336
    8. '	right' → logprob: -9.468130111694336
    9. '[right' → logprob: -10.218130111694336
    10. 'left' → logprob: -10.343130111694336

Token 668: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0024468773044645786
    2. '       ' → logprob: -6.50244665145874
    3. ' right' → logprob: -7.37744665145874
    4. 'if' → logprob: -8.377447128295898
    5. ',right' → logprob: -10.252447128295898
    6. '	right' → logprob: -10.627447128295898
    7. ' if' → logprob: -11.752447128295898
    8. '[right' → logprob: -11.877447128295898
    9. '<|end|>' → logprob: -12.252447128295898
    10. ',' → logprob: -12.752447128295898

Token 669: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0005794849130325019
    2. 'if' → logprob: -7.500579357147217
    3. ' right' → logprob: -10.625579833984375
    4. 'rig' → logprob: -14.500579833984375
    5. ' if' → logprob: -15.125579833984375
    6. ',right' → logprob: -15.375579833984375
    7. '[right' → logprob: -15.375579833984375
    8. '	right' → logprob: -15.750579833984375
    9. 'Right' → logprob: -15.750579833984375
    10. '#' → logprob: -15.875579833984375

Token 670: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022412478923798
    2. ' =' → logprob: -1.9102240800857544
    3. '＝' → logprob: -19.53522491455078
    4. ' ' → logprob: -20.03522491455078
    5. '=M' → logprob: -20.41022491455078
    6. '   ' → logprob: -20.66022491455078
    7. ',' → logprob: -20.91022491455078
    8. ')' → logprob: -20.91022491455078
    9. '.' → logprob: -21.28522491455078
    10. '.=' → logprob: -21.66022491455078

Token 671: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.000553151941858232
    2. ' M' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. ' ' → logprob: -18.250553131103516
    5. '       ' → logprob: -18.250553131103516
    6. '  ' → logprob: -18.875553131103516
    7. '    ' → logprob: -19.750553131103516
    8. 'Ｍ' → logprob: -20.250553131103516
    9. '	M' → logprob: -20.375553131103516
    10. '           ' → logprob: -20.875553131103516

Token 672: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132619559764862
    2. '+' → logprob: -1.3132619857788086
    3. ' plus' → logprob: -16.063261032104492
    4. '=' → logprob: -17.313261032104492
    5. '+r' → logprob: -17.438261032104492
    6. '[' → logprob: -17.563261032104492
    7. '<|end|>' → logprob: -17.563261032104492
    8. ' +
' → logprob: -18.063261032104492
    9. '＋' → logprob: -18.313261032104492
    10. ' ' → logprob: -18.563261032104492

Token 673: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.7432603272027336e-06
    2. ' r' → logprob: -13.375001907348633
    3. '1' → logprob: -16.625001907348633
    4. '	r' → logprob: -21.000001907348633
    5. '   ' → logprob: -21.000001907348633
    6. ' ' → logprob: -21.625001907348633
    7. '$r' → logprob: -22.125001907348633
    8. '```' → logprob: -22.125001907348633
    9. '<|end|>' → logprob: -22.250001907348633
    10. '_r' → logprob: -23.000001907348633

Token 674: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05119020491838455
    2. '
' → logprob: -3.926190137863159
    3. '<|end|>' → logprob: -4.051190376281738
    4. 'if' → logprob: -4.926190376281738
    5. ' if' → logprob: -6.176190376281738
    6. '        
' → logprob: -6.176190376281738
    7. '#' → logprob: -7.551190376281738
    8. '```' → logprob: -8.801190376281738
    9. '   ' → logprob: -8.926190376281738
    10. '  
' → logprob: -9.051190376281738

Token 675: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13488557934761047
    2. 'if' → logprob: -2.259885549545288
    3. '#' → logprob: -4.884885787963867
    4. '
' → logprob: -4.884885787963867
    5. ' if' → logprob: -5.634885787963867
    6. '        
' → logprob: -6.259885787963867
    7. '```' → logprob: -7.509885787963867
    8. 'for' → logprob: -8.509885787963867
    9. '<|end|>' → logprob: -8.884885787963867
    10. '   ' → logprob: -8.884885787963867

Token 676: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15387937426567078
    2. '       ' → logprob: -2.153879404067993
    3. '#' (adapté à ' #') → logprob: -3.778879404067993
    4. 'for' → logprob: -5.653879165649414
    5. ' if' → logprob: -8.528879165649414
    6. '```' → logprob: -11.153879165649414
    7. '        
' → logprob: -11.653879165649414
    8. '   ' → logprob: -12.278879165649414
    9. '	if' → logprob: -12.403879165649414
    10. '	' → logprob: -12.903879165649414

Token 677: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08075141906738281
    2. '#' → logprob: -2.580751419067383
    3. 'for' → logprob: -6.455751419067383
    4. '       ' → logprob: -8.205751419067383
    5. 'cnt' → logprob: -12.080751419067383
    6. '#if' → logprob: -12.830751419067383
    7. ' if' → logprob: -12.830751419067383
    8. 'check' → logprob: -13.830751419067383
    9. '   ' → logprob: -14.455751419067383
    10. '```' → logprob: -14.830751419067383

Token 678: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -1.688212614681106e-05
    2. 'if' → logprob: -11.125017166137695
    3. '#' → logprob: -14.375017166137695
    4. 'ife' → logprob: -14.625017166137695
    5. 'ifies' → logprob: -15.125017166137695
    6. 'ifiez' → logprob: -15.250017166137695
    7. 'ifier' → logprob: -16.000017166137695
    8. 'f' → logprob: -16.000017166137695
    9. 'ify' → logprob: -16.125017166137695
    10. 'ifi' → logprob: -16.500017166137695

Token 679: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1617136001586914
    2. 'if' → logprob: -1.9117136001586914
    3. '       ' → logprob: -6.536713600158691
    4. ' si' → logprob: -10.411713600158691
    5. 'left' → logprob: -13.036713600158691
    6. ' left' → logprob: -13.286713600158691
    7. '   ' → logprob: -13.536713600158691
    8. '	if' → logprob: -14.036713600158691
    9. 'si' → logprob: -14.286713600158691
    10. '           ' → logprob: -14.411713600158691

Token 680: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023368237540125847
    2. ' left' → logprob: -3.7733681201934814
    3. 'right' → logprob: -9.773367881774902
    4. '(left' → logprob: -10.148367881774902
    5. '0' → logprob: -11.023367881774902
    6. ' ' → logprob: -13.398367881774902
    7. 'm' → logprob: -13.398367881774902
    8. '	left' → logprob: -13.398367881774902
    9. ' right' → logprob: -13.523367881774902
    10. ' lef' → logprob: -13.898367881774902

Token 681: ' distance' (ID: 9324)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00911780633032322
    2. 'right' → logprob: -5.384117603302002
    3. ' left' → logprob: -5.509117603302002
    4. 'm' → logprob: -8.63411808013916
    5. '(left' → logprob: -9.00911808013916
    6. 'if' → logprob: -10.25911808013916
    7. ' right' → logprob: -10.88411808013916
    8. 'check' → logprob: -11.25911808013916
    9. ' m' → logprob: -11.75911808013916
    10. '(' → logprob: -11.88411808013916

Token 682: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015234095975756645
    2. ' r' → logprob: -4.890233993530273
    3. '>' → logprob: -5.140233993530273
    4. '>=' → logprob: -7.515233993530273
    5. ' >' → logprob: -8.015233993530273
    6. '   ' → logprob: -8.765233993530273
    7. 'between' → logprob: -8.765233993530273
    8. ' >=' → logprob: -8.890233993530273
    9. ' between' → logprob: -9.140233993530273
    10. '==' → logprob: -9.765233993530273

Token 683: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01430618017911911
    2. ' >' → logprob: -4.51430606842041
    3. '>=' → logprob: -5.76430606842041
    4. ' >=' → logprob: -9.38930606842041
    5. '!=' → logprob: -11.13930606842041
    6. '<=' → logprob: -12.01430606842041
    7. '<' → logprob: -12.63930606842041
    8. '   ' → logprob: -13.13930606842041
    9. '==' → logprob: -13.76430606842041
    10. 's' → logprob: -13.76430606842041

Token 684: ' paire' (ID: 148856)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.37585586309432983
    2. ' supérieur' → logprob: -2.2508559226989746
    3. '0' → logprob: -2.3758559226989746
    4. 'sup' → logprob: -3.1258559226989746
    5. 'strict' → logprob: -3.2508559226989746
    6. 'greater' → logprob: -4.250855922698975
    7. '3' → logprob: -5.625855922698975
    8. '1' → logprob: -5.625855922698975
    9. ' >' → logprob: -5.875855922698975
    10. '2' → logprob: -6.125855922698975

Token 685: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5480332970619202
    2. '%' → logprob: -1.7980332374572754
    3. ' %' → logprob: -1.9230332374572754
    4. '       ' → logprob: -3.0480332374572754
    5. ' ==' → logprob: -3.2980332374572754
    6. 'and' → logprob: -4.048033237457275
    7. '==' → logprob: -5.298033237457275
    8. ':' → logprob: -7.548033237457275
    9. '```' → logprob: -7.798033237457275
    10. '           ' → logprob: -7.798033237457275

Token 686: 'i' (ID: 72)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.18806754052639008
    2. 'r' → logprob: -2.6880674362182617
    3. '%' → logprob: -2.8130674362182617
    4. ' %' → logprob: -3.3130674362182617
    5. ' if' → logprob: -6.188067436218262
    6. 'if' → logprob: -6.188067436218262
    7. ')' → logprob: -6.563067436218262
    8. ' ==' → logprob: -7.188067436218262
    9. ' )' → logprob: -8.813067436218262
    10. '(r' → logprob: -9.188067436218262

Token 687: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3316895365715027
    2. '%' → logprob: -1.3316895961761475
    3. ' %' → logprob: -4.581689357757568
    4. '==' → logprob: -5.956689357757568
    5. ' ==' → logprob: -7.206689357757568
    6. '=' → logprob: -7.331689357757568
    7. 'n' → logprob: -7.456689357757568
    8. ' ' → logprob: -7.456689357757568
    9. '```' → logprob: -7.456689357757568
    10. ' f' → logprob: -7.831689357757568

Token 688: '.,' (ID: 4213)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0083019733428955
    2. 'f' → logprob: -1.2583019733428955
    3. '==' → logprob: -1.7583019733428955
    4. '=' → logprob: -2.5083019733428955
    5. 'r' → logprob: -3.3833019733428955
    6. '%' → logprob: -3.5083019733428955
    7. 'if' → logprob: -4.508301734924316
    8. '2' → logprob: -5.133301734924316
    9. 'q' → logprob: -5.883301734924316
    10. 's' → logprob: -6.508301734924316

Token 689: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868861794471741
    2. ' r' → logprob: -1.1368861198425293
    3. '%' → logprob: -11.761886596679688
    4. ' not' → logprob: -13.011886596679688
    5. ' %' → logprob: -13.636886596679688
    6. '```' → logprob: -14.386886596679688
    7. ' ' → logprob: -14.386886596679688
    8. ')' → logprob: -14.511886596679688
    9. ' ' → logprob: -14.761886596679688
    10. '(r' → logprob: -14.761886596679688

Token 690: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759706497192383
    2. '%' → logprob: -0.8259706497192383
    3. '>' → logprob: -11.450970649719238
    4. '```' → logprob: -11.825970649719238
    5. ' ' → logprob: -12.325970649719238
    6. ' ' → logprob: -12.575970649719238
    7. ' ==' → logprob: -14.200970649719238
    8. ' >' → logprob: -14.200970649719238
    9. ' %
' → logprob: -14.450970649719238
    10. '%
' → logprob: -14.450970649719238

Token 691: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12713934481143951
    2. ' ' → logprob: -2.1271393299102783
    3. '==' → logprob: -8.7521390914917
    4. ' ==' → logprob: -10.5021390914917
    5. '```' → logprob: -10.8771390914917
    6. '=' → logprob: -13.0021390914917
    7. '1' → logprob: -13.7521390914917
    8. ')' → logprob: -14.2521390914917
    9. '``' → logprob: -14.6271390914917
    10. ' ' → logprob: -14.7521390914917

Token 692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014561474381480366
    2. ' ' → logprob: -9.00014591217041
    3. '==' → logprob: -11.12514591217041
    4. '```' → logprob: -12.62514591217041
    5. '3' → logprob: -13.00014591217041
    6. '=' → logprob: -14.37514591217041
    7. '!=' → logprob: -15.00014591217041
    8. ' ==' → logprob: -15.37514591217041
    9. '
' → logprob: -15.62514591217041
    10. '1' → logprob: -16.500144958496094

Token 693: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2549380958080292
    2. ' ==' → logprob: -1.5049381256103516
    3. '!=' → logprob: -6.379938125610352
    4. ')' → logprob: -7.379938125610352
    5. ' !=' → logprob: -7.504938125610352
    6. ')==' → logprob: -9.379938125610352
    7. '```' → logprob: -11.004938125610352
    8. '()==' → logprob: -11.129938125610352
    9. '=' → logprob: -11.754938125610352
    10. '==
' → logprob: -12.879938125610352

Token 694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006491662003099918
    2. ' ' → logprob: -5.131491661071777
    3. '2' → logprob: -7.506491661071777
    4. '1' → logprob: -11.256491661071777
    5. '```' → logprob: -15.631491661071777
    6. '==' → logprob: -16.256492614746094
    7. '=' → logprob: -17.006492614746094
    8. '
' → logprob: -17.756492614746094
    9. ' ' → logprob: -17.756492614746094
    10. ' ==' → logprob: -18.381492614746094

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017841795925050974
    2. ' ' → logprob: -6.626784324645996
    3. '2' → logprob: -7.751784324645996
    4. '1' → logprob: -10.501784324645996
    5. '==' → logprob: -14.751784324645996
    6. '=' → logprob: -15.376784324645996
    7. '```' → logprob: -16.37678337097168
    8. ')' → logprob: -16.87678337097168
    9. ' ==' → logprob: -17.25178337097168
    10. '
' → logprob: -18.00178337097168

Token 696: ').
' (ID: 6294)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8313496112823486
    2. ')' → logprob: -1.3313496112823486
    3. '):' → logprob: -1.4563496112823486
    4. '       ' → logprob: -3.4563496112823486
    5. 'and' → logprob: -3.7063496112823486
    6. '):
' → logprob: -5.4563493728637695
    7. ' or' → logprob: -5.8313493728637695
    8. ':' → logprob: -5.9563493728637695
    9. ').' → logprob: -7.9563493728637695
    10. '           ' → logprob: -8.58134937286377

Token 697: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027167838998138905
    2. ' if' → logprob: -6.502717018127441
    3. 'if' → logprob: -7.127717018127441
    4. '           ' → logprob: -8.252717018127441
    5. '   ' → logprob: -9.627717018127441
    6. '```' → logprob: -9.877717018127441
    7. ' and' → logprob: -11.752717018127441
    8. '	' → logprob: -12.627717018127441
    9. ' ' → logprob: -12.627717018127441
    10. '        ' → logprob: -12.877717018127441

Token 698: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21457310020923615
    2. '       ' → logprob: -1.7145731449127197
    3. ' if' → logprob: -4.339572906494141
    4. '   ' → logprob: -11.21457290649414
    5. '```' → logprob: -11.96457290649414
    6. '           ' → logprob: -12.21457290649414
    7. 'continue' → logprob: -13.21457290649414
    8. ' ' → logprob: -13.21457290649414
    9. '	if' → logprob: -13.71457290649414
    10. 'check' → logprob: -14.83957290649414

Token 699: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014394780620932579
    2. '       ' → logprob: -4.264394760131836
    3. ' if' → logprob: -8.389394760131836
    4. 'continue' → logprob: -13.514394760131836
    5. '           ' → logprob: -14.264394760131836
    6. '   ' → logprob: -14.514394760131836
    7. 'check' → logprob: -14.514394760131836
    8. '	if' → logprob: -15.014394760131836
    9. 'If' → logprob: -15.764394760131836
    10. '```' → logprob: -16.014394760131836

Token 700: ' permet' (ID: 11798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48570799827575684
    2. 'if' → logprob: -1.8607079982757568
    3. ':
' → logprob: -2.485707998275757
    4. '       ' → logprob: -3.235707998275757
    5. ' if' → logprob: -3.610707998275757
    6. ' continue' → logprob: -4.110708236694336
    7. '           ' → logprob: -4.110708236694336
    8. 'continue' → logprob: -4.235708236694336
    9. ' continues' → logprob: -5.360708236694336
    10. '```' → logprob: -5.360708236694336

Token 701: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4959656596183777
    2. '           ' → logprob: -1.9959657192230225
    3. 'd' → logprob: -2.3709657192230225
    4. ' de' → logprob: -2.3709657192230225
    5. ' d' → logprob: -3.3709657192230225
    6. 'de' → logprob: -3.8709657192230225
    7. ':' → logprob: -5.245965480804443
    8. '   ' → logprob: -5.995965480804443
    9. 'if' → logprob: -6.370965480804443
    10. 'continue' → logprob: -6.370965480804443

Token 702: ' savoir' (ID: 22835)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.37303030490875244
    2. ' continue' → logprob: -1.7480303049087524
    3. 'contin' → logprob: -2.248030185699463
    4. ' continuer' → logprob: -4.123030185699463
    5. 'if' → logprob: -5.123030185699463
    6. '       ' → logprob: -5.873030185699463
    7. '#' → logprob: -6.373030185699463
    8. 'continu' → logprob: -6.623030185699463
    9. 's' → logprob: -7.373030185699463
    10. ' if' → logprob: -7.873030185699463

Token 703: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2723162770271301
    2. 'if' → logprob: -2.3973162174224854
    3. '           ' → logprob: -2.8973162174224854
    4. '   ' → logprob: -3.1473162174224854
    5. ' if' → logprob: -3.2723162174224854
    6. ' de' → logprob: -5.3973164558410645
    7. ' d' → logprob: -6.5223164558410645
    8. '	if' → logprob: -7.0223164558410645
    9. 'd' → logprob: -7.1473164558410645
    10. '	       ' → logprob: -7.2723164558410645

Token 704: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.4215541481971741
    2. '       ' → logprob: -1.7965540885925293
    3. 'i' → logprob: -2.2965540885925293
    4. 'u' → logprob: -3.7965540885925293
    5. 'if' → logprob: -4.296554088592529
    6. 'avoir' → logprob: -4.421554088592529
    7. ''assurer' → logprob: -4.671554088592529
    8. '   ' → logprob: -5.671554088592529
    9. 'e' → logprob: -5.921554088592529
    10. '#' → logprob: -5.921554088592529

Token 705: ' existe' (ID: 19498)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2250151634216309
    2. 'y' → logprob: -2.100015163421631
    3. '#' → logprob: -2.600015163421631
    4. '       ' → logprob: -2.725015163421631
    5. ' est' → logprob: -2.725015163421631
    6. ' possible' → logprob: -2.725015163421631
    7. ' existe' → logprob: -2.850015163421631
    8. ' peut' → logprob: -3.100015163421631
    9. 'possible' → logprob: -3.100015163421631
    10. 'est' → logprob: -3.350015163421631

Token 706: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5208916068077087
    2. 'un' → logprob: -1.3958916664123535
    3. '           ' → logprob: -3.0208916664123535
    4. '       ' → logprob: -3.2708916664123535
    5. ' une' → logprob: -3.3958916664123535
    6. 'une' → logprob: -4.3958916664123535
    7. '   ' → logprob: -5.0208916664123535
    8. 'if' → logprob: -5.5208916664123535
    9. 'mid' → logprob: -5.5208916664123535
    10. '#' → logprob: -6.5208916664123535

Token 707: ' centre' (ID: 13268)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.5286723971366882
    2. 'mid' → logprob: -2.278672456741333
    3. ' middle' → logprob: -2.403672456741333
    4. 'point' → logprob: -3.153672456741333
    5. ' midpoint' → logprob: -3.278672456741333
    6. 'third' → logprob: -4.153672218322754
    7. ' point' → logprob: -4.153672218322754
    8. 'mil' → logprob: -4.278672218322754
    9. 'car' → logprob: -4.653672218322754
    10. 'center' → logprob: -4.778672218322754

Token 708: ' exactement' (ID: 108701)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.384137511253357
    2. '=' → logprob: -2.1341376304626465
    3. 'd' → logprob: -2.3841376304626465
    4. ' d' → logprob: -2.5091376304626465
    5. ' de' → logprob: -2.7591376304626465
    6. 'if' → logprob: -3.2591376304626465
    7. '       ' → logprob: -3.5091376304626465
    8. '```' → logprob: -3.5091376304626465
    9. ' sym' → logprob: -3.6341376304626465
    10. ' if' → logprob: -3.6341376304626465

Token 709: ' entre' (ID: 3853)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.6172772645950317
    2. ' au' → logprob: -1.3672772645950317
    3. 'à' → logprob: -2.617277145385742
    4. ' entre' → logprob: -2.867277145385742
    5. ' à' → logprob: -3.992277145385742
    6. 'between' → logprob: -4.367277145385742
    7. '=' → logprob: -4.867277145385742
    8. 'entre' → logprob: -4.992277145385742
    9. ' between' → logprob: -4.992277145385742
    10. 'middle' → logprob: -5.242277145385742

Token 710: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04048828035593033
    2. 'M' → logprob: -3.2904882431030273
    3. 'i' → logprob: -6.415488243103027
    4. 'left' → logprob: -7.415488243103027
    5. 'les' → logprob: -9.540488243103027
    6. ' m' → logprob: -9.665488243103027
    7. 'two' → logprob: -11.165488243103027
    8. ' M' → logprob: -11.540488243103027
    9. 'l' → logprob: -11.665488243103027
    10. '```' → logprob: -11.790488243103027

Token 711: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8852167725563049
    2. ' and' → logprob: -1.1352167129516602
    3. 'and' → logprob: -1.8852167129516602
    4. ' et' → logprob: -2.38521671295166
    5. ',' → logprob: -3.88521671295166
    6. 'm' → logprob: -7.88521671295166
    7. ' ' → logprob: -8.26021671295166
    8. ' и' → logprob: -8.76021671295166
    9. '+' → logprob: -9.13521671295166
    10. 'r' → logprob: -9.38521671295166

Token 712: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.2007883671903983e-05
    2. ' M' → logprob: -10.750021934509277
    3. '```' → logprob: -15.625021934509277
    4. '<M' → logprob: -15.875021934509277
    5. '`' → logprob: -16.625022888183594
    6. ''M' → logprob: -17.750022888183594
    7. '>M' → logprob: -17.875022888183594
    8. 'm' → logprob: -18.000022888183594
    9. '#' → logprob: -18.125022888183594
    10. '<|end|>' → logprob: -18.125022888183594

Token 713: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09531807154417038
    2. ':' → logprob: -2.970318078994751
    3. ' if' → logprob: -3.845318078994751
    4. ' and' → logprob: -4.470317840576172
    5. 'if' → logprob: -6.095317840576172
    6. '.' → logprob: -6.595317840576172
    7. ',' → logprob: -6.970317840576172
    8. '   ' → logprob: -7.470317840576172
    9. '           ' → logprob: -7.595317840576172
    10. ' or' → logprob: -8.095317840576172

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14517082273960114
    2. 'if' → logprob: -2.1451709270477295
    3. ' if' → logprob: -4.02017068862915
    4. '           ' → logprob: -10.020171165466309
    5. '```' → logprob: -10.395171165466309
    6. '	' → logprob: -11.145171165466309
    7. '	if' → logprob: -11.270171165466309
    8. '   ' → logprob: -11.770171165466309
    9. ' ' → logprob: -12.145171165466309
    10. ',' → logprob: -13.270171165466309

Token 715: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20477049052715302
    2. 'if' (adapté à ' if') → logprob: -1.8297704458236694
    3. ' if' → logprob: -3.704770565032959
    4. '```' → logprob: -10.2047700881958
    5. '           ' → logprob: -10.7047700881958
    6. '   ' → logprob: -11.3297700881958
    7. '	if' → logprob: -11.3297700881958
    8. '	' → logprob: -11.9547700881958
    9. ' ' → logprob: -11.9547700881958
    10. '        
' → logprob: -12.5797700881958

Token 716: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08896738290786743
    2. ' r' → logprob: -2.4639673233032227
    3. '(r' → logprob: -11.213967323303223
    4. '   ' → logprob: -11.838967323303223
    5. ' ' → logprob: -12.588967323303223
    6. ' (' → logprob: -13.838967323303223
    7. '	r' → logprob: -14.338967323303223
    8. 'S' → logprob: -14.963967323303223
    9. 'right' → logprob: -15.338967323303223
    10. ' ' → logprob: -15.463967323303223

Token 717: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10026846826076508
    2. '%' → logprob: -2.3502683639526367
    3. ' ==' → logprob: -9.975268363952637
    4. '==' → logprob: -11.850268363952637
    5. ' ' → logprob: -11.975268363952637
    6. ' ' → logprob: -14.475268363952637
    7. '   ' → logprob: -14.600268363952637
    8. '>' → logprob: -14.850268363952637
    9. ')' → logprob: -16.100269317626953
    10. ' !=' → logprob: -16.100269317626953

Token 718: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017029138980433345
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.001703262329102
    4. '```' → logprob: -15.751703262329102
    5. '  ' → logprob: -16.6267032623291
    6. '3' → logprob: -17.1267032623291
    7. '1' → logprob: -17.2517032623291
    8. '
' → logprob: -17.5642032623291
    9. '==' → logprob: -17.7517032623291
    10. '>' → logprob: -17.8767032623291

Token 719: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '3' → logprob: -16.500028610229492
    4. '   ' → logprob: -17.000028610229492
    5. '
' → logprob: -17.625028610229492
    6. '==' → logprob: -17.687528610229492
    7. '>' → logprob: -17.750028610229492
    8. '```' → logprob: -17.937528610229492
    9. '  ' → logprob: -18.250028610229492
    10. '1' → logprob: -18.250028610229492

Token 720: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38688623905181885
    2. ' ==' → logprob: -1.1368862390518188
    3. '==
' → logprob: -12.511886596679688
    4. '()==' → logprob: -12.761886596679688
    5. ')==' → logprob: -13.136886596679688
    6. '=' → logprob: -13.386886596679688
    7. '```' → logprob: -13.636886596679688
    8. '!=' → logprob: -14.011886596679688
    9. '0' → logprob: -14.386886596679688
    10. ' !=' → logprob: -14.636886596679688

Token 721: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006939699524082243
    2. ' ' → logprob: -7.3756937980651855
    3. '2' → logprob: -9.625694274902344
    4. '==' → logprob: -14.000694274902344
    5. '1' → logprob: -15.875694274902344
    6. '=' → logprob: -15.875694274902344
    7. '   ' → logprob: -16.125694274902344
    8. '00' → logprob: -17.500694274902344
    9. '```' → logprob: -17.750694274902344
    10. ' ==' → logprob: -18.125694274902344

Token 722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011732018319889903
    2. '2' → logprob: -6.87617301940918
    3. ' ' → logprob: -8.87617301940918
    4. '1' → logprob: -15.00117301940918
    5. '==' → logprob: -15.12617301940918
    6. '=' → logprob: -16.50117301940918
    7. '   ' → logprob: -17.62617301940918
    8. '```' → logprob: -17.75117301940918
    9. '00' → logprob: -18.37617301940918
    10. ' ==' → logprob: -18.68867301940918

Token 723: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34872567653656006
    2. ':' → logprob: -1.34872567653656
    3. '           ' → logprob: -3.8487257957458496
    4. ':
' → logprob: -4.34872579574585
    5. 'and' → logprob: -7.59872579574585
    6. '       ' → logprob: -10.348725318908691
    7. ' :' → logprob: -10.973725318908691
    8. ',' → logprob: -11.098725318908691
    9. '   ' → logprob: -11.098725318908691
    10. ':
' → logprob: -12.348725318908691

Token 724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005412808153778315
    2. 'mid' → logprob: -5.505412578582764
    3. 'middle' → logprob: -8.005413055419922
    4. '		' → logprob: -8.380413055419922
    5. 'center' → logprob: -9.005413055419922
    6. '	       ' → logprob: -9.255413055419922
    7. ' ' → logprob: -9.255413055419922
    8. 'if' → logprob: -9.505413055419922
    9. ' mid' → logprob: -9.880413055419922
    10. 'c' → logprob: -10.005413055419922

Token 725: ' #' (ID: 1069)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.23010210692882538
    2. '           ' → logprob: -2.730102062225342
    3. 'center' → logprob: -2.980102062225342
    4. 'c' → logprob: -3.355102062225342
    5. 'middle' → logprob: -4.230102062225342
    6. '               ' → logprob: -4.230102062225342
    7. ' mid' → logprob: -4.480102062225342
    8. 'if' → logprob: -5.355102062225342
    9. '
' → logprob: -6.105102062225342
    10. 'k' → logprob: -6.855102062225342

Token 726: ' Si' (ID: 7832)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.7562815546989441
    2. 'mid' → logprob: -0.8812815546989441
    3. 'c' → logprob: -2.881281614303589
    4. 'middle' → logprob: -3.131281614303589
    5. 'if' → logprob: -5.00628137588501
    6. 'k' → logprob: -5.63128137588501
    7. 'centre' → logprob: -6.13128137588501
    8. 'check' → logprob: -6.38128137588501
    9. '#' → logprob: -7.63128137588501
    10. 'x' → logprob: -7.88128137588501

Token 727: ' c' (ID: 274)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.4279522895812988
    2. '(r' → logprob: -2.052952289581299
    3. '(m' → logprob: -2.302952289581299
    4. 'S' → logprob: -2.427952289581299
    5. 'check' → logprob: -2.427952289581299
    6. 'mid' → logprob: -2.552952289581299
    7. 'r' → logprob: -3.052952289581299
    8. ' (' → logprob: -3.677952289581299
    9. 'right' → logprob: -3.802952289581299
    10. 'cnt' → logprob: -3.802952289581299

Token 728: ''est' (ID: 6616)
  Prédit: 'heck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heck' → logprob: -0.09545601904392242
    2. 'ont' → logprob: -2.720456123352051
    3. 'nt' → logprob: -4.845456123352051
    4. '#' → logprob: -5.095456123352051
    5. 'check' → logprob: -5.845456123352051
    6. 'r' → logprob: -6.470456123352051
    7. 'e' → logprob: -6.720456123352051
    8. '   ' → logprob: -7.470456123352051
    9. '           ' → logprob: -7.595456123352051
    10. ''est' → logprob: -7.595456123352051

Token 729: ' le' (ID: 505)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2901415526866913
    2. ' True' → logprob: -2.1651415824890137
    3. 'r' → logprob: -2.9151415824890137
    4. 'check' → logprob: -4.040141582489014
    5. 'le' → logprob: -4.415141582489014
    6. 'v' → logprob: -4.540141582489014
    7. 'not' → logprob: -4.540141582489014
    8. 'left' → logprob: -4.665141582489014
    9. 'right' → logprob: -4.915141582489014
    10. '           ' → logprob: -5.415141582489014

Token 730: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.5662244558334351
    2. 'mil' → logprob: -1.191224455833435
    3. 'case' → logprob: -2.6912245750427246
    4. 'centre' → logprob: -3.6912245750427246
    5. 'm' → logprob: -4.691224575042725
    6. 'center' → logprob: -5.066224575042725
    7. 'mid' → logprob: -5.566224575042725
    8. 'mi' → logprob: -5.816224575042725
    9. 'middle' → logprob: -5.941224575042725
    10. 'c' → logprob: -6.066224575042725

Token 731: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5028998255729675
    2. 'mid' → logprob: -2.1278998851776123
    3. '               ' → logprob: -2.6278998851776123
    4. ':' → logprob: -2.6278998851776123
    5. ':
' → logprob: -2.8778998851776123
    6. 'center' → logprob: -3.8778998851776123
    7. 'middle' → logprob: -4.502899646759033
    8. ',' → logprob: -5.002899646759033
    9. ' and' → logprob: -5.127899646759033
    10. '#' → logprob: -5.752899646759033

Token 732: ' calc' (ID: 25691)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6109623312950134
    2. 'mid' → logprob: -0.9859623312950134
    3. 'c' → logprob: -3.485962390899658
    4. '           ' → logprob: -3.985962390899658
    5. 'middle' → logprob: -3.985962390899658
    6. 'if' → logprob: -5.110962390899658
    7. 'check' → logprob: -5.610962390899658
    8. ' center' → logprob: -6.485962390899658
    9. '   ' → logprob: -7.235962390899658
    10. 'k' → logprob: -7.360962390899658

Token 733: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0001205893131555058
    2. 'ulé' → logprob: -10.125120162963867
    3. 'ulte' → logprob: -10.875120162963867
    4. 'ules' → logprob: -11.625120162963867
    5. 'ul' → logprob: -11.750120162963867
    6. 'ulate' → logprob: -11.875120162963867
    7. '           ' → logprob: -12.000120162963867
    8. '#' → logprob: -12.250120162963867
    9. '       ' → logprob: -12.250120162963867
    10. 'cule' → logprob: -12.375120162963867

Token 734: ' l' (ID: 305)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.9693928360939026
    2. 'mid' → logprob: -1.0943927764892578
    3. 'c' → logprob: -1.4693927764892578
    4. '           ' → logprob: -3.844392776489258
    5. 'middle' → logprob: -3.969392776489258
    6. 'm' → logprob: -5.469392776489258
    7. 'the' → logprob: -5.969392776489258
    8. 'cent' → logprob: -6.344392776489258
    9. 'l' → logprob: -6.719392776489258
    10. 'le' → logprob: -6.844392776489258

Token 735: ''ind' (ID: 82245)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.10381284356117249
    2. 'centre' → logprob: -3.1038129329681396
    3. 'mid' → logprob: -3.4788129329681396
    4. ' center' → logprob: -5.6038126945495605
    5. 'c' → logprob: -5.7288126945495605
    6. 'cent' → logprob: -5.8538126945495605
    7. '=center' → logprob: -6.2288126945495605
    8. 'e' → logprob: -6.2288126945495605
    9. '=' → logprob: -6.3538126945495605
    10. '_center' → logprob: -6.7288126945495605

Token 736: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.028180409222841263
    2. 'ice' → logprob: -3.7781803607940674
    3. 'dex' → logprob: -6.6531805992126465
    4. 'ices' → logprob: -7.0281805992126465
    5. 'e' → logprob: -7.1531805992126465
    6. 'x' → logprob: -7.4031805992126465
    7. 'é' → logprob: -7.9031805992126465
    8. 'er' → logprob: -8.153180122375488
    9. '   ' → logprob: -8.903180122375488
    10. 'idx' → logprob: -9.403180122375488

Token 737: ' du' (ID: 1462)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3917301893234253
    2. 'center' → logprob: -1.8917301893234253
    3. 'c' → logprob: -2.391730308532715
    4. '           ' → logprob: -4.266730308532715
    5. 'middle' → logprob: -4.391730308532715
    6. 'cent' → logprob: -4.391730308532715
    7. '=' → logprob: -4.516730308532715
    8. ' =' → logprob: -4.766730308532715
    9. 'd' → logprob: -5.516730308532715
    10. 'm' → logprob: -6.016730308532715

Token 738: ' centre' (ID: 13268)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.8824480175971985
    2. 'center' → logprob: -1.3824479579925537
    3. 'mid' → logprob: -1.7574479579925537
    4. 'mil' → logprob: -2.3824479579925537
    5. 'middle' → logprob: -2.7574479579925537
    6. 'cent' → logprob: -5.632448196411133
    7. 'c' → logprob: -6.382448196411133
    8. 'm' → logprob: -7.382448196411133
    9. 'point' → logprob: -8.507448196411133
    10. 'mill' → logprob: -8.882448196411133

Token 739: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3921470642089844
    2. '=' → logprob: -1.1421470642089844
    3. '           ' → logprob: -6.017147064208984
    4. 'center' → logprob: -7.142147064208984
    5. '=center' → logprob: -7.142147064208984
    6. 'c' → logprob: -7.767147064208984
    7. 'mid' → logprob: -8.642147064208984
    8. 'cent' → logprob: -8.767147064208984
    9. 'd' → logprob: -9.267147064208984
    10. 'centr' → logprob: -9.642147064208984

Token 740: '           ' (ID: 352)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.24066317081451416
    2. '           ' → logprob: -2.2406630516052246
    3. 'mid' → logprob: -2.7406630516052246
    4. 'c' → logprob: -3.6156630516052246
    5. ' center' → logprob: -5.115663051605225
    6. 'middle' → logprob: -6.490663051605225
    7. ' =' → logprob: -6.615663051605225
    8. '=' → logprob: -6.615663051605225
    9. 'centre' → logprob: -6.740663051605225
    10. 'cent' → logprob: -6.990663051605225

Token 741: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' (adapté à ' center') → logprob: -0.08122546225786209
    2. 'c' → logprob: -2.8312253952026367
    3. 'mid' → logprob: -4.706225395202637
    4. 'centre' → logprob: -5.331225395202637
    5. 'middle' → logprob: -6.331225395202637
    6. 'cent' → logprob: -6.581225395202637
    7. 'm' → logprob: -7.331225395202637
    8. 'C' → logprob: -7.831225395202637
    9. 'M' → logprob: -8.706225395202637
    10. ' center' → logprob: -8.956225395202637

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. '=center' → logprob: -13.693148612976074
    4. ' ' → logprob: -16.44314956665039
    5. '=int' → logprob: -16.44314956665039
    6. '	' → logprob: -16.81814956665039
    7. '=m' → logprob: -16.94314956665039
    8. ' ' → logprob: -17.06814956665039
    9. '＝' → logprob: -17.44314956665039
    10. 's' → logprob: -18.69314956665039

Token 743: ' m' (ID: 284)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4426722526550293
    2. 'm' → logprob: -1.0676722526550293
    3. ' (' → logprob: -4.317672252655029
    4. ' m' → logprob: -7.692672252655029
    5. '(' → logprob: -9.567672729492188
    6. '   ' → logprob: -12.817672729492188
    7. '_m' → logprob: -13.067672729492188
    8. '(r' → logprob: -13.317672729492188
    9. '(int' → logprob: -13.317672729492188
    10. '(M' → logprob: -13.567672729492188

Token 744: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12730886042118073
    2. '+' → logprob: -2.1273088455200195
    3. '+r' → logprob: -7.8773088455200195
    4. ' plus' → logprob: -14.50230884552002
    5. '+(' → logprob: -14.75230884552002
    6. ' r' → logprob: -15.75230884552002
    7. ' +(' → logprob: -16.002309799194336
    8. ' ' → logprob: -16.627309799194336
    9. ' +
' → logprob: -17.002309799194336
    10. '+i' → logprob: -17.002309799194336

Token 745: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017476500943303108
    2. ' r' → logprob: -6.8767476081848145
    3. '(r' → logprob: -7.2517476081848145
    4. ' (' → logprob: -12.126748085021973
    5. '(' → logprob: -15.251748085021973
    6. ' ' → logprob: -16.876747131347656
    7. '   ' → logprob: -17.251747131347656
    8. '	r' → logprob: -17.501747131347656
    9. '_r' → logprob: -17.751747131347656
    10. ' ' → logprob: -17.876747131347656

Token 746: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.014166681095957756
    2. ' //' → logprob: -4.264166831970215
    3. '#' → logprob: -12.889166831970215
    4. '   ' → logprob: -15.764166831970215
    5. '//=' → logprob: -15.764166831970215
    6. '```' → logprob: -15.889166831970215
    7. ' ' → logprob: -16.1391658782959
    8. '/' → logprob: -16.1391658782959
    9. ' ' → logprob: -16.7641658782959
    10. '	' → logprob: -17.8891658782959

Token 747: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -21.875
    4. '۲' → logprob: -21.875
    5. '```' → logprob: -22.25
    6. '２' → logprob: -23.125
    7. '[' → logprob: -24.5
    8. '२' → logprob: -24.625
    9. '২' → logprob: -25.25
    10. '٢' → logprob: -25.25

Token 748: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۲' → logprob: -19.75
    4. '   ' → logprob: -21.125
    5. '२' → logprob: -21.625
    6. '２' → logprob: -22.0
    7. '```' → logprob: -22.0
    8. '২' → logprob: -22.375
    9. '٢' → logprob: -22.5
    10. '[' → logprob: -22.875

Token 749: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30581551790237427
    2. '<|end|>' → logprob: -1.4308154582977295
    3. '       ' → logprob: -4.305815696716309
    4. 'if' → logprob: -5.555815696716309
    5. ' if' → logprob: -6.180815696716309
    6. '
' → logprob: -6.180815696716309
    7. '<|end|>' → logprob: -6.305815696716309
    8. '		' → logprob: -8.430815696716309
    9. '```' → logprob: -8.680815696716309
    10. '	       ' → logprob: -8.805815696716309

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09170439839363098
    2. 'if' → logprob: -3.2167043685913086
    3. '       ' → logprob: -3.4667043685913086
    4. ' if' → logprob: -5.091704368591309
    5. '<|end|>' → logprob: -5.591704368591309
    6. '
' → logprob: -5.716704368591309
    7. '		' → logprob: -6.841704368591309
    8. '            
' → logprob: -7.216704368591309
    9. '               ' → logprob: -7.716704368591309
    10. '        
' → logprob: -8.966704368591309

Token 751: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2686968147754669
    2. 'if' → logprob: -1.5186967849731445
    3. ' if' → logprob: -4.7686967849731445
    4. '
' → logprob: -5.1436967849731445
    5. '       ' → logprob: -7.0186967849731445
    6. '```' → logprob: -7.8936967849731445
    7. '            
' → logprob: -8.018696784973145
    8. '#' (adapté à ' #') → logprob: -8.643696784973145
    9. '		' → logprob: -9.018696784973145
    10. '	       ' → logprob: -9.143696784973145

Token 752: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008818074711598456
    2. '#' → logprob: -7.750881671905518
    3. '           ' → logprob: -7.750881671905518
    4. '       ' → logprob: -11.125882148742676
    5. ' if' → logprob: -13.250882148742676
    6. 'check' → logprob: -13.250882148742676
    7. '
' → logprob: -13.750882148742676
    8. '               ' → logprob: -14.375882148742676
    9. '﻿' → logprob: -15.750882148742676
    10. '   ' → logprob: -16.25088119506836

Token 753: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0009856504620984197
    2. 'if' → logprob: -7.000985622406006
    3. 'f' → logprob: -10.125986099243164
    4. '#' → logprob: -11.625986099243164
    5. 'ifiez' → logprob: -11.875986099243164
    6. 'ifier' → logprob: -12.250986099243164
    7. 'ify' → logprob: -12.250986099243164
    8. '       ' → logprob: -12.875986099243164
    9. 'ife' → logprob: -13.250986099243164
    10. 'ifies' → logprob: -13.500986099243164

Token 754: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08865948021411896
    2. ' if' → logprob: -2.9636595249176025
    3. '           ' → logprob: -3.4636595249176025
    4. '       ' → logprob: -7.088659286499023
    5. 'si' → logprob: -7.463659286499023
    6. ' si' → logprob: -7.713659286499023
    7. '	if' → logprob: -11.963659286499023
    8. '               ' → logprob: -12.088659286499023
    9. 'not' → logprob: -12.088659286499023
    10. '#' → logprob: -12.088659286499023

Token 755: ' l' (ID: 305)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.0109552638605237
    2. 'S' → logprob: -5.010955333709717
    3. 'left' → logprob: -6.135955333709717
    4. '(center' → logprob: -6.510955333709717
    5. ' center' → logprob: -8.135954856872559
    6. '(S' → logprob: -9.385954856872559
    7. 'right' → logprob: -9.385954856872559
    8. '(' → logprob: -10.760954856872559
    9. 'i' → logprob: -11.135954856872559
    10. '   ' → logprob: -11.260954856872559

Token 756: ''ind' (ID: 82245)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.0022624251432716846
    2. 'S' → logprob: -6.502262592315674
    3. ' center' → logprob: -7.377262592315674
    4. '(center' → logprob: -9.377262115478516
    5. 'right' → logprob: -11.502262115478516
    6. '<center' → logprob: -12.002262115478516
    7. 'centre' → logprob: -12.377262115478516
    8. '#' → logprob: -12.502262115478516
    9. 'left' → logprob: -12.502262115478516
    10. '=center' → logprob: -12.502262115478516

Token 757: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03432012349367142
    2. 'center' → logprob: -3.909320116043091
    3. 'ice' → logprob: -4.40932035446167
    4. 'S' → logprob: -6.65932035446167
    5. ' center' → logprob: -9.159319877624512
    6. 'i' → logprob: -11.034319877624512
    7. 'e' → logprob: -11.159319877624512
    8. 'dex' → logprob: -11.159319877624512
    9. '(center' → logprob: -11.409319877624512
    10. ' S' → logprob: -11.409319877624512

Token 758: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.09785379469394684
    2. ' center' → logprob: -2.472853899002075
    3. ' in' → logprob: -4.847853660583496
    4. 'in' → logprob: -7.347853660583496
    5. '(center' → logprob: -9.222853660583496
    6. '<center' → logprob: -9.472853660583496
    7. ' not' → logprob: -9.847853660583496
    8. ' ' → logprob: -10.347853660583496
    9. '=center' → logprob: -10.597853660583496
    10. ')' → logprob: -11.097853660583496

Token 759: ' fait' (ID: 7473)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28838619589805603
    2. 'in' → logprob: -1.4133862257003784
    3. ' not' → logprob: -5.163386344909668
    4. 'not' → logprob: -7.538386344909668
    5. ' en' → logprob: -8.413386344909668
    6. ' is' → logprob: -8.913386344909668
    7. ' <' → logprob: -9.038386344909668
    8. ' dans' → logprob: -9.413386344909668
    9. ' !=' → logprob: -9.538386344909668
    10. ' est' → logprob: -9.788386344909668

Token 760: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0028177164494991302
    2. ' partie' → logprob: -6.502817630767822
    3. 'in' → logprob: -7.627817630767822
    4. ' part' → logprob: -7.627817630767822
    5. 'parte' → logprob: -9.00281810760498
    6. 'not' → logprob: -9.37781810760498
    7. '<|end|>' → logprob: -9.87781810760498
    8. '_part' → logprob: -10.62781810760498
    9. '	part' → logprob: -11.00281810760498
    10. ' parti' → logprob: -11.37781810760498

Token 761: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40364786982536316
    2. 'de' → logprob: -1.2786478996276855
    3. 'B' → logprob: -3.0286478996276855
    4. 'des' → logprob: -6.0286478996276855
    5. '(B' → logprob: -7.0286478996276855
    6. ' des' → logprob: -7.5286478996276855
    7. ' B' → logprob: -7.5286478996276855
    8. ' of' → logprob: -7.7786478996276855
    9. 'of' → logprob: -9.028647422790527
    10. '   ' → logprob: -9.028647422790527

Token 762: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0002549024939071387
    2. 'R' → logprob: -8.62525463104248
    3. 'S' → logprob: -10.25025463104248
    4. ' B' → logprob: -10.25025463104248
    5. 'G' → logprob: -13.75025463104248
    6. 'b' → logprob: -14.12525463104248
    7. '   ' → logprob: -14.50025463104248
    8. '"B' → logprob: -14.75025463104248
    9. '	B' → logprob: -15.00025463104248
    10. ' ' → logprob: -15.50025463104248

Token 763: ''ensemble' (ID: 79341)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007063561934046447
    2. ' B' → logprob: -7.375706195831299
    3. ''' → logprob: -9.875706672668457
    4. 'S' → logprob: -11.250706672668457
    5. '"B' → logprob: -11.750706672668457
    6. '"' → logprob: -12.625706672668457
    7. '['' → logprob: -14.000706672668457
    8. '`' → logprob: -14.500706672668457
    9. 's' → logprob: -14.750706672668457
    10. '	B' → logprob: -14.875706672668457

Token 764: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.9888433093437925e-05
    2. ' B' → logprob: -10.875040054321289
    3. 'S' → logprob: -11.625040054321289
    4. '(B' → logprob: -11.875040054321289
    5. '('' → logprob: -13.250040054321289
    6. '"B' → logprob: -13.375040054321289
    7. '("' → logprob: -15.000040054321289
    8. 'of' → logprob: -16.00004005432129
    9. 'R' → logprob: -16.00004005432129
    10. '['' → logprob: -16.00004005432129

Token 765: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07336548715829849
    2. '           ' → logprob: -3.0733654499053955
    3. 'and' → logprob: -3.8233654499053955
    4. ' in' → logprob: -6.198365688323975
    5. 'in' → logprob: -8.573365211486816
    6. ',' → logprob: -9.073365211486816
    7. '       ' → logprob: -9.823365211486816
    8. '<|end|>' → logprob: -10.073365211486816
    9. '		' → logprob: -10.198365211486816
    10. '               ' → logprob: -10.698365211486816

Token 766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003980184264946729
    2. '       ' → logprob: -8.750397682189941
    3. '```' → logprob: -9.000397682189941
    4. ' if' → logprob: -9.500397682189941
    5. 'if' → logprob: -10.500397682189941
    6. ' and' → logprob: -11.750397682189941
    7. '               ' → logprob: -13.250397682189941
    8. ',' → logprob: -13.375397682189941
    9. '		' → logprob: -14.125397682189941
    10. '   ' → logprob: -15.375397682189941

Token 767: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03951461613178253
    2. ' if' → logprob: -3.2895145416259766
    3. '           ' → logprob: -6.539514541625977
    4. '       ' → logprob: -10.789514541625977
    5. 'check' → logprob: -12.664514541625977
    6. '```' → logprob: -13.039514541625977
    7. ' check' → logprob: -14.414514541625977
    8. '               ' → logprob: -16.539514541625977
    9. 'If' → logprob: -16.539514541625977
    10. '   ' → logprob: -17.289514541625977

Token 768: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00035262384335510433
    2. ' if' → logprob: -8.00035285949707
    3. '           ' → logprob: -11.00035285949707
    4. '```' → logprob: -15.25035285949707
    5. 'check' → logprob: -16.50035285949707
    6. '       ' → logprob: -16.75035285949707
    7. '``' → logprob: -18.12535285949707
    8. '               ' → logprob: -19.87535285949707
    9. '
' → logprob: -20.25035285949707
    10. 'If' → logprob: -20.50035285949707

Token 769: ' oui' (ID: 50908)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.03810976445674896
    2. ' center' → logprob: -3.28810977935791
    3. '(center' → logprob: -10.41310977935791
    4. ' ' → logprob: -11.41310977935791
    5. '   ' → logprob: -12.16310977935791
    6. '  ' → logprob: -12.53810977935791
    7. 'S' → logprob: -12.53810977935791
    8. 'not' → logprob: -13.03810977935791
    9. ' S' → logprob: -13.66310977935791
    10. 'c' → logprob: -13.66310977935791

Token 770: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2734772562980652
    2. '               ' → logprob: -2.39847731590271
    3. ':' → logprob: -2.89847731590271
    4. ' and' → logprob: -3.02347731590271
    5. ':
' → logprob: -3.77347731590271
    6. ',' → logprob: -4.273477077484131
    7. 'and' → logprob: -5.773477077484131
    8. 'check' → logprob: -6.023477077484131
    9. 'if' → logprob: -7.148477077484131
    10. ' check' → logprob: -7.523477077484131

Token 771: ' cela' (ID: 17542)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20569606125354767
    2. 'check' → logprob: -1.7056961059570312
    3. '           ' → logprob: -5.580696105957031
    4. ' cnt' → logprob: -8.455696105957031
    5. '               ' → logprob: -9.330696105957031
    6. 'continue' → logprob: -9.705696105957031
    7. 'if' → logprob: -9.830696105957031
    8. ' check' → logprob: -9.955696105957031
    9. 'count' → logprob: -10.955696105957031
    10. 'chk' → logprob: -11.830696105957031

Token 772: ' signifie' (ID: 81149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11632513254880905
    2. 'cnt' → logprob: -2.9913251399993896
    3. '               ' → logprob: -3.2413251399993896
    4. 'continue' → logprob: -4.9913249015808105
    5. '#' → logprob: -5.6163249015808105
    6. 'check' → logprob: -5.8663249015808105
    7. ' cnt' → logprob: -5.9913249015808105
    8. ':' → logprob: -6.8663249015808105
    9. ':
' → logprob: -7.8663249015808105
    10. '```' → logprob: -7.9913249015808105

Token 773: ' qu' (ID: 474)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08605638891458511
    2. '           ' → logprob: -2.7110564708709717
    3. 'check' → logprob: -4.211056232452393
    4. 'cnt' → logprob: -6.961056232452393
    5. ' check' → logprob: -9.71105670928955
    6. '#' → logprob: -10.33605670928955
    7. '                   ' → logprob: -10.58605670928955
    8. '   ' → logprob: -10.71105670928955
    9. '              ' → logprob: -11.08605670928955
    10. '             ' → logprob: -11.46105670928955

Token 774: ''il' (ID: 14683)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8784555196762085
    2. '           ' → logprob: -1.0034555196762085
    3. 'check' → logprob: -1.7534555196762085
    4. ' check' → logprob: -3.253455638885498
    5. '   ' → logprob: -6.378455638885498
    6. 'cnt' → logprob: -6.378455638885498
    7. '#' → logprob: -7.253455638885498
    8. '              ' → logprob: -7.753455638885498
    9. '       ' → logprob: -8.25345516204834
    10. '                   ' → logprob: -8.50345516204834

Token 775: ' y' (ID: 342)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4775094985961914
    2. '#' → logprob: -1.6025094985961914
    3. 'check' → logprob: -1.9775094985961914
    4. 'continue' → logprob: -2.1025094985961914
    5. 'cnt' → logprob: -2.1025094985961914
    6. 'n' → logprob: -2.6025094985961914
    7. ' check' → logprob: -3.3525094985961914
    8. '       ' → logprob: -3.8525094985961914
    9. '   ' → logprob: -4.227509498596191
    10. ' n' → logprob: -4.727509498596191

Token 776: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03123888373374939
    2. ' a' → logprob: -4.031239032745361
    3. '#' → logprob: -4.406239032745361
    4. 'cnt' → logprob: -8.406238555908203
    5. '#a' → logprob: -9.031238555908203
    6. '   ' → logprob: -9.281238555908203
    7. 'avait' → logprob: -9.406238555908203
    8. '       ' → logprob: -9.656238555908203
    9. 'check' → logprob: -10.281238555908203
    10. 'ex' → logprob: -10.531238555908203

Token 777: ' un' (ID: 537)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2252890169620514
    2. 'check' → logprob: -1.725288987159729
    3. '   ' → logprob: -4.3502888679504395
    4. '           ' → logprob: -5.6002888679504395
    5. '       ' → logprob: -6.1002888679504395
    6. '#' → logprob: -6.2252888679504395
    7. ' cnt' → logprob: -6.6002888679504395
    8. ' check' → logprob: -7.6002888679504395
    9. ' ' → logprob: -7.7252888679504395
    10. '               ' → logprob: -8.975289344787598

Token 778: ' '' (ID: 461)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.5650887489318848
    2. 'car' → logprob: -1.3150887489318848
    3. 'triangle' → logprob: -2.3150887489318848
    4. 'case' → logprob: -4.315088748931885
    5. 'cas' → logprob: -4.440088748931885
    6. 'tro' → logprob: -4.440088748931885
    7. 'cnt' → logprob: -5.065088748931885
    8. 'tri' → logprob: -5.065088748931885
    9. '#' → logprob: -5.190088748931885
    10. 'tr' → logprob: -6.440088748931885

Token 779: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019774071406573057
    2. ' B' → logprob: -6.251977443695068
    3. '"B' → logprob: -10.87697696685791
    4. ' ' → logprob: -12.37697696685791
    5. 'trip' → logprob: -12.50197696685791
    6. 'b' → logprob: -13.25197696685791
    7. 'character' → logprob: -13.25197696685791
    8. 's' → logprob: -13.37697696685791
    9. 'third' → logprob: -13.62697696685791
    10. '```' → logprob: -13.75197696685791

Token 780: ''' (ID: 6)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.14492076635360718
    2. ' à' → logprob: -2.769920825958252
    3. ' entre' → logprob: -3.894920825958252
    4. ' at' → logprob: -4.394920825958252
    5. ' présent' → logprob: -4.519920825958252
    6. 'au' → logprob: -4.519920825958252
    7. '#' → logprob: -5.644920825958252
    8. 'à' → logprob: -5.894920825958252
    9. ')' → logprob: -6.019920825958252
    10. '```' → logprob: -6.144920825958252

Token 781: ' exactement' (ID: 108701)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9270443320274353
    2. ' at' → logprob: -1.80204439163208
    3. ' au' → logprob: -1.92704439163208
    4. ' à' → logprob: -1.92704439163208
    5. 'à' → logprob: -3.67704439163208
    6. ' entre' → logprob: -3.67704439163208
    7. '       ' → logprob: -4.30204439163208
    8. ' présent' → logprob: -4.55204439163208
    9. '#' → logprob: -4.67704439163208
    10. 'at' → logprob: -5.05204439163208

Token 782: ' entre' (ID: 3853)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.24711874127388
    2. 'à' → logprob: -2.4971187114715576
    3. 'entre' → logprob: -2.7471187114715576
    4. ' au' → logprob: -3.3721187114715576
    5. ' entre' → logprob: -4.122118949890137
    6. 'between' → logprob: -4.497118949890137
    7. ' à' → logprob: -5.747118949890137
    8. 'present' → logprob: -6.497118949890137
    9. ' between' → logprob: -6.622118949890137
    10. 'sur' → logprob: -7.122118949890137

Token 783: ' le' (ID: 505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08971566706895828
    2. 'i' → logprob: -2.4647157192230225
    3. 'M' → logprob: -7.214715480804443
    4. 'R' → logprob: -10.839715957641602
    5. 'S' → logprob: -12.339715957641602
    6. 'the' → logprob: -12.714715957641602
    7. ' m' → logprob: -13.339715957641602
    8. 'l' → logprob: -13.464715957641602
    9. '(i' → logprob: -13.464715957641602
    10. ' i' → logprob: -13.589715957641602

Token 784: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5382280945777893
    2. 'i' → logprob: -0.9132280945777893
    3. 'center' → logprob: -4.5382280349731445
    4. 'R' → logprob: -6.2882280349731445
    5. 'left' → logprob: -7.0382280349731445
    6. 'centre' → logprob: -8.038228034973145
    7. 'two' → logprob: -8.788228034973145
    8. 'M' → logprob: -9.038228034973145
    9. ' center' → logprob: -9.163228034973145
    10. 'indices' → logprob: -9.288228034973145

Token 785: 'R' (ID: 49)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3140442669391632
    2. 'R' → logprob: -1.3140442371368408
    3. 'M' → logprob: -8.564043998718262
    4. ' i' → logprob: -8.564043998718262
    5. 'm' → logprob: -8.564043998718262
    6. ' R' → logprob: -10.314043998718262
    7. 'center' → logprob: -10.564043998718262
    8. '"' → logprob: -10.689043998718262
    9. ''' → logprob: -10.689043998718262
    10. ''i' → logprob: -10.689043998718262

Token 786: ''' (ID: 6)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.14350879192352295
    2. 'et' → logprob: -2.5185089111328125
    3. ''' → logprob: -3.1435089111328125
    4. ' and' → logprob: -5.3935089111328125
    5. ',' → logprob: -6.3935089111328125
    6. '')' → logprob: -6.8935089111328125
    7. '"' → logprob: -7.2685089111328125
    8. ')' → logprob: -7.5185089111328125
    9. '',' → logprob: -7.8935089111328125
    10. ''et' → logprob: -8.518508911132812

Token 787: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09267017990350723
    2. 'and' → logprob: -2.842670202255249
    3. ' et' → logprob: -3.842670202255249
    4. 'et' → logprob: -5.84266996383667
    5. ')' → logprob: -6.21766996383667
    6. '           ' → logprob: -6.34266996383667
    7. ',' → logprob: -6.46766996383667
    8. '<|end|>' → logprob: -8.967670440673828
    9. '   ' → logprob: -9.717670440673828
    10. '#' → logprob: -9.717670440673828

Token 788: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20033110678195953
    2. 'le' → logprob: -1.9503310918807983
    3. 'G' → logprob: -3.825331211090088
    4. ''' → logprob: -4.825331211090088
    5. '"' → logprob: -6.075331211090088
    6. 'l' → logprob: -6.325331211090088
    7. ' j' → logprob: -6.575331211090088
    8. ' le' → logprob: -6.825331211090088
    9. 'J' → logprob: -7.200331211090088
    10. 'the' → logprob: -7.325331211090088

Token 789: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02315347082912922
    2. 'G' → logprob: -4.148153305053711
    3. '"G' → logprob: -5.023153305053711
    4. '"' → logprob: -8.898153305053711
    5. ' '' → logprob: -9.023153305053711
    6. ' G' → logprob: -9.648153305053711
    7. '`' → logprob: -10.273153305053711
    8. '<G' → logprob: -10.273153305053711
    9. ''GC' → logprob: -10.523153305053711
    10. 'j' → logprob: -10.898153305053711

Token 790: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -6.611323624383658e-05
    2. ''' → logprob: -10.125065803527832
    3. ' G' → logprob: -12.000065803527832
    4. '#' → logprob: -12.500065803527832
    5. '"G' → logprob: -12.625065803527832
    6. 'j' → logprob: -13.250065803527832
    7. '"' → logprob: -13.250065803527832
    8. 'B' → logprob: -13.937565803527832
    9. 'i' → logprob: -14.000065803527832
    10. '`' → logprob: -14.000065803527832

Token 791: ''.
' (ID: 49980)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -1.7437385320663452
    2. ')' → logprob: -1.9937385320663452
    3. '.' → logprob: -1.9937385320663452
    4. '.
' → logprob: -2.3687386512756348
    5. '")' → logprob: -2.6187386512756348
    6. '')
' → logprob: -2.8687386512756348
    7. ')
' → logprob: -2.9937386512756348
    8. ',' → logprob: -2.9937386512756348
    9. ''):
' → logprob: -3.8687386512756348
    10. '):
' → logprob: -4.243738651275635

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006388116744346917
    2. '               ' → logprob: -7.750638961791992
    3. ' and' → logprob: -10.000638961791992
    4. ' if' → logprob: -10.000638961791992
    5. ',' → logprob: -10.625638961791992
    6. '       ' → logprob: -10.750638961791992
    7. '```' → logprob: -10.750638961791992
    8. ':' → logprob: -11.375638961791992
    9. 'if' → logprob: -11.625638961791992
    10. '                   ' → logprob: -12.250638961791992

Token 793: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.397945761680603
    2. '           ' → logprob: -1.147945761680603
    3. 'check' → logprob: -4.647945880889893
    4. ' if' → logprob: -6.647945880889893
    5. '               ' → logprob: -9.772945404052734
    6. '       ' → logprob: -10.522945404052734
    7. ' check' → logprob: -10.522945404052734
    8. '```' → logprob: -11.272945404052734
    9. 'cnt' → logprob: -12.147945404052734
    10. 'continue' → logprob: -13.147945404052734

Token 794: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.16026292741298676
    2. ' center' → logprob: -1.910262942314148
    3. '(center' → logprob: -11.285263061523438
    4. 'S' → logprob: -11.660263061523438
    5. ' S' → logprob: -11.910263061523438
    6. 'B' → logprob: -12.660263061523438
    7. ' ' → logprob: -13.035263061523438
    8. '   ' → logprob: -13.785263061523438
    9. '	center' → logprob: -13.910263061523438
    10. ' B' → logprob: -14.785263061523438

Token 795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861779510974884
    2. 'in' → logprob: -3.0486178398132324
    3. ' not' → logprob: -11.423617362976074
    4. ' ' → logprob: -11.798617362976074
    5. ')' → logprob: -12.048617362976074
    6. '	in' → logprob: -13.298617362976074
    7. 'not' → logprob: -13.673617362976074
    8. 'In' → logprob: -14.548617362976074
    9. '_in' → logprob: -14.673617362976074
    10. '   ' → logprob: -14.798617362976074

Token 796: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.339278580620885e-06
    2. ' B' → logprob: -13.000001907348633
    3. ' ' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '	B' → logprob: -21.125001907348633
    6. ')' → logprob: -21.375001907348633
    7. 'b' → logprob: -21.625001907348633
    8. '#' → logprob: -21.875001907348633
    9. '=B' → logprob: -22.125001907348633
    10. '(B' → logprob: -22.375001907348633

Token 797: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48524895310401917
    2. ':' → logprob: -0.9852489233016968
    3. '               ' → logprob: -4.985249042510986
    4. '           ' → logprob: -5.735249042510986
    5. '):
' → logprob: -7.110249042510986
    6. ' and' → logprob: -8.735248565673828
    7. ':
' → logprob: -10.860248565673828
    8. '):' → logprob: -11.235248565673828
    9. 'and' → logprob: -12.110248565673828
    10. ' :
' → logprob: -12.235248565673828

Token 798: '               ' (ID: 506)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.7967024445533752
    2. '               ' → logprob: -0.9217024445533752
    3. '           ' → logprob: -1.9217023849487305
    4. ' check' → logprob: -6.0467023849487305
    5. 'continue' → logprob: -6.0467023849487305
    6. '                   ' → logprob: -9.42170238494873
    7. 'cnt' → logprob: -10.04670238494873
    8. '   ' → logprob: -10.42170238494873
    9. '	check' → logprob: -10.92170238494873
    10. ' continue' → logprob: -11.29670238494873

Token 799: ' #' (ID: 1069)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0039651282131671906
    2. '               ' → logprob: -5.753964900970459
    3. '                   ' → logprob: -7.253964900970459
    4. 'continue' → logprob: -10.003965377807617
    5. '           ' → logprob: -10.878965377807617
    6. ' check' → logprob: -11.628965377807617
    7. 'cnt' → logprob: -12.753965377807617
    8. '   ' → logprob: -12.878965377807617
    9. '                       ' → logprob: -15.003965377807617
    10. '
' → logprob: -15.503965377807617

Token 800: ' In' (ID: 730)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0007068329723551869
    2. '               ' → logprob: -7.875706672668457
    3. 'continue' → logprob: -8.375706672668457
    4. '           ' → logprob: -10.250706672668457
    5. 'cnt' → logprob: -10.250706672668457
    6. '                   ' → logprob: -10.875706672668457
    7. '       ' → logprob: -13.000706672668457
    8. '                       ' → logprob: -13.625706672668457
    9. ' check' → logprob: -13.750706672668457
    10. '   ' → logprob: -13.875706672668457

Token 801: 'cré' (ID: 125389)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.012414522469043732
    2. ' check' → logprob: -5.012414455413818
    3. '       ' → logprob: -5.262414455413818
    4. '               ' → logprob: -8.512414932250977
    5. '           ' → logprob: -8.637414932250977
    6. 'cnt' → logprob: -9.887414932250977
    7. 'continue' → logprob: -11.512414932250977
    8. 'count' → logprob: -11.637414932250977
    9. '	check' → logprob: -11.637414932250977
    10. 'e' → logprob: -11.887414932250977

Token 802: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0005218160222284496
    2. 'mente' → logprob: -9.000521659851074
    3. 'ments' → logprob: -9.250521659851074
    4. '               ' → logprob: -9.875521659851074
    5. 'cnt' → logprob: -10.125521659851074
    6. 'rement' → logprob: -10.125521659851074
    7. '           ' → logprob: -10.500521659851074
    8. '                   ' → logprob: -10.500521659851074
    9. 'mentation' → logprob: -10.750521659851074
    10. '   ' → logprob: -10.875521659851074

Token 803: ' la' (ID: 557)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0001637300301808864
    2. '               ' → logprob: -8.750164031982422
    3. '                   ' → logprob: -12.750164031982422
    4. ' check' → logprob: -13.750164031982422
    5. 'continue' → logprob: -14.000164031982422
    6. 'cnt' → logprob: -15.500164031982422
    7. '           ' → logprob: -16.125164031982422
    8. '       ' → logprob: -16.750164031982422
    9. '	check' → logprob: -17.500164031982422
    10. '   ' → logprob: -17.625164031982422

Token 804: ' variable' (ID: 11076)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00031627772841602564
    2. 'cnt' → logprob: -8.500316619873047
    3. ' check' → logprob: -9.125316619873047
    4. 'continue' → logprob: -12.875316619873047
    5. 'count' → logprob: -15.000316619873047
    6. 'chk' → logprob: -15.250316619873047
    7. '1' → logprob: -15.750316619873047
    8. ' cnt' → logprob: -16.000316619873047
    9. '	check' → logprob: -16.250316619873047
    10. '   ' → logprob: -16.250316619873047

Token 805: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00021831797494087368
    2. 'cnt' → logprob: -8.750218391418457
    3. ' check' → logprob: -9.875218391418457
    4. '   ' → logprob: -12.125218391418457
    5. '       ' → logprob: -13.875218391418457
    6. '           ' → logprob: -14.500218391418457
    7. 'continue' → logprob: -14.875218391418457
    8. 'count' → logprob: -14.875218391418457
    9. '               ' → logprob: -15.250218391418457
    10. 'chk' → logprob: -15.375218391418457

Token 806: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027678925544023514
    2. ' +=' → logprob: -3.902678966522217
    3. '               ' → logprob: -5.402678966522217
    4. '                   ' → logprob: -6.027678966522217
    5. '                       ' → logprob: -9.902678489685059
    6. '=' → logprob: -9.902678489685059
    7. '           ' → logprob: -10.652678489685059
    8. 'by' → logprob: -11.027678489685059
    9. '```' → logprob: -11.027678489685059
    10. '+' → logprob: -11.277678489685059

Token 807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'check' → logprob: -14.875003814697266
    4. '-' → logprob: -15.125003814697266
    5. '2' → logprob: -15.750003814697266
    6. '+' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '3' → logprob: -19.375003814697266
    9. '       ' → logprob: -19.875003814697266
    10. '１' → logprob: -19.875003814697266

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '-' → logprob: -14.750003814697266
    5. '3' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '+' → logprob: -17.562503814697266
    8. '１' → logprob: -17.750003814697266
    9. 'check' → logprob: -17.812503814697266
    10. '4' → logprob: -18.625003814697266

Token 809: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06731880456209183
    2. '                   ' → logprob: -3.317318916320801
    3. '           ' → logprob: -3.817318916320801
    4. '                       ' → logprob: -6.317318916320801
    5. '<|end|>' → logprob: -6.442318916320801
    6. '
' → logprob: -6.942318916320801
    7. 'check' → logprob: -7.442318916320801
    8. '                               ' → logprob: -7.567318916320801
    9. '                           ' → logprob: -8.3173189163208
    10. '       ' → logprob: -8.3173189163208

Token 810: ' ce' (ID: 2357)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2536104917526245
    2. 'check' → logprob: -1.6286104917526245
    3. '1' → logprob: -4.378610610961914
    4. ' continue' → logprob: -5.378610610961914
    5. '       ' → logprob: -5.753610610961914
    6. '           ' → logprob: -6.128610610961914
    7. ' check' → logprob: -6.378610610961914
    8. 'cnt' → logprob: -6.628610610961914
    9. '   ' → logprob: -7.128610610961914
    10. 'count' → logprob: -8.003610610961914

Token 811: ' cas' (ID: 2108)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.01138331089168787
    2. ' check' → logprob: -4.511383533477783
    3. 'case' → logprob: -9.261383056640625
    4. 'token' → logprob: -9.386383056640625
    5. 'count' → logprob: -10.136383056640625
    6. 'for' → logprob: -10.386383056640625
    7. 'counter' → logprob: -11.011383056640625
    8. '```' → logprob: -11.011383056640625
    9. '
' → logprob: -11.511383056640625
    10. '`' → logprob: -12.386383056640625

Token 812: ' particulier' (ID: 47842)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06957099586725235
    2. '                   ' → logprob: -3.194571018218994
    3. '           ' → logprob: -3.944571018218994
    4. '
' → logprob: -5.819571018218994
    5. '                       ' → logprob: -6.569571018218994
    6. 'check' → logprob: -7.194571018218994
    7. '<|end|>' → logprob: -8.444570541381836
    8. ' check' → logprob: -8.569570541381836
    9. '                               ' → logprob: -8.569570541381836
    10. '                           ' → logprob: -8.694570541381836

Token 814: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010372024029493332
    2. 'check' → logprob: -5.510372161865234
    3. '           ' → logprob: -5.885372161865234
    4. '                   ' → logprob: -6.260372161865234
    5. '			' → logprob: -6.885372161865234
    6. '```' → logprob: -8.260372161865234
    7. ' check' → logprob: -8.885372161865234
    8. '                       ' → logprob: -10.010372161865234
    9. '		' → logprob: -10.385372161865234
    10. '				' → logprob: -10.510372161865234

Token 815: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -1.1517960956552997e-05
    2. '               ' → logprob: -11.500011444091797
    3. ' check' → logprob: -14.000011444091797
    4. '           ' → logprob: -15.250011444091797
    5. '                   ' → logprob: -15.250011444091797
    6. '	check' → logprob: -18.500011444091797
    7. '                       ' → logprob: -20.750011444091797
    8. '1' → logprob: -20.875011444091797
    9. '   ' → logprob: -21.000011444091797
    10. '(check' → logprob: -21.375011444091797

Token 816: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06339109688997269
    2. ' +=' → logprob: -2.8133912086486816
    3. '=' → logprob: -6.563391208648682
    4. ' =' → logprob: -11.438390731811523
    5. '   ' → logprob: -14.813390731811523
    6. '+' → logprob: -15.813390731811523
    7. '-=' → logprob: -18.188390731811523
    8. ']+=' → logprob: -18.438390731811523
    9. '+=(' → logprob: -18.813390731811523
    10. '       ' → logprob: -19.313390731811523

Token 817: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '```' → logprob: -19.2500057220459
    5. '  ' → logprob: -19.6250057220459
    6. '<|end|>' → logprob: -21.2500057220459
    7. '       ' → logprob: -21.6250057220459
    8. '۱' → logprob: -22.0625057220459
    9. '           ' → logprob: -22.3750057220459
    10. '2' → logprob: -22.3750057220459

Token 818: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '2' → logprob: -16.5
    4. '3' → logprob: -18.6875
    5. '   ' → logprob: -18.875
    6. '１' → logprob: -20.0625
    7. '0' → logprob: -20.0625
    8. '10' → logprob: -20.375
    9. '```' → logprob: -20.5
    10. 'a' → logprob: -20.6875

Token 819: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018399098189547658
    2. '        
' → logprob: -9.250184059143066
    3. '#' → logprob: -9.625184059143066
    4. '<|end|>' → logprob: -12.000184059143066
    5. '
' → logprob: -12.125184059143066
    6. '           ' → logprob: -12.375184059143066
    7. '               ' → logprob: -13.375184059143066
    8. '```' → logprob: -13.625184059143066
    9. '                
' → logprob: -14.750184059143066
    10. '<|end|>' → logprob: -14.875184059143066

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004083385691046715
    2. 'if' → logprob: -5.629083156585693
    3. '#' → logprob: -8.004083633422852
    4. '
' → logprob: -9.254083633422852
    5. ' if' → logprob: -10.879083633422852
    6. '        
' → logprob: -11.379083633422852
    7. 'cnt' → logprob: -11.379083633422852
    8. '```' → logprob: -12.629083633422852
    9. '               ' → logprob: -13.129083633422852
    10. '   ' → logprob: -13.629083633422852

Token 821: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16685675084590912
    2. '       ' → logprob: -1.9168567657470703
    3. 'cnt' → logprob: -5.66685676574707
    4. '#' (adapté à ' #') → logprob: -5.79185676574707
    5. 'for' → logprob: -9.41685676574707
    6. ' if' → logprob: -11.66685676574707
    7. '   ' → logprob: -13.04185676574707
    8. '
' → logprob: -13.54185676574707
    9. '	if' → logprob: -14.16685676574707
    10. '           ' → logprob: -14.16685676574707

Token 822: ' Vér' (ID: 159169)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0630098357796669
    2. 'if' → logprob: -2.938009738922119
    3. '#' → logprob: -4.938009738922119
    4. 'for' → logprob: -7.063009738922119
    5. ' cnt' → logprob: -11.438010215759277
    6. '   ' → logprob: -11.563010215759277
    7. 'count' → logprob: -12.188010215759277
    8. 'check' → logprob: -12.313010215759277
    9. '	cnt' → logprob: -12.438010215759277
    10. '       ' → logprob: -12.563010215759277

Token 823: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.033582653850317
    2. 'if' → logprob: -3.6585826873779297
    3. '#' → logprob: -5.28358268737793
    4. 'ifies' → logprob: -6.28358268737793
    5. 'ifiez' → logprob: -9.78358268737793
    6. 'ify' → logprob: -10.03358268737793
    7. 'er' → logprob: -10.03358268737793
    8. 'rif' → logprob: -10.15858268737793
    9. '```' → logprob: -10.40858268737793
    10. 'ifi' → logprob: -10.40858268737793

Token 824: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32320213317871094
    2. ' if' → logprob: -1.323202133178711
    3. ' si' → logprob: -4.823202133178711
    4. 'si' → logprob: -6.448202133178711
    5. '   ' → logprob: -8.698202133178711
    6. 'left' → logprob: -9.823202133178711
    7. '       ' → logprob: -10.698202133178711
    8. ' left' → logprob: -12.573202133178711
    9. ' ' → logprob: -12.823202133178711
    10. '	if' → logprob: -13.073202133178711

Token 825: ' l' (ID: 305)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.18086634576320648
    2. ' left' → logprob: -1.8058663606643677
    3. 'right' → logprob: -7.180866241455078
    4. '0' → logprob: -8.555866241455078
    5. ' right' → logprob: -8.930866241455078
    6. ' ' → logprob: -11.180866241455078
    7. '(left' → logprob: -11.430866241455078
    8. '	left' → logprob: -12.430866241455078
    9. ' lef' → logprob: -13.430866241455078
    10. '(' → logprob: -13.680866241455078

Token 826: ''ind' (ID: 82245)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5844680070877075
    2. ' left' → logprob: -0.8344680070877075
    3. 'right' → logprob: -5.209467887878418
    4. ' right' → logprob: -5.834467887878418
    5. 'eft' → logprob: -10.334467887878418
    6. 'abs' → logprob: -10.834467887878418
    7. '(left' → logprob: -11.334467887878418
    8. ' lef' → logprob: -11.834467887878418
    9. ' ' → logprob: -12.209467887878418
    10. '	left' → logprob: -12.334467887878418

Token 827: 'ice' (ID: 603)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7557637095451355
    2. 'left' → logprob: -1.3807637691497803
    3. 'i' → logprob: -1.6307637691497803
    4. 'ex' → logprob: -2.7557637691497803
    5. 'ices' → logprob: -5.005763530731201
    6. 'right' → logprob: -5.630763530731201
    7. 'in' → logprob: -6.505763530731201
    8. 'e' → logprob: -6.505763530731201
    9. 'ice' → logprob: -6.630763530731201
    10. '(left' → logprob: -7.130763530731201

Token 828: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004447447136044502
    2. ' left' → logprob: -5.6294474601745605
    3. '0' → logprob: -7.3794474601745605
    4. 'right' → logprob: -8.629446983337402
    5. '>=' → logprob: -10.504446983337402
    6. '(left' → logprob: -11.629446983337402
    7. ' >=' → logprob: -13.129446983337402
    8. ' ' → logprob: -13.754446983337402
    9. ' right' → logprob: -14.004446983337402
    10. '[left' → logprob: -14.004446983337402

Token 829: ' (' (ID: 350)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5094629526138306
    2. ' >=' → logprob: -1.0094629526138306
    3. ' in' → logprob: -3.384462833404541
    4. 'in' → logprob: -7.134462833404541
    5. ')>=' → logprob: -10.3844633102417
    6. '>' → logprob: -10.8844633102417
    7. ']>=' → logprob: -11.7594633102417
    8. 'if' → logprob: -12.2594633102417
    9. ')' → logprob: -12.6344633102417
    10. ' ' → logprob: -12.7594633102417

Token 830: 'don' (ID: 22130)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.024727076292037964
    2. '0' → logprob: -3.8997271060943604
    3. ' >=' → logprob: -5.899726867675781
    4. ')' → logprob: -6.899726867675781
    5. ')>=' → logprob: -8.149726867675781
    6. '>' → logprob: -9.274726867675781
    7. ']>=' → logprob: -11.149726867675781
    8. 'left' → logprob: -11.149726867675781
    9. '≥' → logprob: -11.524726867675781
    10. ' ' → logprob: -13.524726867675781

Token 831: 'c' (ID: 66)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.003845555940642953
    2. '>' → logprob: -6.253845691680908
    3. '=' → logprob: -6.878845691680908
    4. ' >=' → logprob: -8.37884521484375
    5. '≥' → logprob: -8.50384521484375
    6. 'ge' → logprob: -8.75384521484375
    7. ')' → logprob: -9.87884521484375
    8. 'u' → logprob: -9.87884521484375
    9. 'ex' → logprob: -10.00384521484375
    10. 'eft' → logprob: -10.62884521484375

Token 832: ' sym' (ID: 5357)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5895299911499023
    2. '>=' → logprob: -1.4645299911499023
    3. 'left' → logprob: -1.5895299911499023
    4. ' left' → logprob: -4.839529991149902
    5. ' >=' → logprob: -6.589529991149902
    6. ' ' → logprob: -8.089529991149902
    7. '>' → logprob: -8.089529991149902
    8. '≥' → logprob: -9.089529991149902
    9. ')' → logprob: -9.589529991149902
    10. ')>=' → logprob: -10.589529991149902

Token 833: 'étr' (ID: 35025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06122634559869766
    2. '>=' → logprob: -2.9362263679504395
    3. '>' → logprob: -5.9362263679504395
    4. ' >=' → logprob: -6.6862263679504395
    5. '`t' → logprob: -6.8112263679504395
    6. ''t' → logprob: -7.4362263679504395
    7. 'e' → logprob: -8.061225891113281
    8. 'ot' → logprob: -9.436225891113281
    9. 'it' → logprob: -9.936225891113281
    10. '≥' → logprob: -10.061225891113281

Token 834: 'ique' (ID: 2222)
  Prédit: 'rique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rique' → logprob: -0.9925837516784668
    2. 'r' → logprob: -1.9925837516784668
    3. 'étr' → logprob: -2.242583751678467
    4. 'ric' → logprob: -2.617583751678467
    5. '=' → logprob: -2.867583751678467
    6. 'et' → logprob: -2.992583751678467
    7. 'm' → logprob: -3.117583751678467
    8. '       ' → logprob: -3.367583751678467
    9. 'ique' → logprob: -3.492583751678467
    10. 'try' → logprob: -4.117583751678467

Token 835: ' à' (ID: 1221)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.21644453704357147
    2. ' >=' → logprob: -1.716444492340088
    3. '>' → logprob: -4.716444492340088
    4. ' in' → logprob: -5.841444492340088
    5. ')' → logprob: -6.466444492340088
    6. ' >' → logprob: -7.091444492340088
    7. 'in' → logprob: -8.091444969177246
    8. ')>=' → logprob: -8.841444969177246
    9. '!=' → logprob: -9.466444969177246
    10. '=' → logprob: -10.841444969177246

Token 836: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8785319328308105
    2. 'left' → logprob: -1.1285319328308105
    3. '0' → logprob: -1.3785319328308105
    4. 'right' → logprob: -5.7535319328308105
    5. ' m' → logprob: -6.0035319328308105
    6. ' left' → logprob: -6.8785319328308105
    7. 'B' → logprob: -7.5035319328308105
    8. ')' → logprob: -7.6285319328308105
    9. ' ' → logprob: -7.8785319328308105
    10. 'True' → logprob: -8.378532409667969

Token 837: ' par' (ID: 686)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7999764680862427
    2. ' >=' → logprob: -1.2999764680862427
    3. ')' → logprob: -1.4249764680862427
    4. '-' → logprob: -4.174976348876953
    5. '>' → logprob: -4.924976348876953
    6. ' -' → logprob: -5.174976348876953
    7. ')>=' → logprob: -5.174976348876953
    8. ' >' → logprob: -6.424976348876953
    9. ' )' → logprob: -6.799976348876953
    10. ')>' → logprob: -8.799976348876953

Token 838: ' rapport' (ID: 20847)
  Prédit: 'rapport'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rapport' → logprob: -0.40089428424835205
    2. ' rapport' → logprob: -1.900894284248352
    3. 'r' → logprob: -2.1508941650390625
    4. 'distance' → logprob: -3.9008941650390625
    5. 'rap' → logprob: -3.9008941650390625
    6. '=' → logprob: -5.6508941650390625
    7. '1' → logprob: -5.6508941650390625
    8. '2' → logprob: -5.9008941650390625
    9. 'l' → logprob: -6.0258941650390625
    10. 'm' → logprob: -6.0258941650390625

Token 839: ' à' (ID: 1221)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.49277982115745544
    2. 'M' → logprob: -1.3677798509597778
    3. '=' → logprob: -2.6177797317504883
    4. ')' → logprob: -4.367779731750488
    5. ' m' → logprob: -4.367779731750488
    6. 'right' → logprob: -4.867779731750488
    7. 'l' → logprob: -4.992779731750488
    8. 'à' → logprob: -5.242779731750488
    9. ' M' → logprob: -5.242779731750488
    10. 'r' → logprob: -5.492779731750488

Token 840: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.012672687880694866
    2. 'm' → logprob: -4.6376729011535645
    3. '0' → logprob: -6.7626729011535645
    4. 'right' → logprob: -7.1376729011535645
    5. ' M' → logprob: -7.6376729011535645
    6. 'r' → logprob: -7.7626729011535645
    7. ')' → logprob: -11.637672424316406
    8. 'center' → logprob: -11.762672424316406
    9. 'left' → logprob: -11.887672424316406
    10. ' ' → logprob: -12.137672424316406

Token 841: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011734584346413612
    2. '>=' → logprob: -5.011734485626221
    3. ' >=' → logprob: -6.136734485626221
    4. ' )' → logprob: -6.386734485626221
    5. ')>=' → logprob: -7.636734485626221
    6. ' in' → logprob: -8.386734962463379
    7. 'in' → logprob: -8.386734962463379
    8. '!=' → logprob: -10.136734962463379
    9. 'et' → logprob: -10.386734962463379
    10. ' !=' → logprob: -10.511734962463379

Token 842: ' fait' (ID: 7473)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7358497977256775
    2. '>=' → logprob: -0.9858497977256775
    3. ' in' → logprob: -2.2358498573303223
    4. 'in' → logprob: -3.2358498573303223
    5. 'if' → logprob: -7.860849857330322
    6. '<|end|>' → logprob: -7.860849857330322
    7. ')>=' → logprob: -8.360849380493164
    8. ' if' → logprob: -9.110849380493164
    9. ' is' → logprob: -9.360849380493164
    10. '   ' → logprob: -9.610849380493164

Token 843: ' partie' (ID: 22139)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02330254763364792
    2. '0' → logprob: -5.1483025550842285
    3. 'in' → logprob: -5.3983025550842285
    4. 'left' → logprob: -5.5233025550842285
    5. ')' → logprob: -6.3983025550842285
    6. 'not' → logprob: -6.3983025550842285
    7. ' >=' → logprob: -6.5233025550842285
    8. ')>=' → logprob: -6.5233025550842285
    9. '(' → logprob: -7.5233025550842285
    10. '">' → logprob: -7.7733025550842285

Token 844: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.720964789390564
    2. ' in' → logprob: -0.845964789390564
    3. 'B' → logprob: -2.9709649085998535
    4. ' de' → logprob: -3.9709649085998535
    5. ' B' → logprob: -4.8459649085998535
    6. '(B' → logprob: -6.0959649085998535
    7. ' des' → logprob: -6.5959649085998535
    8. '(' → logprob: -6.9709649085998535
    9. ' of' → logprob: -7.2209649085998535
    10. 'de' → logprob: -7.8459649085998535

Token 845: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012510355561971664
    2. ' B' → logprob: -4.387510299682617
    3. '[' → logprob: -15.262510299682617
    4. 'b' → logprob: -15.887510299682617
    5. ' range' → logprob: -16.387510299682617
    6. 'range' → logprob: -16.387510299682617
    7. '{' → logprob: -16.887510299682617
    8. ' ' → logprob: -17.637510299682617
    9. '0' → logprob: -17.637510299682617
    10. 'S' → logprob: -17.762510299682617

Token 846: ''ensemble' (ID: 79341)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03804321587085724
    2. ' B' → logprob: -3.288043260574341
    3. '_B' → logprob: -14.663043022155762
    4. '	B' → logprob: -14.663043022155762
    5. ' in' → logprob: -15.663043022155762
    6. 'b' → logprob: -15.913043022155762
    7. ')' → logprob: -16.163043975830078
    8. 'in' → logprob: -16.288043975830078
    9. 'right' → logprob: -16.413043975830078
    10. '=B' → logprob: -16.788043975830078

Token 847: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0380416102707386
    2. ' B' → logprob: -3.288041591644287
    3. 'left' → logprob: -16.413042068481445
    4. '(B' → logprob: -16.788042068481445
    5. 'b' → logprob: -16.913042068481445
    6. ' left' → logprob: -17.663042068481445
    7. '	B' → logprob: -17.913042068481445
    8. 'if' → logprob: -18.538042068481445
    9. '{' → logprob: -18.913042068481445
    10. 'A' → logprob: -18.913042068481445

Token 848: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10257688909769058
    2. ' and' → logprob: -2.727576971054077
    3. 'and' → logprob: -3.977576971054077
    4. ' in' → logprob: -4.977576732635498
    5. 'in' → logprob: -5.227576732635498
    6. 'if' → logprob: -8.602577209472656
    7. ' ==' → logprob: -8.852577209472656
    8. '==' → logprob: -8.852577209472656
    9. ',' → logprob: -9.102577209472656
    10. '	' → logprob: -9.102577209472656

Token 849: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5280295014381409
    2. '       ' → logprob: -1.278029441833496
    3. ' if' → logprob: -2.028029441833496
    4. '```' → logprob: -10.028029441833496
    5. '   ' → logprob: -13.153029441833496
    6. '	if' → logprob: -13.278029441833496
    7. 'If' → logprob: -13.778029441833496
    8. ' and' → logprob: -14.278029441833496
    9. '           ' → logprob: -14.403029441833496
    10. ' or' → logprob: -14.403029441833496

Token 850: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21326129138469696
    2. '       ' → logprob: -1.9632612466812134
    3. ' if' → logprob: -2.963261365890503
    4. '```' → logprob: -12.963261604309082
    5. '	if' → logprob: -13.838261604309082
    6. '   ' → logprob: -14.463261604309082
    7. 'If' → logprob: -14.588261604309082
    8. '<|end|>' → logprob: -15.088261604309082
    9. '#' → logprob: -16.338260650634766
    10. '	' → logprob: -16.713260650634766

Token 851: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005930101033300161
    2. ' left' → logprob: -5.130929946899414
    3. '0' → logprob: -14.630929946899414
    4. '	left' → logprob: -15.130929946899414
    5. '   ' → logprob: -15.255929946899414
    6. '(left' → logprob: -15.755929946899414
    7. ' ' → logprob: -15.880929946899414
    8. 'right' → logprob: -16.505929946899414
    9. '[left' → logprob: -17.755929946899414
    10. '  ' → logprob: -18.005929946899414

Token 852: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29806023836135864
    2. ' in' → logprob: -1.4230601787567139
    3. '>=' → logprob: -4.173060417175293
    4. ' >=' → logprob: -6.673060417175293
    5. ')' → logprob: -10.173060417175293
    6. ' ' → logprob: -10.923060417175293
    7. '>' → logprob: -11.048060417175293
    8. '	in' → logprob: -11.798060417175293
    9. '   ' → logprob: -12.048060417175293
    10. ')>=' → logprob: -12.798060417175293

Token 853: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0024756586644798517
    2. ' B' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.87747573852539
    4. ' ' → logprob: -19.37747573852539
    5. 'b' → logprob: -19.87747573852539
    6. '	B' → logprob: -20.37747573852539
    7. '       ' → logprob: -21.62747573852539
    8. '_B' → logprob: -21.87747573852539
    9. ')' → logprob: -22.00247573852539
    10. 'Ｂ' → logprob: -22.00247573852539

Token 854: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5835323333740234
    2. ':
' → logprob: -1.2085323333740234
    3. ':' → logprob: -1.9585323333740234
    4. ' and' → logprob: -6.333532333374023
    5. 'and' → logprob: -7.958532333374023
    6. ' or' → logprob: -9.833532333374023
    7. '       ' → logprob: -9.958532333374023
    8. '):
' → logprob: -10.583532333374023
    9. '==' → logprob: -10.708532333374023
    10. '               ' → logprob: -11.083532333374023

Token 855: '           ' (ID: 352)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3134353756904602
    2. '           ' → logprob: -1.3134353160858154
    3. ' check' → logprob: -9.313435554504395
    4. '#' → logprob: -9.688435554504395
    5. '               ' → logprob: -11.813435554504395
    6. '       ' → logprob: -11.813435554504395
    7. '   ' → logprob: -13.313435554504395
    8. 'cnt' → logprob: -13.688435554504395
    9. '```' → logprob: -14.438435554504395
    10. '          ' → logprob: -14.563435554504395

Token 856: ' #' (ID: 1069)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0019613439217209816
    2. '           ' → logprob: -6.2519612312316895
    3. ' check' → logprob: -10.376961708068848
    4. '       ' → logprob: -14.376961708068848
    5. '	check' → logprob: -14.501961708068848
    6. '               ' → logprob: -15.126961708068848
    7. '#' (adapté à ' #') → logprob: -16.37696075439453
    8. '
' → logprob: -16.87696075439453
    9. '            
' → logprob: -16.87696075439453
    10. '   ' → logprob: -17.62696075439453

Token 857: ' Si' (ID: 7832)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -16.625
    3. '   ' → logprob: -16.875
    4. ' check' → logprob: -17.0
    5. 'cnt' → logprob: -17.375
    6. '           ' → logprob: -17.875
    7. '#' → logprob: -19.5
    8. '               ' → logprob: -19.75
    9. '	check' → logprob: -20.375
    10. 'continue' → logprob: -20.875

Token 858: ' oui' (ID: 50908)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0006291598547250032
    2. ' check' → logprob: -7.50062894821167
    3. '           ' → logprob: -9.500629425048828
    4. '#' → logprob: -14.250629425048828
    5. '               ' → logprob: -15.000629425048828
    6. '       ' → logprob: -15.500629425048828
    7. '	check' → logprob: -15.750629425048828
    8. '   ' → logprob: -17.375629425048828
    9. '
' → logprob: -17.500629425048828
    10. ' ' → logprob: -18.375629425048828

Token 859: ',' (ID: 11)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.21632404625415802
    2. '               ' → logprob: -2.2163240909576416
    3. '           ' → logprob: -2.4663240909576416
    4. ' check' → logprob: -7.4663238525390625
    5. '#' → logprob: -11.091323852539062
    6. '       ' → logprob: -12.091323852539062
    7. '                   ' → logprob: -12.591323852539062
    8. '
' → logprob: -12.716323852539062
    9. '	check' → logprob: -12.841323852539062
    10. '              ' → logprob: -13.216323852539062

Token 860: ' incr' (ID: 52395)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00010700009443098679
    2. '           ' → logprob: -9.250106811523438
    3. ' check' → logprob: -11.500106811523438
    4. '       ' → logprob: -15.000106811523438
    5. '               ' → logprob: -15.500106811523438
    6. '	check' → logprob: -16.625106811523438
    7. '   ' → logprob: -18.000106811523438
    8. '#' → logprob: -18.375106811523438
    9. 'chk' → logprob: -18.625106811523438
    10. 'cnt' → logprob: -18.875106811523438

Token 861: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11703543365001678
    2. 'ément' → logprob: -2.242035388946533
    3. '#' → logprob: -7.367035388946533
    4. '       ' → logprob: -7.617035388946533
    5. '   ' → logprob: -7.617035388946533
    6. 'è' → logprob: -7.742035388946533
    7. 'ement' → logprob: -7.742035388946533
    8. '           ' → logprob: -8.117035865783691
    9. 'mente' → logprob: -8.242035865783691
    10. 'éments' → logprob: -8.367035865783691

Token 862: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.20516516268253326
    2. 'mente' → logprob: -1.705165147781372
    3. 'ments' → logprob: -6.455165386199951
    4. 'ément' → logprob: -7.455165386199951
    5. 'mented' → logprob: -7.830165386199951
    6. 'cnt' → logprob: -7.830165386199951
    7. 'mé' → logprob: -8.080164909362793
    8. 'mental' → logprob: -9.330164909362793
    9. 'mentar' → logprob: -9.580164909362793
    10. 'mnt' → logprob: -9.705164909362793

Token 863: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.3425219549390022e-05
    2. ' check' → logprob: -11.25001335144043
    3. '           ' → logprob: -15.62501335144043
    4. '       ' → logprob: -15.75001335144043
    5. '
' → logprob: -18.00001335144043
    6. '	check' → logprob: -18.00001335144043
    7. '   ' → logprob: -18.50001335144043
    8. '               ' → logprob: -19.75001335144043
    9. '```' → logprob: -20.00001335144043
    10. '(check' → logprob: -20.87501335144043

Token 864: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009335974231362343
    2. ' +=' → logprob: -4.759335994720459
    3. '           ' → logprob: -7.259335994720459
    4. '               ' → logprob: -11.1343355178833
    5. ' ' → logprob: -14.1343355178833
    6. '=' → logprob: -14.3843355178833
    7. '```' → logprob: -14.3843355178833
    8. '+' → logprob: -14.6343355178833
    9. ']+=' → logprob: -15.1343355178833
    10. '-=' → logprob: -16.509336471557617

Token 865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.875045776367188
    4. '+' → logprob: -18.875045776367188
    5. '  ' → logprob: -20.750045776367188
    6. '       ' → logprob: -21.500045776367188
    7. '１' → logprob: -21.750045776367188
    8. '    ' → logprob: -22.125045776367188
    9. ' +' → logprob: -22.375045776367188
    10. '۱' → logprob: -22.500045776367188

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.250003814697266
    4. '+' → logprob: -20.375003814697266
    5. '  ' → logprob: -21.125003814697266
    6. '１' → logprob: -21.750003814697266
    7. '    ' → logprob: -21.875003814697266
    8. '2' → logprob: -22.500003814697266
    9. '۱' → logprob: -22.500003814697266
    10. '-' → logprob: -22.625003814697266

Token 867: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021052466705441475
    2. '               ' → logprob: -3.896052360534668
    3. '       ' → logprob: -8.396052360534668
    4. '<|end|>' → logprob: -9.021052360534668
    5. '	       ' → logprob: -10.146052360534668
    6. '		' → logprob: -10.271052360534668
    7. '   ' → logprob: -11.271052360534668
    8. '          ' → logprob: -11.521052360534668
    9. '```' → logprob: -11.521052360534668
    10. '                   ' → logprob: -11.771052360534668

Token 868: '           ' (ID: 352)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.38742533326148987
    2. '           ' → logprob: -1.1374253034591675
    3. ' check' → logprob: -7.762425422668457
    4. '               ' → logprob: -9.387425422668457
    5. '       ' → logprob: -10.512425422668457
    6. '```' → logprob: -11.887425422668457
    7. '   ' → logprob: -12.137425422668457
    8. '	check' → logprob: -12.887425422668457
    9. '                   ' → logprob: -14.137425422668457
    10. '          ' → logprob: -14.637425422668457

Token 869: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -4.127333340875339e-06
    2. ' check' → logprob: -13.000003814697266
    3. '           ' → logprob: -13.250003814697266
    4. '	check' → logprob: -19.875003814697266
    5. '       ' → logprob: -20.625003814697266
    6. '   ' → logprob: -21.500003814697266
    7. '               ' → logprob: -21.500003814697266
    8. '_check' → logprob: -23.500003814697266
    9. '(check' → logprob: -24.500003814697266
    10. ' ' → logprob: -24.750003814697266

Token 870: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005532711511477828
    2. ' +=' → logprob: -7.500553131103516
    3. '+' → logprob: -16.750553131103516
    4. '=' → logprob: -16.875553131103516
    5. '       ' → logprob: -17.000553131103516
    6. '   ' → logprob: -17.125553131103516
    7. '           ' → logprob: -17.625553131103516
    8. ']+=' → logprob: -17.750553131103516
    9. '-=' → logprob: -19.875553131103516
    10. '+=(' → logprob: -20.625553131103516

Token 871: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -22.125
    5. '۱' → logprob: -22.5
    6. '１' → logprob: -23.5
    7. '  ' → logprob: -23.5
    8. '<|end|>' → logprob: -23.625
    9. '       ' → logprob: -24.25
    10. '१' → logprob: -24.5

Token 872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '１' → logprob: -21.25
    4. '۱' → logprob: -21.5
    5. '```' → logprob: -21.875
    6. '   ' → logprob: -22.0625
    7. '2' → logprob: -22.1875
    8. '0' → logprob: -22.3125
    9. '१' → logprob: -22.3125
    10. '১' → logprob: -22.625

Token 873: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006896786508150399
    2. 'if' → logprob: -7.750689506530762
    3. '#' → logprob: -8.500689506530762
    4. '```' → logprob: -10.750689506530762
    5. '<|end|>' → logprob: -11.375689506530762
    6. ' if' → logprob: -11.750689506530762
    7. '        
' → logprob: -12.250689506530762
    8. '           ' → logprob: -12.500689506530762
    9. '
' → logprob: -12.750689506530762
    10. '   ' → logprob: -13.625689506530762

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048892900347709656
    2. 'if' → logprob: -3.0488929748535156
    3. '#' → logprob: -8.798892974853516
    4. '```' → logprob: -9.548892974853516
    5. ' if' → logprob: -9.548892974853516
    6. '
' → logprob: -12.173892974853516
    7. '   ' → logprob: -12.798892974853516
    8. '           ' → logprob: -13.173892974853516
    9. '        
' → logprob: -14.298892974853516
    10. '​' → logprob: -14.673892974853516

Token 875: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7640261650085449
    2. '#' (adapté à ' #') → logprob: -1.014026165008545
    3. 'if' → logprob: -1.764026165008545
    4. ' if' → logprob: -9.889026641845703
    5. '```' → logprob: -9.889026641845703
    6. '   ' → logprob: -14.764026641845703
    7. ' #' → logprob: -14.764026641845703
    8. '           ' → logprob: -14.889026641845703
    9. '
' → logprob: -15.639026641845703
    10. '​' → logprob: -16.014026641845703

Token 876: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004124942235648632
    2. '       ' → logprob: -5.504125118255615
    3. ' if' → logprob: -10.004124641418457
    4. '#' → logprob: -13.754124641418457
    5. '   ' → logprob: -16.254125595092773
    6. '	if' → logprob: -17.004125595092773
    7. '```' → logprob: -17.004125595092773
    8. '           ' → logprob: -17.254125595092773
    9. '      ' → logprob: -17.629125595092773
    10. '        ' → logprob: -17.754125595092773

Token 877: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.005312258377671242
    2. 'if' → logprob: -5.255312442779541
    3. 'ifies' → logprob: -10.130311965942383
    4. 'ifi' → logprob: -10.505311965942383
    5. 'f' → logprob: -11.880311965942383
    6. 'ifiez' → logprob: -13.505311965942383
    7. 'ifié' → logprob: -13.755311965942383
    8. '#' → logprob: -13.880311965942383
    9. 'ifier' → logprob: -15.880311965942383
    10. 'ife' → logprob: -16.005311965942383

Token 878: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6036624908447266
    2. ' if' → logprob: -0.8536624908447266
    3. '       ' → logprob: -3.6036624908447266
    4. ' si' → logprob: -9.103662490844727
    5. '	if' → logprob: -13.228662490844727
    6. '```' → logprob: -13.228662490844727
    7. 'si' → logprob: -13.728662490844727
    8. '        ' → logprob: -13.978662490844727
    9. 'If' → logprob: -15.353662490844727
    10. '   ' → logprob: -15.353662490844727

Token 879: ' l' (ID: 305)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2014150768518448
    2. 'right' → logprob: -1.7014150619506836
    3. '(right' → logprob: -13.576415061950684
    4. '	right' → logprob: -15.326415061950684
    5. 'if' → logprob: -16.201416015625
    6. '       ' → logprob: -16.451416015625
    7. ' if' → logprob: -16.576416015625
    8. '[right' → logprob: -16.826416015625
    9. '   ' → logprob: -18.326416015625
    10. '.right' → logprob: -18.951416015625

Token 880: ''ind' (ID: 82245)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.048592593520879745
    2. ' right' → logprob: -3.0485925674438477
    3. '[right' → logprob: -12.298592567443848
    4. '(right' → logprob: -15.548592567443848
    5. '	right' → logprob: -15.798592567443848
    6. 'ight' → logprob: -15.798592567443848
    7. 'left' → logprob: -16.298593521118164
    8. '.right' → logprob: -17.548593521118164
    9. 'if' → logprob: -17.548593521118164
    10. ' ' → logprob: -18.548593521118164

Token 881: 'ice' (ID: 603)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.13720300793647766
    2. 'ex' → logprob: -2.3872029781341553
    3. 'ight' → logprob: -3.6372029781341553
    4. 'e' → logprob: -5.762203216552734
    5. 'if' → logprob: -5.762203216552734
    6. 'dex' → logprob: -6.762203216552734
    7. 'ext' → logprob: -7.512203216552734
    8. 'ices' → logprob: -7.637203216552734
    9. 'ice' → logprob: -8.137203216552734
    10. 'ed' → logprob: -9.262203216552734

Token 882: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889562100172043
    2. ' right' → logprob: -2.5788955688476562
    3. '[right' → logprob: -12.203895568847656
    4. '(right' → logprob: -14.703895568847656
    5. 'if' → logprob: -15.328895568847656
    6. '	right' → logprob: -16.078895568847656
    7. '.right' → logprob: -17.703895568847656
    8. 'left' → logprob: -18.078895568847656
    9. 'Right' → logprob: -18.578895568847656
    10. ':right' → logprob: -19.453895568847656

Token 883: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009756323881447315
    2. 'in' → logprob: -4.634756088256836
    3. '```' → logprob: -15.634756088256836
    4. '	in' → logprob: -16.384756088256836
    5. '<|end|>' → logprob: -17.134756088256836
    6. 'In' → logprob: -17.384756088256836
    7. '_in' → logprob: -17.509756088256836
    8. '[in' → logprob: -17.509756088256836
    9. ' ' → logprob: -18.384756088256836
    10. ')' → logprob: -18.384756088256836

Token 884: 'sym' (ID: 53095)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.062015749514102936
    2. ' right' → logprob: -2.8120157718658447
    3. ' in' → logprob: -10.312015533447266
    4. 'in' → logprob: -11.187015533447266
    5. 'if' → logprob: -14.437015533447266
    6. '[right' → logprob: -15.062015533447266
    7. '	right' → logprob: -16.187015533447266
    8. '(right' → logprob: -16.437015533447266
    9. ' if' → logprob: -17.562015533447266
    10. 'left' → logprob: -17.687015533447266

Token 885: 'étr' (ID: 35025)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2602114975452423
    2. 'in' → logprob: -2.26021146774292
    3. 'p' → logprob: -3.01021146774292
    4. 'B' → logprob: -4.38521146774292
    5. 'm' → logprob: -4.38521146774292
    6. 'b' → logprob: -4.76021146774292
    7. 'étr' → logprob: -5.01021146774292
    8. 'met' → logprob: -5.13521146774292
    9. 'é' → logprob: -5.26021146774292
    10. 'et' → logprob: -6.01021146774292

Token 886: 'ique' (ID: 2222)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5400410890579224
    2. 'étr' → logprob: -1.7900410890579224
    3. ')' → logprob: -2.915040969848633
    4. 'et' → logprob: -3.540040969848633
    5. 'è' → logprob: -3.665040969848633
    6. 'e' → logprob: -3.665040969848633
    7. 'p' → logprob: -3.790040969848633
    8. 'é' → logprob: -4.540040969848633
    9. 'ètre' → logprob: -4.540040969848633
    10. 'm' → logprob: -4.540040969848633

Token 887: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029770279303193092
    2. 'in' → logprob: -3.5297703742980957
    3. ')' → logprob: -11.654769897460938
    4. '```' → logprob: -13.029769897460938
    5. ' not' → logprob: -13.154769897460938
    6. 'not' → logprob: -13.404769897460938
    7. ' ' → logprob: -13.654769897460938
    8. ' ' → logprob: -14.154769897460938
    9. '	in' → logprob: -14.529769897460938
    10. ' dans' → logprob: -14.654769897460938

Token 888: ' M' (ID: 391)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023246178403496742
    2. ' B' → logprob: -3.7732462882995605
    3. 'M' → logprob: -15.148245811462402
    4. ')' → logprob: -15.898245811462402
    5. 'right' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.14824676513672
    7. '	B' → logprob: -16.52324676513672
    8. '```' → logprob: -16.89824676513672
    9. ' ' → logprob: -17.02324676513672
    10. ' right' → logprob: -17.89824676513672

Token 889: ' par' (ID: 686)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026771575212479
    2. 'in' → logprob: -2.3502676486968994
    3. ')' → logprob: -10.22526741027832
    4. '```' → logprob: -10.97526741027832
    5. ' dans' → logprob: -13.22526741027832
    6. ' not' → logprob: -13.22526741027832
    7. ' ' → logprob: -14.22526741027832
    8. 'not' → logprob: -14.35026741027832
    9. 'dans' → logprob: -14.72526741027832
    10. ']' → logprob: -14.97526741027832

Token 890: ' rapport' (ID: 20847)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09805072844028473
    2. 'right' → logprob: -2.473050832748413
    3. ' B' → logprob: -5.723050594329834
    4. '1' → logprob: -5.723050594329834
    5. ')' → logprob: -6.473050594329834
    6. 'in' → logprob: -7.848050594329834
    7. '+' → logprob: -8.473051071166992
    8. '```' → logprob: -9.098051071166992
    9. ' in' → logprob: -9.723051071166992
    10. ' ' → logprob: -10.098051071166992

Token 891: ' à' (ID: 1221)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8574362993240356
    2. 'B' → logprob: -1.2324362993240356
    3. ' M' → logprob: -1.9824362993240356
    4. ')' → logprob: -2.357436180114746
    5. ' B' → logprob: -3.482436180114746
    6. 'm' → logprob: -4.857436180114746
    7. '```' → logprob: -5.232436180114746
    8. ' in' → logprob: -5.732436180114746
    9. ' m' → logprob: -6.107436180114746
    10. 'left' → logprob: -7.232436180114746

Token 892: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04369527846574783
    2. 'M' → logprob: -3.1686952114105225
    3. ' m' → logprob: -7.418695449829102
    4. ' M' → logprob: -9.793695449829102
    5. 'B' → logprob: -10.793695449829102
    6. 'left' → logprob: -11.043695449829102
    7. ' ' → logprob: -14.043695449829102
    8. '```' → logprob: -14.043695449829102
    9. ')' → logprob: -14.543695449829102
    10. ' left' → logprob: -15.168695449829102

Token 893: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03723888099193573
    2. 'in' → logprob: -3.787238836288452
    3. ' in' → logprob: -4.287239074707031
    4. ' )' → logprob: -9.287239074707031
    5. '`)' → logprob: -10.787239074707031
    6. '```' → logprob: -11.412239074707031
    7. '')' → logprob: -11.537239074707031
    8. ' dans' → logprob: -12.662239074707031
    9. 'if' → logprob: -13.412239074707031
    10. '):
' → logprob: -13.537239074707031

Token 894: ' appartient' (ID: 173806)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3869140148162842
    2. ' in' → logprob: -1.1369140148162842
    3. '```' → logprob: -10.386914253234863
    4. 'if' → logprob: -11.636914253234863
    5. ')' → logprob: -13.886914253234863
    6. '	in' → logprob: -14.511914253234863
    7. ' if' → logprob: -15.136914253234863
    8. '[in' → logprob: -15.511914253234863
    9. 'dans' → logprob: -15.636914253234863
    10. '   ' → logprob: -15.761914253234863

Token 895: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8251531720161438
    2. 'in' → logprob: -1.075153112411499
    3. 'à' → logprob: -2.450153112411499
    4. ' in' → logprob: -2.450153112411499
    5. 'B' → logprob: -3.450153112411499
    6. 'au' → logprob: -5.200153350830078
    7. 'to' → logprob: -5.325153350830078
    8. ' au' → logprob: -6.200153350830078
    9. ' en' → logprob: -6.950153350830078
    10. 'en' → logprob: -6.950153350830078

Token 896: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02324547804892063
    2. ' B' → logprob: -3.7732455730438232
    3. 'b' → logprob: -18.398244857788086
    4. ' ' → logprob: -18.523244857788086
    5. '	B' → logprob: -18.898244857788086
    6. ' ' → logprob: -19.023244857788086
    7. '```' → logprob: -19.148244857788086
    8. '`' → logprob: -19.273244857788086
    9. ')' → logprob: -19.773244857788086
    10. ' in' → logprob: -19.898244857788086

Token 897: ''ensemble' (ID: 79341)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021855919621884823
    2. ' B' → logprob: -6.127185821533203
    3. '	B' → logprob: -15.252185821533203
    4. 'set' → logprob: -15.502185821533203
    5. 'right' → logprob: -16.877185821533203
    6. ' set' → logprob: -17.377185821533203
    7. ' ' → logprob: -17.502185821533203
    8. '_B' → logprob: -17.877185821533203
    9. 'et' → logprob: -18.627185821533203
    10. 'e' → logprob: -19.127185821533203

Token 898: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1002088338136673
    2. ' B' → logprob: -2.3502087593078613
    3. '```' → logprob: -14.10020923614502
    4. ' if' → logprob: -15.22520923614502
    5. '(B' → logprob: -15.35020923614502
    6. '_B' → logprob: -15.72520923614502
    7. ')' → logprob: -15.72520923614502
    8. '       ' → logprob: -16.100208282470703
    9. '`' → logprob: -16.225208282470703
    10. ' in' → logprob: -16.725208282470703

Token 899: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5687726140022278
    2. 'if' → logprob: -0.9437726140022278
    3. ' if' → logprob: -3.318772554397583
    4. '           ' → logprob: -4.943772792816162
    5. ')' → logprob: -8.068772315979004
    6. '<|end|>' → logprob: -8.318772315979004
    7. '==' → logprob: -8.818772315979004
    8. ',' → logprob: -9.193772315979004
    9. '```' → logprob: -9.193772315979004
    10. '        ' → logprob: -9.693772315979004

Token 900: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3954811692237854
    2. '       ' → logprob: -1.2704811096191406
    3. ' if' → logprob: -3.2704811096191406
    4. '```' → logprob: -5.020481109619141
    5. '           ' → logprob: -6.645481109619141
    6. ')' → logprob: -11.27048110961914
    7. '``' → logprob: -11.77048110961914
    8. '=' → logprob: -12.27048110961914
    9. '==' → logprob: -12.52048110961914
    10. '#' → logprob: -12.64548110961914

Token 901: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07247025519609451
    2. '       ' → logprob: -2.822470188140869
    3. ' if' → logprob: -4.572470188140869
    4. '```' → logprob: -9.197470664978027
    5. '           ' → logprob: -11.447470664978027
    6. 'If' → logprob: -13.572470664978027
    7. '        ' → logprob: -14.697470664978027
    8. '``' → logprob: -14.947470664978027
    9. '   ' → logprob: -15.197470664978027
    10. '#' → logprob: -15.197470664978027

Token 902: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6931482553482056
    2. 'right' → logprob: -0.6931482553482056
    3. '(right' → logprob: -14.193148612976074
    4. '	right' → logprob: -15.193148612976074
    5. '[right' → logprob: -16.818147659301758
    6. '   ' → logprob: -17.193147659301758
    7. ' ' → logprob: -17.693147659301758
    8. 'Right' → logprob: -18.568147659301758
    9. '       ' → logprob: -18.818147659301758
    10. '.right' → logprob: -18.943147659301758

Token 903: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014138251543045
    2. 'in' → logprob: -1.701413869857788
    3. '	in' → logprob: -15.576414108276367
    4. ')' → logprob: -16.451414108276367
    5. ' ' → logprob: -16.951414108276367
    6. ' ' → logprob: -17.076414108276367
    7. 'not' → logprob: -17.076414108276367
    8. ' not' → logprob: -17.326414108276367
    9. '[in' → logprob: -17.701414108276367
    10. 'In' → logprob: -17.826414108276367

Token 904: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019286326132714748
    2. ' B' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. ' ' → logprob: -18.251928329467773
    5. '```' → logprob: -18.501928329467773
    6. '	B' → logprob: -18.626928329467773
    7. '       ' → logprob: -18.751928329467773
    8. 'b' → logprob: -19.001928329467773
    9. '#' → logprob: -19.126928329467773
    10. '`' → logprob: -19.251928329467773

Token 905: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16999083757400513
    2. ':' → logprob: -2.1699907779693604
    3. '           ' → logprob: -3.1699907779693604
    4. '       ' → logprob: -10.419990539550781
    5. '):
' → logprob: -10.919990539550781
    6. '               ' → logprob: -11.044990539550781
    7. '          ' → logprob: -11.169990539550781
    8. '==' → logprob: -11.419990539550781
    9. '{
' → logprob: -11.669990539550781
    10. '```' → logprob: -11.794990539550781

Token 906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011147352633997798
    2. 'check' → logprob: -6.876114845275879
    3. '               ' → logprob: -10.376114845275879
    4. '#' → logprob: -10.876114845275879
    5. ' check' → logprob: -10.876114845275879
    6. '```' → logprob: -12.126114845275879
    7. '       ' → logprob: -12.876114845275879
    8. '{
' → logprob: -13.751114845275879
    9. '          ' → logprob: -14.126114845275879
    10. '   ' → logprob: -14.376114845275879

Token 907: ' #' (ID: 1069)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.006762025412172079
    2. '           ' → logprob: -5.0067620277404785
    3. ' check' → logprob: -10.13176155090332
    4. '               ' → logprob: -12.50676155090332
    5. '#' (adapté à ' #') → logprob: -13.00676155090332
    6. '```' → logprob: -14.50676155090332
    7. '       ' → logprob: -15.63176155090332
    8. '	check' → logprob: -16.13176155090332
    9. '(check' → logprob: -16.38176155090332
    10. 'count' → logprob: -16.75676155090332

Token 908: ' Si' (ID: 7832)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.000344640837283805
    2. '           ' → logprob: -8.000344276428223
    3. ' check' → logprob: -12.000344276428223
    4. '               ' → logprob: -13.000344276428223
    5. '#' → logprob: -14.750344276428223
    6. 'count' → logprob: -16.00034523010254
    7. '       ' → logprob: -16.12534523010254
    8. '	check' → logprob: -17.12534523010254
    9. '   ' → logprob: -17.87534523010254
    10. '                   ' → logprob: -18.75034523010254

Token 909: ' oui' (ID: 50908)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.3868974447250366
    2. 'check' → logprob: -1.1368974447250366
    3. '       ' → logprob: -11.386897087097168
    4. '           ' → logprob: -11.761897087097168
    5. '(check' → logprob: -13.261897087097168
    6. '	check' → logprob: -13.511897087097168
    7. '               ' → logprob: -14.511897087097168
    8. '         ' → logprob: -14.761897087097168
    9. '   ' → logprob: -14.761897087097168
    10. '#' → logprob: -14.886897087097168

Token 910: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2769271731376648
    2. '               ' → logprob: -1.5269272327423096
    3. ':' → logprob: -4.1519269943237305
    4. ':
' → logprob: -5.0269269943237305
    5. 'check' → logprob: -6.1519269943237305
    6. '       ' → logprob: -10.27692699432373
    7. ' check' → logprob: -10.27692699432373
    8. '):
' → logprob: -10.40192699432373
    9. '	       ' → logprob: -10.40192699432373
    10. '```' → logprob: -11.15192699432373

Token 911: ' incr' (ID: 52395)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00011331788846291602
    2. '           ' → logprob: -9.250113487243652
    3. ' check' → logprob: -11.000113487243652
    4. '               ' → logprob: -14.875113487243652
    5. '       ' → logprob: -17.500112533569336
    6. '#' → logprob: -17.750112533569336
    7. '	check' → logprob: -18.125112533569336
    8. '```' → logprob: -19.000112533569336
    9. '   ' → logprob: -19.750112533569336
    10. '(check' → logprob: -20.125112533569336

Token 912: 'é' (ID: 377)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.03444497659802437
    2. '           ' → logprob: -4.534444808959961
    3. '       ' → logprob: -4.909444808959961
    4. '               ' → logprob: -5.034444808959961
    5. 'crement' → logprob: -5.659444808959961
    6. '   ' → logprob: -6.034444808959961
    7. 'cr' → logprob: -6.909444808959961
    8. ' check' → logprob: -7.034444808959961
    9. '                   ' → logprob: -8.159444808959961
    10. '         ' → logprob: -8.534444808959961

Token 913: 'mente' (ID: 4186)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6185909509658813
    2. '           ' → logprob: -1.4935909509658813
    3. '+=' → logprob: -1.8685909509658813
    4. ' +=' → logprob: -3.493590831756592
    5. '++' → logprob: -3.868590831756592
    6. '+' → logprob: -4.243590831756592
    7. ' check' → logprob: -4.493590831756592
    8. '       ' → logprob: -6.118590831756592
    9. '               ' → logprob: -6.493590831756592
    10. '          ' → logprob: -7.618590831756592

Token 914: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.011049113236367702
    2. ' check' → logprob: -4.511049270629883
    3. '1' → logprob: -14.261049270629883
    4. '	check' → logprob: -14.636049270629883
    5. '(check' → logprob: -15.386049270629883
    6. '_check' → logprob: -17.511049270629883
    7. '.check' → logprob: -17.761049270629883
    8. '       ' → logprob: -18.011049270629883
    9. '   ' → logprob: -19.136049270629883
    10. ' ' → logprob: -19.761049270629883

Token 915: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.025144383311271667
    2. ' +=' → logprob: -3.775144338607788
    3. '           ' → logprob: -6.275144577026367
    4. '+' → logprob: -12.150144577026367
    5. '=' → logprob: -12.400144577026367
    6. '          ' → logprob: -13.525144577026367
    7. '```' → logprob: -14.025144577026367
    8. '               ' → logprob: -14.025144577026367
    9. ']+=' → logprob: -14.150144577026367
    10. '++' → logprob: -14.650144577026367

Token 916: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '１' → logprob: -21.625001907348633
    6. '+' → logprob: -23.000001907348633
    7. '       ' → logprob: -23.875001907348633
    8. '۱' → logprob: -24.125001907348633
    9. '`' → logprob: -24.375001907348633
    10. '  ' → logprob: -24.750001907348633

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -22.25
    5. '<|end|>' → logprob: -22.625
    6. '+' → logprob: -23.5
    7. '  ' → logprob: -23.875
    8. '۱' → logprob: -24.25
    9. '１' → logprob: -24.5
    10. '-' → logprob: -24.875

Token 918: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01471574418246746
    2. 'check' → logprob: -4.389715671539307
    3. '       ' → logprob: -7.139715671539307
    4. '               ' → logprob: -7.639715671539307
    5. '(check' → logprob: -8.014716148376465
    6. ' check' → logprob: -8.264716148376465
    7. '```' → logprob: -8.889716148376465
    8. '   ' → logprob: -9.639716148376465
    9. '	       ' → logprob: -10.264716148376465
    10. '	check' → logprob: -11.014716148376465

Token 919: '           ' (ID: 352)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.25485458970069885
    2. '           ' → logprob: -1.5048545598983765
    3. ' check' → logprob: -6.504854679107666
    4. '       ' → logprob: -6.754854679107666
    5. '               ' → logprob: -8.629854202270508
    6. '```' → logprob: -9.754854202270508
    7. '	check' → logprob: -11.504854202270508
    8. '(check' → logprob: -12.629854202270508
    9. '                   ' → logprob: -13.004854202270508
    10. '   ' → logprob: -13.129854202270508

Token 920: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -2.8325677703833207e-05
    2. ' check' → logprob: -10.500028610229492
    3. '           ' → logprob: -14.250028610229492
    4. '       ' → logprob: -16.750028610229492
    5. '	check' → logprob: -17.125028610229492
    6. '```' → logprob: -17.625028610229492
    7. '   ' → logprob: -18.750028610229492
    8. '               ' → logprob: -19.125028610229492
    9. '                   ' → logprob: -21.000028610229492
    10. '(check' → logprob: -21.500028610229492

Token 921: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023246178403496742
    2. ' +=' → logprob: -3.7732462882995605
    3. '+' → logprob: -14.773245811462402
    4. ']+=' → logprob: -15.648245811462402
    5. '```' → logprob: -15.898245811462402
    6. '           ' → logprob: -17.89824676513672
    7. '++' → logprob: -18.14824676513672
    8. '+='' → logprob: -18.27324676513672
    9. '=' → logprob: -18.39824676513672
    10. '+="' → logprob: -18.39824676513672

Token 922: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.37501335144043
    4. '```' → logprob: -18.37501335144043
    5. '       ' → logprob: -21.50001335144043
    6. '+' → logprob: -21.87501335144043
    7. '	' → logprob: -22.00001335144043
    8. '`' → logprob: -22.37501335144043
    9. '１' → logprob: -22.50001335144043
    10. '  ' → logprob: -22.50001335144043

Token 923: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -21.25
    4. '１' → logprob: -23.0
    5. '۱' → logprob: -23.25
    6. '   ' → logprob: -23.875
    7. '१' → logprob: -24.25
    8. '১' → logprob: -24.375
    9. '0' → logprob: -24.625
    10. '+' → logprob: -24.9375

Token 924: '

' (ID: 279)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.22649559378623962
    2. '       ' → logprob: -1.601495623588562
    3. ' cnt' → logprob: -7.976495742797852
    4. '```' → logprob: -7.976495742797852
    5. '	cnt' → logprob: -9.101495742797852
    6. '
' → logprob: -9.351495742797852
    7. '#' → logprob: -10.351495742797852
    8. '(cnt' → logprob: -10.351495742797852
    9. '[cnt' → logprob: -10.351495742797852
    10. '   ' → logprob: -10.476495742797852

Token 925: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011066683568060398
    2. '       ' → logprob: -4.511066913604736
    3. ' cnt' → logprob: -11.511066436767578
    4. '	cnt' → logprob: -12.011066436767578
    5. '```' → logprob: -13.886066436767578
    6. '(cnt' → logprob: -14.511066436767578
    7. '[cnt' → logprob: -14.511066436767578
    8. '
' → logprob: -15.386066436767578
    9. '#' → logprob: -15.886066436767578
    10. '   ' → logprob: -16.011066436767578

Token 926: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007114782347343862
    2. '       ' → logprob: -7.250711441040039
    3. ' cnt' → logprob: -14.125711441040039
    4. '	cnt' → logprob: -15.000711441040039
    5. 'if' → logprob: -15.250711441040039
    6. '#' (adapté à ' #') → logprob: -16.50071144104004
    7. '(cnt' → logprob: -17.00071144104004
    8. '[cnt' → logprob: -17.25071144104004
    9. '```' → logprob: -17.50071144104004
    10. 'count' → logprob: -17.50071144104004

Token 927: ' Cal' (ID: 4453)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.1756367712223437e-05
    2. '       ' → logprob: -11.375011444091797
    3. ' cnt' → logprob: -15.875011444091797
    4. '#' → logprob: -16.125011444091797
    5. '	cnt' → logprob: -16.750011444091797
    6. 'if' → logprob: -18.125011444091797
    7. '   ' → logprob: -18.500011444091797
    8. 'counter' → logprob: -18.625011444091797
    9. 'count' → logprob: -18.625011444091797
    10. '(cnt' → logprob: -19.250011444091797

Token 928: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07406221330165863
    2. 'cnt' → logprob: -2.6990621089935303
    3. 'cul' → logprob: -5.699062347412109
    4. 't' → logprob: -8.44906234741211
    5. 'ct' → logprob: -8.57406234741211
    6. '#' → logprob: -8.57406234741211
    7. 'nt' → logprob: -9.69906234741211
    8. 'cule' → logprob: -9.94906234741211
    9. 'cl' → logprob: -11.32406234741211
    10. '=' → logprob: -11.44906234741211

Token 929: ' la' (ID: 557)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.003118060529232025
    2. ' cnt' → logprob: -6.12811803817749
    3. '(cnt' → logprob: -7.87811803817749
    4. '       ' → logprob: -8.253118515014648
    5. 'b' → logprob: -9.253118515014648
    6. 'r' → logprob: -10.128118515014648
    7. '   ' → logprob: -10.128118515014648
    8. '	cnt' → logprob: -11.128118515014648
    9. 'max' → logprob: -11.253118515014648
    10. '1' → logprob: -11.378118515014648

Token 930: ' différence' (ID: 79196)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.2471589798224159e-05
    2. ' cnt' → logprob: -11.500012397766113
    3. '	cnt' → logprob: -14.750012397766113
    4. '```' → logprob: -15.125012397766113
    5. 'diff' → logprob: -15.250012397766113
    6. 'count' → logprob: -15.375012397766113
    7. '
' → logprob: -16.00001335144043
    8. 'c' → logprob: -16.12501335144043
    9. '(cnt' → logprob: -16.37501335144043
    10. 'add' → logprob: -16.50001335144043

Token 931: ' entre' (ID: 3853)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.77153480052948
    2. 'cnt' → logprob: -1.14653480052948
    3. '=' → logprob: -2.7715349197387695
    4. ' +=' → logprob: -2.8965349197387695
    5. ' cnt' → logprob: -3.0215349197387695
    6. '       ' → logprob: -3.6465349197387695
    7. ' =' → logprob: -4.1465349197387695
    8. '[cnt' → logprob: -4.8965349197387695
    9. '(cnt' → logprob: -6.7715349197387695
    10. '
' → logprob: -7.3965349197387695

Token 932: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014478032244369388
    2. '(b' → logprob: -9.750144958496094
    3. ' b' → logprob: -9.750144958496094
    4. 'max' → logprob: -11.250144958496094
    5. '3' → logprob: -12.125144958496094
    6. 'len' → logprob: -12.250144958496094
    7. '   ' → logprob: -13.500144958496094
    8. '(' → logprob: -14.000144958496094
    9. 'cnt' → logprob: -14.250144958496094
    10. '1' → logprob: -15.125144958496094

Token 933: ' nombre' (ID: 9733)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.481510692741722e-05
    2. ' b' → logprob: -9.87507438659668
    3. '(b' → logprob: -11.37507438659668
    4. 'len' → logprob: -12.62507438659668
    5. 'cnt' → logprob: -12.75007438659668
    6. 'max' → logprob: -13.12507438659668
    7. 'r' → logprob: -13.25007438659668
    8. '3' → logprob: -14.50007438659668
    9. '   ' → logprob: -14.62507438659668
    10. '(' → logprob: -15.62507438659668

Token 934: ' total' (ID: 3609)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15511523187160492
    2. ' +=' → logprob: -2.0301151275634766
    3. '=' → logprob: -5.905115127563477
    4. ' =' → logprob: -5.905115127563477
    5. 'de' → logprob: -6.030115127563477
    6. 'b' → logprob: -6.155115127563477
    7. ' de' → logprob: -7.030115127563477
    8. 'total' → logprob: -7.780115127563477
    9. '+' → logprob: -8.405115127563477
    10. '+=(' → logprob: -8.405115127563477

Token 935: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19732995331287384
    2. 'B' → logprob: -2.1973299980163574
    3. 'de' → logprob: -3.9473299980163574
    4. '=' → logprob: -4.947329998016357
    5. '+=' → logprob: -4.947329998016357
    6. 'd' → logprob: -5.197329998016357
    7. 'cnt' → logprob: -5.197329998016357
    8. '_b' → logprob: -5.322329998016357
    9. ' b' → logprob: -5.572329998016357
    10. ' de' → logprob: -5.572329998016357

Token 936: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.317247167928144e-05
    2. ' b' → logprob: -9.500093460083008
    3. 'B' → logprob: -11.000093460083008
    4. 'cnt' → logprob: -14.375093460083008
    5. '(b' → logprob: -15.125093460083008
    6. '3' → logprob: -15.625093460083008
    7. '1' → logprob: -16.125093460083008
    8. 'len' → logprob: -16.625093460083008
    9. '```' → logprob: -16.750093460083008
    10. '	b' → logprob: -17.125093460083008

Token 937: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.043057654052972794
    2. 'b' → logprob: -3.168057680130005
    3. ' B' → logprob: -10.293057441711426
    4. ')' → logprob: -12.293057441711426
    5. 'r' → logprob: -12.293057441711426
    6. ' b' → logprob: -12.918057441711426
    7. '`' → logprob: -13.418057441711426
    8. 'indices' → logprob: -13.793057441711426
    9. '```' → logprob: -13.918057441711426
    10. '0' → logprob: -14.168057441711426

Token 938: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3041359782218933
    2. ' -' → logprob: -1.804136037826538
    3. '-' → logprob: -3.304136037826538
    4. ' s' → logprob: -3.679136037826538
    5. ')' → logprob: -4.054135799407959
    6. 'b' → logprob: -5.179135799407959
    7. ' ' → logprob: -5.554135799407959
    8. '(s' → logprob: -5.679135799407959
    9. ' b' → logprob: -6.929135799407959
    10. 'B' → logprob: -7.179135799407959

Token 939: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7103204131126404
    2. '       ' → logprob: -1.3353204727172852
    3. 'cnt' → logprob: -2.835320472717285
    4. 'et' → logprob: -2.960320472717285
    5. 'and' → logprob: -3.085320472717285
    6. ' et' → logprob: -3.335320472717285
    7. 's' → logprob: -4.460320472717285
    8. ' -' → logprob: -4.585320472717285
    9. 'b' → logprob: -5.085320472717285
    10. '        ' → logprob: -5.085320472717285

Token 940: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004907466005533934
    2. ' b' → logprob: -5.504907608032227
    3. '(b' → logprob: -7.254907608032227
    4. ' (' → logprob: -10.129907608032227
    5. 'cnt' → logprob: -10.629907608032227
    6. ')' → logprob: -11.629907608032227
    7. ',' → logprob: -11.754907608032227
    8. ' -' → logprob: -12.254907608032227
    9. '       ' → logprob: -12.504907608032227
    10. 'len' → logprob: -12.504907608032227

Token 941: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17095686495304108
    2. '-' → logprob: -2.17095685005188
    3. ')' → logprob: -3.17095685005188
    4. '-c' → logprob: -7.670957088470459
    5. ' ' → logprob: -8.9209566116333
    6. ' )' → logprob: -9.1709566116333
    7. '-check' → logprob: -9.5459566116333
    8. '-(' → logprob: -9.9209566116333
    9. ' and' → logprob: -10.1709566116333
    10. ',' → logprob: -10.4209566116333

Token 942: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8049048781394958
    2. ' and' → logprob: -1.3049049377441406
    3. '-' → logprob: -1.6799049377441406
    4. '       ' → logprob: -2.8049049377441406
    5. 'and' → logprob: -3.6799049377441406
    6. 'et' → logprob: -5.679904937744141
    7. ' et' → logprob: -6.179904937744141
    8. '        ' → logprob: -6.429904937744141
    9. ',' → logprob: -7.554904937744141
    10. ' ' → logprob: -7.679904937744141

Token 943: ' le' (ID: 505)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00026181264547631145
    2. ' check' → logprob: -8.250262260437012
    3. '	check' → logprob: -15.375262260437012
    4. '(check' → logprob: -15.750262260437012
    5. '       ' → logprob: -15.875262260437012
    6. '   ' → logprob: -18.500261306762695
    7. 'checks' → logprob: -19.000261306762695
    8. '
' → logprob: -19.750261306762695
    9. '_check' → logprob: -20.000261306762695
    10. '           ' → logprob: -20.250261306762695

Token 944: ' nombre' (ID: 9733)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -4.842555426876061e-06
    2. ' check' → logprob: -12.250004768371582
    3. '	check' → logprob: -19.1250057220459
    4. '(check' → logprob: -19.6250057220459
    5. '   ' → logprob: -21.2500057220459
    6. ' ' → logprob: -22.6250057220459
    7. 'c' → logprob: -23.0000057220459
    8. '       ' → logprob: -23.1250057220459
    9. 'checks' → logprob: -23.5000057220459
    10. '_check' → logprob: -23.8750057220459

Token 945: ' de' (ID: 334)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.03266754746437073
    2. ' check' → logprob: -3.782667636871338
    3. '       ' → logprob: -5.157667636871338
    4. '_check' → logprob: -6.532667636871338
    5. 'de' → logprob: -7.407667636871338
    6. ' de' → logprob: -7.532667636871338
    7. '(check' → logprob: -7.532667636871338
    8. 'd' → logprob: -9.15766716003418
    9. '	check' → logprob: -9.28266716003418
    10. '=' → logprob: -9.53266716003418

Token 946: ' cas' (ID: 2108)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -2.1054253011243418e-05
    2. ' check' → logprob: -11.625020980834961
    3. 'cases' → logprob: -12.250020980834961
    4. 'checks' → logprob: -12.375020980834961
    5. 'checked' → logprob: -12.875020980834961
    6. '(check' → logprob: -15.750020980834961
    7. 'case' → logprob: -16.00002098083496
    8. '	check' → logprob: -16.50002098083496
    9. '```' → logprob: -17.62502098083496
    10. 'B' → logprob: -17.87502098083496

Token 947: ' particuliers' (ID: 99172)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.02303779311478138
    2. ' check' → logprob: -4.023037910461426
    3. 'sp' → logprob: -6.273037910461426
    4. 'part' → logprob: -7.273037910461426
    5. '(check' → logprob: -7.773037910461426
    6. '       ' → logprob: -7.898037910461426
    7. '_check' → logprob: -8.023037910461426
    8. '	check' → logprob: -8.398037910461426
    9. 'à' → logprob: -8.648037910461426
    10. 'special' → logprob: -8.773037910461426

Token 948: ' détect' (ID: 118715)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011678146198391914
    2. '-' → logprob: -5.011678218841553
    3. '       ' → logprob: -6.136678218841553
    4. ',' → logprob: -7.386678218841553
    5. ')' → logprob: -7.511678218841553
    6. '-b' → logprob: -7.636678218841553
    7. ' ' → logprob: -8.636677742004395
    8. ' +' → logprob: -8.761677742004395
    9. '   ' → logprob: -9.136677742004395
    10. ' )' → logprob: -9.136677742004395

Token 949: 'és' (ID: 1756)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.24284565448760986
    2. 'ifiés' → logprob: -3.1178455352783203
    3. 'ed' → logprob: -3.6178455352783203
    4. '   ' → logprob: -3.6178455352783203
    5. 'éré' → logprob: -3.9928455352783203
    6. '       ' → logprob: -4.24284553527832
    7. 'ifié' → logprob: -4.24284553527832
    8. 'érés' → logprob: -4.49284553527832
    9. 'ect' → logprob: -4.61784553527832
    10. 'étés' → logprob: -4.86784553527832

Token 950: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025842580944299698
    2. 'b' → logprob: -5.025842666625977
    3. ' b' → logprob: -5.025842666625977
    4. ',' → logprob: -5.400842666625977
    5. 'cnt' → logprob: -5.900842666625977
    6. ' cnt' → logprob: -6.400842666625977
    7. ' (' → logprob: -6.650842666625977
    8. '(cnt' → logprob: -7.025842666625977
    9. '(' → logprob: -8.025842666625977
    10. ' =' → logprob: -8.025842666625977

Token 951: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00033558503491804004
    2. ' check' → logprob: -8.000335693359375
    3. '	check' → logprob: -16.375335693359375
    4. '(check' → logprob: -16.875335693359375
    5. '_check' → logprob: -19.125335693359375
    6. '```' → logprob: -19.375335693359375
    7. '   ' → logprob: -19.750335693359375
    8. '`' → logprob: -19.750335693359375
    9. 'checks' → logprob: -19.750335693359375
    10. '-check' → logprob: -20.250335693359375

Token 952: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27232497930526733
    2. ' -' → logprob: -1.647325038909912
    3. '-' → logprob: -3.647325038909912
    4. '):' → logprob: -5.272325038909912
    5. '       ' → logprob: -5.522325038909912
    6. ' )' → logprob: -5.772325038909912
    7. '):
' → logprob: -6.272325038909912
    8. ')*' → logprob: -6.397325038909912
    9. ':' → logprob: -6.897325038909912
    10. '-c' → logprob: -7.522325038909912

Token 953: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.01827543042600155
    2. '       ' → logprob: -4.018275260925293
    3. ' cnt' → logprob: -9.018275260925293
    4. '	cnt' → logprob: -13.018275260925293
    5. '[cnt' → logprob: -14.018275260925293
    6. '(cnt' → logprob: -14.393275260925293
    7. '           ' → logprob: -14.768275260925293
    8. 'count' → logprob: -16.64327621459961
    9. 'counter' → logprob: -16.64327621459961
    10. '   ' → logprob: -16.76827621459961

Token 954: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.003400856163352728
    2. '       ' → logprob: -5.753400802612305
    3. ' cnt' → logprob: -8.628400802612305
    4. 'diff' → logprob: -10.753400802612305
    5. '	cnt' → logprob: -12.503400802612305
    6. 'res' → logprob: -12.753400802612305
    7. 'count' → logprob: -13.253400802612305
    8. 'result' → logprob: -13.378400802612305
    9. 'temp' → logprob: -13.378400802612305
    10. 'ans' → logprob: -13.503400802612305

Token 955: ' Aj' (ID: 28294)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0018466515466570854
    2. '       ' → logprob: -6.501846790313721
    3. ' cnt' → logprob: -8.001846313476562
    4. '	cnt' → logprob: -12.876846313476562
    5. 'diff' → logprob: -13.626846313476562
    6. 'result' → logprob: -13.751846313476562
    7. 'count' → logprob: -13.876846313476562
    8. 'res' → logprob: -14.376846313476562
    9. 'ans' → logprob: -14.876846313476562
    10. '(cnt' → logprob: -14.876846313476562

Token 956: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0012313035549595952
    2. 'out' → logprob: -6.7512311935424805
    3. 'outez' → logprob: -10.12623119354248
    4. 'outer' → logprob: -11.37623119354248
    5. 'uste' → logprob: -11.87623119354248
    6. 'outes' → logprob: -14.12623119354248
    7. '+=' → logprob: -14.37623119354248
    8. '#' → logprob: -15.12623119354248
    9. '=' → logprob: -15.37623119354248
    10. '_out' → logprob: -15.37623119354248

Token 957: ' cette' (ID: 7696)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029828354716300964
    2. ' b' → logprob: -3.5298283100128174
    3. '(b' → logprob: -9.779828071594238
    4. ' (' → logprob: -11.154828071594238
    5. '       ' → logprob: -12.404828071594238
    6. '   ' → logprob: -13.529828071594238
    7. '(' → logprob: -14.404828071594238
    8. 'cnt' → logprob: -15.029828071594238
    9. '    ' → logprob: -15.279828071594238
    10. '	b' → logprob: -15.779828071594238

Token 958: ' valeur' (ID: 41664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5652357339859009
    2. ' b' → logprob: -0.9402357339859009
    3. 'cnt' → logprob: -3.9402356147766113
    4. ' cnt' → logprob: -5.065235614776611
    5. 'difference' → logprob: -5.565235614776611
    6. 'space' → logprob: -5.940235614776611
    7. ' space' → logprob: -6.440235614776611
    8. 'n' → logprob: -6.815235614776611
    9. ' difference' → logprob: -7.190235614776611
    10. '(b' → logprob: -7.690235614776611

Token 959: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5617143511772156
    2. ' to' → logprob: -1.0617144107818604
    3. '+=' → logprob: -2.9367144107818604
    4. '       ' → logprob: -4.436714172363281
    5. ' cnt' → logprob: -4.686714172363281
    6. 'cnt' → logprob: -6.061714172363281
    7. 'to' → logprob: -6.186714172363281
    8. '   ' → logprob: -6.186714172363281
    9. '(cnt' → logprob: -7.311714172363281
    10. '           ' → logprob: -7.561714172363281

Token 960: ' la' (ID: 557)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5759532451629639
    2. 'cnt' → logprob: -0.8259532451629639
    3. '	cnt' → logprob: -11.700953483581543
    4. '(cnt' → logprob: -12.700953483581543
    5. '[cnt' → logprob: -13.825953483581543
    6. ' ' → logprob: -15.200953483581543
    7. 'count' → logprob: -15.200953483581543
    8. '_cnt' → logprob: -15.575953483581543
    9. '   ' → logprob: -15.575953483581543
    10. 'counter' → logprob: -15.575953483581543

Token 961: ' variable' (ID: 11076)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.000488811288960278
    2. ' cnt' → logprob: -7.625488758087158
    3. 'count' → logprob: -15.125489234924316
    4. '	cnt' → logprob: -15.875489234924316
    5. 'counter' → logprob: -16.00048828125
    6. '(cnt' → logprob: -16.25048828125
    7. '   ' → logprob: -16.50048828125
    8. 'cn' → logprob: -16.62548828125
    9. '[cnt' → logprob: -17.50048828125
    10. ' ' → logprob: -17.75048828125

Token 962: ' de' (ID: 334)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.029751762747764587
    2. ' cnt' → logprob: -3.529751777648926
    3. '(cnt' → logprob: -14.529751777648926
    4. '	cnt' → logprob: -14.654751777648926
    5. '[cnt' → logprob: -15.654751777648926
    6. 'counter' → logprob: -16.65475082397461
    7. 'count' → logprob: -17.40475082397461
    8. 'cn' → logprob: -18.02975082397461
    9. '_cnt' → logprob: -18.15475082397461
    10. '`' → logprob: -18.65475082397461

Token 963: ' compt' (ID: 39238)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08895200490951538
    2. ' cnt' → logprob: -2.46395206451416
    3. '	cnt' → logprob: -12.83895206451416
    4. 'count' → logprob: -13.33895206451416
    5. ' ' → logprob: -13.46395206451416
    6. 'nt' → logprob: -13.71395206451416
    7. ' ' → logprob: -13.83895206451416
    8. 'counter' → logprob: -13.96395206451416
    9. '(cnt' → logprob: -13.96395206451416
    10. '[cnt' → logprob: -14.46395206451416

Token 964: 'age' (ID: 477)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008455708622932434
    2. 'nt' → logprob: -5.258455753326416
    3. ' cnt' → logprob: -6.133455753326416
    4. '   ' → logprob: -7.508455753326416
    5. '	cnt' → logprob: -8.633455276489258
    6. 'ent' → logprob: -9.508455276489258
    7. '_cnt' → logprob: -9.633455276489258
    8. 'nte' → logprob: -9.883455276489258
    9. '(cnt' → logprob: -10.258455276489258
    10. '  ' → logprob: -11.133455276489258

Token 965: ' totale' (ID: 52898)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.03756902366876602
    2. 'cnt' → logprob: -3.412569046020508
    3. '(cnt' → logprob: -5.787569046020508
    4. '[cnt' → logprob: -7.537569046020508
    5. '       ' → logprob: -8.537569046020508
    6. ' +=' → logprob: -10.037569046020508
    7. '	cnt' → logprob: -10.162569046020508
    8. '
' → logprob: -11.037569046020508
    9. '   ' → logprob: -11.412569046020508
    10. ' ' → logprob: -13.537569046020508

Token 966: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009218233171850443
    2. '
' → logprob: -7.875921726226807
    3. 'cnt' → logprob: -8.375922203063965
    4. ' cnt' → logprob: -8.750922203063965
    5. '(cnt' → logprob: -9.625922203063965
    6. '[cnt' → logprob: -10.625922203063965
    7. ',' → logprob: -10.875922203063965
    8. '           ' → logprob: -11.625922203063965
    9. '   ' → logprob: -11.625922203063965
    10. '.
' → logprob: -12.250922203063965

Token 967: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00043162284418940544
    2. ' cnt' → logprob: -7.750431537628174
    3. ')' → logprob: -15.500432014465332
    4. '	cnt' → logprob: -15.500432014465332
    5. 'count' → logprob: -15.625432014465332
    6. '   ' → logprob: -16.375431060791016
    7. '(cnt' → logprob: -16.750431060791016
    8. '[cnt' → logprob: -17.500431060791016
    9. 'counter' → logprob: -17.875431060791016
    10. '       ' → logprob: -18.000431060791016

Token 968: ').
' (ID: 6294)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.436844140291214
    2. '       ' → logprob: -1.3118441104888916
    3. ')' → logprob: -2.8118441104888916
    4. '+=' → logprob: -4.061844348907471
    5. '   ' → logprob: -5.686844348907471
    6. '           ' → logprob: -6.811844348907471
    7. ' )' → logprob: -7.186844348907471
    8. ' ' → logprob: -7.936844348907471
    9. '               ' → logprob: -8.311843872070312
    10. '        ' → logprob: -8.686843872070312

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009284949628636241
    2. 'cnt' → logprob: -7.0009284019470215
    3. ' cnt' → logprob: -11.75092887878418
    4. '           ' → logprob: -12.25092887878418
    5. '```' → logprob: -13.12592887878418
    6. '	' → logprob: -14.25092887878418
    7. '   ' → logprob: -14.62592887878418
    8. '	cnt' → logprob: -15.00092887878418
    9. '[cnt' → logprob: -15.87592887878418
    10. '
' → logprob: -16.12592887878418

Token 970: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.27010804414749146
    2. '       ' → logprob: -1.5201079845428467
    3. ' cnt' → logprob: -4.020108222961426
    4. '	cnt' → logprob: -10.645108222961426
    5. '   ' → logprob: -11.520108222961426
    6. '           ' → logprob: -11.645108222961426
    7. '(cnt' → logprob: -11.895108222961426
    8. '[cnt' → logprob: -11.895108222961426
    9. '```' → logprob: -12.395108222961426
    10. 'count' → logprob: -13.520108222961426

Token 971: ' Cela' (ID: 44403)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5862390398979187
    2. '       ' → logprob: -0.8362390398979187
    3. ' cnt' → logprob: -4.586238861083984
    4. '	cnt' → logprob: -10.461238861083984
    5. '           ' → logprob: -11.211238861083984
    6. '(cnt' → logprob: -12.336238861083984
    7. '   ' → logprob: -12.711238861083984
    8. '[cnt' → logprob: -13.336238861083984
    9. 'count' → logprob: -13.586238861083984
    10. '	' → logprob: -14.086238861083984

Token 972: ' correspond' (ID: 11095)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10031621903181076
    2. '+=' → logprob: -2.350316286087036
    3. ']+=' → logprob: -10.350316047668457
    4. ' -=' → logprob: -10.600316047668457
    5. ' ' → logprob: -11.225316047668457
    6. ' ' → logprob: -11.475316047668457
    7. '=' → logprob: -11.725316047668457
    8. ')' → logprob: -12.225316047668457
    9. '   ' → logprob: -12.725316047668457
    10. '+=(' → logprob: -13.225316047668457

Token 973: ' au' (ID: 2791)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10279697179794312
    2. ' à' → logprob: -2.852797031402588
    3. ' =' → logprob: -3.727797031402588
    4. ' to' → logprob: -4.477797031402588
    5. '=' → logprob: -6.352797031402588
    6. '    ' → logprob: -7.102797031402588
    7. '+=' → logprob: -7.227797031402588
    8. ' ' → logprob: -7.602797031402588
    9. ' a' → logprob: -7.852797031402588
    10. ' au' → logprob: -8.97779655456543

Token 974: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.23215609788894653
    2. 'b' → logprob: -1.8571560382843018
    3. ' cnt' → logprob: -3.2321560382843018
    4. ' b' → logprob: -4.482156276702881
    5. '(cnt' → logprob: -9.607155799865723
    6. 'count' → logprob: -9.732155799865723
    7. '       ' → logprob: -10.232155799865723
    8. '   ' → logprob: -10.607155799865723
    9. '+b' → logprob: -11.357155799865723
    10. '+' → logprob: -11.482155799865723

Token 975: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6112654209136963
    2. ' +=' → logprob: -1.1112654209136963
    3. ' =' → logprob: -3.1112654209136963
    4. ' d' → logprob: -3.3612654209136963
    5. ' of' → logprob: -4.736265182495117
    6. ' cnt' → logprob: -4.736265182495117
    7. ' total' → logprob: -4.986265182495117
    8. '    ' → logprob: -5.361265182495117
    9. '=' → logprob: -5.736265182495117
    10. '   ' → logprob: -5.736265182495117

Token 976: ' trip' (ID: 8831)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6165419816970825
    2. 'B' → logprob: -0.8665419816970825
    3. ' b' → logprob: -4.241541862487793
    4. ' B' → logprob: -4.241541862487793
    5. 'cnt' → logprob: -4.741541862487793
    6. ' cnt' → logprob: -6.741541862487793
    7. '(B' → logprob: -7.991541862487793
    8. '(cnt' → logprob: -8.616541862487793
    9. '"B' → logprob: -8.991541862487793
    10. '(b' → logprob: -9.116541862487793

Token 977: 'lets' (ID: 12222)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.13484151661396027
    2. ' cnt' → logprob: -3.0098414421081543
    3. '       ' → logprob: -3.1348414421081543
    4. '(cnt' → logprob: -4.884841442108154
    5. ' +=' → logprob: -5.009841442108154
    6. 'trip' → logprob: -5.384841442108154
    7. ' trip' → logprob: -5.384841442108154
    8. '[cnt' → logprob: -5.759841442108154
    9. '_cnt' → logprob: -6.384841442108154
    10. '+=' → logprob: -6.509841442108154

Token 978: ' où' (ID: 15113)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020041337236762047
    2. ' =' → logprob: -4.645041465759277
    3. '+=' → logprob: -6.020041465759277
    4. '       ' → logprob: -6.770041465759277
    5. ' R' → logprob: -7.145041465759277
    6. ' triples' → logprob: -7.145041465759277
    7. ' de' → logprob: -7.645041465759277
    8. ' of' → logprob: -7.895041465759277
    9. ' trip' → logprob: -7.895041465759277
    10. '   ' → logprob: -7.895041465759277

Token 979: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.33469024300575256
    2. 'B' → logprob: -1.5846902132034302
    3. 'b' → logprob: -3.9596903324127197
    4. '(cnt' → logprob: -4.084690093994141
    5. 'le' → logprob: -4.584690093994141
    6. ' cnt' → logprob: -4.584690093994141
    7. 'S' → logprob: -4.834690093994141
    8. ''' → logprob: -5.459690093994141
    9. ' B' → logprob: -6.459690093994141
    10. '(B' → logprob: -6.584690093994141

Token 980: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38277435302734375
    2. ''' → logprob: -1.5077743530273438
    3. 'cnt' → logprob: -2.5077743530273438
    4. 'car' → logprob: -4.882774353027344
    5. 'c' → logprob: -6.132774353027344
    6. ' B' → logprob: -6.507774353027344
    7. ''b' → logprob: -6.757774353027344
    8. 'b' → logprob: -7.507774353027344
    9. 'R' → logprob: -7.882774353027344
    10. '"B' → logprob: -8.507774353027344

Token 981: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.529549777507782
    2. 'cnt' → logprob: -1.2795498371124268
    3. ''' → logprob: -2.5295498371124268
    4. 'R' → logprob: -3.0295498371124268
    5. ' cnt' → logprob: -5.779549598693848
    6. ' B' → logprob: -7.279549598693848
    7. 'count' → logprob: -8.404549598693848
    8. ' '' → logprob: -8.529549598693848
    9. '(cnt' → logprob: -9.404549598693848
    10. ' R' → logprob: -9.529549598693848

Token 982: ''' (ID: 6)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.949291467666626
    2. ')' → logprob: -1.574291467666626
    3. ' not' → logprob: -2.324291467666626
    4. ' n' → logprob: -2.324291467666626
    5. ' in' → logprob: -2.699291467666626
    6. ' est' → logprob: -3.574291467666626
    7. ' is' → logprob: -3.949291467666626
    8. ' )' → logprob: -4.199291229248047
    9. '!=' → logprob: -4.824291229248047
    10. 's' → logprob: -4.824291229248047

Token 983: ' choisi' (ID: 77245)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6732317805290222
    2. ' is' → logprob: -1.048231840133667
    3. '<|end|>' → logprob: -3.048231840133667
    4. ' est' → logprob: -3.423231840133667
    5. 's' → logprob: -3.923231840133667
    6. 'n' → logprob: -3.923231840133667
    7. 'est' → logprob: -6.048231601715088
    8. ' !=' → logprob: -6.048231601715088
    9. ')' → logprob: -6.173231601715088
    10. ' not' → logprob: -6.673231601715088

Token 984: ' n' (ID: 297)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6590953469276428
    2. ' !=' → logprob: -1.409095287322998
    3. ' n' → logprob: -1.909095287322998
    4. ' not' → logprob: -3.409095287322998
    5. '!=' → logprob: -3.909095287322998
    6. ')' → logprob: -4.784095287322998
    7. ' est' → logprob: -5.159095287322998
    8. 'not' → logprob: -5.159095287322998
    9. 'n' → logprob: -5.534095287322998
    10. '<|end|>' → logprob: -5.909095287322998

Token 985: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.26203489303588867
    2. ' !=' → logprob: -2.5120348930358887
    3. ''est' → logprob: -2.6370348930358887
    4. 'est' → logprob: -3.8870348930358887
    5. '=' → logprob: -4.262034893035889
    6. '```' → logprob: -4.887034893035889
    7. ' n' → logprob: -5.637034893035889
    8. 'e' → logprob: -5.637034893035889
    9. '’est' → logprob: -5.887034893035889
    10. 'a' → logprob: -6.012034893035889

Token 986: ' PAS' (ID: 66794)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6508127450942993
    2. 'pas' → logprob: -0.7758127450942993
    3. 'not' → logprob: -4.40081262588501
    4. 'diff' → logprob: -6.40081262588501
    5. ' not' → logprob: -6.52581262588501
    6. 'different' → logprob: -7.02581262588501
    7. ' différent' → logprob: -7.52581262588501
    8. '_pas' → logprob: -8.525813102722168
    9. ' ni' → logprob: -8.775813102722168
    10. ' different' → logprob: -9.025813102722168

Token 987: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.6916493773460388
    2. ' dans' → logprob: -2.6916494369506836
    3. 'une' → logprob: -2.8166494369506836
    4. 'un' → logprob: -2.9416494369506836
    5. 'check' → logprob: -3.0666494369506836
    6. ' check' → logprob: -3.4416494369506836
    7. 'le' → logprob: -3.6916494369506836
    8. ' au' → logprob: -3.6916494369506836
    9. 'l' → logprob: -3.6916494369506836
    10. ' un' → logprob: -3.8166494369506836

Token 988: ' une' (ID: 2463)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11047758907079697
    2. '(check' → logprob: -3.3604776859283447
    3. 'check' → logprob: -3.4854776859283447
    4. '[' → logprob: -3.9854776859283447
    5. 'les' → logprob: -4.985477447509766
    6. 'le' → logprob: -6.235477447509766
    7. '{s' → logprob: -6.360477447509766
    8. '```' → logprob: -6.735477447509766
    9. '[B' → logprob: -7.110477447509766
    10. 'B' → logprob: -7.485477447509766

Token 989: ' des' (ID: 731)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.06219051405787468
    2. 'col' → logprob: -3.437190532684326
    3. 'ligne' → logprob: -4.562190532684326
    4. 'pos' → logprob: -5.312190532684326
    5. 'configuration' → logprob: -5.687190532684326
    6. 'distance' → logprob: -6.312190532684326
    7. 'sym' → logprob: -6.562190532684326
    8. 'trip' → logprob: -6.812190532684326
    9. ' position' → logprob: -6.812190532684326
    10. 's' → logprob: -7.312190532684326

Token 990: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.025744646787643433
    2. ' positions' → logprob: -3.900744676589966
    3. 'pos' → logprob: -6.150744438171387
    4. 'cases' → logprob: -7.025744438171387
    5. ' ' → logprob: -7.400744438171387
    6. 'position' → logprob: -7.525744438171387
    7. 'cas' → logprob: -8.650744438171387
    8. '3' → logprob: -8.900744438171387
    9. ' configurations' → logprob: -8.900744438171387
    10. 'config' → logprob: -9.025744438171387

Token 991: ' interdit' (ID: 129427)
  Prédit: ' distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.4824891686439514
    2. ' ' → logprob: -2.2324891090393066
    3. ' different' → logprob: -2.7324891090393066
    4. ' différente' → logprob: -3.1074891090393066
    5. 'distinct' → logprob: -3.4824891090393066
    6. ' des' → logprob: -3.8574891090393066
    7. ' possible' → logprob: -4.357489109039307
    8. ' #' → logprob: -4.607489109039307
    9. ' trip' → logprob: -4.732489109039307
    10. ' de' → logprob: -4.982489109039307

Token 992: 'es' (ID: 268)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.07802626490592957
    2. 'ites' → logprob: -3.078026294708252
    3. 'es' → logprob: -4.328026294708252
    4. 'e' → logprob: -4.328026294708252
    5. 'ee' → logprob: -7.578026294708252
    6. 'ition' → logprob: -7.578026294708252
    7. 'ée' → logprob: -8.328025817871094
    8. 'it' → logprob: -8.578025817871094
    9. 'ue' → logprob: -8.578025817871094
    10. 'é' → logprob: -8.703025817871094

Token 993: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4617256056226324e-05
    2. '
' → logprob: -12.000014305114746
    3. ',' → logprob: -13.250014305114746
    4. ')' → logprob: -13.375014305114746
    5. ' =' → logprob: -13.875014305114746
    6. 'cnt' → logprob: -13.875014305114746
    7. '=' → logprob: -14.250014305114746
    8. '      ' → logprob: -14.875014305114746
    9. '   ' → logprob: -15.000014305114746
    10. '	' → logprob: -15.000014305114746

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003812217037193477
    2. 'cnt' → logprob: -7.875380992889404
    3. ' cnt' → logprob: -14.875381469726562
    4. '```' → logprob: -15.250381469726562
    5. '           ' → logprob: -15.750381469726562
    6. '	' → logprob: -16.000381469726562
    7. '   ' → logprob: -16.125381469726562
    8. '	cnt' → logprob: -17.000381469726562
    9. '[cnt' → logprob: -17.000381469726562
    10. '      ' → logprob: -17.750381469726562

Token 995: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.1604112833738327
    2. '       ' → logprob: -1.9104112386703491
    3. ' cnt' → logprob: -9.03541088104248
    4. '   ' → logprob: -10.66041088104248
    5. '```' → logprob: -10.66041088104248
    6. '	cnt' → logprob: -11.53541088104248
    7. '
' → logprob: -13.03541088104248
    8. '           ' → logprob: -13.16041088104248
    9. '[cnt' → logprob: -13.16041088104248
    10. '``' → logprob: -13.53541088104248

Token 996: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20141586661338806
    2. '+=' → logprob: -1.7014158964157104
    3. '+=(' → logprob: -14.201416015625
    4. '=' → logprob: -14.451416015625
    5. '   ' → logprob: -14.576416015625
    6. '+' → logprob: -14.701416015625
    7. ']+=' → logprob: -16.076416015625
    8. '+="' → logprob: -16.201416015625
    9. '+='' → logprob: -16.201416015625
    10. ' =' → logprob: -16.451416015625

Token 997: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003529517212882638
    2. ' b' → logprob: -6.0035295486450195
    3. '(b' → logprob: -6.8785295486450195
    4. ' (' → logprob: -10.87852954864502
    5. '(' → logprob: -12.87852954864502
    6. '   ' → logprob: -13.37852954864502
    7. ' ' → logprob: -14.75352954864502
    8. '	b' → logprob: -16.253528594970703
    9. '     ' → logprob: -16.503528594970703
    10. 'max' → logprob: -16.753528594970703

Token 998: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.313268780708313
    2. '-' → logprob: -1.313268780708313
    3. ' ' → logprob: -12.063268661499023
    4. '-check' → logprob: -14.188268661499023
    5. ' ' → logprob: -15.188268661499023
    6. '–' → logprob: -16.688268661499023
    7. '−' → logprob: -17.563268661499023
    8. '   ' → logprob: -17.938268661499023
    9. ' ' → logprob: -17.938268661499023
    10. '	' → logprob: -18.063268661499023

Token 999: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -5.836499985889532e-05
    2. ' check' → logprob: -9.7500581741333
    3. '	check' → logprob: -19.500059127807617
    4. '(check' → logprob: -20.000059127807617
    5. 'count' → logprob: -22.875059127807617
    6. '_check' → logprob: -22.875059127807617
    7. 'chec' → logprob: -22.875059127807617
    8. ' ' → logprob: -23.625059127807617
    9. 'checks' → logprob: -24.000059127807617
    10. 'c' → logprob: -24.125059127807617

Token 1000: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7146746763028204e-05
    2. '#' → logprob: -10.25003719329834
    3. '
' → logprob: -13.62503719329834
    4. '#print' → logprob: -15.62503719329834
    5. '```' → logprob: -15.75003719329834
    6. ' print' → logprob: -16.000036239624023
    7. '<|end|>' → logprob: -17.250036239624023
    8. '        
' → logprob: -19.625036239624023
    9. ')' → logprob: -19.875036239624023
    10. '

' → logprob: -20.000036239624023

Token 1001: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5880151987075806
    2. '<|end|>' → logprob: -0.9630151987075806
    3. '```' → logprob: -2.838015079498291
    4. '#' → logprob: -5.588015079498291
    5. ')' → logprob: -8.71301555633545
    6. '
' → logprob: -9.08801555633545
    7. '#print' → logprob: -9.08801555633545
    8. ' print' → logprob: -9.58801555633545
    9. '<|end|>' → logprob: -10.33801555633545
    10. '``' → logprob: -11.33801555633545

Token 1002: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -23.625
    4. '#print' → logprob: -25.125
    5. '#' → logprob: -26.5
    6. '
' → logprob: -27.625
    7. 'Print' → logprob: -28.375
    8. 'printf' → logprob: -28.375
    9. '-print' → logprob: -28.5
    10. '	print' → logprob: -28.5

Token 1003: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8320041298866272
    2. '#' → logprob: -1.0820040702819824
    3. 'ich' → logprob: -2.2070040702819824
    4. 'f' → logprob: -2.9570040702819824
    5. 'ichage' → logprob: -3.0820040702819824
    6. 'iche' → logprob: -4.832004070281982
    7. '#print' → logprob: -5.457004070281982
    8. 'ic' → logprob: -6.082004070281982
    9. '```' → logprob: -6.332004070281982
    10. 'icher' → logprob: -6.957004070281982

Token 1004: ' la' (ID: 557)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0024763736873865128
    2. 'cnt' → logprob: -6.002476215362549
    3. '[cnt' → logprob: -15.127476692199707
    4. '(' → logprob: -15.377476692199707
    5. ' cnt' → logprob: -16.62747573852539
    6. 'print' → logprob: -17.25247573852539
    7. '(
' → logprob: -17.62747573852539
    8. '	cnt' → logprob: -18.50247573852539
    9. '(count' → logprob: -18.75247573852539
    10. '(cont' → logprob: -18.87747573852539

Token 1005: ' valeur' (ID: 41664)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.001247016480192542
    2. 'print' → logprob: -7.001246929168701
    3. '(cnt' → logprob: -8.00124740600586
    4. ' cnt' → logprob: -15.12624740600586
    5. '[cnt' → logprob: -16.12624740600586
    6. '	cnt' → logprob: -19.00124740600586
    7. 'result' → logprob: -19.37624740600586
    8. 'count' → logprob: -19.75124740600586
    9. 'cn' → logprob: -20.75124740600586
    10. '```' → logprob: -20.75124740600586

Token 1006: ' totale' (ID: 52898)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0027965570334345102
    2. 'cnt' → logprob: -6.002796649932861
    3. 'print' → logprob: -8.252796173095703
    4. '(' → logprob: -9.877796173095703
    5. '(
' → logprob: -11.877796173095703
    6. '[cnt' → logprob: -13.252796173095703
    7. '(print' → logprob: -16.127796173095703
    8. '(count' → logprob: -17.502796173095703
    9. '(cmd' → logprob: -17.627796173095703
    10. ' cnt' → logprob: -17.877796173095703

Token 1007: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.226628895296017e-06
    2. '(print' → logprob: -12.000007629394531
    3. '(cnt' → logprob: -14.125007629394531
    4. ' print' → logprob: -15.875007629394531
    5. '(' → logprob: -16.00000762939453
    6. '```' → logprob: -17.00000762939453
    7. 'cnt' → logprob: -17.00000762939453
    8. '
' → logprob: -17.00000762939453
    9. '#print' → logprob: -18.37500762939453
    10. ')' → logprob: -19.25000762939453

Token 1008: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.125
    3. '
' → logprob: -17.875
    4. '```' → logprob: -18.0
    5. '(print' → logprob: -18.625
    6. '.print' → logprob: -21.875
    7. '#print' → logprob: -22.0
    8. '(' → logprob: -22.5
    9. 'cnt' → logprob: -23.125
    10. 'Print' → logprob: -23.75

Token 1009: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.9361264946837764e-07
    2. ' cnt' → logprob: -17.25
    3. '(cnt' → logprob: -17.375
    4. 'print' → logprob: -17.625
    5. 'count' → logprob: -21.375
    6. 'cn' → logprob: -22.0
    7. '	cnt' → logprob: -22.0
    8. 'cmp' → logprob: -22.25
    9. 'counter' → logprob: -23.0
    10. '[cnt' → logprob: -23.125

Token 1010: ' cnt' (ID: 27340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7252845029579476e-05
    2. '(print' → logprob: -10.750027656555176
    3. '(' → logprob: -13.000027656555176
    4. ' print' → logprob: -13.250027656555176
    5. '(cnt' → logprob: -13.875027656555176
    6. '```' → logprob: -14.500027656555176
    7. '
' → logprob: -15.875027656555176
    8. 'cnt' → logprob: -16.37502670288086
    9. '.print' → logprob: -17.75002670288086
    10. '#print' → logprob: -17.87502670288086

Token 1011: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.7994282795116305e-05
    2. '```' → logprob: -10.00004768371582
    3. '
' → logprob: -13.62504768371582
    4. ' print' → logprob: -13.87504768371582
    5. '``' → logprob: -15.25004768371582
    6. '(print' → logprob: -16.37504768371582
    7. '#print' → logprob: -20.00004768371582
    8. '.print' → logprob: -20.25004768371582
    9. '(' → logprob: -20.50004768371582
    10. '`
' → logprob: -21.12504768371582

Token 1012: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '
' → logprob: -19.125001907348633
    4. ')' → logprob: -20.250001907348633
    5. '#print' → logprob: -21.375001907348633
    6. '```' → logprob: -21.750001907348633
    7. 'cnt' → logprob: -21.875001907348633
    8. ')
' → logprob: -22.500001907348633
    9. 'end' → logprob: -22.875001907348633
    10. ' 
' → logprob: -23.500001907348633

Token 1013: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '```' → logprob: -22.75
    4. '
' → logprob: -24.0
    5. '#print' → logprob: -25.5
    6. ')' → logprob: -26.875
    7. 'printf' → logprob: -27.375
    8. '.print' → logprob: -27.375
    9. 'pr' → logprob: -27.75
    10. 'Print' → logprob: -28.0

Token 1014: ' représente' (ID: 88912)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05568642541766167
    2. ' print' → logprob: -3.5556864738464355
    3. '#' → logprob: -4.1806864738464355
    4. '```' → logprob: -5.6806864738464355
    5. ' représente' → logprob: -6.3056864738464355
    6. ' represents' → logprob: -6.4306864738464355
    7. 'rep' → logprob: -6.5556864738464355
    8. '=' → logprob: -7.6806864738464355
    9. 'represent' → logprob: -8.555685997009277
    10. 'est' → logprob: -8.805685997009277

Token 1015: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5192650556564331
    2. 'cnt' → logprob: -1.019265055656433
    3. 'len' → logprob: -3.5192651748657227
    4. 'la' → logprob: -4.644265174865723
    5. '(cnt' → logprob: -5.519265174865723
    6. ' le' → logprob: -7.519265174865723
    7. '(len' → logprob: -8.894265174865723
    8. 'l' → logprob: -9.019265174865723
    9. '[cnt' → logprob: -10.519265174865723
    10. ' cnt' → logprob: -10.644265174865723

Token 1016: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.00023965541913639754
    2. ' nombre' → logprob: -8.375239372253418
    3. 'nb' → logprob: -12.750239372253418
    4. 'Nombre' → logprob: -13.000239372253418
    5. 'rés' → logprob: -13.875239372253418
    6. 'print' → logprob: -14.125239372253418
    7. '#' → logprob: -14.250239372253418
    8. 'total' → logprob: -14.375239372253418
    9. 'result' → logprob: -15.375239372253418
    10. 'number' → logprob: -15.625239372253418

Token 1017: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.15829336643219
    2. '(' → logprob: -1.28329336643219
    3. '(total' → logprob: -1.40829336643219
    4. 'de' → logprob: -2.6582932472229004
    5. ')' → logprob: -3.7832932472229004
    6. 'print' → logprob: -4.0332932472229
    7. '#' → logprob: -4.2832932472229
    8. 'des' → logprob: -4.4082932472229
    9. ' de' → logprob: -4.7832932472229
    10. '(
' → logprob: -4.9082932472229

Token 1018: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18230485916137695
    2. '(' → logprob: -1.932304859161377
    3. '(cnt' → logprob: -4.432304859161377
    4. '(print' → logprob: -4.682304859161377
    5. '(
' → logprob: -8.057304382324219
    6. ')' → logprob: -9.307304382324219
    7. '()' → logprob: -9.807304382324219
    8. '(count' → logprob: -10.057304382324219
    9. 'cnt' → logprob: -10.682304382324219
    10. '(c' → logprob: -11.182304382324219

Token 1019: ' façons' (ID: 165958)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.0005947356694377959
    2. ' trip' → logprob: -7.500594615936279
    3. 'tr' → logprob: -11.000595092773438
    4. 'tro' → logprob: -11.750595092773438
    5. 'tri' → logprob: -11.875595092773438
    6. 'comb' → logprob: -13.375595092773438
    7. '```' → logprob: -13.375595092773438
    8. '"' → logprob: -13.625595092773438
    9. '   ' → logprob: -13.875595092773438
    10. ' ' → logprob: -14.000595092773438

Token 1020: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6713116765022278
    2. 'dont' → logprob: -1.046311616897583
    3. 'd' → logprob: -2.546311616897583
    4. '#' → logprob: -3.796311616897583
    5. 'possible' → logprob: -4.546311855316162
    6. 'print' → logprob: -4.671311855316162
    7. ' de' → logprob: -5.546311855316162
    8. 'unique' → logprob: -5.921311855316162
    9. ' d' → logprob: -5.921311855316162
    10. ' dont' → logprob: -6.296311855316162

Token 1021: ' choisir' (ID: 47004)
  Prédit: 'former'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'former' → logprob: -0.6965302228927612
    2. 'cho' → logprob: -0.8215302228927612
    3. 'comb' → logprob: -3.321530342102051
    4. 'form' → logprob: -5.071530342102051
    5. 'forme' → logprob: -5.571530342102051
    6. 'tr' → logprob: -5.696530342102051
    7. 'composer' → logprob: -5.696530342102051
    8. 'arr' → logprob: -6.321530342102051
    9. ' choisir' → logprob: -6.821530342102051
    10. 'constit' → logprob: -6.946530342102051

Token 1022: ' un' (ID: 537)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08664456754922867
    2. '(' → logprob: -3.8366446495056152
    3. '(cnt' → logprob: -4.086644649505615
    4. 'trip' → logprob: -4.211644649505615
    5. 'cnt' → logprob: -4.336644649505615
    6. 'une' → logprob: -5.086644649505615
    7. 'un' → logprob: -5.211644649505615
    8. 'print' → logprob: -6.336644649505615
    9. ' trois' → logprob: -7.461644649505615
    10. 'tro' → logprob: -7.461644649505615

Token 1023: ' indice' (ID: 90848)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.001368688652291894
    2. 'tr' → logprob: -7.626368522644043
    3. ' trip' → logprob: -7.876368522644043
    4. 'tro' → logprob: -8.251368522644043
    5. 'triangle' → logprob: -9.626368522644043
    6. 'car' → logprob: -10.001368522644043
    7. 'tuple' → logprob: -10.751368522644043
    8. '"' → logprob: -10.751368522644043
    9. 'B' → logprob: -11.126368522644043
    10. '```' → logprob: -11.126368522644043

Token 1024: ' '' (ID: 461)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.3750409185886383
    2. ' trip' → logprob: -2.1250410079956055
    3. 'distinct' → logprob: -3.1250410079956055
    4. ' de' → logprob: -3.3750410079956055
    5. 'de' → logprob: -3.7500410079956055
    6. 'B' → logprob: -3.7500410079956055
    7. ' i' → logprob: -4.3750410079956055
    8. ' B' → logprob: -4.6250410079956055
    9. 'print' → logprob: -4.7500410079956055
    10. 'pour' → logprob: -5.1250410079956055

Token 1025: 'R' (ID: 49)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004003127105534077
    2. ' B' → logprob: -6.379003047943115
    3. 'trip' → logprob: -6.754003047943115
    4. 'de' → logprob: -7.879003047943115
    5. ''' → logprob: -8.004003524780273
    6. ' de' → logprob: -9.129003524780273
    7. '"B' → logprob: -9.504003524780273
    8. ' trip' → logprob: -9.504003524780273
    9. ' '' → logprob: -10.379003524780273
    10. '`' → logprob: -11.004003524780273

Token 1026: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0068990131840109825
    2. 'print' → logprob: -5.631898880004883
    3. ',R' → logprob: -6.131898880004883
    4. ')' → logprob: -8.131898880004883
    5. ' ,' → logprob: -8.631898880004883
    6. '#' → logprob: -9.131898880004883
    7. ',r' → logprob: -9.256898880004883
    8. ',
' → logprob: -9.381898880004883
    9. ',b' → logprob: -9.756898880004883
    10. ',B' → logprob: -9.881898880004883

Token 1027: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.689498245716095
    2. ''un' → logprob: -1.3144981861114502
    3. 'un' → logprob: -1.9394981861114502
    4. '#' → logprob: -2.68949818611145
    5. ' #' → logprob: -5.439498424530029
    6. ' une' → logprob: -6.064498424530029
    7. ''une' → logprob: -6.064498424530029
    8. ',' → logprob: -6.064498424530029
    9. 'une' → logprob: -6.189498424530029
    10. '#index' → logprob: -6.189498424530029

Token 1028: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.05332019925117493
    2. ''ind' → logprob: -3.9283201694488525
    3. ''' → logprob: -4.178320407867432
    4. ' indice' → logprob: -4.803320407867432
    5. 'index' → logprob: -5.678320407867432
    6. ''espace' → logprob: -6.428320407867432
    7. 'ind' → logprob: -7.178320407867432
    8. 'indices' → logprob: -7.428320407867432
    9. ''i' → logprob: -7.428320407867432
    10. ' '' → logprob: -8.303319931030273

Token 1029: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45106232166290283
    2. ' '' → logprob: -1.0760623216629028
    3. ',' → logprob: -4.201062202453613
    4. '"B' → logprob: -5.326062202453613
    5. ' "' → logprob: -7.451062202453613
    6. ' de' → logprob: -7.576062202453613
    7. '"' → logprob: -8.326062202453613
    8. 'de' → logprob: -8.451062202453613
    9. ''b' → logprob: -9.076062202453613
    10. ''C' → logprob: -9.576062202453613

Token 1030: 'G' (ID: 38)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013570868410170078
    2. 'G' → logprob: -4.388570785522461
    3. 'B' → logprob: -6.888570785522461
    4. ''S' → logprob: -11.638570785522461
    5. ' '' → logprob: -11.763570785522461
    6. ''C' → logprob: -12.013570785522461
    7. '"B' → logprob: -12.388570785522461
    8. ''b' → logprob: -12.763570785522461
    9. '"G' → logprob: -12.763570785522461
    10. '`' → logprob: -13.763570785522461

Token 1031: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012827815487980843
    2. 'et' → logprob: -5.0128278732299805
    3. ' et' → logprob: -5.1378278732299805
    4. '#' → logprob: -9.13782787322998
    5. '',' → logprob: -10.63782787322998
    6. ''' → logprob: -10.88782787322998
    7. 'e' → logprob: -10.88782787322998
    8. 'print' → logprob: -11.26282787322998
    9. ')' → logprob: -11.88782787322998
    10. ',
' → logprob: -11.88782787322998

Token 1032: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007918313145637512
    2. 'et' → logprob: -5.257918357849121
    3. ' et' → logprob: -6.507918357849121
    4. '#' → logprob: -6.757918357849121
    5. ',#' → logprob: -11.882918357849121
    6. ',
' → logprob: -12.007918357849121
    7. ' ,' → logprob: -12.507918357849121
    8. 'and' → logprob: -12.882918357849121
    9. ' #' → logprob: -13.757918357849121
    10. ' and' → logprob: -13.757918357849121

Token 1033: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0010061351349577308
    2. ' un' → logprob: -7.001006126403809
    3. ''un' → logprob: -9.876006126403809
    4. '#' → logprob: -10.126006126403809
    5. 'une' → logprob: -12.751006126403809
    6. 'indice' → logprob: -16.376007080078125
    7. ' ' → logprob: -17.001007080078125
    8. '’un' → logprob: -17.126007080078125
    9. '(un' → logprob: -17.751007080078125
    10. '	un' → logprob: -18.126007080078125

Token 1034: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.03194434940814972
    2. ''ind' → logprob: -3.5319442749023438
    3. 'index' → logprob: -7.281944274902344
    4. ' indice' → logprob: -7.656944274902344
    5. 'ind' → logprob: -8.156944274902344
    6. ''' → logprob: -8.156944274902344
    7. 'B' → logprob: -8.531944274902344
    8. ''un' → logprob: -9.406944274902344
    9. 'indices' → logprob: -9.406944274902344
    10. ''i' → logprob: -10.156944274902344

Token 1035: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0033561820164322853
    2. '"B' → logprob: -6.003355979919434
    3. 'B' → logprob: -7.878355979919434
    4. '`' → logprob: -8.753355979919434
    5. ''b' → logprob: -9.253355979919434
    6. ' '' → logprob: -9.253355979919434
    7. 'print' → logprob: -10.253355979919434
    8. '#' → logprob: -10.378355979919434
    9. '"' → logprob: -10.503355979919434
    10. 'de' → logprob: -10.628355979919434

Token 1036: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07012016326189041
    2. ''' → logprob: -2.695120096206665
    3. '"B' → logprob: -9.195119857788086
    4. '`' → logprob: -10.570119857788086
    5. 'print' → logprob: -10.945119857788086
    6. '#' → logprob: -11.820119857788086
    7. '"' → logprob: -11.820119857788086
    8. ' B' → logprob: -11.945119857788086
    9. ''''' → logprob: -12.070119857788086
    10. '```' → logprob: -12.070119857788086

Token 1037: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3197767436504364
    2. ')
' → logprob: -1.3197767734527588
    3. ')' → logprob: -5.06977653503418
    4. ')
' → logprob: -9.19477653503418
    5. ' print' → logprob: -9.31977653503418
    6. '
' → logprob: -11.94477653503418
    7. ')

' → logprob: -12.44477653503418
    8. '")' → logprob: -13.56977653503418
    9. '")
' → logprob: -13.69477653503418
    10. '(print' → logprob: -13.94477653503418

Token 1038: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -14.00000286102295
    3. ')
' → logprob: -14.50000286102295
    4. '```' → logprob: -14.62500286102295
    5. ')' → logprob: -15.25000286102295
    6. '
' → logprob: -15.25000286102295
    7. '(print' → logprob: -16.125001907348633
    8. '.print' → logprob: -16.500001907348633
    9. 'Print' → logprob: -16.750001907348633
    10. '#print' → logprob: -17.000001907348633

Token 1039: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. ' print' → logprob: -12.625005722045898
    3. '
' → logprob: -13.625005722045898
    4. '```' → logprob: -15.000005722045898
    5. '.print' → logprob: -15.250005722045898
    6. '#print' → logprob: -15.625005722045898
    7. '(print' → logprob: -15.875005722045898
    8. ')
' → logprob: -16.6250057220459
    9. ')' → logprob: -16.8750057220459
    10. 'Print' → logprob: -17.6250057220459

Token 1040: ' form' (ID: 1625)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03386502340435982
    2. 'st' → logprob: -4.658864974975586
    3. 'cess' → logprob: -5.158864974975586
    4. '#' → logprob: -5.408864974975586
    5. 'pas' → logprob: -5.658864974975586
    6. ' print' → logprob: -5.908864974975586
    7. 'anmoins' → logprob: -6.658864974975586
    8. 's' → logprob: -7.158864974975586
    9. 'ccess' → logprob: -7.408864974975586
    10. '#print' → logprob: -7.533864974975586

Token 1041: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0002453662164043635
    2. 'ent' → logprob: -8.625245094299316
    3. 'e' → logprob: -10.125245094299316
    4. 'aient' → logprob: -11.250245094299316
    5. 'er' → logprob: -11.750245094299316
    6. '```' → logprob: -13.500245094299316
    7. 'ont' → logprob: -14.500245094299316
    8. 'é' → logprob: -14.500245094299316
    9. 'ez' → logprob: -14.750245094299316
    10. 'a' → logprob: -15.375245094299316

Token 1042: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2536338269710541
    2. ' pas' → logprob: -1.5036338567733765
    3. '_pas' → logprob: -8.128633499145508
    4. 'ant' → logprob: -8.378633499145508
    5. 'nt' → logprob: -8.378633499145508
    6. 's' → logprob: -8.503633499145508
    7. 'ent' → logprob: -9.003633499145508
    8. 'ont' → logprob: -9.253633499145508
    9. '   ' → logprob: -9.378633499145508
    10. ' jamais' → logprob: -9.503633499145508

Token 1043: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5868527293205261
    2. 'un' → logprob: -0.8368527293205261
    3. 'd' → logprob: -4.711852550506592
    4. 'de' → logprob: -6.586852550506592
    5. ' un' → logprob: -9.71185302734375
    6. 'des' → logprob: -9.71185302734375
    7. '   ' → logprob: -10.08685302734375
    8. '#' → logprob: -10.08685302734375
    9. '```' → logprob: -10.46185302734375
    10. 'triangle' → logprob: -10.71185302734375

Token 1044: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.3573623299598694
    2. 'triangle' → logprob: -1.3573622703552246
    3. ' trip' → logprob: -3.3573622703552246
    4. 'tr' → logprob: -5.732362270355225
    5. ' triangle' → logprob: -6.107362270355225
    6. 'tri' → logprob: -7.107362270355225
    7. 'align' → logprob: -7.982362270355225
    8. ' triple' → logprob: -8.107362747192383
    9. '"' → logprob: -8.357362747192383
    10. 'tro' → logprob: -8.482362747192383

Token 1045: 'let' (ID: 1347)
  Prédit: 'let'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'let' → logprob: -0.00021879478299524635
    2. 'lets' → logprob: -8.500218391418457
    3. 'lette' → logprob: -11.750218391418457
    4. 'le' → logprob: -12.750218391418457
    5. 'lete' → logprob: -13.500218391418457
    6. 'l' → logprob: -13.625218391418457
    7. 'lett' → logprob: -13.625218391418457
    8. 'LET' → logprob: -15.750218391418457
    9. 'plet' → logprob: -16.250219345092773
    10. ' let' → logprob: -16.625219345092773

Token 1046: ' interdit' (ID: 129427)
  Prédit: 'équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'équ' → logprob: -0.6446397304534912
    2. 'd' → logprob: -2.019639730453491
    3. 'is' → logprob: -2.644639730453491
    4. 'isos' → logprob: -2.769639730453491
    5. 'col' → logprob: -3.394639730453491
    6. ' équ' → logprob: -3.394639730453491
    7. '```' → logprob: -3.394639730453491
    8. 'égal' → logprob: -4.26963996887207
    9. ' is' → logprob: -4.39463996887207
    10. 'equ' → logprob: -4.51963996887207

Token 1047: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002353640884393826
    2. ')' → logprob: -9.375235557556152
    3. ' print' → logprob: -9.875235557556152
    4. '(' → logprob: -10.125235557556152
    5. '(print' → logprob: -11.000235557556152
    6. '.' → logprob: -11.375235557556152
    7. ')
' → logprob: -11.500235557556152
    8. '
' → logprob: -11.750235557556152
    9. '.
' → logprob: -12.250235557556152
    10. '.print' → logprob: -12.750235557556152

Token 1048: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.28629550337791443
    2. 'les' → logprob: -1.5362955331802368
    3. 'le' → logprob: -4.036295413970947
    4. 'l' → logprob: -4.911295413970947
    5. ' la' → logprob: -5.286295413970947
    6. ' les' → logprob: -6.536295413970947
    7. 'une' → logprob: -6.661295413970947
    8. '#' → logprob: -7.786295413970947
    9. 'certain' → logprob: -8.286295890808105
    10. ' le' → logprob: -9.286295890808105

Token 1049: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.25856637954711914
    2. 'instructions' → logprob: -2.133566379547119
    3. 'r' → logprob: -3.633566379547119
    4. 'crit' → logprob: -3.758566379547119
    5. 'én' → logprob: -4.258566379547119
    6. ' critères' → logprob: -4.508566379547119
    7. 'cons' → logprob: -4.758566379547119
    8. ' conditions' → logprob: -5.383566379547119
    9. 'criter' → logprob: -5.633566379547119
    10. ' règles' → logprob: -5.758566379547119

Token 1050: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.125
    3. '(print' → logprob: -16.875
    4. '
' → logprob: -17.25
    5. ')
' → logprob: -17.625
    6. ' print' → logprob: -17.625
    7. '(' → logprob: -18.375
    8. ')' → logprob: -18.625
    9. 'for' → logprob: -19.125
    10. '.print' → logprob: -19.125

Token 1051: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.0372486114501953
    2. 'programme' → logprob: -1.4122486114501953
    3. 'proble' → logprob: -1.5372486114501953
    4. 'én' → logprob: -2.7872486114501953
    5. '#' → logprob: -3.1622486114501953
    6. 'comment' → logprob: -3.1622486114501953
    7. 'texte' → logprob: -4.537248611450195
    8. 'code' → logprob: -4.662248611450195
    9. 's' → logprob: -4.787248611450195
    10. 'problem' → logprob: -5.162248611450195

Token 1052: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1160349458805285e-05
    2. '
' → logprob: -11.500011444091797
    3. ')
' → logprob: -14.625011444091797
    4. '```' → logprob: -15.250011444091797
    5. ' print' → logprob: -16.000011444091797
    6. '(print' → logprob: -16.375011444091797
    7. ')' → logprob: -17.375011444091797
    8. '
' → logprob: -17.500011444091797
    9. '(' → logprob: -18.875011444091797
    10. '.print' → logprob: -19.125011444091797

Token 1053: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. ' print' → logprob: -21.25
    4. '
' → logprob: -25.0
    5. '``' → logprob: -26.125
    6. '`' → logprob: -28.125
    7. 'Print' → logprob: -28.25
    8. '#print' → logprob: -28.375
    9. 'prints' → logprob: -29.125
    10. '-print' → logprob: -29.375

Token 1054: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. 'cnt' → logprob: -15.25001335144043
    4. '(count' → logprob: -16.50001335144043
    5. '[cnt' → logprob: -17.50001335144043
    6. ' (' → logprob: -17.62501335144043
    7. '(
' → logprob: -18.00001335144043
    8. '(counter' → logprob: -18.37501335144043
    9. '(cont' → logprob: -18.87501335144043
    10. '()' → logprob: -18.87501335144043

Token 1055: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.375000953674316
    3. '())' → logprob: -14.875000953674316
    4. '()' → logprob: -17.250001907348633
    5. '))' → logprob: -17.375001907348633
    6. ')`' → logprob: -17.500001907348633
    7. ')#' → logprob: -19.500001907348633
    8. ')}' → logprob: -19.625001907348633
    9. ')
' → logprob: -19.750001907348633
    10. '）' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1053
Tokens correctement prédits (1ère position, stricte): 187
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 568
Précision stricte (1ère position): 17.76%
Précision adaptée (1ère position): 19.56%
Précision (top 10): 53.94%
================================================================================
