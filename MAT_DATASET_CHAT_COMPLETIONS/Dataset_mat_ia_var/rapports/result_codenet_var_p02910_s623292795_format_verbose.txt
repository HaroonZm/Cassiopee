================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import re

input_string = input()

pattern_no_consecutive_L_or_R = re.compile(r'^([^L][^R])*[^L]?$')

if pattern_no_consecutive_L_or_R.match(input_string):
    print('Yes')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' re' (ID: 322)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4539533257484436
    2. '```' → logprob: -1.9539532661437988
    3. '.' → logprob: -2.828953266143799
    4. '[' → logprob: -3.203953266143799
    5. '\' → logprob: -3.453953266143799
    6. '(' → logprob: -3.953953266143799
    7. '\b' → logprob: -4.203953266143799
    8. '\.' → logprob: -4.203953266143799
    9. '\[' → logprob: -4.953953266143799
    10. '\s' → logprob: -5.328953266143799

Token 4: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06456254422664642
    2. '_' → logprob: -2.9395625591278076
    3. '[' → logprob: -5.5645623207092285
    4. ' (' → logprob: -6.4395623207092285
    5. '.' → logprob: -6.9395623207092285
    6. ' =' → logprob: -7.4395623207092285
    7. '=' → logprob: -8.189562797546387
    8. 'r' → logprob: -8.314562797546387
    9. '```' → logprob: -8.439562797546387
    10. ',' → logprob: -8.564562797546387

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031569965183734894
    2. '(' → logprob: -4.281569957733154
    3. '.' → logprob: -4.281569957733154
    4. '=' → logprob: -6.906569957733154
    5. ')' → logprob: -7.531569957733154
    6. '```' → logprob: -7.531569957733154
    7. '[
' → logprob: -8.031570434570312
    8. '[]' → logprob: -8.531570434570312
    9. ',' → logprob: -8.906570434570312
    10. ''' → logprob: -9.031570434570312

Token 6: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.035349827259778976
    2. ''' → logprob: -3.7853498458862305
    3. ' "' → logprob: -4.9103498458862305
    4. ' ' → logprob: -5.5353498458862305
    5. '"""' → logprob: -7.9103498458862305
    6. ' '' → logprob: -8.53534984588623
    7. '"user' → logprob: -10.53534984588623
    8. '<|end|>' → logprob: -10.78534984588623
    9. 'input' → logprob: -10.91034984588623
    10. 'r' → logprob: -11.66034984588623

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009865755215287209
    2. '('' → logprob: -4.759865760803223
    3. ''' → logprob: -7.759865760803223
    4. '("("' → logprob: -7.759865760803223
    5. '```' → logprob: -9.384865760803223
    6. '`' → logprob: -9.384865760803223
    7. '(
' → logprob: -9.759865760803223
    8. '"' → logprob: -9.759865760803223
    9. '(`' → logprob: -10.509865760803223
    10. '("""' → logprob: -11.259865760803223

Token 8: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.06514406949281693
    2. 'result' → logprob: -3.5651440620422363
    3. 'matches' → logprob: -4.065144062042236
    4. 'match' → logprob: -5.315144062042236
    5. 'if' → logprob: -5.690144062042236
    6. 'tokens' → logprob: -6.315144062042236
    7. '.' → logprob: -6.440144062042236
    8. 'output' → logprob: -6.565144062042236
    9. 'clean' → logprob: -6.940144062042236
    10. 're' → logprob: -7.815144062042236

Token 9: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00022773505770601332
    2. '=' → logprob: -8.500227928161621
    3. '\s' → logprob: -11.500227928161621
    4. ' ' → logprob: -12.000227928161621
    5. 's' → logprob: -12.875227928161621
    6. '  ' → logprob: -13.000227928161621
    7. '_' → logprob: -13.625227928161621
    8. '\' → logprob: -14.750227928161621
    9. '```' → logprob: -14.750227928161621
    10. ')' → logprob: -15.125227928161621

Token 10: '_con' (ID: 7531)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1520005464553833
    2. '_' → logprob: -3.0270004272460938
    3. '_space' → logprob: -3.7770004272460938
    4. '=' → logprob: -4.027000427246094
    5. 'r' → logprob: -4.402000427246094
    6. '\s' → logprob: -4.527000427246094
    7. '_match' → logprob: -4.777000427246094
    8. 't' → logprob: -4.902000427246094
    9. 'space' → logprob: -5.652000427246094
    10. '_pattern' → logprob: -5.902000427246094

Token 11: 'secutive' (ID: 165873)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7036439776420593
    2. 'secutive' → logprob: -0.8286439776420593
    3. 's' → logprob: -3.453644037246704
    4. 'sec' → logprob: -5.453643798828125
    5. 'v' → logprob: -5.578643798828125
    6. '```' → logprob: -6.078643798828125
    7. 'tin' → logprob: -6.328643798828125
    8. 'd' → logprob: -6.328643798828125
    9. 'secut' → logprob: -6.578643798828125
    10. 'son' → logprob: -6.578643798828125

Token 12: '_L' (ID: 4258)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0643429160118103
    2. ' =' → logprob: -3.314342975616455
    3. '=' → logprob: -3.814342975616455
    4. '_=' → logprob: -6.689342975616455
    5. '_spaces' → logprob: -7.189342975616455
    6. 's' → logprob: -7.314342975616455
    7. '_space' → logprob: -7.939342975616455
    8. '\s' → logprob: -7.939342975616455
    9. '_r' → logprob: -8.564342498779297
    10. '_equal' → logprob: -9.564342498779297

Token 13: '_or' (ID: 15400)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006215066649019718
    2. '=' → logprob: -5.1312150955200195
    3. '\s' → logprob: -8.50621509552002
    4. 's' → logprob: -10.50621509552002
    5. ' ' → logprob: -11.00621509552002
    6. '_' → logprob: -11.13121509552002
    7. '`' → logprob: -12.13121509552002
    8. '```' → logprob: -12.50621509552002
    9. 'r' → logprob: -12.75621509552002
    10. '\' → logprob: -13.00621509552002

Token 14: '_R' (ID: 5190)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07623514533042908
    2. 'L' → logprob: -3.326235055923462
    3. 'S' → logprob: -4.951235294342041
    4. 'M' → logprob: -5.076235294342041
    5. 'A' → logprob: -5.576235294342041
    6. 'LL' → logprob: -5.701235294342041
    7. 'I' → logprob: -5.826235294342041
    8. 'W' → logprob: -5.826235294342041
    9. 'l' → logprob: -6.576235294342041
    10. 'D' → logprob: -7.076235294342041

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002827104413881898
    2. '=' → logprob: -5.877827167510986
    3. 's' → logprob: -11.002826690673828
    4. '\s' → logprob: -12.627826690673828
    5. ' ' → logprob: -13.877826690673828
    6. '_' → logprob: -14.252826690673828
    7. '```' → logprob: -16.252826690673828
    8. 'space' → logprob: -16.752826690673828
    9. '\' → logprob: -17.002826690673828
    10. ')' → logprob: -17.002826690673828

Token 16: ' re' (ID: 322)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08917707949876785
    2. ' r' → logprob: -2.464177131652832
    3. '"' → logprob: -9.214177131652832
    4. ''' → logprob: -9.339177131652832
    5. 're' → logprob: -10.839177131652832
    6. ' re' → logprob: -12.089177131652832
    7. '`' → logprob: -12.339177131652832
    8. ' ' → logprob: -12.339177131652832
    9. '   ' → logprob: -12.464177131652832
    10. '(r' → logprob: -13.089177131652832

Token 17: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.08222932368516922
    2. '\.' → logprob: -2.8322293758392334
    3. '.' → logprob: -4.082229137420654
    4. '.search' → logprob: -6.457229137420654
    5. '.findall' → logprob: -7.332229137420654
    6. '.match' → logprob: -8.207229614257812
    7. '```' → logprob: -8.832229614257812
    8. '.\' → logprob: -9.207229614257812
    9. '``' → logprob: -9.582229614257812
    10. '.full' → logprob: -9.582229614257812

Token 18: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014596858993172646
    2. '(' → logprob: -4.264596939086914
    3. '\(' → logprob: -8.139596939086914
    4. '('' → logprob: -10.014596939086914
    5. '\' → logprob: -10.264596939086914
    6. '(rb' → logprob: -10.764596939086914
    7. '("("' → logprob: -11.139596939086914
    8. 'r' → logprob: -11.764596939086914
    9. '('\' → logprob: -12.389596939086914
    10. ' (' → logprob: -12.889596939086914

Token 19: ''^' (ID: 57909)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2083972692489624
    2. 'r' → logprob: -1.4583972692489624
    3. '^(' → logprob: -1.9583972692489624
    4. '"' → logprob: -2.208397388458252
    5. ''(' → logprob: -2.333397388458252
    6. '"(' → logprob: -2.833397388458252
    7. '(' → logprob: -3.583397388458252
    8. '`' → logprob: -3.833397388458252
    9. '(?' → logprob: -5.833397388458252
    10. '[^' → logprob: -6.083397388458252

Token 20: '([^' (ID: 146900)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35171905159950256
    2. '[^' → logprob: -1.4767190217971802
    3. '([^' → logprob: -3.7267191410064697
    4. '^(' → logprob: -3.9767191410064697
    5. '(?' → logprob: -4.226718902587891
    6. '((' → logprob: -4.851718902587891
    7. '.*' → logprob: -6.351718902587891
    8. '(?:' → logprob: -8.22671890258789
    9. '([' → logprob: -8.85171890258789
    10. '(B' → logprob: -8.85171890258789

Token 21: 'L' (ID: 43)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.0005535095697268844
    2. 'L' → logprob: -8.000553131103516
    3. 'RL' → logprob: -8.750553131103516
    4. 'lr' → logprob: -10.500553131103516
    5. 'LL' → logprob: -11.500553131103516
    6. ' LR' → logprob: -11.625553131103516
    7. 'l' → logprob: -12.500553131103516
    8. '.L' → logprob: -13.250553131103516
    9. 'Ll' → logprob: -13.500553131103516
    10. 'R' → logprob: -13.875553131103516

Token 22: '][' (ID: 2696)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.030047018080949783
    2. 'R' → logprob: -3.9050469398498535
    3. 'RL' → logprob: -5.2800469398498535
    4. 'L' → logprob: -5.5300469398498535
    5. ']{' → logprob: -9.405047416687012
    6. ' LR' → logprob: -9.530047416687012
    7. 'r' → logprob: -9.905047416687012
    8. ']+' → logprob: -10.405047416687012
    9. 'RR' → logprob: -10.530047416687012
    10. ']*' → logprob: -10.655047416687012

Token 23: '^' (ID: 61)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.0058986954391002655
    2. 'L' → logprob: -5.630898475646973
    3. 'RL' → logprob: -6.505898475646973
    4. '^' → logprob: -8.005898475646973
    5. ' LR' → logprob: -8.380898475646973
    6. 'R' → logprob: -10.630898475646973
    7. ']*' → logprob: -10.943398475646973
    8. 'LL' → logprob: -11.005898475646973
    9. 'lr' → logprob: -11.068398475646973
    10. '-L' → logprob: -11.505898475646973

Token 24: 'R' (ID: 49)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.004554965533316135
    2. 'L' → logprob: -5.504554748535156
    3. 'RL' → logprob: -8.254554748535156
    4. ' LR' → logprob: -9.129554748535156
    5. 'R' → logprob: -11.004554748535156
    6. 'lr' → logprob: -11.129554748535156
    7. 'LL' → logprob: -11.129554748535156
    8. '_L' → logprob: -12.504554748535156
    9. ']{' → logprob: -12.629554748535156
    10. '|' → logprob: -12.692054748535156

Token 25: '])*' (ID: 114661)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.5992965698242188
    2. ']*' → logprob: -1.9742965698242188
    3. '])*' → logprob: -2.2242965698242188
    4. ']*)' → logprob: -2.4742965698242188
    5. 'L' → logprob: -3.0992965698242188
    6. ']+' → logprob: -3.5992965698242188
    7. '])' → logprob: -3.8492965698242188
    8. ']|' → logprob: -4.724296569824219
    9. ']{' → logprob: -5.349296569824219
    10. 'RL' → logprob: -5.474296569824219

Token 26: '[^' (ID: 74152)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '$' → logprob: -0.20826157927513123
    2. '[^' → logprob: -2.333261489868164
    3. ')$' → logprob: -3.333261489868164
    4. '[' → logprob: -3.458261489868164
    5. '[L' → logprob: -5.083261489868164
    6. 'L' → logprob: -5.458261489868164
    7. '([^' → logprob: -6.208261489868164
    8. '[A' → logprob: -6.458261489868164
    9. '?$' → logprob: -6.583261489868164
    10. '.*' → logprob: -6.708261489868164

Token 27: 'L' (ID: 43)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.016473006457090378
    2. 'L' → logprob: -4.141472816467285
    3. ' LR' → logprob: -8.391472816467285
    4. 'RL' → logprob: -9.016472816467285
    5. ']' → logprob: -10.891472816467285
    6. 'R' → logprob: -11.766472816467285
    7. 'LL' → logprob: -11.766472816467285
    8. ' L' → logprob: -11.891472816467285
    9. ' ' → logprob: -12.016472816467285
    10. ' ]' → logprob: -12.266472816467285

Token 28: ']' (ID: 60)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10139340162277222
    2. '][' → logprob: -2.976393461227417
    3. '^' → logprob: -3.726393461227417
    4. ']*' → logprob: -4.601393222808838
    5. ']' → logprob: -6.101393222808838
    6. '[^' → logprob: -6.226393222808838
    7. ']*)' → logprob: -6.601393222808838
    8. '|' → logprob: -6.726393222808838
    9. '])*' → logprob: -7.351393222808838
    10. '])' → logprob: -7.601393222808838

Token 29: '?$' (ID: 118670)
  Prédit: '[^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[^' → logprob: -0.0924844741821289
    2. '$' → logprob: -3.342484474182129
    3. '|' → logprob: -4.342484474182129
    4. ']*' → logprob: -4.592484474182129
    5. ']' → logprob: -5.092484474182129
    6. '([^' → logprob: -5.717484474182129
    7. '[' → logprob: -5.842484474182129
    8. 'R' → logprob: -6.217484474182129
    9. ')' → logprob: -6.217484474182129
    10. ')$' → logprob: -6.342484474182129

Token 30: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01642974652349949
    2. '')' → logprob: -4.141429901123047
    3. '`)' → logprob: -8.391429901123047
    4. ''' → logprob: -10.016429901123047
    5. '$' → logprob: -10.141429901123047
    6. '[' → logprob: -10.641429901123047
    7. ')$' → logprob: -11.641429901123047
    8. ']' → logprob: -11.766429901123047
    9. ')`' → logprob: -11.891429901123047
    10. '")' → logprob: -12.016429901123047

Token 31: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08023424446582794
    2. '(' → logprob: -3.2052342891693115
    3. '.' → logprob: -4.205234050750732
    4. '[' → logprob: -4.830234050750732
    5. '^' → logprob: -5.580234050750732
    6. '$' → logprob: -6.455234050750732
    7. '*' → logprob: -6.455234050750732
    8. '#' → logprob: -6.705234050750732
    9. ' ' → logprob: -6.830234050750732
    10. ':' → logprob: -6.955234050750732

Token 32: ' pattern' (ID: 8302)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.7714857459068298
    2. ' input' → logprob: -1.3964858055114746
    3. ' ' → logprob: -1.8964858055114746
    4. ' not' → logprob: -2.1464858055114746
    5. ' pattern' → logprob: -4.021485805511475
    6. ' len' → logprob: -6.396485805511475
    7. 'input' → logprob: -6.521485805511475
    8. '  ' → logprob: -7.021485805511475
    9. 'pattern' → logprob: -7.646485805511475
    10. ' ' → logprob: -8.146485328674316

Token 33: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.62500286102295
    3. '_.' → logprob: -13.62500286102295
    4. 'No' → logprob: -15.62500286102295
    5. '_No' → logprob: -15.62500286102295
    6. '_n' → logprob: -16.125003814697266
    7. '_NO' → logprob: -16.375003814697266
    8. '._' → logprob: -16.375003814697266
    9. '.match' → logprob: -16.500003814697266
    10. '_match' → logprob: -16.875003814697266

Token 34: '_con' (ID: 7531)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0008278522291220725
    2. '_con' → logprob: -7.375827789306641
    3. '.match' → logprob: -9.62582778930664
    4. '_' → logprob: -9.75082778930664
    5. '.findall' → logprob: -10.75082778930664
    6. '_.' → logprob: -11.25082778930664
    7. '_match' → logprob: -11.75082778930664
    8. 'con' → logprob: -11.87582778930664
    9. 'No' → logprob: -12.00082778930664
    10. '.' → logprob: -12.75082778930664

Token 35: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.00022845028433948755
    2. 'secut' → logprob: -8.625228881835938
    3. 'sec' → logprob: -11.000228881835938
    4. 'ecut' → logprob: -11.500228881835938
    5. 'sect' → logprob: -11.500228881835938
    6. 'se' → logprob: -12.000228881835938
    7. 's' → logprob: -12.625228881835938
    8. 'es' → logprob: -14.250228881835938
    9. 'cut' → logprob: -15.000228881835938
    10. '```' → logprob: -15.250228881835938

Token 36: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.011228661984205246
    2. '_' → logprob: -4.636228561401367
    3. '_[' → logprob: -6.886228561401367
    4. '_R' → logprob: -9.136228561401367
    5. '[L' → logprob: -9.261228561401367
    6. '_LL' → logprob: -9.511228561401367
    7. '_(' → logprob: -9.636228561401367
    8. '[_' → logprob: -10.136228561401367
    9. '```' → logprob: -10.386228561401367
    10. '(L' → logprob: -11.511228561401367

Token 37: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.005377356894314289
    2. 'or' → logprob: -6.005377292633057
    3. ' or' → logprob: -6.005377292633057
    4. '_OR' → logprob: -8.880377769470215
    5. '```' → logprob: -9.880377769470215
    6. 'Or' → logprob: -10.505377769470215
    7. '_o' → logprob: -10.505377769470215
    8. '|' → logprob: -10.755377769470215
    9. '_r' → logprob: -10.880377769470215
    10. '	or' → logprob: -10.880377769470215

Token 38: '_R' (ID: 5190)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005186320748180151
    2. '_R' → logprob: -5.380186557769775
    3. 'r' → logprob: -9.380186080932617
    4. ' R' → logprob: -10.005186080932617
    5. 'pattern' → logprob: -10.005186080932617
    6. '[' → logprob: -10.255186080932617
    7. '_' → logprob: -10.380186080932617
    8. '_r' → logprob: -10.505186080932617
    9. '<|end|>' → logprob: -10.505186080932617
    10. 'or' → logprob: -10.567686080932617

Token 39: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.3381557762622833
    2. ' .' → logprob: -2.088155746459961
    3. '.' → logprob: -2.213155746459961
    4. '.search' → logprob: -3.213155746459961
    5. '\.' → logprob: -5.088155746459961
    6. '.full' → logprob: -5.213155746459961
    7. '.findall' → logprob: -6.963155746459961
    8. '```' → logprob: -8.838155746459961
    9. '.m' → logprob: -8.963155746459961
    10. '.matcher' → logprob: -9.338155746459961

Token 40: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0387943759560585
    2. '(' → logprob: -3.2887942790985107
    3. ' (' → logprob: -7.28879451751709
    4. '(user' → logprob: -10.41379451751709
    5. '(
' → logprob: -11.28879451751709
    6. '('' → logprob: -11.41379451751709
    7. '(in' → logprob: -12.66379451751709
    8. '(

' → logprob: -12.66379451751709
    9. '("("' → logprob: -13.16379451751709
    10. '(import' → logprob: -13.53879451751709

Token 41: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.166338137816638e-05
    2. '_' → logprob: -10.750031471252441
    3. 'string' → logprob: -11.625031471252441
    4. '_str' → logprob: -15.250031471252441
    5. 'String' → logprob: -15.375031471252441
    6. ')' → logprob: -15.500031471252441
    7. ')_' → logprob: -15.625031471252441
    8. '_)' → logprob: -16.000032424926758
    9. '_s' → logprob: -16.375032424926758
    10. '_STRING' → logprob: -17.125032424926758

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001090566162019968
    2. ')' → logprob: -7.1260905265808105
    3. ':' → logprob: -8.626091003417969
    4. ' ):' → logprob: -9.876091003417969
    5. '):
' → logprob: -10.001091003417969
    6. ' and' → logprob: -12.876091003417969
    7. ''):' → logprob: -13.126091003417969
    8. ')==' → logprob: -13.876091003417969
    9. ')):' → logprob: -14.251091003417969
    10. ' ' → logprob: -14.501091003417969

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08425559103488922
    2. ' print' → logprob: -2.8342556953430176
    3. 'print' → logprob: -3.8342556953430176
    4. ' pass' → logprob: -9.08425521850586
    5. '	print' → logprob: -9.58425521850586
    6. '    
' → logprob: -9.95925521850586
    7. ' #' → logprob: -10.45925521850586
    8. '<|end|>' → logprob: -10.45925521850586
    9. '   ' → logprob: -10.70925521850586
    10. '#' → logprob: -10.83425521850586

Token 44: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5903052091598511
    2. ' print' → logprob: -1.090305209159851
    3. 'print' (adapté à ' print') → logprob: -2.2153053283691406
    4. ' pass' → logprob: -8.21530532836914
    5. ' ' → logprob: -9.59030532836914
    6. ' ' → logprob: -9.71530532836914
    7. 'pass' → logprob: -10.09030532836914
    8. '	print' → logprob: -10.09030532836914
    9. '   ' → logprob: -10.09030532836914
    10. '    ' → logprob: -11.46530532836914

Token 45: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039526645094156265
    2. '("' → logprob: -3.9145267009735107
    3. '('' → logprob: -4.289526462554932
    4. '("("' → logprob: -5.789526462554932
    5. '()' → logprob: -6.664526462554932
    6. '(input' → logprob: -7.914526462554932
    7. '(True' → logprob: -8.16452693939209
    8. '("")' → logprob: -9.78952693939209
    9. '(
' → logprob: -11.53952693939209
    10. '("(' → logprob: -11.53952693939209

Token 46: 'Yes' (ID: 13022)
  Prédit: 'Valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Valid' → logprob: -0.13978590071201324
    2. 'Yes' → logprob: -2.8897860050201416
    3. 'No' → logprob: -3.6397860050201416
    4. 'True' → logprob: -4.0147857666015625
    5. 'YES' → logprob: -4.5147857666015625
    6. 'valid' → logprob: -5.6397857666015625
    7. 'Accepted' → logprob: -6.1397857666015625
    8. 'VALID' → logprob: -6.3897857666015625
    9. 'Match' → logprob: -6.3897857666015625
    10. 'Correct' → logprob: -6.6397857666015625

Token 47: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.22968189418315887
    2. '')
' → logprob: -1.6046818494796753
    3. ')' → logprob: -5.604681968688965
    4. '')
' → logprob: -7.854681968688965
    5. ')
' → logprob: -9.229681968688965
    6. ')')
' → logprob: -9.604681968688965
    7. '")' → logprob: -11.979681968688965
    8. ''' → logprob: -12.604681968688965
    9. '')

' → logprob: -13.104681968688965
    10. '")
' → logprob: -13.104681968688965

Token 48: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005681642796844244
    2. ' else' → logprob: -7.500568389892578
    3. 'elif' → logprob: -11.750568389892578
    4. '   ' → logprob: -12.625568389892578
    5. 'e' → logprob: -13.875568389892578
    6. '_else' → logprob: -14.250568389892578
    7. ')' → logprob: -14.625568389892578
    8. 'el' → logprob: -14.625568389892578
    9. '```' → logprob: -14.750568389892578
    10. ' ' → logprob: -15.000568389892578

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004815530497580767
    2. ':
' → logprob: -5.379815578460693
    3. '   ' → logprob: -8.629815101623535
    4. ' :' → logprob: -11.254815101623535
    5. ' :
' → logprob: -14.004815101623535
    6. ':
' → logprob: -14.379815101623535
    7. ':

' → logprob: -14.629815101623535
    8. '<|end|>' → logprob: -15.254815101623535
    9. '{' → logprob: -15.379815101623535
    10. '```' → logprob: -15.504815101623535

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.619311974034645e-05
    2. ' print' → logprob: -10.500036239624023
    3. 'print' → logprob: -11.750036239624023
    4. '   ' → logprob: -15.000036239624023
    5. '       ' → logprob: -15.750036239624023
    6. '    ' → logprob: -16.125036239624023
    7. '```' → logprob: -16.125036239624023
    8. '	print' → logprob: -17.000036239624023
    9. '   ' → logprob: -18.125036239624023
    10. ' ' → logprob: -18.375036239624023

Token 51: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36526915431022644
    2. ' print' → logprob: -1.6152691841125488
    3. 'print' (adapté à ' print') → logprob: -2.240269184112549
    4. ' ' → logprob: -7.365269184112549
    5. '    ' → logprob: -10.24026870727539
    6. '	print' → logprob: -10.86526870727539
    7. '  ' → logprob: -10.99026870727539
    8. '       ' → logprob: -11.61526870727539
    9. ''' → logprob: -12.99026870727539
    10. '```' → logprob: -13.11526870727539

Token 52: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4740851819515228
    2. '(' → logprob: -0.9740852117538452
    3. '(
' → logprob: -12.724084854125977
    4. '("' → logprob: -13.099084854125977
    5. '(False' → logprob: -14.099084854125977
    6. ''' → logprob: -14.099084854125977
    7. ')' → logprob: -14.599084854125977
    8. '()' → logprob: -15.599084854125977
    9. '(None' → logprob: -15.599084854125977
    10. '(\'' → logprob: -15.724084854125977

Token 53: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -9.710618905955926e-05
    2. ''' → logprob: -9.250097274780273
    3. 'Yes' → logprob: -14.250097274780273
    4. '')' → logprob: -15.750097274780273
    5. ' No' → logprob: -16.500097274780273
    6. ''N' → logprob: -18.000097274780273
    7. '"No' → logprob: -18.125097274780273
    8. 'N' → logprob: -18.750097274780273
    9. '>No' → logprob: -19.750097274780273
    10. ')' → logprob: -20.000097274780273

Token 54: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0031923281494528055
    2. ')' → logprob: -5.75319242477417
    3. ''' → logprob: -11.878191947937012
    4. '')
' → logprob: -13.003191947937012
    5. '")' → logprob: -13.128191947937012
    6. '```' → logprob: -13.128191947937012
    7. '}')' → logprob: -14.128191947937012
    8. ')'' → logprob: -15.878191947937012
    9. '`)' → logprob: -16.003192901611328
    10. ''))' → logprob: -16.128192901611328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 32.69%
Précision adaptée (1ère position): 32.69%
Précision (top 10): 71.15%
================================================================================
