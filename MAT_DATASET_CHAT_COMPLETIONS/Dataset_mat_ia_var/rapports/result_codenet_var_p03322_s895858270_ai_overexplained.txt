================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import random  # Importation du module random pour générer des nombres aléatoires, utile pour sélectionner aléatoirement des éléments dans une plage.
from collections import defaultdict  # Importation de defaultdict, qui est une classe du module collections. Elle permet de créer un dictionnaire avec une valeur par défaut retournée lorsque l’on demande une clé absente.

def solve(n, s, xs, m):
    # Initialisation d’une liste nommée 'ans' de taille n+1 où chaque élément a une valeur initiale très grande (10^9).
    # Ceci permet de garder en mémoire la plus petite valeur rencontrée à chaque position (i) lors des calculs.
    ans = [10 ** 9] * (n + 1)
    # Pour chaque valeur x dans la liste xs (on suppose que ce sont des bases indépendantes sélectionnées au hasard) :
    for x in xs:
        p = 0  # Initialisation de la position courante à zéro. Ceci servira à suivre le "curseur" logique sur une bande ou dans une séquence.
        h = 0  # Initialisation du hash courant à zéro. Le hash permet de conserver une valeur unique à chaque étape selon les opérations effectuées.
        y = 1  # Ceci représente la puissance courante de x modulo m, pour calculer rapidement les changements de hash selon la position.
        r = pow(x, m - 2, m)  # 'r' est l’inverse multiplicatif de x modulo m, utilisé pour "annuler" une multiplication par x lors du déplacement.
                              # pow(x, m-2, m) utilise le petit théorème de Fermat, car m est supposé premier : l’inverse de x modulo m est x^(m-2) mod m.
        pos = [0] * (n + 1)  # Liste pour mémoriser les positions du "curseur" après chaque instruction, initialisée à zéro.
        hashes = [0] * (n + 1)  # Liste pour mémoriser le hash calculé après chaque instruction, initialisée à zéro.
        # On parcourt la chaîne de caractères s caractère par caractère, avec un indice i partant de 1 (car enumerate(..., start=1))
        for i, c in enumerate(s, start=1):
            if c == '>':
                # Si le caractère est un '>', le curseur avance d’une position.
                p += 1
                # On multiplie y par x modulo m pour rester cohérent avec la nouvelle position.
                y = y * x % m
            elif c == '<':
                # Si le caractère est un '<', le curseur recule d’une position.
                p -= 1
                # On multiplie y par l’inverse de x (r) modulo m pour "annuler" un déplacement à droite précédent.
                y = y * r % m
            elif c == '+':
                # Si le caractère est un '+', on ajoute la valeur courante de y au hash h.
                h = (h + y) % m
            else:
                # Sinon (on suppose que le seul autre caractère possible ici est '-'), 
                # on enlève la valeur courante de y au hash h.
                h = (h - y) % m
            # On mémorise la position du curseur après cette opération.
            pos[i] = p
            # On mémorise la valeur du hash après cette opération.
            hashes[i] = h

        # On construit une liste des puissances de x modulo m, en partant de 1 jusqu’au maximum trouvé dans pos. 
        # Ceci permet d’accéder rapidement à x**k % m pour divers k.
        pow_x = [1]  # La première puissance, x^0, vaut 1.
        for _ in range(max(pos)):
            pow_x.append(pow_x[-1] * x % m)  # Chaque terme est le précédent multiplié par x modulo m.
        mp = min(pos)  # On récupère la position minimale atteinte par le curseur ; si négative, cela signifie qu’il faut aussi des puissances négatives.
        if mp < 0:
            # Si la position minimale est négative,
            # on stocke la puissance correspondante de r (= x^-1) pour x^-mp (puissance négative), en la calculant une fois.
            pow_x.append(pow(r, -mp, m))
            # Puis on continue la multiplication pour constituer la table complète des puissances nécessaires, si besoin.
            for _ in range(-mp - 1):
                pow_x.append(pow_x[-1] * x % m)

        # On récupère la valeur du hash idéal (après toutes les opérations) à la fin du parcours de s.
        ideal = hashes[-1]
        # On crée un dictionnaire avec valeur par défaut 0 pour compter l’occurrence des conditions requises.
        required = defaultdict(lambda: 0)
        # On parcourt les paires des positions et des hashs calculés (après chaque opération), avec l’indice i correspondant.
        for i, (p, h) in enumerate(zip(pos, hashes)):
            # On met à jour pour chaque position la plus petite valeur déjà rencontrée à cette position de hash : ans[i].
            ans[i] = min(ans[i], required[h])
            # On calcule la condition à remplir (appelée req), basée sur le hash idéal, la position courante et le hash à cet instant.
            req = (ideal * pow_x[p] + h) % m
            # On incrémente le compteur pour cette condition (req) dans le dictionnaire required.
            required[req] += 1

    # La fonction renvoie la somme de la liste ans. Cela réalise une agrégation finale des "meilleures" réponses pour chaque position.
    return sum(ans)

# Lecture d’un entier depuis l’entrée standard, ceci donne la longueur n de la séquence à traiter.
n = int(input())
# Lecture depuis l’entrée standard de la chaîne de caractères 's', cette chaîne sera traitée caractère par caractère.
s = input()

# On génère 3 grands entiers distincts, chacun dans l’intervalle [10^9, 10^10) pris au hasard et utilisés comme bases dans le hashing.
xs = random.sample(range(10 ** 9, 10 ** 10), 3)
# m est un très grand nombre premier (2^61 - 1 = 2305843009213693951). On l’utilise comme modulo pour minimiser le risque de collision des hashs.
m = 2305843009213693951
# On appelle la fonction solve avec tous les paramètres, puis on affiche le résultat retourné par solve.
print(solve(n, s, xs, m))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' random' (ID: 7526)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013727305922657251
    2. '\n' → logprob: -7.626372814178467
    3. '\' → logprob: -7.751372814178467
    4. '.random' → logprob: -8.876372337341309
    5. 'import' → logprob: -9.376372337341309
    6. '```' → logprob: -9.876372337341309
    7. ',' → logprob: -10.251372337341309
    8. ' ' → logprob: -10.376372337341309
    9. '' → logprob: -11.251372337341309
    10. 'random' → logprob: -11.376372337341309

Token 4: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06198583543300629
    2. '_' → logprob: -3.561985731124878
    3. 'import' → logprob: -4.561985969543457
    4. '.' → logprob: -5.561985969543457
    5. ' random' → logprob: -5.811985969543457
    6. '<|end|>' → logprob: -5.936985969543457
    7. '  ' → logprob: -6.186985969543457
    8. ' import' → logprob: -6.186985969543457
    9. '<|end|>' → logprob: -7.061985969543457
    10. ',' → logprob: -7.061985969543457

Token 5: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03273273631930351
    2. '(' → logprob: -4.282732963562012
    3. ' ' → logprob: -4.782732963562012
    4. '_' → logprob: -5.657732963562012
    5. '.random' → logprob: -6.907732963562012
    6. ',' → logprob: -7.032732963562012
    7. ' .' → logprob: -7.032732963562012
    8. '```' → logprob: -7.282732963562012
    9. '<|end|>' → logprob: -7.657732963562012
    10. 'random' → logprob: -7.657732963562012

Token 6: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09335080534219742
    2. '.random' → logprob: -3.468350887298584
    3. '(' → logprob: -3.968350887298584
    4. '<|end|>' → logprob: -4.718350887298584
    5. 'import' → logprob: -4.968350887298584
    6. ' ' → logprob: -5.343350887298584
    7. 'random' → logprob: -5.468350887298584
    8. '\' → logprob: -5.718350887298584
    9. ')' → logprob: -5.843350887298584
    10. '```' → logprob: -6.593350887298584

Token 7: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24792861938476562
    2. ' random' → logprob: -1.7479286193847656
    3. ' module' → logprob: -3.7479286193847656
    4. 'random' → logprob: -4.497928619384766
    5. ' hasard' → logprob: -6.247928619384766
    6. '  ' → logprob: -6.372928619384766
    7. 'module' → logprob: -6.747928619384766
    8. '_' → logprob: -7.122928619384766
    9. ' space' → logprob: -7.497928619384766
    10. ' os' → logprob: -7.622928619384766

Token 8: ' random' (ID: 7526)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2827441692352295
    2. ' ' → logprob: -2.2827441692352295
    3. 'import' → logprob: -3.1577441692352295
    4. 'random' → logprob: -4.157744407653809
    5. '.random' → logprob: -4.282744407653809
    6. '\' → logprob: -4.282744407653809
    7. '<|end|>' → logprob: -4.282744407653809
    8. ',' → logprob: -4.532744407653809
    9. '\n' → logprob: -4.782744407653809
    10. '```' → logprob: -5.157744407653809

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13751265406608582
    2. ' ' → logprob: -3.637512683868408
    3. '\' → logprob: -3.762512683868408
    4. '
' → logprob: -4.012512683868408
    5. '' → logprob: -4.137512683868408
    6. '\n' → logprob: -4.512512683868408
    7. 'import' → logprob: -4.762512683868408
    8. '<|end|>' → logprob: -4.762512683868408
    9. '```' → logprob: -6.137512683868408
    10. ',' → logprob: -6.137512683868408

Token 10: ' génér' (ID: 18939)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4662719964981079
    2. ' génér' → logprob: -1.591271996498108
    3. ' la' → logprob: -2.4662718772888184
    4. ' choisir' → logprob: -3.4662718772888184
    5. 'la' → logprob: -3.8412718772888184
    6. 'cho' → logprob: -5.341271877288818
    7. ' ' → logprob: -5.341271877288818
    8. 'gener' → logprob: -5.716271877288818
    9. ' gérer' → logprob: -6.091271877288818
    10. ' sélectionner' → logprob: -6.216271877288818

Token 11: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0477968230843544
    2. 'ation' → logprob: -3.1727967262268066
    3. 'ate' → logprob: -5.922796726226807
    4. 'ateur' → logprob: -6.922796726226807
    5. 'ating' → logprob: -7.797796726226807
    6. 'al' → logprob: -7.797796726226807
    7. 'at' → logprob: -9.172797203063965
    8. 'ator' → logprob: -9.922797203063965
    9. 'érer' → logprob: -10.797797203063965
    10. '#' → logprob: -10.922797203063965

Token 12: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20663627982139587
    2. ' des' → logprob: -1.9566363096237183
    3. 'des' → logprob: -3.7066361904144287
    4. '  ' → logprob: -4.456636428833008
    5. '_' → logprob: -5.706636428833008
    6. 'import' → logprob: -7.206636428833008
    7. ' ' → logprob: -7.456636428833008
    8. 'e' → logprob: -7.706636428833008
    9. 's' → logprob: -7.956636428833008
    10. '()' → logprob: -8.081636428833008

Token 13: ' nombres' (ID: 76205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6775383353233337
    2. ' nombres' → logprob: -0.9275383353233337
    3. '_' → logprob: -2.9275383949279785
    4. ' espaces' → logprob: -3.4275383949279785
    5. 'nombre' → logprob: -5.5525383949279785
    6. '_n' → logprob: -6.8025383949279785
    7. ' nombre' → logprob: -6.9275383949279785
    8. '_nombre' → logprob: -6.9275383949279785
    9. 'n' → logprob: -7.3025383949279785
    10. ' ' → logprob: -7.3025383949279785

Token 14: ' al' (ID: 434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3494901955127716
    2. 'import' → logprob: -1.8494901657104492
    3. '.' → logprob: -2.849490165710449
    4. ' ' → logprob: -3.474490165710449
    5. ',' → logprob: -4.599490165710449
    6. ')' → logprob: -4.599490165710449
    7. 's' → logprob: -4.724490165710449
    8. '```' → logprob: -5.974490165710449
    9. '' → logprob: -6.099490165710449
    10. '(' → logprob: -6.349490165710449

Token 15: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0001314295077463612
    2. 'éas' → logprob: -9.500131607055664
    3. 'e' → logprob: -10.000131607055664
    4. '&eacute' → logprob: -13.375131607055664
    5. 'és' → logprob: -13.500131607055664
    6. '\u' → logprob: -13.750131607055664
    7. '�' → logprob: -14.000131607055664
    8. 'ée' → logprob: -14.625131607055664
    9. 'éan' → logprob: -14.750131607055664
    10. '\' → logprob: -14.750131607055664

Token 16: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.006468210369348526
    2. 'atoire' → logprob: -5.506468296051025
    3. 'a' → logprob: -7.006468296051025
    4. 'at' → logprob: -8.381467819213867
    5. 'atri' → logprob: -8.631467819213867
    6. 'au' → logprob: -9.381467819213867
    7. '_' → logprob: -9.381467819213867
    8. 'ato' → logprob: -9.381467819213867
    9. 'otiques' → logprob: -9.381467819213867
    10. '```' → logprob: -9.631467819213867

Token 17: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7624413371086121
    2. '\n' → logprob: -1.5124413967132568
    3. '\' → logprob: -2.012441396713257
    4. 'import' → logprob: -2.762441396713257
    5. '.' → logprob: -3.512441396713257
    6. '

' → logprob: -3.512441396713257
    7. '' → logprob: -3.887441396713257
    8. ' ' → logprob: -4.762441158294678
    9. '
' → logprob: -5.387441158294678
    10. '```' → logprob: -5.762441158294678

Token 18: ' utile' (ID: 68237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18961508572101593
    2. 'import' → logprob: -1.9396151304244995
    3. ',' → logprob: -5.064615249633789
    4. '  
' → logprob: -5.189615249633789
    5. '<|end|>' → logprob: -6.064615249633789
    6. ' 
' → logprob: -6.064615249633789
    7. ' ,' → logprob: -6.189615249633789
    8. '
' → logprob: -6.439615249633789
    9. ' import' → logprob: -6.939615249633789
    10. ' 

' → logprob: -7.064615249633789

Token 19: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03210493549704552
    2. ' pour' → logprob: -4.532104969024658
    3. 'import' → logprob: -5.282104969024658
    4. '.' → logprob: -5.782104969024658
    5. 's' → logprob: -5.782104969024658
    6. ',' → logprob: -5.907104969024658
    7. '  ' → logprob: -6.657104969024658
    8. '_' → logprob: -7.282104969024658
    9. ' for' → logprob: -7.282104969024658
    10. 'pour' → logprob: -7.407104969024658

Token 20: ' sélectionner' (ID: 188432)
  Prédit: ' sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sim' → logprob: -0.22105582058429718
    2. ' la' → logprob: -2.721055746078491
    3. ' les' → logprob: -3.596055746078491
    4. ' choisir' → logprob: -3.846055746078491
    5. ' créer' → logprob: -4.09605598449707
    6. ' des' → logprob: -4.22105598449707
    7. ' le' → logprob: -4.72105598449707
    8. ' ' → logprob: -5.09605598449707
    9. ' sélectionner' → logprob: -5.09605598449707
    10. 'la' → logprob: -5.47105598449707

Token 21: ' al' (ID: 434)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15892404317855835
    2. '_' → logprob: -2.283924102783203
    3. ' des' → logprob: -4.033924102783203
    4. 'des' → logprob: -4.533924102783203
    5. ' un' → logprob: -6.033924102783203
    6. ' une' → logprob: -6.033924102783203
    7. '  ' → logprob: -6.283924102783203
    8. ' ' → logprob: -6.408924102783203
    9. 'une' → logprob: -6.783924102783203
    10. 'le' → logprob: -6.783924102783203

Token 22: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.004515208303928375
    2. 'e' → logprob: -6.504515171051025
    3. 'éas' → logprob: -6.629515171051025
    4. '_' → logprob: -7.129515171051025
    5. '\'' → logprob: -9.629515647888184
    6. 'ément' → logprob: -9.754515647888184
    7. 'és' → logprob: -9.754515647888184
    8. '__' → logprob: -9.879515647888184
    9. '```' → logprob: -10.004515647888184
    10. '{' → logprob: -10.004515647888184

Token 23: 'ato' (ID: 2754)
  Prédit: 'ato'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ato' → logprob: -0.7464559078216553
    2. 'atoires' → logprob: -1.1214559078216553
    3. 'atoire' → logprob: -1.7464559078216553
    4. 'a' → logprob: -3.9964559078216553
    5. '_' → logprob: -5.621456146240234
    6. '```' → logprob: -6.996456146240234
    7. 'é' → logprob: -7.496456146240234
    8. 'atori' → logprob: -7.871456146240234
    9. 'atoi' → logprob: -8.621456146240234
    10. '{' → logprob: -8.746456146240234

Token 24: 'irement' (ID: 19343)
  Prédit: 'irement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irement' → logprob: -0.026363003998994827
    2. 'ri' → logprob: -4.901362895965576
    3. 'ir' → logprob: -5.276362895965576
    4. 'rement' → logprob: -5.901362895965576
    5. 'r' → logprob: -6.026362895965576
    6. '```' → logprob: -6.401362895965576
    7. 'ire' → logprob: -6.776362895965576
    8. 'urement' → logprob: -6.776362895965576
    9. 'ires' → logprob: -7.526362895965576
    10. 'u' → logprob: -7.651362895965576

Token 25: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4620944857597351
    2. '_' → logprob: -1.2120945453643799
    3. ' des' → logprob: -2.96209454536438
    4. 'des' → logprob: -4.462094306945801
    5. ' un' → logprob: -6.337094306945801
    6. 'import' → logprob: -6.962094306945801
    7. '_des' → logprob: -7.462094306945801
    8. 'un' → logprob: -7.587094306945801
    9. '  ' → logprob: -7.587094306945801
    10. ' ' → logprob: -7.837094306945801

Token 26: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.23398247361183167
    2. 'm' → logprob: -2.358982563018799
    3. ' éléments' → logprob: -3.358982563018799
    4. 'car' → logprob: -4.358982563018799
    5. ' mots' → logprob: -4.608982563018799
    6. 'cho' → logprob: -4.733982563018799
    7. 'items' → logprob: -5.733982563018799
    8. 'é' → logprob: -6.108982563018799
    9. 's' → logprob: -6.108982563018799
    10. 'cart' → logprob: -6.233982563018799

Token 27: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7802964448928833
    2. '.' → logprob: -1.9052964448928833
    3. '' → logprob: -2.5302963256835938
    4. '\' → logprob: -2.6552963256835938
    5. ',' → logprob: -2.7802963256835938
    6. '
' → logprob: -2.7802963256835938
    7. '\n' → logprob: -3.0302963256835938
    8. '#' → logprob: -3.5302963256835938
    9. 'import' → logprob: -4.780296325683594
    10. '_' → logprob: -5.030296325683594

Token 28: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.46557730436325073
    2. ' une' → logprob: -1.3405773639678955
    3. ' des' → logprob: -2.9655773639678955
    4. ' la' → logprob: -3.4655773639678955
    5. 'la' → logprob: -4.340577125549316
    6. 'les' → logprob: -5.465577125549316
    7. 'des' → logprob: -5.715577125549316
    8. ' les' → logprob: -5.715577125549316
    9. 'le' → logprob: -7.465577125549316
    10. 'l' → logprob: -7.590577125549316

Token 29: ' plage' (ID: 78241)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.945307731628418
    2. ' ' → logprob: -1.445307731628418
    3. 'liste' → logprob: -2.320307731628418
    4. ' list' → logprob: -2.820307731628418
    5. ' string' → logprob: -2.820307731628418
    6. ' phrase' → logprob: -3.570307731628418
    7. 'chaine' → logprob: -3.695307731628418
    8. ' chaîne' → logprob: -3.945307731628418
    9. 'list' → logprob: -4.070307731628418
    10. 's' → logprob: -4.445307731628418

Token 30: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7112777829170227
    2. '
' → logprob: -1.586277723312378
    3. '' → logprob: -1.961277723312378
    4. '\' → logprob: -2.086277723312378
    5. ' ' → logprob: -4.711277961730957
    6. '

' → logprob: -4.961277961730957
    7. '.' → logprob: -5.461277961730957
    8. ',' → logprob: -5.711277961730957
    9. 'n' → logprob: -5.836277961730957
    10. '#' → logprob: -5.836277961730957

Token 31: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5143778920173645
    2. '' → logprob: -2.0143778324127197
    3. '\n' → logprob: -2.6393778324127197
    4. '

' → logprob: -2.6393778324127197
    5. ' ' → logprob: -3.0143778324127197
    6. '.' → logprob: -3.7643778324127197
    7. '\' → logprob: -4.139378070831299
    8. ' 

' → logprob: -4.889378070831299
    9. ',' → logprob: -5.264378070831299
    10. '#' → logprob: -5.389378070831299

Token 32: ' collections' (ID: 22690)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.7276782393455505
    2. ' ' → logprob: -0.8526782393455505
    3. ' datetime' → logprob: -3.4776782989501953
    4. ' collections' → logprob: -3.8526782989501953
    5. ' numpy' → logprob: -4.727678298950195
    6. 'random' → logprob: -4.977678298950195
    7. ' math' → logprob: -5.102678298950195
    8. ' sklearn' → logprob: -5.477678298950195
    9. ' space' → logprob: -5.727678298950195
    10. ' itertools' → logprob: -5.977678298950195

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11284924298524857
    2. 'import' → logprob: -2.237849235534668
    3. ' ' → logprob: -11.112849235534668
    4. '.' → logprob: -12.487849235534668
    5. ' defaultdict' → logprob: -13.487849235534668
    6. '	import' → logprob: -13.862849235534668
    7. ' impor' → logprob: -13.987849235534668
    8. ' ' → logprob: -14.737849235534668
    9. '```' → logprob: -14.737849235534668
    10. ' importar' → logprob: -14.737849235534668

Token 34: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.23465566337108612
    2. ' deque' → logprob: -1.7346556186676025
    3. ' named' → logprob: -4.234655857086182
    4. ' Counter' → logprob: -4.359655857086182
    5. 'deque' → logprob: -5.609655857086182
    6. ' abc' → logprob: -7.109655857086182
    7. 'named' → logprob: -8.109655380249023
    8. ' import' → logprob: -8.484655380249023
    9. 'Counter' → logprob: -8.984655380249023
    10. 'default' → logprob: -9.359655380249023

Token 35: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5615731477737427
    2. ' 

' → logprob: -0.9365731477737427
    3. '
' → logprob: -3.811573028564453
    4. '  

' → logprob: -5.686573028564453
    5. '<|end|>' → logprob: -5.936573028564453
    6. 'import' → logprob: -6.186573028564453
    7. ' 
' → logprob: -6.311573028564453
    8. ' 
 
' → logprob: -6.561573028564453
    9. '  
  
' → logprob: -6.811573028564453
    10. '


' → logprob: -7.436573028564453

Token 36: ' #' (ID: 1069)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.6177214980125427
    2. ' ' → logprob: -1.8677215576171875
    3. '

' → logprob: -2.4927215576171875
    4. '<|end|>' → logprob: -2.8677215576171875
    5. 'import' → logprob: -2.9927215576171875
    6. '
' → logprob: -3.3677215576171875
    7. ' 
' → logprob: -3.3677215576171875
    8. ' 
 
' → logprob: -3.9927215576171875
    9. '  
  
' → logprob: -4.8677215576171875
    10. ' 


' → logprob: -4.9927215576171875

Token 37: ' Import' (ID: 19998)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09962835907936096
    2. ' ' → logprob: -2.974628448486328
    3. ' ' → logprob: -4.224628448486328
    4. ' collections' → logprob: -4.474628448486328
    5. ' defaultdict' → logprob: -5.349628448486328
    6. ' espace' → logprob: -5.599628448486328
    7. 'import' → logprob: -5.849628448486328
    8. ' space' → logprob: -6.349628448486328
    9. ' Import' → logprob: -6.724628448486328
    10. 'space' → logprob: -6.974628448486328

Token 38: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3950062692165375
    2. ' ' → logprob: -2.0200061798095703
    3. ' defaultdict' → logprob: -2.3950061798095703
    4. ' random' → logprob: -2.6450061798095703
    5. ' ' → logprob: -4.77000617980957
    6. 'er' → logprob: -5.02000617980957
    7. ' collections' → logprob: -5.27000617980957
    8. ' des' → logprob: -6.14500617980957
    9. ' itertools' → logprob: -6.14500617980957
    10. 'random' → logprob: -7.52000617980957

Token 39: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015752100152894855
    2. ' defaultdict' → logprob: -7.251574993133545
    3. '<|end|>' → logprob: -7.751574993133545
    4. '  ' → logprob: -8.876575469970703
    5. ' collections' → logprob: -9.501575469970703
    6. ' ' → logprob: -10.126575469970703
    7. ' de' → logprob: -10.251575469970703
    8. ' des' → logprob: -10.501575469970703
    9. ' ‌' → logprob: -11.126575469970703
    10. ' import' → logprob: -11.126575469970703

Token 40: ' defaultdict' (ID: 107098)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2293914556503296
    2. ' ' → logprob: -1.7293914556503296
    3. 'collections' → logprob: -3.729391574859619
    4. ' collection' → logprob: -6.729391574859619
    5. ' defaultdict' → logprob: -6.854391574859619
    6. ' ' → logprob: -7.604391574859619
    7. '  ' → logprob: -8.854391098022461
    8. ' random' → logprob: -9.229391098022461
    9. ' cole' → logprob: -9.479391098022461
    10. ' itertools' → logprob: -9.854391098022461

Token 41: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031613271683454514
    2. ' which' → logprob: -4.656613349914551
    3. ' qui' → logprob: -5.156613349914551
    4. '<|end|>' → logprob: -5.281613349914551
    5. ' un' → logprob: -6.156613349914551
    6. ' afin' → logprob: -6.781613349914551
    7. ' ,' → logprob: -7.281613349914551
    8. ' collections' → logprob: -7.406613349914551
    9. ' import' → logprob: -7.406613349914551
    10. '  ' → logprob: -7.531613349914551

Token 43: ' est' (ID: 893)
  Prédit: ' facilite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facilite' → logprob: -0.49904292821884155
    2. ' permet' → logprob: -0.9990429282188416
    3. ' fournit' → logprob: -5.249042987823486
    4. ' est' → logprob: -5.499042987823486
    5. 'simpl' → logprob: -5.624042987823486
    6. ' offre' → logprob: -5.999042987823486
    7. ' crée' → logprob: -6.124042987823486
    8. ' ' → logprob: -6.874042987823486
    9. 'fac' → logprob: -6.874042987823486
    10. ' facilit' → logprob: -7.249042987823486

Token 44: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.47643640637397766
    2. ' un' → logprob: -0.9764363765716553
    3. ' a' → logprob: -7.226436614990234
    4. 'une' → logprob: -7.351436614990234
    5. 'un' → logprob: -7.476436614990234
    6. ' dict' → logprob: -8.476436614990234
    7. ' utile' → logprob: -9.476436614990234
    8. 'dict' → logprob: -10.226436614990234
    9. ' utilisé' → logprob: -10.226436614990234
    10. 'a' → logprob: -10.601436614990234

Token 45: ' classe' (ID: 29329)
  Prédit: ' dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dict' → logprob: -0.11269674450159073
    2. 'dict' → logprob: -3.362696647644043
    3. ' structure' → logprob: -3.737696647644043
    4. ' diction' → logprob: -4.237696647644043
    5. ' dictionary' → logprob: -4.737696647644043
    6. 's' → logprob: -5.362696647644043
    7. ' version' → logprob: -5.612696647644043
    8. ' variante' → logprob: -5.987696647644043
    9. 'd' → logprob: -6.112696647644043
    10. ' collection' → logprob: -6.362696647644043

Token 46: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0028975009918213
    2. ' ' → logprob: -1.2528975009918213
    3. ' qui' → logprob: -2.0028975009918213
    4. ' permettant' → logprob: -2.8778975009918213
    5. ' d' → logprob: -3.2528975009918213
    6. ' du' → logprob: -3.3778975009918213
    7. '<|end|>' → logprob: -4.002897262573242
    8. ' dict' → logprob: -4.127897262573242
    9. ' defaultdict' → logprob: -4.252897262573242
    10. 'dict' → logprob: -4.752897262573242

Token 47: ' module' (ID: 8827)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.05495935305953026
    2. 'collections' → logprob: -3.179959297180176
    3. ' collection' → logprob: -4.804959297180176
    4. ' ' → logprob: -6.304959297180176
    5. ' module' → logprob: -7.179959297180176
    6. '```' → logprob: -8.554959297180176
    7. ' ' → logprob: -9.054959297180176
    8. 's' → logprob: -9.179959297180176
    9. ' built' → logprob: -9.179959297180176
    10. ' code' → logprob: -9.304959297180176

Token 48: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.05062498152256012
    2. 'collections' → logprob: -3.0506250858306885
    3. ' ' → logprob: -6.925624847412109
    4. ' collection' → logprob: -7.050624847412109
    5. ' cole' → logprob: -9.92562484741211
    6. ' random' → logprob: -10.67562484741211
    7. ' ' → logprob: -10.92562484741211
    8. ' Python' → logprob: -10.92562484741211
    9. 'collection' → logprob: -11.30062484741211
    10. ' defaultdict' → logprob: -11.30062484741211

Token 49: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' Elle' (ID: 21300)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3164571225643158
    2. '
' → logprob: -1.6914571523666382
    3. ' 

' → logprob: -2.6914570331573486
    4. 'import' → logprob: -5.191457271575928
    5. '<|end|>' → logprob: -5.441457271575928
    6. '```' → logprob: -5.566457271575928
    7. '  

' → logprob: -6.441457271575928
    8. '\n' → logprob: -6.566457271575928
    9. '


' → logprob: -7.441457271575928
    10. ' ' → logprob: -7.691457271575928

Token 51: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.7659584879875183
    2. ' facilite' → logprob: -1.515958547592163
    3. ' fournit' → logprob: -2.390958547592163
    4. ' ' → logprob: -2.515958547592163
    5. ' offre' → logprob: -3.265958547592163
    6. '<|end|>' → logprob: -3.265958547592163
    7. ' provides' → logprob: -4.265958309173584
    8. ' est' → logprob: -4.515958309173584
    9. ' a' → logprob: -5.265958309173584
    10. ' defaultdict' → logprob: -5.265958309173584

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40289804339408875
    2. ' d' → logprob: -1.6528980731964111
    3. 'd' → logprob: -2.652898073196411
    4. ' ' → logprob: -3.402898073196411
    5. 'de' → logprob: -3.402898073196411
    6. 't' → logprob: -7.777897834777832
    7. '	d' → logprob: -7.777897834777832
    8. ' la' → logprob: -8.152897834777832
    9. '	' → logprob: -8.402897834777832
    10. '  ' → logprob: -8.527897834777832

Token 53: ' créer' (ID: 40938)
  Prédit: ' créer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.32196736335754395
    2. 'cr' → logprob: -1.321967363357544
    3. 'simpl' → logprob: -5.946967124938965
    4. ' faciliter' → logprob: -6.571967124938965
    5. 'cré' → logprob: -6.821967124938965
    6. ' fournir' → logprob: -6.946967124938965
    7. ' gérer' → logprob: -7.446967124938965
    8. 'Créer' → logprob: -7.446967124938965
    9. 'fac' → logprob: -8.071967124938965
    10. 'cre' → logprob: -8.446967124938965

Token 54: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5408304333686829
    2. ' ' → logprob: -1.040830373764038
    3. ' un' → logprob: -3.040830373764038
    4. 's' → logprob: -4.790830612182617
    5. 'des' → logprob: -5.790830612182617
    6. '<|end|>' → logprob: -6.165830612182617
    7. ' defaultdict' → logprob: -6.915830612182617
    8. ' une' → logprob: -7.165830612182617
    9. ' dict' → logprob: -7.915830612182617
    10. 'dict' → logprob: -8.665830612182617

Token 55: ' diction' (ID: 155259)
  Prédit: ' diction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diction' → logprob: -0.21075952053070068
    2. 'd' → logprob: -1.9607595205307007
    3. ' dict' → logprob: -3.4607596397399902
    4. 'dict' → logprob: -4.46075963973999
    5. ' d' → logprob: -6.08575963973999
    6. ' dictionary' → logprob: -6.33575963973999
    7. 's' → logprob: -6.71075963973999
    8. ' defaultdict' → logprob: -7.83575963973999
    9. 'dictionary' → logprob: -8.835759162902832
    10. ' ' → logprob: -9.085759162902832

Token 56: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.5532737374305725
    2. 'ary' → logprob: -0.9282737374305725
    3. 'ar' → logprob: -3.9282736778259277
    4. 'aire' → logprob: -5.553273677825928
    5. 'naires' → logprob: -5.553273677825928
    6. 'a' → logprob: -7.178273677825928
    7. '   ' → logprob: -8.053274154663086
    8. 'arys' → logprob: -8.303274154663086
    9. 'aires' → logprob: -8.553274154663086
    10. '{"' → logprob: -8.803274154663086

Token 57: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8499031662940979
    2. '<|end|>' → logprob: -0.8499031662940979
    3. 's' → logprob: -2.099903106689453
    4. ' où' → logprob: -4.599903106689453
    5. ' avec' → logprob: -5.599903106689453
    6. 'où' → logprob: -6.224903106689453
    7. ' qui' → logprob: -6.474903106689453
    8. ' where' → logprob: -6.474903106689453
    9. ' with' → logprob: -7.099903106689453
    10. '<|end|>' → logprob: -7.599903106689453

Token 58: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1911485493183136
    2. ' une' → logprob: -2.316148519515991
    3. ' des' → logprob: -3.191148519515991
    4. 'un' → logprob: -4.06614875793457
    5. '<|end|>' → logprob: -4.44114875793457
    6. 'des' → logprob: -5.94114875793457
    7. 'une' → logprob: -6.44114875793457
    8. '	un' → logprob: -8.19114875793457
    9. 'a' → logprob: -8.44114875793457
    10. ' a' → logprob: -9.31614875793457

Token 59: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8371752500534058
    2. 'fonction' → logprob: -1.2121752500534058
    3. ' valeur' → logprob: -2.0871753692626953
    4. ' fonction' → logprob: -2.9621753692626953
    5. ' type' → logprob: -3.3371753692626953
    6. ' default' → logprob: -4.462175369262695
    7. ' défaut' → logprob: -4.587175369262695
    8. 'default' → logprob: -4.587175369262695
    9. 'type' → logprob: -5.087175369262695
    10. 'f' → logprob: -5.462175369262695

Token 60: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.43700850009918213
    2. '<|end|>' → logprob: -1.1870085000991821
    3. 'par' → logprob: -3.5620083808898926
    4. '_par' → logprob: -4.312008380889893
    5. ' ' → logprob: -5.937008380889893
    6. ' initial' → logprob: -6.687008380889893
    7. 's' → logprob: -6.812008380889893
    8. ' de' → logprob: -7.562008380889893
    9. '_initial' → logprob: -8.43700885772705
    10. '_' → logprob: -8.43700885772705

Token 61: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.013026338070631027
    2. ' défaut' → logprob: -4.763026237487793
    3. 'd' → logprob: -6.513026237487793
    4. 'f' → logprob: -6.513026237487793
    5. 'def' → logprob: -7.263026237487793
    6. 'Dé' → logprob: -8.388026237487793
    7. 'éf' → logprob: -8.763026237487793
    8. 'default' → logprob: -9.263026237487793
    9. '-' → logprob: -10.263026237487793
    10. '	d' → logprob: -10.388026237487793

Token 62: ' retourn' (ID: 150215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01448231190443039
    2. 'é' → logprob: -4.389482498168945
    3. 'ant' → logprob: -6.264482498168945
    4. 'ées' → logprob: -10.889482498168945
    5. 'ee' → logprob: -11.139482498168945
    6. 'er' → logprob: -11.389482498168945
    7. '```' → logprob: -11.764482498168945
    8. 'e' → logprob: -12.014482498168945
    9. 'É' → logprob: -13.389482498168945
    10. ' é' → logprob: -13.514482498168945

Token 64: ' lorsque' (ID: 39361)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1851353645324707
    2. ' ' → logprob: -1.5601353645324707
    3. ' si' → logprob: -1.9351353645324707
    4. 'es' → logprob: -2.6851353645324707
    5. 'e' → logprob: -2.8101353645324707
    6. ' pour' → logprob: -3.1851353645324707
    7. ' lors' → logprob: -3.3101353645324707
    8. ' lorsqu' → logprob: -3.6851353645324707
    9. 'si' → logprob: -4.185135364532471
    10. 'au' → logprob: -4.185135364532471

Token 65: ' l' (ID: 305)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.05872597545385361
    2. 'une' → logprob: -2.9337260723114014
    3. ' on' → logprob: -5.933725833892822
    4. ' la' → logprob: -8.05872631072998
    5. 'la' → logprob: -8.43372631072998
    6. 'on' → logprob: -8.55872631072998
    7. ''une' → logprob: -8.68372631072998
    8. ' ' → logprob: -9.43372631072998
    9. 'a' → logprob: -9.68372631072998
    10. 'auc' → logprob: -10.55872631072998

Token 66: '’on' (ID: 25036)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6512113213539124
    2. 'e' → logprob: -1.6512112617492676
    3. ''on' → logprob: -2.0262112617492676
    4. ''accès' → logprob: -2.9012112617492676
    5. ' on' → logprob: -3.5262112617492676
    6. ' clé' → logprob: -4.401211261749268
    7. ''utilisateur' → logprob: -4.901211261749268
    8. 'on' → logprob: -5.026211261749268
    9. 'clé' → logprob: -5.151211261749268
    10. ' accès' → logprob: -5.401211261749268

Token 67: ' demande' (ID: 26737)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.1538449227809906
    2. 'access' → logprob: -2.9038448333740234
    3. ' acc' → logprob: -3.7788448333740234
    4. ' tente' → logprob: -3.7788448333740234
    5. 'essa' → logprob: -4.153844833374023
    6. ' essa' → logprob: -4.528844833374023
    7. 'ess' → logprob: -5.028844833374023
    8. 'fait' → logprob: -6.653844833374023
    9. 's' → logprob: -6.778844833374023
    10. ' essay' → logprob: -7.028844833374023

Token 68: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.023906821385025978
    2. 'une' → logprob: -4.148906707763672
    3. ' un' → logprob: -5.148906707763672
    4. 'a' → logprob: -7.148906707763672
    5. 'un' → logprob: -7.523906707763672
    6. 'Une' → logprob: -8.898906707763672
    7. ' ' → logprob: -9.148906707763672
    8. ''une' → logprob: -9.398906707763672
    9. 's' → logprob: -9.773906707763672
    10. ' a' → logprob: -10.148906707763672

Token 69: ' clé' (ID: 83188)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.04918495565652847
    2. ' clé' → logprob: -3.299185037612915
    3. 'élé' → logprob: -5.299184799194336
    4. ' ' → logprob: -5.799184799194336
    5. 'é' → logprob: -7.049184799194336
    6. 'cle' → logprob: -7.299184799194336
    7. 'cl' → logprob: -7.299184799194336
    8. 'e' → logprob: -8.799184799194336
    9. 'c' → logprob: -8.924184799194336
    10. ' clés' → logprob: -10.049184799194336

Token 70: ' abs' (ID: 8443)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.7759037017822266
    2. 'qui' → logprob: -1.5259037017822266
    3. 'abs' → logprob: -2.2759037017822266
    4. ' non' → logprob: -2.9009037017822266
    5. 'non' → logprob: -3.5259037017822266
    6. '```' → logprob: -3.7759037017822266
    7. ' abs' → logprob: -4.275903701782227
    8. ' ' → logprob: -4.275903701782227
    9. ' that' → logprob: -4.400903701782227
    10. 'in' → logprob: -4.900903701782227

Token 71: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00016837897419463843
    2. 'ent' → logprob: -10.125168800354004
    3. 'entes' → logprob: -10.500168800354004
    4. '
' → logprob: -10.625168800354004
    5. 'e' → logprob: -10.875168800354004
    6. '#' → logprob: -11.250168800354004
    7. 'cente' → logprob: -12.375168800354004
    8. '

' → logprob: -12.500168800354004
    9. 'ENTE' → logprob: -12.625168800354004
    10. 'ence' → logprob: -12.625168800354004

Token 72: '.

' (ID: 364)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24577374756336212
    2. '
' → logprob: -2.3707737922668457
    3. ' 

' → logprob: -2.3707737922668457
    4. 'import' → logprob: -5.120773792266846
    5. '


' → logprob: -5.495773792266846
    6. '\n' → logprob: -5.870773792266846
    7. '' → logprob: -5.870773792266846
    8. '

' → logprob: -5.995773792266846
    9. '  

' → logprob: -6.370773792266846
    10. '
' → logprob: -6.495773792266846

Token 73: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0119117498397827
    2. '

' → logprob: -1.1369117498397827
    3. 'd' → logprob: -1.8869117498397827
    4. '#' → logprob: -2.6369118690490723
    5. 'class' → logprob: -3.1369118690490723
    6. 'c' → logprob: -4.261911869049072
    7. '' → logprob: -4.511911869049072
    8. 'def' → logprob: -5.136911869049072
    9. '


' → logprob: -5.511911869049072
    10. 'n' → logprob: -5.636911869049072

Token 74: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0029290912207216024
    2. ' random' → logprob: -6.002929210662842
    3. '_' → logprob: -8.377928733825684
    4. ' space' → logprob: -9.377928733825684
    5. ' generate' → logprob: -10.502928733825684
    6. ' ' → logprob: -10.627928733825684
    7. ' my' → logprob: -10.627928733825684
    8. ' a' → logprob: -11.627928733825684
    9. ' ```' → logprob: -12.252928733825684
    10. '_random' → logprob: -12.377928733825684

Token 75: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0711454227566719
    2. '_' → logprob: -2.696145534515381
    3. ' (' → logprob: -7.071145534515381
    4. ':' → logprob: -9.946145057678223
    5. ')' → logprob: -9.946145057678223
    6. '(_' → logprob: -9.946145057678223
    7. '(
' → logprob: -9.946145057678223
    8. ' _' → logprob: -11.321145057678223
    9. '):' → logprob: -11.321145057678223
    10. '```' → logprob: -11.321145057678223

Token 76: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6468568444252014
    2. ',' → logprob: -1.1468567848205566
    3. ')' → logprob: -1.8968567848205566
    4. ':' → logprob: -4.771856784820557
    5. ' ):' → logprob: -9.396857261657715
    6. '=' → logprob: -11.146857261657715
    7. ' ,' → logprob: -11.271857261657715
    8. ',
' → logprob: -11.396857261657715
    9. ' )' → logprob: -11.771857261657715
    10. 's' → logprob: -11.896857261657715

Token 77: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6632741689682007
    2. 'm' → logprob: -1.6632741689682007
    3. ' k' → logprob: -1.7882741689682007
    4. ' m' → logprob: -1.9132741689682007
    5. ' numbers' → logprob: -3.2882742881774902
    6. ' arr' → logprob: -3.7882742881774902
    7. ' a' → logprob: -3.7882742881774902
    8. 'a' → logprob: -3.7882742881774902
    9. 'arr' → logprob: -3.9132742881774902
    10. ' data' → logprob: -4.16327428817749

Token 78: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021605845540761948
    2. ',' → logprob: -4.521605968475342
    3. ')' → logprob: -4.646605968475342
    4. ':' → logprob: -7.396605968475342
    5. ' ):' → logprob: -9.021605491638184
    6. '[' → logprob: -10.021605491638184
    7. 's' → logprob: -10.521605491638184
    8. '_' → logprob: -10.521605491638184
    9. '=' → logprob: -10.771605491638184
    10. '):
' → logprob: -11.896605491638184

Token 79: ' xs' (ID: 26642)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.1595171689987183
    2. 'k' → logprob: -2.034517288208008
    3. ' m' → logprob: -2.159517288208008
    4. 'm' → logprob: -2.909517288208008
    5. ' a' → logprob: -3.034517288208008
    6. ' p' → logprob: -3.159517288208008
    7. ' d' → logprob: -3.159517288208008
    8. ' t' → logprob: -3.284517288208008
    9. ' l' → logprob: -3.847017288208008
    10. 'd' → logprob: -4.097017288208008

Token 80: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011711729690432549
    2. ',' → logprob: -4.636711597442627
    3. ')' → logprob: -6.511711597442627
    4. ' ):' → logprob: -8.136712074279785
    5. ':' → logprob: -9.636712074279785
    6. 's' → logprob: -9.886712074279785
    7. '_list' → logprob: -11.386712074279785
    8. '[' → logprob: -11.386712074279785
    9. '[]):' → logprob: -11.636712074279785
    10. '):
' → logprob: -12.011712074279785

Token 81: ' m' (ID: 284)
  Prédit: ' ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.36142149567604065
    2. 'ys' → logprob: -1.3614214658737183
    3. ' k' → logprob: -4.361421585083008
    4. 'k' → logprob: -5.236421585083008
    5. ' m' → logprob: -5.923921585083008
    6. ' ts' → logprob: -6.173921585083008
    7. ' ks' → logprob: -6.236421585083008
    8. 'cs' → logprob: -6.423921585083008
    9. 'm' → logprob: -6.736421585083008
    10. ' a' → logprob: -6.861421585083008

Token 82: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5363913774490356
    2. '):' → logprob: -0.9113913774490356
    3. ')' → logprob: -4.411391258239746
    4. 's' → logprob: -7.536391258239746
    5. '=' → logprob: -8.536391258239746
    6. ' ):' → logprob: -9.036391258239746
    7. ':' → logprob: -10.911391258239746
    8. ',s' → logprob: -10.911391258239746
    9. ' ,' → logprob: -11.161391258239746
    10. 'a' → logprob: -11.161391258239746

Token 83: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035717925056815147
    2. ' :' → logprob: -6.0035719871521
    3. '):' → logprob: -7.5035719871521
    4. '   ' → logprob: -8.253571510314941
    5. ',' → logprob: -9.128571510314941
    6. ':
' → logprob: -9.503571510314941
    7. ')' → logprob: -10.628571510314941
    8. '    ' → logprob: -11.003571510314941
    9. ' ' → logprob: -11.628571510314941
    10. ':**' → logprob: -12.003571510314941

Token 84: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8367782831192017
    2. ' ' → logprob: -1.3367782831192017
    3. '   ' → logprob: -2.586778163909912
    4. 'd' → logprob: -3.461778163909912
    5. '    
' → logprob: -3.586778163909912
    6. '
' → logprob: -3.836778163909912
    7. '   
' → logprob: -3.836778163909912
    8. '     
' → logprob: -4.086778163909912
    9. '  
' → logprob: -4.211778163909912
    10. '    ' → logprob: -4.461778163909912

Token 85: ' Initial' (ID: 9209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010535531677305698
    2. '_' → logprob: -4.760535717010498
    3. 'd' → logprob: -8.01053524017334
    4. 'n' → logprob: -8.26053524017334
    5. 'r' → logprob: -8.76053524017334
    6. '   ' → logprob: -9.01053524017334
    7. 'x' → logprob: -9.01053524017334
    8. ' ​' → logprob: -9.26053524017334
    9. ' ' → logprob: -9.26053524017334
    10. '=' → logprob: -9.38553524017334

Token 86: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12773123383522034
    2. 'ize' → logprob: -2.7527313232421875
    3. ' =' → logprob: -4.2527313232421875
    4. ' ' → logprob: -4.3777313232421875
    5. '=' → logprob: -5.1277313232421875
    6. 'e' → logprob: -5.3777313232421875
    7. 'i' → logprob: -5.5027313232421875
    8. 'izer' → logprob: -5.8777313232421875
    9. 'ization' → logprob: -6.1277313232421875
    10. ' _' → logprob: -6.1277313232421875

Token 87: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47067880630493164
    2. '_' → logprob: -1.3456788063049316
    3. ':' → logprob: -3.2206788063049316
    4. ' :' → logprob: -3.8456788063049316
    5. '   ' → logprob: -4.220678806304932
    6. 'n' → logprob: -4.345678806304932
    7. '<|end|>' → logprob: -5.345678806304932
    8. '  ' → logprob: -5.470678806304932
    9. ')' → logprob: -5.595678806304932
    10. '    ' → logprob: -6.220678806304932

Token 88: '’une' (ID: 11808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8687680959701538
    2. ' ' → logprob: -0.9937680959701538
    3. ' e' → logprob: -2.6187682151794434
    4. ' un' → logprob: -2.7437682151794434
    5. ' defaultdict' → logprob: -2.9937682151794434
    6. ' a' → logprob: -5.368768215179443
    7. ' =' → logprob: -5.743768215179443
    8. 'iction' → logprob: -5.993768215179443
    9. ''un' → logprob: -6.368768215179443
    10. ' '' → logprob: -6.493768215179443

Token 89: ' liste' (ID: 31719)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4916233420372009
    2. 'default' → logprob: -1.1166234016418457
    3. 'd' → logprob: -3.2416234016418457
    4. 's' → logprob: -5.116623401641846
    5. ' default' → logprob: -5.866623401641846
    6. 'liste' → logprob: -6.116623401641846
    7. ' d' → logprob: -6.741623401641846
    8. 'list' → logprob: -6.991623401641846
    9. ' ' → logprob: -7.304123401641846
    10. '_default' → logprob: -7.491623401641846

Token 90: ' nom' (ID: 8080)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1015150547027588
    2. '[]' → logprob: -1.3515150547027588
    3. ' ' → logprob: -2.226515054702759
    4. '_' → logprob: -2.351515054702759
    5. ' des' → logprob: -2.851515054702759
    6. '[' → logprob: -3.476515054702759
    7. ' de' → logprob: -3.601515054702759
    8. '=[]' → logprob: -3.726515054702759
    9. 's' → logprob: -4.47651481628418
    10. '=' → logprob: -4.60151481628418

Token 91: 'm' (ID: 76)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.19165799021720886
    2. 'é' → logprob: -2.0666580200195312
    3. 'e' → logprob: -3.0666580200195312
    4. 'm' → logprob: -7.441658020019531
    5. 'rée' → logprob: -9.316658020019531
    6. 'es' → logprob: -9.441658020019531
    7. 'bre' → logprob: -9.441658020019531
    8. 'ee' → logprob: -9.566658020019531
    9. 'br' → logprob: -10.316658020019531
    10. '[' → logprob: -10.441658020019531

Token 92: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7246551513671875
    2. 'ée' → logprob: -0.7246551513671875
    3. 'e' → logprob: -3.4746551513671875
    4. 'ee' → logprob: -11.224655151367188
    5. 'a' → logprob: -11.724655151367188
    6. '```' → logprob: -12.349655151367188
    7. 'ė' → logprob: -12.599655151367188
    8. '#' → logprob: -12.724655151367188
    9. 'æ' → logprob: -13.474655151367188
    10. 'ä' → logprob: -13.724655151367188

Token 93: ' '' (ID: 461)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5211923122406006
    2. 'dp' → logprob: -2.2711923122406006
    3. ' result' → logprob: -2.5211923122406006
    4. ' counts' → logprob: -2.7711923122406006
    5. ' freq' → logprob: -3.7711923122406006
    6. ' res' → logprob: -4.14619255065918
    7. ' count' → logprob: -4.27119255065918
    8. 'result' → logprob: -4.52119255065918
    9. ' results' → logprob: -4.52119255065918
    10. ' frequency' → logprob: -4.52119255065918

Token 94: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1417392492294312
    2. ' dp' → logprob: -1.3917392492294312
    3. 'counts' → logprob: -1.7667392492294312
    4. ' counts' → logprob: -2.8917393684387207
    5. 'freq' → logprob: -2.8917393684387207
    6. 'count' → logprob: -3.8917393684387207
    7. ' freq' → logprob: -4.641739368438721
    8. 'res' → logprob: -4.641739368438721
    9. ' res' → logprob: -4.641739368438721
    10. ' count' → logprob: -4.766739368438721

Token 95: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03129652887582779
    2. 's' → logprob: -3.531296491622925
    3. 'es' → logprob: -7.031296730041504
    4. ' '' → logprob: -8.156296730041504
    5. '_list' → logprob: -8.781296730041504
    6. 'e' → logprob: -10.031296730041504
    7. ''s' → logprob: -10.156296730041504
    8. ' =' → logprob: -10.281296730041504
    9. '_'' → logprob: -11.031296730041504
    10. '_counts' → logprob: -11.656296730041504

Token 96: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005402852548286319
    2. '=' → logprob: -7.625540256500244
    3. ' =[' → logprob: -11.125540733337402
    4. ' ' → logprob: -11.375540733337402
    5. '=[]' → logprob: -11.500540733337402
    6. '[' → logprob: -12.375540733337402
    7. '[]' → logprob: -12.625540733337402
    8. '   ' → logprob: -13.250540733337402
    9. '=[' → logprob: -13.375540733337402
    10. ',' → logprob: -13.500540733337402

Token 97: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31829124689102173
    2. '['' → logprob: -2.318291187286377
    3. '[n' → logprob: -2.318291187286377
    4. '[]' → logprob: -3.693291187286377
    5. ' [' → logprob: -3.943291187286377
    6. '["' → logprob: -4.193291187286377
    7. 'n' → logprob: -5.318291187286377
    8. '[m' → logprob: -5.318291187286377
    9. 'len' → logprob: -6.443291187286377
    10. '0' → logprob: -6.818291187286377

Token 98: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.663589358329773
    2. 'n' → logprob: -0.788589358329773
    3. 'm' → logprob: -3.9135894775390625
    4. ' m' → logprob: -4.7885894775390625
    5. ' ' → logprob: -6.6635894775390625
    6. 's' → logprob: -7.5385894775390625
    7. '=n' → logprob: -8.913589477539062
    8. '[n' → logprob: -9.413589477539062
    9. '(n' → logprob: -9.788589477539062
    10. '=' → logprob: -10.788589477539062

Token 99: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014216749928891659
    2. '=' → logprob: -4.264216899871826
    3. ',' → logprob: -11.014216423034668
    4. '=[' → logprob: -11.264216423034668
    5. ' =[' → logprob: -11.639216423034668
    6. ' ' → logprob: -12.139216423034668
    7. '[' → logprob: -12.389216423034668
    8. '   ' → logprob: -13.514216423034668
    9. '=[]' → logprob: -13.514216423034668
    10. '_' → logprob: -13.889216423034668

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.625032424926758
    3. '2' → logprob: -12.000032424926758
    4. '3' → logprob: -15.125032424926758
    5. '
' → logprob: -15.250032424926758
    6. '=' → logprob: -15.750032424926758
    7. '   ' → logprob: -15.875032424926758
    8. '4' → logprob: -16.000032424926758
    9. '```' → logprob: -16.000032424926758
    10. '5' → logprob: -16.375032424926758

Token 101: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011776409111917019
    2. '=' → logprob: -4.511776447296143
    3. ',' → logprob: -7.636776447296143
    4. '[' → logprob: -9.511775970458984
    5. '=[' → logprob: -10.011775970458984
    6. ' ' → logprob: -10.261775970458984
    7. ' =[' → logprob: -10.386775970458984
    8. '   ' → logprob: -11.011775970458984
    9. ']' → logprob: -11.261775970458984
    10. ' [' → logprob: -12.011775970458984

Token 102: ' chaque' (ID: 21194)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.0406523942947388
    2. '0' → logprob: -1.4156523942947388
    3. ' ' → logprob: -1.4156523942947388
    4. ' False' → logprob: -2.415652275085449
    5. 'None' → logprob: -3.290652275085449
    6. 'False' → logprob: -4.415652275085449
    7. '[' → logprob: -5.165652275085449
    8. '_' → logprob: -5.665652275085449
    9. ' True' → logprob: -6.040652275085449
    10. ''' → logprob: -6.040652275085449

Token 103: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8171579837799072
    2. '_' → logprob: -1.8171579837799072
    3. ' ' → logprob: -1.9421579837799072
    4. ' élément' → logprob: -2.3171579837799072
    5. ' =' → logprob: -2.9421579837799072
    6. '=' → logprob: -3.4421579837799072
    7. ' element' → logprob: -3.6921579837799072
    8. 'element' → logprob: -3.9421579837799072
    9. ' _' → logprob: -4.942157745361328
    10. 'elem' → logprob: -6.192157745361328

Token 104: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8294918537139893
    2. '<|end|>' → logprob: -0.9544918537139893
    3. '=' → logprob: -2.4544918537139893
    4. ' is' → logprob: -3.2044918537139893
    5. 's' → logprob: -3.8294918537139893
    6. ' est' → logprob: -4.20449161529541
    7. '=None' → logprob: -5.95449161529541
    8. ' a' → logprob: -6.32949161529541
    9. '=False' → logprob: -6.32949161529541
    10. ' ' → logprob: -6.32949161529541

Token 105: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0732167959213257
    2. ' None' → logprob: -1.0732167959213257
    3. 'None' → logprob: -2.4482169151306152
    4. '=' → logprob: -3.3232169151306152
    5. '[]' → logprob: -3.5732169151306152
    6. ' =' → logprob: -3.6982169151306152
    7. '0' → logprob: -3.6982169151306152
    8. '=None' → logprob: -3.6982169151306152
    9. ' une' → logprob: -4.323216915130615
    10. '=[]' → logprob: -4.448216915130615

Token 106: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.3329472839832306
    2. 'val' → logprob: -1.3329472541809082
    3. ' val' → logprob: -4.957947254180908
    4. ' ' → logprob: -5.582947254180908
    5. ' value' → logprob: -6.457947254180908
    6. 'value' → logprob: -6.457947254180908
    7. ' vale' → logprob: -7.332947254180908
    8. '_val' → logprob: -7.895447254180908
    9. '-' → logprob: -7.957947254180908
    10. 's' → logprob: -8.020447731018066

Token 107: ' initial' (ID: 4871)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6179733276367188
    2. ' None' → logprob: -0.9929733276367188
    3. ' ' → logprob: -3.9929733276367188
    4. ' n' → logprob: -4.117973327636719
    5. 'de' → logprob: -4.367973327636719
    6. 'None' → logprob: -4.617973327636719
    7. '0' → logprob: -4.742973327636719
    8. ' False' → logprob: -4.867973327636719
    9. ' d' → logprob: -4.992973327636719
    10. 'False' → logprob: -7.117973327636719

Token 108: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3964383006095886
    2. 'isée' → logprob: -1.3964383602142334
    3. '=' → logprob: -2.7714383602142334
    4. 'isé' → logprob: -5.021438121795654
    5. 'ée' → logprob: -5.396438121795654
    6. 'é' → logprob: -7.021438121795654
    7. ' ' → logprob: -7.021438121795654
    8. '   ' → logprob: -7.021438121795654
    9. '_' → logprob: -7.646438121795654
    10. ' =' → logprob: -7.771438121795654

Token 109: ' très' (ID: 9412)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.8721000552177429
    2. ' False' → logprob: -1.7471001148223877
    3. '0' → logprob: -1.9971001148223877
    4. ' ' → logprob: -1.9971001148223877
    5. '=' → logprob: -2.8721001148223877
    6. ' =' → logprob: -3.8721001148223877
    7. ' True' → logprob: -4.247099876403809
    8. 'None' → logprob: -4.747099876403809
    9. 'False' → logprob: -4.997099876403809
    10. ' à' → logprob: -5.122099876403809

Token 110: ' grande' (ID: 10094)
  Prédit: ' élevée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -0.47510096430778503
    2. ' grande' → logprob: -1.1001009941101074
    3. 'é' → logprob: -3.7251009941101074
    4. ' large' → logprob: -5.475100994110107
    5. 'e' → logprob: -5.600100994110107
    6. 'large' → logprob: -5.975100994110107
    7. 'import' → logprob: -6.350100994110107
    8. 'grand' → logprob: -6.975100994110107
    9. ' élevé' → logprob: -7.225100994110107
    10. ' élev' → logprob: -7.225100994110107

Token 111: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5900121927261353
    2. ' =' → logprob: -1.8400121927261353
    3. ',' → logprob: -2.2150120735168457
    4. '=' → logprob: -2.5900120735168457
    5. '_' → logprob: -2.8400120735168457
    6. ' ' → logprob: -4.090012073516846
    7. ' (' → logprob: -4.840012073516846
    8. '[' → logprob: -5.340012073516846
    9. ')' → logprob: -5.840012073516846
    10. ':' → logprob: -5.965012073516846

Token 112: '10' (ID: 702)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4299167990684509
    2. 'float' → logprob: -1.5549168586730957
    3. ' ' → logprob: -2.3049168586730957
    4. ')' → logprob: -3.8049168586730957
    5. ' )' → logprob: -5.429916858673096
    6. '1' → logprob: -5.929916858673096
    7. '0' → logprob: -6.554916858673096
    8. '    ' → logprob: -6.804916858673096
    9. 'int' → logprob: -6.929916858673096
    10. '100' → logprob: -7.054916858673096

Token 113: '^' (ID: 61)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11420457065105438
    2. '**' → logprob: -2.2392046451568604
    3. '18' → logprob: -6.989204406738281
    4. '6' → logprob: -8.364204406738281
    5. ' **' → logprob: -9.489204406738281
    6. '8' → logprob: -10.364204406738281
    7. '7' → logprob: -10.614204406738281
    8. '10' → logprob: -10.739204406738281
    9. ' ' → logprob: -11.239204406738281
    10. '15' → logprob: -11.239204406738281

Token 114: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0010804448975250125
    2. '18' → logprob: -7.126080513000488
    3. '15' → logprob: -9.001080513000488
    4. '12' → logprob: -9.251080513000488
    5. '10' → logprob: -10.251080513000488
    6. '6' → logprob: -11.376080513000488
    7. '7' → logprob: -12.626080513000488
    8. '8' → logprob: -12.626080513000488
    9. '16' → logprob: -13.876080513000488
    10. '13' → logprob: -14.501080513000488

Token 115: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020082110539078712
    2. '+' → logprob: -4.395081996917725
    3. ' )' → logprob: -5.270081996917725
    4. ',' → logprob: -6.520081996917725
    5. ' +' → logprob: -8.020082473754883
    6. '),' → logprob: -8.270082473754883
    7. ').' → logprob: -9.395082473754883
    8. ' ' → logprob: -9.645082473754883
    9. '+)' → logprob: -9.645082473754883
    10. ' ,' → logprob: -10.020082473754883

Token 116: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5753762125968933
    2. '   ' → logprob: -1.325376272201538
    3. '[' → logprob: -2.700376272201538
    4. ' ' → logprob: -3.825376272201538
    5. ',' → logprob: -3.825376272201538
    6. ' =' → logprob: -4.200376033782959
    7. '
' → logprob: -5.075376033782959
    8. '=' → logprob: -5.325376033782959
    9. ' ]' → logprob: -5.325376033782959
    10. ')' → logprob: -5.450376033782959

Token 117: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06782621145248413
    2. '[' → logprob: -2.942826271057129
    3. 'ans' → logprob: -5.692826271057129
    4. ' ' → logprob: -5.817826271057129
    5. ' =' → logprob: -6.442826271057129
    6. '   ' → logprob: -7.192826271057129
    7. '_' → logprob: -7.192826271057129
    8. '=' → logprob: -7.192826271057129
    9. ' [' → logprob: -7.317826271057129
    10. '_ans' → logprob: -7.942826271057129

Token 118: ' Ceci' (ID: 144699)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.01978997327387333
    2. ' ' → logprob: -4.019790172576904
    3. 'ans' → logprob: -6.894790172576904
    4. '   ' → logprob: -9.019789695739746
    5. ' ' → logprob: -9.644789695739746
    6. ' for' → logprob: -9.644789695739746
    7. '	ans' → logprob: -9.644789695739746
    8. ' 
' → logprob: -10.144789695739746
    9. '  ' → logprob: -10.269789695739746
    10. ' =' → logprob: -10.519789695739746

Token 119: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44061169028282166
    2. ',' → logprob: -2.8156116008758545
    3. ' n' → logprob: -2.8156116008758545
    4. '=' → logprob: -3.0656116008758545
    5. ' ans' → logprob: -3.4406116008758545
    6. ' ' → logprob: -3.5656116008758545
    7. '[' → logprob: -4.190611839294434
    8. 's' → logprob: -4.315611839294434
    9. 'n' → logprob: -4.440611839294434
    10. '[]' → logprob: -4.565611839294434

Token 120: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5103537440299988
    2. ' d' → logprob: -1.6353538036346436
    3. ' ' → logprob: -1.8853538036346436
    4. '_' → logprob: -3.8853538036346436
    5. '    ' → logprob: -4.7603535652160645
    6. ' a' → logprob: -4.7603535652160645
    7. '<|end|>' → logprob: -5.1353535652160645
    8. ' to' → logprob: -5.8853535652160645
    9. '   ' → logprob: -6.5103535652160645
    10. '  ' → logprob: -6.6353535652160645

Token 121: ' garder' (ID: 63069)
  Prédit: ' représ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représ' → logprob: -0.9162428379058838
    2. ' garantir' → logprob: -1.2912428379058838
    3. ' sim' → logprob: -1.4162428379058838
    4. ' stock' → logprob: -4.166242599487305
    5. ' assurer' → logprob: -4.416242599487305
    6. ' faciliter' → logprob: -4.916242599487305
    7. ' represent' → logprob: -5.541242599487305
    8. ' repr' → logprob: -5.666242599487305
    9. ' initial' → logprob: -5.791242599487305
    10. 'repr' → logprob: -5.791242599487305

Token 122: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' mémoire' (ID: 79071)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2802802324295044
    2. '```' → logprob: -1.2802802324295044
    3. 'inf' → logprob: -2.155280113220215
    4. 'finity' → logprob: -2.905280113220215
    5. 'fin' → logprob: -3.530280113220215
    6. '[' → logprob: -3.530280113220215
    7. 's' → logprob: -3.655280113220215
    8. ' place' → logprob: -4.030280113220215
    9. 'reserve' → logprob: -4.280280113220215
    10. 'ans' → logprob: -4.530280113220215

Token 124: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4329381585121155
    2. '<|end|>' → logprob: -1.6829380989074707
    3. '_' → logprob: -3.6829380989074707
    4. '    ' → logprob: -3.8079380989074707
    5. ' une' → logprob: -4.057938098907471
    6. ' des' → logprob: -4.307938098907471
    7. ' a' → logprob: -4.432938098907471
    8. 's' → logprob: -4.557938098907471
    9. '  ' → logprob: -4.557938098907471
    10. '   ' → logprob: -5.057938098907471

Token 125: ' plus' (ID: 2932)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7422020435333252
    2. 'n' → logprob: -2.242202043533325
    3. ' )' → logprob: -2.867202043533325
    4. ' ' → logprob: -3.492202043533325
    5. ' ]' → logprob: -3.742202043533325
    6. ' minimum' → logprob: -3.867202043533325
    7. ' =' → logprob: -3.992202043533325
    8. 'min' → logprob: -3.992202043533325
    9. ' min' → logprob: -4.242201805114746
    10. 'minimum' → logprob: -4.367201805114746

Token 126: ' petite' (ID: 28119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048764947801828384
    2. ' _' → logprob: -3.048764944076538
    3. '_inf' → logprob: -10.673765182495117
    4. '_p' → logprob: -11.048765182495117
    5. '_pet' → logprob: -11.298765182495117
    6. '_min' → logprob: -11.298765182495117
    7. ' faible' → logprob: -11.673765182495117
    8. ' ' → logprob: -11.798765182495117
    9. '_-' → logprob: -11.798765182495117
    10. '_b' → logprob: -11.798765182495117

Token 127: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35321539640426636
    2. ' _' → logprob: -1.9782154560089111
    3. ' ' → logprob: -3.103215456008911
    4. '_distance' → logprob: -3.103215456008911
    5. ' valeur' → logprob: -4.603215217590332
    6. 'distance' → logprob: -4.728215217590332
    7. '_val' → logprob: -4.728215217590332
    8. '_possible' → logprob: -5.103215217590332
    9. ' possible' → logprob: -5.228215217590332
    10. '_value' → logprob: -5.228215217590332

Token 128: ' rencontr' (ID: 49751)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.892130970954895
    2. '_' → logprob: -1.392130970954895
    3. 'possible' → logprob: -2.7671308517456055
    4. ' ' → logprob: -2.7671308517456055
    5. '_possible' → logprob: -2.8921308517456055
    6. ',' → logprob: -3.6421308517456055
    7. ' ' → logprob: -3.8921308517456055
    8. ' )' → logprob: -4.0171308517456055
    9. ')' → logprob: -4.1421308517456055
    10. ' de' → logprob: -4.2671308517456055

Token 129: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5648078918457031
    2. 'e' → logprob: -1.0648078918457031
    3. ' ' → logprob: -3.064807891845703
    4. 'é' → logprob: -4.564807891845703
    5. ' e' → logprob: -4.689807891845703
    6. '   ' → logprob: -5.314807891845703
    7. '=' → logprob: -5.439807891845703
    8. '_' → logprob: -5.814807891845703
    9. ' =' → logprob: -6.439807891845703
    10. '  ' → logprob: -6.564807891845703

Token 130: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7939038872718811
    2. '_' → logprob: -1.1689038276672363
    3. ' ' → logprob: -2.1689038276672363
    4. ' ,' → logprob: -3.2939038276672363
    5. ' _' → logprob: -4.168903827667236
    6. ' =' → logprob: -4.168903827667236
    7. ' )' → logprob: -4.293903827667236
    8. ')' → logprob: -4.543903827667236
    9. '=' → logprob: -5.418903827667236
    10. 's' → logprob: -5.543903827667236

Token 131: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.00810764729976654
    2. ' ' → logprob: -6.008107662200928
    3. ' each' → logprob: -6.883107662200928
    4. ' l' → logprob: -7.133107662200928
    5. 'l' → logprob: -7.633107662200928
    6. 'each' → logprob: -7.758107662200928
    7. 's' → logprob: -7.758107662200928
    8. ' laquelle' → logprob: -7.883107662200928
    9. '```' → logprob: -8.38310718536377
    10. 'a' → logprob: -8.88310718536377

Token 132: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.583253026008606
    2. '_' → logprob: -1.458253026008606
    3. 'position' → logprob: -2.3332529067993164
    4. ' ' → logprob: -3.3332529067993164
    5. ' possible' → logprob: -4.083252906799316
    6. ' étape' → logprob: -5.083252906799316
    7. ' _' → logprob: -5.333252906799316
    8. ' distance' → logprob: -5.708252906799316
    9. 'possible' → logprob: -5.708252906799316
    10. ' valeur' → logprob: -5.833252906799316

Token 133: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17679665982723236
    2. ')' → logprob: -3.5517966747283936
    3. '_' → logprob: -3.5517966747283936
    4. ',' → logprob: -3.6767966747283936
    5. '=' → logprob: -3.9267966747283936
    6. '(' → logprob: -3.9267966747283936
    7. ' =' → logprob: -4.5517964363098145
    8. ' ' → logprob: -4.5517964363098145
    9. ']' → logprob: -5.0517964363098145
    10. '   ' → logprob: -5.9267964363098145

Token 134: 'i' (ID: 72)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2268923670053482
    2. ')' → logprob: -1.601892352104187
    3. ' n' → logprob: -7.851892471313477
    4. ' ' → logprob: -8.226892471313477
    5. ')n' → logprob: -8.976892471313477
    6. ' ).' → logprob: -9.101892471313477
    7. ',' → logprob: -9.476892471313477
    8. 'n' → logprob: -9.851892471313477
    9. '   ' → logprob: -9.976892471313477
    10. ' ),' → logprob: -9.976892471313477

Token 135: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30075767636299133
    2. ')' → logprob: -1.925757646560669
    3. ' +' → logprob: -2.300757646560669
    4. ' )' → logprob: -5.175757884979248
    5. ']' → logprob: -5.925757884979248
    6. ',' → logprob: -6.550757884979248
    7. '=' → logprob: -7.050757884979248
    8. ' =' → logprob: -7.425757884979248
    9. 'n' → logprob: -7.550757884979248
    10. ':' → logprob: -7.800757884979248

Token 136: ' lors' (ID: 15456)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9276521801948547
    2. ',' → logprob: -1.42765212059021
    3. '=' → logprob: -1.42765212059021
    4. '[' → logprob: -2.80265212059021
    5. '   ' → logprob: -3.80265212059021
    6. ')' → logprob: -4.302652359008789
    7. ' ' → logprob: -4.427652359008789
    8. ':' → logprob: -5.177652359008789
    9. ' ans' → logprob: -5.927652359008789
    10. ']' → logprob: -6.052652359008789

Token 137: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2988767623901367
    2. ' de' → logprob: -1.4238767623901367
    3. ' ' → logprob: -2.0488767623901367
    4. '   ' → logprob: -2.4238767623901367
    5. '_' → logprob: -2.7988767623901367
    6. '=' → logprob: -2.9238767623901367
    7. '<|end|>' → logprob: -3.1738767623901367
    8. '  ' → logprob: -3.5488767623901367
    9. ' =' → logprob: -3.7988767623901367
    10. '    ' → logprob: -4.423876762390137

Token 138: ' calcul' (ID: 7559)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -1.0131478309631348
    2. ' parcours' → logprob: -1.6381478309631348
    3. ' iterations' → logprob: -1.8881478309631348
    4. ' calcul' → logprob: -2.5131478309631348
    5. ' déplacements' → logprob: -3.0131478309631348
    6. 'iterations' → logprob: -3.5131478309631348
    7. ' recherches' → logprob: -3.6381478309631348
    8. ' bou' → logprob: -3.8881478309631348
    9. ' mises' → logprob: -4.638147830963135
    10. ' passages' → logprob: -4.763147830963135

Token 139: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038998477160930634
    2. 'ations' → logprob: -3.4139983654022217
    3. 'es' → logprob: -5.413998603820801
    4. 'ulations' → logprob: -8.5389986038208
    5. 'atrices' → logprob: -8.6639986038208
    6. ')' → logprob: -9.7889986038208
    7. 'i' → logprob: -9.9139986038208
    8. 'ions' → logprob: -10.0389986038208
    9. 'atoires' → logprob: -10.2889986038208
    10. '_' → logprob: -10.2889986038208

Token 140: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44428324699401855
    2. ',' → logprob: -1.8192832469940186
    3. '=' → logprob: -2.3192832469940186
    4. '   ' → logprob: -3.8192832469940186
    5. '[' → logprob: -3.9442832469940186
    6. ':' → logprob: -4.319283485412598
    7. ' ' → logprob: -4.569283485412598
    8. ' ]' → logprob: -4.819283485412598
    9. ']' → logprob: -5.069283485412598
    10. ' ans' → logprob: -5.444283485412598

Token 141: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8123928308486938
    2. '   ' → logprob: -1.3123928308486938
    3. ' ans' → logprob: -2.0623927116394043
    4. '[' → logprob: -3.4373927116394043
    5. ' =' → logprob: -3.6873927116394043
    6. '
' → logprob: -3.9373927116394043
    7. '=' → logprob: -3.9373927116394043
    8. ' :' → logprob: -4.187392711639404
    9. ' ' → logprob: -4.312392711639404
    10. ',' → logprob: -4.562392711639404

Token 142: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1502712517976761
    2. '[' → logprob: -2.90027117729187
    3. ' ' → logprob: -2.90027117729187
    4. '   ' → logprob: -5.025271415710449
    5. ' =' → logprob: -5.275271415710449
    6. '=' → logprob: -5.525271415710449
    7. '_' → logprob: -5.775271415710449
    8. ',' → logprob: -6.275271415710449
    9. 'ans' (adapté à ' ans') → logprob: -6.650271415710449
    10. 'a' → logprob: -6.775271415710449

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695373594760895
    2. '=' → logprob: -2.1269538402557373
    3. '[' → logprob: -11.626954078674316
    4. ' ' → logprob: -11.751954078674316
    5. ' =[' → logprob: -12.251954078674316
    6. '=[' → logprob: -13.626954078674316
    7. '   ' → logprob: -14.126954078674316
    8. '  ' → logprob: -14.251954078674316
    9. ',' → logprob: -14.876954078674316
    10. 's' → logprob: -15.376954078674316

Token 144: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.005235648714005947
    2. '[' → logprob: -5.25523567199707
    3. '[int' → logprob: -13.63023567199707
    4. ' ' → logprob: -15.00523567199707
    5. '[n' → logprob: -16.13023567199707
    6. ' ' → logprob: -17.13023567199707
    7. '   ' → logprob: -17.38023567199707
    8. '[s' → logprob: -17.38023567199707
    9. '    ' → logprob: -18.13023567199707
    10. '[a' → logprob: -18.25523567199707

Token 145: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010807292710524052
    2. 'int' → logprob: -9.750107765197754
    3. ' ' → logprob: -10.000107765197754
    4. '100' → logprob: -12.500107765197754
    5. '109' → logprob: -15.250107765197754
    6. '1' → logprob: -15.875107765197754
    7. '(' → logprob: -16.62510871887207
    8. ' int' → logprob: -16.75010871887207
    9. 'float' → logprob: -16.87510871887207
    10. '   ' → logprob: -17.75010871887207

Token 146: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1279696822166443
    2. '9' → logprob: -2.127969741821289
    3. ' **' → logprob: -6.877969741821289
    4. '^' → logprob: -12.127969741821289
    5. ' ' → logprob: -12.877969741821289
    6. '*' → logprob: -13.377969741821289
    7. '\xe2\x81' → logprob: -14.377969741821289
    8. '```' → logprob: -15.127969741821289
    9. ']' → logprob: -15.627969741821289
    10. ' ' → logprob: -16.37796974182129

Token 147: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -15.75001049041748
    4. '09' → logprob: -16.437511444091797
    5. '
' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.062511444091797
    7. '

' → logprob: -17.562511444091797
    8. ']' → logprob: -18.000011444091797
    9. '  ' → logprob: -18.187511444091797
    10. '10' → logprob: -18.187511444091797

Token 148: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.5
    3. ' ' → logprob: -15.625
    4. '09' → logprob: -17.0
    5. '
' → logprob: -17.125
    6. '

' → logprob: -17.5625
    7. '``' → logprob: -18.1875
    8. '   ' → logprob: -18.25
    9. '18' → logprob: -18.5
    10. '  ' → logprob: -19.5

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021045419271104038
    2. ' ]' → logprob: -8.625210762023926
    3. '+' → logprob: -11.375210762023926
    4. ' for' → logprob: -11.625210762023926
    5. ']*' → logprob: -12.625210762023926
    6. ']+' → logprob: -12.750210762023926
    7. ')' → logprob: -13.250210762023926
    8. ',' → logprob: -14.125210762023926
    9. ')]' → logprob: -14.750210762023926
    10. ' +' → logprob: -15.250210762023926

Token 150: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003438865300267935
    2. ' for' → logprob: -5.753438949584961
    3. ']*(' → logprob: -9.753438949584961
    4. ' ]' → logprob: -9.878438949584961
    5. ']*' → logprob: -10.128438949584961
    6. 'for' → logprob: -10.128438949584961
    7. ')' → logprob: -10.378438949584961
    8. ',' → logprob: -10.628438949584961
    9. ']+' → logprob: -11.878438949584961
    10. '+' → logprob: -12.503438949584961

Token 151: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008366696420125663
    2. ' (' → logprob: -7.1258368492126465
    3. '(' → logprob: -10.375836372375488
    4. '((' → logprob: -14.500836372375488
    5. '   ' → logprob: -16.125837326049805
    6. '
' → logprob: -16.125837326049805
    7. '(
' → logprob: -16.250837326049805
    8. 'n' → logprob: -16.250837326049805
    9. ' ' → logprob: -16.625837326049805
    10. '(s' → logprob: -17.750837326049805

Token 152: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0020007232669740915
    2. ' n' → logprob: -6.37700080871582
    3. '(n' → logprob: -8.12700080871582
    4. ' (' → logprob: -13.37700080871582
    5. '   ' → logprob: -14.25200080871582
    6. ')n' → logprob: -15.00200080871582
    7. '(' → logprob: -15.25200080871582
    8. '	n' → logprob: -16.00200080871582
    9. ' ' → logprob: -16.62700080871582
    10. ')' → logprob: -17.75200080871582

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00030829108436591923
    2. ' +' → logprob: -8.1253080368042
    3. '+
' → logprob: -11.3753080368042
    4. '1' → logprob: -14.7503080368042
    5. '+)' → logprob: -15.6253080368042
    6. ' +
' → logprob: -16.000308990478516
    7. ')' → logprob: -16.750308990478516
    8. ')+' → logprob: -17.375308990478516
    9. ' plus' → logprob: -18.000308990478516
    10. '+

' → logprob: -18.375308990478516

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -17.37507438659668
    4. '2' → logprob: -17.87507438659668
    5. '
' → logprob: -18.75007438659668
    6. '   ' → logprob: -18.75007438659668
    7. ')' → logprob: -18.81257438659668
    8. '  ' → logprob: -19.50007438659668
    9. '１' → logprob: -19.87507438659668
    10. '

' → logprob: -20.00007438659668

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -17.0000057220459
    4. '```' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.6250057220459
    6. '
' → logprob: -18.0625057220459
    7. '

' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.1875057220459
    9. ')' → logprob: -19.2500057220459
    10. '１' → logprob: -19.3125057220459

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -11.75001049041748
    3. ')
' → logprob: -13.12501049041748
    4. ']' → logprob: -15.25001049041748
    5. '<|end|>' → logprob: -16.125011444091797
    6. ')

' → logprob: -16.500011444091797
    7. '),' → logprob: -16.625011444091797
    8. '))' → logprob: -17.375011444091797
    9. '}' → logprob: -17.500011444091797
    10. ')`' → logprob: -17.625011444091797

Token 157: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0630005598068237
    2. '   ' → logprob: -1.5630005598068237
    3. '<|end|>' → logprob: -1.9380005598068237
    4. '
' → logprob: -2.3130006790161133
    5. ' ans' → logprob: -2.6880006790161133
    6. ' ' → logprob: -3.3130006790161133
    7. 'ans' → logprob: -3.3130006790161133
    8. '    
' → logprob: -3.9380006790161133
    9. '(ans' → logprob: -4.688000679016113
    10. '  
' → logprob: -5.188000679016113

Token 158: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.534970760345459
    2. 'ans' → logprob: -0.909970760345459
    3. '
' → logprob: -5.034970760345459
    4. ' 
' → logprob: -6.159970760345459
    5. '    
' → logprob: -7.159970760345459
    6. '(ans' → logprob: -7.534970760345459
    7. '   ' → logprob: -7.659970760345459
    8. ')' → logprob: -8.284971237182617
    9. '	ans' → logprob: -8.409971237182617
    10. '  
' → logprob: -9.034971237182617

Token 159: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013485688250511885
    2. ' ans' → logprob: -6.751348495483398
    3. 'import' → logprob: -9.876348495483398
    4. 's' → logprob: -10.126348495483398
    5. 'from' → logprob: -11.126348495483398
    6. 'for' → logprob: -11.376348495483398
    7. 'def' → logprob: -11.376348495483398
    8. '#' → logprob: -11.626348495483398
    9. '   ' → logprob: -11.751348495483398
    10. '	ans' → logprob: -12.376348495483398

Token 160: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012149455025792122
    2. ' ans' → logprob: -5.012149333953857
    3. 'i' → logprob: -5.262149333953857
    4. ' s' → logprob: -9.262149810791016
    5. ' ' → logprob: -9.512149810791016
    6. 'ans' → logprob: -10.262149810791016
    7. 's' → logprob: -11.137149810791016
    8. ' _' → logprob: -13.012149810791016
    9. ' idx' → logprob: -13.262149810791016
    10. '_' → logprob: -13.512149810791016

Token 161: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8526028394699097
    2. ' x' → logprob: -0.8526028394699097
    3. ' i' → logprob: -2.227602958679199
    4. 'i' → logprob: -3.352602958679199
    5. ' j' → logprob: -7.540102958679199
    6. ' ' → logprob: -8.2276029586792
    7. 'a' → logprob: -8.2901029586792
    8. 'j' → logprob: -8.5401029586792
    9. ' xs' → logprob: -8.5401029586792
    10. ' a' → logprob: -8.7901029586792

Token 162: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5747870206832886
    2. 'x' → logprob: -1.5747870206832886
    3. ' in' → logprob: -2.699787139892578
    4. ' ' → logprob: -2.824787139892578
    5. ' i' → logprob: -2.949787139892578
    6. 's' → logprob: -4.449787139892578
    7. '_' → logprob: -5.074787139892578
    8. ' =' → logprob: -5.074787139892578
    9. 'i' → logprob: -5.324787139892578
    10. 'in' → logprob: -5.699787139892578

Token 163: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004185959696769714
    2. 'in' → logprob: -5.629186153411865
    3. ' ' → logprob: -7.879186153411865
    4. ',' → logprob: -9.629185676574707
    5. 's' → logprob: -9.754185676574707
    6. '_' → logprob: -11.254185676574707
    7. ')' → logprob: -11.379185676574707
    8. ' ' → logprob: -11.754185676574707
    9. ' i' → logprob: -12.129185676574707
    10. '   ' → logprob: -12.379185676574707

Token 164: ' la' (ID: 557)
  Prédit: ' xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.3137253224849701
    2. 'xs' → logprob: -1.3137253522872925
    3. 's' → logprob: -7.938725471496582
    4. ' s' → logprob: -9.813725471496582
    5. '(xs' → logprob: -10.563725471496582
    6. ' range' → logprob: -11.438725471496582
    7. 'range' → logprob: -12.438725471496582
    8. ' ' → logprob: -12.813725471496582
    9. ' set' → logprob: -13.063725471496582
    10. 'set' → logprob: -13.313725471496582

Token 165: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5514037609100342
    2. 'xs' → logprob: -1.0514037609100342
    3. ' xs' → logprob: -2.676403760910034
    4. ' s' → logprob: -5.551403999328613
    5. ' range' → logprob: -6.926403999328613
    6. 'range' → logprob: -7.301403999328613
    7. 'x' → logprob: -10.926403999328613
    8. 'm' → logprob: -11.551403999328613
    9. '(xs' → logprob: -12.176403999328613
    10. ' list' → logprob: -12.551403999328613

Token 166: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.590061366558075
    2. 'xs' → logprob: -0.840061366558075
    3. '(xs' → logprob: -4.590061187744141
    4. 's' → logprob: -5.590061187744141
    5. ' s' → logprob: -9.21506118774414
    6. ' ' → logprob: -11.21506118774414
    7. '(' → logprob: -12.34006118774414
    8. '_x' → logprob: -12.59006118774414
    9. ' (' → logprob: -12.96506118774414
    10. '(s' → logprob: -12.96506118774414

Token 167: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006659718346782029
    2. ' :' → logprob: -7.37566614151001
    3. ':
' → logprob: -10.500665664672852
    4. ',' → logprob: -11.750665664672852
    5. '):' → logprob: -12.750665664672852
    6. '   ' → logprob: -15.500665664672852
    7. ' :
' → logprob: -15.750665664672852
    8. ')' → logprob: -16.00066566467285
    9. ' ,' → logprob: -16.12566566467285
    10. '.' → logprob: -16.50066566467285

Token 168: 'on' (ID: 263)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.86981201171875
    2. ')' → logprob: -1.74481201171875
    3. 'xs' → logprob: -2.11981201171875
    4. ' ):' → logprob: -2.24481201171875
    5. ' xs' → logprob: -2.74481201171875
    6. 's' → logprob: -2.99481201171875
    7. ' )' → logprob: -3.11981201171875
    8. '   ' → logprob: -4.99481201171875
    9. ':' → logprob: -4.99481201171875
    10. '):
' → logprob: -5.86981201171875

Token 169: ' suppose' (ID: 35968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10319539159536362
    2. '):' → logprob: -3.2281954288482666
    3. 's' → logprob: -3.8531954288482666
    4. ' :' → logprob: -4.2281951904296875
    5. ')' → logprob: -4.6031951904296875
    6. ' ):' → logprob: -5.3531951904296875
    7. ' ' → logprob: -6.2281951904296875
    8. 'for' → logprob: -6.2281951904296875
    9. ' for' → logprob: -6.9781951904296875
    10. ' in' → logprob: -7.2281951904296875

Token 170: ' que' (ID: 661)
  Prédit: ' xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.08184253424406052
    2. 'xs' → logprob: -3.4568424224853516
    3. 's' → logprob: -3.5818424224853516
    4. ' s' → logprob: -5.581842422485352
    5. ')' → logprob: -5.581842422485352
    6. ' ' → logprob: -5.956842422485352
    7. 'x' → logprob: -6.331842422485352
    8. '(xs' → logprob: -6.456842422485352
    9. ':' → logprob: -6.581842422485352
    10. '):' → logprob: -6.706842422485352

Token 171: ' ce' (ID: 2357)
  Prédit: ' xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.0645805299282074
    2. 'xs' → logprob: -2.9395804405212402
    3. 's' → logprob: -5.18958044052124
    4. ' s' → logprob: -6.43958044052124
    5. ' x' → logprob: -6.68958044052124
    6. 'x' → logprob: -7.06458044052124
    7. ' )' → logprob: -8.689580917358398
    8. ')' → logprob: -9.439580917358398
    9. ' ' → logprob: -9.564580917358398
    10. '(xs' → logprob: -10.939580917358398

Token 172: ' sont' (ID: 5242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6807292103767395
    2. '_' → logprob: -1.5557291507720947
    3. 's' → logprob: -1.9307291507720947
    4. ' )' → logprob: -3.6807291507720947
    5. 'x' → logprob: -3.8057291507720947
    6. '[' → logprob: -3.8057291507720947
    7. 'n' → logprob: -4.055729389190674
    8. ')' → logprob: -4.305729389190674
    9. ' _' → logprob: -4.805729389190674
    10. ' n' → logprob: -4.930729389190674

Token 173: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.22301287949085236
    2. 's' → logprob: -2.348012924194336
    3. 'des' → logprob: -2.723012924194336
    4. ' les' → logprob: -3.848012924194336
    5. 'range' → logprob: -5.473012924194336
    6. ' range' → logprob: -5.848012924194336
    7. 'sorted' → logprob: -6.223012924194336
    8. ' sorted' → logprob: -6.348012924194336
    9. ' ' → logprob: -6.598012924194336
    10. ')' → logprob: -6.598012924194336

Token 174: ' bases' (ID: 31148)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5495384335517883
    2. ' s' → logprob: -1.9245383739471436
    3. 'xs' → logprob: -2.6745383739471436
    4. 'x' → logprob: -2.9245383739471436
    5. ' xs' → logprob: -2.9245383739471436
    6. ')' → logprob: -3.2995383739471436
    7. ' range' → logprob: -3.7995383739471436
    8. ' x' → logprob: -4.549538612365723
    9. 'range' → logprob: -4.799538612365723
    10. ' )' → logprob: -5.174538612365723

Token 175: ' indépend' (ID: 68392)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4709233343601227
    2. ' ):' → logprob: -1.0959233045578003
    3. ' ),' → logprob: -4.47092342376709
    4. '),' → logprob: -4.97092342376709
    5. '):
' → logprob: -5.09592342376709
    6. ',' → logprob: -5.47092342376709
    7. ' ):
' → logprob: -5.97092342376709
    8. ':' → logprob: -6.09592342376709
    9. '   ' → logprob: -6.34592342376709
    10. ' )' → logprob: -6.72092342376709

Token 176: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.2854638695716858
    2. 'es' → logprob: -2.285463809967041
    3. '),' → logprob: -3.535463809967041
    4. ')' → logprob: -3.660463809967041
    5. ',' → logprob: -3.660463809967041
    6. 's' → logprob: -4.160463809967041
    7. ' des' → logprob: -4.660463809967041
    8. 'amment' → logprob: -5.035463809967041
    9. ' ' → logprob: -5.285463809967041
    10. '   ' → logprob: -5.535463809967041

Token 177: ' sélection' (ID: 43472)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06554898619651794
    2. ' ):' → logprob: -3.565548896789551
    3. ')' → logprob: -4.315548896789551
    4. ':' → logprob: -4.940548896789551
    5. '):
' → logprob: -5.065548896789551
    6. '),' → logprob: -5.440548896789551
    7. '   ' → logprob: -6.190548896789551
    8. ' )' → logprob: -7.315548896789551
    9. ' ):
' → logprob: -8.19054889678955
    10. ' ),' → logprob: -8.19054889678955

Token 178: 'nées' (ID: 136473)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.410582959651947
    2. 'nées' → logprob: -1.1605830192565918
    3. '   ' → logprob: -5.035583019256592
    4. 'onnées' → logprob: -5.035583019256592
    5. 'ion' → logprob: -6.410583019256592
    6. 'es' → logprob: -6.660583019256592
    7. 'ée' → logprob: -6.910583019256592
    8. ' ' → logprob: -6.910583019256592
    9. 'és' → logprob: -7.160583019256592
    10. 'é' → logprob: -7.285583019256592

Token 179: ' au' (ID: 2791)
  Prédit: ' al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' al' → logprob: -1.1863863468170166
    2. '):' → logprob: -1.1863863468170166
    3. '),' → logprob: -2.0613863468170166
    4. ' ):' → logprob: -2.3113863468170166
    5. ' ),' → logprob: -3.0613863468170166
    6. ')' → logprob: -3.4363863468170166
    7. ' pour' → logprob: -4.4363861083984375
    8. '):
' → logprob: -4.4363861083984375
    9. ' dans' → logprob: -4.4363861083984375
    10. ' au' → logprob: -4.5613861083984375

Token 180: ' hasard' (ID: 126015)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.912105143070221
    2. ' hasard' → logprob: -1.6621050834655762
    3. ' random' → logprob: -2.162105083465576
    4. '1' → logprob: -3.037105083465576
    5. ' ' → logprob: -3.037105083465576
    6. ')' → logprob: -3.787105083465576
    7. ' )' → logprob: -3.912105083465576
    8. 'près' → logprob: -4.037105083465576
    9. 'range' → logprob: -4.287105083465576
    10. 's' → logprob: -4.287105083465576

Token 181: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028436973690986633
    2. ')' → logprob: -4.40343713760376
    3. ' ):' → logprob: -4.52843713760376
    4. '):
' → logprob: -6.15343713760376
    5. '),' → logprob: -6.77843713760376
    6. ':' → logprob: -7.52843713760376
    7. '   ' → logprob: -7.65343713760376
    8. ' )' → logprob: -7.65343713760376
    9. ',' → logprob: -9.403436660766602
    10. ' ),' → logprob: -9.528436660766602

Token 182: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039963615126907825
    2. ',' → logprob: -5.8789963722229
    3. ' :' → logprob: -7.5039963722229
    4. '):' → logprob: -8.128995895385742
    5. ':
' → logprob: -8.253995895385742
    6. '   ' → logprob: -9.878995895385742
    7. ' ,' → logprob: -11.378995895385742
    8. ')' → logprob: -11.878995895385742
    9. '.' → logprob: -12.628995895385742
    10. ' :
' → logprob: -12.753995895385742

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18910400569438934
    2. ' for' → logprob: -3.0641040802001953
    3. '    
' → logprob: -3.4391040802001953
    4. ' 
' → logprob: -3.6891040802001953
    5. '<|end|>' → logprob: -3.9391040802001953
    6. ' ' → logprob: -4.314104080200195
    7. '   
' → logprob: -5.314104080200195
    8. '  
' → logprob: -5.439104080200195
    9. ':' → logprob: -5.439104080200195
    10. ')' → logprob: -5.564104080200195

Token 184: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1928788423538208
    2. '   ' → logprob: -2.3178787231445312
    3. '
' → logprob: -3.6928787231445312
    4. 'for' (adapté à ' for') → logprob: -3.8178787231445312
    5. ' 
' → logprob: -3.9428787231445312
    6. ' ' → logprob: -5.442878723144531
    7. '    
' → logprob: -5.942878723144531
    8. ':' → logprob: -7.192878723144531
    9. ',' → logprob: -7.817878723144531
    10. '  
' → logprob: -7.817878723144531

Token 185: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1602255403995514
    2. 'x' → logprob: -1.910225510597229
    3. '	x' → logprob: -14.910225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '_x' → logprob: -15.410225868225098
    6. ' i' → logprob: -15.660225868225098
    7. ',' → logprob: -16.66022491455078
    8. ',x' → logprob: -16.66022491455078
    9. ' xs' → logprob: -17.16022491455078
    10. '   ' → logprob: -17.16022491455078

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018363801762461662
    2. 'in' → logprob: -4.018363952636719
    3. ' ' → logprob: -8.768363952636719
    4. ',' → logprob: -10.893363952636719
    5. ')' → logprob: -11.268363952636719
    6. 's' → logprob: -11.893363952636719
    7. 'n' → logprob: -12.518363952636719
    8. '  ' → logprob: -12.768363952636719
    9. 'x' → logprob: -12.893363952636719
    10. ' ' → logprob: -13.143363952636719

Token 187: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.38726159930229187
    2. ' xs' → logprob: -1.1372616291046143
    3. 's' → logprob: -8.012261390686035
    4. '(xs' → logprob: -10.512261390686035
    5. ' range' → logprob: -11.262261390686035
    6. 'range' → logprob: -11.262261390686035
    7. ' ' → logprob: -13.012261390686035
    8. 'x' → logprob: -13.387261390686035
    9. ' s' → logprob: -13.887261390686035
    10. 'Xs' → logprob: -14.137261390686035

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001284875557757914
    2. ':
' → logprob: -6.751285076141357
    3. ' :' → logprob: -9.3762845993042
    4. '   ' → logprob: -10.6262845993042
    5. ',' → logprob: -12.7512845993042
    6. '       ' → logprob: -14.0012845993042
    7. ' :
' → logprob: -14.2512845993042
    8. '):' → logprob: -14.8762845993042
    9. ':
' → logprob: -15.3762845993042
    10. '):
' → logprob: -16.126285552978516

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8196183443069458
    2. '       ' → logprob: -0.8196183443069458
    3. '    ' → logprob: -2.9446182250976562
    4. '    
' → logprob: -3.6946182250976562
    5. ' ' → logprob: -4.069618225097656
    6. ' 
' → logprob: -4.944618225097656
    7. '        
' → logprob: -5.819618225097656
    8. '
' → logprob: -5.944618225097656
    9. ',' → logprob: -6.194618225097656
    10. '     
' → logprob: -6.319618225097656

Token 190: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0028338432312012
    2. ' dp' → logprob: -2.377833843231201
    3. 'for' → logprob: -2.502833843231201
    4. ' val' → logprob: -2.627833843231201
    5. 'dp' → logprob: -2.877833843231201
    6. '   ' → logprob: -3.002833843231201
    7. ' pos' → logprob: -3.252833843231201
    8. 'pos' → logprob: -3.627833843231201
    9. ' current' → logprob: -3.752833843231201
    10. ' i' → logprob: -3.877833843231201

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05689878761768341
    2. 'os' → logprob: -3.806898832321167
    3. 'rev' → logprob: -4.181898593902588
    4. '=' → logprob: -4.431898593902588
    5. 'r' → logprob: -6.306898593902588
    6. ',' → logprob: -6.931898593902588
    7. 're' → logprob: -7.056898593902588
    8. 'osition' → logprob: -7.681898593902588
    9. 'refix' → logprob: -8.056899070739746
    10. 'p' → logprob: -8.306899070739746

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9381691813468933
    2. '1' → logprob: -1.188169240951538
    3. 'x' → logprob: -1.438169240951538
    4. '[' → logprob: -3.938169240951538
    5. 'random' → logprob: -4.813169002532959
    6. ' ' → logprob: -4.938169002532959
    7. '[x' → logprob: -5.188169002532959
    8. 'm' → logprob: -5.313169002532959
    9. 's' → logprob: -5.563169002532959
    10. ' x' → logprob: -5.688169002532959

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4667815864086151
    2. 'default' → logprob: -1.8417816162109375
    3. '1' → logprob: -2.3417816162109375
    4. 'x' → logprob: -2.8417816162109375
    5. '[' → logprob: -3.5917816162109375
    6. 's' → logprob: -4.3417816162109375
    7. '[x' → logprob: -5.0917816162109375
    8. '[s' → logprob: -5.9667816162109375
    9. '10' → logprob: -6.2167816162109375
    10. 'random' → logprob: -6.4667816162109375

Token 194: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' Initial' (ID: 9209)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -1.0583128929138184
    2. 'p' → logprob: -1.8083128929138184
    3. 'ization' → logprob: -2.3083128929138184
    4. 'isation' → logprob: -2.6833128929138184
    5. ' p' → logprob: -2.8083128929138184
    6. 'e' → logprob: -3.3083128929138184
    7. '=' → logprob: -3.5583128929138184
    8. '_p' → logprob: -3.6833128929138184
    9. 'isé' → logprob: -4.058312892913818
    10. 'isateur' → logprob: -4.058312892913818

Token 198: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7547174692153931
    2. '0' → logprob: -0.8797174692153931
    3. 'x' → logprob: -2.6297173500061035
    4. 'len' → logprob: -4.5047173500061035
    5. 's' → logprob: -4.8797173500061035
    6. 'm' → logprob: -5.0047173500061035
    7. 'pos' → logprob: -6.0047173500061035
    8. '-' → logprob: -6.0047173500061035
    9. ' p' → logprob: -6.1297173500061035
    10. 'n' → logprob: -6.2547173500061035

Token 200: ' position' (ID: 4010)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.40611928701400757
    2. 'position' → logprob: -2.0311193466186523
    3. 'pointer' → logprob: -2.5311193466186523
    4. 'pos' → logprob: -3.0311193466186523
    5. '0' → logprob: -3.6561193466186523
    6. 'current' → logprob: -4.281119346618652
    7. ' pointer' → logprob: -4.906119346618652
    8. ' p' → logprob: -5.531119346618652
    9. 'prob' → logprob: -5.656119346618652
    10. ' position' → logprob: -6.031119346618652

Token 201: ' cour' (ID: 2871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.002262186724692583
    2. 'r' → logprob: -6.127262115478516
    3. 'ur' → logprob: -10.127262115478516
    4. 'ente' → logprob: -11.002262115478516
    5. 'ant' → logprob: -11.502262115478516
    6. 'urrent' → logprob: -13.002262115478516
    7. 'p' → logprob: -13.377262115478516
    8. 'u' → logprob: -13.502262115478516
    9. 'nante' → logprob: -13.502262115478516
    10. '=' → logprob: -14.127262115478516

Token 203: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006944591179490089
    2. ' ' → logprob: -5.13194465637207
    3. 'p' → logprob: -7.50694465637207
    4. ' p' → logprob: -8.25694465637207
    5. '1' → logprob: -9.00694465637207
    6. 'x' → logprob: -10.50694465637207
    7. 's' → logprob: -10.63194465637207
    8. ' s' → logprob: -11.63194465637207
    9. '-' → logprob: -11.75694465637207
    10. ' -' → logprob: -12.25694465637207

Token 205: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' Ceci' (ID: 144699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' serv' (ID: 2096)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8397629857063293
    2. ',' → logprob: -2.3397629261016846
    3. '   ' → logprob: -2.4647629261016846
    4. '       ' → logprob: -2.4647629261016846
    5. ' for' → logprob: -3.4647629261016846
    6. 'for' → logprob: -3.4647629261016846
    7. ' n' → logprob: -3.7147629261016846
    8. ' s' → logprob: -4.339763164520264
    9. ' #' → logprob: -4.339763164520264
    10. ' =' → logprob: -4.464763164520264

Token 208: 'ira' (ID: 2633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8088322877883911
    2. 'e' → logprob: -0.9338322877883911
    3. 'a' → logprob: -1.9338322877883911
    4. ' =' → logprob: -4.433832168579102
    5. '   ' → logprob: -6.683832168579102
    6. 'er' → logprob: -6.808832168579102
    7. 'r' → logprob: -7.808832168579102
    8. 'u' → logprob: -8.308832168579102
    9. 'ent' → logprob: -8.308832168579102
    10. 'ra' → logprob: -8.433832168579102

Token 209: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' suivre' (ID: 54188)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.197648048400879
    2. ' parcour' → logprob: -1.947648048400879
    3. 'p' → logprob: -2.197648048400879
    4. ' ' → logprob: -2.572648048400879
    5. ' suivre' → logprob: -2.572648048400879
    6. 's' → logprob: -3.197648048400879
    7. '1' → logprob: -3.322648048400879
    8. 'min' → logprob: -3.822648048400879
    9. ' p' → logprob: -3.822648048400879
    10. 'su' → logprob: -3.947648048400879

Token 211: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.684106171131134
    2. ' la' → logprob: -2.1841061115264893
    3. '<|end|>' → logprob: -2.4341061115264893
    4. ' l' → logprob: -2.5591061115264893
    5. 's' → logprob: -2.6841061115264893
    6. ' p' → logprob: -3.5591061115264893
    7. ' a' → logprob: -3.5591061115264893
    8. ' the' → logprob: -4.184106349945068
    9. ' s' → logprob: -4.309106349945068
    10. 'p' → logprob: -4.934106349945068

Token 212: ' "' (ID: 392)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7782331705093384
    2. 'p' → logprob: -1.9032331705093384
    3. 'position' → logprob: -2.778233051300049
    4. ' position' → logprob: -3.153233051300049
    5. 'pos' → logprob: -3.278233051300049
    6. 'dé' → logprob: -3.278233051300049
    7. 'indice' → logprob: -3.528233051300049
    8. 'index' → logprob: -4.278233051300049
    9. 's' → logprob: -4.278233051300049
    10. ' prochain' → logprob: -4.278233051300049

Token 213: 'curse' (ID: 134738)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.8099474906921387
    2. 'p' → logprob: -2.1849474906921387
    3. 'position' → logprob: -2.3099474906921387
    4. 'dé' → logprob: -2.5599474906921387
    5. ' position' → logprob: -2.8099474906921387
    6. ' p' → logprob: -2.9349474906921387
    7. 'indice' → logprob: -3.0599474906921387
    8. 's' → logprob: -3.5599474906921387
    9. 'x' → logprob: -3.6849474906921387
    10. 'offset' → logprob: -3.6849474906921387

Token 214: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.007496355101466179
    2. 'eur' → logprob: -5.132496356964111
    3. 'r' → logprob: -7.757496356964111
    4. 'or' → logprob: -8.507495880126953
    5. 'p' → logprob: -8.882495880126953
    6. 's' → logprob: -9.007495880126953
    7. 'sur' → logprob: -9.257495880126953
    8. 'urs' → logprob: -9.507495880126953
    9. 'er' → logprob: -9.632495880126953
    10. ' sor' → logprob: -9.632495880126953

Token 215: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8213386535644531
    2. ' =' → logprob: -1.8213386535644531
    3. ' "' → logprob: -1.9463386535644531
    4. ' ' → logprob: -2.196338653564453
    5. ' )' → logprob: -2.321338653564453
    6. '"' → logprob: -2.446338653564453
    7. ' ")' → logprob: -2.571338653564453
    8. ' dans' → logprob: -3.696338653564453
    9. '<|end|>' → logprob: -3.696338653564453
    10. '")' → logprob: -3.821338653564453

Token 216: ' logique' (ID: 115350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' une' (ID: 2463)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2696250081062317
    2. 's' → logprob: -1.519624948501587
    3. ' la' → logprob: -5.144625186920166
    4. 'x' → logprob: -6.394625186920166
    5. ' p' → logprob: -6.519625186920166
    6. ' ' → logprob: -6.519625186920166
    7. 'the' → logprob: -6.769625186920166
    8. ' the' → logprob: -6.769625186920166
    9. ' x' → logprob: -7.144625186920166
    10. 'm' → logprob: -7.394625186920166

Token 219: ' bande' (ID: 53730)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9902834296226501
    2. 's' → logprob: -1.990283489227295
    3. 'chaine' → logprob: -2.365283489227295
    4. ' string' → logprob: -2.615283489227295
    5. 'string' → logprob: -2.740283489227295
    6. 'range' → logprob: -2.990283489227295
    7. ' chaîne' → logprob: -3.615283489227295
    8. ' range' → logprob: -3.615283489227295
    9. ' ' → logprob: -3.990283489227295
    10. 'sequence' → logprob: -4.365283489227295

Token 220: ' ou' (ID: 2031)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.41636323928833
    2. ',' → logprob: -2.04136323928833
    3. 's' → logprob: -2.04136323928833
    4. ')' → logprob: -2.54136323928833
    5. 'de' → logprob: -2.66636323928833
    6. ' )' → logprob: -2.91636323928833
    7. '<|end|>' → logprob: -3.29136323928833
    8. ' s' → logprob: -3.29136323928833
    9. ' ' → logprob: -3.41636323928833
    10. ' ,' → logprob: -3.79136323928833

Token 221: ' dans' (ID: 2671)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.360246479511261
    2. 's' → logprob: -1.8602464199066162
    3. ' la' → logprob: -3.110246419906616
    4. ' l' → logprob: -4.485246658325195
    5. ' une' → logprob: -4.735246658325195
    6. 'range' → logprob: -4.860246658325195
    7. ' ' → logprob: -5.235246658325195
    8. 'l' → logprob: -5.485246658325195
    9. 'n' → logprob: -5.485246658325195
    10. 'a' → logprob: -5.610246658325195

Token 222: ' une' (ID: 2463)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8055879473686218
    2. ' la' → logprob: -1.0555880069732666
    3. 's' → logprob: -1.9305880069732666
    4. 'la' → logprob: -3.6805880069732666
    5. 'range' → logprob: -4.6805877685546875
    6. ' une' → logprob: -5.4305877685546875
    7. ' l' → logprob: -5.4305877685546875
    8. ' le' → logprob: -5.6805877685546875
    9. ' range' → logprob: -5.9305877685546875
    10. 'l' → logprob: -6.0555877685546875

Token 223: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5533841848373413
    2. ' range' → logprob: -1.8033841848373413
    3. 'while' → logprob: -2.428384304046631
    4. ' boucle' → logprob: -3.428384304046631
    5. ' while' → logprob: -3.553384304046631
    6. 'chaine' → logprob: -3.803384304046631
    7. 'for' → logprob: -3.928384304046631
    8. ' chaîne' → logprob: -4.553384304046631
    9. 'string' → logprob: -4.678384304046631
    10. ' sequence' → logprob: -5.053384304046631

Token 224: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.5782056450843811
    2. 'rie' → logprob: -0.8282056450843811
    3. 'q' → logprob: -7.453205585479736
    4. 'qu' → logprob: -7.703205585479736
    5. '   ' → logprob: -8.578206062316895
    6. 'que' → logprob: -8.828206062316895
    7. '#' → logprob: -8.828206062316895
    8. 'r' → logprob: -9.078206062316895
    9. 'ance' → logprob: -9.703206062316895
    10. 'QUENCE' → logprob: -9.703206062316895

Token 225: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2124700546264648
    2. '   ' → logprob: -1.2124700546264648
    3. '<|end|>' → logprob: -1.3374700546264648
    4. ' 
' → logprob: -2.837470054626465
    5. ' for' → logprob: -4.087470054626465
    6. '
' → logprob: -4.212470054626465
    7. ' while' → logprob: -4.712470054626465
    8. '    
' → logprob: -5.212470054626465
    9. '\n' → logprob: -5.337470054626465
    10. '<|end|>' → logprob: -5.462470054626465

Token 227: ' h' (ID: 312)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4793371558189392
    2. 'while' → logprob: -1.104337215423584
    3. ' for' → logprob: -3.604337215423584
    4. ' while' → logprob: -4.354337215423584
    5. 'dp' → logprob: -6.854337215423584
    6. 'q' → logprob: -6.979337215423584
    7. 'i' → logprob: -7.104337215423584
    8. 'pos' → logprob: -7.354337215423584
    9. 'd' → logprob: -7.604337215423584
    10. 'cur' → logprob: -8.104336738586426

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3154841363430023
    2. '=' → logprob: -1.3154841661453247
    3. ',' → logprob: -7.440484046936035
    4. ' ' → logprob: -7.815484046936035
    5. ' +=' → logprob: -7.815484046936035
    6. '   ' → logprob: -8.315484046936035
    7. '  ' → logprob: -8.940484046936035
    8. '+=' → logprob: -9.315484046936035
    9. '    ' → logprob: -9.690484046936035
    10. 's' → logprob: -10.065484046936035

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6264885663986206
    2. ' ' → logprob: -0.8764885663986206
    3. ' defaultdict' → logprob: -3.25148868560791
    4. 'default' → logprob: -5.50148868560791
    5. ' s' → logprob: -6.37648868560791
    6. '{}' → logprob: -6.50148868560791
    7. 's' → logprob: -6.62648868560791
    8. ' {}' → logprob: -7.75148868560791
    9. '{' → logprob: -8.12648868560791
    10. ' {' → logprob: -8.50148868560791

Token 230: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0926494225859642
    2. '0' → logprob: -2.467649459838867
    3. '[' → logprob: -6.467649459838867
    4. '10' → logprob: -7.717649459838867
    5. '[]' → logprob: -7.842649459838867
    6. '{}' → logprob: -8.092649459838867
    7. '{' → logprob: -8.217649459838867
    8. 's' → logprob: -8.592649459838867
    9. ' defaultdict' → logprob: -9.092649459838867
    10. 'def' → logprob: -9.467649459838867

Token 231: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5356630086898804
    2. '<|end|>' → logprob: -1.7856630086898804
    3. '#' → logprob: -2.28566312789917
    4. '
' → logprob: -2.78566312789917
    5. ' #' → logprob: -3.28566312789917
    6. '   ' → logprob: -4.41066312789917
    7. '  ' → logprob: -4.66066312789917
    8. '+' → logprob: -4.78566312789917
    9. '=' → logprob: -4.91066312789917
    10. '<|end|>' → logprob: -5.78566312789917

Token 233: ' Initial' (ID: 9209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34468021988868713
    2. ' for' → logprob: -2.4696803092956543
    3. ' #' → logprob: -3.3446803092956543
    4. ')' → logprob: -3.4696803092956543
    5. ' max' → logprob: -3.9696803092956543
    6. ' s' → logprob: -4.719680309295654
    7. '#' → logprob: -4.844680309295654
    8. 's' → logprob: -4.969680309295654
    9. ' while' → logprob: -4.969680309295654
    10. 'for' → logprob: -5.094680309295654

Token 234: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.6730865240097046
    2. 'ization' → logprob: -1.7980865240097046
    3. '=' → logprob: -2.048086643218994
    4. ' =' → logprob: -2.548086643218994
    5. '   ' → logprob: -3.048086643218994
    6. ' ' → logprob: -3.798086643218994
    7. 'e' → logprob: -4.673086643218994
    8. 'iser' → logprob: -4.923086643218994
    9. 'isé' → logprob: -4.923086643218994
    10. '  ' → logprob: -5.798086643218994

Token 235: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3163265585899353
    2. 'h' → logprob: -1.81632661819458
    3. 'hach' → logprob: -3.44132661819458
    4. 'has' → logprob: -3.81632661819458
    5. ' hash' → logprob: -4.31632661819458
    6. 'ha' → logprob: -4.56632661819458
    7. 'height' → logprob: -4.69132661819458
    8. 'score' → logprob: -6.06632661819458
    9. 's' → logprob: -6.19132661819458
    10. 'nombre' → logprob: -6.31632661819458

Token 237: ' courant' (ID: 74694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21567539870738983
    2. ' ' → logprob: -2.0906753540039062
    3. '_' → logprob: -3.4656753540039062
    4. '=' → logprob: -3.8406753540039062
    5. ')' → logprob: -5.465675354003906
    6. '<|end|>' → logprob: -5.715675354003906
    7. 's' → logprob: -6.215675354003906
    8. ',' → logprob: -6.215675354003906
    9. '_value' → logprob: -6.465675354003906
    10. '   ' → logprob: -6.715675354003906

Token 238: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018244294449687004
    2. ' ' → logprob: -4.01824426651001
    3. 's' → logprob: -9.768244743347168
    4. ' s' → logprob: -10.268244743347168
    5. '1' → logprob: -14.768244743347168
    6. '<|end|>' → logprob: -14.768244743347168
    7. '10' → logprob: -15.143244743347168
    8. '  ' → logprob: -15.268244743347168
    9. '   ' → logprob: -15.768244743347168
    10. 'x' → logprob: -16.01824378967285

Token 240: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8233712315559387
    2. '<|end|>' → logprob: -0.8233712315559387
    3. '   ' → logprob: -2.573371171951294
    4. ' ' → logprob: -4.073371410369873
    5. '<|end|>' → logprob: -4.448371410369873
    6. '       ' → logprob: -4.698371410369873
    7. ',' → logprob: -6.573371410369873
    8. '  
' → logprob: -6.823371410369873
    9. ' 
' → logprob: -7.073371410369873
    10. '    
' → logprob: -7.073371410369873

Token 241: ' Le' (ID: 2018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0642777532339096
    2. '<|end|>' → logprob: -3.1892776489257812
    3. '   ' → logprob: -5.189277648925781
    4. '
' → logprob: -5.439277648925781
    5. ' ' → logprob: -5.689277648925781
    6. ' for' → logprob: -6.314277648925781
    7. '        
' → logprob: -6.564277648925781
    8. '<|end|>' → logprob: -6.689277648925781
    9. ',' → logprob: -7.439277648925781
    10. ' 
' → logprob: -7.564277648925781

Token 242: ' hash' (ID: 10691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2861629128456116
    2. ' hash' → logprob: -2.286162853240967
    3. ' for' → logprob: -3.536162853240967
    4. '#' → logprob: -3.536162853240967
    5. 'hash' → logprob: -3.661162853240967
    6. 'for' → logprob: -3.786162853240967
    7. ' #' → logprob: -4.036162853240967
    8. ' while' → logprob: -5.786162853240967
    9. 's' → logprob: -6.036162853240967
    10. 'while' → logprob: -6.411162853240967

Token 243: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5182268619537354
    2. ' +=' → logprob: -1.2682268619537354
    3. '=' → logprob: -2.8932268619537354
    4. ' <<=' → logprob: -3.6432268619537354
    5. ' ^=' → logprob: -4.268226623535156
    6. ' ' → logprob: -4.518226623535156
    7. '+=' → logprob: -5.518226623535156
    8. ' >>=' → logprob: -5.768226623535156
    9. 's' → logprob: -6.393226623535156
    10. '_' → logprob: -6.768226623535156

Token 244: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9966015219688416
    2. ' ' → logprob: -1.1216015815734863
    3. ' d' → logprob: -1.6216015815734863
    4. '=' → logprob: -3.1216015815734863
    5. '<|end|>' → logprob: -3.9966015815734863
    6. '    ' → logprob: -4.246601581573486
    7. ' =' → logprob: -4.746601581573486
    8. 'd' → logprob: -4.871601581573486
    9. '   ' → logprob: -5.871601581573486
    10. '  ' → logprob: -5.996601581573486

Token 245: ' conserver' (ID: 116877)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8326897621154785
    2. ' calcul' → logprob: -1.9576897621154785
    3. 'su' → logprob: -1.9576897621154785
    4. ' suivre' → logprob: -1.9576897621154785
    5. 'hash' → logprob: -2.8326897621154785
    6. 'calcul' → logprob: -2.9576897621154785
    7. 'acc' → logprob: -3.0826897621154785
    8. 'p' → logprob: -3.7076897621154785
    9. '0' → logprob: -3.9576897621154785
    10. 'h' → logprob: -3.9576897621154785

Token 246: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3576773405075073
    2. 's' → logprob: -2.107677459716797
    3. '<|end|>' → logprob: -2.732677459716797
    4. ' un' → logprob: -2.857677459716797
    5. ' a' → logprob: -3.982677459716797
    6. ' une' → logprob: -4.107677459716797
    7. ' l' → logprob: -4.607677459716797
    8. '  ' → logprob: -5.857677459716797
    9. ' la' → logprob: -5.982677459716797
    10. 'es' → logprob: -6.732677459716797

Token 247: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2765512466430664
    2. 'c' → logprob: -2.4015512466430664
    3. 'hash' → logprob: -2.4015512466430664
    4. 'val' → logprob: -2.6515512466430664
    5. 'h' → logprob: -2.6515512466430664
    6. 'empre' → logprob: -3.4015512466430664
    7. 'state' → logprob: -3.5265512466430664
    8. 'code' → logprob: -3.9015512466430664
    9. ' #' → logprob: -4.276551246643066
    10. ' cumul' → logprob: -4.276551246643066

Token 248: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.6801148653030396
    2. ' cumul' → logprob: -1.6801148653030396
    3. 'unique' → logprob: -2.43011474609375
    4. 'current' → logprob: -2.80511474609375
    5. ' cumulative' → logprob: -3.18011474609375
    6. ' ' → logprob: -3.18011474609375
    7. 'mod' → logprob: -3.43011474609375
    8. '<|end|>' → logprob: -3.55511474609375
    9. ' actuelle' → logprob: -3.68011474609375
    10. 'cum' → logprob: -3.93011474609375

Token 249: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8631693720817566
    2. '0' → logprob: -1.6131694316864014
    3. ' chaque' → logprob: -2.2381694316864014
    4. 'h' → logprob: -3.1131694316864014
    5. ' jour' → logprob: -3.1131694316864014
    6. ' p' → logprob: -3.2381694316864014
    7. 'p' → logprob: -3.2381694316864014
    8. 'hash' → logprob: -3.7381694316864014
    9. '   ' → logprob: -4.363169193267822
    10. 's' → logprob: -4.488169193267822

Token 251: ' étape' (ID: 83661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04263622686266899
    2. '<|end|>' → logprob: -4.667636394500732
    3. '_' → logprob: -4.792636394500732
    4. '  ' → logprob: -5.167636394500732
    5. 's' → logprob: -5.792636394500732
    6. ')' → logprob: -6.042636394500732
    7. 'position' → logprob: -6.042636394500732
    8. ' position' → logprob: -6.167636394500732
    9. '   ' → logprob: -6.792636394500732
    10. ' #' → logprob: -7.542636394500732

Token 252: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9763288497924805
    2. '<|end|>' → logprob: -1.1013288497924805
    3. '       ' → logprob: -1.9763288497924805
    4. '   ' → logprob: -2.8513288497924805
    5. ' ' → logprob: -3.9763288497924805
    6. ')' → logprob: -4.2263288497924805
    7. '.' → logprob: -4.6013288497924805
    8. '=' → logprob: -4.7263288497924805
    9. '<|end|>' → logprob: -5.3513288497924805
    10. ' =' → logprob: -5.3513288497924805

Token 253: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8730894327163696
    2. ' l' → logprob: -1.3730894327163696
    3. ' s' → logprob: -2.49808931350708
    4. 'l' → logprob: -3.12308931350708
    5. 's' → logprob: -3.12308931350708
    6. 'x' → logprob: -3.62308931350708
    7. ' laquelle' → logprob: -3.62308931350708
    8. ' x' → logprob: -3.99808931350708
    9. '       ' → logprob: -4.24808931350708
    10. ' ' → logprob: -4.37308931350708

Token 254: ' opérations' (ID: 102793)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0736383199691772
    2. ' x' → logprob: -1.4486383199691772
    3. ' ' → logprob: -1.5736383199691772
    4. 's' → logprob: -2.948638439178467
    5. 'x' → logprob: -3.323638439178467
    6. '1' → logprob: -4.073638439178467
    7. ' val' → logprob: -4.448638439178467
    8. ' h' → logprob: -4.448638439178467
    9. 'val' → logprob: -4.573638439178467
    10. '    ' → logprob: -4.823638439178467

Token 255: ' effectu' (ID: 100880)
  Prédit: ' effectu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectu' → logprob: -0.9549426436424255
    2. '+' → logprob: -1.8299427032470703
    3. '   ' → logprob: -2.2049427032470703
    4. ' +=' → logprob: -2.3299427032470703
    5. '+=' → logprob: -3.3299427032470703
    6. '       ' → logprob: -3.8299427032470703
    7. 'import' → logprob: -3.8299427032470703
    8. ' performed' → logprob: -3.9549427032470703
    9. '=' → logprob: -4.07994270324707
    10. ' +' → logprob: -4.32994270324707

Token 256: 'ées' (ID: 5161)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016874894499778748
    2. ' =' → logprob: -5.64187479019165
    3. ')' → logprob: -5.76687479019165
    4. '+=' → logprob: -6.14187479019165
    5. '   ' → logprob: -6.39187479019165
    6. 'ées' → logprob: -6.51687479019165
    7. '       ' → logprob: -6.76687479019165
    8. '=
' → logprob: -7.39187479019165
    9. 'sur' → logprob: -7.89187479019165
    10. 'és' → logprob: -8.141875267028809

Token 257: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.401679664850235
    2. '   ' → logprob: -2.151679754257202
    3. ',' → logprob: -2.401679754257202
    4. ' ' → logprob: -2.651679754257202
    5. '<|end|>' → logprob: -3.901679754257202
    6. '.' → logprob: -4.526679515838623
    7. ')' → logprob: -5.651679515838623
    8. '        
' → logprob: -5.776679515838623
    9. '    ' → logprob: -6.401679515838623
    10. ' for' → logprob: -6.526679515838623

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03473159670829773
    2. '   ' → logprob: -4.409731388092041
    3. '<|end|>' → logprob: -4.534731388092041
    4. ' ' → logprob: -5.159731388092041
    5. ' for' → logprob: -6.909731388092041
    6. ' ' → logprob: -7.534731388092041
    7. '\' → logprob: -7.534731388092041
    8. '\n' → logprob: -7.534731388092041
    9. ' \' → logprob: -7.659731388092041
    10. ' 
' → logprob: -7.659731388092041

Token 259: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14239448308944702
    2. ' for' → logprob: -2.142394542694092
    3. '       ' → logprob: -4.767394542694092
    4. '   ' → logprob: -5.267394542694092
    5. 'while' → logprob: -6.892394542694092
    6. ' while' → logprob: -9.017394065856934
    7. '        
' → logprob: -9.142394065856934
    8. '	for' → logprob: -9.892394065856934
    9. ' ' → logprob: -9.892394065856934
    10. ' 
' → logprob: -10.267394065856934

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20360414683818817
    2. '=' → logprob: -1.7036041021347046
    3. 's' → logprob: -6.953604221343994
    4. ',' → logprob: -7.453604221343994
    5. 'es' → logprob: -9.203603744506836
    6. ' ' → logprob: -9.453603744506836
    7. '  ' → logprob: -9.828603744506836
    8. ')' → logprob: -9.953603744506836
    9. 'ields' → logprob: -9.953603744506836
    10. 'ield' → logprob: -10.078603744506836

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36477479338645935
    2. ' ' → logprob: -1.4897748231887817
    3. ' defaultdict' → logprob: -3.114774703979492
    4. 'default' → logprob: -3.489774703979492
    5. '{}' → logprob: -6.739774703979492
    6. ' s' → logprob: -7.239774703979492
    7. ' default' → logprob: -7.614774703979492
    8. '[]' → logprob: -7.989774703979492
    9. 's' → logprob: -7.989774703979492
    10. '1' → logprob: -8.114774703979492

Token 262: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5312209725379944
    2. 'default' → logprob: -0.9062209725379944
    3. '{}' → logprob: -6.65622091293335
    4. '10' → logprob: -6.78122091293335
    5. '(default' → logprob: -7.03122091293335
    6. ' ' → logprob: -7.15622091293335
    7. '-' → logprob: -7.28122091293335
    8. '[]' → logprob: -7.40622091293335
    9. '[' → logprob: -7.40622091293335
    10. '1' → logprob: -7.65622091293335

Token 263: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18063919246196747
    2. '   ' → logprob: -2.8056392669677734
    3. '0' → logprob: -3.6806392669677734
    4. ' ' → logprob: -4.430639266967773
    5. '<<' → logprob: -4.430639266967773
    6. '  ' → logprob: -4.930639266967773
    7. 'for' → logprob: -4.930639266967773
    8. '+' → logprob: -4.930639266967773
    9. ' #' → logprob: -5.055639266967773
    10. '#' → logprob: -5.055639266967773

Token 265: ' Ceci' (ID: 144699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.894216001033783
    2. 'for' → logprob: -1.1442160606384277
    3. ' while' → logprob: -2.6442160606384277
    4. 'while' → logprob: -2.7692160606384277
    5. '
' → logprob: -4.144216060638428
    6. '#' → logprob: -4.144216060638428
    7. ' #' → logprob: -4.519216060638428
    8. ' s' → logprob: -4.644216060638428
    9. 's' → logprob: -4.894216060638428
    10. ' y' → logprob: -4.894216060638428

Token 266: ' représente' (ID: 88912)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7146097421646118
    2. ' ' → logprob: -1.3396097421646118
    3. '+' → logprob: -3.3396096229553223
    4. 'e' → logprob: -3.4646096229553223
    5. '0' → logprob: -3.7146096229553223
    6. ' 
' → logprob: -3.8396096229553223
    7. '#' → logprob: -4.089609622955322
    8. '  
' → logprob: -4.214609622955322
    9. ' #' → logprob: -4.339609622955322
    10. '*' → logprob: -4.464609622955322

Token 267: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6655818223953247
    2. ' ' → logprob: -1.0405818223953247
    3. '0' → logprob: -3.040581703186035
    4. 'x' → logprob: -3.290581703186035
    5. 's' → logprob: -4.665581703186035
    6. ' s' → logprob: -4.665581703186035
    7. ' x' → logprob: -4.790581703186035
    8. ' n' → logprob: -5.915581703186035
    9. '10' → logprob: -6.165581703186035
    10. 'n' → logprob: -6.290581703186035

Token 268: ' puissance' (ID: 63494)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.5419623851776123
    2. 'multip' → logprob: -1.5419623851776123
    3. 'prob' → logprob: -1.7919623851776123
    4. 'val' → logprob: -2.1669623851776123
    5. 'pu' → logprob: -2.4169623851776123
    6. 'position' → logprob: -3.5419623851776123
    7. 'tail' → logprob: -3.6669623851776123
    8. 'mult' → logprob: -3.9169623851776123
    9. ' base' → logprob: -4.291962623596191
    10. '1' → logprob: -4.416962623596191

Token 269: ' cour' (ID: 2871)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1711442470550537
    2. ' de' → logprob: -1.2961442470550537
    3. ' x' → logprob: -1.6711442470550537
    4. 's' → logprob: -2.9211442470550537
    5. 'de' → logprob: -3.0461442470550537
    6. ' ' → logprob: -3.7961442470550537
    7. ' s' → logprob: -4.421144485473633
    8. 'mod' → logprob: -4.421144485473633
    9. ' of' → logprob: -4.546144485473633
    10. '        ' → logprob: -4.796144485473633

Token 270: 'ante' (ID: 2116)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04245217889547348
    2. ' de' → logprob: -4.417452335357666
    3. ' =' → logprob: -4.417452335357666
    4. 'u' → logprob: -5.417452335357666
    5. 'x' → logprob: -5.792452335357666
    6. 'e' → logprob: -5.917452335357666
    7. 'ante' → logprob: -6.042452335357666
    8. '   ' → logprob: -6.917452335357666
    9. '       ' → logprob: -7.542452335357666
    10. '**' → logprob: -7.792452335357666

Token 271: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0740711688995361
    2. '       ' → logprob: -1.1990711688995361
    3. 'de' → logprob: -2.449071168899536
    4. 's' → logprob: -2.824071168899536
    5. ' of' → logprob: -2.824071168899536
    6. ' s' → logprob: -3.699071168899536
    7. 'y' → logprob: -4.074070930480957
    8. ' *' → logprob: -4.449070930480957
    9. '(s' → logprob: -4.574070930480957
    10. '        ' → logprob: -4.699070930480957

Token 272: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08654902875423431
    2. 'x' → logprob: -2.5865490436553955
    3. ' s' → logprob: -5.711548805236816
    4. '31' → logprob: -7.086548805236816
    5. 'p' → logprob: -7.461548805236816
    6. '2' → logprob: -7.586548805236816
    7. ' ' → logprob: -7.711548805236816
    8. '10' → logprob: -7.961548805236816
    9. ' x' → logprob: -7.961548805236816
    10. 'm' → logprob: -8.336548805236816

Token 273: ' modulo' (ID: 112372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9809754490852356
    2. '<|end|>' → logprob: -1.3559753894805908
    3. '   ' → logprob: -2.605975389480591
    4. '       ' → logprob: -2.730975389480591
    5. ' ' → logprob: -3.230975389480591
    6. '
' → logprob: -3.230975389480591
    7. ' *' → logprob: -3.605975389480591
    8. '*' → logprob: -4.10597562789917
    9. '<|end|>' → logprob: -4.10597562789917
    10. '.' → logprob: -4.48097562789917

Token 274: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.09090369939804077
    2. ' m' → logprob: -2.4659037590026855
    3. 's' → logprob: -6.7159037590026855
    4. ' s' → logprob: -7.2159037590026855
    5. ' ' → logprob: -11.590903282165527
    6. 'p' → logprob: -13.590903282165527
    7. 'n' → logprob: -13.715903282165527
    8. ' n' → logprob: -13.840903282165527
    9. '10' → logprob: -14.465903282165527
    10. '100' → logprob: -14.465903282165527

Token 275: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5201160311698914
    2. '   ' → logprob: -2.645116090774536
    3. ' ' → logprob: -2.770116090774536
    4. ' 
' → logprob: -2.770116090774536
    5. '       ' → logprob: -3.020116090774536
    6. ',' → logprob: -3.020116090774536
    7. '<|end|>' → logprob: -3.770116090774536
    8. '  
' → logprob: -3.895116090774536
    9. '        
' → logprob: -4.645115852355957
    10. '    
' → logprob: -4.645115852355957

Token 276: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5293886065483093
    2. ' 
' → logprob: -1.154388666152954
    3. ' y' → logprob: -3.279388666152954
    4. '<|end|>' → logprob: -4.529388427734375
    5. ' )' → logprob: -5.154388427734375
    6. ' i' → logprob: -5.154388427734375
    7. ' ,' → logprob: -5.654388427734375
    8. ')' → logprob: -5.904388427734375
    9. '  
' → logprob: -6.029388427734375
    10. '.' → logprob: -6.154388427734375

Token 277: ' calcul' (ID: 7559)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.0665205717086792
    2. ' m' → logprob: -1.1915205717086792
    3. 'm' → logprob: -1.8165205717086792
    4. ' ' → logprob: -3.0665206909179688
    5. ' s' → logprob: -3.4415206909179688
    6. 'y' → logprob: -3.6915206909179688
    7. 's' → logprob: -3.6915206909179688
    8. '1' → logprob: -4.316520690917969
    9. 'x' → logprob: -4.691520690917969
    10. '<|end|>' → logprob: -4.816520690917969

Token 278: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09171678870916367
    2. 's' → logprob: -3.091716766357422
    3. 'm' → logprob: -3.966716766357422
    4. ' m' → logprob: -5.091716766357422
    5. 'ations' → logprob: -5.966716766357422
    6. 'x' → logprob: -6.091716766357422
    7. 'ation' → logprob: -6.466716766357422
    8. 'r' → logprob: -6.466716766357422
    9. '```' → logprob: -6.591716766357422
    10. '#' → logprob: -6.841716766357422

Token 279: ' rapidement' (ID: 43157)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6999813914299011
    2. 'x' → logprob: -1.699981451034546
    3. ' x' → logprob: -2.449981451034546
    4. 'y' → logprob: -2.824981451034546
    5. ' (' → logprob: -2.949981451034546
    6. 's' → logprob: -3.074981451034546
    7. ' s' → logprob: -3.324981451034546
    8. ' ' → logprob: -4.449981212615967
    9. ' p' → logprob: -5.574981212615967
    10. ' m' → logprob: -5.699981212615967

Token 280: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.146140694618225
    2. ' y' → logprob: -1.146140694618225
    3. ' x' → logprob: -1.646140694618225
    4. ' (' → logprob: -2.3961405754089355
    5. 'y' → logprob: -3.6461405754089355
    6. 's' → logprob: -4.1461405754089355
    7. '<|end|>' → logprob: -4.1461405754089355
    8. ',' → logprob: -5.1461405754089355
    9. '(x' → logprob: -5.2711405754089355
    10. ' ,' → logprob: -5.7711405754089355

Token 281: ' changements' (ID: 105486)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0601003170013428
    2. 'x' → logprob: -1.8101003170013428
    3. ' y' → logprob: -1.8101003170013428
    4. 'y' → logprob: -2.0601003170013428
    5. '(' → logprob: -3.3101003170013428
    6. ' x' → logprob: -3.4351003170013428
    7. '(x' → logprob: -3.6851003170013428
    8. 's' → logprob: -3.8101003170013428
    9. ' s' → logprob: -4.435100555419922
    10. 'pow' → logprob: -4.810100555419922

Token 282: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: ' hash' (ID: 10691)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22695839405059814
    2. ' x' → logprob: -1.7269583940505981
    3. ' y' → logprob: -5.351958274841309
    4. ' p' → logprob: -5.476958274841309
    5. 'p' → logprob: -5.601958274841309
    6. 'hash' → logprob: -5.726958274841309
    7. 'y' → logprob: -5.726958274841309
    8. ' hash' → logprob: -6.976958274841309
    9. 's' → logprob: -7.601958274841309
    10. 'h' → logprob: -7.601958274841309

Token 284: ' selon' (ID: 27571)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8986127376556396
    2. ',' → logprob: -1.0236127376556396
    3. '<|end|>' → logprob: -2.5236127376556396
    4. ',
' → logprob: -3.5236127376556396
    5. '       ' → logprob: -3.6486127376556396
    6. ' ,' → logprob: -4.273612976074219
    7. ' ' → logprob: -4.523612976074219
    8. '**' → logprob: -4.523612976074219
    9. '   ' → logprob: -4.773612976074219
    10. '%' → logprob: -5.273612976074219

Token 285: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7418490052223206
    2. ' m' → logprob: -1.2418489456176758
    3. ' s' → logprob: -2.866848945617676
    4. 'x' → logprob: -3.116848945617676
    5. ' la' → logprob: -3.241848945617676
    6. 's' → logprob: -3.491848945617676
    7. ' x' → logprob: -4.116848945617676
    8. 'l' → logprob: -4.366848945617676
    9. ' l' → logprob: -4.491848945617676
    10. '```' → logprob: -5.116848945617676

Token 286: ' position' (ID: 4010)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.1119043827056885
    2. 'm' → logprob: -1.2369043827056885
    3. ' modulo' → logprob: -2.2369043827056885
    4. ' s' → logprob: -2.4869043827056885
    5. 'mod' → logprob: -2.8619043827056885
    6. 's' → logprob: -3.4869043827056885
    7. ' ' → logprob: -3.8619043827056885
    8. ' mod' → logprob: -4.236904144287109
    9. 'x' → logprob: -4.361904144287109
    10. ' x' → logprob: -4.486904144287109

Token 287: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8466976284980774
    2. '   ' → logprob: -1.4716975688934326
    3. ' 
' → logprob: -1.9716975688934326
    4. '<|end|>' → logprob: -2.9716975688934326
    5. '\n' → logprob: -3.0966975688934326
    6. ' ' → logprob: -3.5966975688934326
    7. '  
' → logprob: -3.7216975688934326
    8. '    
' → logprob: -4.221697807312012
    9. '       ' → logprob: -4.596697807312012
    10. '   
' → logprob: -5.721697807312012

Token 289: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03867131844162941
    2. ' for' → logprob: -3.5386712551116943
    3. '   ' → logprob: -5.038671493530273
    4. '       ' → logprob: -6.663671493530273
    5. 'while' → logprob: -7.538671493530273
    6. 'i' → logprob: -7.788671493530273
    7. ' ' → logprob: -9.663671493530273
    8. ' i' → logprob: -10.163671493530273
    9. ' while' → logprob: -10.913671493530273
    10. '	for' → logprob: -11.538671493530273

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4543642997741699
    2. '=' → logprob: -1.07936429977417
    3. 'es' → logprob: -4.32936429977417
    4. 'ange' → logprob: -5.07936429977417
    5. 'eturn' → logprob: -6.57936429977417
    6. 'ef' → logprob: -7.07936429977417
    7. 'e' → logprob: -7.20436429977417
    8. 'ight' → logprob: -7.70436429977417
    9. ' ' → logprob: -7.70436429977417
    10. 'andom' → logprob: -8.079364776611328

Token 291: ' pow' (ID: 9779)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.918341875076294
    2. ' defaultdict' → logprob: -1.418341875076294
    3. ' ' → logprob: -1.918341875076294
    4. '0' → logprob: -1.918341875076294
    5. ' [' → logprob: -3.793341875076294
    6. '[' → logprob: -4.668341636657715
    7. ' default' → logprob: -5.043341636657715
    8. ' n' → logprob: -5.043341636657715
    9. ' -' → logprob: -6.043341636657715
    10. '[]' → logprob: -6.168341636657715

Token 292: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015822319546714425
    2. '(' → logprob: -6.751582145690918
    3. '(s' → logprob: -8.001582145690918
    4. 'x' → logprob: -9.876582145690918
    5. '(n' → logprob: -11.876582145690918
    6. '(y' → logprob: -12.126582145690918
    7. '(
' → logprob: -12.876582145690918
    8. 's' → logprob: -13.001582145690918
    9. ' (' → logprob: -13.001582145690918
    10. '(p' → logprob: -14.251582145690918

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044407643377780914
    2. ',n' → logprob: -4.294407844543457
    3. '(s' → logprob: -4.919407844543457
    4. ',s' → logprob: -5.044407844543457
    5. '(n' → logprob: -5.419407844543457
    6. ',y' → logprob: -5.919407844543457
    7. ',m' → logprob: -6.044407844543457
    8. '(' → logprob: -6.169407844543457
    9. ',p' → logprob: -6.169407844543457
    10. 's' → logprob: -7.044407844543457

Token 294: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2948509752750397
    2. 's' → logprob: -2.044851064682007
    3. 'n' → logprob: -2.669851064682007
    4. '0' → logprob: -3.544851064682007
    5. '2' → logprob: -4.794850826263428
    6. '1' → logprob: -5.544850826263428
    7. 'p' → logprob: -5.669850826263428
    8. ' m' → logprob: -5.669850826263428
    9. '10' → logprob: -6.169850826263428
    10. ' n' → logprob: -6.919850826263428

Token 295: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33726146817207336
    2. ',' → logprob: -1.712261438369751
    3. ' -' → logprob: -2.337261438369751
    4. ')' → logprob: -4.83726167678833
    5. '+' → logprob: -7.71226167678833
    6. ' ,' → logprob: -8.087261199951172
    7. ',n' → logprob: -9.212261199951172
    8. '2' → logprob: -9.837261199951172
    9. '1' → logprob: -9.962261199951172
    10. ',r' → logprob: -10.462261199951172

Token 296: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002884641056880355
    2. '1' → logprob: -5.877884864807129
    3. '-' → logprob: -9.627884864807129
    4. ' ' → logprob: -12.377884864807129
    5. '```' → logprob: -12.690384864807129
    6. ' -' → logprob: -13.002884864807129
    7. '3' → logprob: -13.565384864807129
    8. '

' → logprob: -14.252884864807129
    9. '
' → logprob: -14.315384864807129
    10. '4' → logprob: -15.252884864807129

Token 297: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036810929304920137
    2. '1' → logprob: -8.000368118286133
    3. '
' → logprob: -11.000368118286133
    4. '

' → logprob: -12.437868118286133
    5. '-' → logprob: -12.750368118286133
    6. '```' → logprob: -12.812868118286133
    7. ' ' → logprob: -13.312868118286133
    8. '3' → logprob: -13.437868118286133
    9. '
' → logprob: -14.750368118286133
    10. '``' → logprob: -15.062868118286133

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005605389014817774
    2. ' ,' → logprob: -7.500560760498047
    3. ',m' → logprob: -12.000560760498047
    4. ')' → logprob: -14.500560760498047
    5. ',
' → logprob: -15.125560760498047
    6. 'm' → logprob: -15.625560760498047
    7. ' ' → logprob: -16.000560760498047
    8. '```' → logprob: -16.500560760498047
    9. ',p' → logprob: -17.250560760498047
    10. '   ' → logprob: -17.500560760498047

Token 299: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.7610454708337784e-05
    2. ' m' → logprob: -10.500027656555176
    3. ')' → logprob: -21.12502670288086
    4. ')m' → logprob: -21.62502670288086
    5. '	m' → logprob: -22.00002670288086
    6. 'mod' → logprob: -22.25002670288086
    7. '   ' → logprob: -22.37502670288086
    8. ' м' → logprob: -22.50002670288086
    9. ' ' → logprob: -22.87502670288086
    10. '[m' → logprob: -24.50002670288086

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.149051427608356e-05
    2. ')
' → logprob: -9.875081062316895
    3. ' )' → logprob: -10.500081062316895
    4. ')
' → logprob: -14.000081062316895
    5. ',' → logprob: -14.500081062316895
    6. ')

' → logprob: -15.125081062316895
    7. '   ' → logprob: -15.750081062316895
    8. '))' → logprob: -16.12508201599121
    9. ')`' → logprob: -16.25008201599121
    10. ' ' → logprob: -16.75008201599121

Token 301: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03806581720709801
    2. ' ' → logprob: -4.0380659103393555
    3. '
' → logprob: -4.9130659103393555
    4. ' 
' → logprob: -5.6630659103393555
    5. '<|end|>' → logprob: -5.7880659103393555
    6. '  
' → logprob: -6.1630659103393555
    7. '       ' → logprob: -6.9130659103393555
    8. ')' → logprob: -7.2880659103393555
    9. '    
' → logprob: -7.4130659103393555
    10. '  ' → logprob: -7.5380659103393555

Token 302: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26970502734184265
    2. '
' → logprob: -2.894705057144165
    3. '<|end|>' → logprob: -3.019705057144165
    4. ' 
' → logprob: -3.269705057144165
    5. '   ' → logprob: -3.519705057144165
    6. '#' → logprob: -3.519705057144165
    7. ' #' → logprob: -3.894705057144165
    8. ')' → logprob: -5.394704818725586
    9. '  
' → logprob: -5.644704818725586
    10. '  ' → logprob: -5.644704818725586

Token 303: ' '' (ID: 461)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07018139213323593
    2. 'x' → logprob: -3.945181369781494
    3. ' pow' → logprob: -3.945181369781494
    4. '(pow' → logprob: -4.320181369781494
    5. '(x' → logprob: -4.570181369781494
    6. ' (' → logprob: -6.570181369781494
    7. '(m' → logprob: -6.695181369781494
    8. ' x' → logprob: -7.195181369781494
    9. 'm' → logprob: -7.695181369781494
    10. '(' → logprob: -7.820181369781494

Token 304: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3486999273300171
    2. 'pow' → logprob: -1.473699927330017
    3. 'y' → logprob: -3.4737000465393066
    4. 'm' → logprob: -3.8487000465393066
    5. '(x' → logprob: -5.473700046539307
    6. ' x' → logprob: -6.098700046539307
    7. '(' → logprob: -6.348700046539307
    8. ' pow' → logprob: -6.848700046539307
    9. '(pow' → logprob: -6.973700046539307
    10. ' y' → logprob: -7.223700046539307

Token 305: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19898094236850739
    2. ''' → logprob: -1.8239809274673462
    3. '=' → logprob: -4.073980808258057
    4. ' '' → logprob: -7.073980808258057
    5. ')' → logprob: -7.573980808258057
    6. ' ='' → logprob: -8.573981285095215
    7. ' ' → logprob: -8.698981285095215
    8. '')' → logprob: -9.073981285095215
    9. '='' → logprob: -9.698981285095215
    10. ')'' → logprob: -10.448981285095215

Token 306: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0382622629404068
    2. '=' → logprob: -4.038262367248535
    3. '<|end|>' → logprob: -4.288262367248535
    4. ')' → logprob: -5.413262367248535
    5. ' ' → logprob: -7.413262367248535
    6. ' #' → logprob: -7.913262367248535
    7. '<|end|>' → logprob: -8.413262367248535
    8. '#' → logprob: -8.788262367248535
    9. ':' → logprob: -9.163262367248535
    10. ',' → logprob: -9.538262367248535

Token 307: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1819649636745453
    2. ' pow' → logprob: -1.8069649934768677
    3. '(pow' → logprob: -6.681964874267578
    4. 'x' → logprob: -7.556964874267578
    5. 'm' → logprob: -9.431964874267578
    6. '1' → logprob: -9.556964874267578
    7. ' (' → logprob: -9.681964874267578
    8. ' x' → logprob: -9.931964874267578
    9. ' ' → logprob: -10.056964874267578
    10. '(' → logprob: -10.806964874267578

Token 308: '’in' (ID: 15276)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.32496896386146545
    2. ' pow' → logprob: -1.949968934059143
    3. '(pow' → logprob: -2.5749690532684326
    4. 'inverse' → logprob: -3.3249690532684326
    5. ' inverse' → logprob: -4.9499688148498535
    6. 'a' → logprob: -5.0749688148498535
    7. 'x' → logprob: -5.3249688148498535
    8. 'e' → logprob: -6.9499688148498535
    9. ' modular' → logprob: -7.8249688148498535
    10. 'in' → logprob: -7.9499688148498535

Token 309: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.0004179217794444412
    2. 'v' → logprob: -7.875417709350586
    3. 'vers' → logprob: -11.000417709350586
    4. 'pow' → logprob: -11.875417709350586
    5. 't' → logprob: -12.750417709350586
    6. 'versed' → logprob: -12.875417709350586
    7. 'inverse' → logprob: -13.000417709350586
    8. 'version' → logprob: -13.250417709350586
    9. 'VERSE' → logprob: -13.500417709350586
    10. 'vr' → logprob: -14.875417709350586

Token 310: ' multiplic' (ID: 67929)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -1.0542887449264526
    2. ' de' → logprob: -1.4292887449264526
    3. 'mod' → logprob: -1.6792887449264526
    4. '<|end|>' → logprob: -2.179288864135742
    5. ')' → logprob: -3.054288864135742
    6. ' mod' → logprob: -3.179288864135742
    7. 'de' → logprob: -5.054288864135742
    8. ' )' → logprob: -5.179288864135742
    9. '_mod' → logprob: -5.679288864135742
    10. ' modular' → logprob: -6.179288864135742

Token 311: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0010281658032909036
    2. 'ative' → logprob: -7.126028060913086
    3. 'e' → logprob: -9.876028060913086
    4. 'r' → logprob: -10.251028060913086
    5. '```' → logprob: -10.251028060913086
    6. 'ateur' → logprob: -10.376028060913086
    7. 'if' → logprob: -11.376028060913086
    8. 'itif' → logprob: -11.626028060913086
    9. 'a' → logprob: -12.001028060913086
    10. 'al' → logprob: -12.001028060913086

Token 312: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14563363790512085
    2. ' modulo' → logprob: -2.3956336975097656
    3. 'de' → logprob: -3.7706336975097656
    4. 'mod' → logprob: -4.270633697509766
    5. '<|end|>' → logprob: -6.145633697509766
    6. ' mod' → logprob: -6.270633697509766
    7. ')' → logprob: -6.645633697509766
    8. ' ' → logprob: -7.145633697509766
    9. ' of' → logprob: -7.895633697509766
    10. ',' → logprob: -8.145633697509766

Token 313: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004629007540643215
    2. ' x' → logprob: -5.379629135131836
    3. 'y' → logprob: -11.879629135131836
    4. '(x' → logprob: -14.004629135131836
    5. ' y' → logprob: -14.129629135131836
    6. 'm' → logprob: -16.379629135131836
    7. ' ' → logprob: -16.754629135131836
    8. '	x' → logprob: -17.129629135131836
    9. ''x' → logprob: -17.879629135131836
    10. '{x' → logprob: -18.379629135131836

Token 314: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078639671206474
    2. ' m' → logprob: -5.5040788650512695
    3. 'x' → logprob: -15.50407886505127
    4. '(m' → logprob: -17.754077911376953
    5. ' ' → logprob: -18.254077911376953
    6. '	m' → logprob: -19.254077911376953
    7. '   ' → logprob: -19.379077911376953
    8. '```' → logprob: -19.504077911376953
    9. ' x' → logprob: -19.629077911376953
    10. ''m' → logprob: -20.254077911376953

Token 316: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2317584902048111
    2. ')' → logprob: -1.73175847530365
    3. ' ' → logprob: -5.1067585945129395
    4. '<|end|>' → logprob: -5.1067585945129395
    5. '
' → logprob: -5.2317585945129395
    6. '    
' → logprob: -5.4817585945129395
    7. ',' → logprob: -6.3567585945129395
    8. ' )' → logprob: -6.7317585945129395
    9. '\n' → logprob: -6.9817585945129395
    10. '  ' → logprob: -7.1067585945129395

Token 317: ' utilisé' (ID: 53138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4933197498321533
    2. '   ' → logprob: -1.9933197498321533
    3. ')' → logprob: -2.1183197498321533
    4. ' 
' → logprob: -2.4933197498321533
    5. ' )' → logprob: -4.118319511413574
    6. '       ' → logprob: -4.743319511413574
    7. ' y' → logprob: -5.243319511413574
    8. '    
' → logprob: -5.618319511413574
    9. '<|end|>' → logprob: -5.743319511413574
    10. '   
' → logprob: -6.118319511413574

Token 318: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6728014349937439
    2. '<|end|>' → logprob: -1.5478014945983887
    3. ' ' → logprob: -1.9228014945983887
    4. ' for' → logprob: -3.1728014945983887
    5. ' )' → logprob: -3.6728014945983887
    6. ' pour' → logprob: -3.9228014945983887
    7. ',' → logprob: -4.172801494598389
    8. '   ' → logprob: -5.297801494598389
    9. '.' → logprob: -5.422801494598389
    10. ' afin' → logprob: -5.547801494598389

Token 319: ' "' (ID: 392)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5961329340934753
    2. 'mettre' → logprob: -1.9711329936981201
    3. ' y' → logprob: -2.47113299369812
    4. ')' → logprob: -2.97113299369812
    5. 'dé' → logprob: -3.59613299369812
    6. ' mettre' → logprob: -3.84613299369812
    7. 'pow' → logprob: -3.97113299369812
    8. 'calcul' → logprob: -4.471132755279541
    9. ' recal' → logprob: -4.721132755279541
    10. 'div' → logprob: -4.971132755279541

Token 320: 'ann' (ID: 934)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17931465804576874
    2. ' y' → logprob: -1.9293146133422852
    3. 'pow' → logprob: -4.554314613342285
    4. 'h' → logprob: -5.804314613342285
    5. ' (' → logprob: -6.179314613342285
    6. '(y' → logprob: -6.804314613342285
    7. '(' → logprob: -7.929314613342285
    8. '(pow' → logprob: -8.054314613342285
    9. 'r' → logprob: -8.304314613342285
    10. '1' → logprob: -8.429314613342285

Token 321: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.00014215784904081374
    2. 'ul' → logprob: -10.250142097473145
    3. 'ule' → logprob: -10.500142097473145
    4. 'u' → logprob: -10.500142097473145
    5. '   ' → logprob: -11.875142097473145
    6. 'iler' → logprob: -11.875142097473145
    7. 'ulé' → logprob: -12.375142097473145
    8. '```' → logprob: -12.375142097473145
    9. 'ulation' → logprob: -12.500142097473145
    10. 'ih' → logprob: -12.500142097473145

Token 322: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09917710721492767
    2. ')' → logprob: -3.599177122116089
    3. ' "' → logprob: -3.724177122116089
    4. 'x' → logprob: -4.84917688369751
    5. ' l' → logprob: -4.84917688369751
    6. ' la' → logprob: -5.34917688369751
    7. '")' → logprob: -5.72417688369751
    8. ' x' → logprob: -5.72417688369751
    9. ' les' → logprob: -5.97417688369751
    10. 'l' → logprob: -5.97417688369751

Token 323: ' une' (ID: 2463)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3337385058403015
    2. ' les' → logprob: -2.4587385654449463
    3. 'y' → logprob: -2.8337385654449463
    4. 'x' → logprob: -3.5837385654449463
    5. ' la' → logprob: -3.7087385654449463
    6. '<|end|>' → logprob: -3.7087385654449463
    7. ' le' → logprob: -4.333738327026367
    8. ' x' → logprob: -4.333738327026367
    9. ' l' → logprob: -4.833738327026367
    10. ')' → logprob: -4.833738327026367

Token 324: ' multiplication' (ID: 86340)
  Prédit: ' puissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -1.0849993228912354
    2. 'pow' → logprob: -1.3349993228912354
    3. 'multip' → logprob: -1.5849993228912354
    4. ' multip' → logprob: -2.9599993228912354
    5. ' multiplication' → logprob: -3.5849993228912354
    6. 'x' → logprob: -3.7099993228912354
    7. 'pu' → logprob: -4.459999084472656
    8. 'élé' → logprob: -4.709999084472656
    9. ')' → logprob: -4.834999084472656
    10. ' valeur' → logprob: -4.834999084472656

Token 325: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024078846909105778
    2. ' x' → logprob: -6.252408027648926
    3. 'y' → logprob: -7.752408027648926
    4. ' y' → logprob: -10.502408027648926
    5. 'r' → logprob: -11.127408027648926
    6. ' ' → logprob: -12.877408027648926
    7. '<|end|>' → logprob: -14.127408027648926
    8. 'm' → logprob: -14.377408027648926
    9. 'l' → logprob: -14.627408027648926
    10. '```' → logprob: -14.752408027648926

Token 327: ' lors' (ID: 15456)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0326862335205078
    2. '   ' → logprob: -1.4076862335205078
    3. ')' → logprob: -1.7826862335205078
    4. '.' → logprob: -1.7826862335205078
    5. ',' → logprob: -3.407686233520508
    6. ' )' → logprob: -4.907686233520508
    7. ')
' → logprob: -5.157686233520508
    8. ' ' → logprob: -5.782686233520508
    9. '
' → logprob: -6.282686233520508
    10. ').' → logprob: -6.282686233520508

Token 328: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9699044227600098
    2. ' de' → logprob: -1.7199044227600098
    3. ' des' → logprob: -1.8449044227600098
    4. '<|end|>' → logprob: -1.8449044227600098
    5. ' d' → logprob: -2.5949044227600098
    6. ' du' → logprob: -4.21990442276001
    7. 'd' → logprob: -4.84490442276001
    8. ' )' → logprob: -4.84490442276001
    9. 'des' → logprob: -5.46990442276001
    10. 'de' → logprob: -5.71990442276001

Token 329: ' déplacement' (ID: 138449)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4383844137191772
    2. 'dé' → logprob: -1.5633844137191772
    3. ' for' → logprob: -2.438384532928467
    4. 'p' → logprob: -2.938384532928467
    5. 'ret' → logprob: -3.438384532928467
    6. ')' → logprob: -3.688384532928467
    7. 's' → logprob: -3.688384532928467
    8. 'hash' → logprob: -3.813384532928467
    9. ' retour' → logprob: -3.813384532928467
    10. ' recul' → logprob: -3.813384532928467

Token 330: '.
' (ID: 558)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2219034433364868
    2. ')' → logprob: -1.3469034433364868
    3. ',' → logprob: -1.9719034433364868
    4. ' vers' → logprob: -2.7219033241271973
    5. '.' → logprob: -2.9719033241271973
    6. '   ' → logprob: -3.3469033241271973
    7. ' du' → logprob: -3.4719033241271973
    8. '<|end|>' → logprob: -3.5969033241271973
    9. '       ' → logprob: -4.096903324127197
    10. ' ' → logprob: -4.471903324127197

Token 331: '                             ' (ID: 8616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7197529077529907
    2. '<|end|>' → logprob: -1.9697529077529907
    3. ' ' → logprob: -2.094752788543701
    4. '
' → logprob: -2.469752788543701
    5. '\n' → logprob: -2.594752788543701
    6. ' 
' → logprob: -3.469752788543701
    7. '  
' → logprob: -4.219752788543701
    8. '    
' → logprob: -4.219752788543701
    9. ')' → logprob: -4.719752788543701
    10. '[' → logprob: -5.594752788543701

Token 332: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6387020349502563
    2. '
' → logprob: -1.0137020349502563
    3. '\n' → logprob: -2.888701915740967
    4. ')' → logprob: -4.388701915740967
    5. '  
' → logprob: -4.638701915740967
    6. '    
' → logprob: -4.638701915740967
    7. ' ' → logprob: -4.888701915740967
    8. ' 
' → logprob: -5.263701915740967
    9. '   
' → logprob: -6.513701915740967
    10. ')
' → logprob: -6.763701915740967

Token 333: ' pow' (ID: 9779)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5236272811889648
    2. '   ' → logprob: -1.8986272811889648
    3. 'while' → logprob: -1.8986272811889648
    4. ' for' → logprob: -3.023627281188965
    5. '       ' → logprob: -3.148627281188965
    6. ' while' → logprob: -4.523627281188965
    7. 'i' → logprob: -6.398627281188965
    8. '#' → logprob: -6.523627281188965
    9. ' ' → logprob: -8.023627281188965
    10. 'j' → logprob: -8.023627281188965

Token 334: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011225125752389431
    2. '(' → logprob: -4.51122522354126
    3. '<|end|>' → logprob: -9.386224746704102
    4. ')' → logprob: -10.636224746704102
    5. '(
' → logprob: -11.261224746704102
    6. 'x' → logprob: -11.261224746704102
    7. '(r' → logprob: -11.511224746704102
    8. '```' → logprob: -12.136224746704102
    9. 'r' → logprob: -12.511224746704102
    10. '(pow' → logprob: -12.886224746704102

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012774959905073047
    2. '(x' → logprob: -7.126277446746826
    3. ',x' → logprob: -8.626277923583984
    4. '(' → logprob: -9.001277923583984
    5. ',
' → logprob: -10.126277923583984
    6. ')' → logprob: -10.251277923583984
    7. ',m' → logprob: -10.376277923583984
    8. ',r' → logprob: -10.626277923583984
    9. ' ,' → logprob: -10.751277923583984
    10. 'm' → logprob: -13.001277923583984

Token 336: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002187141450121999
    2. '-' → logprob: -6.877187252044678
    3. ' m' → logprob: -6.877187252044678
    4. ')' → logprob: -10.37718677520752
    5. ' -' → logprob: -10.37718677520752
    6. '-m' → logprob: -10.75218677520752
    7. ' ' → logprob: -11.00218677520752
    8. '10' → logprob: -11.50218677520752
    9. '(m' → logprob: -12.25218677520752
    10. '  ' → logprob: -13.87718677520752

Token 337: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017072015907615423
    2. ' -' → logprob: -6.376707077026367
    3. ')' → logprob: -12.376707077026367
    4. '```' → logprob: -15.251707077026367
    5. ' ' → logprob: -16.001707077026367
    6. '
' → logprob: -16.376707077026367
    7. ',' → logprob: -16.376707077026367
    8. ')-' → logprob: -16.626707077026367
    9. '2' → logprob: -16.876707077026367
    10. '–' → logprob: -17.189207077026367

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -12.12501335144043
    3. '-' → logprob: -13.43751335144043
    4. '```' → logprob: -13.62501335144043
    5. ')' → logprob: -13.68751335144043
    6. '

' → logprob: -14.00001335144043
    7. '
' → logprob: -14.18751335144043
    8. '3' → logprob: -15.00001335144043
    9. '
' → logprob: -15.50001335144043
    10. ' -' → logprob: -15.50001335144043

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002407282590866089
    2. ' ,' → logprob: -8.500240325927734
    3. ',m' → logprob: -10.250240325927734
    4. ')' → logprob: -13.750240325927734
    5. ',
' → logprob: -15.250240325927734
    6. 'm' → logprob: -15.625240325927734
    7. ',r' → logprob: -15.750240325927734
    8. '```' → logprob: -16.625240325927734
    9. ' ' → logprob: -16.875240325927734
    10. ',x' → logprob: -17.875240325927734

Token 340: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023246178403496742
    2. ' m' → logprob: -3.7732462882995605
    3. ')' → logprob: -14.398245811462402
    4. '	m' → logprob: -16.77324676513672
    5. ')m' → logprob: -17.02324676513672
    6. ' ' → logprob: -17.89824676513672
    7. ' м' → logprob: -17.89824676513672
    8. ' ' → logprob: -18.02324676513672
    9. ',' → logprob: -18.64824676513672
    10. '   ' → logprob: -18.77324676513672

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. ' )' → logprob: -10.000062942504883
    3. ')
' → logprob: -11.375062942504883
    4. ')
' → logprob: -13.500062942504883
    5. '   ' → logprob: -13.750062942504883
    6. ')

' → logprob: -13.875062942504883
    7. ',' → logprob: -14.375062942504883
    8. ' ' → logprob: -14.500062942504883
    9. ')`' → logprob: -15.125062942504883
    10. ')#' → logprob: -15.500062942504883

Token 342: ' utilise' (ID: 70283)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8040773272514343
    2. '   ' → logprob: -1.179077386856079
    3. ')' → logprob: -1.679077386856079
    4. '<|end|>' → logprob: -3.804077386856079
    5. '    
' → logprob: -4.6790771484375
    6. ' 
' → logprob: -5.0540771484375
    7. ' ' → logprob: -5.3040771484375
    8. '  
' → logprob: -5.5540771484375
    9. ')
' → logprob: -6.1790771484375
    10. ' for' → logprob: -6.8040771484375

Token 343: ' le' (ID: 505)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5290244221687317
    2. 'l' → logprob: -1.779024362564087
    3. 'pow' → logprob: -2.404024362564087
    4. 'le' → logprob: -2.904024362564087
    5. 'la' → logprob: -2.904024362564087
    6. ' modular' → logprob: -4.404024600982666
    7. 'm' → logprob: -5.029024600982666
    8. '<|end|>' → logprob: -5.529024600982666
    9. 'une' → logprob: -5.779024600982666
    10. 'Euler' → logprob: -5.904024600982666

Token 344: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.020350804552435875
    2. 'mod' → logprob: -4.145350933074951
    3. 'ex' → logprob: -7.020350933074951
    4. 'mont' → logprob: -7.145350933074951
    5. 'alg' → logprob: -7.395350933074951
    6. ' pow' → logprob: -7.895350933074951
    7. 'pu' → logprob: -7.895350933074951
    8. 'module' → logprob: -8.395350456237793
    9. 'p' → logprob: -8.770350456237793
    10. 'mé' → logprob: -9.270350456237793

Token 345: ' thé' (ID: 34740)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6484182476997375
    2. ' ' → logprob: -1.0234181880950928
    3. ' prince' → logprob: -3.5234181880950928
    4. '<|end|>' → logprob: -3.6484181880950928
    5. ')' → logprob: -4.523418426513672
    6. '_' → logprob: -4.648418426513672
    7. 'pr' → logprob: -5.398418426513672
    8. 'th' → logprob: -5.523418426513672
    9. ' theorem' → logprob: -6.210918426513672
    10. 'prime' → logprob: -6.335918426513672

Token 346: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.007673349231481552
    2. 'orem' → logprob: -5.757673263549805
    3. 'ore' → logprob: -5.882673263549805
    4. 'ème' → logprob: -6.757673263549805
    5. 'orme' → logprob: -8.757673263549805
    6. 'ор' → logprob: -9.382673263549805
    7. '```' → logprob: -9.632673263549805
    8. 'orique' → logprob: -9.632673263549805
    9. 'me' → logprob: -10.132673263549805
    10. 'é' → logprob: -10.382673263549805

Token 347: 'ème' (ID: 9767)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.922630250453949
    2. 'me' → logprob: -1.0476303100585938
    3. 'ème' → logprob: -1.5476303100585938
    4. 'ore' → logprob: -3.7976303100585938
    5. 'reme' → logprob: -5.172630310058594
    6. 're' → logprob: -6.047630310058594
    7. 'orem' → logprob: -6.172630310058594
    8. 'eme' → logprob: -6.672630310058594
    9. 'ême' → logprob: -7.047630310058594
    10. 'orme' → logprob: -7.172630310058594

Token 348: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12182777374982834
    2. ' de' → logprob: -2.4968278408050537
    3. 'f' → logprob: -4.371827602386475
    4. 'd' → logprob: -4.496827602386475
    5. 'fer' → logprob: -4.871827602386475
    6. ' ' → logprob: -8.621828079223633
    7. 'eur' → logprob: -9.621828079223633
    8. '_de' → logprob: -9.621828079223633
    9. 'ferm' → logprob: -9.621828079223633
    10. '1' → logprob: -9.746828079223633

Token 349: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0020019153598695993
    2. ' Ferm' → logprob: -6.377001762390137
    3. 'ferm' → logprob: -9.377001762390137
    4. 'fer' → logprob: -9.627001762390137
    5. 'Euler' → logprob: -10.002001762390137
    6. 'Fer' → logprob: -10.502001762390137
    7. '```' → logprob: -11.627001762390137
    8. 'f' → logprob: -11.877001762390137
    9. '(F' → logprob: -12.127001762390137
    10. 'Ф' → logprob: -12.252001762390137

Token 350: 'at' (ID: 266)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1307388544082642
    2. 'nel' → logprob: -1.7557388544082642
    3. 'me' → logprob: -2.7557387351989746
    4. 'mé' → logprob: -2.8807387351989746
    5. 'ner' → logprob: -3.3807387351989746
    6. 'ma' → logprob: -3.3807387351989746
    7. '```' → logprob: -3.6307387351989746
    8. 'or' → logprob: -3.7557387351989746
    9. 'neau' → logprob: -3.7557387351989746
    10. 'in' → logprob: -3.7557387351989746

Token 351: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3506534695625305
    2. '
' → logprob: -1.7256534099578857
    3. ')' → logprob: -2.3506534099578857
    4. '       ' → logprob: -5.225653648376465
    5. ' ' → logprob: -5.850653648376465
    6. '    
' → logprob: -5.850653648376465
    7. '  
' → logprob: -6.100653648376465
    8. '<|end|>' → logprob: -6.350653648376465
    9. ')
' → logprob: -6.600653648376465
    10. ',' → logprob: -6.850653648376465

Token 352: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27159228920936584
    2. ' )' → logprob: -1.5215922594070435
    3. '   ' → logprob: -4.646592140197754
    4. ' ' → logprob: -6.771592140197754
    5. ' x' → logprob: -7.021592140197754
    6. ' car' → logprob: -7.146592140197754
    7. ' ce' → logprob: -7.271592140197754
    8. 'x' → logprob: -7.521592140197754
    9. ' permettant' → logprob: -7.521592140197754
    10. ' 
' → logprob: -7.771592140197754

Token 353: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3868735730648041
    2. ' m' → logprob: -1.1368736028671265
    3. 'x' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.386873245239258
    5. '	m' → logprob: -14.886873245239258
    6. ' ' → logprob: -15.261873245239258
    7. ' x' → logprob: -16.136873245239258
    8. ' is' → logprob: -16.636873245239258
    9. ' м' → logprob: -16.636873245239258
    10. ' isinstance' → logprob: -17.136873245239258

Token 354: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.12048669159412384
    2. 'est' → logprob: -2.7454867362976074
    3. ' is' → logprob: -3.2454867362976074
    4. 'is' → logprob: -5.120486736297607
    5. ''est' → logprob: -6.245486736297607
    6. '<|end|>' → logprob: -6.370486736297607
    7. '#' → logprob: -8.24548625946045
    8. 's' → logprob: -8.99548625946045
    9. ')' → logprob: -9.99548625946045
    10. '’est' → logprob: -10.12048625946045

Token 355: ' suppos' (ID: 167611)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06635073572397232
    2. 'un' → logprob: -4.191350936889648
    3. ' probablement' → logprob: -4.441350936889648
    4. ' une' → logprob: -5.191350936889648
    5. 'prime' → logprob: -5.316350936889648
    6. ' a' → logprob: -5.441350936889648
    7. ' prime' → logprob: -5.566350936889648
    8. ' suppos' → logprob: -5.691350936889648
    9. 'prem' → logprob: -6.066350936889648
    10. 'a' → logprob: -6.316350936889648

Token 356: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10814917087554932
    2. '=' → logprob: -2.7331490516662598
    3. ''' → logprob: -4.48314905166626
    4. ')' → logprob: -5.73314905166626
    5. ''à' → logprob: -5.98314905166626
    6. ''être' → logprob: -6.10814905166626
    7. 'ément' → logprob: -6.60814905166626
    8. 'ée' → logprob: -6.98314905166626
    9. 'posé' → logprob: -6.98314905166626
    10. ''é' → logprob: -7.10814905166626

Token 357: ' premier' (ID: 15506)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.06439310312271118
    2. ' être' → logprob: -3.3143930435180664
    3. 'prime' → logprob: -4.439393043518066
    4. 'prem' → logprob: -5.939393043518066
    5. ''être' → logprob: -5.939393043518066
    6. '’être' → logprob: -6.314393043518066
    7. '<|end|>' → logprob: -6.314393043518066
    8. 'à' → logprob: -7.564393043518066
    9. 'Ê' → logprob: -7.689393043518066
    10. ' ' → logprob: -7.689393043518066

Token 358: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11901967227458954
    2. ')' → logprob: -2.4940197467803955
    3. '.' → logprob: -4.869019508361816
    4. '
' → logprob: -4.994019508361816
    5. '    
' → logprob: -5.744019508361816
    6. '<|end|>' → logprob: -5.869019508361816
    7. ',' → logprob: -6.119019508361816
    8. ' )' → logprob: -6.494019508361816
    9. ')
' → logprob: -6.494019508361816
    10. '\n' → logprob: -6.744019508361816

Token 359: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3191486597061157
    2. ')' → logprob: -1.4441486597061157
    3. '
' → logprob: -1.9441486597061157
    4. '   ' → logprob: -2.319148540496826
    5. ' )' → logprob: -2.944148540496826
    6. '\n' → logprob: -3.194148540496826
    7. ' 
' → logprob: -3.319148540496826
    8. '<|end|>' → logprob: -3.444148540496826
    9. ' y' → logprob: -3.569148540496826
    10. ' p' → logprob: -4.694148540496826

Token 360: '’in' (ID: 15276)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7747476696968079
    2. 'e' → logprob: -1.524747610092163
    3. 'a' → logprob: -2.024747610092163
    4. '')' → logprob: -2.274747610092163
    5. ')' → logprob: -4.899747848510742
    6. 'ambda' → logprob: -4.899747848510742
    7. ' inverse' → logprob: -5.149747848510742
    8. ''utilisateur' → logprob: -5.149747848510742
    9. ''ex' → logprob: -5.649747848510742
    10. ''é' → logprob: -5.649747848510742

Token 361: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.002344969194382429
    2. 'v' → logprob: -7.002345085144043
    3. 't' → logprob: -7.752345085144043
    4. '[' → logprob: -8.127345085144043
    5. ']' → logprob: -8.752345085144043
    6. 'def' → logprob: -9.502345085144043
    7. '=' → logprob: -9.877345085144043
    8. 'vert' → logprob: -9.877345085144043
    9. 'VERSE' → logprob: -10.127345085144043
    10. 'té' → logprob: -10.377345085144043

Token 362: ' de' (ID: 334)
  Prédit: ' multiplic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiplic' → logprob: -0.741174578666687
    2. ')' → logprob: -1.241174578666687
    3. ' modulo' → logprob: -2.3661746978759766
    4. 'multip' → logprob: -2.6161746978759766
    5. 'mod' → logprob: -3.3661746978759766
    6. ' )' → logprob: -4.116174697875977
    7. '<|end|>' → logprob: -5.491174697875977
    8. ' mod' → logprob: -5.741174697875977
    9. '_mul' → logprob: -6.741174697875977
    10. '_mod' → logprob: -6.741174697875977

Token 363: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02630993351340294
    2. ' x' → logprob: -3.6513099670410156
    3. 'r' → logprob: -12.776309967041016
    4. '<|end|>' → logprob: -12.776309967041016
    5. ' ' → logprob: -13.276309967041016
    6. ''x' → logprob: -14.151309967041016
    7. '(x' → logprob: -14.526309967041016
    8. '	x' → logprob: -15.526309967041016
    9. 'm' → logprob: -15.526309967041016
    10. ')x' → logprob: -15.776309967041016

Token 364: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.31307360529899597
    2. ')' → logprob: -1.4380736351013184
    3. '%' → logprob: -4.313073635101318
    4. ' )' → logprob: -4.938073635101318
    5. ' %' → logprob: -5.563073635101318
    6. ' mod' → logprob: -5.688073635101318
    7. ' est' → logprob: -6.313073635101318
    8. 'mod' → logprob: -6.813073635101318
    9. ',' → logprob: -8.68807315826416
    10. ')%' → logprob: -9.18807315826416

Token 365: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31326285004615784
    2. ' m' → logprob: -1.3132628202438354
    3. ' ' → logprob: -14.938262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '	m' → logprob: -15.563262939453125
    6. ''' → logprob: -16.563262939453125
    7. ' 
' → logprob: -16.813262939453125
    8. ''m' → logprob: -16.938262939453125
    9. ' м' → logprob: -17.063262939453125
    10. '(m' → logprob: -17.313262939453125

Token 366: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0119858980178833
    2. '
' → logprob: -1.1369858980178833
    3. '       ' → logprob: -1.6369858980178833
    4. ')' → logprob: -2.3869857788085938
    5. ')
' → logprob: -4.761985778808594
    6. '  
' → logprob: -5.261985778808594
    7. ' ' → logprob: -5.511985778808594
    8. '    
' → logprob: -6.136985778808594
    9. '\n' → logprob: -6.386985778808594
    10. ' for' → logprob: -6.761985778808594

Token 367: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.526393711566925
    2. 'x' → logprob: -1.1513936519622803
    3. ' r' → logprob: -3.1513936519622803
    4. ' x' → logprob: -3.5263936519622803
    5. '<|end|>' → logprob: -4.776393890380859
    6. 'pow' → logprob: -5.276393890380859
    7. '```' → logprob: -5.776393890380859
    8. ' (' → logprob: -6.901393890380859
    9. '(x' → logprob: -7.401393890380859
    10. ' ' → logprob: -7.401393890380859

Token 368: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4777161180973053
    2. ')' → logprob: -1.352716088294983
    3. '-' → logprob: -3.1027162075042725
    4. '<|end|>' → logprob: -3.4777162075042725
    5. '^{-' → logprob: -4.352715969085693
    6. ' **' → logprob: -5.602715969085693
    7. ' ' → logprob: -5.727715969085693
    8. 'pow' → logprob: -5.727715969085693
    9. '^{' → logprob: -5.852715969085693
    10. ' -' → logprob: -5.977715969085693

Token 369: 'm' (ID: 76)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20268334448337555
    2. 'm' → logprob: -1.7026833295822144
    3. '(m' → logprob: -7.577683448791504
    4. ' -' → logprob: -7.702683448791504
    5. ' m' → logprob: -9.327683448791504
    6. '2' → logprob: -9.827683448791504
    7. '(' → logprob: -9.952683448791504
    8. ' ' → logprob: -10.202683448791504
    9. '10' → logprob: -10.327683448791504
    10. '-m' → logprob: -11.202683448791504

Token 370: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005535095697268844
    2. ' -' → logprob: -7.500553607940674
    3. ')' → logprob: -16.000553131103516
    4. ' ' → logprob: -16.125553131103516
    5. '−' → logprob: -16.500553131103516
    6. '2' → logprob: -17.000553131103516
    7. '```' → logprob: -17.125553131103516
    8. '
' → logprob: -17.375553131103516
    9. '-
' → logprob: -17.750553131103516
    10. ''-' → logprob: -17.875553131103516

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.869639476761222e-05
    2. ' ' → logprob: -10.750039100646973
    3. '3' → logprob: -11.750039100646973
    4. '```' → logprob: -12.500039100646973
    5. '1' → logprob: -13.125039100646973
    6. '
' → logprob: -13.625039100646973
    7. '

' → logprob: -13.937539100646973
    8. '-' → logprob: -15.500039100646973
    9. '  ' → logprob: -16.250038146972656
    10. '   ' → logprob: -16.312538146972656

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00988169014453888
    2. ' )' → logprob: -4.634881496429443
    3. ')%' → logprob: -10.259881973266602
    4. ' modulo' → logprob: -10.384881973266602
    5. ')
' → logprob: -10.634881973266602
    6. 'mod' → logprob: -12.134881973266602
    7. ' ' → logprob: -12.259881973266602
    8. ' )
' → logprob: -12.634881973266602
    9. ' ' → logprob: -12.759881973266602
    10. ').' → logprob: -12.759881973266602

Token 373: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0081299543380737
    2. '       ' → logprob: -1.1331299543380737
    3. '
' → logprob: -2.1331300735473633
    4. ')' → logprob: -2.2581300735473633
    5. ')
' → logprob: -2.5081300735473633
    6. ' ' → logprob: -5.883130073547363
    7. '
' → logprob: -6.883130073547363
    8. ' )' → logprob: -7.133130073547363
    9. ' modulo' → logprob: -7.508130073547363
    10. '  
' → logprob: -7.758130073547363

Token 374: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22545172274112701
    2. ' m' → logprob: -1.6004517078399658
    3. ')' → logprob: -10.600451469421387
    4. ' ' → logprob: -12.100451469421387
    5. ' ' → logprob: -12.725451469421387
    6. '	m' → logprob: -14.100451469421387
    7. '```' → logprob: -14.350451469421387
    8. ' м' → logprob: -14.850451469421387
    9. ' )' → logprob: -14.975451469421387
    10. ''m' → logprob: -14.975451469421387

Token 375: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1384097933769226
    2. '   ' → logprob: -2.3884098529815674
    3. '\n' → logprob: -3.8884098529815674
    4. '<|end|>' → logprob: -5.263409614562988
    5. '    
' → logprob: -6.138409614562988
    6. '
' → logprob: -6.138409614562988
    7. ' for' → logprob: -6.388409614562988
    8. '       ' → logprob: -6.763409614562988
    9. '  
' → logprob: -6.888409614562988
    10. ' ' → logprob: -7.513409614562988

Token 376: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0601656436920166
    2. '<|end|>' → logprob: -1.0601656436920166
    3. '   ' → logprob: -2.1851656436920166
    4. ' ' → logprob: -2.6851656436920166
    5. '
' → logprob: -3.0601656436920166
    6. '  
' → logprob: -4.0601654052734375
    7. ' 
' → logprob: -4.0601654052734375
    8. ')' → logprob: -4.5601654052734375
    9. '    
' → logprob: -4.8101654052734375
    10. '\' → logprob: -5.5601654052734375

Token 377: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6053841710090637
    2. 'for' → logprob: -1.230384111404419
    3. ' for' → logprob: -2.480384111404419
    4. '   ' → logprob: -3.105384111404419
    5. 'while' → logprob: -4.480384349822998
    6. 'i' → logprob: -4.730384349822998
    7. 'pos' (adapté à ' pos') → logprob: -6.105384349822998
    8. ' while' → logprob: -6.230384349822998
    9. ' i' → logprob: -6.480384349822998
    10. ' ' → logprob: -7.230384349822998

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11654625833034515
    2. '=' → logprob: -2.366546154022217
    3. 's' → logprob: -4.241546154022217
    4. ',' → logprob: -7.241546154022217
    5. 'itions' → logprob: -8.491546630859375
    6. '   ' → logprob: -8.616546630859375
    7. 'dict' → logprob: -8.991546630859375
    8. 'x' → logprob: -9.991546630859375
    9. 'idx' → logprob: -10.116546630859375
    10. 'ition' → logprob: -10.241546630859375

Token 379: ' [' (ID: 723)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.02179306373000145
    2. '0' → logprob: -3.8967931270599365
    3. ' defaultdict' → logprob: -7.646792888641357
    4. ' ' → logprob: -8.396793365478516
    5. '-' → logprob: -8.396793365478516
    6. '{}' → logprob: -9.021793365478516
    7. '{' → logprob: -9.396793365478516
    8. '[]' → logprob: -10.521793365478516
    9. '1' → logprob: -10.771793365478516
    10. 'def' → logprob: -11.396793365478516

Token 380: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07083995640277863
    2. '0' → logprob: -2.8208398818969727
    3. '-p' → logprob: -5.695839881896973
    4. 'p' → logprob: -6.445839881896973
    5. 'n' → logprob: -6.820839881896973
    6. 'default' → logprob: -7.320839881896973
    7. ']' → logprob: -7.445839881896973
    8. '10' → logprob: -7.570839881896973
    9. '[]' → logprob: -8.195839881896973
    10. 'False' → logprob: -8.445839881896973

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012292771134525537
    2. ']*' → logprob: -7.876229286193848
    3. ']*(' → logprob: -8.001229286193848
    4. ' for' → logprob: -8.251229286193848
    5. 'for' → logprob: -9.501229286193848
    6. '0' → logprob: -9.876229286193848
    7. ' ]' → logprob: -10.001229286193848
    8. ']
' → logprob: -10.376229286193848
    9. ',' → logprob: -10.376229286193848
    10. '()]' → logprob: -12.126229286193848

Token 382: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6233624219894409
    2. '<|end|>' → logprob: -0.9983624219894409
    3. ' for' → logprob: -3.7483625411987305
    4. ',' → logprob: -3.8733625411987305
    5. ')' → logprob: -3.8733625411987305
    6. '   ' → logprob: -4.6233625411987305
    7. ' *' → logprob: -5.7483625411987305
    8. 'for' → logprob: -5.8733625411987305
    9. ' ]' → logprob: -5.9983625411987305
    10. '
' → logprob: -6.1233625411987305

Token 383: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.404205322265625
    2. '(n' → logprob: -1.404205322265625
    3. '(' → logprob: -2.654205322265625
    4. 'm' → logprob: -4.529205322265625
    5. 'n' → logprob: -5.904205322265625
    6. ' (' → logprob: -7.529205322265625
    7. '(s' → logprob: -7.654205322265625
    8. '(len' → logprob: -7.904205322265625
    9. 'x' → logprob: -8.154205322265625
    10. '10' → logprob: -8.279205322265625

Token 384: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5699608325958252
    2. 'm' → logprob: -1.0699608325958252
    3. '(n' → logprob: -3.069960832595825
    4. '(m' → logprob: -3.319960832595825
    5. 's' → logprob: -5.944960594177246
    6. 'len' → logprob: -6.194960594177246
    7. '10' → logprob: -6.319960594177246
    8. '(' → logprob: -7.194960594177246
    9. '(s' → logprob: -7.944960594177246
    10. '(len' → logprob: -8.319960594177246

Token 385: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011080360971391201
    2. ' +' → logprob: -4.511080265045166
    3. ')' → logprob: -10.761080741882324
    4. '1' → logprob: -12.386080741882324
    5. '+
' → logprob: -12.386080741882324
    6. '+)' → logprob: -14.261080741882324
    7. '+n' → logprob: -14.636080741882324
    8. ' +
' → logprob: -15.136080741882324
    9. ']' → logprob: -15.136080741882324
    10. '
' → logprob: -15.261080741882324

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003932576219085604
    2. '2' → logprob: -7.875393390655518
    3. ' ' → logprob: -11.75039291381836
    4. '3' → logprob: -13.12539291381836
    5. '10' → logprob: -14.12539291381836
    6. '
' → logprob: -14.75039291381836
    7. '4' → logprob: -14.81289291381836
    8. '5' → logprob: -15.06289291381836
    9. '7' → logprob: -15.31289291381836
    10. '   ' → logprob: -15.37539291381836

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001941726659424603
    2. '2' → logprob: -6.251941680908203
    3. ' ' → logprob: -12.251941680908203
    4. '3' → logprob: -12.876941680908203
    5. '10' → logprob: -13.626941680908203
    6. '
' → logprob: -13.939441680908203
    7. '5' → logprob: -14.064441680908203
    8. '4' → logprob: -14.626941680908203
    9. '7' → logprob: -14.689441680908203
    10. '6' → logprob: -15.189441680908203

Token 388: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.2576454335358e-05
    2. ')
' → logprob: -9.625092506408691
    3. ' )' → logprob: -10.625092506408691
    4. ')
' → logprob: -14.250092506408691
    5. ')]' → logprob: -14.750092506408691
    6. '   ' → logprob: -14.875092506408691
    7. ']' → logprob: -15.125092506408691
    8. '])' → logprob: -15.625092506408691
    9. '))' → logprob: -16.500093460083008
    10. ')`' → logprob: -16.875093460083008

Token 389: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023849908262491226
    2. '
' → logprob: -4.523849964141846
    3. '<|end|>' → logprob: -4.773849964141846
    4. '        
' → logprob: -6.023849964141846
    5. ' ' → logprob: -7.523849964141846
    6. '   ' → logprob: -8.273849487304688
    7. ' 
' → logprob: -8.523849487304688
    8. ',' → logprob: -9.023849487304688
    9. '<|end|>' → logprob: -9.023849487304688
    10. '  
' → logprob: -9.523849487304688

Token 390: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1297387331724167
    2. 'hash' → logprob: -2.8797388076782227
    3. '
' → logprob: -3.7547388076782227
    4. '#' → logprob: -4.754738807678223
    5. '   ' → logprob: -5.254738807678223
    6. 'h' → logprob: -5.254738807678223
    7. 'for' → logprob: -5.379738807678223
    8. ' hash' → logprob: -6.254738807678223
    9. '        
' → logprob: -6.379738807678223
    10. 'current' → logprob: -6.504738807678223

Token 391: ' Liste' (ID: 61030)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.007339099422097206
    2. '0' → logprob: -5.007339000701904
    3. ' defaultdict' → logprob: -8.507339477539062
    4. 'n' → logprob: -8.757339477539062
    5. '(default' → logprob: -9.882339477539062
    6. '-' → logprob: -9.882339477539062
    7. '[' → logprob: -10.632339477539062
    8. '1' → logprob: -10.757339477539062
    9. 'def' → logprob: -10.757339477539062
    10. '[]' → logprob: -10.757339477539062

Token 392: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' mém' (ID: 136981)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.1246285438537598
    2. 'su' → logprob: -1.1246285438537598
    3. 'stock' → logprob: -1.4996285438537598
    4. ' stock' → logprob: -3.3746285438537598
    5. 'memor' → logprob: -3.8746285438537598
    6. 'mar' → logprob: -4.12462854385376
    7. 'tr' → logprob: -4.74962854385376
    8. ' garder' → logprob: -5.12462854385376
    9. 'm' → logprob: -5.24962854385376
    10. 'maint' → logprob: -5.49962854385376

Token 394: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00039158877916634083
    2. '[' → logprob: -8.625391960144043
    3. 'oire' → logprob: -9.750391960144043
    4. 'ém' → logprob: -10.000391960144043
    5. 'é' → logprob: -10.625391960144043
    6. 'oir' → logprob: -10.625391960144043
    7. 'ory' → logprob: -11.250391960144043
    8. 'orer' → logprob: -11.875391960144043
    9. 'o' → logprob: -12.250391960144043
    10. 'oris' → logprob: -12.250391960144043

Token 395: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.0015274790348485112
    2. 'iser' → logprob: -6.876527309417725
    3. 's' → logprob: -8.251527786254883
    4. 'zer' → logprob: -9.376527786254883
    5. 'ster' → logprob: -10.376527786254883
    6. '[' → logprob: -10.376527786254883
    7. 'er' → logprob: -10.876527786254883
    8. '#' → logprob: -11.251527786254883
    9. 'se' → logprob: -11.376527786254883
    10. '```' → logprob: -11.751527786254883

Token 396: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.042321801185608
    2. '<|end|>' → logprob: -1.292321801185608
    3. ' ' → logprob: -2.0423216819763184
    4. ' les' → logprob: -2.7923216819763184
    5. ' n' → logprob: -3.2923216819763184
    6. ')' → logprob: -3.2923216819763184
    7. 'n' → logprob: -3.7923216819763184
    8. '1' → logprob: -4.792321681976318
    9. 'positions' → logprob: -4.792321681976318
    10. 'les' → logprob: -4.917321681976318

Token 397: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1562536060810089
    2. 'der' → logprob: -3.2812535762786865
    3. '0' → logprob: -3.9062535762786865
    4. ' positions' → logprob: -4.031253814697266
    5. 'n' → logprob: -4.156253814697266
    6. 'p' → logprob: -4.156253814697266
    7. 'indices' → logprob: -4.656253814697266
    8. 'pos' → logprob: -4.781253814697266
    9. ' p' → logprob: -5.406253814697266
    10. ' n' → logprob: -5.531253814697266

Token 398: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' "' (ID: 392)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6287334561347961
    2. 'h' → logprob: -2.0037333965301514
    3. 'dern' → logprob: -2.7537333965301514
    4. ' hash' → logprob: -2.8787333965301514
    5. 'prem' → logprob: -2.8787333965301514
    6. ' dernier' → logprob: -3.3787333965301514
    7. 's' → logprob: -4.0037336349487305
    8. ' h' → logprob: -4.0037336349487305
    9. 'x' → logprob: -4.1287336349487305
    10. 'der' → logprob: -4.3787336349487305

Token 400: 'curse' (ID: 134738)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.7949439287185669
    2. 'h' → logprob: -0.9199439287185669
    3. 'p' → logprob: -2.7949438095092773
    4. 'x' → logprob: -3.1699438095092773
    5. ' hash' → logprob: -4.919943809509277
    6. 's' → logprob: -5.044943809509277
    7. 'hach' → logprob: -5.044943809509277
    8. 'i' → logprob: -5.544943809509277
    9. 'curse' → logprob: -5.669943809509277
    10. 'prefix' → logprob: -5.919943809509277

Token 401: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.29586583375930786
    2. 'eur' → logprob: -1.420865774154663
    3. 'eurs' → logprob: -4.920866012573242
    4. 'cur' → logprob: -6.420866012573242
    5. 'urs' → logprob: -6.920866012573242
    6. 'se' → logprob: -6.920866012573242
    7. 'r' → logprob: -7.795866012573242
    8. 'ure' → logprob: -8.045866012573242
    9. 'er' → logprob: -8.295866012573242
    10. '[' → logprob: -8.420866012573242

Token 402: '"' (ID: 1)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.986494779586792
    2. ']' → logprob: -1.111494779586792
    3. ' )' → logprob: -1.986494779586792
    4. ')' → logprob: -2.111494779586792
    5. ',' → logprob: -3.986494779586792
    6. ' ,' → logprob: -4.861495018005371
    7. ' ' → logprob: -5.861495018005371
    8. 'et' → logprob: -6.986495018005371
    9. ' dans' → logprob: -7.236495018005371
    10. '       ' → logprob: -7.486495018005371

Token 403: ' après' (ID: 16460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5085477828979492
    2. 'each' → logprob: -1.5085477828979492
    3. ' each' → logprob: -2.258547782897949
    4. 'ch' → logprob: -4.633547782897949
    5. 'le' → logprob: -5.008547782897949
    6. 's' → logprob: -5.008547782897949
    7. 'l' → logprob: -5.508547782897949
    8. ' chacune' → logprob: -5.508547782897949
    9. 'les' → logprob: -5.633547782897949
    10. ' la' → logprob: -5.883547782897949

Token 405: ' instruction' (ID: 21179)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.1226822137832642
    2. ' déplacement' → logprob: -1.9976822137832642
    3. 'pas' → logprob: -2.4976820945739746
    4. 'car' → logprob: -2.8726820945739746
    5. 's' → logprob: -3.1226820945739746
    6. 'i' → logprob: -3.1226820945739746
    7. 'increment' → logprob: -3.4976820945739746
    8. 'step' → logprob: -3.7476820945739746
    9. 'élé' → logprob: -3.8726820945739746
    10. 'm' → logprob: -4.247682094573975

Token 406: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006745331920683384
    2. '<|end|>' → logprob: -5.756745338439941
    3. ',' → logprob: -6.631745338439941
    4. ')' → logprob: -6.881745338439941
    5. '.' → logprob: -7.381745338439941
    6. '   ' → logprob: -8.756745338439941
    7. '<|end|>' → logprob: -9.506745338439941
    8. ']' → logprob: -9.631745338439941
    9. 's' → logprob: -10.256745338439941
    10. '        
' → logprob: -10.631745338439941

Token 407: ' initial' (ID: 4871)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4504815340042114
    2. '       ' → logprob: -1.9504815340042114
    3. 'hash' → logprob: -2.325481414794922
    4. '0' → logprob: -2.450481414794922
    5. 'h' → logprob: -2.700481414794922
    6. ' hash' → logprob: -2.825481414794922
    7. ' ' → logprob: -3.450481414794922
    8. ' ]' → logprob: -3.575481414794922
    9. ' h' → logprob: -3.700481414794922
    10. 's' → logprob: -3.700481414794922

Token 408: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.030618075281381607
    2. 'isées' → logprob: -3.780618190765381
    3. 'isé' → logprob: -5.155618190765381
    4. 'e' → logprob: -7.280618190765381
    5. 'is' → logprob: -7.780618190765381
    6. 'isés' → logprob: -8.905617713928223
    7. 'i' → logprob: -9.530617713928223
    8. 'ized' → logprob: -9.530617713928223
    9. 'isation' → logprob: -10.030617713928223
    10. '   ' → logprob: -10.155617713928223

Token 409: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7400094866752625
    2. ' à' → logprob: -2.1150095462799072
    3. '[n' → logprob: -2.9900095462799072
    4. ' en' → logprob: -3.1150095462799072
    5. '=' → logprob: -3.2400095462799072
    6. ')' → logprob: -3.2400095462799072
    7. ' =' → logprob: -3.3650095462799072
    8. 'en' → logprob: -3.7400095462799072
    9. ' n' → logprob: -3.8650095462799072
    10. '0' → logprob: -3.8650095462799072

Token 410: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0499715618789196
    2. 'n' → logprob: -3.049971580505371
    3. ' n' → logprob: -7.049971580505371
    4. ' ' → logprob: -8.299971580505371
    5. '[' → logprob: -9.299971580505371
    6. '[n' → logprob: -9.674971580505371
    7. '1' → logprob: -10.549971580505371
    8. '(n' → logprob: -10.674971580505371
    9. '-' → logprob: -10.799971580505371
    10. 'len' → logprob: -11.924971580505371

Token 411: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: '       ' (ID: 309)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.8133538961410522
    2. '       ' → logprob: -1.4383538961410522
    3. 'for' → logprob: -3.438354015350342
    4. 'h' → logprob: -3.563354015350342
    5. ' hash' → logprob: -3.563354015350342
    6. 'current' → logprob: -3.813354015350342
    7. ' for' → logprob: -3.938354015350342
    8. '#' → logprob: -4.188354015350342
    9. 'i' → logprob: -4.688354015350342
    10. '   ' → logprob: -4.688354015350342

Token 413: ' hashes' (ID: 131101)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.8077887296676636
    2. 'for' → logprob: -1.3077887296676636
    3. 'h' → logprob: -2.182788848876953
    4. 'dp' → logprob: -3.432788848876953
    5. 'pos' → logprob: -3.682788848876953
    6. 'cur' → logprob: -3.807788848876953
    7. 'hs' → logprob: -3.932788848876953
    8. 'i' → logprob: -5.057788848876953
    9. 'ans' → logprob: -5.432788848876953
    10. 'd' → logprob: -5.432788848876953

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197262182831764
    2. '=' → logprob: -2.8119726181030273
    3. ']' → logprob: -13.686972618103027
    4. '[' → logprob: -14.061972618103027
    5. ' ' → logprob: -14.061972618103027
    6. ',' → logprob: -14.561972618103027
    7. 's' → logprob: -14.561972618103027
    8. '=[]' → logprob: -15.436972618103027
    9. '=[' → logprob: -15.811972618103027
    10. ')' → logprob: -15.936972618103027

Token 415: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12703613936901093
    2. ' [' → logprob: -2.1270360946655273
    3. '[]' → logprob: -10.252036094665527
    4. ' defaultdict' → logprob: -10.502036094665527
    5. 'default' → logprob: -11.127036094665527
    6. '{' → logprob: -11.627036094665527
    7. ' []' → logprob: -12.002036094665527
    8. '{}' → logprob: -12.002036094665527
    9. '   ' → logprob: -13.002036094665527
    10. ' ' → logprob: -13.002036094665527

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.250003814697266
    3. '-' → logprob: -14.250003814697266
    4. '[' → logprob: -14.500003814697266
    5. ']' → logprob: -15.125003814697266
    6. '(' → logprob: -16.125003814697266
    7. '10' → logprob: -16.375003814697266
    8. '{}' → logprob: -16.625003814697266
    9. '{' → logprob: -17.750003814697266
    10. '   ' → logprob: -17.875003814697266

Token 417: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024275471514556557
    2. ']*(' → logprob: -8.750243186950684
    3. ' *' → logprob: -10.375243186950684
    4. ' for' → logprob: -11.000243186950684
    5. ' ]' → logprob: -11.125243186950684
    6. ']*' → logprob: -11.500243186950684
    7. '*' → logprob: -12.250243186950684
    8. 'for' → logprob: -13.375243186950684
    9. '   ' → logprob: -13.750243186950684
    10. ')' → logprob: -13.875243186950684

Token 418: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15481945872306824
    2. '*(' → logprob: -2.4048194885253906
    3. '*' → logprob: -3.0298194885253906
    4. '(n' → logprob: -6.154819488525391
    5. ']*(' → logprob: -6.904819488525391
    6. ']' → logprob: -7.279819488525391
    7. '<|end|>' → logprob: -8.27981948852539
    8. ' *(' → logprob: -8.27981948852539
    9. ' (' → logprob: -8.65481948852539
    10. ')' → logprob: -9.02981948852539

Token 419: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.043767161667346954
    2. ' (' → logprob: -3.168767213821411
    3. '(' → logprob: -7.293766975402832
    4. '(m' → logprob: -10.043766975402832
    5. 'n' → logprob: -11.293766975402832
    6. ' ' → logprob: -11.293766975402832
    7. '   ' → logprob: -12.668766975402832
    8. '
' → logprob: -12.668766975402832
    9. '(s' → logprob: -12.793766975402832
    10. '(len' → logprob: -13.293766975402832

Token 420: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004683357197791338
    2. '(n' → logprob: -5.879683494567871
    3. ' n' → logprob: -6.379683494567871
    4. '   ' → logprob: -9.629683494567871
    5. ' ' → logprob: -10.379683494567871
    6. ' (' → logprob: -10.504683494567871
    7. '
' → logprob: -11.004683494567871
    8. 'm' → logprob: -11.129683494567871
    9. '(' → logprob: -11.879683494567871
    10. 's' → logprob: -13.004683494567871

Token 421: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026301342993974686
    2. ' +' → logprob: -3.651301383972168
    3. '+
' → logprob: -14.901301383972168
    4. '1' → logprob: -15.901301383972168
    5. '
' → logprob: -15.901301383972168
    6. '＋' → logprob: -16.27630043029785
    7. ')' → logprob: -16.65130043029785
    8. ' +
' → logprob: -16.65130043029785
    9. ')+' → logprob: -16.77630043029785
    10. '   ' → logprob: -17.27630043029785

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.500030517578125
    3. '```' → logprob: -13.375030517578125
    4. '(' → logprob: -15.062530517578125
    5. '
' → logprob: -15.375030517578125
    6. '   ' → logprob: -15.437530517578125
    7. '+' → logprob: -15.937530517578125
    8. '2' → logprob: -16.062530517578125
    9. '0' → logprob: -16.437530517578125
    10. '...' → logprob: -16.500030517578125

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.375016212463379
    3. '(' → logprob: -13.125016212463379
    4. '+' → logprob: -14.250016212463379
    5. '```' → logprob: -14.250016212463379
    6. '
' → logprob: -14.375016212463379
    7. 'n' → logprob: -15.562516212463379
    8. '2' → logprob: -15.875016212463379
    9. '   ' → logprob: -16.250017166137695
    10. '`' → logprob: -16.687517166137695

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.266944157890975e-05
    2. ')
' → logprob: -10.125072479248047
    3. ']' → logprob: -10.625072479248047
    4. ' )' → logprob: -12.500072479248047
    5. ')]' → logprob: -13.125072479248047
    6. '   ' → logprob: -13.500072479248047
    7. '])' → logprob: -15.125072479248047
    8. ')
' → logprob: -15.125072479248047
    9. '）' → logprob: -15.375072479248047
    10. '       ' → logprob: -16.125072479248047

Token 425: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3990185856819153
    2. '<|end|>' → logprob: -1.1490185260772705
    3. '   ' → logprob: -5.27401876449585
    4. '<|end|>' → logprob: -5.77401876449585
    5. ' for' → logprob: -6.77401876449585
    6. '        
' → logprob: -7.27401876449585
    7. ')' → logprob: -8.024018287658691
    8. 'for' → logprob: -8.524018287658691
    9. '
' → logprob: -8.649018287658691
    10. 'def' → logprob: -8.649018287658691

Token 426: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5316675901412964
    2. '<|end|>' → logprob: -1.6566675901412964
    3. '   ' → logprob: -2.531667709350586
    4. ' for' → logprob: -3.281667709350586
    5. 'for' → logprob: -3.281667709350586
    6. '       ' → logprob: -4.156667709350586
    7. '    
' → logprob: -4.531667709350586
    8. '  
' → logprob: -5.031667709350586
    9. ')' → logprob: -5.406667709350586
    10. '```' → logprob: -5.656667709350586

Token 427: ' Liste' (ID: 61030)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34136196970939636
    2. 'Hashes' → logprob: -1.7163619995117188
    3. 'for' → logprob: -2.8413619995117188
    4. 'hash' → logprob: -4.091361999511719
    5. '[' → logprob: -4.091361999511719
    6. 'Liste' → logprob: -5.216361999511719
    7. '[]' → logprob: -5.216361999511719
    8. 'List' → logprob: -6.591361999511719
    9. ' hashes' → logprob: -6.716361999511719
    10. '
' → logprob: -7.091361999511719

Token 428: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' mém' (ID: 136981)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.42411014437675476
    2. 'stock' → logprob: -1.7991101741790771
    3. 'm' → logprob: -2.424110174179077
    4. 'memor' → logprob: -3.299110174179077
    5. ' stock' → logprob: -3.424110174179077
    6. ' mém' → logprob: -4.299109935760498
    7. ' enregistr' → logprob: -6.049109935760498
    8. 'en' → logprob: -6.174109935760498
    9. 'memo' → logprob: -6.799109935760498
    10. 'mem' → logprob: -6.799109935760498

Token 430: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -9.805981972021982e-05
    2. '[' → logprob: -10.37509822845459
    3. 'ém' → logprob: -10.37509822845459
    4. 'emor' → logprob: -11.50009822845459
    5. 'é' → logprob: -11.75009822845459
    6. 'orer' → logprob: -12.00009822845459
    7. 'mor' → logprob: -13.00009822845459
    8. 'oir' → logprob: -13.12509822845459
    9. 'oris' → logprob: -13.25009822845459
    10. '#' → logprob: -13.62509822845459

Token 431: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.009104819037020206
    2. 'or' → logprob: -4.8841047286987305
    3. 'ir' → logprob: -7.3841047286987305
    4. 'er' → logprob: -7.8841047286987305
    5. 'izer' → logprob: -8.38410472869873
    6. 'r' → logprob: -9.38410472869873
    7. 'aiser' → logprob: -10.00910472869873
    8. 'irer' → logprob: -10.25910472869873
    9. '[' → logprob: -10.50910472869873
    10. 'ser' → logprob: -11.25910472869873

Token 432: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16406434774398804
    2. 'les' → logprob: -2.539064407348633
    3. '(' → logprob: -4.039064407348633
    4. 'the' → logprob: -4.414064407348633
    5. ' le' → logprob: -4.414064407348633
    6. '[' → logprob: -5.164064407348633
    7. 'le' → logprob: -5.164064407348633
    8. ' des' → logprob: -5.539064407348633
    9. 'des' → logprob: -5.664064407348633
    10. ' the' → logprob: -5.914064407348633

Token 433: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.2002088576555252
    2. 'h' → logprob: -2.575208902359009
    3. ' hash' → logprob: -2.825208902359009
    4. 'hach' → logprob: -4.07520866394043
    5. ' h' → logprob: -4.57520866394043
    6. '
' → logprob: -5.32520866394043
    7. ' ' → logprob: -6.07520866394043
    8. 'current' → logprob: -6.07520866394043
    9. ' current' → logprob: -6.57520866394043
    10. 's' → logprob: -6.57520866394043

Token 434: ' calcul' (ID: 7559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.489493191242218
    2. ' des' → logprob: -1.7394931316375732
    3. '<|end|>' → logprob: -1.8644931316375732
    4. '[' → logprob: -4.364493370056152
    5. ')' → logprob: -4.614493370056152
    6. ']' → logprob: -4.739493370056152
    7. ' ' → logprob: -4.989493370056152
    8. 'des' → logprob: -5.489493370056152
    9. 'es' → logprob: -6.239493370056152
    10. '[current' → logprob: -6.489493370056152

Token 435: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5765424966812134
    2. 'és' → logprob: -0.8265424966812134
    3. 's' → logprob: -8.701542854309082
    4. 'es' → logprob: -8.826542854309082
    5. 'ées' → logprob: -9.076542854309082
    6. '[' → logprob: -9.201542854309082
    7. 'ée' → logprob: -9.826542854309082
    8. 'e' → logprob: -12.076542854309082
    9. '#' → logprob: -12.701542854309082
    10. '[]' → logprob: -13.326542854309082

Token 436: ' après' (ID: 16460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4204461872577667
    2. ' à' → logprob: -1.2954461574554443
    3. ' aux' → logprob: -3.9204461574554443
    4. ' après' → logprob: -4.545446395874023
    5. ' ' → logprob: -4.795446395874023
    6. 'es' → logprob: -4.920446395874023
    7. ' des' → logprob: -5.170446395874023
    8. '[' → logprob: -5.170446395874023
    9. ' au' → logprob: -5.920446395874023
    10. 'aux' → logprob: -6.670446395874023

Token 437: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0031531229615211487
    2. 'each' → logprob: -6.503153324127197
    3. ' each' → logprob: -7.378153324127197
    4. 'cha' → logprob: -7.628153324127197
    5. ' chacune' → logprob: -8.253152847290039
    6. 'ch' → logprob: -8.378152847290039
    7. 'cada' → logprob: -11.128152847290039
    8. 'Chaque' → logprob: -11.128152847290039
    9. ' cada' → logprob: -12.128152847290039
    10. ' mỗi' → logprob: -13.253152847290039

Token 438: ' instruction' (ID: 21179)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -0.19159550964832306
    2. 'i' → logprob: -2.3165955543518066
    3. ' instruction' → logprob: -2.9415955543518066
    4. ' i' → logprob: -4.066595554351807
    5. 'position' → logprob: -6.191595554351807
    6. 'instr' → logprob: -6.566595554351807
    7. 'indice' → logprob: -7.566595554351807
    8. 'in' → logprob: -7.941595554351807
    9. ' ' → logprob: -8.316595077514648
    10. 'instructions' → logprob: -8.441595077514648

Token 439: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2482311725616455
    2. '
' → logprob: -1.2482311725616455
    3. ' ' → logprob: -1.7482311725616455
    4. ')' → logprob: -2.4982311725616455
    5. '       ' → logprob: -3.2482311725616455
    6. ' 
' → logprob: -3.2482311725616455
    7. '<|end|>' → logprob: -3.9982311725616455
    8. '[' → logprob: -4.373230934143066
    9. ']' → logprob: -4.748230934143066
    10. '  
' → logprob: -4.998230934143066

Token 441: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.11921311169862747
    2. 'ée' → logprob: -3.119213104248047
    3. '=' → logprob: -3.994213104248047
    4. 'ized' → logprob: -4.244213104248047
    5. 'e' → logprob: -4.369213104248047
    6. 'isé' → logprob: -4.744213104248047
    7. 'isés' → logprob: -5.119213104248047
    8. ' =' → logprob: -6.744213104248047
    9. 'ization' → logprob: -6.744213104248047
    10. 'isées' → logprob: -6.869213104248047

Token 442: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19804544746875763
    2. ' =' → logprob: -1.8230454921722412
    3. '0' → logprob: -4.948045253753662
    4. ' ' → logprob: -5.198045253753662
    5. 'à' → logprob: -6.198045253753662
    6. '=' → logprob: -6.198045253753662
    7. ' a' → logprob: -7.448045253753662
    8. '[' → logprob: -8.19804573059082
    9. '<|end|>' → logprob: -8.82304573059082
    10. 'a' → logprob: -9.44804573059082

Token 443: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016587569552939385
    2. ' ' → logprob: -8.750165939331055
    3. 'zero' → logprob: -12.500165939331055
    4. 'n' → logprob: -13.500165939331055
    5. ' zéro' → logprob: -13.625165939331055
    6. ' zero' → logprob: -14.750165939331055
    7. '(' → logprob: -14.875165939331055
    8. '(n' → logprob: -15.750165939331055
    9. '[' → logprob: -15.875165939331055
    10. ' n' → logprob: -16.875165939331055

Token 444: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26257723569869995
    2. '
' → logprob: -1.7625772953033447
    3. '<|end|>' → logprob: -3.3875772953033447
    4. '    
' → logprob: -5.137577056884766
    5. ')' → logprob: -5.137577056884766
    6. '.' → logprob: -5.262577056884766
    7. '<|end|>' → logprob: -6.012577056884766
    8. '       ' → logprob: -6.637577056884766
    9. ' ' → logprob: -7.012577056884766
    10. '  
' → logprob: -7.012577056884766

Token 445: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23628273606300354
    2. ' for' → logprob: -1.8612827062606812
    3. 'for' → logprob: -3.1112828254699707
    4. '	for' → logprob: -5.486282825469971
    5. ' i' → logprob: -6.111282825469971
    6. 'i' → logprob: -6.361282825469971
    7. '       ' → logprob: -7.486282825469971
    8. '    
' → logprob: -7.986282825469971
    9. ' ' → logprob: -8.361282348632812
    10. '	i' → logprob: -8.361282348632812

Token 446: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08713045716285706
    2. '       ' → logprob: -2.712130546569824
    3. ' for' → logprob: -4.212130546569824
    4. '   ' → logprob: -6.462130546569824
    5. 'i' → logprob: -7.837130546569824
    6. '	for' → logprob: -9.337130546569824
    7. '#' (adapté à ' #') → logprob: -10.462130546569824
    8. 'def' → logprob: -10.837130546569824
    9. '        
' → logprob: -11.087130546569824
    10. 'pos' → logprob: -11.337130546569824

Token 447: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006309965625405312
    2. ' for' → logprob: -5.256309986114502
    3. '       ' → logprob: -7.006309986114502
    4. '   ' → logprob: -8.756309509277344
    5. '#' → logprob: -12.006309509277344
    6. '	for' → logprob: -13.006309509277344
    7. 'i' → logprob: -13.881309509277344
    8. '        
' → logprob: -14.381309509277344
    9. '```' → logprob: -14.506309509277344
    10. '
' → logprob: -15.006309509277344

Token 448: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2847936749458313
    2. ' for' → logprob: -1.5347936153411865
    3. '       ' → logprob: -4.034793853759766
    4. '   ' → logprob: -4.784793853759766
    5. ' =' → logprob: -5.909793853759766
    6. 'range' → logprob: -6.909793853759766
    7. '=' → logprob: -7.159793853759766
    8. 'def' → logprob: -7.159793853759766
    9. '    ' → logprob: -8.409793853759766
    10. ' range' → logprob: -9.284793853759766

Token 449: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.08065464347600937
    2. 'ours' → logprob: -2.5806546211242676
    3. 'oure' → logprob: -6.830654621124268
    4. 'our' → logprob: -8.580655097961426
    5. '_' → logprob: -8.705655097961426
    6. 'court' → logprob: -9.205655097961426
    7. 'c' → logprob: -9.330655097961426
    8. '
' → logprob: -9.705655097961426
    9. 'ourse' → logprob: -10.455655097961426
    10. 'o' → logprob: -12.205655097961426

Token 450: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02448607049882412
    2. 'range' → logprob: -3.8994860649108887
    3. ' s' → logprob: -5.899486064910889
    4. 's' → logprob: -7.649486064910889
    5. '(range' → logprob: -7.774486064910889
    6. ' ' → logprob: -9.274486541748047
    7. ' in' → logprob: -9.774486541748047
    8. ' la' → logprob: -10.399486541748047
    9. '   ' → logprob: -10.399486541748047
    10. ' le' → logprob: -11.024486541748047

Token 451: ' chaîne' (ID: 89288)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.23202915489673615
    2. 'range' → logprob: -1.6070291996002197
    3. 's' → logprob: -6.232028961181641
    4. ' s' → logprob: -6.232028961181641
    5. ' for' → logprob: -6.482028961181641
    6. 'for' → logprob: -6.857028961181641
    7. ' ' → logprob: -9.60702896118164
    8. 'r' → logprob: -12.85702896118164
    9. '   ' → logprob: -12.98202896118164
    10. ' in' → logprob: -13.10702896118164

Token 452: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5221540927886963
    2. ' s' → logprob: -1.3971540927886963
    3. 'for' → logprob: -2.3971540927886963
    4. 's' → logprob: -2.7721540927886963
    5. ' de' → logprob: -5.522153854370117
    6. ' in' → logprob: -7.147153854370117
    7. 'de' → logprob: -7.647153854370117
    8. '(s' → logprob: -8.897153854370117
    9. '   ' → logprob: -9.147153854370117
    10. ' of' → logprob: -9.647153854370117

Token 453: ' caractères' (ID: 183106)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5292384624481201
    2. 'car' → logprob: -1.0292384624481201
    3. ' caractères' → logprob: -3.52923846244812
    4. 'instructions' → logprob: -4.279238700866699
    5. ' s' → logprob: -4.904238700866699
    6. ' instructions' → logprob: -6.279238700866699
    7. 'chars' → logprob: -8.0292387008667
    8. ' caracteres' → logprob: -8.5292387008667
    9. 'characters' → logprob: -8.9042387008667
    10. ' ' → logprob: -9.6542387008667

Token 454: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5787846446037292
    2. ' s' → logprob: -1.328784704208374
    3. 's' → logprob: -2.203784704208374
    4. 'for' → logprob: -2.953784704208374
    5. ' range' → logprob: -5.578784465789795
    6. ' in' → logprob: -5.828784465789795
    7. ':' → logprob: -5.953784465789795
    8. 'range' → logprob: -6.328784465789795
    9. ' :' → logprob: -8.328784942626953
    10. 'in' → logprob: -9.078784942626953

Token 455: ' caractère' (ID: 80509)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026314230635762215
    2. ':
' → logprob: -6.252631187438965
    3. ' :' → logprob: -7.502631187438965
    4. '   ' → logprob: -10.127631187438965
    5. '       ' → logprob: -10.252631187438965
    6. '[' → logprob: -10.877631187438965
    7. '[:' → logprob: -11.002631187438965
    8. '[i' → logprob: -11.252631187438965
    9. 'for' → logprob: -12.252631187438965
    10. '[::-' → logprob: -12.627631187438965

Token 456: ' par' (ID: 686)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4272303581237793
    2. ':' → logprob: -1.3022303581237793
    3. ' en' → logprob: -3.5522303581237793
    4. '   ' → logprob: -3.9272303581237793
    5. 'in' → logprob: -4.302230358123779
    6. 's' → logprob: -5.802230358123779
    7. '       ' → logprob: -6.427230358123779
    8. ',' → logprob: -6.802230358123779
    9. ' =' → logprob: -6.802230358123779
    10. 'for' → logprob: -7.177230358123779

Token 457: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.17781293392181396
    2. ' caractère' → logprob: -1.927812933921814
    3. 'range' → logprob: -4.9278130531311035
    4. 'i' → logprob: -5.9278130531311035
    5. 'index' → logprob: -6.5528130531311035
    6. 'indice' → logprob: -6.8028130531311035
    7. ' caractères' → logprob: -7.3028130531311035
    8. 'char' → logprob: -7.9278130531311035
    9. 'enumer' → logprob: -8.302812576293945
    10. 'in' → logprob: -8.302812576293945

Token 458: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09942946583032608
    2. ':
' → logprob: -3.0994293689727783
    3. '   ' → logprob: -3.7244293689727783
    4. ',' → logprob: -4.349429607391357
    5. '       ' → logprob: -5.349429607391357
    6. ' for' → logprob: -5.474429607391357
    7. 'for' → logprob: -6.724429607391357
    8. '.' → logprob: -7.224429607391357
    9. ' :' → logprob: -7.349429607391357
    10. '
' → logprob: -8.2244291305542

Token 459: ' avec' (ID: 3937)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16115021705627441
    2. 'for' → logprob: -2.2861502170562744
    3. ' i' → logprob: -3.1611502170562744
    4. '   ' → logprob: -6.411149978637695
    5. ' en' → logprob: -6.536149978637695
    6. 'i' → logprob: -7.286149978637695
    7. ' pour' → logprob: -8.161149978637695
    8. ' indent' → logprob: -8.786149978637695
    9. ' et' → logprob: -9.661149978637695
    10. ' ind' → logprob: -9.661149978637695

Token 460: ' un' (ID: 537)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1609996259212494
    2. ' range' → logprob: -2.2859995365142822
    3. 'enumer' → logprob: -4.035999774932861
    4. 'for' → logprob: -4.160999774932861
    5. 'i' → logprob: -4.660999774932861
    6. '_' → logprob: -6.035999774932861
    7. ' i' → logprob: -7.160999774932861
    8. ' for' → logprob: -8.035999298095703
    9. ' enumerate' → logprob: -8.285999298095703
    10. '_range' → logprob: -8.410999298095703

Token 461: ' indice' (ID: 90848)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1714325100183487
    2. 'or' → logprob: -2.2964324951171875
    3. 'range' → logprob: -3.5464324951171875
    4. ' for' → logprob: -3.6714324951171875
    5. ' range' → logprob: -6.0464324951171875
    6. 'i' → logprob: -9.421432495117188
    7. 'r' → logprob: -9.421432495117188
    8. '
' → logprob: -10.296432495117188
    9. 'index' → logprob: -10.796432495117188
    10. 'pour' → logprob: -11.046432495117188

Token 462: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8421357870101929
    2. ' in' → logprob: -1.2171357870101929
    3. ' for' → logprob: -1.4671357870101929
    4. 'for' → logprob: -3.9671359062194824
    5. 'i' → logprob: -4.342135906219482
    6. ' range' → logprob: -5.092135906219482
    7. 'in' → logprob: -6.217135906219482
    8. 'range' → logprob: -6.842135906219482
    9. ' en' → logprob: -7.967135906219482
    10. ',' → logprob: -8.217135429382324

Token 463: ' part' (ID: 997)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01645578257739544
    2. ',' → logprob: -4.76645565032959
    3. ':' → logprob: -5.39145565032959
    4. 'in' → logprob: -6.51645565032959
    5. '   ' → logprob: -7.26645565032959
    6. ' :' → logprob: -8.26645565032959
    7. ' en' → logprob: -9.01645565032959
    8. '=' → logprob: -9.14145565032959
    9. ' for' → logprob: -9.14145565032959
    10. ' =' → logprob: -9.64145565032959

Token 464: 'ant' (ID: 493)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.44972535967826843
    2. 'i' → logprob: -1.0747253894805908
    3. 'ic' → logprob: -4.449725151062012
    4. '1' → logprob: -6.074725151062012
    5. '-' → logprob: -6.699725151062012
    6. 'out' → logprob: -6.949725151062012
    7. 'ir' → logprob: -7.074725151062012
    8. '=' → logprob: -7.449725151062012
    9. 'icul' → logprob: -7.699725151062012
    10. ' i' → logprob: -7.699725151062012

Token 465: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6095765233039856
    2. ' from' → logprob: -1.8595764636993408
    3. ' de' → logprob: -2.234576463699341
    4. 'from' → logprob: -2.484576463699341
    5. '=' → logprob: -2.859576463699341
    6. ' range' → logprob: -3.734576463699341
    7. ' en' → logprob: -5.10957670211792
    8. 'in' → logprob: -5.35957670211792
    9. 'range' → logprob: -5.35957670211792
    10. '0' → logprob: -5.73457670211792

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019200174137949944
    2. '1' → logprob: -4.894200325012207
    3. ' range' → logprob: -5.144200325012207
    4. ' ' → logprob: -5.394200325012207
    5. 'range' → logprob: -6.769200325012207
    6. ' i' → logprob: -14.769200325012207
    7. ' xrange' → logprob: -14.894200325012207
    8. '<|end|>' → logprob: -15.019200325012207
    9. ' zero' → logprob: -15.144200325012207
    10. '	range' → logprob: -15.644200325012207

Token 467: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007788925431668758
    2. 'range' → logprob: -7.750778675079346
    3. '1' → logprob: -8.125779151916504
    4. ' range' → logprob: -10.500779151916504
    5. ' ' → logprob: -10.625779151916504
    6. 'i' → logprob: -15.125779151916504
    7. '```' → logprob: -16.625778198242188
    8. 'for' → logprob: -17.000778198242188
    9. '=' → logprob: -17.125778198242188
    10. 'def' → logprob: -17.750778198242188

Token 468: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35743963718414307
    2. ' for' → logprob: -1.857439637184143
    3. ',' → logprob: -2.6074395179748535
    4. '   ' → logprob: -3.1074395179748535
    5. 'in' → logprob: -4.6074395179748535
    6. 'for' → logprob: -4.9824395179748535
    7. ':' → logprob: -5.1074395179748535
    8. '       ' → logprob: -6.7324395179748535
    9. ' en' → logprob: -7.6074395179748535
    10. ':
' → logprob: -7.8574395179748535

Token 469: 'car' (ID: 6830)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.516934871673584
    2. ' in' → logprob: -1.391934871673584
    3. '1' → logprob: -2.891934871673584
    4. ' for' → logprob: -3.266934871673584
    5. ')' → logprob: -3.641934871673584
    6. 'in' → logprob: -5.016934871673584
    7. 'for' → logprob: -5.016934871673584
    8. '):' → logprob: -5.266934871673584
    9. ' à' → logprob: -5.641934871673584
    10. ' ,' → logprob: -6.141934871673584

Token 470: ' enumerate' (ID: 29671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.825385332107544
    2. ' i' → logprob: -1.450385332107544
    3. ' for' → logprob: -1.825385332107544
    4. ' range' → logprob: -2.200385332107544
    5. ' len' → logprob: -3.825385332107544
    6. ' ' → logprob: -4.200385093688965
    7. '1' → logprob: -4.325385093688965
    8. ' la' → logprob: -6.450385093688965
    9. 'range' → logprob: -6.950385093688965
    10. ' en' → logprob: -7.575385093688965

Token 471: '(...' (ID: 45935)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006569960620254278
    2. '(start' → logprob: -5.131569862365723
    3. '(en' → logprob: -7.881569862365723
    4. ',' → logprob: -9.381569862365723
    5. '(' → logprob: -9.506569862365723
    6. 's' → logprob: -10.381569862365723
    7. '=' → logprob: -11.131569862365723
    8. 'start' → logprob: -11.381569862365723
    9. '1' → logprob: -11.631569862365723
    10. '(range' → logprob: -11.881569862365723

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13702839612960815
    2. '(s' → logprob: -2.137028455734253
    3. '(start' → logprob: -4.887028217315674
    4. '(en' → logprob: -7.387028217315674
    5. 's' → logprob: -7.512028217315674
    6. ' ,' → logprob: -8.012028694152832
    7. ')(' → logprob: -8.262028694152832
    8. ',start' → logprob: -8.387028694152832
    9. 'start' → logprob: -9.012028694152832
    10. '(' → logprob: -9.137028694152832

Token 473: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049001988023519516
    2. ' start' → logprob: -3.549001932144165
    3. 'start' → logprob: -4.049002170562744
    4. ' ' → logprob: -6.424002170562744
    5. ')' → logprob: -13.174001693725586
    6. '   ' → logprob: -13.799001693725586
    7. '```' → logprob: -14.299001693725586
    8. '=start' → logprob: -14.924001693725586
    9. ' )' → logprob: -15.424001693725586
    10. ' ' → logprob: -15.549001693725586

Token 474: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.250001907348633
    3. '=
' → logprob: -17.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '=

' → logprob: -18.125001907348633
    6. '=True' → logprob: -18.125001907348633
    7. 'de' → logprob: -18.375001907348633
    8. '=start' → logprob: -18.750001907348633
    9. ')=' → logprob: -18.750001907348633
    10. ')' → logprob: -19.375001907348633

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '=' → logprob: -11.625011444091797
    3. '```' → logprob: -13.375011444091797
    4. ' ' → logprob: -15.125011444091797
    5. '   ' → logprob: -15.375011444091797
    6. ')' → logprob: -15.875011444091797
    7. '
' → logprob: -16.000011444091797
    8. 'def' → logprob: -16.250011444091797
    9. '0' → logprob: -16.750011444091797
    10. '2' → logprob: -18.250011444091797

Token 476: '))
' (ID: 2210)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026879090815782547
    2. '):
' → logprob: -3.651879072189331
    3. ')' → logprob: -7.52687931060791
    4. ':' → logprob: -11.77687931060791
    5. '):
' → logprob: -11.90187931060791
    6. '):

' → logprob: -12.15187931060791
    7. ' ):' → logprob: -12.27687931060791
    8. ')):' → logprob: -12.40187931060791
    9. 'for' → logprob: -12.52687931060791
    10. ',' → logprob: -12.90187931060791

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12169754505157471
    2. '       ' → logprob: -2.996697425842285
    3. ':' → logprob: -3.246697425842285
    4. ',' → logprob: -4.121697425842285
    5. ' for' → logprob: -5.121697425842285
    6. 'for' → logprob: -6.871697425842285
    7. ':
' → logprob: -6.996697425842285
    8. '```' → logprob: -7.371697425842285
    9. ',
' → logprob: -8.371697425842285
    10. '    
' → logprob: -8.621697425842285

Token 478: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0162277221679688
    2. 'for' (adapté à ' for') → logprob: -1.0162277221679688
    3. '   ' → logprob: -1.3912277221679688
    4. '       ' → logprob: -3.6412277221679688
    5. ',' → logprob: -8.141227722167969
    6. ':' → logprob: -8.516227722167969
    7. ' ' → logprob: -9.266227722167969
    8. '  ' → logprob: -9.266227722167969
    9. '	for' → logprob: -9.266227722167969
    10. '```' → logprob: -9.391227722167969

Token 479: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12700727581977844
    2. 'i' → logprob: -2.127007246017456
    3. '_,' → logprob: -10.127007484436035
    4. ' _,' → logprob: -10.877007484436035
    5. '(i' → logprob: -11.752007484436035
    6. ' ' → logprob: -12.502007484436035
    7. '	i' → logprob: -12.877007484436035
    8. ',' → logprob: -13.502007484436035
    9. ' idx' → logprob: -13.752007484436035
    10. ',i' → logprob: -13.877007484436035

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004276888445019722
    2. ' ,' → logprob: -5.504276752471924
    3. 'in' → logprob: -9.129277229309082
    4. ' in' → logprob: -9.504277229309082
    5. ',in' → logprob: -12.254277229309082
    6. '_,' → logprob: -13.504277229309082
    7. ',char' → logprob: -13.504277229309082
    8. '```' → logprob: -13.754277229309082
    9. ',s' → logprob: -14.129277229309082
    10. ',v' → logprob: -14.504277229309082

Token 481: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07053494453430176
    2. ' c' → logprob: -3.0705349445343018
    3. 'ch' → logprob: -3.9455349445343018
    4. 'char' → logprob: -6.820534706115723
    5. ' ch' → logprob: -7.320534706115723
    6. 'car' → logprob: -8.570534706115723
    7. 'a' → logprob: -9.570534706115723
    8. 'v' → logprob: -9.695534706115723
    9. 'op' → logprob: -9.820534706115723
    10. 'e' → logprob: -10.570534706115723

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014625407755374908
    2. 'in' → logprob: -4.264625549316406
    3. ',' → logprob: -8.014625549316406
    4. ' ' → logprob: -9.139625549316406
    5. ' ,' → logprob: -12.014625549316406
    6. 's' → logprob: -12.139625549316406
    7. '	in' → logprob: -13.139625549316406
    8. '  ' → logprob: -13.264625549316406
    9. ' ' → logprob: -13.389625549316406
    10. ')' → logprob: -13.639625549316406

Token 483: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.018153570592403412
    2. 'enumer' → logprob: -4.018153667449951
    3. ' in' → logprob: -13.018153190612793
    4. ' ' → logprob: -14.768153190612793
    5. ' enumer' → logprob: -15.518153190612793
    6. '(' → logprob: -15.893153190612793
    7. '```' → logprob: -15.893153190612793
    8. '1' → logprob: -16.14315414428711
    9. 'range' → logprob: -16.26815414428711
    10. ' enumeration' → logprob: -16.39315414428711

Token 484: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.375538163818419e-05
    2. '(' → logprob: -10.125083923339844
    3. 's' → logprob: -10.625083923339844
    4. ' (' → logprob: -10.875083923339844
    5. '(
' → logprob: -15.625083923339844
    6. ' s' → logprob: -15.875083923339844
    7. ')' → logprob: -17.000083923339844
    8. ' ' → logprob: -17.750083923339844
    9. '(S' → logprob: -17.875083923339844
    10. ',' → logprob: -17.875083923339844

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015586259542033076
    2. ' ,' → logprob: -8.875155448913574
    3. 's' → logprob: -11.500155448913574
    4. '(' → logprob: -13.375155448913574
    5. '[' → logprob: -13.625155448913574
    6. ',s' → logprob: -13.750155448913574
    7. ',start' → logprob: -14.000155448913574
    8. '1' → logprob: -15.000155448913574
    9. '```' → logprob: -15.250155448913574
    10. '(),' → logprob: -16.25015640258789

Token 486: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.34178605675697327
    2. 'start' → logprob: -1.3417860269546509
    3. '1' → logprob: -3.5917861461639404
    4. ' ' → logprob: -7.466785907745361
    5. ',start' → logprob: -15.71678638458252
    6. '(start' → logprob: -16.341785430908203
    7. '=start' → logprob: -16.341785430908203
    8. '	start' → logprob: -16.716785430908203
    9. ' ' → logprob: -16.966785430908203
    10. '   ' → logprob: -17.216785430908203

Token 487: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -11.625009536743164
    3. '=
' → logprob: -15.000009536743164
    4. '(' → logprob: -18.500009536743164
    5. ')=' → logprob: -19.000009536743164
    6. '=

' → logprob: -20.125009536743164
    7. ' =' → logprob: -21.000009536743164
    8. '=}' → logprob: -21.750009536743164
    9. '```' → logprob: -21.875009536743164
    10. '＝' → logprob: -22.000009536743164

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.25
    6. '
' → logprob: -19.5
    7. '2' → logprob: -20.25
    8. ')' → logprob: -20.25
    9. '=' → logprob: -21.25
    10. '۱' → logprob: -22.125

Token 489: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010891393758356571
    2. '):
' → logprob: -6.876089096069336
    3. ':' → logprob: -9.876089096069336
    4. '):
' → logprob: -12.501089096069336
    5. ')' → logprob: -14.126089096069336
    6. ' ):' → logprob: -15.376089096069336
    7. '():' → logprob: -16.126089096069336
    8. '   ' → logprob: -16.501089096069336
    9. '):

' → logprob: -17.126089096069336
    10. '       ' → logprob: -17.501089096069336

Token 490: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050773657858371735
    2. ' if' → logprob: -4.300773620605469
    3. ' ' → logprob: -4.925773620605469
    4. '<|end|>' → logprob: -4.925773620605469
    5. '           ' → logprob: -5.300773620605469
    6. '        
' → logprob: -5.550773620605469
    7. ' 
' → logprob: -5.675773620605469
    8. '        ' → logprob: -6.050773620605469
    9. '```' → logprob: -7.175773620605469
    10. '\' → logprob: -7.175773620605469

Token 491: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03387516364455223
    2. 'if' (adapté à ' if') → logprob: -3.4088752269744873
    3. '           ' → logprob: -8.783875465393066
    4. '        ' → logprob: -10.658875465393066
    5. '       ' → logprob: -10.658875465393066
    6. '```' → logprob: -11.033875465393066
    7. '            ' → logprob: -12.033875465393066
    8. ' ' → logprob: -13.158875465393066
    9. '	if' → logprob: -13.783875465393066
    10. ' 
' → logprob: -13.908875465393066

Token 492: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.001503790495917201
    2. 'c' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.126503944396973
    4. ' ' → logprob: -14.251503944396973
    5. '	c' → logprob: -17.001502990722656
    6. '            ' → logprob: -19.126502990722656
    7. ' not' → logprob: -19.626502990722656
    8. '_c' → logprob: -19.751502990722656
    9. '    ' → logprob: -20.001502990722656
    10. 's' → logprob: -20.189002990722656

Token 493: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062113113701343536
    2. '==' → logprob: -2.812113046646118
    3. '[' → logprob: -9.187112808227539
    4. '=='' → logprob: -11.437112808227539
    5. ' in' → logprob: -11.687112808227539
    6. ' ' → logprob: -11.812112808227539
    7. ' =='' → logprob: -12.187112808227539
    8. '=="' → logprob: -12.562112808227539
    9. '=' → logprob: -12.812112808227539
    10. ' ' → logprob: -13.937112808227539

Token 494: ' '>' (ID: 133732)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.8963117599487305
    2. ''+' → logprob: -1.3963117599487305
    3. ''' → logprob: -1.6463117599487305
    4. ''U' → logprob: -2.6463117599487305
    5. ''A' → logprob: -4.2713117599487305
    6. ''>' → logprob: -4.5213117599487305
    7. ''I' → logprob: -4.8963117599487305
    8. ''M' → logprob: -4.8963117599487305
    9. ''N' → logprob: -4.8963117599487305
    10. ''O' → logprob: -5.1463117599487305

Token 495: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6364089250564575
    2. '':' → logprob: -0.7614089250564575
    3. ''' → logprob: -5.886408805847168
    4. '':
' → logprob: -7.136408805847168
    5. ''):
' → logprob: -9.136408805847168
    6. ' '' → logprob: -9.636408805847168
    7. ' ':' → logprob: -10.636408805847168
    8. '':

' → logprob: -11.761408805847168
    9. ':' → logprob: -12.136408805847168
    10. '):
' → logprob: -12.386408805847168

Token 496: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0460333488881588
    2. '           ' → logprob: -3.9210333824157715
    3. '
' → logprob: -4.4210333824157715
    4. ' 
' → logprob: -5.4210333824157715
    5. '\n' → logprob: -5.5460333824157715
    6. '                
' → logprob: -6.2960333824157715
    7. ' p' → logprob: -6.9210333824157715
    8. '            
' → logprob: -7.4210333824157715
    9. ':
' → logprob: -8.296032905578613
    10. '```' → logprob: -9.046032905578613

Token 497: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3218831419944763
    2. ' p' → logprob: -2.071883201599121
    3. 'p' → logprob: -2.196883201599121
    4. '           ' → logprob: -4.071883201599121
    5. '                ' → logprob: -4.446883201599121
    6. '            ' → logprob: -5.321883201599121
    7. '                   ' → logprob: -5.696883201599121
    8. '```' → logprob: -8.821883201599121
    9. ' ' → logprob: -9.071883201599121
    10. '	p' → logprob: -9.071883201599121

Token 498: ' Si' (ID: 7832)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010910345241427422
    2. ' p' → logprob: -4.635910511016846
    3. 'pos' → logprob: -7.010910511016846
    4. '           ' → logprob: -9.010910034179688
    5. '               ' → logprob: -9.010910034179688
    6. ' pos' → logprob: -12.885910034179688
    7. 'y' → logprob: -12.885910034179688
    8. '```' → logprob: -14.260910034179688
    9. ' y' → logprob: -14.760910034179688
    10. '
' → logprob: -15.010910034179688

Token 499: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.25718259811401367
    2. 'p' → logprob: -1.5071825981140137
    3. 'pos' → logprob: -5.382182598114014
    4. ' pos' → logprob: -7.882182598114014
    5. '(p' → logprob: -9.257183074951172
    6. '           ' → logprob: -10.132183074951172
    7. ')' → logprob: -11.257183074951172
    8. ' True' → logprob: -11.257183074951172
    9. ' (' → logprob: -11.632183074951172
    10. ' ' → logprob: -11.632183074951172

Token 500: ' caractère' (ID: 80509)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15667524933815002
    2. ' p' → logprob: -2.406675338745117
    3. 'pos' → logprob: -2.906675338745117
    4. ' pos' → logprob: -8.656675338745117
    5. 'position' → logprob: -10.281675338745117
    6. ' ' → logprob: -11.906675338745117
    7. ' position' → logprob: -13.031675338745117
    8. ')' → logprob: -13.031675338745117
    9. 'space' → logprob: -13.156675338745117
    10. '           ' → logprob: -13.281675338745117

Token 501: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5398299098014832
    2. ' ==' → logprob: -2.289829969406128
    3. ':
' → logprob: -2.914829969406128
    4. 'p' → logprob: -3.289829969406128
    5. '=' → logprob: -3.414829969406128
    6. '==' → logprob: -3.664829969406128
    7. 'pos' → logprob: -4.164829730987549
    8. '           ' → logprob: -4.289829730987549
    9. '>' → logprob: -4.414829730987549
    10. '+' → logprob: -4.414829730987549

Token 502: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16947627067565918
    2. ''>' → logprob: -1.9194762706756592
    3. ' '' → logprob: -5.169476509094238
    4. ' '>' → logprob: -6.044476509094238
    5. '>' → logprob: -8.044476509094238
    6. ' ' → logprob: -8.544476509094238
    7. '">' → logprob: -8.669476509094238
    8. ''t' → logprob: -9.419476509094238
    9. ''un' → logprob: -9.419476509094238
    10. ''p' → logprob: -10.044476509094238

Token 503: ' '' (ID: 461)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14024272561073303
    2. ''' → logprob: -3.0152428150177
    3. 'space' → logprob: -3.1402428150177
    4. 'car' → logprob: -4.640242576599121
    5. ' espace' → logprob: -5.015242576599121
    6. 'greater' → logprob: -5.140242576599121
    7. ''espace' → logprob: -5.140242576599121
    8. ''>' → logprob: -5.640242576599121
    9. '`' → logprob: -6.765242576599121
    10. ' >' → logprob: -7.140242576599121

Token 504: '>',' (ID: 46531)
  Prédit: '>''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.18517892062664032
    2. '>' → logprob: -1.8101788759231567
    3. '>',' → logprob: -6.185178756713867
    4. ''' → logprob: -6.310178756713867
    5. ' '' → logprob: -7.435178756713867
    6. ''>' → logprob: -8.185178756713867
    7. '>';' → logprob: -8.310178756713867
    8. ' '>' → logprob: -8.935178756713867
    9. '+' → logprob: -9.685178756713867
    10. '>'.' → logprob: -9.810178756713867

Token 505: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4978400468826294
    2. 'p' → logprob: -0.9978400468826294
    3. '               ' → logprob: -3.87283992767334
    4. '                   ' → logprob: -6.12283992767334
    5. '           ' → logprob: -7.99783992767334
    6. '   ' → logprob: -9.37283992767334
    7. ' ' → logprob: -10.74783992767334
    8. 'pos' → logprob: -10.99783992767334
    9. '                ' → logprob: -11.24783992767334
    10. ' ' → logprob: -12.24783992767334

Token 506: ' curse' (ID: 77365)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007282765582203865
    2. ' p' → logprob: -5.007282733917236
    3. 'pos' → logprob: -7.507282733917236
    4. '       ' → logprob: -12.007283210754395
    5. '           ' → logprob: -12.757283210754395
    6. '   ' → logprob: -13.132283210754395
    7. '```' → logprob: -13.632283210754395
    8. 'position' → logprob: -13.882283210754395
    9. 'posit' → logprob: -14.007283210754395
    10. ' pos' → logprob: -14.132283210754395

Token 507: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.13742311298847198
    2. 'ursor' → logprob: -3.012423038482666
    3. ' =' → logprob: -4.012423038482666
    4. ' ' → logprob: -4.137423038482666
    5. 'r' → logprob: -4.762423038482666
    6. 'p' → logprob: -5.012423038482666
    7. '=' → logprob: -5.137423038482666
    8. ' cursor' → logprob: -5.637423038482666
    9. 'urs' → logprob: -5.637423038482666
    10. 'urse' → logprob: -5.762423038482666

Token 508: ' avance' (ID: 81376)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.017041794955730438
    2. ' +=' → logprob: -4.1420416831970215
    3. '=' → logprob: -7.2670416831970215
    4. '+' → logprob: -8.51704216003418
    5. 'p' → logprob: -10.01704216003418
    6. ']+=' → logprob: -10.26704216003418
    7. 's' → logprob: -11.76704216003418
    8. ' =' → logprob: -12.26704216003418
    9. 'pos' → logprob: -12.76704216003418
    10. '+='' → logprob: -13.14204216003418

Token 509: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9032109975814819
    2. ' +=' → logprob: -1.403210997581482
    3. '+=' → logprob: -1.653210997581482
    4. ' de' → logprob: -2.5282111167907715
    5. '           ' → logprob: -4.1532111167907715
    6. ',' → logprob: -4.2782111167907715
    7. '+' → logprob: -4.4032111167907715
    8. 'pos' → logprob: -4.9032111167907715
    9. '=' → logprob: -5.0282111167907715
    10. '                   ' → logprob: -5.1532111167907715

Token 510: '’une' (ID: 11808)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015361585654318333
    2. ''un' → logprob: -5.515361785888672
    3. 'un' → logprob: -5.515361785888672
    4. ' ' → logprob: -5.640361785888672
    5. '+' → logprob: -6.015361785888672
    6. ''une' → logprob: -7.140361785888672
    7. 'une' → logprob: -8.765361785888672
    8. 'e' → logprob: -9.515361785888672
    9. ' +' → logprob: -10.265361785888672
    10. ''' → logprob: -10.515361785888672

Token 511: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011055675568059087
    2. ' ' → logprob: -7.001105785369873
    3. '+' → logprob: -8.626105308532715
    4. ' +' → logprob: -11.876105308532715
    5. 'position' → logprob: -12.876105308532715
    6. '```' → logprob: -13.751105308532715
    7. 'unit' → logprob: -14.126105308532715
    8. ' unité' → logprob: -14.751105308532715
    9. 'plus' → logprob: -15.001105308532715
    10. 'pas' → logprob: -15.001105308532715

Token 512: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9852280616760254
    2. '+' → logprob: -1.1102280616760254
    3. '           ' → logprob: -2.2352280616760254
    4. ' +=' → logprob: -2.3602280616760254
    5. '+=' → logprob: -3.2352280616760254
    6. ' +' → logprob: -3.9852280616760254
    7. '
' → logprob: -4.485228061676025
    8. '                   ' → logprob: -4.610228061676025
    9. 'p' → logprob: -5.485228061676025
    10. ',' → logprob: -6.110228061676025

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06286654621362686
    2. '           ' → logprob: -3.062866449356079
    3. '\n' → logprob: -5.062866687774658
    4. ' 
' → logprob: -5.687866687774658
    5. '                
' → logprob: -6.687866687774658
    6. '
' → logprob: -6.812866687774658
    7. '            
' → logprob: -7.312866687774658
    8. ' p' → logprob: -7.937866687774658
    9. '\' → logprob: -8.5628662109375
    10. '                   ' → logprob: -8.6878662109375

Token 514: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.5783973932266235
    2. ' p' → logprob: -0.8283973932266235
    3. '               ' → logprob: -6.203397274017334
    4. '           ' → logprob: -8.703397750854492
    5. 'pos' → logprob: -8.703397750854492
    6. '                   ' → logprob: -9.703397750854492
    7. '                ' → logprob: -11.453397750854492
    8. '            ' → logprob: -11.703397750854492
    9. ' pos' → logprob: -11.703397750854492
    10. '                
' → logprob: -13.078397750854492

Token 515: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048679910600185394
    2. ' +=' → logprob: -3.048679828643799
    3. '=' → logprob: -9.298680305480957
    4. ' =' → logprob: -14.298680305480957
    5. '+' → logprob: -14.798680305480957
    6. ']+=' → logprob: -16.42367935180664
    7. '+=(' → logprob: -20.04867935180664
    8. '   ' → logprob: -20.29867935180664
    9. '+='' → logprob: -20.29867935180664
    10. '+="' → logprob: -20.29867935180664

Token 516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '<|end|>' → logprob: -21.500003814697266
    5. '```' → logprob: -21.500003814697266
    6. '۱' → logprob: -21.750003814697266
    7. '  ' → logprob: -23.125003814697266
    8. '           ' → logprob: -23.500003814697266
    9. '0' → logprob: -23.750003814697266
    10. '１' → logprob: -23.875003814697266

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '<|end|>' → logprob: -21.375
    4. '   ' → logprob: -21.75
    5. '```' → logprob: -21.875
    6. '۱' → logprob: -23.0
    7. 's' → logprob: -23.875
    8. '১' → logprob: -24.0
    9. '0' → logprob: -24.125
    10. '  ' → logprob: -24.4375

Token 518: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014154459349811077
    2. '
' → logprob: -4.764154434204102
    3. '               ' → logprob: -6.514154434204102
    4. '            
' → logprob: -6.514154434204102
    5. ',' → logprob: -6.764154434204102
    6. '<|end|>' → logprob: -7.514154434204102
    7. '       ' → logprob: -8.514154434204102
    8. ' 
' → logprob: -8.639154434204102
    9. ')' → logprob: -9.514154434204102
    10. ' y' → logprob: -9.764154434204102

Token 519: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013775820843875408
    2. '               ' → logprob: -5.763775825500488
    3. '```' → logprob: -5.888775825500488
    4. '       ' → logprob: -6.263775825500488
    5. '            
' → logprob: -6.638775825500488
    6. '\n' → logprob: -6.763775825500488
    7. '<|end|>' → logprob: -7.138775825500488
    8. 'y' → logprob: -7.138775825500488
    9. ')' → logprob: -7.513775825500488
    10. ' y' → logprob: -8.138775825500488

Token 520: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018446190282702446
    2. 'h' → logprob: -4.01844596862793
    3. ' y' → logprob: -8.64344596862793
    4. '               ' → logprob: -9.76844596862793
    5. '           ' → logprob: -9.76844596862793
    6. 'hash' → logprob: -12.39344596862793
    7. '                   ' → logprob: -14.76844596862793
    8. ' h' → logprob: -15.26844596862793
    9. '       ' → logprob: -15.39344596862793
    10. '
' → logprob: -16.39344596862793

Token 521: ' On' (ID: 2160)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12706680595874786
    2. 'h' → logprob: -2.1270668506622314
    3. '       ' → logprob: -9.752066612243652
    4. '           ' → logprob: -10.252066612243652
    5. ' y' → logprob: -10.627066612243652
    6. 'hash' → logprob: -11.502066612243652
    7. '   ' → logprob: -12.002066612243652
    8. 'x' → logprob: -14.127066612243652
    9. '               ' → logprob: -14.127066612243652
    10. '
' → logprob: -14.252066612243652

Token 522: ' multipl' (ID: 44269)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6902997493743896
    2. 'y' → logprob: -1.0652997493743896
    3. ' y' → logprob: -2.8152997493743896
    4. 'h' → logprob: -2.8152997493743896
    5. ' hashes' → logprob: -4.190299987792969
    6. ' multipl' → logprob: -5.940299987792969
    7. 'update' → logprob: -5.940299987792969
    8. ' hash' → logprob: -5.940299987792969
    9. '           ' → logprob: -6.315299987792969
    10. '=' → logprob: -6.690299987792969

Token 523: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00011439072113716975
    2. 'ique' → logprob: -9.875114440917969
    3. 'e' → logprob: -10.375114440917969
    4. 'lie' → logprob: -11.750114440917969
    5. 'y' → logprob: -12.000114440917969
    6. 'uie' → logprob: -12.375114440917969
    7. 'ies' → logprob: -12.500114440917969
    8. 'iez' → logprob: -13.125114440917969
    9. 'iye' → logprob: -14.000114440917969
    10. 'iex' → logprob: -14.125114440917969

Token 524: ' y' (ID: 342)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8930533528327942
    2. 'y' → logprob: -1.1430532932281494
    3. ' y' → logprob: -1.3930532932281494
    4. ' h' → logprob: -3.7680532932281494
    5. 'hash' → logprob: -8.26805305480957
    6. '(h' → logprob: -10.01805305480957
    7. ' hash' → logprob: -10.89305305480957
    8. '(y' → logprob: -12.26805305480957
    9. ' hashes' → logprob: -12.89305305480957
    10. '	h' → logprob: -13.14305305480957

Token 525: ' par' (ID: 686)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6023086905479431
    2. ' *=' → logprob: -0.8523086905479431
    3. '*' → logprob: -4.477308750152588
    4. '=' → logprob: -4.602308750152588
    5. ' =' → logprob: -6.227308750152588
    6. ' by' → logprob: -6.727308750152588
    7. ' *' → logprob: -7.227308750152588
    8. 'by' → logprob: -8.10230827331543
    9. ' ' → logprob: -9.35230827331543
    10. '```' → logprob: -9.47730827331543

Token 526: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. 'r' → logprob: -20.375059127807617
    4. 'y' → logprob: -20.750059127807617
    5. '	x' → logprob: -21.125059127807617
    6. '```' → logprob: -21.500059127807617
    7. '(x' → logprob: -22.875059127807617
    8. ' ' → logprob: -23.250059127807617
    9. '   ' → logprob: -23.250059127807617
    10. '"x' → logprob: -24.250059127807617

Token 527: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3324222266674042
    2. '%' → logprob: -1.3324222564697266
    3. '               ' → logprob: -5.582422256469727
    4. '           ' → logprob: -6.082422256469727
    5. ' modulo' → logprob: -6.332422256469727
    6. ' %=' → logprob: -6.582422256469727
    7. ' *' → logprob: -6.707422256469727
    8. '%n' → logprob: -6.707422256469727
    9. '%i' → logprob: -6.832422256469727
    10. '%m' → logprob: -6.957422256469727

Token 528: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5759403705596924
    2. 'm' → logprob: -0.8259403705596924
    3. '(m' → logprob: -14.075940132141113
    4. '```' → logprob: -16.57594108581543
    5. ' (' → logprob: -16.82594108581543
    6. '	m' → logprob: -17.57594108581543
    7. ' ' → logprob: -18.07594108581543
    8. '(' → logprob: -19.20094108581543
    9. ' ' → logprob: -19.57594108581543
    10. ',' → logprob: -19.57594108581543

Token 529: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4800231456756592
    2. '           ' → logprob: -1.6050231456756592
    3. ',' → logprob: -2.855023145675659
    4. '
' → logprob: -3.480023145675659
    5. '                   ' → logprob: -3.855023145675659
    6. 'y' → logprob: -4.105023384094238
    7. '%' → logprob: -4.105023384094238
    8. ')' → logprob: -4.855023384094238
    9. ',
' → logprob: -4.855023384094238
    10. ' y' → logprob: -5.230023384094238

Token 530: ' rester' (ID: 54655)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33954885601997375
    2. '(m' → logprob: -1.8395488262176514
    3. ' y' → logprob: -2.4645488262176514
    4. '(' → logprob: -4.5895490646362305
    5. 'y' → logprob: -4.7145490646362305
    6. 'm' → logprob: -4.8395490646362305
    7. ' m' → logprob: -5.0895490646362305
    8. '(y' → logprob: -5.3395490646362305
    9. '(p' → logprob: -6.8395490646362305
    10. ')' → logprob: -6.8395490646362305

Token 531: ' coh' (ID: 85287)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7135472893714905
    2. '(m' → logprob: -1.8385472297668457
    3. '(x' → logprob: -2.4635472297668457
    4. 'm' → logprob: -2.7135472297668457
    5. 'y' → logprob: -3.4635472297668457
    6. 'x' → logprob: -3.5885472297668457
    7. '(' → logprob: -3.7135472297668457
    8. ' y' → logprob: -3.9635472297668457
    9. '<|end|>' → logprob: -4.088547229766846
    10. '(y' → logprob: -4.213547229766846

Token 532: 'érent' (ID: 193873)
  Prédit: 'érent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érent' → logprob: -0.1194765493273735
    2. 'r' → logprob: -2.869476556777954
    3. 'mm' → logprob: -4.119476318359375
    4. 'm' → logprob: -4.619476318359375
    5. 'rent' → logprob: -5.369476318359375
    6. 'érant' → logprob: -5.744476318359375
    7. 'rr' → logprob: -5.744476318359375
    8. 'mp' → logprob: -6.119476318359375
    9. 'érents' → logprob: -6.119476318359375
    10. 'er' → logprob: -6.494476318359375

Token 533: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5860027074813843
    2. ',' → logprob: -1.0860027074813843
    3. '<|end|>' → logprob: -3.461002826690674
    4. ' y' → logprob: -4.211002826690674
    5. ' (' → logprob: -4.836002826690674
    6. '(x' → logprob: -5.086002826690674
    7. 'y' → logprob: -5.211002826690674
    8. '(' → logprob: -5.336002826690674
    9. ' modulo' → logprob: -5.336002826690674
    10. '(m' → logprob: -5.461002826690674

Token 534: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.057531483471393585
    2. ' m' → logprob: -3.8075315952301025
    3. 'y' → logprob: -3.9325315952301025
    4. ' y' → logprob: -5.057531356811523
    5. '(m' → logprob: -5.807531356811523
    6. 'x' → logprob: -6.057531356811523
    7. ' (' → logprob: -6.182531356811523
    8. '(x' → logprob: -9.807531356811523
    9. ' x' → logprob: -10.057531356811523
    10. 'p' → logprob: -10.182531356811523

Token 535: ' nouvelle' (ID: 24562)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6908072233200073
    2. 'y' → logprob: -1.3158072233200073
    3. '(m' → logprob: -1.9408072233200073
    4. 'mod' → logprob: -3.190807342529297
    5. ' (' → logprob: -4.440807342529297
    6. 'x' → logprob: -5.190807342529297
    7. '(mod' → logprob: -5.315807342529297
    8. '```' → logprob: -5.315807342529297
    9. ' y' → logprob: -5.565807342529297
    10. '(y' → logprob: -5.690807342529297

Token 536: ' position' (ID: 4010)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9976720809936523
    2. ' position' → logprob: -1.2476720809936523
    3. ' y' → logprob: -1.7476720809936523
    4. 'position' → logprob: -2.7476720809936523
    5. 'x' → logprob: -3.8726720809936523
    6. ' x' → logprob: -4.247672080993652
    7. ')' → logprob: -4.247672080993652
    8. '```' → logprob: -4.372672080993652
    9. '<|end|>' → logprob: -4.622672080993652
    10. ' (' → logprob: -4.622672080993652

Token 537: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3378645181655884
    2. '           ' → logprob: -2.087864398956299
    3. 'y' → logprob: -2.712864398956299
    4. ' y' → logprob: -3.712864398956299
    5. '                   ' → logprob: -3.837864398956299
    6. ',' → logprob: -3.962864398956299
    7. '%' → logprob: -4.712864398956299
    8. ')' → logprob: -5.462864398956299
    9. '       ' → logprob: -5.837864398956299
    10. '.' → logprob: -5.837864398956299

Token 538: '               ' (ID: 506)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.693921685218811
    2. 'y' → logprob: -1.193921685218811
    3. '           ' → logprob: -2.5689215660095215
    4. '               ' → logprob: -2.8189215660095215
    5. '            
' → logprob: -4.1939215660095215
    6. ' 
' → logprob: -4.3189215660095215
    7. '<|end|>' → logprob: -4.9439215660095215
    8. '\n' → logprob: -5.4439215660095215
    9. '```' → logprob: -5.5689215660095215
    10. '
' → logprob: -5.8189215660095215

Token 539: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.5763784050941467
    2. ' y' → logprob: -0.8263784050941467
    3. ' (' → logprob: -8.07637882232666
    4. '(y' → logprob: -9.32637882232666
    5. '(' → logprob: -10.20137882232666
    6. '               ' → logprob: -14.57637882232666
    7. ''y' → logprob: -15.20137882232666
    8. '                   ' → logprob: -15.32637882232666
    9. '*y' → logprob: -15.95137882232666
    10. ',y' → logprob: -16.076377868652344

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023386286571621895
    2. ' =' → logprob: -3.773386240005493
    3. '*=' → logprob: -8.898386001586914
    4. ' *=' → logprob: -12.773386001586914
    5. '%=' → logprob: -14.398386001586914
    6. '*' → logprob: -14.898386001586914
    7. '=(' → logprob: -15.273386001586914
    8. '＝' → logprob: -16.273386001586914
    9. '   ' → logprob: -17.023386001586914
    10. ' ' → logprob: -17.023386001586914

Token 541: ' y' (ID: 342)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -11.375032424926758
    3. ' (' → logprob: -11.500032424926758
    4. 'y' → logprob: -11.500032424926758
    5. ' y' → logprob: -16.125032424926758
    6. '[y' → logprob: -17.875032424926758
    7. '   ' → logprob: -18.500032424926758
    8. '(x' → logprob: -18.750032424926758
    9. '	y' → logprob: -19.125032424926758
    10. ',y' → logprob: -19.125032424926758

Token 542: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12749463319778442
    2. ' *' → logprob: -2.1274945735931396
    3. '*y' → logprob: -7.502494812011719
    4. '*x' → logprob: -11.627494812011719
    5. '*(' → logprob: -12.627494812011719
    6. '*p' → logprob: -14.627494812011719
    7. ' ' → logprob: -14.752494812011719
    8. '*object' → logprob: -15.252494812011719
    9. '(y' → logprob: -15.502494812011719
    10. '**' → logprob: -15.502494812011719

Token 543: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -9.500075340270996
    3. '(x' → logprob: -20.62507438659668
    4. '	x' → logprob: -21.62507438659668
    5. '%x' → logprob: -24.37507438659668
    6. '"x' → logprob: -25.25007438659668
    7. '$x' → logprob: -25.62507438659668
    8. '[x' → logprob: -26.00007438659668
    9. '_x' → logprob: -26.00007438659668
    10. '{x' → logprob: -26.00007438659668

Token 544: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04895703122019768
    2. '%' → logprob: -3.048957109451294
    3. '%m' → logprob: -8.048956871032715
    4. '%n' → logprob: -11.173956871032715
    5. '%i' → logprob: -11.298956871032715
    6. '%d' → logprob: -11.673956871032715
    7. '%x' → logprob: -12.423956871032715
    8. '%c' → logprob: -12.423956871032715
    9. ')' → logprob: -12.798956871032715
    10. '%b' → logprob: -13.173956871032715

Token 545: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.2729995988775045e-06
    2. ' m' → logprob: -12.000006675720215
    3. '(m' → logprob: -22.1250057220459
    4. '	m' → logprob: -22.8750057220459
    5. '[m' → logprob: -23.7500057220459
    6. ')m' → logprob: -24.2500057220459
    7. ' м' → logprob: -25.3750057220459
    8. '```' → logprob: -25.5000057220459
    9. 'м' → logprob: -25.6250057220459
    10. '_m' → logprob: -25.8750057220459

Token 546: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6719898581504822
    2. '           ' → logprob: -0.7969898581504822
    3. '       ' → logprob: -4.921989917755127
    4. '               ' → logprob: -4.921989917755127
    5. '\n' → logprob: -5.171989917755127
    6. '            
' → logprob: -5.671989917755127
    7. '.' → logprob: -5.671989917755127
    8. '<|end|>' → logprob: -5.671989917755127
    9. 'elif' → logprob: -5.671989917755127
    10. ',' → logprob: -6.546989917755127

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0865880623459816
    2. '       ' → logprob: -2.836588144302368
    3. 'elif' → logprob: -3.961588144302368
    4. '               ' → logprob: -5.836587905883789
    5. 'hash' → logprob: -6.836587905883789
    6. 'p' → logprob: -7.586587905883789
    7. '
' → logprob: -8.461587905883789
    8. 'h' → logprob: -8.961587905883789
    9. '   ' → logprob: -9.086587905883789
    10. 'else' → logprob: -9.336587905883789

Token 548: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0897725522518158
    2. ' elif' → logprob: -3.3397724628448486
    3. 'else' → logprob: -3.3397724628448486
    4. '           ' → logprob: -4.714772701263428
    5. '       ' → logprob: -5.464772701263428
    6. ' else' → logprob: -6.464772701263428
    7. '	elif' → logprob: -9.08977222442627
    8. '\n' → logprob: -10.71477222442627
    9. '.' → logprob: -10.71477222442627
    10. '   ' → logprob: -10.83977222442627

Token 549: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07940401881933212
    2. 'c' → logprob: -2.57940411567688
    3. ''' → logprob: -7.954403877258301
    4. ' '<' → logprob: -10.0794038772583
    5. ''<' → logprob: -10.3294038772583
    6. ' '' → logprob: -10.5794038772583
    7. '<' → logprob: -10.8294038772583
    8. ' ' → logprob: -10.9544038772583
    9. '	c' → logprob: -11.8294038772583
    10. '(c' → logprob: -12.3294038772583

Token 550: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023254211992025375
    2. '==' → logprob: -3.773254156112671
    3. '[' → logprob: -13.14825439453125
    4. '=' → logprob: -13.39825439453125
    5. ' =' → logprob: -13.52325439453125
    6. ' =='' → logprob: -13.64825439453125
    7. '=='' → logprob: -13.77325439453125
    8. ' ' → logprob: -14.77325439453125
    9. ' ' → logprob: -15.52325439453125
    10. ')==' → logprob: -15.77325439453125

Token 551: ' '<' (ID: 8144)
  Prédit: ''<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''<' → logprob: -0.4743199050426483
    2. ''' → logprob: -0.9743199348449707
    3. ' '<' → logprob: -8.349319458007812
    4. ' ' → logprob: -13.349319458007812
    5. ' '' → logprob: -13.599319458007812
    6. '"<' → logprob: -13.974319458007812
    7. '('<' → logprob: -14.349319458007812
    8. '<' → logprob: -14.349319458007812
    9. '<'' → logprob: -14.599319458007812
    10. '   ' → logprob: -15.349319458007812

Token 552: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47911736369132996
    2. ':' → logprob: -1.3541173934936523
    3. '               ' → logprob: -2.1041173934936523
    4. '':
' → logprob: -8.479117393493652
    5. '           ' → logprob: -9.104117393493652
    6. '):
' → logprob: -9.979117393493652
    7. ' :
' → logprob: -10.229117393493652
    8. ':
' → logprob: -10.604117393493652
    9. '':' → logprob: -10.604117393493652
    10. '<|end|>' → logprob: -10.729117393493652

Token 553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008957397076301277
    2. ':' → logprob: -7.750895977020264
    3. ':
' → logprob: -8.750895500183105
    4. ' p' → logprob: -9.125895500183105
    5. '
' → logprob: -9.750895500183105
    6. '           ' → logprob: -10.750895500183105
    7. ' ' → logprob: -10.875895500183105
    8. '			' → logprob: -11.625895500183105
    9. '                ' → logprob: -11.625895500183105
    10. 'p' → logprob: -11.750895500183105

Token 554: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033261224161833525
    2. ' p' → logprob: -6.003325939178467
    3. 'p' → logprob: -8.128326416015625
    4. '#' (adapté à ' #') → logprob: -8.753326416015625
    5. ' #' → logprob: -9.253326416015625
    6. ' ' → logprob: -9.253326416015625
    7. '           ' → logprob: -9.378326416015625
    8. ' ' → logprob: -10.253326416015625
    9. '
' → logprob: -10.503326416015625
    10. '   ' → logprob: -10.753326416015625

Token 555: ' Si' (ID: 7832)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19060850143432617
    2. ' p' → logprob: -2.065608501434326
    3. '               ' → logprob: -3.065608501434326
    4. '#' → logprob: -9.190608978271484
    5. '                ' → logprob: -10.440608978271484
    6. '           ' → logprob: -11.065608978271484
    7. ' ' → logprob: -12.315608978271484
    8. ' #' → logprob: -12.440608978271484
    9. ' ' → logprob: -12.440608978271484
    10. '                
' → logprob: -12.565608978271484

Token 556: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5886192917823792
    2. ' c' → logprob: -0.8386192917823792
    3. 'c' → logprob: -5.213619232177734
    4. 'p' → logprob: -5.588619232177734
    5. ' ' → logprob: -6.088619232177734
    6. ' y' → logprob: -7.838619232177734
    7. '               ' → logprob: -8.088619232177734
    8. ' ' → logprob: -9.088619232177734
    9. ' (' → logprob: -9.463619232177734
    10. ' le' → logprob: -10.088619232177734

Token 557: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25093719363212585
    2. ' c' → logprob: -2.2509372234344482
    3. 'p' → logprob: -2.7509372234344482
    4. ' p' → logprob: -3.7509372234344482
    5. 'y' → logprob: -4.250936985015869
    6. ' ' → logprob: -5.000936985015869
    7. ' y' → logprob: -5.250936985015869
    8. ',' → logprob: -8.000937461853027
    9. 'car' → logprob: -8.063437461853027
    10. ')' → logprob: -8.625937461853027

Token 558: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05120334401726723
    2. '==' → logprob: -3.0512032508850098
    3. ' est' → logprob: -6.55120325088501
    4. 'est' → logprob: -7.17620325088501
    5. '=='' → logprob: -8.551203727722168
    6. ' c' → logprob: -9.426203727722168
    7. 'c' → logprob: -10.551203727722168
    8. ' =='' → logprob: -10.676203727722168
    9. ' p' → logprob: -10.926203727722168
    10. '=' → logprob: -11.051203727722168

Token 559: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18042303621768951
    2. ''>' → logprob: -2.1804230213165283
    3. ''<' → logprob: -3.0554230213165283
    4. ' ' → logprob: -6.680423259735107
    5. ''p' → logprob: -7.055423259735107
    6. 'p' → logprob: -7.305423259735107
    7. ' '' → logprob: -7.305423259735107
    8. ' p' → logprob: -7.930423259735107
    9. ' '<' → logprob: -8.68042278289795
    10. '   ' → logprob: -8.93042278289795

Token 560: ' '<' (ID: 8144)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33692657947540283
    2. ''<' → logprob: -1.7119265794754028
    3. ''>' → logprob: -2.3369264602661133
    4. '<' → logprob: -4.961926460266113
    5. ' '<' → logprob: -6.711926460266113
    6. '>' → logprob: -8.211926460266113
    7. ' '' → logprob: -8.836926460266113
    8. ''-' → logprob: -9.836926460266113
    9. ' ' → logprob: -9.961926460266113
    10. '">' → logprob: -10.086926460266113

Token 561: '',' (ID: 787)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5170272588729858
    2. '>' → logprob: -1.8920272588729858
    3. '',' → logprob: -2.0170273780822754
    4. ''' → logprob: -2.5170273780822754
    5. '>',' → logprob: -3.7670273780822754
    6. '':' → logprob: -5.017027378082275
    7. '',
' → logprob: -5.642027378082275
    8. ''>' → logprob: -6.267027378082275
    9. '>',
' → logprob: -6.267027378082275
    10. ' '' → logprob: -7.142027378082275

Token 562: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5124959945678711
    2. '               ' → logprob: -1.262495994567871
    3. ' p' → logprob: -2.137495994567871
    4. '           ' → logprob: -10.262495994567871
    5. ' ' → logprob: -10.887495994567871
    6. '                   ' → logprob: -10.887495994567871
    7. '   ' → logprob: -11.887495994567871
    8. ' ' → logprob: -12.262495994567871
    9. '                ' → logprob: -12.262495994567871
    10. '
' → logprob: -12.637495994567871

Token 563: ' curse' (ID: 77365)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01430358737707138
    2. ' p' → logprob: -4.264303684234619
    3. 'c' → logprob: -9.389303207397461
    4. '
' → logprob: -12.139303207397461
    5. '   ' → logprob: -12.264303207397461
    6. ' ' → logprob: -12.264303207397461
    7. 'cur' → logprob: -12.514303207397461
    8. '```' → logprob: -12.639303207397461
    9. '           ' → logprob: -12.764303207397461
    10. ' cursor' → logprob: -12.889303207397461

Token 564: 'ur' (ID: 330)
  Prédit: 'ursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.340408056974411
    2. 'ur' → logprob: -1.5904080867767334
    3. '               ' → logprob: -2.5904080867767334
    4. ' cursor' → logprob: -5.840407848358154
    5. 'er' → logprob: -6.965407848358154
    6. 'cursor' → logprob: -6.965407848358154
    7. 'urse' → logprob: -7.090407848358154
    8. 'r' → logprob: -7.090407848358154
    9. ' p' → logprob: -7.215407848358154
    10. 'urs' → logprob: -7.465407848358154

Token 565: ' rec' (ID: 1369)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.20161019265651703
    2. '-=' → logprob: -1.7016102075576782
    3. '-' → logprob: -8.576610565185547
    4. ' -' → logprob: -12.701610565185547
    5. '=' → logprob: -12.951610565185547
    6. ' +=' → logprob: -13.576610565185547
    7. '+=' → logprob: -14.076610565185547
    8. ' ' → logprob: -14.951610565185547
    9. '   ' → logprob: -15.326610565185547
    10. ' =' → logprob: -15.451610565185547

Token 566: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.059613026678562164
    2. 'ul' → logprob: -3.809612989425659
    3. 'uler' → logprob: -3.809612989425659
    4. 'ula' → logprob: -5.059613227844238
    5. 'ules' → logprob: -5.434613227844238
    6. 'ulo' → logprob: -7.059613227844238
    7. 'ulate' → logprob: -7.684613227844238
    8. 'u' → logprob: -7.684613227844238
    9. 'ulé' → logprob: -7.934613227844238
    10. 'uls' → logprob: -8.434613227844238

Token 567: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030852947384119034
    2. ',' → logprob: -10.250308990478516
    3. 'd' → logprob: -10.250308990478516
    4. 'p' → logprob: -10.500308990478516
    5. ' p' → logprob: -10.500308990478516
    6. '           ' → logprob: -10.625308990478516
    7. '              ' → logprob: -10.875308990478516
    8. '                   ' → logprob: -11.000308990478516
    9. '                ' → logprob: -11.000308990478516
    10. '.' → logprob: -11.000308990478516

Token 568: '’une' (ID: 11808)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017161124851554632
    2. ' ' → logprob: -6.376716136932373
    3. '               ' → logprob: -11.501715660095215
    4. '                   ' → logprob: -13.251715660095215
    5. '```' → logprob: -14.376715660095215
    6. '           ' → logprob: -14.626715660095215
    7. '                 ' → logprob: -15.626715660095215
    8. '
' → logprob: -15.626715660095215
    9. ' ' → logprob: -16.00171661376953
    10. '>' → logprob: -16.37671661376953

Token 569: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -14.875109672546387
    4. '           ' → logprob: -15.250109672546387
    5. 'position' → logprob: -15.625109672546387
    6. '   ' → logprob: -16.625110626220703
    7. '               ' → logprob: -17.375110626220703
    8. '>' → logprob: -17.500110626220703
    9. '
' → logprob: -17.937610626220703
    10. '...' → logprob: -17.937610626220703

Token 570: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017382439691573381
    2. ',' → logprob: -6.75173807144165
    3. '.' → logprob: -8.001738548278809
    4. ':
' → logprob: -8.751738548278809
    5. ',
' → logprob: -10.501738548278809
    6. '                
' → logprob: -12.251738548278809
    7. '           ' → logprob: -12.251738548278809
    8. '=' → logprob: -12.251738548278809
    9. '<|end|>' → logprob: -12.376738548278809
    10. '.
' → logprob: -12.501738548278809

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034023032640106976
    2. ' p' → logprob: -9.000340461730957
    3. '           ' → logprob: -10.000340461730957
    4. '```' → logprob: -10.125340461730957
    5. ':' → logprob: -10.500340461730957
    6. 'p' → logprob: -10.750340461730957
    7. ',' → logprob: -10.875340461730957
    8. '                
' → logprob: -11.250340461730957
    9. ':
' → logprob: -11.375340461730957
    10. '                   ' → logprob: -11.750340461730957

Token 572: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.8318683505058289
    2. '               ' → logprob: -1.2068684101104736
    3. ' p' → logprob: -1.3318684101104736
    4. '           ' → logprob: -6.8318681716918945
    5. '```' → logprob: -8.456868171691895
    6. '                   ' → logprob: -9.081868171691895
    7. '                ' → logprob: -9.456868171691895
    8. ' ' → logprob: -10.081868171691895
    9. '                
' → logprob: -10.706868171691895
    10. ' 
' → logprob: -10.706868171691895

Token 573: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.004217301495373249
    2. ' -=' → logprob: -5.504217147827148
    3. '-' → logprob: -9.379217147827148
    4. '=' → logprob: -10.004217147827148
    5. '+=' → logprob: -11.629217147827148
    6. '   ' → logprob: -16.00421714782715
    7. '```' → logprob: -16.50421714782715
    8. '>' → logprob: -17.25421714782715
    9. ' +=' → logprob: -18.12921714782715
    10. '	' → logprob: -18.62921714782715

Token 574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '<|end|>' → logprob: -20.25009536743164
    4. ' ' → logprob: -20.37509536743164
    5. '                   ' → logprob: -20.62509536743164
    6. '               ' → logprob: -21.00009536743164
    7. '```' → logprob: -21.00009536743164
    8. '۱' → logprob: -21.25009536743164
    9. '１' → logprob: -21.37509536743164
    10. '           ' → logprob: -21.50009536743164

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '           ' → logprob: -19.625001907348633
    4. '<|end|>' → logprob: -20.000001907348633
    5. '```' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '
' → logprob: -21.125001907348633
    8. '۱' → logprob: -21.125001907348633
    9. '               ' → logprob: -21.750001907348633
    10. '       ' → logprob: -22.250001907348633

Token 576: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1683531552553177
    2. '           ' → logprob: -1.9183531999588013
    3. '
' → logprob: -5.043353080749512
    4. '```' → logprob: -7.793353080749512
    5. ',' → logprob: -7.918353080749512
    6. '                   ' → logprob: -8.918353080749512
    7. '                
' → logprob: -9.043353080749512
    8. ' y' → logprob: -9.168353080749512
    9. '            
' → logprob: -9.293353080749512
    10. '``' → logprob: -9.668353080749512

Token 577: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014491010457277298
    2. '```' → logprob: -4.639491081237793
    3. '               ' → logprob: -6.014491081237793
    4. '``' → logprob: -6.764491081237793
    5. 'y' → logprob: -7.764491081237793
    6. ' y' → logprob: -8.389491081237793
    7. ',' → logprob: -9.014491081237793
    8. '            
' → logprob: -9.514491081237793
    9. '
' → logprob: -10.139491081237793
    10. '<|end|>' → logprob: -10.264491081237793

Token 578: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07533220201730728
    2. ' y' → logprob: -2.9503321647644043
    3. '               ' → logprob: -4.200332164764404
    4. '           ' → logprob: -5.325332164764404
    5. '                   ' → logprob: -8.325332641601562
    6. '```' → logprob: -10.200332641601562
    7. '
' → logprob: -10.325332641601562
    8. '             ' → logprob: -11.325332641601562
    9. '	y' → logprob: -11.825332641601562
    10. '                       ' → logprob: -11.825332641601562

Token 579: ' On' (ID: 2160)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00030269217677414417
    2. ' y' → logprob: -8.1253023147583
    3. '           ' → logprob: -13.0003023147583
    4. '               ' → logprob: -13.0003023147583
    5. '                   ' → logprob: -13.5003023147583
    6. '#' → logprob: -14.8753023147583
    7. '
' → logprob: -16.000303268432617
    8. '```' → logprob: -16.000303268432617
    9. '                       ' → logprob: -16.875303268432617
    10. '   ' → logprob: -17.875303268432617

Token 580: ' multipl' (ID: 44269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4716399908065796
    2. ' =' → logprob: -1.2216399908065796
    3. 'y' → logprob: -3.096640110015869
    4. ' y' → logprob: -3.346640110015869
    5. '           ' → logprob: -7.471640110015869
    6. '   ' → logprob: -9.471639633178711
    7. ' ' → logprob: -9.471639633178711
    8. '#' → logprob: -10.346639633178711
    9. '               ' → logprob: -10.471639633178711
    10. ')' → logprob: -11.471639633178711

Token 581: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.19502533972263336
    2. 'ie' → logprob: -1.8200253248214722
    3. 'plique' → logprob: -5.570025444030762
    4. 'r' → logprob: -5.820025444030762
    5. 'e' → logprob: -6.070025444030762
    6. 'ule' → logprob: -6.695025444030762
    7. 'tie' → logprob: -7.195025444030762
    8. 'ip' → logprob: -7.320025444030762
    9. 'ipl' → logprob: -7.320025444030762
    10. 'zie' → logprob: -8.320025444030762

Token 582: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16022484004497528
    2. 'y' → logprob: -1.9102247953414917
    3. '	y' → logprob: -14.535224914550781
    4. ' ' → logprob: -16.41022491455078
    5. ''y' → logprob: -17.28522491455078
    6. '   ' → logprob: -17.66022491455078
    7. '‘y' → logprob: -17.66022491455078
    8. ' ' → logprob: -17.78522491455078
    9. '<|end|>' → logprob: -17.91022491455078
    10. ')' → logprob: -18.53522491455078

Token 583: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020585797727108
    2. ' =' → logprob: -3.895585775375366
    3. '*=' → logprob: -10.770586013793945
    4. 'by' → logprob: -11.395586013793945
    5. ' by' → logprob: -12.270586013793945
    6. '*' → logprob: -13.145586013793945
    7. '=r' → logprob: -13.270586013793945
    8. 'r' → logprob: -13.770586013793945
    9. ' *=' → logprob: -14.520586013793945
    10. 'y' → logprob: -15.395586013793945

Token 584: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024756586644798517
    2. ' r' → logprob: -6.002475738525391
    3. '
' → logprob: -19.37747573852539
    4. ' ' → logprob: -20.00247573852539
    5. '```' → logprob: -20.12747573852539
    6. '	r' → logprob: -20.37747573852539
    7. '`' → logprob: -20.50247573852539
    8. '(r' → logprob: -21.25247573852539
    9. '   ' → logprob: -21.87747573852539
    10. '_r' → logprob: -23.50247573852539

Token 585: '’in' (ID: 15276)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009817203972488642
    2. ' r' → logprob: -7.12598180770874
    3. '	r' → logprob: -8.875981330871582
    4. '=r' → logprob: -11.250981330871582
    5. '(r' → logprob: -11.625981330871582
    6. '*r' → logprob: -13.500981330871582
    7. 'pow' → logprob: -13.625981330871582
    8. 'a' → logprob: -13.625981330871582
    9. 'o' → logprob: -13.625981330871582
    10. '```' → logprob: -13.750981330871582

Token 586: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.38994288444519043
    2. 'r' → logprob: -1.1399428844451904
    3. 'v' → logprob: -6.6399431228637695
    4. '```' → logprob: -7.5149431228637695
    5. '
' → logprob: -8.13994312286377
    6. 'inverse' → logprob: -8.51494312286377
    7. '	r' → logprob: -9.26494312286377
    8. ' r' → logprob: -9.51494312286377
    9. 'p' → logprob: -9.63994312286377
    10. 't' → logprob: -9.88994312286377

Token 587: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23948347568511963
    2. ' r' → logprob: -1.7394834756851196
    3. ' de' → logprob: -3.73948335647583
    4. '(r' → logprob: -5.86448335647583
    5. '_r' → logprob: -5.86448335647583
    6. 'de' → logprob: -6.23948335647583
    7. 'multip' → logprob: -6.61448335647583
    8. 'x' → logprob: -6.86448335647583
    9. '[r' → logprob: -7.48948335647583
    10. 'mod' → logprob: -7.86448335647583

Token 588: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1983005404472351
    2. 'x' → logprob: -1.8233006000518799
    3. ' r' → logprob: -4.198300361633301
    4. ' x' → logprob: -5.698300361633301
    5. ' ' → logprob: -12.4483003616333
    6. '```' → logprob: -12.4483003616333
    7. 'y' → logprob: -14.4483003616333
    8. ' ' → logprob: -14.6983003616333
    9. ' 
' → logprob: -14.9483003616333
    10. '
' → logprob: -14.9483003616333

Token 589: ' (' (ID: 350)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10035472363233566
    2. '%' → logprob: -2.3503546714782715
    3. ' modulo' → logprob: -9.22535514831543
    4. ' %=' → logprob: -11.47535514831543
    5. ',' → logprob: -12.22535514831543
    6. '%d' → logprob: -12.35035514831543
    7. '%s' → logprob: -12.60035514831543
    8. '```' → logprob: -12.60035514831543
    9. '%m' → logprob: -12.97535514831543
    10. 'r' → logprob: -13.10035514831543

Token 590: 'r' (ID: 81)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9875015020370483
    2. 'r' → logprob: -1.6125015020370483
    3. ' r' → logprob: -1.7375015020370483
    4. '%' → logprob: -1.7375015020370483
    5. ')' → logprob: -2.862501621246338
    6. ' modulo' → logprob: -5.112501621246338
    7. '               ' → logprob: -6.112501621246338
    8. ')%' → logprob: -6.487501621246338
    9. ' (' → logprob: -6.737501621246338
    10. '%m' → logprob: -7.112501621246338

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6872818470001221
    2. '%' → logprob: -1.312281847000122
    3. ' %' → logprob: -1.562281847000122
    4. ')%' → logprob: -4.062281608581543
    5. ' )' → logprob: -7.187281608581543
    6. '%x' → logprob: -10.187281608581543
    7. '%s' → logprob: -10.437281608581543
    8. '),' → logprob: -10.812281608581543
    9. '%)' → logprob: -10.812281608581543
    10. '%d' → logprob: -10.937281608581543

Token 592: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3889736533164978
    2. '%' → logprob: -1.1389737129211426
    3. '               ' → logprob: -6.888973712921143
    4. ')' → logprob: -7.888973712921143
    5. ' %=' → logprob: -8.388973236083984
    6. '           ' → logprob: -9.013973236083984
    7. ' ' → logprob: -9.513973236083984
    8. '                   ' → logprob: -9.513973236083984
    9. ')%' → logprob: -10.013973236083984
    10. '%s' → logprob: -10.388973236083984

Token 593: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.31326499581336975
    2. 'm' → logprob: -1.3132649660110474
    3. '```' → logprob: -13.438264846801758
    4. '(m' → logprob: -14.938264846801758
    5. ' ' → logprob: -15.313264846801758
    6. '	m' → logprob: -15.313264846801758
    7. ')' → logprob: -15.313264846801758
    8. '`' → logprob: -15.563264846801758
    9. ',' → logprob: -15.688264846801758
    10. ' м' → logprob: -16.063264846801758

Token 594: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043144889175891876
    2. '%' → logprob: -3.668144941329956
    3. ' %' → logprob: -4.418144702911377
    4. '                   ' → logprob: -6.293144702911377
    5. '           ' → logprob: -6.918144702911377
    6. ',' → logprob: -7.543144702911377
    7. ')' → logprob: -8.168145179748535
    8. '                ' → logprob: -8.918145179748535
    9. '              ' → logprob: -9.043145179748535
    10. 'y' → logprob: -9.418145179748535

Token 595: ' "' (ID: 392)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.025739414617419243
    2. 'y' → logprob: -3.7757394313812256
    3. ' continuer' → logprob: -6.6507391929626465
    4. ' rester' → logprob: -7.5257391929626465
    5. ' mettre' → logprob: -8.650739669799805
    6. ' maintenir' → logprob: -8.900739669799805
    7. 'maint' → logprob: -9.275739669799805
    8. ')' → logprob: -10.650739669799805
    9. 'contin' → logprob: -10.650739669799805
    10. 'rest' → logprob: -10.650739669799805

Token 596: 'ann' (ID: 934)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03806662559509277
    2. ' y' → logprob: -3.2880666255950928
    3. ')' → logprob: -11.788066864013672
    4. 'contin' → logprob: -12.788066864013672
    5. '```' → logprob: -12.788066864013672
    6. '(' → logprob: -13.163066864013672
    7. ' continuer' → logprob: -13.663066864013672
    8. ''y' → logprob: -13.788066864013672
    9. '(y' → logprob: -14.163066864013672
    10. 'return' → logprob: -14.163066864013672

Token 597: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0005824613617733121
    2. 'ul' → logprob: -8.500582695007324
    3. '```' → logprob: -8.750582695007324
    4. 'u' → logprob: -9.750582695007324
    5. 'uller' → logprob: -10.375582695007324
    6. '**' → logprob: -11.000582695007324
    7. '\' → logprob: -11.250582695007324
    8. '
' → logprob: -11.375582695007324
    9. '<ul' → logprob: -11.375582695007324
    10. '"' → logprob: -11.625582695007324

Token 598: '"' (ID: 1)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5807744860649109
    2. ' x' → logprob: -2.5807745456695557
    3. ')' → logprob: -2.7057745456695557
    4. '<|end|>' → logprob: -2.7057745456695557
    5. 'multip' → logprob: -2.9557745456695557
    6. ' la' → logprob: -3.0807745456695557
    7. ' l' → logprob: -3.8307745456695557
    8. 'y' → logprob: -4.205774307250977
    9. '               ' → logprob: -4.455774307250977
    10. '*' → logprob: -4.955774307250977

Token 599: ' un' (ID: 537)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1917971670627594
    2. 'y' → logprob: -1.941797137260437
    3. '<|end|>' → logprob: -4.816797256469727
    4. '%' → logprob: -5.066797256469727
    5. 'x' → logprob: -5.191797256469727
    6. 'the' → logprob: -6.441797256469727
    7. ' x' → logprob: -6.566797256469727
    8. ')' → logprob: -6.691797256469727
    9. '```' → logprob: -6.691797256469727
    10. ' the' → logprob: -6.816797256469727

Token 600: ' déplacement' (ID: 138449)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32276609539985657
    2. '%' → logprob: -1.5727660655975342
    3. '                   ' → logprob: -3.822766065597534
    4. '           ' → logprob: -4.447766304016113
    5. ' %' → logprob: -4.447766304016113
    6. 'y' → logprob: -4.822766304016113
    7. ' y' → logprob: -5.572766304016113
    8. '.' → logprob: -6.697766304016113
    9. '```' → logprob: -6.822766304016113
    10. ' %=' → logprob: -6.947766304016113

Token 602: ' droite' (ID: 61428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.439069926738739
    2. 'pr' → logprob: -1.8140699863433838
    3. 'p' → logprob: -3.439069986343384
    4. 'l' → logprob: -3.439069986343384
    5. ' droite' → logprob: -3.439069986343384
    6. ' x' → logprob: -3.814069986343384
    7. ' gauche' → logprob: -4.064069747924805
    8. 'la' → logprob: -4.189069747924805
    9. 'g' → logprob: -4.564069747924805
    10. '>' → logprob: -5.189069747924805

Token 603: ' précédent' (ID: 128462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007708130870014429
    2. '%' → logprob: -5.6327080726623535
    3. '           ' → logprob: -6.2577080726623535
    4. '.' → logprob: -7.5077080726623535
    5. '                   ' → logprob: -7.7577080726623535
    6. ' %' → logprob: -8.132708549499512
    7. ',' → logprob: -8.257708549499512
    8. '<|end|>' → logprob: -9.007708549499512
    9. '              ' → logprob: -9.132708549499512
    10. ')' → logprob: -9.382708549499512

Token 604: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010394911281764507
    2. '.' → logprob: -5.385395050048828
    3. ',' → logprob: -5.760395050048828
    4. '           ' → logprob: -7.385395050048828
    5. ')' → logprob: -7.510395050048828
    6. '                   ' → logprob: -7.885395050048828
    7. '%' → logprob: -8.010395050048828
    8. '<|end|>' → logprob: -8.510395050048828
    9. '              ' → logprob: -9.135395050048828
    10. 'y' → logprob: -9.635395050048828

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005744267720729113
    2. ' y' → logprob: -6.130744457244873
    3. '```' → logprob: -6.130744457244873
    4. '           ' → logprob: -7.755744457244873
    5. 'y' → logprob: -8.505743980407715
    6. '\n' → logprob: -8.630743980407715
    7. '``' → logprob: -8.880743980407715
    8. '                
' → logprob: -9.255743980407715
    9. '                   ' → logprob: -9.380743980407715
    10. '
' → logprob: -10.005743980407715

Token 606: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0815768912434578
    2. 'y' (adapté à ' y') → logprob: -2.5815768241882324
    3. '               ' → logprob: -6.331576824188232
    4. ' 
' → logprob: -8.08157730102539
    5. '                ' → logprob: -9.08157730102539
    6. '           ' → logprob: -9.08157730102539
    7. ' ' → logprob: -9.20657730102539
    8. '                   ' → logprob: -9.70657730102539
    9. ' ' → logprob: -10.08157730102539
    10. '            ' → logprob: -10.58157730102539

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168680645525455
    2. ' =' → logprob: -4.264168739318848
    3. '%=' → logprob: -12.264168739318848
    4. '*=' → logprob: -15.389168739318848
    5. ' %=' → logprob: -16.38916778564453
    6. '=y' → logprob: -17.38916778564453
    7. '```' → logprob: -17.51416778564453
    8. '＝' → logprob: -17.63916778564453
    9. '=
' → logprob: -17.76416778564453
    10. ')' → logprob: -17.76416778564453

Token 608: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47523802518844604
    2. ' y' → logprob: -0.975238025188446
    3. '(y' → logprob: -6.850237846374512
    4. ' (' → logprob: -9.225237846374512
    5. '(' → logprob: -12.975237846374512
    6. '	y' → logprob: -14.850237846374512
    7. ' ' → logprob: -18.475238800048828
    8. '*y' → logprob: -18.850238800048828
    9. ',y' → logprob: -18.975238800048828
    10. ''y' → logprob: -19.100238800048828

Token 609: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008619774132966995
    2. '*' → logprob: -4.758619785308838
    3. ' ' → logprob: -13.38361930847168
    4. ' ' → logprob: -13.63361930847168
    5. '*r' → logprob: -13.88361930847168
    6. '
' → logprob: -14.38361930847168
    7. '*y' → logprob: -14.50861930847168
    8. '```' → logprob: -15.38361930847168
    9. ' y' → logprob: -16.13361930847168
    10. ' r' → logprob: -17.38361930847168

Token 610: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.941850526549388e-06
    2. ' r' → logprob: -11.750007629394531
    3. '(r' → logprob: -17.25000762939453
    4. '	r' → logprob: -20.50000762939453
    5. '```' → logprob: -21.12500762939453
    6. '(' → logprob: -21.50000762939453
    7. '
' → logprob: -21.87500762939453
    8. '<|end|>' → logprob: -22.25000762939453
    9. 'pow' → logprob: -22.87500762939453
    10. ' (' → logprob: -23.25000762939453

Token 611: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16024108231067657
    2. '%' → logprob: -1.9102411270141602
    3. '%m' → logprob: -11.28524112701416
    4. ')' → logprob: -13.28524112701416
    5. '%c' → logprob: -14.28524112701416
    6. ' ' → logprob: -14.28524112701416
    7. ')%' → logprob: -15.41024112701416
    8. '%d' → logprob: -15.53524112701416
    9. '%n' → logprob: -15.66024112701416
    10. '%x' → logprob: -15.78524112701416

Token 612: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47407716512680054
    2. ' m' → logprob: -0.9740771651268005
    3. '```' → logprob: -16.224077224731445
    4. ' ' → logprob: -16.724077224731445
    5. '(m' → logprob: -17.224077224731445
    6. '`' → logprob: -17.974077224731445
    7. '	m' → logprob: -17.974077224731445
    8. ' м' → logprob: -18.224077224731445
    9. ' ' → logprob: -19.349077224731445
    10. ')' → logprob: -19.349077224731445

Token 613: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041463072411715984
    2. '```' → logprob: -6.504146099090576
    3. '\n' → logprob: -6.879146099090576
    4. '<|end|>' → logprob: -7.379146099090576
    5. 'elif' → logprob: -7.754146099090576
    6. '               ' → logprob: -9.254146575927734
    7. '       ' → logprob: -9.379146575927734
    8. '
' → logprob: -9.379146575927734
    9. 'else' → logprob: -9.879146575927734
    10. '            
' → logprob: -10.129146575927734

Token 614: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002128968248143792
    2. 'elif' → logprob: -6.377129077911377
    3. '```' → logprob: -8.502128601074219
    4. 'else' → logprob: -8.627128601074219
    5. '       ' → logprob: -10.752128601074219
    6. ' elif' → logprob: -11.002128601074219
    7. ' else' → logprob: -13.627128601074219
    8. '               ' → logprob: -13.877128601074219
    9. '<|end|>' → logprob: -14.377128601074219
    10. 'continue' → logprob: -14.502128601074219

Token 615: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03078608587384224
    2. 'elif' (adapté à ' elif') → logprob: -3.9057860374450684
    3. 'else' → logprob: -5.155786037445068
    4. '       ' → logprob: -6.405786037445068
    5. '```' → logprob: -6.530786037445068
    6. 'hash' → logprob: -7.655786037445068
    7. ' elif' → logprob: -7.905786037445068
    8. ' hashes' → logprob: -9.030786514282227
    9. '               ' → logprob: -9.405786514282227
    10. ' else' → logprob: -9.655786514282227

Token 616: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6863441467285156
    2. ''' → logprob: -0.9363441467285156
    3. 'c' → logprob: -2.5613441467285156
    4. ' '' → logprob: -3.6863441467285156
    5. ' '+'' → logprob: -7.811344146728516
    6. ' ' → logprob: -8.186344146728516
    7. ''#' → logprob: -8.186344146728516
    8. '')' → logprob: -8.686344146728516
    9. '"' → logprob: -8.998844146728516
    10. ''a' → logprob: -9.436344146728516

Token 617: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005402369424700737
    2. '==' → logprob: -5.255402565002441
    3. '=='' → logprob: -10.005402565002441
    4. '[' → logprob: -10.130402565002441
    5. ' =' → logprob: -10.255402565002441
    6. ' =='' → logprob: -10.880402565002441
    7. '[]' → logprob: -12.505402565002441
    8. '		' → logprob: -12.755402565002441
    9. ' in' → logprob: -13.130402565002441
    10. '            ' → logprob: -13.130402565002441

Token 618: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.10272081196308136
    2. ''' → logprob: -2.4777207374572754
    3. ''-' → logprob: -4.477720737457275
    4. ''#' → logprob: -7.602720737457275
    5. ''^' → logprob: -7.852720737457275
    6. ''?' → logprob: -8.102721214294434
    7. ''*' → logprob: -8.477721214294434
    8. ''x' → logprob: -8.602721214294434
    9. ''.' → logprob: -9.477721214294434
    10. '')' → logprob: -9.477721214294434

Token 619: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.9898746609687805
    2. '<|end|>' → logprob: -1.2398746013641357
    3. '1' → logprob: -1.6148746013641357
    4. ''' → logprob: -2.8648746013641357
    5. ' ' → logprob: -3.3648746013641357
    6. '':
' → logprob: -4.489874839782715
    7. ''):
' → logprob: -5.114874839782715
    8. '<|end|>' → logprob: -5.364874839782715
    9. ''>' → logprob: -5.489874839782715
    10. ':' → logprob: -5.739874839782715

Token 620: '               ' (ID: 506)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07986187189817429
    2. '           ' → logprob: -2.704861879348755
    3. ' h' → logprob: -5.079861640930176
    4. '(h' → logprob: -5.829861640930176
    5. '               ' → logprob: -8.079861640930176
    6. '       ' → logprob: -8.579861640930176
    7. '#' → logprob: -9.204861640930176
    8. 'hash' → logprob: -9.954861640930176
    9. '[h' → logprob: -11.079861640930176
    10. '```' → logprob: -11.204861640930176

Token 621: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.30589890480041504
    2. ' h' → logprob: -1.430898904800415
    3. '(h' → logprob: -4.430898666381836
    4. '           ' → logprob: -4.555898666381836
    5. '               ' → logprob: -6.805898666381836
    6. 'hash' → logprob: -7.805898666381836
    7. ' hashes' → logprob: -8.430898666381836
    8. ' (' → logprob: -8.930898666381836
    9. '       ' → logprob: -9.805898666381836
    10. '[h' → logprob: -10.555898666381836

Token 622: ' Si' (ID: 7832)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00016790216614026576
    2. ' h' → logprob: -8.875167846679688
    3. '           ' → logprob: -11.375167846679688
    4. 'hash' → logprob: -11.875167846679688
    5. '#' → logprob: -12.500167846679688
    6. '       ' → logprob: -13.000167846679688
    7. '(h' → logprob: -13.750167846679688
    8. '
' → logprob: -14.125167846679688
    9. '```' → logprob: -14.250167846679688
    10. '   ' → logprob: -14.375167846679688

Token 623: ' le' (ID: 505)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.030409716069698334
    2. 'c' → logprob: -4.030409812927246
    3. ' p' → logprob: -4.655409812927246
    4. ' y' → logprob: -6.405409812927246
    5. ' ' → logprob: -7.905409812927246
    6. ' s' → logprob: -8.780409812927246
    7. ' ' → logprob: -8.905409812927246
    8. ' ans' → logprob: -9.030409812927246
    9. 'p' → logprob: -9.280409812927246
    10. ' (' → logprob: -10.405409812927246

Token 624: ' caractère' (ID: 80509)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.24793381989002228
    2. ' h' → logprob: -3.122933864593506
    3. ' c' → logprob: -3.247933864593506
    4. 'h' → logprob: -3.622933864593506
    5. 'c' → logprob: -3.747933864593506
    6. ' ' → logprob: -3.997933864593506
    7. ' y' → logprob: -4.122933864593506
    8. 'ans' → logprob: -4.872933864593506
    9. 'y' → logprob: -5.247933864593506
    10. '1' → logprob: -5.247933864593506

Token 625: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07922012358903885
    2. '==' → logprob: -2.5792200565338135
    3. '=' → logprob: -9.454219818115234
    4. ' +=' → logprob: -9.579219818115234
    5. ' c' → logprob: -10.579219818115234
    6. ' =' → logprob: -10.579219818115234
    7. '+=' → logprob: -10.954219818115234
    8. '[' → logprob: -11.079219818115234
    9. ' ' → logprob: -11.204219818115234
    10. 's' → logprob: -11.454219818115234

Token 626: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0644197463989258
    2. '(p' → logprob: -1.0644197463989258
    3. '(c' → logprob: -2.064419746398926
    4. '(' → logprob: -2.814419746398926
    5. ''' → logprob: -3.564419746398926
    6. '(s' → logprob: -3.939419746398926
    7. 'p' → logprob: -4.189419746398926
    8. 'c' → logprob: -4.439419746398926
    9. '((' → logprob: -5.064419746398926
    10. ' ' → logprob: -5.314419746398926

Token 627: ' '+' (ID: 30120)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006469102227129042
    2. ' ' → logprob: -8.125646591186523
    3. 's' → logprob: -9.250646591186523
    4. '+' → logprob: -9.625646591186523
    5. '           ' → logprob: -9.625646591186523
    6. ')' → logprob: -10.000646591186523
    7. 'c' → logprob: -10.500646591186523
    8. '(' → logprob: -12.125646591186523
    9. 'increment' → logprob: -12.250646591186523
    10. ' c' → logprob: -12.500646591186523

Token 628: '',' (ID: 787)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.06176340952515602
    2. '':' → logprob: -2.9367635250091553
    3. '               ' → logprob: -5.811763286590576
    4. '           ' → logprob: -6.936763286590576
    5. '',' → logprob: -7.186763286590576
    6. ''' → logprob: -7.436763286590576
    7. '':
' → logprob: -7.436763286590576
    8. ':
' → logprob: -8.561763763427734
    9. '',
' → logprob: -8.686763763427734
    10. ' '' → logprob: -8.936763763427734

Token 629: ' on' (ID: 402)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09175606071949005
    2. ' h' → logprob: -2.4667561054229736
    3. '           ' → logprob: -6.0917558670043945
    4. '               ' → logprob: -7.5917558670043945
    5. '
' → logprob: -11.591755867004395
    6. '	h' → logprob: -11.716755867004395
    7. 'hash' → logprob: -12.216755867004395
    8. '                   ' → logprob: -12.341755867004395
    9. '(h' → logprob: -12.466755867004395
    10. '#' → logprob: -12.466755867004395

Token 630: ' ajoute' (ID: 91611)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0717407613992691
    2. '           ' → logprob: -3.4467408657073975
    3. 'hash' → logprob: -3.5717408657073975
    4. '               ' → logprob: -6.196740627288818
    5. ' h' → logprob: -6.196740627288818
    6. '(h' → logprob: -6.571740627288818
    7. '+=' → logprob: -7.321740627288818
    8. 'aj' → logprob: -7.571740627288818
    9. 'add' → logprob: -8.071741104125977
    10. '       ' → logprob: -8.571741104125977

Token 631: ' la' (ID: 557)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2020072042942047
    2. ' y' → logprob: -1.7020071744918823
    3. '1' → logprob: -7.827007293701172
    4. 'p' → logprob: -9.452007293701172
    5. ' ' → logprob: -10.327007293701172
    6. ' p' → logprob: -10.827007293701172
    7. '
' → logprob: -11.077007293701172
    8. ' (' → logprob: -11.327007293701172
    9. '                   ' → logprob: -11.452007293701172
    10. '                       ' → logprob: -12.702007293701172

Token 632: ' valeur' (ID: 41664)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13013651967048645
    2. '1' → logprob: -2.380136489868164
    3. 'x' → logprob: -3.755136489868164
    4. 'p' → logprob: -6.005136489868164
    5. ' y' → logprob: -6.005136489868164
    6. 'pow' → logprob: -8.005136489868164
    7. 'token' → logprob: -9.005136489868164
    8. '           ' → logprob: -9.255136489868164
    9. '```' → logprob: -9.255136489868164
    10. 'current' → logprob: -9.630136489868164

Token 633: ' cour' (ID: 2871)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2898196280002594
    2. '           ' → logprob: -1.914819598197937
    3. '1' → logprob: -3.5398197174072266
    4. 's' → logprob: -3.9148197174072266
    5. '               ' → logprob: -3.9148197174072266
    6. '                   ' → logprob: -5.289819717407227
    7. '[y' → logprob: -5.664819717407227
    8. '[pos' → logprob: -5.789819717407227
    9. '[p' → logprob: -5.914819717407227
    10. ' y' → logprob: -6.039819717407227

Token 634: 'ante' (ID: 2116)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.45628821849823
    2. '               ' → logprob: -1.45628821849823
    3. '           ' → logprob: -1.70628821849823
    4. '+' → logprob: -2.2062883377075195
    5. 'ante' → logprob: -2.3312883377075195
    6. '=' → logprob: -2.7062883377075195
    7. '   ' → logprob: -3.8312883377075195
    8. ' ' → logprob: -4.9562883377075195
    9. 'ente' → logprob: -5.2062883377075195
    10. 's' → logprob: -5.2062883377075195

Token 635: ' de' (ID: 334)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5145730972290039
    2. '*p' → logprob: -2.139573097229004
    3. '*y' → logprob: -2.514573097229004
    4. ' *' → logprob: -2.889573097229004
    5. 'p' → logprob: -3.139573097229004
    6. '*' → logprob: -3.639573097229004
    7. '               ' → logprob: -4.639573097229004
    8. '                   ' → logprob: -4.764573097229004
    9. '           ' → logprob: -4.889573097229004
    10. '(p' → logprob: -5.014573097229004

Token 636: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.34004896879196167
    2. 'p' → logprob: -1.5900490283966064
    3. 'pos' → logprob: -2.9650490283966064
    4. 'x' → logprob: -4.340048789978027
    5. '1' → logprob: -4.590048789978027
    6. 'h' → logprob: -5.090048789978027
    7. 'ans' → logprob: -6.715048789978027
    8. 'hash' → logprob: -7.340048789978027
    9. 'xs' → logprob: -7.715048789978027
    10. ' y' → logprob: -8.465048789978027

Token 637: ' au' (ID: 2791)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4309154748916626
    2. ' *' → logprob: -1.4309154748916626
    3. '           ' → logprob: -1.4309154748916626
    4. '%' → logprob: -2.180915355682373
    5. '               ' → logprob: -2.430915355682373
    6. '                   ' → logprob: -3.430915355682373
    7. ')' → logprob: -4.180915355682373
    8. ' %' → logprob: -4.555915355682373
    9. 'to' → logprob: -5.180915355682373
    10. ' to' → logprob: -5.430915355682373

Token 638: ' hash' (ID: 10691)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00015705463010817766
    2. ' h' → logprob: -8.875157356262207
    3. 'hash' → logprob: -11.250157356262207
    4. '(h' → logprob: -13.125157356262207
    5. '
' → logprob: -13.500157356262207
    6. '           ' → logprob: -15.250157356262207
    7. '```' → logprob: -15.500157356262207
    8. '[h' → logprob: -16.37515640258789
    9. '       ' → logprob: -16.50015640258789
    10. ' hashes' → logprob: -16.75015640258789

Token 639: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.284212201833725
    2. 'h' → logprob: -1.9092122316360474
    3. '               ' → logprob: -3.409212112426758
    4. '%' → logprob: -4.034212112426758
    5. ',' → logprob: -4.409212112426758
    6. ' h' → logprob: -4.909212112426758
    7. '       ' → logprob: -5.284212112426758
    8. '(h' → logprob: -5.409212112426758
    9. 'hash' → logprob: -5.409212112426758
    10. ' modulo' → logprob: -6.409212112426758

Token 640: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43066760897636414
    2. '               ' → logprob: -1.3056676387786865
    3. '<|end|>' → logprob: -4.180667400360107
    4. ',' → logprob: -4.305667400360107
    5. ' +' → logprob: -4.430667400360107
    6. ' %' → logprob: -5.055667400360107
    7. ' +=' → logprob: -5.305667400360107
    8. '+' → logprob: -5.305667400360107
    9. '%' → logprob: -5.680667400360107
    10. '                   ' → logprob: -5.805667400360107

Token 641: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0654260516166687
    2. ' h' → logprob: -2.9404261112213135
    3. '               ' → logprob: -5.440425872802734
    4. '<|end|>' → logprob: -6.565425872802734
    5. ' +=' → logprob: -7.065425872802734
    6. ' 
' → logprob: -7.565425872802734
    7. ' +' → logprob: -7.690425872802734
    8. '                   ' → logprob: -7.815425872802734
    9. '+' → logprob: -7.940425872802734
    10. '            
' → logprob: -8.065425872802734

Token 642: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.32781875133514404
    2. 'h' (adapté à ' h') → logprob: -1.577818751335144
    3. '           ' → logprob: -3.5778188705444336
    4. ' 
' → logprob: -3.7028188705444336
    5. ' (' → logprob: -4.202818870544434
    6. '(h' → logprob: -6.327818870544434
    7. '            
' → logprob: -6.952818870544434
    8. '               ' → logprob: -7.327818870544434
    9. '
' → logprob: -7.827818870544434
    10. ' ' → logprob: -8.202818870544434

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12872877717018127
    2. ' =' → logprob: -2.3787288665771484
    3. '+=' → logprob: -4.003728866577148
    4. ' +=' → logprob: -4.628728866577148
    5. '+' → logprob: -9.253728866577148
    6. ' +' → logprob: -12.753728866577148
    7. '   ' → logprob: -13.253728866577148
    8. '    ' → logprob: -14.128728866577148
    9. ' ' → logprob: -14.253728866577148
    10. '```' → logprob: -14.753728866577148

Token 644: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.10027524083852768
    2. ' (' → logprob: -2.3502752780914307
    3. '(' → logprob: -9.600275039672852
    4. '(H' → logprob: -14.600275039672852
    5. '(hash' → logprob: -15.850275039672852
    6. '(s' → logprob: -16.97527503967285
    7. ' ' → logprob: -17.60027503967285
    8. '```' → logprob: -18.10027503967285
    9. '(u' → logprob: -18.22527503967285
    10. '   ' → logprob: -18.22527503967285

Token 645: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0006439301068894565
    2. '(h' → logprob: -7.875643730163574
    3. ' h' → logprob: -8.250643730163574
    4. ' (' → logprob: -13.000643730163574
    5. ')' → logprob: -16.25064468383789
    6. '(' → logprob: -16.37564468383789
    7. '<h' → logprob: -17.00064468383789
    8. '           ' → logprob: -17.00064468383789
    9. '[h' → logprob: -17.50064468383789
    10. '	h' → logprob: -17.75064468383789

Token 646: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326648592948914
    2. '+' → logprob: -1.3132665157318115
    3. '+h' → logprob: -12.81326675415039
    4. '
' → logprob: -14.81326675415039
    5. '＋' → logprob: -14.81326675415039
    6. '+
' → logprob: -15.31326675415039
    7. ' +
' → logprob: -15.31326675415039
    8. '```' → logprob: -16.06326675415039
    9. '[' → logprob: -16.31326675415039
    10. ' ' → logprob: -16.43826675415039

Token 647: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164329506456852
    2. ' y' → logprob: -4.264164447784424
    3. '1' → logprob: -14.514163970947266
    4. ')' → logprob: -15.639163970947266
    5. '                   ' → logprob: -16.514163970947266
    6. ')y' → logprob: -16.639163970947266
    7. '	y' → logprob: -16.889163970947266
    8. ' ' → logprob: -17.639163970947266
    9. '<|end|>' → logprob: -19.014163970947266
    10. '           ' → logprob: -19.014163970947266

Token 648: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')%' → logprob: -13.250004768371582
    4. '')' → logprob: -16.2500057220459
    5. '%' → logprob: -17.7500057220459
    6. ')
' → logprob: -17.8750057220459
    7. '           ' → logprob: -18.2500057220459
    8. '```' → logprob: -18.7500057220459
    9. '）' → logprob: -19.1250057220459
    10. '                   ' → logprob: -19.2500057220459

Token 649: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08910184353590012
    2. '%' → logprob: -2.464101791381836
    3. ')' → logprob: -9.589101791381836
    4. '<|end|>' → logprob: -10.339101791381836
    5. '%m' → logprob: -10.589101791381836
    6. ')%' → logprob: -11.214101791381836
    7. '%x' → logprob: -12.464101791381836
    8. ' ' → logprob: -12.839101791381836
    9. '%c' → logprob: -12.839101791381836
    10. '%e' → logprob: -13.089101791381836

Token 650: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0280383548888494e-06
    2. ' m' → logprob: -13.875000953674316
    3. '```' → logprob: -21.500001907348633
    4. '	m' → logprob: -23.000001907348633
    5. '(m' → logprob: -23.625001907348633
    6. '   ' → logprob: -23.625001907348633
    7. ' м' → logprob: -24.000001907348633
    8. '
' → logprob: -24.250001907348633
    9. ')m' → logprob: -24.500001907348633
    10. 'м' → logprob: -24.625001907348633

Token 651: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7218703627586365
    2. '<|end|>' → logprob: -0.8468703627586365
    3. '           ' → logprob: -2.7218704223632812
    4. ' ' → logprob: -5.846870422363281
    5. 'elif' → logprob: -5.971870422363281
    6. '<|end|>' → logprob: -6.096870422363281
    7. '        
' → logprob: -6.471870422363281
    8. '[' → logprob: -6.721870422363281
    9. '   ' → logprob: -6.846870422363281
    10. ')' → logprob: -6.971870422363281

Token 653: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2618021965026855
    2. ' ' → logprob: -1.8868021965026855
    3. 'elif' → logprob: -1.8868021965026855
    4. '<|end|>' → logprob: -1.8868021965026855
    5. ' elif' → logprob: -2.1368021965026855
    6. '           ' → logprob: -3.1368021965026855
    7. 'else' (adapté à ' else') → logprob: -3.6368021965026855
    8. ' else' → logprob: -3.7618021965026855
    9. ')' → logprob: -4.7618021965026855
    10. '	elif' → logprob: -4.8868021965026855

Token 654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0322200246155262
    2. ' :' → logprob: -4.157219886779785
    3. ':
' → logprob: -4.282219886779785
    4. ' :
' → logprob: -7.532219886779785
    5. '<|end|>' → logprob: -7.657219886779785
    6. '           ' → logprob: -8.157219886779785
    7. ' ' → logprob: -8.532219886779785
    8. '       ' → logprob: -8.782219886779785
    9. '{' → logprob: -8.907219886779785
    10. '#' → logprob: -9.532219886779785

Token 655: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02639853022992611
    2. '#' → logprob: -4.026398658752441
    3. '           ' → logprob: -5.151398658752441
    4. ':' → logprob: -7.276398658752441
    5. '       ' → logprob: -7.401398658752441
    6. ' #' → logprob: -7.776398658752441
    7. ':
' → logprob: -8.901398658752441
    8. '                ' → logprob: -9.401398658752441
    9. '   ' → logprob: -9.526398658752441
    10. ' raise' → logprob: -10.151398658752441

Token 656: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8683327436447144
    2. '#' (adapté à ' #') → logprob: -0.9933327436447144
    3. 'pass' → logprob: -2.368332862854004
    4. ' pass' → logprob: -2.868332862854004
    5. 'break' → logprob: -3.868332862854004
    6. '           ' → logprob: -4.368332862854004
    7. ' #' → logprob: -4.743332862854004
    8. ' break' → logprob: -5.243332862854004
    9. '       ' → logprob: -5.618332862854004
    10. 'raise' → logprob: -6.243332862854004

Token 657: ' Sinon' (ID: 154924)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2325657308101654
    2. 'pass' → logprob: -1.9825657606124878
    3. '#' → logprob: -3.2325656414031982
    4. 'continue' → logprob: -4.732565879821777
    5. '           ' → logprob: -4.857565879821777
    6. 'p' → logprob: -5.357565879821777
    7. '               ' → logprob: -5.732565879821777
    8. 'raise' → logprob: -6.232565879821777
    9. 'break' → logprob: -6.857565879821777
    10. 'if' → logprob: -7.107565879821777

Token 658: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08427958935499191
    2. '           ' → logprob: -3.2092795372009277
    3. ':' → logprob: -3.7092795372009277
    4. '#' → logprob: -4.834279537200928
    5. ':
' → logprob: -6.459279537200928
    6. '       ' → logprob: -6.959279537200928
    7. ' continue' → logprob: -6.959279537200928
    8. ' #' → logprob: -7.084279537200928
    9. '   ' → logprob: -7.209279537200928
    10. ' raise' → logprob: -7.584279537200928

Token 659: 'on' (ID: 263)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9929736852645874
    2. '               ' → logprob: -0.9929736852645874
    3. 'pass' → logprob: -1.8679736852645874
    4. '           ' → logprob: -3.242973804473877
    5. ' pass' → logprob: -4.117973804473877
    6. ' #' → logprob: -4.367973804473877
    7. 'continue' → logprob: -4.992973804473877
    8. 'raise' → logprob: -5.117973804473877
    9. 'assert' → logprob: -5.617973804473877
    10. ' continue' → logprob: -5.867973804473877

Token 660: ' suppose' (ID: 35968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4004856050014496
    2. '           ' → logprob: -2.5254855155944824
    3. ' =' → logprob: -2.6504855155944824
    4. ' #' → logprob: -3.4004855155944824
    5. ' n' → logprob: -3.6504855155944824
    6. ' ==' → logprob: -3.7754855155944824
    7. 'continue' → logprob: -4.025485515594482
    8. '               ' → logprob: -4.275485515594482
    9. '   ' → logprob: -5.025485515594482
    10. '#' → logprob: -5.150485515594482

Token 661: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.01900719292461872
    2. ' c' → logprob: -4.144007205963135
    3. 'que' → logprob: -6.644007205963135
    4. 'c' → logprob: -8.019006729125977
    5. ' un' → logprob: -8.394006729125977
    6. ' that' → logprob: -8.394006729125977
    7. '               ' → logprob: -9.269006729125977
    8. ' s' → logprob: -9.394006729125977
    9. ' qu' → logprob: -9.519006729125977
    10. ' ' → logprob: -9.519006729125977

Token 662: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11284104734659195
    2. ' c' → logprob: -2.2378411293029785
    3. ' True' → logprob: -12.36284065246582
    4. ')' → logprob: -12.86284065246582
    5. 'True' → logprob: -13.23784065246582
    6. '	c' → logprob: -13.23784065246582
    7. '#' → logprob: -13.23784065246582
    8. 'False' → logprob: -13.23784065246582
    9. ')c' → logprob: -13.73784065246582
    10. ' False' → logprob: -13.86284065246582

Token 663: ' seul' (ID: 33041)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02290998585522175
    2. ' c' → logprob: -4.272910118103027
    3. ' code' → logprob: -6.022910118103027
    4. 'token' → logprob: -6.397910118103027
    5. 'code' → logprob: -6.772910118103027
    6. ''' → logprob: -7.397910118103027
    7. '#' → logprob: -7.647910118103027
    8. 'car' → logprob: -7.772910118103027
    9. 's' → logprob: -8.147910118103027
    10. 'elif' → logprob: -8.272910118103027

Token 664: ' autre' (ID: 20278)
  Prédit: ' autre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -1.166660189628601
    2. ' other' → logprob: -1.666660189628601
    3. 'else' → logprob: -1.916660189628601
    4. 'c' → logprob: -2.9166603088378906
    5. 'other' → logprob: -3.0416603088378906
    6. ' else' → logprob: -3.1666603088378906
    7. 'elif' → logprob: -3.2916603088378906
    8. ' c' → logprob: -3.2916603088378906
    9. ' possible' → logprob: -3.2916603088378906
    10. ''autre' → logprob: -3.6666603088378906

Token 665: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6960555911064148
    2. 'c' → logprob: -1.6960556507110596
    3. ' caractère' → logprob: -1.8210556507110596
    4. ' c' → logprob: -2.8210556507110596
    5. ' caract' → logprob: -3.0710556507110596
    6. ' cas' → logprob: -4.4460554122924805
    7. 'case' → logprob: -4.6960554122924805
    8. ' case' → logprob: -5.4460554122924805
    9. 'char' → logprob: -5.5710554122924805
    10. ' token' → logprob: -5.6960554122924805

Token 666: ' possible' (ID: 4149)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.1900783777236938
    2. ' is' → logprob: -1.3150783777236938
    3. ' ==' → logprob: -1.6900783777236938
    4. '==' → logprob: -1.6900783777236938
    5. 'est' → logprob: -3.6900782585144043
    6. 'is' → logprob: -4.190078258514404
    7. ''est' → logprob: -5.065078258514404
    8. '=' → logprob: -5.565078258514404
    9. 's' → logprob: -5.815078258514404
    10. '=='' → logprob: -5.940078258514404

Token 667: ' ici' (ID: 27994)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.17075811326503754
    2. 'est' → logprob: -2.045758008956909
    3. ''est' → logprob: -4.170758247375488
    4. ' is' → logprob: -5.920758247375488
    5. '==' → logprob: -6.045758247375488
    6. '=' → logprob: -6.045758247375488
    7. ' ==' → logprob: -6.420758247375488
    8. 's' → logprob: -7.420758247375488
    9. '               ' → logprob: -7.795758247375488
    10. 'is' → logprob: -7.920758247375488

Token 668: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.19421795010566711
    2. ' is' → logprob: -2.5692179203033447
    3. ' ==' → logprob: -3.0692179203033447
    4. '==' → logprob: -3.6942179203033447
    5. 'est' → logprob: -3.8192179203033447
    6. ''est' → logprob: -5.444218158721924
    7. '=' → logprob: -7.194218158721924
    8. 'is' → logprob: -7.694218158721924
    9. ' =' → logprob: -8.444217681884766
    10. ')' → logprob: -8.694217681884766

Token 669: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.043736815452575684
    2. ''*' → logprob: -4.043736934661865
    3. ''' → logprob: -4.168736934661865
    4. ''?' → logprob: -5.418736934661865
    5. ''^' → logprob: -6.168736934661865
    6. ''#' → logprob: -6.168736934661865
    7. ''.' → logprob: -7.668736934661865
    8. ''+' → logprob: -8.543736457824707
    9. ' '-')' → logprob: -8.543736457824707
    10. ''=' → logprob: -9.168736457824707

Token 670: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.42193925380706787
    2. ''):
' → logprob: -1.4219392538070679
    3. ''),
' → logprob: -2.4219393730163574
    4. ''' → logprob: -5.921939373016357
    5. '')' → logprob: -5.921939373016357
    6. '           ' → logprob: -6.671939373016357
    7. ''):' → logprob: -6.796939373016357
    8. '')
' → logprob: -6.921939373016357
    9. ' y' → logprob: -7.171939373016357
    10. '):
' → logprob: -7.421939373016357

Token 671: ' 
' (ID: 793)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0130468113347888
    2. ' h' → logprob: -4.888046741485596
    3. '           ' → logprob: -5.388046741485596
    4. '               ' → logprob: -7.138046741485596
    5. '                   ' → logprob: -10.263047218322754
    6. '   ' → logprob: -11.763047218322754
    7. '       ' → logprob: -11.888047218322754
    8. '	h' → logprob: -12.263047218322754
    9. '```' → logprob: -13.263047218322754
    10. '            ' → logprob: -14.138047218322754

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1122865080833435
    2. '           ' → logprob: -2.4872865676879883
    3. 'h' → logprob: -3.8622865676879883
    4. ' h' → logprob: -6.362286567687988
    5. '   ' → logprob: -8.987286567687988
    6. '       ' → logprob: -9.362286567687988
    7. ' ' → logprob: -10.487286567687988
    8. ' ' → logprob: -11.112286567687988
    9. '                   ' → logprob: -11.487286567687988
    10. '            ' → logprob: -11.487286567687988

Token 673: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2802504897117615
    2. '               ' → logprob: -1.7802505493164062
    3. '           ' → logprob: -2.7802505493164062
    4. ' h' → logprob: -4.780250549316406
    5. '#' (adapté à ' #') → logprob: -5.530250549316406
    6. '                   ' → logprob: -7.280250549316406
    7. '   ' → logprob: -8.780250549316406
    8. '       ' → logprob: -9.030250549316406
    9. '{
' → logprob: -9.030250549316406
    10. ' #' → logprob: -9.780250549316406

Token 674: ' on' (ID: 402)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0015153385465964675
    2. ' h' → logprob: -6.7515153884887695
    3. '           ' → logprob: -8.12651538848877
    4. '               ' → logprob: -10.00151538848877
    5. '                   ' → logprob: -13.00151538848877
    6. '	h' → logprob: -13.87651538848877
    7. '       ' → logprob: -15.25151538848877
    8. '#' → logprob: -15.50151538848877
    9. '_h' → logprob: -15.75151538848877
    10. '   ' → logprob: -15.75151538848877

Token 675: ' enl' (ID: 116494)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16979579627513885
    2. '(h' → logprob: -2.6697957515716553
    3. ' (' → logprob: -2.9197957515716553
    4. '(' → logprob: -3.7947957515716553
    5. ' h' → logprob: -4.669795989990234
    6. '(
' → logprob: -7.294795989990234
    7. '           ' → logprob: -9.044795989990234
    8. ' =' → logprob: -9.169795989990234
    9. '=' → logprob: -10.044795989990234
    10. ')' → logprob: -10.044795989990234

Token 676: 'ève' (ID: 41151)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17193575203418732
    2. 'ève' → logprob: -1.921935796737671
    3. 'eve' → logprob: -4.671935558319092
    4. 'ace' → logprob: -7.921935558319092
    5. '```' → logprob: -7.921935558319092
    6. 'a' → logprob: -8.29693603515625
    7. 'o' → logprob: -8.92193603515625
    8. 'ev' → logprob: -9.29693603515625
    9. 'ue' → logprob: -9.29693603515625
    10. 've' → logprob: -9.42193603515625

Token 677: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6705804467201233
    2. ' y' → logprob: -0.9205804467201233
    3. 'y' → logprob: -2.4205803871154785
    4. '(y' → logprob: -6.6705803871154785
    5. '(' → logprob: -8.920580863952637
    6. 'h' → logprob: -11.420580863952637
    7. '1' → logprob: -11.920580863952637
    8. ' ' → logprob: -12.545580863952637
    9. '(h' → logprob: -12.795580863952637
    10. ' h' → logprob: -12.795580863952637

Token 678: ' valeur' (ID: 41664)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12854242324829102
    2. ' y' → logprob: -2.128542423248291
    3. ' (' → logprob: -6.503542423248291
    4. '(' → logprob: -9.628541946411133
    5. '(y' → logprob: -10.503541946411133
    6. 'h' → logprob: -11.128541946411133
    7. 'value' → logprob: -13.128541946411133
    8. ' ' → logprob: -13.253541946411133
    9. ' h' → logprob: -14.503541946411133
    10. '1' → logprob: -14.628541946411133

Token 679: ' cour' (ID: 2871)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2935827374458313
    2. ' de' → logprob: -1.6685826778411865
    3. '(' → logprob: -3.5435826778411865
    4. 'de' → logprob: -4.168582916259766
    5. 'h' → logprob: -5.168582916259766
    6. ' y' → logprob: -5.543582916259766
    7. '(h' → logprob: -5.543582916259766
    8. '(y' → logprob: -5.918582916259766
    9. ' h' → logprob: -6.043582916259766
    10. 'y' → logprob: -6.918582916259766

Token 680: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.032654520124197006
    2. 'r' → logprob: -3.5326545238494873
    3. 'ant' → logprob: -5.907654285430908
    4. 'ente' → logprob: -9.532654762268066
    5. 'te' → logprob: -10.282654762268066
    6. 'rant' → logprob: -11.407654762268066
    7. 'u' → logprob: -12.032654762268066
    8. '(' → logprob: -12.157654762268066
    9. 't' → logprob: -12.157654762268066
    10. 'p' → logprob: -12.157654762268066

Token 681: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02844635397195816
    2. ' y' → logprob: -4.028446197509766
    3. 'de' → logprob: -5.028446197509766
    4. 'y' → logprob: -6.403446197509766
    5. ' h' → logprob: -7.028446197509766
    6. 'h' → logprob: -7.403446197509766
    7. ' (' → logprob: -7.903446197509766
    8. ' of' → logprob: -9.903446197509766
    9. '```' → logprob: -10.528446197509766
    10. ' ' → logprob: -11.278446197509766

Token 682: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0110511165112257
    2. ' y' → logprob: -4.511051177978516
    3. 'h' → logprob: -12.636051177978516
    4. '```' → logprob: -17.886051177978516
    5. ' h' → logprob: -18.011051177978516
    6. '	y' → logprob: -18.636051177978516
    7. ''y' → logprob: -19.386051177978516
    8. '(y' → logprob: -19.636051177978516
    9. ' ' → logprob: -19.761051177978516
    10. 'x' → logprob: -19.761051177978516

Token 683: ' au' (ID: 2791)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15212689340114594
    2. '           ' → logprob: -2.7771267890930176
    3. '```' → logprob: -3.5271267890930176
    4. ' (' → logprob: -4.277126789093018
    5. ' à' → logprob: -4.402126789093018
    6. ',' → logprob: -5.527126789093018
    7. '       ' → logprob: -5.652126789093018
    8. '                   ' → logprob: -6.027126789093018
    9. 'from' → logprob: -6.027126789093018
    10. ')' → logprob: -6.277126789093018

Token 684: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.2758721113204956
    2. 'h' → logprob: -1.5258721113204956
    3. ' hash' → logprob: -4.025872230529785
    4. ' h' → logprob: -5.150872230529785
    5. 'hach' → logprob: -11.775872230529785
    6. '_hash' → logprob: -12.150872230529785
    7. '```' → logprob: -13.650872230529785
    8. 'ha' → logprob: -14.275872230529785
    9. '(hash' → logprob: -14.900872230529785
    10. '
' → logprob: -15.400872230529785

Token 685: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.10570554435253143
    2. ' (' → logprob: -3.105705499649048
    3. 'h' → logprob: -3.730705499649048
    4. '               ' → logprob: -4.105705738067627
    5. '(h' → logprob: -4.355705738067627
    6. '```' → logprob: -6.855705738067627
    7. '           ' → logprob: -7.355705738067627
    8. '                   ' → logprob: -8.730705261230469
    9. ',' → logprob: -8.980705261230469
    10. '(' → logprob: -9.355705261230469

Token 686: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05877521261572838
    2. '           ' → logprob: -3.0587751865386963
    3. ':
' → logprob: -5.058775424957275
    4. ':' → logprob: -6.433775424957275
    5. ',' → logprob: -7.183775424957275
    6. '```' → logprob: -7.433775424957275
    7. '=' → logprob: -8.433774948120117
    8. ' =' → logprob: -8.558774948120117
    9. '                   ' → logprob: -8.683774948120117
    10. '.' → logprob: -10.308774948120117

Token 687: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3444415330886841
    2. '```' → logprob: -1.344441533088684
    3. '           ' → logprob: -4.0944414138793945
    4. ' h' → logprob: -4.5944414138793945
    5. '``' → logprob: -6.3444414138793945
    6. 'h' → logprob: -6.9694414138793945
    7. ' (' → logprob: -8.344441413879395
    8. '                   ' → logprob: -8.594441413879395
    9. '<|end|>' → logprob: -8.719441413879395
    10. '`' → logprob: -9.344441413879395

Token 688: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.06318565458059311
    2. ' h' → logprob: -2.813185691833496
    3. '(h' → logprob: -7.563185691833496
    4. '           ' → logprob: -7.688185691833496
    5. '(' → logprob: -9.438185691833496
    6. ' (' → logprob: -9.438185691833496
    7. '               ' → logprob: -9.563185691833496
    8. '_h' → logprob: -13.063185691833496
    9. '(
' → logprob: -13.188185691833496
    10. '	h' → logprob: -13.438185691833496

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008049834286794066
    2. ' =' → logprob: -7.125804901123047
    3. '-=' → logprob: -14.875804901123047
    4. '-' → logprob: -15.875804901123047
    5. '=(' → logprob: -17.625804901123047
    6. '=
' → logprob: -18.000804901123047
    7. ' -=' → logprob: -18.750804901123047
    8. '＝' → logprob: -18.875804901123047
    9. '```' → logprob: -19.000804901123047
    10. ')' → logprob: -19.500804901123047

Token 690: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.12699992954730988
    2. ' (' → logprob: -2.126999855041504
    3. '(' → logprob: -9.626999855041504
    4. '(m' → logprob: -13.251999855041504
    5. '(c' → logprob: -13.376999855041504
    6. '(H' → logprob: -13.626999855041504
    7. '(s' → logprob: -14.376999855041504
    8. '(a' → logprob: -16.00200080871582
    9. '(u' → logprob: -16.37700080871582
    10. '(hash' → logprob: -16.50200080871582

Token 691: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04858805239200592
    2. '(h' → logprob: -3.0485880374908447
    3. '	h' → logprob: -15.548587799072266
    4. ' h' → logprob: -15.798587799072266
    5. '[h' → logprob: -15.923587799072266
    6. '<h' → logprob: -16.548587799072266
    7. '"h' → logprob: -17.298587799072266
    8. '{' → logprob: -18.048587799072266
    9. '?h' → logprob: -18.298587799072266
    10. '_h' → logprob: -18.423587799072266

Token 692: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687992095947266
    2. '-' → logprob: -1.1368799209594727
    3. '+' → logprob: -12.136879920959473
    4. ' ' → logprob: -13.011879920959473
    5. ' ' → logprob: -14.511879920959473
    6. ' +' → logprob: -15.511879920959473
    7. '_' → logprob: -16.511878967285156
    8. ' h' → logprob: -16.636878967285156
    9. '-h' → logprob: -16.761878967285156
    10. '[' → logprob: -16.886878967285156

Token 693: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889000326395035
    2. ' y' → logprob: -2.578890085220337
    3. '1' → logprob: -15.203889846801758
    4. '(y' → logprob: -18.828889846801758
    5. ')y' → logprob: -18.953889846801758
    6. '	y' → logprob: -19.203889846801758
    7. ')' → logprob: -20.203889846801758
    8. ' ' → logprob: -20.828889846801758
    9. ',y' → logprob: -20.828889846801758
    10. ''y' → logprob: -21.703889846801758

Token 694: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003290288441348821
    2. ')%' → logprob: -8.37532901763916
    3. ' )' → logprob: -9.62532901763916
    4. '%' → logprob: -10.87532901763916
    5. '+' → logprob: -11.50032901763916
    6. ' %' → logprob: -12.87532901763916
    7. ' +' → logprob: -14.37532901763916
    8. '```' → logprob: -16.750329971313477
    9. '）' → logprob: -17.125329971313477
    10. '}' → logprob: -17.125329971313477

Token 695: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47430962324142456
    2. ' %' → logprob: -0.9743096232414246
    3. ')' → logprob: -8.474309921264648
    4. '%m' → logprob: -11.474309921264648
    5. ')%' → logprob: -11.724309921264648
    6. '%n' → logprob: -13.599309921264648
    7. '%c' → logprob: -14.349309921264648
    8. '```' → logprob: -14.599309921264648
    9. ' ' → logprob: -14.974309921264648
    10. ' ' → logprob: -15.099309921264648

Token 696: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.547789674485102e-05
    2. ' m' → logprob: -10.250035285949707
    3. '```' → logprob: -18.875036239624023
    4. '(m' → logprob: -20.500036239624023
    5. '[m' → logprob: -20.500036239624023
    6. '	m' → logprob: -20.750036239624023
    7. ')m' → logprob: -21.125036239624023
    8. '#m' → logprob: -22.250036239624023
    9. ' м' → logprob: -22.375036239624023
    10. '   ' → logprob: -22.500036239624023

Token 697: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004059163853526115
    2. '```' → logprob: -6.129059314727783
    3. '
' → logprob: -6.754059314727783
    4. '            
' → logprob: -8.254058837890625
    5. '<|end|>' → logprob: -8.879058837890625
    6. '       ' → logprob: -9.504058837890625
    7. '[' → logprob: -10.379058837890625
    8. '\' → logprob: -10.504058837890625
    9. 'pos' → logprob: -10.629058837890625
    10. '        
' → logprob: -10.754058837890625

Token 698: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002127660671249032
    2. 'pos' → logprob: -7.002127647399902
    3. '```' → logprob: -7.002127647399902
    4. '            
' → logprob: -8.502127647399902
    5. '<|end|>' → logprob: -11.002127647399902
    6. '       ' → logprob: -11.127127647399902
    7. 'positions' → logprob: -11.127127647399902
    8. ' pos' → logprob: -11.377127647399902
    9. '               ' → logprob: -12.127127647399902
    10. '``' → logprob: -12.252127647399902

Token 699: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4547496736049652
    2. 'pos' → logprob: -1.2047497034072876
    3. '       ' → logprob: -2.954749584197998
    4. ' pos' → logprob: -4.579749584197998
    5. 'p' → logprob: -5.954749584197998
    6. '```' → logprob: -8.204750061035156
    7. 'positions' → logprob: -8.954750061035156
    8. 'position' → logprob: -9.704750061035156
    9. ' p' → logprob: -9.954750061035156
    10. '   ' → logprob: -10.579750061035156

Token 700: ' On' (ID: 2160)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004499765345826745
    2. 'p' → logprob: -7.750450134277344
    3. ' pos' → logprob: -11.750450134277344
    4. 'hash' → logprob: -12.000450134277344
    5. 'position' → logprob: -13.250450134277344
    6. 'positions' → logprob: -13.750450134277344
    7. 'ans' → logprob: -14.250450134277344
    8. '   ' → logprob: -14.250450134277344
    9. '           ' → logprob: -14.750450134277344
    10. '       ' → logprob: -16.000450134277344

Token 701: ' mém' (ID: 136981)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25967252254486084
    2. 'pos' → logprob: -1.8846725225448608
    3. '       ' → logprob: -3.3846726417541504
    4. ' pos' → logprob: -3.8846726417541504
    5. 'p' → logprob: -5.00967264175415
    6. '   ' → logprob: -5.88467264175415
    7. ' p' → logprob: -6.00967264175415
    8. 'ans' → logprob: -6.00967264175415
    9. 'positions' → logprob: -6.13467264175415
    10. ' ans' → logprob: -6.63467264175415

Token 702: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.000193527273950167
    2. 'oris' → logprob: -9.37519359588623
    3. 'oriz' → logprob: -10.25019359588623
    4. '[' → logprob: -10.50019359588623
    5. 'ory' → logprob: -11.37519359588623
    6. 'oire' → logprob: -11.87519359588623
    7. 'orie' → logprob: -12.12519359588623
    8. 'orique' → logprob: -12.62519359588623
    9. 'oride' → logprob: -13.00019359588623
    10. 'ор' → logprob: -13.37519359588623

Token 703: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0005097838002257049
    2. 'ze' → logprob: -7.875509738922119
    3. 'ser' → logprob: -9.875510215759277
    4. 's' → logprob: -11.000510215759277
    5. 'ise' → logprob: -11.125510215759277
    6. 'ase' → logprob: -11.125510215759277
    7. 'e' → logprob: -11.125510215759277
    8. '[' → logprob: -12.875510215759277
    9. 'r' → logprob: -12.875510215759277
    10. ' se' → logprob: -13.250510215759277

Token 704: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07421707361936569
    2. 'p' → logprob: -2.9492170810699463
    3. ' pos' → logprob: -4.324216842651367
    4. ' p' → logprob: -5.699216842651367
    5. '(pos' → logprob: -6.949216842651367
    6. '(p' → logprob: -7.699216842651367
    7. 'hash' → logprob: -7.824216842651367
    8. ' hashes' → logprob: -7.949216842651367
    9. ' (' → logprob: -9.199216842651367
    10. 'positions' → logprob: -9.324216842651367

Token 705: ' position' (ID: 4010)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23396965861320496
    2. 'pos' → logprob: -1.7339696884155273
    3. ' p' → logprob: -4.108969688415527
    4. 'position' → logprob: -4.233969688415527
    5. ' position' → logprob: -7.483969688415527
    6. ' pos' → logprob: -8.358969688415527
    7. 'positions' → logprob: -8.733969688415527
    8. 'current' → logprob: -10.358969688415527
    9. 'ans' → logprob: -10.483969688415527
    10. '   ' → logprob: -10.858969688415527

Token 706: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5962681770324707
    2. '[pos' → logprob: -1.0962681770324707
    3. '[p' → logprob: -2.9712681770324707
    4. 's' → logprob: -3.8462681770324707
    5. '           ' → logprob: -4.221268177032471
    6. '       ' → logprob: -4.846268177032471
    7. '```' → logprob: -4.846268177032471
    8. '[' → logprob: -5.471268177032471
    9. 'pos' → logprob: -5.846268177032471
    10. 'p' → logprob: -6.346268177032471

Token 707: ' curse' (ID: 77365)
  Prédit: 'curse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.047850802540779114
    2. 'p' → logprob: -3.4228508472442627
    3. 'i' → logprob: -4.547850608825684
    4. 'cursor' → logprob: -6.422850608825684
    5. 'c' → logprob: -7.047850608825684
    6. ' curse' → logprob: -7.672850608825684
    7. 'cur' → logprob: -8.047850608825684
    8. '```' → logprob: -9.547850608825684
    9. 'pos' → logprob: -10.297850608825684
    10. ' p' → logprob: -10.797850608825684

Token 708: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.006275724619626999
    2. 'u' → logprob: -6.256275653839111
    3. 'cur' → logprob: -6.631275653839111
    4. 'eur' → logprob: -6.631275653839111
    5. 'ure' → logprob: -7.631275653839111
    6. 'er' → logprob: -7.881275653839111
    7. 'urse' → logprob: -8.38127613067627
    8. '[' → logprob: -8.88127613067627
    9. 'ursor' → logprob: -9.13127613067627
    10. 'reur' → logprob: -9.50627613067627

Token 709: ' après' (ID: 16460)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.01410956121981144
    2. '[p' → logprob: -5.0141096115112305
    3. 'pos' → logprob: -5.8891096115112305
    4. '[i' → logprob: -6.0141096115112305
    5. '```' → logprob: -7.1391096115112305
    6. '[' → logprob: -7.6391096115112305
    7. '           ' → logprob: -7.7641096115112305
    8. '[position' → logprob: -8.63910961151123
    9. '       ' → logprob: -8.88910961151123
    10. ' [' → logprob: -9.51410961151123

Token 710: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16275109350681305
    2. 'l' → logprob: -2.6627511978149414
    3. ' i' → logprob: -2.7877511978149414
    4. 'c' → logprob: -4.787751197814941
    5. '[i' → logprob: -5.662751197814941
    6. 'le' → logprob: -6.412751197814941
    7. '```' → logprob: -6.662751197814941
    8. ' l' → logprob: -7.537751197814941
    9. ' cette' → logprob: -7.662751197814941
    10. ' chaque' → logprob: -7.787751197814941

Token 711: ' opération' (ID: 86023)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -0.1382032185792923
    2. ' instruction' → logprob: -2.2632031440734863
    3. 'i' → logprob: -4.763203144073486
    4. ' étape' → logprob: -5.138203144073486
    5. ' i' → logprob: -6.138203144073486
    6. '```' → logprob: -6.263203144073486
    7. 'instructions' → logprob: -7.263203144073486
    8. 'pas' → logprob: -7.388203144073486
    9. '[' → logprob: -7.638203144073486
    10. '_instruction' → logprob: -7.638203144073486

Token 712: '.
' (ID: 558)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.006509898230433464
    2. '           ' → logprob: -5.756509780883789
    3. '[' → logprob: -6.256509780883789
    4. '```' → logprob: -7.756509780883789
    5. '[position' → logprob: -8.131509780883789
    6. '       ' → logprob: -8.506509780883789
    7. 'pos' → logprob: -9.006509780883789
    8. '[p' → logprob: -9.006509780883789
    9. '[i' → logprob: -9.381509780883789
    10. '            
' → logprob: -9.756509780883789

Token 713: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8883006572723389
    2. '       ' → logprob: -1.1383006572723389
    3. '[pos' → logprob: -2.138300657272339
    4. '```' → logprob: -2.263300657272339
    5. ' pos' → logprob: -3.388300657272339
    6. '        
' → logprob: -5.513300895690918
    7. '           ' → logprob: -5.638300895690918
    8. '[' → logprob: -5.888300895690918
    9. '            
' → logprob: -7.763300895690918
    10. 'positions' → logprob: -7.888300895690918

Token 714: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.008620839565992355
    2. ' pos' → logprob: -4.758620738983154
    3. '           ' → logprob: -13.508621215820312
    4. '```' → logprob: -13.508621215820312
    5. '       ' → logprob: -13.758621215820312
    6. 'p' → logprob: -13.758621215820312
    7. '[pos' → logprob: -14.258621215820312
    8. '   ' → logprob: -14.508621215820312
    9. 'position' → logprob: -16.258621215820312
    10. '	pos' → logprob: -16.758621215820312

Token 715: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021962920436635613
    2. '[' → logprob: -8.500219345092773
    3. ' [' → logprob: -12.375219345092773
    4. '[I' → logprob: -12.375219345092773
    5. '```' → logprob: -12.750219345092773
    6. '\[' → logprob: -13.500219345092773
    7. '[p' → logprob: -13.500219345092773
    8. '[pos' → logprob: -13.500219345092773
    9. 's' → logprob: -16.375219345092773
    10. '   ' → logprob: -16.500219345092773

Token 716: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011198020540177822
    2. ']=' → logprob: -4.511198043823242
    3. '=' → logprob: -8.886198043823242
    4. ' ]' → logprob: -12.511198043823242
    5. '[' → logprob: -12.886198043823242
    6. ']==' → logprob: -13.261198043823242
    7. ']+=' → logprob: -13.886198043823242
    8. '[i' → logprob: -14.261198043823242
    9. ' =' → logprob: -14.261198043823242
    10. '][' → logprob: -14.261198043823242

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005555360112339258
    2. ' =' → logprob: -7.500555515289307
    3. '=p' → logprob: -13.500555992126465
    4. '=i' → logprob: -15.000555992126465
    5. '＝' → logprob: -15.250555992126465
    6. '.=' → logprob: -16.00055503845215
    7. ')=' → logprob: -16.12555503845215
    8. ']=' → logprob: -16.37555503845215
    9. '+=' → logprob: -16.87555503845215
    10. ',' → logprob: -16.87555503845215

Token 718: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. ' p' → logprob: -14.875
    3. '	p' → logprob: -20.5
    4. '<p' → logprob: -22.5
    5. '_p' → logprob: -23.125
    6. '(p' → logprob: -23.625
    7. '   ' → logprob: -24.0
    8. '$p' → logprob: -24.0
    9. '```' → logprob: -24.125
    10. ')p' → logprob: -24.75

Token 719: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006585932336747646
    2. '<|end|>' → logprob: -6.131586074829102
    3. '```' → logprob: -6.506586074829102
    4. ' hashes' → logprob: -6.756586074829102
    5. '       ' → logprob: -7.631586074829102
    6. '   ' → logprob: -7.881586074829102
    7. '            
' → logprob: -8.131586074829102
    8. 'hash' → logprob: -8.756586074829102
    9. ' and' → logprob: -9.506586074829102
    10. ',' → logprob: -9.631586074829102

Token 720: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8622560501098633
    2. ' hashes' → logprob: -1.3622560501098633
    3. '           ' → logprob: -1.7372560501098633
    4. '   ' → logprob: -2.8622560501098633
    5. '#' → logprob: -3.7372560501098633
    6. '       ' → logprob: -4.737256050109863
    7. 'hash' → logprob: -4.737256050109863
    8. '            
' → logprob: -4.862256050109863
    9. '``' → logprob: -4.987256050109863
    10. '  
' → logprob: -5.362256050109863

Token 721: ' #' (ID: 1069)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -3.368984107510187e-05
    2. ' hashes' → logprob: -10.500033378601074
    3. '```' → logprob: -12.750033378601074
    4. '           ' → logprob: -12.875033378601074
    5. '_hash' → logprob: -14.750033378601074
    6. 'Hashes' → logprob: -16.25003433227539
    7. '#' (adapté à ' #') → logprob: -17.12503433227539
    8. '   ' → logprob: -17.37503433227539
    9. '	hash' → logprob: -17.37503433227539
    10. '``' → logprob: -17.87503433227539

Token 722: ' On' (ID: 2160)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -1.7432603272027336e-06
    2. ' hashes' → logprob: -13.500001907348633
    3. '_hash' → logprob: -16.000001907348633
    4. '```' → logprob: -16.625001907348633
    5. '   ' → logprob: -16.875001907348633
    6. 'Hashes' → logprob: -17.875001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '#' → logprob: -18.750001907348633
    9. '	hash' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.250001907348633

Token 723: ' mém' (ID: 136981)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0005041812546551228
    2. ' hashes' → logprob: -8.250504493713379
    3. 'ashes' → logprob: -9.125504493713379
    4. '_hash' → logprob: -9.750504493713379
    5. 's' → logprob: -10.000504493713379
    6. '[' → logprob: -12.750504493713379
    7. 'Hashes' → logprob: -12.875504493713379
    8. '=' → logprob: -12.875504493713379
    9. 'es' → logprob: -13.000504493713379
    10. '   ' → logprob: -13.000504493713379

Token 724: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00775402644649148
    2. 'oris' → logprob: -4.882753849029541
    3. '[' → logprob: -9.1327543258667
    4. 'oriz' → logprob: -11.7577543258667
    5. '_' → logprob: -12.3827543258667
    6. '=' → logprob: -12.5077543258667
    7. '#' → logprob: -12.6327543258667
    8. 'oir' → logprob: -12.8827543258667
    9. '_or' → logprob: -13.1327543258667
    10. 'ois' → logprob: -13.5077543258667

Token 725: 'ise' (ID: 1096)
  Prédit: 'izes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.8271294832229614
    2. 'ize' → logprob: -1.4521294832229614
    3. 'ises' → logprob: -1.7021294832229614
    4. 'or' → logprob: -3.202129364013672
    5. 'ise' → logprob: -3.702129364013672
    6. 'hash' → logprob: -3.702129364013672
    7. 'es' → logprob: -3.952129364013672
    8. 'is' → logprob: -4.827129364013672
    9. 'se' → logprob: -4.827129364013672
    10. 'ores' → logprob: -5.577129364013672

Token 726: ' la' (ID: 557)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.12542064487934113
    2. ' hashes' → logprob: -2.250420570373535
    3. 'h' → logprob: -4.625420570373535
    4. '(h' → logprob: -6.125420570373535
    5. ' h' → logprob: -7.625420570373535
    6. ' hash' → logprob: -11.250420570373535
    7. 'Hashes' → logprob: -11.750420570373535
    8. '_hash' → logprob: -12.250420570373535
    9. '```' → logprob: -12.375420570373535
    10. ' (' → logprob: -12.500420570373535

Token 727: ' valeur' (ID: 41664)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.00018208740220870823
    2. 'h' → logprob: -8.750182151794434
    3. ' hash' → logprob: -11.250182151794434
    4. 'current' → logprob: -12.875182151794434
    5. 'value' → logprob: -13.000182151794434
    6. ' hashes' → logprob: -13.125182151794434
    7. '```' → logprob: -14.500182151794434
    8. 'code' → logprob: -14.625182151794434
    9. ' h' → logprob: -14.875182151794434
    10. '_hash' → logprob: -15.125182151794434

Token 728: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03670718893408775
    2. 'des' → logprob: -4.161707401275635
    3. 'h' → logprob: -4.286707401275635
    4. 'hash' → logprob: -6.411707401275635
    5. 's' → logprob: -6.786707401275635
    6. '```' → logprob: -6.786707401275635
    7. ' des' → logprob: -7.036707401275635
    8. '[h' → logprob: -7.536707401275635
    9. '[' → logprob: -7.911707401275635
    10. 'de' → logprob: -8.536706924438477

Token 729: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0013305948814377189
    2. 'h' → logprob: -6.626330375671387
    3. ' hashes' → logprob: -12.751330375671387
    4. '```' → logprob: -13.876330375671387
    5. '(h' → logprob: -15.626330375671387
    6. '_hash' → logprob: -15.876330375671387
    7. 'Hashes' → logprob: -16.251331329345703
    8. ' h' → logprob: -16.501331329345703
    9. '`' → logprob: -16.751331329345703
    10. '``' → logprob: -17.001331329345703

Token 730: ' après' (ID: 16460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31814825534820557
    2. '[i' → logprob: -1.3181482553482056
    3. 'es' → logprob: -5.443148136138916
    4. '[' → logprob: -8.443148612976074
    5. ' s' → logprob: -8.943148612976074
    6. '```' → logprob: -9.943148612976074
    7. '[s' → logprob: -10.443148612976074
    8. '   ' → logprob: -11.318148612976074
    9. ' [' → logprob: -11.443148612976074
    10. 'hash' → logprob: -11.818148612976074

Token 731: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3062351942062378
    2. 'h' → logprob: -1.5562351942062378
    3. 'c' → logprob: -3.5562353134155273
    4. '[i' → logprob: -4.806235313415527
    5. 'l' → logprob: -4.931235313415527
    6. ' i' → logprob: -5.431235313415527
    7. ' cette' → logprob: -7.306235313415527
    8. 'la' → logprob: -7.431235313415527
    9. '```' → logprob: -7.431235313415527
    10. ' h' → logprob: -7.556235313415527

Token 732: ' opération' (ID: 86023)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -0.5024756789207458
    2. 'i' → logprob: -1.0024757385253906
    3. 'op' → logprob: -4.252475738525391
    4. 'operation' → logprob: -5.127475738525391
    5. 'ét' → logprob: -6.252475738525391
    6. ' i' → logprob: -6.377475738525391
    7. ' instruction' → logprob: -6.502475738525391
    8. 'ligne' → logprob: -7.377475738525391
    9. 'instr' → logprob: -8.00247573852539
    10. '[i' → logprob: -8.00247573852539

Token 733: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002717499155551195
    2. '           ' → logprob: -6.5027174949646
    3. '=' → logprob: -7.8777174949646
    4. '[' → logprob: -8.377717971801758
    5. 's' → logprob: -8.377717971801758
    6. '```' → logprob: -8.752717971801758
    7. ' =' → logprob: -9.502717971801758
    8. '.' → logprob: -9.877717971801758
    9. '       ' → logprob: -11.002717971801758
    10. '   ' → logprob: -11.252717971801758

Token 734: '           ' (ID: 352)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.27904897928237915
    2. '```' → logprob: -1.6540489196777344
    3. ' hashes' → logprob: -3.0290489196777344
    4. '``' → logprob: -5.904048919677734
    5. '   ' → logprob: -7.404048919677734
    6. '`' → logprob: -9.154048919677734
    7. '[' → logprob: -9.404048919677734
    8. '_hash' → logprob: -9.404048919677734
    9. '       ' → logprob: -9.779048919677734
    10. '(h' → logprob: -10.029048919677734

Token 735: ' hashes' (ID: 131101)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -3.1782583391759545e-05
    2. ' hashes' → logprob: -10.500031471252441
    3. '   ' → logprob: -13.625031471252441
    4. 'h' → logprob: -13.625031471252441
    5. '```' → logprob: -14.000031471252441
    6. '_hash' → logprob: -15.125031471252441
    7. '           ' → logprob: -16.250032424926758
    8. 'Hashes' → logprob: -16.375032424926758
    9. '[i' → logprob: -16.500032424926758
    10. '(h' → logprob: -16.750032424926758

Token 736: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.125007629394531
    3. '```' → logprob: -13.750007629394531
    4. '[I' → logprob: -15.125007629394531
    5. '\[' → logprob: -15.250007629394531
    6. '=' → logprob: -15.500007629394531
    7. ' [' → logprob: -16.12500762939453
    8. '
' → logprob: -17.50000762939453
    9. '`' → logprob: -18.37500762939453
    10. ' =' → logprob: -18.50000762939453

Token 737: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021414589136838913
    2. '=' → logprob: -6.50214147567749
    3. ']=' → logprob: -7.50214147567749
    4. ' =' → logprob: -9.627140998840332
    5. ' ]' → logprob: -11.252140998840332
    6. '[i' → logprob: -12.002140998840332
    7. '[' → logprob: -13.627140998840332
    8. ')' → logprob: -15.752140998840332
    9. ']=(' → logprob: -15.877140998840332
    10. ']==' → logprob: -16.62714195251465

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002548316027969122
    2. ' =' → logprob: -6.0025482177734375
    3. ']' → logprob: -10.377548217773438
    4. '[i' → logprob: -10.877548217773438
    5. '[' → logprob: -11.627548217773438
    6. ']=' → logprob: -11.627548217773438
    7. '=i' → logprob: -13.002548217773438
    8. '=[' → logprob: -14.377548217773438
    9. ')' → logprob: -14.627548217773438
    10. '＝' → logprob: -15.377548217773438

Token 739: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00014036978245712817
    2. ' h' → logprob: -8.875140190124512
    3. '(h' → logprob: -14.625140190124512
    4. ' (' → logprob: -18.250141143798828
    5. '	h' → logprob: -18.875141143798828
    6. '(' → logprob: -19.500141143798828
    7. '```' → logprob: -19.750141143798828
    8. '_h' → logprob: -20.500141143798828
    9. ' ' → logprob: -21.125141143798828
    10. '<h' → logprob: -21.250141143798828

Token 740: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5668330788612366
    2. '           ' → logprob: -1.5668330192565918
    3. '<|end|>' → logprob: -2.441833019256592
    4. '       ' → logprob: -2.566833019256592
    5. '\' → logprob: -4.191833019256592
    6. '\n' → logprob: -4.441833019256592
    7. ' 
' → logprob: -4.816833019256592
    8. '  
' → logprob: -4.941833019256592
    9. '   ' → logprob: -5.316833019256592
    10. '            
' → logprob: -6.066833019256592

Token 741: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5528221726417542
    2. '   ' → logprob: -1.6778221130371094
    3. '```' → logprob: -1.8028221130371094
    4. '       ' → logprob: -3.6778221130371094
    5. '<|end|>' → logprob: -3.9278221130371094
    6. '           ' → logprob: -4.302822113037109
    7. '    
' → logprob: -5.052822113037109
    8. 'if' → logprob: -6.177822113037109
    9. ' if' → logprob: -6.677822113037109
    10. '            
' → logprob: -7.302822113037109

Token 742: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49925363063812256
    2. 'for' → logprob: -1.6242536306381226
    3. 'seen' → logprob: -3.624253749847412
    4. 'mp' → logprob: -3.749253749847412
    5. 'counts' → logprob: -3.874253749847412
    6. 'freq' → logprob: -4.249253749847412
    7. 'indices' → logprob: -4.374253749847412
    8. 'dp' → logprob: -4.499253749847412
    9. 'hash' → logprob: -4.499253749847412
    10. 'pos' → logprob: -4.749253749847412

Token 743: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.274766206741333
    2. 'count' → logprob: -2.274766206741333
    3. 'freq' → logprob: -2.399766206741333
    4. 'mp' → logprob: -2.774766206741333
    5. 'counts' → logprob: -2.774766206741333
    6. 'pos' → logprob: -2.899766206741333
    7. 'seen' → logprob: -2.899766206741333
    8. 'hash' → logprob: -3.274766206741333
    9. 'for' → logprob: -3.274766206741333
    10. 'memo' → logprob: -3.524766206741333

Token 744: ' construit' (ID: 119882)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5035982728004456
    2. 'for' → logprob: -1.3785982131958008
    3. '   ' → logprob: -3.003598213195801
    4. ' for' → logprob: -3.503598213195801
    5. 'from' → logprob: -3.628598213195801
    6. ' defaultdict' → logprob: -4.878598213195801
    7. '#' → logprob: -5.003598213195801
    8. 'default' → logprob: -5.128598213195801
    9. '=' → logprob: -5.628598213195801
    10. 'continue' → logprob: -6.503598213195801

Token 745: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2974559962749481
    2. ' un' → logprob: -2.2974560260772705
    3. 'une' → logprob: -2.6724560260772705
    4. 'freq' → logprob: -4.297455787658691
    5. '       ' → logprob: -4.422455787658691
    6. '   ' → logprob: -4.422455787658691
    7. 'd' → logprob: -4.922455787658691
    8. 'count' → logprob: -5.172455787658691
    9. 'a' → logprob: -5.297455787658691
    10. '#' → logprob: -5.297455787658691

Token 746: ' liste' (ID: 31719)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0305128525942564
    2. 'd' → logprob: -3.655512809753418
    3. 'mapping' → logprob: -6.405512809753418
    4. 'hash' → logprob: -7.280512809753418
    5. 'dictionary' → logprob: -7.280512809753418
    6. 'counter' → logprob: -8.155512809753418
    7. 'dict' → logprob: -8.155512809753418
    8. 'dic' → logprob: -9.155512809753418
    9. 'map' → logprob: -9.280512809753418
    10. 'position' → logprob: -9.530512809753418

Token 747: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9926441311836243
    2. ' de' → logprob: -1.4926440715789795
    3. ' des' → logprob: -2.4926440715789795
    4. 'tmp' → logprob: -2.8676440715789795
    5. ' d' → logprob: -3.3676440715789795
    6. 'd' → logprob: -3.6176440715789795
    7. 'des' → logprob: -3.6176440715789795
    8. '=' → logprob: -3.7426440715789795
    9. 'temp' → logprob: -3.9926440715789795
    10. '[' → logprob: -3.9926440715789795

Token 748: ' puiss' (ID: 102546)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.0916924476623535
    2. 'pairs' → logprob: -1.7166924476623535
    3. 'positions' → logprob: -1.8416924476623535
    4. 'events' → logprob: -1.9666924476623535
    5. 'default' → logprob: -2.9666924476623535
    6. 'd' → logprob: -3.4666924476623535
    7. 'indexes' → logprob: -3.8416924476623535
    8. 'hash' → logprob: -4.7166924476623535
    9. 'occur' → logprob: -4.9666924476623535
    10. 'occ' → logprob: -5.2166924476623535

Token 749: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.48672744631767273
    2. 'ences' → logprob: -1.1117274761199951
    3. 'en' → logprob: -4.111727237701416
    4. 'e' → logprob: -4.236727237701416
    5. 'ent' → logprob: -5.236727237701416
    6. 'es' → logprob: -5.736727237701416
    7. 'positions' → logprob: -6.236727237701416
    8. '```' → logprob: -6.236727237701416
    9. 'ies' → logprob: -6.486727237701416
    10. 'entes' → logprob: -6.736727237701416

Token 750: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1990233659744263
    2. '[' → logprob: -1.6990233659744263
    3. '       ' → logprob: -1.6990233659744263
    4. 'powers' → logprob: -2.5740232467651367
    5. 'y' → logprob: -2.8240232467651367
    6. 'pow' → logprob: -3.5740232467651367
    7. 'tmp' → logprob: -3.6990232467651367
    8. '=' → logprob: -4.324023246765137
    9. 'temp' → logprob: -4.574023246765137
    10. '=[' → logprob: -4.574023246765137

Token 751: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002927422523498535
    2. '2' → logprob: -6.252927303314209
    3. 'y' → logprob: -7.752927303314209
    4. '10' → logprob: -8.877927780151367
    5. ' x' → logprob: -9.002927780151367
    6. 'de' → logprob: -9.127927780151367
    7. 'r' → logprob: -9.377927780151367
    8. '```' → logprob: -10.002927780151367
    9. 'two' → logprob: -11.002927780151367
    10. ' ' → logprob: -11.627927780151367

Token 752: ' modulo' (ID: 112372)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.2384432554244995
    2. '=' → logprob: -1.3634432554244995
    3. ' =' → logprob: -1.6134432554244995
    4. '[' → logprob: -2.113443374633789
    5. ',' → logprob: -2.613443374633789
    6. '.append' → logprob: -4.613443374633789
    7. ']' → logprob: -4.988443374633789
    8. ' =[' → logprob: -5.238443374633789
    9. 'for' → logprob: -5.363443374633789
    10. '**' → logprob: -5.613443374633789

Token 753: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.15290044248104095
    2. 'x' → logprob: -2.027900457382202
    3. 'n' → logprob: -6.027900218963623
    4. ' m' → logprob: -6.027900218963623
    5. '[m' → logprob: -6.027900218963623
    6. '(m' → logprob: -7.402900218963623
    7. '```' → logprob: -7.902900218963623
    8. ' x' → logprob: -8.027900695800781
    9. '[n' → logprob: -8.277900695800781
    10. '(n' → logprob: -8.277900695800781

Token 754: ',' (ID: 11)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.954308807849884
    2. '[' → logprob: -1.5793087482452393
    3. 'power' → logprob: -1.7043087482452393
    4. 'powers' → logprob: -2.2043087482452393
    5. 'y' → logprob: -2.7043087482452393
    6. ',' → logprob: -4.454308986663818
    7. '   ' → logprob: -4.579308986663818
    8. ' =' → logprob: -5.079308986663818
    9. '       ' → logprob: -5.329308986663818
    10. '=[' → logprob: -5.829308986663818

Token 755: ' en' (ID: 469)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.355959415435791
    2. 'powers' → logprob: -1.855959415435791
    3. 'pw' → logprob: -2.230959415435791
    4. 'px' → logprob: -3.855959415435791
    5. 'power' → logprob: -4.605959415435791
    6. 'p' → logprob: -6.605959415435791
    7. 'pot' → logprob: -6.855959415435791
    8. 'vals' → logprob: -7.980959415435791
    9. 'xp' → logprob: -8.230958938598633
    10. 'w' → logprob: -8.480958938598633

Token 756: ' part' (ID: 997)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4212246239185333
    2. 'acc' → logprob: -2.046224594116211
    3. 'multip' → logprob: -2.796224594116211
    4. 'range' → logprob: -3.046224594116211
    5. 'comm' → logprob: -3.671224594116211
    6. 'c' → logprob: -3.796224594116211
    7. 're' → logprob: -4.296224594116211
    8. 'cro' → logprob: -5.296224594116211
    9. 'desc' → logprob: -5.796224594116211
    10. 'reverse' → logprob: -5.921224594116211

Token 757: 'ant' (ID: 493)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09828435629606247
    2. '       ' → logprob: -4.3482842445373535
    3. 'for' → logprob: -4.9732842445373535
    4. '[' → logprob: -4.9732842445373535
    5. 't' → logprob: -5.0982842445373535
    6. 'ition' → logprob: -5.2232842445373535
    7. '   ' → logprob: -5.2232842445373535
    8. 'enumer' → logprob: -5.3482842445373535
    9. 'it' → logprob: -5.5982842445373535
    10. 'out' → logprob: -6.0982842445373535

Token 758: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33068525791168213
    2. ' de' → logprob: -1.9556852579116821
    3. '       ' → logprob: -3.2056851387023926
    4. 'from' → logprob: -3.2056851387023926
    5. '=' → logprob: -3.5806851387023926
    6. '   ' → logprob: -4.455685138702393
    7. 'd' → logprob: -4.580685138702393
    8. '[' → logprob: -6.080685138702393
    9. '```' → logprob: -6.080685138702393
    10. ' d' → logprob: -6.580685138702393

Token 759: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6998660564422607
    2. 'p' → logprob: -1.0748660564422607
    3. 'y' → logprob: -3.1998660564422607
    4. '[' → logprob: -3.4498660564422607
    5. '1' → logprob: -4.07486629486084
    6. 'x' → logprob: -4.32486629486084
    7. '[n' → logprob: -4.32486629486084
    8. '[p' → logprob: -4.32486629486084
    9. 'pow' → logprob: -4.69986629486084
    10. 'n' → logprob: -4.94986629486084

Token 760: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5754801034927368
    2. '0' → logprob: -1.0754801034927368
    3. '-p' → logprob: -3.9504799842834473
    4. 'abs' → logprob: -4.075479984283447
    5. '-' → logprob: -4.200479984283447
    6. 'pos' → logprob: -4.200479984283447
    7. 'n' → logprob: -4.700479984283447
    8. '-n' → logprob: -5.700479984283447
    9. 'min' → logprob: -5.700479984283447
    10. 'x' → logprob: -6.450479984283447

Token 761: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9605671763420105
    2. 'powers' → logprob: -1.3355672359466553
    3. '       ' → logprob: -2.4605672359466553
    4. '[' → logprob: -2.4605672359466553
    5. 'power' → logprob: -2.9605672359466553
    6. 'pow' → logprob: -3.0855672359466553
    7. ' =' → logprob: -3.4605672359466553
    8. '=' → logprob: -4.460566997528076
    9. '```' → logprob: -4.460566997528076
    10. '   ' → logprob: -4.960566997528076

Token 762: '’au' (ID: 61371)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.08112356811761856
    2. '’à' → logprob: -3.5811235904693604
    3. ' à' → logprob: -3.9561235904693604
    4. ''au' → logprob: -4.456123352050781
    5. 'à' → logprob: -5.206123352050781
    6. 'e' → logprob: -5.456123352050781
    7. 'au' → logprob: -5.956123352050781
    8. '[' → logprob: -6.956123352050781
    9. '’au' → logprob: -7.331123352050781
    10. '`' → logprob: -7.456123352050781

Token 763: ' maximum' (ID: 10562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08052806556224823
    2. 'p' → logprob: -3.2055280208587646
    3. 'x' → logprob: -4.080528259277344
    4. 'm' → logprob: -5.080528259277344
    5. 'pow' → logprob: -5.080528259277344
    6. 'y' → logprob: -5.705528259277344
    7. 'i' → logprob: -6.205528259277344
    8. '...' → logprob: -7.830528259277344
    9. 'pos' → logprob: -8.080528259277344
    10. '(n' → logprob: -8.205528259277344

Token 764: ' trouvé' (ID: 60081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.07552969455719
    2. 'p' → logprob: -1.82552969455719
    3. 'pos' → logprob: -2.0755295753479004
    4. '_pos' → logprob: -2.3255295753479004
    5. '_p' → logprob: -2.9505295753479004
    6. '   ' → logprob: -3.0755295753479004
    7. '(p' → logprob: -3.2005295753479004
    8. ' =' → logprob: -3.8255295753479004
    9. '```' → logprob: -3.9505295753479004
    10. 'de' → logprob: -4.0755295753479

Token 765: ' dans' (ID: 2671)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7917882204055786
    2. '=' → logprob: -1.6667882204055786
    3. 'p' → logprob: -1.7917882204055786
    4. 'de' → logprob: -3.041788101196289
    5. '   ' → logprob: -3.666788101196289
    6. ' =' → logprob: -4.166788101196289
    7. '       ' → logprob: -4.291788101196289
    8. '_pos' → logprob: -4.541788101196289
    9. '(p' → logprob: -4.791788101196289
    10. '(pos' → logprob: -5.166788101196289

Token 766: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00248849974013865
    2. ' pos' → logprob: -6.377488613128662
    3. '[pos' → logprob: -7.752488613128662
    4. 'abs' → logprob: -9.252488136291504
    5. 'p' → logprob: -9.877488136291504
    6. '[' → logprob: -9.877488136291504
    7. 'range' → logprob: -10.002488136291504
    8. 'positions' → logprob: -10.627488136291504
    9. 'la' → logprob: -11.002488136291504
    10. 'position' → logprob: -11.627488136291504

Token 767: '.' (ID: 13)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1352342367172241
    2. '=' → logprob: -1.8852342367172241
    3. '[max' → logprob: -2.1352343559265137
    4. 'pos' → logprob: -2.2602343559265137
    5. '       ' → logprob: -2.5102343559265137
    6. ' =' → logprob: -3.0102343559265137
    7. '(max' → logprob: -3.8852343559265137
    8. 'range' → logprob: -3.8852343559265137
    9. '[pos' → logprob: -4.010234355926514
    10. '_max' → logprob: -4.260234355926514

Token 768: ' 
' (ID: 793)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.039746519178152084
    2. 'pow' → logprob: -3.7897465229034424
    3. 'mx' → logprob: -4.914746284484863
    4. 'power' → logprob: -5.289746284484863
    5. '   ' → logprob: -7.164746284484863
    6. 'for' → logprob: -7.164746284484863
    7. 'powers' → logprob: -7.789746284484863
    8. 'limit' → logprob: -8.039746284484863
    9. 'pw' → logprob: -8.164746284484863
    10. 'ma' → logprob: -8.289746284484863

Token 769: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07108302414417267
    2. ' max' → logprob: -3.5710830688476562
    3. '       ' → logprob: -4.446083068847656
    4. 'pow' → logprob: -4.696083068847656
    5. 'power' → logprob: -5.196083068847656
    6. 'length' → logprob: -5.946083068847656
    7. 'mx' → logprob: -6.196083068847656
    8. 'powers' → logprob: -6.196083068847656
    9. '   ' → logprob: -6.821083068847656
    10. 'limit' → logprob: -7.196083068847656

Token 770: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12881891429424286
    2. 'pow' → logprob: -2.878818988800049
    3. ' max' → logprob: -3.753818988800049
    4. 'power' → logprob: -4.253818988800049
    5. 'for' → logprob: -5.128818988800049
    6. 'powers' → logprob: -5.253818988800049
    7. 'mx' → logprob: -5.753818988800049
    8. '[max' → logprob: -6.253818988800049
    9. '   ' → logprob: -6.503818988800049
    10. 'length' → logprob: -7.003818988800049

Token 771: ' Ceci' (ID: 144699)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42861098051071167
    2. 'pow' → logprob: -1.3036110401153564
    3. 'power' → logprob: -3.3036110401153564
    4. 'powers' → logprob: -3.8036110401153564
    5. 'pw' → logprob: -4.678610801696777
    6. 'mx' → logprob: -6.303610801696777
    7. 'px' → logprob: -6.553610801696777
    8. 'for' → logprob: -6.803610801696777
    9. 'p' → logprob: -7.553610801696777
    10. 'base' → logprob: -7.928610801696777

Token 772: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9144962430000305
    2. '=' → logprob: -1.0394961833953857
    3. 'max' → logprob: -1.7894961833953857
    4. '_max' → logprob: -4.164496421813965
    5. '#' → logprob: -4.539496421813965
    6. '```' → logprob: -4.664496421813965
    7. '=max' → logprob: -5.414496421813965
    8. 'est' → logprob: -5.414496421813965
    9. 'continue' → logprob: -6.039496421813965
    10. ' max' → logprob: -6.039496421813965

Token 773: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5515919327735901
    2. 'd' → logprob: -1.6765918731689453
    3. ' de' → logprob: -2.0515918731689453
    4. ' d' → logprob: -2.9265918731689453
    5. '       ' → logprob: -3.1765918731689453
    6. '   ' → logprob: -4.676591873168945
    7. '    ' → logprob: -7.301591873168945
    8. '=' → logprob: -7.301591873168945
    9. 'à' → logprob: -7.676591873168945
    10. '```' → logprob: -8.176591873168945

Token 774: '’acc' (ID: 38467)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7361855506896973
    2. '   ' → logprob: -2.2361855506896973
    3. 'for' → logprob: -2.2361855506896973
    4. '[max' → logprob: -2.2361855506896973
    5. 'range' → logprob: -2.6111855506896973
    6. 'max' → logprob: -2.8611855506896973
    7. ' range' → logprob: -2.9861855506896973
    8. '#' → logprob: -3.2361855506896973
    9. ''assurer' → logprob: -3.6111855506896973
    10. '=' → logprob: -3.6111855506896973

Token 775: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.043983813375234604
    2. 'om' → logprob: -3.7939836978912354
    3. 'él' → logprob: -4.0439839363098145
    4. 'é' → logprob: -7.1689839363098145
    5. 'omp' → logprob: -7.4189839363098145
    6. 'order' → logprob: -7.9189839363098145
    7. 'è' → logprob: -8.418983459472656
    8. 'e' → logprob: -8.793983459472656
    9. 'um' → logprob: -8.918983459472656
    10. 'érer' → logprob: -9.168983459472656

Token 776: ' rapidement' (ID: 43157)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -1.0857062339782715
    2. 'à' → logprob: -1.4607062339782715
    3. 'au' → logprob: -2.0857062339782715
    4. ' rapidement' → logprob: -2.5857062339782715
    5. ' à' → logprob: -2.9607062339782715
    6. ' aux' → logprob: -2.9607062339782715
    7. ' au' → logprob: -3.7107062339782715
    8. 'plus' → logprob: -4.0857062339782715
    9. ' facilement' → logprob: -4.3357062339782715
    10. '[' → logprob: -4.7107062339782715

Token 777: ' à' (ID: 1221)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.6836465001106262
    2. ' aux' → logprob: -1.5586464405059814
    3. ' à' → logprob: -1.9336464405059814
    4. 'à' → logprob: -2.5586464405059814
    5. 'au' → logprob: -3.5586464405059814
    6. 'y' → logprob: -4.3086466789245605
    7. ' au' → logprob: -4.9336466789245605
    8. '   ' → logprob: -5.1836466789245605
    9. ' y' → logprob: -6.4336466789245605
    10. '       ' → logprob: -6.6836466789245605

Token 778: ' x' (ID: 1215)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8743463158607483
    2. 'y' → logprob: -0.9993463158607483
    3. 'abs' → logprob: -1.9993462562561035
    4. 'pos' → logprob: -3.2493462562561035
    5. 'x' → logprob: -3.7493462562561035
    6. '10' → logprob: -5.7493462562561035
    7. 'p' → logprob: -6.2493462562561035
    8. '1' → logprob: -6.3743462562561035
    9. 'max' → logprob: -6.3743462562561035
    10. ' y' → logprob: -6.4993462562561035

Token 779: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3673507571220398
    2. '[p' → logprob: -1.8673508167266846
    3. '[pos' → logprob: -2.4923508167266846
    4. ' **' → logprob: -3.6173508167266846
    5. '[' → logprob: -3.8673508167266846
    6. 'abs' → logprob: -4.4923505783081055
    7. 'pow' → logprob: -5.3673505783081055
    8. '
' → logprob: -6.8673505783081055
    9. '^{' → logprob: -7.1173505783081055
    10. '   ' → logprob: -7.6173505783081055

Token 780: 'k' (ID: 74)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3020963668823242
    2. 'pos' → logprob: -1.5520963668823242
    3. 'p' → logprob: -3.677096366882324
    4. 'max' → logprob: -4.177096366882324
    5. '(abs' → logprob: -5.177096366882324
    6. '(max' → logprob: -6.802096366882324
    7. '(pos' → logprob: -7.552096366882324
    8. ' abs' → logprob: -8.177096366882324
    9. '(p' → logprob: -8.552096366882324
    10. '0' → logprob: -8.552096366882324

Token 781: ' %' (ID: 1851)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.4274156987667084
    2. '[p' → logprob: -2.177415609359741
    3. '[' → logprob: -2.552415609359741
    4. '[max' → logprob: -3.677415609359741
    5. '=' → logprob: -3.802415609359741
    6. ' for' → logprob: -3.927415609359741
    7. 'for' → logprob: -4.05241584777832
    8. ' =' → logprob: -4.67741584777832
    9. '```' → logprob: -4.80241584777832
    10. '[k' → logprob: -4.92741584777832

Token 782: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00690173264592886
    2. ' m' → logprob: -5.006901741027832
    3. 'k' → logprob: -9.381901741027832
    4. 'x' → logprob: -10.631901741027832
    5. '(m' → logprob: -11.006901741027832
    6. '   ' → logprob: -11.006901741027832
    7. ' ' → logprob: -11.381901741027832
    8. '```' → logprob: -11.381901741027832
    9. 'mod' → logprob: -13.131901741027832
    10. ' k' → logprob: -13.256901741027832

Token 783: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4868580996990204
    2. ' for' → logprob: -1.7368581295013428
    3. '[' → logprob: -3.4868581295013428
    4. '[pos' → logprob: -3.6118581295013428
    5. ',' → logprob: -3.7368581295013428
    6. ' =' → logprob: -3.8618581295013428
    7. '[max' → logprob: -3.8618581295013428
    8. '
' → logprob: -3.9868581295013428
    9. '```' → logprob: -4.111857891082764
    10. '=' → logprob: -4.236857891082764

Token 784: ' divers' (ID: 10474)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04981006309390068
    2. 'abs' → logprob: -3.1748101711273193
    3. ' k' → logprob: -5.92480993270874
    4. 'range' → logprob: -6.54980993270874
    5. 'p' → logprob: -7.42480993270874
    6. ' abs' → logprob: -7.67480993270874
    7. 'pos' → logprob: -8.049810409545898
    8. 'une' → logprob: -8.174810409545898
    9. 'max' → logprob: -8.299810409545898
    10. '-' → logprob: -9.049810409545898

Token 785: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3542384207248688
    2. ' k' → logprob: -1.4792383909225464
    3. ' p' → logprob: -3.354238510131836
    4. 'p' → logprob: -3.729238510131836
    5. ' range' → logprob: -5.479238510131836
    6. 'range' → logprob: -6.354238510131836
    7. 'pos' → logprob: -6.354238510131836
    8. 'i' → logprob: -6.979238510131836
    9. ' i' → logprob: -7.229238510131836
    10. 'positions' → logprob: -7.979238510131836

Token 786: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5202952027320862
    2. 'max' → logprob: -1.2702951431274414
    3. '=' → logprob: -2.5202951431274414
    4. '_max' → logprob: -3.8952951431274414
    5. '=max' → logprob: -5.145295143127441
    6. '[max' → logprob: -5.270295143127441
    7. '
' → logprob: -5.395295143127441
    8. 'for' → logprob: -6.645295143127441
    9. '(max' → logprob: -7.020295143127441
    10. ' max' → logprob: -7.020295143127441

Token 787: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06247410550713539
    2. ' max' → logprob: -2.937474012374878
    3. '   ' → logprob: -5.937474250793457
    4. '```' → logprob: -6.687474250793457
    5. 'for' → logprob: -7.312474250793457
    6. 'pow' → logprob: -8.187474250793457
    7. 'power' → logprob: -8.312474250793457
    8. '       ' → logprob: -8.312474250793457
    9. '(max' → logprob: -8.312474250793457
    10. 'min' → logprob: -8.437474250793457

Token 788: ' pow' (ID: 9779)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0488419234752655
    2. 'pow' (adapté à ' pow') → logprob: -4.048841953277588
    3. 'power' → logprob: -4.423841953277588
    4. 'powers' → logprob: -4.923841953277588
    5. '       ' → logprob: -5.423841953277588
    6. ' max' → logprob: -5.923841953277588
    7. 'mx' → logprob: -6.798841953277588
    8. '   ' → logprob: -8.17384147644043
    9. 'length' → logprob: -8.29884147644043
    10. 'p' → logprob: -8.67384147644043

Token 789: '_x' (ID: 7054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10634080320596695
    2. '_x' → logprob: -2.6063408851623535
    3. 'er' → logprob: -4.4813408851623535
    4. '_list' → logprob: -5.7313408851623535
    5. 'ers' → logprob: -5.9813408851623535
    6. ' =' → logprob: -6.3563408851623535
    7. '_' → logprob: -6.7313408851623535
    8. '=' → logprob: -6.8563408851623535
    9. '(x' → logprob: -6.8563408851623535
    10. 'x' → logprob: -7.1063408851623535

Token 790: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1801970899105072
    2. ' =' → logprob: -1.8051971197128296
    3. 's' → logprob: -7.805197238922119
    4. '=[' → logprob: -10.805196762084961
    5. '[' → logprob: -11.555196762084961
    6. '   ' → logprob: -13.305196762084961
    7. 'pow' → logprob: -13.430196762084961
    8. '_=' → logprob: -13.555196762084961
    9. 'x' → logprob: -13.680196762084961
    10. '_' → logprob: -13.680196762084961

Token 791: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017839208885561675
    2. ' [' → logprob: -8.750178337097168
    3. '{' → logprob: -10.875178337097168
    4. '[p' → logprob: -14.875178337097168
    5. '[y' → logprob: -15.125178337097168
    6. '1' → logprob: -15.500178337097168
    7. '[x' → logprob: -17.875179290771484
    8. '[pos' → logprob: -18.750179290771484
    9. ' ' → logprob: -18.875179290771484
    10. ' {' → logprob: -19.375179290771484

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.625
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -19.125
    5. 'pow' → logprob: -19.125
    6. '   ' → logprob: -19.25
    7. '(' → logprob: -19.625
    8. ']' → logprob: -19.75
    9. 'None' → logprob: -20.0
    10. '۱' → logprob: -20.5

Token 793: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07430760562419891
    2. ']
' → logprob: -2.699307680130005
    3. ',' → logprob: -6.199307441711426
    4. ']*(' → logprob: -7.199307441711426
    5. ']+' → logprob: -7.574307441711426
    6. ']
' → logprob: -7.699307441711426
    7. ' *' → logprob: -8.199307441711426
    8. 'for' → logprob: -9.324307441711426
    9. ' for' → logprob: -9.699307441711426
    10. '*(' → logprob: -9.949307441711426

Token 794: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2559288740158081
    2. '*' → logprob: -2.6309289932250977
    3. '*(' → logprob: -3.2559289932250977
    4. ' for' → logprob: -3.2559289932250977
    5. ']' → logprob: -3.7559289932250977
    6. '
' → logprob: -4.130928993225098
    7. ']
' → logprob: -4.755928993225098
    8. '       ' → logprob: -5.130928993225098
    9. 'while' → logprob: -5.130928993225098
    10. ' *' → logprob: -5.380928993225098

Token 795: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6915639042854309
    2. '*' → logprob: -1.9415638446807861
    3. 'for' → logprob: -2.066563844680786
    4. '*(' → logprob: -2.066563844680786
    5. ']*(' → logprob: -3.441563844680786
    6. ']
' → logprob: -3.566563844680786
    7. ']+' → logprob: -4.816564083099365
    8. '
' → logprob: -5.066564083099365
    9. '+' → logprob: -5.066564083099365
    10. ' *' → logprob: -5.191564083099365

Token 796: ' La' (ID: 3038)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2488580346107483
    2. 'for' → logprob: -1.9988579750061035
    3. 'pow' → logprob: -2.9988579750061035
    4. '0' → logprob: -3.6238579750061035
    5. ']' → logprob: -5.3738579750061035
    6. ' for' → logprob: -6.2488579750061035
    7. '```' → logprob: -8.123858451843262
    8. 'x' → logprob: -8.373858451843262
    9. '   ' → logprob: -8.623858451843262
    10. ' ' → logprob: -8.623858451843262

Token 797: ' première' (ID: 23423)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5005927085876465
    2. '[' → logprob: -1.2505927085876465
    3. ']' → logprob: -3.0005927085876465
    4. 'for' → logprob: -3.8755927085876465
    5. ' [' → logprob: -4.8755927085876465
    6. '#' → logprob: -5.1255927085876465
    7. '1' → logprob: -5.6255927085876465
    8. '=' → logprob: -6.1255927085876465
    9. 'x' → logprob: -6.2505927085876465
    10. '*' → logprob: -6.2505927085876465

Token 798: ' puissance' (ID: 63494)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31729525327682495
    2. '1' → logprob: -2.3172953128814697
    3. 'pow' → logprob: -2.8172953128814697
    4. ' puissance' → logprob: -3.5672953128814697
    5. '(' → logprob: -4.192295074462891
    6. ' ]' → logprob: -4.317295074462891
    7. '[' → logprob: -4.692295074462891
    8. ' ' → logprob: -4.942295074462891
    9. ')' → logprob: -5.192295074462891
    10. '**' → logprob: -5.317295074462891

Token 799: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2666779160499573
    2. ',' → logprob: -1.6416778564453125
    3. '<|end|>' → logprob: -4.6416778564453125
    4. '[' → logprob: -4.8916778564453125
    5. 'for' → logprob: -5.0166778564453125
    6. 'x' → logprob: -5.6416778564453125
    7. '.append' → logprob: -6.1416778564453125
    8. ']+' → logprob: -6.1416778564453125
    9. ',
' → logprob: -6.3916778564453125
    10. ' for' → logprob: -6.3916778564453125

Token 800: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010620702058076859
    2. ' ' → logprob: -5.635620594024658
    3. ']' → logprob: -6.260620594024658
    4. 'for' → logprob: -6.385620594024658
    5. 'pow' → logprob: -7.385620594024658
    6. '#' → logprob: -7.510620594024658
    7. '<|end|>' → logprob: -7.885620594024658
    8. '0' → logprob: -8.010621070861816
    9. '...' → logprob: -8.260621070861816
    10. '```' → logprob: -8.510621070861816

Token 801: '^' (ID: 61)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1281859427690506
    2. '**' → logprob: -2.378185987472534
    3. ' **' → logprob: -4.378185749053955
    4. '%' → logprob: -4.753185749053955
    5. ',' → logprob: -6.128185749053955
    6. ' %' → logprob: -6.503185749053955
    7. ' ]' → logprob: -6.753185749053955
    8. ']
' → logprob: -7.878185749053955
    9. '```' → logprob: -8.628186225891113
    10. '<|end|>' → logprob: -8.878186225891113

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '[' → logprob: -13.625004768371582
    4. '=' → logprob: -17.8750057220459
    5. '```' → logprob: -17.8750057220459
    6. 'k' → logprob: -18.2500057220459
    7. '(' → logprob: -18.6250057220459
    8. '۰' → logprob: -18.7500057220459
    9. '{' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.2500057220459

Token 803: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007622484117746353
    2. ',' → logprob: -5.382622718811035
    3. ']
' → logprob: -6.007622718811035
    4. ' ]' → logprob: -7.882622718811035
    5. ']+' → logprob: -9.507622718811035
    6. ',
' → logprob: -10.507622718811035
    7. ']

' → logprob: -11.132622718811035
    8. ' for' → logprob: -11.882622718811035
    9. ']
' → logprob: -12.007622718811035
    10. ' ,' → logprob: -12.382622718811035

Token 804: ' vaut' (ID: 83004)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02097601257264614
    2. ' ]' → logprob: -4.7709760665893555
    3. ' ' → logprob: -5.2709760665893555
    4. '0' → logprob: -5.3959760665893555
    5. ']+' → logprob: -7.2709760665893555
    6. '1' → logprob: -7.2709760665893555
    7. ',' → logprob: -7.6459760665893555
    8. ' for' → logprob: -8.395976066589355
    9. '=' → logprob: -8.645976066589355
    10. '```' → logprob: -10.020976066589355

Token 805: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '=' → logprob: -17.125179290771484
    4. '[' → logprob: -19.375179290771484
    5. '   ' → logprob: -19.500179290771484
    6. '```' → logprob: -19.500179290771484
    7. '  ' → logprob: -20.000179290771484
    8. '0' → logprob: -20.250179290771484
    9. '...' → logprob: -20.250179290771484
    10. ' =' → logprob: -20.500179290771484

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '```' → logprob: -18.375001907348633
    5. '0' → logprob: -19.125001907348633
    6. '=' → logprob: -19.250001907348633
    7. '[' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '...' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.250001907348633

Token 807: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3470032215118408
    2. '<|end|>' → logprob: -2.347003221511841
    3. '[' → logprob: -2.597003221511841
    4. ',' → logprob: -2.597003221511841
    5. '   ' → logprob: -4.472002983093262
    6. ',
' → logprob: -4.722002983093262
    7. 'for' → logprob: -5.097002983093262
    8. ' for' → logprob: -5.347002983093262
    9. '```' → logprob: -5.472002983093262
    10. '  
' → logprob: -6.472002983093262

Token 808: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1770031452178955
    2. '
' → logprob: -1.5520031452178955
    3. '[' → logprob: -1.6770031452178955
    4. '       ' → logprob: -2.0520031452178955
    5. ',
' → logprob: -2.3020031452178955
    6. '   ' → logprob: -4.052002906799316
    7. ' for' → logprob: -4.302002906799316
    8. '.append' → logprob: -5.177002906799316
    9. 'for' → logprob: -5.302002906799316
    10. 'x' → logprob: -5.927002906799316

Token 809: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07934797555208206
    2. ' for' → logprob: -3.079348087310791
    3. 'while' → logprob: -3.704348087310791
    4. 'pow' → logprob: -5.454348087310791
    5. ' while' → logprob: -7.204348087310791
    6. '       ' → logprob: -7.704348087310791
    7. '1' → logprob: -9.204347610473633
    8. 'max' → logprob: -11.454347610473633
    9. ' pow' → logprob: -11.454347610473633
    10. '```' → logprob: -11.579347610473633

Token 810: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46223917603492737
    2. 'j' → logprob: -1.962239146232605
    3. '_j' → logprob: -1.962239146232605
    4. 'i' → logprob: -3.2122392654418945
    5. '_i' → logprob: -3.8372392654418945
    6. 'k' → logprob: -4.3372392654418945
    7. '_k' → logprob: -4.4622392654418945
    8. '_power' → logprob: -6.4622392654418945
    9. '_pow' → logprob: -7.2122392654418945
    10. ' j' → logprob: -9.212239265441895

Token 811: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02330942079424858
    2. 'in' → logprob: -3.7733094692230225
    3. ' ' → logprob: -10.398309707641602
    4. ' _' → logprob: -10.648309707641602
    5. '_' → logprob: -12.148309707641602
    6. '  ' → logprob: -13.523309707641602
    7. ',' → logprob: -14.273309707641602
    8. '_in' → logprob: -14.648309707641602
    9. ' i' → logprob: -14.898309707641602
    10. 'i' → logprob: -15.148309707641602

Token 812: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008759809657931328
    2. ' range' → logprob: -4.75875997543335
    3. '_' → logprob: -8.883759498596191
    4. 'pos' → logprob: -12.383759498596191
    5. 'pow' → logprob: -13.133759498596191
    6. '_range' → logprob: -14.758759498596191
    7. '(range' → logprob: -17.258760452270508
    8. '	range' → logprob: -17.258760452270508
    9. 'rang' → logprob: -17.883760452270508
    10. 'list' → logprob: -18.633760452270508

Token 813: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.530162513256073
    2. '(abs' → logprob: -1.7801625728607178
    3. '(p' → logprob: -1.9051625728607178
    4. '(pos' → logprob: -3.4051625728607178
    5. 'abs' → logprob: -3.6551625728607178
    6. '(len' → logprob: -4.530162334442139
    7. 'pos' → logprob: -4.780162334442139
    8. '1' → logprob: -4.905162334442139
    9. 'p' → logprob: -6.030162334442139
    10. '(max' → logprob: -6.030162334442139

Token 814: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.9922361969947815
    2. 'pos' → logprob: -1.1172361373901367
    3. '_pos' → logprob: -1.3672361373901367
    4. '(p' → logprob: -3.8672361373901367
    5. '(abs' → logprob: -4.617236137390137
    6. '(' → logprob: -4.992236137390137
    7. 'abs' → logprob: -5.867236137390137
    8. '_p' → logprob: -6.492236137390137
    9. ' pos' → logprob: -6.492236137390137
    10. 'p' → logprob: -7.242236137390137

Token 815: ')):
' (ID: 22530)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.16529203951358795
    2. ')' → logprob: -2.4152920246124268
    3. '[p' → logprob: -3.7902920246124268
    4. '[:' → logprob: -4.415292263031006
    5. ')):
' → logprob: -5.165292263031006
    6. '[i' → logprob: -5.290292263031006
    7. '[pos' → logprob: -6.040292263031006
    8. '+' → logprob: -6.040292263031006
    9. '(p' → logprob: -6.165292263031006
    10. '[' → logprob: -6.415292263031006

Token 816: '           ' (ID: 352)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.45992037653923035
    2. ' pow' → logprob: -1.5849204063415527
    3. '           ' → logprob: -2.2099204063415527
    4. ',' → logprob: -4.084920406341553
    5. '       ' → logprob: -4.584920406341553
    6. '(pow' → logprob: -5.459920406341553
    7. '            ' → logprob: -5.834920406341553
    8. '        ' → logprob: -6.084920406341553
    9. '   ' → logprob: -6.084920406341553
    10. ' _' → logprob: -6.209920406341553

Token 817: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.08948996663093567
    2. ' pow' → logprob: -2.4644899368286133
    3. '           ' → logprob: -7.964489936828613
    4. '   ' → logprob: -9.089489936828613
    5. '(pow' → logprob: -10.339489936828613
    6. '_pow' → logprob: -11.339489936828613
    7. '       ' → logprob: -11.464489936828613
    8. '.pow' → logprob: -11.964489936828613
    9. '            ' → logprob: -12.089489936828613
    10. ' ' → logprob: -12.464489936828613

Token 818: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.750000953674316
    3. '_' → logprob: -15.875000953674316
    4. 'pow' → logprob: -16.125
    5. 'x' → logprob: -16.5
    6. 's' → logprob: -16.875
    7. '_pow' → logprob: -17.0
    8. ' _' → logprob: -17.75
    9. '[' → logprob: -18.25
    10. '=' → logprob: -18.625

Token 819: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024768433067947626
    2. '.' → logprob: -6.002476692199707
    3. '.app' → logprob: -14.002476692199707
    4. ' .' → logprob: -15.252476692199707
    5. 'append' → logprob: -16.127477645874023
    6. '.ap' → logprob: -17.002477645874023
    7. '.extend' → logprob: -17.377477645874023
    8. '=' → logprob: -19.002477645874023
    9. '+=' → logprob: -19.377477645874023
    10. '.Append' → logprob: -19.877477645874023

Token 820: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.003493400290608406
    2. 'pow' → logprob: -6.003493309020996
    3. '((' → logprob: -7.253493309020996
    4. '(' → logprob: -8.628493309020996
    5. ' (' → logprob: -10.003493309020996
    6. '(p' → logprob: -10.003493309020996
    7. ' pow' → logprob: -10.628493309020996
    8. '(power' → logprob: -11.878493309020996
    9. '(po' → logprob: -12.253493309020996
    10. '_pow' → logprob: -14.128493309020996

Token 821: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.534558552724775e-05
    2. 'x' → logprob: -11.375025749206543
    3. '(x' → logprob: -11.750025749206543
    4. 'pow' → logprob: -12.500025749206543
    5. '(pow' → logprob: -13.375025749206543
    6. '[x' → logprob: -14.875025749206543
    7. '_pow' → logprob: -16.000024795532227
    8. '[' → logprob: -16.625024795532227
    9. '(' → logprob: -17.250024795532227
    10. '[-' → logprob: -17.750024795532227

Token 822: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00013047587708570063
    2. '[' → logprob: -9.000130653381348
    3. '*' → logprob: -13.250130653381348
    4. '[_' → logprob: -13.625130653381348
    5. ' [-' → logprob: -13.750130653381348
    6. '   ' → logprob: -14.000130653381348
    7. '.append' → logprob: -14.375130653381348
    8. '[len' → logprob: -14.625130653381348
    9. ' *' → logprob: -15.250130653381348
    10. '[x' → logprob: -15.625130653381348

Token 823: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030939238145947456
    2. '(x' → logprob: -3.6559393405914307
    3. '1' → logprob: -5.655939102172852
    4. ' x' → logprob: -7.405939102172852
    5. '_x' → logprob: -8.530939102172852
    6. '0' → logprob: -9.905939102172852
    7. '(' → logprob: -10.030939102172852
    8. '-x' → logprob: -10.280939102172852
    9. '```' → logprob: -10.280939102172852
    10. '
' → logprob: -10.530939102172852

Token 824: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14279039204120636
    2. '*' → logprob: -2.0177903175354004
    3. ')' → logprob: -9.392790794372559
    4. ' ' → logprob: -11.017790794372559
    5. '=' → logprob: -12.267790794372559
    6. '*x' → logprob: -12.892790794372559
    7. ',' → logprob: -13.517790794372559
    8. '   ' → logprob: -14.205290794372559
    9. ' ' → logprob: -14.392790794372559
    10. '[' → logprob: -14.705290794372559

Token 825: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47429439425468445
    2. ' *' → logprob: -0.9742944240570068
    3. '*x' → logprob: -8.474294662475586
    4. ' ' → logprob: -12.474294662475586
    5. '*object' → logprob: -13.474294662475586
    6. '=' → logprob: -14.599294662475586
    7. '*y' → logprob: -14.849294662475586
    8. '   ' → logprob: -14.974294662475586
    9. ' ' → logprob: -15.349294662475586
    10. '*u' → logprob: -15.349294662475586

Token 826: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.547789674485102e-05
    2. ' x' → logprob: -10.250035285949707
    3. '	x' → logprob: -22.250036239624023
    4. ' ' → logprob: -23.625036239624023
    5. '   ' → logprob: -23.750036239624023
    6. '"x' → logprob: -24.125036239624023
    7. 'random' → logprob: -24.125036239624023
    8. ')x' → logprob: -24.625036239624023
    9. 'import' → logprob: -24.750036239624023
    10. '(x' → logprob: -25.250036239624023

Token 827: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07898948341608047
    2. '%' → logprob: -2.5789895057678223
    3. '%m' → logprob: -9.453989028930664
    4. '%x' → logprob: -11.203989028930664
    5. '%c' → logprob: -12.328989028930664
    6. '%n' → logprob: -13.828989028930664
    7. ')' → logprob: -13.953989028930664
    8. '%d' → logprob: -14.203989028930664
    9. '%s' → logprob: -15.328989028930664
    10. '%i' → logprob: -15.953989028930664

Token 828: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9027791495318525e-05
    2. ' m' → logprob: -10.875019073486328
    3. '   ' → logprob: -20.250019073486328
    4. '```' → logprob: -21.000019073486328
    5. '	m' → logprob: -21.625019073486328
    6. '
' → logprob: -21.625019073486328
    7. ')m' → logprob: -22.750019073486328
    8. '  ' → logprob: -23.125019073486328
    9. 'м' → logprob: -23.250019073486328
    10. '    ' → logprob: -23.375019073486328

Token 829: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ' )' → logprob: -10.750022888183594
    3. ')
' → logprob: -13.750022888183594
    4. '<|end|>' → logprob: -14.875022888183594
    5. '),' → logprob: -16.375022888183594
    6. ')`' → logprob: -16.750022888183594
    7. ')}' → logprob: -17.250022888183594
    8. ')x' → logprob: -17.625022888183594
    9. '))' → logprob: -17.750022888183594
    10. ' ' → logprob: -17.875022888183594

Token 830: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41250133514404297
    2. '<|end|>' → logprob: -1.537501335144043
    3. '   ' → logprob: -2.287501335144043
    4. '
' → logprob: -4.412501335144043
    5. ')' → logprob: -5.162501335144043
    6. '```' → logprob: -6.287501335144043
    7. '<|end|>' → logprob: -7.287501335144043
    8. '        
' → logprob: -8.787501335144043
    9. '    
' → logprob: -8.912501335144043
    10. ' ' → logprob: -9.162501335144043

Token 831: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 832: ' Chaque' (ID: 94758)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 833: ' terme' (ID: 42959)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.10977817326784134
    2. 'append' → logprob: -3.1097781658172607
    3. '_' → logprob: -4.23477840423584
    4. ' pow' → logprob: -4.35977840423584
    5. '.append' → logprob: -4.60977840423584
    6. '
' → logprob: -5.60977840423584
    7. ')' → logprob: -5.85977840423584
    8. 'x' → logprob: -5.98477840423584
    9. ' append' → logprob: -6.23477840423584
    10. ']' → logprob: -6.35977840423584

Token 834: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 835: ' le' (ID: 505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09025855362415314
    2. ' pow' → logprob: -2.7152585983276367
    3. ' multip' → logprob: -4.340258598327637
    4. 'multip' → logprob: -5.340258598327637
    5. '(pow' → logprob: -7.715258598327637
    6. ' multipl' → logprob: -7.965258598327637
    7. ' une' → logprob: -8.340258598327637
    8. 'une' → logprob: -8.340258598327637
    9. ' append' → logprob: -8.715258598327637
    10. '...' → logprob: -8.965258598327637

Token 836: ' précédent' (ID: 128462)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07155102491378784
    2. 'dern' → logprob: -2.8215510845184326
    3. 'der' → logprob: -5.3215508460998535
    4. ' pow' → logprob: -6.5715508460998535
    5. ' dernier' → logprob: -6.5715508460998535
    6. 'multip' → logprob: -6.8215508460998535
    7. '...' → logprob: -9.071551322937012
    8. '(pow' → logprob: -9.196551322937012
    9. 'mul' → logprob: -9.571551322937012
    10. 'append' → logprob: -9.696551322937012

Token 837: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4289571940898895
    2. '*' → logprob: -1.053957223892212
    3. ' multiplied' → logprob: -10.303956985473633
    4. ')' → logprob: -10.303956985473633
    5. ' multip' → logprob: -10.803956985473633
    6. ' ' → logprob: -10.928956985473633
    7. '<|end|>' → logprob: -10.928956985473633
    8. 'import' → logprob: -11.053956985473633
    9. ' ' → logprob: -11.678956985473633
    10. '.' → logprob: -11.678956985473633

Token 838: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.0032858517952263355
    2. 'li' → logprob: -5.753285884857178
    3. 'lic' → logprob: -10.00328540802002
    4. 'lé' → logprob: -11.00328540802002
    5. 'lik' → logprob: -11.62828540802002
    6. 'ly' → logprob: -12.00328540802002
    7. 'l' → logprob: -12.12828540802002
    8. 'lied' → logprob: -12.50328540802002
    9. 'lication' → logprob: -13.00328540802002
    10. 'iqué' → logprob: -13.62828540802002

Token 839: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.060845717787742615
    2. ' par' → logprob: -2.9358456134796143
    3. 'x' → logprob: -5.310845851898193
    4. ' x' → logprob: -7.560845851898193
    5. '	par' → logprob: -8.560845375061035
    6. '<|end|>' → logprob: -9.685845375061035
    7. '_par' → logprob: -9.810845375061035
    8. 'by' → logprob: -10.810845375061035
    9. '	x' → logprob: -10.810845375061035
    10. '(x' → logprob: -11.060845375061035

Token 840: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '	x' → logprob: -18.378177642822266
    4. ' ' → logprob: -19.753177642822266
    5. '_x' → logprob: -21.753177642822266
    6. '"x' → logprob: -22.753177642822266
    7. 'xn' → logprob: -22.878177642822266
    8. 'xl' → logprob: -23.253177642822266
    9. '   ' → logprob: -23.503177642822266
    10. 'xu' → logprob: -23.503177642822266

Token 841: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692958116531372
    2. ' m' → logprob: -2.126929521560669
    3. ' ' → logprob: -13.75192928314209
    4. 'space' → logprob: -16.001930236816406
    5. '```' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.376930236816406
    7. ' space' → logprob: -16.501930236816406
    8. ' 
' → logprob: -16.626930236816406
    9. '	m' → logprob: -17.626930236816406
    10. ',' → logprob: -18.376930236816406

Token 843: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 844: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4389626681804657
    2. '       ' → logprob: -1.313962697982788
    3. '<|end|>' → logprob: -2.688962697982788
    4. '```' → logprob: -5.063962459564209
    5. ')' → logprob: -5.563962459564209
    6. '
' → logprob: -6.438962459564209
    7. '    
' → logprob: -6.563962459564209
    8. ' ' → logprob: -6.688962459564209
    9. '[' → logprob: -7.063962459564209
    10. '        
' → logprob: -7.563962459564209

Token 845: ' mp' (ID: 11543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005297077354043722
    2. 'for' → logprob: -6.2552971839904785
    3. '   ' → logprob: -6.7552971839904785
    4. '```' → logprob: -8.00529670715332
    5. ' for' → logprob: -8.38029670715332
    6. '#' → logprob: -8.50529670715332
    7. '        
' → logprob: -8.50529670715332
    8. '
' → logprob: -8.63029670715332
    9. '           ' → logprob: -8.88029670715332
    10. 'max' → logprob: -9.00529670715332

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06317581236362457
    2. ' =' → logprob: -2.813175916671753
    3. '={}' → logprob: -8.188176155090332
    4. 'o' → logprob: -8.688176155090332
    5. 'os' → logprob: -8.938176155090332
    6. 'ap' → logprob: -9.063176155090332
    7. '={' → logprob: -9.188176155090332
    8. '.setdefault' → logprob: -9.188176155090332
    9. 'p' → logprob: -9.188176155090332
    10. '[' → logprob: -9.563176155090332

Token 847: ' min' (ID: 1349)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.004104642663151026
    2. ' defaultdict' → logprob: -5.5041046142578125
    3. ' default' → logprob: -10.754104614257812
    4. '(default' → logprob: -13.004104614257812
    5. '{}' → logprob: -13.254104614257812
    6. '.default' → logprob: -14.754104614257812
    7. '"default' → logprob: -15.504104614257812
    8. '{' → logprob: -16.629104614257812
    9. ' ' → logprob: -17.004104614257812
    10. '_default' → logprob: -17.254104614257812

Token 848: '(pos' (ID: 24566)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.14551378786563873
    2. '({' → logprob: -2.7705137729644775
    3. '(default' → logprob: -3.0205137729644775
    4. '{' → logprob: -4.770514011383057
    5. '{}' → logprob: -5.520514011383057
    6. '(' → logprob: -5.895514011383057
    7. 'def' → logprob: -6.270514011383057
    8. '=' → logprob: -6.520514011383057
    9. '(
' → logprob: -6.770514011383057
    10. 'pos' → logprob: -7.395514011383057

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03920161351561546
    2. '.index' → logprob: -3.914201498031616
    3. ',' → logprob: -5.289201736450195
    4. ')
' → logprob: -5.664201736450195
    5. ')+' → logprob: -6.414201736450195
    6. '       ' → logprob: -6.664201736450195
    7. '])' → logprob: -6.789201736450195
    8. ')])' → logprob: -6.914201736450195
    9. ']' → logprob: -7.039201736450195
    10. ')]' → logprob: -7.164201736450195

Token 850: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39620083570480347
    2. '       ' → logprob: -1.7712008953094482
    3. '<|end|>' → logprob: -2.6462008953094482
    4. ')' → logprob: -3.8962008953094482
    5. '   ' → logprob: -4.146200656890869
    6. '=' → logprob: -4.146200656890869
    7. ',' → logprob: -4.396200656890869
    8. ' defaultdict' → logprob: -5.771200656890869
    9. '        
' → logprob: -5.896200656890869
    10. '
' → logprob: -5.896200656890869

Token 851: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8799493908882141
    2. ' =' → logprob: -1.1299493312835693
    3. '=' → logprob: -1.7549493312835693
    4. '   ' → logprob: -3.6299493312835693
    5. 'mp' → logprob: -3.8799493312835693
    6. '
' → logprob: -4.879949569702148
    7. ',' → logprob: -5.254949569702148
    8. ')' → logprob: -5.379949569702148
    9. ' defaultdict' → logprob: -5.379949569702148
    10. ' +' → logprob: -5.629949569702148

Token 852: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3304104208946228
    2. ' min' → logprob: -1.4554104804992676
    3. 'mp' → logprob: -4.205410480499268
    4. '0' → logprob: -4.455410480499268
    5. 'pos' → logprob: -5.080410480499268
    6. 'max' → logprob: -5.205410480499268
    7. ' mp' → logprob: -5.580410480499268
    8. 'for' → logprob: -6.205410480499268
    9. 'p' → logprob: -7.080410480499268
    10. ' max' → logprob: -7.455410480499268

Token 853: ' récup' (ID: 62856)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.558478832244873
    2. 'continue' → logprob: -1.558478832244873
    3. 'for' → logprob: -2.183478832244873
    4. ' for' → logprob: -2.433478832244873
    5. ' continue' → logprob: -2.433478832244873
    6. '=' → logprob: -2.558478832244873
    7. 'contin' → logprob: -2.808478832244873
    8. ' =' → logprob: -3.558478832244873
    9. 'min' → logprob: -3.683478832244873
    10. '#' → logprob: -4.183478832244873

Token 854: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.05351898446679115
    2. 'érer' → logprob: -4.053518772125244
    3. 'éré' → logprob: -4.678518772125244
    4. 'ére' → logprob: -5.428518772125244
    5. '   ' → logprob: -5.678518772125244
    6. 'érés' → logprob: -5.928518772125244
    7. 'er' → logprob: -6.053518772125244
    8. 'e' → logprob: -6.553518772125244
    9. '=min' → logprob: -6.553518772125244
    10. 'ere' → logprob: -6.678518772125244

Token 855: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17587512731552124
    2. ' min' → logprob: -2.300875186920166
    3. '0' → logprob: -2.925875186920166
    4. 'mp' → logprob: -5.675875186920166
    5. 'pos' → logprob: -6.050875186920166
    6. ' mp' → logprob: -7.675875186920166
    7. 'p' → logprob: -7.675875186920166
    8. '(min' → logprob: -8.300874710083008
    9. ' ' → logprob: -8.925874710083008
    10. ' p' → logprob: -9.425874710083008

Token 856: ' position' (ID: 4010)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8983930945396423
    2. 'minimum' → logprob: -1.148393154144287
    3. ' minimum' → logprob: -1.398393154144287
    4. ' min' → logprob: -4.273393154144287
    5. 'pos' → logprob: -4.773393154144287
    6. 'plus' → logprob: -6.523393154144287
    7. ' minimal' → logprob: -6.648393154144287
    8. 'mp' → logprob: -6.898393154144287
    9. ' plus' → logprob: -7.523393154144287
    10. 'p' → logprob: -7.773393154144287

Token 857: ' minimale' (ID: 143217)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.34779852628707886
    2. '_min' → logprob: -1.9727985858917236
    3. 'minimum' → logprob: -2.5977985858917236
    4. ' minimale' → logprob: -3.5977985858917236
    5. '<|end|>' → logprob: -4.2227983474731445
    6. ' minimum' → logprob: -4.2227983474731445
    7. '-min' → logprob: -5.9727983474731445
    8. '<|end|>' → logprob: -6.2227983474731445
    9. ' -' → logprob: -6.3477983474731445
    10. '-' → logprob: -6.3477983474731445

Token 858: ' atte' (ID: 43312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4491410255432129
    2. '<|end|>' → logprob: -1.199141025543213
    3. '<|end|>' → logprob: -4.074141025543213
    4. ',' → logprob: -4.574141025543213
    5. '   ' → logprob: -4.949141025543213
    6. '...' → logprob: -5.574141025543213
    7. '+' → logprob: -5.949141025543213
    8. '.' → logprob: -6.324141025543213
    9. ')' → logprob: -6.449141025543213
    10. ' for' → logprob: -6.449141025543213

Token 859: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.07901658117771149
    2. 'nte' → logprob: -2.57901668548584
    3. 'n' → logprob: -9.57901668548584
    4. 'int' → logprob: -11.20401668548584
    5. 'nt' → logprob: -11.45401668548584
    6. '#' → logprob: -12.32901668548584
    7. 'nie' → logprob: -12.32901668548584
    8. 'nten' → logprob: -12.45401668548584
    9. 'nd' → logprob: -12.57901668548584
    10. 'in' → logprob: -12.70401668548584

Token 860: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2074926197528839
    2. '<|end|>' → logprob: -1.9574925899505615
    3. '+' → logprob: -4.332492828369141
    4. ',' → logprob: -4.707492828369141
    5. ' +' → logprob: -4.832492828369141
    6. '   ' → logprob: -5.832492828369141
    7. '<|end|>' → logprob: -6.082492828369141
    8. ' -' → logprob: -6.082492828369141
    9. '-' → logprob: -6.332492828369141
    10. '```' → logprob: -6.332492828369141

Token 861: ' le' (ID: 505)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023518573492765427
    2. 'p' → logprob: -3.7735185623168945
    3. ' pos' → logprob: -8.398518562316895
    4. 'la' → logprob: -10.898518562316895
    5. ' p' → logprob: -11.398518562316895
    6. 'le' → logprob: -11.898518562316895
    7. 'pow' → logprob: -13.273518562316895
    8. 'l' → logprob: -13.523518562316895
    9. 'pose' → logprob: -13.898518562316895
    10. 'position' → logprob: -14.148518562316895

Token 862: ' curse' (ID: 77365)
  Prédit: 'curse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curse' → logprob: -0.007198382169008255
    2. 'p' → logprob: -5.382198333740234
    3. ' curse' → logprob: -6.632198333740234
    4. 'pos' → logprob: -7.132198333740234
    5. 'cursor' → logprob: -8.007198333740234
    6. 'cur' → logprob: -9.757198333740234
    7. 'c' → logprob: -11.257198333740234
    8. ' p' → logprob: -11.632198333740234
    9. 'pose' → logprob: -11.757198333740234
    10. 'cour' → logprob: -12.382198333740234

Token 863: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0024870727211236954
    2. 'sur' → logprob: -6.8774871826171875
    3. 'reur' → logprob: -6.8774871826171875
    4. 'se' → logprob: -8.377487182617188
    5. 'r' → logprob: -9.002487182617188
    6. 's' → logprob: -10.377487182617188
    7. 'teur' → logprob: -11.627487182617188
    8. 'p' → logprob: -11.877487182617188
    9. 'sure' → logprob: -12.502487182617188
    10. 'eur' → logprob: -12.502487182617188

Token 864: ' ;' (ID: 4605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3647838830947876
    2. '
' → logprob: -1.9897838830947876
    3. '+' → logprob: -2.864783763885498
    4. ' +' → logprob: -3.364783763885498
    5. '<|end|>' → logprob: -3.364783763885498
    6. ' -' → logprob: -4.489783763885498
    7. '       ' → logprob: -4.614783763885498
    8. ',' → logprob: -5.239783763885498
    9. '-' → logprob: -5.489783763885498
    10. ')' → logprob: -5.489783763885498

Token 865: ' si' (ID: 1784)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.8501951098442078
    2. 'mp' → logprob: -0.9751951098442078
    3. ' offset' → logprob: -3.1001951694488525
    4. 'shift' → logprob: -3.2251951694488525
    5. ' mp' → logprob: -3.3501951694488525
    6. 'for' → logprob: -3.4751951694488525
    7. ' shift' → logprob: -5.100194931030273
    8. 'min' → logprob: -5.100194931030273
    9. ' for' → logprob: -5.350194931030273
    10. '#' → logprob: -5.600194931030273

Token 866: ' nég' (ID: 55805)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.6952526569366455
    2. ' mp' → logprob: -0.6952526569366455
    3. 'pos' → logprob: -7.695252418518066
    4. '(mp' → logprob: -7.820252418518066
    5. '0' → logprob: -8.320252418518066
    6. ' ' → logprob: -8.695252418518066
    7. ' pos' → logprob: -9.195252418518066
    8. ' not' → logprob: -9.445252418518066
    9. 'p' → logprob: -9.695252418518066
    10. '	mp' → logprob: -9.820252418518066

Token 867: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.42462483048439026
    2. 'atif' → logprob: -1.4246248006820679
    3. 'ée' → logprob: -3.0496249198913574
    4. 'é' → logprob: -4.174624919891357
    5. '=' → logprob: -4.674624919891357
    6. 'lected' → logprob: -4.924624919891357
    7. 'None' → logprob: -5.424624919891357
    8. 'atifs' → logprob: -5.799624919891357
    9. 'lect' → logprob: -6.049624919891357
    10. 's' → logprob: -6.049624919891357

Token 868: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02975454181432724
    2. ',' → logprob: -4.904754638671875
    3. ':
' → logprob: -5.154754638671875
    4. '==' → logprob: -5.404754638671875
    5. '!=' → logprob: -6.654754638671875
    6. ' <' → logprob: -6.779754638671875
    7. '>=' → logprob: -6.779754638671875
    8. ' !=' → logprob: -6.904754638671875
    9. ' ==' → logprob: -6.904754638671875
    10. ' :' → logprob: -6.904754638671875

Token 869: ' cela' (ID: 17542)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.48365065455436707
    2. ' on' → logprob: -1.4836506843566895
    3. ' mp' → logprob: -2.2336506843566895
    4. 'on' → logprob: -3.4836506843566895
    5. '#' → logprob: -5.6086506843566895
    6. 'shift' → logprob: -5.8586506843566895
    7. 'offset' → logprob: -6.3586506843566895
    8. '       ' → logprob: -6.8586506843566895
    9. ' elle' → logprob: -6.8586506843566895
    10. '   ' → logprob: -6.8586506843566895

Token 870: ' signifie' (ID: 81149)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.3226655721664429
    2. '=' → logprob: -1.6976655721664429
    3. 'n' → logprob: -2.3226656913757324
    4. ' =' → logprob: -2.9476656913757324
    5. ' n' → logprob: -2.9476656913757324
    6. ' +=' → logprob: -3.0726656913757324
    7. ' -=' → logprob: -3.3226656913757324
    8. '-=' → logprob: -3.4476656913757324
    9. ' signifie' → logprob: -3.6976656913757324
    10. ' permet' → logprob: -3.8226656913757324

Token 871: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4257746636867523
    2. 'que' → logprob: -1.8007746934890747
    3. ' qu' → logprob: -2.300774574279785
    4. 'qu' → logprob: -2.675774574279785
    5. ' that' → logprob: -5.300774574279785
    6. 'une' → logprob: -6.050774574279785
    7. 'that' → logprob: -6.425774574279785
    8. ' une' → logprob: -7.050774574279785
    9. '   ' → logprob: -7.675774574279785
    10. '#' → logprob: -7.925774574279785

Token 872: '’il' (ID: 14828)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.7401523590087891
    2. ' mp' → logprob: -1.615152359008789
    3. 'pos' → logprob: -2.490152359008789
    4. ' on' → logprob: -2.740152359008789
    5. 'le' → logprob: -3.240152359008789
    6. 'on' → logprob: -3.490152359008789
    7. 'la' → logprob: -3.865152359008789
    8. ' le' → logprob: -4.115152359008789
    9. '#' → logprob: -4.115152359008789
    10. ' la' → logprob: -4.490152359008789

Token 873: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -1.0229331254959106
    2. 'f' → logprob: -1.1479331254959106
    3. ' y' → logprob: -1.7729331254959106
    4. 'y' → logprob: -3.397933006286621
    5. ' faudra' → logprob: -3.647933006286621
    6. 'n' → logprob: -3.897933006286621
    7. 'a' → logprob: -4.272933006286621
    8. ' n' → logprob: -4.647933006286621
    9. 's' → logprob: -4.647933006286621
    10. ' a' → logprob: -5.022933006286621

Token 874: ' aussi' (ID: 9894)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.2278440147638321
    2. ' ajust' → logprob: -2.352843999862671
    3. 'dé' → logprob: -3.352843999862671
    4. 'adjust' → logprob: -4.60284423828125
    5. 'offset' → logprob: -4.60284423828125
    6. '#' → logprob: -4.72784423828125
    7. 'comp' → logprob: -4.85284423828125
    8. 'aj' → logprob: -5.22784423828125
    9. '   ' → logprob: -5.22784423828125
    10. 'd' → logprob: -5.35284423828125

Token 875: ' des' (ID: 731)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.4634128510951996
    2. 'dé' → logprob: -1.838412880897522
    3. 'd' → logprob: -2.0884127616882324
    4. 'comp' → logprob: -3.5884127616882324
    5. 'aj' → logprob: -3.9634127616882324
    6. 'com' → logprob: -4.963412761688232
    7. ' ajust' → logprob: -5.338412761688232
    8. 'offset' → logprob: -5.338412761688232
    9. 'caler' → logprob: -5.963412761688232
    10. 'corr' → logprob: -5.963412761688232

Token 876: ' puiss' (ID: 102546)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.7018718719482422
    2. 'd' → logprob: -0.8268718719482422
    3. 'dé' → logprob: -3.201871871948242
    4. 'de' → logprob: -4.576871871948242
    5. ' espaces' → logprob: -5.951871871948242
    6. 'positions' → logprob: -6.076871871948242
    7. 'offset' → logprob: -6.201871871948242
    8. 'indices' → logprob: -6.701871871948242
    9. 'cases' → logprob: -7.451871871948242
    10. 'élé' → logprob: -7.451871871948242

Token 877: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0041548567824065685
    2. 'antes' → logprob: -6.129154682159424
    3. 'ance' → logprob: -7.004154682159424
    4. 'ences' → logprob: -8.004155158996582
    5. 'es' → logprob: -8.879155158996582
    6. 'ies' → logprob: -9.629155158996582
    7. 'ices' → logprob: -9.754155158996582
    8. 'p' → logprob: -10.254155158996582
    9. '```' → logprob: -10.254155158996582
    10. 'aces' → logprob: -10.379155158996582

Token 878: ' nég' (ID: 55805)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.8503816723823547
    2. 'de' → logprob: -1.85038161277771
    3. 'abs' → logprob: -2.35038161277771
    4. ' de' → logprob: -2.85038161277771
    5. '       ' → logprob: -3.47538161277771
    6. '   ' → logprob: -3.47538161277771
    7. ' nég' → logprob: -3.60038161277771
    8. ' abs' → logprob: -3.72538161277771
    9. 'sup' → logprob: -3.85038161277771
    10. 'x' → logprob: -4.600381851196289

Token 879: 'atives' (ID: 8015)
  Prédit: 'atives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.27481478452682495
    2. 'itives' → logprob: -1.6498148441314697
    3. 'ites' → logprob: -3.7748148441314697
    4. 'ives' → logprob: -4.149814605712891
    5. 'itif' → logprob: -6.399814605712891
    6. 'if' → logprob: -6.524814605712891
    7. 'iques' → logprob: -6.649814605712891
    8. 'entes' → logprob: -7.649814605712891
    9. 'ales' → logprob: -7.649814605712891
    10. 'i' → logprob: -7.899814605712891

Token 880: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6315200328826904
    2. '.' → logprob: -1.5065200328826904
    3. '   ' → logprob: -2.1315200328826904
    4. ' de' → logprob: -3.8815200328826904
    5. 'de' → logprob: -4.7565202713012695
    6. ' of' → logprob: -4.7565202713012695
    7. '       ' → logprob: -4.8815202713012695
    8. ' to' → logprob: -4.8815202713012695
    9. 'pow' → logprob: -4.8815202713012695
    10. ')' → logprob: -5.0065202713012695

Token 881: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1961880922317505
    2. ' for' → logprob: -1.6961880922317505
    3. 'for' → logprob: -1.9461880922317505
    4. 'mp' → logprob: -2.446187973022461
    5. 'if' → logprob: -2.571187973022461
    6. 'pow' → logprob: -3.446187973022461
    7. 'offset' → logprob: -3.571187973022461
    8. ' offset' → logprob: -3.696187973022461
    9. '+' → logprob: -3.696187973022461
    10. '       ' → logprob: -3.821187973022461

Token 882: ' if' (ID: 538)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5056180953979492
    2. '       ' → logprob: -1.7556180953979492
    3. 'for' → logprob: -2.380618095397949
    4. 'mp' → logprob: -3.005618095397949
    5. 'shift' → logprob: -3.130618095397949
    6. 'if' (adapté à ' if') → logprob: -5.255618095397949
    7. 'pow' → logprob: -5.380618095397949
    8. 'inv' → logprob: -5.505618095397949
    9. 'adjust' → logprob: -5.505618095397949
    10. 'inverse' → logprob: -5.630618095397949

Token 883: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.3132723271846771
    2. ' mp' → logprob: -1.3132723569869995
    3. '(mp' → logprob: -12.438272476196289
    4. '	mp' → logprob: -12.813272476196289
    5. 'm' → logprob: -13.188272476196289
    6. '   ' → logprob: -13.688272476196289
    7. ' m' → logprob: -16.06327247619629
    8. ' mpi' → logprob: -16.06327247619629
    9. '_mp' → logprob: -16.18827247619629
    10. '0' → logprob: -16.18827247619629

Token 884: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519322335720062
    2. ' <' → logprob: -1.5019322633743286
    3. '<int' → logprob: -14.376932144165039
    4. '[' → logprob: -14.501932144165039
    5. '<num' → logprob: -14.501932144165039
    6. '0' → logprob: -14.876932144165039
    7. ' ' → logprob: -15.251932144165039
    8. ')' → logprob: -16.00193214416504
    9. '<n' → logprob: -16.00193214416504
    10. '<len' → logprob: -16.37693214416504

Token 885: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028364919126033783
    2. ' ' → logprob: -5.87783670425415
    3. '=' → logprob: -10.377836227416992
    4. '```' → logprob: -16.377836227416992
    5. ' =' → logprob: -16.627836227416992
    6. '1' → logprob: -16.627836227416992
    7. '۰' → logprob: -17.002836227416992
    8. '<' → logprob: -17.190336227416992
    9. 'p' → logprob: -17.690336227416992
    10. ' ' → logprob: -17.940336227416992

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001295222609769553
    2. ' ' → logprob: -9.000129699707031
    3. '=' → logprob: -12.125129699707031
    4. '1' → logprob: -15.375129699707031
    5. ' =' → logprob: -15.375129699707031
    6. '```' → logprob: -16.25012969970703
    7. '#' → logprob: -17.25012969970703
    8. 'mp' → logprob: -17.25012969970703
    9. '۰' → logprob: -17.62512969970703
    10. '
' → logprob: -17.75012969970703

Token 887: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760895609855652
    2. ':
' → logprob: -0.8260895609855652
    3. '       ' → logprob: -10.076089859008789
    4. ' :
' → logprob: -10.451089859008789
    5. ' :' → logprob: -10.576089859008789
    6. '           ' → logprob: -10.951089859008789
    7. ':
' → logprob: -11.201089859008789
    8. ',' → logprob: -11.576089859008789
    9. '   ' → logprob: -12.201089859008789
    10. ':

' → logprob: -12.576089859008789

Token 888: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3810122311115265
    2. '       ' → logprob: -1.506012201309204
    3. ' pow' → logprob: -3.006012201309204
    4. '        ' → logprob: -3.881012201309204
    5. 'pow' → logprob: -4.506012439727783
    6. ' for' → logprob: -5.131012439727783
    7. '   ' → logprob: -6.256012439727783
    8. ' #' → logprob: -6.756012439727783
    9. '```' → logprob: -6.881012439727783
    10. '#' → logprob: -7.506012439727783

Token 889: ' #' (ID: 1069)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.8379707336425781
    2. ' for' → logprob: -1.3379707336425781
    3. '           ' → logprob: -2.087970733642578
    4. 'pow' → logprob: -2.587970733642578
    5. 'for' → logprob: -2.837970733642578
    6. ' mp' → logprob: -3.712970733642578
    7. 'mp' → logprob: -4.962970733642578
    8. ' offset' → logprob: -5.587970733642578
    9. ' shift' → logprob: -6.212970733642578
    10. '       ' → logprob: -6.462970733642578

Token 890: ' Si' (ID: 7832)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.906544029712677
    2. 'for' → logprob: -1.5315439701080322
    3. ' for' → logprob: -2.2815439701080322
    4. ' pow' → logprob: -2.5315439701080322
    5. 'inv' → logprob: -2.9065439701080322
    6. '           ' → logprob: -3.1565439701080322
    7. 'neg' → logprob: -3.7815439701080322
    8. 'offset' → logprob: -3.9065439701080322
    9. ' inv' → logprob: -3.9065439701080322
    10. ' offset' → logprob: -4.406544208526611

Token 891: ' la' (ID: 557)
  Prédit: ' mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mp' → logprob: -0.11656906455755234
    2. 'mp' → logprob: -2.7415690422058105
    3. ' len' → logprob: -3.2415690422058105
    4. 'len' → logprob: -5.3665690422058105
    5. ' abs' → logprob: -7.1165690422058105
    6. 'abs' → logprob: -8.366569519042969
    7. 'pow' → logprob: -9.241569519042969
    8. ' pow' → logprob: -9.491569519042969
    9. '(mp' → logprob: -9.616569519042969
    10. ' p' → logprob: -9.616569519042969

Token 892: ' position' (ID: 4010)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.12593957781791687
    2. ' mp' → logprob: -3.1259396076202393
    3. 'abs' → logprob: -3.2509396076202393
    4. 'len' → logprob: -3.5009396076202393
    5. ' len' → logprob: -6.37593936920166
    6. ' abs' → logprob: -7.00093936920166
    7. 'pos' → logprob: -7.62593936920166
    8. 'm' → logprob: -8.12593936920166
    9. 'pow' → logprob: -8.25093936920166
    10. ' nég' → logprob: -8.62593936920166

Token 893: ' minimale' (ID: 143217)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13600017130374908
    2. '<' → logprob: -2.636000156402588
    3. 's' → logprob: -3.636000156402588
    4. 'mp' → logprob: -5.011000156402588
    5. ' +=' → logprob: -5.761000156402588
    6. 'abs' → logprob: -5.761000156402588
    7. 'n' → logprob: -5.886000156402588
    8. ' est' → logprob: -6.136000156402588
    9. 'est' → logprob: -6.511000156402588
    10. '       ' → logprob: -6.886000156402588

Token 894: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.26868635416030884
    2. '<' → logprob: -1.518686294555664
    3. 'mp' → logprob: -5.268686294555664
    4. ' is' → logprob: -6.393686294555664
    5. '<n' → logprob: -6.393686294555664
    6. '<p' → logprob: -6.518686294555664
    7. 'n' → logprob: -6.893686294555664
    8. 'est' → logprob: -7.268686294555664
    9. '<m' → logprob: -7.393686294555664
    10. 's' → logprob: -7.643686294555664

Token 895: ' nég' (ID: 55805)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9454309940338135
    2. 'abs' → logprob: -1.3204309940338135
    3. ' -' → logprob: -1.4454309940338135
    4. ' abs' → logprob: -2.5704309940338135
    5. ' mp' → logprob: -4.695430755615234
    6. ' True' → logprob: -5.570430755615234
    7. 'True' → logprob: -5.570430755615234
    8. 'mp' → logprob: -5.695430755615234
    9. '-p' → logprob: -6.195430755615234
    10. '1' → logprob: -6.695430755615234

Token 896: 'ative' (ID: 1799)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0660933405160904
    2. '(mp' → logprob: -3.5660934448242188
    3. 'abs' → logprob: -5.316093444824219
    4. '           ' → logprob: -5.566093444824219
    5. '0' → logprob: -5.691093444824219
    6. 'atif' → logprob: -6.316093444824219
    7. 'ativement' → logprob: -6.441093444824219
    8. '       ' → logprob: -6.441093444824219
    9. 'é' → logprob: -6.566093444824219
    10. '1' → logprob: -6.566093444824219

Token 897: ',
' (ID: 412)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5978186726570129
    2. ':' → logprob: -1.0978186130523682
    3. ',' → logprob: -2.347818613052368
    4. '           ' → logprob: -4.472818851470947
    5. '       ' → logprob: -5.222818851470947
    6. ' :
' → logprob: -6.722818851470947
    7. ',
' → logprob: -6.972818851470947
    8. ' :' → logprob: -7.472818851470947
    9. '   ' → logprob: -7.597818851470947
    10. '               ' → logprob: -8.847818374633789

Token 898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10649235546588898
    2. '       ' → logprob: -2.856492280960083
    3. ' pow' → logprob: -3.981492280960083
    4. 'pow' → logprob: -4.731492519378662
    5. ' for' → logprob: -4.856492519378662
    6. '   ' → logprob: -5.231492519378662
    7. '               ' → logprob: -7.606492519378662
    8. 'for' → logprob: -7.731492519378662
    9. '        ' → logprob: -7.856492519378662
    10. '            ' → logprob: -8.231492042541504

Token 899: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.375922828912735
    2. ' pow' → logprob: -2.000922918319702
    3. 'pow' → logprob: -2.375922918319702
    4. ' for' → logprob: -3.125922918319702
    5. ' mp' → logprob: -4.250922679901123
    6. '       ' → logprob: -4.500922679901123
    7. 'for' → logprob: -5.250922679901123
    8. 'mp' → logprob: -6.250922679901123
    9. '   ' → logprob: -6.625922679901123
    10. '        ' → logprob: -6.750922679901123

Token 900: ' on' (ID: 402)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.7881700396537781
    2. '           ' → logprob: -1.5381700992584229
    3. 'pow' → logprob: -2.163170099258423
    4. ' for' → logprob: -2.413170099258423
    5. ' offset' → logprob: -3.538170099258423
    6. 'for' → logprob: -3.538170099258423
    7. ' mp' → logprob: -3.788170099258423
    8. 'mp' → logprob: -4.788169860839844
    9. 'offset' → logprob: -5.038169860839844
    10. ' inv' → logprob: -5.288169860839844

Token 901: ' stock' (ID: 6546)
  Prédit: ' ajuste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajuste' → logprob: -1.5636208057403564
    2. 'aj' → logprob: -2.0636208057403564
    3. ' dé' → logprob: -2.0636208057403564
    4. ' continue' → logprob: -2.1886208057403564
    5. 'd' → logprob: -2.6886208057403564
    6. 'continue' → logprob: -3.0636208057403564
    7. ' déc' → logprob: -3.3136208057403564
    8. ' ajoute' → logprob: -3.4386208057403564
    9. 'dé' → logprob: -3.5636208057403564
    10. 'de' → logprob: -3.9386208057403564

Token 902: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5928495486150496e-05
    2. 'era' → logprob: -12.125016212463379
    3. 'er' → logprob: -12.375016212463379
    4. '[e' → logprob: -13.625016212463379
    5. 'age' → logprob: -13.875016212463379
    6. 'ent' → logprob: -14.000016212463379
    7. '[' → logprob: -14.125016212463379
    8. '#' → logprob: -15.000016212463379
    9. 'ep' → logprob: -15.250016212463379
    10. '	e' → logprob: -15.250016212463379

Token 903: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.40261930227279663
    2. 'abs' → logprob: -2.5276193618774414
    3. ' pow' → logprob: -3.0276193618774414
    4. ' des' → logprob: -3.2776193618774414
    5. ' abs' → logprob: -3.6526193618774414
    6. ' une' → logprob: -3.7776193618774414
    7. '   ' → logprob: -4.652619361877441
    8. 'inverse' → logprob: -4.777619361877441
    9. 'len' → logprob: -5.027619361877441
    10. 'neg' → logprob: -5.277619361877441

Token 904: ' puissance' (ID: 63494)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6386401057243347
    2. 'pow' → logprob: -1.8886401653289795
    3. 'abs' → logprob: -2.2636401653289795
    4. ' offset' → logprob: -2.5136401653289795
    5. 'mp' → logprob: -3.6386401653289795
    6. 'for' → logprob: -3.7636401653289795
    7. ' dé' → logprob: -4.0136399269104
    8. 'shift' → logprob: -4.1386399269104
    9. 'd' → logprob: -4.5136399269104
    10. 'r' → logprob: -4.8886399269104

Token 905: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6906351447105408
    2. ' nég' → logprob: -2.3156352043151855
    3. 'pow' → logprob: -2.3156352043151855
    4. 'x' → logprob: -3.0656352043151855
    5. '   ' → logprob: -3.1906352043151855
    6. '[-' → logprob: -3.1906352043151855
    7. '_x' → logprob: -3.8156352043151855
    8. ' pow' → logprob: -3.9406352043151855
    9. 'abs' → logprob: -3.9406352043151855
    10. ' de' → logprob: -4.1906352043151855

Token 906: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.3664436638355255
    2. 'ée' → logprob: -1.9914436340332031
    3. ' à' → logprob: -2.491443634033203
    4. 'ue' → logprob: -3.991443634033203
    5. '   ' → logprob: -4.116443634033203
    6. ' aux' → logprob: -4.241443634033203
    7. '       ' → logprob: -5.741443634033203
    8. 'à' → logprob: -5.741443634033203
    9. 'ant' → logprob: -5.866443634033203
    10. 'é' → logprob: -5.991443634033203

Token 907: ' de' (ID: 334)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.3530199527740479
    2. 's' → logprob: -1.4780199527740479
    3. '   ' → logprob: -2.103019952774048
    4. '           ' → logprob: -2.728019952774048
    5. '       ' → logprob: -2.978019952774048
    6. '[-' → logprob: -3.228019952774048
    7. 'de' → logprob: -3.353019952774048
    8. '[' → logprob: -3.603019952774048
    9. ' de' → logprob: -3.728019952774048
    10. ',' → logprob: -3.728019952774048

Token 908: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008222105912864208
    2. 'r' → logprob: -5.5082221031188965
    3. ' x' → logprob: -5.6332221031188965
    4. 'pow' → logprob: -7.6332221031188965
    5. ' r' → logprob: -9.633222579956055
    6. ' pow' → logprob: -12.508222579956055
    7. '```' → logprob: -13.883222579956055
    8. ' ' → logprob: -14.508222579956055
    9. 'inverse' → logprob: -14.820722579956055
    10. '_x' → logprob: -15.133222579956055

Token 909: ' (=' (ID: 72569)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8259692788124084
    2. '   ' → logprob: -1.8259692192077637
    3. 's' → logprob: -2.8259692192077637
    4. ' =' → logprob: -2.9509692192077637
    5. '_pow' → logprob: -3.3259692192077637
    6. ' *' → logprob: -3.3259692192077637
    7. '           ' → logprob: -3.4509692192077637
    8. '.append' → logprob: -3.4509692192077637
    9. '       ' → logprob: -3.9509692192077637
    10. ' pow' → logprob: -3.9509692192077637

Token 910: ' x' (ID: 1215)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20987164974212646
    2. 'x' → logprob: -1.9598716497421265
    3. 'r' → logprob: -3.959871768951416
    4. ' pow' → logprob: -4.459871768951416
    5. ' x' → logprob: -5.334871768951416
    6. 'abs' → logprob: -6.334871768951416
    7. '   ' → logprob: -6.459871768951416
    8. 'y' → logprob: -6.459871768951416
    9. ' r' → logprob: -6.834871768951416
    10. '-' → logprob: -7.084871768951416

Token 911: '^-' (ID: 85848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2370575666427612
    2. '**' → logprob: -1.2370575666427612
    3. ' **' → logprob: -1.4870575666427612
    4. ' *' → logprob: -2.112057685852051
    5. '*' → logprob: -3.487057685852051
    6. 'pow' → logprob: -4.487057685852051
    7. ' ' → logprob: -4.987057685852051
    8. '
' → logprob: -5.237057685852051
    9. ' )' → logprob: -5.612057685852051
    10. ']' → logprob: -5.862057685852051

Token 912: '1' (ID: 16)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.160429447889328
    2. '1' → logprob: -2.6604294776916504
    3. ' mp' → logprob: -2.6604294776916504
    4. '(mp' → logprob: -5.16042947769165
    5. 'abs' → logprob: -6.66042947769165
    6. '_mp' → logprob: -8.535429000854492
    7. ' ' → logprob: -8.660429000854492
    8. ' abs' → logprob: -9.035429000854492
    9. ')' → logprob: -9.160429000854492
    10. '	mp' → logprob: -9.285429000854492

Token 913: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01799447275698185
    2. ')**' → logprob: -5.392994403839111
    3. ' )' → logprob: -5.392994403839111
    4. '**' → logprob: -5.517994403839111
    5. ')
' → logprob: -6.517994403839111
    6. ' **' → logprob: -7.267994403839111
    7. '):
' → logprob: -7.642994403839111
    8. '),' → logprob: -8.26799488067627
    9. '   ' → logprob: -8.64299488067627
    10. '```' → logprob: -8.64299488067627

Token 914: ' pour' (ID: 1930)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9990496039390564
    2. 'pow' → logprob: -1.1240496635437012
    3. ' **' → logprob: -1.8740496635437012
    4. ' pour' → logprob: -3.999049663543701
    5. 'pour' → logprob: -4.249049663543701
    6. 'for' → logprob: -4.374049663543701
    7. '   ' → logprob: -4.374049663543701
    8. ' *' → logprob: -4.374049663543701
    9. ' pow' → logprob: -4.624049663543701
    10. ',' → logprob: -4.999049663543701

Token 915: ' x' (ID: 1215)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.9135974645614624
    2. ' pouvoir' → logprob: -2.038597583770752
    3. 'comp' → logprob: -2.038597583770752
    4. ' chaque' → logprob: -2.288597583770752
    5. 'p' → logprob: -3.413597583770752
    6. 'i' → logprob: -3.663597583770752
    7. 'abs' → logprob: -3.788597583770752
    8. ' i' → logprob: -4.288597583770752
    9. 'mp' → logprob: -4.413597583770752
    10. ' p' → logprob: -4.413597583770752

Token 916: '^-' (ID: 85848)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9353690147399902
    2. ' **' → logprob: -1.4353690147399902
    3. 'for' → logprob: -1.9353690147399902
    4. ' for' → logprob: -2.6853690147399902
    5. ':' → logprob: -3.4353690147399902
    6. ' *' → logprob: -3.4353690147399902
    7. 'pow' → logprob: -3.9353690147399902
    8. '*' → logprob: -4.68536901473999
    9. ' pow' → logprob: -5.31036901473999
    10. ' ' → logprob: -5.31036901473999

Token 917: 'mp' (ID: 2211)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.05042165517807007
    2. 'abs' → logprob: -4.050421714782715
    3. '-' → logprob: -4.425421714782715
    4. '-m' → logprob: -5.300421714782715
    5. '(abs' → logprob: -5.425421714782715
    6. ' (-' → logprob: -5.550421714782715
    7. ' -' → logprob: -5.800421714782715
    8. 'mp' → logprob: -6.925421714782715
    9. '{-' → logprob: -7.050421714782715
    10. ' abs' → logprob: -8.300421714782715

Token 918: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5318597555160522
    2. 'pow' → logprob: -2.031859874725342
    3. '       ' → logprob: -2.281859874725342
    4. ':' → logprob: -2.406859874725342
    5. ',' → logprob: -2.406859874725342
    6. '.' → logprob: -2.531859874725342
    7. 'for' → logprob: -3.156859874725342
    8. ':
' → logprob: -3.281859874725342
    9. ' pow' → logprob: -3.531859874725342
    10. '   ' → logprob: -3.656859874725342

Token 919: 'pu' (ID: 5112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9648961424827576
    2. '):
' → logprob: -2.2148962020874023
    3. 'for' → logprob: -2.7148962020874023
    4. '-' → logprob: -2.8398962020874023
    5. '),' → logprob: -3.0898962020874023
    6. ' -' → logprob: -3.3398962020874023
    7. 'abs' → logprob: -3.3398962020874023
    8. ' )' → logprob: -3.4648962020874023
    9. ' for' → logprob: -3.5898962020874023
    10. ')
' → logprob: -3.7148962020874023

Token 920: 'issance' (ID: 17968)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4238533079624176
    2. 'ow' → logprob: -1.2988532781600952
    3. '   ' → logprob: -4.673853397369385
    4. 's' → logprob: -4.673853397369385
    5. 'os' → logprob: -4.673853397369385
    6. 'r' → logprob: -4.798853397369385
    7. 'p' → logprob: -5.298853397369385
    8. '
' → logprob: -5.548853397369385
    9. 'pow' → logprob: -5.673853397369385
    10. 'x' → logprob: -5.798853397369385

Token 921: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.5916136503219604
    2. '_x' → logprob: -1.8416136503219604
    3. '```' → logprob: -3.34161376953125
    4. '   ' → logprob: -3.59161376953125
    5. 'abs' → logprob: -3.96661376953125
    6. ' des' → logprob: -3.96661376953125
    7. '_abs' → logprob: -4.09161376953125
    8. 's' → logprob: -4.21661376953125
    9. ' abs' → logprob: -4.59161376953125
    10. 'pow' → logprob: -4.59161376953125

Token 922: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.008002637885510921
    2. 'itive' → logprob: -5.758002758026123
    3. 'ée' → logprob: -6.508002758026123
    4. '
' → logprob: -7.008002758026123
    5. '   ' → logprob: -7.633002758026123
    6. '-' → logprob: -7.883002758026123
    7. ')' → logprob: -8.633002281188965
    8. 'e' → logprob: -8.758002281188965
    9. 'g' → logprob: -9.008002281188965
    10. '{' → logprob: -9.508002281188965

Token 923: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6849182844161987
    2. '):' → logprob: -1.8099182844161987
    3. ' de' → logprob: -2.4349184036254883
    4. '):
' → logprob: -2.5599184036254883
    5. 'de' → logprob: -3.3099184036254883
    6. ').' → logprob: -3.9349184036254883
    7. 's' → logprob: -4.059918403625488
    8. '),' → logprob: -4.059918403625488
    9. '**' → logprob: -4.309918403625488
    10. ')
' → logprob: -4.684918403625488

Token 924: ' en' (ID: 469)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0031565427780151
    2. 'for' → logprob: -1.6281565427780151
    3. '           ' → logprob: -1.7531565427780151
    4. 'pow' → logprob: -2.0031566619873047
    5. ' pow' → logprob: -2.3781566619873047
    6. '       ' → logprob: -4.253156661987305
    7. '   ' → logprob: -5.878156661987305
    8. 'neg' → logprob: -6.503156661987305
    9. 'n' → logprob: -6.628156661987305
    10. ' while' → logprob: -6.628156661987305

Token 925: ' la' (ID: 557)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -1.060728669166565
    2. 'pow' → logprob: -1.935728669166565
    3. 'multip' → logprob: -2.0607285499572754
    4. 'pré' → logprob: -2.4357285499572754
    5. 'part' → logprob: -3.1857285499572754
    6. 'calcul' → logprob: -3.3107285499572754
    7. 'range' → logprob: -3.9357285499572754
    8. 'continu' → logprob: -3.9357285499572754
    9. 'aj' → logprob: -4.060728549957275
    10. 'it' → logprob: -4.060728549957275

Token 926: ' calcul' (ID: 7559)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.0423307418823242
    2. 'pré' → logprob: -1.2923307418823242
    3. 'calcul' → logprob: -2.167330741882324
    4. 'aj' → logprob: -2.417330741882324
    5. 'prepend' → logprob: -3.292330741882324
    6. 'append' → logprob: -3.292330741882324
    7. 'pre' → logprob: -3.792330741882324
    8. 'pr' → logprob: -4.292330741882324
    9. 'pow' → logprob: -4.667330741882324
    10. ' multip' → logprob: -5.042330741882324

Token 927: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.10334989428520203
    2. 'érant' → logprob: -2.4783499240875244
    3. 'çant' → logprob: -5.228349685668945
    4. 't' → logprob: -6.853349685668945
    5. 'quant' → logprob: -6.853349685668945
    6. 'isant' → logprob: -7.228349685668945
    7. 'rant' → logprob: -7.353349685668945
    8. 'tion' → logprob: -7.603349685668945
    9. 'tant' → logprob: -7.603349685668945
    10. 'nt' → logprob: -7.728349685668945

Token 928: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7301263809204102
    2. 'pow' → logprob: -1.7301263809204102
    3. ' =' → logprob: -2.48012638092041
    4. '=' → logprob: -2.60512638092041
    5. ' for' → logprob: -2.85512638092041
    6. '   ' → logprob: -3.23012638092041
    7. '       ' → logprob: -3.98012638092041
    8. ' pow' → logprob: -4.23012638092041
    9. '(pow' → logprob: -4.35512638092041
    10. '[' → logprob: -4.48012638092041

Token 929: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.6065544486045837
    2. ' fois' → logprob: -1.6065545082092285
    3. 'for' → logprob: -1.7315545082092285
    4. ' boucle' → logprob: -3.6065545082092285
    5. ' seule' → logprob: -4.3565545082092285
    6. 'se' → logprob: -5.1065545082092285
    7. ' for' → logprob: -5.1065545082092285
    8. 'range' → logprob: -5.3565545082092285
    9. 'bou' → logprob: -5.6065545082092285
    10. 'pow' → logprob: -5.7315545082092285

Token 930: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4225192964076996
    2. 'pow' → logprob: -1.922519326210022
    3. ' for' → logprob: -2.5475192070007324
    4. '   ' → logprob: -3.0475192070007324
    5. '       ' → logprob: -3.6725192070007324
    6. ',' → logprob: -4.297519207000732
    7. '.' → logprob: -4.672519207000732
    8. '(pow' → logprob: -5.547519207000732
    9. ' pow' → logprob: -5.797519207000732
    10. 'pour' → logprob: -6.672519207000732

Token 931: '           ' (ID: 352)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.1674857139587402
    2. '   ' → logprob: -1.5424857139587402
    3. '       ' → logprob: -2.0424857139587402
    4. '           ' → logprob: -2.0424857139587402
    5. ' pow' → logprob: -2.5424857139587402
    6. 'r' → logprob: -3.1674857139587402
    7. 'x' → logprob: -3.9174857139587402
    8. 'inv' → logprob: -4.29248571395874
    9. ' r' → logprob: -4.54248571395874
    10. '```' → logprob: -4.66748571395874

Token 932: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.5126006603240967
    2. 'inv' → logprob: -1.7626006603240967
    3. 'neg' → logprob: -2.3876006603240967
    4. ' inv' → logprob: -3.2626006603240967
    5. 'r' → logprob: -4.137600898742676
    6. ' pow' → logprob: -4.262600898742676
    7. 'pr' → logprob: -4.387600898742676
    8. 'val' → logprob: -4.887600898742676
    9. ' neg' → logprob: -5.012600898742676
    10. '   ' → logprob: -5.512600898742676

Token 933: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00028660334646701813
    2. '_' → logprob: -9.125287055969238
    3. '_neg' → logprob: -9.375287055969238
    4. '_pow' → logprob: -10.500287055969238
    5. '_p' → logprob: -11.000287055969238
    6. '_r' → logprob: -11.375287055969238
    7. '_negative' → logprob: -12.125287055969238
    8. 'x' → logprob: -12.250287055969238
    9. 's' → logprob: -12.250287055969238
    10. '_pos' → logprob: -12.375287055969238

Token 934: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015839007683098316
    2. '.extend' → logprob: -7.001584053039551
    3. '[-' → logprob: -7.501584053039551
    4. '.' → logprob: -10.62658405303955
    5. '[' → logprob: -10.87658405303955
    6. '.insert' → logprob: -10.87658405303955
    7. '[m' → logprob: -11.00158405303955
    8. '[p' → logprob: -11.25158405303955
    9. 'append' → logprob: -11.50158405303955
    10. '[len' → logprob: -12.37658405303955

Token 935: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.03918511047959328
    2. '(r' → logprob: -3.539185047149658
    3. 'pow' → logprob: -4.914185047149658
    4. '((' → logprob: -6.789185047149658
    5. '(' → logprob: -7.164185047149658
    6. '(y' → logprob: -10.039185523986816
    7. 'r' → logprob: -10.289185523986816
    8. '(p' → logprob: -10.289185523986816
    9. ' pow' → logprob: -11.164185523986816
    10. '(po' → logprob: -12.289185523986816

Token 936: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3668874204158783
    2. '_x' → logprob: -1.6168874502182007
    3. '(pow' → logprob: -2.741887331008911
    4. 'pow' → logprob: -3.366887331008911
    5. '_r' → logprob: -5.11688756942749
    6. 'r' → logprob: -6.74188756942749
    7. 'x' → logprob: -6.99188756942749
    8. '(x' → logprob: -7.86688756942749
    9. '((' → logprob: -8.116887092590332
    10. '(' → logprob: -8.116887092590332

Token 937: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030244102235883474
    2. ' ,' → logprob: -5.878024578094482
    3. '**' → logprob: -9.253024101257324
    4. ',-' → logprob: -9.503024101257324
    5. ',p' → logprob: -11.753024101257324
    6. ',
' → logprob: -12.128024101257324
    7. 'pow' → logprob: -12.253024101257324
    8. ')' → logprob: -12.378024101257324
    9. '   ' → logprob: -12.878024101257324
    10. '[-' → logprob: -13.128024101257324

Token 938: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7515578866004944
    2. '-m' → logprob: -1.1265578269958496
    3. '-p' → logprob: -1.8765578269958496
    4. ' -' → logprob: -3.8765578269958496
    5. '-n' → logprob: -4.25155782699585
    6. '(-' → logprob: -5.37655782699585
    7. '-int' → logprob: -5.75155782699585
    8. '-x' → logprob: -6.75155782699585
    9. '-ip' → logprob: -7.00155782699585
    10. '-M' → logprob: -7.12655782699585

Token 939: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -2.935296834039036e-06
    2. ' mp' → logprob: -13.50000286102295
    3. '(mp' → logprob: -13.50000286102295
    4. '   ' → logprob: -16.375003814697266
    5. '	mp' → logprob: -17.000003814697266
    6. '(' → logprob: -18.500003814697266
    7. '{' → logprob: -19.500003814697266
    8. '.mp' → logprob: -19.500003814697266
    9. '           ' → logprob: -19.625003814697266
    10. '/mp' → logprob: -19.750003814697266

Token 940: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032947298139333725
    2. ' ,' → logprob: -3.782947301864624
    3. '))' → logprob: -5.282947063446045
    4. ',m' → logprob: -6.532947063446045
    5. '+' → logprob: -7.032947063446045
    6. ')' → logprob: -7.157947063446045
    7. ' -' → logprob: -8.032947540283203
    8. ' +' → logprob: -8.157947540283203
    9. '-' → logprob: -8.282947540283203
    10. '%' → logprob: -9.157947540283203

Token 941: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0031821096781641245
    2. ' m' → logprob: -5.7531819343566895
    3. '10' → logprob: -13.003182411193848
    4. '   ' → logprob: -14.378182411193848
    5. ')' → logprob: -15.128182411193848
    6. '(m' → logprob: -15.753182411193848
    7. ' ' → logprob: -16.12818145751953
    8. '    ' → logprob: -16.37818145751953
    9. '	m' → logprob: -16.37818145751953
    10. '1' → logprob: -16.50318145751953

Token 942: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011872532777488232
    2. ')' → logprob: -7.251187324523926
    3. '))
' → logprob: -8.251187324523926
    4. ' ))' → logprob: -8.501187324523926
    5. ')))' → logprob: -12.876187324523926
    6. ',' → logprob: -13.501187324523926
    7. '   ' → logprob: -13.626187324523926
    8. '))

' → logprob: -13.876187324523926
    9. ''))' → logprob: -14.001187324523926
    10. ' )' → logprob: -14.001187324523926

Token 943: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7601512670516968
    2. '+' → logprob: -1.5101512670516968
    3. ')' → logprob: -2.2601513862609863
    4. '<|end|>' → logprob: -2.3851513862609863
    5. '           ' → logprob: -2.7601513862609863
    6. '#' (adapté à ' #') → logprob: -5.010151386260986
    7. '        ' → logprob: -5.135151386260986
    8. '[' → logprob: -5.385151386260986
    9. ' +' → logprob: -5.635151386260986
    10. '   ' → logprob: -5.885151386260986

Token 945: ' Puis' (ID: 87717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.005590796470642
    2. 'mp' → logprob: -1.505590796470642
    3. '       ' → logprob: -2.1305909156799316
    4. 'pow' → logprob: -2.1305909156799316
    5. '           ' → logprob: -2.5055909156799316
    6. ' for' → logprob: -4.130590915679932
    7. 'del' → logprob: -4.255590915679932
    8. '#' → logprob: -4.505590915679932
    9. 'else' → logprob: -4.755590915679932
    10. '```' → logprob: -4.880590915679932

Token 946: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.627497673034668
    2. ' for' → logprob: -1.127497673034668
    3. '           ' → logprob: -2.377497673034668
    4. 'pow' → logprob: -3.627497673034668
    5. ' pow' → logprob: -4.377497673034668
    6. '       ' → logprob: -6.252497673034668
    7. '#' → logprob: -6.627497673034668
    8. ' del' → logprob: -6.752497673034668
    9. '```' → logprob: -6.877497673034668
    10. 'del' → logprob: -6.877497673034668

Token 947: ' continue' (ID: 4901)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8379718661308289
    2. ' pow' → logprob: -1.5879719257354736
    3. 'for' → logprob: -1.9629719257354736
    4. ' for' → logprob: -2.2129719257354736
    5. '           ' → logprob: -2.9629719257354736
    6. '.extend' → logprob: -3.9629719257354736
    7. 'extend' → logprob: -4.4629716873168945
    8. ' extend' → logprob: -4.5879716873168945
    9. ' reverse' → logprob: -6.3379716873168945
    10. 'reverse' → logprob: -6.3379716873168945

Token 948: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.163597583770752
    2. ' for' → logprob: -1.163597583770752
    3. 'for' → logprob: -1.163597583770752
    4. '       ' → logprob: -3.038597583770752
    5. 'pow' → logprob: -4.913597583770752
    6. 'range' → logprob: -6.538597583770752
    7. ' pow' → logprob: -6.913597583770752
    8. '   ' → logprob: -7.288597583770752
    9. '```' → logprob: -7.288597583770752
    10. ' in' → logprob: -7.413597583770752

Token 949: ' multiplication' (ID: 86340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020855467300862074
    2. ' for' → logprob: -6.2520856857299805
    3. 'pow' → logprob: -9.12708568572998
    4. 'range' → logprob: -10.75208568572998
    5. '       ' → logprob: -11.75208568572998
    6. '           ' → logprob: -12.12708568572998
    7. '   ' → logprob: -12.50208568572998
    8. '```' → logprob: -12.62708568572998
    9. 'while' → logprob: -13.37708568572998
    10. 'from' → logprob: -14.12708568572998

Token 950: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8890892863273621
    2. 'pow' → logprob: -1.6390893459320068
    3. 'for' → logprob: -2.014089345932007
    4. ' for' → logprob: -2.139089345932007
    5. ' pow' → logprob: -3.389089345932007
    6. '(pow' → logprob: -3.514089345932007
    7. '       ' → logprob: -3.639089345932007
    8. ' par' → logprob: -4.389089107513428
    9. 'par' → logprob: -4.889089107513428
    10. '_pow' → logprob: -5.014089107513428

Token 951: ' constit' (ID: 14227)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1553229093551636
    2. '_' → logprob: -1.4053229093551636
    3. 'k' → logprob: -2.280323028564453
    4. '_pow' → logprob: -2.655323028564453
    5. 'abs' → logprob: -3.030323028564453
    6. 'mp' → logprob: -3.280323028564453
    7. ' i' → logprob: -3.655323028564453
    8. 'p' → logprob: -4.030323028564453
    9. '_mp' → logprob: -4.155323028564453
    10. 'pow' → logprob: -4.155323028564453

Token 952: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.06890446692705154
    2. 'uant' → logprob: -2.943904399871826
    3. 'u' → logprob: -4.693904399871826
    4. '[' → logprob: -6.818904399871826
    5. 'er' → logprob: -7.193904399871826
    6. '#' → logprob: -7.193904399871826
    7. 'uent' → logprob: -7.943904399871826
    8. 'ut' → logprob: -8.068904876708984
    9. 'ue' → logprob: -8.068904876708984
    10. '[u' → logprob: -8.568904876708984

Token 953: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2637883126735687
    2. '[' → logprob: -2.1387882232666016
    3. ' [' → logprob: -3.2637882232666016
    4. ' pow' → logprob: -3.7637882232666016
    5. ' la' → logprob: -4.388788223266602
    6. 'range' → logprob: -5.013788223266602
    7. '   ' → logprob: -5.263788223266602
    8. '[p' → logprob: -5.513788223266602
    9. 'la' → logprob: -5.638788223266602
    10. ' range' → logprob: -5.763788223266602

Token 954: ' table' (ID: 3293)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7270233035087585
    2. 'for' → logprob: -1.4770233631134033
    3. 'range' → logprob: -2.6020233631134033
    4. ' range' → logprob: -2.8520233631134033
    5. ' liste' → logprob: -2.9770233631134033
    6. ' pow' → logprob: -4.102023124694824
    7. ' for' → logprob: -4.227023124694824
    8. ' list' → logprob: -4.477023124694824
    9. '```' → logprob: -4.602023124694824
    10. '[' → logprob: -4.852023124694824

Token 955: ' complète' (ID: 75660)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.792930006980896
    2. ' pow' → logprob: -1.542930006980896
    3. '       ' → logprob: -2.1679301261901855
    4. ' des' → logprob: -2.9179301261901855
    5. ' for' → logprob: -3.5429301261901855
    6. ' de' → logprob: -3.6679301261901855
    7. 'for' → logprob: -3.7929301261901855
    8. '[' → logprob: -4.0429301261901855
    9. '(pow' → logprob: -4.1679301261901855
    10. '   ' → logprob: -4.2929301261901855

Token 956: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1271792650222778
    2. ' for' → logprob: -1.7521792650222778
    3. 'pow' → logprob: -1.8771792650222778
    4. '       ' → logprob: -2.6271791458129883
    5. '           ' → logprob: -2.8771791458129883
    6. ' de' → logprob: -3.1271791458129883
    7. ' des' → logprob: -3.6271791458129883
    8. '[' → logprob: -3.7521791458129883
    9. '(pow' → logprob: -3.7521791458129883
    10. ',' → logprob: -3.7521791458129883

Token 957: ' puiss' (ID: 102546)
  Prédit: ' puiss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.33858755230903625
    2. 'pu' → logprob: -1.5885875225067139
    3. 'pow' → logprob: -2.588587522506714
    4. 'powers' → logprob: -5.463587760925293
    5. ' puissance' → logprob: -7.463587760925293
    6. 'for' → logprob: -7.588587760925293
    7. ' pow' → logprob: -7.713587760925293
    8. 'multip' → logprob: -8.213587760925293
    9. ' for' → logprob: -8.338587760925293
    10. '```' → logprob: -8.463587760925293

Token 958: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0019542062655091286
    2. 's' → logprob: -7.751954078674316
    3. 'p' → logprob: -8.001954078674316
    4. '```' → logprob: -8.251954078674316
    5. '#' → logprob: -8.501954078674316
    6. 'ences' → logprob: -9.376954078674316
    7. 'iss' → logprob: -9.626954078674316
    8. 'ces' → logprob: -9.876954078674316
    9. '**' → logprob: -9.876954078674316
    10. 'x' → logprob: -10.376954078674316

Token 959: ' nécessaires' (ID: 74402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.960383951663971
    2. 'pow' → logprob: -1.5853838920593262
    3. '(pow' → logprob: -2.085383892059326
    4. 'for' → logprob: -2.710383892059326
    5. ' pow' → logprob: -3.210383892059326
    6. '           ' → logprob: -3.335383892059326
    7. '   ' → logprob: -3.460383892059326
    8. ' for' → logprob: -3.460383892059326
    9. '[' → logprob: -4.085383892059326
    10. '[-' → logprob: -4.460383892059326

Token 960: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0940148830413818
    2. ' for' → logprob: -1.4690148830413818
    3. '           ' → logprob: -1.7190148830413818
    4. '       ' → logprob: -1.8440148830413818
    5. ',' → logprob: -3.719014883041382
    6. '.' → logprob: -4.094015121459961
    7. '   ' → logprob: -4.344015121459961
    8. '[' → logprob: -4.344015121459961
    9. '```' → logprob: -4.844015121459961
    10. ':' → logprob: -6.094015121459961

Token 961: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49321115016937256
    2. 'for' → logprob: -1.8682111501693726
    3. ' for' → logprob: -2.118211269378662
    4. '       ' → logprob: -2.243211269378662
    5. '   ' → logprob: -5.368211269378662
    6. '```' → logprob: -7.368211269378662
    7. '	       ' → logprob: -7.618211269378662
    8. '	for' → logprob: -7.743211269378662
    9. '[' → logprob: -8.118210792541504
    10. 'pow' → logprob: -8.118210792541504

Token 962: ' besoin' (ID: 27703)
  Prédit: ' mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mp' → logprob: -0.5191414952278137
    2. '_' → logprob: -1.519141435623169
    3. ' _' → logprob: -3.269141435623169
    4. ' len' → logprob: -3.394141435623169
    5. 'mp' → logprob: -3.769141435623169
    6. ' abs' → logprob: -3.894141435623169
    7. ' i' → logprob: -4.394141674041748
    8. ' pos' → logprob: -4.394141674041748
    9. ' pow' → logprob: -4.644141674041748
    10. ' not' → logprob: -4.769141674041748

Token 963: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9524983167648315
    2. '           ' → logprob: -1.0774983167648315
    3. 'for' → logprob: -1.7024983167648315
    4. '       ' → logprob: -3.327498435974121
    5. ',' → logprob: -3.952498435974121
    6. ':' → logprob: -4.952498435974121
    7. '   ' → logprob: -5.077498435974121
    8. '.' → logprob: -5.077498435974121
    9. '[' → logprob: -5.702498435974121
    10. '```' → logprob: -5.827498435974121

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6552937626838684
    2. '       ' → logprob: -1.5302937030792236
    3. ' for' → logprob: -1.5302937030792236
    4. 'for' → logprob: -3.6552937030792236
    5. '<|end|>' → logprob: -5.530293941497803
    6. '[' → logprob: -5.780293941497803
    7. '   ' → logprob: -6.030293941497803
    8. '```' → logprob: -6.655293941497803
    9. ' ' → logprob: -7.280293941497803
    10. '	' → logprob: -7.405293941497803

Token 965: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3899476230144501
    2. 'for' (adapté à ' for') → logprob: -1.1399476528167725
    3. '       ' → logprob: -7.139947414398193
    4. '```' → logprob: -7.514947414398193
    5. 'pow' → logprob: -7.764947414398193
    6. '           ' → logprob: -7.764947414398193
    7. '   ' → logprob: -8.014947891235352
    8. '	for' → logprob: -9.264947891235352
    9. ' 
' → logprob: -9.639947891235352
    10. ' pow' → logprob: -9.889947891235352

Token 966: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022738812491297722
    2. ' i' → logprob: -4.397738933563232
    3. ' _' → logprob: -5.272738933563232
    4. 'i' → logprob: -5.397738933563232
    5. '_i' → logprob: -7.647738933563232
    6. '_=' → logprob: -11.897738456726074
    7. '_]' → logprob: -12.147738456726074
    8. '_-' → logprob: -12.272738456726074
    9. '_x' → logprob: -12.772738456726074
    10. '_p' → logprob: -12.772738456726074

Token 967: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43528369069099426
    2. '_' → logprob: -1.9352836608886719
    3. 'in' → logprob: -2.310283660888672
    4. ' range' → logprob: -2.560283660888672
    5. 'range' → logprob: -3.560283660888672
    6. ' _' → logprob: -5.810283660888672
    7. ' i' → logprob: -8.685283660888672
    8. '_range' → logprob: -9.435283660888672
    9. ' ' → logprob: -9.560283660888672
    10. 'i' → logprob: -10.060283660888672

Token 968: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.591415437171236e-05
    2. ' range' → logprob: -9.375096321105957
    3. '(range' → logprob: -11.875096321105957
    4. 'pow' → logprob: -14.000096321105957
    5. '   ' → logprob: -14.500096321105957
    6. '	range' → logprob: -14.625096321105957
    7. ' ' → logprob: -15.625096321105957
    8. 'continue' → logprob: -16.00009536743164
    9. '```' → logprob: -16.00009536743164
    10. 'list' → logprob: -16.25009536743164

Token 969: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.09353625774383545
    2. '(' → logprob: -3.468536376953125
    3. '(len' → logprob: -3.593536376953125
    4. '(abs' → logprob: -3.718536376953125
    5. '(mp' → logprob: -5.218536376953125
    6. '(max' → logprob: -7.718536376953125
    7. 'abs' → logprob: -8.718536376953125
    8. '-' → logprob: -9.218536376953125
    9. '1' → logprob: -9.593536376953125
    10. '((-' → logprob: -10.218536376953125

Token 970: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -4.2987729102605954e-05
    2. ' mp' → logprob: -10.375042915344238
    3. '(mp' → logprob: -11.500042915344238
    4. '1' → logprob: -14.250042915344238
    5. '   ' → logprob: -14.625042915344238
    6. '(' → logprob: -15.500042915344238
    7. '	mp' → logprob: -15.750042915344238
    8. '_mp' → logprob: -16.875043869018555
    9. '.mp' → logprob: -17.250043869018555
    10. 'm' → logprob: -17.250043869018555

Token 971: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.35195279121398926
    2. '-' → logprob: -1.2269527912139893
    3. '+' → logprob: -6.22695255279541
    4. ' +' → logprob: -6.97695255279541
    5. '):
' → logprob: -8.10195255279541
    6. '):' → logprob: -8.85195255279541
    7. ' ' → logprob: -10.35195255279541
    8. '[' → logprob: -10.47695255279541
    9. '   ' → logprob: -10.60195255279541
    10. ',' → logprob: -10.72695255279541

Token 972: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022964231902733445
    2. ' ' → logprob: -9.000229835510254
    3. '2' → logprob: -9.250229835510254
    4. 'mp' → logprob: -12.500229835510254
    5. 'len' → logprob: -13.375229835510254
    6. '   ' → logprob: -13.375229835510254
    7. '       ' → logprob: -14.000229835510254
    8. '0' → logprob: -14.000229835510254
    9. '           ' → logprob: -15.125229835510254
    10. ' mp' → logprob: -15.375229835510254

Token 973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000467730569653213
    2. '2' → logprob: -7.750467777252197
    3. 'mp' → logprob: -10.750467300415039
    4. '0' → logprob: -11.875467300415039
    5. ' ' → logprob: -12.250467300415039
    6. 'len' → logprob: -13.125467300415039
    7. 'r' → logprob: -15.000467300415039
    8. 'abs' → logprob: -15.250467300415039
    9. '   ' → logprob: -15.500467300415039
    10. '       ' → logprob: -15.875467300415039

Token 974: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18830424547195435
    2. '):' → logprob: -1.9383041858673096
    3. '               ' → logprob: -3.8133041858673096
    4. '):
' → logprob: -5.688304424285889
    5. '           ' → logprob: -6.563304424285889
    6. ':' → logprob: -7.813304424285889
    7. ',' → logprob: -8.81330394744873
    8. ')' → logprob: -9.43830394744873
    9. '   ' → logprob: -9.56330394744873
    10. ':
' → logprob: -10.68830394744873

Token 975: '               ' (ID: 506)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7345727682113647
    2. '           ' → logprob: -1.2345727682113647
    3. ':' → logprob: -2.4845728874206543
    4. ' pow' → logprob: -3.1095728874206543
    5. '   ' → logprob: -3.4845728874206543
    6. '               ' → logprob: -3.7345728874206543
    7. ':
' → logprob: -3.9845728874206543
    8. '(pow' → logprob: -5.609572887420654
    9. ' :' → logprob: -5.734572887420654
    10. ' x' → logprob: -6.109572887420654

Token 976: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.012660447508096695
    2. ' pow' → logprob: -4.387660503387451
    3. '               ' → logprob: -9.012660026550293
    4. '   ' → logprob: -11.637660026550293
    5. '           ' → logprob: -11.762660026550293
    6. '                   ' → logprob: -12.887660026550293
    7. '(pow' → logprob: -12.887660026550293
    8. '.pow' → logprob: -13.262660026550293
    9. '_pow' → logprob: -13.637660026550293
    10. ' ' → logprob: -14.137660026550293

Token 977: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.034592388459714e-06
    2. '(r' → logprob: -12.375005722045898
    3. '.append' → logprob: -15.000005722045898
    4. '_r' → logprob: -15.125005722045898
    5. '(x' → logprob: -15.625005722045898
    6. '_' → logprob: -15.750005722045898
    7. 's' → logprob: -15.750005722045898
    8. '(_' → logprob: -16.1250057220459
    9. '(' → logprob: -16.2500057220459
    10. '```' → logprob: -16.2500057220459

Token 978: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.9054008084349334e-05
    2. '.' → logprob: -10.250039100646973
    3. '[-' → logprob: -12.875039100646973
    4. ' .' → logprob: -14.500039100646973
    5. 'append' → logprob: -14.875039100646973
    6. '.app' → logprob: -15.875039100646973
    7. '.pop' → logprob: -17.250038146972656
    8. '.extend' → logprob: -18.375038146972656
    9. '.insert' → logprob: -18.500038146972656
    10. '[' → logprob: -19.250038146972656

Token 979: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.004167675971984863
    2. 'pow' → logprob: -5.504167556762695
    3. '(' → logprob: -9.879167556762695
    4. '(p' → logprob: -11.004167556762695
    5. '((' → logprob: -11.504167556762695
    6. ' pow' → logprob: -12.629167556762695
    7. ' (' → logprob: -13.004167556762695
    8. '(po' → logprob: -13.629167556762695
    9. '(power' → logprob: -14.004167556762695
    10. '_pow' → logprob: -14.629167556762695

Token 980: '_x' (ID: 7054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16390883922576904
    2. 'x' → logprob: -2.4139089584350586
    3. '(x' → logprob: -3.4139089584350586
    4. '_x' → logprob: -3.7889089584350586
    5. '(' → logprob: -6.163908958435059
    6. 'pow' → logprob: -6.288908958435059
    7. '(pow' → logprob: -6.913908958435059
    8. 'r' → logprob: -7.163908958435059
    9. ' x' → logprob: -9.413908958435059
    10. '(
' → logprob: -9.788908958435059

Token 981: '[-' (ID: 17503)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023980267345905304
    2. '[r' → logprob: -3.8989803791046143
    3. '[-' → logprob: -6.148980140686035
    4. 'r' → logprob: -7.648980140686035
    5. 'x' → logprob: -8.148980140686035
    6. '[' → logprob: -8.773980140686035
    7. '.append' → logprob: -9.023980140686035
    8. '(' → logprob: -9.773980140686035
    9. '_x' → logprob: -10.523980140686035
    10. '   ' → logprob: -10.898980140686035

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043460296001285315
    2. '(r' → logprob: -8.375434875488281
    3. 'r' → logprob: -8.875434875488281
    4. '-' → logprob: -10.250434875488281
    5. '(' → logprob: -11.375434875488281
    6. 'x' → logprob: -11.750434875488281
    7. '(-' → logprob: -13.000434875488281
    8. ' ' → logprob: -13.375434875488281
    9. '(x' → logprob: -13.875434875488281
    10. '   ' → logprob: -14.000434875488281

Token 983: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.033701371401548386
    2. '*' → logprob: -3.4087014198303223
    3. ')' → logprob: -10.283700942993164
    4. ',' → logprob: -11.658700942993164
    5. ' ' → logprob: -13.158700942993164
    6. ' x' → logprob: -13.533700942993164
    7. '(' → logprob: -13.658700942993164
    8. '*r' → logprob: -13.908700942993164
    9. '(x' → logprob: -14.033700942993164
    10. '*x' → logprob: -14.158700942993164

Token 984: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.21106553077697754
    2. '*' → logprob: -1.9610655307769775
    3. '*r' → logprob: -3.2110655307769775
    4. '(r' → logprob: -4.711065292358398
    5. ' r' → logprob: -9.336065292358398
    6. 'r' → logprob: -9.336065292358398
    7. ' ' → logprob: -11.086065292358398
    8. ')' → logprob: -11.211065292358398
    9. ' (' → logprob: -11.586065292358398
    10. '*x' → logprob: -11.711065292358398

Token 985: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.256334695033729e-05
    2. ' r' → logprob: -10.000082969665527
    3. 'x' → logprob: -10.250082969665527
    4. '	r' → logprob: -14.500082969665527
    5. '   ' → logprob: -14.750082969665527
    6. '(r' → logprob: -15.250082969665527
    7. ' ' → logprob: -16.25008201599121
    8. '_r' → logprob: -16.50008201599121
    9. 'm' → logprob: -16.62508201599121
    10. 'pow' → logprob: -16.68758201599121

Token 986: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01145979855209589
    2. '*' → logprob: -4.636459827423096
    3. '*r' → logprob: -6.386459827423096
    4. ' r' → logprob: -12.136459350585938
    5. '%' → logprob: -12.136459350585938
    6. ' %' → logprob: -12.886459350585938
    7. ' ' → logprob: -13.261459350585938
    8. '[r' → logprob: -14.136459350585938
    9. 'r' → logprob: -14.386459350585938
    10. '*p' → logprob: -15.261459350585938

Token 987: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026300417259335518
    2. ' m' → logprob: -3.6513004302978516
    3. '	m' → logprob: -17.40130043029785
    4. '```' → logprob: -17.40130043029785
    5. ' ' → logprob: -17.52630043029785
    6. '   ' → logprob: -18.15130043029785
    7. ' ' → logprob: -18.65130043029785
    8. '    ' → logprob: -18.77630043029785
    9. ')m' → logprob: -19.02630043029785
    10. '(m' → logprob: -19.40130043029785

Token 988: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040299031883478165
    2. ')
' → logprob: -4.540298938751221
    3. ' )' → logprob: -4.915298938751221
    4. '           ' → logprob: -5.040298938751221
    5. '               ' → logprob: -6.040298938751221
    6. '):
' → logprob: -6.165298938751221
    7. '       ' → logprob: -6.290298938751221
    8. '<|end|>' → logprob: -6.290298938751221
    9. '```' → logprob: -6.290298938751221
    10. '+' → logprob: -7.040298938751221

Token 989: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004481985233724117
    2. '   ' → logprob: -6.379481792449951
    3. 'for' → logprob: -6.504481792449951
    4. ' for' → logprob: -7.379481792449951
    5. '           ' → logprob: -8.00448226928711
    6. '```' → logprob: -8.62948226928711
    7. '<|end|>' → logprob: -10.00448226928711
    8. '#' → logprob: -10.75448226928711
    9. 'continue' → logprob: -10.75448226928711
    10. '        
' → logprob: -10.87948226928711

Token 990: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5142620801925659
    2. '       ' → logprob: -1.639262080192566
    3. ' for' → logprob: -2.2642621994018555
    4. '   ' → logprob: -2.5142621994018555
    5. '           ' → logprob: -5.3892621994018555
    6. '#' (adapté à ' #') → logprob: -5.3892621994018555
    7. 'mp' → logprob: -5.3892621994018555
    8. 'offset' → logprob: -6.5142621994018555
    9. ' #' → logprob: -7.2642621994018555
    10. 'from' → logprob: -7.3892621994018555

Token 991: ' On' (ID: 2160)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.1741766929626465
    2. 'for' → logprob: -1.2991766929626465
    3. 'pos' → logprob: -2.9241766929626465
    4. 'freq' → logprob: -2.9241766929626465
    5. 'count' → logprob: -3.1741766929626465
    6. 'mp' → logprob: -3.2991766929626465
    7. 'dp' → logprob: -3.4241766929626465
    8. '#' → logprob: -3.6741766929626465
    9. 'idx' → logprob: -4.0491766929626465
    10. 'positions' → logprob: -4.1741766929626465

Token 992: ' récup' (ID: 62856)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11145230382680893
    2. '#' → logprob: -2.861452341079712
    3. 'continue' → logprob: -4.236452102661133
    4. '       ' → logprob: -4.861452102661133
    5. 'default' → logprob: -5.111452102661133
    6. 'from' → logprob: -5.236452102661133
    7. '=' → logprob: -5.611452102661133
    8. ' for' → logprob: -5.611452102661133
    9. ' #' → logprob: -6.361452102661133
    10. '   ' → logprob: -6.736452102661133

Token 993: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.7758501172065735
    2. 'up' → logprob: -0.9008501172065735
    3. 'p' → logprob: -3.2758500576019287
    4. 'er' → logprob: -3.4008500576019287
    5. 'e' → logprob: -3.9008500576019287
    6. 'over' → logprob: -5.025850296020508
    7. 'uper' → logprob: -5.025850296020508
    8. 'u' → logprob: -5.900850296020508
    9. '       ' → logprob: -6.025850296020508
    10. 'upe' → logprob: -6.150850296020508

Token 994: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2982594966888428
    2. 'min' → logprob: -1.6732594966888428
    3. 'for' → logprob: -2.0482594966888428
    4. 'len' → logprob: -2.2982594966888428
    5. 'offset' → logprob: -2.5482594966888428
    6. 'p' → logprob: -2.7982594966888428
    7. 'pos' → logprob: -4.048259735107422
    8. 'le' → logprob: -4.048259735107422
    9. 'la' → logprob: -4.048259735107422
    10. '   ' → logprob: -4.298259735107422

Token 995: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4050079584121704
    2. 'for' → logprob: -1.7800079584121704
    3. 'default' → logprob: -1.9050079584121704
    4. 'p' → logprob: -2.155007839202881
    5. 'offset' → logprob: -2.155007839202881
    6. 'pos' → logprob: -3.155007839202881
    7. 'max' → logprob: -3.780007839202881
    8. ' min' → logprob: -4.030007839202881
    9. 'range' → logprob: -4.280007839202881
    10. ' p' → logprob: -4.530007839202881

Token 996: ' du' (ID: 1462)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6412668228149414
    2. 'de' → logprob: -2.0162668228149414
    3. 'max' → logprob: -2.3912668228149414
    4. '       ' → logprob: -2.8912668228149414
    5. 'du' → logprob: -3.2662668228149414
    6. '_min' → logprob: -3.2662668228149414
    7. '   ' → logprob: -3.6412668228149414
    8. 'minimum' → logprob: -4.516266822814941
    9. ' minimale' → logprob: -4.891266822814941
    10. ' de' → logprob: -4.891266822814941

Token 997: ' hash' (ID: 10691)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2779037952423096
    2. 'min' → logprob: -1.2779037952423096
    3. 'p' → logprob: -1.5279037952423096
    4. 'hash' → logprob: -2.0279037952423096
    5. 'h' → logprob: -3.1529037952423096
    6. 'max' → logprob: -3.9029037952423096
    7. 'len' → logprob: -5.1529035568237305
    8. 'minimum' → logprob: -5.2779035568237305
    9. 'i' → logprob: -5.6529035568237305
    10. 'offset' → logprob: -6.4029035568237305

Token 998: ' idéal' (ID: 65736)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.46410608291625977
    2. 'cour' → logprob: -2.0891060829162598
    3. 'cur' → logprob: -2.5891060829162598
    4. 'initial' → logprob: -3.5891060829162598
    5. 'current' → logprob: -3.8391060829162598
    6. 'curr' → logprob: -4.08910608291626
    7. '_final' → logprob: -4.21410608291626
    8. 'du' → logprob: -4.46410608291626
    9. ' =' → logprob: -4.58910608291626
    10. '=' → logprob: -4.83910608291626

Token 999: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3646788597106934
    2. 'final' → logprob: -1.7396788597106934
    3. 'target' → logprob: -1.7396788597106934
    4. ' =' → logprob: -2.3646788597106934
    5. 'initial' → logprob: -2.9896788597106934
    6. 'ideal' → logprob: -3.2396788597106934
    7. '       ' → logprob: -3.3646788597106934
    8. '=' → logprob: -3.6146788597106934
    9. 'id' → logprob: -3.9896788597106934
    10. 'ide' → logprob: -4.114678859710693

Token 1000: 'ap' (ID: 403)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6103161573410034
    2. 'h' → logprob: -0.8603161573410034
    3. ' h' → logprob: -4.610316276550293
    4. ' hashes' → logprob: -4.860316276550293
    5. 's' → logprob: -5.360316276550293
    6. '(h' → logprob: -5.610316276550293
    7. '   ' → logprob: -5.985316276550293
    8. '0' → logprob: -6.485316276550293
    9. 'ans' → logprob: -6.985316276550293
    10. ' s' → logprob: -7.110316276550293

Token 1001: 'rès' (ID: 48817)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.5171916484832764
    2. 'p' → logprob: -1.8921916484832764
    3. 'rès' → logprob: -2.3921916484832764
    4. '=' → logprob: -3.0171916484832764
    5. 'r' → logprob: -3.6421916484832764
    6. ' =' → logprob: -4.2671918869018555
    7. '[' → logprob: -4.3921918869018555
    8. ']' → logprob: -4.6421918869018555
    9. 's' → logprob: -5.1421918869018555
    10. ')' → logprob: -5.1421918869018555

Token 1002: ' toutes' (ID: 17502)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8359297513961792
    2. 'n' → logprob: -1.3359297513961792
    3. 'l' → logprob: -1.9609297513961792
    4. 't' → logprob: -2.2109298706054688
    5. 's' → logprob: -4.585929870605469
    6. 'len' → logprob: -4.835929870605469
    7. 'der' → logprob: -4.835929870605469
    8. 'le' → logprob: -5.085929870605469
    9. 'les' → logprob: -5.335929870605469
    10. 'dern' → logprob: -5.710929870605469

Token 1003: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1257039308547974
    2. 'instructions' → logprob: -1.2507039308547974
    3. ' les' → logprob: -2.500703811645508
    4. ')' → logprob: -2.750703811645508
    5. 'l' → logprob: -3.000703811645508
    6. 'i' → logprob: -3.125703811645508
    7. ' instructions' → logprob: -4.000703811645508
    8. 'op' → logprob: -4.000703811645508
    9. ' opérations' → logprob: -4.000703811645508
    10. ' i' → logprob: -4.250703811645508

Token 1004: ' opérations' (ID: 102793)
  Prédit: 'instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instructions' → logprob: -0.1932590901851654
    2. 'it' → logprob: -2.3182590007781982
    3. 'op' → logprob: -3.3182590007781982
    4. ' instructions' → logprob: -3.6932590007781982
    5. ' opérations' → logprob: -4.818259239196777
    6. 'operations' → logprob: -6.693259239196777
    7. ' it' → logprob: -6.818259239196777
    8. '
' → logprob: -7.193259239196777
    9. 'i' → logprob: -7.443259239196777
    10. ' ' → logprob: -7.568259239196777

Token 1005: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5615256428718567
    2. ',' → logprob: -1.936525583267212
    3. 'final' → logprob: -2.186525583267212
    4. 's' → logprob: -3.811525583267212
    5. '       ' → logprob: -4.061525821685791
    6. 'du' → logprob: -4.186525821685791
    7. '[' → logprob: -4.311525821685791
    8. '[i' → logprob: -4.436525821685791
    9. '),' → logprob: -4.686525821685791
    10. '   ' → logprob: -4.811525821685791

Token 1006: ' à' (ID: 1221)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.47233590483665466
    2. 'target' → logprob: -1.972335934638977
    3. 'ideal' → logprob: -2.9723358154296875
    4. 'h' → logprob: -3.0973358154296875
    5. 'goal' → logprob: -3.0973358154296875
    6. 't' → logprob: -3.8473358154296875
    7. '       ' → logprob: -4.5973358154296875
    8. '   ' → logprob: -4.9723358154296875
    9. ' =' → logprob: -5.2223358154296875
    10. 'v' → logprob: -5.3473358154296875

Token 1007: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3524748384952545
    2. 'i' → logprob: -1.6024748086929321
    3. 'hash' → logprob: -3.2274749279022217
    4. 'pow' → logprob: -3.8524749279022217
    5. 's' → logprob: -4.477474689483643
    6. 'h' → logprob: -5.352474689483643
    7. 'ans' → logprob: -5.602474689483643
    8. 'indices' → logprob: -5.977474689483643
    9. 'position' → logprob: -6.102474689483643
    10. 'p' → logprob: -6.227474689483643

Token 1008: ' fin' (ID: 2131)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8330650925636292
    2. 'position' → logprob: -1.4580650329589844
    3. '0' → logprob: -2.2080650329589844
    4. 'pos' → logprob: -2.4580650329589844
    5. 'n' → logprob: -2.8330650329589844
    6. 's' → logprob: -4.583065032958984
    7. 'final' → logprob: -4.583065032958984
    8. '```' → logprob: -4.833065032958984
    9. 'end' → logprob: -5.208065032958984
    10. 'positions' → logprob: -5.458065032958984

Token 1009: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.289204716682434
    2. '=' → logprob: -1.414204716682434
    3. 'h' → logprob: -1.539204716682434
    4. '       ' → logprob: -1.664204716682434
    5. 'ans' → logprob: -4.4142045974731445
    6. '   ' → logprob: -4.6642045974731445
    7. '[' → logprob: -5.0392045974731445
    8. 'hash' → logprob: -5.1642045974731445
    9. ':' → logprob: -5.4142045974731445
    10. ',' → logprob: -5.5392045974731445

Token 1010: ' parcours' (ID: 62625)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20555852353572845
    2. 'for' → logprob: -1.8305585384368896
    3. 'range' → logprob: -3.8305585384368896
    4. ' for' → logprob: -6.9555583000183105
    5. ' s' → logprob: -7.3305583000183105
    6. 'chaine' → logprob: -7.8305583000183105
    7. '#' → logprob: -8.080558776855469
    8. '```' → logprob: -8.330558776855469
    9. 'bou' → logprob: -8.330558776855469
    10. 'string' → logprob: -8.580558776855469

Token 1011: ' de' (ID: 334)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.9020007252693176
    2. ' =' → logprob: -1.1520006656646729
    3. 'h' → logprob: -2.152000665664673
    4. '=' → logprob: -2.527000665664673
    5. 'target' → logprob: -4.152000904083252
    6. '       ' → logprob: -4.527000904083252
    7. 'ideal' → logprob: -4.777000904083252
    8. ' final' → logprob: -4.902000904083252
    9. ',' → logprob: -5.527000904083252
    10. 'v' → logprob: -5.777000904083252

Token 1012: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39080995321273804
    2. 'la' → logprob: -1.2658100128173828
    3. ' la' → logprob: -3.640810012817383
    4. 'range' → logprob: -5.015810012817383
    5. ' s' → logprob: -5.140810012817383
    6. 'l' → logprob: -6.640810012817383
    7. 'def' → logprob: -7.640810012817383
    8. 'for' → logprob: -8.140810012817383
    9. ' range' → logprob: -8.390810012817383
    10. '#' → logprob: -9.140810012817383

Token 1013: '.
' (ID: 558)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.5100398659706116
    2. 'h' → logprob: -2.260039806365967
    3. '       ' → logprob: -2.885039806365967
    4. ' =' → logprob: -3.260039806365967
    5. 'target' → logprob: -3.385039806365967
    6. ',' → logprob: -3.385039806365967
    7. '.' → logprob: -3.510039806365967
    8. ' final' → logprob: -3.885039806365967
    9. '[' → logprob: -4.260039806365967
    10. '_final' → logprob: -4.260039806365967

Token 1014: '       ' (ID: 309)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.339071273803711
    2. 'ideal' → logprob: -1.339071273803711
    3. 'h' → logprob: -1.714071273803711
    4. 'target' → logprob: -2.339071273803711
    5. '   ' → logprob: -2.839071273803711
    6. 'goal' → logprob: -3.339071273803711
    7. 'hash' → logprob: -3.964071273803711
    8. 't' → logprob: -4.839071273803711
    9. 'val' → logprob: -4.964071273803711
    10. 'end' → logprob: -5.089071273803711

Token 1015: ' ideal' (ID: 9064)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8023393750190735
    2. 'target' → logprob: -2.0523393154144287
    3. 'ideal' (adapté à ' ideal') → logprob: -2.0523393154144287
    4. 'final' → logprob: -2.5523393154144287
    5. 'goal' → logprob: -3.1773393154144287
    6. 'hash' → logprob: -3.3023393154144287
    7. '   ' → logprob: -3.6773393154144287
    8. 'hs' → logprob: -4.427339553833008
    9. 'H' → logprob: -4.552339553833008
    10. 'end' → logprob: -4.927339553833008

Token 1016: ' =' (ID: 314)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.653580904006958
    2. '_h' → logprob: -0.903580904006958
    3. ' =' → logprob: -3.028580904006958
    4. '_' → logprob: -4.028580665588379
    5. '=' → logprob: -4.903580665588379
    6. 'Hash' → logprob: -8.153580665588379
    7. 'h' → logprob: -8.278580665588379
    8. '_val' → logprob: -9.278580665588379
    9. '_H' → logprob: -9.528580665588379
    10. 'hash' → logprob: -9.653580665588379

Token 1017: ' hashes' (ID: 131101)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8569097518920898
    2. ' hashes' → logprob: -1.2319097518920898
    3. ' h' → logprob: -1.9819097518920898
    4. 'hash' → logprob: -2.10690975189209
    5. '(h' → logprob: -3.73190975189209
    6. ' (' → logprob: -8.48190975189209
    7. ' hash' → logprob: -9.98190975189209
    8. 'Hashes' → logprob: -10.23190975189209
    9. '(' → logprob: -10.54440975189209
    10. '   ' → logprob: -10.66940975189209

Token 1018: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25250548124313354
    2. '[n' → logprob: -1.5025055408477783
    3. '[len' → logprob: -8.3775053024292
    4. '[' → logprob: -8.7525053024292
    5. '[i' → logprob: -9.5025053024292
    6. '```' → logprob: -9.6275053024292
    7. '
' → logprob: -12.0025053024292
    8. '[end' → logprob: -12.0025053024292
    9. '[m' → logprob: -12.1275053024292
    10. 'n' → logprob: -12.3775053024292

Token 1019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '0' → logprob: -15.125004768371582
    5. '``' → logprob: -15.500004768371582
    6. '   ' → logprob: -16.0000057220459
    7. '`' → logprob: -16.4375057220459
    8. '
' → logprob: -16.4375057220459
    9. '2' → logprob: -17.0625057220459
    10. '...' → logprob: -17.1250057220459

Token 1020: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011080360971391201
    2. ']
' → logprob: -4.636080265045166
    3. ' ]' → logprob: -6.886080265045166
    4. ')' → logprob: -9.011080741882324
    5. '   ' → logprob: -9.886080741882324
    6. '       ' → logprob: -10.261080741882324
    7. ']
' → logprob: -10.886080741882324
    8. '[' → logprob: -11.136080741882324
    9. ')]' → logprob: -11.261080741882324
    10. ' ]
' → logprob: -11.386080741882324

Token 1021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00828996766358614
    2. '   ' → logprob: -5.383289813995361
    3. 'for' → logprob: -5.883289813995361
    4. '```' → logprob: -7.633289813995361
    5. '           ' → logprob: -8.75829029083252
    6. '
' → logprob: -9.13329029083252
    7. ' for' → logprob: -9.25829029083252
    8. '        
' → logprob: -11.00829029083252
    9. '#' → logprob: -12.75829029083252
    10. 'if' → logprob: -13.13329029083252

Token 1022: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11587850004434586
    2. '       ' → logprob: -2.3658785820007324
    3. '   ' → logprob: -4.865878582000732
    4. '```' → logprob: -5.615878582000732
    5. ' for' → logprob: -6.490878582000732
    6. '#' (adapté à ' #') → logprob: -7.115878582000732
    7. 'offset' → logprob: -8.115878105163574
    8. 'start' → logprob: -8.115878105163574
    9. 'prefix' → logprob: -8.240878105163574
    10. 'indices' → logprob: -9.115878105163574

Token 1023: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2444310337305069
    2. 'dp' → logprob: -2.7444310188293457
    3. 'seen' → logprob: -3.4944310188293457
    4. 'freq' → logprob: -4.119431018829346
    5. 'count' → logprob: -4.244431018829346
    6. '       ' → logprob: -4.244431018829346
    7. 'mp' → logprob: -4.744431018829346
    8. 'positions' → logprob: -4.994431018829346
    9. '#' → logprob: -5.119431018829346
    10. 'counts' → logprob: -5.119431018829346

Token 1024: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04614569991827011
    2. 'continue' → logprob: -4.046145915985107
    3. '#' → logprob: -4.421145915985107
    4. 'range' → logprob: -4.921145915985107
    5. 'from' → logprob: -5.921145915985107
    6. ' for' → logprob: -5.921145915985107
    7. ' #' → logprob: -7.421145915985107
    8. '=' → logprob: -7.796145915985107
    9. '
' → logprob: -7.921145915985107
    10. '       ' → logprob: -8.29614543914795

Token 1025: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.10193084925413132
    2. 'mp' → logprob: -2.976930856704712
    3. ' un' → logprob: -3.726930856704712
    4. 'une' → logprob: -4.851930618286133
    5. 'default' → logprob: -5.101930618286133
    6. 'a' → logprob: -5.226930618286133
    7. 'd' → logprob: -6.351930618286133
    8. 'hash' → logprob: -8.976930618286133
    9. ' une' → logprob: -9.101930618286133
    10. ' a' → logprob: -9.101930618286133

Token 1026: ' diction' (ID: 155259)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.00011391390580683947
    2. 'd' → logprob: -10.250113487243652
    3. 'dictionary' → logprob: -10.750113487243652
    4. ' defaultdict' → logprob: -11.250113487243652
    5. 'dict' → logprob: -11.500113487243652
    6. 'mapping' → logprob: -12.000113487243652
    7. '
' → logprob: -12.250113487243652
    8. ' default' → logprob: -12.375113487243652
    9. 'counter' → logprob: -13.125113487243652
    10. 'hash' → logprob: -13.250113487243652

Token 1027: 'naire' (ID: 30464)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.005041390657424927
    2. 'naire' → logprob: -5.755041599273682
    3. '{' → logprob: -6.880041599273682
    4. 'ct' → logprob: -8.255041122436523
    5. 'art' → logprob: -8.755041122436523
    6. 'default' → logprob: -9.005041122436523
    7. '{
' → logprob: -9.880041122436523
    8. '{"' → logprob: -10.005041122436523
    9. '```' → logprob: -10.005041122436523
    10. 'aire' → logprob: -10.380041122436523

Token 1028: ' avec' (ID: 3937)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.5310671925544739
    2. 'default' → logprob: -1.656067132949829
    3. '=' → logprob: -2.781067132949829
    4. 'd' → logprob: -2.781067132949829
    5. 'hash' → logprob: -3.531067132949829
    6. ' defaultdict' → logprob: -4.031067371368408
    7. ' =' → logprob: -4.406067371368408
    8. ' mp' → logprob: -4.656067371368408
    9. 'de' → logprob: -4.906067371368408
    10. 'def' → logprob: -5.781067371368408

Token 1029: ' valeur' (ID: 41664)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -2.236549335066229e-05
    2. ' defaultdict' → logprob: -11.000021934509277
    3. 'lambda' → logprob: -12.875021934509277
    4. ' default' → logprob: -13.625021934509277
    5. 'int' → logprob: -14.375021934509277
    6. 'def' → logprob: -14.625021934509277
    7. '"default' → logprob: -14.875021934509277
    8. '```' → logprob: -15.875021934509277
    9. 'list' → logprob: -16.125022888183594
    10. ''default' → logprob: -16.375022888183594

Token 1030: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.1579476296901703
    2. ' par' → logprob: -2.282947540283203
    3. 'default' → logprob: -3.782947540283203
    4. 'def' → logprob: -4.532947540283203
    5. ' =' → logprob: -5.282947540283203
    6. '=' → logprob: -6.532947540283203
    7. '_par' → logprob: -7.157947540283203
    8. ' defaultdict' → logprob: -7.657947540283203
    9. '
' → logprob: -8.032947540283203
    10. 'int' → logprob: -8.282947540283203

Token 1031: ' défaut' (ID: 79375)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -9.758300438988954e-05
    2. 'def' → logprob: -9.625097274780273
    3. ' default' → logprob: -11.125097274780273
    4. ' défaut' → logprob: -11.250097274780273
    5. '_default' → logprob: -13.375097274780273
    6. 'dé' → logprob: -14.375097274780273
    7. 'import' → logprob: -14.625097274780273
    8. 'fault' → logprob: -15.500097274780273
    9. '"default' → logprob: -15.625097274780273
    10. 'int' → logprob: -15.625097274780273

Token 1032: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0373694896697998
    2. 'default' → logprob: -1.0373694896697998
    3. 'lambda' → logprob: -2.4123694896698
    4. '(int' → logprob: -2.9123694896698
    5. ' =' → logprob: -3.1623694896698
    6. 'int' → logprob: -3.1623694896698
    7. '(lambda' → logprob: -3.6623694896698
    8. '=lambda' → logprob: -4.287369728088379
    9. 'ans' → logprob: -4.537369728088379
    10. '=int' → logprob: -4.912369728088379

Token 1033: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8702008128166199
    2. '=lambda' → logprob: -1.2452008724212646
    3. '=int' → logprob: -2.2452008724212646
    4. 'lambda' → logprob: -2.4952008724212646
    5. 'list' → logprob: -2.6202008724212646
    6. '=list' → logprob: -4.2452006340026855
    7. '(lambda' → logprob: -5.3702006340026855
    8. '[int' → logprob: -5.9952006340026855
    9. 'def' → logprob: -6.1202006340026855
    10. '<int' → logprob: -6.1202006340026855

Token 1034: ' pour' (ID: 1930)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.7707353830337524
    2. '       ' → logprob: -2.270735263824463
    3. '(mp' → logprob: -2.270735263824463
    4. '=' → logprob: -2.395735263824463
    5. ' mp' → logprob: -2.520735263824463
    6. ' =' → logprob: -2.895735263824463
    7. '()' → logprob: -3.645735263824463
    8. ',' → logprob: -4.020735263824463
    9. 'default' → logprob: -4.020735263824463
    10. ':' → logprob: -4.645735263824463

Token 1035: ' compter' (ID: 81694)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.2683645486831665
    2. 'mp' → logprob: -2.393364429473877
    3. 'int' → logprob: -2.768364429473877
    4. 'pos' → logprob: -3.893364429473877
    5. 'positions' → logprob: -4.393364429473877
    6. 'stock' → logprob: -4.768364429473877
    7. 'hash' → logprob: -5.018364429473877
    8. 'collections' → logprob: -5.018364429473877
    9. 'count' → logprob: -5.518364429473877
    10. 'store' → logprob: -5.643364429473877

Token 1036: ' l' (ID: 305)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6158095002174377
    2. 'les' → logprob: -1.615809440612793
    3. 'default' → logprob: -2.865809440612793
    4. 'ans' → logprob: -3.365809440612793
    5. 'counts' → logprob: -3.740809440612793
    6. 'la' → logprob: -3.990809440612793
    7. 'le' → logprob: -4.490809440612793
    8. 'd' → logprob: -4.740809440612793
    9. 'positions' → logprob: -4.740809440612793
    10. 'mp' → logprob: -4.740809440612793

Token 1037: '’occ' (ID: 126550)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.343587040901184
    2. 'hash' → logprob: -1.468587040901184
    3. 'ans' → logprob: -1.468587040901184
    4. 'h' → logprob: -2.4685869216918945
    5. 'default' → logprob: -3.7185869216918945
    6. 'pos' → logprob: -4.0935869216918945
    7. '[' → logprob: -4.4685869216918945
    8. '```' → logprob: -4.5935869216918945
    9. '[h' → logprob: -4.5935869216918945
    10. 'ef' → logprob: -5.0935869216918945

Token 1038: 'urrence' (ID: 29194)
  Prédit: 'urrences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.08138690888881683
    2. 'curr' → logprob: -3.2063868045806885
    3. 'urrence' → logprob: -4.456387042999268
    4. 'ur' → logprob: -4.456387042999268
    5. 'urrent' → logprob: -4.831387042999268
    6. 'urr' → logprob: -5.331387042999268
    7. 'ount' → logprob: -8.08138656616211
    8. 'ounter' → logprob: -8.20638656616211
    9. 'urrency' → logprob: -8.20638656616211
    10. 'urrencies' → logprob: -8.70638656616211

Token 1039: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1603652685880661
    2. '=' → logprob: -2.910365343093872
    3. ' =' → logprob: -4.160365104675293
    4. '       ' → logprob: -4.285365104675293
    5. ')' → logprob: -4.535365104675293
    6. ' de' → logprob: -4.785365104675293
    7. 'd' → logprob: -4.785365104675293
    8. 'des' → logprob: -4.785365104675293
    9. 'de' → logprob: -4.910365104675293
    10. ']' → logprob: -5.285365104675293

Token 1040: ' conditions' (ID: 6409)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6143115162849426
    2. 'positions' → logprob: -1.2393114566802979
    3. 'indices' → logprob: -2.614311456680298
    4. ' hashes' → logprob: -3.739311456680298
    5. 'pos' → logprob: -3.864311456680298
    6. ' positions' → logprob: -4.114311695098877
    7. ' hash' → logprob: -4.739311695098877
    8. 'h' → logprob: -5.114311695098877
    9. ' indices' → logprob: -5.239311695098877
    10. 'keys' → logprob: -5.614311695098877

Token 1041: ' requ' (ID: 7028)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7264723777770996
    2. 'd' → logprob: -1.6014723777770996
    3. 'hash' → logprob: -2.2264723777770996
    4. 'default' → logprob: -2.8514723777770996
    5. 'mp' → logprob: -3.3514723777770996
    6. 'de' → logprob: -3.8514723777770996
    7. '=' → logprob: -4.2264723777771
    8. 'dp' → logprob: -4.6014723777771
    9. '   ' → logprob: -4.7264723777771
    10. 'positions' → logprob: -5.2264723777771

Token 1042: 'ises' (ID: 5555)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.9499817490577698
    2. 'ef' → logprob: -1.199981689453125
    3. '   ' → logprob: -2.824981689453125
    4. '       ' → logprob: -2.824981689453125
    5. '=' → logprob: -3.449981689453125
    6. '           ' → logprob: -3.699981689453125
    7. 'ues' → logprob: -3.699981689453125
    8. 'éf' → logprob: -3.949981689453125
    9. 'ault' → logprob: -4.074981689453125
    10. '               ' → logprob: -4.324981689453125

Token 1043: '.
' (ID: 558)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.1596041917800903
    2. 'd' → logprob: -1.6596041917800903
    3. 'default' → logprob: -2.159604072570801
    4. '       ' → logprob: -2.409604072570801
    5. '=' → logprob: -2.909604072570801
    6. 'hash' → logprob: -3.034604072570801
    7. ' =' → logprob: -3.409604072570801
    8. '   ' → logprob: -3.659604072570801
    9. ',' → logprob: -3.784604072570801
    10. 'ans' → logprob: -4.159604072570801

Token 1044: '       ' (ID: 309)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.5098022818565369
    2. 'pos' → logprob: -3.0098023414611816
    3. 'seen' → logprob: -3.0098023414611816
    4. 'count' → logprob: -3.1348023414611816
    5. 'dp' → logprob: -3.3848023414611816
    6. 'counts' → logprob: -3.5098023414611816
    7. 'freq' → logprob: -3.5098023414611816
    8. 'positions' → logprob: -3.6348023414611816
    9. ' mp' → logprob: -3.8848023414611816
    10. 'hash' → logprob: -4.009802341461182

Token 1045: ' required' (ID: 3759)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.5925572514533997
    2. 'count' → logprob: -2.342557191848755
    3. 'cnt' → logprob: -2.342557191848755
    4. 'counts' → logprob: -2.592557191848755
    5. 'freq' → logprob: -2.842557191848755
    6. 'd' → logprob: -3.467557191848755
    7. 'seen' → logprob: -4.217557430267334
    8. 'pos' → logprob: -4.467557430267334
    9. 'dp' → logprob: -4.592557430267334
    10. 'counter' → logprob: -4.592557430267334

Token 1046: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1279040277004242
    2. ' =' → logprob: -2.127903938293457
    3. '_counts' → logprob: -7.252903938293457
    4. '_positions' → logprob: -9.877903938293457
    5. '_hash' → logprob: -10.127903938293457
    6. 's' → logprob: -10.377903938293457
    7. 'counts' → logprob: -10.752903938293457
    8. '_conditions' → logprob: -10.877903938293457
    9. 'hash' → logprob: -11.127903938293457
    10. '```' → logprob: -11.252903938293457

Token 1047: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0009138475870713592
    2. ' defaultdict' → logprob: -7.000913619995117
    3. '(default' → logprob: -14.125913619995117
    4. ' default' → logprob: -14.125913619995117
    5. '.default' → logprob: -15.500913619995117
    6. '   ' → logprob: -15.625913619995117
    7. '"default' → logprob: -15.625913619995117
    8. ''default' → logprob: -16.625913619995117
    9. '=' → logprob: -16.875913619995117
    10. '0' → logprob: -17.000913619995117

Token 1048: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16209158301353455
    2. 'int' → logprob: -1.912091612815857
    3. '(lambda' → logprob: -6.5370917320251465
    4. 'lambda' → logprob: -8.662091255187988
    5. '<int' → logprob: -8.787091255187988
    6. '[int' → logprob: -9.537091255187988
    7. ':int' → logprob: -11.662091255187988
    8. ',int' → logprob: -12.412091255187988
    9. '```' → logprob: -12.662091255187988
    10. '=int' → logprob: -13.537091255187988

Token 1049: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002799279463943094
    2. ' :' → logprob: -8.500280380249023
    3. '0' → logprob: -9.500280380249023
    4. ':int' → logprob: -13.875280380249023
    5. 'int' → logprob: -14.500280380249023
    6. ':
' → logprob: -15.750280380249023
    7. ' ' → logprob: -18.000280380249023
    8. '=' → logprob: -18.250280380249023
    9. '1' → logprob: -18.250280380249023
    10. ' ' → logprob: -19.000280380249023

Token 1050: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20742158591747284
    2. '0' → logprob: -2.0824215412139893
    3. 'n' → logprob: -3.9574215412139893
    4. '-' → logprob: -4.207421779632568
    5. 'float' → logprob: -4.707421779632568
    6. 'int' → logprob: -5.082421779632568
    7. '(' → logprob: -5.207421779632568
    8. '1' → logprob: -5.582421779632568
    9. 'False' → logprob: -7.332421779632568
    10. '100' → logprob: -7.582421779632568

Token 1051: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.49105504155158997
    2. '0' → logprob: -1.1160550117492676
    3. 'float' → logprob: -3.8660550117492676
    4. 'int' → logprob: -4.616055011749268
    5. 'n' → logprob: -4.616055011749268
    6. '(' → logprob: -5.116055011749268
    7. '-' → logprob: -5.241055011749268
    8. '1' → logprob: -6.116055011749268
    9. 'False' → logprob: -6.116055011749268
    10. 'm' → logprob: -7.241055011749268

Token 1052: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008253490086644888
    2. ')
' → logprob: -7.12582540512085
    3. '())' → logprob: -11.625824928283691
    4. ' )' → logprob: -12.500824928283691
    5. '       ' → logprob: -12.875824928283691
    6. '   ' → logprob: -13.000824928283691
    7. ')
' → logprob: -13.375824928283691
    8. ')

' → logprob: -15.000824928283691
    9. '()' → logprob: -15.500824928283691
    10. ')`' → logprob: -15.625824928283691

Token 1053: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06800753623247147
    2. 'for' → logprob: -3.818007469177246
    3. ' for' → logprob: -4.318007469177246
    4. '   ' → logprob: -4.443007469177246
    5. '           ' → logprob: -4.443007469177246
    6. '```' → logprob: -5.943007469177246
    7. '{' → logprob: -6.943007469177246
    8. 'required' → logprob: -7.443007469177246
    9. '<|end|>' → logprob: -7.443007469177246
    10. ')' → logprob: -7.818007469177246

Token 1054: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.546430230140686
    2. '       ' → logprob: -1.171430230140686
    3. ' for' → logprob: -2.5464301109313965
    4. 'required' → logprob: -4.1714301109313965
    5. '{' → logprob: -5.2964301109313965
    6. '```' → logprob: -5.6714301109313965
    7. ')' → logprob: -5.9214301109313965
    8. '   ' → logprob: -6.5464301109313965
    9. '{
' → logprob: -6.9214301109313965
    10. ' required' → logprob: -7.0464301109313965

Token 1055: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3677593767642975
    2. '       ' → logprob: -1.242759346961975
    3. 'required' → logprob: -4.6177592277526855
    4. ' for' → logprob: -5.8677592277526855
    5. '#' → logprob: -6.2427592277526855
    6. 'count' → logprob: -6.6177592277526855
    7. '```' → logprob: -7.3677592277526855
    8. 'counter' → logprob: -8.367759704589844
    9. '   ' → logprob: -8.492759704589844
    10. 'hash' → logprob: -8.617759704589844

Token 1056: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010426650755107403
    2. ' for' → logprob: -5.3854265213012695
    3. '#' → logprob: -5.8854265213012695
    4. 'continue' → logprob: -6.2604265213012695
    5. '
' → logprob: -8.38542652130127
    6. 'clear' → logprob: -8.51042652130127
    7. '       ' → logprob: -8.76042652130127
    8. '=' → logprob: -9.01042652130127
    9. '```' → logprob: -9.26042652130127
    10. 'update' → logprob: -9.88542652130127

Token 1057: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.3301544189453125
    2. 'our' → logprob: -1.7051544189453125
    3. 'ours' → logprob: -2.7051544189453125
    4. 'or' → logprob: -4.5801544189453125
    5. 'urrent' → logprob: -5.3301544189453125
    6. '[' → logprob: -5.5801544189453125
    7. 'orr' → logprob: -5.9551544189453125
    8. 'ounter' → logprob: -6.2051544189453125
    9. '```' → logprob: -6.5801544189453125
    10. '#' → logprob: -6.8301544189453125

Token 1058: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.252080500125885
    2. 'i' → logprob: -2.1270804405212402
    3. 'enumer' → logprob: -2.6270804405212402
    4. ' range' → logprob: -4.00208044052124
    5. ' i' → logprob: -5.62708044052124
    6. '(range' → logprob: -5.75208044052124
    7. '(i' → logprob: -6.00208044052124
    8. ' enumerate' → logprob: -6.37708044052124
    9. 'hash' → logprob: -7.25208044052124
    10. 'pos' → logprob: -8.002080917358398

Token 1059: ' p' (ID: 275)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19418348371982574
    2. ' range' → logprob: -2.694183588027954
    3. 'i' → logprob: -2.819183588027954
    4. 'enumer' → logprob: -3.819183588027954
    5. 'hash' → logprob: -4.194183349609375
    6. 'pos' → logprob: -5.194183349609375
    7. ' i' → logprob: -6.444183349609375
    8. ' enumerate' → logprob: -6.569183349609375
    9. '(range' → logprob: -6.694183349609375
    10. ' hashes' → logprob: -7.569183349609375

Token 1060: 'aires' (ID: 8507)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.12190302461385727
    2. 'range' → logprob: -2.4969029426574707
    3. 'osition' → logprob: -4.496902942657471
    4. 'i' → logprob: -4.746902942657471
    5. 'osit' → logprob: -5.871902942657471
    6. 'pos' → logprob: -6.121902942657471
    7. 'for' → logprob: -6.496902942657471
    8. 'r' → logprob: -6.871902942657471
    9. 'osi' → logprob: -7.496902942657471
    10. ' range' → logprob: -7.621902942657471

Token 1061: ' des' (ID: 731)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7403372526168823
    2. '(pos' → logprob: -1.3653372526168823
    3. 'enumer' → logprob: -2.490337371826172
    4. 'for' → logprob: -3.615337371826172
    5. 'pos' → logprob: -3.740337371826172
    6. ' (' → logprob: -3.865337371826172
    7. 'i' → logprob: -3.990337371826172
    8. '       ' → logprob: -4.115337371826172
    9. ',' → logprob: -4.615337371826172
    10. '((' → logprob: -4.990337371826172

Token 1062: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7752113938331604
    2. 'pos' → logprob: -1.1502113342285156
    3. 'enumer' → logprob: -2.4002113342285156
    4. 'i' → logprob: -3.5252113342285156
    5. ' range' → logprob: -3.7752113342285156
    6. 'zip' → logprob: -4.275211334228516
    7. '(range' → logprob: -4.400211334228516
    8. ' pos' → logprob: -4.525211334228516
    9. 'hash' → logprob: -4.650211334228516
    10. ' i' → logprob: -5.150211334228516

Token 1063: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5109733939170837
    2. '(i' → logprob: -1.8859734535217285
    3. 'et' → logprob: -2.0109734535217285
    4. ' et' → logprob: -3.2609734535217285
    5. '[i' → logprob: -4.1359734535217285
    6. '       ' → logprob: -4.3859734535217285
    7. ',i' → logprob: -4.5109734535217285
    8. '```' → logprob: -5.1359734535217285
    9. '           ' → logprob: -5.5109734535217285
    10. 'enumer' → logprob: -5.5109734535217285

Token 1064: ' des' (ID: 731)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.012661268003284931
    2. ' hashes' → logprob: -4.637661457061768
    3. 'h' → logprob: -6.137661457061768
    4. ' hash' → logprob: -8.38766098022461
    5. '   ' → logprob: -9.38766098022461
    6. ' h' → logprob: -9.88766098022461
    7. '(h' → logprob: -10.01266098022461
    8. 'ha' → logprob: -10.01266098022461
    9. 'hashed' → logprob: -10.38766098022461
    10. '	hash' → logprob: -10.70016098022461

Token 1065: ' has' (ID: 853)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0007811574032530189
    2. ' hashes' → logprob: -7.875781059265137
    3. 'h' → logprob: -8.000781059265137
    4. '(h' → logprob: -10.875781059265137
    5. '_hash' → logprob: -11.625781059265137
    6. ' h' → logprob: -12.125781059265137
    7. '   ' → logprob: -12.375781059265137
    8. '```' → logprob: -12.625781059265137
    9. ' hash' → logprob: -12.875781059265137
    10. 'indices' → logprob: -13.000781059265137

Token 1066: 'hs' (ID: 9467)
  Prédit: 'hes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.09703516215085983
    2. 'es' → logprob: -2.7220351696014404
    3. 'h' → logprob: -3.8470351696014404
    4. 'tes' → logprob: -6.222034931182861
    5. 'ches' → logprob: -6.347034931182861
    6. 'hs' → logprob: -7.847034931182861
    7. '(h' → logprob: -7.847034931182861
    8. 'ses' → logprob: -8.34703540802002
    9. ')' → logprob: -8.59703540802002
    10. 'htags' → logprob: -9.22203540802002

Token 1067: ' calcul' (ID: 7559)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28823816776275635
    2. '       ' → logprob: -2.538238048553467
    3. ':' → logprob: -3.663238048553467
    4. 'enumer' → logprob: -3.663238048553467
    5. '(i' → logprob: -4.038238048553467
    6. '(zip' → logprob: -4.288238048553467
    7. 'en' → logprob: -4.288238048553467
    8. 'in' → logprob: -4.413238048553467
    9. '           ' → logprob: -4.413238048553467
    10. 'for' → logprob: -4.538238048553467

Token 1068: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.0578770637512207
    2. 'ées' → logprob: -1.6828770637512207
    3. ')' → logprob: -2.4328770637512207
    4. '       ' → logprob: -2.6828770637512207
    5. '   ' → logprob: -3.0578770637512207
    6. 'pos' → logprob: -3.4328770637512207
    7. ',' → logprob: -3.6828770637512207
    8. '(pos' → logprob: -3.6828770637512207
    9. '(i' → logprob: -3.9328770637512207
    10. '           ' → logprob: -4.057877063751221

Token 1069: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6233546733856201
    2. '       ' → logprob: -1.6233546733856201
    3. '(zip' → logprob: -2.12335467338562
    4. 'enumer' → logprob: -3.49835467338562
    5. '           ' → logprob: -3.62335467338562
    6. 'for' → logprob: -3.99835467338562
    7. '(i' → logprob: -4.873354911804199
    8. '(' → logprob: -4.998354911804199
    9. 'en' → logprob: -4.998354911804199
    10. '(pos' → logprob: -5.123354911804199

Token 1070: 'ap' (ID: 403)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3917056918144226
    2. 'pos' → logprob: -1.5167057514190674
    3. ' zip' → logprob: -2.8917057514190674
    4. 'enumer' → logprob: -3.6417057514190674
    5. ')' → logprob: -4.891705513000488
    6. '(zip' → logprob: -5.266705513000488
    7. ' pos' → logprob: -5.516705513000488
    8. '   ' → logprob: -6.891705513000488
    9. ' enumerate' → logprob: -7.141705513000488
    10. '```' → logprob: -7.141705513000488

Token 1071: 'rès' (ID: 48817)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -1.041970133781433
    2. 'i' → logprob: -1.416970133781433
    3. 'os' → logprob: -2.6669702529907227
    4. ')' → logprob: -2.6669702529907227
    5. 'r' → logprob: -2.7919702529907227
    6. 'for' → logprob: -2.9169702529907227
    7. '(i' → logprob: -3.4169702529907227
    8. 'air' → logprob: -3.7919702529907227
    9. '```' → logprob: -4.291970252990723
    10. '   ' → logprob: -4.541970252990723

Token 1072: ' chaque' (ID: 21194)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.6949095129966736
    2. 'i' → logprob: -0.9449095129966736
    3. 'each' → logprob: -2.9449095726013184
    4. 'range' → logprob: -3.4449095726013184
    5. ' i' → logprob: -4.569909572601318
    6. ' each' → logprob: -5.944909572601318
    7. ' enumerate' → logprob: -6.069909572601318
    8. ' range' → logprob: -6.444909572601318
    9. '(i' → logprob: -6.444909572601318
    10. ')' → logprob: -6.569909572601318

Token 1073: ' opération' (ID: 86023)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008057031780481339
    2. ' i' → logprob: -5.133057117462158
    3. 'instruction' → logprob: -6.633057117462158
    4. '(i' → logprob: -9.258056640625
    5. '```' → logprob: -9.383056640625
    6. ')' → logprob: -9.508056640625
    7. ',' → logprob: -9.633056640625
    8. '   ' → logprob: -9.758056640625
    9. '
' → logprob: -9.758056640625
    10. ' ' → logprob: -9.883056640625

Token 1074: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.894310474395752
    2. '):' → logprob: -1.269310474395752
    3. ',' → logprob: -1.394310474395752
    4. ')' → logprob: -3.269310474395752
    5. '),' → logprob: -4.519310474395752
    6. 'en' → logprob: -5.769310474395752
    7. '):
' → logprob: -6.019310474395752
    8. '       ' → logprob: -6.394310474395752
    9. 'in' → logprob: -6.644310474395752
    10. ' en' → logprob: -7.019310474395752

Token 1075: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6441812515258789
    2. 'for' → logprob: -1.019181251525879
    3. ' for' → logprob: -2.519181251525879
    4. '       ' → logprob: -4.769181251525879
    5. 'enumer' → logprob: -5.269181251525879
    6. ' (' → logprob: -6.019181251525879
    7. '):
' → logprob: -6.144181251525879
    8. ' pour' → logprob: -6.394181251525879
    9. '(' → logprob: -6.769181251525879
    10. ':' → logprob: -6.769181251525879

Token 1076: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0259394608438015
    2. 'enumer' → logprob: -3.900939464569092
    3. ' i' → logprob: -5.525939464569092
    4. 'pos' → logprob: -8.150938987731934
    5. 'range' → logprob: -8.400938987731934
    6. '(i' → logprob: -8.525938987731934
    7. 'index' → logprob: -8.775938987731934
    8. ' enumerate' → logprob: -9.150938987731934
    9. '```' → logprob: -9.275938987731934
    10. 'zip' → logprob: -9.400938987731934

Token 1077: '’ind' (ID: 65649)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.36004340648651123
    2. 'for' → logprob: -2.485043525695801
    3. 'range' → logprob: -2.610043525695801
    4. 'ambda' → logprob: -2.735043525695801
    5. 'a' → logprob: -3.610043525695801
    6. 'enumer' → logprob: -4.235043525695801
    7. 'e' → logprob: -4.610043525695801
    8. ' for' → logprob: -5.110043525695801
    9. 'ez' → logprob: -5.860043525695801
    10. 'zip' → logprob: -6.360043525695801

Token 1078: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.010098269209265709
    2. 'ices' → logprob: -5.010098457336426
    3. 'ice' → logprob: -5.885098457336426
    4. 'i' → logprob: -8.635098457336426
    5. 'é' → logprob: -8.885098457336426
    6. 'enumer' → logprob: -9.010098457336426
    7. 'exe' → logprob: -10.010098457336426
    8. 'x' → logprob: -10.885098457336426
    9. 'em' → logprob: -11.135098457336426
    10. 'f' → logprob: -11.385098457336426

Token 1079: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3403339982032776
    2. ',' → logprob: -1.3403339385986328
    3. '_,' → logprob: -4.340333938598633
    4. ' i' → logprob: -4.840333938598633
    5. '```' → logprob: -6.590333938598633
    6. 'in' → logprob: -6.840333938598633
    7. ',i' → logprob: -7.465333938598633
    8. ' in' → logprob: -7.465333938598633
    9. 'for' → logprob: -7.715333938598633
    10. 'idx' → logprob: -8.090333938598633

Token 1080: ' correspondant' (ID: 146058)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00788023043423891
    2. 'in' → logprob: -5.382880210876465
    3. ' in' → logprob: -6.257880210876465
    4. '```' → logprob: -7.632880210876465
    5. '           ' → logprob: -8.132880210876465
    6. ' ,' → logprob: -8.757880210876465
    7. 'for' → logprob: -9.507880210876465
    8. '       ' → logprob: -9.632880210876465
    9. ',p' → logprob: -10.507880210876465
    10. ',en' → logprob: -10.882880210876465

Token 1081: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008718223311007023
    2. 'in' → logprob: -5.883718013763428
    3. ' in' → logprob: -6.258718013763428
    4. 'en' → logprob: -7.008718013763428
    5. '(i' → logprob: -7.383718013763428
    6. '```' → logprob: -7.883718013763428
    7. ' ,' → logprob: -8.133718490600586
    8. 'to' → logprob: -8.258718490600586
    9. '           ' → logprob: -8.633718490600586
    10. ' en' → logprob: -8.633718490600586

Token 1082: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8403386473655701
    2. 'for' → logprob: -1.0903387069702148
    3. ' for' → logprob: -1.5903387069702148
    4. '           ' → logprob: -4.215338706970215
    5. '```' → logprob: -4.340338706970215
    6. '   ' → logprob: -7.715338706970215
    7. '``' → logprob: -10.465338706970215
    8. ' if' → logprob: -10.590338706970215
    9. ' ' → logprob: -10.965338706970215
    10. '        
' → logprob: -10.965338706970215

Token 1083: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.062336355447769165
    2. ' for' → logprob: -2.8123364448547363
    3. '   ' → logprob: -8.687335968017578
    4. '```' → logprob: -8.812335968017578
    5. '       ' → logprob: -10.062335968017578
    6. '	for' → logprob: -12.687335968017578
    7. '
' → logprob: -14.062335968017578
    8. 'range' → logprob: -14.187335968017578
    9. '``' → logprob: -14.312335968017578
    10. 'enumer' → logprob: -14.312335968017578

Token 1084: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1345779299736023
    2. ' i' → logprob: -2.259577989578247
    3. ' (' → logprob: -5.009577751159668
    4. 'pos' → logprob: -5.009577751159668
    5. ' pos' → logprob: -6.134577751159668
    6. '(i' → logprob: -6.259577751159668
    7. 'p' → logprob: -6.384577751159668
    8. '(p' → logprob: -6.884577751159668
    9. '(pos' → logprob: -7.384577751159668
    10. ' p' → logprob: -8.259577751159668

Token 1085: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017937049269676208
    2. ' in' → logprob: -6.62679386138916
    3. ' ,' → logprob: -8.12679386138916
    4. 'in' → logprob: -9.50179386138916
    5. ',p' → logprob: -10.75179386138916
    6. '```' → logprob: -12.12679386138916
    7. ',v' → logprob: -12.12679386138916
    8. ',(' → logprob: -12.25179386138916
    9. ',c' → logprob: -12.37679386138916
    10. '_,' → logprob: -12.62679386138916

Token 1086: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.642006516456604
    2. '(pos' → logprob: -1.142006516456604
    3. ' (' → logprob: -2.7670063972473145
    4. '(h' → logprob: -3.0170063972473145
    5. '(ph' → logprob: -4.1420063972473145
    6. '(hash' → logprob: -4.8920063972473145
    7. '(pi' → logprob: -5.2670063972473145
    8. 'pos' → logprob: -5.2670063972473145
    9. 'p' → logprob: -6.1420063972473145
    10. 'h' → logprob: -6.6420063972473145

Token 1087: 'p' (ID: 79)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20357167720794678
    2. 'p' → logprob: -1.7035716772079468
    3. '(pos' → logprob: -6.703571796417236
    4. '(p' → logprob: -7.578571796417236
    5. ' pos' → logprob: -8.078571319580078
    6. ' p' → logprob: -9.578571319580078
    7. 'position' → logprob: -11.578571319580078
    8. ' (' → logprob: -11.828571319580078
    9. 'pi' → logprob: -12.328571319580078
    10. '   ' → logprob: -12.703571319580078

Token 1088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022639709059149027
    2. ',h' → logprob: -6.127264022827148
    3. ' ,' → logprob: -10.127264022827148
    4. ',c' → logprob: -11.752264022827148
    5. 's' → logprob: -12.127264022827148
    6. ',p' → logprob: -12.252264022827148
    7. ',
' → logprob: -12.627264022827148
    8. '),' → logprob: -13.002264022827148
    9. ',)' → logprob: -13.127264022827148
    10. '_,' → logprob: -13.127264022827148

Token 1089: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001061867456883192
    2. ' h' → logprob: -6.876061916351318
    3. 'c' → logprob: -12.37606143951416
    4. 'hash' → logprob: -12.75106143951416
    5. '   ' → logprob: -12.75106143951416
    6. 'hp' → logprob: -12.75106143951416
    7. 'hh' → logprob: -13.12606143951416
    8. 'v' → logprob: -13.12606143951416
    9. '```' → logprob: -13.12606143951416
    10. 'ph' → logprob: -13.37606143951416

Token 1090: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.125210297293961e-05
    2. ' in' → logprob: -10.125081062316895
    3. '),' → logprob: -10.875081062316895
    4. ' )' → logprob: -11.500081062316895
    5. 'in' → logprob: -12.000081062316895
    6. ')
' → logprob: -13.750081062316895
    7. ',' → logprob: -14.125081062316895
    8. '   ' → logprob: -14.500081062316895
    9. '):
' → logprob: -14.500081062316895
    10. '`)' → logprob: -15.250081062316895

Token 1091: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5465861558914185
    2. 'in' → logprob: -1.2965861558914185
    3. ')' → logprob: -1.9215861558914185
    4. ' )' → logprob: -7.921586036682129
    5. '):
' → logprob: -8.546586036682129
    6. '   ' → logprob: -9.296586036682129
    7. '
' → logprob: -9.546586036682129
    8. ' ' → logprob: -9.546586036682129
    9. '),' → logprob: -9.671586036682129
    10. '=' → logprob: -9.796586036682129

Token 1092: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.16368518769741058
    2. ' enumerate' → logprob: -1.9136852025985718
    3. 'zip' → logprob: -5.788685321807861
    4. ' zip' → logprob: -7.913685321807861
    5. 'pos' → logprob: -11.288684844970703
    6. '(zip' → logprob: -12.038684844970703
    7. ' ' → logprob: -12.913684844970703
    8. 'en' → logprob: -13.038684844970703
    9. '
' → logprob: -14.288684844970703
    10. '   ' → logprob: -14.538684844970703

Token 1093: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.5450430512428284
    2. '(pos' → logprob: -1.0450429916381836
    3. 'pos' → logprob: -3.9200429916381836
    4. ' (' → logprob: -4.045042991638184
    5. 'zip' → logprob: -4.295042991638184
    6. '((' → logprob: -4.920042991638184
    7. ' zip' → logprob: -5.920042991638184
    8. 'enumer' → logprob: -6.420042991638184
    9. ')' → logprob: -6.545042991638184
    10. ' pos' → logprob: -6.670042991638184

Token 1094: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.016605738550424576
    2. 'pos' → logprob: -4.141605854034424
    3. ' (' → logprob: -8.641605377197266
    4. ' pos' → logprob: -9.016605377197266
    5. '[pos' → logprob: -9.141605377197266
    6. ',pos' → logprob: -10.266605377197266
    7. ')' → logprob: -10.766605377197266
    8. '(position' → logprob: -10.891605377197266
    9. '           ' → logprob: -10.891605377197266
    10. '   ' → logprob: -11.391605377197266

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00448115449398756
    2. ' ,' → logprob: -6.754481315612793
    3. '[' → logprob: -7.004481315612793
    4. ',pos' → logprob: -7.504481315612793
    5. ',p' → logprob: -7.879481315612793
    6. '   ' → logprob: -8.379481315612793
    7. '       ' → logprob: -8.379481315612793
    8. 's' → logprob: -8.754481315612793
    9. ',s' → logprob: -8.754481315612793
    10. '(),' → logprob: -9.129481315612793

Token 1096: ' hashes' (ID: 131101)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.1643076390028
    2. ' hashes' → logprob: -1.9143075942993164
    3. '   ' → logprob: -6.414307594299316
    4. '           ' → logprob: -7.164307594299316
    5. 'pos' → logprob: -7.664307594299316
    6. '       ' → logprob: -7.789307594299316
    7. ')' → logprob: -8.289307594299316
    8. ' ' → logprob: -9.414307594299316
    9. '[' → logprob: -9.664307594299316
    10. '               ' → logprob: -9.664307594299316

Token 1097: ')):
' (ID: 22530)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.244476318359375
    2. ')):
' → logprob: -3.119476318359375
    3. '):
' → logprob: -3.119476318359375
    4. '):' → logprob: -3.244476318359375
    5. ')):' → logprob: -3.244476318359375
    6. '),' → logprob: -4.119476318359375
    7. '[' → logprob: -4.369476318359375
    8. '()):
' → logprob: -4.994476318359375
    9. '(),' → logprob: -5.244476318359375
    10. '()' → logprob: -5.994476318359375

Token 1098: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9779840707778931
    2. '           ' → logprob: -0.9779840707778931
    3. '```' → logprob: -2.1029839515686035
    4. ',' → logprob: -2.9779839515686035
    5. ':' → logprob: -4.1029839515686035
    6. ' (' → logprob: -4.8529839515686035
    7. '``' → logprob: -4.8529839515686035
    8. '[' → logprob: -4.8529839515686035
    9. ' :' → logprob: -5.1029839515686035
    10. '               ' → logprob: -5.6029839515686035

Token 1099: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40948593616485596
    2. '           ' → logprob: -1.909485936164856
    3. ' if' → logprob: -2.2844858169555664
    4. ' required' → logprob: -3.7844858169555664
    5. 'required' → logprob: -3.7844858169555664
    6. '   ' → logprob: -4.784485816955566
    7. ' key' → logprob: -4.909485816955566
    8. 'if' → logprob: -5.284485816955566
    9. '```' → logprob: -5.659485816955566
    10. ' (' → logprob: -5.909485816955566

Token 1100: ' On' (ID: 2160)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.6027387380599976
    2. 'key' → logprob: -0.9777387380599976
    3. '           ' → logprob: -2.977738857269287
    4. 'offset' → logprob: -5.477738857269287
    5. 'if' → logprob: -5.477738857269287
    6. ' key' → logprob: -5.602738857269287
    7. 'diff' → logprob: -5.852738857269287
    8. '       ' → logprob: -5.852738857269287
    9. ' required' → logprob: -5.977738857269287
    10. '               ' → logprob: -7.102738857269287

Token 1101: ' met' (ID: 1421)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.005362413823604584
    2. ' required' → logprob: -5.630362510681152
    3. 'key' → logprob: -7.255362510681152
    4. '[' → logprob: -8.005362510681152
    5. '#' → logprob: -8.380362510681152
    6. '   ' → logprob: -9.130362510681152
    7. '[
' → logprob: -10.255362510681152
    8. '       ' → logprob: -10.505362510681152
    9. '(required' → logprob: -10.505362510681152
    10. ' key' → logprob: -10.505362510681152

Token 1102: ' à' (ID: 1221)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.08086852729320526
    2. '(required' → logprob: -3.2058684825897217
    3. ' required' → logprob: -3.4558684825897217
    4. '   ' → logprob: -5.455868721008301
    5. ' (' → logprob: -7.705868721008301
    6. 'à' → logprob: -8.8308687210083
    7. 'requ' → logprob: -9.0808687210083
    8. '((' → logprob: -9.2058687210083
    9. ' à' → logprob: -9.3308687210083
    10. '#' → logprob: -9.4558687210083

Token 1103: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.005371429491788149
    2. ' jour' → logprob: -5.630371570587158
    3. 'required' → logprob: -6.755371570587158
    4. 'jours' → logprob: -7.630371570587158
    5. 'day' → logprob: -9.75537109375
    6. 'Jour' → logprob: -10.50537109375
    7. '```' → logprob: -12.13037109375
    8. 'la' → logprob: -12.13037109375
    9. '
' → logprob: -12.25537109375
    10. ' jours' → logprob: -12.88037109375

Token 1104: ' pour' (ID: 1930)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.007421337068080902
    2. ' required' → logprob: -5.382421493530273
    3. '(required' → logprob: -6.132421493530273
    4. '[' → logprob: -8.507421493530273
    5. '   ' → logprob: -8.757421493530273
    6. '[(' → logprob: -9.132421493530273
    7. 'ans' → logprob: -10.007421493530273
    8. 'h' → logprob: -10.757421493530273
    9. '	required' → logprob: -11.632421493530273
    10. '(' → logprob: -11.632421493530273

Token 1105: ' chaque' (ID: 21194)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1737278699874878
    2. 'required' → logprob: -1.2987278699874878
    3. 'p' → logprob: -1.7987278699874878
    4. 'h' → logprob: -2.5487279891967773
    5. '(h' → logprob: -2.6737279891967773
    6. '(required' → logprob: -3.2987279891967773
    7. ' (' → logprob: -4.298727989196777
    8. ' required' → logprob: -4.673727989196777
    9. '[p' → logprob: -4.923727989196777
    10. ' p' → logprob: -5.048727989196777

Token 1106: ' position' (ID: 4010)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06703133881092072
    2. ' (' → logprob: -3.0670313835144043
    3. '(pos' → logprob: -5.067031383514404
    4. 'required' → logprob: -5.442031383514404
    5. '(position' → logprob: -6.442031383514404
    6. 'pos' → logprob: -6.567031383514404
    7. '(required' → logprob: -6.567031383514404
    8. 'p' → logprob: -6.817031383514404
    9. 'position' → logprob: -6.942031383514404
    10. '(h' → logprob: -7.567031383514404

Token 1107: ' la' (ID: 557)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.43155959248542786
    2. '           ' → logprob: -2.0565595626831055
    3. '[' → logprob: -2.8065595626831055
    4. '[pos' → logprob: -3.5565595626831055
    5. '][' → logprob: -3.6815595626831055
    6. '[h' → logprob: -3.8065595626831055
    7. ',' → logprob: -4.0565595626831055
    8. '[(' → logprob: -4.4315595626831055
    9. 'p' → logprob: -4.5565595626831055
    10. '```' → logprob: -4.9315595626831055

Token 1108: ' plus' (ID: 2932)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.04555375128984451
    2. 'ans' → logprob: -4.170553684234619
    3. ' required' → logprob: -4.170553684234619
    4. 'if' → logprob: -4.920553684234619
    5. 'min' → logprob: -5.670553684234619
    6. ' min' → logprob: -7.295553684234619
    7. ' if' → logprob: -7.420553684234619
    8. ' ans' → logprob: -8.295554161071777
    9. 'key' → logprob: -8.420554161071777
    10. 'max' → logprob: -8.545554161071777

Token 1109: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.21320898830890656
    2. ' petite' → logprob: -2.2132089138031006
    3. 'small' → logprob: -2.8382089138031006
    4. 'b' → logprob: -5.33820915222168
    5. ' petit' → logprob: -5.33820915222168
    6. 'ans' → logprob: -5.71320915222168
    7. 'min' → logprob: -6.08820915222168
    8. '   ' → logprob: -6.33820915222168
    9. ' faible' → logprob: -6.33820915222168
    10. ' small' → logprob: -6.46320915222168

Token 1110: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23175859451293945
    2. ' ans' → logprob: -1.6067585945129395
    3. 'value' → logprob: -5.7317585945129395
    4. ' value' → logprob: -6.4817585945129395
    5. '(ans' → logprob: -6.9817585945129395
    6. 'val' → logprob: -8.356758117675781
    7. '```' → logprob: -9.606758117675781
    8. ' valeur' → logprob: -9.856758117675781
    9. '
' → logprob: -9.981758117675781
    10. 'answer' → logprob: -9.981758117675781

Token 1111: ' déjà' (ID: 21229)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10701818764209747
    2. ' ans' → logprob: -2.732018232345581
    3. '           ' → logprob: -4.232017993927002
    4. '(ans' → logprob: -4.482017993927002
    5. 'min' → logprob: -6.482017993927002
    6. 'possible' → logprob: -6.607017993927002
    7. 'de' → logprob: -6.607017993927002
    8. '   ' → logprob: -6.732017993927002
    9. '       ' → logprob: -7.232017993927002
    10. ' de' → logprob: -7.857017993927002

Token 1112: ' rencontr' (ID: 49751)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19970659911632538
    2. 'stock' → logprob: -2.574706554412842
    3. 'vue' → logprob: -4.324706554412842
    4. 'conn' → logprob: -4.324706554412842
    5. 'en' → logprob: -4.449706554412842
    6. 'atte' → logprob: -4.574706554412842
    7. 'ob' → logprob: -4.824706554412842
    8. 'con' → logprob: -4.949706554412842
    9. 'tr' → logprob: -5.699706554412842
    10. 'ren' → logprob: -5.824706554412842

Token 1113: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.014317512512207
    2. 'vue' → logprob: -1.389317512512207
    3. 'e' → logprob: -2.389317512512207
    4. '   ' → logprob: -2.389317512512207
    5. 'enc' → logprob: -2.764317512512207
    6. 'ren' → logprob: -2.889317512512207
    7. 'urée' → logprob: -3.889317512512207
    8. '       ' → logprob: -4.389317512512207
    9. 'enue' → logprob: -4.639317512512207
    10. 'ur' → logprob: -4.764317512512207

Token 1114: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09010715037584305
    2. '           ' → logprob: -4.090106964111328
    3. '[' → logprob: -4.215106964111328
    4. '```' → logprob: -4.465106964111328
    5. ' ans' → logprob: -4.715106964111328
    6. 'possible' → logprob: -5.340106964111328
    7. ',' → logprob: -5.340106964111328
    8. 'pour' → logprob: -5.965106964111328
    9. '               ' → logprob: -6.090106964111328
    10. 'if' → logprob: -6.340106964111328

Token 1115: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8655921220779419
    2. 'p' → logprob: -1.240592122077942
    3. 'ans' → logprob: -2.1155920028686523
    4. 'h' → logprob: -2.3655920028686523
    5. 'min' → logprob: -4.365592002868652
    6. '```' → logprob: -4.365592002868652
    7. 'c' → logprob: -4.615592002868652
    8. 'pos' → logprob: -4.740592002868652
    9. '(i' → logprob: -4.865592002868652
    10. '(p' → logprob: -5.615592002868652

Token 1116: ' position' (ID: 4010)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.37360602617263794
    2. 'position' → logprob: -1.7486059665679932
    3. ']' → logprob: -2.873605966567993
    4. 'pos' → logprob: -3.873605966567993
    5. 'i' → logprob: -3.998605966567993
    6. '```' → logprob: -4.498606204986572
    7. '(p' → logprob: -4.623606204986572
    8. ' p' → logprob: -5.373606204986572
    9. ')' → logprob: -5.873606204986572
    10. '[' → logprob: -6.373606204986572

Token 1117: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9099001884460449
    2. 'ans' → logprob: -1.409900188446045
    3. 'if' → logprob: -1.659900188446045
    4. ',' → logprob: -3.284900188446045
    5. ' if' → logprob: -3.659900188446045
    6. ':' → logprob: -3.784900188446045
    7. '[' → logprob: -3.784900188446045
    8. '```' → logprob: -4.409900188446045
    9. ' ans' → logprob: -5.034900188446045
    10. '               ' → logprob: -5.034900188446045

Token 1118: ' hash' (ID: 10691)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38525670766830444
    2. 'ans' → logprob: -1.3852567672729492
    3. 'pos' → logprob: -3.885256767272949
    4. 'p' → logprob: -4.010256767272949
    5. 'required' → logprob: -5.010256767272949
    6. ' i' → logprob: -5.260256767272949
    7. 'l' → logprob: -5.260256767272949
    8. ' ans' → logprob: -5.385256767272949
    9. 'h' → logprob: -5.635256767272949
    10. '```' → logprob: -7.010256767272949

Token 1119: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3347898721694946
    2. '           ' → logprob: -1.3347898721694946
    3. '[h' → logprob: -2.209789752960205
    4. '               ' → logprob: -2.959789752960205
    5. '[min' → logprob: -3.084789752960205
    6. 's' → logprob: -3.209789752960205
    7. 'required' → logprob: -3.209789752960205
    8. '][' → logprob: -3.834789752960205
    9. '[p' → logprob: -3.834789752960205
    10. 'ans' → logprob: -4.084789752960205

Token 1120: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1022791862487793
    2. 'if' → logprob: -1.6022791862487793
    3. ' if' → logprob: -1.8522791862487793
    4. '```' → logprob: -1.8522791862487793
    5. ' ans' → logprob: -2.4772791862487793
    6. '           ' → logprob: -3.1022791862487793
    7. '``' → logprob: -4.852279186248779
    8. '               ' → logprob: -5.227279186248779
    9. ')' → logprob: -6.852279186248779
    10. ' ' → logprob: -7.102279186248779

Token 1121: '[i' (ID: 1768)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.07850842922925949
    2. '[h' → logprob: -2.7035083770751953
    3. '[min' → logprob: -5.828508377075195
    4. '[' → logprob: -6.078508377075195
    5. '[i' → logprob: -6.203508377075195
    6. '[pos' → logprob: -7.328508377075195
    7. '=' → logprob: -8.703508377075195
    8. '[
' → logprob: -8.953508377075195
    9. ' =' → logprob: -9.203508377075195
    10. '```' → logprob: -9.578508377075195

Token 1122: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1702187955379486
    2. ']=' → logprob: -2.0452187061309814
    3. '],' → logprob: -4.9202189445495605
    4. '[p' → logprob: -5.1702189445495605
    5. '=' → logprob: -5.2952189445495605
    6. ' =' → logprob: -5.9202189445495605
    7. '])' → logprob: -6.0452189445495605
    8. ']==' → logprob: -6.6702189445495605
    9. '][' → logprob: -7.1702189445495605
    10. '[' → logprob: -8.170218467712402

Token 1123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6406751275062561
    2. '```' → logprob: -1.7656750679016113
    3. ' if' → logprob: -2.0156750679016113
    4. 'if' → logprob: -3.0156750679016113
    5. ' ans' → logprob: -3.1406750679016113
    6. 'ans' → logprob: -3.5156750679016113
    7. '[' → logprob: -4.390675067901611
    8. ' for' → logprob: -5.140675067901611
    9. '``' → logprob: -5.140675067901611
    10. '       ' → logprob: -5.265675067901611

Token 1124: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.9890738725662231
    2. ' ans' → logprob: -1.3640738725662231
    3. ' if' → logprob: -1.7390738725662231
    4. 'if' → logprob: -2.1140737533569336
    5. '           ' → logprob: -2.6140737533569336
    6. '   ' → logprob: -7.114073753356934
    7. '               ' → logprob: -7.739073753356934
    8. '```' → logprob: -7.864073753356934
    9. '(ans' → logprob: -8.364073753356934
    10. '       ' → logprob: -8.614073753356934

Token 1125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07498332858085632
    2. '[p' → logprob: -2.6999833583831787
    3. '[' → logprob: -5.4499831199646
    4. '[pos' → logprob: -7.6999831199646
    5. '[min' → logprob: -9.324983596801758
    6. '=' → logprob: -9.824983596801758
    7. '\[' → logprob: -10.074983596801758
    8. ' [' → logprob: -11.199983596801758
    9. '[
' → logprob: -11.199983596801758
    10. '```' → logprob: -11.449983596801758

Token 1126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2436095029115677
    2. ' =' → logprob: -1.7436095476150513
    3. '=' → logprob: -3.9936094284057617
    4. ']=' → logprob: -3.9936094284057617
    5. '][' → logprob: -7.118609428405762
    6. ' ]' → logprob: -7.118609428405762
    7. '[' → logprob: -7.493609428405762
    8. '=min' → logprob: -7.618609428405762
    9. '],' → logprob: -7.743609428405762
    10. '           ' → logprob: -7.993609428405762

Token 1127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16210131347179413
    2. ' =' → logprob: -1.9121012687683105
    3. '=min' → logprob: -6.2871012687683105
    4. '[min' → logprob: -12.162101745605469
    5. '   ' → logprob: -12.787101745605469
    6. 'min' → logprob: -13.037101745605469
    7. '=max' → logprob: -13.537101745605469
    8. '[' → logprob: -14.037101745605469
    9. '```' → logprob: -14.037101745605469
    10. '           ' → logprob: -14.412101745605469

Token 1128: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007111206650733948
    2. ' min' → logprob: -7.250710964202881
    3. '	min' → logprob: -14.250711441040039
    4. '(min' → logprob: -15.875711441040039
    5. '   ' → logprob: -16.00071144104004
    6. 'max' → logprob: -16.50071144104004
    7. '           ' → logprob: -17.12571144104004
    8. '0' → logprob: -17.75071144104004
    9. '=min' → logprob: -17.75071144104004
    10. '
' → logprob: -18.12571144104004

Token 1129: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006027626805007458
    2. '(' → logprob: -5.131027698516846
    3. 'ans' → logprob: -9.381027221679688
    4. '(
' → logprob: -12.256027221679688
    5. ' (' → logprob: -12.506027221679688
    6. '(h' → logprob: -13.881027221679688
    7. '(s' → logprob: -14.131027221679688
    8. ' ans' → logprob: -14.256027221679688
    9. '((' → logprob: -14.506027221679688
    10. '(abs' → logprob: -14.756027221679688

Token 1130: '[i' (ID: 1768)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.35947635769844055
    2. ',' → logprob: -1.2344763278961182
    3. '(h' → logprob: -5.609476566314697
    4. 'ans' → logprob: -5.734476566314697
    5. '[' → logprob: -6.734476566314697
    6. '(p' → logprob: -7.109476566314697
    7. ' ans' → logprob: -7.859476566314697
    8. ' ,' → logprob: -7.984476566314697
    9. '(' → logprob: -7.984476566314697
    10. '[h' → logprob: -8.359476089477539

Token 1131: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14943550527095795
    2. '],' → logprob: -2.024435520172119
    3. ' ,' → logprob: -5.524435520172119
    4. ',h' → logprob: -6.774435520172119
    5. 'ans' → logprob: -8.149435043334961
    6. '           ' → logprob: -8.149435043334961
    7. ']' → logprob: -8.274435043334961
    8. ',
' → logprob: -8.649435043334961
    9. ',p' → logprob: -9.274435043334961
    10. ' ],' → logprob: -9.399435043334961

Token 1132: ' required' (ID: 3759)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.9304621815681458
    2. 'h' → logprob: -1.180462121963501
    3. 'abs' → logprob: -2.555462121963501
    4. 'hash' → logprob: -3.055462121963501
    5. 'required' → logprob: -3.180462121963501
    6. 'ideal' → logprob: -3.930462121963501
    7. '(abs' → logprob: -4.05546236038208
    8. '(' → logprob: -4.05546236038208
    9. ' (' → logprob: -4.18046236038208
    10. '(m' → logprob: -4.55546236038208

Token 1133: '[h' (ID: 88900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.09090183675289154
    2. '[h' → logprob: -2.4659018516540527
    3. '[' → logprob: -6.715901851654053
    4. '[p' → logprob: -7.965901851654053
    5. '(h' → logprob: -8.840901374816895
    6. '[((' → logprob: -9.715901374816895
    7. '[
' → logprob: -9.840901374816895
    8. '```' → logprob: -10.090901374816895
    9. '[key' → logprob: -10.965901374816895
    10. '[pos' → logprob: -10.965901374816895

Token 1134: '])
' (ID: 5169)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4571003317832947
    2. '])' → logprob: -1.7071003913879395
    3. '[p' → logprob: -2.0821003913879395
    4. ']+' → logprob: -3.8321003913879395
    5. '+' → logprob: -3.8321003913879395
    6. ' +' → logprob: -4.7071003913879395
    7. '[' → logprob: -5.9571003913879395
    8. '+p' → logprob: -6.5821003913879395
    9. '(p' → logprob: -6.8321003913879395
    10. '][' → logprob: -7.2071003913879395

Token 1135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04390042647719383
    2. '```' → logprob: -4.043900489807129
    3. '+' → logprob: -5.543900489807129
    4. '            
' → logprob: -5.668900489807129
    5. '<|end|>' → logprob: -5.918900489807129
    6. ' 
' → logprob: -6.043900489807129
    7. '``' → logprob: -6.293900489807129
    8. '`' → logprob: -6.543900489807129
    9. ' ' → logprob: -6.543900489807129
    10. '       ' → logprob: -6.793900489807129

Token 1136: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7797912359237671
    2. 'required' → logprob: -0.7797912359237671
    3. ' required' → logprob: -3.9047913551330566
    4. '       ' → logprob: -4.029791355133057
    5. '```' → logprob: -4.154791355133057
    6. '   ' → logprob: -4.779791355133057
    7. '
' → logprob: -6.029791355133057
    8. ' ' → logprob: -6.154791355133057
    9. '            
' → logprob: -6.154791355133057
    10. '               ' → logprob: -6.779791355133057

Token 1137: ' On' (ID: 2160)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.010193509049713612
    2. '           ' → logprob: -4.885193347930908
    3. ' required' → logprob: -6.260193347930908
    4. '       ' → logprob: -8.510193824768066
    5. '```' → logprob: -8.885193824768066
    6. 'if' → logprob: -9.260193824768066
    7. '   ' → logprob: -9.385193824768066
    8. 'key' → logprob: -10.135193824768066
    9. 'ans' → logprob: -10.885193824768066
    10. '
' → logprob: -11.010193824768066

Token 1138: ' calc' (ID: 25691)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.03465905785560608
    2. '           ' → logprob: -3.7846591472625732
    3. ' required' → logprob: -4.909658908843994
    4. '[' → logprob: -6.659658908843994
    5. '       ' → logprob: -6.909658908843994
    6. '               ' → logprob: -8.034659385681152
    7. '```' → logprob: -8.159659385681152
    8. '   ' → logprob: -8.534659385681152
    9. '[h' → logprob: -8.784659385681152
    10. '#' → logprob: -8.909659385681152

Token 1139: 'ule' (ID: 1601)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.49422839283943176
    2. '[' → logprob: -1.6192283630371094
    3. 'e' → logprob: -2.8692283630371094
    4. 'r' → logprob: -3.1192283630371094
    5. 'ear' → logprob: -3.1192283630371094
    6. 'ont' → logprob: -3.7442283630371094
    7. 'é' → logprob: -5.244228363037109
    8. 'required' → logprob: -5.869228363037109
    9. '[e' → logprob: -6.119228363037109
    10. 'if' → logprob: -6.869228363037109

Token 1140: ' la' (ID: 557)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.13414186239242554
    2. ' required' → logprob: -2.2591419219970703
    3. '(required' → logprob: -4.63414192199707
    4. '(h' → logprob: -5.63414192199707
    5. '           ' → logprob: -6.50914192199707
    6. ' (' → logprob: -6.63414192199707
    7. '       ' → logprob: -6.88414192199707
    8. 'h' → logprob: -7.25914192199707
    9. 'key' → logprob: -7.50914192199707
    10. '               ' → logprob: -8.00914192199707

Token 1141: ' condition' (ID: 7060)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.12423050403594971
    2. ' required' → logprob: -2.37423038482666
    3. 'key' → logprob: -5.12423038482666
    4. ' (' → logprob: -5.99923038482666
    5. '(h' → logprob: -5.99923038482666
    6. ' key' → logprob: -6.12423038482666
    7. '(required' → logprob: -6.24923038482666
    8. ' p' → logprob: -6.49923038482666
    9. 'h' → logprob: -6.99923038482666
    10. 'p' → logprob: -6.99923038482666

Token 1142: ' à' (ID: 1221)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.5509093999862671
    2. ' =' → logprob: -2.1759095191955566
    3. 'key' → logprob: -2.5509095191955566
    4. 'required' → logprob: -3.0509095191955566
    5. 'h' → logprob: -3.5509095191955566
    6. '       ' → logprob: -3.6759095191955566
    7. '=' → logprob: -3.6759095191955566
    8. '_key' → logprob: -3.6759095191955566
    9. '           ' → logprob: -3.9259095191955566
    10. ' key' → logprob: -4.550909519195557

Token 1143: ' remplir' (ID: 113625)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.3613773286342621
    2. ' required' → logprob: -1.8613773584365845
    3. '(h' → logprob: -2.361377239227295
    4. ' (' → logprob: -3.611377239227295
    5. '(required' → logprob: -4.111377239227295
    6. 'h' → logprob: -5.611377239227295
    7. ' h' → logprob: -6.611377239227295
    8. '[h' → logprob: -7.361377239227295
    9. '(' → logprob: -7.861377239227295
    10. 'r' → logprob: -8.236377716064453

Token 1144: ' (' (ID: 350)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.0328245162963867
    2. '(h' → logprob: -1.5328245162963867
    3. ' =' → logprob: -1.7828245162963867
    4. ' (' → logprob: -2.6578245162963867
    5. '           ' → logprob: -3.1578245162963867
    6. '```' → logprob: -3.2828245162963867
    7. '[(' → logprob: -3.6578245162963867
    8. '=' → logprob: -4.157824516296387
    9. '[' → logprob: -4.282824516296387
    10. '       ' → logprob: -4.532824516296387

Token 1145: 'appel' (ID: 100200)
  Prédit: 'ideal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ideal' → logprob: -0.23707115650177002
    2. '(' → logprob: -2.2370710372924805
    3. '(h' → logprob: -2.6120710372924805
    4. 'h' → logprob: -4.4870710372924805
    5. ' ideal' → logprob: -5.3620710372924805
    6. '(p' → logprob: -5.7370710372924805
    7. 'required' → logprob: -6.1120710372924805
    8. ' (' → logprob: -6.3620710372924805
    9. '(r' → logprob: -6.4870710372924805
    10. 'hash' → logprob: -6.7370710372924805

Token 1146: 'ée' (ID: 2894)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.3848206996917725
    2. '=' → logprob: -1.5098206996917725
    3. 'é' → logprob: -1.6348206996917725
    4. ')' → logprob: -2.2598206996917725
    5. 'e' → logprob: -3.0098206996917725
    6. ' =' → logprob: -3.1348206996917725
    7. 'ed' → logprob: -3.8848206996917725
    8. '(' → logprob: -4.009820938110352
    9. 'd' → logprob: -4.134820938110352
    10. '(
' → logprob: -4.759820938110352

Token 1147: ' req' (ID: 7257)
  Prédit: 'ideal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ideal' → logprob: -1.0671535730361938
    2. 'h' → logprob: -1.5671535730361938
    3. 'required' → logprob: -1.6921535730361938
    4. '(h' → logprob: -1.8171535730361938
    5. ''h' → logprob: -3.9421534538269043
    6. 'key' → logprob: -4.192153453826904
    7. '(required' → logprob: -4.442153453826904
    8. '`' → logprob: -4.692153453826904
    9. '(' → logprob: -4.692153453826904
    10. 'needed' → logprob: -5.192153453826904

Token 1148: '),' (ID: 936)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3372151851654053
    2. '=' → logprob: -2.5872151851654053
    3. ' =' → logprob: -2.7122151851654053
    4. '[u' → logprob: -2.7122151851654053
    5. 'd' → logprob: -3.7122151851654053
    6. 's' → logprob: -4.462215423583984
    7. ']' → logprob: -4.837215423583984
    8. 'uire' → logprob: -4.962215423583984
    9. '```' → logprob: -5.337215423583984
    10. '[h' → logprob: -5.462215423583984

Token 1149: ' basée' (ID: 153941)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.6003085374832153
    2. ' (' → logprob: -2.100308418273926
    3. '           ' → logprob: -2.350308418273926
    4. 'req' → logprob: -2.725308418273926
    5. ' =' → logprob: -2.975308418273926
    6. ' h' → logprob: -3.100308418273926
    7. ' req' → logprob: -3.475308418273926
    8. 'h' → logprob: -4.350308418273926
    9. '=' → logprob: -5.225308418273926
    10. 'required' → logprob: -5.600308418273926

Token 1150: ' sur' (ID: 1512)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44039642810821533
    2. '(h' → logprob: -1.6903964281082153
    3. '(' → logprob: -1.9403964281082153
    4. '=' → logprob: -4.440396308898926
    5. ' =' → logprob: -4.565396308898926
    6. ')' → logprob: -6.690396308898926
    7. ' h' → logprob: -7.190396308898926
    8. '(
' → logprob: -7.440396308898926
    9. '   ' → logprob: -7.940396308898926
    10. 'h' → logprob: -8.065396308898926

Token 1151: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5167789459228516
    2. 'ideal' → logprob: -1.6417789459228516
    3. '(h' → logprob: -2.0167789459228516
    4. ' (' → logprob: -3.5167789459228516
    5. ' ideal' → logprob: -3.8917789459228516
    6. 'h' → logprob: -4.391778945922852
    7. '(p' → logprob: -5.266778945922852
    8. 'hash' → logprob: -6.016778945922852
    9. '(hash' → logprob: -6.141778945922852
    10. 'ide' → logprob: -6.641778945922852

Token 1152: ' hash' (ID: 10691)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.7214687466621399
    2. '(' → logprob: -1.5964686870574951
    3. 'h' → logprob: -2.471468687057495
    4. 'ideal' → logprob: -2.596468687057495
    5. 'hash' → logprob: -2.721468687057495
    6. '(p' → logprob: -3.471468687057495
    7. '(hash' → logprob: -3.846468687057495
    8. ' (' → logprob: -4.596468925476074
    9. '```' → logprob: -5.096468925476074
    10. '(i' → logprob: -5.971468925476074

Token 1153: ' idéal' (ID: 65736)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07717645168304443
    2. '=' → logprob: -2.702176570892334
    3. '```' → logprob: -5.827176570892334
    4. '[h' → logprob: -7.577176570892334
    5. '_needed' → logprob: -8.077176094055176
    6. '   ' → logprob: -8.202176094055176
    7. 's' → logprob: -8.327176094055176
    8. '[' → logprob: -8.327176094055176
    9. ',' → logprob: -8.577176094055176
    10. '
' → logprob: -8.577176094055176

Token 1154: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07114331424236298
    2. '=' → logprob: -3.321143388748169
    3. '[h' → logprob: -4.07114315032959
    4. '```' → logprob: -4.82114315032959
    5. ',' → logprob: -6.57114315032959
    6. 'req' → logprob: -6.82114315032959
    7. '[' → logprob: -7.32114315032959
    8. '``' → logprob: -7.57114315032959
    9. '=h' → logprob: -7.57114315032959
    10. '_req' → logprob: -7.69614315032959

Token 1155: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1036432981491089
    2. ' (' → logprob: -1.2286432981491089
    3. '(h' → logprob: -1.8536432981491089
    4. 'ideal' → logprob: -2.1036434173583984
    5. ' ideal' → logprob: -2.6036434173583984
    6. '(p' → logprob: -4.853643417358398
    7. 'h' → logprob: -5.228643417358398
    8. ' h' → logprob: -5.978643417358398
    9. '   ' → logprob: -7.103643417358398
    10. '```' → logprob: -7.353643417358398

Token 1156: ' position' (ID: 4010)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5514101386070251
    2. '(h' → logprob: -1.92641019821167
    3. 'hash' → logprob: -2.55141019821167
    4. ' (' → logprob: -3.05141019821167
    5. '(p' → logprob: -3.30141019821167
    6. ' h' → logprob: -3.67641019821167
    7. 'position' → logprob: -4.05141019821167
    8. 'p' → logprob: -4.05141019821167
    9. 'pos' → logprob: -4.55141019821167
    10. '(' → logprob: -4.67641019821167

Token 1157: ' cour' (ID: 2871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4501689672470093
    2. '```' → logprob: -2.075169086456299
    3. ' =' → logprob: -2.450169086456299
    4. 'diff' → logprob: -2.450169086456299
    5. '_' → logprob: -2.575169086456299
    6. '=' → logprob: -2.700169086456299
    7. ')' → logprob: -2.700169086456299
    8. '_diff' → logprob: -3.200169086456299
    9. '   ' → logprob: -3.950169086456299
    10. 's' → logprob: -4.200169086456299

Token 1158: 'ante' (ID: 2116)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7191988825798035
    2. ')' → logprob: -1.7191989421844482
    3. 'e' → logprob: -1.7191989421844482
    4. 'd' → logprob: -3.4691989421844482
    5. 'é' → logprob: -3.4691989421844482
    6. '```' → logprob: -4.344198703765869
    7. 'h' → logprob: -4.594198703765869
    8. 'r' → logprob: -4.594198703765869
    9. 'ideal' → logprob: -4.844198703765869
    10. '+' → logprob: -5.219198703765869

Token 1159: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45659029483795166
    2. '```' → logprob: -1.8315902948379517
    3. ' -' → logprob: -3.081590175628662
    4. '-' → logprob: -3.206590175628662
    5. ' ,' → logprob: -4.081590175628662
    6. ')' → logprob: -4.081590175628662
    7. '+' → logprob: -4.581590175628662
    8. '==' → logprob: -4.581590175628662
    9. ' +' → logprob: -4.706590175628662
    10. ' =' → logprob: -5.081590175628662

Token 1160: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3438843488693237
    2. ' (' → logprob: -1.8438843488693237
    3. 'p' → logprob: -2.2188844680786133
    4. ' y' → logprob: -2.5938844680786133
    5. 'y' → logprob: -2.5938844680786133
    6. '(p' → logprob: -2.5938844680786133
    7. ' x' → logprob: -2.5938844680786133
    8. ' p' → logprob: -2.7188844680786133
    9. 'pow' → logprob: -3.4688844680786133
    10. '(' → logprob: -3.5938844680786133

Token 1161: ' hash' (ID: 10691)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7647035717964172
    2. 'x' → logprob: -2.1397035121917725
    3. ' y' → logprob: -2.3897035121917725
    4. '(p' → logprob: -2.6397035121917725
    5. ' (' → logprob: -3.0147035121917725
    6. 'p' → logprob: -3.0147035121917725
    7. 'pow' → logprob: -3.3897035121917725
    8. '(x' → logprob: -3.7647035121917725
    9. '(' → logprob: -3.8897035121917725
    10. 'h' → logprob: -4.264703750610352

Token 1162: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5905691385269165
    2. ' =' → logprob: -1.5905691385269165
    3. 'req' → logprob: -2.465569019317627
    4. 's' → logprob: -3.965569019317627
    5. '```' → logprob: -3.965569019317627
    6. 'r' → logprob: -4.090569019317627
    7. 'val' → logprob: -4.215569019317627
    8. 'diff' → logprob: -4.465569019317627
    9. '_' → logprob: -4.590569019317627
    10. 'required' → logprob: -4.840569019317627

Token 1163: ' cet' (ID: 19505)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8966010212898254
    2. '(h' → logprob: -1.2716009616851807
    3. '(p' → logprob: -2.3966009616851807
    4. 'h' → logprob: -2.3966009616851807
    5. 'i' → logprob: -2.7716009616851807
    6. 'l' → logprob: -4.77160120010376
    7. ' (' → logprob: -4.77160120010376
    8. 'p' → logprob: -5.02160120010376
    9. '((' → logprob: -5.02160120010376
    10. '(c' → logprob: -5.14660120010376

Token 1164: ' instant' (ID: 12823)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19353143870830536
    2. ']' → logprob: -2.3185315132141113
    3. 'h' → logprob: -3.5685315132141113
    4. 'p' → logprob: -4.693531513214111
    5. '```' → logprob: -5.193531513214111
    6. ' i' → logprob: -5.318531513214111
    7. 'position' → logprob: -5.318531513214111
    8. 'index' → logprob: -5.443531513214111
    9. '[i' → logprob: -5.568531513214111
    10. '+' → logprob: -5.943531513214111

Token 1165: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06364483386278152
    2. '=' → logprob: -2.9386448860168457
    3. 'req' → logprob: -6.188644886016846
    4. ',' → logprob: -6.188644886016846
    5. '```' → logprob: -6.313644886016846
    6. '_req' → logprob: -7.438644886016846
    7. '           ' → logprob: -7.688644886016846
    8. ')' → logprob: -8.188644409179688
    9. '
' → logprob: -8.313644409179688
    10. '`' → logprob: -8.563644409179688

Token 1166: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7901982069015503
    2. '           ' → logprob: -1.6651982069015503
    3. ' (' → logprob: -2.91519832611084
    4. '[' → logprob: -3.16519832611084
    5. '(h' → logprob: -3.29019832611084
    6. ' =' → logprob: -3.29019832611084
    7. '`' → logprob: -3.41519832611084
    8. '``' → logprob: -3.41519832611084
    9. '               ' → logprob: -4.29019832611084
    10. ' ```' → logprob: -4.41519832611084

Token 1167: ' req' (ID: 7257)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.2312346696853638
    2. '```' → logprob: -1.2312346696853638
    3. ' (' → logprob: -1.6062346696853638
    4. '``' → logprob: -2.481234550476074
    5. '`' → logprob: -3.356234550476074
    6. ' h' → logprob: -3.606234550476074
    7. '(' → logprob: -4.106234550476074
    8. 'req' (adapté à ' req') → logprob: -5.356234550476074
    9. ' ```' → logprob: -5.481234550476074
    10. ' req' → logprob: -5.606234550476074

Token 1168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868849575519562
    2. ' =' → logprob: -1.1368849277496338
    3. '[h' → logprob: -12.636884689331055
    4. '[' → logprob: -12.886884689331055
    5. '   ' → logprob: -13.386884689331055
    6. '           ' → logprob: -13.886884689331055
    7. ' ' → logprob: -14.011884689331055
    8. '＝' → logprob: -14.136884689331055
    9. '=
' → logprob: -14.386884689331055
    10. '=h' → logprob: -14.511884689331055

Token 1169: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008070041425526142
    2. '(h' → logprob: -5.25806999206543
    3. 'ideal' → logprob: -6.63306999206543
    4. ' (' → logprob: -7.13306999206543
    5. '(p' → logprob: -8.50806999206543
    6. '((' → logprob: -8.75806999206543
    7. '(x' → logprob: -9.38306999206543
    8. '(pow' → logprob: -10.00806999206543
    9. '(ans' → logprob: -10.25806999206543
    10. '(m' → logprob: -10.50806999206543

Token 1170: 'ideal' (ID: 108258)
  Prédit: 'ideal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ideal' → logprob: -0.23040872812271118
    2. '(' → logprob: -1.6054086685180664
    3. ' ideal' → logprob: -6.105408668518066
    4. '(h' → logprob: -6.355408668518066
    5. 'ide' → logprob: -7.855408668518066
    6. '(m' → logprob: -7.980408668518066
    7. ' (' → logprob: -9.105408668518066
    8. '(p' → logprob: -9.980408668518066
    9. 'h' → logprob: -10.105408668518066
    10. 'm' → logprob: -11.355408668518066

Token 1171: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22618436813354492
    2. '-' → logprob: -1.601184368133545
    3. ',' → logprob: -8.601184844970703
    4. '-p' → logprob: -8.851184844970703
    5. '[p' → logprob: -9.101184844970703
    6. '-h' → logprob: -9.351184844970703
    7. '[h' → logprob: -9.601184844970703
    8. '+' → logprob: -10.226184844970703
    9. '```' → logprob: -10.476184844970703
    10. '[-' → logprob: -10.726184844970703

Token 1172: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.031916406005620956
    2. 'r' → logprob: -3.906916379928589
    3. ' pow' → logprob: -4.906916618347168
    4. 'y' → logprob: -5.906916618347168
    5. '(pow' → logprob: -7.656916618347168
    6. ' r' → logprob: -8.031916618347168
    7. 'p' → logprob: -9.156916618347168
    8. ' y' → logprob: -9.156916618347168
    9. '   ' → logprob: -9.656916618347168
    10. '```' → logprob: -10.156916618347168

Token 1173: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.11344583332538605
    2. '(x' → logprob: -2.73844575881958
    3. '(' → logprob: -3.73844575881958
    4. 'x' → logprob: -4.86344575881958
    5. '(p' → logprob: -4.86344575881958
    6. '(r' → logprob: -7.48844575881958
    7. '(y' → logprob: -7.61344575881958
    8. ' (' → logprob: -7.73844575881958
    9. '_y' → logprob: -7.73844575881958
    10. '(pow' → logprob: -8.113446235656738

Token 1174: '[p' (ID: 23234)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.05772717669606209
    2. '[p' → logprob: -3.307727098464966
    3. '[' → logprob: -5.057727336883545
    4. '[-' → logprob: -5.057727336883545
    5. '[len' → logprob: -6.057727336883545
    6. 'pos' → logprob: -6.557727336883545
    7. '[max' → logprob: -6.807727336883545
    8. 'abs' → logprob: -7.057727336883545
    9. '(pos' → logprob: -7.932727336883545
    10. '[(' → logprob: -8.432726860046387

Token 1175: ']' (ID: 60)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.05941355228424072
    2. '[-' → logprob: -3.434413433074951
    3. '-p' → logprob: -4.809413433074951
    4. '[i' → logprob: -5.309413433074951
    5. '-' → logprob: -5.559413433074951
    6. ']' → logprob: -5.684413433074951
    7. '[' → logprob: -5.809413433074951
    8. 'p' → logprob: -6.809413433074951
    9. '```' → logprob: -8.43441390991211
    10. ' -' → logprob: -8.93441390991211

Token 1176: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09147117286920547
    2. '-' → logprob: -2.8414711952209473
    3. ')' → logprob: -3.8414711952209473
    4. '[h' → logprob: -4.966471195220947
    5. '%' → logprob: -8.591470718383789
    6. '-h' → logprob: -9.216470718383789
    7. ')%' → logprob: -9.341470718383789
    8. '[' → logprob: -9.591470718383789
    9. '[p' → logprob: -9.716470718383789
    10. '[-' → logprob: -9.966470718383789

Token 1177: ' h' (ID: 312)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6927734613418579
    2. 'h' → logprob: -1.692773461341858
    3. '(h' → logprob: -2.1927733421325684
    4. 'm' → logprob: -2.3177733421325684
    5. '(' → logprob: -3.1927733421325684
    6. '(-' → logprob: -3.4427733421325684
    7. ' (' → logprob: -4.192773342132568
    8. '-h' → logprob: -5.942773342132568
    9. '-m' → logprob: -6.067773342132568
    10. '-' → logprob: -6.067773342132568

Token 1178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015038477256894112
    2. ' -' → logprob: -4.64003849029541
    3. '[p' → logprob: -6.01503849029541
    4. ')%' → logprob: -6.39003849029541
    5. '-' → logprob: -8.39003849029541
    6. ' )' → logprob: -8.64003849029541
    7. '^{-' → logprob: -8.64003849029541
    8. '   ' → logprob: -8.89003849029541
    9. '```' → logprob: -9.64003849029541
    10. '[-' → logprob: -9.76503849029541

Token 1179: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.39899834990501404
    2. '%' → logprob: -1.3989983797073364
    3. ')' → logprob: -2.773998260498047
    4. '```' → logprob: -4.523998260498047
    5. ' -' → logprob: -5.773998260498047
    6. '-' → logprob: -7.023998260498047
    7. ')%' → logprob: -7.273998260498047
    8. '<|end|>' → logprob: -7.273998260498047
    9. '^{-' → logprob: -7.273998260498047
    10. ']' → logprob: -7.523998260498047

Token 1180: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007101670489646494
    2. ' m' → logprob: -7.2507100105285645
    3. '(m' → logprob: -16.250709533691406
    4. '```' → logprob: -16.375709533691406
    5. '   ' → logprob: -17.375709533691406
    6. ' ' → logprob: -18.250709533691406
    7. '	m' → logprob: -18.875709533691406
    8. '[m' → logprob: -19.500709533691406
    9. '`' → logprob: -19.750709533691406
    10. '
' → logprob: -20.750709533691406

Token 1181: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1504390239715576
    2. ')' → logprob: -1.2754390239715576
    3. '<|end|>' → logprob: -1.4004390239715576
    4. '```' → logprob: -3.1504390239715576
    5. '
' → logprob: -3.9004390239715576
    6. '+' → logprob: -4.025439262390137
    7. '[' → logprob: -5.025439262390137
    8. '       ' → logprob: -5.025439262390137
    9. ' )' → logprob: -5.025439262390137
    10. ':' → logprob: -5.275439262390137

Token 1182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09115967154502869
    2. 'required' → logprob: -3.9661595821380615
    3. '       ' → logprob: -4.091159820556641
    4. '```' → logprob: -4.466159820556641
    5. ' required' → logprob: -5.216159820556641
    6. '   ' → logprob: -5.341159820556641
    7. '(required' → logprob: -5.341159820556641
    8. ')' → logprob: -5.341159820556641
    9. '`' → logprob: -5.966159820556641
    10. '
' → logprob: -6.091159820556641

Token 1183: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5298842191696167
    2. 'required' → logprob: -1.6548842191696167
    3. ' required' → logprob: -3.1548843383789062
    4. '```' → logprob: -3.1548843383789062
    5. '       ' → logprob: -3.6548843383789062
    6. '	required' → logprob: -4.154884338378906
    7. ' 
' → logprob: -4.404884338378906
    8. '(required' → logprob: -4.529884338378906
    9. '   ' → logprob: -4.654884338378906
    10. '\' → logprob: -4.654884338378906

Token 1184: ' On' (ID: 2160)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.000239536224398762
    2. '           ' → logprob: -8.500239372253418
    3. ' required' → logprob: -10.375239372253418
    4. '
' → logprob: -13.250239372253418
    5. '       ' → logprob: -13.625239372253418
    6. '	required' → logprob: -14.625239372253418
    7. '(required' → logprob: -14.625239372253418
    8. 'requested' → logprob: -15.000239372253418
    9. '   ' → logprob: -15.125239372253418
    10. '               ' → logprob: -16.375240325927734

Token 1185: ' incr' (ID: 52395)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.003048893064260483
    2. ' required' → logprob: -5.878048896789551
    3. '           ' → logprob: -9.12804889678955
    4. '[' → logprob: -10.00304889678955
    5. '   ' → logprob: -10.50304889678955
    6. '       ' → logprob: -11.25304889678955
    7. '```' → logprob: -11.25304889678955
    8. '
' → logprob: -11.62804889678955
    9. 'requested' → logprob: -11.87804889678955
    10. '	required' → logprob: -12.00304889678955

Token 1186: 'é' (ID: 377)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.6632718443870544
    2. 'rement' → logprob: -1.6632719039916992
    3. 'é' → logprob: -2.413271903991699
    4. '           ' → logprob: -2.413271903991699
    5. 'required' → logprob: -2.663271903991699
    6. 'ment' → logprob: -4.538271903991699
    7. 'ement' → logprob: -4.663271903991699
    8. 'lement' → logprob: -5.038271903991699
    9. '[' → logprob: -5.663271903991699
    10. '       ' → logprob: -5.788271903991699

Token 1187: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.12318121641874313
    2. 'required' → logprob: -3.123181104660034
    3. 'mented' → logprob: -3.248181104660034
    4. 's' → logprob: -4.748181343078613
    5. 'ments' → logprob: -4.748181343078613
    6. '(required' → logprob: -5.373181343078613
    7. 'rement' → logprob: -5.873181343078613
    8. 'mente' → logprob: -5.998181343078613
    9. 'nt' → logprob: -6.248181343078613
    10. 'mnt' → logprob: -6.998181343078613

Token 1188: ' le' (ID: 505)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.0010047047398984432
    2. ' required' → logprob: -7.126004695892334
    3. 'req' → logprob: -8.626005172729492
    4. '(required' → logprob: -11.501005172729492
    5. '[' → logprob: -12.001005172729492
    6. '   ' → logprob: -13.376005172729492
    7. 'requested' → logprob: -13.876005172729492
    8. ' req' → logprob: -14.126005172729492
    9. '	required' → logprob: -14.751005172729492
    10. '```' → logprob: -15.126005172729492

Token 1189: ' compteur' (ID: 163344)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -6.980854959692806e-05
    2. ' required' → logprob: -9.625069618225098
    3. 'requested' → logprob: -13.750069618225098
    4. '
' → logprob: -14.125069618225098
    5. 'default' → logprob: -14.250069618225098
    6. '(required' → logprob: -14.500069618225098
    7. 'count' → logprob: -15.625069618225098
    8. 'needed' → logprob: -16.250070571899414
    9. '{
' → logprob: -16.375070571899414
    10. 'value' → logprob: -16.375070571899414

Token 1190: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004585518909152597
    2. 'req' → logprob: -7.875458717346191
    3. ' [' → logprob: -9.875458717346191
    4. '=req' → logprob: -12.000458717346191
    5. '```' → logprob: -12.000458717346191
    6. '   ' → logprob: -12.250458717346191
    7. '       ' → logprob: -13.125458717346191
    8. 'required' → logprob: -14.000458717346191
    9. '[
' → logprob: -14.375458717346191
    10. '(req' → logprob: -14.625458717346191

Token 1191: ' cette' (ID: 7696)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0011489099124446511
    2. ' req' → logprob: -7.251148700714111
    3. 'required' → logprob: -7.876148700714111
    4. '[' → logprob: -9.87614917755127
    5. '(req' → logprob: -12.75114917755127
    6. '
' → logprob: -13.25114917755127
    7. '```' → logprob: -13.62614917755127
    8. '	req' → logprob: -14.87614917755127
    9. '   ' → logprob: -15.12614917755127
    10. 'requ' → logprob: -15.25114917755127

Token 1192: ' condition' (ID: 7060)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.00022928470571059734
    2. ' req' → logprob: -9.125228881835938
    3. '[' → logprob: -9.500228881835938
    4. '(req' → logprob: -10.875228881835938
    5. 'required' → logprob: -11.250228881835938
    6. '```' → logprob: -11.750228881835938
    7. '
' → logprob: -13.000228881835938
    8. '`' → logprob: -13.750228881835938
    9. '[
' → logprob: -14.875228881835938
    10. 'r' → logprob: -14.875228881835938

Token 1193: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007829454843886197
    2. 'req' → logprob: -7.2507829666137695
    3. '       ' → logprob: -9.87578296661377
    4. '           ' → logprob: -11.62578296661377
    5. '   ' → logprob: -12.12578296661377
    6. ' [' → logprob: -13.25078296661377
    7. '(req' → logprob: -13.62578296661377
    8. '=req' → logprob: -13.62578296661377
    9. '               ' → logprob: -14.00078296661377
    10. '```' → logprob: -14.25078296661377

Token 1194: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.00012868782505393028
    2. ' req' → logprob: -9.500128746032715
    3. 'required' → logprob: -10.500128746032715
    4. '
' → logprob: -12.125128746032715
    5. ')' → logprob: -12.375128746032715
    6. '   ' → logprob: -12.500128746032715
    7. '```' → logprob: -12.625128746032715
    8. '           ' → logprob: -13.125128746032715
    9. '[' → logprob: -13.375128746032715
    10. '       ' → logprob: -13.625128746032715

Token 1195: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007708130870014429
    2. ')' → logprob: -5.5077080726623535
    3. '[' → logprob: -6.5077080726623535
    4. ']+=' → logprob: -6.7577080726623535
    5. ')]' → logprob: -7.3827080726623535
    6. '])' → logprob: -8.757708549499512
    7. ' ]' → logprob: -9.382708549499512
    8. ']+' → logprob: -9.632708549499512
    9. '```' → logprob: -11.632708549499512
    10. ']
' → logprob: -12.132708549499512

Token 1196: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00887101236730814
    2. 'required' → logprob: -5.758871078491211
    3. '           ' → logprob: -6.008871078491211
    4. ' +=' → logprob: -6.758871078491211
    5. '```' → logprob: -7.883871078491211
    6. '       ' → logprob: -8.258871078491211
    7. 'req' → logprob: -8.258871078491211
    8. '+=' → logprob: -8.383871078491211
    9. '[
' → logprob: -8.633871078491211
    10. '   ' → logprob: -8.883871078491211

Token 1197: ' le' (ID: 505)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.0002358409110456705
    2. ' required' → logprob: -8.375235557556152
    3. '
' → logprob: -12.750235557556152
    4. '(required' → logprob: -14.000235557556152
    5. 'requested' → logprob: -14.125235557556152
    6. '	required' → logprob: -14.500235557556152
    7. '```' → logprob: -15.625235557556152
    8. '`' → logprob: -17.62523651123047
    9. 'needed' → logprob: -17.87523651123047
    10. 'necessary' → logprob: -17.87523651123047

Token 1198: ' diction' (ID: 155259)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -3.6550729419104755e-05
    2. ' required' → logprob: -10.375036239624023
    3. 'requested' → logprob: -13.250036239624023
    4. '```' → logprob: -13.375036239624023
    5. '`' → logprob: -14.250036239624023
    6. '
' → logprob: -14.375036239624023
    7. '{
' → logprob: -15.500036239624023
    8. '	required' → logprob: -15.625036239624023
    9. '(required' → logprob: -15.750036239624023
    10. 'default' → logprob: -16.375036239624023

Token 1199: 'naire' (ID: 30464)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.002228287048637867
    2. '{' → logprob: -6.752228260040283
    3. '[' → logprob: -7.252228260040283
    4. '{
' → logprob: -9.002228736877441
    5. 'a' → logprob: -9.127228736877441
    6. '```' → logprob: -10.252228736877441
    7. 'naire' → logprob: -10.627228736877441
    8. '[
' → logprob: -11.627228736877441
    9. 'e' → logprob: -11.877228736877441
    10. 'aire' → logprob: -12.002228736877441

Token 1200: ' required' (ID: 3759)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001358400477329269
    2. 'req' → logprob: -10.00013542175293
    3. '       ' → logprob: -10.37513542175293
    4. '           ' → logprob: -10.50013542175293
    5. '```' → logprob: -11.62513542175293
    6. '   ' → logprob: -12.12513542175293
    7. 'required' → logprob: -12.75013542175293
    8. ' [' → logprob: -12.75013542175293
    9. '
' → logprob: -13.12513542175293
    10. '               ' → logprob: -13.12513542175293

Token 1201: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -4.739826181321405e-05
    2. '```' → logprob: -11.12504768371582
    3. 'req' → logprob: -11.50004768371582
    4. '           ' → logprob: -12.12504768371582
    5. ' [' → logprob: -12.62504768371582
    6. '       ' → logprob: -12.75004768371582
    7. '+=' → logprob: -13.12504768371582
    8. '   ' → logprob: -13.37504768371582
    9. '=req' → logprob: -13.50004768371582
    10. ' +=' → logprob: -13.50004768371582

Token 1202: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0538424476981163
    2. 'required' → logprob: -3.178842544555664
    3. '```' → logprob: -5.553842544555664
    4. ' required' → logprob: -6.303842544555664
    5. '[
' → logprob: -6.428842544555664
    6. '1' → logprob: -6.803842544555664
    7. '           ' → logprob: -7.428842544555664
    8. '   ' → logprob: -8.178842544555664
    9. '+' → logprob: -8.303842544555664
    10. ' [' → logprob: -8.428842544555664

Token 1203: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' (adapté à ' required') → logprob: -0.0001589618914294988
    2. ' required' → logprob: -9.37515926361084
    3. '1' → logprob: -9.87515926361084
    4. '[' → logprob: -11.50015926361084
    5. '
' → logprob: -12.12515926361084
    6. '```' → logprob: -12.75015926361084
    7. '           ' → logprob: -13.75015926361084
    8. '   ' → logprob: -14.25015926361084
    9. 'requested' → logprob: -14.37515926361084
    10. '(required' → logprob: -14.50015926361084

Token 1204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1517960956552997e-05
    2. '```' → logprob: -11.625011444091797
    3. '=req' → logprob: -13.250011444091797
    4. 'req' → logprob: -15.000011444091797
    5. '   ' → logprob: -16.000011444091797
    6. ' [' → logprob: -16.500011444091797
    7. '[(' → logprob: -17.000011444091797
    8. '\[' → logprob: -17.125011444091797
    9. '[
' → logprob: -17.500011444091797
    10. '(req' → logprob: -17.500011444091797

Token 1205: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -3.368984107510187e-05
    2. '(req' → logprob: -10.875033378601074
    3. '[' → logprob: -11.750033378601074
    4. ' req' → logprob: -12.000033378601074
    5. '
' → logprob: -15.375033378601074
    6. ']' → logprob: -15.750033378601074
    7. '```' → logprob: -16.87503433227539
    8. '	req' → logprob: -17.25003433227539
    9. '=req' → logprob: -17.25003433227539
    10. '(' → logprob: -17.37503433227539

Token 1206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019323242595419288
    2. ']+=' → logprob: -6.251932144165039
    3. ' ]' → logprob: -12.876932144165039
    4. '+=' → logprob: -14.376932144165039
    5. ']+' → logprob: -15.501932144165039
    6. ' +=' → logprob: -16.00193214416504
    7. ')' → logprob: -16.12693214416504
    8. '   ' → logprob: -16.50193214416504
    9. '+]' → logprob: -16.87693214416504
    10. '']' → logprob: -17.75193214416504

Token 1207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02325328253209591
    2. ' +=' → logprob: -3.7732532024383545
    3. ']+=' → logprob: -12.148253440856934
    4. '=' → logprob: -13.648253440856934
    5. '   ' → logprob: -14.023253440856934
    6. '       ' → logprob: -15.773253440856934
    7. '+' → logprob: -16.148252487182617
    8. '```' → logprob: -16.148252487182617
    9. '    ' → logprob: -17.273252487182617
    10. '[' → logprob: -17.398252487182617

Token 1208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.000003814697266
    4. '   ' → logprob: -19.125003814697266
    5. ' ' → logprob: -20.875003814697266
    6. '0' → logprob: -21.750003814697266
    7. '
' → logprob: -22.375003814697266
    8. '  ' → logprob: -22.375003814697266
    9. '`' → logprob: -22.750003814697266
    10. '' → logprob: -22.875003814697266

Token 1209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.375
    5. '0' → logprob: -20.75
    6. '10' → logprob: -21.5
    7. '2' → logprob: -21.75
    8. '`' → logprob: -22.375
    9. '  ' → logprob: -22.5
    10. '' → logprob: -22.5

Token 1210: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4892696440219879
    2. '<|end|>' → logprob: -0.9892696142196655
    3. ')' → logprob: -5.489269733428955
    4. ' ' → logprob: -6.239269733428955
    5. '	return' → logprob: -6.739269733428955
    6. ']' → logprob: -6.989269733428955
    7. '\n' → logprob: -7.114269733428955
    8. '```' → logprob: -7.239269733428955
    9. '
' → logprob: -7.364269733428955
    10. 'return' → logprob: -7.489269733428955

Token 1211: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1212: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3021485507488251
    2. 'return' → logprob: -1.4271485805511475
    3. '```' → logprob: -4.302148342132568
    4. '    
' → logprob: -6.052148342132568
    5. ')' → logprob: -6.302148342132568
    6. ' return' → logprob: -6.802148342132568
    7. '<|end|>' → logprob: -7.802148342132568
    8. '       ' → logprob: -8.552148818969727
    9. '[' → logprob: -8.677148818969727
    10. ']' → logprob: -8.802148818969727

Token 1213: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00010354319238103926
    2. '   ' → logprob: -9.375103950500488
    3. 'for' → logprob: -11.625103950500488
    4. '```' → logprob: -11.750103950500488
    5. ' return' → logprob: -13.625103950500488
    6. 'ret' → logprob: -16.000102996826172
    7. '
' → logprob: -16.500102996826172
    8. '    
' → logprob: -16.500102996826172
    9. 'result' → logprob: -16.625102996826172
    10. 'ans' → logprob: -16.625102996826172

Token 1214: ' fonction' (ID: 17610)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18745088577270508
    2. ' return' → logprob: -1.812450885772705
    3. 'r' → logprob: -5.812450885772705
    4. ' ' → logprob: -6.312450885772705
    5. '
' → logprob: -6.687450885772705
    6. 'for' → logprob: -7.937450885772705
    7. 'max' → logprob: -8.312450408935547
    8. ' max' → logprob: -8.562450408935547
    9. '   ' → logprob: -8.562450408935547
    10. ' 
' → logprob: -8.687450408935547

Token 1215: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012642784975469112
    2. '   ' → logprob: -4.637642860412598
    3. ' return' → logprob: -5.887642860412598
    4. 'def' → logprob: -9.762642860412598
    5. '
' → logprob: -11.262642860412598
    6. '```' → logprob: -11.512642860412598
    7. '    
' → logprob: -11.637642860412598
    8. '@return' → logprob: -11.887642860412598
    9. '	return' → logprob: -12.512642860412598
    10. ':return' → logprob: -12.762642860412598

Token 1216: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.002804633229970932
    2. 'return' → logprob: -6.252804756164551
    3. 'ver' → logprob: -8.12780475616455
    4. 'voit' → logprob: -8.87780475616455
    5. '```' → logprob: -9.25280475616455
    6. 'v' → logprob: -9.50280475616455
    7. 'vo' → logprob: -9.75280475616455
    8. '   ' → logprob: -9.75280475616455
    9. 'e' → logprob: -10.12780475616455
    10. 't' → logprob: -10.62780475616455

Token 1217: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07073255628347397
    2. 'min' → logprob: -2.820732593536377
    3. '[min' → logprob: -5.195732593536377
    4. 'max' → logprob: -6.320732593536377
    5. '[' → logprob: -7.320732593536377
    6. ' ans' → logprob: -8.070732116699219
    7. ' min' → logprob: -8.570732116699219
    8. '[max' → logprob: -9.070732116699219
    9. '[
' → logprob: -10.945732116699219
    10. '(ans' → logprob: -11.070732116699219

Token 1218: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00411829212680459
    2. 'max' → logprob: -6.3791184425354
    3. 'min' → logprob: -6.5041184425354
    4. '[min' → logprob: -7.5041184425354
    5. '[max' → logprob: -8.754117965698242
    6. '[' → logprob: -8.879117965698242
    7. ' ans' → logprob: -10.254117965698242
    8. '[
' → logprob: -11.629117965698242
    9. 'answer' → logprob: -12.629117965698242
    10. '(ans' → logprob: -12.879117965698242

Token 1219: ' de' (ID: 334)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.24704080820083618
    2. 'return' → logprob: -2.7470407485961914
    3. '(sum' → logprob: -2.7470407485961914
    4. ' sum' → logprob: -2.7470407485961914
    5. ' return' → logprob: -4.497040748596191
    6. ' ans' → logprob: -5.247040748596191
    7. '   ' → logprob: -5.747040748596191
    8. '(ans' → logprob: -5.997040748596191
    9. 'ans' → logprob: -6.122040748596191
    10. '=sum' → logprob: -6.372040748596191

Token 1220: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009249189170077443
    2. '(ans' → logprob: -7.000925064086914
    3. ' ans' → logprob: -11.875925064086914
    4. 'min' → logprob: -12.250925064086914
    5. '1' → logprob: -14.500925064086914
    6. '[' → logprob: -14.625925064086914
    7. '(' → logprob: -15.750925064086914
    8. '[min' → logprob: -16.000925064086914
    9. '[i' → logprob: -16.625925064086914
    10. '	ans' → logprob: -16.625925064086914

Token 1221: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013235727092251182
    2. '(ans' → logprob: -7.251323699951172
    3. ' ans' → logprob: -7.876323699951172
    4. 'len' → logprob: -9.501323699951172
    5. '[' → logprob: -10.376323699951172
    6. '[
' → logprob: -10.751323699951172
    7. '1' → logprob: -10.876323699951172
    8. '```' → logprob: -11.126323699951172
    9. '[i' → logprob: -11.376323699951172
    10. 'answer' → logprob: -11.501323699951172

Token 1222: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0002614550176076591
    2. 'ans' → logprob: -8.250261306762695
    3. '(
' → logprob: -16.375261306762695
    4. '(' → logprob: -16.875261306762695
    5. '(sum' → logprob: -17.375261306762695
    6. ' ans' → logprob: -17.375261306762695
    7. '	ans' → logprob: -17.625261306762695
    8. '(answer' → logprob: -18.625261306762695
    9. '(an' → logprob: -19.375261306762695
    10. '_ans' → logprob: -19.875261306762695

Token 1223: '.' (ID: 13)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12737153470516205
    2. '   ' → logprob: -2.7523715496063232
    3. '(' → logprob: -3.6273715496063232
    4. ' return' → logprob: -3.8773715496063232
    5. '(return' → logprob: -5.752371311187744
    6. '```' → logprob: -6.377371311187744
    7. '
' → logprob: -6.752371311187744
    8. '(ans' → logprob: -7.502371311187744
    9. '(sum' → logprob: -7.627371311187744
    10. '	return' → logprob: -7.877371311187744

Token 1224: ' Cela' (ID: 44403)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3527156114578247
    2. ' return' → logprob: -1.4777156114578247
    3. '   ' → logprob: -3.227715492248535
    4. '
' → logprob: -4.477715492248535
    5. '```' → logprob: -4.852715492248535
    6. '    
' → logprob: -5.727715492248535
    7. ' 
' → logprob: -6.602715492248535
    8. ':
' → logprob: -6.727715492248535
    9. ':return' → logprob: -6.852715492248535
    10. '[' → logprob: -7.102715492248535

Token 1225: ' réalise' (ID: 153079)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14559777081012726
    2. ' return' → logprob: -2.0205976963043213
    3. 'eturn' → logprob: -7.0205979347229
    4. '
' → logprob: -7.1455979347229
    5. '	return' → logprob: -8.020597457885742
    6. '```' → logprob: -8.020597457885742
    7. '   ' → logprob: -8.645597457885742
    8. '_return' → logprob: -9.020597457885742
    9. 'returns' → logprob: -9.645597457885742
    10. '    
' → logprob: -10.395597457885742

Token 1226: ' une' (ID: 2463)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004322472028434277
    2. ' sum' → logprob: -5.504322528839111
    3. 'return' → logprob: -8.504322052001953
    4. '```' → logprob: -10.754322052001953
    5. '   ' → logprob: -11.879322052001953
    6. ' return' → logprob: -12.504322052001953
    7. ' ' → logprob: -12.629322052001953
    8. '(sum' → logprob: -12.754322052001953
    9. '=sum' → logprob: -13.379322052001953
    10. '
' → logprob: -14.379322052001953

Token 1227: ' agr' (ID: 11966)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03428775072097778
    2. ' return' → logprob: -3.409287691116333
    3. 'sum' → logprob: -7.909287929534912
    4. '```' → logprob: -8.409287452697754
    5. '
' → logprob: -10.659287452697754
    6. '`' → logprob: -11.784287452697754
    7. 'ret' → logprob: -12.409287452697754
    8. ' sum' → logprob: -12.659287452697754
    9. '``' → logprob: -13.159287452697754
    10. 's' → logprob: -13.534287452697754

Token 1228: 'égation' (ID: 157337)
  Prédit: 'égation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égation' → logprob: -0.4776587188243866
    2. 'ég' → logprob: -0.977658748626709
    3. 'é' → logprob: -5.977658748626709
    4. 'égé' → logprob: -7.227658748626709
    5. 'égr' → logprob: -8.72765827178955
    6. 'égal' → logprob: -9.97765827178955
    7. '```' → logprob: -10.10265827178955
    8. 'ément' → logprob: -10.97765827178955
    9. 'èg' → logprob: -11.72765827178955
    10. '__' → logprob: -12.60265827178955

Token 1229: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3620290458202362
    2. '(' → logprob: -1.6120290756225586
    3. 'return' → logprob: -2.7370290756225586
    4. '()' → logprob: -4.362029075622559
    5. '(sum' → logprob: -4.737029075622559
    6. '   ' → logprob: -5.237029075622559
    7. '(
' → logprob: -5.987029075622559
    8. ' return' → logprob: -6.112029075622559
    9. ' ans' → logprob: -6.237029075622559
    10. 'ans' → logprob: -6.487029075622559

Token 1230: ' des' (ID: 731)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2935701906681061
    2. '   ' → logprob: -2.2935702800750732
    3. '(ans' → logprob: -2.4185702800750732
    4. '(' → logprob: -3.4185702800750732
    5. ' return' → logprob: -3.9185702800750732
    6. '(
' → logprob: -5.793570041656494
    7. '(return' → logprob: -6.168570041656494
    8. '
' → logprob: -6.293570041656494
    9. '(sum' → logprob: -6.668570041656494
    10. '```' → logprob: -7.043570041656494

Token 1231: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005755883641541004
    2. '(ans' → logprob: -5.50575590133667
    3. 'val' → logprob: -7.00575590133667
    4. ' ans' → logprob: -7.25575590133667
    5. 'result' → logprob: -10.755755424499512
    6. 'answer' → logprob: -12.130755424499512
    7. 'vals' → logprob: -12.130755424499512
    8. 'rés' → logprob: -12.130755424499512
    9. 'res' → logprob: -12.255755424499512
    10. 'range' → logprob: -12.755755424499512

Token 1232: 'me' (ID: 1047)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04886860400438309
    2. 'i' → logprob: -4.673868656158447
    3. 'positions' → logprob: -4.673868656158447
    4. '```' → logprob: -5.423868656158447
    5. 'val' → logprob: -5.798868656158447
    6. 'values' → logprob: -5.798868656158447
    7. 'range' → logprob: -6.048868656158447
    8. ' ans' → logprob: -6.298868656158447
    9. '``' → logprob: -6.423868656158447
    10. '(ans' → logprob: -6.798868656158447

Token 1233: 'ille' (ID: 3301)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.38609275221824646
    2. 'an' → logprob: -1.3860927820205688
    3. 'aning' → logprob: -3.2610926628112793
    4. '
' → logprob: -4.511092662811279
    5. '+' → logprob: -5.386092662811279
    6. 'ans' → logprob: -5.761092662811279
    7. '=' → logprob: -6.011092662811279
    8. 'a' → logprob: -6.511092662811279
    9. ']' → logprob: -6.761092662811279
    10. '+=' → logprob: -7.011092662811279

Token 1234: 'ures' (ID: 1609)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.009027787484228611
    2. 'ur' → logprob: -4.88402795791626
    3. 'ures' → logprob: -6.75902795791626
    4. 'urs' → logprob: -8.759027481079102
    5. 'urement' → logprob: -9.884027481079102
    6. 'u' → logprob: -11.259027481079102
    7. 'urée' → logprob: -11.759027481079102
    8. 'uree' → logprob: -12.259027481079102
    9. 'ured' → logprob: -12.634027481079102
    10. 'sure' → logprob: -12.884027481079102

Token 1235: '"' (ID: 1)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6413934230804443
    2. '```' → logprob: -1.7663934230804443
    3. 'values' → logprob: -2.3913934230804443
    4. 'ans' → logprob: -2.3913934230804443
    5. 'positions' → logprob: -3.3913934230804443
    6. 'rés' → logprob: -3.7663934230804443
    7. '``' → logprob: -4.641393661499023
    8. 'matches' → logprob: -4.891393661499023
    9. 'indices' → logprob: -4.891393661499023
    10. 'answers' → logprob: -5.641393661499023

Token 1236: ' réponses' (ID: 88884)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5202261805534363
    2. 'ans' → logprob: -1.270226240158081
    3. 'val' → logprob: -2.145226240158081
    4. ' ans' → logprob: -5.520226001739502
    5. 'values' → logprob: -7.145226001739502
    6. '```' → logprob: -7.520226001739502
    7. 'return' → logprob: -7.770226001739502
    8. 'answer' → logprob: -7.895226001739502
    9. 'value' → logprob: -8.39522647857666
    10. '   ' → logprob: -8.39522647857666

Token 1237: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1858443021774292
    2. '()' → logprob: -1.4358443021774292
    3. '+' → logprob: -2.5608444213867188
    4. '[:]' → logprob: -2.6858444213867188
    5. '```' → logprob: -2.6858444213867188
    6. '[' → logprob: -3.0608444213867188
    7. 'return' → logprob: -3.4358444213867188
    8. '[]' → logprob: -3.6858444213867188
    9. ')' → logprob: -3.9358444213867188
    10. '   ' → logprob: -3.9358444213867188

Token 1238: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010143116116523743
    2. 'i' → logprob: -4.885143280029297
    3. ' range' → logprob: -6.635143280029297
    4. 'ans' → logprob: -6.885143280029297
    5. ' i' → logprob: -9.260143280029297
    6. 'return' → logprob: -10.135143280029297
    7. '```' → logprob: -10.760143280029297
    8. ' ans' → logprob: -10.760143280029297
    9. 'answer' → logprob: -12.260143280029297
    10. '_' → logprob: -12.635143280029297

Token 1239: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05197638273239136
    2. ' i' → logprob: -3.301976442337036
    3. '```' → logprob: -5.051976203918457
    4. 'position' → logprob: -6.051976203918457
    5. 'index' → logprob: -6.801976203918457
    6. '_' → logprob: -6.801976203918457
    7. 'indice' → logprob: -7.051976203918457
    8. ' position' → logprob: -7.051976203918457
    9. ' index' → logprob: -8.051976203918457
    10. '`' → logprob: -8.176976203918457

Token 1240: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.143546223640442
    2. 'return' → logprob: -1.518546223640442
    3. '   ' → logprob: -2.5185461044311523
    4. '```' → logprob: -2.7685461044311523
    5. '()' → logprob: -3.0185461044311523
    6. '+' → logprob: -3.0185461044311523
    7. '<|end|>' → logprob: -3.0185461044311523
    8. ' return' → logprob: -3.3935461044311523
    9. '
' → logprob: -3.6435461044311523
    10. '(return' → logprob: -3.6435461044311523

Token 1241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3828510344028473
    2. '```' → logprob: -1.632851004600525
    3. 'return' → logprob: -2.1328511238098145
    4. ' return' → logprob: -6.1328511238098145
    5. '``' → logprob: -6.5078511238098145
    6. '    
' → logprob: -8.257850646972656
    7. '
' → logprob: -8.507850646972656
    8. '	return' → logprob: -9.882850646972656
    9. '`' → logprob: -11.007850646972656
    10. '\' → logprob: -12.382850646972656

Token 1242: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9105497598648071
    2. 'return' (adapté à ' return') → logprob: -0.9105497598648071
    3. '```' → logprob: -1.6605497598648071
    4. '
' → logprob: -5.785549640655518
    5. ' return' → logprob: -6.285549640655518
    6. '``' → logprob: -8.160550117492676
    7. '    
' → logprob: -9.535550117492676
    8. '	return' → logprob: -10.535550117492676
    9. '`' → logprob: -11.535550117492676
    10. '  
' → logprob: -11.660550117492676

Token 1243: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07889000326395035
    2. ' sum' → logprob: -2.578890085220337
    3. '(sum' → logprob: -15.453889846801758
    4. '   ' → logprob: -16.953889846801758
    5. '	sum' → logprob: -17.203889846801758
    6. ' ' → logprob: -17.203889846801758
    7. '```' → logprob: -17.703889846801758
    8. ' ' → logprob: -18.578889846801758
    9. 'min' → logprob: -18.953889846801758
    10. '  ' → logprob: -18.953889846801758

Token 1244: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000558512459974736
    2. '(' → logprob: -7.500558376312256
    3. '(
' → logprob: -13.250558853149414
    4. 'ans' → logprob: -13.500558853149414
    5. '(`' → logprob: -14.875558853149414
    6. ' (' → logprob: -15.000558853149414
    7. '(answer' → logprob: -15.125558853149414
    8. '([' → logprob: -15.250558853149414
    9. '(an' → logprob: -15.375558853149414
    10. '```' → logprob: -15.500558853149414

Token 1245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -12.750012397766113
    3. '[i' → logprob: -12.750012397766113
    4. ' )' → logprob: -13.625012397766113
    5. '   ' → logprob: -14.125012397766113
    6. ')
' → logprob: -14.250012397766113
    7. '[:' → logprob: -14.750012397766113
    8. ')`' → logprob: -14.750012397766113
    9. '[])' → logprob: -14.875012397766113
    10. '())' → logprob: -14.875012397766113

Token 1246: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.073266625404358
    2. ')' → logprob: -1.198266625404358
    3. '[' → logprob: -1.448266625404358
    4. ''' → logprob: -3.9482665061950684
    5. ':' → logprob: -3.9482665061950684
    6. ',' → logprob: -4.073266506195068
    7. '```' → logprob: -4.198266506195068
    8. '<|end|>' → logprob: -4.448266506195068
    9. '_' → logprob: -4.823266506195068
    10. ' ' → logprob: -4.823266506195068

Token 1247: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6746158003807068
    2. '[' → logprob: -1.4246158599853516
    3. '<|end|>' → logprob: -2.5496158599853516
    4. '(' → logprob: -2.9246158599853516
    5. '_' → logprob: -3.2996158599853516
    6. '\' → logprob: -3.9246158599853516
    7. ')' → logprob: -4.299615859985352
    8. '   ' → logprob: -4.674615859985352
    9. '#' → logprob: -5.174615859985352
    10. '0' → logprob: -5.424615859985352

Token 1248: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44466158747673035
    2. 'n' → logprob: -2.1946616172790527
    3. '```' → logprob: -2.4446616172790527
    4. 'import' → logprob: -3.0696616172790527
    5. 'input' → logprob: -3.6946616172790527
    6. '(n' → logprob: -4.069661617279053
    7. 's' → logprob: -4.694661617279053
    8. '=' → logprob: -5.069661617279053
    9. ' =' → logprob: -5.069661617279053
    10. 'for' → logprob: -5.319661617279053

Token 1249: '’un' (ID: 9073)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2869184613227844
    2. '=' → logprob: -2.7869184017181396
    3. ' =' → logprob: -3.2869184017181396
    4. '_' → logprob: -3.4119184017181396
    5. 'input' → logprob: -3.6619184017181396
    6. '=sys' → logprob: -4.036918640136719
    7. 'e' → logprob: -4.161918640136719
    8. 'la' → logprob: -4.661918640136719
    9. 'import' → logprob: -4.786918640136719
    10. '=input' → logprob: -4.911918640136719

Token 1250: ' entier' (ID: 80473)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1389669179916382
    2. ' =' → logprob: -1.5139669179916382
    3. 'input' → logprob: -1.8889669179916382
    4. '=' → logprob: -1.8889669179916382
    5. 'n' → logprob: -3.1389670372009277
    6. '_' → logprob: -3.6389670372009277
    7. '=input' → logprob: -3.7639670372009277
    8. 'import' → logprob: -3.8889670372009277
    9. ' input' → logprob: -5.388967037200928
    10. ':' → logprob: -5.513967037200928

Token 1251: ' depuis' (ID: 16277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36917558312416077
    2. 'n' → logprob: -2.494175672531128
    3. ' =' → logprob: -2.494175672531128
    4. '()' → logprob: -2.869175672531128
    5. '=int' → logprob: -3.119175672531128
    6. 'int' → logprob: -3.494175672531128
    7. '(n' → logprob: -5.369175434112549
    8. '(' → logprob: -5.619175434112549
    9. '```' → logprob: -7.119175434112549
    10. '=input' → logprob: -7.244175434112549

Token 1252: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0022590947337448597
    2. 'int' → logprob: -6.377259254455566
    3. ' input' → logprob: -8.752259254455566
    4. '```' → logprob: -8.752259254455566
    5. 'entrée' → logprob: -9.627259254455566
    6. 'stdin' → logprob: -9.627259254455566
    7. 'l' → logprob: -10.502259254455566
    8. '_input' → logprob: -10.877259254455566
    9. 'sys' → logprob: -11.002259254455566
    10. '=input' → logprob: -11.627259254455566

Token 1253: '’entrée' (ID: 120170)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0034893585834652185
    2. '=input' → logprob: -6.3784894943237305
    3. ' input' → logprob: -6.7534894943237305
    4. '```' → logprob: -8.25348949432373
    5. 'import' → logprob: -9.00348949432373
    6. 'stdin' → logprob: -9.12848949432373
    7. '`' → logprob: -10.00348949432373
    8. '_input' → logprob: -10.87848949432373
    9. 's' → logprob: -11.62848949432373
    10. '(input' → logprob: -11.75348949432373

Token 1254: ' standard' (ID: 7024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1317334175109863
    2. 'n' → logprob: -1.1317334175109863
    3. 'int' → logprob: -1.8817334175109863
    4. ' =' → logprob: -2.3817334175109863
    5. '(' → logprob: -3.3817334175109863
    6. '()' → logprob: -3.3817334175109863
    7. '=int' → logprob: -4.006733417510986
    8. '(int' → logprob: -4.881733417510986
    9. '```' → logprob: -5.006733417510986
    10. 'input' → logprob: -5.756733417510986

Token 1255: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10534437000751495
    2. '```' → logprob: -2.480344295501709
    3. 'int' → logprob: -4.980344295501709
    4. 'input' → logprob: -5.980344295501709
    5. '``' → logprob: -6.230344295501709
    6. '
' → logprob: -6.605344295501709
    7. 'x' → logprob: -7.355344295501709
    8. 'num' → logprob: -7.480344295501709
    9. '(n' → logprob: -7.605344295501709
    10. ' =' → logprob: -7.980344295501709

Token 1256: ' ceci' (ID: 98542)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1665230542421341
    2. 'int' → logprob: -2.166522979736328
    3. 'input' → logprob: -3.916522979736328
    4. ' n' → logprob: -4.041522979736328
    5. ' 
' → logprob: -8.041522979736328
    6. ' input' → logprob: -8.666522979736328
    7. ' int' → logprob: -8.666522979736328
    8. '
' → logprob: -8.916522979736328
    9. '=int' → logprob: -9.166522979736328
    10. ' =' → logprob: -9.416522979736328

Token 1257: ' donne' (ID: 30004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013644045684486628
    2. ' =' → logprob: -7.251364231109619
    3. '=int' → logprob: -8.001364707946777
    4. '=input' → logprob: -9.001364707946777
    5. 'n' → logprob: -9.251364707946777
    6. '=n' → logprob: -9.626364707946777
    7. '=
' → logprob: -10.876364707946777
    8. '(n' → logprob: -12.001364707946777
    9. 'int' → logprob: -13.126364707946777
    10. 'input' → logprob: -13.626364707946777

Token 1258: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3166244328022003
    2. 'int' → logprob: -1.316624402999878
    3. 'input' → logprob: -5.816624641418457
    4. ' n' → logprob: -8.316624641418457
    5. ' int' → logprob: -9.691624641418457
    6. '=int' → logprob: -10.316624641418457
    7. '```' → logprob: -10.816624641418457
    8. 'x' → logprob: -12.816624641418457
    9. ' input' → logprob: -13.066624641418457
    10. 'num' → logprob: -13.191624641418457

Token 1259: ' longueur' (ID: 104613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05209588631987572
    2. 'input' → logprob: -3.677095890045166
    3. 'int' → logprob: -4.177095890045166
    4. 'nombre' → logprob: -5.802095890045166
    5. 'user' → logprob: -6.677095890045166
    6. 'import' → logprob: -7.052095890045166
    7. 'code' → logprob: -7.177095890045166
    8. 'next' → logprob: -7.302095890045166
    9. 's' → logprob: -7.427095890045166
    10. 'ent' → logprob: -7.927095890045166

Token 1260: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18698765337467194
    2. ' =' → logprob: -1.8119876384735107
    3. 'n' → logprob: -5.93698787689209
    4. '=int' → logprob: -6.43698787689209
    5. '()' → logprob: -6.93698787689209
    6. '```' → logprob: -7.31198787689209
    7. '(' → logprob: -8.31198787689209
    8. 'of' → logprob: -8.31198787689209
    9. '=input' → logprob: -8.56198787689209
    10. ':' → logprob: -8.81198787689209

Token 1261: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004546254931483418
    2. ' =' → logprob: -7.750454425811768
    3. 'n' → logprob: -10.875454902648926
    4. '=n' → logprob: -12.750454902648926
    5. ',' → logprob: -13.875454902648926
    6. '=int' → logprob: -14.375454902648926
    7. '=
' → logprob: -15.375454902648926
    8. '(n' → logprob: -15.750454902648926
    9. '=input' → logprob: -15.875454902648926
    10. '(' → logprob: -17.12545394897461

Token 1262: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7525696158409119
    2. 'l' → logprob: -1.2525696754455566
    3. 'input' → logprob: -1.7525696754455566
    4. 's' → logprob: -2.7525696754455566
    5. '()' → logprob: -6.752569675445557
    6. 'le' → logprob: -7.502569675445557
    7. '(' → logprob: -7.627569675445557
    8. 'chaine' → logprob: -7.627569675445557
    9. 'string' → logprob: -7.752569675445557
    10. 'n' → logprob: -8.002569198608398

Token 1263: ' sé' (ID: 7462)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.024869181215763092
    2. 'string' → logprob: -4.649868965148926
    3. 'cha' → logprob: -4.899868965148926
    4. ' chaîne' → logprob: -5.149868965148926
    5. 'input' → logprob: -7.149868965148926
    6. 's' → logprob: -7.649868965148926
    7. 'entrée' → logprob: -8.774868965148926
    8. 'ligne' → logprob: -9.024868965148926
    9. 'chain' → logprob: -9.524868965148926
    10. ' chaine' → logprob: -10.024868965148926

Token 1264: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0033113888930529356
    2. 'q' → logprob: -6.6283111572265625
    3. 'quences' → logprob: -6.8783111572265625
    4. 'qu' → logprob: -8.128311157226562
    5. 'string' → logprob: -8.753311157226562
    6. 'chaine' → logprob: -9.378311157226562
    7. 'nt' → logprob: -9.378311157226562
    8. 'tring' → logprob: -9.378311157226562
    9. 'input' → logprob: -9.628311157226562
    10. 'quent' → logprob: -10.378311157226562

Token 1265: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48659542202949524
    2. 'n' → logprob: -1.2365953922271729
    3. ' =' → logprob: -2.361595392227173
    4. '=n' → logprob: -8.361595153808594
    5. '```' → logprob: -8.861595153808594
    6. '=
' → logprob: -9.486595153808594
    7. '=int' → logprob: -9.861595153808594
    8. '(n' → logprob: -10.361595153808594
    9. ',' → logprob: -10.486595153808594
    10. '\' → logprob: -11.486595153808594

Token 1266: ' traiter' (ID: 105852)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48642680048942566
    2. 'int' → logprob: -1.736426830291748
    3. 'trait' → logprob: -2.486426830291748
    4. 'input' → logprob: -2.736426830291748
    5. 'read' → logprob: -4.861426830291748
    6. 'faire' → logprob: -5.236426830291748
    7. 'stdin' → logprob: -5.361426830291748
    8. 'entr' → logprob: -5.611426830291748
    9. 'prendre' → logprob: -5.611426830291748
    10. 'import' → logprob: -5.736426830291748

Token 1267: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3430384397506714
    2. 'n' → logprob: -1.3430384397506714
    3. ' =' → logprob: -3.593038558959961
    4. '=int' → logprob: -7.218038558959961
    5. '=n' → logprob: -7.718038558959961
    6. '=
' → logprob: -7.968038558959961
    7. 'int' → logprob: -9.093038558959961
    8. '(n' → logprob: -9.843038558959961
    9. '```' → logprob: -10.093038558959961
    10. '`' → logprob: -11.343038558959961

Token 1268: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.255023956531659e-05
    2. '```' → logprob: -10.125072479248047
    3. ' n' → logprob: -10.625072479248047
    4. '\n' → logprob: -12.875072479248047
    5. '\' → logprob: -13.750072479248047
    6. '
' → logprob: -13.750072479248047
    7. '`' → logprob: -14.000072479248047
    8. '``' → logprob: -14.125072479248047
    9. ' 
' → logprob: -15.125072479248047
    10. '(n' → logprob: -15.125072479248047

Token 1269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9303306937217712
    2. ' =' → logprob: -0.9303306937217712
    3. ',' → logprob: -1.555330753326416
    4. '=int' → logprob: -11.180330276489258
    5. '=input' → logprob: -11.805330276489258
    6. ' ,' → logprob: -12.305330276489258
    7. ')' → logprob: -12.555330276489258
    8. ' =
' → logprob: -13.680330276489258
    9. ' ' → logprob: -14.680330276489258
    10. '.' → logprob: -14.680330276489258

Token 1270: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007100477814674377
    2. ' int' → logprob: -7.2507100105285645
    3. '[int' → logprob: -18.500709533691406
    4. '10' → logprob: -19.250709533691406
    5. '=int' → logprob: -19.250709533691406
    6. '0' → logprob: -19.750709533691406
    7. '(int' → logprob: -20.250709533691406
    8. '	int' → logprob: -20.625709533691406
    9. '<int' → logprob: -20.750709533691406
    10. '5' → logprob: -21.875709533691406

Token 1271: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0055223614908754826
    2. '(' → logprob: -5.25552225112915
    3. '()' → logprob: -8.630522727966309
    4. 'input' → logprob: -9.130522727966309
    5. '(
' → logprob: -14.630522727966309
    6. '('' → logprob: -14.880522727966309
    7. '("' → logprob: -15.130522727966309
    8. ' (' → logprob: -15.380522727966309
    9. '=input' → logprob: -15.630522727966309
    10. ' input' → logprob: -16.880521774291992

Token 1272: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004156637471169233
    2. '()' → logprob: -5.504156589508057
    3. ')' → logprob: -9.754157066345215
    4. '(' → logprob: -11.379157066345215
    5. ' ())' → logprob: -12.629157066345215
    6. '().' → logprob: -12.754157066345215
    7. '())
' → logprob: -14.129157066345215
    8. '();)' → logprob: -15.004157066345215
    9. '(),' → logprob: -15.129157066345215
    10. '()),' → logprob: -15.129157066345215

Token 1273: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.000000953674316
    3. ' s' → logprob: -17.25
    4. '_s' → logprob: -18.75
    5. '`s' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. '#' → logprob: -19.5
    8. '``' → logprob: -19.875
    9. '(s' → logprob: -20.5
    10. '​' → logprob: -22.25

Token 1274: ' Lecture' (ID: 106534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. 'xs' → logprob: -17.875
    4. ' s' → logprob: -18.125
    5. '
' → logprob: -18.375
    6. '#' → logprob: -18.625
    7. 't' → logprob: -20.625
    8. '`s' → logprob: -21.125
    9. 'import' → logprob: -21.375
    10. 'x' → logprob: -21.375

Token 1275: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.699998676776886
    2. '()' → logprob: -0.699998676776886
    3. '_s' → logprob: -5.32499885559082
    4. '_line' → logprob: -6.94999885559082
    5. '_str' → logprob: -8.32499885559082
    6. '=' → logprob: -8.57499885559082
    7. '_' → logprob: -8.82499885559082
    8. '(' → logprob: -9.32499885559082
    9. '(s' → logprob: -9.44999885559082
    10. 'line' → logprob: -9.94999885559082

Token 1276: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012559457682073116
    2. 's' → logprob: -6.751255989074707
    3. ' input' → logprob: -9.501255989074707
    4. '(input' → logprob: -11.751255989074707
    5. '()' → logprob: -13.626255989074707
    6. '=input' → logprob: -14.126255989074707
    7. 'str' → logprob: -14.376255989074707
    8. '```' → logprob: -15.501255989074707
    9. ' s' → logprob: -16.00125503540039
    10. '()
' → logprob: -16.37625503540039

Token 1277: '’entrée' (ID: 120170)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029882391914725304
    2. '()' → logprob: -3.7798824310302734
    3. '=input' → logprob: -5.904882431030273
    4. 'stdin' → logprob: -6.404882431030273
    5. '()
' → logprob: -6.904882431030273
    6. '```' → logprob: -7.529882431030273
    7. ' input' → logprob: -8.029882431030273
    8. 'entrée' → logprob: -9.279882431030273
    9. 'standard' → logprob: -9.654882431030273
    10. '(input' → logprob: -10.029882431030273

Token 1278: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01157858781516552
    2. 's' → logprob: -4.761578559875488
    3. '().' → logprob: -6.761578559875488
    4. '()
' → logprob: -7.886578559875488
    5. '_line' → logprob: -7.886578559875488
    6. 'string' → logprob: -8.261578559875488
    7. '_str' → logprob: -8.261578559875488
    8. '_s' → logprob: -8.636578559875488
    9. '_string' → logprob: -8.636578559875488
    10. '=' → logprob: -10.511578559875488

Token 1279: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43003079295158386
    2. 's' → logprob: -1.0550308227539062
    3. '()
' → logprob: -7.305030822753906
    4. '().' → logprob: -8.680030822753906
    5. '(s' → logprob: -9.180030822753906
    6. ' s' → logprob: -9.180030822753906
    7. 'n' → logprob: -9.305030822753906
    8. '_s' → logprob: -10.555030822753906
    9. '()>' → logprob: -10.680030822753906
    10. '();' → logprob: -10.930030822753906

Token 1280: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03813857585191727
    2. 'input' → logprob: -3.2881386280059814
    3. ' s' → logprob: -9.413138389587402
    4. ' input' → logprob: -11.163138389587402
    5. 'str' → logprob: -14.288138389587402
    6. '(input' → logprob: -15.413138389587402
    7. '(s' → logprob: -15.788138389587402
    8. 'list' → logprob: -16.03813934326172
    9. '
' → logprob: -16.03813934326172
    10. '()' → logprob: -16.91313934326172

Token 1281: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20295587182044983
    2. 'input' → logprob: -1.7029558420181274
    3. 'str' → logprob: -7.327955722808838
    4. '()' → logprob: -7.952955722808838
    5. 'string' → logprob: -8.452956199645996
    6. 'strip' → logprob: -9.577956199645996
    7. ' s' → logprob: -9.827956199645996
    8. '=input' → logprob: -10.202956199645996
    9. ' input' → logprob: -10.327956199645996
    10. 'n' → logprob: -10.452956199645996

Token 1282: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3942137062549591
    2. '()' → logprob: -1.1442136764526367
    3. '=' → logprob: -5.519213676452637
    4. '_s' → logprob: -6.519213676452637
    5. ' =' → logprob: -7.394213676452637
    6. '_' → logprob: -7.894213676452637
    7. '_str' → logprob: -8.394213676452637
    8. '()
' → logprob: -8.894213676452637
    9. 'string' → logprob: -9.144213676452637
    10. 'str' → logprob: -9.394213676452637

Token 1283: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0003208037815056741
    2. ' caractères' → logprob: -8.625320434570312
    3. 'input' → logprob: -9.500320434570312
    4. 'chars' → logprob: -10.500320434570312
    5. 's' → logprob: -10.625320434570312
    6. 'characters' → logprob: -12.125320434570312
    7. 'char' → logprob: -12.875320434570312
    8. 'texte' → logprob: -13.000320434570312
    9. 'code' → logprob: -13.500320434570312
    10. ' caracteres' → logprob: -14.375320434570312

Token 1284: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.049132514744997025
    2. '()' → logprob: -3.0491325855255127
    3. '=' → logprob: -7.799132347106934
    4. '=s' → logprob: -9.799132347106934
    5. '(s' → logprob: -10.549132347106934
    6. '()
' → logprob: -10.799132347106934
    7. ' s' → logprob: -11.299132347106934
    8. ' =' → logprob: -11.549132347106934
    9. '().' → logprob: -12.299132347106934
    10. '```' → logprob: -13.049132347106934

Token 1285: 's' (ID: 82)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133173882961273
    2. 's' → logprob: -1.3133174180984497
    3. '(input' → logprob: -9.93831729888916
    4. ' input' → logprob: -12.43831729888916
    5. '(s' → logprob: -12.81331729888916
    6. ' s' → logprob: -15.06331729888916
    7. 'str' → logprob: -15.68831729888916
    8. '()' → logprob: -17.063318252563477
    9. '=input' → logprob: -17.188318252563477
    10. '```' → logprob: -17.188318252563477

Token 1286: '',' (ID: 787)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007635493762791157
    2. ' =' → logprob: -4.882635593414307
    3. 's' → logprob: -10.882635116577148
    4. ')' → logprob: -11.882635116577148
    5. '()' → logprob: -13.007635116577148
    6. '=s' → logprob: -14.007635116577148
    7. '=
' → logprob: -14.757635116577148
    8. ',' → logprob: -16.13263511657715
    9. '=input' → logprob: -16.88263511657715
    10. '(' → logprob: -17.13263511657715

Token 1287: ' cette' (ID: 7696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009065360762178898
    2. ' s' → logprob: -4.7590651512146
    3. ' =' → logprob: -8.134065628051758
    4. '=' → logprob: -9.259065628051758
    5. ')' → logprob: -11.009065628051758
    6. '```' → logprob: -11.134065628051758
    7. 'input' → logprob: -11.384065628051758
    8. '=s' → logprob: -11.509065628051758
    9. 'n' → logprob: -13.134065628051758
    10. '_s' → logprob: -13.259065628051758

Token 1288: ' chaîne' (ID: 89288)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12793800234794617
    2. ' =' → logprob: -2.1279380321502686
    3. 's' → logprob: -7.1279377937316895
    4. '=input' → logprob: -9.252938270568848
    5. 'string' → logprob: -10.252938270568848
    6. '=s' → logprob: -11.002938270568848
    7. ' s' → logprob: -11.127938270568848
    8. '_string' → logprob: -11.127938270568848
    9. ')' → logprob: -11.752938270568848
    10. '=
' → logprob: -11.752938270568848

Token 1289: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02328391931951046
    2. ' =' → logprob: -3.7732839584350586
    3. '=input' → logprob: -10.273283958435059
    4. 's' → logprob: -13.273283958435059
    5. ')' → logprob: -14.398283958435059
    6. '()' → logprob: -15.023283958435059
    7. '```' → logprob: -15.273283958435059
    8. ',' → logprob: -15.398283958435059
    9. '_' → logprob: -15.898283958435059
    10. '=s' → logprob: -15.898283958435059

Token 1290: ' trait' (ID: 15458)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.703443770878948e-06
    2. ' input' → logprob: -12.250007629394531
    3. 's' → logprob: -13.625007629394531
    4. '(input' → logprob: -13.875007629394531
    5. '=input' → logprob: -14.375007629394531
    6. 'str' → logprob: -15.625007629394531
    7. '```' → logprob: -17.75000762939453
    8. '<input' → logprob: -19.50000762939453
    9. '	input' → logprob: -20.00000762939453
    10. ',input' → logprob: -20.12500762939453

Token 1291: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7974418997764587
    2. ' =' → logprob: -1.0474419593811035
    3. 'e' → logprob: -1.9224419593811035
    4. '()' → logprob: -4.1724419593811035
    5. 'ée' → logprob: -4.2974419593811035
    6. '()
' → logprob: -4.7974419593811035
    7. '_' → logprob: -5.9224419593811035
    8. '   ' → logprob: -6.4224419593811035
    9. 's' → logprob: -6.5474419593811035
    10. '_input' → logprob: -6.6724419593811035

Token 1292: ' caractère' (ID: 80509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003362966235727072
    2. ' =' → logprob: -8.000336647033691
    3. 's' → logprob: -14.625336647033691
    4. '=input' → logprob: -15.750336647033691
    5. '=s' → logprob: -16.375335693359375
    6. '()' → logprob: -16.875335693359375
    7. '=
' → logprob: -17.500335693359375
    8. ')' → logprob: -18.125335693359375
    9. '.' → logprob: -18.250335693359375
    10. ',' → logprob: -18.375335693359375

Token 1293: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37991008162498474
    2. '()' → logprob: -1.2549101114273071
    3. '=input' → logprob: -4.379909992218018
    4. 's' → logprob: -4.879909992218018
    5. ' =' → logprob: -5.129909992218018
    6. '()
' → logprob: -6.879909992218018
    7. '_input' → logprob: -7.129909992218018
    8. ')' → logprob: -7.254909992218018
    9. '_' → logprob: -7.379909992218018
    10. '=s' → logprob: -7.879909992218018

Token 1294: ' caractère' (ID: 80509)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002465310040861368
    2. 'entrée' → logprob: -6.62746524810791
    3. '=input' → logprob: -7.50246524810791
    4. 'ligne' → logprob: -8.25246524810791
    5. ' input' → logprob: -9.50246524810791
    6. 's' → logprob: -9.75246524810791
    7. 'chaine' → logprob: -10.25246524810791
    8. 'l' → logprob: -10.50246524810791
    9. 'une' → logprob: -10.62746524810791
    10. 'ent' → logprob: -10.75246524810791

Token 1295: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007394690765067935
    2. ' =' → logprob: -7.250739574432373
    3. 's' → logprob: -10.500739097595215
    4. '=s' → logprob: -13.250739097595215
    5. '=input' → logprob: -16.25074005126953
    6. '=
' → logprob: -16.50074005126953
    7. '()' → logprob: -17.62574005126953
    8. ')' → logprob: -17.75074005126953
    9. ',' → logprob: -18.62574005126953
    10. ' s' → logprob: -18.75074005126953

Token 1296: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '`s' → logprob: -17.125
    4. ' s' → logprob: -17.5
    5. '`' → logprob: -21.0
    6. '_s' → logprob: -21.625
    7. '(s' → logprob: -22.375
    8. '
' → logprob: -22.375
    9. '``' → logprob: -22.375
    10. 't' → logprob: -22.75

Token 1297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192990899086
    2. ' =' → logprob: -1.5019298791885376
    3. '_' → logprob: -15.001930236816406
    4. ',' → logprob: -15.501930236816406
    5. 's' → logprob: -15.626930236816406
    6. ')' → logprob: -16.501930236816406
    7. '=input' → logprob: -16.501930236816406
    8. '.' → logprob: -17.626930236816406
    9. '(' → logprob: -17.876930236816406
    10. '[' → logprob: -18.251930236816406

Token 1298: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '(input' → logprob: -20.62509536743164
    4. '=input' → logprob: -20.62509536743164
    5. '<input' → logprob: -22.37509536743164
    6. '	input' → logprob: -22.87509536743164
    7. 'str' → logprob: -23.62509536743164
    8. ',input' → logprob: -24.75009536743164
    9. '.input' → logprob: -25.12509536743164
    10. 'int' → logprob: -25.25009536743164

Token 1299: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021094554103910923
    2. '(' → logprob: -7.502109527587891
    3. '()
' → logprob: -8.00210952758789
    4. 's' → logprob: -8.25210952758789
    5. ')' → logprob: -8.50210952758789
    6. '.strip' → logprob: -8.62710952758789
    7. '().' → logprob: -8.75210952758789
    8. '#' → logprob: -9.00210952758789
    9. '())' → logprob: -9.75210952758789
    10. '<|end|>' → logprob: -9.75210952758789

Token 1300: '#' (ID: 2)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.00017267030489165336
    2. '```' → logprob: -9.00017261505127
    3. 'm' → logprob: -10.12517261505127
    4. '
' → logprob: -13.12517261505127
    5. 'k' → logprob: -13.50017261505127
    6. 'x' → logprob: -13.62517261505127
    7. '#' → logprob: -13.75017261505127
    8. '(xs' → logprob: -13.87517261505127
    9. '``' → logprob: -14.00017261505127
    10. ' xs' → logprob: -14.87517261505127

Token 1301: ' On' (ID: 2160)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.20181237161159515
    2. 'm' → logprob: -1.7018123865127563
    3. 'x' → logprob: -9.576812744140625
    4. 'import' → logprob: -9.576812744140625
    5. '#' → logprob: -9.701812744140625
    6. 'mod' → logprob: -9.826812744140625
    7. 'from' → logprob: -10.076812744140625
    8. '```' → logprob: -10.076812744140625
    9. 'for' → logprob: -11.576812744140625
    10. 'mx' → logprob: -11.951812744140625

Token 1302: ' gén' (ID: 15330)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06385498493909836
    2. 's' → logprob: -3.063854932785034
    3. '=
' → logprob: -6.188855171203613
    4. '```' → logprob: -6.188855171203613
    5. '#' → logprob: -6.313855171203613
    6. ' =' → logprob: -6.563855171203613
    7. 'for' → logprob: -6.563855171203613
    8. 'xs' → logprob: -6.688855171203613
    9. '=int' → logprob: -6.813855171203613
    10. 'x' → logprob: -7.063855171203613

Token 1303: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.7261939644813538
    2. 'n' → logprob: -1.851193904876709
    3. '=' → logprob: -2.351193904876709
    4. 's' → logprob: -2.851193904876709
    5. 'xs' → logprob: -3.101193904876709
    6. 'r' → logprob: -3.726193904876709
    7. 'er' → logprob: -3.851193904876709
    8. '#' → logprob: -3.851193904876709
    9. 'l' → logprob: -4.226193904876709
    10. 'ere' → logprob: -4.476193904876709

Token 1304: ' ' (ID: 220)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.10111557692289352
    2. ' xs' → logprob: -2.4761154651641846
    3. '(xs' → logprob: -4.601115703582764
    4. 'random' → logprob: -6.851115703582764
    5. '[' → logprob: -8.226115226745605
    6. '[]' → logprob: -8.351115226745605
    7. ' random' → logprob: -9.351115226745605
    8. '```' → logprob: -9.601115226745605
    9. 'import' → logprob: -9.726115226745605
    10. 'len' → logprob: -10.226115226745605

Token 1305: '3' (ID: 18)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.24370713531970978
    2. '[x' → logprob: -2.8687071800231934
    3. '[' → logprob: -2.9937071800231934
    4. 'random' → logprob: -3.3687071800231934
    5. '[random' → logprob: -3.3687071800231934
    6. '[n' → logprob: -3.8687071800231934
    7. '4' → logprob: -5.243707180023193
    8. '5' → logprob: -5.243707180023193
    9. '3' → logprob: -5.368707180023193
    10. '10' → logprob: -6.868707180023193

Token 1306: ' grands' (ID: 43085)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1307: ' ent' (ID: 1121)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.36315208673477173
    2. ' random' → logprob: -1.363152027130127
    3. 'xs' → logprob: -3.738152027130127
    4. ' xs' → logprob: -4.863152027130127
    5. 'x' → logprob: -5.488152027130127
    6. 'large' → logprob: -6.113152027130127
    7. 's' → logprob: -6.863152027130127
    8. ' large' → logprob: -6.988152027130127
    9. 'ints' → logprob: -7.113152027130127
    10. ' ' → logprob: -7.363152027130127

Token 1308: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.054476190358400345
    2. 'ier' → logprob: -3.054476261138916
    3. 'er' → logprob: -5.429476261138916
    4. '```' → logprob: -7.554476261138916
    5. 'ières' → logprob: -8.179475784301758
    6. 'r' → logprob: -9.429475784301758
    7. '_' → logprob: -9.804475784301758
    8. 'ieres' → logprob: -10.054475784301758
    9. 'ires' → logprob: -10.054475784301758
    10. 't' → logprob: -10.179475784301758

Token 1309: ' distinct' (ID: 16913)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05346418544650078
    2. '=' → logprob: -3.30346417427063
    3. 'import' → logprob: -4.428464412689209
    4. ',' → logprob: -6.428464412689209
    5. 'xs' → logprob: -6.928464412689209
    6. 's' → logprob: -8.80346393585205
    7. '(xs' → logprob: -8.80346393585205
    8. 'random' → logprob: -8.92846393585205
    9. ' =
' → logprob: -9.42846393585205
    10. '=
' → logprob: -9.92846393585205

Token 1310: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6558208465576172
    2. 'import' → logprob: -1.2808208465576172
    3. '=' → logprob: -2.030820846557617
    4. 'random' → logprob: -3.905820846557617
    5. 'x' → logprob: -4.905820846557617
    6. '```' → logprob: -4.905820846557617
    7. '(xs' → logprob: -4.905820846557617
    8. ',' → logprob: -5.405820846557617
    9. '_random' → logprob: -5.905820846557617
    10. '=random' → logprob: -5.905820846557617

Token 1311: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23235568404197693
    2. '=' → logprob: -1.7323557138442993
    3. 'random' → logprob: -4.60735559463501
    4. 'xs' → logprob: -4.98235559463501
    5. 'import' → logprob: -5.48235559463501
    6. ',' → logprob: -6.23235559463501
    7. 'x' → logprob: -6.73235559463501
    8. 's' → logprob: -6.98235559463501
    9. '(xs' → logprob: -6.98235559463501
    10. '_random' → logprob: -7.10735559463501

Token 1312: ' chacun' (ID: 52136)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2198162078857422
    2. 'random' → logprob: -1.3448162078857422
    3. ' random' → logprob: -1.5948162078857422
    4. '_' → logprob: -2.469816207885742
    5. ' m' → logprob: -2.844816207885742
    6. '[' → logprob: -3.219816207885742
    7. 'x' → logprob: -4.719816207885742
    8. ' 
' → logprob: -4.844816207885742
    9. '```' → logprob: -5.344816207885742
    10. '
' → logprob: -5.344816207885742

Token 1313: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4845317006111145
    2. ' =' → logprob: -0.9845317006111145
    3. ',' → logprob: -5.109531879425049
    4. '=random' → logprob: -6.359531879425049
    5. '```' → logprob: -7.234531879425049
    6. 'import' → logprob: -8.10953140258789
    7. 'random' → logprob: -8.35953140258789
    8. ':' → logprob: -8.60953140258789
    9. ' ,' → logprob: -8.98453140258789
    10. '_random' → logprob: -9.35953140258789

Token 1314: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35922563076019287
    2. 'range' → logprob: -1.6092256307601929
    3. ' range' → logprob: -3.1092257499694824
    4. '(' → logprob: -3.7342257499694824
    5. ' [' → logprob: -3.8592257499694824
    6. 'random' → logprob: -4.859225749969482
    7. ' random' → logprob: -6.609225749969482
    8. '[random' → logprob: -7.109225749969482
    9. '{' → logprob: -7.359225749969482
    10. '(range' → logprob: -7.734225749969482

Token 1315: '’' (ID: 438)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31434768438339233
    2. '[' → logprob: -2.189347743988037
    3. 'range' → logprob: -2.314347743988037
    4. ' [' → logprob: -3.689347743988037
    5. 'e' → logprob: -4.189347743988037
    6. ' la' → logprob: -4.439347743988037
    7. '(' → logprob: -6.064347743988037
    8. '(range' → logprob: -6.814347743988037
    9. ' (' → logprob: -7.314347743988037
    10. ' the' → logprob: -7.939347743988037

Token 1316: 'interval' (ID: 37558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6247943639755249
    2. 'range' → logprob: -1.374794363975525
    3. ' range' → logprob: -1.874794363975525
    4. '(' → logprob: -3.2497944831848145
    5. ' [' → logprob: -4.1247944831848145
    6. '(range' → logprob: -6.2497944831848145
    7. ' (' → logprob: -7.2497944831848145
    8. '[
' → logprob: -8.749794006347656
    9. '```' → logprob: -8.874794006347656
    10. 'random' → logprob: -9.124794006347656

Token 1317: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7616289854049683
    2. '[' → logprob: -1.1366289854049683
    3. 'val' → logprob: -2.511629104614258
    4. 'e' → logprob: -2.636629104614258
    5. 'erval' → logprob: -4.011629104614258
    6. 'v' → logprob: -4.136629104614258
    7. 'erv' → logprob: -5.261629104614258
    8. ' [' → logprob: -5.761629104614258
    9. '(' → logprob: -6.011629104614258
    10. 'er' → logprob: -6.261629104614258

Token 1318: ' [' (ID: 723)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005210870876908302
    2. '[' → logprob: -6.005210876464844
    3. '(range' → logprob: -6.380210876464844
    4. '(
' → logprob: -8.130210876464844
    5. ' (' → logprob: -8.630210876464844
    6. '(low' → logprob: -9.255210876464844
    7. ' =' → logprob: -9.380210876464844
    8. 'range' → logprob: -9.630210876464844
    9. '(random' → logprob: -9.880210876464844
    10. '((' → logprob: -10.130210876464844

Token 1319: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2882319986820221
    2. '(' → logprob: -1.5382319688796997
    3. '100' → logprob: -3.7882320880889893
    4. ' ' → logprob: -5.03823184967041
    5. '1' → logprob: -5.28823184967041
    6. ' (' → logprob: -7.53823184967041
    7. '[' → logprob: -7.91323184967041
    8. '0' → logprob: -8.91323184967041
    9. '900' → logprob: -9.03823184967041
    10. '2' → logprob: -9.16323184967041

Token 1320: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003966317046433687
    2. ' **' → logprob: -5.628966331481934
    3. '9' → logprob: -8.878966331481934
    4. '7' → logprob: -8.878966331481934
    5. '6' → logprob: -9.378966331481934
    6. '8' → logprob: -13.378966331481934
    7. ' ' → logprob: -14.753966331481934
    8. '0' → logprob: -15.503966331481934
    9. '000' → logprob: -15.503966331481934
    10. ' 
' → logprob: -16.253965377807617

Token 1321: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002979721873998642
    2. '6' → logprob: -5.877979755401611
    3. '8' → logprob: -9.502979278564453
    4. '7' → logprob: -9.877979278564453
    5. '12' → logprob: -10.877979278564453
    6. ' ' → logprob: -11.627979278564453
    7. '10' → logprob: -11.877979278564453
    8. '15' → logprob: -12.627979278564453
    9. '18' → logprob: -12.627979278564453
    10. '```' → logprob: -12.877979278564453

Token 1322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5571473240852356
    2. '+' → logprob: -0.9321473240852356
    3. ' ,' → logprob: -3.682147264480591
    4. '**' → logprob: -5.68214750289917
    5. ' +' → logprob: -6.05714750289917
    6. '9' → logprob: -6.93214750289917
    7. '```' → logprob: -7.55714750289917
    8. '7' → logprob: -8.307147026062012
    9. '3' → logprob: -8.557147026062012
    10. '6' → logprob: -8.807147026062012

Token 1323: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00021033499797340482
    2. ' ' → logprob: -8.625210762023926
    3. '(' → logprob: -11.000210762023926
    4. '2' → logprob: -11.500210762023926
    5. '3' → logprob: -14.125210762023926
    6. '100' → logprob: -14.250210762023926
    7. '11' → logprob: -14.250210762023926
    8. '999' → logprob: -14.375210762023926
    9. '```' → logprob: -15.000210762023926
    10. '
' → logprob: -15.625210762023926

Token 1324: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.875097274780273
    3. ' ' → logprob: -10.125097274780273
    4. '100' → logprob: -13.000097274780273
    5. '2' → logprob: -13.625097274780273
    6. '999' → logprob: -14.625097274780273
    7. '200' → logprob: -15.250097274780273
    8. '3' → logprob: -15.375097274780273
    9. '109' → logprob: -15.625097274780273
    10. '```' → logprob: -15.875097274780273

Token 1325: '^' (ID: 61)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001172129064798355
    2. '10' → logprob: -7.501172065734863
    3. '12' → logprob: -7.626172065734863
    4. '```' → logprob: -10.001172065734863
    5. '**' → logprob: -10.501172065734863
    6. '11' → logprob: -10.876172065734863
    7. '+' → logprob: -11.001172065734863
    8. '15' → logprob: -11.251172065734863
    9. '18' → logprob: -12.376172065734863
    10. '13' → logprob: -12.876172065734863

Token 1326: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.016034485772252083
    2. '10' → logprob: -4.8910346031188965
    3. '12' → logprob: -5.0160346031188965
    4. '15' → logprob: -6.8910346031188965
    5. '18' → logprob: -7.7660346031188965
    6. '14' → logprob: -9.016034126281738
    7. '11' → logprob: -9.141034126281738
    8. '13' → logprob: -9.516034126281738
    9. '```' → logprob: -11.891034126281738
    10. '16' → logprob: -12.141034126281738

Token 1327: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6708815693855286
    2. ' +' → logprob: -1.2958815097808838
    3. ']' → logprob: -3.170881509780884
    4. ',' → logprob: -3.795881509780884
    5. ' //' → logprob: -3.795881509780884
    6. ')' → logprob: -3.795881509780884
    7. '```' → logprob: -3.795881509780884
    8. '
' → logprob: -4.045881748199463
    9. '//' → logprob: -4.045881748199463
    10. '**' → logprob: -4.920881748199463

Token 1328: ' pris' (ID: 17549)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1164417564868927
    2. 'random' → logprob: -3.6164417266845703
    3. 'xs' → logprob: -3.6164417266845703
    4. '=' → logprob: -3.8664417266845703
    5. 'import' → logprob: -4.49144172668457
    6. '
' → logprob: -5.24144172668457
    7. '(xs' → logprob: -5.61644172668457
    8. 'x' → logprob: -6.24144172668457
    9. ' xs' → logprob: -6.49144172668457
    10. ',' → logprob: -6.49144172668457

Token 1329: ' au' (ID: 2791)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15661685168743134
    2. 'import' → logprob: -2.9066169261932373
    3. ' =' → logprob: -3.1566169261932373
    4. '_random' → logprob: -4.656616687774658
    5. 'random' → logprob: -4.781616687774658
    6. '```' → logprob: -4.906616687774658
    7. 'from' → logprob: -5.031616687774658
    8. '=' → logprob: -5.406616687774658
    9. '(' → logprob: -5.906616687774658
    10. 'e' → logprob: -6.656616687774658

Token 1330: ' hasard' (ID: 126015)
  Prédit: 'rand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rand' → logprob: -0.6744392514228821
    2. 'random' → logprob: -1.6744391918182373
    3. 'import' → logprob: -1.9244391918182373
    4. '100' → logprob: -2.7994391918182373
    5. '```' → logprob: -3.9244391918182373
    6. '999' → logprob: -4.049439430236816
    7. ' randint' → logprob: -4.299439430236816
    8. '9' → logprob: -4.299439430236816
    9. '10' → logprob: -4.799439430236816
    10. '(' → logprob: -5.549439430236816

Token 1331: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2559569180011749
    2. 'xs' → logprob: -2.2559568881988525
    3. '=' → logprob: -2.7559568881988525
    4. 'x' → logprob: -3.7559568881988525
    5. 'random' → logprob: -4.380957126617432
    6. 'for' → logprob: -5.505957126617432
    7. '(xs' → logprob: -5.505957126617432
    8. 'import' → logprob: -5.630957126617432
    9. '
' → logprob: -6.005957126617432
    10. 's' → logprob: -6.505957126617432

Token 1332: ' utilisés' (ID: 94258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34936758875846863
    2. ',' → logprob: -1.599367618560791
    3. ' ,' → logprob: -3.849367618560791
    4. 'for' → logprob: -4.349367618560791
    5. '
' → logprob: -4.599367618560791
    6. ' )' → logprob: -5.224367618560791
    7. ' for' → logprob: -5.224367618560791
    8. ' ' → logprob: -5.474367618560791
    9. ']' → logprob: -5.599367618560791
    10. '```' → logprob: -5.849367618560791

Token 1333: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12690648436546326
    2. 'import' → logprob: -3.126906394958496
    3. ' =' → logprob: -3.251906394958496
    4. 'for' → logprob: -3.876906394958496
    5. ',' → logprob: -4.751906394958496
    6. 'as' → logprob: -5.751906394958496
    7. ' for' → logprob: -7.001906394958496
    8. ' as' → logprob: -7.251906394958496
    9. 'from' → logprob: -7.751906394958496
    10. ')' → logprob: -8.251906394958496

Token 1334: ' bases' (ID: 31148)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6826416254043579
    2. ',' → logprob: -1.807641625404358
    3. 'random' → logprob: -1.932641625404358
    4. '[
' → logprob: -3.0576415061950684
    5. '[' → logprob: -3.4326415061950684
    6. ')' → logprob: -3.8076415061950684
    7. ',
' → logprob: -4.182641506195068
    8. '[m' → logprob: -4.182641506195068
    9. 'mod' → logprob: -4.682641506195068
    10. 'keys' → logprob: -4.682641506195068

Token 1335: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6973893642425537
    2. ' =' → logprob: -0.8223893642425537
    3. 'xs' → logprob: -3.3223893642425537
    4. 'for' → logprob: -4.072389602661133
    5. '(xs' → logprob: -5.072389602661133
    6. '=
' → logprob: -7.072389602661133
    7. ' xs' → logprob: -7.572389602661133
    8. ' for' → logprob: -7.822389602661133
    9. '_x' → logprob: -8.072389602661133
    10. '_' → logprob: -8.447389602661133

Token 1336: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7960177063941956
    2. '[random' → logprob: -1.4210176467895508
    3. 'random' → logprob: -1.6710176467895508
    4. '[
' → logprob: -2.921017646789551
    5. '[m' → logprob: -2.921017646789551
    6. ' random' → logprob: -4.921017646789551
    7. 'm' → logprob: -6.796017646789551
    8. ' [' → logprob: -7.046017646789551
    9. 'range' → logprob: -7.421017646789551
    10. '
' → logprob: -8.29601764678955

Token 1337: ' hashing' (ID: 185245)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7043434381484985
    2. '[' → logprob: -0.9543434381484985
    3. 'hash' → logprob: -3.329343318939209
    4. '[
' → logprob: -3.704343318939209
    5. ' range' → logprob: -4.579343318939209
    6. 'random' → logprob: -4.954343318939209
    7. '(' → logprob: -5.204343318939209
    8. 'pow' → logprob: -5.204343318939209
    9. 'm' → logprob: -5.454343318939209
    10. 'code' → logprob: -5.829343318939209

Token 1338: '.
' (ID: 558)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.05458071827888489
    2. ' =' → logprob: -3.6795806884765625
    3. '
' → logprob: -4.8045806884765625
    4. 'import' → logprob: -5.1795806884765625
    5. '(xs' → logprob: -5.3045806884765625
    6. '=' → logprob: -6.3045806884765625
    7. 'for' → logprob: -6.3045806884765625
    8. ' xs' → logprob: -6.6795806884765625
    9. ',' → logprob: -6.9295806884765625
    10. '_x' → logprob: -7.4295806884765625

Token 1339: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0009624350932426751
    2. ' xs' → logprob: -7.375962257385254
    3. '
' → logprob: -8.875962257385254
    4. '(xs' → logprob: -9.750962257385254
    5. 'random' → logprob: -10.125962257385254
    6. 'x' → logprob: -10.250962257385254
    7. 'import' → logprob: -10.875962257385254
    8. '```' → logprob: -11.250962257385254
    9. '[
' → logprob: -11.625962257385254
    10. '[x' → logprob: -13.000962257385254

Token 1340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815064437687397
    2. '=' → logprob: -4.018150806427002
    3. ' =[' → logprob: -14.893150329589844
    4. '[' → logprob: -15.768150329589844
    5. ',' → logprob: -16.393150329589844
    6. '=[' → logprob: -17.143150329589844
    7. '＝' → logprob: -17.268150329589844
    8. ' ' → logprob: -17.893150329589844
    9. '=[]' → logprob: -18.018150329589844
    10. ' =
' → logprob: -18.018150329589844

Token 1341: ' random' (ID: 7526)
  Prédit: '[random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[random' → logprob: -0.002657701028510928
    2. ' [' → logprob: -6.002657890319824
    3. '[' → logprob: -8.752657890319824
    4. 'random' → logprob: -10.877657890319824
    5. '[rand' → logprob: -13.127657890319824
    6. ' random' → logprob: -13.502657890319824
    7. '[
' → logprob: -13.752657890319824
    8. 'sorted' → logprob: -14.877657890319824
    9. '[list' → logprob: -16.752656936645508
    10. '[r' → logprob: -16.877656936645508

Token 1342: '.sample' (ID: 47480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.39856263995170593
    2. '.sample' → logprob: -1.3985626697540283
    3. '.randint' → logprob: -2.5235626697540283
    4. '.choice' → logprob: -7.023562431335449
    5. '.randrange' → logprob: -7.398562431335449
    6. ' .' → logprob: -9.52356243133545
    7. 'sample' → logprob: -12.64856243133545
    8. 'choices' → logprob: -12.89856243133545
    9. '.rand' → logprob: -13.52356243133545
    10. '   ' → logprob: -13.64856243133545

Token 1343: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -5.512236498361744e-07
    2. '(list' → logprob: -15.375000953674316
    3. 'range' → logprob: -16.25
    4. '(' → logprob: -16.375
    5. '([' → logprob: -18.125
    6. '(pop' → logprob: -18.75
    7. '((' → logprob: -20.0
    8. ' range' → logprob: -21.625
    9. '(
' → logprob: -21.75
    10. '	range' → logprob: -22.375

Token 1344: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.236549335066229e-05
    2. '10' → logprob: -11.000021934509277
    3. '(int' → logprob: -12.125021934509277
    4. '((' → logprob: -15.875021934509277
    5. '(pow' → logprob: -17.500022888183594
    6. '[' → logprob: -18.250022888183594
    7. ' (' → logprob: -18.750022888183594
    8. 'int' → logprob: -18.750022888183594
    9. '[int' → logprob: -20.000022888183594
    10. '(
' → logprob: -20.125022888183594

Token 1345: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011510594777064398
    2. '100' → logprob: -9.250115394592285
    3. '(' → logprob: -11.125115394592285
    4. ' ' → logprob: -13.375115394592285
    5. 'int' → logprob: -13.500115394592285
    6. '1' → logprob: -13.625115394592285
    7. '[' → logprob: -18.87511444091797
    8. 'pow' → logprob: -19.37511444091797
    9. '999' → logprob: -19.50011444091797
    10. '_' → logprob: -19.50011444091797

Token 1346: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3153667449951172
    2. '9' → logprob: -1.3153667449951172
    3. ' **' → logprob: -6.315366744995117
    4. ' ' → logprob: -8.940366744995117
    5. '_' → logprob: -10.315366744995117
    6. '909' → logprob: -10.315366744995117
    7. '```' → logprob: -10.440366744995117
    8. '900' → logprob: -10.440366744995117
    9. '^' → logprob: -11.065366744995117
    10. '[' → logprob: -12.190366744995117

Token 1347: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. '10' → logprob: -14.125000953674316
    3. '8' → logprob: -15.125000953674316
    4. '```' → logprob: -16.375001907348633
    5. '12' → logprob: -17.312501907348633
    6. '09' → logprob: -17.312501907348633
    7. '11' → logprob: -17.875001907348633
    8. ' ' → logprob: -17.937501907348633
    9. 'nine' → logprob: -17.937501907348633
    10. '``' → logprob: -18.125001907348633

Token 1348: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.856408536899835e-05
    2. '8' → logprob: -10.625028610229492
    3. '10' → logprob: -13.125028610229492
    4. '18' → logprob: -14.625028610229492
    5. '12' → logprob: -14.750028610229492
    6. '15' → logprob: -15.312528610229492
    7. '11' → logprob: -15.375028610229492
    8. '``' → logprob: -15.500028610229492
    9. '09' → logprob: -15.812528610229492
    10. '```' → logprob: -15.937528610229492

Token 1349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017602674197405577
    2. ' ,' → logprob: -6.376760482788086
    3. '+' → logprob: -10.751760482788086
    4. '100' → logprob: -11.251760482788086
    5. ',
' → logprob: -11.876760482788086
    6. '```' → logprob: -11.876760482788086
    7. '10' → logprob: -12.626760482788086
    8. '(' → logprob: -13.376760482788086
    9. '0' → logprob: -14.001760482788086
    10. '**' → logprob: -14.126760482788086

Token 1350: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006454797694459558
    2. ' ' → logprob: -7.375645637512207
    3. '(' → logprob: -11.375645637512207
    4. '100' → logprob: -11.875645637512207
    5. '999' → logprob: -15.625645637512207
    6. ' (' → logprob: -16.00064468383789
    7. 'int' → logprob: -16.12564468383789
    8. '11' → logprob: -16.75064468383789
    9. '110' → logprob: -17.25064468383789
    10. '2' → logprob: -17.25064468383789

Token 1351: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.3458322731312364e-06
    2. 'int' → logprob: -12.375007629394531
    3. '(' → logprob: -12.875007629394531
    4. ' ' → logprob: -15.875007629394531
    5. '2' → logprob: -16.12500762939453
    6. '100' → logprob: -16.25000762939453
    7. '11' → logprob: -16.25000762939453
    8. '999' → logprob: -17.37500762939453
    9. '3' → logprob: -17.75000762939453
    10. '101' → logprob: -18.87500762939453

Token 1352: ' **' (ID: 6240)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00046618093620054424
    2. '11' → logprob: -8.125466346740723
    3. '9' → logprob: -9.375466346740723
    4. '```' → logprob: -10.375466346740723
    5. '+' → logprob: -10.500466346740723
    6. '12' → logprob: -11.500466346740723
    7. ' ' → logprob: -11.625466346740723
    8. '**' → logprob: -12.875466346740723
    9. '14' → logprob: -13.625466346740723
    10. '15' → logprob: -14.000466346740723

Token 1353: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001777960715116933
    2. '11' → logprob: -9.000177383422852
    3. '9' → logprob: -9.875177383422852
    4. '12' → logprob: -13.375177383422852
    5. '```' → logprob: -14.250177383422852
    6. '15' → logprob: -15.750177383422852
    7. '``' → logprob: -15.875177383422852
    8. '13' → logprob: -16.12517738342285
    9. '14' → logprob: -16.37517738342285
    10. '19' → logprob: -16.75017738342285

Token 1354: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.337155355140567e-05
    2. '9' → logprob: -10.000062942504883
    3. '11' → logprob: -11.000062942504883
    4. '```' → logprob: -14.750062942504883
    5. '{' → logprob: -15.375062942504883
    6. '12' → logprob: -15.875062942504883
    7. '``' → logprob: -16.500062942504883
    8. '19' → logprob: -16.875062942504883
    9. '1' → logprob: -17.125062942504883
    10. '13' → logprob: -17.125062942504883

Token 1355: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07351889461278915
    2. '),' → logprob: -2.698518991470337
    3. '(),' → logprob: -5.948518753051758
    4. ' ,' → logprob: -8.073518753051758
    5. '0' → logprob: -8.823518753051758
    6. '(' → logprob: -9.198518753051758
    7. '()),' → logprob: -9.323518753051758
    8. '100' → logprob: -9.573518753051758
    9. '()' → logprob: -9.698518753051758
    10. ')' → logprob: -9.823518753051758

Token 1356: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'k' → logprob: -19.000036239624023
    4. '   ' → logprob: -19.375036239624023
    5. ' k' → logprob: -19.625036239624023
    6. '  ' → logprob: -19.750036239624023
    7. ',' → logprob: -20.625036239624023
    8. ')' → logprob: -21.625036239624023
    9. '[' → logprob: -21.750036239624023
    10. ' three' → logprob: -22.125036239624023

Token 1357: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -19.0
    4. 'k' → logprob: -19.75
    5. '[' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. '4' → logprob: -21.0
    8. '۳' → logprob: -21.25
    9. ')' → logprob: -21.25
    10. '   ' → logprob: -21.625

Token 1358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007627923507243395
    2. ',' → logprob: -4.882627964019775
    3. ' )' → logprob: -11.382627487182617
    4. '),' → logprob: -12.757627487182617
    5. ' ,' → logprob: -13.382627487182617
    6. ',)' → logprob: -13.757627487182617
    7. ')
' → logprob: -13.882627487182617
    8. '[' → logprob: -14.257627487182617
    9. '))' → logprob: -14.507627487182617
    10. ')}' → logprob: -14.632627487182617

Token 1359: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.2200749754119897e-06
    2. 'mod' → logprob: -13.500001907348633
    3. '
' → logprob: -14.375001907348633
    4. 'print' → logprob: -17.125001907348633
    5. '#' → logprob: -17.250001907348633
    6. '```' → logprob: -17.250001907348633
    7. ' m' → logprob: -17.500001907348633
    8. 'import' → logprob: -17.625001907348633
    9. 'for' → logprob: -18.375001907348633
    10. '  
' → logprob: -19.250001907348633

Token 1360: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.900034299585968e-05
    2. 'print' → logprob: -10.000088691711426
    3. 'mod' → logprob: -10.125088691711426
    4. 'MOD' → logprob: -13.625088691711426
    5. 'result' → logprob: -13.875088691711426
    6. '#' → logprob: -14.875088691711426
    7. '
' → logprob: -15.000088691711426
    8. '```' → logprob: -15.250088691711426
    9. 'prime' → logprob: -16.000089645385742
    10. 'import' → logprob: -16.375089645385742

Token 1361: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. 's' → logprob: -15.023245811462402
    4. ',' → logprob: -16.14824676513672
    5. ' =
' → logprob: -17.02324676513672
    6. ' ' → logprob: -17.77324676513672
    7. ')' → logprob: -18.52324676513672
    8. '=random' → logprob: -18.64824676513672
    9. '.' → logprob: -18.89824676513672
    10. '_' → logprob: -19.02324676513672

Token 1362: ' un' (ID: 537)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03842448443174362
    2. '(' → logprob: -3.413424491882324
    3. '109' → logprob: -5.913424491882324
    4. '100' → logprob: -6.913424491882324
    5. 'int' → logprob: -7.788424491882324
    6. '998' → logprob: -8.038424491882324
    7. '230' → logprob: -8.788424491882324
    8. '(int' → logprob: -10.038424491882324
    9. ' ' → logprob: -10.413424491882324
    10. '999' → logprob: -10.913424491882324

Token 1363: ' très' (ID: 9412)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25258010625839233
    2. '(' → logprob: -2.377580165863037
    3. '100' → logprob: -2.877580165863037
    4. 'int' → logprob: -3.252580165863037
    5. '[' → logprob: -4.627580165863037
    6. '998' → logprob: -4.627580165863037
    7. '[int' → logprob: -5.752580165863037
    8. '154' → logprob: -6.252580165863037
    9. '109' → logprob: -6.377580165863037
    10. '(int' → logprob: -6.502580165863037

Token 1364: ' grand' (ID: 6363)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -1.1113108396530151
    2. '10' → logprob: -1.3613108396530151
    3. ' ' → logprob: -2.1113109588623047
    4. '999' → logprob: -2.4863109588623047
    5. '100' → logprob: -2.6113109588623047
    6. '_' → logprob: -3.6113109588623047
    7. '
' → logprob: -4.111310958862305
    8. '=' → logprob: -4.111310958862305
    9. '997' → logprob: -4.486310958862305
    10. '109' → logprob: -4.611310958862305

Token 1365: ' nombre' (ID: 9733)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06974688917398453
    2. 'prime' → logprob: -3.569746971130371
    3. '100' → logprob: -4.444746971130371
    4. ' ' → logprob: -4.569746971130371
    5. '999' → logprob: -4.944746971130371
    6. '109' → logprob: -5.694746971130371
    7. '998' → logprob: -6.569746971130371
    8. '```' → logprob: -7.319746971130371
    9. 'int' → logprob: -7.569746971130371
    10. ' prime' → logprob: -7.819746971130371

Token 1366: ' premier' (ID: 15506)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931602358818054
    2. ' =' → logprob: -0.6931602358818054
    3. ',' → logprob: -12.568160057067871
    4. '=
' → logprob: -12.943160057067871
    5. ' =
' → logprob: -13.193160057067871
    6. '_' → logprob: -13.443160057067871
    7. '
' → logprob: -13.818160057067871
    8. '```' → logprob: -13.818160057067871
    9. '#' → logprob: -14.568160057067871
    10. 's' → logprob: -15.068160057067871

Token 1367: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08905135840177536
    2. '=' → logprob: -2.4640512466430664
    3. ' =
' → logprob: -9.589051246643066
    4. ',' → logprob: -10.589051246643066
    5. 'm' → logprob: -11.964051246643066
    6. '=
' → logprob: -11.964051246643066
    7. '=m' → logprob: -13.464051246643066
    8. ' m' → logprob: -14.464051246643066
    9. 's' → logprob: -14.589051246643066
    10. ' =
' → logprob: -14.589051246643066

Token 1368: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12917077541351318
    2. '100' → logprob: -2.7541708946228027
    3. '(' → logprob: -3.6291708946228027
    4. '998' → logprob: -4.129170894622803
    5. '230' → logprob: -5.254170894622803
    6. '999' → logprob: -5.504170894622803
    7. '[' → logprob: -6.879170894622803
    8. ' ' → logprob: -7.629170894622803
    9. '109' → logprob: -7.754170894622803
    10. '=' → logprob: -8.129170417785645

Token 1369: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.12360417842865
    2. '576' → logprob: -1.87360417842865
    3. '547' → logprob: -2.4986042976379395
    4. '549' → logprob: -3.1236042976379395
    5. '147' → logprob: -3.2486042976379395
    6. '574' → logprob: -3.4986042976379395
    7. '536' → logprob: -3.6236042976379395
    8. '560' → logprob: -3.6236042976379395
    9. '59' → logprob: -3.7486042976379395
    10. '598' → logprob: -4.1236042976379395

Token 1370: '61' (ID: 8954)
  Prédit: '61'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.0005986657342873514
    2. '31' → logprob: -7.625598430633545
    3. '63' → logprob: -9.625598907470703
    4. '59' → logprob: -10.875598907470703
    5. '62' → logprob: -12.000598907470703
    6. '127' → logprob: -12.375598907470703
    7. '60' → logprob: -12.375598907470703
    8. '53' → logprob: -12.750598907470703
    9. '64' → logprob: -13.750598907470703
    10. '122' → logprob: -13.875598907470703

Token 1371: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006756932940334082
    2. ' -' → logprob: -5.006756782531738
    3. '+' → logprob: -10.256756782531738
    4. '–' → logprob: -13.006756782531738
    5. '−' → logprob: -13.006756782531738
    6. '1' → logprob: -14.506756782531738
    7. '```' → logprob: -15.006756782531738
    8. ')' → logprob: -15.131756782531738
    9. '
' → logprob: -15.506756782531738
    10. '()-' → logprob: -15.506756782531738

Token 1372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '
' → logprob: -12.750007629394531
    3. '```' → logprob: -13.750007629394531
    4. ' ' → logprob: -14.750007629394531
    5. '(' → logprob: -15.187507629394531
    6. '+' → logprob: -15.562507629394531
    7. '25' → logprob: -15.562507629394531
    8. '5' → logprob: -15.812507629394531
    9. '11' → logprob: -15.875007629394531
    10. '61' → logprob: -16.06250762939453

Token 1373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. '
' → logprob: -12.125008583068848
    3. '```' → logprob: -13.750008583068848
    4. '...
' → logprob: -14.375008583068848
    5. '...' → logprob: -15.687508583068848
    6. '

' → logprob: -15.875008583068848
    7. '
' → logprob: -16.062509536743164
    8. '25' → logprob: -16.187509536743164
    9. '`' → logprob: -16.312509536743164
    10. '-' → logprob: -16.312509536743164

Token 1374: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5238920450210571
    2. ' -' → logprob: -1.1488920450210571
    3. ')' → logprob: -2.6488919258117676
    4. '+' → logprob: -4.898891925811768
    5. ' +' → logprob: -5.648891925811768
    6. ')
' → logprob: -5.773891925811768
    7. '
' → logprob: -6.148891925811768
    8. '#' → logprob: -6.148891925811768
    9. '```' → logprob: -7.773891925811768
    10. 'm' → logprob: -8.148892402648926

Token 1375: ' ' (ID: 220)
  Prédit: '230'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '230' → logprob: -0.0002646735229063779
    2. '(' → logprob: -8.375265121459961
    3. '231' → logprob: -11.125265121459961
    4. '922' → logprob: -11.750265121459961
    5. '2' → logprob: -12.625265121459961
    6. '233' → logprob: -13.375265121459961
    7. '#' → logprob: -13.625265121459961
    8. '((' → logprob: -13.875265121459961
    9. ' ' → logprob: -14.000265121459961
    10. '(m' → logprob: -14.000265121459961

Token 1376: '230' (ID: 15752)
  Prédit: '230'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '230' → logprob: -0.00021807955636177212
    2. '(' → logprob: -8.500218391418457
    3. '231' → logprob: -12.000218391418457
    4. '922' → logprob: -12.875218391418457
    5. '2' → logprob: -13.000218391418457
    6. '233' → logprob: -13.875218391418457
    7. '((' → logprob: -13.875218391418457
    8. '#' → logprob: -15.000218391418457
    9. '(m' → logprob: -15.375218391418457
    10. ' ' → logprob: -15.750218391418457

Token 1377: '584' (ID: 46833)
  Prédit: '584'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '584' → logprob: -1.6405310816480778e-05
    2. '
' → logprob: -12.875016212463379
    3. '592' → logprob: -13.375016212463379
    4. '588' → logprob: -13.500016212463379
    5. '591' → logprob: -13.625016212463379
    6. '589' → logprob: -13.625016212463379
    7. '587' → logprob: -14.000016212463379
    8. '```' → logprob: -14.125016212463379
    9. '[' → logprob: -14.562516212463379
    10. '292' → logprob: -14.750016212463379

Token 1378: '300' (ID: 4095)
  Prédit: '684'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '684' → logprob: -1.252784013748169
    2. '584' → logprob: -1.877784013748169
    3. '317' → logprob: -2.752784013748169
    4. '682' → logprob: -3.002784013748169
    5. '687' → logprob: -3.252784013748169
    6. '667' → logprob: -3.377784013748169
    7. '685' → logprob: -3.377784013748169
    8. '686' → logprob: -3.502784013748169
    9. '617' → logprob: -3.627784013748169
    10. '697' → logprob: -3.877784013748169

Token 1379: '921' (ID: 41703)
  Prédit: '584'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '584' → logprob: -0.43217387795448303
    2. '591' → logprob: -2.68217396736145
    3. '595' → logprob: -2.80717396736145
    4. '59' → logprob: -3.05717396736145
    5. '617' → logprob: -3.05717396736145
    6. '597' → logprob: -3.80717396736145
    7. '695' → logprob: -4.307173728942871
    8. '697' → logprob: -4.682173728942871
    9. '585' → logprob: -4.932173728942871
    10. '619' → logprob: -5.307173728942871

Token 1380: '369' (ID: 34976)
  Prédit: '395'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '395' → logprob: -1.2621288299560547
    2. '584' → logprob: -1.5121288299560547
    3. '695' → logprob: -2.1371288299560547
    4. '595' → logprob: -2.5121288299560547
    5. '1' → logprob: -2.6371288299560547
    6. '425' → logprob: -4.262128829956055
    7. '245' → logprob: -4.762128829956055
    8. '621' → logprob: -4.887128829956055
    9. '495' → logprob: -4.887128829956055
    10. '7' → logprob: -5.012128829956055

Token 1381: '395' (ID: 34688)
  Prédit: '395'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '395' → logprob: -0.001566045917570591
    2. '397' → logprob: -7.626565933227539
    3. '394' → logprob: -8.376565933227539
    4. '685' → logprob: -8.626565933227539
    5. '393' → logprob: -9.126565933227539
    6. '399' → logprob: -9.751565933227539
    7. '396' → logprob: -9.876565933227539
    8. '39' → logprob: -10.001565933227539
    9. '405' → logprob: -10.251565933227539
    10. '245' → logprob: -10.626565933227539

Token 1382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02861446887254715
    2. '3' → logprob: -4.028614521026611
    3. '5' → logprob: -5.403614521026611
    4. '35' → logprob: -6.528614521026611
    5. '33' → logprob: -6.653614521026611
    6. '7' → logprob: -6.653614521026611
    7. '9' → logprob: -8.028614044189453
    8. '-' → logprob: -8.028614044189453
    9. '```' → logprob: -8.403614044189453
    10. '189' → logprob: -8.653614044189453

Token 1383: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7302446961402893
    2. '+' → logprob: -1.3552446365356445
    3. ' +' → logprob: -1.6052446365356445
    4. ')
' → logprob: -2.8552446365356445
    5. '
' → logprob: -7.6052446365356445
    6. ' )' → logprob: -7.9802446365356445
    7. '#' → logprob: -8.480244636535645
    8. ')
' → logprob: -8.605244636535645
    9. '```' → logprob: -8.980244636535645
    10. '-' → logprob: -9.355244636535645

Token 1384: ' On' (ID: 2160)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00035369666875340044
    2. '230' → logprob: -8.500353813171387
    3. ' =' → logprob: -9.500353813171387
    4. ' m' → logprob: -10.375353813171387
    5. '=' → logprob: -10.500353813171387
    6. '
' → logprob: -11.250353813171387
    7. '=
' → logprob: -14.375353813171387
    8. ',' → logprob: -14.625353813171387
    9. '=m' → logprob: -14.625353813171387
    10. '```' → logprob: -14.625353813171387

Token 1385: ' l' (ID: 305)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016650289297103882
    2. ' =' → logprob: -4.141650199890137
    3. '=
' → logprob: -7.891650199890137
    4. 'm' → logprob: -9.141650199890137
    5. '#' → logprob: -9.391650199890137
    6. 'continue' → logprob: -11.641650199890137
    7. '+=' → logprob: -11.891650199890137
    8. '=

' → logprob: -12.016650199890137
    9. '*=' → logprob: -12.516650199890137
    10. '```' → logprob: -12.641650199890137

Token 1386: '’util' (ID: 39053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00979292206466198
    2. ' =' → logprob: -4.634792804718018
    3. '=
' → logprob: -10.259793281555176
    4. '=

' → logprob: -14.384793281555176
    5. '#' → logprob: -15.259793281555176
    6. ',' → logprob: -15.634793281555176
    7. ')' → logprob: -15.634793281555176
    8. 's' → logprob: -15.759793281555176
    9. ' =
' → logprob: -15.759793281555176
    10. '=int' → logprob: -16.00979232788086

Token 1387: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14443080127239227
    2. 'se' → logprob: -2.2694308757781982
    3. 'sé' → logprob: -4.644430637359619
    4. 'ise' → logprob: -4.894430637359619
    5. 'isé' → logprob: -5.019430637359619
    6. '#' → logprob: -5.769430637359619
    7. '```' → logprob: -6.769430637359619
    8. 'is' → logprob: -7.269430637359619
    9. 'ser' → logprob: -7.519430637359619
    10. 'm' → logprob: -8.394431114196777

Token 1388: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05553002282977104
    2. ' =' → logprob: -2.930530071258545
    3. '230' → logprob: -7.555530071258545
    4. '=
' → logprob: -9.430529594421387
    5. '#' → logprob: -11.055529594421387
    6. '
' → logprob: -11.430529594421387
    7. 'm' → logprob: -12.555529594421387
    8. ' ' → logprob: -12.930529594421387
    9. ')' → logprob: -12.930529594421387
    10. ' =
' → logprob: -13.055529594421387

Token 1389: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9254348278045654
    2. ' m' → logprob: -0.9254348278045654
    3. 'm' → logprob: -2.6754348278045654
    4. ')' → logprob: -3.0504348278045654
    5. '1' → logprob: -3.3004348278045654
    6. '2' → logprob: -4.3004350662231445
    7. '230' → logprob: -4.3004350662231445
    8. 'mod' → logprob: -5.1754350662231445
    9. '10' → logprob: -5.3004350662231445
    10. ' )' → logprob: -5.6754350662231445

Token 1390: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28355228900909424
    2. ' =' → logprob: -1.4085522890090942
    3. 'm' → logprob: -6.533552169799805
    4. '=
' → logprob: -8.033552169799805
    5. '
' → logprob: -8.283552169799805
    6. '#' → logprob: -9.158552169799805
    7. '=m' → logprob: -9.283552169799805
    8. '230' → logprob: -9.783552169799805
    9. ' =
' → logprob: -10.533552169799805
    10. ' m' → logprob: -10.908552169799805

Token 1391: ' minim' (ID: 23874)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0247802734375
    2. '(' → logprob: -1.1497802734375
    3. '230' → logprob: -1.3997802734375
    4. '10' → logprob: -3.3997802734375
    5. 'hash' → logprob: -4.2747802734375
    6. '(m' → logprob: -4.7747802734375
    7. 'mod' → logprob: -5.1497802734375
    8. ' (' → logprob: -5.6497802734375
    9. '#' → logprob: -6.1497802734375
    10. '233' → logprob: -6.1497802734375

Token 1392: 'iser' (ID: 7466)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.9423069953918457
    2. 'um' → logprob: -1.3173069953918457
    3. 'iser' → logprob: -1.8173069953918457
    4. 'er' → logprob: -2.5673069953918457
    5. 'm' → logprob: -3.1923069953918457
    6. '=' → logprob: -4.192306995391846
    7. 'us' → logprob: -4.942306995391846
    8. '```' → logprob: -5.067306995391846
    9. 'izer' → logprob: -5.317306995391846
    10. '#' → logprob: -5.692306995391846

Token 1393: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15487611293792725
    2. '1' → logprob: -3.029876232147217
    3. 'le' → logprob: -4.529876232147217
    4. '(' → logprob: -4.654876232147217
    5. ' ' → logprob: -4.654876232147217
    6. ' le' → logprob: -4.779876232147217
    7. '#' → logprob: -4.904876232147217
    8. ' la' → logprob: -4.904876232147217
    9. ' #' → logprob: -5.029876232147217
    10. ' )' → logprob: -5.279876232147217

Token 1394: ' risque' (ID: 46386)
  Prédit: 'ris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ris' → logprob: -0.3499261736869812
    2. ' risque' → logprob: -1.224926233291626
    3. ' risques' → logprob: -7.349925994873047
    4. 'risk' → logprob: -7.599925994873047
    5. ' ris' → logprob: -8.474925994873047
    6. 'collision' → logprob: -9.724925994873047
    7. 'nombre' → logprob: -10.849925994873047
    8. ' risk' → logprob: -11.099925994873047
    9. 'coll' → logprob: -11.224925994873047
    10. ' Ris' → logprob: -12.599925994873047

Token 1395: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000533967511728406
    2. '=
' → logprob: -8.250534057617188
    3. ' =' → logprob: -8.250534057617188
    4. '#' → logprob: -12.750534057617188
    5. ',' → logprob: -13.125534057617188
    6. '=

' → logprob: -13.500534057617188
    7. '_' → logprob: -14.000534057617188
    8. ')' → logprob: -14.000534057617188
    9. '=m' → logprob: -14.000534057617188
    10. ' =
' → logprob: -14.875534057617188

Token 1396: ' collision' (ID: 34967)
  Prédit: 'collision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collision' → logprob: -0.3179953694343567
    2. 'coll' → logprob: -1.692995309829712
    3. ' collisions' → logprob: -2.942995309829712
    4. 'hash' → logprob: -3.442995309829712
    5. '
' → logprob: -6.067995548248291
    6. ' collision' → logprob: -7.692995548248291
    7. '235' → logprob: -8.567995071411133
    8. '1' → logprob: -8.567995071411133
    9. '230' → logprob: -9.067995071411133
    10. 'overflow' → logprob: -9.442995071411133

Token 1397: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21037809550762177
    2. ' =' → logprob: -1.7103780508041382
    3. 'm' → logprob: -5.460378170013428
    4. '=m' → logprob: -5.960378170013428
    5. '=
' → logprob: -6.585378170013428
    6. ' =
' → logprob: -7.835378170013428
    7. ')' → logprob: -9.83537769317627
    8. ',' → logprob: -9.83537769317627
    9. ' m' → logprob: -9.96037769317627
    10. '(m' → logprob: -10.58537769317627

Token 1398: ' has' (ID: 853)
  Prédit: ' hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hash' → logprob: -1.5294831991195679
    2. 'mod' → logprob: -1.9044831991195679
    3. ' m' → logprob: -2.1544833183288574
    4. ' modulo' → logprob: -2.4044833183288574
    5. 'hash' → logprob: -2.6544833183288574
    6. ' mod' → logprob: -3.0294833183288574
    7. ' #' → logprob: -3.0294833183288574
    8. ')' → logprob: -3.0294833183288574
    9. 'm' → logprob: -3.1544833183288574
    10. ' ' → logprob: -3.2794833183288574

Token 1399: 'hs' (ID: 9467)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7513540983200073
    2. 'ard' → logprob: -1.2513540983200073
    3. 'ash' → logprob: -2.876354217529297
    4. 'hash' → logprob: -2.876354217529297
    5. 'ques' → logprob: -3.501354217529297
    6. 'que' → logprob: -3.751354217529297
    7. 'ch' → logprob: -4.501354217529297
    8. 'ards' → logprob: -4.751354217529297
    9. '#' → logprob: -4.751354217529297
    10. 'q' → logprob: -5.626354217529297

Token 1400: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2313833385705948
    2. 'm' → logprob: -2.2313833236694336
    3. ' =' → logprob: -2.4813833236694336
    4. ')' → logprob: -5.106383323669434
    5. '=m' → logprob: -5.231383323669434
    6. '=
' → logprob: -7.106383323669434
    7. '(m' → logprob: -7.231383323669434
    8. '
' → logprob: -7.231383323669434
    9. ' m' → logprob: -8.106383323669434
    10. '```' → logprob: -8.106383323669434

Token 1401: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.632542913896032e-05
    2. '230' → logprob: -10.250046730041504
    3. '```' → logprob: -11.625046730041504
    4. ' m' → logprob: -14.000046730041504
    5. '
' → logprob: -14.625046730041504
    6. '#' → logprob: -15.625046730041504
    7. '``' → logprob: -16.000045776367188
    8. '`' → logprob: -16.125045776367188
    9. 'mod' → logprob: -17.125045776367188
    10. '235' → logprob: -17.375045776367188

Token 1402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' =
' → logprob: -14.475207328796387
    4. ',' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.22520637512207
    6. '=
' → logprob: -17.47520637512207
    7. ' =
' → logprob: -18.22520637512207
    8. '=

' → logprob: -18.60020637512207
    9. '＝' → logprob: -18.85020637512207
    10. ' ' → logprob: -19.47520637512207

Token 1403: ' ' (ID: 220)
  Prédit: '230'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '230' → logprob: -0.0015985334757715464
    2. '(' → logprob: -6.501598358154297
    3. '2' → logprob: -9.251598358154297
    4. ' ' → logprob: -15.626598358154297
    5. ' (' → logprob: -17.251598358154297
    6. '((' → logprob: -17.501598358154297
    7. '231' → logprob: -17.626598358154297
    8. '0' → logprob: -19.876598358154297
    9. '232' → logprob: -20.001598358154297
    10. '233' → logprob: -20.251598358154297

Token 1404: '230' (ID: 15752)
  Prédit: '230'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '230' → logprob: -0.0001963881659321487
    2. '(' → logprob: -8.62519645690918
    3. '2' → logprob: -11.00019645690918
    4. '((' → logprob: -18.12519645690918
    5. '231' → logprob: -18.37519645690918
    6. ' ' → logprob: -19.62519645690918
    7. '922' → logprob: -20.12519645690918
    8. '0' → logprob: -20.12519645690918
    9. '\(' → logprob: -20.25019645690918
    10. '`' → logprob: -20.37519645690918

Token 1405: '584' (ID: 46833)
  Prédit: '584'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '584' → logprob: -3.8889261304575484e-06
    2. '
' → logprob: -13.125003814697266
    3. '```' → logprob: -13.875003814697266
    4. ' ' → logprob: -15.500003814697266
    5. '585' → logprob: -15.500003814697266
    6. '5' → logprob: -15.750003814697266
    7. '588' → logprob: -15.750003814697266
    8. '582' → logprob: -16.625003814697266
    9. '``' → logprob: -17.000003814697266
    10. '184' → logprob: -17.250003814697266

Token 1406: '300' (ID: 4095)
  Prédit: '300'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '300' → logprob: -8.061054359131958e-06
    2. '
' → logprob: -12.750007629394531
    3. ' ' → logprob: -13.750007629394531
    4. '301' → logprob: -13.875007629394531
    5. '   ' → logprob: -14.125007629394531
    6. '3' → logprob: -14.375007629394531
    7. '```' → logprob: -14.750007629394531
    8. '30' → logprob: -15.000007629394531
    9. '330' → logprob: -15.750007629394531
    10. '       ' → logprob: -16.25000762939453

Token 1407: '921' (ID: 41703)
  Prédit: '921'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '921' → logprob: -0.5294650197029114
    2. '300' → logprob: -0.9044650197029114
    3. '307' → logprob: -7.029465198516846
    4. '302' → logprob: -7.029465198516846
    5. '309' → logprob: -7.029465198516846
    6. '321' → logprob: -7.279465198516846
    7. '301' → logprob: -7.529465198516846
    8. '317' → logprob: -8.029464721679688
    9. '305' → logprob: -8.154464721679688
    10. '304' → logprob: -8.279464721679688

Token 1408: '369' (ID: 34976)
  Prédit: '369'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '369' → logprob: -0.11290046572685242
    2. '395' → logprob: -2.237900495529175
    3. '409' → logprob: -9.987900733947754
    4. '396' → logprob: -11.237900733947754
    5. '368' → logprob: -12.362900733947754
    6. '295' → logprob: -12.862900733947754
    7. '695' → logprob: -13.237900733947754
    8. '367' → logprob: -13.487900733947754
    9. '309' → logprob: -13.612900733947754
    10. '375' → logprob: -13.987900733947754

Token 1409: '395' (ID: 34688)
  Prédit: '395'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '395' → logprob: -6.511406809295295e-06
    2. '795' → logprob: -12.375006675720215
    3. '295' → logprob: -14.375006675720215
    4. '405' → logprob: -14.750006675720215
    5. '396' → logprob: -15.250006675720215
    6. '394' → logprob: -15.625006675720215
    7. '```' → logprob: -15.750006675720215
    8. '398' → logprob: -16.2500057220459
    9. '
' → logprob: -16.3750057220459
    10. '415' → logprob: -16.6250057220459

Token 1410: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08639246225357056
    2. '7' → logprob: -2.586392402648926
    3. '1' → logprob: -5.211392402648926
    4. '2' → logprob: -6.836392402648926
    5. '457' → logprob: -8.461392402648926
    6. '5' → logprob: -8.711392402648926
    7. '357' → logprob: -9.586392402648926
    8. '907' → logprob: -9.961392402648926
    9. '857' → logprob: -10.086392402648926
    10. '957' → logprob: -10.086392402648926

Token 1411: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011037569493055344
    2. 'result' → logprob: -4.636037349700928
    3. '
' → logprob: -6.761037349700928
    4. '```' → logprob: -9.636037826538086
    5. '#' → logprob: -10.886037826538086
    6. '#print' → logprob: -11.636037826538086
    7. '<|end|>' → logprob: -11.761037826538086
    8. '``' → logprob: -12.136037826538086
    9. ' print' → logprob: -12.261037826538086
    10. 'output' → logprob: -12.511037826538086

Token 1412: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04864300414919853
    2. 'result' → logprob: -3.048643112182617
    3. '
' → logprob: -10.673643112182617
    4. 'ans' → logprob: -11.923643112182617
    5. 'output' → logprob: -12.048643112182617
    6. '```' → logprob: -12.048643112182617
    7. 'res' → logprob: -12.298643112182617
    8. 'answer' → logprob: -12.423643112182617
    9. '#' → logprob: -12.923643112182617
    10. '#print' → logprob: -14.048643112182617

Token 1413: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006716079078614712
    2. 'result' → logprob: -5.006716251373291
    3. 'answer' → logprob: -14.756715774536133
    4. 'res' → logprob: -15.881715774536133
    5. 'output' → logprob: -16.756715774536133
    6. 'ans' → logprob: -17.006715774536133
    7. ' print' → logprob: -17.756715774536133
    8. '
' → logprob: -18.756715774536133
    9. 'rés' → logprob: -18.756715774536133
    10. 'resultado' → logprob: -19.006715774536133

Token 1414: ' appelle' (ID: 111796)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009331366163678467
    2. 'result' → logprob: -7.2509331703186035
    3. 'ans' → logprob: -9.625932693481445
    4. '#' → logprob: -9.750932693481445
    5. '=' → logprob: -10.625932693481445
    6. '#print' → logprob: -10.875932693481445
    7. ' print' → logprob: -11.250932693481445
    8. 'answer' → logprob: -11.625932693481445
    9. ' =' → logprob: -12.000932693481445
    10. 'output' → logprob: -12.125932693481445

Token 1415: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0013385741040110588
    2. '(s' → logprob: -7.376338481903076
    3. ' solve' → logprob: -7.876338481903076
    4. 'print' → logprob: -8.501338958740234
    5. 'result' → logprob: -9.501338958740234
    6. '(
' → logprob: -10.001338958740234
    7. 'ans' → logprob: -12.501338958740234
    8. 'answer' → logprob: -12.876338958740234
    9. '(' → logprob: -14.251338958740234
    10. '
' → logprob: -14.376338958740234

Token 1416: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009168167016468942
    2. 'solve' → logprob: -7.000916957855225
    3. 'result' → logprob: -12.375916481018066
    4. ' print' → logprob: -15.125916481018066
    5. '#print' → logprob: -15.125916481018066
    6. '```' → logprob: -15.375916481018066
    7. 'pr' → logprob: -16.000917434692383
    8. 'r' → logprob: -16.500917434692383
    9. '
' → logprob: -16.750917434692383
    10. 'println' → logprob: -16.875917434692383

Token 1417: ' solve' (ID: 17722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003756375052034855
    2. 'result' → logprob: -5.753756523132324
    3. 'solve' → logprob: -7.503756523132324
    4. '(print' → logprob: -11.128756523132324
    5. '```' → logprob: -12.378756523132324
    6. '=' → logprob: -12.503756523132324
    7. 'answer' → logprob: -13.753756523132324
    8. 'output' → logprob: -14.253756523132324
    9. 'def' → logprob: -14.378756523132324
    10. ' print' → logprob: -14.378756523132324

Token 1418: ' avec' (ID: 3937)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0076198759488761425
    2. '(s' → logprob: -5.507619857788086
    3. '(' → logprob: -6.007619857788086
    4. '(
' → logprob: -6.882619857788086
    5. 'solve' → logprob: -11.007619857788086
    6. '```' → logprob: -11.507619857788086
    7. '((' → logprob: -12.132619857788086
    8. 'n' → logprob: -12.257619857788086
    9. 's' → logprob: -12.507619857788086
    10. '(ans' → logprob: -12.632619857788086

Token 1419: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011765359668061137
    2. '(n' → logprob: -6.751176357269287
    3. ' n' → logprob: -12.001176834106445
    4. '
' → logprob: -16.626176834106445
    5. '```' → logprob: -17.126176834106445
    6. '[n' → logprob: -17.876176834106445
    7. 'len' → logprob: -18.376176834106445
    8. 'print' → logprob: -18.501176834106445
    9. 'result' → logprob: -18.626176834106445
    10. '_n' → logprob: -18.876176834106445

Token 1420: ' les' (ID: 1341)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026860725483857095
    2. '(' → logprob: -8.500268936157227
    3. 'n' → logprob: -9.875268936157227
    4. '(
' → logprob: -12.250268936157227
    5. 'arguments' → logprob: -13.000268936157227
    6. 'parameters' → logprob: -13.375268936157227
    7. 'args' → logprob: -13.625268936157227
    8. 'params' → logprob: -13.875268936157227
    9. '```' → logprob: -13.875268936157227
    10. 'the' → logprob: -13.875268936157227

Token 1421: ' paramètres' (ID: 130696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018207302317023277
    2. '(n' → logprob: -4.01820707321167
    3. ' n' → logprob: -10.268207550048828
    4. 'arguments' → logprob: -11.518207550048828
    5. ')n' → logprob: -12.268207550048828
    6. 'parameters' → logprob: -12.893207550048828
    7. '[n' → logprob: -13.143207550048828
    8. 'args' → logprob: -14.018207550048828
    9. 'param' → logprob: -14.268207550048828
    10. 'params' → logprob: -14.393207550048828

Token 1422: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003424951864872128
    2. '(
' → logprob: -8.87534236907959
    3. '(' → logprob: -9.12534236907959
    4. 'result' → logprob: -9.87534236907959
    5. '(s' → logprob: -11.75034236907959
    6. '```' → logprob: -12.12534236907959
    7. '
' → logprob: -12.37534236907959
    8. ',' → logprob: -12.37534236907959
    9. '(ans' → logprob: -12.62534236907959
    10. '_result' → logprob: -12.75034236907959

Token 1423: ' puis' (ID: 18766)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05030444636940956
    2. 'print' → logprob: -3.050304412841797
    3. ' n' → logprob: -6.550304412841797
    4. 'result' → logprob: -8.675304412841797
    5. ' print' → logprob: -10.175304412841797
    6. 'ans' → logprob: -10.300304412841797
    7. '(n' → logprob: -11.425304412841797
    8. ')' → logprob: -11.675304412841797
    9. '
' → logprob: -11.800304412841797
    10. 'answer' → logprob: -11.925304412841797

Token 1424: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001242772996192798
    2. ' print' → logprob: -9.000123977661133
    3. '(print' → logprob: -14.375123977661133
    4. '```' → logprob: -15.875123977661133
    5. '
' → logprob: -16.750123977661133
    6. '_print' → logprob: -18.250123977661133
    7. '#print' → logprob: -18.500123977661133
    8. 'prin' → logprob: -19.625123977661133
    9. '   ' → logprob: -19.750123977661133
    10. 'pr' → logprob: -20.125123977661133

Token 1425: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4021237802808173e-05
    2. ' print' → logprob: -12.375014305114746
    3. '```' → logprob: -12.750014305114746
    4. '#' → logprob: -12.875014305114746
    5. '#print' → logprob: -13.125014305114746
    6. '
' → logprob: -14.000014305114746
    7. 'println' → logprob: -15.125014305114746
    8. '_print' → logprob: -15.500014305114746
    9. 'pr' → logprob: -15.750014305114746
    10. 'prints' → logprob: -16.37501335144043

Token 1426: ' le' (ID: 505)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004588314797729254
    2. '(' → logprob: -6.0045881271362305
    3. 'solve' → logprob: -6.6295881271362305
    4. '(
' → logprob: -7.8795881271362305
    5. '(print' → logprob: -8.00458812713623
    6. '()' → logprob: -10.37958812713623
    7. 'print' → logprob: -11.00458812713623
    8. '(solution' → logprob: -11.50458812713623
    9. '(sum' → logprob: -11.87958812713623
    10. '(sol' → logprob: -12.37958812713623

Token 1427: ' résultat' (ID: 62556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4434465169906616
    2. '(s' → logprob: -1.1934465169906616
    3. '(result' → logprob: -3.193446636199951
    4. '(
' → logprob: -5.318446636199951
    5. 'solve' → logprob: -5.568446636199951
    6. '(solution' → logprob: -5.818446636199951
    7. 'result' → logprob: -6.818446636199951
    8. '()' → logprob: -7.193446636199951
    9. '(res' → logprob: -9.443446159362793
    10. '(

' → logprob: -9.693446159362793

Token 1428: ' retourn' (ID: 150215)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.42973795533180237
    2. 'print' → logprob: -1.17973792552948
    3. '(' → logprob: -3.4297380447387695
    4. '(s' → logprob: -5.3047380447387695
    5. '(
' → logprob: -5.8047380447387695
    6. '()' → logprob: -7.3047380447387695
    7. '()
' → logprob: -7.6797380447387695
    8. 'solve' → logprob: -8.80473804473877
    9. '(result' → logprob: -8.92973804473877
    10. '(ans' → logprob: -9.92973804473877

Token 1429: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006248357240110636
    2. 'ée' → logprob: -5.631248474121094
    3. 'e' → logprob: -6.006248474121094
    4. 'er' → logprob: -9.131248474121094
    5. 'ed' → logprob: -10.506248474121094
    6. '()' → logprob: -10.756248474121094
    7. 'print' → logprob: -11.631248474121094
    8. ')' → logprob: -12.756248474121094
    9. 'ee' → logprob: -12.756248474121094
    10. 'è' → logprob: -13.381248474121094

Token 1430: ' par' (ID: 686)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.01670960709452629
    2. 'print' → logprob: -5.141709804534912
    3. '(s' → logprob: -5.266709804534912
    4. '(' → logprob: -5.266709804534912
    5. '()' → logprob: -8.141709327697754
    6. '(
' → logprob: -9.516709327697754
    7. '()
' → logprob: -11.516709327697754
    8. 'solve' → logprob: -12.141709327697754
    9. '(output' → logprob: -12.391709327697754
    10. '```' → logprob: -12.766709327697754

Token 1431: ' solve' (ID: 17722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00644132262095809
    2. 'solve' → logprob: -5.256441116333008
    3. '(print' → logprob: -6.756441116333008
    4. ' print' → logprob: -10.131441116333008
    5. '(s' → logprob: -13.131441116333008
    6. ' solve' → logprob: -13.506441116333008
    7. '(' → logprob: -15.381441116333008
    8. '(
' → logprob: -17.256441116333008
    9. '(solution' → logprob: -17.506441116333008
    10. '```' → logprob: -17.506441116333008

Token 1432: '.
' (ID: 558)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.056368231773376465
    2. '(' → logprob: -3.681368350982666
    3. '(s' → logprob: -3.681368350982666
    4. 'print' → logprob: -5.556368350982666
    5. '()' → logprob: -8.056367874145508
    6. '(
' → logprob: -9.556367874145508
    7. '(output' → logprob: -10.181367874145508
    8. '```' → logprob: -10.431367874145508
    9. '(write' → logprob: -10.806367874145508
    10. '(solution' → logprob: -11.181367874145508

Token 1433: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.000000953674316
    3. '```' → logprob: -15.125000953674316
    4. '
' → logprob: -16.75
    5. '(print' → logprob: -17.875
    6. '``' → logprob: -19.25
    7. 'pr' → logprob: -20.5
    8. 'result' → logprob: -20.75
    9. '    
' → logprob: -22.625
    10. 'for' → logprob: -22.75

Token 1434: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02329147979617119
    2. '(' → logprob: -3.77329158782959
    3. 'solve' → logprob: -10.64829158782959
    4. '('' → logprob: -11.64829158782959
    5. '(solution' → logprob: -12.39829158782959
    6. '(sol' → logprob: -12.77329158782959
    7. '(
' → logprob: -13.39829158782959
    8. '()' → logprob: -13.52329158782959
    9. '("' → logprob: -13.64829158782959
    10. '(f' → logprob: -14.39829158782959

Token 1435: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.016246913000941277
    2. '(s' → logprob: -4.391246795654297
    3. ')' → logprob: -6.141246795654297
    4. 'ol' → logprob: -7.516246795654297
    5. 'solve' → logprob: -7.641246795654297
    6. '(' → logprob: -8.641246795654297
    7. '())' → logprob: -10.266246795654297
    8. 'ove' → logprob: -10.391246795654297
    9. 'olution' → logprob: -10.516246795654297
    10. '))' → logprob: -10.516246795654297

Token 1436: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024727347772568464
    2. '(' → logprob: -8.50024700164795
    3. ' (' → logprob: -10.25024700164795
    4. '(len' → logprob: -12.50024700164795
    5. '(
' → logprob: -12.75024700164795
    6. ')' → logprob: -13.62524700164795
    7. ')(' → logprob: -15.25024700164795
    8. ')n' → logprob: -16.125247955322266
    9. 'n' → logprob: -16.625247955322266
    10. '(s' → logprob: -16.875247955322266

Token 1437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020854694594163448
    2. ',s' → logprob: -8.750208854675293
    3. ' ,' → logprob: -10.125208854675293
    4. ',n' → logprob: -12.875208854675293
    5. '(' → logprob: -13.125208854675293
    6. '(s' → logprob: -13.250208854675293
    7. ',
' → logprob: -13.875208854675293
    8. 's' → logprob: -14.125208854675293
    9. '(n' → logprob: -14.125208854675293
    10. ')' → logprob: -14.500208854675293

Token 1438: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25192973017692566
    2. ' s' → logprob: -1.501929759979248
    3. '(s' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.126930236816406
    5. '	s' → logprob: -16.126930236816406
    6. ')' → logprob: -16.251930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '```' → logprob: -17.376930236816406
    9. ')s' → logprob: -17.751930236816406
    10. ' ' → logprob: -18.251930236816406

Token 1439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.289473822107539e-05
    2. ' ,' → logprob: -9.750062942504883
    3. ',
' → logprob: -13.000062942504883
    4. '(xs' → logprob: -14.000062942504883
    5. ',x' → logprob: -14.500062942504883
    6. '   ' → logprob: -15.000062942504883
    7. ',n' → logprob: -16.125062942504883
    8. 's' → logprob: -16.375062942504883
    9. '`,' → logprob: -16.625062942504883
    10. '‌,' → logprob: -17.250062942504883

Token 1440: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.00043138445471413434
    2. ' xs' → logprob: -7.750431537628174
    3. '(xs' → logprob: -14.125431060791016
    4. '-xs' → logprob: -19.875431060791016
    5. 'Xs' → logprob: -20.125431060791016
    6. ')' → logprob: -22.375431060791016
    7. ' ' → logprob: -22.375431060791016
    8. '   ' → logprob: -22.500431060791016
    9. 's' → logprob: -23.875431060791016
    10. '```' → logprob: -24.000431060791016

Token 1441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.811348480870947e-05
    2. ',m' → logprob: -10.25004768371582
    3. ' ,' → logprob: -11.50004768371582
    4. ',
' → logprob: -13.50004768371582
    5. '`,' → logprob: -15.00004768371582
    6. ',n' → logprob: -15.87504768371582
    7. '   ' → logprob: -15.87504768371582
    8. ')' → logprob: -16.37504768371582
    9. '))' → logprob: -16.37504768371582
    10. '<|end|>' → logprob: -16.37504768371582

Token 1442: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8624639324116288e-06
    2. ' m' → logprob: -13.250001907348633
    3. ')m' → logprob: -21.875001907348633
    4. '	m' → logprob: -22.750001907348633
    5. ' м' → logprob: -24.125001907348633
    6. '   ' → logprob: -24.125001907348633
    7. ')' → logprob: -24.500001907348633
    8. '))' → logprob: -24.750001907348633
    9. '$m' → logprob: -24.750001907348633
    10. 'м' → logprob: -24.875001907348633

Token 1443: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.64839569455944e-05
    2. ')' → logprob: -9.500076293945312
    3. '))
' → logprob: -14.000076293945312
    4. ')))' → logprob: -14.750076293945312
    5. ' ))' → logprob: -15.750076293945312
    6. '()))' → logprob: -16.625076293945312
    7. '])' → logprob: -17.625076293945312
    8. ')
' → logprob: -18.375076293945312
    9. ''))' → logprob: -19.125076293945312
    10. '));' → logprob: -19.250076293945312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1441
Tokens correctement prédits (1ère position, stricte): 319
Tokens correctement prédits (1ère position, avec adaptation): 332
Tokens correctement prédits (top 10): 744
Précision stricte (1ère position): 22.14%
Précision adaptée (1ère position): 23.04%
Précision (top 10): 51.63%
================================================================================
