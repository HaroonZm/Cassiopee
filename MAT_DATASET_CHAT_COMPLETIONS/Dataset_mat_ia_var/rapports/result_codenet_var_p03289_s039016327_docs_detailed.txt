================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def check_string_format():
    """
    Vérifie si une chaîne saisie respecte les règles suivantes :
    1. Le premier caractère est 'A'.
    2. La chaîne contient exactement un 'C' dans la partie entre le deuxième et l'avant-dernier caractère.
    3. Tous les autres caractères sont en minuscules.
    Affiche 'AC' si la chaîne respecte ces règles, sinon affiche 'WA'.
    """
    s = list(input())  # Convertit la chaîne d'entrée en une liste de caractères pour manipulation

    # Vérifie que le premier caractère est 'A'
    if s[0] == 'A':
        del s[0]  # Supprime le 'A' pour traiter le reste de la chaîne

        # Compte le nombre de fois où 'C' apparaît dans la sous-liste sans le premier ni le dernier caractère
        if s[1:-1].count('C') == 1:
            s.remove('C')  # Enlève la première occurrence de 'C' pour valider les minuscules ensuite

            # Vérifie que tous les autres caractères sont en minuscules
            for i in range(len(s)):
                if s[i].isupper():
                    print('WA')  # Si une majuscule est trouvée, la chaîne est incorrecte
                    sys.exit()

            print('AC')  # La chaîne respecte toutes les règles
        else:
            print('WA')  # 'C' n'apparaît pas exactement une fois au bon endroit
    else:
        print('WA')  # Le premier caractère n'est pas 'A'

if __name__ == "__main__":
    check_string_format()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006065667141228914
    2. '_space' → logprob: -5.881065845489502
    3. '(' → logprob: -6.506065845489502
    4. ' _' → logprob: -8.006065368652344
    5. '_name' → logprob: -8.256065368652344
    6. '_password' → logprob: -9.006065368652344
    7. '_check' → logprob: -9.131065368652344
    8. '```' → logprob: -9.506065368652344
    9. ' ' → logprob: -9.756065368652344
    10. '_character' → logprob: -9.881065368652344

Token 6: '_format' (ID: 19832)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20268870890140533
    2. '_' → logprob: -1.7026886940002441
    3. ' (' → logprob: -8.577689170837402
    4. 's' → logprob: -8.827689170837402
    5. '(_' → logprob: -8.952689170837402
    6. '_string' → logprob: -9.077689170837402
    7. ':' → logprob: -9.452689170837402
    8. '_:' → logprob: -10.077689170837402
    9. '```' → logprob: -10.077689170837402
    10. '_(' → logprob: -10.202689170837402

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006942047039046884
    2. '(:' → logprob: -8.000694274902344
    3. '_' → logprob: -9.250694274902344
    4. '():' → logprob: -9.375694274902344
    5. '(_:' → logprob: -10.000694274902344
    6. ':' → logprob: -10.250694274902344
    7. 's' → logprob: -11.250694274902344
    8. ' (' → logprob: -11.625694274902344
    9. '(s' → logprob: -11.625694274902344
    10. '('' → logprob: -11.750694274902344

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17397934198379517
    2. '(' → logprob: -2.2989792823791504
    3. '```' → logprob: -3.0489792823791504
    4. ':' → logprob: -5.54897928237915
    5. ' ' → logprob: -6.79897928237915
    6. ''' → logprob: -7.17397928237915
    7. '(space' → logprob: -7.29897928237915
    8. '\' → logprob: -7.29897928237915
    9. ' (' → logprob: -7.29897928237915
    10. '    ' → logprob: -7.42397928237915

Token 9: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1900995969772339
    2. ' ' → logprob: -2.5650997161865234
    3. 'input' → logprob: -4.065099716186523
    4. 'pass' → logprob: -4.440099716186523
    5. '    ' → logprob: -4.565099716186523
    6. 's' → logprob: -4.690099716186523
    7. 'a' → logprob: -4.940099716186523
    8. '(' → logprob: -5.065099716186523
    9. 'return' → logprob: -5.315099716186523
    10. 'n' → logprob: -5.690099716186523

Token 10: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.821686327457428
    2. '   ' → logprob: -1.3216862678527832
    3. 'Check' → logprob: -1.9466862678527832
    4. 'Checks' → logprob: -2.321686267852783
    5. 'Validate' → logprob: -4.446686267852783
    6. 'Returns' → logprob: -5.071686267852783
    7. ' Checks' → logprob: -5.071686267852783
    8. 'Detect' → logprob: -5.446686267852783
    9. '""' → logprob: -5.696686267852783
    10. '       ' → logprob: -5.946686267852783

Token 11: ' Vér' (ID: 159169)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.3518686592578888
    2. 'Checks' → logprob: -1.3518686294555664
    3. '   ' → logprob: -4.101868629455566
    4. '"""' → logprob: -4.476868629455566
    5. 'Validate' → logprob: -5.476868629455566
    6. 'Verify' → logprob: -6.476868629455566
    7. 'Valid' → logprob: -6.726868629455566
    8. ' Checks' → logprob: -7.351868629455566
    9. 'Pass' → logprob: -7.976868629455566
    10. '       ' → logprob: -8.101868629455566

Token 12: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0019186449935659766
    2. 'if' → logprob: -6.626918792724609
    3. 'ifier' → logprob: -7.876918792724609
    4. 'ifi' → logprob: -9.25191879272461
    5. 'ify' → logprob: -10.00191879272461
    6. 'ifiez' → logprob: -10.12691879272461
    7. 'ifies' → logprob: -10.75191879272461
    8. 'ifié' → logprob: -12.50191879272461
    9. 'ification' → logprob: -13.00191879272461
    10. 'i' → logprob: -13.25191879272461

Token 13: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.30217909812927246
    2. ' if' → logprob: -1.8021790981292725
    3. ' que' → logprob: -2.9271790981292725
    4. ' la' → logprob: -4.052179336547852
    5. 'si' → logprob: -4.677179336547852
    6. '   ' → logprob: -4.927179336547852
    7. ' le' → logprob: -5.677179336547852
    8. 's' → logprob: -6.427179336547852
    9. ' ' → logprob: -6.677179336547852
    10. ' l' → logprob: -8.177179336547852

Token 14: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1440422683954239
    2. 'la' → logprob: -2.3940422534942627
    3. ' le' → logprob: -4.019042491912842
    4. 'le' → logprob: -4.769042491912842
    5. '   ' → logprob: -5.019042491912842
    6. ' une' → logprob: -6.269042491912842
    7. 'l' → logprob: -6.269042491912842
    8. 'une' → logprob: -6.394042491912842
    9. ' l' → logprob: -6.769042491912842
    10. ' the' → logprob: -6.894042491912842

Token 15: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07073511183261871
    2. 'cha' → logprob: -3.070735216140747
    3. 'chaine' → logprob: -4.320734977722168
    4. ' chaine' → logprob: -5.195734977722168
    5. '   ' → logprob: -6.570734977722168
    6. ' string' → logprob: -7.070734977722168
    7. 'string' → logprob: -8.195734977722168
    8. ' ' → logprob: -8.820734977722168
    9. ' cha' → logprob: -9.070734977722168
    10. 's' → logprob: -9.445734977722168

Token 16: ' sais' (ID: 30010)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29798218607902527
    2. ' est' → logprob: -2.0479822158813477
    3. ' ' → logprob: -2.7979822158813477
    4. ' d' → logprob: -4.297982215881348
    5. 'de' → logprob: -4.422982215881348
    6. 'd' → logprob: -5.172982215881348
    7. ' donnée' → logprob: -5.297982215881348
    8. ' a' → logprob: -5.422982215881348
    9. 'est' → logprob: -5.422982215881348
    10. '   ' → logprob: -5.547982215881348

Token 17: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.09132474660873413
    2. 'it' → logprob: -2.466324806213379
    3. '   ' → logprob: -7.466324806213379
    4. '>' → logprob: -8.341324806213379
    5. 'i' → logprob: -8.341324806213379
    6. 'ite' → logprob: -9.091324806213379
    7. '#' → logprob: -9.091324806213379
    8. ' ' → logprob: -9.216324806213379
    9. '"' → logprob: -9.341324806213379
    10. '<' → logprob: -9.591324806213379

Token 18: ' respecte' (ID: 140483)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3743279278278351
    2. ' par' → logprob: -1.4993278980255127
    3. ' respecte' → logprob: -2.8743278980255127
    4. 'par' → logprob: -4.249328136444092
    5. 'est' → logprob: -4.874328136444092
    6. ' ' → logprob: -6.374328136444092
    7. '```' → logprob: -6.374328136444092
    8. ' respect' → logprob: -6.624328136444092
    9. ' a' → logprob: -6.749328136444092
    10. '   ' → logprob: -6.999328136444092

Token 19: ' les' (ID: 1341)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.32229283452033997
    2. ' le' → logprob: -1.5722928047180176
    3. 'le' → logprob: -3.8222928047180176
    4. '   ' → logprob: -3.9472928047180176
    5. 'un' → logprob: -4.322292804718018
    6. ' les' → logprob: -5.072292804718018
    7. ' la' → logprob: -5.947292804718018
    8. ' une' → logprob: -6.447292804718018
    9. '    ' → logprob: -6.822292804718018
    10. ' ' → logprob: -7.447292804718018

Token 20: ' règles' (ID: 67042)
  Prédit: ' critères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' critères' → logprob: -0.3606785833835602
    2. ' contraintes' → logprob: -2.2356786727905273
    3. ' règles' → logprob: -2.4856786727905273
    4. ' conditions' → logprob: -3.9856786727905273
    5. 'esp' → logprob: -4.235678672790527
    6. '   ' → logprob: -4.235678672790527
    7. ' conventions' → logprob: -4.735678672790527
    8. 'crit' → logprob: -4.735678672790527
    9. 'conditions' → logprob: -4.735678672790527
    10. ' crit' → logprob: -4.985678672790527

Token 21: ' suivantes' (ID: 106173)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2700139284133911
    2. ' d' → logprob: -1.5200139284133911
    3. ' ' → logprob: -5.145013809204102
    4. '   ' → logprob: -6.020013809204102
    5. 'de' → logprob: -6.020013809204102
    6. '```' → logprob: -6.270013809204102
    7. ' du' → logprob: -6.520013809204102
    8. 'd' → logprob: -6.770013809204102
    9. '  ' → logprob: -7.020013809204102
    10. ' des' → logprob: -8.145013809204102

Token 22: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.34616246819496155
    2. ':' → logprob: -1.4711624383926392
    3. '\n' → logprob: -3.5961625576019287
    4. '   ' → logprob: -3.5961625576019287
    5. ' ' → logprob: -5.97116231918335
    6. '\' → logprob: -6.47116231918335
    7. '```' → logprob: -6.97116231918335
    8. '  
' → logprob: -7.09616231918335
    9. ' :
' → logprob: -8.096162796020508
    10. '  ' → logprob: -8.096162796020508

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1384393870830536
    2. '    ' → logprob: -3.513439416885376
    3. ' ' → logprob: -3.763439416885376
    4. '\n' → logprob: -3.763439416885376
    5. '-' → logprob: -4.138439178466797
    6. ' 
' → logprob: -4.888439178466797
    7. '"""' → logprob: -5.888439178466797
    8. '```' → logprob: -5.888439178466797
    9. '    
' → logprob: -6.013439178466797
    10. ' \' → logprob: -6.388439178466797

Token 24: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019869321957230568
    2. '    ' → logprob: -4.519869327545166
    3. ' ' → logprob: -6.644869327545166
    4. '    
' → logprob: -7.019869327545166
    5. ' 
' → logprob: -7.394869327545166
    6. '-' → logprob: -7.519869327545166
    7. ' La' → logprob: -7.769869327545166
    8. ' un' → logprob: -7.894869327545166
    9. '       ' → logprob: -8.019868850708008
    10. '"""' → logprob: -8.144868850708008

Token 25: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5973337292671204
    2. '-' → logprob: -1.2223336696624756
    3. '    ' → logprob: -2.3473336696624756
    4. '1' → logprob: -4.347333908081055
    5. ' -' → logprob: -4.472333908081055
    6. ' ' → logprob: -4.722333908081055
    7. 'une' → logprob: -5.347333908081055
    8. '    
' → logprob: -5.472333908081055
    9. '       ' → logprob: -6.347333908081055
    10. ' une' → logprob: -6.472333908081055

Token 26: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8074735403060913
    2. '.' → logprob: -1.1824735403060913
    3. ' ' → logprob: -2.182473659515381
    4. ')' → logprob: -2.932473659515381
    5. ' )' → logprob: -3.307473659515381
    6. '-' → logprob: -4.307473659515381
    7. '2' → logprob: -4.807473659515381
    8. ':' → logprob: -4.932473659515381
    9. '   ' → logprob: -6.182473659515381
    10. '  ' → logprob: -6.307473659515381

Token 27: ' Le' (ID: 2018)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.508514940738678
    2. 'La' → logprob: -1.0085148811340332
    3. ' Le' → logprob: -5.258514881134033
    4. ' Elle' → logprob: -5.633514881134033
    5. ' la' → logprob: -5.758514881134033
    6. 'L' → logprob: -6.008514881134033
    7. ' L' → logprob: -6.133514881134033
    8. ' ' → logprob: -6.258514881134033
    9. 'Elle' → logprob: -6.258514881134033
    10. 'Au' → logprob: -6.633514881134033

Token 28: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -1.092494010925293
    2. ' texte' → logprob: -2.467494010925293
    3. 'a' → logprob: -2.717494010925293
    4. ' string' → logprob: -2.717494010925293
    5. 'prem' → logprob: -2.717494010925293
    6. ' format' → logprob: -2.842494010925293
    7. ' ' → logprob: -3.342494010925293
    8. '   ' → logprob: -3.467494010925293
    9. ' caractère' → logprob: -3.717494010925293
    10. ' mot' → logprob: -3.842494010925293

Token 29: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.9591575860977173
    2. ' ' → logprob: -1.0841575860977173
    3. 'car' → logprob: -1.5841575860977173
    4. ' caract' → logprob: -2.8341574668884277
    5. ' car' → logprob: -4.709157466888428
    6. ' caractères' → logprob: -6.584157466888428
    7. 'c' → logprob: -6.834157466888428
    8. ' c' → logprob: -7.209157466888428
    9. ' mot' → logprob: -7.709157466888428
    10. ' token' → logprob: -7.959157466888428

Token 30: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08793505281209946
    2. 'est' → logprob: -2.587934970855713
    3. ' doit' → logprob: -4.837934970855713
    4. 'do' → logprob: -7.837934970855713
    5. 's' → logprob: -8.087935447692871
    6. ' ' → logprob: -9.462935447692871
    7. ''est' → logprob: -10.087935447692871
    8. 'd' → logprob: -10.087935447692871
    9. ' is' → logprob: -10.337935447692871
    10. 'a' → logprob: -10.587935447692871

Token 31: ' '' (ID: 461)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.17221274971961975
    2. 'une' → logprob: -1.9222127199172974
    3. ' un' → logprob: -5.797212600708008
    4. ''une' → logprob: -6.047212600708008
    5. ' maj' → logprob: -6.172212600708008
    6. ' ' → logprob: -6.922212600708008
    7. 'un' → logprob: -6.922212600708008
    8. 'maj' → logprob: -8.047212600708008
    9. 'a' → logprob: -8.172212600708008
    10. ' '' → logprob: -8.297212600708008

Token 32: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6493245959281921
    2. 'A' → logprob: -1.274324655532837
    3. 'u' → logprob: -3.274324655532837
    4. 'U' → logprob: -4.149324417114258
    5. '['' → logprob: -4.274324417114258
    6. '@' → logprob: -4.274324417114258
    7. '[' → logprob: -4.399324417114258
    8. 'H' → logprob: -4.649324417114258
    9. 'L' → logprob: -4.649324417114258
    10. 'P' → logprob: -4.774324417114258

Token 33: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14615832269191742
    2. ''
' → logprob: -2.396158218383789
    3. 'B' → logprob: -4.271158218383789
    4. 'b' → logprob: -4.771158218383789
    5. ''.' → logprob: -5.396158218383789
    6. 'BC' → logprob: -5.646158218383789
    7. 'u' → logprob: -6.021158218383789
    8. 'a' → logprob: -6.021158218383789
    9. 'l' → logprob: -6.771158218383789
    10. ''
' → logprob: -6.896158218383789

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19207432866096497
    2. '\n' → logprob: -1.9420742988586426
    3. ' ' → logprob: -4.317074298858643
    4. '\' → logprob: -5.567074298858643
    5. '    ' → logprob: -5.942074298858643
    6. '  ' → logprob: -6.067074298858643
    7. ' \' → logprob: -6.442074298858643
    8. '
' → logprob: -6.817074298858643
    9. '2' → logprob: -6.942074298858643
    10. ')' → logprob: -6.942074298858643

Token 35: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053749702870845795
    2. ' ' → logprob: -3.9287497997283936
    3. '\n' → logprob: -4.3037495613098145
    4. '    ' → logprob: -4.8037495613098145
    5. '  ' → logprob: -6.0537495613098145
    6. '2' → logprob: -6.3037495613098145
    7. '\' → logprob: -6.9287495613098145
    8. ' \' → logprob: -6.9287495613098145
    9. ''' → logprob: -7.0537495613098145
    10. '    
' → logprob: -7.3037495613098145

Token 36: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004928816109895706
    2. '  ' → logprob: -6.3799285888671875
    3. '    ' → logprob: -7.3799285888671875
    4. '\n' → logprob: -7.5049285888671875
    5. ' ' → logprob: -7.7549285888671875
    6. '\' → logprob: -7.7549285888671875
    7. ')' → logprob: -8.129928588867188
    8. '       ' → logprob: -8.754928588867188
    9. '"""' → logprob: -8.879928588867188
    10. '2' → logprob: -9.129928588867188

Token 37: '.' (ID: 13)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36259204149246216
    2. '.' → logprob: -1.3625919818878174
    3. 'u' → logprob: -3.1125919818878174
    4. '2' → logprob: -7.2375922203063965
    5. ''' → logprob: -7.8625922203063965
    6. '   ' → logprob: -7.8625922203063965
    7. ',' → logprob: -7.8625922203063965
    8. '-' → logprob: -8.362591743469238
    9. 'a' → logprob: -8.362591743469238
    10. ' ' → logprob: -8.487591743469238

Token 38: ' La' (ID: 3038)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.16439573466777802
    2. 'Le' → logprob: -2.664395809173584
    3. ' L' → logprob: -3.164395809173584
    4. ' La' → logprob: -4.039395809173584
    5. 'L' → logprob: -4.539395809173584
    6. ' le' → logprob: -5.914395809173584
    7. 'La' → logprob: -6.039395809173584
    8. ' ' → logprob: -6.539395809173584
    9. ' l' → logprob: -6.539395809173584
    10. 'e' → logprob: -7.289395809173584

Token 39: ' chaîne' (ID: 89288)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.6095854043960571
    2. ' deuxième' → logprob: -1.8595854043960571
    3. ' chaîne' → logprob: -2.4845852851867676
    4. ' ' → logprob: -2.7345852851867676
    5. 'de' → logprob: -2.7345852851867676
    6. ' seconde' → logprob: -3.6095852851867676
    7. ' second' → logprob: -4.984585285186768
    8. 'l' → logprob: -5.109585285186768
    9. 's' → logprob: -5.109585285186768
    10. ' chaine' → logprob: -5.109585285186768

Token 40: ' contient' (ID: 89067)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.44239985942840576
    2. ' a' → logprob: -2.0673999786376953
    3. ' suivante' → logprob: -2.6923999786376953
    4. ' contient' → logprob: -2.9423999786376953
    5. ' doit' → logprob: -3.1923999786376953
    6. 's' → logprob: -4.442399978637695
    7. ' ne' → logprob: -4.692399978637695
    8. ' n' → logprob: -4.817399978637695
    9. ' suivant' → logprob: -5.067399978637695
    10. ' comporte' → logprob: -5.067399978637695

Token 41: ' exactement' (ID: 108701)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.12431935966014862
    2. 'au' → logprob: -3.374319314956665
    3. ' un' → logprob: -3.624319314956665
    4. ' uniquement' → logprob: -3.624319314956665
    5. ' ' → logprob: -4.249319553375244
    6. ''au' → logprob: -5.874319553375244
    7. ' exactement' → logprob: -5.999319553375244
    8. ' '' → logprob: -6.874319553375244
    9. 'un' → logprob: -6.999319553375244
    10. ' seulement' → logprob: -6.999319553375244

Token 42: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10182265192270279
    2. ' un' → logprob: -2.8518226146698
    3. ' trois' → logprob: -3.7268226146698
    4. '  ' → logprob: -5.851822853088379
    5. 'un' → logprob: -6.351822853088379
    6. '3' → logprob: -6.601822853088379
    7. ' une' → logprob: -6.726822853088379
    8. ' ' → logprob: -6.726822853088379
    9. ' a' → logprob: -6.851822853088379
    10. ' cinq' → logprob: -6.976822853088379

Token 43: ' '' (ID: 461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6977277398109436
    2. ' espace' → logprob: -1.1977276802062988
    3. ' ' → logprob: -2.322727680206299
    4. 'a' → logprob: -3.697727680206299
    5. 'u' → logprob: -4.072727680206299
    6. ' space' → logprob: -4.697727680206299
    7. ' espaces' → logprob: -4.822727680206299
    8. '_' → logprob: -4.822727680206299
    9. ''' → logprob: -5.197727680206299
    10. 'space' → logprob: -5.447727680206299

Token 44: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07035396248102188
    2. 'A' → logprob: -3.4453539848327637
    3. ''' → logprob: -4.570353984832764
    4. ':' → logprob: -5.445353984832764
    5. 'C' → logprob: -5.945353984832764
    6. '@' → logprob: -6.070353984832764
    7. 'a' → logprob: -6.195353984832764
    8. '-' → logprob: -6.320353984832764
    9. ' '' → logprob: -6.695353984832764
    10. 'b' → logprob: -6.945353984832764

Token 45: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018376067746430635
    2. ''.' → logprob: -7.126837730407715
    3. 'e' → logprob: -7.876837730407715
    4. '')' → logprob: -8.126837730407715
    5. '"' → logprob: -9.626837730407715
    6. ''''' → logprob: -9.751837730407715
    7. ' '' → logprob: -9.876837730407715
    8. '').' → logprob: -10.001837730407715
    9. ')' → logprob: -10.626837730407715
    10. '.' → logprob: -10.876837730407715

Token 46: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06282602995634079
    2. ',' → logprob: -3.312825918197632
    3. '   ' → logprob: -4.187826156616211
    4. ')' → logprob: -5.062826156616211
    5. '  ' → logprob: -6.812826156616211
    6. ' ' → logprob: -8.062826156616211
    7. ').' → logprob: -8.562826156616211
    8. ''' → logprob: -8.937826156616211
    9. '    
' → logprob: -9.062826156616211
    10. '```' → logprob: -9.187826156616211

Token 47: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.41734540462493896
    2. ' les' → logprob: -1.917345404624939
    3. ' l' → logprob: -2.2923455238342285
    4. ' le' → logprob: -3.4173455238342285
    5. '<|end|>' → logprob: -3.6673455238342285
    6. ' ' → logprob: -4.4173455238342285
    7. 'le' → logprob: -5.0423455238342285
    8. ' the' → logprob: -5.6673455238342285
    9. 'les' → logprob: -5.7923455238342285
    10. 'l' → logprob: -6.1673455238342285

Token 48: ' partie' (ID: 22139)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.0555694103240967
    2. ' chaîne' → logprob: -1.8055694103240967
    3. '2' → logprob: -2.5555694103240967
    4. '3' → logprob: -2.5555694103240967
    5. 'de' → logprob: -2.8055694103240967
    6. ' chaine' → logprob: -2.9305694103240967
    7. ' ' → logprob: -3.5555694103240967
    8. ' partie' → logprob: -3.8055694103240967
    9. '4' → logprob: -3.8055694103240967
    10. ' string' → logprob: -3.8055694103240967

Token 49: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.406737208366394
    2. ' après' → logprob: -1.531737208366394
    3. '   ' → logprob: -1.656737208366394
    4. ' située' → logprob: -2.2817373275756836
    5. 'ap' → logprob: -3.2817373275756836
    6. ' des' → logprob: -3.7817373275756836
    7. ' apr' → logprob: -4.156737327575684
    8. ' string' → logprob: -4.281737327575684
    9. ' compris' → logprob: -4.406737327575684
    10. ' qui' → logprob: -4.531737327575684

Token 50: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.21898198127746582
    2. ' le' → logprob: -1.9689819812774658
    3. 'l' → logprob: -3.093981981277466
    4. ' l' → logprob: -5.843981742858887
    5. 'de' → logprob: -6.218981742858887
    6. ' ' → logprob: -6.843981742858887
    7. 'la' → logprob: -6.968981742858887
    8. 'A' → logprob: -7.093981742858887
    9. ' '' → logprob: -7.468981742858887
    10. ''' → logprob: -7.468981742858887

Token 51: ' deuxième' (ID: 51664)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.886229932308197
    2. 'de' → logprob: -1.0112299919128418
    3. ' ' → logprob: -2.386229991912842
    4. ' premier' → logprob: -2.636229991912842
    5. '1' → logprob: -3.636229991912842
    6. '2' → logprob: -3.761229991912842
    7. ' deuxième' → logprob: -6.386229991912842
    8. 'dé' → logprob: -6.636229991912842
    9. 'd' → logprob: -6.761229991912842
    10. '0' → logprob: -7.136229991912842

Token 52: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7142433524131775
    2. ' ' → logprob: -0.8392433524131775
    3. 'et' → logprob: -2.8392434120178223
    4. 'e' → logprob: -4.964243412017822
    5. ' caractère' → logprob: -5.714243412017822
    6. ' caract' → logprob: -5.839243412017822
    7. 'car' → logprob: -5.964243412017822
    8. ' e' → logprob: -6.964243412017822
    9. ' and' → logprob: -6.964243412017822
    10. ' espace' → logprob: -7.339243412017822

Token 53: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0736377164721489
    2. ' le' → logprob: -2.8236377239227295
    3. 'l' → logprob: -5.19863748550415
    4. ' l' → logprob: -6.32363748550415
    5. '   ' → logprob: -7.57363748550415
    6. 'tro' → logprob: -7.57363748550415
    7. 'la' → logprob: -7.69863748550415
    8. ' ' → logprob: -7.69863748550415
    9. ' avant' → logprob: -7.82363748550415
    10. 'de' → logprob: -8.073637962341309

Token 54: ''avant' (ID: 161711)
  Prédit: ''avant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''avant' → logprob: -0.30383777618408203
    2. 'e' → logprob: -1.678837776184082
    3. ''i' → logprob: -3.303837776184082
    4. 'a' → logprob: -3.803837776184082
    5. ''' → logprob: -4.553837776184082
    6. ''''' → logprob: -6.178837776184082
    7. ''a' → logprob: -7.178837776184082
    8. 'i' → logprob: -8.053837776184082
    9. ''''
' → logprob: -8.178837776184082
    10. ''é' → logprob: -8.428837776184082

Token 55: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.17613844573497772
    2. '-' → logprob: -1.9261384010314941
    3. 'der' → logprob: -4.551138401031494
    4. ' dernier' → logprob: -6.176138401031494
    5. ' ' → logprob: -6.926138401031494
    6. 'd' → logprob: -7.301138401031494
    7. '   ' → logprob: -7.926138401031494
    8. ' derni' → logprob: -8.426138877868652
    9. ' d' → logprob: -8.676138877868652
    10. '```' → logprob: -8.926138877868652

Token 56: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.01703592948615551
    2. 'der' → logprob: -4.142035961151123
    3. 'd' → logprob: -7.392035961151123
    4. '-' → logprob: -9.142035484313965
    5. ' dernier' → logprob: -9.267035484313965
    6. 'de' → logprob: -9.892035484313965
    7. '```' → logprob: -10.017035484313965
    8. ' ' → logprob: -10.642035484313965
    9. 'den' → logprob: -11.142035484313965
    10. '   ' → logprob: -11.642035484313965

Token 57: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01044317428022623
    2. 'e' → logprob: -5.260443210601807
    3. 'ier' → logprob: -5.635443210601807
    4. '-' → logprob: -7.010443210601807
    5. 'ière' → logprob: -8.010442733764648
    6. 'ié' → logprob: -9.510442733764648
    7. ' i' → logprob: -9.885442733764648
    8. '```' → logprob: -10.010442733764648
    9. 'd' → logprob: -10.760442733764648
    10. '`' → logprob: -10.885442733764648

Token 58: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04036326706409454
    2. ' caract' → logprob: -4.290363311767578
    3. ' caractère' → logprob: -4.665363311767578
    4. '  ' → logprob: -5.415363311767578
    5. '_' → logprob: -5.415363311767578
    6. ' espace' → logprob: -5.790363311767578
    7. ' _' → logprob: -6.290363311767578
    8. ' caractères' → logprob: -7.290363311767578
    9. ' car' → logprob: -8.040363311767578
    10. ' space' → logprob: -8.415363311767578

Token 59: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5906012058258057
    2. '   ' → logprob: -0.9656012058258057
    3. ',' → logprob: -4.340600967407227
    4. ':' → logprob: -4.465600967407227
    5. 's' → logprob: -4.465600967407227
    6. ')' → logprob: -4.965600967407227
    7. '  ' → logprob: -5.340600967407227
    8. ' ' → logprob: -5.465600967407227
    9. ''' → logprob: -6.340600967407227
    10. '\' → logprob: -6.465600967407227

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009288526489399374
    2. '"' → logprob: -8.12592887878418
    3. '"""' → logprob: -8.50092887878418
    4. ')' → logprob: -9.25092887878418
    5. ''' → logprob: -9.25092887878418
    6. '    ' → logprob: -9.75092887878418
    7. '```' → logprob: -9.87592887878418
    8. '  ' → logprob: -10.37592887878418
    9. '"""
' → logprob: -10.50092887878418
    10. '    
' → logprob: -11.12592887878418

Token 61: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00181928975507617
    2. '"""' → logprob: -7.626819133758545
    3. '3' → logprob: -7.751819133758545
    4. '```' → logprob: -8.126819610595703
    5. '  ' → logprob: -8.251819610595703
    6. '"' → logprob: -9.376819610595703
    7. '"""
' → logprob: -9.751819610595703
    8. ')' → logprob: -9.876819610595703
    9. '    ' → logprob: -10.001819610595703
    10. '    
' → logprob: -11.251819610595703

Token 62: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003244024235755205
    2. '"""' → logprob: -6.628243923187256
    3. ' ' → logprob: -7.378243923187256
    4. '  ' → logprob: -8.378244400024414
    5. '    ' → logprob: -8.378244400024414
    6. ')' → logprob: -8.503244400024414
    7. '"' → logprob: -8.503244400024414
    8. '```' → logprob: -8.628244400024414
    9. '"""
' → logprob: -10.128244400024414
    10. '    
' → logprob: -10.378244400024414

Token 63: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.3080716346157715e-05
    2. '   ' → logprob: -10.750022888183594
    3. ' .' → logprob: -14.000022888183594
    4. '  ' → logprob: -15.375022888183594
    5. ' Le' → logprob: -16.000022888183594
    6. ')' → logprob: -16.250022888183594
    7. 'Le' → logprob: -16.375022888183594
    8. '.Le' → logprob: -16.375022888183594
    9. '.La' → logprob: -16.875022888183594
    10. ' ' → logprob: -17.125022888183594

Token 64: ' Tous' (ID: 64900)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.8532122373580933
    2. ' La' → logprob: -1.2282122373580933
    3. 'La' → logprob: -1.9782122373580933
    4. 'Le' → logprob: -2.353212356567383
    5. '   ' → logprob: -4.228212356567383
    6. ' Les' → logprob: -4.603212356567383
    7. 'Les' → logprob: -4.728212356567383
    8. 'Tous' → logprob: -5.978212356567383
    9. ' Tous' → logprob: -6.353212356567383
    10. ' la' → logprob: -6.478212356567383

Token 65: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11027859896421432
    2. 'les' → logprob: -2.360278606414795
    3. ' ' → logprob: -5.110278606414795
    4. 's' → logprob: -6.485278606414795
    5. '<|end|>' → logprob: -6.485278606414795
    6. ' le' → logprob: -8.235278129577637
    7. 'le' → logprob: -8.485278129577637
    8. 'es' → logprob: -8.860278129577637
    9. 'l' → logprob: -9.860278129577637
    10. '  ' → logprob: -9.985278129577637

Token 66: ' autres' (ID: 18701)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6802622675895691
    2. 'aut' → logprob: -1.6802623271942139
    3. ' caractères' → logprob: -1.6802623271942139
    4. ' autres' → logprob: -2.180262327194214
    5. ' car' → logprob: -6.055262088775635
    6. 's' → logprob: -6.555262088775635
    7. ''autres' → logprob: -6.680262088775635
    8. ' caract' → logprob: -7.680262088775635
    9. ' caracteres' → logprob: -8.055262565612793
    10. '```' → logprob: -8.055262565612793

Token 67: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.5357388854026794
    2. 'car' → logprob: -0.9107388854026794
    3. ' caract' → logprob: -5.535738945007324
    4. ' caracteres' → logprob: -5.785738945007324
    5. ' car' → logprob: -6.535738945007324
    6. ' ' → logprob: -6.535738945007324
    7. 's' → logprob: -6.660738945007324
    8. 'c' → logprob: -7.660738945007324
    9. '_car' → logprob: -8.410738945007324
    10. '	car' → logprob: -9.035738945007324

Token 68: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.050205476582050323
    2. ' sont' → logprob: -3.0502054691314697
    3. ' ' → logprob: -6.800205707550049
    4. ' s' → logprob: -9.80020523071289
    5. '   ' → logprob: -9.92520523071289
    6. 'ont' → logprob: -9.92520523071289
    7. ' entre' → logprob: -10.05020523071289
    8. 'import' → logprob: -10.05020523071289
    9. ' doivent' → logprob: -10.30020523071289
    10. 'd' → logprob: -10.42520523071289

Token 69: ' en' (ID: 469)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6266691088676453
    2. ''' → logprob: -2.25166916847229
    3. 'des' → logprob: -2.25166916847229
    4. ' soit' → logprob: -2.87666916847229
    5. ' ' → logprob: -3.25166916847229
    6. ' des' → logprob: -3.37666916847229
    7. 'B' → logprob: -3.87666916847229
    8. ' B' → logprob: -4.126668930053711
    9. 's' → logprob: -4.376668930053711
    10. ' either' → logprob: -4.376668930053711

Token 70: ' minus' (ID: 40335)
  Prédit: ' maj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maj' → logprob: -0.4313046932220459
    2. 's' → logprob: -1.556304693222046
    3. ' ' → logprob: -3.556304693222046
    4. ' '' → logprob: -3.681304693222046
    5. 'A' → logprob: -4.181304931640625
    6. ' uppercase' → logprob: -4.306304931640625
    7. '   ' → logprob: -4.806304931640625
    8. 'maj' → logprob: -5.306304931640625
    9. '  ' → logprob: -5.556304931640625
    10. '['' → logprob: -5.806304931640625

Token 71: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.002390398643910885
    2. 'cule' → logprob: -6.377390384674072
    3. 'c' → logprob: -7.752390384674072
    4. '```' → logprob: -8.62739086151123
    5. 'u' → logprob: -11.00239086151123
    6. 'e' → logprob: -11.37739086151123
    7. 'uc' → logprob: -11.75239086151123
    8. 'cul' → logprob: -12.00239086151123
    9. 'culas' → logprob: -12.12739086151123
    10. 'cula' → logprob: -12.25239086151123

Token 72: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.039548423141241074
    2. '.
' → logprob: -3.539548397064209
    3. '   ' → logprob: -5.039548397064209
    4. ',' → logprob: -7.414548397064209
    5. '
' → logprob: -8.039548873901367
    6. ' ' → logprob: -8.664548873901367
    7. 'e' → logprob: -8.789548873901367
    8. 'a' → logprob: -8.789548873901367
    9. '.

' → logprob: -8.789548873901367
    10. '"""' → logprob: -8.789548873901367

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32742857933044434
    2. '"""' → logprob: -1.5774285793304443
    3. '"""
' → logprob: -3.2024285793304443
    4. '"' → logprob: -4.452428817749023
    5. ' """
' → logprob: -4.702428817749023
    6. '
' → logprob: -6.077428817749023
    7. ' """' → logprob: -6.077428817749023
    8. '```' → logprob: -6.327428817749023
    9. '  ' → logprob: -6.577428817749023
    10. '""' → logprob: -7.327428817749023

Token 74: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12137629836797714
    2. '"""' → logprob: -2.2463762760162354
    3. '"' → logprob: -5.7463765144348145
    4. '"""
' → logprob: -6.1213765144348145
    5. '```' → logprob: -7.2463765144348145
    6. ' """' → logprob: -7.2463765144348145
    7. ' """
' → logprob: -7.8713765144348145
    8. ' ' → logprob: -7.8713765144348145
    9. '""' → logprob: -8.121376037597656
    10. '  ' → logprob: -8.246376037597656

Token 75: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.12125560641288757
    2. 'ic' → logprob: -2.37125563621521
    3. '   ' → logprob: -5.496255397796631
    4. 'irme' → logprob: -5.746255397796631
    5. 'icher' → logprob: -5.996255397796631
    6. 'ichage' → logprob: -6.121255397796631
    7. 'ect' → logprob: -6.496255397796631
    8. 'ich' → logprob: -6.871255397796631
    9. 'ir' → logprob: -6.871255397796631
    10. 'ermit' → logprob: -6.996255397796631

Token 76: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015333651565015316
    2. ' un' → logprob: -5.265333652496338
    3. 'e' → logprob: -5.640333652496338
    4. ' "' → logprob: -6.140333652496338
    5. 'r' → logprob: -6.515333652496338
    6. ' """' → logprob: -7.140333652496338
    7. '"' → logprob: -8.14033317565918
    8. ' :' → logprob: -8.76533317565918
    9. ' e' → logprob: -8.89033317565918
    10. ' la' → logprob: -9.01533317565918

Token 77: 'AC' (ID: 2436)
  Prédit: 'OK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.3333645462989807
    2. 'O' → logprob: -1.708364486694336
    3. 'AC' → logprob: -2.958364486694336
    4. 'ok' → logprob: -4.083364486694336
    5. 'val' → logprob: -5.083364486694336
    6. 'Val' → logprob: -5.708364486694336
    7. 'Ok' → logprob: -6.208364486694336
    8. 'Valid' → logprob: -6.333364486694336
    9. 'True' → logprob: -6.583364486694336
    10. 'Good' → logprob: -6.833364486694336

Token 78: ''' (ID: 6)
  Prédit: 'CEPT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CEPT' → logprob: -0.40692296624183655
    2. 'C' → logprob: -2.1569230556488037
    3. 'cept' → logprob: -2.5319230556488037
    4. 'E' → logprob: -2.6569230556488037
    5. 'e' → logprob: -4.031922817230225
    6. 'EPT' → logprob: -4.281922817230225
    7. 'CEP' → logprob: -4.406922817230225
    8. 'K' → logprob: -5.156922817230225
    9. 'CE' → logprob: -5.406922817230225
    10. 'cepte' → logprob: -5.781922817230225

Token 79: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9089433550834656
    2. '
' → logprob: -1.2839434146881104
    3. ''' → logprob: -2.9089434146881104
    4. '.' → logprob: -3.1589434146881104
    5. '()' → logprob: -3.4089434146881104
    6. '\n' → logprob: -3.5339434146881104
    7. '"' → logprob: -3.6589434146881104
    8. 'e' → logprob: -3.7839434146881104
    9. '

' → logprob: -4.033943176269531
    10. ' 
' → logprob: -4.158943176269531

Token 80: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08932851999998093
    2. ' l' → logprob: -3.8393285274505615
    3. ' ' → logprob: -3.9643285274505615
    4. ' le' → logprob: -4.089328289031982
    5. 'la' → logprob: -4.714328289031982
    6. ' the' → logprob: -4.714328289031982
    7. ' les' → logprob: -5.714328289031982
    8. 'l' → logprob: -6.964328289031982
    9. ' len' → logprob: -7.464328289031982
    10. 'le' → logprob: -7.464328289031982

Token 81: ' chaîne' (ID: 89288)
  Prédit: ' format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.4555264413356781
    2. 's' → logprob: -2.205526351928711
    3. 'format' → logprob: -2.955526351928711
    4. ' string' → logprob: -3.205526351928711
    5. ' chaîne' → logprob: -3.205526351928711
    6. ' test' → logprob: -4.080526351928711
    7. 'cha' → logprob: -4.330526351928711
    8. 'e' → logprob: -4.455526351928711
    9. 'chaine' → logprob: -4.580526351928711
    10. 'a' → logprob: -5.205526351928711

Token 82: ' respecte' (ID: 140483)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6716205477714539
    2. ' respecte' → logprob: -1.2966206073760986
    3. ' ' → logprob: -1.7966206073760986
    4. 'est' → logprob: -3.6716206073760986
    5. ' respect' → logprob: -4.4216203689575195
    6. 'respect' → logprob: -5.5466203689575195
    7. ' a' → logprob: -6.7966203689575195
    8. 's' → logprob: -7.0466203689575195
    9. ' contient' → logprob: -7.4216203689575195
    10. ' is' → logprob: -7.5466203689575195

Token 83: ' ces' (ID: 10532)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7159374952316284
    2. ' la' → logprob: -0.8409374952316284
    3. '   ' → logprob: -3.965937614440918
    4. ' les' → logprob: -3.965937614440918
    5. ' le' → logprob: -4.215937614440918
    6. ' l' → logprob: -4.465937614440918
    7. '  ' → logprob: -4.840937614440918
    8. 'e' → logprob: -5.715937614440918
    9. ' '' → logprob: -6.965937614440918
    10. ' the' → logprob: -7.090937614440918

Token 84: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.4049901068210602
    2. 'r' → logprob: -2.1549901962280273
    3. ' conditions' → logprob: -2.2799901962280273
    4. ' ' → logprob: -2.9049901962280273
    5. ' r' → logprob: -4.154990196228027
    6. 'conditions' → logprob: -4.404990196228027
    7. ' critères' → logprob: -4.404990196228027
    8. '   ' → logprob: -4.904990196228027
    9. 'reg' → logprob: -6.279990196228027
    10. ' règle' → logprob: -6.654990196228027

Token 85: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06841875612735748
    2. ',' → logprob: -3.4434187412261963
    3. '.' → logprob: -4.443418979644775
    4. '
' → logprob: -4.568418979644775
    5. ':' → logprob: -5.193418979644775
    6. '    
' → logprob: -6.693418979644775
    7. ',
' → logprob: -6.943418979644775
    8. '  ' → logprob: -7.443418979644775
    9. '   
' → logprob: -7.443418979644775
    10. 'def' → logprob: -7.693418979644775

Token 86: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02952401712536812
    2. ' ' → logprob: -4.654523849487305
    3. '    ' → logprob: -5.029523849487305
    4. ' sinon' → logprob: -5.154523849487305
    5. '  ' → logprob: -5.904523849487305
    6. '    
' → logprob: -6.779523849487305
    7. ' ' → logprob: -7.779523849487305
    8. '  
' → logprob: -8.154523849487305
    9. ' et' → logprob: -8.279523849487305
    10. '
' → logprob: -8.404523849487305

Token 87: ' affiche' (ID: 127479)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4538818895816803
    2. ''' → logprob: -1.953881859779358
    3. ' print' → logprob: -2.5788819789886475
    4. '   ' → logprob: -2.7038819789886475
    5. ' '' → logprob: -2.9538819789886475
    6. 'print' → logprob: -5.578881740570068
    7. '  ' → logprob: -5.703881740570068
    8. ' un' → logprob: -5.703881740570068
    9. '"' → logprob: -5.828881740570068
    10. ' ' → logprob: -6.328881740570068

Token 88: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09918152540922165
    2. ''' → logprob: -2.8491814136505127
    3. '"' → logprob: -3.7241814136505127
    4. ' '' → logprob: -4.974181652069092
    5. ' "' → logprob: -5.849181652069092
    6. ' ' → logprob: -7.599181652069092
    7. '  ' → logprob: -7.599181652069092
    8. ' e' → logprob: -8.786681175231934
    9. ' un' → logprob: -8.911681175231934
    10. ' Python' → logprob: -9.099181175231934

Token 89: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.021493492648005486
    2. 'NG' → logprob: -5.021493434906006
    3. 'Error' → logprob: -6.021493434906006
    4. 'N' → logprob: -6.521493434906006
    5. '!' → logprob: -6.646493434906006
    6. 'WR' → logprob: -6.646493434906006
    7. 'Erreur' → logprob: -6.771493434906006
    8. 'Wrong' → logprob: -7.021493434906006
    9. 'NA' → logprob: -7.146493434906006
    10. 'er' → logprob: -7.146493434906006

Token 90: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2228398621082306
    2. '"' → logprob: -1.7228398323059082
    3. '"'' → logprob: -4.222839832305908
    4. ''"' → logprob: -5.847839832305908
    5. ''
' → logprob: -6.222839832305908
    6. ''
' → logprob: -7.347839832305908
    7. ''''' → logprob: -7.847839832305908
    8. '"
' → logprob: -8.722840309143066
    9. ''"
' → logprob: -8.847840309143066
    10. '"""' → logprob: -9.222840309143066

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008684655651450157
    2. '
' → logprob: -5.7586846351623535
    3. '    
' → logprob: -6.7586846351623535
    4. '    ' → logprob: -6.8836846351623535
    5. '"""' → logprob: -6.8836846351623535
    6. '```' → logprob: -7.0086846351623535
    7. ' ' → logprob: -8.258685111999512
    8. '"' → logprob: -8.758685111999512
    9. '\n' → logprob: -9.008685111999512
    10. '"""
' → logprob: -9.008685111999512

Token 92: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03304949030280113
    2. '"""' → logprob: -3.5330495834350586
    3. '"' → logprob: -7.033049583435059
    4. '```' → logprob: -7.283049583435059
    5. ' """' → logprob: -7.783049583435059
    6. '"""
' (adapté à ' """
') → logprob: -7.908049583435059
    7. '""' → logprob: -8.158049583435059
    8. '
' → logprob: -8.158049583435059
    9. '    ' → logprob: -9.283049583435059
    10. ' """
' → logprob: -10.033049583435059

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020759563893079758
    2. '    ' → logprob: -4.645759582519531
    3. '    
' → logprob: -5.895759582519531
    4. 'def' → logprob: -5.895759582519531
    5. '
' → logprob: -6.520759582519531
    6. 's' → logprob: -7.270759582519531
    7. ' def' → logprob: -7.395759582519531
    8. ' 
' → logprob: -7.395759582519531
    9. 'n' → logprob: -8.020759582519531
    10. '\' → logprob: -8.270759582519531

Token 94: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6713493466377258
    2. '   ' → logprob: -1.046349287033081
    3. 'input' → logprob: -3.296349287033081
    4. ' s' → logprob: -3.671349287033081
    5. 'string' → logprob: -3.671349287033081
    6. 'user' → logprob: -4.04634952545166
    7. 'chaine' → logprob: -4.17134952545166
    8. 'while' → logprob: -5.67134952545166
    9. 'line' → logprob: -5.92134952545166
    10. 'text' → logprob: -6.17134952545166

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011089558713138103
    2. '=' → logprob: -4.511089324951172
    3. ' ' → logprob: -10.511089324951172
    4. ' =
' → logprob: -11.761089324951172
    5. '  ' → logprob: -12.886089324951172
    6. '=input' → logprob: -13.386089324951172
    7. '.' → logprob: -13.886089324951172
    8. ' ' → logprob: -14.261089324951172
    9. 's' → logprob: -15.136089324951172
    10. ' =
' → logprob: -15.761089324951172

Token 96: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2939395308494568
    2. ' sys' → logprob: -1.5439395904541016
    3. 'input' → logprob: -3.2939395904541016
    4. 'sys' → logprob: -5.543939590454102
    5. ' ' → logprob: -9.293939590454102
    6. ' inp' → logprob: -12.231439590454102
    7. '=sys' → logprob: -13.231439590454102
    8. ' ' → logprob: -13.356439590454102
    9. '   ' → logprob: -13.418939590454102
    10. ' s' → logprob: -13.543939590454102

Token 97: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06472290307283401
    2. '(' → logprob: -2.814723014831543
    3. '(sys' → logprob: -5.939723014831543
    4. '(str' → logprob: -9.314723014831543
    5. ' (' → logprob: -10.814723014831543
    6. '()' → logprob: -13.189723014831543
    7. '(
' → logprob: -13.189723014831543
    8. '(s' → logprob: -13.814723014831543
    9. 'input' → logprob: -13.814723014831543
    10. '(

' → logprob: -13.939723014831543

Token 98: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0062791635282337666
    2. '()' → logprob: -5.131278991699219
    3. '().' → logprob: -8.881278991699219
    4. ' ())' → logprob: -9.131278991699219
    5. '()))' → logprob: -9.881278991699219
    6. '())
' → logprob: -11.006278991699219
    7. '();)' → logprob: -11.881278991699219
    8. '(' → logprob: -12.006278991699219
    9. ')' → logprob: -12.756278991699219
    10. '());' → logprob: -12.881278991699219

Token 99: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8503949046134949
    2. '    
' → logprob: -1.3503949642181396
    3. '   ' → logprob: -1.4753949642181396
    4. ' 
' → logprob: -3.7253949642181396
    5. '  
' → logprob: -4.2253947257995605
    6. '   
' → logprob: -4.3503947257995605
    7. '\n' → logprob: -4.7253947257995605
    8. 'n' → logprob: -4.8503947257995605
    9. '     
' → logprob: -5.1003947257995605
    10. '    ' → logprob: -5.7253947257995605

Token 100: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2766203284263611
    2. '   ' → logprob: -1.9016203880310059
    3. '    
' → logprob: -2.901620388031006
    4. 'n' → logprob: -4.776620388031006
    5. ' 
' → logprob: -4.901620388031006
    6. '   
' → logprob: -5.276620388031006
    7. '  
' → logprob: -5.276620388031006
    8. '\n' → logprob: -5.776620388031006
    9. ' ' → logprob: -5.901620388031006
    10. 'if' → logprob: -6.401620388031006

Token 101: ' Convert' (ID: 15629)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25442561507225037
    2. 's' → logprob: -2.129425525665283
    3. ' s' → logprob: -2.504425525665283
    4. '  ' → logprob: -5.129425525665283
    5. '<|end|>' → logprob: -5.254425525665283
    6. '    ' → logprob: -5.629425525665283
    7. '#' → logprob: -5.879425525665283
    8. ')' → logprob: -6.754425525665283
    9. '   ' → logprob: -6.879425525665283
    10. ' #' → logprob: -7.254425525665283

Token 102: 'it' (ID: 278)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5502501130104065
    2. '(' → logprob: -1.0502500534057617
    3. ' (' → logprob: -3.4252500534057617
    4. ' ()' → logprob: -3.6752500534057617
    5. '(s' → logprob: -4.800250053405762
    6. ' ' → logprob: -5.675250053405762
    7. 's' → logprob: -7.175250053405762
    8. '   ' → logprob: -7.175250053405762
    9. '('' → logprob: -7.550250053405762
    10. '  ' → logprob: -8.050250053405762

Token 103: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7185807228088379
    2. '()' → logprob: -1.093580722808838
    3. '(s' → logprob: -2.468580722808838
    4. 's' → logprob: -3.343580722808838
    5. '(input' → logprob: -3.343580722808838
    6. ' ' → logprob: -4.843580722808838
    7. '(str' → logprob: -5.218580722808838
    8. '(sys' → logprob: -6.593580722808838
    9. '(
' → logprob: -6.843580722808838
    10. ')' → logprob: -6.968580722808838

Token 104: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7897521257400513
    2. 's' → logprob: -1.7897521257400513
    3. 'chaine' → logprob: -1.7897521257400513
    4. ' s' → logprob: -2.6647520065307617
    5. ' chaine' → logprob: -3.1647520065307617
    6. ' input' → logprob: -3.4147520065307617
    7. ' string' → logprob: -4.664752006530762
    8. 'str' → logprob: -4.789752006530762
    9. ' ' → logprob: -4.789752006530762
    10. ' sys' → logprob: -4.914752006530762

Token 105: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02594061940908432
    2. '   ' → logprob: -4.275940418243408
    3. 's' → logprob: -5.650940418243408
    4. '(' → logprob: -6.775940418243408
    5. '    ' → logprob: -6.775940418243408
    6. ')' → logprob: -6.900940418243408
    7. '[' → logprob: -7.150940418243408
    8. '())' → logprob: -7.275940418243408
    9. ' ' → logprob: -7.775940418243408
    10. '(s' → logprob: -7.900940418243408

Token 106: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.059550691395998
    2. 'entrée' → logprob: -3.1845507621765137
    3. 'e' → logprob: -4.809550762176514
    4. 'es' → logprob: -5.559550762176514
    5. '’entrée' → logprob: -6.559550762176514
    6. ' entrée' → logprob: -6.809550762176514
    7. 'ent' → logprob: -7.934550762176514
    8. 'ans' → logprob: -8.559550285339355
    9. 's' → logprob: -8.684550285339355
    10. ' caractères' → logprob: -8.809550285339355

Token 107: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061762064695358276
    2. '    
' → logprob: -3.5617620944976807
    3. '
' → logprob: -4.186761856079102
    4. 's' → logprob: -5.186761856079102
    5. ')' → logprob: -5.686761856079102
    6. ' s' → logprob: -6.686761856079102
    7. '  
' → logprob: -7.061761856079102
    8. '  ' → logprob: -7.311761856079102
    9. '    ' → logprob: -7.436761856079102
    10. '   
' → logprob: -7.561761856079102

Token 108: ' une' (ID: 2463)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.23139226436615
    2. 's' → logprob: -1.73139226436615
    3. 'list' → logprob: -1.85639226436615
    4. ' une' → logprob: -2.1063923835754395
    5. ' s' → logprob: -2.3563923835754395
    6. '[]' → logprob: -3.2313923835754395
    7. ' liste' → logprob: -3.6063923835754395
    8. 'str' → logprob: -3.8563923835754395
    9. ' un' → logprob: -4.1063923835754395
    10. 'une' → logprob: -4.3563923835754395

Token 109: ' liste' (ID: 31719)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9260050058364868
    2. '   ' → logprob: -1.9260050058364868
    3. 'str' → logprob: -1.9260050058364868
    4. ' chaîne' → logprob: -2.3010048866271973
    5. ' ' → logprob: -2.8010048866271973
    6. 's' → logprob: -2.9260048866271973
    7. ' chaine' → logprob: -4.176004886627197
    8. 'liste' → logprob: -4.301004886627197
    9. 'list' → logprob: -4.676004886627197
    10. ' list' → logprob: -4.676004886627197

Token 110: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023427970707416534
    2. '<|end|>' → logprob: -5.523427963256836
    3. '    
' → logprob: -5.648427963256836
    4. 's' → logprob: -5.648427963256836
    5. '[' → logprob: -5.898427963256836
    6. '()' → logprob: -6.273427963256836
    7. ')' → logprob: -6.648427963256836
    8. ' ' → logprob: -6.898427963256836
    9. '  ' → logprob: -6.898427963256836
    10. '    ' → logprob: -7.023427963256836

Token 111: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2570895850658417
    2. ' caractères' → logprob: -1.507089614868164
    3. 'str' → logprob: -5.757089614868164
    4. 'char' → logprob: -7.632089614868164
    5. 'chars' → logprob: -8.132089614868164
    6. 's' → logprob: -8.132089614868164
    7. ' caracteres' → logprob: -8.507089614868164
    8. ' car' → logprob: -9.007089614868164
    9. 'chain' → logprob: -9.132089614868164
    10. ' s' → logprob: -9.257089614868164

Token 112: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13914373517036438
    2. '   ' → logprob: -2.389143705368042
    3. '    
' → logprob: -3.514143705368042
    4. '  
' → logprob: -5.764143943786621
    5. '\n' → logprob: -6.139143943786621
    6. 'n' → logprob: -6.764143943786621
    7. ' 
' → logprob: -7.139143943786621
    8. '   
' → logprob: -7.764143943786621
    9. '<|end|>' → logprob: -9.014143943786621
    10. '  ' → logprob: -9.764143943786621

Token 113: ' manipulation' (ID: 61519)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.08319783210754395
    2. ' facil' → logprob: -3.958197832107544
    3. 'fac' → logprob: -4.208197593688965
    4. ' permettre' → logprob: -4.208197593688965
    5. ' manipulation' → logprob: -4.458197593688965
    6. ' manip' → logprob: -5.083197593688965
    7. ' pouvoir' → logprob: -6.208197593688965
    8. 'man' → logprob: -6.458197593688965
    9. 's' → logprob: -6.583197593688965
    10. '   ' → logprob: -6.958197593688965

Token 114: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9320862293243408
    2. '   ' → logprob: -1.0570862293243408
    3. '    
' → logprob: -1.4320862293243408
    4. '  
' → logprob: -4.932085990905762
    5. '   
' → logprob: -5.682085990905762
    6. 'n' → logprob: -5.932085990905762
    7. '\n' → logprob: -6.182085990905762
    8. ' 
' → logprob: -6.182085990905762
    9. '     
' → logprob: -6.932085990905762
    10. 's' → logprob: -8.182085990905762

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05256064608693123
    2. '    
' → logprob: -3.552560567855835
    3. '
' → logprob: -5.052560806274414
    4. 'n' → logprob: -5.427560806274414
    5. ' 
' → logprob: -5.552560806274414
    6. '   
' → logprob: -6.552560806274414
    7. '     
' → logprob: -6.677560806274414
    8. ' if' → logprob: -6.802560806274414
    9. 'if' → logprob: -7.052560806274414
    10. '    ' → logprob: -7.052560806274414

Token 116: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009277979843318462
    2. '   ' → logprob: -5.259277820587158
    3. ' if' → logprob: -5.634277820587158
    4. '#' (adapté à ' #') → logprob: -8.384278297424316
    5. 'n' → logprob: -8.759278297424316
    6. 'i' → logprob: -10.259278297424316
    7. '    
' → logprob: -11.259278297424316
    8. ' ' → logprob: -12.009278297424316
    9. 'for' → logprob: -12.134278297424316
    10. '```' → logprob: -12.259278297424316

Token 117: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0660494789481163
    2. ' if' → logprob: -3.066049575805664
    3. '   ' → logprob: -4.191049575805664
    4. '#' → logprob: -6.316049575805664
    5. ' #' → logprob: -8.941049575805664
    6. '```' → logprob: -9.816049575805664
    7. 'n' → logprob: -10.066049575805664
    8. 'for' → logprob: -10.691049575805664
    9. 'i' → logprob: -10.691049575805664
    10. 'def' → logprob: -11.066049575805664

Token 118: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0022745581809431314
    2. 'if' → logprob: -6.627274513244629
    3. 'ifier' → logprob: -8.127274513244629
    4. '   ' → logprob: -8.502274513244629
    5. 'ifiez' → logprob: -8.752274513244629
    6. '_' → logprob: -9.377274513244629
    7. '_if' → logprob: -9.877274513244629
    8. 'ify' → logprob: -10.377274513244629
    9. ' if' → logprob: -10.377274513244629
    10. 'ife' → logprob: -10.502274513244629

Token 119: ' que' (ID: 661)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.05579059571027756
    2. ' if' → logprob: -3.055790662765503
    3. 'len' → logprob: -5.430790424346924
    4. ' ' → logprob: -6.430790424346924
    5. ' si' → logprob: -7.305790424346924
    6. ' la' → logprob: -9.055790901184082
    7. ' que' → logprob: -9.180790901184082
    8. 'if' → logprob: -9.305790901184082
    9. '(len' → logprob: -9.805790901184082
    10. ' not' → logprob: -10.180790901184082

Token 120: ' le' (ID: 505)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1870935559272766
    2. 'len' → logprob: -2.312093496322632
    3. ' s' → logprob: -2.812093496322632
    4. 's' → logprob: -4.562093734741211
    5. ' not' → logprob: -7.062093734741211
    6. ' ' → logprob: -9.562093734741211
    7. '(len' → logprob: -9.937093734741211
    8. 'not' → logprob: -10.187093734741211
    9. '   ' → logprob: -11.062093734741211
    10. ' la' → logprob: -11.437093734741211

Token 121: ' premier' (ID: 15506)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014619654975831509
    2. 'prem' → logprob: -5.139619827270508
    3. ' len' → logprob: -5.389619827270508
    4. 's' → logprob: -6.014619827270508
    5. ' premier' → logprob: -6.514619827270508
    6. ' s' → logprob: -9.514619827270508
    7. 'not' → logprob: -10.889619827270508
    8. 'first' → logprob: -11.139619827270508
    9. ' not' → logprob: -11.764619827270508
    10. '   ' → logprob: -11.764619827270508

Token 122: ' caractère' (ID: 80509)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20992334187030792
    2. 's' → logprob: -1.9599233865737915
    3. ' ' → logprob: -3.209923267364502
    4. ' caractère' → logprob: -5.709923267364502
    5. '_' → logprob: -6.709923267364502
    6. ' caract' → logprob: -7.084923267364502
    7. 'car' → logprob: -7.459923267364502
    8. ' car' → logprob: -7.834923267364502
    9. ' len' → logprob: -7.959923267364502
    10. '(s' → logprob: -8.20992374420166

Token 123: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06397386640310287
    2. ' s' → logprob: -3.688973903656006
    3. '==' → logprob: -4.063973903656006
    4. 's' → logprob: -4.188973903656006
    5. '   ' → logprob: -6.188973903656006
    6. ' est' → logprob: -6.813973903656006
    7. '(s' → logprob: -7.688973903656006
    8. ' ' → logprob: -8.063973426818848
    9. '()' → logprob: -8.813973426818848
    10. ')' → logprob: -8.813973426818848

Token 124: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2023567259311676
    2. ''A' → logprob: -2.2023568153381348
    3. ''' → logprob: -3.3273568153381348
    4. 's' → logprob: -3.9523568153381348
    5. ' A' → logprob: -5.202356815338135
    6. 'A' → logprob: -5.577356815338135
    7. ' s' → logprob: -5.702356815338135
    8. ''s' → logprob: -6.202356815338135
    9. '   ' → logprob: -6.452356815338135
    10. ''S' → logprob: -7.077356815338135

Token 125: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.470901229884475e-05
    2. ''A' → logprob: -9.62508487701416
    3. ' A' → logprob: -11.00008487701416
    4. ''' → logprob: -14.12508487701416
    5. ' ' → logprob: -15.50008487701416
    6. '   ' → logprob: -15.62508487701416
    7. '"A' → logprob: -15.62508487701416
    8. '`' → logprob: -16.000083923339844
    9. 'А' → logprob: -16.500083923339844
    10. '	A' → logprob: -16.750083923339844

Token 126: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.072401762008667
    2. '   ' → logprob: -1.072401762008667
    3. ' and' → logprob: -1.697401762008667
    4. '')' → logprob: -2.197401762008667
    5. 'and' → logprob: -5.197402000427246
    6. 'if' → logprob: -5.572402000427246
    7. ''' → logprob: -5.947402000427246
    8. ' if' → logprob: -6.197402000427246
    9. ' )' → logprob: -6.447402000427246
    10. ' ==' → logprob: -6.572402000427246

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009716100175864995
    2. 'if' → logprob: -8.000971794128418
    3. ' if' → logprob: -8.375971794128418
    4. '    
' → logprob: -8.375971794128418
    5. '
' → logprob: -10.000971794128418
    6. '  ' → logprob: -10.625971794128418
    7. '    ' → logprob: -10.875971794128418
    8. '   
' → logprob: -10.875971794128418
    9. ' ' → logprob: -11.000971794128418
    10. ':' → logprob: -11.000971794128418

Token 128: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19959811866283417
    2. ' if' → logprob: -2.1995980739593506
    3. 'if' (adapté à ' if') → logprob: -2.6995980739593506
    4. ' ' → logprob: -7.32459831237793
    5. '    
' → logprob: -7.44959831237793
    6. ' i' → logprob: -7.82459831237793
    7. 'i' → logprob: -8.07459831237793
    8. '    ' → logprob: -8.32459831237793
    9. ' 
' → logprob: -8.44959831237793
    10. '   
' → logprob: -9.19959831237793

Token 129: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3279097080230713
    2. ' len' → logprob: -1.3279097080230713
    3. ' not' → logprob: -4.827909469604492
    4. 's' → logprob: -5.202909469604492
    5. 'len' → logprob: -6.952909469604492
    6. ' ' → logprob: -9.702909469604492
    7. 'not' → logprob: -11.452909469604492
    8. '   ' → logprob: -12.452909469604492
    9. '  ' → logprob: -13.577909469604492
    10. '(len' → logprob: -13.577909469604492

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0484450437361374e-05
    2. ' [' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.375040054321289
    4. '```' → logprob: -16.00004005432129
    5. ' and' → logprob: -17.25004005432129
    6. ' ' → logprob: -17.25004005432129
    7. '[
' → logprob: -17.50004005432129
    8. ' ==' → logprob: -18.25004005432129
    9. '0' → logprob: -18.37504005432129
    10. ')' → logprob: -18.50004005432129

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5027299822540954e-05
    2. ' ' → logprob: -9.875055313110352
    3. '[' → logprob: -13.250055313110352
    4. '   ' → logprob: -13.875055313110352
    5. '1' → logprob: -14.375055313110352
    6. ']' → logprob: -16.75005531311035
    7. '  ' → logprob: -17.37505531311035
    8. '```' → logprob: -17.37505531311035
    9. ' [' → logprob: -17.62505531311035
    10. ')' → logprob: -17.75005531311035

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015564014902338386
    2. '']' → logprob: -7.376556396484375
    3. ' ]' → logprob: -7.626556396484375
    4. ']==' → logprob: -8.001556396484375
    5. ']!=' → logprob: -10.251556396484375
    6. ']=='' → logprob: -11.126556396484375
    7. '==' → logprob: -11.126556396484375
    8. ' !=' → logprob: -11.376556396484375
    9. ''' → logprob: -11.501556396484375
    10. ' ==' → logprob: -11.501556396484375

Token 133: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9708892703056335
    2. ' ==' → logprob: -1.3458893299102783
    3. '==' → logprob: -1.5958893299102783
    4. '!=' → logprob: -1.8458893299102783
    5. '!='' → logprob: -9.0958890914917
    6. '=' → logprob: -9.2208890914917
    7. ' ' → logprob: -9.9708890914917
    8. '=='' → logprob: -10.0958890914917
    9. '[' → logprob: -11.7208890914917
    10. ' =='' → logprob: -11.9708890914917

Token 134: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.07951468229293823
    2. ' '' → logprob: -2.579514741897583
    3. ''' → logprob: -7.454514503479004
    4. '"A' → logprob: -10.204514503479004
    5. 'A' → logprob: -11.954514503479004
    6. '’A' → logprob: -13.954514503479004
    7. ' A' → logprob: -14.329514503479004
    8. ' ' → logprob: -14.954514503479004
    9. '"' → logprob: -15.329514503479004
    10. '   ' → logprob: -15.579514503479004

Token 135: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00023166877508629113
    2. ''A' → logprob: -8.375231742858887
    3. ' A' → logprob: -14.250231742858887
    4. ''' → logprob: -14.875231742858887
    5. '"A' → logprob: -17.12523078918457
    6. '	A' → logprob: -18.12523078918457
    7. '’A' → logprob: -18.25023078918457
    8. 'А' → logprob: -18.62523078918457
    9. ''''' → logprob: -18.75023078918457
    10. ')' → logprob: -19.37523078918457

Token 136: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1481899470090866
    2. '':' → logprob: -2.0231900215148926
    3. ' and' → logprob: -6.148190021514893
    4. ' '' → logprob: -6.523190021514893
    5. ':' → logprob: -6.773190021514893
    6. '':
' → logprob: -7.773190021514893
    7. ' ':' → logprob: -9.398189544677734
    8. 'and' → logprob: -9.648189544677734
    9. '   ' → logprob: -9.648189544677734
    10. ''):' → logprob: -11.273189544677734

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6278244256973267
    2. '   ' → logprob: -0.8778244256973267
    3. '    ' → logprob: -3.752824306488037
    4. ' ' → logprob: -5.002824306488037
    5. '
' → logprob: -5.127824306488037
    6. ' and' → logprob: -5.627824306488037
    7. '    
' → logprob: -5.752824306488037
    8. '<|end|>' → logprob: -6.252824306488037
    9. '\n' → logprob: -6.252824306488037
    10. '        
' → logprob: -6.877824306488037

Token 138: ' del' (ID: 1083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7668397426605225
    2. '       ' → logprob: -1.6418397426605225
    3. ' if' → logprob: -2.2668397426605225
    4. '    ' → logprob: -3.0168397426605225
    5. 'if' → logprob: -3.1418397426605225
    6. 'count' → logprob: -3.1418397426605225
    7. ' count' → logprob: -3.2668397426605225
    8. 'c' → logprob: -3.5168397426605225
    9. ' c' → logprob: -4.766839981079102
    10. 'n' → logprob: -5.516839981079102

Token 139: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.010873782448470592
    2. 's' → logprob: -4.635873794555664
    3. '[' → logprob: -7.510873794555664
    4. '(s' → logprob: -8.260873794555664
    5. '[s' → logprob: -8.885873794555664
    6. ' [' → logprob: -9.010873794555664
    7. ' ' → logprob: -10.885873794555664
    8. '<|end|>' → logprob: -12.010873794555664
    9. '[]' → logprob: -12.885873794555664
    10. '<|end|>' → logprob: -12.885873794555664

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002810225123539567
    2. '0' → logprob: -6.377810001373291
    3. ' [' → logprob: -7.627810001373291
    4. '1' → logprob: -8.37781047821045
    5. ' ' → logprob: -9.00281047821045
    6. '[-' → logprob: -10.25281047821045
    7. '   ' → logprob: -10.56531047821045
    8. 's' → logprob: -10.62781047821045
    9. '[:' → logprob: -10.69031047821045
    10. '[
' → logprob: -10.75281047821045

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5777884125709534
    2. '1' → logprob: -0.8277884125709534
    3. '-' → logprob: -6.452788352966309
    4. ' ' → logprob: -9.702788352966309
    5. '2' → logprob: -9.827788352966309
    6. ']' → logprob: -10.202788352966309
    7. 's' → logprob: -10.327788352966309
    8. '])' → logprob: -10.577788352966309
    9. '[' → logprob: -11.390288352966309
    10. ' -' → logprob: -11.640288352966309

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18163855373859406
    2. ']
' → logprob: -1.9316385984420776
    3. '       ' → logprob: -4.431638717651367
    4. ')' → logprob: -5.431638717651367
    5. '   ' → logprob: -6.056638717651367
    6. ')
' → logprob: -7.306638717651367
    7. ']
' → logprob: -7.431638717651367
    8. ' ]' → logprob: -7.806638717651367
    9. '']' → logprob: -8.056638717651367
    10. ' ]
' → logprob: -8.556638717651367

Token 143: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2521592378616333
    2. '   ' → logprob: -2.3771591186523438
    3. '
' → logprob: -3.0021591186523438
    4. '        
' → logprob: -3.3771591186523438
    5. ' 
' → logprob: -4.377159118652344
    6. '    
' → logprob: -4.877159118652344
    7. 'if' → logprob: -4.877159118652344
    8. ' ' → logprob: -4.877159118652344
    9. ' if' → logprob: -5.377159118652344
    10. '  
' → logprob: -6.752159118652344

Token 144: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2569684684276581
    2. '       ' → logprob: -2.1319684982299805
    3. ' 
' → logprob: -3.3819684982299805
    4. '        
' → logprob: -3.7569684982299805
    5. ' ' → logprob: -4.0069684982299805
    6. '   ' → logprob: -4.3819684982299805
    7. '    
' → logprob: -4.8819684982299805
    8. 'if' → logprob: -6.0069684982299805
    9. '  
' → logprob: -6.6319684982299805
    10. '
' → logprob: -6.6319684982299805

Token 145: ' Sup' (ID: 13606)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.341866672039032
    2. '   ' → logprob: -1.9668667316436768
    3. 'if' → logprob: -2.3418667316436768
    4. ' ' → logprob: -3.7168667316436768
    5. '       ' → logprob: -4.341866493225098
    6. '    ' → logprob: -4.591866493225098
    7. ' 
' → logprob: -7.216866493225098
    8. ' s' → logprob: -7.216866493225098
    9. '  ' → logprob: -7.591866493225098
    10. ' ' → logprob: -7.841866493225098

Token 146: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.053717952221632004
    2. 'pr' → logprob: -4.178718090057373
    3. 'p' → logprob: -4.678718090057373
    4. '   ' → logprob: -5.178718090057373
    5. '```' → logprob: -5.428718090057373
    6. '       ' → logprob: -5.553718090057373
    7. 'primer' → logprob: -5.678718090057373
    8. 'prim' → logprob: -5.928718090057373
    9. 'r' → logprob: -5.928718090057373
    10. ' prime' → logprob: -7.178718090057373

Token 147: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5206730365753174
    2. ' le' → logprob: -1.5206730365753174
    3. 's' → logprob: -2.0206730365753174
    4. 'le' → logprob: -3.7706730365753174
    5. ' '' → logprob: -4.520672798156738
    6. ''s' → logprob: -4.895672798156738
    7. ' the' → logprob: -5.770672798156738
    8. '       ' → logprob: -6.770672798156738
    9. 'the' → logprob: -7.020672798156738
    10. '[' → logprob: -7.020672798156738

Token 148: ' '' (ID: 461)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.5702615976333618
    2. ' premier' → logprob: -1.5702615976333618
    3. ''A' → logprob: -2.3202614784240723
    4. ''' → logprob: -2.9452614784240723
    5. 'A' → logprob: -2.9452614784240723
    6. 's' → logprob: -4.570261478424072
    7. 'first' → logprob: -5.570261478424072
    8. ' A' → logprob: -6.195261478424072
    9. ' '' → logprob: -6.320261478424072
    10. ''s' → logprob: -6.695261478424072

Token 149: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0023662515450268984
    2. ''A' → logprob: -6.127366065979004
    3. ''' → logprob: -9.002366065979004
    4. 's' → logprob: -10.502366065979004
    5. 'first' → logprob: -11.627366065979004
    6. '[' → logprob: -12.877366065979004
    7. '')' → logprob: -13.002366065979004
    8. ' A' → logprob: -13.002366065979004
    9. '"A' → logprob: -13.377366065979004
    10. '['' → logprob: -13.502366065979004

Token 150: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405452489852905
    2. '
' → logprob: -1.2655452489852905
    3. '       ' → logprob: -2.76554536819458
    4. ' 
' → logprob: -3.39054536819458
    5. '    
' → logprob: -3.51554536819458
    6. ' ' → logprob: -4.39054536819458
    7. ')' → logprob: -4.64054536819458
    8. '<|end|>' → logprob: -4.76554536819458
    9. ' if' → logprob: -5.64054536819458
    10. ' else' → logprob: -5.76554536819458

Token 151: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5385298132896423
    2. '   ' → logprob: -1.788529872894287
    3. '
' → logprob: -1.913529872894287
    4. '        
' → logprob: -3.163529872894287
    5. '    
' → logprob: -3.663529872894287
    6. ' 
' → logprob: -4.788529872894287
    7. '  
' → logprob: -5.288529872894287
    8. '<|end|>' → logprob: -5.413529872894287
    9. ' if' → logprob: -5.663529872894287
    10. ' ' → logprob: -5.913529872894287

Token 152: ' traiter' (ID: 105852)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.486206978559494
    2. ' faciliter' → logprob: -1.9862070083618164
    3. ' vérifier' → logprob: -2.8612070083618164
    4. ' pouvoir' → logprob: -3.1112070083618164
    5. 'simpl' → logprob: -3.9862070083618164
    6. ' analyser' → logprob: -4.236207008361816
    7. ' traiter' → logprob: -4.361207008361816
    8. ' poursuivre' → logprob: -4.486207008361816
    9. 'contin' → logprob: -4.611207008361816
    10. ' examiner' → logprob: -4.611207008361816

Token 153: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.669994592666626
    2. ' les' → logprob: -1.669994592666626
    3. ' la' → logprob: -1.794994592666626
    4. 'le' → logprob: -2.544994592666626
    5. 's' → logprob: -4.419994354248047
    6. ' ' → logprob: -4.544994354248047
    7. 'les' → logprob: -4.794994354248047
    8. ' the' → logprob: -5.169994354248047
    9. 'la' → logprob: -5.544994354248047
    10. ' l' → logprob: -5.544994354248047

Token 154: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.5852279663085938
    2. 'reste' → logprob: -0.8352279663085938
    3. 's' → logprob: -5.710227966308594
    4. 'rest' → logprob: -6.460227966308594
    5. 're' → logprob: -6.960227966308594
    6. 'r' → logprob: -6.960227966308594
    7. 'suite' → logprob: -8.085227966308594
    8. ' restant' → logprob: -8.085227966308594
    9. 'R' → logprob: -8.835227966308594
    10. ' R' → logprob: -9.085227966308594

Token 155: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9742478728294373
    2. '       ' → logprob: -0.9742478728294373
    3. '
' → logprob: -1.974247932434082
    4. '    
' → logprob: -3.349247932434082
    5. '        
' → logprob: -3.474247932434082
    6. '  
' → logprob: -4.849247932434082
    7. ' 
' → logprob: -4.974247932434082
    8. '<|end|>' → logprob: -4.974247932434082
    9. '   
' → logprob: -5.474247932434082
    10. ' if' → logprob: -5.974247932434082

Token 156: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20848679542541504
    2. ' la' → logprob: -1.958486795425415
    3. 's' → logprob: -3.208486795425415
    4. ' s' → logprob: -5.583486557006836
    5. 'chaine' → logprob: -6.208486557006836
    6. 'l' → logprob: -8.083486557006836
    7. 'a' → logprob: -9.583486557006836
    8. ' ' → logprob: -9.583486557006836
    9. 'liste' → logprob: -9.833486557006836
    10. 'string' → logprob: -9.958486557006836

Token 157: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.1774006187915802
    2. ' chaîne' → logprob: -2.302400588989258
    3. 'cha' → logprob: -3.427400588989258
    4. 'liste' → logprob: -3.802400588989258
    5. 's' → logprob: -5.927400588989258
    6. ' liste' → logprob: -6.302400588989258
    7. ' chaine' → logprob: -6.302400588989258
    8. 'list' → logprob: -7.177400588989258
    9. 'string' → logprob: -8.302400588989258
    10. 'chain' → logprob: -8.302400588989258

Token 158: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46153026819229126
    2. '   ' → logprob: -1.9615302085876465
    3. '
' → logprob: -2.0865302085876465
    4. '<|end|>' → logprob: -3.7115302085876465
    5. '        
' → logprob: -3.8365302085876465
    6. '    
' → logprob: -4.0865302085876465
    7. ' 
' → logprob: -4.4615302085876465
    8. '  
' → logprob: -4.7115302085876465
    9. ' ' → logprob: -4.9615302085876465
    10. ' and' → logprob: -5.9615302085876465

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06205327808856964
    2. 'if' → logprob: -3.4370532035827637
    3. ' if' → logprob: -4.187053203582764
    4. '       ' → logprob: -4.812053203582764
    5. '    
' → logprob: -6.312053203582764
    6. '
' → logprob: -6.687053203582764
    7. '    ' → logprob: -8.187053680419922
    8. 'c' → logprob: -8.562053680419922
    9. ' 
' → logprob: -8.562053680419922
    10. ' ' → logprob: -8.812053680419922

Token 160: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05633363872766495
    2. 'c' → logprob: -3.931333541870117
    3. 'count' → logprob: -4.181333541870117
    4. '       ' → logprob: -4.931333541870117
    5. '   ' → logprob: -5.181333541870117
    6. 'try' → logprob: -5.556333541870117
    7. '#' (adapté à ' #') → logprob: -6.056333541870117
    8. 'cnt' → logprob: -7.681333541870117
    9. ' if' → logprob: -8.681333541870117
    10. '        
' → logprob: -10.431333541870117

Token 161: ' Comp' (ID: 5211)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4467677175998688
    2. 'count' → logprob: -1.4467676877975464
    3. 'c' → logprob: -3.321767807006836
    4. '#' → logprob: -3.446767807006836
    5. '   ' → logprob: -3.571767807006836
    6. '       ' → logprob: -4.446767807006836
    7. ' if' → logprob: -5.696767807006836
    8. 'comp' → logprob: -5.946767807006836
    9. ' count' → logprob: -6.321767807006836
    10. 'cnt' → logprob: -6.321767807006836

Token 162: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.18376876413822174
    2. 'ter' → logprob: -1.8087687492370605
    3. 't' → logprob: -6.4337687492370605
    4. 'teur' → logprob: -7.0587687492370605
    5. '   ' → logprob: -8.058769226074219
    6. 're' → logprob: -9.121269226074219
    7. '#' → logprob: -9.246269226074219
    8. 'r' → logprob: -9.496269226074219
    9. 'tte' → logprob: -9.621269226074219
    10. 'tele' → logprob: -9.808769226074219

Token 163: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0275059938430786
    2. '_c' → logprob: -1.5275059938430786
    3. '(s' → logprob: -2.152505874633789
    4. 'le' → logprob: -2.402505874633789
    5. ' =' → logprob: -2.777505874633789
    6. 'c' → logprob: -3.277505874633789
    7. '_le' → logprob: -3.902505874633789
    8. '_' → logprob: -3.902505874633789
    9. '_s' → logprob: -4.152505874633789
    10. 'les' → logprob: -4.277505874633789

Token 164: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6324992179870605
    2. 'c' → logprob: -1.0074992179870605
    3. 'if' → logprob: -2.6324992179870605
    4. 'nombre' → logprob: -4.1324992179870605
    5. 'try' → logprob: -5.5074992179870605
    6. ' s' → logprob: -5.6324992179870605
    7. 'C' → logprob: -6.0074992179870605
    8. '   ' → logprob: -6.3824992179870605
    9. ''s' → logprob: -6.8824992179870605
    10. 'count' → logprob: -7.5074992179870605

Token 165: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7866920232772827
    2. 's' → logprob: -1.4116920232772827
    3. ' de' → logprob: -2.1616921424865723
    4. '(s' → logprob: -2.9116921424865723
    5. 'd' → logprob: -3.0366921424865723
    6. ' =' → logprob: -3.6616921424865723
    7. '   ' → logprob: -4.411692142486572
    8. '_c' → logprob: -4.786692142486572
    9. '=' → logprob: -5.036692142486572
    10. '('' → logprob: -5.036692142486572

Token 166: ' fois' (ID: 14697)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35489529371261597
    2. 'C' → logprob: -1.6048953533172607
    3. ''C' → logprob: -2.9798953533172607
    4. ''s' → logprob: -3.2298953533172607
    5. 'c' → logprob: -6.229895114898682
    6. ' C' → logprob: -6.354895114898682
    7. ' s' → logprob: -6.604895114898682
    8. ' '' → logprob: -6.979895114898682
    9. ''' → logprob: -7.854895114898682
    10. ' ' → logprob: -8.47989559173584

Token 167: ' où' (ID: 15113)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0800942182540894
    2. '(s' → logprob: -1.0800942182540894
    3. '('' → logprob: -1.2050942182540894
    4. '(' → logprob: -5.205094337463379
    5. 'C' → logprob: -5.330094337463379
    6. ' s' → logprob: -5.580094337463379
    7. '   ' → logprob: -6.330094337463379
    8. 'c' → logprob: -6.330094337463379
    9. '("' → logprob: -6.830094337463379
    10. ' ' → logprob: -8.205094337463379

Token 168: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.40682852268218994
    2. 's' → logprob: -1.15682852268219
    3. ''' → logprob: -4.6568284034729
    4. 'C' → logprob: -6.0318284034729
    5. ''s' → logprob: -6.0318284034729
    6. ' s' → logprob: -6.2818284034729
    7. ' '' → logprob: -6.4068284034729
    8. '"C' → logprob: -6.9068284034729
    9. ''S' → logprob: -7.7818284034729
    10. ''A' → logprob: -8.906828880310059

Token 169: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12933994829654694
    2. ''C' → logprob: -2.1293399333953857
    3. 's' → logprob: -6.504340171813965
    4. ''' → logprob: -7.379340171813965
    5. 'c' → logprob: -9.004340171813965
    6. ' C' → logprob: -9.754340171813965
    7. '"C' → logprob: -10.379340171813965
    8. ''s' → logprob: -10.629340171813965
    9. '   ' → logprob: -11.129340171813965
    10. ' '' → logprob: -11.254340171813965

Token 170: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004134799353778362
    2. ''in' → logprob: -6.754134654998779
    3. ''s' → logprob: -7.254134654998779
    4. 's' → logprob: -7.504134654998779
    5. ''ap' → logprob: -7.879134654998779
    6. ' appears' → logprob: -7.879134654998779
    7. ''appar' → logprob: -7.879134654998779
    8. ' occurs' → logprob: -9.004135131835938
    9. 'c' → logprob: -9.629135131835938
    10. 'occur' → logprob: -10.254135131835938

Token 171: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.43070489168167114
    2. ' appears' → logprob: -1.5557048320770264
    3. ' appara' → logprob: -3.9307048320770264
    4. '       ' → logprob: -3.9307048320770264
    5. 's' → logprob: -4.1807050704956055
    6. ' occurs' → logprob: -4.4307050704956055
    7. 'occur' → logprob: -4.6807050704956055
    8. 'occ' → logprob: -4.6807050704956055
    9. 'appe' → logprob: -5.0557050704956055
    10. 'count' → logprob: -5.1807050704956055

Token 172: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.143801748752594
    2. ' if' → logprob: -3.143801689147949
    3. 's' → logprob: -3.393801689147949
    4. ' s' → logprob: -4.018801689147949
    5. ' in' → logprob: -4.518801689147949
    6. 'if' → logprob: -4.643801689147949
    7. ' dans' → logprob: -4.768801689147949
    8. '(s' → logprob: -6.018801689147949
    9. ',' → logprob: -6.643801689147949
    10. 'dans' → logprob: -6.893801689147949

Token 173: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4295606315135956
    2. ' s' → logprob: -1.054560661315918
    3. '(s' → logprob: -7.804560661315918
    4. ' la' → logprob: -9.304560661315918
    5. '[s' → logprob: -9.429560661315918
    6. '   ' → logprob: -9.554560661315918
    7. ' ' → logprob: -9.929560661315918
    8. '[' → logprob: -10.804560661315918
    9. 'la' → logprob: -11.179560661315918
    10. ' the' → logprob: -11.367060661315918

Token 174: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038931749761104584
    2. ' s' → logprob: -3.2889318466186523
    3. ' ' → logprob: -8.538931846618652
    4. '   ' → logprob: -8.788931846618652
    5. 'range' → logprob: -9.163931846618652
    6. '(s' → logprob: -9.788931846618652
    7. '[s' → logprob: -10.163931846618652
    8. '[' → logprob: -10.226431846618652
    9. ' range' → logprob: -10.351431846618652
    10. 'chaine' → logprob: -10.726431846618652

Token 175: '-l' (ID: 2887)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.05099695920944214
    2. 's' → logprob: -3.675997018814087
    3. 'liste' → logprob: -3.925997018814087
    4. '   ' → logprob: -6.425996780395508
    5. ' chaîne' → logprob: -6.550996780395508
    6. 'chain' → logprob: -7.925996780395508
    7. 'cha' → logprob: -8.050996780395508
    8. 'list' → logprob: -8.175996780395508
    9. '-' → logprob: -8.300996780395508
    10. 'string' → logprob: -8.800996780395508

Token 176: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.18891611695289612
    2. 'ist' → logprob: -2.0639162063598633
    3. 's' → logprob: -3.8139162063598633
    4. '[' → logprob: -5.438916206359863
    5. 'en' → logprob: -5.438916206359863
    6. '   ' → logprob: -5.813916206359863
    7. 'st' → logprob: -6.188916206359863
    8. 'e' → logprob: -6.313916206359863
    9. 'igne' → logprob: -6.563916206359863
    10. 'is' → logprob: -6.688916206359863

Token 177: ' sans' (ID: 9828)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5407009720802307
    2. '(s' → logprob: -1.165700912475586
    3. ' s' → logprob: -3.040700912475586
    4. '   ' → logprob: -4.040700912475586
    5. ' between' → logprob: -4.540700912475586
    6. '[' → logprob: -4.540700912475586
    7. ' entre' → logprob: -5.790700912475586
    8. 'between' → logprob: -5.790700912475586
    9. '       ' → logprob: -6.165700912475586
    10. '(' → logprob: -6.290700912475586

Token 178: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.343537837266922
    2. ' s' → logprob: -2.2185378074645996
    3. '['' → logprob: -2.4685378074645996
    4. ' les' → logprob: -3.7185378074645996
    5. '[' → logprob: -3.8435378074645996
    6. 'les' → logprob: -4.8435378074646
    7. ' le' → logprob: -5.2185378074646
    8. 'le' → logprob: -5.2185378074646
    9. ' ['' → logprob: -5.3435378074646
    10. '(['' → logprob: -5.5935378074646

Token 179: ' premier' (ID: 15506)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.060922663658857346
    2. ' dernier' → logprob: -3.435922622680664
    3. '-' → logprob: -4.435922622680664
    4. 'last' → logprob: -5.435922622680664
    5. 's' → logprob: -5.560922622680664
    6. ' last' → logprob: -6.185922622680664
    7. 'der' → logprob: -6.810922622680664
    8. ' premier' → logprob: -6.935922622680664
    9. 'prem' → logprob: -7.060922622680664
    10. '[-' → logprob: -7.685922622680664

Token 180: ' ni' (ID: 2565)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.0180270671844482
    2. 'et' → logprob: -1.6430270671844482
    3. 's' → logprob: -1.7680270671844482
    4. ' s' → logprob: -2.8930270671844482
    5. ''' → logprob: -3.6430270671844482
    6. ' and' → logprob: -3.6430270671844482
    7. '[' → logprob: -3.7680270671844482
    8. ' ' → logprob: -4.268027305603027
    9. ' '' → logprob: -4.268027305603027
    10. 'car' → logprob: -4.268027305603027

Token 181: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8260284662246704
    2. 'dern' → logprob: -0.8260284662246704
    3. ' le' → logprob: -2.576028347015381
    4. 'l' → logprob: -4.076028347015381
    5. 'len' → logprob: -4.326028347015381
    6. ' dernier' → logprob: -4.451028347015381
    7. 'last' → logprob: -6.326028347015381
    8. ' l' → logprob: -6.576028347015381
    9. 'der' → logprob: -6.951028347015381
    10. ' last' → logprob: -7.451028347015381

Token 182: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.005107102915644646
    2. ' dernier' → logprob: -5.3801069259643555
    3. '-' → logprob: -8.255106925964355
    4. 'last' → logprob: -9.380106925964355
    5. ' last' → logprob: -9.755106925964355
    6. 'der' → logprob: -10.005106925964355
    7. '1' → logprob: -11.380106925964355
    8. 'Dern' → logprob: -11.755106925964355
    9. ' derni' → logprob: -11.880106925964355
    10. ' -' → logprob: -12.880106925964355

Token 183: ' caractère' (ID: 80509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0534851551055908
    2. '2' → logprob: -1.1784851551055908
    3. '1' → logprob: -2.053485155105591
    4. ' s' → logprob: -2.303485155105591
    5. ' ' → logprob: -3.178485155105591
    6. '   ' → logprob: -3.928485155105591
    7. '[' → logprob: -4.803484916687012
    8. ' caract' → logprob: -5.053484916687012
    9. 'de' → logprob: -5.178484916687012
    10. ' caractère' → logprob: -5.428484916687012

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2456158846616745
    2. 's' → logprob: -2.2456159591674805
    3. ' s' → logprob: -3.2456159591674805
    4. ' if' → logprob: -3.4956159591674805
    5. '(s' → logprob: -4.4956159591674805
    6. 'if' → logprob: -4.4956159591674805
    7. ' =' → logprob: -6.2456159591674805
    8. '   ' → logprob: -6.2456159591674805
    9. '(' → logprob: -6.4956159591674805
    10. 'count' → logprob: -6.4956159591674805

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29647254943847656
    2. ' if' → logprob: -1.9214725494384766
    3. ' s' → logprob: -3.5464725494384766
    4. 's' → logprob: -3.6714725494384766
    5. 'if' → logprob: -3.6714725494384766
    6. 'count' → logprob: -4.796472549438477
    7. '   ' → logprob: -4.921472549438477
    8. ' count' → logprob: -5.171472549438477
    9. '[' → logprob: -6.671472549438477
    10. 'c' → logprob: -7.046472549438477

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6480646133422852
    2. ' if' → logprob: -1.1480646133422852
    3. 'count' → logprob: -2.898064613342285
    4. 'c' → logprob: -3.398064613342285
    5. ' count' → logprob: -3.773064613342285
    6. '       ' → logprob: -3.898064613342285
    7. ' c' → logprob: -5.023064613342285
    8. ' s' → logprob: -5.148064613342285
    9. '   ' → logprob: -5.273064613342285
    10. 's' → logprob: -5.523064613342285

Token 187: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5249179601669312
    2. ' s' → logprob: -0.8999179601669312
    3. ''s' → logprob: -6.649918079376221
    4. '   ' → logprob: -9.024917602539062
    5. ' ' → logprob: -9.649917602539062
    6. ' '' → logprob: -9.649917602539062
    7. ''' → logprob: -9.649917602539062
    8. '(s' → logprob: -10.399917602539062
    9. '1' → logprob: -10.524917602539062
    10. '"s' → logprob: -10.649917602539062

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00873157661408186
    2. '.count' → logprob: -4.758731365203857
    3. '[s' → logprob: -9.258731842041016
    4. '.' → logprob: -11.383731842041016
    5. '   ' → logprob: -12.508731842041016
    6. 'count' → logprob: -13.133731842041016
    7. '.index' → logprob: -13.258731842041016
    8. '[:' → logprob: -13.633731842041016
    9. '.s' → logprob: -14.383731842041016
    10. 's' → logprob: -15.133731842041016

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006251203827559948
    2. 's' → logprob: -5.756251335144043
    3. ':-' → logprob: -5.881251335144043
    4. ':s' → logprob: -9.381251335144043
    5. '[' → logprob: -9.881251335144043
    6. ' ' → logprob: -10.131251335144043
    7. ':' → logprob: -10.881251335144043
    8. '   ' → logprob: -11.006251335144043
    9. '[:-' → logprob: -11.631251335144043
    10. '-' → logprob: -11.881251335144043

Token 190: ':-' (ID: 20118)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12370720505714417
    2. ':].' → logprob: -2.6237072944641113
    3. ':' → logprob: -3.8737072944641113
    4. ']==' → logprob: -4.248707294464111
    5. ' s' → logprob: -6.248707294464111
    6. ' ]' → logprob: -6.623707294464111
    7. 's' → logprob: -6.623707294464111
    8. '].' → logprob: -6.623707294464111
    9. '(s' → logprob: -7.623707294464111
    10. '   ' → logprob: -7.623707294464111

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. '2' → logprob: -10.750021934509277
    3. ' ' → logprob: -14.375021934509277
    4. '   ' → logprob: -16.375022888183594
    5. '-' → logprob: -16.875022888183594
    6. '１' → logprob: -17.125022888183594
    7. '```' → logprob: -17.125022888183594
    8. '

' → logprob: -17.687522888183594
    9. '3' → logprob: -17.687522888183594
    10. '
' → logprob: -17.937522888183594

Token 192: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009250381262972951
    2. ').' → logprob: -7.500925064086914
    3. '.count' → logprob: -9.000925064086914
    4. ' ].' → logprob: -9.250925064086914
    5. ']' → logprob: -9.875925064086914
    6. '   ' → logprob: -10.125925064086914
    7. ''].' → logprob: -10.625925064086914
    8. '       ' → logprob: -11.250925064086914
    9. '           ' → logprob: -12.375925064086914
    10. ':].' → logprob: -12.625925064086914

Token 193: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.246537173457909e-06
    2. ' count' → logprob: -12.500003814697266
    3. '.count' → logprob: -14.750003814697266
    4. '	count' → logprob: -17.000003814697266
    5. '```' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.000003814697266
    7. ' ' → logprob: -19.625003814697266
    8. '  ' → logprob: -19.875003814697266
    9. '    ' → logprob: -20.125003814697266
    10. '(count' → logprob: -20.375003814697266

Token 194: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.8219583075260743e-05
    2. '(' → logprob: -10.625038146972656
    3. '("' → logprob: -11.500038146972656
    4. ' ('' → logprob: -13.250038146972656
    5. ''C' → logprob: -14.125038146972656
    6. ''' → logprob: -14.250038146972656
    7. '(
' → logprob: -16.000038146972656
    8. '   ' → logprob: -16.125038146972656
    9. '(C' → logprob: -16.500038146972656
    10. '(('' → logprob: -16.500038146972656

Token 195: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00043257648940198123
    2. ''C' → logprob: -7.75043249130249
    3. ''' → logprob: -13.500432968139648
    4. ' C' → logprob: -14.625432968139648
    5. '"C' → logprob: -16.75043296813965
    6. '['' → logprob: -17.87543296813965
    7. '
' → logprob: -18.37543296813965
    8. '`' → logprob: -18.62543296813965
    9. 'c' → logprob: -19.37543296813965
    10. 'С' → logprob: -19.75043296813965

Token 196: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932246685028076
    2. '')' → logprob: -0.6932246685028076
    3. ')==' → logprob: -10.318224906921387
    4. '==' → logprob: -11.068224906921387
    5. ' )' → logprob: -12.068224906921387
    6. '()' → logprob: -12.318224906921387
    7. '")' → logprob: -12.443224906921387
    8. ''' → logprob: -12.443224906921387
    9. ' ==' → logprob: -12.568224906921387
    10. ' ')' → logprob: -12.943224906921387

Token 197: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018526002764701843
    2. '==' → logprob: -4.018526077270508
    3. ')' → logprob: -8.893526077270508
    4. ' ' → logprob: -8.893526077270508
    5. '()' → logprob: -10.518526077270508
    6. ')==' → logprob: -10.768526077270508
    7. '()==' → logprob: -10.893526077270508
    8. '=' → logprob: -11.518526077270508
    9. '        ' → logprob: -12.018526077270508
    10. ' )' → logprob: -12.393526077270508

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. 'exact' → logprob: -17.50037956237793
    4. '  ' → logprob: -17.75037956237793
    5. '```' → logprob: -17.75037956237793
    6. '   ' → logprob: -18.25037956237793
    7. '<|end|>' → logprob: -18.50037956237793
    8. '۱' → logprob: -18.62537956237793
    9. '0' → logprob: -19.18787956237793
    10. ' ' → logprob: -19.37537956237793

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'exact' → logprob: -16.00000762939453
    4. '   ' → logprob: -16.62500762939453
    5. '```' → logprob: -17.25000762939453
    6. '۱' → logprob: -17.37500762939453
    7. '<|end|>' → logprob: -17.62500762939453
    8. '  ' → logprob: -18.18750762939453
    9. '0' → logprob: -18.56250762939453
    10. 'Exactly' → logprob: -18.68750762939453

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12954793870449066
    2. ' and' → logprob: -2.1295478343963623
    3. ' :' → logprob: -6.129548072814941
    4. ':
' → logprob: -8.504548072814941
    5. '):' → logprob: -9.129548072814941
    6. '       ' → logprob: -9.879548072814941
    7. 'and' → logprob: -10.004548072814941
    8. ')' → logprob: -11.504548072814941
    9. '   ' → logprob: -11.754548072814941
    10. ',' → logprob: -12.879548072814941

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009158092550933361
    2. '       ' → logprob: -5.509158134460449
    3. ' and' → logprob: -6.009158134460449
    4. '        ' → logprob: -7.384158134460449
    5. '	       ' → logprob: -7.759158134460449
    6. '               ' → logprob: -8.00915813446045
    7. '            ' → logprob: -8.25915813446045
    8. '            
' → logprob: -8.25915813446045
    9. ' for' → logprob: -8.75915813446045
    10. '          ' → logprob: -9.63415813446045

Token 202: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6504773497581482
    2. 'for' → logprob: -1.650477409362793
    3. 'if' → logprob: -2.150477409362793
    4. ' for' → logprob: -2.275477409362793
    5. ' if' → logprob: -3.275477409362793
    6. '   ' → logprob: -4.400477409362793
    7. '       ' → logprob: -4.900477409362793
    8. 'all' → logprob: -5.650477409362793
    9. 'valid' → logprob: -6.650477409362793
    10. ' valid' → logprob: -6.900477409362793

Token 203: '.remove' (ID: 7986)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2807460427284241
    2. '=' → logprob: -1.7807459831237793
    3. '.pop' → logprob: -3.9057459831237793
    4. '_lower' → logprob: -4.030745983123779
    5. '[' → logprob: -4.405745983123779
    6. '[:]' → logprob: -4.905745983123779
    7. 'lower' → logprob: -5.280745983123779
    8. 's' → logprob: -6.030745983123779
    9. 'all' → logprob: -6.530745983123779
    10. '_ok' → logprob: -6.655745983123779

Token 204: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.05575542524456978
    2. ''C' → logprob: -2.930755376815796
    3. ''' → logprob: -7.180755615234375
    4. '(' → logprob: -9.555755615234375
    5. '"C' → logprob: -11.430755615234375
    6. '("' → logprob: -11.430755615234375
    7. ''A' → logprob: -12.180755615234375
    8. ''S' → logprob: -12.430755615234375
    9. ' '' → logprob: -12.930755615234375
    10. ''O' → logprob: -13.805755615234375

Token 205: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.007613255642354488
    2. ''C' → logprob: -4.882613182067871
    3. ''' → logprob: -12.382613182067871
    4. ' C' → logprob: -13.757613182067871
    5. '"C' → logprob: -14.257613182067871
    6. ')' → logprob: -15.257613182067871
    7. 'c' → logprob: -15.507613182067871
    8. '')' → logprob: -15.757613182067871
    9. '	C' → logprob: -16.632614135742188
    10. '['' → logprob: -16.632614135742188

Token 206: '')' (ID: 1542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9459556341171265
    2. ')' → logprob: -1.0709556341171265
    3. '')' → logprob: -1.4459556341171265
    4. ')
' → logprob: -4.445955753326416
    5. '')
' → logprob: -4.820955753326416
    6. '       ' → logprob: -4.820955753326416
    7. '   ' → logprob: -6.445955753326416
    8. ' ' → logprob: -7.070955753326416
    9. ' )' → logprob: -7.445955753326416
    10. '
' → logprob: -8.070955276489258

Token 207: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005834118463099003
    2. 'if' → logprob: -6.130834102630615
    3. '       ' → logprob: -6.630834102630615
    4. ' for' → logprob: -7.005834102630615
    5. 'for' → logprob: -7.505834102630615
    6. ' if' → logprob: -7.755834102630615
    7. '   ' → logprob: -8.630834579467773
    8. ' ' → logprob: -10.005834579467773
    9. '            
' → logprob: -10.005834579467773
    10. '<|end|>' → logprob: -10.130834579467773

Token 208: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5786245465278625
    2. '           ' → logprob: -1.0786244869232178
    3. 'for' → logprob: -3.0786244869232178
    4. ' if' → logprob: -3.5786244869232178
    5. ' for' → logprob: -4.578624725341797
    6. '       ' → logprob: -5.078624725341797
    7. '   ' → logprob: -5.953624725341797
    8. ' and' → logprob: -6.203624725341797
    9. 's' → logprob: -6.453624725341797
    10. 'and' → logprob: -6.828624725341797

Token 209: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9654613137245178
    2. ' for' → logprob: -1.340461254119873
    3. '           ' → logprob: -2.340461254119873
    4. 'if' → logprob: -2.465461254119873
    5. '#' → logprob: -2.590461254119873
    6. 'print' → logprob: -3.340461254119873
    7. ' if' → logprob: -3.715461254119873
    8. ' print' → logprob: -4.465461254119873
    9. 's' → logprob: -5.340461254119873
    10. ' #' → logprob: -5.465461254119873

Token 210: 'l' (ID: 75)
  Prédit: 'lever'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.18544377386569977
    2. 'l' → logprob: -1.8104437589645386
    3. 'leve' → logprob: -5.685443878173828
    4. 'lé' → logprob: -6.685443878173828
    5. 'le' → logprob: -7.435443878173828
    6. 's' → logprob: -8.060443878173828
    7. ' lever' → logprob: -9.560443878173828
    8. 't' → logprob: -10.685443878173828
    9. 'lev' → logprob: -12.310443878173828
    10. 'el' → logprob: -12.435443878173828

Token 211: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.09571246802806854
    2. 'e' → logprob: -3.220712423324585
    3. 'eve' → logprob: -3.220712423324585
    4. 'er' → logprob: -5.845712661743164
    5. 'ev' → logprob: -5.970712661743164
    6. 've' → logprob: -6.345712661743164
    7. 'erve' → logprob: -6.595712661743164
    8. 'ever' → logprob: -6.970712661743164
    9. 'ver' → logprob: -8.345712661743164
    10. 'èves' → logprob: -8.470712661743164

Token 212: ' la' (ID: 557)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0274535920470953
    2. ' '' → logprob: -4.277453422546387
    3. ''' → logprob: -4.527453422546387
    4. 'C' → logprob: -6.402453422546387
    5. '('' → logprob: -8.402453422546387
    6. ''S' → logprob: -9.277453422546387
    7. ' la' → logprob: -9.277453422546387
    8. '"C' → logprob: -9.402453422546387
    9. ''un' → logprob: -10.277453422546387
    10. ' le' → logprob: -10.652453422546387

Token 213: ' première' (ID: 23423)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.43295562267303467
    2. ''C' → logprob: -1.0579556226730347
    3. ''' → logprob: -6.807955741882324
    4. 'unique' → logprob: -6.932955741882324
    5. 'prem' → logprob: -7.432955741882324
    6. 'first' → logprob: -7.557955741882324
    7. ' '' → logprob: -8.432955741882324
    8. '"C' → logprob: -9.182955741882324
    9. 'c' → logprob: -9.307955741882324
    10. 'single' → logprob: -9.432955741882324

Token 214: ' occurrence' (ID: 55807)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10299593955278397
    2. 'occur' → logprob: -2.9779958724975586
    3. 'occ' → logprob: -3.4779958724975586
    4. ' occurrence' → logprob: -5.227995872497559
    5. ' C' → logprob: -5.352995872497559
    6. ' occur' → logprob: -6.102995872497559
    7. ''C' → logprob: -6.102995872497559
    8. 'instance' → logprob: -7.852995872497559
    9. '<|end|>' → logprob: -8.477995872497559
    10. 'c' → logprob: -9.227995872497559

Token 215: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15157189965248108
    2. 'de' → logprob: -2.6515719890594482
    3. '           ' → logprob: -2.9015719890594482
    4. ' of' → logprob: -4.776571750640869
    5. 'C' → logprob: -6.276571750640869
    6. ' du' → logprob: -7.276571750640869
    7. '('' → logprob: -7.526571750640869
    8. 'c' → logprob: -7.526571750640869
    9. '       ' → logprob: -7.776571750640869
    10. 's' → logprob: -8.401572227478027

Token 216: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0055318428203463554
    2. ' '' → logprob: -5.3805317878723145
    3. 'C' → logprob: -7.3805317878723145
    4. ''' → logprob: -8.255532264709473
    5. '('' → logprob: -11.755532264709473
    6. ' C' → logprob: -11.755532264709473
    7. '"C' → logprob: -12.005532264709473
    8. ' ' → logprob: -12.755532264709473
    9. '`' → logprob: -13.380532264709473
    10. '  ' → logprob: -14.630532264709473

Token 217: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005959375761449337
    2. ''C' → logprob: -5.130959510803223
    3. ''' → logprob: -10.505959510803223
    4. ' C' → logprob: -13.755959510803223
    5. ')' → logprob: -14.255959510803223
    6. '')' → logprob: -14.630959510803223
    7. '`' → logprob: -15.255959510803223
    8. ' '' → logprob: -15.755959510803223
    9. '"C' → logprob: -15.755959510803223
    10. '('' → logprob: -15.880959510803223

Token 218: ''' (ID: 6)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023779042530804873
    2. ')' → logprob: -6.752377986907959
    3. '            
' → logprob: -8.1273775100708
    4. '       ' → logprob: -8.2523775100708
    5. '
' → logprob: -8.3773775100708
    6. '#' → logprob: -9.3773775100708
    7. '               ' → logprob: -9.5023775100708
    8. '   ' → logprob: -10.2523775100708
    9. '            ' → logprob: -10.3773775100708
    10. ',' → logprob: -10.6273775100708

Token 219: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5001533031463623
    2. ' for' → logprob: -1.6251533031463623
    3. 'if' → logprob: -1.7501533031463623
    4. '           ' → logprob: -1.8751533031463623
    5. 'for' → logprob: -1.8751533031463623
    6. ' if' → logprob: -2.7501533031463623
    7. '       ' → logprob: -3.3751533031463623
    8. ' and' → logprob: -8.375153541564941
    9. 'elif' → logprob: -8.750153541564941
    10. ':' → logprob: -9.125153541564941

Token 220: ' val' (ID: 1459)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.249569371342659
    2. ' continuer' → logprob: -2.6245694160461426
    3. 'v' → logprob: -2.7495694160461426
    4. 'contin' → logprob: -3.8745694160461426
    5. '#' → logprob: -4.374569416046143
    6. 'val' → logprob: -5.124569416046143
    7. ' tester' → logprob: -5.249569416046143
    8. 'check' → logprob: -5.499569416046143
    9. 'for' → logprob: -5.749569416046143
    10. 's' → logprob: -5.749569416046143

Token 221: 'ider' (ID: 1970)
  Prédit: 'ider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ider' → logprob: -0.0007189844618551433
    2. 'uer' → logprob: -7.75071907043457
    3. 'er' → logprob: -8.87571907043457
    4. 'id' → logprob: -10.12571907043457
    5. 'iter' → logprob: -10.62571907043457
    6. 'ide' → logprob: -11.12571907043457
    7. '#' → logprob: -11.12571907043457
    8. '   ' → logprob: -11.87571907043457
    9. 'iser' → logprob: -12.25071907043457
    10. '

' → logprob: -12.50071907043457

Token 222: ' les' (ID: 1341)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1313592493534088
    2. 'if' → logprob: -3.131359338760376
    3. ' if' → logprob: -3.381359338760376
    4. ' for' → logprob: -3.631359338760376
    5. '       ' → logprob: -4.631359100341797
    6. 'for' → logprob: -5.131359100341797
    7. '   ' → logprob: -6.381359100341797
    8. ' all' → logprob: -8.131359100341797
    9. '#' → logprob: -8.506359100341797
    10. '               ' → logprob: -9.131359100341797

Token 223: ' minus' (ID: 40335)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.6681349873542786
    2. 'car' → logprob: -1.0431349277496338
    3. ' autres' → logprob: -2.293134927749634
    4. 'c' → logprob: -5.043135166168213
    5. 's' → logprob: -5.293135166168213
    6. ' caractères' → logprob: -5.293135166168213
    7. 'other' → logprob: -5.668135166168213
    8. 'élé' → logprob: -5.918135166168213
    9. 'rest' → logprob: -6.293135166168213
    10. ' c' → logprob: -6.543135166168213

Token 224: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.000763287884183228
    2. 'c' → logprob: -7.250763416290283
    3. 'culas' → logprob: -10.500762939453125
    4. 'cule' → logprob: -11.125762939453125
    5. 'cula' → logprob: -13.000762939453125
    6. 'cul' → logprob: -13.000762939453125
    7. 'ules' → logprob: -13.375762939453125
    8. '()' → logprob: -13.625762939453125
    9. 'cu' → logprob: -14.250762939453125
    10. ')' → logprob: -14.500762939453125

Token 225: ' ensuite' (ID: 39713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7105465531349182
    2. ' if' → logprob: -1.2105464935302734
    3. ' for' → logprob: -2.0855464935302734
    4. 'if' → logprob: -3.4605464935302734
    5. ' and' → logprob: -3.7105464935302734
    6. '           ' → logprob: -3.9605464935302734
    7. '       ' → logprob: -5.085546493530273
    8. 'for' → logprob: -5.710546493530273
    9. '    ' → logprob: -7.335546493530273
    10. '  ' → logprob: -8.085546493530273

Token 226: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9912954568862915
    2. ' if' → logprob: -1.2412954568862915
    3. '   ' → logprob: -1.7412954568862915
    4. '           ' → logprob: -2.241295337677002
    5. 'if' → logprob: -3.741295337677002
    6. '       ' → logprob: -4.116295337677002
    7. 'for' → logprob: -4.241295337677002
    8. ' and' → logprob: -6.491295337677002
    9. '    ' → logprob: -6.741295337677002
    10. ':' → logprob: -8.86629581451416

Token 227: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0029726028442383
    2. ' if' → logprob: -1.2529726028442383
    3. '   ' → logprob: -1.6279726028442383
    4. '           ' → logprob: -2.3779726028442383
    5. ' for' → logprob: -3.5029726028442383
    6. '       ' → logprob: -4.002972602844238
    7. 'for' → logprob: -4.627972602844238
    8. ' ' → logprob: -9.752972602844238
    9. ' and' → logprob: -9.752972602844238
    10. '  ' → logprob: -10.002972602844238

Token 228: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03065355122089386
    2. 'for' → logprob: -3.655653476715088
    3. ' if' → logprob: -5.655653476715088
    4. '   ' → logprob: -8.030653953552246
    5. ' for' → logprob: -8.030653953552246
    6. '           ' → logprob: -8.655653953552246
    7. 'print' → logprob: -11.155653953552246
    8. '       ' → logprob: -12.655653953552246
    9. '#' (adapté à ' #') → logprob: -13.155653953552246
    10. '               ' → logprob: -14.280653953552246

Token 229: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20919424295425415
    2. 'for' → logprob: -1.7091941833496094
    3. ' if' → logprob: -5.459194183349609
    4. ' for' → logprob: -5.834194183349609
    5. '   ' → logprob: -7.834194183349609
    6. 'print' → logprob: -9.58419418334961
    7. 'all' → logprob: -9.83419418334961
    8. '           ' → logprob: -11.08419418334961
    9. '       ' → logprob: -11.20919418334961
    10. '#' → logprob: -11.95919418334961

Token 230: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0001657565007917583
    2. 'if' → logprob: -8.750165939331055
    3. 'ife' → logprob: -12.000165939331055
    4. 'ifiez' → logprob: -14.750165939331055
    5. 'ifi' → logprob: -15.500165939331055
    6. 'ify' → logprob: -15.500165939331055
    7. ' if' → logprob: -16.625165939331055
    8. 'ifier' → logprob: -16.625165939331055
    9. '#' → logprob: -16.875165939331055
    10. 'f' → logprob: -17.375165939331055

Token 231: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7813461422920227
    2. ' if' → logprob: -1.156346082687378
    3. ' all' → logprob: -2.531346082687378
    4. 'all' → logprob: -2.656346082687378
    5. ' que' → logprob: -3.031346082687378
    6. '   ' → logprob: -4.781346321105957
    7. 'that' → logprob: -4.906346321105957
    8. ' that' → logprob: -5.281346321105957
    9. '           ' → logprob: -5.406346321105957
    10. '       ' → logprob: -7.031346321105957

Token 232: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5234460830688477
    2. ' all' → logprob: -0.8984460830688477
    3. 's' → logprob: -9.023446083068848
    4. ' ' → logprob: -9.898446083068848
    5. ' s' → logprob: -10.273446083068848
    6. '   ' → logprob: -10.898446083068848
    7. 'not' → logprob: -11.023446083068848
    8. 'a' → logprob: -11.273446083068848
    9. ' not' → logprob: -11.648446083068848
    10. 'al' → logprob: -11.773446083068848

Token 233: ' les' (ID: 1341)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.30145010352134705
    2. 'car' → logprob: -2.80145001411438
    3. '(car' → logprob: -2.92645001411438
    4. '(' → logprob: -3.30145001411438
    5. '(char' → logprob: -3.42645001411438
    6. 'c' → logprob: -3.55145001411438
    7. 'char' → logprob: -3.92645001411438
    8. '(ch' → logprob: -4.426450252532959
    9. '(i' → logprob: -4.676450252532959
    10. 'ch' → logprob: -6.676450252532959

Token 234: ' autres' (ID: 18701)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6758469939231873
    2. 'car' → logprob: -1.050847053527832
    3. 'char' → logprob: -2.800847053527832
    4. 'ch' → logprob: -2.800847053527832
    5. 'all' → logprob: -4.925847053527832
    6. 'x' → logprob: -5.175847053527832
    7. ' c' → logprob: -6.050847053527832
    8. 'elem' → logprob: -6.925847053527832
    9. ' caract' → logprob: -7.175847053527832
    10. ' all' → logprob: -7.800847053527832

Token 235: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0697612389922142
    2. ' caractères' → logprob: -3.319761276245117
    3. 'c' → logprob: -4.694761276245117
    4. 'characters' → logprob: -4.819761276245117
    5. ' caracteres' → logprob: -4.944761276245117
    6. 'chars' → logprob: -5.944761276245117
    7. ' caract' → logprob: -6.444761276245117
    8. 'char' → logprob: -6.694761276245117
    9. 's' → logprob: -7.444761276245117
    10. ' characters' → logprob: -7.694761276245117

Token 236: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.9907784461975098
    2. 's' → logprob: -1.7407784461975098
    3. ' are' → logprob: -1.7407784461975098
    4. 'are' → logprob: -2.1157784461975098
    5. 'for' → logprob: -2.8657784461975098
    6. ' restent' → logprob: -3.9907784461975098
    7. ' for' → logprob: -3.9907784461975098
    8. '           ' → logprob: -4.11577844619751
    9. '<|end|>' → logprob: -4.49077844619751
    10. '   ' → logprob: -4.61577844619751

Token 237: ' en' (ID: 469)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7419443130493164
    2. 's' → logprob: -1.4919443130493164
    3. ' c' → logprob: -1.4919443130493164
    4. ' s' → logprob: -3.8669443130493164
    5. 'x' → logprob: -4.741944313049316
    6. ' en' → logprob: -4.991944313049316
    7. 'min' → logprob: -5.116944313049316
    8. 'm' → logprob: -5.116944313049316
    9. 'minus' → logprob: -5.366944313049316
    10. 'e' → logprob: -5.616944313049316

Token 238: ' minus' (ID: 40335)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6085346341133118
    2. '[s' → logprob: -1.108534574508667
    3. 'min' → logprob: -3.483534574508667
    4. '[min' → logprob: -3.983534574508667
    5. 'minus' → logprob: -3.983534574508667
    6. ' s' → logprob: -4.233534812927246
    7. '[' → logprob: -4.733534812927246
    8. 'list' → logprob: -5.233534812927246
    9. '(s' → logprob: -5.983534812927246
    10. '[a' → logprob: -5.983534812927246

Token 239: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.00409419322386384
    2. 'cule' → logprob: -6.004094123840332
    3. 'c' → logprob: -6.879094123840332
    4. 'usc' → logprob: -8.004094123840332
    5. 'us' → logprob: -8.629094123840332
    6. '```' → logprob: -10.629094123840332
    7. 'case' → logprob: -10.879094123840332
    8. 's' → logprob: -11.754094123840332
    9. 'cases' → logprob: -12.129094123840332
    10. 'cul' → logprob: -13.129094123840332

Token 240: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49737218022346497
    2. '           ' → logprob: -1.1223721504211426
    3. ' if' → logprob: -3.6223721504211426
    4. '   ' → logprob: -4.122372150421143
    5. 'for' → logprob: -4.747372150421143
    6. ' and' → logprob: -5.122372150421143
    7. '       ' → logprob: -5.372372150421143
    8. 'if' → logprob: -6.247372150421143
    9. '               ' → logprob: -6.747372150421143
    10. ':' → logprob: -8.3723726272583

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3346940875053406
    2. ' if' → logprob: -2.2096941471099854
    3. ' for' → logprob: -2.2096941471099854
    4. '       ' → logprob: -3.0846941471099854
    5. '   ' → logprob: -5.209693908691406
    6. ' and' → logprob: -5.209693908691406
    7. 'if' → logprob: -5.459693908691406
    8. 'for' → logprob: -5.584693908691406
    9. ' or' → logprob: -9.959693908691406
    10. 'and' → logprob: -10.209693908691406

Token 242: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33125343918800354
    2. ' if' → logprob: -1.3312534093856812
    3. 'for' (adapté à ' for') → logprob: -5.081253528594971
    4. '   ' → logprob: -5.081253528594971
    5. ' for' → logprob: -5.456253528594971
    6. ' all' → logprob: -7.581253528594971
    7. 'all' → logprob: -7.956253528594971
    8. '           ' → logprob: -8.456253051757812
    9. '       ' → logprob: -9.956253051757812
    10. ' ' → logprob: -12.081253051757812

Token 243: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10897105932235718
    2. 'ch' → logprob: -2.608971118927002
    3. 'char' → logprob: -4.108971118927002
    4. ' c' → logprob: -4.608971118927002
    5. 'i' → logprob: -6.358971118927002
    6. ' ch' → logprob: -7.233971118927002
    7. ' char' → logprob: -7.483971118927002
    8. ' i' → logprob: -9.233970642089844
    9. 'x' → logprob: -9.358970642089844
    10. 'e' → logprob: -11.483970642089844

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046040408313274384
    2. 'in' → logprob: -3.1710402965545654
    3. 'n' → logprob: -6.2960405349731445
    4. ' ' → logprob: -6.9210405349731445
    5. 's' → logprob: -9.796040534973145
    6. ',' → logprob: -9.921040534973145
    7. '  ' → logprob: -10.171040534973145
    8. '   ' → logprob: -10.546040534973145
    9. ' n' → logprob: -11.671040534973145
    10. ' i' → logprob: -11.921040534973145

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5886667370796204
    2. 's' → logprob: -0.8386667370796204
    3. ' range' → logprob: -4.463666915893555
    4. ' s' → logprob: -6.838666915893555
    5. '(s' → logprob: -11.463666915893555
    6. '   ' → logprob: -11.713666915893555
    7. ' ' → logprob: -12.213666915893555
    8. '[s' → logprob: -12.276166915893555
    9. '(range' → logprob: -12.463666915893555
    10. 'r' → logprob: -12.463666915893555

Token 246: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0003510741807986051
    2. 'len' → logprob: -8.000350952148438
    3. ' len' → logprob: -11.250350952148438
    4. '(' → logprob: -13.375350952148438
    5. '   ' → logprob: -14.125350952148438
    6. '	len' → logprob: -15.375350952148438
    7. ',len' → logprob: -15.750350952148438
    8. '<len' → logprob: -17.125350952148438
    9. ' (' → logprob: -18.125350952148438
    10. '0' → logprob: -18.250350952148438

Token 247: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.027225754223764e-05
    2. 's' → logprob: -10.125060081481934
    3. '(' → logprob: -10.875060081481934
    4. ' (' → logprob: -13.750060081481934
    5. '(
' → logprob: -16.75006103515625
    6. '   ' → logprob: -17.50006103515625
    7. '(S' → logprob: -17.75006103515625
    8. ' s' → logprob: -17.87506103515625
    9. ')' → logprob: -18.12506103515625
    10. '(ss' → logprob: -18.75006103515625

Token 248: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.1844223439693451
    2. ')):' → logprob: -1.8094223737716675
    3. '):
' → logprob: -6.059422492980957
    4. '):' → logprob: -6.934422492980957
    5. '))' → logprob: -7.184422492980957
    6. ')' → logprob: -8.309422492980957
    7. ' ' → logprob: -8.434422492980957
    8. ')):
' → logprob: -9.309422492980957
    9. '   ' → logprob: -10.809422492980957
    10. '       ' → logprob: -11.309422492980957

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019302254542708397
    2. ' if' → logprob: -4.0193023681640625
    3. 'if' → logprob: -7.6443023681640625
    4. '       ' → logprob: -8.144302368164062
    5. '<|end|>' → logprob: -8.394302368164062
    6. ',' → logprob: -10.394302368164062
    7. '   ' → logprob: -10.769302368164062
    8. '           ' → logprob: -10.769302368164062
    9. ' ' → logprob: -11.019302368164062
    10. '                
' → logprob: -11.519302368164062

Token 250: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18469451367855072
    2. ' if' → logprob: -1.934694528579712
    3. '               ' → logprob: -3.809694528579712
    4. '           ' → logprob: -6.934694290161133
    5. '       ' → logprob: -7.434694290161133
    6. '   ' → logprob: -7.934694290161133
    7. '	if' → logprob: -9.684694290161133
    8. ' ' → logprob: -11.434694290161133
    9. '	       ' → logprob: -11.684694290161133
    10. '	           ' → logprob: -12.309694290161133

Token 251: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6385511159896851
    2. 'not' → logprob: -0.7635511159896851
    3. 's' → logprob: -5.388551235198975
    4. ' s' → logprob: -6.763551235198975
    5. ' ' → logprob: -9.138550758361816
    6. ''s' → logprob: -9.763550758361816
    7. '   ' → logprob: -11.138550758361816
    8. ''' → logprob: -12.013550758361816
    9. '(not' → logprob: -12.013550758361816
    10. '	not' → logprob: -12.138550758361816

Token 252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. '[s' → logprob: -16.875
    4. '[I' → logprob: -17.25
    5. '[j' → logprob: -17.625
    6. '[
' → logprob: -18.5
    7. 'i' → logprob: -18.5
    8. '```' → logprob: -19.375
    9. 'not' → logprob: -19.625
    10. '[a' → logprob: -19.625

Token 253: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2768440246582031
    2. '.is' → logprob: -1.6518440246582031
    3. '.' → logprob: -3.776844024658203
    4. ']' → logprob: -4.776844024658203
    5. ').' → logprob: -5.276844024658203
    6. 'is' → logprob: -5.776844024658203
    7. '<' → logprob: -5.901844024658203
    8. ' .' → logprob: -6.026844024658203
    9. ' <' → logprob: -6.776844024658203
    10. '>' → logprob: -7.151844024658203

Token 254: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12727327644824982
    2. 'isl' → logprob: -2.1272733211517334
    3. 'upper' → logprob: -8.627273559570312
    4. 'ist' → logprob: -9.002273559570312
    5. 'lower' → logprob: -10.627273559570312
    6. 'isdigit' → logprob: -11.377273559570312
    7. 'isas' → logprob: -12.502273559570312
    8. 'isal' → logprob: -12.877273559570312
    9. 'iss' → logprob: -14.752273559570312
    10. '.is' → logprob: -16.002273559570312

Token 255: 'upper' (ID: 26119)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0620490238070488
    2. 'upper' → logprob: -2.81204891204834
    3. 'alpha' → logprob: -9.43704891204834
    4. ' lower' → logprob: -14.68704891204834
    5. '_lower' → logprob: -15.18704891204834
    6. '.lower' → logprob: -15.18704891204834
    7. 'uppercase' → logprob: -15.43704891204834
    8. 'low' → logprob: -16.437049865722656
    9. '_upper' → logprob: -16.562049865722656
    10. '.upper' → logprob: -16.937049865722656

Token 256: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07902804017066956
    2. '()' → logprob: -2.5790281295776367
    3. '():
' → logprob: -9.579028129577637
    4. '()==' → logprob: -9.829028129577637
    5. '(' → logprob: -11.954028129577637
    6. '()>' → logprob: -12.829028129577637
    7. '():

' → logprob: -13.579028129577637
    8. '()!=' → logprob: -14.204028129577637
    9. ' ():' → logprob: -14.454028129577637
    10. '())' → logprob: -14.579028129577637

Token 257: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001098418957553804
    2. '               ' → logprob: -7.2510986328125
    3. '                       ' → logprob: -9.1260986328125
    4. '                  ' → logprob: -9.5010986328125
    5. ' return' → logprob: -10.0010986328125
    6. '           ' → logprob: -10.2510986328125
    7. '                    
' → logprob: -10.3760986328125
    8. ':
' → logprob: -11.1260986328125
    9. '                    ' → logprob: -11.1260986328125
    10. '                ' → logprob: -11.5010986328125

Token 258: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.40342050790786743
    2. ' print' → logprob: -1.4034204483032227
    3. '                   ' → logprob: -2.6534204483032227
    4. '               ' → logprob: -4.778420448303223
    5. '       ' → logprob: -5.528420448303223
    6. '   ' → logprob: -6.028420448303223
    7. '                       ' → logprob: -7.653420448303223
    8. '           ' → logprob: -8.153420448303223
    9. ' ' → logprob: -8.778420448303223
    10. '	print' → logprob: -10.903420448303223

Token 259: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3171060085296631
    2. '('' → logprob: -1.317106008529663
    3. '(' → logprob: -5.567106246948242
    4. '(
' → logprob: -11.317106246948242
    5. ' ("' → logprob: -13.067106246948242
    6. ''' → logprob: -15.317106246948242
    7. '"' → logprob: -15.442106246948242
    8. ' ('' → logprob: -15.567106246948242
    9. '   ' → logprob: -16.317106246948242
    10. ' (' → logprob: -16.317106246948242

Token 260: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -2.3080716346157715e-05
    2. 'W' → logprob: -11.000022888183594
    3. ' WA' → logprob: -12.125022888183594
    4. ''' → logprob: -14.875022888183594
    5. 'Wa' → logprob: -15.500022888183594
    6. 'WR' → logprob: -15.750022888183594
    7. 'WI' → logprob: -17.125022888183594
    8. '   ' → logprob: -17.625022888183594
    9. '```' → logprob: -17.750022888183594
    10. 'WO' → logprob: -18.000022888183594

Token 261: '')' (ID: 1542)
  Prédit: '')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.030953451991081238
    2. '')' → logprob: -3.7809534072875977
    3. '                   ' → logprob: -4.905953407287598
    4. ')
' → logprob: -9.030953407287598
    5. '')
' → logprob: -9.280953407287598
    6. '               ' → logprob: -10.405953407287598
    7. ')' → logprob: -10.905953407287598
    8. '           ' → logprob: -12.280953407287598
    9. '                       ' → logprob: -12.530953407287598
    10. '")
' → logprob: -13.280953407287598

Token 262: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017123986617662013
    2. '
' → logprob: -9.375171661376953
    3. '                    
' → logprob: -9.875171661376953
    4. '                       ' → logprob: -11.000171661376953
    5. '               ' → logprob: -11.875171661376953
    6. '           ' → logprob: -12.750171661376953
    7. 'return' → logprob: -13.500171661376953
    8. '                  ' → logprob: -13.750171661376953
    9. '       ' → logprob: -13.875171661376953
    10. '                    ' → logprob: -14.125171661376953

Token 263: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07133570313453674
    2. '
' → logprob: -2.696335792541504
    3. 'return' → logprob: -6.946335792541504
    4. '                    
' → logprob: -8.196335792541504
    5. '                       ' → logprob: -10.321335792541504
    6. ' return' → logprob: -10.446335792541504
    7. '
' → logprob: -10.696335792541504
    8. '               ' → logprob: -10.821335792541504
    9. '    
' → logprob: -11.071335792541504
    10. '				' → logprob: -11.946335792541504

Token 264: ' Si' (ID: 7832)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17153985798358917
    2. 'return' → logprob: -1.9215399026870728
    3. ' return' → logprob: -4.546539783477783
    4. '
' → logprob: -7.546539783477783
    5. '                       ' → logprob: -9.546540260314941
    6. '               ' → logprob: -10.671540260314941
    7. '                    
' → logprob: -11.921540260314941
    8. '           ' → logprob: -12.171540260314941
    9. '	return' → logprob: -12.671540260314941
    10. '   ' → logprob: -12.796540260314941

Token 265: ' une' (ID: 2463)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3029133379459381
    2. ' return' → logprob: -2.3029134273529053
    3. 'return' → logprob: -2.5529134273529053
    4. '                    ' → logprob: -3.5529134273529053
    5. ' not' → logprob: -4.302913188934326
    6. 'not' → logprob: -4.677913188934326
    7. '               ' → logprob: -5.302913188934326
    8. '    ' → logprob: -5.302913188934326
    9. ' ' → logprob: -5.427913188934326
    10. '                       ' → logprob: -5.677913188934326

Token 266: ' maj' (ID: 15575)
  Prédit: 'uppercase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uppercase' → logprob: -0.9065676331520081
    2. 'maj' → logprob: -2.0315675735473633
    3. ' uppercase' → logprob: -2.0315675735473633
    4. ' maj' → logprob: -2.4065675735473633
    5. '                   ' → logprob: -2.7815675735473633
    6. '   ' → logprob: -3.1565675735473633
    7. '       ' → logprob: -4.156567573547363
    8. ' return' → logprob: -4.281567573547363
    9. 'Maj' → logprob: -4.531567573547363
    10. 'return' → logprob: -4.531567573547363

Token 267: 'usc' (ID: 30081)
  Prédit: 'usc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usc' → logprob: -0.004999278578907251
    2. 'us' → logprob: -5.879999160766602
    3. '               ' → logprob: -7.254999160766602
    4. '                   ' → logprob: -7.754999160766602
    5. '   ' → logprob: -7.754999160766602
    6. '       ' → logprob: -9.004999160766602
    7. '```' → logprob: -9.004999160766602
    8. '                       ' → logprob: -10.004999160766602
    9. '                  ' → logprob: -10.254999160766602
    10. '           ' → logprob: -10.254999160766602

Token 268: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.6938498020172119
    2. 'ule' → logprob: -0.6938498020172119
    3. '   ' → logprob: -8.443849563598633
    4. 'le' → logprob: -9.193849563598633
    5. 'ine' → logprob: -9.693849563598633
    6. 'al' → logprob: -9.818849563598633
    7. 'ase' → logprob: -10.193849563598633
    8. 'ile' → logprob: -10.693849563598633
    9. ')' → logprob: -10.693849563598633
    10. '```' → logprob: -10.693849563598633

Token 269: ' est' (ID: 893)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002092803595587611
    2. '                       ' → logprob: -6.5020928382873535
    3. '               ' → logprob: -9.002092361450195
    4. '<|end|>' → logprob: -9.127092361450195
    5. '                    
' → logprob: -9.627092361450195
    6. '
' → logprob: -9.752092361450195
    7. ')' → logprob: -10.127092361450195
    8. ' return' → logprob: -10.252092361450195
    9. '           ' → logprob: -10.502092361450195
    10. '                           ' → logprob: -10.877092361450195

Token 270: ' trouv' (ID: 40254)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9309818744659424
    2. ' détect' → logprob: -1.1809818744659424
    3. 'dé' → logprob: -2.4309818744659424
    4. ' trouv' → logprob: -2.5559818744659424
    5. 'detect' → logprob: -2.6809818744659424
    6. 'prés' → logprob: -3.1809818744659424
    7. 'det' → logprob: -4.430981636047363
    8. 'd' → logprob: -5.180981636047363
    9. 'print' → logprob: -6.805981636047363
    10. ' rencontr' → logprob: -7.680981636047363

Token 271: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1807873547077179
    2. 'é' → logprob: -1.9307873249053955
    3. 'e' → logprob: -4.680787563323975
    4. 'er' → logprob: -5.305787563323975
    5. '                   ' → logprob: -6.680787563323975
    6. '   ' → logprob: -6.805787563323975
    7. '               ' → logprob: -7.305787563323975
    8. '           ' → logprob: -7.430787563323975
    9. '       ' → logprob: -7.680787563323975
    10. 'print' → logprob: -7.930787563323975

Token 272: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00020544764993246645
    2. '                       ' → logprob: -9.875205039978027
    3. '                    
' → logprob: -10.125205039978027
    4. '               ' → logprob: -10.500205039978027
    5. '
' → logprob: -10.625205039978027
    6. '           ' → logprob: -11.125205039978027
    7. 'return' → logprob: -11.750205039978027
    8. '       ' → logprob: -12.125205039978027
    9. '                  ' → logprob: -12.125205039978027
    10. '<|end|>' → logprob: -12.125205039978027

Token 273: ' la' (ID: 557)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023103614803403616
    2. 'return' → logprob: -6.627310276031494
    3. ' return' → logprob: -7.002310276031494
    4. '                       ' → logprob: -10.002310752868652
    5. '
' → logprob: -11.377310752868652
    6. '                    
' → logprob: -11.877310752868652
    7. '               ' → logprob: -12.877310752868652
    8. '           ' → logprob: -13.002310752868652
    9. '       ' → logprob: -13.377310752868652
    10. '   ' → logprob: -13.877310752868652

Token 274: ' chaîne' (ID: 89288)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18797922134399414
    2. ' return' → logprob: -1.8129792213439941
    3. '                   ' → logprob: -5.562979221343994
    4. '       ' → logprob: -5.937979221343994
    5. '               ' → logprob: -7.437979221343994
    6. '           ' → logprob: -7.812979221343994
    7. '   ' → logprob: -7.937979221343994
    8. '
' → logprob: -8.937978744506836
    9. '	return' → logprob: -8.937978744506836
    10. '                       ' → logprob: -9.937978744506836

Token 275: ' est' (ID: 893)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02046843059360981
    2. ' return' → logprob: -4.020468235015869
    3. 'return' → logprob: -6.895468235015869
    4. '       ' → logprob: -7.770468235015869
    5. '                       ' → logprob: -8.395468711853027
    6. '               ' → logprob: -8.645468711853027
    7. '                    
' → logprob: -8.645468711853027
    8. '           ' → logprob: -9.020468711853027
    9. '
' → logprob: -9.895468711853027
    10. 'n' → logprob: -10.020468711853027

Token 276: ' incorrect' (ID: 25570)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033888602629303932
    2. 'WA' → logprob: -6.75338888168335
    3. ' WA' → logprob: -7.75338888168335
    4. 'return' → logprob: -8.003388404846191
    5. ' return' → logprob: -8.378388404846191
    6. '                       ' → logprob: -8.628388404846191
    7. 'wa' → logprob: -8.628388404846191
    8. '               ' → logprob: -8.753388404846191
    9. '           ' → logprob: -9.253388404846191
    10. 'n' → logprob: -9.378388404846191

Token 277: 'e' (ID: 68)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00027218335890211165
    2. '
' → logprob: -9.375271797180176
    3. '                       ' → logprob: -9.500271797180176
    4. 'return' → logprob: -10.625271797180176
    5. '               ' → logprob: -10.875271797180176
    6. '           ' → logprob: -11.000271797180176
    7. '                    
' → logprob: -11.375271797180176
    8. '				' → logprob: -11.500271797180176
    9. ' return' → logprob: -11.875271797180176
    10. '		           ' → logprob: -12.000271797180176

Token 278: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.037835580878891e-05
    2. '           ' → logprob: -11.62505054473877
    3. '                    
' → logprob: -11.62505054473877
    4. '                       ' → logprob: -11.75005054473877
    5. '               ' → logprob: -11.87505054473877
    6. '                  ' → logprob: -12.75005054473877
    7. '
' → logprob: -12.75005054473877
    8. '<|end|>' → logprob: -12.87505054473877
    9. '		           ' → logprob: -13.00005054473877
    10. '       ' → logprob: -13.25005054473877

Token 279: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014084660506341606
    2. '                    
' → logprob: -9.500141143798828
    3. '
' → logprob: -10.375141143798828
    4. '                       ' → logprob: -11.250141143798828
    5. 'return' → logprob: -11.625141143798828
    6. '				' → logprob: -12.750141143798828
    7. '               ' → logprob: -12.750141143798828
    8. '\n' → logprob: -13.875141143798828
    9. ' return' → logprob: -14.000141143798828
    10. '                    ' → logprob: -14.125141143798828

Token 280: ' sys' (ID: 12228)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16596075892448425
    2. 'return' → logprob: -1.9159607887268066
    3. ' return' → logprob: -5.165960788726807
    4. '           ' → logprob: -13.165960311889648
    5. '                       ' → logprob: -13.165960311889648
    6. '               ' → logprob: -13.165960311889648
    7. 'break' → logprob: -13.290960311889648
    8. '	return' → logprob: -13.540960311889648
    9. '   ' → logprob: -13.790960311889648
    10. '
' → logprob: -13.915960311889648

Token 281: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0004658233083318919
    2. '.' → logprob: -8.125465393066406
    3. '.stdout' → logprob: -9.000465393066406
    4. 'exit' → logprob: -11.000465393066406
    5. ' exit' → logprob: -11.750465393066406
    6. '.return' → logprob: -12.125465393066406
    7. '.stderr' → logprob: -12.125465393066406
    8. '   ' → logprob: -12.500465393066406
    9. '	exit' → logprob: -12.875465393066406
    10. ' .' → logprob: -13.000465393066406

Token 282: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03805112838745117
    2. '(' → logprob: -3.288051128387451
    3. ' ()' → logprob: -12.78805160522461
    4. '()
' → logprob: -13.16305160522461
    5. '()(' → logprob: -13.66305160522461
    6. '().' → logprob: -14.66305160522461
    7. '()[' → logprob: -14.78805160522461
    8. '())' → logprob: -14.91305160522461
    9. '()]' → logprob: -14.91305160522461
    10. '()\' → logprob: -14.91305160522461

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38883623480796814
    2. '       ' → logprob: -1.1388362646102905
    3. '   ' → logprob: -6.26383638381958
    4. 'print' → logprob: -10.138835906982422
    5. '
' → logprob: -11.763835906982422
    6. '            
' → logprob: -12.888835906982422
    7. '        
' → logprob: -13.263835906982422
    8. '	   ' → logprob: -13.388835906982422
    9. '               ' → logprob: -13.638835906982422
    10. '    
' → logprob: -13.638835906982422

Token 284: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10116103291511536
    2. '       ' → logprob: -2.351161003112793
    3. '   ' → logprob: -7.226161003112793
    4. ' print' → logprob: -8.601161003112793
    5. '           ' → logprob: -10.101161003112793
    6. '
' → logprob: -14.351161003112793
    7. 'else' → logprob: -14.601161003112793
    8. '	print' → logprob: -15.476161003112793
    9. '        
' → logprob: -15.976161003112793
    10. '     ' → logprob: -16.22616195678711

Token 285: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005773392622359097
    2. '(' → logprob: -7.500577449798584
    3. '("' → logprob: -10.625576972961426
    4. ' ('' → logprob: -17.000577926635742
    5. ''' → logprob: -18.000577926635742
    6. '(('' → logprob: -18.000577926635742
    7. '(\'' → logprob: -18.500577926635742
    8. '(
' → logprob: -18.625577926635742
    9. '('"' → logprob: -18.625577926635742
    10. '(A' → logprob: -19.000577926635742

Token 286: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -1.3856492842023727e-06
    2. ''' → logprob: -13.625000953674316
    3. ' AC' → logprob: -16.125001907348633
    4. '_AC' → logprob: -17.375001907348633
    5. 'OK' → logprob: -18.000001907348633
    6. 'ACC' → logprob: -18.000001907348633
    7. ''A' → logprob: -18.250001907348633
    8. 'A' → logprob: -18.625001907348633
    9. 'ACA' → logprob: -18.750001907348633
    10. 'Ac' → logprob: -19.500001907348633

Token 287: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -2.0339031834737398e-05
    2. '')
' → logprob: -11.000020027160645
    3. ')' → logprob: -13.250020027160645
    4. '")' → logprob: -13.625020027160645
    5. '')
' → logprob: -15.000020027160645
    6. ''' → logprob: -15.875020027160645
    7. '')

' → logprob: -16.87502098083496
    8. ' ')' → logprob: -17.87502098083496
    9. '’)' → logprob: -18.37502098083496
    10. '');' → logprob: -18.50002098083496

Token 288: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18571627140045166
    2. 'else' → logprob: -1.8107162714004517
    3. 'check' → logprob: -5.310716152191162
    4. '       ' → logprob: -7.810716152191162
    5. '<|end|>' → logprob: -8.31071662902832
    6. ' else' → logprob: -8.56071662902832
    7. ')' → logprob: -10.18571662902832
    8. '	else' → logprob: -10.18571662902832
    9. 'elif' → logprob: -10.56071662902832
    10. ' check' → logprob: -11.81071662902832

Token 289: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.18226702511310577
    2. '   ' → logprob: -1.8072670698165894
    3. ' else' → logprob: -6.557267189025879
    4. '       ' → logprob: -6.932267189025879
    5. '<|end|>' → logprob: -10.307267189025879
    6. 'elif' → logprob: -10.432267189025879
    7. '	else' → logprob: -10.682267189025879
    8. '
' → logprob: -11.932267189025879
    9. '}else' → logprob: -12.307267189025879
    10. '```' → logprob: -12.432267189025879

Token 290: ' La' (ID: 3038)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3723876476287842
    2. 'return' → logprob: -1.9973876476287842
    3. '<|end|>' → logprob: -2.372387647628784
    4. 'AC' → logprob: -3.747387647628784
    5. ' else' → logprob: -3.747387647628784
    6. ' return' → logprob: -4.247387886047363
    7. '```' → logprob: -5.372387886047363
    8. 'print' → logprob: -5.372387886047363
    9. 'elif' → logprob: -5.747387886047363
    10. '       ' → logprob: -6.747387886047363

Token 291: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5331786870956421
    2. ' chaîne' → logprob: -1.658178687095642
    3. '   ' → logprob: -1.908178687095642
    4. ' chaine' → logprob: -4.033178806304932
    5. 'fin' → logprob: -4.783178806304932
    6. ' chain' → logprob: -5.033178806304932
    7. ' code' → logprob: -5.158178806304932
    8. 'chain' → logprob: -5.408178806304932
    9. '    ' → logprob: -5.533178806304932
    10. 'else' → logprob: -5.658178806304932

Token 292: ' respecte' (ID: 140483)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.4845832586288452
    2. ' est' → logprob: -1.8595832586288452
    3. ' respecte' → logprob: -1.9845832586288452
    4. '<|end|>' → logprob: -2.3595833778381348
    5. 'respect' → logprob: -2.7345833778381348
    6. ' respects' → logprob: -2.8595833778381348
    7. 'correct' → logprob: -3.3595833778381348
    8. ' is' → logprob: -3.4845833778381348
    9. '   ' → logprob: -3.8595833778381348
    10. '```' → logprob: -3.8595833778381348

Token 293: ' toutes' (ID: 17502)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.04874439910054207
    2. ' les' → logprob: -3.1737444400787354
    3. 'le' → logprob: -6.048744201660156
    4. 'the' → logprob: -6.548744201660156
    5. '<|end|>' → logprob: -7.548744201660156
    6. '()' → logprob: -7.798744201660156
    7. 'la' → logprob: -8.548744201660156
    8. 'l' → logprob: -8.798744201660156
    9. '```' → logprob: -9.298744201660156
    10. 'correct' → logprob: -9.673744201660156

Token 294: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.30435678362846375
    2. ' les' → logprob: -1.4293568134307861
    3. '<|end|>' → logprob: -3.804356813430786
    4. ' ' → logprob: -8.179356575012207
    5. '  ' → logprob: -8.929356575012207
    6. 's' → logprob: -10.304356575012207
    7. 'rules' → logprob: -10.304356575012207
    8. 'the' → logprob: -10.304356575012207
    9. '   ' → logprob: -10.554356575012207
    10. 'l' → logprob: -11.179356575012207

Token 295: ' règles' (ID: 67042)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00385672808624804
    2. ' règles' → logprob: -5.753856658935547
    3. 'conditions' → logprob: -7.628856658935547
    4. 'reg' → logprob: -9.003856658935547
    5. ' conditions' → logprob: -10.253856658935547
    6. 'rules' → logprob: -10.878856658935547
    7. ' r' → logprob: -12.253856658935547
    8. '   ' → logprob: -12.878856658935547
    9. ' ' → logprob: -13.253856658935547
    10. 'cons' → logprob: -13.503856658935547

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34928998351097107
    2. 'else' → logprob: -1.2242900133132935
    3. ' else' → logprob: -7.599289894104004
    4. '<|end|>' → logprob: -9.224289894104004
    5. '	else' → logprob: -9.849289894104004
    6. '
' → logprob: -9.974289894104004
    7. '       ' → logprob: -10.349289894104004
    8. 'elif' → logprob: -10.599289894104004
    9. '    
' → logprob: -10.724289894104004
    10. 'WA' → logprob: -11.349289894104004

Token 297: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006887884344905615
    2. 'check' → logprob: -5.506887912750244
    3. ' else' → logprob: -6.756887912750244
    4. '<|end|>' → logprob: -7.506887912750244
    5. '```' → logprob: -8.006887435913086
    6. 'elif' → logprob: -8.381887435913086
    7. '   ' → logprob: -8.506887435913086
    8. ')' → logprob: -8.881887435913086
    9. 'print' → logprob: -10.131887435913086
    10. '
' → logprob: -10.256887435913086

Token 298: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029760213568806648
    2. 'else' (adapté à ' else') → logprob: -3.5297601222991943
    3. ' else' → logprob: -11.654760360717773
    4. '	else' → logprob: -14.529760360717773
    5. 'elif' → logprob: -14.904760360717773
    6. '       ' → logprob: -15.404760360717773
    7. '```' → logprob: -18.029760360717773
    8. ' ' → logprob: -18.404760360717773
    9. '  ' → logprob: -19.154760360717773
    10. '
' → logprob: -19.654760360717773

Token 299: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.407769113779068
    2. ':' → logprob: -1.1577690839767456
    3. '           ' → logprob: -3.907769203186035
    4. '       ' → logprob: -7.657769203186035
    5. 'print' → logprob: -9.532769203186035
    6. '   ' → logprob: -10.657769203186035
    7. '               ' → logprob: -12.157769203186035
    8. ' :
' → logprob: -12.157769203186035
    9. ' print' → logprob: -12.282769203186035
    10. '):
' → logprob: -12.657769203186035

Token 300: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12778443098068237
    2. '           ' → logprob: -2.127784490585327
    3. '       ' → logprob: -7.377784252166748
    4. ' print' → logprob: -8.502784729003906
    5. '   ' → logprob: -10.502784729003906
    6. '               ' → logprob: -14.752784729003906
    7. '	print' → logprob: -15.627784729003906
    8. '         ' → logprob: -17.002784729003906
    9. '```' → logprob: -17.252784729003906
    10. '          ' → logprob: -17.502784729003906

Token 301: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019576558843255043
    2. ' print' → logprob: -6.251957893371582
    3. '   ' → logprob: -10.501957893371582
    4. '	print' → logprob: -14.001957893371582
    5. '       ' → logprob: -14.251957893371582
    6. ' ' → logprob: -16.376956939697266
    7. '           ' → logprob: -16.626956939697266
    8. 'pr' → logprob: -17.876956939697266
    9. '  ' → logprob: -18.001956939697266
    10. '.print' → logprob: -18.626956939697266

Token 302: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. '("' → logprob: -16.125024795532227
    4. ' ('' → logprob: -18.250024795532227
    5. '(
' → logprob: -18.750024795532227
    6. ''' → logprob: -18.750024795532227
    7. '(\'' → logprob: -20.125024795532227
    8. '(('' → logprob: -20.250024795532227
    9. '()' → logprob: -21.250024795532227
    10. '('(' → logprob: -21.875024795532227

Token 303: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -2.7610454708337784e-05
    2. ''' → logprob: -10.500027656555176
    3. ' WA' → logprob: -16.87502670288086
    4. 'wa' → logprob: -18.37502670288086
    5. '   ' → logprob: -19.62502670288086
    6. '"' → logprob: -20.00002670288086
    7. 'Wa' → logprob: -20.00002670288086
    8. 'W' → logprob: -20.37502670288086
    9. '
' → logprob: -20.62502670288086
    10. '`' → logprob: -21.25002670288086

Token 304: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007578118238598108
    2. ')' → logprob: -7.250757694244385
    3. '')
' → logprob: -10.000758171081543
    4. '()' → logprob: -14.000758171081543
    5. '")' → logprob: -14.125758171081543
    6. '   ' → logprob: -14.375758171081543
    7. ''' → logprob: -15.875758171081543
    8. '')
' → logprob: -16.500757217407227
    9. ' ')' → logprob: -17.125757217407227
    10. '’)' → logprob: -17.375757217407227

Token 305: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059615850448608
    2. '<|end|>' → logprob: -2.695596218109131
    3. '
' → logprob: -8.195595741271973
    4. 'else' → logprob: -8.695595741271973
    5. '<|end|>' → logprob: -9.195595741271973
    6. '```' → logprob: -9.945595741271973
    7. '	else' → logprob: -11.070595741271973
    8. ' else' → logprob: -11.570595741271973
    9. ')' → logprob: -11.945595741271973
    10. '       ' → logprob: -11.945595741271973

Token 306: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06422778218984604
    2. '<|end|>' → logprob: -2.814227819442749
    3. 'else' → logprob: -6.31422758102417
    4. '```' → logprob: -8.689228057861328
    5. '<|end|>' → logprob: -9.439228057861328
    6. '
' → logprob: -9.564228057861328
    7. ' else' → logprob: -9.814228057861328
    8. '	else' → logprob: -10.314228057861328
    9. ')' → logprob: -11.814228057861328
    10. '#else' → logprob: -12.064228057861328

Token 307: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.504363477230072
    2. 'else' → logprob: -1.2543635368347168
    3. ' else' → logprob: -2.504363536834717
    4. '<|end|>' → logprob: -4.254363536834717
    5. 'print' → logprob: -5.004363536834717
    6. '           ' → logprob: -5.754363536834717
    7. '```' → logprob: -6.129363536834717
    8. '       ' → logprob: -7.004363536834717
    9. '  ' → logprob: -7.629363536834717
    10. '	else' → logprob: -8.254363059997559

Token 308: 'C' (ID: 34)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3803778886795044
    2. '<|end|>' → logprob: -2.130377769470215
    3. '           ' → logprob: -3.130377769470215
    4. 'else' → logprob: -3.255377769470215
    5. ' else' → logprob: -3.630377769470215
    6. '')' → logprob: -3.755377769470215
    7. '   ' → logprob: -4.130377769470215
    8. 's' → logprob: -4.755377769470215
    9. '```' → logprob: -5.005377769470215
    10. 'A' → logprob: -5.130377769470215

Token 309: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3964453637599945
    2. '')' → logprob: -1.146445393562317
    3. ' n' → logprob: -5.896445274353027
    4. ' man' → logprob: -6.021445274353027
    5. ' not' → logprob: -6.646445274353027
    6. 'abs' → logprob: -7.771445274353027
    7. 'n' → logprob: -7.896445274353027
    8. ' absent' → logprob: -7.896445274353027
    9. ' non' → logprob: -8.021445274353027
    10. ' abs' → logprob: -8.271445274353027

Token 310: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.008470058441162
    2. ' not' → logprob: -1.758470058441162
    3. '<|end|>' → logprob: -1.758470058441162
    4. ' n' → logprob: -2.133470058441162
    5. ' absent' → logprob: -2.633470058441162
    6. '')' → logprob: -3.508470058441162
    7. ' non' → logprob: -4.258470058441162
    8. 'n' → logprob: -4.508470058441162
    9. ' est' → logprob: -5.008470058441162
    10. ' is' → logprob: -5.008470058441162

Token 311: ''ap' (ID: 31362)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5507793426513672
    2. 'pas' → logprob: -2.050779342651367
    3. 'est' → logprob: -2.175779342651367
    4. 'a' → logprob: -2.800779342651367
    5. ' n' → logprob: -3.175779342651367
    6. 'n' → logprob: -4.175779342651367
    7. ' pas' → logprob: -4.550779342651367
    8. ''' → logprob: -4.800779342651367
    9. ''a' → logprob: -4.925779342651367
    10. ' a' → logprob: -5.175779342651367

Token 312: 'para' (ID: 16151)
  Prédit: 'para'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'para' → logprob: -0.9304937124252319
    2. 'par' → logprob: -1.055493712425232
    3. 'pa' → logprob: -1.680493712425232
    4. 'pas' → logprob: -2.8054938316345215
    5. 'p' → logprob: -5.8054938316345215
    6. 'as' → logprob: -5.9304938316345215
    7. '
' → logprob: -6.6804938316345215
    8. 'pe' → logprob: -6.8054938316345215
    9. 'a' → logprob: -6.9304938316345215
    10. 'pp' → logprob: -8.305493354797363

Token 313: 'ît' (ID: 33077)
  Prédit: 'ît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ît' → logprob: -0.09997531771659851
    2. 'it' → logprob: -2.474975347518921
    3. 't' → logprob: -4.974975109100342
    4. '
' → logprob: -6.349975109100342
    5. 'î' → logprob: -6.974975109100342
    6. 'pas' → logprob: -7.349975109100342
    7. '�t' → logprob: -9.0999755859375
    8. '[t' → logprob: -9.2249755859375
    9. '```' → logprob: -9.8499755859375
    10. 'Î' → logprob: -9.9749755859375

Token 314: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04896668344736099
    2. ' pas' → logprob: -3.048966646194458
    3. 'qu' → logprob: -9.548966407775879
    4. ' jamais' → logprob: -9.923966407775879
    5. '_pas' → logprob: -10.173966407775879
    6. 'auc' → logprob: -10.298966407775879
    7. 'exact' → logprob: -10.298966407775879
    8. 'au' → logprob: -10.673966407775879
    9. 'dans' → logprob: -10.798966407775879
    10. ' qu' → logprob: -10.798966407775879

Token 315: ' exactement' (ID: 108701)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.025532247498631477
    2. ''une' → logprob: -4.650532245635986
    3. 'dans' → logprob: -4.900532245635986
    4. ' une' → logprob: -5.400532245635986
    5. '1' → logprob: -6.400532245635986
    6. 'qu' → logprob: -7.775532245635986
    7. 'de' → logprob: -7.900532245635986
    8. 'au' → logprob: -8.775532722473145
    9. '```' → logprob: -8.775532722473145
    10. 'ou' → logprob: -8.775532722473145

Token 317: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.38821399211883545
    2. ' fois' → logprob: -1.1382139921188354
    3. 'fo' → logprob: -7.388214111328125
    4. ' ' → logprob: -7.513214111328125
    5. 'f' → logprob: -9.763214111328125
    6. '   ' → logprob: -10.138214111328125
    7. '```' → logprob: -10.763214111328125
    8. ' ' → logprob: -10.888214111328125
    9. '  ' → logprob: -12.013214111328125
    10. ' foi' → logprob: -12.388214111328125

Token 318: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055630382150411606
    2. '<|end|>' → logprob: -2.9306304454803467
    3. '<|end|>' → logprob: -8.555630683898926
    4. ' else' → logprob: -9.055630683898926
    5. 'else' → logprob: -9.305630683898926
    6. '       ' → logprob: -9.305630683898926
    7. '```' → logprob: -9.555630683898926
    8. '
' → logprob: -10.055630683898926
    9. ')' → logprob: -10.305630683898926
    10. '  ' → logprob: -10.555630683898926

Token 319: ' bon' (ID: 4846)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.6719204783439636
    2. 'mil' → logprob: -0.9219204783439636
    3. 'bonne' → logprob: -3.1719205379486084
    4. 'b' → logprob: -4.921920299530029
    5. 'centre' → logprob: -5.296920299530029
    6. 'm' → logprob: -5.421920299530029
    7. ' milieu' → logprob: -5.421920299530029
    8. ' bon' → logprob: -5.796920299530029
    9. 'end' → logprob: -5.796920299530029
    10. 'good' → logprob: -5.921920299530029

Token 320: ' endroit' (ID: 79158)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0013716686517000198
    2. 'em' → logprob: -7.62637186050415
    3. ' endroit' → logprob: -7.62637186050415
    4. ''end' → logprob: -8.126371383666992
    5. '```' → logprob: -11.126371383666992
    6. ' end' → logprob: -11.501371383666992
    7. 'interval' → logprob: -11.501371383666992
    8. 'endre' → logprob: -11.626371383666992
    9. 'place' → logprob: -11.626371383666992
    10. 'endom' → logprob: -11.751371383666992

Token 321: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2840285301208496
    2. '<|end|>' → logprob: -1.4090285301208496
    3. 'else' → logprob: -6.65902853012085
    4. ' else' → logprob: -7.40902853012085
    5. '	else' → logprob: -7.90902853012085
    6. '<|end|>' → logprob: -8.409029006958008
    7. '```' → logprob: -8.909029006958008
    8. '
' → logprob: -9.534029006958008
    9. ')' → logprob: -10.284029006958008
    10. '  ' → logprob: -10.409029006958008

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09520795196294785
    2. 'else' → logprob: -2.470207929611206
    3. ' else' → logprob: -5.720208168029785
    4. '<|end|>' → logprob: -6.095208168029785
    5. '	else' → logprob: -7.845208168029785
    6. '```' → logprob: -8.470208168029785
    7. 'elif' → logprob: -10.845208168029785
    8. '       ' → logprob: -10.845208168029785
    9. '  ' → logprob: -10.970208168029785
    10. ' ' → logprob: -10.970208168029785

Token 323: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0018417751416563988
    2. '   ' → logprob: -6.5018415451049805
    3. ' else' → logprob: -8.00184154510498
    4. '	else' → logprob: -12.87684154510498
    5. 'elif' → logprob: -13.37684154510498
    6. '```' → logprob: -16.126842498779297
    7. ' ' → logprob: -16.376842498779297
    8. 'el' → logprob: -16.751842498779297
    9. 'els' → logprob: -16.876842498779297
    10. 'elser' → logprob: -17.751842498779297

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02976194955408573
    2. ':
' → logprob: -3.529762029647827
    3. '   ' → logprob: -12.279762268066406
    4. ' :' → logprob: -12.654762268066406
    5. ':
' → logprob: -13.904762268066406
    6. '       ' → logprob: -14.029762268066406
    7. ' :
' → logprob: -14.154762268066406
    8. 'print' → logprob: -14.279762268066406
    9. ':

' → logprob: -15.279762268066406
    10. '():
' → logprob: -16.404762268066406

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8514263033866882
    2. ' print' → logprob: -0.9764263033866882
    3. '       ' → logprob: -2.101426362991333
    4. 'print' → logprob: -2.601426362991333
    5. '	print' → logprob: -9.601426124572754
    6. ' ' → logprob: -12.226426124572754
    7. '    ' → logprob: -12.351426124572754
    8. '```' → logprob: -12.726426124572754
    9. '   ' → logprob: -12.726426124572754
    10. '	   ' → logprob: -13.226426124572754

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007154120248742402
    2. ' print' → logprob: -7.250715255737305
    3. '   ' → logprob: -12.125715255737305
    4. '	print' → logprob: -16.125715255737305
    5. 'pr' → logprob: -18.250715255737305
    6. ' ' → logprob: -19.500715255737305
    7. 'prin' → logprob: -19.625715255737305
    8. '.print' → logprob: -19.750715255737305
    9. 'prit' → logprob: -20.000715255737305
    10. '```' → logprob: -20.125715255737305

Token 327: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. '("' → logprob: -16.62504005432129
    4. ' ('' → logprob: -17.75004005432129
    5. '(
' → logprob: -18.62504005432129
    6. '()' → logprob: -20.12504005432129
    7. '(('' → logprob: -20.25004005432129
    8. ' (' → logprob: -21.12504005432129
    9. '(\'' → logprob: -21.37504005432129
    10. ' ' → logprob: -21.50004005432129

Token 328: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.3868851363658905
    2. ''' → logprob: -1.136885166168213
    3. '('' → logprob: -11.636884689331055
    4. 'wa' → logprob: -13.636884689331055
    5. 'W' → logprob: -13.886884689331055
    6. 'Wa' → logprob: -14.011884689331055
    7. '`' → logprob: -14.511884689331055
    8. '"' → logprob: -15.011884689331055
    9. ' WA' → logprob: -15.136884689331055
    10. '```' → logprob: -15.886884689331055

Token 329: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00242262938991189
    2. '()' → logprob: -6.25242280960083
    3. ')' → logprob: -7.62742280960083
    4. '('' → logprob: -13.252422332763672
    5. '")' → logprob: -13.252422332763672
    6. '())' → logprob: -13.377422332763672
    7. '   ' → logprob: -13.627422332763672
    8. '')
' → logprob: -14.752422332763672
    9. ''' → logprob: -16.502422332763672
    10. '')"' → logprob: -16.877422332763672

Token 330: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.770195484161377
    2. '#' → logprob: -2.020195484161377
    3. 'Le' → logprob: -2.395195484161377
    4. 'if' → logprob: -2.395195484161377
    5. 'La' → logprob: -2.645195484161377
    6. ')' → logprob: -3.270195484161377
    7. 'A' → logprob: -3.395195484161377
    8. 's' → logprob: -4.395195484161377
    9. 'WA' → logprob: -4.645195484161377
    10. 'L' → logprob: -4.770195484161377

Token 333: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.002258975524455309
    2. ' premier' → logprob: -6.127258777618408
    3. 'first' → logprob: -10.752259254455566
    4. 'print' → logprob: -11.127259254455566
    5. 'pr' → logprob: -11.252259254455566
    6. ' ' → logprob: -12.127259254455566
    7. '   ' → logprob: -12.377259254455566
    8. '1' → logprob: -12.627259254455566
    9. '```' → logprob: -12.877259254455566
    10. 'p' → logprob: -13.627259254455566

Token 334: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.25471293926239014
    2. ' caractère' → logprob: -1.5047129392623901
    3. ' car' → logprob: -6.87971305847168
    4. ' caract' → logprob: -7.37971305847168
    5. ' caractères' → logprob: -7.87971305847168
    6. '_car' → logprob: -8.37971305847168
    7. ' ' → logprob: -8.50471305847168
    8. ' ' → logprob: -8.75471305847168
    9. 'c' → logprob: -9.25471305847168
    10. 'Car' → logprob: -11.25471305847168

Token 335: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38689595460891724
    2. 'n' → logprob: -1.1368958950042725
    3. 'est' → logprob: -11.011896133422852
    4. ' est' → logprob: -12.886896133422852
    5. ' !=' → logprob: -13.386896133422852
    6. ' nest' → logprob: -13.761896133422852
    7. '!=' → logprob: -13.761896133422852
    8. 'n't' → logprob: -14.261896133422852
    9. ' isn't' → logprob: -14.761896133422852
    10. 'nest' → logprob: -14.886896133422852

Token 336: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.0858546793460846
    2. 'est' → logprob: -2.9608547687530518
    3. ''' → logprob: -3.8358547687530518
    4. ' n' → logprob: -5.835854530334473
    5. 'n' → logprob: -6.335854530334473
    6. 'e' → logprob: -6.710854530334473
    7. 'pas' → logprob: -7.210854530334473
    8. 'es' → logprob: -7.960854530334473
    9. ' est' → logprob: -7.960854530334473
    10. '’est' → logprob: -8.460854530334473

Token 337: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.21098145842552185
    2. ' pas' → logprob: -2.4609813690185547
    3. ''A' → logprob: -2.4609813690185547
    4. ''' → logprob: -4.085981369018555
    5. 'Pas' → logprob: -6.710981369018555
    6. '_pas' → logprob: -7.460981369018555
    7. 'A' → logprob: -8.210981369018555
    8. ''p' → logprob: -8.210981369018555
    9. ' '' → logprob: -8.585981369018555
    10. 'PAS' → logprob: -10.085981369018555

Token 338: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.00020795092859771103
    2. ' '' → logprob: -8.625207901000977
    3. 'A' → logprob: -10.625207901000977
    4. ''' → logprob: -12.875207901000977
    5. '’A' → logprob: -13.875207901000977
    6. '"A' → logprob: -15.375207901000977
    7. ' A' → logprob: -16.250207901000977
    8. ''I' → logprob: -16.875207901000977
    9. '`' → logprob: -17.250207901000977
    10. '('' → logprob: -17.375207901000977

Token 339: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001238004770129919
    2. ''A' → logprob: -9.000123977661133
    3. ' A' → logprob: -15.125123977661133
    4. ''' → logprob: -17.375123977661133
    5. '"A' → logprob: -17.750123977661133
    6. 'А' → logprob: -17.875123977661133
    7. '’A' → logprob: -18.000123977661133
    8. 'Ａ' → logprob: -18.875123977661133
    9. '	A' → logprob: -19.125123977661133
    10. '```' → logprob: -19.375123977661133

Token 340: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00585152767598629
    2. '')' → logprob: -5.880851745605469
    3. '<|end|>' → logprob: -6.630851745605469
    4. '()' → logprob: -6.755851745605469
    5. '```' → logprob: -8.255851745605469
    6. '")' → logprob: -9.755851745605469
    7. '())' → logprob: -9.880851745605469
    8. '   ' → logprob: -9.880851745605469
    9. ')
' → logprob: -10.255851745605469
    10. '
' → logprob: -10.505851745605469

Token 341: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5304316878318787
    2. '<|end|>' → logprob: -1.0304317474365234
    3. '```' → logprob: -3.6554317474365234
    4. '#' → logprob: -4.030431747436523
    5. '(' → logprob: -5.780431747436523
    6. '\' → logprob: -6.155431747436523
    7. '<|end|>' → logprob: -6.405431747436523
    8. '
' → logprob: -6.780431747436523
    9. '[' → logprob: -7.280431747436523
    10. ':' → logprob: -7.530431747436523

Token 342: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07890035957098007
    2. '__' → logprob: -2.5789003372192383
    3. '_' → logprob: -12.453900337219238
    4. '_name' → logprob: -12.828900337219238
    5. ' ' → logprob: -12.828900337219238
    6. '___' → logprob: -14.078900337219238
    7. ' _' → logprob: -15.453900337219238
    8. ' ' → logprob: -15.578900337219238
    9. 'name' → logprob: -15.953900337219238
    10. ' ___' → logprob: -17.078901290893555

Token 343: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0066965422593057156
    2. ' __' → logprob: -5.631696701049805
    3. 'name' → logprob: -5.881696701049805
    4. ' ==' → logprob: -9.131696701049805
    5. '_' → logprob: -9.131696701049805
    6. '_name' → logprob: -9.881696701049805
    7. '==' → logprob: -11.256696701049805
    8. 'main' → logprob: -12.631696701049805
    9. '_NAME' → logprob: -12.756696701049805
    10. '___' → logprob: -13.006696701049805

Token 344: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. '==' → logprob: -14.00000286102295
    3. '__.__' → logprob: -14.12500286102295
    4. '_' → logprob: -14.75000286102295
    5. '___' → logprob: -14.87500286102295
    6. '__
' → logprob: -15.50000286102295
    7. '__

' → logprob: -16.125001907348633
    8. '____' → logprob: -16.375001907348633
    9. '__('' → logprob: -16.750001907348633
    10. '=="' → logprob: -18.000001907348633

Token 345: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011453792452812195
    2. '==' → logprob: -5.011453628540039
    3. ' ==' → logprob: -5.761453628540039
    4. '=="' → logprob: -7.136453628540039
    5. '__.__' → logprob: -7.386453628540039
    6. '=='' → logprob: -9.761453628540039
    7. '_' → logprob: -9.761453628540039
    8. '__.' → logprob: -11.636453628540039
    9. '___' → logprob: -11.636453628540039
    10. '__["' → logprob: -12.011453628540039

Token 346: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4744255542755127
    2. ''' → logprob: -0.9744255542755127
    3. ' "__' → logprob: -8.099425315856934
    4. ' '__' → logprob: -10.474425315856934
    5. '__' → logprob: -11.224425315856934
    6. ''"' → logprob: -14.474425315856934
    7. '"_' → logprob: -14.474425315856934
    8. '"user' → logprob: -14.849425315856934
    9. '"name' → logprob: -15.224425315856934
    10. '"A' → logprob: -15.349425315856934

Token 347: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0325924449716695e-05
    2. '__' → logprob: -11.87501049041748
    3. 'name' → logprob: -13.00001049041748
    4. '_main' → logprob: -14.00001049041748
    5. ' main' → logprob: -16.125009536743164
    6. 'ma' → logprob: -17.000009536743164
    7. 'built' → logprob: -17.500009536743164
    8. 'm' → logprob: -18.125009536743164
    9. 'init' → logprob: -18.750009536743164
    10. 'print' → logprob: -18.875009536743164

Token 348: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006734199821949005
    2. '__' → logprob: -5.006734371185303
    3. '__':
' → logprob: -10.881733894348145
    4. '__:' → logprob: -18.25673484802246
    5. '__["' → logprob: -18.63173484802246
    6. '_' → logprob: -19.13173484802246
    7. '__("' → logprob: -19.50673484802246
    8. '__",' → logprob: -20.38173484802246
    9. '__.' → logprob: -20.88173484802246
    10. '___' → logprob: -21.00673484802246

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09923378378152847
    2. ' check' → logprob: -2.599233865737915
    3. 'check' → logprob: -4.849233627319336
    4. '	check' → logprob: -5.599233627319336
    5. '    
' → logprob: -5.724233627319336
    6. '(check' → logprob: -6.099233627319336
    7. '<|end|>' → logprob: -6.474233627319336
    8. '```' → logprob: -7.599233627319336
    9. '_check' → logprob: -7.974233627319336
    10. '
' → logprob: -7.974233627319336

Token 350: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -6.2729995988775045e-06
    2. ' check' → logprob: -12.000006675720215
    3. '	check' → logprob: -17.0000057220459
    4. '   ' → logprob: -17.6250057220459
    5. '_check' → logprob: -18.7500057220459
    6. '(check' → logprob: -20.3750057220459
    7. '    
' → logprob: -20.7500057220459
    8. 'chec' → logprob: -20.7500057220459
    9. '.check' → logprob: -21.0000057220459
    10. '
' → logprob: -21.1250057220459

Token 351: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -8.661626634420827e-05
    2. '_' → logprob: -9.375086784362793
    3. '_str' → logprob: -14.250086784362793
    4. '_String' → logprob: -14.750086784362793
    5. '_strings' → logprob: -15.375086784362793
    6. '_STRING' → logprob: -15.625086784362793
    7. 'string' → logprob: -16.750085830688477
    8. 'String' → logprob: -16.875085830688477
    9. '_s' → logprob: -17.250085830688477
    10. '_code' → logprob: -17.375085830688477

Token 352: '_format' (ID: 19832)
  Prédit: '_format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_format' → logprob: -6.957014556974173e-05
    2. '_' → logprob: -9.625069618225098
    3. '_form' → logprob: -12.750069618225098
    4. '_FORMAT' → logprob: -16.00006866455078
    5. '_for' → logprob: -16.37506866455078
    6. '_Format' → logprob: -16.37506866455078
    7. '_formats' → logprob: -16.50006866455078
    8. '_f' → logprob: -16.87506866455078
    9. '()' → logprob: -17.12506866455078
    10. '_fmt' → logprob: -17.37506866455078

Token 353: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056022703647613525
    2. '(' → logprob: -2.9310226440429688
    3. '<|end|>' → logprob: -7.931022644042969
    4. '()
' → logprob: -8.056022644042969
    5. '(
' → logprob: -8.931022644042969
    6. '
' → logprob: -9.181022644042969
    7. ')' → logprob: -9.556022644042969
    8. '#' → logprob: -10.431022644042969
    9. '();' → logprob: -10.431022644042969
    10. '\n' → logprob: -11.056022644042969


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 351
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 33.90%
Précision adaptée (1ère position): 36.47%
Précision (top 10): 70.09%
================================================================================
