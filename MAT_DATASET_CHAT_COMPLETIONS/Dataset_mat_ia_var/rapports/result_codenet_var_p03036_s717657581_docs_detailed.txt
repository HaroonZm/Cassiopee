================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def update_population(r, d, x):
    """
    Met à jour la valeur de x pour 10 itérations selon la formule de récurrence :
    x_new = r * x - d à chaque itération, puis affiche la valeur obtenue.
    
    Args:
        r (int): Taux de croissance multiplicatif.
        d (int): Valeur soustraite à chaque itération (décroissance).
        x (int): Valeur initiale de la population ou du paramètre.
    """
    for i in range(10):
        # À chaque itération, on applique la relation de récurrence
        x = r * x - d
        # Affiche la valeur courante après mise à jour
        print(x)

if __name__ == "__main__":
    # Lit trois entiers de l'entrée standard correspondant à r, d, x
    r, d, x = map(int, input().split())
    # Lance la mise à jour et l'affichage des valeurs
    update_population(r, d, x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' update' (ID: 4027)
  → Token d'amorce (pas de prédiction)

Token 2: '_population' (ID: 197327)
  → Token d'amorce (pas de prédiction)

Token 3: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1001024842262268
    2. '_' → logprob: -2.475102424621582
    3. '```' → logprob: -4.850102424621582
    4. '_population' → logprob: -6.975102424621582
    5. '(_' → logprob: -7.725102424621582
    6. '_parent' → logprob: -7.725102424621582
    7. '_pop' → logprob: -8.850102424621582
    8. '(_:' → logprob: -9.225102424621582
    9. '(p' → logprob: -9.475102424621582
    10. '_pres' → logprob: -9.600102424621582

Token 4: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6557369828224182
    2. 'a' → logprob: -0.7807369828224182
    3. '_' → logprob: -4.780736923217773
    4. 'o' → logprob: -5.655736923217773
    5. 'ate' → logprob: -6.030736923217773
    6. ')' → logprob: -6.030736923217773
    7. ',' → logprob: -6.405736923217773
    8. 'ange' → logprob: -6.780736923217773
    9. 'adius' → logprob: -7.280736923217773
    10. '```' → logprob: -7.905736923217773

Token 5: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4325724244117737
    2. ' N' → logprob: -1.682572364807129
    3. ' population' → logprob: -2.807572364807129
    4. 'n' → logprob: -2.932572364807129
    5. ' t' → logprob: -4.057572364807129
    6. ' p' → logprob: -5.182572364807129
    7. 'N' → logprob: -5.182572364807129
    8. ' initial' → logprob: -5.307572364807129
    9. ' P' → logprob: -5.682572364807129
    10. ' current' → logprob: -6.182572364807129

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45779913663864136
    2. '):' → logprob: -1.0827991962432861
    3. ')' → logprob: -3.582799196243286
    4. '_' → logprob: -8.832798957824707
    5. 'e' → logprob: -9.207798957824707
    6. ' ,' → logprob: -9.457798957824707
    7. 's' → logprob: -9.832798957824707
    8. '=' → logprob: -9.957798957824707
    9. '_r' → logprob: -9.957798957824707
    10. '_population' → logprob: -9.957798957824707

Token 7: ' x' (ID: 1215)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.3826885223388672
    2. ' n' → logprob: -1.3826885223388672
    3. ' t' → logprob: -1.5076885223388672
    4. 'n' → logprob: -3.007688522338867
    5. 't' → logprob: -3.382688522338867
    6. 'p' → logprob: -3.507688522338867
    7. ' P' → logprob: -3.882688522338867
    8. ' N' → logprob: -4.007688522338867
    9. ' ' → logprob: -4.257688522338867
    10. ' initial' → logprob: -4.507688522338867

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011643055826425552
    2. ',' → logprob: -4.761642932891846
    3. ')' → logprob: -5.886642932891846
    4. '_' → logprob: -9.011643409729004
    5. 's' → logprob: -10.261643409729004
    6. '=' → logprob: -10.386643409729004
    7. ':' → logprob: -11.386643409729004
    8. '[' → logprob: -12.136643409729004
    9. ' ):' → logprob: -12.136643409729004
    10. ' ,' → logprob: -12.636643409729004

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.052299562841653824
    2. '   ' → logprob: -3.5522994995117188
    3. '):' → logprob: -4.427299499511719
    4. ',' → logprob: -5.802299499511719
    5. ''' → logprob: -6.677299499511719
    6. '():' → logprob: -6.677299499511719
    7. '':' → logprob: -6.927299499511719
    8. ' :' → logprob: -7.177299499511719
    9. '(' → logprob: -7.552299499511719
    10. '_' → logprob: -7.802299499511719

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4150412976741791
    2. ' ' → logprob: -2.040041208267212
    3. ''' → logprob: -2.540041208267212
    4. '_' → logprob: -3.540041208267212
    5. 'r' → logprob: -3.790041208267212
    6. '"' → logprob: -4.290041446685791
    7. '```' → logprob: -4.290041446685791
    8. ' return' → logprob: -4.915041446685791
    9. '    ' → logprob: -4.915041446685791
    10. 'p' → logprob: -5.040041446685791

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.593519926071167
    2. '   ' → logprob: -2.093519926071167
    3. ' """' → logprob: -2.593519926071167
    4. 'i' → logprob: -3.093519926071167
    5. 'r' → logprob: -3.218519926071167
    6. 'u' → logprob: -3.343519926071167
    7. '"' → logprob: -3.593519926071167
    8. ')' → logprob: -4.343520164489746
    9. ' ' → logprob: -4.468520164489746
    10. ''''' → logprob: -4.468520164489746

Token 12: ' Met' (ID: 7227)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6555258631706238
    2. 'Update' → logprob: -2.1555259227752686
    3. '"""
' → logprob: -2.2805259227752686
    4. 'Calculate' → logprob: -2.9055259227752686
    5. 'U' → logprob: -3.0305259227752686
    6. 'Updates' → logprob: -3.2805259227752686
    7. 'Up' → logprob: -3.4055259227752686
    8. 'u' → logprob: -3.9055259227752686
    9. 'Updated' → logprob: -4.1555256843566895
    10. '   ' → logprob: -5.0305256843566895

Token 13: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013685045763850212
    2. 'hod' → logprob: -4.88868522644043
    3. 'h' → logprob: -5.13868522644043
    4. '```' → logprob: -9.88868522644043
    5. ' a' → logprob: -10.13868522644043
    6. 'ha' → logprob: -10.13868522644043
    7. 'r' → logprob: -10.88868522644043
    8. 'а' → logprob: -12.01368522644043
    9. '   ' → logprob: -12.26368522644043
    10. 'adata' → logprob: -12.51368522644043

Token 14: ' jour' (ID: 8379)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.056842025369405746
    2. 'jour' → logprob: -3.306842088699341
    3. 'à' → logprob: -4.431841850280762
    4. 'a' → logprob: -6.181841850280762
    5. ' à' → logprob: -6.556841850280762
    6. ' jour' → logprob: -6.931841850280762
    7. 're' → logprob: -7.181841850280762
    8. 't' → logprob: -7.931841850280762
    9. '_j' → logprob: -8.056841850280762
    10. 'j' → logprob: -8.431841850280762

Token 15: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5742881894111633
    2. ' la' → logprob: -1.6992881298065186
    3. ' ' → logprob: -1.8242881298065186
    4. '_population' → logprob: -3.3242881298065186
    5. '_l' → logprob: -4.324288368225098
    6. '_la' → logprob: -4.824288368225098
    7. 'population' → logprob: -5.324288368225098
    8. 'l' → logprob: -5.574288368225098
    9. ')' → logprob: -5.824288368225098
    10. ''' → logprob: -5.824288368225098

Token 16: ' valeur' (ID: 41664)
  Prédit: ' population'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' population' → logprob: -0.26274341344833374
    2. 'population' → logprob: -1.8877434730529785
    3. ' ' → logprob: -2.6377434730529785
    4. 'pop' → logprob: -6.1377434730529785
    5. '_population' → logprob: -6.5127434730529785
    6. '   ' → logprob: -6.5127434730529785
    7. ' taille' → logprob: -7.1377434730529785
    8. ' populations' → logprob: -7.2627434730529785
    9. '  ' → logprob: -8.13774299621582
    10. ' popula' → logprob: -8.51274299621582

Token 17: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7246743440628052
    2. ' ' → logprob: -1.0996743440628052
    3. 's' → logprob: -2.4746742248535156
    4. '_' → logprob: -2.5996742248535156
    5. ')' → logprob: -5.224674224853516
    6. ',' → logprob: -5.349674224853516
    7. '   ' → logprob: -5.849674224853516
    8. ' des' → logprob: -5.974674224853516
    9. ''' → logprob: -7.224674224853516
    10. 'def' → logprob: -7.224674224853516

Token 18: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4480852782726288
    2. ' la' → logprob: -1.5730853080749512
    3. '_' → logprob: -2.573085308074951
    4. ' population' → logprob: -3.698085308074951
    5. ''' → logprob: -4.448085308074951
    6. 'l' → logprob: -4.448085308074951
    7. ' ' → logprob: -4.823085308074951
    8. ' l' → logprob: -5.448085308074951
    9. 'population' → logprob: -5.573085308074951
    10. 'r' → logprob: -6.073085308074951

Token 19: ' pour' (ID: 1930)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0146011114120483
    2. ',' → logprob: -1.6396011114120483
    3. ' ' → logprob: -1.6396011114120483
    4. '   ' → logprob: -2.139601230621338
    5. '[' → logprob: -3.639601230621338
    6. ')' → logprob: -3.764601230621338
    7. '_' → logprob: -4.014601230621338
    8. '.' → logprob: -4.389601230621338
    9. '```' → logprob: -4.639601230621338
    10. ' ,' → logprob: -4.764601230621338

Token 20: ' ' (ID: 220)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07360726594924927
    2. ' la' → logprob: -3.3236072063446045
    3. '   ' → logprob: -4.448607444763184
    4. ' ' → logprob: -4.823607444763184
    5. ' une' → logprob: -5.698607444763184
    6. ' l' → logprob: -5.698607444763184
    7. ' refl' → logprob: -6.198607444763184
    8. ' each' → logprob: -6.573607444763184
    9. ' le' → logprob: -6.948607444763184
    10. 'l' → logprob: -7.448607444763184

Token 21: '10' (ID: 702)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.4906734228134155
    2. 'cha' → logprob: -1.6156734228134155
    3. 'une' → logprob: -1.8656734228134155
    4. ' chaque' → logprob: -1.9906734228134155
    5. 'l' → logprob: -2.365673542022705
    6. 't' → logprob: -3.115673542022705
    7. ' la' → logprob: -3.115673542022705
    8. ' une' → logprob: -3.740673542022705
    9. 'le' → logprob: -3.990673542022705
    10. ' refl' → logprob: -4.240673542022705

Token 22: ' it' (ID: 480)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1392466127872467
    2. ' années' → logprob: -3.014246702194214
    3. ' jours' → logprob: -3.639246702194214
    4. ' ' → logprob: -4.764246463775635
    5. ' générations' → logprob: -5.264246463775635
    6. ' an' → logprob: -5.389246463775635
    7. 'ans' → logprob: -5.514246463775635
    8. '0' → logprob: -5.514246463775635
    9. ' iterations' → logprob: -5.514246463775635
    10. ' ' → logprob: -5.514246463775635

Token 23: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.10899544507265091
    2. 'é' → logprob: -2.3589954376220703
    3. 'ér' → logprob: -5.73399543762207
    4. 'ération' → logprob: -5.98399543762207
    5. 'er' → logprob: -6.73399543762207
    6. 'e' → logprob: -7.48399543762207
    7. 'éra' → logprob: -8.73399543762207
    8. 'érés' → logprob: -8.98399543762207
    9. '```' → logprob: -8.98399543762207
    10. '\' → logprob: -9.23399543762207

Token 24: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25655072927474976
    2. '\' → logprob: -2.1315507888793945
    3. '\n' → logprob: -3.1315507888793945
    4. '
' → logprob: -3.5065507888793945
    5. '    
' → logprob: -4.7565507888793945
    6. ',' → logprob: -5.7565507888793945
    7. ' ' → logprob: -6.0065507888793945
    8. '  
' → logprob: -6.0065507888793945
    9. ' 
' → logprob: -6.1315507888793945
    10. ':' → logprob: -6.3815507888793945

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.786263644695282
    2. ' r' → logprob: -1.2862637042999268
    3. 'r' → logprob: -2.5362637042999268
    4. ' l' → logprob: -2.7862637042999268
    5. ' le' → logprob: -3.7862637042999268
    6. '```' → logprob: -3.7862637042999268
    7. ' une' → logprob: -4.161263465881348
    8. ' ' → logprob: -4.286263465881348
    9. ' les' → logprob: -4.536263465881348
    10. ' ' → logprob: -4.661263465881348

Token 26: ' formule' (ID: 84316)
  Prédit: ' croissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' croissance' → logprob: -0.7719593048095703
    2. ' population' → logprob: -1.6469593048095703
    3. ' formule' → logprob: -2.3969593048095703
    4. ' for' → logprob: -3.2719593048095703
    5. ' ' → logprob: -3.6469593048095703
    6. ' r' → logprob: -4.02195930480957
    7. ' form' → logprob: -4.14695930480957
    8. ' loi' → logprob: -4.39695930480957
    9. '   ' → logprob: -4.52195930480957
    10. ' valeur' → logprob: -4.77195930480957

Token 27: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3781898617744446
    2. '    ' → logprob: -2.7531898021698
    3. ' ' → logprob: -3.1281898021698
    4. '```' → logprob: -3.1281898021698
    5. ' :' → logprob: -3.6281898021698
    6. ':' → logprob: -3.6281898021698
    7. '\' → logprob: -4.128190040588379
    8. ',' → logprob: -4.128190040588379
    9. '     
' → logprob: -4.628190040588379
    10. '.' → logprob: -5.003190040588379

Token 28: ' ré' (ID: 3146)
  Prédit: ' croissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' croissance' → logprob: -0.2140665352344513
    2. ' l' → logprob: -2.839066505432129
    3. ' la' → logprob: -2.964066505432129
    4. 'l' → logprob: -3.589066505432129
    5. 'r' → logprob: -4.339066505432129
    6. ' r' → logprob: -4.589066505432129
    7. ' population' → logprob: -5.214066505432129
    8. '```' → logprob: -5.714066505432129
    9. ' M' → logprob: -6.214066505432129
    10. 'd' → logprob: -6.339066505432129

Token 29: 'curr' (ID: 28376)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.4116557836532593
    2. 'p' → logprob: -1.9116557836532593
    3. '_c' → logprob: -3.536655902862549
    4. 'c' → logprob: -3.661655902862549
    5. 'gression' → logprob: -3.786655902862549
    6. 'curr' → logprob: -4.286655902862549
    7. 'cup' → logprob: -4.411655902862549
    8. '_p' → logprob: -4.536655902862549
    9. '-' → logprob: -5.161655902862549
    10. 'cur' → logprob: -5.286655902862549

Token 30: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.00010771531378850341
    2. 'e' → logprob: -9.750107765197754
    3. 'rence' → logprob: -10.250107765197754
    4. 'en' → logprob: -12.875107765197754
    5. 'é' → logprob: -12.875107765197754
    6. '#' → logprob: -13.375107765197754
    7. 'ences' → logprob: -13.500107765197754
    8. 'ance' → logprob: -13.625107765197754
    9. '```' → logprob: -14.250107765197754
    10. 'ente' → logprob: -14.500107765197754

Token 31: ' ' (ID: 5310)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4827724695205688
    2. '   ' → logprob: -1.8577724695205688
    3. '\n' → logprob: -2.1077723503112793
    4. ':' → logprob: -2.2327723503112793
    5. '\' → logprob: -2.6077723503112793
    6. '```' → logprob: -3.1077723503112793
    7. ' ' → logprob: -3.2327723503112793
    8. '.' → logprob: -3.3577723503112793
    9. 'n' → logprob: -3.7327723503112793
    10. '    
' → logprob: -4.107772350311279

Token 32: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7733681201934814
    2. ':' → logprob: -0.8983681201934814
    3. '\n' → logprob: -3.3983681201934814
    4. '.' → logprob: -4.398367881774902
    5. '```' → logprob: -4.398367881774902
    6. ' :
' → logprob: -4.773367881774902
    7. ',' → logprob: -4.898367881774902
    8. '

' → logprob: -5.023367881774902
    9. ' ' → logprob: -5.023367881774902
    10. '
' → logprob: -5.023367881774902

Token 33: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.3735063076019287
    2. '   ' → logprob: -2.1235063076019287
    3. 'x' → logprob: -2.2485063076019287
    4. ' 
' → logprob: -2.2485063076019287
    5. '\n' → logprob: -2.8735063076019287
    6. 'r' → logprob: -2.8735063076019287
    7. ' ' → logprob: -3.1235063076019287
    8. '    
' → logprob: -3.2485063076019287
    9. '     
' → logprob: -3.7485063076019287
    10. ' r' → logprob: -3.8735063076019287

Token 34: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6430577635765076
    2. 'x' (adapté à ' x') → logprob: -2.0180578231811523
    3. ' 
' → logprob: -2.1430578231811523
    4. ' ' → logprob: -3.2680578231811523
    5. '    
' → logprob: -3.6430578231811523
    6. '     
' → logprob: -3.8930578231811523
    7. '   ' → logprob: -4.018057823181152
    8. '\n' → logprob: -4.018057823181152
    9. '```' → logprob: -4.143057823181152
    10. '    ' → logprob: -4.268057823181152

Token 35: '_new' (ID: 13000)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08316602557897568
    2. '=' → logprob: -2.8331661224365234
    3. ' *' → logprob: -5.833166122436523
    4. '_' → logprob: -5.958166122436523
    5. '_next' → logprob: -6.083166122436523
    6. '*' → logprob: -6.208166122436523
    7. '[n' → logprob: -6.333166122436523
    8. '+' → logprob: -6.708166122436523
    9. ' +=' → logprob: -6.833166122436523
    10. '[t' → logprob: -6.833166122436523

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020614759996533394
    2. '=' → logprob: -3.8956148624420166
    3. ' *' → logprob: -10.895614624023438
    4. '*' → logprob: -11.020614624023438
    5. ' +=' → logprob: -11.770614624023438
    6. ' *=' → logprob: -11.770614624023438
    7. 's' → logprob: -12.145614624023438
    8. ' ' → logprob: -12.645614624023438
    9. ' ' → logprob: -12.645614624023438
    10. '_' → logprob: -12.770614624023438

Token 37: ' r' (ID: 428)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18680669367313385
    2. 'x' → logprob: -2.1868066787719727
    3. ' (' → logprob: -3.6868066787719727
    4. ' r' → logprob: -4.061806678771973
    5. '(' → logprob: -4.936806678771973
    6. ' ' → logprob: -5.186806678771973
    7. 'r' → logprob: -5.936806678771973
    8. '   ' → logprob: -9.061806678771973
    9. '  ' → logprob: -9.749306678771973
    10. '(r' → logprob: -10.186806678771973

Token 38: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03016604483127594
    2. '*' → logprob: -3.5301661491394043
    3. '*x' → logprob: -7.905166149139404
    4. ' ' → logprob: -10.280165672302246
    5. ' x' → logprob: -12.405165672302246
    6. ' ' → logprob: -12.655165672302246
    7. 'x' → logprob: -13.280165672302246
    8. '**' → logprob: -13.780165672302246
    9. ' **' → logprob: -14.280165672302246
    10. ' \' → logprob: -15.280165672302246

Token 39: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20172351598739624
    2. 'x' → logprob: -1.701723575592041
    3. ' ' → logprob: -8.576723098754883
    4. '(' → logprob: -10.576723098754883
    5. ' ' → logprob: -10.826723098754883
    6. ' *' → logprob: -10.951723098754883
    7. '	x' → logprob: -10.951723098754883
    8. '  ' → logprob: -11.576723098754883
    9. ' (' → logprob: -11.576723098754883
    10. '*x' → logprob: -12.076723098754883

Token 40: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01969752088189125
    2. ' -' → logprob: -4.519697666168213
    3. ' +' → logprob: -5.769697666168213
    4. '*' → logprob: -5.894697666168213
    5. '-' → logprob: -6.769697666168213
    6. ' ' → logprob: -7.269697666168213
    7. '_' → logprob: -8.144697189331055
    8. ' ' → logprob: -8.144697189331055
    9. '+' → logprob: -10.019697189331055
    10. '<|end|>' → logprob: -10.519697189331055

Token 41: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4755082130432129
    2. ' d' → logprob: -0.9755082130432129
    3. ' ' → logprob: -7.475508213043213
    4. 'x' → logprob: -8.350507736206055
    5. 'r' → logprob: -8.975507736206055
    6. ' x' → logprob: -9.100507736206055
    7. ' r' → logprob: -9.475507736206055
    8. '   ' → logprob: -9.600507736206055
    9. '	d' → logprob: -9.600507736206055
    10. '  ' → logprob: -10.225507736206055

Token 42: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0011411691084504128
    2. '*' → logprob: -6.87614107131958
    3. ' ' → logprob: -10.376141548156738
    4. ' ' → logprob: -11.001141548156738
    5. ' **' → logprob: -11.126141548156738
    6. ' x' → logprob: -11.626141548156738
    7. '*x' → logprob: -11.876141548156738
    8. '**' → logprob: -12.001141548156738
    9. '<|end|>' → logprob: -12.501141548156738
    10. ')' → logprob: -12.751141548156738

Token 43: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.4192906618118286
    2. ' ' → logprob: -1.9192906618118286
    3. 'près' → logprob: -2.169290542602539
    4. '   ' → logprob: -2.544290542602539
    5. 'cc' → logprob: -3.044290542602539
    6. '*' → logprob: -3.294290542602539
    7. 'u' → logprob: -3.419290542602539
    8. 'c' → logprob: -3.544290542602539
    9. 'x' → logprob: -3.669290542602539
    10. 'n' → logprob: -3.669290542602539

Token 44: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.055987775325775146
    2. ' étape' → logprob: -4.18098783493042
    3. ' iteration' → logprob: -4.30598783493042
    4. '_' → logprob: -5.18098783493042
    5. ' ' → logprob: -5.30598783493042
    6. ' fois' → logprob: -5.55598783493042
    7. ' iter' → logprob: -5.80598783493042
    8. 'it' → logprob: -6.43098783493042
    9. 'iteration' → logprob: -6.55598783493042
    10. 'fois' → logprob: -7.43098783493042

Token 45: 'ération' (ID: 24977)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05305977165699005
    2. 'ération' → logprob: -3.3030598163604736
    3. 'ér' → logprob: -4.6780595779418945
    4. '_' → logprob: -6.5530595779418945
    5. 'r' → logprob: -7.1780595779418945
    6. 't' → logprob: -7.6780595779418945
    7. 'éra' → logprob: -8.178059577941895
    8. 'er' → logprob: -8.553059577941895
    9. 'érations' → logprob: -8.553059577941895
    10. '   ' → logprob: -8.803059577941895

Token 46: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.812162458896637
    2. '   ' → logprob: -1.6871623992919922
    3. '\n' → logprob: -1.8121623992919922
    4. '\' → logprob: -2.562162399291992
    5. '  
' → logprob: -3.687162399291992
    6. ' 
' → logprob: -3.812162399291992
    7. ' ' → logprob: -4.312162399291992
    8. '    
' → logprob: -4.437162399291992
    9. '```' → logprob: -4.562162399291992
    10. '' → logprob: -4.687162399291992

Token 47: ' puis' (ID: 18766)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.417223334312439
    2. ')' → logprob: -1.667223334312439
    3. ' ' → logprob: -2.1672234535217285
    4. '\' → logprob: -2.1672234535217285
    5. ' x' → logprob: -3.0422234535217285
    6. '_' → logprob: -3.0422234535217285
    7. '   ' → logprob: -3.1672234535217285
    8. ' \' → logprob: -3.2922234535217285
    9. ' 
' → logprob: -3.5422234535217285
    10. '
' → logprob: -3.9172234535217285

Token 48: ' affiche' (ID: 127479)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.6020594835281372
    2. ' return' → logprob: -1.3520594835281372
    3. ' ren' → logprob: -2.8520593643188477
    4. ' x' → logprob: -3.4770593643188477
    5. ' retourner' → logprob: -3.8520593643188477
    6. 'return' → logprob: -4.102059364318848
    7. ' ' → logprob: -4.227059364318848
    8. 'x' → logprob: -4.602059364318848
    9. '   ' → logprob: -4.727059364318848
    10. 'ret' → logprob: -5.102059364318848

Token 49: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9322585463523865
    2. ' x' → logprob: -1.1822586059570312
    3. 's' → logprob: -2.5572586059570312
    4. ' la' → logprob: -3.0572586059570312
    5. 'x' → logprob: -3.3072586059570312
    6. 'r' → logprob: -3.5572586059570312
    7. ' l' → logprob: -3.9322586059570312
    8. '  ' → logprob: -4.182258605957031
    9. ' ' → logprob: -4.557258605957031
    10. ':' → logprob: -4.682258605957031

Token 50: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19632630050182343
    2. ' valeur' → logprob: -1.9463262557983398
    3. ' nouvelle' → logprob: -3.94632625579834
    4. 'n' → logprob: -6.07132625579834
    5. ' x' → logprob: -6.19632625579834
    6. ' val' → logprob: -6.32132625579834
    7. ' ' → logprob: -6.57132625579834
    8. 's' → logprob: -6.69632625579834
    9. ' n' → logprob: -7.07132625579834
    10. '  ' → logprob: -7.44632625579834

Token 51: ' obten' (ID: 28150)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43261614441871643
    2. '
' → logprob: -2.4326162338256836
    3. '   ' → logprob: -2.6826162338256836
    4. ' ' → logprob: -3.1826162338256836
    5. '\' → logprob: -3.1826162338256836
    6. ' 
' → logprob: -3.5576162338256836
    7. '_
' → logprob: -3.5576162338256836
    8. '  
' → logprob: -4.682616233825684
    9. ',' → logprob: -4.932616233825684
    10. '    
' → logprob: -5.182616233825684

Token 52: 'ue' (ID: 466)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0376252755522728
    2. 's' → logprob: -4.037625312805176
    3. 'r' → logprob: -5.037625312805176
    4. 'é' → logprob: -5.787625312805176
    5. 'a' → logprob: -6.162625312805176
    6. '\' → logprob: -6.787625312805176
    7. 'n' → logprob: -6.912625312805176
    8. 'x' → logprob: -7.162625312805176
    9. ' ' → logprob: -7.287625312805176
    10. '.' → logprob: -7.537625312805176

Token 53: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5186647176742554
    2. '\n' → logprob: -2.268664836883545
    3. '   ' → logprob: -2.393664836883545
    4. '  
' → logprob: -3.018664836883545
    5. '\' → logprob: -3.143664836883545
    6. ' ' → logprob: -3.518664836883545
    7. '' → logprob: -4.018664836883545
    8. 'n' → logprob: -4.393664836883545
    9. ':' → logprob: -4.518664836883545
    10. ' 
' → logprob: -4.518664836883545

Token 54: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5377413630485535
    2. '"""
' → logprob: -1.2877414226531982
    3. '"""' → logprob: -2.5377414226531982
    4. '\n' → logprob: -3.5377414226531982
    5. '```' → logprob: -4.662741184234619
    6. '"' → logprob: -4.662741184234619
    7. '""' → logprob: -5.412741184234619
    8. '"\' → logprob: -6.037741184234619
    9. '\' → logprob: -6.287741184234619
    10. '"""

' → logprob: -7.162741184234619

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14252908527851105
    2. '"""' → logprob: -3.142529010772705
    3. ' ' → logprob: -3.767529010772705
    4. '```' → logprob: -4.017529010772705
    5. '"""
' → logprob: -4.642529010772705
    6. ' 
' → logprob: -4.767529010772705
    7. '\n' → logprob: -5.142529010772705
    8. ' """
' → logprob: -5.267529010772705
    9. ' """' → logprob: -5.267529010772705
    10. '"' → logprob: -5.642529010772705

Token 56: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17091447114944458
    2. '\n' → logprob: -2.7959144115448
    3. '"""
' → logprob: -4.045914649963379
    4. '```' → logprob: -4.045914649963379
    5. ' 
' → logprob: -4.545914649963379
    6. ' ' → logprob: -4.670914649963379
    7. '
' → logprob: -4.670914649963379
    8. '"""' → logprob: -5.045914649963379
    9. '    
' → logprob: -5.295914649963379
    10. 'n' → logprob: -5.420914649963379

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2698868215084076
    2. ',' → logprob: -2.1448867321014404
    3. '   ' → logprob: -3.0198867321014404
    4. ' :' → logprob: -3.3948867321014404
    5. 's' → logprob: -4.1448869705200195
    6. '):' → logprob: -4.8948869705200195
    7. '[' → logprob: -5.0198869705200195
    8. '```' → logprob: -6.3948869705200195
    9. 'def' → logprob: -6.6448869705200195
    10. ')' → logprob: -7.1448869705200195

Token 58: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8814095258712769
    2. ' r' → logprob: -1.1314095258712769
    3. '   ' → logprob: -1.8814095258712769
    4. ' ' → logprob: -2.8814096450805664
    5. '    ' → logprob: -3.1314096450805664
    6. '```' → logprob: -5.631409645080566
    7. ')' → logprob: -6.131409645080566
    8. 'n' → logprob: -6.881409645080566
    9. ' )' → logprob: -6.881409645080566
    10. ''' → logprob: -7.631409645080566

Token 59: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.13954724371433258
    2. ' r' → logprob: -2.139547348022461
    3. '   ' → logprob: -5.014547348022461
    4. 'x' → logprob: -5.639547348022461
    5. '       ' → logprob: -6.889547348022461
    6. ' x' → logprob: -7.139547348022461
    7. '    ' → logprob: -8.139547348022461
    8. 'self' → logprob: -9.639547348022461
    9. '```' → logprob: -9.889547348022461
    10. '	r' → logprob: -10.389547348022461

Token 60: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3200792074203491
    2. ':' → logprob: -1.4450792074203491
    3. ' (' → logprob: -3.5700793266296387
    4. '<|end|>' → logprob: -5.945079326629639
    5. '):' → logprob: -6.570079326629639
    6. ':int' → logprob: -6.820079326629639
    7. ' :' → logprob: -6.945079326629639
    8. '(int' → logprob: -7.070079326629639
    9. '   ' → logprob: -7.070079326629639
    10. '  ' → logprob: -7.695079326629639

Token 61: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2389373779296875
    2. ' float' → logprob: -1.7389373779296875
    3. 'int' → logprob: -3.3639373779296875
    4. ' int' → logprob: -6.3639373779296875
    5. ')' → logprob: -8.613937377929688
    6. '   ' → logprob: -8.613937377929688
    7. '):' → logprob: -9.988937377929688
    8. '       ' → logprob: -10.363937377929688
    9. ',float' → logprob: -10.738937377929688
    10. '(float' → logprob: -11.863937377929688

Token 62: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11343168467283249
    2. '):' → logprob: -2.238431692123413
    3. ',' → logprob: -8.113431930541992
    4. '   ' → logprob: -9.238431930541992
    5. '),' → logprob: -9.363431930541992
    6. '):
' → logprob: -9.613431930541992
    7. ' )' → logprob: -11.113431930541992
    8. ' ' → logprob: -11.738431930541992
    9. '```' → logprob: -11.863431930541992
    10. '<|end|>' → logprob: -12.363431930541992

Token 63: ' T' (ID: 353)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.4207044839859009
    2. ' La' → logprob: -2.4207043647766113
    3. ')' → logprob: -2.7957043647766113
    4. ' facteur' → logprob: -2.9207043647766113
    5. ' Le' → logprob: -3.5457043647766113
    6. '<|end|>' → logprob: -3.9207043647766113
    7. ' coefficient' → logprob: -4.045704364776611
    8. ' T' → logprob: -4.670704364776611
    9. ' la' → logprob: -5.045704364776611
    10. ' the' → logprob: -5.170704364776611

Token 64: 'aux' (ID: 5454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43213215470314026
    2. 'r' → logprob: -1.3071321249008179
    3. 'e' → logprob: -3.6821322441101074
    4. ' )' → logprob: -3.9321322441101074
    5. 'ype' → logprob: -4.182132244110107
    6. ' r' → logprob: -5.682132244110107
    7. 'é' → logprob: -5.807132244110107
    8. 'o' → logprob: -6.307132244110107
    9. 'élé' → logprob: -6.432132244110107
    10. ' ' → logprob: -6.557132244110107

Token 65: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8458749651908875
    2. ' de' → logprob: -0.8458749651908875
    3. '_' → logprob: -2.7208750247955322
    4. '_r' → logprob: -4.345874786376953
    5. '_de' → logprob: -4.595874786376953
    6. '   ' → logprob: -4.720874786376953
    7. ' ' → logprob: -5.095874786376953
    8. ' )' → logprob: -5.345874786376953
    9. ',' → logprob: -5.470874786376953
    10. ' d' → logprob: -5.470874786376953

Token 66: ' croissance' (ID: 72157)
  Prédit: ' croissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' croissance' → logprob: -0.711198627948761
    2. 'cro' → logprob: -1.0861985683441162
    3. ' reproduction' → logprob: -1.8361985683441162
    4. 're' → logprob: -5.336198806762695
    5. 'r' → logprob: -6.086198806762695
    6. 'ré' → logprob: -6.211198806762695
    7. ' multiplication' → logprob: -7.836198806762695
    8. ' cro' → logprob: -7.961198806762695
    9. 'population' → logprob: -7.961198806762695
    10. ' Cro' → logprob: -8.211198806762695

Token 67: ' multiplic' (ID: 67929)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5959271788597107
    2. ')' → logprob: -1.3459272384643555
    3. '   ' → logprob: -1.9709272384643555
    4. '```' → logprob: -3.5959272384643555
    5. '
' → logprob: -4.4709272384643555
    6. ',
' → logprob: -5.8459272384643555
    7. ')
' → logprob: -7.0959272384643555
    8. '       ' → logprob: -7.0959272384643555
    9. ' ,' → logprob: -7.3459272384643555
    10. '),' → logprob: -7.3459272384643555

Token 68: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.12090720236301422
    2. 'e' → logprob: -3.4959073066711426
    3. 'f' → logprob: -3.4959073066711426
    4. 'a' → logprob: -3.9959073066711426
    5. 'at' → logprob: -4.370907306671143
    6. 'ateur' → logprob: -5.245907306671143
    7. 'eur' → logprob: -5.620907306671143
    8. 't' → logprob: -5.870907306671143
    9. 'ef' → logprob: -6.120907306671143
    10. 'if' → logprob: -6.745907306671143

Token 69: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033024344593286514
    2. ',' → logprob: -4.158024311065674
    3. '<|end|>' → logprob: -4.783024311065674
    4. '   ' → logprob: -5.533024311065674
    5. '```' → logprob: -6.158024311065674
    6. '),' → logprob: -7.158024311065674
    7. '):' → logprob: -7.783024311065674
    8. '<|end|>' → logprob: -8.533024787902832
    9. 's' → logprob: -8.658024787902832
    10. ' )' → logprob: -8.783024787902832

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.901081383228302
    2. ')' → logprob: -1.2760813236236572
    3. ',' → logprob: -1.7760813236236572
    4. '```' → logprob: -2.6510813236236572
    5. ',
' → logprob: -4.776081562042236
    6. '   
' → logprob: -5.026081562042236
    7. 'r' → logprob: -5.276081562042236
    8. ')
' → logprob: -5.276081562042236
    9. '    
' → logprob: -5.276081562042236
    10. 'n' → logprob: -5.401081562042236

Token 71: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5793151259422302
    2. ' d' → logprob: -0.8293151259422302
    3. '   ' → logprob: -6.079315185546875
    4. '       ' → logprob: -7.454315185546875
    5. '    ' → logprob: -8.704315185546875
    6. ' ' → logprob: -8.704315185546875
    7. ' ' → logprob: -9.329315185546875
    8. '	d' → logprob: -10.704315185546875
    9. '  ' → logprob: -10.954315185546875
    10. '```' → logprob: -11.704315185546875

Token 72: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0032377210445702076
    2. '(int' → logprob: -5.753237724304199
    3. ' ' → logprob: -10.3782377243042
    4. '  ' → logprob: -12.0032377243042
    5. ':' → logprob: -12.2532377243042
    6. '   ' → logprob: -12.2532377243042
    7. '<|end|>' → logprob: -12.5032377243042
    8. '```' → logprob: -12.7532377243042
    9. ' ' → logprob: -13.0032377243042
    10. ')' → logprob: -13.7532377243042

Token 73: 'int' (ID: 491)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4741698205471039
    2. 'int' → logprob: -0.9741698503494263
    3. '(int' → logprob: -9.724169731140137
    4. '=int' → logprob: -11.849169731140137
    5. '<int' → logprob: -12.099169731140137
    6. ')' → logprob: -12.099169731140137
    7. ':int' → logprob: -12.474169731140137
    8. ',int' → logprob: -12.724169731140137
    9. '[int' → logprob: -13.224169731140137
    10. ' )' → logprob: -13.474169731140137

Token 74: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025956344325095415
    2. ')' → logprob: -6.1275954246521
    3. ' ):' → logprob: -8.377595901489258
    4. ':' → logprob: -9.252595901489258
    5. '):
' → logprob: -10.252595901489258
    6. '   ' → logprob: -10.377595901489258
    7. '<|end|>' → logprob: -12.127595901489258
    8. ',' → logprob: -12.752595901489258
    9. ' :' → logprob: -13.252595901489258
    10. '):

' → logprob: -13.252595901489258

Token 75: ' Vale' (ID: 55242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3676641285419464
    2. ' facteur' → logprob: -1.867664098739624
    3. '  ' → logprob: -3.867664098739624
    4. 'd' → logprob: -3.867664098739624
    5. '<|end|>' → logprob: -4.242664337158203
    6. ' espace' → logprob: -4.742664337158203
    7. ' d' → logprob: -4.867664337158203
    8. ' constante' → logprob: -5.117664337158203
    9. ' valeur' → logprob: -5.180164337158203
    10. 's' → logprob: -5.555164337158203

Token 76: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.02935698628425598
    2. 'f' → logprob: -3.7793569564819336
    3. 'r' → logprob: -5.904356956481934
    4. 'c' → logprob: -6.029356956481934
    5. 'or' → logprob: -9.654356956481934
    6. 'm' → logprob: -9.654356956481934
    7. '   ' → logprob: -9.904356956481934
    8. 'e' → logprob: -10.029356956481934
    9. 'ance' → logprob: -10.029356956481934
    10. 'urée' → logprob: -10.029356956481934

Token 77: ' sou' (ID: 4069)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22294937074184418
    2. ' à' → logprob: -1.8479493856430054
    3. ' initial' → logprob: -4.222949504852295
    4. ' a' → logprob: -4.972949504852295
    5. ' d' → logprob: -5.347949504852295
    6. 'de' → logprob: -5.722949504852295
    7. ' ' → logprob: -6.222949504852295
    8. '  ' → logprob: -6.472949504852295
    9. 'd' → logprob: -6.722949504852295
    10. '   ' → logprob: -7.097949504852295

Token 78: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0323772206902504
    2. 'str' → logprob: -3.782377243041992
    3. 'stract' → logprob: -5.407377243041992
    4. 'straction' → logprob: -5.782377243041992
    5. 'st' → logprob: -7.282377243041992
    6. 's' → logprob: -8.282377243041992
    7. 'p' → logprob: -8.407377243041992
    8. 'tr' → logprob: -8.532377243041992
    9. 'r' → logprob: -10.407377243041992
    10. 't' → logprob: -10.657377243041992

Token 79: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.011815526522696018
    2. 'it' → logprob: -4.761815547943115
    3. 'ct' → logprob: -6.886815547943115
    4. ' ite' → logprob: -7.511815547943115
    5. 'cte' → logprob: -7.636815547943115
    6. '   ' → logprob: -7.886815547943115
    7. '
' → logprob: -8.386815071105957
    8. ' it' → logprob: -10.011815071105957
    9. 'ire' → logprob: -10.261815071105957
    10. 'ited' → logprob: -10.386815071105957

Token 80: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44279611110687256
    2. '.' → logprob: -1.9427961111068726
    3. ')' → logprob: -2.442796230316162
    4. '):
' → logprob: -3.192796230316162
    5. '       ' → logprob: -3.942796230316162
    6. ' à' → logprob: -4.317796230316162
    7. ')
' → logprob: -4.817796230316162
    8. '```' → logprob: -4.942796230316162
    9. ',' → logprob: -5.067796230316162
    10. '):' → logprob: -5.192796230316162

Token 81: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.14091235399246216
    2. ' x' → logprob: -2.6409122943878174
    3. 'x' → logprob: -3.1409122943878174
    4. ' l' → logprob: -5.6409125328063965
    5. ' ' → logprob: -5.7659125328063965
    6. 'r' → logprob: -5.7659125328063965
    7. ' each' → logprob: -6.0159125328063965
    8. 'l' → logprob: -6.6409125328063965
    9. 'cha' → logprob: -7.5159125328063965
    10. '```' → logprob: -7.5159125328063965

Token 82: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.027535242959856987
    2. ' x' → logprob: -4.402535438537598
    3. 'it' → logprob: -5.402535438537598
    4. ' ' → logprob: -5.652535438537598
    5. ' iteration' → logprob: -6.027535438537598
    6. ' iter' → logprob: -6.527535438537598
    7. 'x' → logprob: -7.027535438537598
    8. ' ' → logprob: -8.027535438537598
    9. 'iteration' → logprob: -8.402535438537598
    10. ' étape' → logprob: -8.777535438537598

Token 83: 'ération' (ID: 24977)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.040546100586652756
    2. 'ér' → logprob: -3.665546178817749
    3. 'ération' → logprob: -4.91554594039917
    4. '   ' → logprob: -5.41554594039917
    5. 'e' → logprob: -7.54054594039917
    6. '	' → logprob: -8.040546417236328
    7. ' ' → logprob: -8.290546417236328
    8. '       ' → logprob: -8.540546417236328
    9. 'éra' → logprob: -8.915546417236328
    10. '  ' → logprob: -9.290546417236328

Token 84: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27068740129470825
    2. ')' → logprob: -1.6456873416900635
    3. '):' → logprob: -4.395687580108643
    4. ',' → logprob: -4.770687580108643
    5. '):
' → logprob: -5.145687580108643
    6. ')
' → logprob: -5.270687580108643
    7. '```' → logprob: -5.270687580108643
    8. '
' → logprob: -6.020687580108643
    9. '       ' → logprob: -6.270687580108643
    10. ' ' → logprob: -6.270687580108643

Token 85: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028052295092493296
    2. '):' → logprob: -6.502805233001709
    3. ' )' → logprob: -8.00280475616455
    4. ' ' → logprob: -8.50280475616455
    5. '   ' → logprob: -8.62780475616455
    6. ')
' → logprob: -8.75280475616455
    7. '):
' → logprob: -9.00280475616455
    8. 'x' → logprob: -9.12780475616455
    9. ').' → logprob: -10.00280475616455
    10. ',' → logprob: -10.37780475616455

Token 86: 'éc' (ID: 5675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008551103062927723
    2. ' )' → logprob: -5.633551120758057
    3. 'e' → logprob: -6.133551120758057
    4. ' ' → logprob: -7.008551120758057
    5. '):' → logprob: -7.383551120758057
    6. ',' → logprob: -7.883551120758057
    7. 'u' → logprob: -8.258550643920898
    8. '*' → logprob: -8.883550643920898
    9. 'é' → logprob: -9.383550643920898
    10. '-' → logprob: -9.633550643920898

Token 87: 'ro' (ID: 298)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009957239963114262
    2. 'u' → logprob: -6.134957313537598
    3. 'ré' → logprob: -6.884957313537598
    4. 'e' → logprob: -7.009957313537598
    5. 'rée' → logprob: -7.259957313537598
    6. 'ro' → logprob: -7.384957313537598
    7. 're' → logprob: -7.634957313537598
    8. ' r' → logprob: -7.759957313537598
    9. 'rement' → logprob: -7.759957313537598
    10. '   ' → logprob: -7.884957313537598

Token 88: 'issance' (ID: 17968)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.48621201515197754
    2. 'p' → logprob: -1.4862120151519775
    3. 'n' → logprob: -2.7362120151519775
    4. 'u' → logprob: -3.4862120151519775
    5. ')' → logprob: -3.9862120151519775
    6. 'r' → logprob: -4.736211776733398
    7. 'i' → logprob: -5.236211776733398
    8. '}' → logprob: -5.361211776733398
    9. 'mp' → logprob: -5.361211776733398
    10. 's' → logprob: -6.423711776733398

Token 89: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003357846988365054
    2. '   ' → logprob: -6.628357887268066
    3. '):' → logprob: -7.253357887268066
    4. ').' → logprob: -7.378357887268066
    5. '):
' → logprob: -7.753357887268066
    6. ')
' → logprob: -9.503357887268066
    7. ' ' → logprob: -9.753357887268066
    8. ',' → logprob: -10.503357887268066
    9. ' )' → logprob: -10.503357887268066
    10. '.' → logprob: -11.253357887268066

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039877116680145264
    2. '```' → logprob: -4.664876937866211
    3. '       ' → logprob: -5.039876937866211
    4. '
' → logprob: -5.039876937866211
    5. 'n' → logprob: -5.664876937866211
    6. ')' → logprob: -5.789876937866211
    7. '    
' → logprob: -6.039876937866211
    8. '"""
' → logprob: -6.289876937866211
    9. '\n' → logprob: -7.539876937866211
    10. 'x' → logprob: -7.539876937866211

Token 91: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.663751482963562
    2. 'x' (adapté à ' x') → logprob: -0.913751482963562
    3. ' ' → logprob: -3.1637516021728516
    4. '   ' → logprob: -3.2887516021728516
    5. '    ' → logprob: -6.038751602172852
    6. ' ' → logprob: -7.288751602172852
    7. ' 
' → logprob: -7.538751602172852
    8. '```' → logprob: -8.538751602172852
    9. 'n' → logprob: -8.663751602172852
    10. '       ' → logprob: -8.913751602172852

Token 92: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8690949082374573
    2. ' (' → logprob: -1.2440948486328125
    3. ' ' → logprob: -2.4940948486328125
    4. ':' → logprob: -2.7440948486328125
    5. ' ):' → logprob: -2.8690948486328125
    6. ',' → logprob: -3.3690948486328125
    7. '_initial' → logprob: -4.2440948486328125
    8. ')' → logprob: -4.7440948486328125
    9. ' :' → logprob: -4.8690948486328125
    10. '  ' → logprob: -4.9940948486328125

Token 93: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1596500426530838
    2. ' )' → logprob: -2.5346500873565674
    3. 'int' → logprob: -2.9096500873565674
    4. '):' → logprob: -5.034649848937988
    5. ' int' → logprob: -5.409649848937988
    6. ' ):' → logprob: -6.534649848937988
    7. ':int' → logprob: -7.909649848937988
    8. ' ' → logprob: -8.034649848937988
    9. ',' → logprob: -8.409649848937988
    10. ':' → logprob: -8.784649848937988

Token 94: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20183175802230835
    2. ')' → logprob: -1.7018318176269531
    3. ':' → logprob: -8.076831817626953
    4. ' ):' → logprob: -9.826831817626953
    5. '):
' → logprob: -10.576831817626953
    6. ',' → logprob: -11.076831817626953
    7. ' ' → logprob: -12.076831817626953
    8. ' )' → logprob: -12.951831817626953
    9. ' ' → logprob: -13.701831817626953
    10. '=' → logprob: -14.826831817626953

Token 95: ' Vale' (ID: 55242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011350893415510654
    2. ' population' → logprob: -5.761351108551025
    3. ' Vale' → logprob: -6.136351108551025
    4. '   ' → logprob: -6.761351108551025
    5. ' valeur' → logprob: -6.886351108551025
    6. '  ' → logprob: -7.511351108551025
    7. '  ' → logprob: -7.886351108551025
    8. ' Population' → logprob: -8.011350631713867
    9. ' x' → logprob: -8.261350631713867
    10. ' La' → logprob: -8.511350631713867

Token 96: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.09071493148803711
    2. 'u' → logprob: -2.465714931488037
    3. 'r' → logprob: -6.715714931488037
    4. ' ' → logprob: -9.215715408325195
    5. '
' → logprob: -9.590715408325195
    6. '   ' → logprob: -9.840715408325195
    7. 'l' → logprob: -10.215715408325195
    8. ' u' → logprob: -10.465715408325195
    9. '   
' → logprob: -10.465715408325195
    10. 'n' → logprob: -10.590715408325195

Token 97: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7075245380401611
    2. ' initial' → logprob: -1.7075245380401611
    3. '_initial' → logprob: -1.9575245380401611
    4. '_' → logprob: -1.9575245380401611
    5. ' _' → logprob: -4.082524299621582
    6. ' de' → logprob: -4.207524299621582
    7. '   ' → logprob: -5.832524299621582
    8. '  ' → logprob: -6.207524299621582
    9. '_init' → logprob: -6.707524299621582
    10. '_INITIAL' → logprob: -6.832524299621582

Token 98: 'e' (ID: 68)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5467301607131958
    2. '_' → logprob: -1.2967301607131958
    3. '   ' → logprob: -2.1717300415039062
    4. ' _' → logprob: -5.171730041503906
    5. ' de' → logprob: -5.171730041503906
    6. ')' → logprob: -5.546730041503906
    7. '  ' → logprob: -5.546730041503906
    8. 'al' → logprob: -5.796730041503906
    9. '_initial' → logprob: -5.921730041503906
    10. ' initial' → logprob: -6.171730041503906

Token 99: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9283394813537598
    2. '):
' → logprob: -0.9283394813537598
    3. '):' → logprob: -2.0533394813537598
    4. '   ' → logprob: -3.0533394813537598
    5. ' ):
' → logprob: -4.80333948135376
    6. ' initial' → logprob: -4.92833948135376
    7. '_initial' → logprob: -5.05333948135376
    8. ' )' → logprob: -5.30333948135376
    9. ' ):' → logprob: -5.67833948135376
    10. 'initial' → logprob: -6.80333948135376

Token 100: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8369316458702087
    2. ' x' → logprob: -1.7119317054748535
    3. ' la' → logprob: -1.8369317054748535
    4. 'l' → logprob: -2.4619317054748535
    5. ' ' → logprob: -2.7119317054748535
    6. 'x' → logprob: -3.2119317054748535
    7. ' population' → logprob: -3.9619317054748535
    8. ' départ' → logprob: -4.5869317054748535
    9. 'population' → logprob: -5.8369317054748535
    10. ' ' → logprob: -6.3369317054748535

Token 101: ' population' (ID: 11540)
  Prédit: ' population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' population' → logprob: -0.10375067591667175
    2. ' ' → logprob: -2.978750705718994
    3. 'population' → logprob: -3.103750705718994
    4. ' populations' → logprob: -7.603750705718994
    5. ' variable' → logprob: -7.603750705718994
    6. ' x' → logprob: -7.728750705718994
    7. 'x' → logprob: -7.728750705718994
    8. 'pop' → logprob: -8.478750228881836
    9. ' ' → logprob: -8.478750228881836
    10. ' popula' → logprob: -8.728750228881836

Token 102: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.263126403093338
    2. '):' → logprob: -2.2631263732910156
    3. '):
' → logprob: -2.7631263732910156
    4. '   ' → logprob: -2.7631263732910156
    5. ')
' → logprob: -7.513126373291016
    6. '):

' → logprob: -9.013126373291016
    7. ' )' → logprob: -9.138126373291016
    8. '):
' → logprob: -9.513126373291016
    9. ' ' → logprob: -9.638126373291016
    10. ',' → logprob: -10.138126373291016

Token 103: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4968014061450958
    2. ' population' → logprob: -0.9968013763427734
    3. ' la' → logprob: -4.621801376342773
    4. ' l' → logprob: -4.871801376342773
    5. 'population' → logprob: -6.246801376342773
    6. '   ' → logprob: -7.621801376342773
    7. '  ' → logprob: -7.746801376342773
    8. ' initial' → logprob: -7.746801376342773
    9. ' ' → logprob: -8.621801376342773
    10. 'l' → logprob: -8.621801376342773

Token 104: ' param' (ID: 3802)
  Prédit: ' population'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' population' → logprob: -0.20554959774017334
    2. ' ' → logprob: -1.8305495977401733
    3. 'population' → logprob: -4.080549716949463
    4. 'x' → logprob: -5.955549716949463
    5. ' x' → logprob: -6.205549716949463
    6. ' param' → logprob: -6.955549716949463
    7. ' espace' → logprob: -7.455549716949463
    8. ' variable' → logprob: -7.705549716949463
    9. '  ' → logprob: -8.205549240112305
    10. '   ' → logprob: -8.330549240112305

Token 105: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.003975462168455124
    2. 'è' → logprob: -5.7539753913879395
    3. 'ètres' → logprob: -7.3789753913879395
    4. 'etre' → logprob: -9.753975868225098
    5. 'èt' → logprob: -10.128975868225098
    6. 'e' → logprob: -11.003975868225098
    7. ' è' → logprob: -11.378975868225098
    8. 'et' → logprob: -11.753975868225098
    9. 'être' → logprob: -12.003975868225098
    10. '	' → logprob: -12.253975868225098

Token 106: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6249798536300659
    2. ' ' → logprob: -2.1249799728393555
    3. ' )' → logprob: -2.1249799728393555
    4. ' ):
' → logprob: -2.6249799728393555
    5. ' initial' → logprob: -3.6249799728393555
    6. '):
' → logprob: -3.7499799728393555
    7. '   ' → logprob: -3.8749799728393555
    8. ' )
' → logprob: -3.8749799728393555
    9. ' 
' → logprob: -4.8749799728393555
    10. ' ).' → logprob: -4.9999799728393555

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17997516691684723
    2. ')' → logprob: -2.3049752712249756
    3. '"""
' → logprob: -3.8049752712249756
    4. '
' → logprob: -4.4299750328063965
    5. '"""' → logprob: -4.5549750328063965
    6. ' ' → logprob: -5.6799750328063965
    7. '  
' → logprob: -5.6799750328063965
    8. '"' → logprob: -5.8049750328063965
    9. ')
' → logprob: -5.8049750328063965
    10. ' 
' → logprob: -6.1799750328063965

Token 108: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8052005171775818
    2. ')' → logprob: -1.9302005767822266
    3. '   ' → logprob: -2.0552005767822266
    4. ' 
' → logprob: -2.1802005767822266
    5. '\n' → logprob: -3.5552005767822266
    6. ')
' → logprob: -3.5552005767822266
    7. '  
' → logprob: -3.5552005767822266
    8. '):
' → logprob: -3.8052005767822266
    9. '"""
' (adapté à ' """
') → logprob: -3.9302005767822266
    10. '    
' → logprob: -4.305200576782227

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16534912586212158
    2. ' 
' → logprob: -2.040349006652832
    3. ' for' → logprob: -4.415349006652832
    4. '\n' → logprob: -6.040349006652832
    5. '    
' → logprob: -6.290349006652832
    6. '   ' → logprob: -6.415349006652832
    7. '\' → logprob: -6.665349006652832
    8. 'n' → logprob: -6.790349006652832
    9. '' → logprob: -7.665349006652832
    10. '```' → logprob: -8.290349006652832

Token 110: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6301407814025879
    2. ' for' → logprob: -1.380140781402588
    3. 'for' (adapté à ' for') → logprob: -1.630140781402588
    4. 'n' → logprob: -4.755140781402588
    5. '```' → logprob: -5.630140781402588
    6. '   ' → logprob: -6.255140781402588
    7. ' 
' → logprob: -6.380140781402588
    8. '\n' → logprob: -6.630140781402588
    9. '    
' → logprob: -7.130140781402588
    10. 'x' → logprob: -7.380140781402588

Token 111: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02636927366256714
    2. ' i' → logprob: -3.651369333267212
    3. ' _' → logprob: -10.151369094848633
    4. '_' → logprob: -11.151369094848633
    5. ' ‌' → logprob: -12.526369094848633
    6. '  ' → logprob: -12.901369094848633
    7. ' ' → logprob: -12.901369094848633
    8. ' r' → logprob: -13.026369094848633
    9. 'i' → logprob: -13.276369094848633
    10. ' x' → logprob: -14.026369094848633

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00830900575965643
    2. 'in' → logprob: -5.1333088874816895
    3. ' ' → logprob: -6.2583088874816895
    4. ' i' → logprob: -8.508309364318848
    5. '  ' → logprob: -8.633309364318848
    6. '   ' → logprob: -9.633309364318848
    7. '_' → logprob: -12.258309364318848
    8. '    ' → logprob: -12.508309364318848
    9. ',' → logprob: -13.508309364318848
    10. 'i' → logprob: -14.008309364318848

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00779187073931098
    2. 'range' → logprob: -4.882791996002197
    3. ' ' → logprob: -8.632791519165039
    4. '	range' → logprob: -12.757791519165039
    5. ' in' → logprob: -13.257791519165039
    6. ' xrange' → logprob: -13.757791519165039
    7. '(range' → logprob: -15.007791519165039
    8. ' rang' → logprob: -15.007791519165039
    9. 'rang' → logprob: -15.132791519165039
    10. ' r' → logprob: -15.382791519165039

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.506661833962426e-05
    2. ' (' → logprob: -9.37508487701416
    3. '(
' → logprob: -16.250085830688477
    4. ' ' → logprob: -18.375085830688477
    5. '10' → logprob: -18.750085830688477
    6. ')' → logprob: -18.750085830688477
    7. '```' → logprob: -20.500085830688477
    8. '   ' → logprob: -21.000085830688477
    9. '(len' → logprob: -21.000085830688477
    10. '<|end|>' → logprob: -21.000085830688477

Token 115: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.75003719329834
    3. '1' → logprob: -11.12503719329834
    4. '   ' → logprob: -13.75003719329834
    5. '0' → logprob: -16.125038146972656
    6. '```' → logprob: -17.125038146972656
    7. ')' → logprob: -17.625038146972656
    8. '       ' → logprob: -18.500038146972656
    9. '	' → logprob: -19.000038146972656
    10. '(' → logprob: -19.125038146972656

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010453128488734365
    2. ')' → logprob: -7.001045227050781
    3. ' ):' → logprob: -9.626045227050781
    4. ':' → logprob: -10.126045227050781
    5. '):
' → logprob: -10.876045227050781
    6. '   ' → logprob: -12.001045227050781
    7. '+' → logprob: -13.751045227050781
    8. '():' → logprob: -14.751045227050781
    9. ',' → logprob: -15.126045227050781
    10. ' )' → logprob: -15.626045227050781

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01684664748609066
    2. 'x' → logprob: -5.266846656799316
    3. '   ' → logprob: -5.516846656799316
    4. '        
' → logprob: -6.141846656799316
    5. ' 
' → logprob: -6.641846656799316
    6. '
' → logprob: -6.891846656799316
    7. ' x' → logprob: -6.891846656799316
    8. '    
' → logprob: -7.641846656799316
    9. '<|end|>' → logprob: -7.891846656799316
    10. '    ' → logprob: -8.266846656799316

Token 118: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3888116478919983
    2. 'x' → logprob: -1.1388115882873535
    3. '       ' → logprob: -7.5138115882873535
    4. ' ' → logprob: -7.6388115882873535
    5. '    ' → logprob: -8.263812065124512
    6. ' 
' → logprob: -8.263812065124512
    7. '        ' → logprob: -8.888812065124512
    8. '   ' → logprob: -9.138812065124512
    9. '        
' → logprob: -9.513812065124512
    10. ' ' → logprob: -11.513812065124512

Token 119: ' À' (ID: 27643)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3944697380065918
    2. 'x' → logprob: -1.7694697380065918
    3. ' ' → logprob: -2.519469738006592
    4. '    ' → logprob: -2.769469738006592
    5. '   ' → logprob: -5.644469738006592
    6. '        ' → logprob: -5.769469738006592
    7. ' new' → logprob: -6.519469738006592
    8. '_' → logprob: -6.769469738006592
    9. ' ' → logprob: -7.019469738006592
    10. 'new' → logprob: -7.519469738006592

Token 120: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.54259192943573
    2. ' ' → logprob: -1.16759192943573
    3. '    ' → logprob: -3.7925920486450195
    4. ' ' → logprob: -3.9175920486450195
    5. 'x' → logprob: -4.0425920486450195
    6. '  ' → logprob: -4.5425920486450195
    7. '   ' → logprob: -4.9175920486450195
    8. ' x' → logprob: -5.1675920486450195
    9. '_new' → logprob: -5.4175920486450195
    10. 'n' → logprob: -5.7925920486450195

Token 121: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.7440621852874756
    2. '_' → logprob: -1.8690621852874756
    3. ' ' → logprob: -2.3690621852874756
    4. 'iteration' → logprob: -2.3690621852874756
    5. ' iteration' → logprob: -2.3690621852874756
    6. '_iteration' → logprob: -3.8690621852874756
    7. 'it' → logprob: -3.8690621852874756
    8. ' iter' → logprob: -4.244062423706055
    9. ' étape' → logprob: -4.869062423706055
    10. ' _' → logprob: -5.119062423706055

Token 122: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.12325751781463623
    2. 'er' → logprob: -2.248257637023926
    3. 'ér' → logprob: -5.748257637023926
    4. 'ration' → logprob: -5.998257637023926
    5. '   ' → logprob: -6.498257637023926
    6. 'é' → logprob: -6.998257637023926
    7. 'éra' → logprob: -8.123257637023926
    8. '       ' → logprob: -8.373257637023926
    9. 'ation' → logprob: -8.623257637023926
    10. 'étation' → logprob: -8.623257637023926

Token 123: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3061254024505615
    2. ',' → logprob: -2.1811254024505615
    3. ' x' → logprob: -3.3061254024505615
    4. 'x' → logprob: -3.9311254024505615
    5. '   ' → logprob: -4.056125640869141
    6. '<|end|>' → logprob: -4.181125640869141
    7. '        
' → logprob: -4.306125640869141
    8. '        ' → logprob: -4.556125640869141
    9. '
' → logprob: -4.806125640869141
    10. ':' → logprob: -5.306125640869141

Token 124: ' on' (ID: 402)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.021246690303087234
    2. 'x' → logprob: -4.271246910095215
    3. ' ' → logprob: -5.271246910095215
    4. ' ' → logprob: -7.021246910095215
    5. '       ' → logprob: -7.896246910095215
    6. ' 
' → logprob: -8.646246910095215
    7. '    ' → logprob: -8.896246910095215
    8. '        ' → logprob: -9.021246910095215
    9. '<|end|>' → logprob: -9.521246910095215
    10. '   ' → logprob: -9.896246910095215

Token 125: ' applique' (ID: 180579)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2937784492969513
    2. 'x' → logprob: -1.793778419494629
    3. '    ' → logprob: -3.543778419494629
    4. '   ' → logprob: -3.793778419494629
    5. ' update' → logprob: -4.043778419494629
    6. ' ' → logprob: -5.418778419494629
    7. '       ' → logprob: -5.418778419494629
    8. ' met' → logprob: -6.293778419494629
    9. 'update' → logprob: -6.418778419494629
    10. '        ' → logprob: -6.418778419494629

Token 126: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0771346315741539
    2. 'x' → logprob: -3.077134609222412
    3. ' ' → logprob: -3.702134609222412
    4. ' ' → logprob: -7.202134609222412
    5. '    ' → logprob: -7.327134609222412
    6. '<|end|>' → logprob: -8.20213508605957
    7. 'r' → logprob: -8.32713508605957
    8. ' r' → logprob: -8.57713508605957
    9. ' =' → logprob: -8.82713508605957
    10. '   ' → logprob: -8.95213508605957

Token 127: ' relation' (ID: 18075)
  Prédit: ' formule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' formule' → logprob: -0.901513397693634
    2. ' update' → logprob: -1.9015133380889893
    3. ' formula' → logprob: -2.4015133380889893
    4. 'r' → logprob: -2.6515133380889893
    5. '   ' → logprob: -2.7765133380889893
    6. 'x' → logprob: -2.7765133380889893
    7. ' x' → logprob: -3.1515133380889893
    8. ' r' → logprob: -3.5265133380889893
    9. ' ' → logprob: -3.9015133380889893
    10. ' mise' → logprob: -4.276513576507568

Token 128: ' de' (ID: 334)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8316477537155151
    2. ' =' → logprob: -1.5816477537155151
    3. 'x' → logprob: -1.7066477537155151
    4. ' ' → logprob: -2.3316478729248047
    5. '   ' → logprob: -3.8316478729248047
    6. '    ' → logprob: -4.331647872924805
    7. '=' → logprob: -4.331647872924805
    8. ':' → logprob: -5.081647872924805
    9. '       ' → logprob: -5.581647872924805
    10. '    
' → logprob: -5.581647872924805

Token 129: ' ré' (ID: 3146)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5926302075386047
    2. ' ré' → logprob: -0.9676302075386047
    3. ' réc' → logprob: -3.84263014793396
    4. 'ré' → logprob: -3.96763014793396
    5. ' r' → logprob: -4.717630386352539
    6. ' recurrence' → logprob: -5.092630386352539
    7. 'x' → logprob: -5.967630386352539
    8. ' mise' → logprob: -6.592630386352539
    9. '

' → logprob: -7.092630386352539
    10. '	r' → logprob: -7.092630386352539

Token 130: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.009270774200558662
    2. 'c' → logprob: -4.884270668029785
    3. 'cc' → logprob: -7.634270668029785
    4. 'current' → logprob: -8.009270668029785
    5. 'cup' → logprob: -8.009270668029785
    6. 'cur' → logprob: -8.884270668029785
    7. 'urrence' → logprob: -8.884270668029785
    8. '

' → logprob: -9.509270668029785
    9. '_curr' → logprob: -10.134270668029785
    10. '_c' → logprob: -10.509270668029785

Token 131: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.001444045570679009
    2. 'e' → logprob: -6.751443862915039
    3. '   ' → logprob: -9.626443862915039
    4. 'ece' → logprob: -10.126443862915039
    5. 'ente' → logprob: -10.501443862915039
    6. 'en' → logprob: -11.126443862915039
    7. 'rence' → logprob: -11.251443862915039
    8. 'er' → logprob: -11.251443862915039
    9. 'erce' → logprob: -11.251443862915039
    10. 'ent' → logprob: -11.626443862915039

Token 132: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14286167919635773
    2. '        
' → logprob: -3.1428616046905518
    3. '
' → logprob: -3.7678616046905518
    4. 'x' → logprob: -4.267861843109131
    5. ' x' → logprob: -4.767861843109131
    6. ' ' → logprob: -5.017861843109131
    7. ':' → logprob: -5.017861843109131
    8. ',' → logprob: -5.267861843109131
    9. '   ' → logprob: -5.267861843109131
    10. '        ' → logprob: -5.392861843109131

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6146031022071838
    2. ' x' → logprob: -1.364603042602539
    3. 'x' → logprob: -2.114603042602539
    4. ' 
' → logprob: -3.114603042602539
    5. '        
' → logprob: -4.364603042602539
    6. '   ' → logprob: -5.114603042602539
    7. ' ' → logprob: -5.239603042602539
    8. '
' → logprob: -5.489603042602539
    9. '     
' → logprob: -6.114603042602539
    10. '    
' → logprob: -6.114603042602539

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.632801353931427
    2. ' x' → logprob: -0.757801353931427
    3. '       ' → logprob: -9.382801055908203
    4. '   ' → logprob: -10.132801055908203
    5. ' 
' → logprob: -10.507801055908203
    6. '	x' → logprob: -11.257801055908203
    7. '    ' → logprob: -11.757801055908203
    8. '        
' → logprob: -11.882801055908203
    9. ' ' → logprob: -12.007801055908203
    10. '
' → logprob: -12.382801055908203

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020566295832395554
    2. '=' → logprob: -3.89556622505188
    3. ' ' → logprob: -11.6455659866333
    4. '_' → logprob: -11.8955659866333
    5. ' *=' → logprob: -11.8955659866333
    6. ' ' → logprob: -14.1455659866333
    7. '_new' → logprob: -14.7705659866333
    8. ' =
' → logprob: -15.1455659866333
    9. '	' → logprob: -15.8955659866333
    10. '_=' → logprob: -16.145566940307617

Token 136: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.10038512200117111
    2. 'r' → logprob: -2.3503851890563965
    3. ' ' → logprob: -8.725384712219238
    4. ' ' → logprob: -11.850384712219238
    5. ' (' → logprob: -13.100384712219238
    6. '	r' → logprob: -13.225384712219238
    7. '(r' → logprob: -13.850384712219238
    8. 'x' → logprob: -13.975384712219238
    9. ' x' → logprob: -14.225384712219238
    10. '(' → logprob: -14.600384712219238

Token 137: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0009223000961355865
    2. '*' → logprob: -7.000922203063965
    3. ' ' → logprob: -11.875922203063965
    4. ' ' → logprob: -12.750922203063965
    5. '*x' → logprob: -14.250922203063965
    6. ' **' → logprob: -16.37592315673828
    7. ' x' → logprob: -17.25092315673828
    8. ' *
' → logprob: -17.25092315673828
    9. '	' → logprob: -18.00092315673828
    10. '<|end|>' → logprob: -18.87592315673828

Token 138: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759517550468445
    2. ' x' → logprob: -0.8259517550468445
    3. ' ' → logprob: -11.45095157623291
    4. '	x' → logprob: -14.07595157623291
    5. ' ' → logprob: -14.82595157623291
    6. '<|end|>' → logprob: -16.325952529907227
    7. '(x' → logprob: -16.825952529907227
    8. ')' → logprob: -16.950952529907227
    9. '_x' → logprob: -17.200952529907227
    10. ')x' → logprob: -17.325952529907227

Token 139: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017406281549483538
    2. ' ' → logprob: -7.126740455627441
    3. '-' → logprob: -7.251740455627441
    4. ' ' → logprob: -9.001740455627441
    5. '<|end|>' → logprob: -9.251740455627441
    6. ')' → logprob: -13.626740455627441
    7. ' -
' → logprob: -14.001740455627441
    8. ' −' → logprob: -14.001740455627441
    9. ' –' → logprob: -14.376740455627441
    10. '	' → logprob: -14.626740455627441

Token 140: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011126109398901463
    2. 'd' → logprob: -4.5111260414123535
    3. ' ' → logprob: -10.011126518249512
    4. ' ' → logprob: -10.761126518249512
    5. '	d' → logprob: -11.386126518249512
    6. ' 
' → logprob: -15.386126518249512
    7. 's' → logprob: -15.886126518249512
    8. '<|end|>' → logprob: -16.261125564575195
    9. '_d' → logprob: -16.886125564575195
    10. ' д' → logprob: -17.386125564575195

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044097770005464554
    2. '       ' → logprob: -3.169097661972046
    3. '        
' → logprob: -7.419097900390625
    4. '
' → logprob: -8.669097900390625
    5. '  
' → logprob: -9.044097900390625
    6. '    
' → logprob: -9.669097900390625
    7. ' 
' → logprob: -9.669097900390625
    8. '\n' → logprob: -10.294097900390625
    9. 'print' → logprob: -11.044097900390625
    10. '   ' → logprob: -11.919097900390625

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12823259830474854
    2. '
' → logprob: -2.128232479095459
    3. '        
' → logprob: -7.253232479095459
    4. '\n' → logprob: -8.878232955932617
    5. '  
' → logprob: -9.003232955932617
    6. '    
' → logprob: -9.378232955932617
    7. '   ' → logprob: -9.753232955932617
    8. 'print' → logprob: -9.753232955932617
    9. ' 
' → logprob: -10.003232955932617
    10. ' print' → logprob: -10.753232955932617

Token 143: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0183173418045044
    2. ' print' → logprob: -1.1433173418045044
    3. 'print' → logprob: -1.1433173418045044
    4. '   ' → logprob: -6.768317222595215
    5. '    ' → logprob: -10.393317222595215
    6. ' ' → logprob: -11.018317222595215
    7. '```' → logprob: -11.143317222595215
    8. '
' → logprob: -11.393317222595215
    9. '        ' → logprob: -11.393317222595215
    10. '      ' → logprob: -11.643317222595215

Token 144: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03401678800582886
    2. 'print' → logprob: -3.4090168476104736
    3. '   ' → logprob: -8.284016609191895
    4. '    ' → logprob: -9.659016609191895
    5. '       ' → logprob: -10.159016609191895
    6. ' ' → logprob: -12.409016609191895
    7. ' ' → logprob: -12.909016609191895
    8. '```' → logprob: -13.284016609191895
    9. 'pr' → logprob: -13.659016609191895
    10. '	print' → logprob: -13.784016609191895

Token 145: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.04284810647368431
    2. 'icher' → logprob: -3.4178481101989746
    3. '   ' → logprob: -5.667848110198975
    4. 'ic' → logprob: -6.292848110198975
    5. '       ' → logprob: -7.042848110198975
    6. 'ichage' → logprob: -7.167848110198975
    7. 'i' → logprob: -7.292848110198975
    8. 'ich' → logprob: -8.042847633361816
    9. '#' → logprob: -8.292847633361816
    10. '```' → logprob: -8.542847633361816

Token 146: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26277440786361694
    2. '(x' → logprob: -1.6377744674682617
    3. '(f' → logprob: -3.6377744674682617
    4. '("' → logprob: -5.387774467468262
    5. ' (' → logprob: -6.137774467468262
    6. '('' → logprob: -6.512774467468262
    7. '       ' → logprob: -7.387774467468262
    8. '   ' → logprob: -8.262774467468262
    9. 'r' → logprob: -8.762774467468262
    10. '(
' → logprob: -8.762774467468262

Token 147: ' valeur' (ID: 41664)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.055358365178108215
    2. ' f' → logprob: -4.180358409881592
    3. ' valeur' → logprob: -4.180358409881592
    4. 'x' → logprob: -4.430358409881592
    5. ' ' → logprob: -4.930358409881592
    6. ' résultat' → logprob: -7.305358409881592
    7. '   ' → logprob: -7.430358409881592
    8. '(x' → logprob: -7.930358409881592
    9. ' ' → logprob: -7.930358409881592
    10. ' "' → logprob: -8.055357933044434

Token 148: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20692099630832672
    2. ' x' → logprob: -2.331921100616455
    3. '(x' → logprob: -3.956921100616455
    4. ' (' → logprob: -4.206921100616455
    5. '   ' → logprob: -4.206921100616455
    6. 'x' → logprob: -4.581921100616455
    7. '(' → logprob: -5.081921100616455
    8. '        ' → logprob: -5.331921100616455
    9. ' de' → logprob: -5.831921100616455
    10. '    ' → logprob: -5.831921100616455

Token 149: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.017707107588648796
    2. 'ant' → logprob: -4.142706871032715
    3. 'a' → logprob: -7.017706871032715
    4. 'r' → logprob: -7.392706871032715
    5. 'an' → logprob: -9.642706871032715
    6. '   ' → logprob: -9.767706871032715
    7. ' ante' → logprob: -11.517706871032715
    8. ' ' → logprob: -11.892706871032715
    9. '	' → logprob: -12.892706871032715
    10. '  ' → logprob: -13.142706871032715

Token 150: ' après' (ID: 16460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10836826264858246
    2. 'print' → logprob: -3.108368158340454
    3. ' print' → logprob: -3.108368158340454
    4. ',' → logprob: -4.733368396759033
    5. '(' → logprob: -6.858368396759033
    6. '   ' → logprob: -6.983368396759033
    7. ' ,' → logprob: -8.108367919921875
    8. ' x' → logprob: -8.108367919921875
    9. '        
' → logprob: -8.108367919921875
    10. '        ' → logprob: -8.233367919921875

Token 151: ' mise' (ID: 25868)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.33471643924713135
    2. ' la' → logprob: -2.584716320037842
    3. ' l' → logprob: -2.959716320037842
    4. ' x' → logprob: -2.959716320037842
    5. ' iteration' → logprob: -3.959716320037842
    6. ' ' → logprob: -4.084716320037842
    7. 'l' → logprob: -4.459716320037842
    8. '   ' → logprob: -4.709716320037842
    9. '    ' → logprob: -4.709716320037842
    10. ' each' → logprob: -4.959716320037842

Token 152: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.004402582533657551
    2. 'à' → logprob: -5.5044026374816895
    3. '-à' → logprob: -8.379402160644531
    4. '   ' → logprob: -9.754402160644531
    5. ''à' → logprob: -11.254402160644531
    6. ' a' → logprob: -11.629402160644531
    7. 'À' → logprob: -12.629402160644531
    8. ' ' → logprob: -12.754402160644531
    9. 'a' → logprob: -12.754402160644531
    10. '’à' → logprob: -13.379402160644531

Token 153: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.013582143932580948
    2. '_j' → logprob: -5.263582229614258
    3. 'jou' → logprob: -5.513582229614258
    4. '   ' → logprob: -6.138582229614258
    5. '```' → logprob: -7.513582229614258
    6. ' ' → logprob: -7.763582229614258
    7. ' jour' → logprob: -8.013582229614258
    8. '  ' → logprob: -8.763582229614258
    9. ' ' → logprob: -9.138582229614258
    10. 'j' → logprob: -9.263582229614258

Token 154: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001586866332218051
    2. '        
' → logprob: -7.5015869140625
    3. 'print' → logprob: -7.7515869140625
    4. ' print' → logprob: -7.8765869140625
    5. '
' → logprob: -9.1265869140625
    6. ' 
' → logprob: -10.8765869140625
    7. '   ' → logprob: -10.8765869140625
    8. ',' → logprob: -11.3765869140625
    9. '  
' → logprob: -11.3765869140625
    10. '(' → logprob: -11.5015869140625

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004905993700958788
    2. ' print' → logprob: -8.250490188598633
    3. 'print' → logprob: -8.875490188598633
    4. '        
' → logprob: -9.625490188598633
    5. '   ' → logprob: -11.375490188598633
    6. '      ' → logprob: -12.875490188598633
    7. ' 
' → logprob: -13.500490188598633
    8. '    ' → logprob: -13.750490188598633
    9. '    
' → logprob: -14.000490188598633
    10. '     ' → logprob: -14.000490188598633

Token 156: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0059424289502203465
    2. ' print' → logprob: -5.130942344665527
    3. '       ' → logprob: -11.380942344665527
    4. 'pr' → logprob: -13.755942344665527
    5. '   ' → logprob: -14.255942344665527
    6. '```' → logprob: -14.630942344665527
    7. 'pri' → logprob: -16.505943298339844
    8. 'prin' → logprob: -17.005943298339844
    9. '    ' → logprob: -17.380943298339844
    10. 'x' → logprob: -17.380943298339844

Token 157: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014204643666744232
    2. '(x' → logprob: -4.264204502105713
    3. '(f' → logprob: -10.889204978942871
    4. '("("' → logprob: -11.639204978942871
    5. '()' → logprob: -12.514204978942871
    6. '(
' → logprob: -12.514204978942871
    7. '('' → logprob: -12.639204978942871
    8. '((' → logprob: -13.514204978942871
    9. '("' → logprob: -14.639204978942871
    10. '(X' → logprob: -15.139204978942871

Token 158: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '))' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.500001907348633
    7. ' ' → logprob: -17.875001907348633
    8. ')}' → logprob: -17.875001907348633
    9. '')' → logprob: -18.125001907348633
    10. ')**' → logprob: -18.625001907348633

Token 159: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07314867526292801
    2. '_' → logprob: -3.198148727416992
    3. '__' → logprob: -3.823148727416992
    4. ' ' → logprob: -5.323148727416992
    5. ' _' → logprob: -6.323148727416992
    6. ' ' → logprob: -7.323148727416992
    7. '_name' → logprob: -8.073148727416992
    8. ' ' → logprob: -10.573148727416992
    9. '_space' → logprob: -10.823148727416992
    10. '  ' → logprob: -11.073148727416992

Token 161: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20138993859291077
    2. ' ==' → logprob: -2.201390027999878
    3. ' __' → logprob: -2.826390027999878
    4. '==' → logprob: -4.826389789581299
    5. 'name' → logprob: -5.826389789581299
    6. '_' → logprob: -7.826389789581299
    7. '_name' → logprob: -7.826389789581299
    8. '_NAME' → logprob: -9.326390266418457
    9. ' _' → logprob: -9.451390266418457
    10. ' =' → logprob: -9.451390266418457

Token 162: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4974866644479334e-05
    2. '==' → logprob: -11.875015258789062
    3. '_' → logprob: -12.750015258789062
    4. ' __' → logprob: -13.000015258789062
    5. ' ==' → logprob: -13.500015258789062
    6. '__.__' → logprob: -15.125015258789062
    7. '__
' → logprob: -15.250015258789062
    8. '___' → logprob: -15.250015258789062
    9. '=="' → logprob: -15.375015258789062
    10. '____' → logprob: -16.000015258789062

Token 163: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07737705856561661
    2. '__' → logprob: -2.7023770809173584
    3. '==' → logprob: -4.952376842498779
    4. '=="' → logprob: -8.202377319335938
    5. ' =' → logprob: -11.077377319335938
    6. ' =="' → logprob: -11.202377319335938
    7. ' __' → logprob: -11.577377319335938
    8. '.__' → logprob: -12.327377319335938
    9. ' ' → logprob: -12.327377319335938
    10. '_' → logprob: -12.452377319335938

Token 164: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02034391462802887
    2. ''' → logprob: -4.020343780517578
    3. ' "__' → logprob: -6.270343780517578
    4. ' "' → logprob: -8.145343780517578
    5. ' '__' → logprob: -11.895343780517578
    6. ' '' → logprob: -14.020343780517578
    7. '"user' → logprob: -14.020343780517578
    8. '__' → logprob: -14.270343780517578
    9. '"name' → logprob: -15.520343780517578
    10. '"I' → logprob: -16.270343780517578

Token 165: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9504606825648807e-05
    2. '__' → logprob: -11.250019073486328
    3. 'name' → logprob: -12.125019073486328
    4. '_main' → logprob: -14.125019073486328
    5. '"' → logprob: -16.125019073486328
    6. ' main' → logprob: -16.250019073486328
    7. 'ma' → logprob: -18.500019073486328
    8. '	main' → logprob: -19.375019073486328
    9. '_' → logprob: -20.000019073486328
    10. 'mai' → logprob: -20.125019073486328

Token 166: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31327077746391296
    2. '__":
' → logprob: -1.3132708072662354
    3. '__':
' → logprob: -11.938270568847656
    4. '_' → logprob: -13.438270568847656
    5. '__["' → logprob: -14.938270568847656
    6. '__("' → logprob: -15.438270568847656
    7. '__:' → logprob: -15.688270568847656
    8. '__",' → logprob: -16.438270568847656
    9. '"' → logprob: -16.563270568847656
    10. '__
' → logprob: -17.063270568847656

Token 167: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025749877095222473
    2. ':
' → logprob: -3.775749921798706
    3. ' :' → logprob: -6.775749683380127
    4. '   ' → logprob: -7.275749683380127
    5. ' :
' → logprob: -7.900749683380127
    6. '<|end|>' → logprob: -9.150750160217285
    7. '():
' → logprob: -10.525750160217285
    8. ':

' → logprob: -10.775750160217285
    9. '    
' → logprob: -11.025750160217285
    10. '<|end|>' → logprob: -11.275750160217285

Token 168: ' #' (ID: 1069)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07761313766241074
    2. 'r' → logprob: -3.077613115310669
    3. ' update' → logprob: -3.577613115310669
    4. 'update' → logprob: -8.20261287689209
    5. ' import' → logprob: -9.20261287689209
    6. '   ' → logprob: -9.20261287689209
    7. ' #' → logprob: -9.82761287689209
    8. ' ' → logprob: -10.45261287689209
    9. ' print' → logprob: -11.07761287689209
    10. ' x' → logprob: -11.07761287689209

Token 169: ' Lit' (ID: 45595)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5672229528427124
    2. ' r' → logprob: -0.9422229528427124
    3. ' update' → logprob: -3.442223072052002
    4. ' x' → logprob: -5.817223072052002
    5. '#' → logprob: -6.067223072052002
    6. 'update' → logprob: -6.067223072052002
    7. ' #' → logprob: -6.692223072052002
    8. 'x' → logprob: -7.192223072052002
    9. '   ' → logprob: -7.942223072052002
    10. ' initial' → logprob: -8.192222595214844

Token 170: ' trois' (ID: 25564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7977787852287292
    2. '()' → logprob: -0.9227787852287292
    3. 'r' → logprob: -2.422778844833374
    4. '_' → logprob: -3.672778844833374
    5. ' (' → logprob: -4.547778606414795
    6. ' ()' → logprob: -5.297778606414795
    7. 'e' → logprob: -5.797778606414795
    8. 'import' → logprob: -5.797778606414795
    9. ' =' → logprob: -6.047778606414795
    10. ' ' → logprob: -6.047778606414795

Token 171: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04686666652560234
    2. ' valeurs' → logprob: -3.9218666553497314
    3. ' integers' → logprob: -4.1718668937683105
    4. ' ent' → logprob: -6.1718668937683105
    5. '_' → logprob: -6.5468668937683105
    6. ' espaces' → logprob: -6.7968668937683105
    7. ' des' → logprob: -7.0468668937683105
    8. ' nombres' → logprob: -7.0468668937683105
    9. ' val' → logprob: -7.2968668937683105
    10. ' variables' → logprob: -7.5468668937683105

Token 172: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00716417795047164
    2. 'ier' → logprob: -6.007164001464844
    3. 'ières' → logprob: -6.007164001464844
    4. 'r' → logprob: -6.507164001464844
    5. 'ers' → logprob: -8.132164001464844
    6. 't' → logprob: -9.257164001464844
    7. 'rée' → logprob: -9.382164001464844
    8. 'er' → logprob: -9.507164001464844
    9. 'rees' → logprob: -10.257164001464844
    10. 'riers' → logprob: -10.507164001464844

Token 173: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.677534282207489
    2. '()' → logprob: -1.4275343418121338
    3. ' r' → logprob: -2.052534341812134
    4. ',' → logprob: -2.677534341812134
    5. 's' → logprob: -3.927534341812134
    6. '(r' → logprob: -4.302534103393555
    7. '   ' → logprob: -4.427534103393555
    8. ' =' → logprob: -6.052534103393555
    9. '(' → logprob: -6.302534103393555
    10. ',r' → logprob: -6.427534103393555

Token 174: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17752261459827423
    2. ' l' → logprob: -2.052522659301758
    3. ' input' → logprob: -4.177522659301758
    4. 'input' → logprob: -4.927522659301758
    5. 's' → logprob: -6.052522659301758
    6. ' ' → logprob: -6.177522659301758
    7. 'une' → logprob: -6.552522659301758
    8. ' la' → logprob: -7.052522659301758
    9. 'entrée' → logprob: -7.052522659301758
    10. 't' → logprob: -7.552522659301758

Token 175: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.16671711206436157
    2. ''utilisateur' → logprob: -2.166717052459717
    3. 'entrée' → logprob: -3.916717052459717
    4. 'input' → logprob: -4.291717052459717
    5. 'a' → logprob: -6.166717052459717
    6. 'es' → logprob: -6.416717052459717
    7. 'e' → logprob: -8.166717529296875
    8. ''' → logprob: -8.166717529296875
    9. '’utilisateur' → logprob: -8.541717529296875
    10. '’entrée' → logprob: -8.666717529296875

Token 176: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6054093837738037
    2. 's' → logprob: -2.2304093837738037
    3. 'r' → logprob: -2.6054093837738037
    4. '()' → logprob: -2.7304093837738037
    5. ' ,' → logprob: -2.9804093837738037
    6. ' ' → logprob: -3.2304093837738037
    7. ' utilisateur' → logprob: -3.3554093837738037
    8. 'user' → logprob: -4.105409622192383
    9. ' standard' → logprob: -4.480409622192383
    10. ':' → logprob: -4.480409622192383

Token 177: ' correspondant' (ID: 146058)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4582514464855194
    2. 'r' → logprob: -1.7082514762878418
    3. '   ' → logprob: -2.458251476287842
    4. ' r' → logprob: -2.833251476287842
    5. '    
' → logprob: -4.833251476287842
    6. ',r' → logprob: -4.833251476287842
    7. 's' → logprob: -5.083251476287842
    8. ' ,' → logprob: -5.333251476287842
    9. ':' → logprob: -5.708251476287842
    10. '(r' → logprob: -5.958251476287842

Token 178: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19030264019966125
    2. ' aux' → logprob: -2.440302610397339
    3. ' to' → logprob: -3.815302610397339
    4. 'à' → logprob: -3.940302610397339
    5. '   ' → logprob: -4.440302848815918
    6. ' au' → logprob: -4.565302848815918
    7. ' ' → logprob: -5.190302848815918
    8. 'au' → logprob: -5.690302848815918
    9. 'aux' → logprob: -5.815302848815918
    10. ' a' → logprob: -5.940302848815918

Token 179: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.11710435897111893
    2. 'r' → logprob: -2.2421042919158936
    3. ' la' → logprob: -5.867104530334473
    4. ' les' → logprob: -6.867104530334473
    5. ' ' → logprob: -9.117104530334473
    6. ' le' → logprob: -9.992104530334473
    7. 'les' → logprob: -10.117104530334473
    8. '	r' → logprob: -10.492104530334473
    9. ',' → logprob: -10.742104530334473
    10. ' râ' → logprob: -10.992104530334473

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027718624914996326
    2. ' ,' → logprob: -8.500277519226074
    3. ',r' → logprob: -10.000277519226074
    4. 'r' → logprob: -11.250277519226074
    5. ',d' → logprob: -12.875277519226074
    6. '   ' → logprob: -13.000277519226074
    7. ' =' → logprob: -13.375277519226074
    8. ',
' → logprob: -13.875277519226074
    9. 's' → logprob: -14.500277519226074
    10. 'd' → logprob: -14.500277519226074

Token 181: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3491162955760956
    2. 'd' → logprob: -1.224116325378418
    3. ',' → logprob: -7.849116325378418
    4. ' ' → logprob: -8.849116325378418
    5. ' ,' → logprob: -9.599116325378418
    6. ' ' → logprob: -10.349116325378418
    7. ',d' → logprob: -10.599116325378418
    8. '  ' → logprob: -12.224116325378418
    9. '	d' → logprob: -12.599116325378418
    10. 's' → logprob: -13.849116325378418

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003673940955195576
    2. ' ,' → logprob: -8.375367164611816
    3. ' et' → logprob: -9.250367164611816
    4. 'et' → logprob: -10.750367164611816
    5. ' =' → logprob: -11.625367164611816
    6. ' ' → logprob: -12.875367164611816
    7. ' and' → logprob: -13.125367164611816
    8. 's' → logprob: -13.750367164611816
    9. 't' → logprob: -14.375367164611816
    10. '<|end|>' → logprob: -14.625367164611816

Token 183: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3106089234352112
    2. ' x' → logprob: -1.5606088638305664
    3. 'et' → logprob: -3.1856088638305664
    4. ' et' → logprob: -4.810608863830566
    5. ' ' → logprob: -5.560608863830566
    6. ' and' → logprob: -5.810608863830566
    7. 'and' → logprob: -7.560608863830566
    8. ',' → logprob: -10.185608863830566
    9. ' ' → logprob: -10.685608863830566
    10. ' ,' → logprob: -11.185608863830566

Token 184: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0388374924659729
    2. ',' → logprob: -4.288837432861328
    3. '=' → logprob: -4.413837432861328
    4. 'r' → logprob: -5.038837432861328
    5. '   ' → logprob: -5.663837432861328
    6. '
' → logprob: -7.413837432861328
    7. '=r' → logprob: -7.663837432861328
    8. '    
' → logprob: -7.913837432861328
    9. ',r' → logprob: -8.663837432861328
    10. ' r' → logprob: -8.913837432861328

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6978331804275513
    2. 'r' → logprob: -1.3228331804275513
    3. ' r' → logprob: -2.1978330612182617
    4. ',' → logprob: -2.8228330612182617
    5. ' =' → logprob: -3.6978330612182617
    6. ':' → logprob: -4.572833061218262
    7. '=' → logprob: -5.072833061218262
    8. '    
' → logprob: -5.697833061218262
    9. ',r' → logprob: -5.697833061218262
    10. '(r' → logprob: -5.947833061218262

Token 186: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04421410709619522
    2. 'r' (adapté à ' r') → logprob: -3.1692140102386475
    3. ' import' → logprob: -7.169214248657227
    4. 'import' → logprob: -8.169214248657227
    5. '   ' → logprob: -9.794214248657227
    6. 's' → logprob: -10.544214248657227
    7. ' values' → logprob: -10.794214248657227
    8. ' line' → logprob: -11.419214248657227
    9. '	r' → logprob: -11.794214248657227
    10. ' 
' → logprob: -12.294214248657227

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ' =' → logprob: -10.125075340270996
    3. ',d' → logprob: -10.500075340270996
    4. '=' → logprob: -12.250075340270996
    5. ' ,' → logprob: -13.500075340270996
    6. ',r' → logprob: -13.625075340270996
    7. 's' → logprob: -15.625075340270996
    8. ',int' → logprob: -15.750075340270996
    9. ',s' → logprob: -16.125076293945312
    10. 'd' → logprob: -16.750076293945312

Token 188: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.014398312196135521
    2. 'd' → logprob: -4.264398097991943
    3. ' ' → logprob: -8.514398574829102
    4. ' ' → logprob: -10.639398574829102
    5. ' ' → logprob: -13.139398574829102
    6. '	d' → logprob: -13.389398574829102
    7. '<|end|>' → logprob: -13.639398574829102
    8. '  ' → logprob: -13.639398574829102
    9. '_d' → logprob: -13.889398574829102
    10. ' 
' → logprob: -14.389398574829102

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',x' → logprob: -16.000019073486328
    4. ' =' → logprob: -16.875019073486328
    5. '=' → logprob: -17.875019073486328
    6. '_,' → logprob: -18.750019073486328
    7. ',user' → logprob: -18.750019073486328
    8. '‌,' → logprob: -18.875019073486328
    9. '<|end|>' → logprob: -18.875019073486328
    10. ',input' → logprob: -19.000019073486328

Token 190: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.005242533516138792
    2. 'x' → logprob: -5.255242347717285
    3. ' ' → logprob: -11.755242347717285
    4. '	x' → logprob: -14.880242347717285
    5. ' ' → logprob: -15.005242347717285
    6. '  ' → logprob: -16.8802433013916
    7. '<|end|>' → logprob: -17.0052433013916
    8. ' and' → logprob: -17.1302433013916
    9. ',' → logprob: -17.1302433013916
    10. ' =' → logprob: -17.2552433013916

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489412695169449
    2. '=' → logprob: -2.929894208908081
    3. ',' → logprob: -12.05489444732666
    4. '=input' → logprob: -12.30489444732666
    5. ' ' → logprob: -14.67989444732666
    6. '<|end|>' → logprob: -15.17989444732666
    7. '=int' → logprob: -15.55489444732666
    8. ')' → logprob: -16.179893493652344
    9. ' =
' → logprob: -16.804893493652344
    10. '=user' → logprob: -16.867393493652344

Token 192: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016111087054014206
    2. 'map' → logprob: -4.141110897064209
    3. '[' → logprob: -10.391111373901367
    4. ' [' → logprob: -11.016111373901367
    5. ' ' → logprob: -11.516111373901367
    6. ' ' → logprob: -11.516111373901367
    7. '	map' → logprob: -12.641111373901367
    8. ' list' → logprob: -13.391111373901367
    9. '(map' → logprob: -13.766111373901367
    10. ' m' → logprob: -14.016111373901367

Token 193: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02979215234518051
    2. '(' → logprob: -3.529792070388794
    3. '(input' → logprob: -10.779791831970215
    4. 'int' → logprob: -11.654791831970215
    5. '<int' → logprob: -12.404791831970215
    6. '(
' → logprob: -12.404791831970215
    7. '[int' → logprob: -13.404791831970215
    8. ' int' → logprob: -14.654791831970215
    9. '(str' → logprob: -14.654791831970215
    10. ' (' → logprob: -14.779791831970215

Token 194: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.049068622291088104
    2. 'input' → logprob: -3.6740686893463135
    3. ',input' → logprob: -4.674068450927734
    4. '(' → logprob: -4.924068450927734
    5. ')' → logprob: -5.549068450927734
    6. ',' → logprob: -6.424068450927734
    7. ' input' → logprob: -8.174068450927734
    8. '=input' → logprob: -10.549068450927734
    9. ')(' → logprob: -10.674068450927734
    10. '   ' → logprob: -11.174068450927734

Token 195: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759468078613281
    2. ' input' → logprob: -0.8259468078613281
    3. ')' → logprob: -12.700946807861328
    4. ' ' → logprob: -13.450946807861328
    5. '(input' → logprob: -13.825946807861328
    6. '   ' → logprob: -14.450946807861328
    7. ',input' → logprob: -14.450946807861328
    8. '	input' → logprob: -15.075946807861328
    9. '=input' → logprob: -15.825946807861328
    10. '<input' → logprob: -15.825946807861328

Token 196: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1080467781284824e-05
    2. '()' → logprob: -10.125041007995605
    3. ' ().' → logprob: -14.125041007995605
    4. '(' → logprob: -15.875041007995605
    5. '("").' → logprob: -17.375041961669922
    6. '()
' → logprob: -17.500041961669922
    7. '("' → logprob: -18.375041961669922
    8. '())' → logprob: -18.500041961669922
    9. ')' → logprob: -18.500041961669922
    10. '('').' → logprob: -19.000041961669922

Token 197: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007118358626030385
    2. 'strip' → logprob: -7.250711917877197
    3. 'rstrip' → logprob: -13.875711441040039
    4. ' split' → logprob: -14.125711441040039
    5. '(split' → logprob: -16.00071144104004
    6. '().' → logprob: -16.12571144104004
    7. 'spl' → logprob: -17.00071144104004
    8. ')' → logprob: -18.37571144104004
    9. 's' → logprob: -18.50071144104004
    10. '()' → logprob: -19.12571144104004

Token 198: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.033452268689870834
    2. '()))' → logprob: -3.533452272415161
    3. ')' → logprob: -6.158452033996582
    4. '()' → logprob: -7.033452033996582
    5. '))' → logprob: -7.283452033996582
    6. '(' → logprob: -12.408452033996582
    7. '()))
' → logprob: -13.283452033996582
    8. '())
' → logprob: -13.658452033996582
    9. ' ())' → logprob: -13.658452033996582
    10. '()));' → logprob: -14.533452033996582

Token 199: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05157431215047836
    2. 'update' → logprob: -3.301574230194092
    3. '   ' → logprob: -4.801574230194092
    4. ' update' → logprob: -5.551574230194092
    5. '    
' → logprob: -7.426574230194092
    6. '(update' → logprob: -8.17657470703125
    7. '
' → logprob: -8.80157470703125
    8. '  
' → logprob: -9.05157470703125
    9. '	update' → logprob: -9.42657470703125
    10. '.update' → logprob: -9.92657470703125

Token 200: ' #' (ID: 1069)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.018429918214678764
    2. ' update' → logprob: -4.018429756164551
    3. '
' → logprob: -8.51842975616455
    4. '   ' → logprob: -9.76842975616455
    5. '(update' → logprob: -11.76842975616455
    6. '.update' → logprob: -12.01842975616455
    7. '	update' → logprob: -12.51842975616455
    8. '    
' → logprob: -12.64342975616455
    9. ' 
' → logprob: -14.26842975616455
    10. '_update' → logprob: -14.39342975616455

Token 201: ' Lance' (ID: 99667)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.011048289015889168
    2. ' update' → logprob: -4.511048316955566
    3. '(update' → logprob: -15.261048316955566
    4. '.update' → logprob: -16.63604736328125
    5. '	update' → logprob: -17.51104736328125
    6. '   ' → logprob: -17.51104736328125
    7. 'print' → logprob: -17.63604736328125
    8. ' ' → logprob: -19.01104736328125
    9. 'updates' → logprob: -19.51104736328125
    10. '```' → logprob: -19.51104736328125

Token 202: ' la' (ID: 557)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.08932066708803177
    2. '(update' → logprob: -2.714320659637451
    3. 'update' → logprob: -3.964320659637451
    4. '(' → logprob: -9.33932113647461
    5. ' la' → logprob: -9.58932113647461
    6. '	update' → logprob: -10.83932113647461
    7. ' l' → logprob: -11.46432113647461
    8. ' the' → logprob: -11.46432113647461
    9. '_update' → logprob: -12.33932113647461
    10. '(
' → logprob: -12.83932113647461

Token 203: ' mise' (ID: 25868)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.02324780821800232
    2. ' update' → logprob: -3.773247718811035
    3. '(update' → logprob: -13.898247718811035
    4. 'function' → logprob: -14.898247718811035
    5. '.update' → logprob: -15.273247718811035
    6. 'up' → logprob: -15.273247718811035
    7. 'upd' → logprob: -15.773247718811035
    8. 'def' → logprob: -15.898247718811035
    9. '	update' → logprob: -15.898247718811035
    10. '_update' → logprob: -17.02324867248535

Token 204: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.09180967509746552
    2. ' à' → logprob: -2.7168097496032715
    3. '_a' → logprob: -4.0918097496032715
    4. '_' → logprob: -5.4668097496032715
    5. '_update' → logprob: -8.216809272766113
    6. 'a' → logprob: -8.966809272766113
    7. 'À' → logprob: -9.591809272766113
    8. '_population' → logprob: -9.716809272766113
    9. '   ' → logprob: -9.966809272766113
    10. '-à' → logprob: -10.466809272766113

Token 205: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0005135946557857096
    2. ' jour' → logprob: -8.500514030456543
    3. 'population' → logprob: -9.375514030456543
    4. '```' → logprob: -9.375514030456543
    5. '_j' → logprob: -9.625514030456543
    6. ' ' → logprob: -10.875514030456543
    7. 'jours' → logprob: -10.875514030456543
    8. 'jou' → logprob: -11.000514030456543
    9. 'day' → logprob: -12.000514030456543
    10. 'j' → logprob: -12.750514030456543

Token 206: ' et' (ID: 859)
  Prédit: '_population'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_population' → logprob: -0.00022320532298181206
    2. 'population' → logprob: -9.250223159790039
    3. '_pop' → logprob: -10.125223159790039
    4. '_' → logprob: -10.375223159790039
    5. ' population' → logprob: -11.125223159790039
    6. 'update' → logprob: -11.250223159790039
    7. '_update' → logprob: -11.750223159790039
    8. '   ' → logprob: -12.250223159790039
    9. 'Population' → logprob: -12.750223159790039
    10. 'pop' → logprob: -12.750223159790039

Token 207: ' l' (ID: 305)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.01186241302639246
    2. 'update' → logprob: -4.761862277984619
    3. ' print' → logprob: -5.886862277984619
    4. 'print' → logprob: -7.886862277984619
    5. ' display' → logprob: -10.636862754821777
    6. ' afficher' → logprob: -10.636862754821777
    7. ' affiche' → logprob: -10.636862754821777
    8. '(update' → logprob: -11.886862754821777
    9. '	update' → logprob: -13.261862754821777
    10. 'display' → logprob: -13.261862754821777

Token 208: ''aff' (ID: 53397)
  Prédit: ''aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.525100588798523
    2. 'print' → logprob: -1.650100588798523
    3. 'update' → logprob: -2.1501007080078125
    4. 'a' → logprob: -3.1501007080078125
    5. ''impression' → logprob: -4.1501007080078125
    6. ''appel' → logprob: -4.1501007080078125
    7. 'aff' → logprob: -4.4001007080078125
    8. 'ancement' → logprob: -5.5251007080078125
    9. '#' → logprob: -6.1501007080078125
    10. ''application' → logprob: -6.7751007080078125

Token 209: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.026586489751935005
    2. 'iche' → logprob: -3.6515865325927734
    3. 'ic' → logprob: -8.401586532592773
    4. 'ich' → logprob: -9.901586532592773
    5. '   ' → logprob: -11.901586532592773
    6. 'icher' → logprob: -13.151586532592773
    7. '#' → logprob: -14.401586532592773
    8. '**' → logprob: -14.901586532592773
    9. '`' → logprob: -15.401586532592773
    10. '```' → logprob: -15.526586532592773

Token 210: ' des' (ID: 731)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.051504120230674744
    2. '(update' → logprob: -3.176504135131836
    3. ' update' → logprob: -4.926504135131836
    4. '.update' → logprob: -7.676504135131836
    5. '   ' → logprob: -7.926504135131836
    6. '_update' → logprob: -8.926504135131836
    7. 'def' → logprob: -9.301504135131836
    8. '(' → logprob: -9.801504135131836
    9. ':update' → logprob: -10.676504135131836
    10. 'populate' → logprob: -11.176504135131836

Token 211: ' valeurs' (ID: 73668)
  Prédit: ' populations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' populations' → logprob: -0.7110634446144104
    2. ' population' → logprob: -1.4610633850097656
    3. 'population' → logprob: -1.5860633850097656
    4. 'val' → logprob: -3.0860633850097656
    5. 'pop' → logprob: -3.8360633850097656
    6. 'x' → logprob: -6.211063385009766
    7. ' valeurs' → logprob: -6.211063385009766
    8. '_population' → logprob: -8.586063385009766
    9. ' val' → logprob: -8.711063385009766
    10. ' résultats' → logprob: -8.961063385009766

Token 212: '
' (ID: 198)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.17784008383750916
    2. '   ' → logprob: -2.052839994430542
    3. ' update' → logprob: -3.802839994430542
    4. '(update' → logprob: -4.927840232849121
    5. '
' → logprob: -5.427840232849121
    6. '.update' → logprob: -8.177840232849121
    7. '	update' → logprob: -8.927840232849121
    8. '    
' → logprob: -9.177840232849121
    9. ':update' → logprob: -10.802840232849121
    10. '_update' → logprob: -11.177840232849121

Token 213: '   ' (ID: 271)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.1654023677110672
    2. '   ' → logprob: -1.9154024124145508
    3. ' update' → logprob: -5.290402412414551
    4. '(update' → logprob: -9.66540241241455
    5. '.update' → logprob: -10.29040241241455
    6. '	update' → logprob: -10.79040241241455
    7. '_update' → logprob: -12.91540241241455
    8. ':update' → logprob: -13.16540241241455
    9. '```' → logprob: -14.16540241241455
    10. '    
' → logprob: -14.16540241241455

Token 214: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -7.941850526549388e-06
    2. ' update' → logprob: -11.750007629394531
    3. '(update' → logprob: -22.50000762939453
    4. '.update' → logprob: -22.75000762939453
    5. '   ' → logprob: -22.75000762939453
    6. 'updated' → logprob: -23.12500762939453
    7. '	update' → logprob: -23.87500762939453
    8. ':update' → logprob: -24.50000762939453
    9. '_update' → logprob: -24.87500762939453
    10. 'up' → logprob: -25.00000762939453

Token 215: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -1.0280383548888494e-06
    2. '_pop' → logprob: -13.875000953674316
    3. '_' → logprob: -17.875001907348633
    4. ' _' → logprob: -20.750001907348633
    5. '_p' → logprob: -20.750001907348633
    6. 'Population' → logprob: -21.125001907348633
    7. 'population' → logprob: -21.125001907348633
    8. ' population' → logprob: -21.375001907348633
    9. '(pop' → logprob: -21.375001907348633
    10. '_temperature' → logprob: -21.375001907348633

Token 216: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.20141607522964478
    2. '(' → logprob: -1.701416015625
    3. '(
' → logprob: -13.326416015625
    4. ' (' → logprob: -14.076416015625
    5. '(

' → logprob: -16.076416015625
    6. '(x' → logprob: -16.201416015625
    7. '(run' → logprob: -16.451416015625
    8. '(rr' → logprob: -17.576416015625
    9. '\(' → logprob: -18.576416015625
    10. '(s' → logprob: -18.826416015625

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. ',d' → logprob: -10.125041007995605
    3. ' ,' → logprob: -14.250041007995605
    4. ',
' → logprob: -14.875041007995605
    5. 'd' → logprob: -18.250041961669922
    6. '‌,' → logprob: -19.625041961669922
    7. ',

' → logprob: -19.750041961669922
    8. '   ' → logprob: -20.125041961669922
    9. '',' → logprob: -20.125041961669922
    10. ',",' → logprob: -20.250041961669922

Token 218: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.029750484973192215
    2. 'd' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.40475082397461
    4. '	d' → logprob: -19.40475082397461
    5. ')d' → logprob: -19.40475082397461
    6. '<|end|>' → logprob: -19.65475082397461
    7. ' ' → logprob: -20.77975082397461
    8. '_d' → logprob: -20.77975082397461
    9. ',d' → logprob: -21.77975082397461
    10. ' д' → logprob: -21.90475082397461

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.79811754100956e-05
    2. ',x' → logprob: -10.625038146972656
    3. ' ,' → logprob: -11.250038146972656
    4. ',
' → logprob: -15.625038146972656
    5. ')' → logprob: -16.250038146972656
    6. ' x' → logprob: -16.375038146972656
    7. 'x' → logprob: -16.375038146972656
    8. ' ' → logprob: -18.750038146972656
    9. '```' → logprob: -19.750038146972656
    10. '‌,' → logprob: -19.875038146972656

Token 220: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01814994215965271
    2. 'x' → logprob: -4.0181498527526855
    3. ')' → logprob: -17.268150329589844
    4. ' ' → logprob: -17.393150329589844
    5. '	x' → logprob: -18.268150329589844
    6. ')x' → logprob: -18.518150329589844
    7. ' ' → logprob: -19.268150329589844
    8. '(x' → logprob: -20.268150329589844
    9. ' )' → logprob: -20.768150329589844
    10. ',x' → logprob: -21.393150329589844

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.500003814697266
    4. '())' → logprob: -16.625003814697266
    5. '()' → logprob: -17.250003814697266
    6. ')`' → logprob: -18.500003814697266
    7. '))' → logprob: -18.625003814697266
    8. '(' → logprob: -19.500003814697266
    9. ')#' → logprob: -20.000003814697266
    10. ')

' → logprob: -20.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 36.07%
Précision adaptée (1ère position): 38.36%
Précision (top 10): 67.58%
================================================================================
