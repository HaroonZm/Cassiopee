================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la fonction principale qui sera le point d'entrée du programme
def main():
    # Utilisation de la fonction input() pour demander à l'utilisateur de saisir une chaîne de caractères.
    # La chaîne obtenue est ensuite convertie en une liste de caractères avec la fonction list().
    # Par exemple, si l'utilisateur tape 'ABA', stop vaudra ['A', 'B', 'A'].
    stop = list(input())

    # Initialisation de deux variables entières, a et b, en les mettant à zéro.
    # Ces variables serviront à compter respectivement le nombre de caractères 'A' et le nombre de caractères qui ne sont pas 'A'.
    a, b = 0, 0

    # Début d'une boucle for qui va parcourir chaque élément (chaque caractère) de la liste 'stop'.
    for i in stop:
        # Condition if qui vérifie si le caractère courant 'i' est égal à la chaîne de caractère 'A'.
        # L'opérateur == sert à vérifier l'égalité entre deux valeurs.
        if 'A' == i:
            # Si la condition est vraie, c'est-à-dire si le caractère est 'A', on augmente la valeur de la variable 'a' de 1.
            a += 1
        else:
            # Si la condition est fausse, c'est-à-dire que le caractère n'est pas 'A', on augmente la valeur de la variable 'b' de 1.
            b += 1

    # Après la boucle, tous les caractères ont été analysés et les compteurs 'a' et 'b' ont été mis à jour en conséquence.

    # Vérification si les deux compteurs sont strictement supérieurs à zéro.
    # Cela revient à vérifier s'il y a au moins un 'A' ET au moins un caractère différent de 'A' dans la saisie.
    if a > 0 and b > 0:
        # Si les deux conditions sont vraies, la fonction print() affiche la chaîne de caractères 'Yes' dans la console.
        print('Yes')
    else:
        # Si au moins un des deux compteurs est à zéro, cela signifie qu'il n'y a que des 'A' ou aucun 'A' dans la saisie :
        # la fonction print() affiche alors la chaîne de caractères 'No' dans la console.
        print('No')

# Appel de la fonction main() pour lancer l'exécution du programme.
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.6203935146331787
    2. 'ition' → logprob: -0.8703935146331787
    3. 't' → logprob: -3.4953935146331787
    4. 'tion' → logprob: -5.870393753051758
    5. 'ine' → logprob: -6.245393753051758
    6. 'it' → logprob: -6.370393753051758
    7. '#' → logprob: -6.620393753051758
    8. 'i' → logprob: -6.870393753051758
    9. 'al' → logprob: -7.120393753051758
    10. 'ation' → logprob: -7.245393753051758

Token 4: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9953344464302063
    2. '_' → logprob: -1.4953343868255615
    3. ':' → logprob: -1.6203343868255615
    4. ' de' → logprob: -2.3703343868255615
    5. ' d' → logprob: -3.1203343868255615
    6. ' :' → logprob: -3.9953343868255615
    7. 's' → logprob: -3.9953343868255615
    8. ' =' → logprob: -4.120334625244141
    9. '=' → logprob: -5.370334625244141
    10. '```' → logprob: -5.870334625244141

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2610418200492859
    2. 'la' → logprob: -2.3860418796539307
    3. 'l' → logprob: -3.0110418796539307
    4. 'class' → logprob: -3.8860418796539307
    5. ' l' → logprob: -4.511041641235352
    6. 'une' → logprob: -4.511041641235352
    7. ' ' → logprob: -4.886041641235352
    8. '`' → logprob: -4.886041641235352
    9. 'classe' → logprob: -5.636041641235352
    10. 's' → logprob: -5.761041641235352

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.6497917175292969
    2. 'classe' → logprob: -0.8997917175292969
    3. 'class' → logprob: -3.399791717529297
    4. 'f' → logprob: -4.024791717529297
    5. ' ' → logprob: -5.399791717529297
    6. ' fonction' → logprob: -5.524791717529297
    7. 'function' → logprob: -6.149791717529297
    8. ' classe' → logprob: -6.524791717529297
    9. 'c' → logprob: -6.649791717529297
    10. 'fon' → logprob: -7.274791717529297

Token 7: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9240149855613708
    2. ' ' → logprob: -1.7990150451660156
    3. 's' → logprob: -1.9240150451660156
    4. 'd' → logprob: -2.5490150451660156
    5. ':' → logprob: -3.1740150451660156
    6. '_' → logprob: -3.4240150451660156
    7. '```' → logprob: -3.4240150451660156
    8. ' ' → logprob: -3.5490150451660156
    9. ' def' → logprob: -3.7990150451660156
    10. '(' → logprob: -4.174015045166016

Token 8: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0050885952077806
    2. 'd' → logprob: -5.505088806152344
    3. '\' → logprob: -7.255088806152344
    4. '```' → logprob: -8.255088806152344
    5. ':' → logprob: -10.755088806152344
    6. 'de' → logprob: -11.880088806152344
    7. '\n' → logprob: -12.380088806152344
    8. ' 
' → logprob: -12.630088806152344
    9. '``' → logprob: -13.630088806152344
    10. ':def' → logprob: -14.005088806152344

Token 9: ' sera' (ID: 15511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6147806644439697
    2. ' execute' → logprob: -1.8647806644439697
    3. ' prend' → logprob: -2.2397806644439697
    4. '_' → logprob: -2.2397806644439697
    5. 'g' → logprob: -2.4897806644439697
    6. ' sera' → logprob: -3.2397806644439697
    7. 'execute' → logprob: -3.2397806644439697
    8. 'def' → logprob: -3.6147806644439697
    9. ' prendra' → logprob: -3.6147806644439697
    10. ' permet' → logprob: -3.7397806644439697

Token 10: ' le' (ID: 505)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -1.107107162475586
    2. ' appelée' → logprob: -1.357107162475586
    3. ' exécut' → logprob: -1.357107162475586
    4. ' utilisée' → logprob: -2.857107162475586
    5. 'ex' → logprob: -3.232107162475586
    6. 'execut' → logprob: -3.482107162475586
    7. 'util' → logprob: -5.482107162475586
    8. '```' → logprob: -5.732107162475586
    9. 'app' → logprob: -5.857107162475586
    10. ' called' → logprob: -6.107107162475586

Token 11: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.024398356676101685
    2. ' point' → logprob: -3.7743983268737793
    3. 'entry' → logprob: -7.274398326873779
    4. ' entry' → logprob: -9.274398803710938
    5. 'programme' → logprob: -9.274398803710938
    6. 'entrée' → logprob: -9.399398803710938
    7. 'points' → logprob: -10.024398803710938
    8. 'p' → logprob: -10.524398803710938
    9. '```' → logprob: -10.649398803710938
    10. 'main' → logprob: -10.774398803710938

Token 12: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5369247794151306
    2. ' d' → logprob: -0.9119247794151306
    3. ' ' → logprob: -4.411924839019775
    4. '_' → logprob: -7.036924839019775
    5. '_d' → logprob: -8.286924362182617
    6. 's' → logprob: -9.786924362182617
    7. ')' → logprob: -10.161924362182617
    8. '```' → logprob: -10.286924362182617
    9. 'de' → logprob: -10.411924362182617
    10. ' de' → logprob: -10.411924362182617

Token 13: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.026607034727931023
    2. 'entrée' → logprob: -4.276607036590576
    3. ''' → logprob: -4.526607036590576
    4. ''ent' → logprob: -7.526607036590576
    5. 'e' → logprob: -8.026606559753418
    6. '’entrée' → logprob: -8.401606559753418
    7. ''ex' → logprob: -9.276606559753418
    8. '_' → logprob: -9.526606559753418
    9. ''accueil' → logprob: -10.026606559753418
    10. 'entr' → logprob: -10.151606559753418

Token 14: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3261781930923462
    2. ':' → logprob: -2.2011780738830566
    3. 'd' → logprob: -2.2011780738830566
    4. '_' → logprob: -4.326178073883057
    5. '\' → logprob: -4.451178073883057
    6. ' ' → logprob: -4.951178073883057
    7. ' de' → logprob: -4.951178073883057
    8. ' :' → logprob: -5.451178073883057
    9. '(' → logprob: -5.951178073883057
    10. 'de' → logprob: -6.201178073883057

Token 15: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.08732067048549652
    2. ' programme' → logprob: -2.837320566177368
    3. 'program' → logprob: -3.712320566177368
    4. 'script' → logprob: -8.212320327758789
    5. ' script' → logprob: -8.712320327758789
    6. ' program' → logprob: -9.087320327758789
    7. 'programma' → logprob: -11.087320327758789
    8. 'code' → logprob: -11.462320327758789
    9. 'Programme' → logprob: -12.087320327758789
    10. 'pro' → logprob: -12.087320327758789

Token 16: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13423463702201843
    2. 'def' → logprob: -2.259234666824341
    3. '\' → logprob: -4.009234428405762
    4. '```' → logprob: -6.634234428405762
    5. '
' → logprob: -7.009234428405762
    6. '\n' → logprob: -8.009234428405762
    7. ':' → logprob: -9.134234428405762
    8. ' 
' → logprob: -9.259234428405762
    9. 'de' → logprob: -9.759234428405762
    10. '#' → logprob: -9.759234428405762

Token 17: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5157884955406189
    2. '\' → logprob: -1.3907885551452637
    3. 'd' → logprob: -2.1407885551452637
    4. '\n' → logprob: -4.015788555145264
    5. '```' → logprob: -4.265788555145264
    6. '
' → logprob: -5.765788555145264
    7. ' 
' → logprob: -7.390788555145264
    8. '``' → logprob: -8.515788078308105
    9. '#' → logprob: -9.140788078308105
    10. '  
' → logprob: -9.390788078308105

Token 18: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43034783005714417
    2. '_' → logprob: -1.8053478002548218
    3. ' ' → logprob: -1.8053478002548218
    4. ' ' → logprob: -5.180347919464111
    5. ' _' → logprob: -5.680347919464111
    6. ' espace' → logprob: -5.805347919464111
    7. ' ‌' → logprob: -6.055347919464111
    8. ' principale' → logprob: -6.180347919464111
    9. '_main' → logprob: -6.930347919464111
    10. ' principal' → logprob: -7.555347919464111

Token 19: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18059462308883667
    2. '():' → logprob: -1.8055946826934814
    3. ':' → logprob: -7.930594444274902
    4. '()' → logprob: -8.305594444274902
    5. '(:' → logprob: -8.930594444274902
    6. ' ():' → logprob: -10.055594444274902
    7. ' (' → logprob: -10.430594444274902
    8. '(**' → logprob: -11.805594444274902
    9. '(
' → logprob: -11.930594444274902
    10. '(":' → logprob: -12.430594444274902

Token 20: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8983309864997864
    2. '   ' → logprob: -1.0233309268951416
    3. ' ' → logprob: -2.0233309268951416
    4. ' 
' → logprob: -3.7733309268951416
    5. '    
' → logprob: -4.023331165313721
    6. '    ' → logprob: -4.023331165313721
    7. '\n' → logprob: -4.023331165313721
    8. '
' → logprob: -5.398331165313721
    9. '(' → logprob: -5.648331165313721
    10. ':' → logprob: -5.898331165313721

Token 21: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5326074361801147
    2. 'p' → logprob: -1.6576074361801147
    3. 'pass' → logprob: -2.0326075553894043
    4. 'print' → logprob: -2.6576075553894043
    5. '   ' → logprob: -4.407607555389404
    6. ' ' → logprob: -6.407607555389404
    7. ' pass' → logprob: -6.532607555389404
    8. 'r' → logprob: -6.657607555389404
    9. '    ' → logprob: -7.032607555389404
    10. 'n' → logprob: -7.532607555389404

Token 22: ' Util' (ID: 13564)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4886009097099304
    2. 'print' → logprob: -1.7386009693145752
    3. '   ' → logprob: -2.113600969314575
    4. 'pass' → logprob: -3.863600969314575
    5. ' pass' → logprob: -4.113600730895996
    6. ' #' → logprob: -4.363600730895996
    7. '#' → logprob: -5.113600730895996
    8. ' name' → logprob: -5.238600730895996
    9. ' nom' → logprob: -5.238600730895996
    10. 'name' → logprob: -5.863600730895996

Token 23: 'isation' (ID: 6993)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.35394230484962463
    2. 'iser' → logprob: -1.2289422750473022
    3. 's' → logprob: -5.978942394256592
    4. 'isation' → logprob: -6.478942394256592
    5. 'isateur' → logprob: -7.353942394256592
    6. 'er' → logprob: -7.978942394256592
    7. 'se' → logprob: -9.103941917419434
    8. '#' → logprob: -9.103941917419434
    9. 'is' → logprob: -9.853941917419434
    10. '```' → logprob: -10.228941917419434

Token 24: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11662666499614716
    2. '    ' → logprob: -3.116626739501953
    3. ' de' → logprob: -3.741626739501953
    4. '   ' → logprob: -4.241626739501953
    5. '(' → logprob: -5.116626739501953
    6. ' des' → logprob: -5.241626739501953
    7. '()' → logprob: -5.491626739501953
    8. '  ' → logprob: -5.991626739501953
    9. ' d' → logprob: -5.991626739501953
    10. '_' → logprob: -6.241626739501953

Token 25: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5936436653137207
    2. ' print' → logprob: -2.0936436653137207
    3. 'input' → logprob: -2.0936436653137207
    4. 'print' → logprob: -2.7186436653137207
    5. ' ' → logprob: -3.3436436653137207
    6. ' la' → logprob: -3.4686436653137207
    7. ' l' → logprob: -3.8436436653137207
    8. 'l' → logprob: -4.343643665313721
    9. ' une' → logprob: -4.593643665313721
    10. '_' → logprob: -5.968643665313721

Token 26: ' fonction' (ID: 17610)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3112652003765106
    2. 'print' → logprob: -1.686265230178833
    3. ' variable' → logprob: -3.936265230178833
    4. ' fonction' → logprob: -4.061264991760254
    5. 'fonction' → logprob: -5.186264991760254
    6. ' valeur' → logprob: -5.311264991760254
    7. ' input' → logprob: -5.436264991760254
    8. ' sais' → logprob: -5.811264991760254
    9. 's' → logprob: -6.061264991760254
    10. ' liste' → logprob: -6.186264991760254

Token 27: ' input' (ID: 3422)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.12204790860414505
    2. 'print' → logprob: -2.9970479011535645
    3. '(' → logprob: -3.8720479011535645
    4. '()' → logprob: -4.4970479011535645
    5. ' ' → logprob: -4.8720479011535645
    6. '(print' → logprob: -4.8720479011535645
    7. '_' → logprob: -5.4970479011535645
    8. '   ' → logprob: -5.9970479011535645
    9. ' calculate' → logprob: -6.4970479011535645
    10. ' process' → logprob: -6.9970479011535645

Token 28: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025951575953513384
    2. ' ' → logprob: -7.127594947814941
    3. '()' → logprob: -7.252594947814941
    4. ' (' → logprob: -7.752594947814941
    5. '('' → logprob: -8.002594947814941
    6. '("' → logprob: -9.127594947814941
    7. '(
' → logprob: -10.377594947814941
    8. '   ' → logprob: -10.502594947814941
    9. '("""' → logprob: -11.002594947814941
    10. ''' → logprob: -11.127594947814941

Token 29: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033478669356554747
    2. ' ' → logprob: -6.753347873687744
    3. '()' → logprob: -6.753347873687744
    4. '("' → logprob: -8.378347396850586
    5. '(
' → logprob: -8.628347396850586
    6. '('' → logprob: -8.753347396850586
    7. ')' → logprob: -9.128347396850586
    8. '("")' → logprob: -9.378347396850586
    9. '("""' → logprob: -10.003347396850586
    10. 's' → logprob: -10.628347396850586

Token 30: ' demander' (ID: 60771)
  Prédit: ' récupérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récupérer' → logprob: -0.43004631996154785
    2. ' obtenir' → logprob: -2.180046319961548
    3. ' recue' → logprob: -2.680046319961548
    4. ' demander' → logprob: -2.805046319961548
    5. ' saisir' → logprob: -3.055046319961548
    6. ' recevoir' → logprob: -3.555046319961548
    7. 'r' → logprob: -4.430046081542969
    8. ' recop' → logprob: -5.305046081542969
    9. ' récup' → logprob: -5.930046081542969
    10. ' collect' → logprob: -6.305046081542969

Token 31: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.28474748134613037
    2. ' ' → logprob: -2.65974760055542
    3. ' l' → logprob: -3.03474760055542
    4. ' un' → logprob: -3.15974760055542
    5. ' une' → logprob: -3.28474760055542
    6. ' au' → logprob: -4.78474760055542
    7. '  ' → logprob: -4.90974760055542
    8. 'l' → logprob: -4.90974760055542
    9. '    ' → logprob: -5.53474760055542
    10. ' )' → logprob: -5.53474760055542

Token 32: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6991021037101746
    2. ' l' → logprob: -0.6991021037101746
    3. '	l' → logprob: -6.19910192489624
    4. 'user' → logprob: -6.69910192489624
    5. ' ' → logprob: -6.69910192489624
    6. ' lâ' → logprob: -7.69910192489624
    7. ' user' → logprob: -7.82410192489624
    8. ' utilisateur' → logprob: -8.574102401733398
    9. 'util' → logprob: -8.699102401733398
    10. ''utilisateur' → logprob: -9.949102401733398

Token 33: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.026317719370126724
    2. 'a' → logprob: -4.151317596435547
    3. '’utilisateur' → logprob: -5.276317596435547
    4. 'util' → logprob: -6.526317596435547
    5. ''' → logprob: -6.651317596435547
    6. 'u' → logprob: -6.776317596435547
    7. ' utilisateur' → logprob: -7.151317596435547
    8. ''util' → logprob: -8.901317596435547
    9. 'e' → logprob: -9.151317596435547
    10. '   ' → logprob: -9.526317596435547

Token 34: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7371417880058289
    2. ' ' → logprob: -1.6121418476104736
    3. ' un' → logprob: -2.4871418476104736
    4. ' de' → logprob: -2.8621418476104736
    5. '  ' → logprob: -3.4871418476104736
    6. 's' → logprob: -3.4871418476104736
    7. ' une' → logprob: -3.6121418476104736
    8. 'd' → logprob: -3.9871418476104736
    9. ' le' → logprob: -4.6121416091918945
    10. ' )' → logprob: -4.7371416091918945

Token 35: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.09475676715373993
    2. 's' → logprob: -2.969756841659546
    3. ' entrer' → logprob: -3.969756841659546
    4. ' ' → logprob: -5.344756603240967
    5. 'n' → logprob: -6.094756603240967
    6. ' sais' → logprob: -6.094756603240967
    7. ' s' → logprob: -6.219756603240967
    8. ' enter' → logprob: -6.344756603240967
    9. ' entr' → logprob: -6.969756603240967
    10. 'l' → logprob: -7.594756603240967

Token 36: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9005818367004395
    2. ' un' → logprob: -0.9005818367004395
    3. ' une' → logprob: -2.0255818367004395
    4. ' son' → logprob: -4.1505818367004395
    5. ' le' → logprob: -4.2755818367004395
    6. '  ' → logprob: -5.1505818367004395
    7. '    ' → logprob: -6.0255818367004395
    8. '   ' → logprob: -6.0255818367004395
    9. ' l' → logprob: -6.2755818367004395
    10. 'un' → logprob: -6.2755818367004395

Token 37: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021177947521209717
    2. 'n' → logprob: -4.396177768707275
    3. 'e' → logprob: -6.021177768707275
    4. 'a' → logprob: -6.146177768707275
    5. ' nombre' → logprob: -7.021177768707275
    6. 's' → logprob: -7.771177768707275
    7. '  ' → logprob: -8.021178245544434
    8. ' chaîne' → logprob: -8.521178245544434
    9. ' espace' → logprob: -8.646178245544434
    10. ' ‌' → logprob: -8.646178245544434

Token 38: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05629938095808029
    2. ' de' → logprob: -3.4312994480133057
    3. '_' → logprob: -4.681299209594727
    4. ' )' → logprob: -5.806299209594727
    5. 'e' → logprob: -6.681299209594727
    6. ')' → logprob: -6.681299209594727
    7. 's' → logprob: -7.056299209594727
    8. '  ' → logprob: -7.181299209594727
    9. 'de' → logprob: -7.306299209594727
    10. '   ' → logprob: -7.306299209594727

Token 39: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.12015734612941742
    2. 'car' → logprob: -2.245157241821289
    3. ' caract' → logprob: -5.495157241821289
    4. ' caractère' → logprob: -6.495157241821289
    5. ' caracteres' → logprob: -7.120157241821289
    6. ' ' → logprob: -7.870157241821289
    7. 'texte' → logprob: -9.120157241821289
    8. 'c' → logprob: -9.370157241821289
    9. ' car' → logprob: -9.370157241821289
    10. 's' → logprob: -9.870157241821289

Token 40: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019652048125863075
    2. 's' → logprob: -5.644651889801025
    3. '   ' → logprob: -5.644651889801025
    4. '    ' → logprob: -5.644651889801025
    5. 'a' → logprob: -5.894651889801025
    6. ' )' → logprob: -6.769651889801025
    7. ' ,' → logprob: -7.269651889801025
    8. '  ' → logprob: -7.394651889801025
    9. '   
' → logprob: -7.519651889801025
    10. '     
' → logprob: -7.894651889801025

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07927067577838898
    2. '   ' → logprob: -3.704270601272583
    3. 's' → logprob: -3.954270601272583
    4. 'u' → logprob: -4.954270839691162
    5. 'n' → logprob: -5.454270839691162
    6. '    ' → logprob: -5.704270839691162
    7. 'a' → logprob: -5.829270839691162
    8. 'c' → logprob: -6.079270839691162
    9. ' )' → logprob: -6.079270839691162
    10. 'i' → logprob: -6.704270839691162

Token 42: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8877436518669128
    2. '   ' → logprob: -1.8877437114715576
    3. 'user' → logprob: -2.2627437114715576
    4. 'chaine' → logprob: -2.6377437114715576
    5. 'u' → logprob: -2.8877437114715576
    6. ' ' → logprob: -3.1377437114715576
    7. 'n' → logprob: -3.2627437114715576
    8. ' user' → logprob: -3.5127437114715576
    9. 'text' → logprob: -4.3877434730529785
    10. ' s' → logprob: -4.8877434730529785

Token 43: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6507341861724854
    2. 'u' → logprob: -2.5257341861724854
    3. ' ' → logprob: -2.6507341861724854
    4. 'n' → logprob: -2.6507341861724854
    5. '   ' → logprob: -2.9007341861724854
    6. 'chaine' → logprob: -3.0257341861724854
    7. 'user' → logprob: -3.4007341861724854
    8. 'c' → logprob: -3.5257341861724854
    9. 't' → logprob: -4.275733947753906
    10. ' user' → logprob: -4.400733947753906

Token 44: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7039284706115723
    2. 's' → logprob: -1.9539284706115723
    3. 'chaine' → logprob: -2.2039284706115723
    4. ' chaine' → logprob: -2.7039284706115723
    5. ' sais' → logprob: -2.8289284706115723
    6. ' ' → logprob: -3.5789284706115723
    7. 'cha' → logprob: -3.5789284706115723
    8. ' s' → logprob: -3.8289284706115723
    9. ' valeur' → logprob: -5.078928470611572
    10. '  ' → logprob: -5.453928470611572

Token 45: ' obten' (ID: 28150)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003018472343683243
    2. '_' → logprob: -6.503018379211426
    3. '  ' → logprob: -8.003018379211426
    4. ' d' → logprob: -8.628018379211426
    5. '<|end|>' → logprob: -8.753018379211426
    6. ' de' → logprob: -9.003018379211426
    7. 's' → logprob: -9.253018379211426
    8. 'd' → logprob: -10.128018379211426
    9. 'e' → logprob: -10.128018379211426
    10. 'u' → logprob: -10.128018379211426

Token 46: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.12620672583580017
    2. 'u' → logprob: -2.251206636428833
    3. 'e' → logprob: -4.876206874847412
    4. '   ' → logprob: -6.251206874847412
    5. 'ie' → logprob: -6.751206874847412
    6. 'a' → logprob: -7.376206874847412
    7. 'enue' → logprob: -7.751206874847412
    8. 'i' → logprob: -8.001206398010254
    9. '```' → logprob: -9.001206398010254
    10. ' ' → logprob: -9.001206398010254

Token 47: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02180088311433792
    2. '  ' → logprob: -5.021800994873047
    3. 's' → logprob: -5.896800994873047
    4. ' a' → logprob: -6.396800994873047
    5. '<|end|>' → logprob: -6.646800994873047
    6. ' est' → logprob: -6.771800994873047
    7. ' ,' → logprob: -7.146800994873047
    8. ' s' → logprob: -7.146800994873047
    9. '    ' → logprob: -7.396800994873047
    10. ',' → logprob: -7.396800994873047

Token 48: ' ensuite' (ID: 39713)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.26030561327934265
    2. ' convert' → logprob: -2.010305643081665
    3. ' ' → logprob: -3.635305643081665
    4. ' assign' → logprob: -3.885305643081665
    5. 'convert' → logprob: -4.635305404663086
    6. ' transform' → logprob: -5.010305404663086
    7. 'stock' → logprob: -5.260305404663086
    8. 'assign' → logprob: -5.510305404663086
    9. 's' → logprob: -5.885305404663086
    10. ' ensuite' → logprob: -5.885305404663086

Token 49: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.2598128318786621
    2. ' transform' → logprob: -2.509812831878662
    3. ' stock' → logprob: -2.884812831878662
    4. ' ' → logprob: -3.384812831878662
    5. 'convert' → logprob: -3.509812831878662
    6. ' retourn' → logprob: -5.009812831878662
    7. 'transform' → logprob: -6.009812831878662
    8. '   ' → logprob: -6.009812831878662
    9. ' trait' → logprob: -6.009812831878662
    10. ' r' → logprob: -6.384812831878662

Token 50: 'ie' (ID: 396)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.3221871852874756
    2. 'ie' → logprob: -1.5721871852874756
    3. 'u' → logprob: -1.8221871852874756
    4. 'i' → logprob: -2.0721871852874756
    5. 'e' → logprob: -2.3221871852874756
    6. 'é' → logprob: -2.5721871852874756
    7. 'ée' → logprob: -3.0721871852874756
    8. 'í' → logprob: -4.447187423706055
    9. 'ï' → logprob: -6.822187423706055
    10. 'ë' → logprob: -7.197187423706055

Token 51: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.051157936453819275
    2. ' ' → logprob: -3.3011579513549805
    3. 'e' → logprob: -5.0511579513549805
    4. 'en' → logprob: -5.9261579513549805
    5. '.' → logprob: -6.3011579513549805
    6. ' e' → logprob: -7.1761579513549805
    7. '_' → logprob: -8.17615795135498
    8. 's' → logprob: -8.30115795135498
    9. ')' → logprob: -8.80115795135498
    10. ' a' → logprob: -9.67615795135498

Token 52: ' une' (ID: 2463)
  Prédit: ' minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minus' → logprob: -0.9054371118545532
    2. ' maj' → logprob: -1.4054371118545532
    3. ' lowercase' → logprob: -2.0304369926452637
    4. ' ' → logprob: -2.7804369926452637
    5. ' min' → logprob: -3.2804369926452637
    6. 'minus' → logprob: -3.6554369926452637
    7. 's' → logprob: -4.405436992645264
    8. 'lower' → logprob: -4.405436992645264
    9. ' lower' → logprob: -4.780436992645264
    10. ' uppercase' → logprob: -5.155436992645264

Token 53: ' liste' (ID: 31719)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.40351247787475586
    2. ' maj' → logprob: -1.5285124778747559
    3. 'chaine' → logprob: -3.528512477874756
    4. ' chaine' → logprob: -3.778512477874756
    5. 's' → logprob: -4.653512477874756
    6. 'cha' → logprob: -4.653512477874756
    7. ' minus' → logprob: -4.778512477874756
    8. 'str' → logprob: -5.278512477874756
    9. ' casse' → logprob: -5.653512477874756
    10. 'maj' → logprob: -5.778512477874756

Token 54: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5478165745735168
    2. '_' → logprob: -1.297816514968872
    3. '[' → logprob: -2.672816514968872
    4. '.' → logprob: -3.422816514968872
    5. 's' → logprob: -4.547816753387451
    6. ' (' → logprob: -4.797816753387451
    7. ',' → logprob: -5.297816753387451
    8. '(
' → logprob: -5.547816753387451
    9. ' ' → logprob: -5.797816753387451
    10. '[:]' → logprob: -6.422816753387451

Token 55: ' caractères' (ID: 183106)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.8039575219154358
    2. ' caractères' → logprob: -0.8039575219154358
    3. ' ' → logprob: -3.428957462310791
    4. 'm' → logprob: -3.678957462310791
    5. ' chaînes' → logprob: -4.803957462310791
    6. 's' → logprob: -4.928957462310791
    7. 'car' → logprob: -4.928957462310791
    8. ' caract' → logprob: -5.178957462310791
    9. ' caracteres' → logprob: -5.303957462310791
    10. ' car' → logprob: -6.053957462310791

Token 56: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2788441777229309
    2. 's' → logprob: -2.278844118118286
    3. ' ' → logprob: -3.653844118118286
    4. ',' → logprob: -3.653844118118286
    5. '_' → logprob: -3.903844118118286
    6. '.' → logprob: -4.028844356536865
    7. 'a' → logprob: -4.653844356536865
    8. 'c' → logprob: -4.903844356536865
    9. '   ' → logprob: -5.278844356536865
    10. '[
' → logprob: -5.278844356536865

Token 57: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4807204008102417
    2. ' list' → logprob: -0.9807204008102417
    3. ' ' → logprob: -6.355720520019531
    4. ' la' → logprob: -6.855720520019531
    5. 'l' → logprob: -7.230720520019531
    6. '=list' → logprob: -7.730720520019531
    7. '	list' → logprob: -7.730720520019531
    8. ' l' → logprob: -7.855720520019531
    9. '`' → logprob: -8.105720520019531
    10. '```' → logprob: -8.355720520019531

Token 58: ' fonction' (ID: 17610)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.38390350341796875
    2. ' list' → logprob: -1.3839035034179688
    3. ' liste' → logprob: -3.1339035034179688
    4. 'liste' → logprob: -4.883903503417969
    5. 'fonction' → logprob: -5.508903503417969
    6. '=list' → logprob: -6.383903503417969
    7. ' fonction' → logprob: -6.508903503417969
    8. '```' → logprob: -6.633903503417969
    9. 'space' → logprob: -6.883903503417969
    10. ':list' → logprob: -7.008903503417969

Token 59: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2813563048839569
    2. ' list' → logprob: -1.4063563346862793
    3. '=list' → logprob: -9.656355857849121
    4. '	list' → logprob: -10.156355857849121
    5. ' ' → logprob: -11.156355857849121
    6. '`' → logprob: -11.156355857849121
    7. '   ' → logprob: -11.531355857849121
    8. 'l' → logprob: -11.656355857849121
    9. '(list' → logprob: -11.656355857849121
    10. '```' → logprob: -11.656355857849121

Token 60: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003612781874835491
    2. '()' → logprob: -5.753612995147705
    3. '(
' → logprob: -8.878612518310547
    4. 's' → logprob: -9.628612518310547
    5. '('' → logprob: -9.628612518310547
    6. '(s' → logprob: -10.628612518310547
    7. 'def' → logprob: -11.003612518310547
    8. '(user' → logprob: -11.378612518310547
    9. '(input' → logprob: -11.378612518310547
    10. '(`' → logprob: -11.503612518310547

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20681050419807434
    2. '    
' → logprob: -2.831810474395752
    3. 'a' → logprob: -3.331810474395752
    4. 'n' → logprob: -3.706810474395752
    5. 's' → logprob: -4.206810474395752
    6. ' 
' → logprob: -4.706810474395752
    7. '   
' → logprob: -4.706810474395752
    8. 'c' → logprob: -4.831810474395752
    9. '    ' → logprob: -5.581810474395752
    10. 'r' → logprob: -5.581810474395752

Token 62: ' #' (ID: 1069)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.9919707775115967
    2. 's' → logprob: -1.7419707775115967
    3. 'user' → logprob: -1.8669707775115967
    4. ' s' → logprob: -2.2419707775115967
    5. 'chaine' → logprob: -2.6169707775115967
    6. '   ' → logprob: -3.6169707775115967
    7. ' ' → logprob: -3.9919707775115967
    8. ' text' → logprob: -4.991971015930176
    9. ' chaine' → logprob: -5.241971015930176
    10. ' string' → logprob: -5.241971015930176

Token 63: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0836793184280396
    2. ' user' → logprob: -1.3336793184280396
    3. 'chaine' → logprob: -2.08367919921875
    4. 's' → logprob: -2.70867919921875
    5. 'user' → logprob: -2.83367919921875
    6. ' s' → logprob: -3.20867919921875
    7. ' text' → logprob: -4.08367919921875
    8. ' input' → logprob: -4.08367919921875
    9. ' chaine' → logprob: -4.08367919921875
    10. 'text' → logprob: -4.58367919921875

Token 64: ' exemple' (ID: 26320)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0841052532196045
    2. ' ' → logprob: -1.9591052532196045
    3. ' exemple' → logprob: -2.0841052532196045
    4. ' la' → logprob: -2.3341052532196045
    5. ' chaine' → logprob: -2.9591052532196045
    6. ' c' → logprob: -3.0841052532196045
    7. ' chaîne' → logprob: -4.209105491638184
    8. ' a' → logprob: -4.334105491638184
    9. ' example' → logprob: -4.334105491638184
    10. ' caract' → logprob: -4.834105491638184

Token 65: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012892190366983414
    2. '   ' → logprob: -4.887892246246338
    3. ' (' → logprob: -7.262892246246338
    4. '[' → logprob: -7.512892246246338
    5. '_' → logprob: -7.637892246246338
    6. '    ' → logprob: -7.637892246246338
    7. 's' → logprob: -7.762892246246338
    8. ',' → logprob: -7.762892246246338
    9. '('' → logprob: -8.13789176940918
    10. '(
' → logprob: -8.13789176940918

Token 66: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7929627299308777
    2. ' s' → logprob: -1.4179627895355225
    3. ' user' → logprob: -2.6679627895355225
    4. 's' → logprob: -3.1679627895355225
    5. ' a' → logprob: -3.5429627895355225
    6. ' l' → logprob: -4.042962551116943
    7. 'a' → logprob: -4.417962551116943
    8. ' u' → logprob: -4.667962551116943
    9. '   ' → logprob: -4.792962551116943
    10. 'user' → logprob: -4.792962551116943

Token 67: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.027614209800958633
    2. ' ' → logprob: -5.277614116668701
    3. ' user' → logprob: -5.402614116668701
    4. ' la' → logprob: -5.402614116668701
    5. ' ' → logprob: -5.652614116668701
    6. ' on' → logprob: -6.152614116668701
    7. ' s' → logprob: -7.027614116668701
    8. ' a' → logprob: -7.152614116668701
    9. 'l' → logprob: -7.152614116668701
    10. ' the' → logprob: -7.402614116668701

Token 68: ''utilisateur' (ID: 140803)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8540126085281372
    2. ' '' → logprob: -2.1040124893188477
    3. '_' → logprob: -2.3540124893188477
    4. 'a' → logprob: -3.1040124893188477
    5. ''' → logprob: -3.1040124893188477
    6. ''utilisateur' → logprob: -3.2290124893188477
    7. ' a' → logprob: -3.3540124893188477
    8. 'u' → logprob: -3.4790124893188477
    9. ' u' → logprob: -3.6040124893188477
    10. ' user' → logprob: -3.8540124893188477

Token 69: ' tape' (ID: 27444)
  Prédit: ' sais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.1458272486925125
    2. ' sa' → logprob: -3.020827293395996
    3. ' entre' → logprob: -3.645827293395996
    4. ' tape' → logprob: -3.770827293395996
    5. ' s' → logprob: -4.145827293395996
    6. 's' → logprob: -4.520827293395996
    7. ' ' → logprob: -5.770827293395996
    8. ' chois' → logprob: -6.645827293395996
    9. ' souhaite' → logprob: -6.645827293395996
    10. ' a' → logprob: -7.145827293395996

Token 70: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9285039901733398
    2. ' ' → logprob: -0.9285039901733398
    3. '"' → logprob: -2.55350399017334
    4. ''' → logprob: -3.42850399017334
    5. ' "' → logprob: -3.80350399017334
    6. '('' → logprob: -3.80350399017334
    7. '("' → logprob: -4.42850399017334
    8. ' '' → logprob: -4.80350399017334
    9. ' (' → logprob: -5.05350399017334
    10. '  ' → logprob: -5.30350399017334

Token 71: 'ABA' (ID: 65708)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2151498794555664
    2. 'Bonjour' → logprob: -1.8401498794555664
    3. 'bonjour' → logprob: -2.2151498794555664
    4. 'hello' → logprob: -2.3401498794555664
    5. 'h' → logprob: -2.5901498794555664
    6. 'Hello' → logprob: -3.0901498794555664
    7. 'abc' → logprob: -3.2151498794555664
    8. 'p' → logprob: -3.5901498794555664
    9. 'H' → logprob: -3.7151498794555664
    10. 'b' → logprob: -3.9651498794555664

Token 72: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6436426639556885
    2. ''' → logprob: -1.0186426639556885
    3. ''),' → logprob: -2.3936426639556885
    4. 'B' → logprob: -4.643642425537109
    5. 'A' → logprob: -5.143642425537109
    6. '',' → logprob: -5.518642425537109
    7. '')
' → logprob: -7.643642425537109
    8. 'ABA' → logprob: -7.893642425537109
    9. 'BA' → logprob: -8.26864242553711
    10. '');' → logprob: -8.26864242553711

Token 73: ' stop' (ID: 5666)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5916510224342346
    2. ' la' → logprob: -2.09165096282959
    3. ' list' → logprob: -2.84165096282959
    4. ' lst' → logprob: -2.96665096282959
    5. ' ' → logprob: -3.21665096282959
    6. '    ' → logprob: -3.84165096282959
    7. '   ' → logprob: -3.84165096282959
    8. ' l' → logprob: -4.09165096282959
    9. ' ' → logprob: -4.34165096282959
    10. ' input' → logprob: -4.46665096282959

Token 74: ' va' (ID: 3423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2212039232254028
    2. ' =' → logprob: -1.2212039232254028
    3. '_list' → logprob: -1.5962039232254028
    4. '    ' → logprob: -3.4712038040161133
    5. ' :' → logprob: -3.4712038040161133
    6. '[' → logprob: -3.8462038040161133
    7. '()' → logprob: -4.471203804016113
    8. '_' → logprob: -4.471203804016113
    9. ':' → logprob: -4.596203804016113
    10. ' ' → logprob: -4.846203804016113

Token 75: 'ud' (ID: 527)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11744976043701172
    2. '=' → logprob: -2.3674497604370117
    3. ' ' → logprob: -4.867449760437012
    4. '_' → logprob: -5.117449760437012
    5. 'r' → logprob: -6.867449760437012
    6. ' _' → logprob: -7.742449760437012
    7. '  ' → logprob: -8.242449760437012
    8. 's' → logprob: -8.367449760437012
    9. '   ' → logprob: -9.117449760437012
    10. ' s' → logprob: -9.117449760437012

Token 76: 'ra' (ID: 614)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1929795891046524
    2. 'ra' → logprob: -2.192979574203491
    3. 'ir' → logprob: -4.06797981262207
    4. 'i' → logprob: -4.19297981262207
    5. 'oir' → logprob: -5.56797981262207
    6. '```' → logprob: -5.69297981262207
    7. '   ' → logprob: -5.81797981262207
    8. 'rait' → logprob: -6.06797981262207
    9. '	' → logprob: -6.69297981262207
    10. ' ' → logprob: -6.69297981262207

Token 77: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.01748678833246231
    2. '['' → logprob: -4.392486572265625
    3. ' [' → logprob: -5.642486572265625
    4. ' ["' → logprob: -7.392486572265625
    5. '[' → logprob: -7.767486572265625
    6. ' ' → logprob: -8.267486572265625
    7. '["' → logprob: -10.142486572265625
    8. ' ' → logprob: -10.642486572265625
    9. ' '' → logprob: -11.767486572265625
    10. '['_' → logprob: -12.142486572265625

Token 78: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00021712594025302678
    2. ''A' → logprob: -8.62521743774414
    3. ' A' → logprob: -11.12521743774414
    4. ''' → logprob: -11.12521743774414
    5. ' '' → logprob: -13.37521743774414
    6. 'a' → logprob: -13.75021743774414
    7. ' ' → logprob: -13.87521743774414
    8. 'B' → logprob: -14.18771743774414
    9. '	A' → logprob: -14.43771743774414
    10. 'А' → logprob: -14.68771743774414

Token 79: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03139321878552437
    2. ''' → logprob: -3.53139328956604
    3. '','' → logprob: -6.906393051147461
    4. ',' → logprob: -7.906393051147461
    5. 'B' → logprob: -8.781393051147461
    6. '']' → logprob: -10.531393051147461
    7. '',
' → logprob: -10.656393051147461
    8. ' ',' → logprob: -11.156393051147461
    9. 'A' → logprob: -11.656393051147461
    10. ''A' → logprob: -11.656393051147461

Token 80: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009008764289319515
    2. ''A' → logprob: -5.509008884429932
    3. ' '' → logprob: -6.259008884429932
    4. '',' → logprob: -6.759008884429932
    5. ''S' → logprob: -7.259008884429932
    6. ' ' → logprob: -8.259008407592773
    7. 'B' → logprob: -9.009008407592773
    8. ''s' → logprob: -9.134008407592773
    9. 'A' → logprob: -9.384008407592773
    10. 'space' → logprob: -9.384008407592773

Token 81: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023977462842594832
    2. ' B' → logprob: -9.250239372253418
    3. ''' → logprob: -10.187739372253418
    4. 'b' → logprob: -10.375239372253418
    5. 'A' → logprob: -10.750239372253418
    6. ' ' → logprob: -11.250239372253418
    7. 'Б' → logprob: -12.312739372253418
    8. '`' → logprob: -12.875239372253418
    9. '  ' → logprob: -12.937739372253418
    10. '

' → logprob: -13.062739372253418

Token 82: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.005180508829653263
    2. ''' → logprob: -5.880180358886719
    3. ''A' → logprob: -7.005180358886719
    4. ',' → logprob: -7.005180358886719
    5. 'A' → logprob: -7.880180358886719
    6. '','' → logprob: -9.880180358886719
    7. '']' → logprob: -10.005180358886719
    8. 'a' → logprob: -10.380180358886719
    9. ' ',' → logprob: -11.630180358886719
    10. ''',' → logprob: -11.880180358886719

Token 83: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0255218967795372
    2. ' '' → logprob: -4.150521755218506
    3. ''A' → logprob: -5.400521755218506
    4. ' ' → logprob: -5.650521755218506
    5. ' ,' → logprob: -7.525521755218506
    6. '',' → logprob: -7.900521755218506
    7. 'A' → logprob: -9.150522232055664
    8. ',' → logprob: -9.400522232055664
    9. ''a' → logprob: -10.400522232055664
    10. ''s' → logprob: -10.525522232055664

Token 84: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0013472576392814517
    2. ''A' → logprob: -6.626347064971924
    3. ''' → logprob: -11.376347541809082
    4. ' A' → logprob: -12.626347541809082
    5. '']' → logprob: -13.251347541809082
    6. '`' → logprob: -14.126347541809082
    7. '

' → logprob: -14.126347541809082
    8. '```' → logprob: -14.251347541809082
    9. ' ' → logprob: -14.876347541809082
    10. 'А' → logprob: -15.001347541809082

Token 85: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0011147352633997798
    2. ']' → logprob: -7.126114845275879
    3. ''' → logprob: -8.376114845275879
    4. '']
' → logprob: -10.376114845275879
    5. ' ']' → logprob: -11.126114845275879
    6. '"]' → logprob: -11.376114845275879
    7. '',' → logprob: -11.876114845275879
    8. '']
' → logprob: -12.001114845275879
    9. '']

' → logprob: -12.251114845275879
    10. '   ' → logprob: -13.751114845275879

Token 86: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7627542018890381
    2. '
' → logprob: -0.8877542018890381
    3. '    
' → logprob: -2.762754201889038
    4. '   
' → logprob: -4.012754440307617
    5. 'n' → logprob: -4.762754440307617
    6. ' 
' → logprob: -4.887754440307617
    7. '  
' → logprob: -5.137754440307617
    8. 's' → logprob: -5.637754440307617
    9. ' ' → logprob: -5.887754440307617
    10. 'stop' → logprob: -6.137754440307617

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04596173018217087
    2. 's' → logprob: -3.920961618423462
    3. ' ' → logprob: -4.920961856842041
    4. 'n' → logprob: -5.545961856842041
    5. 'stop' → logprob: -5.670961856842041
    6. '    
' → logprob: -6.170961856842041
    7. '[' → logprob: -6.920961856842041
    8. ' 
' → logprob: -7.045961856842041
    9. '
' → logprob: -7.045961856842041
    10. '  ' → logprob: -7.420961856842041

Token 88: ' stop' (ID: 5666)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47394096851348877
    2. 'stop' (adapté à ' stop') → logprob: -1.8489409685134888
    3. '   ' → logprob: -2.223940849304199
    4. ' ' → logprob: -2.848940849304199
    5. ' stop' → logprob: -4.098940849304199
    6. 'n' → logprob: -4.848940849304199
    7. 'space' → logprob: -5.848940849304199
    8. '    ' → logprob: -6.098940849304199
    9. 'a' → logprob: -6.223940849304199
    10. '  ' → logprob: -6.348940849304199

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0220551285892725
    2. '=' → logprob: -4.022055149078369
    3. 's' → logprob: -6.022055149078369
    4. '_' → logprob: -7.147055149078369
    5. ' ' → logprob: -7.897055149078369
    6. '_list' → logprob: -9.397054672241211
    7. '  ' → logprob: -10.147054672241211
    8. '[:]' → logprob: -10.272054672241211
    9. 'es' → logprob: -10.397054672241211
    10. ':' → logprob: -11.272054672241211

Token 90: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.05003165826201439
    2. ' input' → logprob: -3.4250316619873047
    3. 'list' → logprob: -4.300031661987305
    4. 'input' → logprob: -5.925031661987305
    5. ' ' → logprob: -12.050031661987305
    6. ' ' → logprob: -13.175031661987305
    7. ' liste' → logprob: -14.425031661987305
    8. '	list' → logprob: -14.675031661987305
    9. ' l' → logprob: -14.800031661987305
    10. ' in' → logprob: -14.800031661987305

Token 91: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576383650302887
    2. '(input' → logprob: -0.826383650302887
    3. '()' → logprob: -8.701383590698242
    4. ' (' → logprob: -8.951383590698242
    5. '('' → logprob: -9.326383590698242
    6. '(user' → logprob: -10.701383590698242
    7. 'input' → logprob: -11.201383590698242
    8. '(
' → logprob: -11.701383590698242
    9. '("("' → logprob: -13.076383590698242
    10. '(in' → logprob: -13.576383590698242

Token 92: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039708949625492096
    2. '()' → logprob: -3.7897088527679443
    3. '('' → logprob: -4.664709091186523
    4. '())' → logprob: -6.164709091186523
    5. '("("' → logprob: -6.289709091186523
    6. '(
' → logprob: -7.414709091186523
    7. '("' → logprob: -7.414709091186523
    8. '(">' → logprob: -8.289709091186523
    9. '()">' → logprob: -8.289709091186523
    10. ')' → logprob: -8.414709091186523

Token 93: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8811338543891907
    2. ' ' → logprob: -1.131133794784546
    3. '[' → logprob: -1.881133794784546
    4. '   ' → logprob: -3.506133794784546
    5. ')' → logprob: -3.631133794784546
    6. '(' → logprob: -4.506134033203125
    7. '
' → logprob: -4.881134033203125
    8. '.' → logprob: -5.131134033203125
    9. ' 
' → logprob: -5.506134033203125
    10. '  
' → logprob: -5.506134033203125

Token 94: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6680734157562256
    2. '#' (adapté à ' #') → logprob: -1.9180734157562256
    3. '   ' → logprob: -2.0430734157562256
    4. 'for' → logprob: -2.4180734157562256
    5. 'i' → logprob: -3.5430734157562256
    6. ' for' → logprob: -4.168073654174805
    7. 'if' → logprob: -4.168073654174805
    8. ':' → logprob: -4.668073654174805
    9. 's' → logprob: -4.793073654174805
    10. ')' → logprob: -4.793073654174805

Token 95: ' Initial' (ID: 9209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.010509967803955
    2. '   ' → logprob: -1.260509967803955
    3. ' #' → logprob: -2.135509967803955
    4. '#' → logprob: -2.385509967803955
    5. ' if' → logprob: -3.260509967803955
    6. '    ' → logprob: -3.385509967803955
    7. ' for' → logprob: -3.635509967803955
    8. 'for' → logprob: -4.760509967803955
    9. '  ' → logprob: -5.010509967803955
    10. 'if' → logprob: -5.510509967803955

Token 96: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -1.0099643468856812
    2. 'iser' → logprob: -1.5099643468856812
    3. 'ization' → logprob: -1.6349643468856812
    4. 'ement' → logprob: -2.6349644660949707
    5. 'ize' → logprob: -3.1349644660949707
    6. 'er' → logprob: -3.8849644660949707
    7. '   ' → logprob: -4.134964466094971
    8. 'izer' → logprob: -4.259964466094971
    9. 'e' → logprob: -4.509964466094971
    10. 'izing' → logprob: -5.134964466094971

Token 97: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.915004551410675
    2. '   ' → logprob: -0.915004551410675
    3. ' ' → logprob: -2.6650044918060303
    4. ' d' → logprob: -3.0400044918060303
    5. ' de' → logprob: -3.5400044918060303
    6. '()' → logprob: -4.040004730224609
    7. '    ' → logprob: -5.165004730224609
    8. 's' → logprob: -5.790004730224609
    9. ' des' → logprob: -5.790004730224609
    10. 'd' → logprob: -5.790004730224609

Token 98: ' deux' (ID: 10301)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.1869004964828491
    2. ' i' → logprob: -1.5619004964828491
    3. ' ' → logprob: -1.9369004964828491
    4. ' la' → logprob: -2.0619006156921387
    5. ' l' → logprob: -2.4369006156921387
    6. ' compteur' → logprob: -3.6869006156921387
    7. 'count' → logprob: -4.311900615692139
    8. ' un' → logprob: -4.436900615692139
    9. ' counter' → logprob: -4.561900615692139
    10. ' n' → logprob: -4.561900615692139

Token 99: ' variables' (ID: 13955)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20138058066368103
    2. ' espaces' → logprob: -2.201380491256714
    3. '_' → logprob: -3.201380491256714
    4. ' variables' → logprob: -3.826380491256714
    5. ' compteur' → logprob: -6.451380729675293
    6. 's' → logprob: -7.076380729675293
    7. 'variables' → logprob: -7.326380729675293
    8. ' _' → logprob: -7.326380729675293
    9. '  ' → logprob: -7.576380729675293
    10. 'i' → logprob: -7.576380729675293

Token 100: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05632845684885979
    2. '_' → logprob: -4.681328296661377
    3. 's' → logprob: -4.681328296661377
    4. 'a' → logprob: -4.931328296661377
    5. ' i' → logprob: -4.931328296661377
    6. ' s' → logprob: -5.306328296661377
    7. ' a' → logprob: -5.806328296661377
    8. 'i' → logprob: -6.056328296661377
    9. 'n' → logprob: -6.556328296661377
    10. ' ' → logprob: -7.181328296661377

Token 101: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.019120056182146072
    2. 'ière' → logprob: -4.894120216369629
    3. 'i' → logprob: -5.019120216369629
    4. 'ier' → logprob: -6.519120216369629
    5. 'er' → logprob: -6.519120216369629
    6. 'iers' → logprob: -7.144120216369629
    7. 'ieres' → logprob: -8.269120216369629
    8. ' i' → logprob: -8.769120216369629
    9. 'e' → logprob: -9.019120216369629
    10. 'r' → logprob: -9.269120216369629

Token 102: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5193647742271423
    2. ' i' → logprob: -1.269364833831787
    3. 'i' → logprob: -3.519364833831787
    4. ' stop' → logprob: -3.644364833831787
    5. '_' → logprob: -4.394364833831787
    6. ' count' → logprob: -4.519364833831787
    7. 'a' → logprob: -4.519364833831787
    8. ' a' → logprob: -4.894364833831787
    9. 'count' → logprob: -5.644364833831787
    10. ' compteur' → logprob: -5.769364833831787

Token 103: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8367012739181519
    2. 'i' → logprob: -0.9617012739181519
    3. ' count' → logprob: -2.5867013931274414
    4. 'count' → logprob: -3.7117013931274414
    5. 'c' → logprob: -4.336701393127441
    6. ' a' → logprob: -4.961701393127441
    7. ' c' → logprob: -4.961701393127441
    8. 'a' → logprob: -5.086701393127441
    9. ' n' → logprob: -5.336701393127441
    10. 'n' → logprob: -5.336701393127441

Token 104: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9723457098007202
    2. '_' → logprob: -1.3473457098007202
    3. ' =' → logprob: -1.5973457098007202
    4. '=' → logprob: -3.3473458290100098
    5. '_count' → logprob: -3.3473458290100098
    6. '   ' → logprob: -4.59734582901001
    7. ',' → logprob: -4.72234582901001
    8. '  ' → logprob: -4.84734582901001
    9. 's' → logprob: -4.84734582901001
    10. '_s' → logprob: -5.34734582901001

Token 105: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47692278027534485
    2. ' b' → logprob: -0.9769227504730225
    3. ' ' → logprob: -6.601922988891602
    4. 'n' → logprob: -8.226922988891602
    5. 'stop' → logprob: -8.476922988891602
    6. ' stop' → logprob: -8.726922988891602
    7. ' n' → logprob: -9.101922988891602
    8. 's' → logprob: -9.351922988891602
    9. 'z' → logprob: -9.414422988891602
    10. 'a' → logprob: -9.539422988891602

Token 106: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40591055154800415
    2. '=' → logprob: -1.2809104919433594
    3. ' ' → logprob: -3.1559104919433594
    4. ',' → logprob: -4.530910491943359
    5. ' ,' → logprob: -6.780910491943359
    6. 'a' → logprob: -7.405910491943359
    7. '   ' → logprob: -8.03091049194336
    8. '  ' → logprob: -8.53091049194336
    9. '0' → logprob: -9.65591049194336
    10. '    ' → logprob: -9.78091049194336

Token 107: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11144868284463882
    2. '0' → logprob: -2.4864487648010254
    3. '<|end|>' → logprob: -4.861448764801025
    4. ' =' → logprob: -5.111448764801025
    5. 'a' → logprob: -5.611448764801025
    6. ' a' → logprob: -6.361448764801025
    7. '  ' → logprob: -7.236448764801025
    8. '=' → logprob: -7.361448764801025
    9. '    ' → logprob: -7.986448764801025
    10. ' ,' → logprob: -8.861448287963867

Token 108: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.359756201505661
    2. ' ' → logprob: -1.2347562313079834
    3. '1' → logprob: -5.609755992889404
    4. '<|end|>' → logprob: -6.359755992889404
    5. '  ' → logprob: -6.859755992889404
    6. 'int' → logprob: -6.984755992889404
    7. ' zero' → logprob: -7.109755992889404
    8. ' []' → logprob: -7.734755992889404
    9. 't' → logprob: -8.484756469726562
    10. '2' → logprob: -8.609756469726562

Token 109: ' mettant' (ID: 139614)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.7546301484107971
    2. ' mettant' → logprob: -1.2546300888061523
    3. ' compt' → logprob: -3.3796300888061523
    4. ' affect' → logprob: -3.5046300888061523
    5. ' ' → logprob: -3.5046300888061523
    6. '0' → logprob: -3.6296300888061523
    7. ' égal' → logprob: -4.629630088806152
    8. ' fix' → logprob: -4.629630088806152
    9. 'initial' → logprob: -4.692130088806152
    10. ' int' → logprob: -4.817130088806152

Token 110: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08188997954130173
    2. ' ' → logprob: -3.3318898677825928
    3. 'à' → logprob: -3.3318898677825928
    4. ' a' → logprob: -6.206890106201172
    5. ' =' → logprob: -6.581890106201172
    6. '0' → logprob: -6.706890106201172
    7. ' equal' → logprob: -7.706890106201172
    8. 'equal' → logprob: -7.956890106201172
    9. ' to' → logprob: -8.206890106201172
    10. 'a' → logprob: -8.706890106201172

Token 111: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01608915627002716
    2. ' ' → logprob: -4.266088962554932
    3. '1' → logprob: -6.766088962554932
    4. 'z' → logprob: -7.891088962554932
    5. ' z' → logprob: -9.26608943939209
    6. '-' → logprob: -9.51608943939209
    7. ' ' → logprob: -10.14108943939209
    8. 'int' → logprob: -10.51608943939209
    9. 'zero' → logprob: -10.51608943939209
    10. ' zéro' → logprob: -11.01608943939209

Token 112: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3330211937427521
    2. '
' → logprob: -1.5830211639404297
    3. ' a' → logprob: -3.7080211639404297
    4. ' ' → logprob: -3.8330211639404297
    5. '   ' → logprob: -4.08302116394043
    6. '  
' → logprob: -5.20802116394043
    7. '    
' → logprob: -5.70802116394043
    8. '  ' → logprob: -6.45802116394043
    9. ',' → logprob: -6.70802116394043
    10. '   
' → logprob: -6.83302116394043

Token 113: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6831333637237549
    2. 'a' → logprob: -0.9331333637237549
    3. '   ' → logprob: -2.683133363723755
    4. '    
' → logprob: -4.058133125305176
    5. ' 
' → logprob: -4.808133125305176
    6. ' a' → logprob: -5.808133125305176
    7. '  
' → logprob: -5.933133125305176
    8. ' ' → logprob: -6.933133125305176
    9. '   
' → logprob: -7.058133125305176
    10. '    ' → logprob: -9.308133125305176

Token 114: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11857403069734573
    2. '   ' → logprob: -2.7435741424560547
    3. ' a' → logprob: -3.6185741424560547
    4. ' ' → logprob: -4.743574142456055
    5. '    
' → logprob: -5.493574142456055
    6. '
' → logprob: -5.618574142456055
    7. ' 
' → logprob: -5.743574142456055
    8. '    ' → logprob: -7.743574142456055
    9. '  
' → logprob: -8.368574142456055
    10. '   
' → logprob: -8.993574142456055

Token 115: ' Ces' (ID: 35720)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.390336275100708
    2. ' a' → logprob: -1.515336275100708
    3. '   ' → logprob: -2.890336275100708
    4. ' ' → logprob: -3.390336275100708
    5. ' 
' → logprob: -5.015336036682129
    6. '    
' → logprob: -5.765336036682129
    7. '    ' → logprob: -5.890336036682129
    8. '
' → logprob: -7.390336036682129
    9. ' ' → logprob: -8.140336036682129
    10. '     
' → logprob: -8.265336036682129

Token 116: ' variables' (ID: 13955)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2041109949350357
    2. ' a' → logprob: -1.9541109800338745
    3. 'a' → logprob: -3.579111099243164
    4. ' ' → logprob: -5.329111099243164
    5. ' variables' → logprob: -5.579111099243164
    6. ' deux' → logprob: -6.454111099243164
    7. ' espaces' → logprob: -6.579111099243164
    8. '  ' → logprob: -6.829111099243164
    9. ' valeurs' → logprob: -7.704111099243164
    10. ' =' → logprob: -8.704111099243164

Token 117: ' servir' (ID: 42557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7103479504585266
    2. ' ' → logprob: -0.8353479504585266
    3. '<|end|>' → logprob: -2.960347890853882
    4. 's' → logprob: -5.085348129272461
    5. '=' → logprob: -5.085348129272461
    6. '  ' → logprob: -5.835348129272461
    7. ',' → logprob: -6.710348129272461
    8. 'a' → logprob: -6.835348129272461
    9. ' a' → logprob: -7.210348129272461
    10. '<|end|>' → logprob: -7.335348129272461

Token 118: 'ont' (ID: 645)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7825861573219299
    2. 'a' → logprob: -1.2825860977172852
    3. 'ont' → logprob: -1.4075860977172852
    4. ' a' → logprob: -4.782586097717285
    5. '   ' → logprob: -5.907586097717285
    6. ' =' → logprob: -6.282586097717285
    7. ' à' → logprob: -6.282586097717285
    8. '=' → logprob: -6.532586097717285
    9. '  ' → logprob: -6.657586097717285
    10. 'à' → logprob: -7.032586097717285

Token 119: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28748324513435364
    2. ' à' → logprob: -1.4124832153320312
    3. ' a' → logprob: -5.412483215332031
    4. '  ' → logprob: -7.287483215332031
    5. 'a' → logprob: -8.412483215332031
    6. 'à' → logprob: -8.537483215332031
    7. ' au' → logprob: -8.912483215332031
    8. ' to' → logprob: -9.037483215332031
    9. ' probablement' → logprob: -9.162483215332031
    10. '<|end|>' → logprob: -9.912483215332031

Token 120: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.052770212292671204
    2. ' compt' → logprob: -3.9277701377868652
    3. ' stock' → logprob: -4.177770137786865
    4. ' ' → logprob: -4.927770137786865
    5. '<|end|>' → logprob: -5.552770137786865
    6. 'count' → logprob: -6.677770137786865
    7. ' suivre' → logprob: -6.927770137786865
    8. ' count' → logprob: -7.052770137786865
    9. ' compteur' → logprob: -7.927770137786865
    10. 'comp' → logprob: -8.177770614624023

Token 121: ' respect' (ID: 5618)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013185526244342327
    2. '<|end|>' → logprob: -5.138185501098633
    3. 'a' → logprob: -6.138185501098633
    4. '  ' → logprob: -6.388185501098633
    5. ' les' → logprob: -7.138185501098633
    6. ' a' → logprob: -7.263185501098633
    7. ' des' → logprob: -8.138185501098633
    8. '   ' → logprob: -8.388185501098633
    9. 's' → logprob: -8.638185501098633
    10. ' '' → logprob: -9.388185501098633

Token 122: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.00040481300675310194
    2. 'ent' → logprob: -9.250404357910156
    3. 'ement' → logprob: -9.250404357910156
    4. 'ativement' → logprob: -9.750404357910156
    5. 'emment' → logprob: -11.125404357910156
    6. 'ively' → logprob: -11.250404357910156
    7. 'ing' → logprob: -11.250404357910156
    8. 'u' → logprob: -11.250404357910156
    9. ' à' → logprob: -11.250404357910156
    10. 'é' → logprob: -11.375404357910156

Token 123: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.03631054610013962
    2. 'nombre' → logprob: -3.5363104343414307
    3. ' ' → logprob: -5.66131067276001
    4. ' nombres' → logprob: -6.66131067276001
    5. 's' → logprob: -7.03631067276001
    6. 'a' → logprob: -7.78631067276001
    7. 'n' → logprob: -9.286310195922852
    8. 'Nombre' → logprob: -9.661310195922852
    9. ' number' → logprob: -9.786310195922852
    10. '  ' → logprob: -10.161310195922852

Token 125: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9318898916244507
    2. ' de' → logprob: -1.4318898916244507
    3. ' ' → logprob: -1.6818898916244507
    4. ' d' → logprob: -2.1818900108337402
    5. '<|end|>' → logprob: -3.3068900108337402
    6. '  ' → logprob: -4.80689001083374
    7. '    ' → logprob: -5.30689001083374
    8. 's' → logprob: -5.30689001083374
    9. ' of' → logprob: -5.55689001083374
    10. 'd' → logprob: -6.05689001083374

Token 126: ' caractères' (ID: 183106)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7228744029998779
    2. ' '' → logprob: -1.222874402999878
    3. ' A' → logprob: -2.347874402999878
    4. 'A' → logprob: -3.097874402999878
    5. ''' → logprob: -3.347874402999878
    6. 's' → logprob: -4.222874641418457
    7. ''A' → logprob: -4.597874641418457
    8. ''s' → logprob: -5.472874641418457
    9. ' stop' → logprob: -6.347874641418457
    10. 'a' → logprob: -6.347874641418457

Token 127: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3935396373271942
    2. ' ' → logprob: -1.8935396671295166
    3. ''' → logprob: -2.2685396671295166
    4. ' A' → logprob: -3.0185396671295166
    5. 'A' → logprob: -4.6435394287109375
    6. ''A' → logprob: -5.3935394287109375
    7. 's' → logprob: -5.5185394287109375
    8. 'a' → logprob: -7.0185394287109375
    9. ''s' → logprob: -7.0185394287109375
    10. ''a' → logprob: -7.8935394287109375

Token 128: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08157733082771301
    2. ' A' → logprob: -2.8315773010253906
    3. ' ' → logprob: -5.206577301025391
    4. ''A' → logprob: -5.456577301025391
    5. ''' → logprob: -5.581577301025391
    6. ' '' → logprob: -5.956577301025391
    7. 'B' → logprob: -6.956577301025391
    8. 'a' → logprob: -7.519077301025391
    9. 'S' → logprob: -7.831577301025391
    10. 's' → logprob: -9.01907730102539

Token 129: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14313024282455444
    2. ' '' → logprob: -2.018130302429199
    3. ' ')' → logprob: -9.0181303024292
    4. ''s' → logprob: -9.1431303024292
    5. ' ' → logprob: -9.6431303024292
    6. '')' → logprob: -9.8931303024292
    7. ''A' → logprob: -9.8931303024292
    8. ''a' → logprob: -11.6431303024292
    9. 's' → logprob: -11.6431303024292
    10. ')' → logprob: -12.1431303024292

Token 130: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.6604329347610474
    2. ' ' → logprob: -0.7854329347610474
    3. '<|end|>' → logprob: -4.910432815551758
    4. ' and' → logprob: -5.535432815551758
    5. '    ' → logprob: -5.785432815551758
    6. ',' → logprob: -6.035432815551758
    7. 'et' → logprob: -6.035432815551758
    8. 's' → logprob: -6.160432815551758
    9. '   ' → logprob: -6.410432815551758
    10. '  ' → logprob: -6.785432815551758

Token 131: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3590749502182007
    2. ' '' → logprob: -1.3590749502182007
    3. ' ' → logprob: -3.3590750694274902
    4. ' B' → logprob: -5.10907506942749
    5. 'B' → logprob: -6.73407506942749
    6. '  ' → logprob: -7.23407506942749
    7. '<|end|>' → logprob: -7.60907506942749
    8. ''s' → logprob: -8.109074592590332
    9. '`' → logprob: -8.484074592590332
    10. ''b' → logprob: -9.234074592590332

Token 132: ' nombre' (ID: 9733)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32251158356666565
    2. 'B' → logprob: -1.6975115537643433
    3. ' B' → logprob: -2.822511672973633
    4. ' ' → logprob: -4.197511672973633
    5. ' '' → logprob: -4.822511672973633
    6. '  ' → logprob: -5.822511672973633
    7. '<|end|>' → logprob: -6.822511672973633
    8. '`' → logprob: -6.947511672973633
    9. 'space' → logprob: -7.697511672973633
    10. '"B' → logprob: -7.822511672973633

Token 133: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30180540680885315
    2. ' de' → logprob: -1.8018053770065308
    3. ' d' → logprob: -3.1768054962158203
    4. ' des' → logprob: -4.05180549621582
    5. '<|end|>' → logprob: -4.30180549621582
    6. '  ' → logprob: -4.67680549621582
    7. '    ' → logprob: -5.55180549621582
    8. ' of' → logprob: -5.67680549621582
    9. 's' → logprob: -6.30180549621582
    10. 'de' → logprob: -7.05180549621582

Token 134: ' caractères' (ID: 183106)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.7975270748138428
    2. 'B' → logprob: -1.1725270748138428
    3. ''' → logprob: -2.0475270748138428
    4. ' ' → logprob: -2.4225270748138428
    5. ' '' → logprob: -4.922527313232422
    6. '`' → logprob: -5.672527313232422
    7. 's' → logprob: -6.047527313232422
    8. 'space' → logprob: -6.297527313232422
    9. ' stop' → logprob: -7.047527313232422
    10. '```' → logprob: -7.047527313232422

Token 135: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3146471083164215
    2. ''' → logprob: -1.6896470785140991
    3. ' '' → logprob: -2.6896471977233887
    4. 'B' → logprob: -5.314647197723389
    5. ' B' → logprob: -5.314647197723389
    6. '  ' → logprob: -6.314647197723389
    7. '<|end|>' → logprob: -6.439647197723389
    8. 's' → logprob: -7.189647197723389
    9. ''s' → logprob: -7.189647197723389
    10. 'space' → logprob: -7.314647197723389

Token 136: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.8397093415260315
    2. ' ' → logprob: -1.4647092819213867
    3. 's' → logprob: -1.5897092819213867
    4. '<|end|>' → logprob: -2.8397092819213867
    5. ' sont' → logprob: -3.5897092819213867
    6. ' n' → logprob: -4.339709281921387
    7. 'ne' → logprob: -4.464709281921387
    8. '  ' → logprob: -5.339709281921387
    9. ' s' → logprob: -5.964709281921387
    10. 'n' → logprob: -6.589709281921387

Token 137: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08904754370450974
    2. ' sont' → logprob: -2.714047431945801
    3. '<|end|>' → logprob: -4.839047431945801
    4. ' s' → logprob: -5.714047431945801
    5. ' ' → logprob: -5.839047431945801
    6. ' pas' → logprob: -6.214047431945801
    7. 'ont' → logprob: -7.464047431945801
    8. ' are' → logprob: -7.839047431945801
    9. ' seront' → logprob: -8.4640474319458
    10. ' soient' → logprob: -8.5890474319458

Token 138: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.2625579535961151
    2. 'pas' → logprob: -1.6375579833984375
    3. ' ni' → logprob: -3.3875579833984375
    4. 's' → logprob: -6.7625579833984375
    5. ' ' → logprob: -7.0125579833984375
    6. '<|end|>' → logprob: -7.8875579833984375
    7. 'ni' → logprob: -9.387557983398438
    8. '_pas' → logprob: -10.512557983398438
    9. ' neither' → logprob: -11.262557983398438
    10. 'not' → logprob: -11.387557983398438

Token 139: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40099823474884033
    2. ''A' → logprob: -1.1509982347488403
    3. ' '' → logprob: -5.275998115539551
    4. ' ' → logprob: -5.525998115539551
    5. 'A' → logprob: -6.025998115539551
    6. ''S' → logprob: -8.02599811553955
    7. ''E' → logprob: -8.02599811553955
    8. ' A' → logprob: -8.27599811553955
    9. ''a' → logprob: -8.40099811553955
    10. '
' → logprob: -8.52599811553955

Token 140: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012993504293262959
    2. ''A' → logprob: -4.887993335723877
    3. ''' → logprob: -5.637993335723877
    4. ' A' → logprob: -7.137993335723877
    5. ' '' → logprob: -7.512993335723877
    6. ' ' → logprob: -8.137993812561035
    7. 'a' → logprob: -10.262993812561035
    8. 'B' → logprob: -10.262993812561035
    9. '   ' → logprob: -11.325493812561035
    10. '  ' → logprob: -11.637993812561035

Token 141: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.650457501411438
    2. '')' → logprob: -0.900457501411438
    3. ')' → logprob: -3.4004573822021484
    4. '.' → logprob: -5.025457382202148
    5. ' ')' → logprob: -5.025457382202148
    6. ''.' → logprob: -5.400457382202148
    7. '')
' → logprob: -5.525457382202148
    8. ' '' → logprob: -5.525457382202148
    9. 'a' → logprob: -5.650457382202148
    10. '   ' → logprob: -5.775457382202148

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2263416200876236
    2. 'a' → logprob: -2.226341724395752
    3. '   ' → logprob: -2.726341724395752
    4. '    
' → logprob: -4.351341724395752
    5. ' 
' → logprob: -4.726341724395752
    6. '  
' → logprob: -5.726341724395752
    7. '   
' → logprob: -6.101341724395752
    8. ' ' → logprob: -7.726341724395752
    9. ' a' → logprob: -7.726341724395752
    10. 'n' → logprob: -7.851341724395752

Token 143: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8819956183433533
    2. 'a' (adapté à ' a') → logprob: -1.131995677947998
    3. '   ' → logprob: -1.506995677947998
    4. '    
' → logprob: -3.506995677947998
    5. ' 
' → logprob: -4.881995677947998
    6. ' a' → logprob: -6.381995677947998
    7. '   
' → logprob: -6.631995677947998
    8. '    ' → logprob: -7.881995677947998
    9. '  
' → logprob: -8.13199520111084
    10. ' ' → logprob: -8.25699520111084

Token 144: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04138597100973129
    2. ',' → logprob: -3.7913858890533447
    3. '=' → logprob: -4.041386127471924
    4. ' ,' → logprob: -8.041385650634766
    5. ' ' → logprob: -9.916385650634766
    6. ' =
' → logprob: -10.791385650634766
    7. 's' → logprob: -13.291385650634766
    8. ')' → logprob: -13.416385650634766
    9. ' +=' → logprob: -13.416385650634766
    10. 'a' → logprob: -13.666385650634766

Token 145: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.011558319441974163
    2. 'b' → logprob: -4.636558532714844
    3. ' ' → logprob: -6.386558532714844
    4. ' =' → logprob: -9.261558532714844
    5. ' ' → logprob: -12.011558532714844
    6. ' 
' → logprob: -12.386558532714844
    7. '=' → logprob: -12.386558532714844
    8. '<|end|>' → logprob: -13.136558532714844
    9. '  ' → logprob: -13.261558532714844
    10. '    ' → logprob: -14.136558532714844

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693849205970764
    2. '=' → logprob: -2.126938581466675
    3. ' ' → logprob: -11.876938819885254
    4. ' =
' → logprob: -13.126938819885254
    5. ',' → logprob: -14.626938819885254
    6. ' =[' → logprob: -15.376938819885254
    7. '<|end|>' → logprob: -15.751938819885254
    8. ')' → logprob: -16.001937866210938
    9. '=[]' → logprob: -16.126937866210938
    10. '=
' → logprob: -16.501937866210938

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17974622547626495
    2. ' ' → logprob: -1.8047462701797485
    3. ' ' → logprob: -14.304746627807617
    4. '  ' → logprob: -14.429746627807617
    5. '(' → logprob: -16.429746627807617
    6. '۰' → logprob: -16.804746627807617
    7. '  
' → logprob: -17.304746627807617
    8. '   ' → logprob: -17.554746627807617
    9. '
' → logprob: -17.679746627807617
    10. ' 
' → logprob: -18.242246627807617

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '(' → logprob: -16.62509536743164
    4. '۰' → logprob: -19.00009536743164
    5. '  ' → logprob: -19.12509536743164
    6. '
' → logprob: -19.75009536743164
    7. '00' → logprob: -19.75009536743164
    8. '   ' → logprob: -19.87509536743164
    9. ' ' → logprob: -20.25009536743164
    10. '０' → logprob: -20.75009536743164

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013222652487456799
    2. ' ,' → logprob: -7.376322269439697
    3. '<|end|>' → logprob: -8.251321792602539
    4. ' ' → logprob: -8.876321792602539
    5. ',b' → logprob: -9.126321792602539
    6. '0' → logprob: -9.626321792602539
    7. '   ' → logprob: -10.376321792602539
    8. ',
' → logprob: -10.626321792602539
    9. ',a' → logprob: -11.376321792602539
    10. '  ' → logprob: -11.501321792602539

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '  ' → logprob: -17.52975082397461
    4. '1' → logprob: -17.65475082397461
    5. '   ' → logprob: -17.90475082397461
    6. ' ' → logprob: -19.90475082397461
    7. '    ' → logprob: -20.34225082397461
    8. '۰' → logprob: -20.77975082397461
    9. '00' → logprob: -21.46725082397461
    10. ' 
' → logprob: -21.46725082397461

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '  ' → logprob: -19.500024795532227
    4. '1' → logprob: -19.625024795532227
    5. '۰' → logprob: -19.875024795532227
    6. '   ' → logprob: -20.000024795532227
    7. '```' → logprob: -20.875024795532227
    8. '00' → logprob: -21.625024795532227
    9. '    ' → logprob: -21.875024795532227
    10. ' ' → logprob: -22.125024795532227

Token 152: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011650008149445057
    2. '   ' → logprob: -5.386650085449219
    3. '<|end|>' → logprob: -5.511650085449219
    4. ' for' → logprob: -6.511650085449219
    5. 'for' → logprob: -7.261650085449219
    6. '    
' → logprob: -8.386650085449219
    7. ' 
' → logprob: -8.886650085449219
    8. '  
' → logprob: -9.011650085449219
    9. '
' → logprob: -10.011650085449219
    10. '<|end|>' → logprob: -10.011650085449219

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09287671744823456
    2. ' for' → logprob: -3.092876672744751
    3. '
' → logprob: -3.467876672744751
    4. 'for' → logprob: -4.84287691116333
    5. '    
' → logprob: -5.71787691116333
    6. ' 
' → logprob: -7.84287691116333
    7. '  
' → logprob: -8.342876434326172
    8. ' ' → logprob: -9.342876434326172
    9. '	for' → logprob: -9.842876434326172
    10. '  ' → logprob: -9.842876434326172

Token 154: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1412973552942276
    2. ' for' → logprob: -2.5162973403930664
    3. '   ' → logprob: -3.0162973403930664
    4. ' ' → logprob: -6.891297340393066
    5. '
' → logprob: -7.516297340393066
    6. '    
' → logprob: -8.641297340393066
    7. ' 
' → logprob: -8.891297340393066
    8. '  ' → logprob: -10.016297340393066
    9. '  
' → logprob: -10.766297340393066
    10. 'f' → logprob: -10.891297340393066

Token 155: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.428958535194397
    2. ' for' → logprob: -1.053958535194397
    3. '   ' → logprob: -8.428958892822266
    4. 'For' → logprob: -11.428958892822266
    5. ' ' → logprob: -12.553958892822266
    6. ' ' → logprob: -12.803958892822266
    7. '#' → logprob: -12.803958892822266
    8. '
' → logprob: -12.928958892822266
    9. ' For' → logprob: -12.928958892822266
    10. 'Pour' → logprob: -12.928958892822266

Token 156: 'but' (ID: 8293)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06558738648891449
    2. 'for' → logprob: -3.440587282180786
    3. '   ' → logprob: -3.565587282180786
    4. 'fin' → logprob: -6.940587520599365
    5. ' ' → logprob: -7.440587520599365
    6. ' for' → logprob: -8.190587043762207
    7. '  ' → logprob: -8.315587043762207
    8. ' f' → logprob: -8.690587043762207
    9. 'fi' → logprob: -9.065587043762207
    10. '#' → logprob: -9.190587043762207

Token 157: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4528978765010834
    2. '   ' → logprob: -1.8278979063034058
    3. ' d' → logprob: -2.452897787094116
    4. ' du' → logprob: -2.952897787094116
    5. '    ' → logprob: -3.952897787094116
    6. ' ' → logprob: -4.077898025512695
    7. ' for' → logprob: -4.952898025512695
    8. ':' → logprob: -4.952898025512695
    9. ' of' → logprob: -5.202898025512695
    10. ' :' → logprob: -5.702898025512695

Token 158: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8740273118019104
    2. ' ' → logprob: -1.3740272521972656
    3. ' e' → logprob: -1.9990272521972656
    4. 'u' → logprob: -2.6240272521972656
    5. ' un' → logprob: -3.7490272521972656
    6. '   ' → logprob: -4.124027252197266
    7. ' for' → logprob: -4.249027252197266
    8. ' '' → logprob: -4.499027252197266
    9. ''un' → logprob: -4.624027252197266
    10. ' la' → logprob: -4.749027252197266

Token 159: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23978571593761444
    2. 'for' → logprob: -1.7397856712341309
    3. ' boucle' → logprob: -3.989785671234131
    4. ' ' → logprob: -4.364785671234131
    5. 'bou' → logprob: -6.864785671234131
    6. '   ' → logprob: -6.864785671234131
    7. ' bou' → logprob: -7.364785671234131
    8. ' ' → logprob: -7.739785671234131
    9. 'r' → logprob: -7.739785671234131
    10. ' loop' → logprob: -7.864785671234131

Token 160: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007599176838994026
    2. ' ' → logprob: -5.632599353790283
    3. 'for' → logprob: -5.757599353790283
    4. '   ' → logprob: -8.132598876953125
    5. ' pour' → logprob: -9.257598876953125
    6. ' ' → logprob: -9.257598876953125
    7. ' 
' → logprob: -9.882598876953125
    8. ' a' → logprob: -10.507598876953125
    9. ' i' → logprob: -10.632598876953125
    10. ' de' → logprob: -10.632598876953125

Token 161: ' qui' (ID: 2780)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6549485325813293
    2. ' c' → logprob: -1.7799484729766846
    3. ' caract' → logprob: -2.1549484729766846
    4. ' stop' → logprob: -2.2799484729766846
    5. ' char' → logprob: -3.6549484729766846
    6. ' car' → logprob: -3.7799484729766846
    7. ' ' → logprob: -3.9049484729766846
    8. ' token' → logprob: -5.404948711395264
    9. ' caractère' → logprob: -5.529948711395264
    10. 'car' → logprob: -6.154948711395264

Token 162: ' va' (ID: 3423)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8156319260597229
    2. ' iter' → logprob: -1.4406318664550781
    3. ' ' → logprob: -2.190631866455078
    4. ' parcours' → logprob: -2.940631866455078
    5. ' caract' → logprob: -3.690631866455078
    6. ' parcour' → logprob: -3.690631866455078
    7. ' stop' → logprob: -3.815631866455078
    8. ' c' → logprob: -4.190631866455078
    9. ' iterate' → logprob: -4.315631866455078
    10. ' token' → logprob: -4.690631866455078

Token 163: ' parcour' (ID: 130642)
  Prédit: ' parcour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.6841714382171631
    2. ' char' → logprob: -2.184171438217163
    3. ' iter' → logprob: -2.184171438217163
    4. ' stop' → logprob: -2.184171438217163
    5. ' ' → logprob: -3.184171438217163
    6. ' c' → logprob: -3.559171438217163
    7. ' caract' → logprob: -3.809171438217163
    8. ' i' → logprob: -3.809171438217163
    9. ' parcours' → logprob: -4.934171676635742
    10. ' stopper' → logprob: -5.184171676635742

Token 164: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -8.590104698669165e-05
    2. 'i' → logprob: -10.750085830688477
    3. 'r' → logprob: -10.750085830688477
    4. 'rir' → logprob: -10.875085830688477
    5. '   ' → logprob: -11.875085830688477
    6. 'er' → logprob: -12.125085830688477
    7. 'enir' → logprob: -13.125085830688477
    8. 'ire' → logprob: -13.375085830688477
    9. '_' → logprob: -13.750085830688477
    10. 'ur' → logprob: -14.000085830688477

Token 165: ' chaque' (ID: 21194)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.003992915619164705
    2. 'stop' → logprob: -6.253993034362793
    3. ' ' → logprob: -6.753993034362793
    4. ' range' → logprob: -8.378993034362793
    5. ' s' → logprob: -9.253993034362793
    6. '	stop' → logprob: -9.253993034362793
    7. ' c' → logprob: -9.378993034362793
    8. ' char' → logprob: -9.753993034362793
    9. ' caract' → logprob: -9.878993034362793
    10. ' la' → logprob: -10.128993034362793

Token 166: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2567670941352844
    2. ' caract' → logprob: -2.3817670345306396
    3. ' c' → logprob: -2.7567670345306396
    4. ' stop' → logprob: -3.2567670345306396
    5. ' caractère' → logprob: -4.006767272949219
    6. ' car' → logprob: -5.256767272949219
    7. ' i' → logprob: -6.381767272949219
    8. 'car' → logprob: -6.506767272949219
    9. 'c' → logprob: -6.756767272949219
    10. ' element' → logprob: -7.381767272949219

Token 167: ' (' (ID: 350)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.671420156955719
    2. ' ' → logprob: -0.796420156955719
    3. ' in' → logprob: -4.296420097351074
    4. ' de' → logprob: -4.671420097351074
    5. 'stop' → logprob: -5.171420097351074
    6. ' i' → logprob: -5.546420097351074
    7. '  ' → logprob: -6.671420097351074
    8. ' ' → logprob: -7.296420097351074
    9. '_' → logprob: -7.421420097351074
    10. ' s' → logprob: -8.171420097351074

Token 168: 'cha' (ID: 3836)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.088599681854248
    2. ' stop' → logprob: -1.463599681854248
    3. ' c' → logprob: -1.713599681854248
    4. 'stop' → logprob: -1.963599681854248
    5. 'car' → logprob: -3.463599681854248
    6. ' caract' → logprob: -3.838599681854248
    7. 's' → logprob: -4.463599681854248
    8. ' s' → logprob: -4.713599681854248
    9. ' i' → logprob: -5.088599681854248
    10. 'char' → logprob: -5.213599681854248

Token 169: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7054388523101807
    2. '   ' → logprob: -0.8304388523101807
    3. '  ' → logprob: -4.330438613891602
    4. ' ' → logprob: -4.705438613891602
    5. ' stop' → logprob: -4.830438613891602
    6. 'q' → logprob: -5.080438613891602
    7. 's' → logprob: -5.330438613891602
    8. 'que' → logprob: -5.455438613891602
    9. 'ar' → logprob: -5.580438613891602
    10. '```' → logprob: -5.955438613891602

Token 170: ' caractère' (ID: 80509)
  Prédit: ' caract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caract' → logprob: -1.0526649951934814
    2. ' c' → logprob: -1.6776649951934814
    3. ' ' → logprob: -1.8026649951934814
    4. ' stop' → logprob: -2.1776649951934814
    5. ' caractère' → logprob: -2.1776649951934814
    6. ' car' → logprob: -3.8026649951934814
    7. 'car' → logprob: -4.052664756774902
    8. ' )' → logprob: -4.677664756774902
    9. 'c' → logprob: -5.302664756774902
    10. 'stop' → logprob: -5.927664756774902

Token 171: ')' (ID: 8)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.36016845703125
    2. ' in' → logprob: -1.98516845703125
    3. ' ' → logprob: -2.48516845703125
    4. ' )' → logprob: -3.48516845703125
    5. ')' → logprob: -3.61016845703125
    6. ' stop' → logprob: -4.98516845703125
    7. ' s' → logprob: -5.73516845703125
    8. 'in' → logprob: -5.98516845703125
    9. 'de' → logprob: -6.11016845703125
    10. 's' → logprob: -6.48516845703125

Token 172: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3999718725681305
    2. ' de' → logprob: -1.274971842765808
    3. 'in' → logprob: -3.8999719619750977
    4. ' stop' → logprob: -4.524971961975098
    5. ' ' → logprob: -4.899971961975098
    6. ' dans' → logprob: -5.899971961975098
    7. 'de' → logprob: -6.149971961975098
    8. ' i' → logprob: -6.399971961975098
    9. ' du' → logprob: -6.899971961975098
    10. '   ' → logprob: -7.024971961975098

Token 173: ' la' (ID: 557)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.014226273633539677
    2. 'stop' → logprob: -4.26422643661499
    3. ' la' → logprob: -10.264225959777832
    4. ' ' → logprob: -11.514225959777832
    5. '	stop' → logprob: -12.139225959777832
    6. ' ' → logprob: -13.014225959777832
    7. '(stop' → logprob: -13.014225959777832
    8. ' the' → logprob: -13.264225959777832
    9. '_stop' → logprob: -13.951725959777832
    10. ' стоп' → logprob: -14.139225959777832

Token 174: ' liste' (ID: 31719)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.6934152245521545
    2. 'stop' → logprob: -0.6934152245521545
    3. ' liste' → logprob: -9.693415641784668
    4. ' ' → logprob: -10.318415641784668
    5. 's' → logprob: -10.443415641784668
    6. 'liste' → logprob: -10.443415641784668
    7. ' ' → logprob: -10.568415641784668
    8. '   ' → logprob: -11.130915641784668
    9. '	stop' → logprob: -11.505915641784668
    10. 'list' → logprob: -12.068415641784668

Token 175: ' '' (ID: 461)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.0042557623237371445
    2. 'stop' → logprob: -5.504255771636963
    3. ' ' → logprob: -9.879255294799805
    4. ' de' → logprob: -10.254255294799805
    5. '(stop' → logprob: -10.379255294799805
    6. ' ' → logprob: -11.129255294799805
    7. '	stop' → logprob: -11.504255294799805
    8. 's' → logprob: -12.004255294799805
    9. '   ' → logprob: -12.379255294799805
    10. ' space' → logprob: -12.629255294799805

Token 176: 'stop' (ID: 16743)
  Prédit: 'stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.006723540835082531
    2. ' stop' → logprob: -5.006723403930664
    3. '   ' → logprob: -13.256723403930664
    4. ' ' → logprob: -13.756723403930664
    5. '
' → logprob: -13.881723403930664
    6. '	stop' → logprob: -13.881723403930664
    7. '(stop' → logprob: -14.006723403930664
    8. ')' → logprob: -15.006723403930664
    9. 's' → logprob: -15.194223403930664
    10. '  ' → logprob: -15.319223403930664

Token 177: ''.
' (ID: 49980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.322327584028244
    2. '):' → logprob: -1.5723276138305664
    3. ':
' → logprob: -3.8223276138305664
    4. '):
' → logprob: -4.322327613830566
    5. ')' → logprob: -4.572327613830566
    6. '   ' → logprob: -4.572327613830566
    7. ' :' → logprob: -5.197327613830566
    8. 'in' → logprob: -6.197327613830566
    9. 'stop' → logprob: -6.447327613830566
    10. '':' → logprob: -6.822327613830566

Token 178: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23033685982227325
    2. 'for' → logprob: -2.105336904525757
    3. '   ' → logprob: -2.480336904525757
    4. '
' → logprob: -9.855337142944336
    5. '    
' → logprob: -9.855337142944336
    6. ' 
' → logprob: -10.230337142944336
    7. ' ' → logprob: -10.855337142944336
    8. '	for' → logprob: -11.230337142944336
    9. '  
' → logprob: -11.355337142944336
    10. ' ' → logprob: -11.730337142944336

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06709509342908859
    2. 'for' (adapté à ' for') → logprob: -2.8170950412750244
    3. '   ' → logprob: -5.4420952796936035
    4. ' 
' → logprob: -7.9420952796936035
    5. '    
' → logprob: -8.817094802856445
    6. ' stop' → logprob: -9.692094802856445
    7. '
' → logprob: -9.942094802856445
    8. ' ' → logprob: -10.067094802856445
    9. '  
' → logprob: -10.317094802856445
    10. ' ' → logprob: -10.942094802856445

Token 180: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5962015986442566
    2. ' caract' → logprob: -1.5962016582489014
    3. ' char' → logprob: -1.9712016582489014
    4. ' car' → logprob: -3.4712016582489014
    5. ' s' → logprob: -3.8462016582489014
    6. ' i' → logprob: -4.596201419830322
    7. ' ' → logprob: -4.846201419830322
    8. 'c' → logprob: -4.971201419830322
    9. ' caractère' → logprob: -4.971201419830322
    10. ' lettre' → logprob: -5.096201419830322

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023372430354356766
    2. 'in' → logprob: -3.7733724117279053
    3. ' ' → logprob: -9.148372650146484
    4. '  ' → logprob: -12.148372650146484
    5. 'n' → logprob: -12.898372650146484
    6. 's' → logprob: -13.148372650146484
    7. ' i' → logprob: -13.273372650146484
    8. ',' → logprob: -13.523372650146484
    9. ' :' → logprob: -13.523372650146484
    10. '	in' → logprob: -14.023372650146484

Token 182: ' stop' (ID: 5666)
  Prédit: ' stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.2257200926542282
    2. 'stop' → logprob: -1.6007200479507446
    3. ' ' → logprob: -9.100720405578613
    4. ' range' → logprob: -9.100720405578613
    5. 'range' → logprob: -10.225720405578613
    6. '  ' → logprob: -11.100720405578613
    7. '   ' → logprob: -11.600720405578613
    8. '	stop' → logprob: -12.100720405578613
    9. ' ' → logprob: -12.850720405578613
    10. 's' → logprob: -13.225720405578613

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043949027894996107
    2. ' :' → logprob: -8.250439643859863
    3. ':
' → logprob: -9.000439643859863
    4. '):' → logprob: -9.875439643859863
    5. ')' → logprob: -13.750439643859863
    6. ':**' → logprob: -14.250439643859863
    7. '):
' → logprob: -15.750439643859863
    8. '():' → logprob: -16.000438690185547
    9. ':
' → logprob: -16.000438690185547
    10. ' :
' → logprob: -16.250438690185547

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024335652589797974
    2. '   ' → logprob: -4.399335861206055
    3. '    ' → logprob: -6.149335861206055
    4. ' 
' → logprob: -6.149335861206055
    5. '    
' → logprob: -6.274335861206055
    6. ' ' → logprob: -6.274335861206055
    7. '        
' → logprob: -6.774335861206055
    8. '<|end|>' → logprob: -6.774335861206055
    9. '
' → logprob: -7.649335861206055
    10. ':' → logprob: -7.899335861206055

Token 185: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8270747661590576
    2. '   ' → logprob: -1.2020747661590576
    3. '    
' → logprob: -2.3270747661590576
    4. '       ' → logprob: -2.5770747661590576
    5. '
' → logprob: -3.9520747661590576
    6. '    ' → logprob: -3.9520747661590576
    7. ' ' → logprob: -4.327075004577637
    8. 'if' → logprob: -4.327075004577637
    9. '     
' → logprob: -5.077075004577637
    10. '        
' → logprob: -5.202075004577637

Token 186: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25424978137016296
    2. ' if' → logprob: -1.5042498111724854
    3. '   ' → logprob: -6.129249572753906
    4. '    ' → logprob: -9.504249572753906
    5. 'i' → logprob: -10.504249572753906
    6. ' ' → logprob: -10.879249572753906
    7. ' i' → logprob: -11.879249572753906
    8. '  ' → logprob: -12.879249572753906
    9. '       ' → logprob: -12.879249572753906
    10. ' 
' → logprob: -13.129249572753906

Token 187: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006331752520054579
    2. ' ' → logprob: -6.506331920623779
    3. 'if' → logprob: -6.506331920623779
    4. ':' → logprob: -7.006331920623779
    5. ' i' → logprob: -7.131331920623779
    6. '    ' → logprob: -7.256331920623779
    7. '   ' → logprob: -8.006331443786621
    8. ' :' → logprob: -8.881331443786621
    9. '       ' → logprob: -9.131331443786621
    10. '        ' → logprob: -9.631331443786621

Token 188: ' qui' (ID: 2780)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010839232243597507
    2. ' ' → logprob: -5.135839462280273
    3. ' if' → logprob: -5.635839462280273
    4. '    ' → logprob: -7.760839462280273
    5. '        ' → logprob: -8.385839462280273
    6. 'i' → logprob: -8.635839462280273
    7. '   ' → logprob: -9.260839462280273
    8. '       ' → logprob: -9.385839462280273
    9. ':' → logprob: -9.510839462280273
    10. ' :' → logprob: -10.260839462280273

Token 189: ' vér' (ID: 42524)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14465384185314178
    2. ' ' → logprob: -2.019653797149658
    3. 'i' → logprob: -7.394653797149658
    4. '    ' → logprob: -8.019654273986816
    5. ' s' → logprob: -8.019654273986816
    6. ' if' → logprob: -8.519654273986816
    7. '  ' → logprob: -8.769654273986816
    8. '   ' → logprob: -9.394654273986816
    9. ' ==' → logprob: -9.644654273986816
    10. ' a' → logprob: -9.644654273986816

Token 190: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -1.664371848164592e-05
    2. 'if' → logprob: -11.250016212463379
    3. 'ife' → logprob: -13.000016212463379
    4. 'ifi' → logprob: -14.625016212463379
    5. 'i' → logprob: -15.000016212463379
    6. 'ifier' → logprob: -16.000017166137695
    7. 'ifiez' → logprob: -16.500017166137695
    8. 'ifié' → logprob: -16.875017166137695
    9. '```' → logprob: -17.375017166137695
    10. 'ifies' → logprob: -17.625017166137695

Token 191: ' si' (ID: 1784)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0740601196885109
    2. ' if' → logprob: -2.6990602016448975
    3. ' si' → logprob: -6.449059963226318
    4. 'i' → logprob: -6.699059963226318
    5. ' ' → logprob: -6.824059963226318
    6. 'if' → logprob: -9.199060440063477
    7. 's' → logprob: -10.699060440063477
    8. 'si' → logprob: -10.824060440063477
    9. '  ' → logprob: -10.949060440063477
    10. '   ' → logprob: -10.949060440063477

Token 192: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002635468728840351
    2. 'i' → logprob: -6.127635478973389
    3. ' ' → logprob: -7.752635478973389
    4. ' ' → logprob: -11.12763500213623
    5. '	i' → logprob: -12.75263500213623
    6. '  ' → logprob: -13.75263500213623
    7. '   ' → logprob: -14.37763500213623
    8. '(i' → logprob: -15.12763500213623
    9. ' ' → logprob: -15.25263500213623
    10. '    ' → logprob: -15.37763500213623

Token 193: ' caractère' (ID: 80509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2520160973072052
    2. ' i' → logprob: -1.5020160675048828
    3. ' ' → logprob: -9.377016067504883
    4. '   ' → logprob: -14.377016067504883
    5. ' ' → logprob: -14.377016067504883
    6. '  ' → logprob: -15.002016067504883
    7. '	i' → logprob: -15.002016067504883
    8. 'a' → logprob: -16.002016067504883
    9. ' ‌' → logprob: -16.627016067504883
    10. ' espace' → logprob: -16.877016067504883

Token 194: ' courant' (ID: 74694)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.022262554615736008
    2. 'i' → logprob: -4.0222625732421875
    3. ' ' → logprob: -5.6472625732421875
    4. ' ==' → logprob: -7.6472625732421875
    5. '==' → logprob: -10.022262573242188
    6. '[i' → logprob: -11.522262573242188
    7. 's' → logprob: -11.772262573242188
    8. '(i' → logprob: -12.147262573242188
    9. '   ' → logprob: -12.397262573242188
    10. ' '' → logprob: -12.772262573242188

Token 195: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43237176537513733
    2. ' ==' → logprob: -1.557371735572815
    3. ' ' → logprob: -2.0573718547821045
    4. '==' → logprob: -5.057371616363525
    5. 'i' → logprob: -5.182371616363525
    6. '=' → logprob: -9.182372093200684
    7. '   ' → logprob: -9.557372093200684
    8. ' =' → logprob: -9.807372093200684
    9. ' is' → logprob: -9.932372093200684
    10. '[i' → logprob: -10.057372093200684

Token 196: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048605985939502716
    2. ' i' → logprob: -3.0486059188842773
    3. ' ' → logprob: -11.048605918884277
    4. ' '' → logprob: -14.173605918884277
    5. '   ' → logprob: -14.423605918884277
    6. ''i' → logprob: -14.423605918884277
    7. '  ' → logprob: -14.923605918884277
    8. '	i' → logprob: -15.673605918884277
    9. ''' → logprob: -16.048606872558594
    10. 'a' → logprob: -16.048606872558594

Token 197: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24518050253391266
    2. ' '' → logprob: -2.120180606842041
    3. ''' → logprob: -3.370180606842041
    4. ' =='' → logprob: -3.495180606842041
    5. '=='' → logprob: -3.995180606842041
    6. ' ' → logprob: -4.870180606842041
    7. '==' → logprob: -5.245180606842041
    8. '='' → logprob: -8.245180130004883
    9. '=' → logprob: -8.245180130004883
    10. ' =' → logprob: -8.620180130004883

Token 198: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030565457418560982
    2. '==' → logprob: -3.5305655002593994
    3. ' ' → logprob: -7.53056526184082
    4. '=' → logprob: -8.90556526184082
    5. ' est' → logprob: -10.65556526184082
    6. ' =='' → logprob: -10.78056526184082
    7. '=='' → logprob: -10.90556526184082
    8. ' =' → logprob: -11.40556526184082
    9. '   ' → logprob: -11.65556526184082
    10. ' is' → logprob: -11.90556526184082

Token 199: ' égal' (ID: 15059)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4908673167228699
    2. ' ==' → logprob: -1.7408673763275146
    3. ''' → logprob: -2.8658673763275146
    4. ' égal' → logprob: -3.1158673763275146
    5. ' equal' → logprob: -3.2408673763275146
    6. ''A' → logprob: -3.4908673763275146
    7. ' ' → logprob: -3.8658673763275146
    8. '==' → logprob: -4.8658671379089355
    9. ' ég' → logprob: -5.6158671379089355
    10. 'equal' → logprob: -6.1158671379089355

Token 200: ' à' (ID: 1221)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43989694118499756
    2. ' '' → logprob: -1.6898969411849976
    3. ''à' → logprob: -2.064897060394287
    4. ''A' → logprob: -4.064897060394287
    5. ''a' → logprob: -4.189897060394287
    6. ' à' → logprob: -4.814897060394287
    7. ' a' → logprob: -6.689897060394287
    8. ' ' → logprob: -6.939897060394287
    9. '"' → logprob: -7.564897060394287
    10. 'à' → logprob: -7.939897060394287

Token 201: ' la' (ID: 557)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5773509740829468
    2. ''A' → logprob: -0.9523509740829468
    3. ''' → logprob: -2.9523510932922363
    4. '"A' → logprob: -8.327350616455078
    5. ''a' → logprob: -9.452350616455078
    6. 'A' → logprob: -9.827350616455078
    7. ' ' → logprob: -10.327350616455078
    8. ' "' → logprob: -10.827350616455078
    9. ''un' → logprob: -10.827350616455078
    10. '"' → logprob: -10.827350616455078

Token 202: ' chaîne' (ID: 89288)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.021638618782162666
    2. ''' → logprob: -4.2716383934021
    3. ' '' → logprob: -5.2716383934021
    4. 'A' → logprob: -6.7716383934021
    5. '"A' → logprob: -7.5216383934021
    6. ' ' → logprob: -9.021638870239258
    7. '  ' → logprob: -9.646638870239258
    8. ' lettre' → logprob: -10.021638870239258
    9. 'str' → logprob: -10.146638870239258
    10. ''S' → logprob: -10.146638870239258

Token 203: ' de' (ID: 334)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.3179752230644226
    2. ' '' → logprob: -1.4429752826690674
    3. '"A' → logprob: -3.8179752826690674
    4. ''' → logprob: -4.442975044250488
    5. ' "' → logprob: -6.442975044250488
    6. '"' → logprob: -7.317975044250488
    7. ' ' → logprob: -10.317975044250488
    8. ''a' → logprob: -10.567975044250488
    9. '   ' → logprob: -10.692975044250488
    10. ''S' → logprob: -11.067975044250488

Token 204: ' caractère' (ID: 80509)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.0863088071346283
    2. ' '' → logprob: -2.711308717727661
    3. '"A' → logprob: -4.33630895614624
    4. ''' → logprob: -6.71130895614624
    5. ' "' → logprob: -7.46130895614624
    6. 'car' → logprob: -7.71130895614624
    7. ' ' → logprob: -7.83630895614624
    8. 'A' → logprob: -8.836308479309082
    9. '"' → logprob: -9.086308479309082
    10. ' A' → logprob: -9.711308479309082

Token 205: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2465459704399109
    2. ' '' → logprob: -1.8715460300445557
    3. ''A' → logprob: -2.9965460300445557
    4. '"' → logprob: -4.621545791625977
    5. ' "' → logprob: -5.996545791625977
    6. '"A' → logprob: -6.121545791625977
    7. ''a' → logprob: -9.621545791625977
    8. ' ' → logprob: -10.996545791625977
    9. 'A' → logprob: -11.621545791625977
    10. ''S' → logprob: -12.121545791625977

Token 206: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05109211802482605
    2. ''A' → logprob: -3.0510921478271484
    3. ' A' → logprob: -6.676092147827148
    4. ''' → logprob: -7.176092147827148
    5. '"A' → logprob: -8.176092147827148
    6. ' '' → logprob: -8.926092147827148
    7. '"' → logprob: -11.051092147827148
    8. ' ' → logprob: -11.051092147827148
    9. '’A' → logprob: -11.551092147827148
    10. 'a' → logprob: -12.051092147827148

Token 207: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5876835584640503
    2. '':' → logprob: -0.8376835584640503
    3. '':
' → logprob: -4.58768367767334
    4. ':' → logprob: -7.58768367767334
    5. ' '' → logprob: -7.58768367767334
    6. '   ' → logprob: -8.46268367767334
    7. ' ':' → logprob: -9.71268367767334
    8. '"' → logprob: -10.33768367767334
    9. '':
' → logprob: -10.33768367767334
    10. '":' → logprob: -10.96268367767334

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13152459263801575
    2. ':' → logprob: -2.1315245628356934
    3. ' :' → logprob: -5.756524562835693
    4. '   ' → logprob: -7.006524562835693
    5. '<|end|>' → logprob: -8.381525039672852
    6. ':
' → logprob: -8.881525039672852
    7. ' if' → logprob: -10.506525039672852
    8. 'if' → logprob: -11.006525039672852
    9. '        
' → logprob: -11.006525039672852
    10. ' :
' → logprob: -11.006525039672852

Token 209: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005917556118220091
    2. '        
' → logprob: -8.250592231750488
    3. '   ' → logprob: -8.875592231750488
    4. ' if' → logprob: -9.250592231750488
    5. '
' → logprob: -10.750592231750488
    6. 'if' → logprob: -10.750592231750488
    7. ' 
' → logprob: -11.500592231750488
    8. '    ' → logprob: -11.625592231750488
    9. '      ' → logprob: -11.875592231750488
    10. '        ' → logprob: -12.125592231750488

Token 210: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014790100045502186
    2. '   ' → logprob: -5.389790058135986
    3. ' if' → logprob: -5.889790058135986
    4. '        
' → logprob: -5.889790058135986
    5. '    ' → logprob: -6.014790058135986
    6. '        ' → logprob: -7.639790058135986
    7. '     
' → logprob: -7.764790058135986
    8. ' 
' → logprob: -7.889790058135986
    9. '    
' → logprob: -8.264790534973145
    10. 'if' → logprob: -8.889790534973145

Token 211: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7483736276626587
    2. '   ' → logprob: -0.8733736276626587
    3. '       ' → logprob: -2.623373508453369
    4. 'es' → logprob: -4.373373508453369
    5. ''' → logprob: -4.623373508453369
    6. 'i' → logprob: -5.748373508453369
    7. '    ' → logprob: -5.873373508453369
    8. 'if' → logprob: -5.873373508453369
    9. '     ' → logprob: -6.748373508453369
    10. ' ' → logprob: -7.248373508453369

Token 212: 'érateur' (ID: 108528)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8798232078552246
    2. 'i' → logprob: -1.6298232078552246
    3. 'er' → logprob: -1.6298232078552246
    4. 'e' → logprob: -2.6298232078552246
    5. ' if' → logprob: -2.6298232078552246
    6. 'ér' → logprob: -4.629823207855225
    7. 'ération' → logprob: -4.879823207855225
    8. 'u' → logprob: -5.129823207855225
    9. '   ' → logprob: -5.254823207855225
    10. 'ur' → logprob: -6.129823207855225

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3495941162109375
    2. '==' → logprob: -1.2245941162109375
    3. ' ' → logprob: -7.3495941162109375
    4. '=' → logprob: -8.599594116210938
    5. ' if' → logprob: -9.224594116210938
    6. 'if' → logprob: -9.599594116210938
    7. '==
' → logprob: -10.224594116210938
    8. ' ==
' → logprob: -10.724594116210938
    9. '===' → logprob: -10.974594116210938
    10. '  ' → logprob: -11.724594116210938

Token 214: ' sert' (ID: 52405)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.296895295381546
    2. ' ' → logprob: -1.4218952655792236
    3. ' a' → logprob: -4.796895503997803
    4. 'à' → logprob: -5.296895503997803
    5. '  ' → logprob: -6.796895503997803
    6. '<|end|>' → logprob: -8.421895027160645
    7. ' to' → logprob: -8.546895027160645
    8. ''à' → logprob: -8.796895027160645
    9. ' )' → logprob: -9.296895027160645
    10. 'a' → logprob: -9.421895027160645

Token 216: ' vérifier' (ID: 93671)
  Prédit: ' comparer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparer' → logprob: -0.15026457607746124
    2. ' vérifier' → logprob: -2.6502645015716553
    3. ' tester' → logprob: -3.1502645015716553
    4. 'com' → logprob: -4.025264739990234
    5. 'tester' → logprob: -6.400264739990234
    6. 'Comparer' → logprob: -6.400264739990234
    7. ' faire' → logprob: -6.525264739990234
    8. ' effectuer' → logprob: -7.275264739990234
    9. ' test' → logprob: -7.650264739990234
    10. 'compar' → logprob: -8.025264739990234

Token 217: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1396288424730301
    2. '<|end|>' → logprob: -2.2646288871765137
    3. ' if' → logprob: -4.764628887176514
    4. '  ' → logprob: -5.139628887176514
    5. ' si' → logprob: -6.014628887176514
    6. ' à' → logprob: -6.139628887176514
    7. 'i' → logprob: -7.264628887176514
    8. 'if' → logprob: -7.264628887176514
    9. '<|end|>' → logprob: -7.389628887176514
    10. ' la' → logprob: -7.389628887176514

Token 218: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7105317711830139
    2. 'e' → logprob: -0.9605317711830139
    3. 'a' → logprob: -2.210531711578369
    4. ''é' → logprob: -5.085531711578369
    5. 'u' → logprob: -6.085531711578369
    6. ''équ' → logprob: -6.085531711578369
    7. ''espace' → logprob: -6.585531711578369
    8. ''a' → logprob: -6.585531711578369
    9. 'égalité' → logprob: -7.335531711578369
    10. 'i' → logprob: -8.085532188415527

Token 219: 'égalité' (ID: 165530)
  Prédit: 'égalité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.12128633260726929
    2. ''' → logprob: -2.246286392211914
    3. ' égal' → logprob: -5.996286392211914
    4. 'i' → logprob: -6.496286392211914
    5. 'a' → logprob: -6.621286392211914
    6. 'égal' → logprob: -6.996286392211914
    7. 'egal' → logprob: -7.121286392211914
    8. 'ég' → logprob: -7.621286392211914
    9. ''é' → logprob: -8.871286392211914
    10. 'e' → logprob: -8.871286392211914

Token 220: ' entre' (ID: 3853)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.2425942420959473
    2. ' ' → logprob: -1.4925942420959473
    3. '   ' → logprob: -1.4925942420959473
    4. ':' → logprob: -2.1175942420959473
    5. ' :
' → logprob: -2.9925942420959473
    6. '    ' → logprob: -3.6175942420959473
    7. '       ' → logprob: -4.117594242095947
    8. '  ' → logprob: -4.367594242095947
    9. ' )' → logprob: -4.367594242095947
    10. ' ,' → logprob: -5.742594242095947

Token 221: ' deux' (ID: 10301)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5775448679924011
    2. 'i' → logprob: -0.8275448679924011
    3. ''i' → logprob: -7.577544689178467
    4. ' '' → logprob: -7.827544689178467
    5. ' ' → logprob: -8.327545166015625
    6. 'l' → logprob: -8.952545166015625
    7. ''' → logprob: -9.202545166015625
    8. '"' → logprob: -10.202545166015625
    9. 'la' → logprob: -10.827545166015625
    10. ' l' → logprob: -10.827545166015625

Token 222: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7401148080825806
    2. ' chaînes' → logprob: -1.4901148080825806
    3. ' caractères' → logprob: -2.490114688873291
    4. ' espaces' → logprob: -2.615114688873291
    5. ' strings' → logprob: -2.990114688873291
    6. ' i' → logprob: -3.740114688873291
    7. '  ' → logprob: -4.365114688873291
    8. ' cadenas' → logprob: -4.740114688873291
    9. ' '' → logprob: -4.865114688873291
    10. '_' → logprob: -5.740114688873291

Token 223: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5894114971160889
    2. '       ' → logprob: -1.4644114971160889
    3. ' :' → logprob: -1.8394114971160889
    4. '   ' → logprob: -3.089411497116089
    5. ' :
' → logprob: -6.214411735534668
    6. ':
' → logprob: -6.464411735534668
    7. ' ' → logprob: -6.464411735534668
    8. '    ' → logprob: -6.589411735534668
    9. '  ' → logprob: -7.214411735534668
    10. '<|end|>' → logprob: -8.089411735534668

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002035584067925811
    2. '        
' → logprob: -7.502035617828369
    3. ':' → logprob: -7.627035617828369
    4. '   ' → logprob: -7.877035617828369
    5. '
' → logprob: -9.002035140991211
    6. '<|end|>' → logprob: -9.002035140991211
    7. ' :' → logprob: -9.252035140991211
    8. '    
' → logprob: -9.377035140991211
    9. ' 
' → logprob: -9.752035140991211
    10. '    ' → logprob: -10.752035140991211

Token 225: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011465923860669136
    2. 'if' (adapté à ' if') → logprob: -5.011466026306152
    3. ' if' → logprob: -5.761466026306152
    4. '   ' → logprob: -6.886466026306152
    5. '
' → logprob: -8.011466026306152
    6. '        
' → logprob: -8.886466026306152
    7. '    ' → logprob: -10.386466026306152
    8. ' 
' → logprob: -10.886466026306152
    9. '    
' → logprob: -11.386466026306152
    10. '           ' → logprob: -11.761466026306152

Token 226: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015248565468937159
    2. 'i' → logprob: -6.501524925231934
    3. ' ' → logprob: -11.001524925231934
    4. ' ' → logprob: -12.376524925231934
    5. '	i' → logprob: -14.001524925231934
    6. '(i' → logprob: -15.126524925231934
    7. ' '' → logprob: -15.126524925231934
    8. '  ' → logprob: -16.876523971557617
    9. '    ' → logprob: -17.376523971557617
    10. '   ' → logprob: -17.501523971557617

Token 227: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.200166469876422e-06
    2. ' A' → logprob: -12.500004768371582
    3. ''A' → logprob: -13.625004768371582
    4. 'a' → logprob: -16.3750057220459
    5. ''' → logprob: -17.2500057220459
    6. 'i' → logprob: -18.1250057220459
    7. 'А' → logprob: -18.6250057220459
    8. '_A' → logprob: -18.8750057220459
    9. ' ' → logprob: -18.8750057220459
    10. '	A' → logprob: -19.0000057220459

Token 228: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.73052782076411e-05
    2. '':' → logprob: -9.750067710876465
    3. ' '' → logprob: -12.375067710876465
    4. ''in' → logprob: -14.000067710876465
    5. ''i' → logprob: -14.375067710876465
    6. '')' → logprob: -14.625067710876465
    7. '==' → logprob: -14.750067710876465
    8. ''=' → logprob: -14.750067710876465
    9. '"' → logprob: -15.375067710876465
    10. ' ==' → logprob: -15.375067710876465

Token 229: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5240408778190613
    2. ' ==' → logprob: -0.8990408778190613
    3. ':' → logprob: -7.399040699005127
    4. '=' → logprob: -9.149041175842285
    5. ')' → logprob: -9.399041175842285
    6. ')==' → logprob: -10.149041175842285
    7. ' in' → logprob: -10.774041175842285
    8. 'in' → logprob: -11.524041175842285
    9. ' :' → logprob: -11.649041175842285
    10. '):' → logprob: -11.774041175842285

Token 230: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519318461418152
    2. ' i' → logprob: -1.50193190574646
    3. '	i' → logprob: -13.751932144165039
    4. ' ' → logprob: -13.876932144165039
    5. '(i' → logprob: -15.751932144165039
    6. ''i' → logprob: -16.00193214416504
    7. ' ' → logprob: -16.12693214416504
    8. '[i' → logprob: -16.75193214416504
    9. '_i' → logprob: -16.87693214416504
    10. ')' → logprob: -17.12693214416504

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004745180252939463
    2. ':
' → logprob: -6.129745006561279
    3. ' :' → logprob: -6.254745006561279
    4. '':' → logprob: -8.004745483398438
    5. '):' → logprob: -8.254745483398438
    6. ' :
' → logprob: -11.004745483398438
    7. '   ' → logprob: -11.879745483398438
    8. '       ' → logprob: -12.754745483398438
    9. ''' → logprob: -12.879745483398438
    10. '):
' → logprob: -13.129745483398438

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5144015550613403
    2. '       ' → logprob: -1.0144015550613403
    3. ':' → logprob: -4.139401435852051
    4. 'a' → logprob: -4.764401435852051
    5. '        
' → logprob: -5.389401435852051
    6. '<|end|>' → logprob: -5.889401435852051
    7. ' a' → logprob: -6.014401435852051
    8. ':
' → logprob: -6.389401435852051
    9. '
' → logprob: -6.764401435852051
    10. '        ' → logprob: -7.764401435852051

Token 233: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6053072810173035
    2. ' a' → logprob: -0.8553072810173035
    3. '           ' → logprob: -3.7303073406219482
    4. ' 
' → logprob: -6.355307102203369
    5. '       ' → logprob: -6.730307102203369
    6. '
' → logprob: -6.980307102203369
    7. '               ' → logprob: -7.105307102203369
    8. '            
' → logprob: -8.855307579040527
    9. '        
' → logprob: -10.105307579040527
    10. '   ' → logprob: -10.605307579040527

Token 234: ' Si' (ID: 7832)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3153170049190521
    2. ' a' → logprob: -1.3153170347213745
    3. '   ' → logprob: -6.690317153930664
    4. '       ' → logprob: -7.440317153930664
    5. '           ' → logprob: -8.565317153930664
    6. ' ' → logprob: -11.815317153930664
    7. '    ' → logprob: -11.815317153930664
    8. ' ' → logprob: -12.315317153930664
    9. '	a' → logprob: -13.065317153930664
    10. '
' → logprob: -13.190317153930664

Token 235: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.38792577385902405
    2. 'a' → logprob: -1.1379257440567017
    3. ' ' → logprob: -7.387925624847412
    4. ' ' → logprob: -8.63792610168457
    5. '    ' → logprob: -9.26292610168457
    6. '	a' → logprob: -10.01292610168457
    7. '   ' → logprob: -10.13792610168457
    8. '_a' → logprob: -10.38792610168457
    9. '  ' → logprob: -11.13792610168457
    10. '(a' → logprob: -11.88792610168457

Token 236: ' condition' (ID: 7060)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1852037012577057
    2. ' a' → logprob: -1.8102036714553833
    3. ' ' → logprob: -5.560203552246094
    4. '   ' → logprob: -7.435203552246094
    5. '    ' → logprob: -8.185203552246094
    6. '           ' → logprob: -8.310203552246094
    7. '  ' → logprob: -8.935203552246094
    8. '       ' → logprob: -9.185203552246094
    9. '	a' → logprob: -10.310203552246094
    10. ' space' → logprob: -10.435203552246094

Token 237: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0705028772354126
    2. ' a' → logprob: -1.0705028772354126
    3. ' ' → logprob: -2.070502758026123
    4. 'a' → logprob: -2.570502758026123
    5. ' :' → logprob: -3.445502758026123
    6. '       ' → logprob: -3.945502758026123
    7. '   ' → logprob: -4.070502758026123
    8. '    ' → logprob: -4.445502758026123
    9. '  ' → logprob: -4.820502758026123
    10. '<|end|>' → logprob: -4.945502758026123

Token 238: ' vraie' (ID: 105841)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.0760183334350586
    2. 'v' → logprob: -1.2010183334350586
    3. 'True' → logprob: -1.2010183334350586
    4. ' vraie' → logprob: -3.2010183334350586
    5. 'true' → logprob: -5.701018333435059
    6. ' vrai' → logprob: -5.826018333435059
    7. ' true' → logprob: -5.951018333435059
    8. '   ' → logprob: -6.451018333435059
    9. 'V' → logprob: -6.576018333435059
    10. ' ' → logprob: -7.076018333435059

Token 239: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3333146572113037
    2. '               ' → logprob: -1.4583146572113037
    3. ':' → logprob: -3.3333146572113037
    4. ',' → logprob: -5.333314895629883
    5. 'a' → logprob: -5.583314895629883
    6. ' :' → logprob: -6.083314895629883
    7. ' a' → logprob: -6.458314895629883
    8. '       ' → logprob: -6.958314895629883
    9. ':
' → logprob: -7.708314895629883
    10. '            
' → logprob: -7.833314895629883

Token 240: ' c' (ID: 274)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06922288239002228
    2. '           ' → logprob: -3.319222927093506
    3. 'a' → logprob: -3.569222927093506
    4. '               ' → logprob: -7.069222927093506
    5. ' 
' → logprob: -7.694222927093506
    6. '            
' → logprob: -7.694222927093506
    7. '       ' → logprob: -8.569222450256348
    8. ' ' → logprob: -8.694222450256348
    9. '
' → logprob: -9.194222450256348
    10. ' ' → logprob: -9.194222450256348

Token 241: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8081851005554199
    2. 'ont' → logprob: -0.8081851005554199
    3. ' a' → logprob: -3.05818510055542
    4. '       ' → logprob: -3.80818510055542
    5. '   ' → logprob: -4.55818510055542
    6. '    ' → logprob: -4.80818510055542
    7. 'es' → logprob: -5.80818510055542
    8. ' ' → logprob: -5.80818510055542
    9. '      ' → logprob: -6.18318510055542
    10. '  ' → logprob: -6.43318510055542

Token 242: '-à' (ID: 56297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7672750353813171
    2. '           ' → logprob: -1.017275094985962
    3. ' a' → logprob: -2.642275094985962
    4. '   ' → logprob: -3.267275094985962
    5. ' ' → logprob: -4.142274856567383
    6. '    ' → logprob: -4.267274856567383
    7. 'le' → logprob: -5.017274856567383
    8. '            ' → logprob: -5.642274856567383
    9. '       ' → logprob: -5.767274856567383
    10. 'à' → logprob: -5.892274856567383

Token 243: '-dire' (ID: 76064)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.29354211688041687
    2. ' ce' → logprob: -3.1685421466827393
    3. 'a' → logprob: -3.4185421466827393
    4. '-' → logprob: -3.7935421466827393
    5. '-à' → logprob: -3.9185421466827393
    6. 'à' → logprob: -4.16854190826416
    7. '   ' → logprob: -4.16854190826416
    8. ' parce' → logprob: -4.16854190826416
    9. ' ' → logprob: -4.16854190826416
    10. '#' → logprob: -4.54354190826416

Token 244: ' si' (ID: 1784)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7417346239089966
    2. 'a' → logprob: -1.3667346239089966
    3. '           ' → logprob: -2.116734504699707
    4. ' que' → logprob: -2.366734504699707
    5. '   ' → logprob: -3.866734504699707
    6. ' ' → logprob: -4.366734504699707
    7. '    ' → logprob: -5.491734504699707
    8. '            
' → logprob: -5.991734504699707
    9. '    
' → logprob: -6.366734504699707
    10. ',' → logprob: -6.491734504699707

Token 245: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4850980341434479
    2. 'a' → logprob: -1.8600980043411255
    3. ' i' → logprob: -1.8600980043411255
    4. 'i' → logprob: -3.110098123550415
    5. ' ' → logprob: -4.235097885131836
    6. 'A' → logprob: -5.110097885131836
    7. ' A' → logprob: -5.485097885131836
    8. ' '' → logprob: -6.485097885131836
    9. ' ' → logprob: -7.235097885131836
    10. '   ' → logprob: -7.985097885131836

Token 246: ' caractère' (ID: 80509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2733631730079651
    2. ' i' → logprob: -2.1483631134033203
    3. 'A' → logprob: -3.1483631134033203
    4. ' ' → logprob: -3.5233631134033203
    5. 'car' → logprob: -4.27336311340332
    6. ' caract' → logprob: -4.27336311340332
    7. ' caractère' → logprob: -4.89836311340332
    8. 'a' → logprob: -5.52336311340332
    9. ' A' → logprob: -5.52336311340332
    10. '   ' → logprob: -5.89836311340332

Token 247: ' est' (ID: 893)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43745672702789307
    2. 'i' → logprob: -1.562456727027893
    3. ' ' → logprob: -2.5624566078186035
    4. ' '' → logprob: -2.9374566078186035
    5. 'A' → logprob: -5.1874566078186035
    6. ' A' → logprob: -5.6874566078186035
    7. ''' → logprob: -6.8124566078186035
    8. ' ==' → logprob: -7.3124566078186035
    9. '<|end|>' → logprob: -7.3124566078186035
    10. ''i' → logprob: -7.5624566078186035

Token 248: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5620178580284119
    2. ''A' → logprob: -1.0620179176330566
    3. 'A' → logprob: -3.0620179176330566
    4. ''' → logprob: -3.5620179176330566
    5. ' A' → logprob: -5.312017917633057
    6. ' ' → logprob: -5.812017917633057
    7. ''un' → logprob: -8.062017440795898
    8. '"A' → logprob: -8.437017440795898
    9. ' un' → logprob: -9.062017440795898
    10. '   ' → logprob: -9.312017440795898

Token 249: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0012135679135099053
    2. ' A' → logprob: -6.876213550567627
    3. ''A' → logprob: -8.751214027404785
    4. ' '' → logprob: -11.376214027404785
    5. ''' → logprob: -11.876214027404785
    6. ' ' → logprob: -13.376214027404785
    7. 'a' → logprob: -14.626214027404785
    8. ' ')' → logprob: -14.626214027404785
    9. '')' → logprob: -15.001214027404785
    10. '   ' → logprob: -15.126214027404785

Token 250: '',' (ID: 787)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5973343253135681
    2. ',' → logprob: -1.722334384918213
    3. ':' → logprob: -2.097334384918213
    4. ':
' → logprob: -2.972334384918213
    5. '':' → logprob: -3.222334384918213
    6. '',' → logprob: -3.597334384918213
    7. '':
' → logprob: -4.847334384918213
    8. '):
' → logprob: -5.222334384918213
    9. '       ' → logprob: -5.472334384918213
    10. '):' → logprob: -5.847334384918213

Token 251: ' on' (ID: 402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5421090722084045
    2. '           ' → logprob: -1.0421090126037598
    3. 'a' → logprob: -3.0421090126037598
    4. '               ' → logprob: -4.29210901260376
    5. '            
' → logprob: -5.79210901260376
    6. '
' → logprob: -7.91710901260376
    7. ' 
' → logprob: -8.042109489440918
    8. ' ' → logprob: -8.542109489440918
    9. '       ' → logprob: -9.167109489440918
    10. '                
' → logprob: -9.292109489440918

Token 252: ' augmente' (ID: 150199)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46591243147850037
    2. ' a' → logprob: -1.2159124612808228
    3. 'a' → logprob: -2.840912342071533
    4. '            ' → logprob: -5.215912342071533
    5. ' ' → logprob: -5.340912342071533
    6. '       ' → logprob: -6.090912342071533
    7. '               ' → logprob: -6.590912342071533
    8. '   ' → logprob: -7.090912342071533
    9. '          ' → logprob: -7.840912342071533
    10. '        ' → logprob: -8.090912818908691

Token 253: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4750874936580658
    2. 'a' → logprob: -0.9750875234603882
    3. '   ' → logprob: -7.350087642669678
    4. ' ' → logprob: -8.60008716583252
    5. '    ' → logprob: -9.35008716583252
    6. '_a' → logprob: -10.47508716583252
    7. '	a' → logprob: -10.60008716583252
    8. '  ' → logprob: -11.10008716583252
    9. '           ' → logprob: -11.85008716583252
    10. ' ' → logprob: -11.85008716583252

Token 254: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038069721311330795
    2. ' a' → logprob: -3.288069725036621
    3. ' ' → logprob: -10.913069725036621
    4. '   ' → logprob: -12.038069725036621
    5. 'space' → logprob: -13.663069725036621
    6. '    ' → logprob: -14.038069725036621
    7. ' space' → logprob: -14.413069725036621
    8. '  ' → logprob: -14.538069725036621
    9. '_a' → logprob: -15.288069725036621
    10. '	a' → logprob: -15.288069725036621

Token 255: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25412145256996155
    2. ' a' → logprob: -1.7541214227676392
    3. ' de' → logprob: -3.1291215419769287
    4. ' d' → logprob: -5.62912130355835
    5. 'de' → logprob: -6.87912130355835
    6. '           ' → logprob: -7.25412130355835
    7. '_a' → logprob: -7.25412130355835
    8. '   ' → logprob: -7.75412130355835
    9. 'd' → logprob: -7.87912130355835
    10. ' ' → logprob: -8.004121780395508

Token 256: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2014143168926239
    2. ' a' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.701414108276367
    4. '	a' → logprob: -14.701414108276367
    5. ' ' → logprob: -15.951414108276367
    6. '_a' → logprob: -17.076414108276367
    7. '#a' → logprob: -17.701414108276367
    8. '1' → logprob: -17.701414108276367
    9. '```' → logprob: -17.826414108276367
    10. ''a' → logprob: -18.451414108276367

Token 257: ' variable' (ID: 11076)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011049585416913033
    2. ' a' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.511049270629883
    4. '
' → logprob: -16.511049270629883
    5. '	a' → logprob: -16.511049270629883
    6. '_a' → logprob: -16.636049270629883
    7. 'A' → logprob: -16.761049270629883
    8. ' 
' → logprob: -17.511049270629883
    9. '  ' → logprob: -17.761049270629883
    10. '1' → logprob: -18.011049270629883

Token 258: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2254205197095871
    2. ' a' → logprob: -1.6004204750061035
    3. ' ' → logprob: -12.600420951843262
    4. '_a' → logprob: -13.475420951843262
    5. '`' → logprob: -14.350420951843262
    6. ' ' → logprob: -14.475420951843262
    7. '	a' → logprob: -14.475420951843262
    8. '```' → logprob: -14.975420951843262
    9. ' `' → logprob: -15.725420951843262
    10. ''a' → logprob: -15.975420951843262

Token 259: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024769625160843134
    2. ' a' → logprob: -6.002477169036865
    3. ' ' → logprob: -13.627476692199707
    4. '   ' → logprob: -17.002477645874023
    5. '	a' → logprob: -17.002477645874023
    6. '_a' → logprob: -18.752477645874023
    7. '  ' → logprob: -18.877477645874023
    8. '
' → logprob: -19.252477645874023
    9. '    ' → logprob: -19.627477645874023
    10. ' ' → logprob: -20.127477645874023

Token 260: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.60078364610672
    2. '+=' → logprob: -0.97578364610672
    3. ')' → logprob: -3.350783586502075
    4. '+' → logprob: -3.475783586502075
    5. 'a' → logprob: -6.350783824920654
    6. ']+=' → logprob: -6.350783824920654
    7. ' de' → logprob: -6.725783824920654
    8. ' ' → logprob: -7.100783824920654
    9. '   ' → logprob: -7.225783824920654
    10. ' +' → logprob: -7.600783824920654

Token 261: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43089860677719116
    2. '+=' → logprob: -1.055898666381836
    3. '+' → logprob: -6.430898666381836
    4. ' de' → logprob: -8.930898666381836
    5. '   ' → logprob: -9.180898666381836
    6. ' +' → logprob: -9.555898666381836
    7. ' ' → logprob: -9.680898666381836
    8. ']+=' → logprob: -10.180898666381836
    9. '=' → logprob: -10.430898666381836
    10. '<|end|>' → logprob: -10.430898666381836

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011050417087972164
    2. ' ' → logprob: -4.511050224304199
    3. '+' → logprob: -13.2610502243042
    4. ' +' → logprob: -14.5110502243042
    5. '   ' → logprob: -15.7610502243042
    6. '```' → logprob: -15.8860502243042
    7. ' one' → logprob: -18.511051177978516
    8. 'un' → logprob: -18.636051177978516
    9. '  ' → logprob: -18.886051177978516
    10. ' ' → logprob: -19.011051177978516

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '+' → logprob: -14.625204086303711
    4. 'un' → logprob: -16.12520408630371
    5. '   ' → logprob: -16.12520408630371
    6. '```' → logprob: -16.25020408630371
    7. ' +' → logprob: -17.50020408630371
    8. '  ' → logprob: -18.25020408630371
    9. '
' → logprob: -18.25020408630371
    10. '`' → logprob: -19.50020408630371

Token 264: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2247948944568634
    2. 'a' → logprob: -1.974794864654541
    3. '           ' → logprob: -3.224794864654541
    4. ' a' → logprob: -3.974794864654541
    5. ' 
' → logprob: -6.974794864654541
    6. '        
' → logprob: -6.974794864654541
    7. '        ' → logprob: -7.724794864654541
    8. '   ' → logprob: -7.849794864654541
    9. '    ' → logprob: -8.5997953414917
    10. ' ' → logprob: -8.7247953414917

Token 266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.6671833395957947
    2. ' a' → logprob: -0.9171833395957947
    3. '           ' → logprob: -2.5421833992004395
    4. '       ' → logprob: -4.9171833992004395
    5. ' 
' → logprob: -7.0421833992004395
    6. '
' → logprob: -9.042182922363281
    7. '            
' → logprob: -9.792182922363281
    8. '        
' → logprob: -10.167182922363281
    9. '   ' → logprob: -10.292182922363281
    10. '               ' → logprob: -11.042182922363281

Token 267: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4028991758823395
    2. ' +=' → logprob: -1.152899146080017
    3. '+' → logprob: -4.152899265289307
    4. '=' → logprob: -8.777898788452148
    5. ' +' → logprob: -10.777898788452148
    6. ']+=' → logprob: -13.152898788452148
    7. '+="' → logprob: -13.402898788452148
    8. ' =' → logprob: -13.777898788452148
    9. '+='' → logprob: -14.277898788452148
    10. '   ' → logprob: -14.777898788452148

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.758615493774414
    4. '  ' → logprob: -19.133615493774414
    5. '```' → logprob: -20.383615493774414
    6. ' ' → logprob: -20.883615493774414
    7. '
' → logprob: -21.383615493774414
    8. '0' → logprob: -21.883615493774414
    9. '１' → logprob: -22.008615493774414
    10. '	' → logprob: -22.133615493774414

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -20.375030517578125
    4. '  ' → logprob: -21.250030517578125
    5. '```' → logprob: -22.625030517578125
    6. '
' → logprob: -23.375030517578125
    7. '0' → logprob: -24.625030517578125
    8. '۱' → logprob: -24.625030517578125
    9. '2' → logprob: -25.000030517578125
    10. '    ' → logprob: -25.000030517578125

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4516105353832245
    2. '
' → logprob: -1.0766105651855469
    3. 'else' → logprob: -4.951610565185547
    4. '<|end|>' → logprob: -5.201610565185547
    5. ' else' → logprob: -5.326610565185547
    6. ' 
' → logprob: -6.701610565185547
    7. '    
' → logprob: -6.701610565185547
    8. '   ' → logprob: -6.826610565185547
    9. '  
' → logprob: -7.576610565185547
    10. '\n' → logprob: -7.701610565185547

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17884764075279236
    2. 'else' → logprob: -2.428847551345825
    3. ' else' → logprob: -2.803847551345825
    4. ' 
' → logprob: -5.303847789764404
    5. '   ' → logprob: -6.053847789764404
    6. '<|end|>' → logprob: -6.178847789764404
    7. ' ' → logprob: -6.678847789764404
    8. '    
' → logprob: -6.678847789764404
    9. '  
' → logprob: -7.053847789764404
    10. '        
' → logprob: -7.553847789764404

Token 272: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5855507254600525
    2. ' else' → logprob: -0.8355507254600525
    3. '       ' → logprob: -4.710550785064697
    4. '   ' → logprob: -7.585550785064697
    5. 'elif' → logprob: -11.210550308227539
    6. '	else' → logprob: -11.335550308227539
    7. '    ' → logprob: -11.585550308227539
    8. 'e' → logprob: -11.960550308227539
    9. 'els' → logprob: -12.710550308227539
    10. ' elif' → logprob: -12.710550308227539

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08978234976530075
    2. ':
' → logprob: -2.464782238006592
    3. '       ' → logprob: -8.08978271484375
    4. '           ' → logprob: -8.71478271484375
    5. ' :' → logprob: -8.71478271484375
    6. ' :
' → logprob: -8.96478271484375
    7. '   ' → logprob: -9.71478271484375
    8. '<|end|>' → logprob: -12.08978271484375
    9. '        ' → logprob: -12.58978271484375
    10. ' b' → logprob: -13.46478271484375

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.174214705824852
    2. 'b' → logprob: -2.4242146015167236
    3. ' b' → logprob: -2.7992146015167236
    4. '       ' → logprob: -4.674214839935303
    5. '	       ' → logprob: -7.674214839935303
    6. '
' → logprob: -8.424214363098145
    7. '   ' → logprob: -9.174214363098145
    8. '	b' → logprob: -9.424214363098145
    9. '	   ' → logprob: -9.424214363098145
    10. ' ' → logprob: -9.799214363098145

Token 275: ' #' (ID: 1069)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.017129328101873398
    2. 'b' → logprob: -4.142129421234131
    3. '           ' → logprob: -6.892129421234131
    4. ' ' → logprob: -10.517128944396973
    5. ' 
' → logprob: -10.892128944396973
    6. '            ' → logprob: -11.892128944396973
    7. '       ' → logprob: -11.892128944396973
    8. '
' → logprob: -12.142128944396973
    9. ' ' → logprob: -12.392128944396973
    10. '    ' → logprob: -13.017128944396973

Token 276: ' Si' (ID: 7832)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3874746859073639
    2. 'b' → logprob: -1.1374746561050415
    3. '           ' → logprob: -7.762474536895752
    4. '   ' → logprob: -9.76247501373291
    5. '       ' → logprob: -9.76247501373291
    6. '    ' → logprob: -9.88747501373291
    7. ' ' → logprob: -13.13747501373291
    8. '
' → logprob: -13.13747501373291
    9. '        ' → logprob: -13.38747501373291
    10. '     ' → logprob: -13.38747501373291

Token 277: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06372089684009552
    2. 'b' → logprob: -2.813720941543579
    3. ' ' → logprob: -7.313720703125
    4. '           ' → logprob: -7.313720703125
    5. '   ' → logprob: -8.813720703125
    6. ' ' → logprob: -9.188720703125
    7. '    ' → logprob: -9.563720703125
    8. '	b' → logprob: -11.063720703125
    9. '            ' → logprob: -11.188720703125
    10. '  ' → logprob: -11.188720703125

Token 278: ' condition' (ID: 7060)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3486115336418152
    2. ' b' → logprob: -1.22361159324646
    3. '   ' → logprob: -9.598611831665039
    4. ' ' → logprob: -9.723611831665039
    5. '  ' → logprob: -11.098611831665039
    6. '    ' → logprob: -12.598611831665039
    7. '	b' → logprob: -12.598611831665039
    8. '       ' → logprob: -12.848611831665039
    9. 'a' → logprob: -12.973611831665039
    10. '           ' → logprob: -13.348611831665039

Token 279: ' est' (ID: 893)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4081149101257324
    2. 'b' → logprob: -1.2831149101257324
    3. ':' → logprob: -3.1581149101257324
    4. '   ' → logprob: -5.533114910125732
    5. ' +=' → logprob: -5.533114910125732
    6. ' ' → logprob: -6.533114910125732
    7. '           ' → logprob: -7.283114910125732
    8. ' est' → logprob: -7.283114910125732
    9. ' !=' → logprob: -7.408114910125732
    10. ':
' → logprob: -7.533114910125732

Token 280: ' fa' (ID: 2229)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8052895665168762
    2. 'fa' → logprob: -1.0552895069122314
    3. 'v' → logprob: -2.1802895069122314
    4. 'f' → logprob: -3.0552895069122314
    5. 'pas' → logprob: -3.9302895069122314
    6. ' False' → logprob: -4.5552897453308105
    7. ' fa' → logprob: -5.0552897453308105
    8. 'F' → logprob: -6.3052897453308105
    9. ' pas' → logprob: -6.4302897453308105
    10. 'false' → logprob: -6.5552897453308105

Token 281: 'usse' (ID: 32419)
  Prédit: 'usse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usse' → logprob: -0.43432214856147766
    2. 'ute' → logprob: -1.8093221187591553
    3. 'lse' → logprob: -3.0593221187591553
    4. 'use' → logprob: -3.0593221187591553
    5. 'u' → logprob: -3.4343221187591553
    6. 'us' → logprob: -3.4343221187591553
    7. 'ux' → logprob: -3.9343221187591553
    8. 's' → logprob: -5.559322357177734
    9. 'ile' → logprob: -6.934322357177734
    10. 'ut' → logprob: -7.309322357177734

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5728812217712402
    2. '           ' → logprob: -0.9478812217712402
    3. ':' → logprob: -3.1978812217712402
    4. 'b' → logprob: -6.44788122177124
    5. ':
' → logprob: -6.44788122177124
    6. ' b' → logprob: -6.44788122177124
    7. '   ' → logprob: -6.94788122177124
    8. ',b' → logprob: -7.44788122177124
    9. '       ' → logprob: -7.69788122177124
    10. ' ,' → logprob: -7.82288122177124

Token 283: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4170495271682739
    2. ' b' → logprob: -1.167049527168274
    3. 'b' → logprob: -3.5420494079589844
    4. '   ' → logprob: -8.542049407958984
    5. '       ' → logprob: -8.667049407958984
    6. '    ' → logprob: -9.417049407958984
    7. '            ' → logprob: -9.792049407958984
    8. '               ' → logprob: -10.042049407958984
    9. '          ' → logprob: -10.042049407958984
    10. ' ' → logprob: -10.292049407958984

Token 284: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.683671236038208
    2. '       ' → logprob: -0.933671236038208
    3. 'b' → logprob: -3.933671236038208
    4. '   ' → logprob: -4.058670997619629
    5. ' b' → logprob: -4.183670997619629
    6. ''est' → logprob: -4.183670997619629
    7. 'a' → logprob: -5.058670997619629
    8. 'ont' → logprob: -5.183670997619629
    9. ''b' → logprob: -5.308670997619629
    10. 'est' → logprob: -6.308670997619629

Token 285: '-à' (ID: 56297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.092366099357605
    2. 'b' → logprob: -1.217366099357605
    3. '-à' → logprob: -1.717366099357605
    4. 'à' → logprob: -2.2173662185668945
    5. ' à' → logprob: -3.3423662185668945
    6. '   ' → logprob: -3.9673662185668945
    7. ' b' → logprob: -4.2173662185668945
    8. 'not' → logprob: -6.0923662185668945
    9. ' ' → logprob: -6.9673662185668945
    10. 'que' → logprob: -7.2173662185668945

Token 286: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032324944622814655
    2. '   ' → logprob: -6.003232479095459
    3. '       ' → logprob: -8.878232955932617
    4. '0' → logprob: -9.003232955932617
    5. 'à' → logprob: -9.253232955932617
    6. ' ' → logprob: -9.378232955932617
    7. '-à' → logprob: -9.753232955932617
    8. 'False' → logprob: -10.003232955932617
    9. 'la' → logprob: -10.753232955932617
    10. 'int' → logprob: -11.128232955932617

Token 287: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12045212835073471
    2. 'b' → logprob: -2.9954521656036377
    3. ' b' → logprob: -3.1204521656036377
    4. '            ' → logprob: -4.745451927185059
    5. ' que' → logprob: -5.120451927185059
    6. ' ' → logprob: -6.245451927185059
    7. ' ' → logprob: -6.745451927185059
    8. '               ' → logprob: -8.120451927185059
    9. '   ' → logprob: -8.495451927185059
    10. 'que' → logprob: -8.620451927185059

Token 288: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0143873691558838
    2. ' b' → logprob: -1.3893873691558838
    3. 'b' → logprob: -1.5143873691558838
    4. 'i' → logprob: -1.8893873691558838
    5. '           ' → logprob: -5.389387130737305
    6. ' ' → logprob: -6.014387130737305
    7. ' le' → logprob: -6.264387130737305
    8. ' not' → logprob: -6.639387130737305
    9. 'le' → logprob: -7.014387130737305
    10. 'not' → logprob: -7.014387130737305

Token 289: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6629903316497803
    2. 'i' → logprob: -1.1629903316497803
    3. ' caractère' → logprob: -2.1629903316497803
    4. ' i' → logprob: -3.6629903316497803
    5. ' caract' → logprob: -4.287990570068359
    6. 'b' → logprob: -4.662990570068359
    7. ' b' → logprob: -6.287990570068359
    8. ' ' → logprob: -6.412990570068359
    9. '   ' → logprob: -6.537990570068359
    10. ' car' → logprob: -7.412990570068359

Token 290: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06750356405973434
    2. ' !=' → logprob: -3.3175034523010254
    3. 'n' → logprob: -3.9425034523010254
    4. ''' → logprob: -6.067503452301025
    5. '!=' → logprob: -6.192503452301025
    6. ' isn't' → logprob: -6.317503452301025
    7. ' is' → logprob: -6.942503452301025
    8. ' ' → logprob: -7.317503452301025
    9. '!='' → logprob: -7.692503452301025
    10. ' est' → logprob: -7.942503452301025

Token 291: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21558603644371033
    2. ''est' → logprob: -2.715585947036743
    3. '!=' → logprob: -2.965585947036743
    4. ' !=' → logprob: -3.090585947036743
    5. '!='' → logprob: -4.465586185455322
    6. ' n' → logprob: -4.590586185455322
    7. ' '' → logprob: -5.465586185455322
    8. '='' → logprob: -7.715586185455322
    9. ' est' → logprob: -7.715586185455322
    10. '=' → logprob: -7.840586185455322

Token 292: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5460644364356995
    2. 'pas' → logprob: -0.9210644364356995
    3. ''' → logprob: -4.296064376831055
    4. 'not' → logprob: -5.296064376831055
    5. ' not' → logprob: -6.421064376831055
    6. '_pas' → logprob: -6.796064376831055
    7. ''s' → logprob: -8.046064376831055
    8. 'Pas' → logprob: -8.046064376831055
    9. 's' → logprob: -8.796064376831055
    10. ' '' → logprob: -8.796064376831055

Token 293: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.3190694749355316
    2. ''' → logprob: -1.944069504737854
    3. ' '' → logprob: -2.0690693855285645
    4. ' pas' → logprob: -6.9440693855285645
    5. 'A' → logprob: -7.3190693855285645
    6. ''a' → logprob: -7.6940693855285645
    7. ' ' → logprob: -7.9440693855285645
    8. 'pas' → logprob: -8.319069862365723
    9. ''un' → logprob: -8.819069862365723
    10. ' A' → logprob: -8.819069862365723

Token 294: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6334978938102722
    2. ''A' → logprob: -0.7584978938102722
    3. ''' → logprob: -7.383497714996338
    4. ' '' → logprob: -9.133498191833496
    5. '')' → logprob: -10.258498191833496
    6. ''a' → logprob: -10.883498191833496
    7. ' ' → logprob: -11.008498191833496
    8. '’A' → logprob: -11.008498191833496
    9. '"A' → logprob: -11.133498191833496
    10. 'a' → logprob: -11.258498191833496

Token 295: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03231640160083771
    2. '           ' → logprob: -4.157316207885742
    3. ' ,' → logprob: -4.407316207885742
    4. ':' → logprob: -6.407316207885742
    5. 'b' → logprob: -7.407316207885742
    6. '),' → logprob: -7.657316207885742
    7. ':
' → logprob: -7.657316207885742
    8. ' b' → logprob: -7.907316207885742
    9. '       ' → logprob: -9.032316207885742
    10. '):
' → logprob: -9.657316207885742

Token 296: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3164180517196655
    2. ' b' → logprob: -1.3164180517196655
    3. 'b' → logprob: -5.816418170928955
    4. '   ' → logprob: -10.191417694091797
    5. '               ' → logprob: -10.441417694091797
    6. '
' → logprob: -10.566417694091797
    7. '       ' → logprob: -10.566417694091797
    8. ' ' → logprob: -11.191417694091797
    9. '          ' → logprob: -12.191417694091797
    10. ' ' → logprob: -12.191417694091797

Token 297: ' augmente' (ID: 150199)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3975653052330017
    2. 'b' → logprob: -1.5225653648376465
    3. ' b' → logprob: -2.2725653648376465
    4. '       ' → logprob: -5.7725653648376465
    5. ' ' → logprob: -7.1475653648376465
    6. '   ' → logprob: -7.5225653648376465
    7. 'a' → logprob: -7.6475653648376465
    8. '```' → logprob: -7.7725653648376465
    9. '          ' → logprob: -8.022564888000488
    10. '    ' → logprob: -8.897564888000488

Token 298: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.029775140807032585
    2. 'b' → logprob: -3.5297751426696777
    3. '           ' → logprob: -10.90477466583252
    4. '	b' → logprob: -13.27977466583252
    5. '1' → logprob: -13.65477466583252
    6. ' ' → logprob: -13.65477466583252
    7. '    ' → logprob: -14.27977466583252
    8. ' ' → logprob: -14.65477466583252
    9. ' б' → logprob: -15.40477466583252
    10. '            ' → logprob: -15.52977466583252

Token 299: ' valeur' (ID: 41664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25200212001800537
    2. ' b' → logprob: -1.5020021200180054
    3. '1' → logprob: -9.752001762390137
    4. ' ' → logprob: -11.502001762390137
    5. '           ' → logprob: -12.877001762390137
    6. '   ' → logprob: -14.502001762390137
    7. '	b' → logprob: -14.877001762390137
    8. '```' → logprob: -14.877001762390137
    9. '    ' → logprob: -15.252001762390137
    10. ' ' → logprob: -15.877001762390137

Token 300: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1010797992348671
    2. '           ' → logprob: -2.9760797023773193
    3. '    ' → logprob: -3.6010797023773193
    4. '   ' → logprob: -4.726079940795898
    5. 'de' → logprob: -5.351079940795898
    6. '       ' → logprob: -6.351079940795898
    7. ' of' → logprob: -7.226079940795898
    8. 'b' → logprob: -7.726079940795898
    9. ' ' → logprob: -8.226079940795898
    10. ' ' → logprob: -8.601079940795898

Token 301: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759508013725281
    2. ' b' → logprob: -0.8259508013725281
    3. '1' → logprob: -12.450950622558594
    4. ' ' → logprob: -12.700950622558594
    5. ' la' → logprob: -13.325950622558594
    6. '```' → logprob: -14.200950622558594
    7. '	b' → logprob: -14.325950622558594
    8. '   ' → logprob: -14.825950622558594
    9. 'la' → logprob: -15.450950622558594
    10. ' ' → logprob: -15.575950622558594

Token 302: ' variable' (ID: 11076)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029756855219602585
    2. ' b' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.029756546020508
    4. ''b' → logprob: -15.904756546020508
    5. ''' → logprob: -16.404756546020508
    6. '`' → logprob: -16.779756546020508
    7. '1' → logprob: -17.279756546020508
    8. '	b' → logprob: -17.404756546020508
    9. '```' → logprob: -17.654756546020508
    10. 'space' → logprob: -18.029756546020508

Token 303: ' '' (ID: 461)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3492757976055145
    2. 'b' → logprob: -1.224275827407837
    3. ''' → logprob: -7.224275588989258
    4. ''b' → logprob: -9.849275588989258
    5. ' ' → logprob: -10.724275588989258
    6. ' '' → logprob: -10.974275588989258
    7. '`' → logprob: -12.599275588989258
    8. '"' → logprob: -13.599275588989258
    9. ' ' → logprob: -13.849275588989258
    10. ' `' → logprob: -13.974275588989258

Token 304: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009128939709626138
    2. ' b' → logprob: -7.000912666320801
    3. ' ' → logprob: -14.6259126663208
    4. '   ' → logprob: -14.8759126663208
    5. '```' → logprob: -15.5009126663208
    6. '
' → logprob: -16.250913619995117
    7. '	b' → logprob: -16.750913619995117
    8. '  ' → logprob: -16.875913619995117
    9. '`' → logprob: -17.625913619995117
    10. '    ' → logprob: -17.625913619995117

Token 305: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1424381136894226
    2. ' de' → logprob: -2.2674381732940674
    3. '+=' → logprob: -3.6424381732940674
    4. '+' → logprob: -6.267437934875488
    5. ' +' → logprob: -8.392437934875488
    6. ' d' → logprob: -8.392437934875488
    7. ']+=' → logprob: -8.642437934875488
    8. ' ' → logprob: -8.892437934875488
    9. 'de' → logprob: -9.017437934875488
    10. ' of' → logprob: -9.642437934875488

Token 306: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7238550782203674
    2. ' +=' → logprob: -0.7238550782203674
    3. '           ' → logprob: -4.098855018615723
    4. '+=' → logprob: -4.473855018615723
    5. 'de' → logprob: -6.848855018615723
    6. ' d' → logprob: -8.098855018615723
    7. ' of' → logprob: -8.223855018615723
    8. '+' → logprob: -9.098855018615723
    9. '            ' → logprob: -9.473855018615723
    10. 'd' → logprob: -9.598855018615723

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014157623052597
    2. ' ' → logprob: -1.701415777206421
    3. '   ' → logprob: -13.451416015625
    4. ' ' → logprob: -14.451416015625
    5. '```' → logprob: -15.701416015625
    6. '           ' → logprob: -16.076416015625
    7. '
' → logprob: -16.451416015625
    8. '    ' → logprob: -17.076416015625
    9. '  ' → logprob: -17.326416015625
    10. '       ' → logprob: -17.701416015625

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.128177642822266
    4. ' ' → logprob: -19.503177642822266
    5. '
' → logprob: -20.003177642822266
    6. '```' → logprob: -20.003177642822266
    7. '  ' → logprob: -20.753177642822266
    8. '１' → logprob: -20.878177642822266
    9. '' → logprob: -21.753177642822266
    10. '۱' → logprob: -22.003177642822266

Token 309: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021644573658704758
    2. ' b' → logprob: -4.146644592285156
    3. 'b' → logprob: -5.521644592285156
    4. '       ' → logprob: -7.521644592285156
    5. '
' → logprob: -7.521644592285156
    6. '   ' → logprob: -7.896644592285156
    7. ' 
' → logprob: -9.521644592285156
    8. '<|end|>' → logprob: -11.021644592285156
    9. ' ' → logprob: -11.521644592285156
    10. '            
' → logprob: -11.896644592285156

Token 311: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47504040598869324
    2. 'b' (adapté à ' b') → logprob: -0.9750404357910156
    3. '           ' → logprob: -6.975040435791016
    4. '       ' → logprob: -11.225040435791016
    5. '   ' → logprob: -12.600040435791016
    6. '    ' → logprob: -12.850040435791016
    7. '            ' → logprob: -12.850040435791016
    8. '        ' → logprob: -13.600040435791016
    9. ' ' → logprob: -14.100040435791016
    10. ' 
' → logprob: -14.100040435791016

Token 312: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889848947525024
    2. '+=' → logprob: -2.5788984298706055
    3. '+' → logprob: -11.828898429870605
    4. ' +' → logprob: -14.453898429870605
    5. ']+=' → logprob: -14.703898429870605
    6. '=' → logprob: -15.578898429870605
    7. ' ' → logprob: -16.578899383544922
    8. '    ' → logprob: -17.078899383544922
    9. '+='' → logprob: -17.078899383544922
    10. '   ' → logprob: -17.203899383544922

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.311967849731445
    4. '```' → logprob: -16.811967849731445
    5. '   ' → logprob: -17.811967849731445
    6. '0' → logprob: -18.374467849731445
    7. ' 
' → logprob: -18.936967849731445
    8. '' → logprob: -19.311967849731445
    9. '<|end|>' → logprob: -19.374467849731445
    10. '  ' → logprob: -19.499467849731445

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -22.125001907348633
    4. '```' → logprob: -23.000001907348633
    5. '１' → logprob: -23.625001907348633
    6. '  ' → logprob: -23.625001907348633
    7. '۱' → logprob: -24.375001907348633
    8. '
' → logprob: -24.500001907348633
    9. '0' → logprob: -24.625001907348633
    10. '' → logprob: -25.125001907348633

Token 315: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16555027663707733
    2. '   ' → logprob: -1.9155502319335938
    3. '<|end|>' → logprob: -5.915550231933594
    4. '    
' → logprob: -6.165550231933594
    5. '```' → logprob: -8.790550231933594
    6. '

' → logprob: -8.790550231933594
    7. '\n' → logprob: -9.915550231933594
    8. '
' → logprob: -9.915550231933594
    9. '
    
' → logprob: -10.665550231933594
    10. '  
' → logprob: -10.665550231933594

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42558106780052185
    2. '
' → logprob: -1.1755810976028442
    3. '    
' → logprob: -3.3005809783935547
    4. '<|end|>' → logprob: -7.675580978393555
    5. 'return' → logprob: -8.800580978393555
    6. 'if' → logprob: -9.175580978393555
    7. 'print' → logprob: -9.175580978393555
    8. '

' → logprob: -9.675580978393555
    9. '```' → logprob: -9.800580978393555
    10. '  
' → logprob: -10.300580978393555

Token 317: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05066816136240959
    2. 'print' → logprob: -3.800668239593506
    3. '    
' → logprob: -4.675668239593506
    4. 'if' → logprob: -5.300668239593506
    5. 'return' → logprob: -5.550668239593506
    6. '
' → logprob: -5.925668239593506
    7. ' if' → logprob: -6.425668239593506
    8. '#' (adapté à ' #') → logprob: -6.425668239593506
    9. ' print' → logprob: -6.550668239593506
    10. ' return' → logprob: -6.800668239593506

Token 318: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4612399935722351
    2. 'print' → logprob: -1.8362400531768799
    3. ' if' → logprob: -2.08624005317688
    4. 'return' → logprob: -3.46124005317688
    5. '#' → logprob: -3.83624005317688
    6. '   ' → logprob: -3.96124005317688
    7. 'result' → logprob: -5.211239814758301
    8. ' print' → logprob: -5.336239814758301
    9. ' return' → logprob: -6.086239814758301
    10. ' #' → logprob: -7.586239814758301

Token 319: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5444936156272888
    2. '   ' → logprob: -1.5444936752319336
    3. 'la' → logprob: -2.0444936752319336
    4. 'l' → logprob: -3.2944936752319336
    5. 'le' → logprob: -4.544493675231934
    6. ' l' → logprob: -4.919493675231934
    7. ' le' → logprob: -5.169493675231934
    8. '#' → logprob: -5.794493675231934
    9. ' avoir' → logprob: -6.044493675231934
    10. ' cette' → logprob: -6.169493675231934

Token 320: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.5296314358711243
    2. 'for' → logprob: -1.4046313762664795
    3. 'if' → logprob: -2.6546313762664795
    4. ' boucle' → logprob: -2.6546313762664795
    5. 'print' → logprob: -4.904631614685059
    6. 'condition' → logprob: -5.654631614685059
    7. '#' → logprob: -5.779631614685059
    8. 'ligne' → logprob: -5.904631614685059
    9. '   ' → logprob: -6.279631614685059
    10. 'b' → logprob: -6.779631614685059

Token 321: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08533205091953278
    2. '    
' → logprob: -2.585332155227661
    3. ',' → logprob: -5.960331916809082
    4. '   
' → logprob: -6.710331916809082
    5. '
' → logprob: -6.835331916809082
    6. '    ' → logprob: -8.210331916809082
    7. ' 
' → logprob: -8.335331916809082
    8. '  
' → logprob: -8.335331916809082
    9. ' if' → logprob: -9.085331916809082
    10. '     
' → logprob: -9.210331916809082

Token 322: ' tous' (ID: 10688)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7979646325111389
    2. '   ' → logprob: -1.0479645729064941
    3. 'if' → logprob: -2.297964572906494
    4. ' print' → logprob: -3.047964572906494
    5. 'print' → logprob: -3.047964572906494
    6. '#' → logprob: -6.297964572906494
    7. ' return' → logprob: -7.172964572906494
    8. 'return' → logprob: -7.547964572906494
    9. ' #' → logprob: -8.547965049743652
    10. '    
' → logprob: -8.547965049743652

Token 323: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5588761568069458
    2. ' les' → logprob: -1.6838761568069458
    3. 'print' → logprob: -2.5588760375976562
    4. ' ' → logprob: -2.6838760375976562
    5. ' print' → logprob: -3.5588760375976562
    6. 'les' → logprob: -4.183876037597656
    7. '#' → logprob: -4.183876037597656
    8. '  ' → logprob: -4.933876037597656
    9. ' espaces' → logprob: -5.308876037597656
    10. 'a' → logprob: -5.683876037597656

Token 324: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7195640206336975
    2. ' espaces' → logprob: -2.0945639610290527
    3. ' caractères' → logprob: -2.3445639610290527
    4. 'esp' → logprob: -2.9695639610290527
    5. 'if' → logprob: -2.9695639610290527
    6. 'A' → logprob: -3.0945639610290527
    7. 'print' → logprob: -3.2195639610290527
    8. ' if' → logprob: -3.7195639610290527
    9. ' A' → logprob: -4.219563961029053
    10. '   ' → logprob: -4.469563961029053

Token 325: ' ont' (ID: 4930)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1558210849761963
    2. 's' → logprob: -1.6558210849761963
    3. ' '' → logprob: -1.9058210849761963
    4. ' ont' → logprob: -2.9058210849761963
    5. ' A' → logprob: -3.1558210849761963
    6. 'ont' → logprob: -3.4058210849761963
    7. '#' → logprob: -3.5308210849761963
    8. ''' → logprob: -3.6558210849761963
    9. ''A' → logprob: -3.7808210849761963
    10. ''ont' → logprob: -3.9058210849761963

Token 326: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.28406551480293274
    2. ' été' → logprob: -1.4090654850006104
    3. ' ' → logprob: -6.7840657234191895
    4. '#' → logprob: -8.034065246582031
    5. 'être' → logprob: -8.159065246582031
    6. 'éta' → logprob: -8.284065246582031
    7. 'ét' → logprob: -8.909065246582031
    8. 'êt' → logprob: -9.284065246582031
    9. 'been' → logprob: -9.284065246582031
    10. 'é' → logprob: -9.534065246582031

Token 327: ' analys' (ID: 27616)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.6272281408309937
    2. 'com' → logprob: -1.6272281408309937
    3. ' trait' → logprob: -2.627228260040283
    4. ' parcour' → logprob: -2.627228260040283
    5. ' compt' → logprob: -3.002228260040283
    6. 'comp' → logprob: -3.627228260040283
    7. 'par' → logprob: -3.752228260040283
    8. ' analys' → logprob: -4.127228260040283
    9. 'anal' → logprob: -5.752228260040283
    10. '#' → logprob: -6.752228260040283

Token 328: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.06221639737486839
    2. 'é' → logprob: -2.812216281890869
    3. 'es' → logprob: -8.937216758728027
    4. 's' → logprob: -10.062216758728027
    5. '#' → logprob: -10.937216758728027
    6. 'e' → logprob: -11.312216758728027
    7. 'u' → logprob: -11.687216758728027
    8. 'ès' → logprob: -12.187216758728027
    9. 'ées' → logprob: -12.187216758728027
    10. ',' → logprob: -12.687216758728027

Token 329: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04020261391997337
    2. '    
' → logprob: -3.7902026176452637
    3. '
' → logprob: -4.165202617645264
    4. ',' → logprob: -7.290202617645264
    5. '  
' → logprob: -8.915202140808105
    6. ' 
' → logprob: -8.915202140808105
    7. '   
' → logprob: -9.290202140808105
    8. '    
    
' → logprob: -10.290202140808105
    9. ',
' → logprob: -10.415202140808105
    10. '.' → logprob: -10.540202140808105

Token 330: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2538734674453735
    2. ' print' → logprob: -1.8788734674453735
    3. '#' → logprob: -2.003873348236084
    4. ' if' → logprob: -2.003873348236084
    5. ' #' → logprob: -2.128873348236084
    6. 'if' → logprob: -2.628873348236084
    7. '   ' → logprob: -3.003873348236084
    8. ' la' → logprob: -3.753873348236084
    9. ' a' → logprob: -5.128873348236084
    10. 'a' → logprob: -5.253873348236084

Token 331: ' compte' (ID: 19657)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3916017711162567
    2. '#' → logprob: -2.141601800918579
    3. 'if' → logprob: -2.391601800918579
    4. ' if' → logprob: -3.016601800918579
    5. ' print' → logprob: -3.891601800918579
    6. ' #' → logprob: -4.1416015625
    7. '   ' → logprob: -4.5166015625
    8. 'a' → logprob: -5.1416015625
    9. 'rés' → logprob: -6.0166015625
    10. 'result' → logprob: -6.2666015625

Token 332: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23741184175014496
    2. 'urs' → logprob: -1.6124118566513062
    3. 'r' → logprob: -5.112411975860596
    4. '   ' → logprob: -6.112411975860596
    5. 'rs' → logprob: -6.112411975860596
    6. 'print' → logprob: -7.487411975860596
    7. 'nts' → logprob: -7.737411975860596
    8. '       ' → logprob: -9.237411499023438
    9. 'u' → logprob: -9.612411499023438
    10. ' ' → logprob: -9.987411499023438

Token 333: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9217349290847778
    2. ' print' → logprob: -1.2967349290847778
    3. ' a' → logprob: -2.6717348098754883
    4. 'a' → logprob: -2.9217348098754883
    5. ' A' → logprob: -3.1717348098754883
    6. ' sont' → logprob: -3.2967348098754883
    7. '#' → logprob: -3.4217348098754883
    8. 'A' → logprob: -3.6717348098754883
    9. '   ' → logprob: -3.9217348098754883
    10. ' #' → logprob: -4.171734809875488

Token 334: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009768958203494549
    2. ' a' → logprob: -4.634768962860107
    3. '   ' → logprob: -11.88476848602295
    4. 'print' → logprob: -13.00976848602295
    5. ' ' → logprob: -13.63476848602295
    6. '#' → logprob: -14.88476848602295
    7. ',' → logprob: -14.88476848602295
    8. '  ' → logprob: -15.00976848602295
    9. ''a' → logprob: -15.13476848602295
    10. ' print' → logprob: -15.63476848602295

Token 335: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04574929550290108
    2. '+' → logprob: -4.545749187469482
    3. '>' → logprob: -4.545749187469482
    4. ' ,' → logprob: -4.795749187469482
    5. ' ' → logprob: -5.795749187469482
    6. ' >' → logprob: -5.920749187469482
    7. ')' → logprob: -6.170749187469482
    8. 'print' → logprob: -6.420749187469482
    9. ' +=' → logprob: -6.795749187469482
    10. ' et' → logprob: -7.045749187469482

Token 336: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4655911922454834
    2. ' et' → logprob: -1.5905911922454834
    3. 'print' → logprob: -2.2155911922454834
    4. '#' → logprob: -2.3405911922454834
    5. 'et' → logprob: -2.3405911922454834
    6. ',' → logprob: -2.4655911922454834
    7. ' #' → logprob: -2.5905911922454834
    8. '   ' → logprob: -3.5905911922454834
    9. ' +' → logprob: -3.5905911922454834
    10. ' and' → logprob: -4.4655914306640625

Token 337: ' '' (ID: 461)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22694984078407288
    2. 'b' → logprob: -1.7269498109817505
    3. ''' → logprob: -4.101949691772461
    4. ' '' → logprob: -5.226949691772461
    5. ''b' → logprob: -5.726949691772461
    6. ' ' → logprob: -10.726949691772461
    7. ''s' → logprob: -11.976949691772461
    8. ' ' → logprob: -12.726949691772461
    9. '  ' → logprob: -13.101949691772461
    10. '   ' → logprob: -13.226949691772461

Token 338: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005237668287009001
    2. ' b' → logprob: -5.255237579345703
    3. ' ' → logprob: -13.380237579345703
    4. '   ' → logprob: -13.880237579345703
    5. ''' → logprob: -14.630237579345703
    6. '  ' → logprob: -15.630237579345703
    7. ''b' → logprob: -15.880237579345703
    8. ' '' → logprob: -16.255237579345703
    9. '_b' → logprob: -16.755237579345703
    10. '	b' → logprob: -16.817737579345703

Token 339: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1351745128631592
    2. ' sont' → logprob: -1.3851745128631592
    3. 's' → logprob: -1.8851745128631592
    4. '#' → logprob: -2.135174512863159
    5. 'print' → logprob: -3.135174512863159
    6. ' ont' → logprob: -3.135174512863159
    7. 'ont' → logprob: -3.760174512863159
    8. ' #' → logprob: -4.510174751281738
    9. ' print' → logprob: -5.010174751281738
    10. ']' → logprob: -5.635174751281738

Token 340: ' ont' (ID: 4930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6372888088226318
    2. '#' → logprob: -1.6372888088226318
    3. ' print' → logprob: -2.262288808822632
    4. 's' → logprob: -2.887288808822632
    5. ')' → logprob: -3.262288808822632
    6. ' sont' → logprob: -4.012289047241211
    7. ' #' → logprob: -4.137289047241211
    8. 'ont' → logprob: -4.512289047241211
    9. ' have' → logprob: -4.762289047241211
    10. ' are' → logprob: -5.262289047241211

Token 341: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.09103626757860184
    2. 'été' → logprob: -2.466036319732666
    3. ' been' → logprob: -7.966036319732666
    4. '=' → logprob: -8.216035842895508
    5. ' ' → logprob: -8.216035842895508
    6. '#' → logprob: -8.341035842895508
    7. 'dé' → logprob: -9.216035842895508
    8. ' #' → logprob: -9.341035842895508
    9. 'être' → logprob: -9.716035842895508
    10. 'print' → logprob: -9.966035842895508

Token 342: ' mis' (ID: 4694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039268095046281815
    2. '   ' → logprob: -4.2892680168151855
    3. ' print' → logprob: -4.2892680168151855
    4. 'calcul' → logprob: -5.9142680168151855
    5. 'aff' → logprob: -6.2892680168151855
    6. 'increment' → logprob: -6.5392680168151855
    7. 'augment' → logprob: -6.7892680168151855
    8. 'util' → logprob: -6.7892680168151855
    9. '#' → logprob: -7.0392680168151855
    10. ' ' → logprob: -7.7892680168151855

Token 343: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3882392644882202
    2. ' à' → logprob: -1.1382392644882202
    3. '#' → logprob: -8.013238906860352
    4. 'À' → logprob: -8.513238906860352
    5. 'a' → logprob: -8.763238906860352
    6. 'au' → logprob: -9.013238906860352
    7. ' ' → logprob: -9.013238906860352
    8. ''à' → logprob: -9.263238906860352
    9. '-à' → logprob: -9.888238906860352
    10. '<|end|>' → logprob: -10.013238906860352

Token 344: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.014343898743391037
    2. 'jou' → logprob: -4.389343738555908
    3. '```' → logprob: -7.139343738555908
    4. '1' → logprob: -7.514343738555908
    5. ' jour' → logprob: -8.764344215393066
    6. 'jours' → logprob: -9.264344215393066
    7. 'j' → logprob: -9.764344215393066
    8. '0' → logprob: -10.264344215393066
    9. 'day' → logprob: -10.639344215393066
    10. ' ' → logprob: -11.014344215393066

Token 345: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060860518366098404
    2. '    
' → logprob: -3.3108606338500977
    3. '
' → logprob: -3.8108606338500977
    4. 'print' → logprob: -8.810860633850098
    5. '  
' → logprob: -9.685860633850098
    6. '    
    
' → logprob: -9.810860633850098
    7. '   
' → logprob: -10.060860633850098
    8. '<|end|>' → logprob: -10.310860633850098
    9. 'if' → logprob: -11.060860633850098
    10. ',' → logprob: -11.435860633850098

Token 346: ' conséquence' (ID: 138042)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.09625278413295746
    2. '   ' → logprob: -3.596252679824829
    3. 'accord' → logprob: -4.221252918243408
    4. '#' → logprob: -4.596252918243408
    5. 'fon' → logprob: -4.721252918243408
    6. ' fonction' → logprob: -4.846252918243408
    7. 'cons' → logprob: -4.846252918243408
    8. ' ' → logprob: -5.221252918243408
    9. 'a' → logprob: -6.471252918243408
    10. 'def' → logprob: -6.721252918243408

Token 347: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014948884956538677
    2. '    
' → logprob: -4.514948844909668
    3. '
' → logprob: -5.639948844909668
    4. 'print' → logprob: -8.764948844909668
    5. '  
' → logprob: -9.764948844909668
    6. '   
' → logprob: -10.389948844909668
    7. ' 
' → logprob: -10.889948844909668
    8. '#' → logprob: -11.014948844909668
    9. 'return' → logprob: -11.514948844909668
    10. '<|end|>' → logprob: -11.514948844909668

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029713455587625504
    2. '    
' → logprob: -4.0297136306762695
    3. '
' → logprob: -4.5297136306762695
    4. 'print' → logprob: -8.52971363067627
    5. '   
' → logprob: -8.77971363067627
    6. '  
' → logprob: -8.90471363067627
    7. ' 
' → logprob: -9.15471363067627
    8. '    ' → logprob: -10.40471363067627
    9. '```' → logprob: -10.77971363067627
    10. '    
    
' → logprob: -11.15471363067627

Token 349: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14323250949382782
    2. 'if' → logprob: -2.893232583999634
    3. 'print' → logprob: -3.143232583999634
    4. ' if' → logprob: -3.643232583999634
    5. ' print' → logprob: -5.393232345581055
    6. 'return' → logprob: -6.268232345581055
    7. '    
' → logprob: -7.018232345581055
    8. ' return' → logprob: -7.268232345581055
    9. '#' (adapté à ' #') → logprob: -8.268232345581055
    10. 'p' → logprob: -9.018232345581055

Token 350: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2181415855884552
    2. ' if' → logprob: -2.343141555786133
    3. 'print' → logprob: -2.718141555786133
    4. 'return' → logprob: -3.968141555786133
    5. '   ' → logprob: -5.468141555786133
    6. '#' → logprob: -6.343141555786133
    7. 'i' → logprob: -6.343141555786133
    8. 'result' → logprob: -6.343141555786133
    9. 'p' → logprob: -6.718141555786133
    10. 'pr' → logprob: -6.843141555786133

Token 351: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9232363700866699
    2. 'ification' → logprob: -1.04823637008667
    3. '   ' → logprob: -1.67323637008667
    4. 'ifier' → logprob: -2.92323637008667
    5. 'ifie' → logprob: -5.04823637008667
    6. 'ify' → logprob: -6.79823637008667
    7. 'ifiez' → logprob: -7.04823637008667
    8. '```' → logprob: -7.17323637008667
    9. ' if' → logprob: -8.048236846923828
    10. 'ifiant' → logprob: -8.173236846923828

Token 352: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22879146039485931
    2. ' if' → logprob: -1.8537914752960205
    3. ' de' → logprob: -3.2287914752960205
    4. '    ' → logprob: -5.978791236877441
    5. ' ' → logprob: -6.603791236877441
    6. 'if' → logprob: -6.603791236877441
    7. '  ' → logprob: -6.728791236877441
    8. ' des' → logprob: -7.478791236877441
    9. ' si' → logprob: -8.353791236877441
    10. ' of' → logprob: -8.603791236877441

Token 353: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31394627690315247
    2. ' a' → logprob: -1.31394624710083
    3. '   ' → logprob: -7.43894624710083
    4. ' ' → logprob: -10.188946723937988
    5. 'b' → logprob: -10.688946723937988
    6. ' b' → logprob: -11.188946723937988
    7. '  ' → logprob: -12.438946723937988
    8. '    ' → logprob: -12.688946723937988
    9. '(a' → logprob: -12.688946723937988
    10. '	a' → logprob: -12.688946723937988

Token 354: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03810185194015503
    2. ' a' → logprob: -3.2881019115448
    3. ' ' → logprob: -10.663102149963379
    4. '   ' → logprob: -11.288102149963379
    5. 'b' → logprob: -12.288102149963379
    6. 'A' → logprob: -13.038102149963379
    7. '(a' → logprob: -13.038102149963379
    8. '  ' → logprob: -13.288102149963379
    9. ''a' → logprob: -13.413102149963379
    10. ' (' → logprob: -13.663102149963379

Token 355: ' compte' (ID: 19657)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.576896607875824
    2. 'a' → logprob: -0.826896607875824
    3. ' ' → logprob: -7.951896667480469
    4. ' variables' → logprob: -8.076896667480469
    5. ' espaces' → logprob: -9.951896667480469
    6. '   ' → logprob: -10.826896667480469
    7. ' (' → logprob: -10.826896667480469
    8. ' nombres' → logprob: -10.951896667480469
    9. ' valeurs' → logprob: -11.076896667480469
    10. 'variables' → logprob: -11.201896667480469

Token 356: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0034470646642148495
    2. 's' → logprob: -5.87844705581665
    3. 'rs' → logprob: -8.128447532653809
    4. 'u' → logprob: -8.503447532653809
    5. 'ur' → logprob: -10.003447532653809
    6. '   ' → logprob: -10.753447532653809
    7. 'r' → logprob: -11.003447532653809
    8. 'nts' → logprob: -11.128447532653809
    9. 'eurs' → logprob: -11.878447532653809
    10. ' ' → logprob: -12.128447532653809

Token 357: ' sont' (ID: 5242)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3636203110218048
    2. 'a' → logprob: -1.2386202812194824
    3. ' sont' → logprob: -5.113620281219482
    4. ' are' → logprob: -5.238620281219482
    5. 's' → logprob: -6.113620281219482
    6. ' ' → logprob: -7.238620281219482
    7. 'are' → logprob: -8.86362075805664
    8. ' (' → logprob: -9.80112075805664
    9. ' ==' → logprob: -9.92612075805664
    10. ',' → logprob: -10.17612075805664

Token 358: ' strict' (ID: 12035)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.15202490985393524
    2. 'ég' → logprob: -2.027024984359741
    3. ' eg' → logprob: -5.652024745941162
    4. 'égal' → logprob: -5.777024745941162
    5. ' égal' → logprob: -7.277024745941162
    6. ' equal' → logprob: -7.527024745941162
    7. 'equal' → logprob: -7.652024745941162
    8. 'eg' → logprob: -8.15202522277832
    9. 'égalité' → logprob: -8.52702522277832
    10. 'a' → logprob: -9.27702522277832

Token 359: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00037919526221230626
    2. 'ly' → logprob: -8.50037956237793
    3. 'ements' → logprob: -9.87537956237793
    4. 'emen' → logprob: -10.37537956237793
    5. 'e' → logprob: -10.62537956237793
    6. '>' → logprob: -10.62537956237793
    7. 'ment' → logprob: -11.25037956237793
    8. 's' → logprob: -11.62537956237793
    9. '=' → logprob: -12.12537956237793
    10. 'es' → logprob: -12.75037956237793

Token 360: ' sup' (ID: 1982)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.014524739235639572
    2. 'ég' → logprob: -4.639524936676025
    3. ' eg' → logprob: -5.764524936676025
    4. ' égal' → logprob: -7.514524936676025
    5. 'égal' → logprob: -7.764524936676025
    6. ' equal' → logprob: -8.764524459838867
    7. '=' → logprob: -8.889524459838867
    8. 'eg' → logprob: -9.264524459838867
    9. 'équ' → logprob: -9.639524459838867
    10. 'equal' → logprob: -9.889524459838867

Token 361: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.005260083824396133
    2. 'érieur' → logprob: -5.505259990692139
    3. 'é' → logprob: -6.880259990692139
    4. 'érieures' → logprob: -9.630260467529297
    5. 'éri' → logprob: -11.005260467529297
    6. 'er' → logprob: -11.130260467529297
    7. 'r' → logprob: -11.255260467529297
    8. 'érieure' → logprob: -11.380260467529297
    9. 'érie' → logprob: -11.380260467529297
    10. '   ' → logprob: -12.130260467529297

Token 362: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.14615750312805176
    2. '   ' → logprob: -2.6461575031280518
    3. 'à' → logprob: -3.0211575031280518
    4. 'a' → logprob: -5.146157264709473
    5. ' a' → logprob: -5.646157264709473
    6. ' aux' → logprob: -6.396157264709473
    7. ' ' → logprob: -6.396157264709473
    8. ''à' → logprob: -7.146157264709473
    9. '  ' → logprob: -7.521157264709473
    10. '```' → logprob: -8.021157264709473

Token 363: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1607215255498886
    2. ' ' → logprob: -1.9107215404510498
    3. 'a' → logprob: -8.285721778869629
    4. ' a' → logprob: -9.785721778869629
    5. '1' → logprob: -9.910721778869629
    6. ' zero' → logprob: -10.035721778869629
    7. 'zero' → logprob: -10.910721778869629
    8. ' zéro' → logprob: -11.160721778869629
    9. '```' → logprob: -11.535721778869629
    10. 'b' → logprob: -11.535721778869629

Token 364: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01000893022865057
    2. ':' → logprob: -4.885008811950684
    3. '    
' → logprob: -7.260008811950684
    4. 'if' → logprob: -7.510008811950684
    5. ' if' → logprob: -7.885008811950684
    6. '
' → logprob: -8.010008811950684
    7. '```' → logprob: -9.135008811950684
    8. ':
' → logprob: -9.385008811950684
    9. ',' → logprob: -9.635008811950684
    10. '  
' → logprob: -10.260008811950684

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002889874158427119
    2. '    
' → logprob: -8.375288963317871
    3. 'if' → logprob: -11.000288963317871
    4. '```' → logprob: -11.375288963317871
    5. '
' → logprob: -11.750288963317871
    6. '  
' → logprob: -12.000288963317871
    7. ' if' → logprob: -12.000288963317871
    8. '   
' → logprob: -12.875288963317871
    9. ':' → logprob: -13.000288963317871
    10. ' 
' → logprob: -13.500288963317871

Token 366: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014599967980757356
    2. '    
' → logprob: -6.876460075378418
    3. 'if' → logprob: -8.376460075378418
    4. '
' → logprob: -8.876460075378418
    5. ' 
' → logprob: -11.126460075378418
    6. '  
' → logprob: -11.501460075378418
    7. '   
' → logprob: -11.626460075378418
    8. ' if' → logprob: -11.751460075378418
    9. '    ' → logprob: -11.876460075378418
    10. '  ' → logprob: -12.751460075378418

Token 367: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3343236446380615
    2. ' if' → logprob: -1.8343236446380615
    3. 'if' → logprob: -2.0843236446380615
    4. '    
' → logprob: -10.83432388305664
    5. '```' → logprob: -10.95932388305664
    6. '
' → logprob: -11.45932388305664
    7. ' ' → logprob: -12.08432388305664
    8. '    ' → logprob: -12.45932388305664
    9. '	if' → logprob: -12.95932388305664
    10. '  ' → logprob: -13.20932388305664

Token 368: ' revient' (ID: 95900)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47717997431755066
    2. '   ' → logprob: -1.602180004119873
    3. ' if' → logprob: -2.727180004119873
    4. ' :' → logprob: -2.852180004119873
    5. 'if' → logprob: -3.352180004119873
    6. ' signifie' → logprob: -5.102180004119873
    7. ' n' → logprob: -5.602180004119873
    8. ' :
' → logprob: -6.227180004119873
    9. ':
' → logprob: -6.977180004119873
    10. '    ' → logprob: -7.227180004119873

Token 369: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.018349874764680862
    2. ' to' → logprob: -5.518349647521973
    3. '   ' → logprob: -5.643349647521973
    4. ' ' → logprob: -5.893349647521973
    5. ' a' → logprob: -5.893349647521973
    6. 'à' → logprob: -6.018349647521973
    7. '  ' → logprob: -6.768349647521973
    8. '    ' → logprob: -7.143349647521973
    9. ' if' → logprob: -8.143349647521973
    10. 'if' → logprob: -8.518349647521973

Token 370: ' vérifier' (ID: 93671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1299605667591095
    2. ' if' → logprob: -2.629960536956787
    3. 'a' → logprob: -3.629960536956787
    4. '   ' → logprob: -4.254960536956787
    5. ' a' → logprob: -4.879960536956787
    6. ' (' → logprob: -7.754960536956787
    7. '(a' → logprob: -8.004961013793945
    8. ' ' → logprob: -8.629961013793945
    9. '```' → logprob: -9.254961013793945
    10. ' vérifier' → logprob: -9.254961013793945

Token 371: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6389307975769043
    2. 'if' → logprob: -1.6389307975769043
    3. ' à' → logprob: -1.8889307975769043
    4. '   ' → logprob: -2.3889307975769043
    5. ' a' → logprob: -4.013930797576904
    6. ' ' → logprob: -4.638930797576904
    7. 'a' → logprob: -5.888930797576904
    8. 'à' → logprob: -6.513930797576904
    9. ' que' → logprob: -6.888930797576904
    10. '  ' → logprob: -7.513930797576904

Token 372: ''il' (ID: 14683)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08138801157474518
    2. '   ' → logprob: -3.331387996673584
    3. ''' → logprob: -4.831387996673584
    4. ' a' → logprob: -4.956387996673584
    5. ''a' → logprob: -4.956387996673584
    6. 'e' → logprob: -5.081387996673584
    7. ' ' → logprob: -5.581387996673584
    8. 'i' → logprob: -5.706387996673584
    9. ''il' → logprob: -5.956387996673584
    10. '(' → logprob: -6.956387996673584

Token 373: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03755340352654457
    2. ' a' → logprob: -3.787553310394287
    3. 'y' → logprob: -4.412553310394287
    4. 'a' → logprob: -7.037553310394287
    5. ' ' → logprob: -7.912553310394287
    6. ' n' → logprob: -8.037553787231445
    7. ' existe' → logprob: -8.412553787231445
    8. ' '' → logprob: -9.787553787231445
    9. ''y' → logprob: -10.037553787231445
    10. ''' → logprob: -10.162553787231445

Token 374: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.127329021692276
    2. ' a' → logprob: -2.127329111099243
    3. ''a' → logprob: -8.877328872680664
    4. '#' → logprob: -9.127328872680664
    5. '#a' → logprob: -9.502328872680664
    6. '```' → logprob: -10.502328872680664
    7. 'avait' → logprob: -10.627328872680664
    8. ' avait' → logprob: -12.377328872680664
    9. ' ' → logprob: -12.502328872680664
    10. '   ' → logprob: -12.627328872680664

Token 375: ' au' (ID: 2791)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25692781805992126
    2. ' au' → logprob: -2.506927728652954
    3. ' ' → logprob: -2.756927728652954
    4. ' des' → logprob: -3.131927728652954
    5. 'a' → logprob: -3.756927728652954
    6. 'au' → logprob: -4.756927967071533
    7. ' at' → logprob: -5.756927967071533
    8. ' both' → logprob: -7.631927967071533
    9. ' not' → logprob: -7.756927967071533
    10. ' à' → logprob: -8.131927490234375

Token 376: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.011550543829798698
    2. ' moins' → logprob: -4.761550426483154
    3. 'mo' → logprob: -6.886550426483154
    4. '   ' → logprob: -7.261550426483154
    5. 'm' → logprob: -7.886550426483154
    6. '```' → logprob: -8.011550903320312
    7. 'menos' → logprob: -8.761550903320312
    8. '  ' → logprob: -9.136550903320312
    9. '#' → logprob: -9.886550903320312
    10. '
' → logprob: -10.136550903320312

Token 377: ' un' (ID: 537)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08694928139448166
    2. 'a' → logprob: -3.211949348449707
    3. ' un' → logprob: -4.086949348449707
    4. ' ' → logprob: -4.336949348449707
    5. ' des' → logprob: -5.961949348449707
    6. ' au' → logprob: -6.086949348449707
    7. ' une' → logprob: -6.086949348449707
    8. 'au' → logprob: -6.461949348449707
    9. 'un' → logprob: -6.836949348449707
    10. ' both' → logprob: -7.461949348449707

Token 378: ' '' (ID: 461)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -1.0837478637695312
    2. 'A' → logprob: -1.9587478637695312
    3. ' A' → logprob: -1.9587478637695312
    4. ''' → logprob: -2.2087478637695312
    5. ' a' → logprob: -2.5837478637695312
    6. ' '' → logprob: -2.9587478637695312
    7. 'a' → logprob: -3.2087478637695312
    8. ' ' → logprob: -3.4587478637695312
    9. ' caract' → logprob: -3.8337478637695312
    10. ' caractère' → logprob: -3.8337478637695312

Token 379: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05869720131158829
    2. ''' → logprob: -3.80869722366333
    3. ' '' → logprob: -4.18369722366333
    4. ' A' → logprob: -4.55869722366333
    5. ''A' → logprob: -4.93369722366333
    6. 'a' → logprob: -6.68369722366333
    7. ' ' → logprob: -8.308696746826172
    8. ' a' → logprob: -9.183696746826172
    9. ' ')' → logprob: -9.433696746826172
    10. 'space' → logprob: -9.933696746826172

Token 380: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6403167843818665
    2. ' et' → logprob: -0.8903167843818665
    3. 'et' → logprob: -3.2653167247772217
    4. 'and' → logprob: -3.8903167247772217
    5. ''' → logprob: -6.515316963195801
    6. ' '' → logprob: -7.515316963195801
    7. '')' → logprob: -7.515316963195801
    8. '   ' → logprob: -7.640316963195801
    9. ')' → logprob: -8.7653169631958
    10. ' ' → logprob: -8.8903169631958

Token 381: ' ET' (ID: 23345)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0252681877464056
    2. 'and' → logprob: -4.150268077850342
    3. ' et' → logprob: -4.900268077850342
    4. '   ' → logprob: -7.025268077850342
    5. 'et' → logprob: -7.150268077850342
    6. ' ' → logprob: -9.9002685546875
    7. '    ' → logprob: -12.1502685546875
    8. '  ' → logprob: -12.2752685546875
    9. ' a' → logprob: -12.7752685546875
    10. '```' → logprob: -13.7752685546875

Token 382: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.852939248085022
    2. ' un' → logprob: -1.102939248085022
    3. 'au' → logprob: -1.477939248085022
    4. 'un' → logprob: -5.102939128875732
    5. ' ' → logprob: -5.977939128875732
    6. ' at' → logprob: -6.227939128875732
    7. ''un' → logprob: -6.602939128875732
    8. ' one' → logprob: -7.727939128875732
    9. ' a' → logprob: -7.852939128875732
    10. ''au' → logprob: -7.977939128875732

Token 383: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.22866712510585785
    2. ' moins' → logprob: -1.603667140007019
    3. 'mo' → logprob: -6.228667259216309
    4. '```' → logprob: -8.353667259216309
    5. 'm' → logprob: -8.478667259216309
    6. ' ' → logprob: -9.103667259216309
    7. 'menos' → logprob: -9.228667259216309
    8. '   ' → logprob: -9.478667259216309
    9. ' least' → logprob: -9.728667259216309
    10. ' mo' → logprob: -9.728667259216309

Token 384: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09612901508808136
    2. 'un' → logprob: -2.4711289405822754
    3. ''un' → logprob: -5.721128940582275
    4. 'au' → logprob: -5.846128940582275
    5. ' ' → logprob: -7.846128940582275
    6. ' au' → logprob: -8.221129417419434
    7. '   ' → logprob: -9.721129417419434
    8. '1' → logprob: -9.846129417419434
    9. '```' → logprob: -9.846129417419434
    10. ' une' → logprob: -9.971129417419434

Token 385: ' caractère' (ID: 80509)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7280808091163635
    2. ' B' → logprob: -1.2280807495117188
    3. ' autre' → logprob: -2.8530807495117188
    4. 'B' → logprob: -3.2280807495117188
    5. ''autre' → logprob: -3.6030807495117188
    6. ' '' → logprob: -3.8530807495117188
    7. ' espace' → logprob: -3.8530807495117188
    8. ' ' → logprob: -4.228080749511719
    9. 'b' → logprob: -4.728080749511719
    10. ' other' → logprob: -4.978080749511719

Token 386: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.2505321800708771
    2. ' different' → logprob: -2.2505321502685547
    3. ' autre' → logprob: -3.2505321502685547
    4. 'diff' → logprob: -3.7505321502685547
    5. 'different' → logprob: -4.500532150268555
    6. ' distinct' → logprob: -4.875532150268555
    7. ' espace' → logprob: -5.250532150268555
    8. ''' → logprob: -5.375532150268555
    9. ' ' → logprob: -5.750532150268555
    10. ' !=' → logprob: -6.000532150268555

Token 387: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.18619364500045776
    2. 'de' → logprob: -1.8111937046051025
    3. 'from' → logprob: -5.936193466186523
    4. '   ' → logprob: -6.686193466186523
    5. ' from' → logprob: -6.811193466186523
    6. 'd' → logprob: -7.811193466186523
    7. ' d' → logprob: -8.561193466186523
    8. ' ' → logprob: -8.686193466186523
    9. ' des' → logprob: -8.811193466186523
    10. 'def' → logprob: -8.811193466186523

Token 388: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.25303494930267334
    2. ' '' → logprob: -2.003035068511963
    3. 'A' → logprob: -2.878035068511963
    4. ' A' → logprob: -4.003035068511963
    5. ''' → logprob: -4.628035068511963
    6. ' ' → logprob: -5.753035068511963
    7. '"A' → logprob: -7.753035068511963
    8. ' ' → logprob: -9.128034591674805
    9. '`' → logprob: -9.378034591674805
    10. '  ' → logprob: -9.628034591674805

Token 389: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03977459296584129
    2. ''A' → logprob: -3.2897746562957764
    3. ' A' → logprob: -6.539774417877197
    4. ' '' → logprob: -9.164774894714355
    5. ''' → logprob: -9.164774894714355
    6. '"A' → logprob: -10.789774894714355
    7. ' ' → logprob: -11.164774894714355
    8. '’A' → logprob: -11.914774894714355
    9. 'a' → logprob: -12.164774894714355
    10. '```' → logprob: -12.289774894714355

Token 390: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10172370076179504
    2. ' and' → logprob: -2.7267236709594727
    3. ':' → logprob: -4.476723670959473
    4. ')' → logprob: -4.851723670959473
    5. '):' → logprob: -5.851723670959473
    6. ' if' → logprob: -6.226723670959473
    7. ' )' → logprob: -6.851723670959473
    8. '.' → logprob: -6.976723670959473
    9. ' :' → logprob: -7.101723670959473
    10. ' et' → logprob: -7.101723670959473

Token 391: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003740694955922663
    2. '    
' → logprob: -8.125373840332031
    3. '
' → logprob: -9.750373840332031
    4. 'if' → logprob: -11.750373840332031
    5. ':' → logprob: -12.250373840332031
    6. '   
' → logprob: -13.125373840332031
    7. '```' → logprob: -13.375373840332031
    8. ' if' → logprob: -14.000373840332031
    9. '  
' → logprob: -14.500373840332031
    10. '  ' → logprob: -14.875373840332031

Token 392: ' la' (ID: 557)
  Prédit: ' stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.030223065987229347
    2. 'stop' → logprob: -3.5302231311798096
    3. ' la' → logprob: -8.03022289276123
    4. '   ' → logprob: -9.78022289276123
    5. ' ' → logprob: -10.78022289276123
    6. ' le' → logprob: -10.90522289276123
    7. '	stop' → logprob: -11.40522289276123
    8. ' the' → logprob: -11.65522289276123
    9. ' l' → logprob: -12.15522289276123
    10. 'la' → logprob: -12.28022289276123

Token 393: ' sais' (ID: 30010)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.10221318900585175
    2. ' stop' → logprob: -2.352213144302368
    3. 's' → logprob: -8.102212905883789
    4. '   ' → logprob: -8.102212905883789
    5. ' ' → logprob: -8.227212905883789
    6. 'if' → logprob: -8.352212905883789
    7. ' if' → logprob: -8.602212905883789
    8. 'string' → logprob: -8.977212905883789
    9. 'input' → logprob: -9.227212905883789
    10. 'chaine' → logprob: -9.602212905883789

Token 394: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.24397103488445282
    2. 'sie' → logprob: -1.8689709901809692
    3. 'isie' → logprob: -2.868971109390259
    4. 'i' → logprob: -5.99397087097168
    5. 'is' → logprob: -6.74397087097168
    6. 'rie' → logprob: -7.99397087097168
    7. 'nie' → logprob: -8.61897087097168
    8. 'ise' → logprob: -8.99397087097168
    9. 'ies' → logprob: -9.11897087097168
    10. 's' → logprob: -9.11897087097168

Token 395: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016335244290530682
    2. '    
' → logprob: -6.626633644104004
    3. 'if' → logprob: -8.626633644104004
    4. ' if' → logprob: -9.876633644104004
    5. '
' → logprob: -10.251633644104004
    6. '.' → logprob: -10.751633644104004
    7. '   
' → logprob: -12.751633644104004
    8. '    ' → logprob: -13.001633644104004
    9. '.
' → logprob: -13.126633644104004
    10. ':' → logprob: -13.501633644104004

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003244990948587656
    2. '    
' → logprob: -8.750324249267578
    3. 'if' → logprob: -9.375324249267578
    4. '
' → logprob: -9.500324249267578
    5. ' if' → logprob: -12.875324249267578
    6. '```' → logprob: -13.250324249267578
    7. '   
' → logprob: -14.375324249267578
    8. '  
' → logprob: -15.250324249267578
    9. '	if' → logprob: -15.375324249267578
    10. ':' → logprob: -15.875324249267578

Token 397: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012136871227994561
    2. 'if' (adapté à ' if') → logprob: -6.751213550567627
    3. '    
' → logprob: -10.501214027404785
    4. ' if' → logprob: -11.376214027404785
    5. '
' → logprob: -12.501214027404785
    6. '	if' → logprob: -15.251214027404785
    7. '```' → logprob: -15.251214027404785
    8. '   
' → logprob: -16.37621307373047
    9. '  ' → logprob: -17.00121307373047
    10. '       ' → logprob: -17.00121307373047

Token 398: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05491737648844719
    2. 'a' → logprob: -2.929917335510254
    3. ' ' → logprob: -10.429917335510254
    4. ' ' → logprob: -12.804917335510254
    5. '   ' → logprob: -13.929917335510254
    6. '	a' → logprob: -14.054917335510254
    7. ' (' → logprob: -14.429917335510254
    8. '  ' → logprob: -15.929917335510254
    9. '_a' → logprob: -16.05491828918457
    10. '(a' → logprob: -16.05491828918457

Token 399: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.006783573888242245
    2. '>' → logprob: -5.006783485412598
    3. ' ' → logprob: -9.631783485412598
    4. ' and' → logprob: -14.631783485412598
    5. ' >
' → logprob: -14.881783485412598
    6. ' !=' → logprob: -15.006783485412598
    7. ' ' → logprob: -15.131783485412598
    8. ' >=' → logprob: -15.631783485412598
    9. '1' → logprob: -16.006784439086914
    10. 'and' → logprob: -16.131784439086914

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '  ' → logprob: -18.63604736328125
    4. '۰' → logprob: -18.76104736328125
    5. '   ' → logprob: -19.01104736328125
    6. '>' → logprob: -19.01104736328125
    7. '=' → logprob: -19.63604736328125
    8. '1' → logprob: -19.63604736328125
    9. '```' → logprob: -19.88604736328125
    10. '<|end|>' → logprob: -20.63604736328125

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '۰' → logprob: -18.12509536743164
    4. '1' → logprob: -19.37509536743164
    5. '```' → logprob: -20.12509536743164
    6. '０' → logprob: -20.37509536743164
    7. '<|end|>' → logprob: -20.50009536743164
    8. '  ' → logprob: -21.12509536743164
    9. '٠' → logprob: -21.12509536743164
    10. ' ' → logprob: -21.25009536743164

Token 402: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008615635335445404
    2. 'and' → logprob: -4.758615493774414
    3. ' ' → logprob: -13.883615493774414
    4. ' ' → logprob: -16.883615493774414
    5. ' a' → logprob: -17.133615493774414
    6. '    ' → logprob: -17.258615493774414
    7. ' et' → logprob: -17.383615493774414
    8. ' an' → logprob: -18.008615493774414
    9. '   ' → logprob: -18.133615493774414
    10. 'et' → logprob: -18.383615493774414

Token 403: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.061967913061380386
    2. 'b' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.436967849731445
    4. ' ' → logprob: -16.561967849731445
    5. '	b' → logprob: -17.561967849731445
    6. '<|end|>' → logprob: -18.811967849731445
    7. ' ' → logprob: -18.936967849731445
    8. ' б' → logprob: -18.936967849731445
    9. '    ' → logprob: -19.061967849731445
    10. 's' → logprob: -19.436967849731445

Token 404: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011050770990550518
    2. '>' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.011051177978516
    4. '<|end|>' → logprob: -14.761051177978516
    5. ' >
' → logprob: -16.136051177978516
    6. ' ' → logprob: -16.511051177978516
    7. '<|end|>' → logprob: -17.261051177978516
    8. '0' → logprob: -17.636051177978516
    9. '()>' → logprob: -18.261051177978516
    10. ')' → logprob: -18.511051177978516

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300376772880554
    2. ' ' → logprob: -3.168003797531128
    3. '<|end|>' → logprob: -12.418004035949707
    4. '  ' → logprob: -15.668004035949707
    5. '   ' → logprob: -15.918004035949707
    6. '```' → logprob: -16.79300308227539
    7. '۰' → logprob: -17.04300308227539
    8. '1' → logprob: -17.41800308227539
    9. '<|end|>' → logprob: -17.41800308227539
    10. '=' → logprob: -17.54300308227539

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '<|end|>' → logprob: -15.25048828125
    4. '1' → logprob: -16.87548828125
    5. '۰' → logprob: -17.12548828125
    6. '   ' → logprob: -17.37548828125
    7. '  ' → logprob: -17.87548828125
    8. '=' → logprob: -18.12548828125
    9. '```' → logprob: -18.25048828125
    10. ' ' → logprob: -18.31298828125

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008618239313364029
    2. ':
' → logprob: -4.758618354797363
    3. '   ' → logprob: -13.133618354797363
    4. ' :' → logprob: -13.633618354797363
    5. ':

' → logprob: -16.008617401123047
    6. ':
' → logprob: -16.133617401123047
    7. ' :
' → logprob: -16.258617401123047
    8. ':return' → logprob: -16.258617401123047
    9. '):' → logprob: -16.883617401123047
    10. ' and' → logprob: -17.008617401123047

Token 408: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.527676522731781
    2. '       ' → logprob: -0.902676522731781
    3. ':
' → logprob: -5.777676582336426
    4. '   ' → logprob: -7.152676582336426
    5. ' :' → logprob: -8.277676582336426
    6. '():' → logprob: -9.027676582336426
    7. '):' → logprob: -9.152676582336426
    8. ',' → logprob: -10.027676582336426
    9. '        
' → logprob: -11.402676582336426
    10. '    
' → logprob: -11.402676582336426

Token 409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009225545451045036
    2. 'print' → logprob: -5.509225368499756
    3. '   ' → logprob: -6.134225368499756
    4. '
' → logprob: -6.884225368499756
    5. ' print' → logprob: -7.009225368499756
    6. 'return' → logprob: -8.259225845336914
    7. '        
' → logprob: -8.259225845336914
    8. '    
' → logprob: -8.634225845336914
    9. ' return' → logprob: -8.759225845336914
    10. ' 
' → logprob: -10.759225845336914

Token 410: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5317129492759705
    2. ' print' → logprob: -1.1567130088806152
    3. '   ' → logprob: -2.7817130088806152
    4. ' return' → logprob: -4.031713008880615
    5. 'return' → logprob: -4.156713008880615
    6. ' stop' → logprob: -6.906713008880615
    7. 'pr' → logprob: -8.281712532043457
    8. 'stop' → logprob: -8.281712532043457
    9. '       ' → logprob: -8.406712532043457
    10. '    ' → logprob: -9.281712532043457

Token 411: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5228413939476013
    2. ' True' → logprob: -1.522841453552246
    3. ' stop' → logprob: -2.272841453552246
    4. ' ' → logprob: -3.772841453552246
    5. 'a' → logprob: -4.147841453552246
    6. ' print' → logprob: -4.272841453552246
    7. ' '' → logprob: -4.522841453552246
    8. ' ' → logprob: -4.897841453552246
    9. ' len' → logprob: -5.772841453552246
    10. 'True' → logprob: -6.272841453552246

Token 412: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9151605367660522
    2. 'a' → logprob: -1.6651605367660522
    3. ' stop' → logprob: -1.9151605367660522
    4. 'print' → logprob: -2.290160655975342
    5. 'stop' → logprob: -2.290160655975342
    6. ' print' → logprob: -4.040160655975342
    7. ' ' → logprob: -4.790160655975342
    8. ' '' → logprob: -5.040160655975342
    9. ''' → logprob: -5.415160655975342
    10. '"' → logprob: -5.665160655975342

Token 413: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.8869584202766418
    2. ' a' → logprob: -2.386958360671997
    3. 'print' → logprob: -2.386958360671997
    4. 'conditions' → logprob: -2.636958360671997
    5. ':' → logprob: -2.886958360671997
    6. '<|end|>' → logprob: -2.886958360671997
    7. ' print' → logprob: -2.886958360671997
    8. 'a' → logprob: -3.261958360671997
    9. ' ' → logprob: -3.511958360671997
    10. '   ' → logprob: -3.511958360671997

Token 414: ' sont' (ID: 5242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009842737577855587
    2. ':
' → logprob: -5.634842872619629
    3. '<|end|>' → logprob: -5.759842872619629
    4. ' are' → logprob: -6.634842872619629
    5. 's' → logprob: -7.509842872619629
    6. ' :' → logprob: -8.259842872619629
    7. 'print' → logprob: -8.884842872619629
    8. ' print' → logprob: -8.884842872619629
    9. '   ' → logprob: -9.134842872619629
    10. '       ' → logprob: -9.259842872619629

Token 415: ' vra' (ID: 16065)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05729882791638374
    2. 'True' → logprob: -4.05729866027832
    3. ' vra' → logprob: -4.18229866027832
    4. ' True' → logprob: -4.55729866027832
    5. 's' → logprob: -5.68229866027832
    6. 'rem' → logprob: -5.93229866027832
    7. '```' → logprob: -6.43229866027832
    8. 'true' → logprob: -6.93229866027832
    9. ' vrai' → logprob: -7.18229866027832
    10. 'respect' → logprob: -7.30729866027832

Token 416: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.00012106612848583609
    2. 'i' → logprob: -9.500121116638184
    3. '
' → logprob: -11.000121116638184
    4. '#' → logprob: -11.750121116638184
    5. 'is' → logprob: -12.125121116638184
    6. '

' → logprob: -12.625121116638184
    7. '   ' → logprob: -12.625121116638184
    8. 'ient' → logprob: -14.125121116638184
    9. '``' → logprob: -14.125121116638184
    10. 'ries' → logprob: -14.250121116638184

Token 417: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0413057915866375
    2. ':
' → logprob: -4.041306018829346
    3. '       ' → logprob: -4.166306018829346
    4. ',' → logprob: -5.166306018829346
    5. ' :' → logprob: -7.041306018829346
    6. '   ' → logprob: -8.041305541992188
    7. '           ' → logprob: -8.291305541992188
    8. ' :
' → logprob: -9.666305541992188
    9. ',
' → logprob: -10.666305541992188
    10. 'print' → logprob: -10.666305541992188

Token 418: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21169988811016083
    2. ' print' → logprob: -1.8366998434066772
    3. 'print' → logprob: -3.836699962615967
    4. '   ' → logprob: -5.961699962615967
    5. ' return' → logprob: -6.461699962615967
    6. '    ' → logprob: -6.961699962615967
    7. '        ' → logprob: -6.961699962615967
    8. '        
' → logprob: -7.086699962615967
    9. ' ' → logprob: -7.336699962615967
    10. '           ' → logprob: -7.461699962615967

Token 419: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7452483773231506
    2. ' print' → logprob: -1.2452483177185059
    3. '   ' → logprob: -1.4952483177185059
    4. '       ' → logprob: -5.120248317718506
    5. 'return' → logprob: -6.120248317718506
    6. ' return' → logprob: -6.245248317718506
    7. '    ' → logprob: -6.995248317718506
    8. '
' → logprob: -8.120248794555664
    9. 'pr' → logprob: -8.245248794555664
    10. '  ' → logprob: -8.370248794555664

Token 420: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7085063457489014
    2. 'print' → logprob: -1.3335063457489014
    3. '   ' → logprob: -1.9585063457489014
    4. '       ' → logprob: -2.8335063457489014
    5. ' return' → logprob: -3.5835063457489014
    6. 'return' → logprob: -4.5835065841674805
    7. ' ' → logprob: -6.2085065841674805
    8. '    ' → logprob: -6.9585065841674805
    9. ' ' → logprob: -7.5835065841674805
    10. '()' → logprob: -8.33350658416748

Token 421: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5270507335662842
    2. '(' → logprob: -1.5270507335662842
    3. '('' → logprob: -1.6520507335662842
    4. '()' → logprob: -7.402050971984863
    5. '(
' → logprob: -9.027050971984863
    6. '("")' → logprob: -10.652050971984863
    7. '("("' → logprob: -11.277050971984863
    8. '   ' → logprob: -11.402050971984863
    9. ' ' → logprob: -11.402050971984863
    10. '("""' → logprob: -11.902050971984863

Token 422: ' affiche' (ID: 127479)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.28747403621673584
    2. '(' → logprob: -1.9124740362167358
    3. '('' → logprob: -2.2874741554260254
    4. '(
' → logprob: -7.912474155426025
    5. '()' → logprob: -9.037473678588867
    6. '   ' → logprob: -10.662473678588867
    7. '("""' → logprob: -10.787473678588867
    8. 'print' → logprob: -11.162473678588867
    9. '("")' → logprob: -11.162473678588867
    10. ' ("' → logprob: -11.412473678588867

Token 423: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05460848659276962
    2. '(' → logprob: -3.1796085834503174
    3. '('' → logprob: -4.554608345031738
    4. '(a' → logprob: -8.429608345031738
    5. '(True' → logprob: -8.554608345031738
    6. '(":' → logprob: -9.054608345031738
    7. '("*' → logprob: -9.179608345031738
    8. '(
' → logprob: -9.679608345031738
    9. '("#' → logprob: -10.054608345031738
    10. '("="' → logprob: -10.054608345031738

Token 424: ' chaîne' (ID: 89288)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47687387466430664
    2. 'chaine' → logprob: -1.6018738746643066
    3. 'string' → logprob: -2.8518738746643066
    4. ''' → logprob: -3.4768738746643066
    5. '("' → logprob: -4.226873874664307
    6. ' ' → logprob: -4.851873874664307
    7. ' chaîne' → logprob: -4.851873874664307
    8. 'cha' → logprob: -4.976873874664307
    9. 'phrase' → logprob: -5.226873874664307
    10. '   ' → logprob: -5.351873874664307

Token 425: ' de' (ID: 334)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029764262959361076
    2. '('' → logprob: -4.029764175415039
    3. '(' → logprob: -4.529764175415039
    4. '"' → logprob: -8.404764175415039
    5. '(
' → logprob: -8.529764175415039
    6. '()' → logprob: -8.904764175415039
    7. '("")' → logprob: -10.529764175415039
    8. '(":' → logprob: -10.529764175415039
    9. '("#' → logprob: -10.654764175415039
    10. '   ' → logprob: -10.779764175415039

Token 426: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02681456319987774
    2. '"' → logprob: -4.7768144607543945
    3. 'stop' → logprob: -5.0268144607543945
    4. ' caractères' → logprob: -5.5268144607543945
    5. '"A' → logprob: -6.0268144607543945
    6. 'print' → logprob: -6.7768144607543945
    7. ''A' → logprob: -6.7768144607543945
    8. ''' → logprob: -6.9018144607543945
    9. 'code' → logprob: -8.901814460754395
    10. '#' → logprob: -9.026814460754395

Token 427: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.43912145495414734
    2. '"' → logprob: -1.3141214847564697
    3. '"A' → logprob: -2.9391214847564697
    4. '('' → logprob: -4.064121246337891
    5. ''' → logprob: -5.064121246337891
    6. '(' → logprob: -5.189121246337891
    7. ''A' → logprob: -6.689121246337891
    8. ' "' → logprob: -7.939121246337891
    9. '"I' → logprob: -7.939121246337891
    10. '"B' → logprob: -8.18912124633789

Token 428: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4984248876571655
    2. 'STOP' → logprob: -1.9984248876571655
    3. 'Stop' → logprob: -2.498425006866455
    4. 'O' → logprob: -2.498425006866455
    5. 'Oui' → logprob: -2.498425006866455
    6. 'YES' → logprob: -2.498425006866455
    7. 'OK' → logprob: -2.873425006866455
    8. 'Mix' → logprob: -3.248425006866455
    9. 'AB' → logprob: -3.748425006866455
    10. 'Yes' → logprob: -3.873425006866455

Token 429: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28249508142471313
    2. '')' → logprob: -1.4074950218200684
    3. '')
' → logprob: -8.032495498657227
    4. ')' → logprob: -8.782495498657227
    5. ')'' → logprob: -8.782495498657227
    6. ' '' → logprob: -9.032495498657227
    7. '!'' → logprob: -9.032495498657227
    8. '!' → logprob: -9.157495498657227
    9. '()' → logprob: -9.407495498657227
    10. ' ')' → logprob: -9.532495498657227

Token 430: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21611054241657257
    2. '()' → logprob: -2.2161104679107666
    3. ')' → logprob: -2.8411104679107666
    4. '   ' → logprob: -4.966110706329346
    5. '('' → logprob: -5.216110706329346
    6. '()
' → logprob: -5.466110706329346
    7. '(' → logprob: -5.466110706329346
    8. '           ' → logprob: -6.466110706329346
    9. '
' → logprob: -6.966110706329346
    10. 'print' → logprob: -7.591110706329346

Token 431: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8400633335113525
    2. ' la' → logprob: -0.8400633335113525
    3. ' l' → logprob: -4.215063095092773
    4. 'l' → logprob: -4.215063095092773
    5. ' the' → logprob: -4.340063095092773
    6. ' le' → logprob: -4.465063095092773
    7. ' ' → logprob: -4.715063095092773
    8. 'la' → logprob: -4.715063095092773
    9. ' output' → logprob: -4.715063095092773
    10. 'le' → logprob: -4.840063095092773

Token 432: ' console' (ID: 3887)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.4148394763469696
    2. 'print' → logprob: -1.289839506149292
    3. ' console' → logprob: -3.289839506149292
    4. '   ' → logprob: -4.664839267730713
    5. '
' → logprob: -5.414839267730713
    6. 'output' → logprob: -5.914839267730713
    7. 'terminal' → logprob: -5.914839267730713
    8. 'if' → logprob: -6.539839267730713
    9. '```' → logprob: -6.664839267730713
    10. ')' → logprob: -7.289839267730713

Token 433: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2605874836444855
    2. ')' → logprob: -2.135587453842163
    3. '()' → logprob: -2.385587453842163
    4. '   ' → logprob: -5.260587692260742
    5. '(' → logprob: -5.635587692260742
    6. '()
' → logprob: -5.760587692260742
    7. '
' → logprob: -6.510587692260742
    8. '('' → logprob: -6.760587692260742
    9. '           ' → logprob: -7.135587692260742
    10. ')
' → logprob: -7.260587692260742

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.423219696851447e-05
    2. '   ' → logprob: -10.000083923339844
    3. '           ' → logprob: -11.125083923339844
    4. '
' → logprob: -11.750083923339844
    5. '        
' → logprob: -12.125083923339844
    6. '```' → logprob: -12.250083923339844
    7. '    
' → logprob: -14.000083923339844
    8. 'print' → logprob: -14.125083923339844
    9. ' print' → logprob: -14.125083923339844
    10. '(' → logprob: -14.375083923339844

Token 435: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020577972754836082
    2. ' print' → logprob: -4.270577907562256
    3. 'print' (adapté à ' print') → logprob: -5.145577907562256
    4. '   ' → logprob: -7.895577907562256
    5. '           ' → logprob: -9.270578384399414
    6. '        
' → logprob: -10.895578384399414
    7. ' 
' → logprob: -11.145578384399414
    8. '        ' → logprob: -11.270578384399414
    9. ' ' → logprob: -11.270578384399414
    10. '      ' → logprob: -11.520578384399414

Token 436: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10772722214460373
    2. '(' → logprob: -2.857727289199829
    3. '("' → logprob: -3.107727289199829
    4. ' ('' → logprob: -11.98272705078125
    5. ' (' → logprob: -12.10772705078125
    6. '()' → logprob: -12.23272705078125
    7. ' ("' → logprob: -12.73272705078125
    8. '(
' → logprob: -13.10772705078125
    9. ''' → logprob: -13.73272705078125
    10. ' ' → logprob: -14.23272705078125

Token 437: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -5.88418151892256e-05
    2. ' Yes' → logprob: -9.750059127807617
    3. 'Oui' → logprob: -15.500059127807617
    4. 'YES' → logprob: -16.250059127807617
    5. 'Ye' → logprob: -16.625059127807617
    6. 'Y' → logprob: -16.750059127807617
    7. 'A' → logprob: -17.125059127807617
    8. ' yes' → logprob: -18.250059127807617
    9. 'No' → logprob: -18.625059127807617
    10. ' ' → logprob: -18.625059127807617

Token 438: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003382038848940283
    2. ')' → logprob: -8.125338554382324
    3. '')
' → logprob: -10.125338554382324
    4. ''' → logprob: -13.500338554382324
    5. '")' → logprob: -14.875338554382324
    6. '')
' → logprob: -16.000337600708008
    7. ' ')' → logprob: -16.500337600708008
    8. '')"' → logprob: -16.875337600708008
    9. '')

' → logprob: -17.000337600708008
    10. ')'' → logprob: -17.625337600708008

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1627781242132187
    2. '<|end|>' → logprob: -2.16277813911438
    3. 'else' → logprob: -3.78777813911438
    4. ' else' → logprob: -5.037777900695801
    5. '
' → logprob: -5.787777900695801
    6. ')' → logprob: -6.662777900695801
    7. 'elif' → logprob: -7.537777900695801
    8. '```' → logprob: -7.787777900695801
    9. '<|end|>' → logprob: -8.0377779006958
    10. '    
' → logprob: -8.7877779006958

Token 440: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4092276394367218
    2. ' else' → logprob: -1.5342276096343994
    3. '   ' → logprob: -2.2842276096343994
    4. 'elif' → logprob: -4.2842278480529785
    5. ' elif' → logprob: -6.0342278480529785
    6. '<|end|>' → logprob: -6.5342278480529785
    7. ' ' → logprob: -8.28422737121582
    8. '    ' → logprob: -8.90922737121582
    9. '	else' → logprob: -9.28422737121582
    10. ')' → logprob: -9.90922737121582

Token 441: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09488123655319214
    2. ':
' → logprob: -2.469881296157837
    3. '       ' → logprob: -5.219881057739258
    4. '   ' → logprob: -7.719881057739258
    5. ' :' → logprob: -10.344881057739258
    6. ' :
' → logprob: -10.344881057739258
    7. '    ' → logprob: -12.719881057739258
    8. '():' → logprob: -13.969881057739258
    9. '():
' → logprob: -14.344881057739258
    10. '     ' → logprob: -14.594881057739258

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9153885558771435e-06
    2. 'print' → logprob: -12.375005722045898
    3. '    ' → logprob: -14.250005722045898
    4. '   ' → logprob: -15.000005722045898
    5. ' ' → logprob: -15.875005722045898
    6. '           ' → logprob: -15.875005722045898
    7. '	   ' → logprob: -16.1250057220459
    8. ' print' → logprob: -16.2500057220459
    9. '      ' → logprob: -16.5000057220459
    10. '	' → logprob: -16.8750057220459

Token 443: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2805574834346771
    2. 'print' → logprob: -1.6555575132369995
    3. ' print' → logprob: -3.15555739402771
    4. '   ' → logprob: -4.530557632446289
    5. '    ' → logprob: -8.405557632446289
    6. ' ' → logprob: -11.530557632446289
    7. '	print' → logprob: -11.780557632446289
    8. '     ' → logprob: -12.530557632446289
    9. '        ' → logprob: -12.655557632446289
    10. '      ' → logprob: -13.030557632446289

Token 444: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42064303159713745
    2. '       ' → logprob: -1.1706430912017822
    3. 'print' → logprob: -4.045642852783203
    4. ' print' → logprob: -4.170642852783203
    5. '    ' → logprob: -8.295642852783203
    6. '   ' → logprob: -12.295642852783203
    7. ' ' → logprob: -12.795642852783203
    8. '	print' → logprob: -13.295642852783203
    9. '           ' → logprob: -13.420642852783203
    10. '     ' → logprob: -13.545642852783203

Token 445: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2204473614692688
    2. '    ' → logprob: -2.095447301864624
    3. ' print' → logprob: -2.970447301864624
    4. 'print' → logprob: -4.095447540283203
    5. '       ' → logprob: -5.220447540283203
    6. '  ' → logprob: -7.470447540283203
    7. ' ' → logprob: -8.470447540283203
    8. '        ' → logprob: -8.970447540283203
    9. ' ' → logprob: -9.095447540283203
    10. '    
' → logprob: -9.470447540283203

Token 446: ' moins' (ID: 15924)
  Prédit: 'ucune'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ucune' → logprob: -1.3691433668136597
    2. 'print' → logprob: -1.4941433668136597
    3. '   ' → logprob: -1.9941433668136597
    4. 'une' → logprob: -2.244143486022949
    5. 'c' → logprob: -2.744143486022949
    6. ' moins' → logprob: -2.994143486022949
    7. ' print' → logprob: -3.494143486022949
    8. 'pas' → logprob: -3.619143486022949
    9. 'ucun' → logprob: -4.119143486022949
    10. 'moins' → logprob: -4.619143486022949

Token 447: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6019768118858337
    2. ' l' → logprob: -1.2269768714904785
    3. 'une' → logprob: -2.1019768714904785
    4. 'un' → logprob: -4.4769768714904785
    5. '   ' → logprob: -4.7269768714904785
    6. ' one' → logprob: -5.2269768714904785
    7. ' un' → logprob: -5.7269768714904785
    8. 'one' → logprob: -5.7269768714904785
    9. ' une' → logprob: -5.8519768714904785
    10. ' ' → logprob: -6.9769768714904785

Token 448: ' des' (ID: 731)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.038325548171997
    2. '   ' → logprob: -1.288325548171997
    3. 'a' → logprob: -2.038325548171997
    4. ' ' → logprob: -2.288325548171997
    5. ' des' → logprob: -3.288325548171997
    6. '  ' → logprob: -4.413325309753418
    7. ' not' → logprob: -4.538325309753418
    8. ' b' → logprob: -4.538325309753418
    9. '    ' → logprob: -4.663325309753418
    10. ' caract' → logprob: -4.663325309753418

Token 449: ' deux' (ID: 10301)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.43269526958465576
    2. ' compte' → logprob: -1.9326952695846558
    3. ' deux' → logprob: -2.4326953887939453
    4. ' ' → logprob: -2.5576953887939453
    5. ' compteur' → logprob: -4.557695388793945
    6. '   ' → logprob: -5.057695388793945
    7. 'de' → logprob: -5.182695388793945
    8. 'count' → logprob: -5.182695388793945
    9. ' conditions' → logprob: -5.557695388793945
    10. 'a' → logprob: -6.182695388793945

Token 450: ' compte' (ID: 19657)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.39477428793907166
    2. '   ' → logprob: -2.3947741985321045
    3. ' compte' → logprob: -2.3947741985321045
    4. 'comp' → logprob: -2.7697741985321045
    5. ' ' → logprob: -3.6447741985321045
    6. ' compteur' → logprob: -3.7697741985321045
    7. 'conditions' → logprob: -4.519774436950684
    8. 'count' → logprob: -5.644774436950684
    9. '  ' → logprob: -6.144774436950684
    10. ' count' → logprob: -6.269774436950684

Token 451: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.003705419832840562
    2. 'eurs' → logprob: -5.7537055015563965
    3. 's' → logprob: -8.878705024719238
    4. 'ur' → logprob: -9.003705024719238
    5. 'ers' → logprob: -9.878705024719238
    6. 'teurs' → logprob: -10.003705024719238
    7. '>' → logprob: -10.378705024719238
    8. 'rs' → logprob: -10.628705024719238
    9. '   ' → logprob: -10.753705024719238
    10. 'conditions' → logprob: -11.503705024719238

Token 452: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9577741026878357
    2. '==' → logprob: -1.4577741622924805
    3. ' n' → logprob: -1.5827741622924805
    4. ' est' → logprob: -2.2077741622924805
    5. '   ' → logprob: -3.3327741622924805
    6. 'n' → logprob: -4.7077741622924805
    7. '=' → logprob: -5.4577741622924805
    8. ' !=' → logprob: -5.9577741622924805
    9. 'print' → logprob: -6.0827741622924805
    10. ' is' → logprob: -6.2077741622924805

Token 453: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14927144348621368
    2. ' zéro' → logprob: -3.2742714881896973
    3. 'zero' → logprob: -3.6492714881896973
    4. ' ' → logprob: -3.7742714881896973
    5. 'z' → logprob: -3.8992714881896973
    6. ' égal' → logprob: -4.899271488189697
    7. 'nul' → logprob: -5.024271488189697
    8. 'égal' → logprob: -5.399271488189697
    9. 'à' → logprob: -5.774271488189697
    10. 'zer' → logprob: -6.274271488189697

Token 454: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02320575714111328
    2. 'z' → logprob: -3.8982057571411133
    3. 'zero' → logprob: -6.273205757141113
    4. ' zéro' → logprob: -7.523205757141113
    5. ' ' → logprob: -9.023205757141113
    6. ' z' → logprob: -9.398205757141113
    7. '```' → logprob: -11.273205757141113
    8. ' zero' → logprob: -12.148205757141113
    9. 'ze' → logprob: -12.398205757141113
    10. 'é' → logprob: -13.773205757141113

Token 455: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29000401496887207
    2. ':
' → logprob: -1.665004014968872
    3. ',' → logprob: -3.290004014968872
    4. '       ' → logprob: -3.915004014968872
    5. '   ' → logprob: -5.290003776550293
    6. ' :
' → logprob: -9.165003776550293
    7. '           ' → logprob: -9.790003776550293
    8. ' :' → logprob: -9.915003776550293
    9. ',
' → logprob: -10.415003776550293
    10. ' ,' → logprob: -10.415003776550293

Token 456: ' cela' (ID: 17542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018870217725634575
    2. ' print' → logprob: -4.1438703536987305
    3. 'print' → logprob: -6.1438703536987305
    4. '   ' → logprob: -7.3938703536987305
    5. '    ' → logprob: -9.89387035369873
    6. '        ' → logprob: -11.89387035369873
    7. '           ' → logprob: -12.51887035369873
    8. '
' → logprob: -13.39387035369873
    9. '      ' → logprob: -13.51887035369873
    10. '	print' → logprob: -13.51887035369873

Token 457: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12518484890460968
    2. '       ' → logprob: -2.8751847743988037
    3. ' print' → logprob: -3.3751847743988037
    4. 'print' → logprob: -3.7501847743988037
    5. '    ' → logprob: -6.000185012817383
    6. '  ' → logprob: -7.625185012817383
    7. ' ' → logprob: -9.000185012817383
    8. '	print' → logprob: -9.375185012817383
    9. '           ' → logprob: -9.625185012817383
    10. '   ' → logprob: -9.750185012817383

Token 458: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00427938112989068
    2. '       ' → logprob: -5.879279613494873
    3. '    ' → logprob: -7.254279613494873
    4. ' que' → logprob: -7.629279613494873
    5. '  ' → logprob: -8.879279136657715
    6. ' ' → logprob: -10.754279136657715
    7. 'print' → logprob: -10.879279136657715
    8. ' ' → logprob: -10.879279136657715
    9. '   ' → logprob: -10.879279136657715
    10. ' that' → logprob: -11.004279136657715

Token 459: ''il' (ID: 14683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07760585844516754
    2. ' que' → logprob: -3.827605962753296
    3. '#' → logprob: -4.702605724334717
    4. ''il' → logprob: -4.702605724334717
    5. ''' → logprob: -4.827605724334717
    6. 'que' → logprob: -5.077605724334717
    7. ''on' → logprob: -5.327605724334717
    8. 'e' → logprob: -5.827605724334717
    9. '       ' → logprob: -5.952605724334717
    10. 'on' → logprob: -6.327605724334717

Token 460: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0567055270075798
    2. 'n' → logprob: -3.0567054748535156
    3. '   ' → logprob: -5.181705474853516
    4. 'print' → logprob: -7.056705474853516
    5. ' print' → logprob: -7.181705474853516
    6. ' manque' → logprob: -7.306705474853516
    7. '#' → logprob: -9.931705474853516
    8. '    ' → logprob: -10.056705474853516
    9. ' y' → logprob: -11.181705474853516
    10. '	n' → logprob: -11.681705474853516

Token 461: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7594135403633118
    2. ' y' → logprob: -1.384413480758667
    3. ''y' → logprob: -2.259413480758667
    4. '   ' → logprob: -2.384413480758667
    5. 'n' → logprob: -2.634413480758667
    6. ' n' → logprob: -4.509413719177246
    7. 'a' → logprob: -7.134413719177246
    8. '    ' → logprob: -7.759413719177246
    9. '       ' → logprob: -8.634413719177246
    10. ''' → logprob: -8.759413719177246

Token 462: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0044182478450238705
    2. ' a' → logprob: -5.75441837310791
    3. ''a' → logprob: -7.37941837310791
    4. 'y' → logprob: -8.62941837310791
    5. 'avait' → logprob: -8.62941837310791
    6. 'pas' → logprob: -9.75441837310791
    7. '#' → logprob: -9.87941837310791
    8. '   ' → logprob: -10.75441837310791
    9. ''avait' → logprob: -10.75441837310791
    10. '```' → logprob: -10.75441837310791

Token 463: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.15085433423519135
    2. 'pas' → logprob: -2.0258543491363525
    3. ' que' → logprob: -5.400854110717773
    4. ' aucun' → logprob: -6.150854110717773
    5. ' ' → logprob: -7.650854110717773
    6. '   ' → logprob: -7.900854110717773
    7. ' aucune' → logprob: -8.900854110717773
    8. 'auc' → logprob: -9.525854110717773
    9. ' jamais' → logprob: -9.775854110717773
    10. ' rien' → logprob: -9.900854110717773

Token 464: ' des' (ID: 731)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5958945751190186
    2. ' des' → logprob: -1.2208945751190186
    3. 'des' → logprob: -2.4708945751190186
    4. ''A' → logprob: -3.2208945751190186
    5. 'un' → logprob: -4.970894813537598
    6. ''une' → logprob: -5.095894813537598
    7. ''' → logprob: -5.720894813537598
    8. ' '' → logprob: -5.845894813537598
    9. ''d' → logprob: -6.345894813537598
    10. ' un' → logprob: -6.470894813537598

Token 465: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.40620648860931396
    2. 'A' → logprob: -1.156206488609314
    3. ' A' → logprob: -4.2812066078186035
    4. 'car' → logprob: -6.5312066078186035
    5. ' caractères' → logprob: -6.5312066078186035
    6. ' '' → logprob: -7.0312066078186035
    7. ''' → logprob: -7.0312066078186035
    8. ' caract' → logprob: -8.906206130981445
    9. ' ' → logprob: -9.281206130981445
    10. ' caracteres' → logprob: -9.406206130981445

Token 466: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005259881727397442
    2. ''A' → logprob: -7.625525951385498
    3. ' A' → logprob: -10.375526428222656
    4. ''' → logprob: -12.125526428222656
    5. ' ' → logprob: -15.125526428222656
    6. 's' → logprob: -15.500526428222656
    7. '
' → logprob: -15.625526428222656
    8. '```' → logprob: -15.750526428222656
    9. ' '' → logprob: -16.250526428222656
    10. ''s' → logprob: -16.500526428222656

Token 467: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004560661502182484
    2. 's' → logprob: -6.379560470581055
    3. '')' → logprob: -6.379560470581055
    4. ''s' → logprob: -7.254560470581055
    5. ' ou' → logprob: -9.004560470581055
    6. ' '' → logprob: -9.254560470581055
    7. ''or' → logprob: -9.629560470581055
    8. ''''' → logprob: -10.504560470581055
    9. ' or' → logprob: -10.629560470581055
    10. 'print' → logprob: -11.129560470581055

Token 468: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.06732983887195587
    2. 'ou' → logprob: -3.6923298835754395
    3. '   ' → logprob: -3.8173298835754395
    4. ' or' → logprob: -4.3173298835754395
    5. 'print' → logprob: -6.3173298835754395
    6. ',' → logprob: -6.6923298835754395
    7. 'or' → logprob: -7.8173298835754395
    8. ' print' → logprob: -7.9423298835754395
    9. ''' → logprob: -8.067329406738281
    10. ' ' → logprob: -8.192329406738281

Token 469: ' aucun' (ID: 41678)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4941437542438507
    2. 'que' → logprob: -2.1191437244415283
    3. ' des' → logprob: -2.4941437244415283
    4. ' uniquement' → logprob: -2.9941437244415283
    5. 'des' → logprob: -3.1191437244415283
    6. 'auc' → logprob: -3.3691437244415283
    7. '#' → logprob: -3.7441437244415283
    8. '   ' → logprob: -4.119143962860107
    9. ' seulement' → logprob: -4.619143962860107
    10. 'd' → logprob: -7.119143962860107

Token 470: ' '' (ID: 461)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.71256023645401
    2. 'car' → logprob: -1.5875601768493652
    3. 'print' → logprob: -2.0875601768493652
    4. ' autre' → logprob: -2.4625601768493652
    5. ' print' → logprob: -3.8375601768493652
    6. ' caract' → logprob: -4.087560176849365
    7. ' caractères' → logprob: -4.212560176849365
    8. ''autre' → logprob: -4.337560176849365
    9. ' other' → logprob: -4.962560176849365
    10. ' '' → logprob: -5.962560176849365

Token 471: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4971980154514313
    2. ''A' → logprob: -2.1221981048583984
    3. 'car' → logprob: -2.6221981048583984
    4. ' caractère' → logprob: -2.7471981048583984
    5. ''' → logprob: -3.1221981048583984
    6. 'print' → logprob: -3.4971981048583984
    7. ''autre' → logprob: -4.372198104858398
    8. ' A' → logprob: -4.497198104858398
    9. 'e' → logprob: -4.622198104858398
    10. 's' → logprob: -4.997198104858398

Token 472: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6648938655853271
    2. '')
' → logprob: -1.7898938655853271
    3. '',' → logprob: -1.9148938655853271
    4. '.' → logprob: -1.9148938655853271
    5. ''' → logprob: -2.164893865585327
    6. '   ' → logprob: -2.914893865585327
    7. '')' → logprob: -3.289893865585327
    8. '.
' → logprob: -3.289893865585327
    9. 'print' → logprob: -3.539893865585327
    10. ' ou' → logprob: -4.039894104003906

Token 473: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013639063574373722
    2. 'print' → logprob: -4.888638973236084
    3. ',' → logprob: -5.888638973236084
    4. '   ' → logprob: -6.138638973236084
    5. ' print' → logprob: -7.138638973236084
    6. '.' → logprob: -8.763639450073242
    7. ' or' → logprob: -9.763639450073242
    8. ',
' → logprob: -10.763639450073242
    9. ' ,' → logprob: -11.138639450073242
    10. '           ' → logprob: -11.138639450073242

Token 474: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6448436975479126
    2. ' la' → logprob: -0.8948436975479126
    3. 'stop' → logprob: -3.519843578338623
    4. '   ' → logprob: -4.144843578338623
    5. ' stop' → logprob: -4.894843578338623
    6. 'le' → logprob: -5.019843578338623
    7. 'l' → logprob: -5.769843578338623
    8. ' le' → logprob: -6.644843578338623
    9. 'les' → logprob: -7.394843578338623
    10. ' ' → logprob: -7.519843578338623

Token 475: ' sais' (ID: 30010)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.10211017727851868
    2. 'input' → logprob: -2.9771101474761963
    3. ' stop' → logprob: -4.352110385894775
    4. 's' → logprob: -4.477110385894775
    5. ' input' → logprob: -4.852110385894775
    6. 'print' → logprob: -5.227110385894775
    7. 'chaine' → logprob: -5.602110385894775
    8. '#' → logprob: -6.852110385894775
    9. '
' → logprob: -7.227110385894775
    10. 'string' → logprob: -7.352110385894775

Token 476: 'ie' (ID: 396)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.30225086212158203
    2. 'ie' → logprob: -1.427250862121582
    3. 'sie' → logprob: -4.427250862121582
    4. 'i' → logprob: -5.927250862121582
    5. 'is' → logprob: -5.927250862121582
    6. 'e' → logprob: -6.427250862121582
    7. 's' → logprob: -7.802250862121582
    8. 'gie' → logprob: -8.177250862121582
    9. 'g' → logprob: -8.427250862121582
    10. 'ges' → logprob: -8.552250862121582

Token 477: ' ' (ID: 29106)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009465920156799257
    2. '   ' → logprob: -7.500946521759033
    3. 'print' → logprob: -8.375946998596191
    4. ':' → logprob: -9.375946998596191
    5. ':
' → logprob: -10.500946998596191
    6. ' print' → logprob: -10.750946998596191
    7. ',' → logprob: -10.875946998596191
    8. '           ' → logprob: -12.250946998596191
    9. '.' → logprob: -13.125946998596191
    10. '
' → logprob: -14.000946998596191

Token 478: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015527134528383613
    2. '   ' → logprob: -7.001552581787109
    3. 'print' → logprob: -7.626552581787109
    4. ':' → logprob: -9.87655258178711
    5. ':
' → logprob: -9.87655258178711
    6. ' print' → logprob: -10.75155258178711
    7. '           ' → logprob: -11.25155258178711
    8. ',' → logprob: -12.00155258178711
    9. '      ' → logprob: -12.87655258178711
    10. '.' → logprob: -13.50155258178711

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003724006237462163
    2. 'print' → logprob: -8.000371932983398
    3. '   ' → logprob: -10.750371932983398
    4. ' print' → logprob: -11.250371932983398
    5. '           ' → logprob: -13.250371932983398
    6. '      ' → logprob: -15.500371932983398
    7. '    ' → logprob: -16.1253719329834
    8. '        ' → logprob: -16.3753719329834
    9. '	   ' → logprob: -16.5003719329834
    10. '	' → logprob: -16.6253719329834

Token 480: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13495506346225739
    2. 'print' → logprob: -2.1349551677703857
    3. ' print' → logprob: -4.884954929351807
    4. '   ' → logprob: -7.759954929351807
    5. '           ' → logprob: -12.384955406188965
    6. '	print' → logprob: -13.634955406188965
    7. ' ' → logprob: -14.259955406188965
    8. '    ' → logprob: -14.384955406188965
    9. '      ' → logprob: -14.509955406188965
    10. '```' → logprob: -15.009955406188965

Token 481: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4405466914176941
    2. 'print' → logprob: -1.1905467510223389
    3. ' print' → logprob: -3.065546751022339
    4. '   ' → logprob: -5.19054651260376
    5. '           ' → logprob: -10.315546989440918
    6. ' ' → logprob: -12.065546989440918
    7. '    ' → logprob: -12.190546989440918
    8. '	print' → logprob: -12.440546989440918
    9. '```' → logprob: -12.815546989440918
    10. '      ' → logprob: -12.815546989440918

Token 482: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.050346169620752335
    2. ' print' → logprob: -3.0503461360931396
    3. '   ' → logprob: -6.675346374511719
    4. 'pass' → logprob: -9.050346374511719
    5. 'return' → logprob: -9.175346374511719
    6. ' ' → logprob: -9.550346374511719
    7. 'pr' → logprob: -10.175346374511719
    8. 'prin' → logprob: -10.800346374511719
    9. '  ' → logprob: -10.925346374511719
    10. '    ' → logprob: -10.925346374511719

Token 483: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029774097725749016
    2. ' print' → logprob: -3.5297741889953613
    3. '   ' → logprob: -10.904773712158203
    4. '(print' → logprob: -12.529773712158203
    5. '	print' → logprob: -14.529773712158203
    6. 'pr' → logprob: -15.029773712158203
    7. '.print' → logprob: -15.279773712158203
    8. ' ' → logprob: -15.529773712158203
    9. '  ' → logprob: -16.654773712158203
    10. 'prin' → logprob: -16.654773712158203

Token 484: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0017377781914547086
    2. '(' → logprob: -6.376737594604492
    3. '("' → logprob: -10.501737594604492
    4. '()' → logprob: -11.876737594604492
    5. '(
' → logprob: -14.501737594604492
    6. ' ('' → logprob: -15.501737594604492
    7. ' ' → logprob: -16.251737594604492
    8. '(('' → logprob: -16.626737594604492
    9. '(print' → logprob: -16.751737594604492
    10. '('\' → logprob: -16.876737594604492

Token 485: ' affiche' (ID: 127479)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.17700690031051636
    2. 'print' → logprob: -1.9270069599151611
    3. '(print' → logprob: -5.052006721496582
    4. '(' → logprob: -5.177006721496582
    5. ' print' → logprob: -5.802006721496582
    6. '   ' → logprob: -7.052006721496582
    7. '       ' → logprob: -7.552006721496582
    8. '("' → logprob: -9.302006721496582
    9. ' (' → logprob: -11.427006721496582
    10. '.print' → logprob: -11.427006721496582

Token 486: ' alors' (ID: 17971)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002819544170051813
    2. ''' → logprob: -8.625282287597656
    3. '(' → logprob: -9.250282287597656
    4. '("' → logprob: -12.375282287597656
    5. '()' → logprob: -14.250282287597656
    6. ' ('' → logprob: -15.125282287597656
    7. '   ' → logprob: -15.250282287597656
    8. ' '' → logprob: -15.500282287597656
    9. ' ' → logprob: -15.875282287597656
    10. '('\' → logprob: -16.375282287597656

Token 487: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3874851167201996
    2. '('' → logprob: -1.137485146522522
    3. ' '' → logprob: -7.887485027313232
    4. '(' → logprob: -9.63748550415039
    5. ''N' → logprob: -10.13748550415039
    6. '   ' → logprob: -10.26248550415039
    7. ''n' → logprob: -11.01248550415039
    8. ''O' → logprob: -11.13748550415039
    9. '"' → logprob: -11.51248550415039
    10. ' ' → logprob: -11.63748550415039

Token 488: ' chaîne' (ID: 89288)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011334037408232689
    2. 'No' → logprob: -5.13633394241333
    3. '('' → logprob: -5.38633394241333
    4. ''N' → logprob: -8.636334419250488
    5. 'string' → logprob: -8.761334419250488
    6. '`' → logprob: -9.261334419250488
    7. '"No' → logprob: -9.386334419250488
    8. 'print' → logprob: -9.761334419250488
    9. 'stop' → logprob: -10.011334419250488
    10. '(No' → logprob: -10.886334419250488

Token 489: ' de' (ID: 334)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019920398481190205
    2. '(' → logprob: -7.251992225646973
    3. '("' → logprob: -7.376992225646973
    4. ''' → logprob: -7.376992225646973
    5. '   ' → logprob: -11.626992225646973
    6. '()' → logprob: -12.626992225646973
    7. ' ('' → logprob: -12.876992225646973
    8. '"' → logprob: -13.001992225646973
    9. '(
' → logprob: -13.001992225646973
    10. ''s' → logprob: -13.126992225646973

Token 490: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09189318865537643
    2. 'car' → logprob: -2.591893196105957
    3. 'characters' → logprob: -5.091893196105957
    4. ' caractères' → logprob: -5.591893196105957
    5. '('' → logprob: -6.716893196105957
    6. ''A' → logprob: -7.341893196105957
    7. ' caracteres' → logprob: -8.216893196105957
    8. 'No' → logprob: -8.341893196105957
    9. ' characters' → logprob: -8.591893196105957
    10. ''O' → logprob: -8.966893196105957

Token 491: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.22564180195331573
    2. ''' → logprob: -1.6006418466567993
    3. '(' → logprob: -9.600642204284668
    4. '("' → logprob: -9.725642204284668
    5. ' '' → logprob: -10.350642204284668
    6. ''N' → logprob: -10.850642204284668
    7. '"' → logprob: -10.975642204284668
    8. '"No' → logprob: -12.350642204284668
    9. 'No' → logprob: -12.725642204284668
    10. ' ('' → logprob: -12.975642204284668

Token 492: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00016361083544325083
    2. 'Yes' → logprob: -9.125164031982422
    3. ' No' → logprob: -10.250164031982422
    4. 'NO' → logprob: -11.500164031982422
    5. ''' → logprob: -12.000164031982422
    6. '"No' → logprob: -14.375164031982422
    7. '```' → logprob: -15.125164031982422
    8. 'None' → logprob: -15.375164031982422
    9. 'Only' → logprob: -15.750164031982422
    10. '   ' → logprob: -15.875164031982422

Token 493: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00020473242329899222
    2. '')
' → logprob: -8.750205039978027
    3. '('' → logprob: -10.750205039978027
    4. ')' → logprob: -11.375205039978027
    5. ''' → logprob: -11.750205039978027
    6. '()' → logprob: -13.000205039978027
    7. '')
' → logprob: -13.250205039978027
    8. '')

' → logprob: -14.500205039978027
    9. '")' → logprob: -14.750205039978027
    10. '').' → logprob: -16.12520408630371

Token 494: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010049179196357727
    2. '   ' → logprob: -4.635049343109131
    3. 'print' → logprob: -8.885048866271973
    4. '()' → logprob: -10.510048866271973
    5. '('' → logprob: -10.510048866271973
    6. ' print' → logprob: -11.010048866271973
    7. '(' → logprob: -11.010048866271973
    8. '```' → logprob: -11.385048866271973
    9. '        
' → logprob: -11.510048866271973
    10. '()
' → logprob: -11.510048866271973

Token 495: ' la' (ID: 557)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011729635298252106
    2. ''' → logprob: -8.00117301940918
    3. 'la' → logprob: -8.37617301940918
    4. '   ' → logprob: -8.87617301940918
    5. '(' → logprob: -9.37617301940918
    6. 'le' → logprob: -9.62617301940918
    7. '
' → logprob: -9.87617301940918
    8. ')' → logprob: -10.00117301940918
    9. '(
' → logprob: -10.12617301940918
    10. 'No' → logprob: -10.50117301940918

Token 496: ' console' (ID: 3887)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.06229390576481819
    2. ' console' → logprob: -3.1872940063476562
    3. '('' → logprob: -4.562294006347656
    4. 'else' → logprob: -5.812294006347656
    5. 'print' → logprob: -6.062294006347656
    6. ''' → logprob: -6.562294006347656
    7. '   ' → logprob: -7.937294006347656
    8. 'con' → logprob: -7.937294006347656
    9. '(console' → logprob: -8.312294006347656
    10. '')' → logprob: -8.437294006347656

Token 497: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011482194066047668
    2. '   ' → logprob: -4.511482238769531
    3. '
' → logprob: -7.886482238769531
    4. '<|end|>' → logprob: -10.636482238769531
    5. '        
' → logprob: -11.636482238769531
    6. '```' → logprob: -12.136482238769531
    7. '           ' → logprob: -12.261482238769531
    8. ')' → logprob: -12.636482238769531
    9. '    
' → logprob: -12.636482238769531
    10. 'print' → logprob: -12.761482238769531

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762001276016235
    2. '   ' → logprob: -0.8262001276016235
    3. 'print' → logprob: -8.326200485229492
    4. ' print' → logprob: -11.576200485229492
    5. '```' → logprob: -11.826200485229492
    6. '           ' → logprob: -13.576200485229492
    7. '    ' → logprob: -16.201200485229492
    8. '     ' → logprob: -16.201200485229492
    9. '
' → logprob: -16.326200485229492
    10. '	print' → logprob: -16.576200485229492

Token 499: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02350483275949955
    2. 'print' (adapté à ' print') → logprob: -3.7735047340393066
    3. ' print' → logprob: -8.398505210876465
    4. '   ' → logprob: -10.398505210876465
    5. '```' → logprob: -13.148505210876465
    6. '           ' → logprob: -14.023505210876465
    7. '	print' → logprob: -15.148505210876465
    8. '      ' → logprob: -15.648505210876465
    9. '
' → logprob: -15.648505210876465
    10. '     ' → logprob: -16.14850425720215

Token 500: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0031784253660589457
    2. '(' → logprob: -5.753178596496582
    3. '("' → logprob: -15.128178596496582
    4. ' ('' → logprob: -15.378178596496582
    5. '(
' → logprob: -15.878178596496582
    6. '()' → logprob: -17.128177642822266
    7. ' (' → logprob: -17.753177642822266
    8. '(('' → logprob: -18.003177642822266
    9. '(\'' → logprob: -18.128177642822266
    10. ''' → logprob: -18.878177642822266

Token 501: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ''' → logprob: -18.75
    3. 'N' → logprob: -19.625
    4. ' No' → logprob: -19.875
    5. '')' → logprob: -21.625
    6. '_No' → logprob: -24.25
    7. 'Yes' → logprob: -24.625
    8. '"No' → logprob: -24.75
    9. '')
' → logprob: -24.875
    10. '.No' → logprob: -25.0

Token 502: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.930552313453518e-05
    2. ')' → logprob: -10.000049591064453
    3. '')
' → logprob: -12.500049591064453
    4. '")' → logprob: -16.250049591064453
    5. ''' → logprob: -17.000049591064453
    6. '')

' → logprob: -18.750049591064453
    7. '()' → logprob: -19.125049591064453
    8. '')"' → logprob: -19.375049591064453
    9. '')
' → logprob: -19.500049591064453
    10. '('' → logprob: -19.875049591064453

Token 503: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010090009309351444
    2. '<|end|>' → logprob: -5.885089874267578
    3. 'if' → logprob: -6.135089874267578
    4. 'main' → logprob: -6.135089874267578
    5. '\n' → logprob: -6.385089874267578
    6. '#' → logprob: -8.385089874267578
    7. '  
' → logprob: -8.385089874267578
    8. '' → logprob: -9.010089874267578
    9. '    
' → logprob: -9.135089874267578
    10. '```' → logprob: -9.135089874267578

Token 504: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35608649253845215
    2. 'main' → logprob: -1.2310864925384521
    3. ' main' → logprob: -5.356086730957031
    4. ' if' → logprob: -6.231086730957031
    5. '#' → logprob: -8.481086730957031
    6. '(main' → logprob: -8.481086730957031
    7. ' 
' → logprob: -8.606086730957031
    8. '
' → logprob: -8.856086730957031
    9. 'i' → logprob: -10.106086730957031
    10. 'm' → logprob: -10.106086730957031

Token 505: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.014179613441228867
    2. 'eler' → logprob: -4.264179706573486
    3. '#' → logprob: -12.139179229736328
    4. 'elé' → logprob: -13.014179229736328
    5. 'le' → logprob: -13.139179229736328
    6. 'elf' → logprob: -13.889179229736328
    7. 'ler' → logprob: -13.889179229736328
    8. 'l' → logprob: -13.889179229736328
    9. 'elle' → logprob: -14.139179229736328
    10. 'elif' → logprob: -14.264179229736328

Token 506: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9033035635948181
    2. '(main' → logprob: -0.9033035635948181
    3. 'main' → logprob: -2.028303623199463
    4. ' main' → logprob: -2.903303623199463
    5. '()' → logprob: -6.403303623199463
    6. '(
' → logprob: -7.403303623199463
    7. ' (' → logprob: -8.153303146362305
    8. '_main' → logprob: -8.278303146362305
    9. '	main' → logprob: -9.278303146362305
    10. 'def' → logprob: -9.653303146362305

Token 507: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014191007241606712
    2. ' main' → logprob: -4.264191150665283
    3. '(main' → logprob: -10.514190673828125
    4. '	main' → logprob: -15.014190673828125
    5. 'ma' → logprob: -16.514190673828125
    6. 'the' → logprob: -17.389190673828125
    7. '_main' → logprob: -17.514190673828125
    8. '()' → logprob: -17.639190673828125
    9. '.main' → logprob: -18.139190673828125
    10. '(' → logprob: -18.514190673828125

Token 508: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007193420315161347
    2. ' main' → logprob: -7.2507195472717285
    3. 'if' → logprob: -12.00071907043457
    4. 'def' → logprob: -13.12571907043457
    5. 'principal' → logprob: -14.50071907043457
    6. '(main' → logprob: -15.62571907043457
    7. '```' → logprob: -15.87571907043457
    8. '__' → logprob: -16.25071907043457
    9. '	main' → logprob: -16.25071907043457
    10. 'function' → logprob: -16.37571907043457

Token 509: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3132965564727783
    2. ' main' → logprob: -1.3132965564727783
    3. '(main' → logprob: -10.3132963180542
    4. '()' → logprob: -14.0632963180542
    5. '	main' → logprob: -14.9382963180542
    6. '_main' → logprob: -15.4382963180542
    7. '.main' → logprob: -16.063297271728516
    8. 'ma' → logprob: -16.938297271728516
    9. '(' → logprob: -17.438297271728516
    10. '```' → logprob: -17.563297271728516

Token 510: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03817885369062424
    2. '()
' → logprob: -3.2881789207458496
    3. '()

' → logprob: -9.413178443908691
    4. 'main' → logprob: -10.788178443908691
    5. '()`' → logprob: -11.913178443908691
    6. '(' → logprob: -12.038178443908691
    7. '()\' → logprob: -12.288178443908691
    8. '()
' → logprob: -12.413178443908691
    9. '(
' → logprob: -12.663178443908691
    10. '(main' → logprob: -13.038178443908691

Token 511: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4391535520553589
    2. '()
' → logprob: -1.1891535520553589
    3. '()' → logprob: -3.9391536712646484
    4. 'main' → logprob: -3.9391536712646484
    5. '(
' → logprob: -4.814153671264648
    6. '(' → logprob: -6.564153671264648
    7. '(main' → logprob: -6.564153671264648
    8. ' main' → logprob: -8.189153671264648
    9. '  
' → logprob: -8.439153671264648
    10. '\' → logprob: -8.814153671264648

Token 512: ' lancer' (ID: 82697)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5402886271476746
    2. 'ex' → logprob: -1.5402886867523193
    3. ' lancer' → logprob: -2.4152886867523193
    4. 'main' → logprob: -2.5402886867523193
    5. 'execut' → logprob: -4.29028844833374
    6. ' ex' → logprob: -4.66528844833374
    7. ' execut' → logprob: -5.16528844833374
    8. ' main' → logprob: -5.91528844833374
    9. '#' → logprob: -7.66528844833374
    10. 'execute' → logprob: -7.79028844833374

Token 513: ' l' (ID: 305)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.17580503225326538
    2. ' main' → logprob: -1.9258050918579102
    3. '()' → logprob: -4.17580509185791
    4. '(main' → logprob: -9.67580509185791
    5. '(' → logprob: -11.55080509185791
    6. '	main' → logprob: -11.80080509185791
    7. '_main' → logprob: -12.17580509185791
    8. 'ma' → logprob: -12.30080509185791
    9. '()
' → logprob: -12.67580509185791
    10. '.main' → logprob: -13.80080509185791

Token 514: ''ex' (ID: 23472)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.503836989402771
    2. 'e' → logprob: -1.253836989402771
    3. ' main' → logprob: -2.5038371086120605
    4. 'emain' → logprob: -4.2538371086120605
    5. 'a' → logprob: -5.6288371086120605
    6. '(main' → logprob: -5.8788371086120605
    7. ''ex' → logprob: -6.1288371086120605
    8. 'program' → logprob: -7.0038371086120605
    9. 'programme' → logprob: -7.1288371086120605
    10. '_main' → logprob: -7.1288371086120605

Token 515: 'écution' (ID: 122423)
  Prédit: 'ecution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecution' → logprob: -0.38765841722488403
    2. 'écution' → logprob: -1.1376583576202393
    3. 'é' → logprob: -7.762658596038818
    4. 'éc' → logprob: -9.13765811920166
    5. 'ec' → logprob: -9.38765811920166
    6. 'ecute' → logprob: -9.88765811920166
    7. 'main' → logprob: -10.01265811920166
    8. 'emple' → logprob: -10.88765811920166
    9. 'ection' → logprob: -11.13765811920166
    10. 'e' → logprob: -11.51265811920166

Token 516: ' du' (ID: 1462)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5163194537162781
    2. 'main' → logprob: -1.5163195133209229
    3. '
' → logprob: -1.7663195133209229
    4. '()' → logprob: -4.766319274902344
    5. 'if' → logprob: -6.641319274902344
    6. '()

' → logprob: -6.891319274902344
    7. '(
' → logprob: -7.141319274902344
    8. '(main' → logprob: -7.141319274902344
    9. ' main' → logprob: -8.516319274902344
    10. '

' → logprob: -10.266319274902344

Token 517: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.5604482889175415
    2. 'program' → logprob: -1.8104482889175415
    3. 'programme' → logprob: -1.8104482889175415
    4. ' program' → logprob: -2.310448169708252
    5. ' main' → logprob: -6.560448169708252
    6. ' code' → logprob: -7.435448169708252
    7. 'main' → logprob: -7.935448169708252
    8. ' script' → logprob: -9.06044864654541
    9. '_program' → logprob: -10.06044864654541
    10. 'code' → logprob: -10.31044864654541

Token 518: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0019528986886143684
    2. 'main' → logprob: -6.251953125
    3. '(main' → logprob: -11.501953125
    4. '
' → logprob: -12.626953125
    5. '

' → logprob: -12.751953125
    6. ' main' → logprob: -13.001953125
    7. '()
' → logprob: -13.251953125
    8. ' 
' → logprob: -13.626953125
    9. 'if' → logprob: -13.751953125
    10. '  
' → logprob: -13.876953125

Token 519: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.875
    3. '
' → logprob: -16.125
    4. '```' → logprob: -17.125
    5. '(main' → logprob: -18.0
    6. '	main' → logprob: -19.125
    7. 'if' → logprob: -21.125
    8. '.main' → logprob: -21.125
    9. '_main' → logprob: -21.5
    10. '``' → logprob: -23.0

Token 520: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 518
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 26.45%
Précision adaptée (1ère position): 27.22%
Précision (top 10): 63.51%
================================================================================
