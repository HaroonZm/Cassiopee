================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K = map(int, input().split())
P = list(map(int, input().split()))
if K == N:
    print(1)
    exit()
cum_asc = [0]
for i in range(N-1):
    cum_asc.append(cum_asc[-1] + int(P[i] < P[i+1]))
all_asc = []
for i in range(N-K+1):
    all_asc.append(cum_asc[i+K-1] - cum_asc[i] == K-1)
from collections import deque
sldmin = []
sldmax = []
qmin = deque()
qmax = deque()
for i in range(N):
    p = P[i]
    while qmin and qmin[-1] > p:
        qmin.pop()
    qmin.append(p)
    if i-K-1 >= 0 and P[i-K-1] == qmin[0]:
        qmin.popleft()
    while qmax and qmax[-1] < p:
        qmax.pop()
    qmax.append(p)
    if i-K-1 >= 0 and P[i-K-1] == qmax[0]:
        qmax.popleft()
    if i >= K:
        sldmin.append(qmin[0])
        sldmax.append(qmax[0])
parent = list(range(N-K+2))
rank = [0] * (N-K+2)
count = 0
def root(a):
    while parent[a] != a:
        parent[a] = parent[parent[a]]
        a = parent[a]
    return a
def unite(a, b):
    global count
    ra = root(a)
    rb = root(b)
    if ra == rb:
        return
    if rank[ra] < rank[rb]:
        parent[ra] = rb
    else:
        parent[rb] = ra
        if rank[ra] == rank[rb]:
            rank[ra] += 1
    count += 1
def components():
    return len(parent) - count
for i in range(N-K+1):
    l = P[i]
    r = P[i+K]
    mn = sldmin[i]
    mx = sldmax[i]
    if l == mn and r == mx:
        unite(i, i+1)
if all(f == False for f in all_asc):
    print(components() - 1)
    exit()
def_i = N-K+1
for i in range(N-K+1):
    if all_asc[i]:
        unite(i, def_i)
print(components())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023409105837345123
    2. ' =' → logprob: -4.148408889770508
    3. ',' → logprob: -5.023408889770508
    4. '.' → logprob: -8.398408889770508
    5. '+' → logprob: -9.148408889770508
    6. ')' → logprob: -9.273408889770508
    7. '[' → logprob: -9.398408889770508
    8. '#' → logprob: -10.148408889770508
    9. ''' → logprob: -10.398408889770508
    10. ' ' → logprob: -10.523408889770508

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22694803774356842
    2. ' input' → logprob: -2.3519480228424072
    3. 'map' → logprob: -2.7269480228424072
    4. ' ' → logprob: -3.9769480228424072
    5. 'input' → logprob: -4.101948261260986
    6. '10' → logprob: -5.976948261260986
    7. ' list' → logprob: -6.101948261260986
    8. ' int' → logprob: -6.851948261260986
    9. '0' → logprob: -7.601948261260986
    10. 'list' → logprob: -8.101947784423828

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.691144585609436
    2. '<|end|>' → logprob: -0.816144585609436
    3. '```' → logprob: -4.0661444664001465
    4. '<|end|>' → logprob: -4.4411444664001465
    5. '(lambda' → logprob: -4.8161444664001465
    6. ')' → logprob: -5.3161444664001465
    7. '(int' → logprob: -6.1911444664001465
    8. '(user' → logprob: -6.6911444664001465
    9. '(range' → logprob: -7.3786444664001465
    10. '(token' → logprob: -7.4411444664001465

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02095792256295681
    2. ')' → logprob: -4.395957946777344
    3. '(' → logprob: -5.020957946777344
    4. 'input' → logprob: -6.520957946777344
    5. '(int' → logprob: -9.770957946777344
    6. '```' → logprob: -10.145957946777344
    7. ',input' → logprob: -10.395957946777344
    8. '(user' → logprob: -10.645957946777344
    9. '`' → logprob: -10.770957946777344
    10. ' input' → logprob: -10.770957946777344

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023349830880761147
    2. ' input' → logprob: -3.7733497619628906
    3. '(input' → logprob: -9.27334976196289
    4. ')' → logprob: -11.64834976196289
    5. ',input' → logprob: -13.89834976196289
    6. '[input' → logprob: -15.64834976196289
    7. '```' → logprob: -15.89834976196289
    8. '<input' → logprob: -16.02334976196289
    9. '=input' → logprob: -16.14834976196289
    10. 'user' → logprob: -16.39834976196289

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.645222008228302
    2. '()' → logprob: -1.0202219486236572
    3. ')' → logprob: -3.3952219486236572
    4. '(' → logprob: -3.6452219486236572
    5. '(""))' → logprob: -3.8952219486236572
    6. '('' → logprob: -4.520222187042236
    7. '("")' → logprob: -5.395222187042236
    8. '());' → logprob: -6.020222187042236
    9. '();)' → logprob: -6.020222187042236
    10. '().' → logprob: -6.270222187042236

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007239909609779716
    2. 'strip' → logprob: -7.250723838806152
    3. 'rstrip' → logprob: -11.750723838806152
    4. ' split' → logprob: -12.750723838806152
    5. ')' → logprob: -13.000723838806152
    6. 'read' → logprob: -14.250723838806152
    7. 'spl' → logprob: -15.250723838806152
    8. '(split' → logprob: -16.00072479248047
    9. 'startswith' → logprob: -16.25072479248047
    10. 'replace' → logprob: -17.50072479248047

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007836227305233479
    2. '))' → logprob: -5.38283634185791
    3. '())' → logprob: -5.88283634185791
    4. '(' → logprob: -8.38283634185791
    5. '`)' → logprob: -9.25783634185791
    6. '()' → logprob: -9.88283634185791
    7. '('' → logprob: -11.50783634185791
    8. '()))' → logprob: -11.63283634185791
    9. '')' → logprob: -11.63283634185791
    10. ')`' → logprob: -12.38283634185791

Token 11: 'P' (ID: 47)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40327686071395874
    2. 'x' → logprob: -2.5282769203186035
    3. '\n' → logprob: -3.2782769203186035
    4. '`' → logprob: -3.6532769203186035
    5. 's' → logprob: -3.6532769203186035
    6. '#' → logprob: -3.6532769203186035
    7. 'for' → logprob: -3.7782769203186035
    8. 'n' → logprob: -3.7782769203186035
    9. 'if' → logprob: -4.5282769203186035
    10. '```' → logprob: -4.5282769203186035

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01834038831293583
    2. '[i' → logprob: -4.643340587615967
    3. '.' → logprob: -5.518340587615967
    4. '[:]' → logprob: -6.268340587615967
    5. '[]' → logprob: -6.768340587615967
    6. '\[' → logprob: -7.393340587615967
    7. '[int' → logprob: -9.393340110778809
    8. '[I' → logprob: -9.518340110778809
    9. '[r' → logprob: -9.518340110778809
    10. '[:' → logprob: -9.768340110778809

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7001008987426758
    2. 'list' → logprob: -0.7001008987426758
    3. ' [' → logprob: -5.825100898742676
    4. '[]' → logprob: -6.325100898742676
    5. ' []' → logprob: -7.075100898742676
    6. '[' → logprob: -7.325100898742676
    7. '[list' → logprob: -7.575100898742676
    8. 'sorted' → logprob: -9.950100898742676
    9. ' sorted' → logprob: -10.200100898742676
    10. '[int' → logprob: -10.450100898742676

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007130279554985464
    2. '(range' → logprob: -7.500712871551514
    3. '(P' → logprob: -9.875713348388672
    4. '(map' → logprob: -10.875713348388672
    5. '(int' → logprob: -11.500713348388672
    6. '(.' → logprob: -11.500713348388672
    7. '(input' → logprob: -11.625713348388672
    8. ' (' → logprob: -11.750713348388672
    9. '(
' → logprob: -11.750713348388672
    10. '("("' → logprob: -12.125713348388672

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009646998951211572
    2. '(' → logprob: -7.000964641571045
    3. '<int' → logprob: -10.375965118408203
    4. 'int' → logprob: -11.875965118408203
    5. '=int' → logprob: -11.875965118408203
    6. '[int' → logprob: -12.750965118408203
    7. ',int' → logprob: -13.750965118408203
    8. '```' → logprob: -13.750965118408203
    9. '(input' → logprob: -14.375965118408203
    10. '(
' → logprob: -14.375965118408203

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12335056811571121
    2. ',input' → logprob: -2.2483506202697754
    3. ',int' → logprob: -4.623350620269775
    4. '(input' → logprob: -8.248350143432617
    5. ' ,' → logprob: -8.873350143432617
    6. '(' → logprob: -8.873350143432617
    7. '(int' → logprob: -9.748350143432617
    8. ',(' → logprob: -11.248350143432617
    9. ',float' → logprob: -11.373350143432617
    10. '`,' → logprob: -11.623350143432617

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142346620559692
    2. ' input' → logprob: -1.7014234066009521
    3. '(input' → logprob: -11.701423645019531
    4. ',input' → logprob: -13.701423645019531
    5. '=input' → logprob: -15.076423645019531
    6. '	input' → logprob: -15.701423645019531
    7. '_input' → logprob: -16.20142364501953
    8. '<input' → logprob: -16.20142364501953
    9. ')' → logprob: -16.57642364501953
    10. '[input' → logprob: -17.32642364501953

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003396343090571463
    2. '()' → logprob: -8.00033950805664
    3. '(' → logprob: -14.00033950805664
    4. '())' → logprob: -14.12533950805664
    5. ' ().' → logprob: -14.37533950805664
    6. '()))' → logprob: -14.50033950805664
    7. '()).' → logprob: -15.25033950805664
    8. '()-' → logprob: -15.75033950805664
    9. '(.' → logprob: -15.87533950805664
    10. '();' → logprob: -16.00033950805664

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. 'strip' → logprob: -13.00000286102295
    3. ' split' → logprob: -15.37500286102295
    4. '(split' → logprob: -15.75000286102295
    5. 'rstrip' → logprob: -18.125001907348633
    6. '.split' → logprob: -19.875001907348633
    7. 'read' → logprob: -20.250001907348633
    8. 'replace' → logprob: -21.125001907348633
    9. 'spl' → logprob: -21.375001907348633
    10. '_split' → logprob: -21.375001907348633

Token 20: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38799360394477844
    2. ')' → logprob: -1.512993574142456
    3. '()))' → logprob: -2.512993574142456
    4. '())' → logprob: -4.512993812561035
    5. '(' → logprob: -4.762993812561035
    6. '()' → logprob: -7.262993812561035
    7. ')))' → logprob: -10.762993812561035
    8. ')(' → logprob: -10.887993812561035
    9. '),' → logprob: -11.762993812561035
    10. ' ))' → logprob: -11.762993812561035

Token 21: 'if' (ID: 366)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.859403133392334
    2. 'Q' → logprob: -1.609403133392334
    3. 'result' → logprob: -2.484403133392334
    4. 'count' → logprob: -2.609403133392334
    5. 'sorted' → logprob: -2.984403133392334
    6. 's' → logprob: -3.609403133392334
    7. 'res' → logprob: -4.234403133392334
    8. 'ans' → logprob: -4.234403133392334
    9. 'answer' → logprob: -4.359403133392334
    10. 'counts' → logprob: -4.359403133392334

Token 22: ' K' (ID: 658)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.2654411196708679
    2. ' K' → logprob: -1.6404411792755127
    3. ' ' → logprob: -3.5154411792755127
    4. 'P' → logprob: -5.140440940856934
    5. 'K' → logprob: -6.390440940856934
    6. ' N' → logprob: -6.765440940856934
    7. ' len' → logprob: -7.890440940856934
    8. ' ' → logprob: -8.140440940856934
    9. ' not' → logprob: -9.515440940856934
    10. '  ' → logprob: -11.015440940856934

Token 23: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10946975648403168
    2. ' ==' → logprob: -3.2344696521759033
    3. ' <' → logprob: -3.2344696521759033
    4. ' <=' → logprob: -4.359469890594482
    5. ' ' → logprob: -5.109469890594482
    6. '>' → logprob: -5.609469890594482
    7. ' >=' → logprob: -6.734469890594482
    8. '==' → logprob: -7.734469890594482
    9. '<' → logprob: -7.859469890594482
    10. '  ' → logprob: -9.359469413757324

Token 24: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.579229474067688
    2. '0' → logprob: -0.829229474067688
    3. '1' → logprob: -5.829229354858398
    4. ' N' → logprob: -8.454229354858398
    5. 'N' → logprob: -9.079229354858398
    6. '2' → logprob: -12.454229354858398
    7. '3' → logprob: -12.954229354858398
    8. ' len' → logprob: -13.454229354858398
    9. 'len' → logprob: -13.579229354858398
    10. '  ' → logprob: -13.704229354858398

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004708630498498678
    2. ' :' → logprob: -5.379708766937256
    3. '>' → logprob: -10.129708290100098
    4. '>:' → logprob: -11.254708290100098
    5. '+:' → logprob: -11.629708290100098
    6. ' >' → logprob: -12.379708290100098
    7. ':**' → logprob: -12.504708290100098
    8. '%' → logprob: -12.879708290100098
    9. '+' → logprob: -13.129708290100098
    10. '':' → logprob: -13.379708290100098

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6489169597625732
    2. ' print' → logprob: -1.3989169597625732
    3. 'print' → logprob: -1.6489169597625732
    4. '\n' → logprob: -4.148917198181152
    5. '```' → logprob: -5.023917198181152
    6. '
' → logprob: -5.273917198181152
    7. ':' → logprob: -5.523917198181152
    8. '    ' → logprob: -6.398917198181152
    9. ' ' → logprob: -6.648917198181152
    10. '    
' → logprob: -6.773917198181152

Token 27: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.35344329476356506
    2. 'print' (adapté à ' print') → logprob: -1.2284432649612427
    3. '   ' → logprob: -6.103443145751953
    4. ' P' → logprob: -6.103443145751953
    5. 'P' → logprob: -8.728443145751953
    6. ' ' → logprob: -8.978443145751953
    7. '    ' → logprob: -9.353443145751953
    8. ' for' → logprob: -9.978443145751953
    9. 'for' → logprob: -10.853443145751953
    10. '0' → logprob: -11.103443145751953

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06842398643493652
    2. '(sum' → logprob: -3.3184239864349365
    3. '(P' → logprob: -3.8184239864349365
    4. '(N' → logprob: -6.068424224853516
    5. '()' → logprob: -6.443424224853516
    6. '('' → logprob: -6.693424224853516
    7. '(max' → logprob: -6.693424224853516
    8. '("' → logprob: -7.068424224853516
    9. '(K' → logprob: -8.818424224853516
    10. '(len' → logprob: -9.068424224853516

Token 29: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.31411322951316833
    2. 'max' → logprob: -1.5641132593154907
    3. 'min' → logprob: -2.939113140106201
    4. '0' → logprob: -6.439113140106201
    5. '(sum' → logprob: -6.564113140106201
    6. 'P' → logprob: -6.939113140106201
    7. '(max' → logprob: -7.314113140106201
    8. ' sum' → logprob: -7.564113140106201
    9. 'N' → logprob: -7.939113140106201
    10. ')' → logprob: -8.06411361694336

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017481597024016082
    2. ' )' → logprob: -9.000174522399902
    3. ')
' → logprob: -10.375174522399902
    4. '*' → logprob: -12.125174522399902
    5. '))' → logprob: -12.500174522399902
    6. '`)' → logprob: -13.000174522399902
    7. '()' → logprob: -13.125174522399902
    8. '0' → logprob: -13.750174522399902
    9. ')
' → logprob: -14.500174522399902
    10. '+' → logprob: -14.625174522399902

Token 31: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3099119961261749
    2. ' else' → logprob: -2.0599119663238525
    3. '<|end|>' → logprob: -2.8099119663238525
    4. '\n' → logprob: -3.5599119663238525
    5. '
' → logprob: -3.9349119663238525
    6. '```' → logprob: -4.309912204742432
    7. ')' → logprob: -4.559912204742432
    8. 'elif' → logprob: -5.684912204742432
    9. '%' → logprob: -7.934912204742432
    10. '[' → logprob: -8.059911727905273

Token 32: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07856464385986328
    2. '\n' → logprob: -3.3285646438598633
    3. ' else' → logprob: -3.7035646438598633
    4. '```' → logprob: -4.828564643859863
    5. 'elif' → logprob: -5.828564643859863
    6. ')' → logprob: -6.453564643859863
    7. '<|end|>' → logprob: -7.328564643859863
    8. 'exit' (adapté à ' exit') → logprob: -7.328564643859863
    9. '   ' → logprob: -8.328564643859863
    10. '
' → logprob: -8.578564643859863

Token 33: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03807362541556358
    2. '(' → logprob: -3.2880735397338867
    3. '()`' → logprob: -11.788073539733887
    4. '()
' → logprob: -11.913073539733887
    5. '()

' → logprob: -12.288073539733887
    6. '(
' → logprob: -12.663073539733887
    7. '().' → logprob: -13.288073539733887
    8. '(

' → logprob: -13.413073539733887
    9. '_' → logprob: -13.913073539733887
    10. '```' → logprob: -13.913073539733887

Token 34: 'cum' (ID: 89165)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16196414828300476
    2. '0' → logprob: -3.036964178085327
    3. '

' → logprob: -3.911964178085327
    4. 'else' → logprob: -4.161963939666748
    5. ' 
' → logprob: -4.661963939666748
    6. '```' → logprob: -4.786963939666748
    7. 'elif' → logprob: -4.786963939666748
    8. '\n' → logprob: -5.036963939666748
    9. '  
' → logprob: -5.286963939666748
    10. 'for' → logprob: -5.536963939666748

Token 35: '_' (ID: 62)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.03327079117298126
    2. 'ulative' → logprob: -4.408270835876465
    3. '_' → logprob: -5.033270835876465
    4. ' =' → logprob: -5.283270835876465
    5. 'sum' → logprob: -5.533270835876465
    6. '_s' → logprob: -6.033270835876465
    7. 'u' → logprob: -7.783270835876465
    8. '_mul' → logprob: -8.033270835876465
    9. 'al' → logprob: -8.283270835876465
    10. '_probs' → logprob: -8.658270835876465

Token 36: 'asc' (ID: 7400)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01075939740985632
    2. 'prod' → logprob: -4.635759353637695
    3. '=' → logprob: -8.385759353637695
    4. '_sum' → logprob: -8.510759353637695
    5. '   ' → logprob: -8.510759353637695
    6. ' ' → logprob: -9.510759353637695
    7. 'm' → logprob: -9.885759353637695
    8. ' =' → logprob: -10.135759353637695
    9. 'mul' → logprob: -10.260759353637695
    10. 'u' → logprob: -10.260759353637695

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3835012912750244
    2. 'end' → logprob: -1.6335012912750244
    3. '=[' → logprob: -3.3835012912750244
    4. '=[]' → logprob: -4.133501052856445
    5. '_sum' → logprob: -4.133501052856445
    6. 'sum' → logprob: -4.133501052856445
    7. 'um' → logprob: -4.258501052856445
    8. '[' → logprob: -4.758501052856445
    9. 'umulative' → logprob: -5.383501052856445
    10. ' =' → logprob: -5.883501052856445

Token 38: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0070910267531871796
    2. '[P' → logprob: -5.882091045379639
    3. ' [' → logprob: -6.007091045379639
    4. '0' → logprob: -6.757091045379639
    5. '[N' → logprob: -7.757091045379639
    6. '[K' → logprob: -8.88209056854248
    7. '1' → logprob: -10.50709056854248
    8. '[len' → logprob: -11.25709056854248
    9. '[int' → logprob: -11.38209056854248
    10. ' ' → logprob: -12.00709056854248

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001085497424355708
    2. 'P' → logprob: -9.75010871887207
    3. '1' → logprob: -10.75010871887207
    4. '(' → logprob: -11.00010871887207
    5. '[' → logprob: -12.62510871887207
    6. '-' → logprob: -12.87510871887207
    7. ' ' → logprob: -12.87510871887207
    8. '(P' → logprob: -13.50010871887207
    9. 'N' → logprob: -14.62510871887207
    10. ']' → logprob: -15.00010871887207

Token 40: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030296442564576864
    2. ']*(' → logprob: -7.003029823303223
    3. ',' → logprob: -7.253029823303223
    4. ' ]' → logprob: -8.253029823303223
    5. ']+' → logprob: -8.253029823303223
    6. ']*' → logprob: -8.628029823303223
    7. ' for' → logprob: -8.753029823303223
    8. ')' → logprob: -9.253029823303223
    9. '()]' → logprob: -9.378029823303223
    10. '0' → logprob: -9.378029823303223

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16964983940124512
    2. ' for' → logprob: -1.9196498394012451
    3. '+' → logprob: -5.669650077819824
    4. '0' → logprob: -6.544650077819824
    5. 'f' → logprob: -7.294650077819824
    6. 'i' → logprob: -7.419650077819824
    7. '*' → logprob: -7.544650077819824
    8. 'cum' → logprob: -8.169650077819824
    9. 's' → logprob: -8.294650077819824
    10. '_' → logprob: -8.544650077819824

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03040948323905468
    2. ' i' → logprob: -4.030409336090088
    3. 'p' → logprob: -4.530409336090088
    4. 'x' → logprob: -7.530409336090088
    5. ' p' → logprob: -8.030409812927246
    6. 'num' → logprob: -8.655409812927246
    7. 'a' → logprob: -8.905409812927246
    8. ' ' → logprob: -9.655409812927246
    9. 'v' → logprob: -9.655409812927246
    10. 'val' → logprob: -11.155409812927246

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014299492351710796
    2. 'in' → logprob: -4.264299392700195
    3. ' ' → logprob: -9.889299392700195
    4. '_' → logprob: -10.514299392700195
    5. ',' → logprob: -10.889299392700195
    6. ' _' → logprob: -11.639299392700195
    7. 's' → logprob: -12.139299392700195
    8. '+' → logprob: -12.389299392700195
    9. '1' → logprob: -12.514299392700195
    10. '_in' → logprob: -12.764299392700195

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2254374474287033
    2. ' range' → logprob: -1.6004374027252197
    3. 'P' → logprob: -10.97543716430664
    4. ' ' → logprob: -12.97543716430664
    5. ' P' → logprob: -13.22543716430664
    6. '	range' → logprob: -14.10043716430664
    7. '(range' → logprob: -14.47543716430664
    8. '  ' → logprob: -14.60043716430664
    9. 'r' → logprob: -14.72543716430664
    10. '   ' → logprob: -14.85043716430664

Token 45: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2033628523349762
    2. '(N' → logprob: -1.7033628225326538
    3. '(K' → logprob: -6.453362941741943
    4. '(len' → logprob: -7.953362941741943
    5. '(n' → logprob: -10.953362464904785
    6. '(
' → logprob: -14.578362464904785
    7. ' (' → logprob: -14.578362464904785
    8. '1' → logprob: -14.828362464904785
    9. '(P' → logprob: -15.078362464904785
    10. '(i' → logprob: -15.078362464904785

Token 46: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6268488168716431
    2. '):' → logprob: -1.001848816871643
    3. '):
' → logprob: -2.3768486976623535
    4. ' -' → logprob: -5.7518486976623535
    5. '):
' → logprob: -7.0018486976623535
    6. '+' → logprob: -7.1268486976623535
    7. ')' → logprob: -7.7518486976623535
    8. ' ):' → logprob: -9.251849174499512
    9. ' ' → logprob: -9.376849174499512
    10. '   ' → logprob: -9.626849174499512

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046618093620054424
    2. ' ' → logprob: -7.750466346740723
    3. '2' → logprob: -11.000466346740723
    4. 'K' → logprob: -11.625466346740723
    5. '-' → logprob: -12.625466346740723
    6. ')' → logprob: -13.125466346740723
    7. '   ' → logprob: -13.500466346740723
    8. ' K' → logprob: -14.312966346740723
    9. '```' → logprob: -14.625466346740723
    10. '  ' → logprob: -14.937966346740723

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10386323928833008
    2. '):
' → logprob: -2.35386323928833
    3. '):
' → logprob: -5.72886323928833
    4. ' ):' → logprob: -8.728862762451172
    5. '+' → logprob: -9.228862762451172
    6. ')' → logprob: -9.978862762451172
    7. ':' → logprob: -10.353862762451172
    8. ',' → logprob: -10.478862762451172
    9. '-' → logprob: -11.603862762451172
    10. ' ):
' → logprob: -11.728862762451172

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008078085258603096
    2. 'cum' → logprob: -5.383078098297119
    3. ' cum' → logprob: -6.383078098297119
    4. ' ' → logprob: -7.633078098297119
    5. '<|end|>' → logprob: -7.633078098297119
    6. '	c' → logprob: -8.758077621459961
    7. '```' → logprob: -8.883077621459961
    8. ' if' → logprob: -9.133077621459961
    9. '+' → logprob: -9.258077621459961
    10. '  ' → logprob: -10.133077621459961

Token 50: ' cum' (ID: 10023)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19348004460334778
    2. ' cum' → logprob: -2.0684800148010254
    3. 'cum' (adapté à ' cum') → logprob: -3.1934800148010254
    4. ' if' → logprob: -5.193480014801025
    5. ' ' → logprob: -6.568480014801025
    6. '    ' → logprob: -7.443480014801025
    7. '	c' → logprob: -8.068480491638184
    8. '       ' → logprob: -8.443480491638184
    9. '```' → logprob: -9.193480491638184
    10. 'if' → logprob: -9.693480491638184

Token 51: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014323067443910986
    2. 'asc' → logprob: -10.125143051147461
    3. '__' → logprob: -11.000143051147461
    4. '   ' → logprob: -11.625143051147461
    5. 's' → logprob: -11.750143051147461
    6. '+' → logprob: -11.875143051147461
    7. ' ' → logprob: -12.125143051147461
    8. '+=' → logprob: -12.375143051147461
    9. '_,' → logprob: -12.562643051147461
    10. ',_' → logprob: -12.687643051147461

Token 52: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -1.9361264946837764e-07
    2. 'ascending' → logprob: -16.75
    3. 'asp' → logprob: -16.875
    4. 'ASC' → logprob: -19.0
    5. '.asc' → logprob: -19.125
    6. 'a' → logprob: -19.25
    7. ' asc' → logprob: -19.5
    8. 'as' → logprob: -19.75
    9. 'desc' → logprob: -19.75
    10. '_' → logprob: -20.0

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2632637619972229
    2. '.' → logprob: -1.5132637023925781
    3. ' +=' → logprob: -5.388263702392578
    4. ' .' → logprob: -5.888263702392578
    5. '+' → logprob: -6.513263702392578
    6. '+=' → logprob: -6.763263702392578
    7. '.extend' → logprob: -7.138263702392578
    8. '+.' → logprob: -8.888263702392578
    9. '.+' → logprob: -9.013263702392578
    10. '.app' → logprob: -9.513263702392578

Token 54: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002046647947281599
    2. 'cum' → logprob: -6.502046585083008
    3. '(' → logprob: -8.002046585083008
    4. ' cum' → logprob: -8.627046585083008
    5. '   ' → logprob: -11.252046585083008
    6. '	c' → logprob: -12.252046585083008
    7. ')c' → logprob: -12.252046585083008
    8. 'c' → logprob: -13.002046585083008
    9. ')' → logprob: -13.377046585083008
    10. ' ' → logprob: -13.752046585083008

Token 55: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00037192381569184363
    2. '[' → logprob: -9.500371932983398
    3. '[i' → logprob: -9.750371932983398
    4. 'cum' → logprob: -9.875371932983398
    5. '   ' → logprob: -10.750371932983398
    6. '+' → logprob: -11.000371932983398
    7. 'P' → logprob: -11.125371932983398
    8. 'umsum' → logprob: -11.500371932983398
    9. '1' → logprob: -11.562871932983398
    10. 'i' → logprob: -11.750371932983398

Token 56: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.869017852295656e-06
    2. '[i' → logprob: -12.375006675720215
    3. '_as' → logprob: -14.125006675720215
    4. '[-' → logprob: -15.000006675720215
    5. '[_' → logprob: -15.250006675720215
    6. '[' → logprob: -15.625006675720215
    7. '__' → logprob: -15.875006675720215
    8. '_ass' → logprob: -16.00000762939453
    9. '_[' → logprob: -16.25000762939453
    10. '   ' → logprob: -16.62500762939453

Token 57: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.0012165444204583764
    2. '[i' → logprob: -7.501216411590576
    3. 'i' → logprob: -8.126216888427734
    4. '_' → logprob: -8.501216888427734
    5. '+' → logprob: -10.501216888427734
    6. 'P' → logprob: -10.876216888427734
    7. 'ass' → logprob: -11.126216888427734
    8. ')' → logprob: -11.626216888427734
    9. '   ' → logprob: -11.751216888427734
    10. '[' → logprob: -11.751216888427734

Token 58: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.09097705036401749
    2. '[i' → logprob: -2.4659769535064697
    3. '[' → logprob: -6.215977191925049
    4. '+' → logprob: -11.09097671508789
    5. ' [' → logprob: -12.09097671508789
    6. '[
' → logprob: -12.21597671508789
    7. ' [-' → logprob: -12.71597671508789
    8. ')' → logprob: -13.34097671508789
    9. ' ' → logprob: -13.59097671508789
    10. '+[' → logprob: -13.96597671508789

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.070975071750581e-05
    2. ' ' → logprob: -10.875030517578125
    3. '+' → logprob: -12.562530517578125
    4. ']' → logprob: -13.500030517578125
    5. '```' → logprob: -14.125030517578125
    6. ']+' → logprob: -14.437530517578125
    7. '   ' → logprob: -14.500030517578125
    8. ')' → logprob: -14.750030517578125
    9. 'i' → logprob: -14.875030517578125
    10. '2' → logprob: -15.125030517578125

Token 60: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009544167667627335
    2. ' +' → logprob: -5.009544372558594
    3. ')' → logprob: -7.009544372558594
    4. ']' → logprob: -7.134544372558594
    5. ']+' → logprob: -7.384544372558594
    6. '+(' → logprob: -8.384544372558594
    7. ')+' → logprob: -9.009544372558594
    8. ')+(' → logprob: -9.134544372558594
    9. '1' → logprob: -11.009544372558594
    10. ' plus' → logprob: -11.759544372558594

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.054926175624132156
    2. ' +' → logprob: -2.9299261569976807
    3. '+(' → logprob: -10.304925918579102
    4. '+i' → logprob: -12.929925918579102
    5. ' plus' → logprob: -13.179925918579102
    6. ' +(' → logprob: -13.304925918579102
    7. '1' → logprob: -13.929925918579102
    8. '+
' → logprob: -14.179925918579102
    9. ')+' → logprob: -14.679925918579102
    10. ')' → logprob: -14.679925918579102

Token 62: ' int' (ID: 677)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0375768318772316
    2. ' (' → logprob: -4.662576675415039
    3. '(int' → logprob: -4.662576675415039
    4. '1' → logprob: -5.037576675415039
    5. '(' → logprob: -5.037576675415039
    6. ' int' → logprob: -6.412576675415039
    7. 'int' → logprob: -6.662576675415039
    8. '((' → logprob: -7.662576675415039
    9. ' ' → logprob: -7.662576675415039
    10. '(p' → logprob: -8.037576675415039

Token 63: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00026574634830467403
    2. '(' → logprob: -8.250266075134277
    3. '((' → logprob: -13.000266075134277
    4. 'P' → logprob: -14.000266075134277
    5. ')' → logprob: -15.000266075134277
    6. '(
' → logprob: -15.250266075134277
    7. '(A' → logprob: -15.500266075134277
    8. '(Py' → logprob: -15.875266075134277
    9. '(p' → logprob: -16.87526512145996
    10. '(i' → logprob: -16.87526512145996

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018971276585943997
    2. '[P' → logprob: -8.875189781188965
    3. '[' → logprob: -10.000189781188965
    4. '[I' → logprob: -12.875189781188965
    5. '[
' → logprob: -14.125189781188965
    6. ' [' → logprob: -14.250189781188965
    7. '[A' → logprob: -15.750189781188965
    8. '```' → logprob: -15.875189781188965
    9. 'i' → logprob: -17.00018882751465
    10. 'P' → logprob: -17.37518882751465

Token 65: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1930399388074875
    2. '>' → logprob: -2.193039894104004
    3. ' <' → logprob: -2.943039894104004
    4. '<P' → logprob: -5.068039894104004
    5. ' ' → logprob: -6.568039894104004
    6. ')' → logprob: -7.193039894104004
    7. 'P' → logprob: -7.318039894104004
    8. ' >' → logprob: -7.318039894104004
    9. ']' → logprob: -8.068039894104004
    10. ' P' → logprob: -8.193039894104004

Token 66: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.045797575265169144
    2. '>' → logprob: -3.42079758644104
    3. '<P' → logprob: -4.670797348022461
    4. ' <' → logprob: -6.045797348022461
    5. 'P' → logprob: -8.920797348022461
    6. '>P' → logprob: -10.170797348022461
    7. ' >' → logprob: -10.295797348022461
    8. ' ' → logprob: -10.295797348022461
    9. ' P' → logprob: -10.795797348022461
    10. ')' → logprob: -11.170797348022461

Token 67: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00020377879263833165
    2. ' P' → logprob: -8.500204086303711
    3. '>P' → logprob: -16.12520408630371
    4. '	P' → logprob: -16.12520408630371
    5. ' ' → logprob: -16.87520408630371
    6. '   ' → logprob: -17.00020408630371
    7. 'p' → logprob: -18.00020408630371
    8. '=P' → logprob: -18.25020408630371
    9. '  ' → logprob: -18.62520408630371
    10. '=' → logprob: -19.12520408630371

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038837024476379156
    2. 'i' → logprob: -7.875388145446777
    3. '[' → logprob: -12.000388145446777
    4. '[
' → logprob: -14.125388145446777
    5. ' i' → logprob: -14.375388145446777
    6. '(i' → logprob: -14.625388145446777
    7. '```' → logprob: -16.125389099121094
    8. '{i' → logprob: -16.375389099121094
    9. '1' → logprob: -16.875389099121094
    10. '   ' → logprob: -17.125389099121094

Token 69: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0053168851882219315
    2. ' +' → logprob: -5.255316734313965
    3. '1' → logprob: -10.255316734313965
    4. '+i' → logprob: -11.130316734313965
    5. '[i' → logprob: -11.755316734313965
    6. '+
' → logprob: -11.880316734313965
    7. '-' → logprob: -12.130316734313965
    8. ' ' → logprob: -12.380316734313965
    9. ']' → logprob: -13.130316734313965
    10. ']+' → logprob: -13.630316734313965

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. ']))' → logprob: -11.37503719329834
    3. ' ' → logprob: -11.50003719329834
    4. ']' → logprob: -11.87503719329834
    5. 'i' → logprob: -12.87503719329834
    6. '   ' → logprob: -13.00003719329834
    7. '[i' → logprob: -13.00003719329834
    8. '])' → logprob: -14.87503719329834
    9. '0' → logprob: -15.12503719329834
    10. ']))
' → logprob: -15.50003719329834

Token 71: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6741081476211548
    2. '))' → logprob: -1.2991081476211548
    3. ']))' → logprob: -1.6741081476211548
    4. ')))' → logprob: -3.5491080284118652
    5. ']' → logprob: -7.424108028411865
    6. '])' → logprob: -8.174108505249023
    7. ')])' → logprob: -8.174108505249023
    8. '']))' → logprob: -9.549108505249023
    9. '}))' → logprob: -9.674108505249023
    10. ')]' → logprob: -10.299108505249023

Token 72: 'all' (ID: 586)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04660091921687126
    2. 'best' → logprob: -4.046600818634033
    3. 'ans' → logprob: -4.671600818634033
    4. 'result' → logprob: -5.796600818634033
    5. 'answer' → logprob: -5.796600818634033
    6. 'm' → logprob: -5.921600818634033
    7. 'min' → logprob: -6.171600818634033
    8. 'w' → logprob: -6.796600818634033
    9. 'count' → logprob: -7.046600818634033
    10. 'res' → logprob: -7.171600818634033

Token 73: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08678634464740753
    2. '(' → logprob: -2.7117862701416016
    3. '_c' → logprob: -4.586786270141602
    4. 's' → logprob: -6.836786270141602
    5. '_max' → logprob: -7.336786270141602
    6. 'er' → logprob: -7.711786270141602
    7. '_scores' → logprob: -7.836786270141602
    8. '_sum' → logprob: -8.086786270141602
    9. '(c' → logprob: -8.086786270141602
    10. '_idx' → logprob: -8.086786270141602

Token 74: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.008473092690110207
    2. 'cum' → logprob: -5.758472919464111
    3. 'sub' → logprob: -6.383472919464111
    4. 'sum' → logprob: -7.133472919464111
    5. 'ranges' → logprob: -7.758472919464111
    6. 'diff' → logprob: -8.25847339630127
    7. 'indices' → logprob: -8.63347339630127
    8. 'windows' → logprob: -8.75847339630127
    9. 'k' → logprob: -8.75847339630127
    10. 'window' → logprob: -9.25847339630127

Token 75: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0044134855270386
    2. ' =' → logprob: -1.1294134855270386
    3. 's' → logprob: -2.129413604736328
    4. '=' → logprob: -2.504413604736328
    5. '_' → logprob: -4.254413604736328
    6. '_count' → logprob: -4.254413604736328
    7. '_counts' → logprob: -4.379413604736328
    8. '_sum' → logprob: -4.504413604736328
    9. '_idx' → logprob: -4.504413604736328
    10. '[-' → logprob: -4.754413604736328

Token 76: ' []
' (ID: 8911)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.15707805752754211
    2. 'cum' → logprob: -2.5320780277252197
    3. ' [' → logprob: -3.7820780277252197
    4. '[' → logprob: -4.282078266143799
    5. ' max' → logprob: -4.782078266143799
    6. '[c' → logprob: -5.282078266143799
    7. '[]' → logprob: -6.032078266143799
    8. ' ' → logprob: -6.282078266143799
    9. 'max' → logprob: -6.282078266143799
    10. ' []' → logprob: -6.782078266143799

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.750436007976532e-05
    2. 'max' → logprob: -10.87503719329834
    3. ' for' → logprob: -11.87503719329834
    4. '[' → logprob: -12.12503719329834
    5. 'min' → logprob: -13.50003719329834
    6. 'i' → logprob: -13.50003719329834
    7. '0' → logprob: -14.50003719329834
    8. 'sum' → logprob: -14.62503719329834
    9. '```' → logprob: -14.62503719329834
    10. 'all' → logprob: -14.87503719329834

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12704947590827942
    2. ' i' → logprob: -2.127049446105957
    3. '_' → logprob: -10.002049446105957
    4. '_i' → logprob: -10.877049446105957
    5. ' ' → logprob: -11.002049446105957
    6. 'j' → logprob: -11.377049446105957
    7. ' _' → logprob: -12.377049446105957
    8. 'k' → logprob: -12.502049446105957
    9. '	i' → logprob: -12.752049446105957
    10. 'r' → logprob: -12.877049446105957

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05137322470545769
    2. 'in' → logprob: -3.051373243331909
    3. ' ' → logprob: -5.92637300491333
    4. 'n' → logprob: -10.176373481750488
    5. ' i' → logprob: -10.551373481750488
    6. 'range' → logprob: -10.676373481750488
    7. '  ' → logprob: -11.676373481750488
    8. ',' → logprob: -12.676373481750488
    9. ' range' → logprob: -13.176373481750488
    10. '   ' → logprob: -13.176373481750488

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519353926181793
    2. ' range' → logprob: -1.501935362815857
    3. ' ' → logprob: -13.001935005187988
    4. '(range' → logprob: -13.126935005187988
    5. '	range' → logprob: -14.126935005187988
    6. 'r' → logprob: -14.876935005187988
    7. 'ange' → logprob: -15.376935005187988
    8. '  ' → logprob: -15.626935005187988
    9. ')' → logprob: -16.501935958862305
    10. ' xrange' → logprob: -16.626935958862305

Token 81: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4259597659111023
    2. '(range' → logprob: -1.925959825515747
    3. '(K' → logprob: -1.925959825515747
    4. '(' → logprob: -3.300959825515747
    5. 'range' → logprob: -4.425959587097168
    6. ' range' → logprob: -5.050959587097168
    7. '(n' → logprob: -10.300959587097168
    8. '(len' → logprob: -10.425959587097168
    9. '((' → logprob: -10.800959587097168
    10. '(s' → logprob: -11.175959587097168

Token 82: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.041072193533182144
    2. '-' → logprob: -3.791072130203247
    3. ' -' → logprob: -4.041072368621826
    4. '-k' → logprob: -10.416071891784668
    5. ' ' → logprob: -10.791071891784668
    6. '+' → logprob: -11.166071891784668
    7. ')' → logprob: -12.541071891784668
    8. '   ' → logprob: -12.666071891784668
    9. '):
' → logprob: -12.916071891784668
    10. '):' → logprob: -12.916071891784668

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037466296926140785
    2. ' +' → logprob: -5.628746509552002
    3. '):' → logprob: -9.00374698638916
    4. '):
' → logprob: -11.12874698638916
    5. ' ' → logprob: -13.12874698638916
    6. '+i' → logprob: -13.50374698638916
    7. '1' → logprob: -14.12874698638916
    8. '+:' → logprob: -14.12874698638916
    9. '-' → logprob: -14.37874698638916
    10. '+
' → logprob: -14.50374698638916

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038443657103925943
    2. ' ' → logprob: -7.875384330749512
    3. ')' → logprob: -13.375384330749512
    4. '   ' → logprob: -13.875384330749512
    5. '```' → logprob: -14.500384330749512
    6. '2' → logprob: -15.500384330749512
    7. '  ' → logprob: -15.937884330749512
    8. '
' → logprob: -16.250385284423828
    9. '`' → logprob: -16.250385284423828
    10. '):
' → logprob: -16.312885284423828

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036084887688048184
    2. ' ):' → logprob: -8.500360488891602
    3. '):
' → logprob: -9.625360488891602
    4. ')' → logprob: -9.625360488891602
    5. ':' → logprob: -10.625360488891602
    6. '):
' → logprob: -14.125360488891602
    7. ']:' → logprob: -16.2503604888916
    8. ' ):
' → logprob: -17.2503604888916
    9. '):

' → logprob: -17.3753604888916
    10. '():' → logprob: -17.5003604888916

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7010334134101868
    2. ' all' → logprob: -0.8260334134101868
    3. 'all' → logprob: -2.951033353805542
    4. '	all' → logprob: -5.076033592224121
    5. ' ' → logprob: -5.326033592224121
    6. '    ' → logprob: -6.701033592224121
    7. '       ' → logprob: -8.576033592224121
    8. ' 
' → logprob: -8.701033592224121
    9. '    
' → logprob: -8.826033592224121
    10. '(all' → logprob: -9.076033592224121

Token 87: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.034164607524871826
    2. ' all' → logprob: -3.5341646671295166
    3. '   ' → logprob: -5.5341644287109375
    4. 'if' → logprob: -7.9091644287109375
    5. ' if' → logprob: -10.409164428710938
    6. ' ' → logprob: -11.284164428710938
    7. '
' → logprob: -11.534164428710938
    8. 'count' → logprob: -12.159164428710938
    9. 'sum' → logprob: -12.534164428710938
    10. 'a' → logprob: -12.659164428710938

Token 88: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.127333340875339e-06
    2. '_a' → logprob: -14.000003814697266
    3. '_as' → logprob: -14.875003814697266
    4. '_ans' → logprob: -15.000003814697266
    5. '_all' → logprob: -15.250003814697266
    6. '_c' → logprob: -15.500003814697266
    7. '_ac' → logprob: -15.750003814697266
    8. '_x' → logprob: -15.875003814697266
    9. '_auc' → logprob: -15.875003814697266
    10. 'a' → logprob: -16.000003814697266

Token 89: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -1.9361264946837764e-07
    2. 'asp' → logprob: -16.0
    3. ' asc' → logprob: -17.625
    4. '_' → logprob: -18.625
    5. 'all' → logprob: -19.25
    6. 'ascending' → logprob: -19.25
    7. '.asc' → logprob: -20.25
    8. 'a' → logprob: -20.625
    9. 'as' → logprob: -20.75
    10. 'c' → logprob: -21.25

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02060880698263645
    2. '.' → logprob: -3.895608901977539
    3. '.app' → logprob: -10.770608901977539
    4. ' .' → logprob: -10.770608901977539
    5. '.ap' → logprob: -11.520608901977539
    6. 'append' → logprob: -11.520608901977539
    7. '​.' → logprob: -13.770608901977539
    8. '.py' → logprob: -14.020608901977539
    9. '.extend' → logprob: -14.520608901977539
    10. '.Append' → logprob: -14.520608901977539

Token 91: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.862962229410186e-05
    2. '(' → logprob: -9.500078201293945
    3. '((' → logprob: -13.125078201293945
    4. 'c' → logprob: -14.000078201293945
    5. 'cum' → logprob: -14.250078201293945
    6. '(
' → logprob: -16.375078201293945
    7. '(i' → logprob: -17.000078201293945
    8. '(C' → logprob: -17.125078201293945
    9. '(max' → logprob: -17.125078201293945
    10. ' (' → logprob: -17.250078201293945

Token 92: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00016825977945700288
    2. 'u' → logprob: -9.500167846679688
    3. '(' → logprob: -9.875167846679688
    4. '_' → logprob: -11.750167846679688
    5. '[' → logprob: -12.000167846679688
    6. 'cum' → logprob: -12.000167846679688
    7. '(c' → logprob: -12.250167846679688
    8. '_um' → logprob: -12.625167846679688
    9. '(u' → logprob: -13.625167846679688
    10. 'umsum' → logprob: -13.750167846679688

Token 93: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_
' → logprob: -18.5
    3. ' _' → logprob: -18.625
    4. '\' → logprob: -18.75
    5. '_as' → logprob: -19.125
    6. '_)' → logprob: -19.25
    7. '‌' → logprob: -19.25
    8. '_
' → logprob: -19.25
    9. '_-' → logprob: -19.5
    10. ')' → logprob: -19.625

Token 94: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.16023093461990356
    2. '_' → logprob: -1.9102308750152588
    3. 'asp' → logprob: -12.66023063659668
    4. '_as' → logprob: -13.28523063659668
    5. ' asc' → logprob: -14.78523063659668
    6. 'as' → logprob: -14.78523063659668
    7. '.asc' → logprob: -15.41023063659668
    8. 'asi' → logprob: -16.03523063659668
    9. 'asco' → logprob: -16.03523063659668
    10. 'a' → logprob: -16.03523063659668

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.281485836254433e-05
    2. '[' → logprob: -9.500092506408691
    3. '[K' → logprob: -11.000092506408691
    4. 'i' → logprob: -15.375092506408691
    5. '[u' → logprob: -15.625092506408691
    6. '[I' → logprob: -15.875092506408691
    7. '][' → logprob: -16.000093460083008
    8. '[k' → logprob: -16.375093460083008
    9. ' [' → logprob: -16.375093460083008
    10. ')[' → logprob: -16.625093460083008

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021725050173699856
    2. ' +' → logprob: -6.377172470092773
    3. ']' → logprob: -7.752172470092773
    4. 'K' → logprob: -11.127172470092773
    5. ']+' → logprob: -11.127172470092773
    6. '+k' → logprob: -12.252172470092773
    7. ' ' → logprob: -13.377172470092773
    8. '+]' → logprob: -13.877172470092773
    9. '+i' → logprob: -14.127172470092773
    10. '   ' → logprob: -14.502172470092773

Token 97: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.10473832488059998
    2. '+' → logprob: -2.354738235473633
    3. ' K' → logprob: -6.229738235473633
    4. '   ' → logprob: -7.729738235473633
    5. 'i' → logprob: -7.854738235473633
    6. ' +' → logprob: -7.854738235473633
    7. '1' → logprob: -8.229738235473633
    8. ')' → logprob: -8.729738235473633
    9. '`' → logprob: -8.854738235473633
    10. ' ' → logprob: -9.604738235473633

Token 98: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005177308339625597
    2. ']-' → logprob: -5.3801774978637695
    3. '`]' → logprob: -8.38017749786377
    4. ' ]' → logprob: -8.88017749786377
    5. '"]' → logprob: -9.50517749786377
    6. '']' → logprob: -9.63017749786377
    7. '-' → logprob: -10.38017749786377
    8. ')]' → logprob: -11.88017749786377
    9. '])' → logprob: -12.63017749786377
    10. ']
' → logprob: -13.88017749786377

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016718693950679153
    2. ' ' → logprob: -9.500166893005371
    3. ']' → logprob: -9.875166893005371
    4. '2' → logprob: -10.375166893005371
    5. '])' → logprob: -12.500166893005371
    6. ')' → logprob: -13.375166893005371
    7. '   ' → logprob: -13.812666893005371
    8. '```' → logprob: -14.062666893005371
    9. '-' → logprob: -14.937666893005371
    10. 'i' → logprob: -15.187666893005371

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03306148946285248
    2. ']-' → logprob: -4.283061504364014
    3. ' -' → logprob: -4.783061504364014
    4. '-' → logprob: -4.908061504364014
    5. ' ]' → logprob: -5.908061504364014
    6. ' ' → logprob: -9.283061027526855
    7. ')' → logprob: -9.283061027526855
    8. '"]' → logprob: -11.033061027526855
    9. '']' → logprob: -11.533061027526855
    10. '])' → logprob: -12.033061027526855

Token 101: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.35098996758461
    2. '-' → logprob: -1.2259899377822876
    3. ')' → logprob: -6.975989818572998
    4. ' -
' → logprob: -7.350989818572998
    5. '-
' → logprob: -7.725989818572998
    6. ' ' → logprob: -8.100990295410156
    7. '-)' → logprob: -9.350990295410156
    8. ' )' → logprob: -9.725990295410156
    9. ')-' → logprob: -10.475990295410156
    10. '    ' → logprob: -12.225990295410156

Token 102: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.0015023599844425917
    2. ' cum' → logprob: -6.501502513885498
    3. 'c' → logprob: -17.251502990722656
    4. '	c' → logprob: -17.251502990722656
    5. 'cul' → logprob: -18.751502990722656
    6. ' ' → logprob: -18.876502990722656
    7. '‌' → logprob: -19.001502990722656
    8. 'cus' → logprob: -20.126502990722656
    9. '   ' → logprob: -20.251502990722656
    10. 'cy' → logprob: -20.251502990722656

Token 103: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.2020991056924686e-05
    2. '_c' → logprob: -10.875032424926758
    3. 'asc' → logprob: -12.125032424926758
    4. 'c' → logprob: -12.625032424926758
    5. '_as' → logprob: -12.625032424926758
    6. 'u' → logprob: -14.625032424926758
    7. 'cum' → logprob: -15.125032424926758
    8. 'as' → logprob: -16.500032424926758
    9. 'a' → logprob: -17.000032424926758
    10. '_ast' → logprob: -17.750032424926758

Token 104: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -5.200166469876422e-06
    2. 'c' → logprob: -12.625004768371582
    3. 'as' → logprob: -14.375004768371582
    4. '_' → logprob: -14.375004768371582
    5. 'asp' → logprob: -14.625004768371582
    6. 'cum' → logprob: -16.3750057220459
    7. 'sc' → logprob: -16.5000057220459
    8. 'ast' → logprob: -17.5000057220459
    9. ' asc' → logprob: -17.5000057220459
    10. 'ac' → logprob: -17.7500057220459

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002989968634210527
    2. '[' → logprob: -8.125299453735352
    3. '[
' → logprob: -13.625299453735352
    4. 'i' → logprob: -14.000299453735352
    5. ' [' → logprob: -14.625299453735352
    6. '[int' → logprob: -16.25029945373535
    7. '(i' → logprob: -16.75029945373535
    8. '[I' → logprob: -17.12529945373535
    9. '[user' → logprob: -17.37529945373535
    10. '[s' → logprob: -17.37529945373535

Token 106: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.039816174656152725
    2. ')' → logprob: -3.28981614112854
    3. ' ])' → logprob: -7.414816379547119
    4. ']' → logprob: -7.789816379547119
    5. ''])' → logprob: -7.914816379547119
    6. '))' → logprob: -9.164815902709961
    7. ')])' → logprob: -9.539815902709961
    8. ')]' → logprob: -9.789815902709961
    9. ']==' → logprob: -10.789815902709961
    10. 'i' → logprob: -11.039815902709961

Token 107: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020330198458395898
    2. '==' → logprob: -9.500203132629395
    3. ')
' → logprob: -9.875203132629395
    4. ' )' → logprob: -10.500203132629395
    5. '```' → logprob: -11.750203132629395
    6. '`)' → logprob: -11.875203132629395
    7. '[' → logprob: -12.000203132629395
    8. '')' → logprob: -12.500203132629395
    9. '+' → logprob: -12.875203132629395
    10. '<|end|>' → logprob: -13.125203132629395

Token 108: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11574970930814743
    2. ' K' → logprob: -2.2407495975494385
    3. '0' → logprob: -5.990749835968018
    4. ' ' → logprob: -7.990749835968018
    5. '1' → logprob: -10.24074935913086
    6. ')' → logprob: -11.61574935913086
    7. '	K' → logprob: -11.61574935913086
    8. 'k' → logprob: -11.74074935913086
    9. '(K' → logprob: -11.99074935913086
    10. '(' → logprob: -12.11574935913086

Token 109: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0034525298979133368
    2. ' -' → logprob: -5.753452301025391
    3. '1' → logprob: -8.25345230102539
    4. ' ' → logprob: -12.12845230102539
    5. '`' → logprob: -13.50345230102539
    6. '```' → logprob: -13.50345230102539
    7. '-
' → logprob: -13.75345230102539
    8. ')-' → logprob: -14.00345230102539
    9. ')' → logprob: -14.25345230102539
    10. '   ' → logprob: -14.37845230102539

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '2' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.000006675720215
    4. '<|end|>' → logprob: -14.875006675720215
    5. '```' → logprob: -18.5000057220459
    6. '۱' → logprob: -18.5000057220459
    7. ')' → logprob: -18.8750057220459
    8. '   ' → logprob: -18.8750057220459
    9. '<|end|>' → logprob: -19.3750057220459
    10. '１' → logprob: -19.6250057220459

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015395533409900963
    2. ' )' → logprob: -8.875153541564941
    3. ')
' → logprob: -11.625153541564941
    4. '))' → logprob: -13.000153541564941
    5. ')`' → logprob: -14.625153541564941
    6. ' ' → logprob: -15.250153541564941
    7. '')' → logprob: -15.375153541564941
    8. '   ' → logprob: -15.500153541564941
    9. ')#' → logprob: -15.625153541564941
    10. '])' → logprob: -15.750153541564941

Token 112: 'from' (ID: 2845)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.641558051109314
    2. 'idx' → logprob: -2.5165581703186035
    3. 'ans' → logprob: -2.6415581703186035
    4. 'best' → logprob: -2.6415581703186035
    5. 'min' → logprob: -2.7665581703186035
    6. 'answer' → logprob: -3.5165581703186035
    7. 'print' → logprob: -3.7665581703186035
    8. 'for' → logprob: -3.7665581703186035
    9. 'i' → logprob: -4.1415581703186035
    10. 'result' → logprob: -4.1415581703186035

Token 113: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.16378022730350494
    2. ' itertools' → logprob: -2.4137802124023438
    3. 'collections' → logprob: -3.0387802124023438
    4. '_' → logprob: -4.413780212402344
    5. '_it' → logprob: -7.413780212402344
    6. ' math' → logprob: -8.288780212402344
    7. '_col' → logprob: -8.538780212402344
    8. ' heap' → logprob: -8.788780212402344
    9. ' operator' → logprob: -9.788780212402344
    10. ' bis' → logprob: -10.038780212402344

Token 114: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0062175593338906765
    2. ' import' → logprob: -5.1312174797058105
    3. 'port' → logprob: -8.756217956542969
    4. 'n' → logprob: -10.381217956542969
    5. 't' → logprob: -10.756217956542969
    6. ' ' → logprob: -11.631217956542969
    7. '	import' → logprob: -11.881217956542969
    8. 'm' → logprob: -11.881217956542969
    9. 'from' → logprob: -11.881217956542969
    10. 'ort' → logprob: -12.131217956542969

Token 115: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.08400967717170715
    2. 'deque' → logprob: -2.5840096473693848
    3. ' collections' → logprob: -5.584009647369385
    4. ' defaultdict' → logprob: -6.834009647369385
    5. 'collections' → logprob: -8.959010124206543
    6. ' de' → logprob: -9.584010124206543
    7. ' counter' → logprob: -9.834010124206543
    8. 'de' → logprob: -11.209010124206543
    9. ' Counter' → logprob: -12.834010124206543
    10. ' itertools' → logprob: -13.334010124206543

Token 116: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8482353091239929
    2. 'dq' → logprob: -0.8482353091239929
    3. ' dq' → logprob: -3.0982353687286377
    4. 'd' → logprob: -3.7232353687286377
    5. 'queue' → logprob: -3.8482353687286377
    6. 'de' → logprob: -4.973235130310059
    7. 'max' → logprob: -4.973235130310059
    8. '
' → logprob: -4.973235130310059
    9. 'dp' → logprob: -5.098235130310059
    10. 'deque' → logprob: -5.348235130310059

Token 117: 's' (ID: 82)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.4279341399669647
    2. 'q' → logprob: -1.677934169769287
    3. 'd' → logprob: -2.302934169769287
    4. 'max' → logprob: -4.177934169769287
    5. 'de' → logprob: -4.427934169769287
    6. 'window' → logprob: -4.927934169769287
    7. 'Q' → logprob: -4.927934169769287
    8. 'queue' → logprob: -5.302934169769287
    9. 'que' → logprob: -5.927934169769287
    10. 'ans' → logprob: -6.052934169769287

Token 118: 'ld' (ID: 582)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7995485663414001
    2. '=' → logprob: -1.174548625946045
    3. 't' → logprob: -1.674548625946045
    4. 'l' → logprob: -3.299548625946045
    5. 'eq' → logprob: -5.549548625946045
    6. 'e' → logprob: -5.799548625946045
    7. 'um' → logprob: -6.049548625946045
    8. 'q' → logprob: -6.424548625946045
    9. '=q' → logprob: -6.924548625946045
    10. 'td' → logprob: -7.299548625946045

Token 119: 'min' (ID: 1493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01643502712249756
    2. ' =' → logprob: -4.516435146331787
    3. '=' → logprob: -5.266435146331787
    4. 'q' → logprob: -9.266434669494629
    5. '=e' → logprob: -10.141434669494629
    6. '_e' → logprob: -10.641434669494629
    7. '_queue' → logprob: -11.766434669494629
    8. '	e' → logprob: -12.016434669494629
    9. '_' → logprob: -12.141434669494629
    10. 'eq' → logprob: -12.266434669494629

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22107408940792084
    2. '=' → logprob: -2.096074104309082
    3. 'q' → logprob: -4.096074104309082
    4. '(' → logprob: -4.221074104309082
    5. 'ex' → logprob: -4.721074104309082
    6. 'ow' → logprob: -4.846074104309082
    7. 'ist' → logprob: -5.096074104309082
    8. '=[]' → logprob: -5.471074104309082
    9. '_queue' → logprob: -5.471074104309082
    10. '(queue' → logprob: -6.096074104309082

Token 121: ' []
' (ID: 8911)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.06998089700937271
    2. ' deque' → logprob: -2.6949808597564697
    3. 'de' → logprob: -10.19498062133789
    4. 'Deque' → logprob: -13.06998062133789
    5. 'collections' → logprob: -14.06998062133789
    6. ' ' → logprob: -14.06998062133789
    7. '0' → logprob: -14.19498062133789
    8. 'float' → logprob: -14.69498062133789
    9. 'int' → logprob: -14.69498062133789
    10. ' de' → logprob: -14.94498062133789

Token 122: 's' (ID: 82)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.6522138714790344
    2. 'd' → logprob: -1.4022138118743896
    3. 'q' → logprob: -1.6522138118743896
    4. 'de' → logprob: -3.7772138118743896
    5. 's' → logprob: -5.402214050292969
    6. 'deque' → logprob: -5.527214050292969
    7. 'window' → logprob: -6.152214050292969
    8. 'Q' → logprob: -6.277214050292969
    9. 'que' → logprob: -6.277214050292969
    10. 'min' → logprob: -6.527214050292969

Token 123: 'ld' (ID: 582)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009105057455599308
    2. ' =' → logprob: -5.134105205535889
    3. '=' → logprob: -6.384105205535889
    4. 'ld' → logprob: -7.384105205535889
    5. 'd' → logprob: -9.00910472869873
    6. 'lide' → logprob: -9.13410472869873
    7. 'lde' → logprob: -9.13410472869873
    8. 'deque' → logprob: -9.50910472869873
    9. 'li' → logprob: -10.00910472869873
    10. '=[]' → logprob: -10.00910472869873

Token 124: 'max' (ID: 3228)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7641046047210693
    2. ' =' → logprob: -0.8891046047210693
    3. '.append' → logprob: -2.8891046047210693
    4. 'min' → logprob: -3.1391046047210693
    5. 'q' → logprob: -4.264104843139648
    6. 'max' → logprob: -5.889104843139648
    7. '=[]' → logprob: -5.889104843139648
    8. 'u' → logprob: -6.639104843139648
    9. '.clear' → logprob: -6.889104843139648
    10. '=min' → logprob: -8.139104843139648

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800358146429062
    2. '=' → logprob: -1.8050358295440674
    3. '=[]' → logprob: -8.180035591125488
    4. ' ' → logprob: -12.555035591125488
    5. 's' → logprob: -13.305035591125488
    6. ',' → logprob: -13.555035591125488
    7. ' =[' → logprob: -14.180035591125488
    8. '.append' → logprob: -14.430035591125488
    9. '=[]
' → logprob: -15.055035591125488
    10. '(' → logprob: -15.305035591125488

Token 126: ' []
' (ID: 8911)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.02670477144420147
    2. ' deque' → logprob: -3.651704788208008
    3. '[]' → logprob: -8.276704788208008
    4. ' []' → logprob: -9.651704788208008
    5. 'de' → logprob: -9.901704788208008
    6. 'Deque' → logprob: -10.526704788208008
    7. 'collections' → logprob: -12.776704788208008
    8. ' de' → logprob: -13.401704788208008
    9. '[' → logprob: -13.526704788208008
    10. ' [' → logprob: -15.026704788208008

Token 127: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.256474256515503
    2. 'dq' → logprob: -1.256474256515503
    3. 'd' → logprob: -1.381474256515503
    4. 'de' → logprob: -2.631474256515503
    5. 'for' → logprob: -3.506474256515503
    6. 'deque' → logprob: -4.506474494934082
    7. 'min' → logprob: -4.631474494934082
    8. 'Q' → logprob: -4.631474494934082
    9. 'que' → logprob: -4.756474494934082
    10. 'window' → logprob: -4.756474494934082

Token 128: 'min' (ID: 1493)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25138092041015625
    2. '_' → logprob: -2.2513809204101562
    3. '=' → logprob: -2.5013809204101562
    4. 'u' → logprob: -4.376380920410156
    5. '1' → logprob: -4.626380920410156
    6. 'ue' → logprob: -4.876380920410156
    7. 's' → logprob: -6.251380920410156
    8. '_s' → logprob: -6.501380920410156
    9. '_u' → logprob: -8.001380920410156
    10. '_max' → logprob: -8.251380920410156

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1429281383752823
    2. '=' → logprob: -2.017928123474121
    3. ' ' → logprob: -8.767928123474121
    4. 'u' → logprob: -10.142928123474121
    5. '_' → logprob: -10.892928123474121
    6. 's' → logprob: -11.642928123474121
    7. ',' → logprob: -12.142928123474121
    8. ':' → logprob: -12.392928123474121
    9. ' =
' → logprob: -12.892928123474121
    10. 'min' → logprob: -13.142928123474121

Token 130: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023257357999682426
    2. ' deque' → logprob: -3.773257255554199
    3. 'de' → logprob: -11.3982572555542
    4. 'Deque' → logprob: -15.2732572555542
    5. 'collections' → logprob: -15.6482572555542
    6. ' de' → logprob: -15.8982572555542
    7. '	de' → logprob: -16.648258209228516
    8. ' ' → logprob: -17.398258209228516
    9. '(de' → logprob: -17.773258209228516
    10. '[]' → logprob: -18.273258209228516

Token 131: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013166792632546276
    2. '(' → logprob: -9.750131607055664
    3. '([]' → logprob: -9.750131607055664
    4. '()
' → logprob: -11.875131607055664
    5. '()]' → logprob: -13.000131607055664
    6. '()<' → logprob: -13.750131607055664
    7. '()

' → logprob: -14.125131607055664
    8. '[]' → logprob: -14.250131607055664
    9. '([' → logprob: -14.375131607055664
    10. '()>' → logprob: -14.500131607055664

Token 132: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2603901015827432e-05
    2. 'for' → logprob: -11.500022888183594
    3. ',q' → logprob: -13.125022888183594
    4. ' q' → logprob: -13.250022888183594
    5. '=' → logprob: -13.250022888183594
    6. ',' → logprob: -13.375022888183594
    7. '0' → logprob: -14.750022888183594
    8. '[]' → logprob: -14.750022888183594
    9. '	q' → logprob: -14.750022888183594
    10. '[q' → logprob: -14.750022888183594

Token 133: 'max' (ID: 3228)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4184652864933014
    2. '=' → logprob: -2.0434653759002686
    3. 'max' → logprob: -2.1684653759002686
    4. 'min' → logprob: -2.7934653759002686
    5. '.' → logprob: -3.7934653759002686
    6. '_' → logprob: -5.9184651374816895
    7. '_min' → logprob: -5.9184651374816895
    8. '_max' → logprob: -6.0434651374816895
    9. '.max' → logprob: -6.6684651374816895
    10. '.add' → logprob: -6.6684651374816895

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03181479126214981
    2. ' =' → logprob: -3.7818148136138916
    3. '.append' → logprob: -4.7818145751953125
    4. '.' → logprob: -9.781814575195312
    5. '.extend' → logprob: -10.656814575195312
    6. '()' → logprob: -10.656814575195312
    7. ')' → logprob: -11.406814575195312
    8. '.add' → logprob: -11.781814575195312
    9. '.=' → logprob: -12.031814575195312
    10. '=[]' → logprob: -12.406814575195312

Token 135: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -3.702754474943504e-05
    2. ' deque' → logprob: -10.25003719329834
    3. 'de' → logprob: -13.37503719329834
    4. 'Deque' → logprob: -18.500036239624023
    5. 'dq' → logprob: -19.250036239624023
    6. '(de' → logprob: -19.625036239624023
    7. '	de' → logprob: -20.875036239624023
    8. 'deck' → logprob: -21.750036239624023
    9. 'd' → logprob: -21.875036239624023
    10. '[]' → logprob: -22.000036239624023

Token 136: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43766605854034424
    2. 'for' → logprob: -1.1876660585403442
    3. '()
' → logprob: -3.6876659393310547
    4. ' for' → logprob: -4.687665939331055
    5. '
' → logprob: -4.937665939331055
    6. '(' → logprob: -5.437665939331055
    7. '(
' → logprob: -6.562665939331055
    8. ')' → logprob: -7.062665939331055
    9. '<|end|>' → logprob: -8.187665939331055
    10. '#' → logprob: -8.562665939331055

Token 137: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008769237902015448
    2. 'i' → logprob: -7.2508769035339355
    3. ' for' → logprob: -8.750877380371094
    4. 'q' → logprob: -12.875877380371094
    5. ')' → logprob: -13.625877380371094
    6. '0' → logprob: -13.875877380371094
    7. '#' → logprob: -14.375877380371094
    8. '```' → logprob: -14.375877380371094
    9. 'def' → logprob: -15.000877380371094
    10. '<|end|>' → logprob: -15.125877380371094

Token 138: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016106978058815002
    2. 'i' → logprob: -4.141107082366943
    3. ' ' → logprob: -9.766106605529785
    4. '	i' → logprob: -12.016106605529785
    5. ' range' → logprob: -12.766106605529785
    6. ' _' → logprob: -13.391106605529785
    7. 'range' → logprob: -13.516106605529785
    8. '  ' → logprob: -14.141106605529785
    9. '_' → logprob: -14.391106605529785
    10. ' ' → logprob: -14.766106605529785

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029899515211582184
    2. 'in' → logprob: -3.5298995971679688
    3. ' ' → logprob: -8.904899597167969
    4. 'range' → logprob: -12.529899597167969
    5. '	in' → logprob: -13.654899597167969
    6. ')' → logprob: -13.904899597167969
    7. '0' → logprob: -13.904899597167969
    8. ',' → logprob: -14.029899597167969
    9. 'n' → logprob: -14.154899597167969
    10. ' i' → logprob: -14.154899597167969

Token 140: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009765060618519783
    2. 'range' → logprob: -4.634765148162842
    3. '(range' → logprob: -12.009764671325684
    4. ' ' → logprob: -13.009764671325684
    5. '	range' → logprob: -14.634764671325684
    6. ' xrange' → logprob: -17.134765625
    7. '0' → logprob: -17.134765625
    8. ')' → logprob: -17.259765625
    9. ' in' → logprob: -17.634765625
    10. '  ' → logprob: -17.884765625

Token 141: '(N' (ID: 10564)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.038289472460746765
    2. '(N' → logprob: -3.5382895469665527
    3. '(' → logprob: -4.788289546966553
    4. ' (' → logprob: -9.038289070129395
    5. '(len' → logprob: -10.788289070129395
    6. ' K' → logprob: -11.288289070129395
    7. 'K' → logprob: -12.288289070129395
    8. '(
' → logprob: -12.288289070129395
    9. '(s' → logprob: -12.288289070129395
    10. '(k' → logprob: -13.413289070129395

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030125302728265524
    2. '):
' → logprob: -6.378012657165527
    3. '-K' → logprob: -7.253012657165527
    4. '-' → logprob: -7.753012657165527
    5. ':' → logprob: -9.378012657165527
    6. ' ):' → logprob: -9.878012657165527
    7. '):
' → logprob: -12.003012657165527
    8. '**' → logprob: -12.628012657165527
    9. '-k' → logprob: -12.628012657165527
    10. ' ' → logprob: -12.878012657165527

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03944162279367447
    2. ' while' → logprob: -3.7894415855407715
    3. '	while' → logprob: -4.6644415855407715
    4. 'while' → logprob: -5.9144415855407715
    5. ' if' → logprob: -6.5394415855407715
    6. ' ' → logprob: -7.1644415855407715
    7. '	if' → logprob: -7.2894415855407715
    8. '    ' → logprob: -8.53944206237793
    9. 'if' → logprob: -8.66444206237793
    10. '   ' → logprob: -8.78944206237793

Token 144: ' p' (ID: 275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5426708459854126
    2. ' while' → logprob: -0.9176708459854126
    3. '   ' → logprob: -4.042670726776123
    4. '#' → logprob: -7.167670726776123
    5. '	while' → logprob: -7.542670726776123
    6. 'if' → logprob: -8.417671203613281
    7. ' #' → logprob: -8.792671203613281
    8. ' if' → logprob: -9.917671203613281
    9. ' ' → logprob: -10.917671203613281
    10. '    
' → logprob: -11.167671203613281

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21950548887252808
    2. '=' → logprob: -1.7195055484771729
    3. ' ' → logprob: -4.344505310058594
    4. '_' → logprob: -5.969505310058594
    5. '   ' → logprob: -7.344505310058594
    6. 'i' → logprob: -7.969505310058594
    7. '  ' → logprob: -8.594505310058594
    8. '[i' → logprob: -8.844505310058594
    9. '[' → logprob: -9.344505310058594
    10. ')' → logprob: -9.344505310058594

Token 146: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.921253225300461e-05
    2. ' P' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.375069618225098
    4. '	P' → logprob: -13.750069618225098
    5. ' ' → logprob: -15.625069618225098
    6. '  ' → logprob: -16.50006866455078
    7. '(P' → logprob: -16.62506866455078
    8. 'i' → logprob: -16.87506866455078
    9. '[P' → logprob: -17.25006866455078
    10. '\P' → logprob: -17.25006866455078

Token 147: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.641841820150148e-05
    2. '[' → logprob: -10.62502670288086
    3. '[
' → logprob: -14.62502670288086
    4. 'i' → logprob: -15.12502670288086
    5. ' [' → logprob: -15.12502670288086
    6. '[I' → logprob: -15.25002670288086
    7. '```' → logprob: -15.50002670288086
    8. '[q' → logprob: -15.75002670288086
    9. '[p' → logprob: -15.75002670288086
    10. '
' → logprob: -15.87502670288086

Token 148: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07456331700086594
    2. ')
' → logprob: -2.6995632648468018
    3. ' )' → logprob: -5.824563503265381
    4. '   ' → logprob: -6.949563503265381
    5. ' )
' → logprob: -7.449563503265381
    6. ' ' → logprob: -9.949563026428223
    7. ')

' → logprob: -10.949563026428223
    8. '])' → logprob: -11.574563026428223
    9. ')
' → logprob: -11.824563026428223
    10. ']' → logprob: -11.949563026428223

Token 149: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5141240954399109
    2. '   ' → logprob: -2.0141241550445557
    3. '	while' → logprob: -2.5141241550445557
    4. 'while' → logprob: -3.1391241550445557
    5. '
' → logprob: -3.1391241550445557
    6. '<|end|>' → logprob: -3.2641241550445557
    7. ' 
' → logprob: -3.5141241550445557
    8. ' ' → logprob: -4.014123916625977
    9. '#' → logprob: -5.264123916625977
    10. '+' → logprob: -5.889123916625977

Token 150: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2043973058462143
    2. 'while' (adapté à ' while') → logprob: -1.7043973207473755
    3. '   ' → logprob: -5.954397201538086
    4. '	while' → logprob: -8.079397201538086
    5. '#' → logprob: -9.829397201538086
    6. '
' → logprob: -11.579397201538086
    7. '    ' → logprob: -13.079397201538086
    8. '    
' → logprob: -13.079397201538086
    9. 'While' → logprob: -13.454397201538086
    10. '```' → logprob: -13.579397201538086

Token 151: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1269569844007492
    2. ' q' → logprob: -2.1269569396972656
    3. ' ' → logprob: -11.751956939697266
    4. '   ' → logprob: -11.751956939697266
    5. 'len' → logprob: -11.876956939697266
    6. ' len' → logprob: -12.501956939697266
    7. '	q' → logprob: -13.876956939697266
    8. '  ' → logprob: -14.501956939697266
    9. ' not' → logprob: -14.876956939697266
    10. '(q' → logprob: -15.376956939697266

Token 152: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2827830910682678
    2. 'min' → logprob: -1.407783031463623
    3. 'and' → logprob: -6.532783031463623
    4. ' and' → logprob: -9.032783508300781
    5. 'q' → logprob: -10.157783508300781
    6. '```' → logprob: -12.532783508300781
    7. '[-' → logprob: -12.782783508300781
    8. 'm' → logprob: -13.032783508300781
    9. 'len' → logprob: -13.532783508300781
    10. ' max' → logprob: -13.532783508300781

Token 153: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25202441215515137
    2. ' and' → logprob: -1.5020244121551514
    3. 'a' → logprob: -9.62702465057373
    4. ' ' → logprob: -11.00202465057373
    5. '	and' → logprob: -12.25202465057373
    6. ' и' → logprob: -13.12702465057373
    7. ' a' → logprob: -13.25202465057373
    8. '   ' → logprob: -13.50202465057373
    9. '    ' → logprob: -14.00202465057373
    10. '  ' → logprob: -15.00202465057373

Token 154: ' q' (ID: 2335)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0230881180614233
    2. 'p' → logprob: -3.898088216781616
    3. ' P' → logprob: -6.148087978363037
    4. 'q' → logprob: -8.023088455200195
    5. ' p' → logprob: -9.523088455200195
    6. '   ' → logprob: -13.148088455200195
    7. ' ' → logprob: -13.773088455200195
    8. ' q' → logprob: -14.523088455200195
    9. '>P' → logprob: -15.148088455200195
    10. '\P' → logprob: -15.398088455200195

Token 155: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.856408536899835e-05
    2. '[-' → logprob: -10.625028610229492
    3. 'max' → logprob: -12.625028610229492
    4. '[' → logprob: -14.750028610229492
    5. '[min' → logprob: -15.500028610229492
    6. '   ' → logprob: -16.500028610229492
    7. 'and' → logprob: -16.750028610229492
    8. '_min' → logprob: -16.750028610229492
    9. '.min' → logprob: -17.000028610229492
    10. ' min' → logprob: -17.125028610229492

Token 156: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.45848218582978e-06
    2. ' and' → logprob: -13.37500286102295
    3. '[' → logprob: -14.75000286102295
    4. 'and' → logprob: -14.75000286102295
    5. '][-' → logprob: -17.125001907348633
    6. '```' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.875001907348633
    8. '>' → logprob: -19.250001907348633
    9. '**' → logprob: -19.750001907348633
    10. ' [-' → logprob: -19.875001907348633

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9979366660118103
    2. '()][' → logprob: -1.122936725616455
    3. '()[' → logprob: -1.497936725616455
    4. '()' → logprob: -3.372936725616455
    5. '][' → logprob: -3.497936725616455
    6. '[' → logprob: -5.122936725616455
    7. '()<' → logprob: -5.997936725616455
    8. '()]' → logprob: -6.122936725616455
    9. '(' → logprob: -6.247936725616455
    10. ' ' → logprob: -6.622936725616455

Token 158: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22499901056289673
    2. '[' → logprob: -1.724998950958252
    3. ']' → logprob: -4.474998950958252
    4. '][' → logprob: -4.974998950958252
    5. ' >' → logprob: -5.724998950958252
    6. 'p' → logprob: -7.099998950958252
    7. ']>' → logprob: -7.474998950958252
    8. '>[' → logprob: -8.97499942779541
    9. '()>' → logprob: -10.09999942779541
    10. '(p' → logprob: -10.34999942779541

Token 159: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2532028555870056
    2. '[' → logprob: -1.5032029151916504
    3. ' >' → logprob: -7.00320291519165
    4. 'p' → logprob: -9.128202438354492
    5. '()>' → logprob: -9.378202438354492
    6. '>[' → logprob: -9.503202438354492
    7. ']' → logprob: -10.878202438354492
    8. '>P' → logprob: -11.253202438354492
    9. '">' → logprob: -11.378202438354492
    10. '[]>' → logprob: -11.628202438354492

Token 160: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019288709154352546
    2. ' p' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.376928329467773
    4. '	p' → logprob: -17.126928329467773
    5. 'P' → logprob: -17.376928329467773
    6. '<p' → logprob: -17.376928329467773
    7. 'q' → logprob: -17.501928329467773
    8. '   ' → logprob: -17.751928329467773
    9. '_p' → logprob: -18.501928329467773
    10. '[p' → logprob: -18.751928329467773

Token 161: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09372372925281525
    2. ':' → logprob: -2.468723773956299
    3. ' q' → logprob: -6.343723773956299
    4. ':q' → logprob: -6.593723773956299
    5. ' :
' → logprob: -6.968723773956299
    6. '   ' → logprob: -8.46872329711914
    7. 'q' → logprob: -8.84372329711914
    8. '):
' → logprob: -9.59372329711914
    9. ' :' → logprob: -9.59372329711914
    10. ',q' → logprob: -9.84372329711914

Token 162: '       ' (ID: 309)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03786588832736015
    2. '   ' → logprob: -3.9128658771514893
    3. 'q' → logprob: -4.537866115570068
    4. '	q' → logprob: -6.162866115570068
    5. ':' → logprob: -6.537866115570068
    6. '       ' → logprob: -7.037866115570068
    7. '.pop' → logprob: -7.787866115570068
    8. '):
' → logprob: -8.16286563873291
    9. ':
' → logprob: -8.41286563873291
    10. ',q' → logprob: -8.66286563873291

Token 163: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4740886092185974
    2. 'q' (adapté à ' q') → logprob: -0.9740886092185974
    3. '	q' → logprob: -11.724088668823242
    4. '
' → logprob: -14.349088668823242
    5. '_q' → logprob: -14.349088668823242
    6. ' 
' → logprob: -15.099088668823242
    7. '<|end|>' → logprob: -15.099088668823242
    8. '    ' → logprob: -15.349088668823242
    9. '[q' → logprob: -15.599088668823242
    10. ' ' → logprob: -15.599088668823242

Token 164: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. 'max' → logprob: -15.000000953674316
    3. 'm' → logprob: -15.500000953674316
    4. 'q' → logprob: -18.5
    5. '   ' → logprob: -18.5
    6. 'mi' → logprob: -18.75
    7. ' min' → logprob: -19.25
    8. 'mini' → logprob: -19.375
    9. '_min' → logprob: -19.75
    10. '.min' → logprob: -20.0

Token 165: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00033999193692579865
    2. '.' → logprob: -8.250340461730957
    3. '.p' → logprob: -9.625340461730957
    4. ' .' → logprob: -11.875340461730957
    5. 'pop' → logprob: -12.125340461730957
    6. '.Pop' → logprob: -16.25033950805664
    7. '.dequeue' → logprob: -16.37533950805664
    8. '.remove' → logprob: -16.37533950805664
    9. ' pop' → logprob: -17.37533950805664
    10. '.append' → logprob: -18.00033950805664

Token 166: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008626513183116913
    2. '()
' → logprob: -4.758626461029053
    3. '   ' → logprob: -12.258626937866211
    4. '()
' → logprob: -12.383626937866211
    5. '()

' → logprob: -13.258626937866211
    6. ')' → logprob: -14.633626937866211
    7. '())' → logprob: -14.883626937866211
    8. '()\' → logprob: -15.633626937866211
    9. '(' → logprob: -15.883626937866211
    10. '())
' → logprob: -16.63362693786621

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020293963607400656
    2. ' q' → logprob: -6.7520294189453125
    3. 'q' → logprob: -8.002029418945312
    4. '
' → logprob: -9.002029418945312
    5. '    
' → logprob: -9.002029418945312
    6. ' 
' → logprob: -9.877029418945312
    7. '  
' → logprob: -10.127029418945312
    8. ' while' → logprob: -10.127029418945312
    9. 's' → logprob: -10.252029418945312
    10. ' s' → logprob: -11.002029418945312

Token 168: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.33559584617614746
    2. ' q' → logprob: -1.3355958461761475
    3. '   ' → logprob: -3.8355958461761475
    4. '	q' → logprob: -7.710596084594727
    5. ' ' → logprob: -11.460596084594727
    6. ' 
' → logprob: -11.835596084594727
    7. ' while' → logprob: -12.210596084594727
    8. '[' → logprob: -12.835596084594727
    9. 's' → logprob: -12.960596084594727
    10. '    
' → logprob: -12.960596084594727

Token 169: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.061054359131958e-06
    2. '.append' → logprob: -12.375007629394531
    3. '.min' → logprob: -13.250007629394531
    4. 'max' → logprob: -13.500007629394531
    5. 'm' → logprob: -15.000007629394531
    6. '[-' → logprob: -15.500007629394531
    7. '_min' → logprob: -16.37500762939453
    8. '.' → logprob: -16.62500762939453
    9. ' min' → logprob: -16.75000762939453
    10. 'append' → logprob: -17.62500762939453

Token 170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006563199567608535
    2. '.' → logprob: -7.3756561279296875
    3. ' .' → logprob: -10.500656127929688
    4. '.ap' → logprob: -14.250656127929688
    5. '.extend' → logprob: -14.875656127929688
    6. ' ' → logprob: -14.875656127929688
    7. '   ' → logprob: -15.250656127929688
    8. '.app' → logprob: -15.375656127929688
    9. 'append' → logprob: -16.375656127929688
    10. '.push' → logprob: -16.625656127929688

Token 171: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. '(P' → logprob: -14.750046730041504
    4. '(q' → logprob: -15.625046730041504
    5. 'p' → logprob: -16.125045776367188
    6. '(i' → logprob: -16.250045776367188
    7. '(
' → logprob: -16.625045776367188
    8. '((' → logprob: -17.125045776367188
    9. '()' → logprob: -17.125045776367188
    10. ' (' → logprob: -18.625045776367188

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03554415702819824
    2. ')
' → logprob: -3.7855441570281982
    3. '   ' → logprob: -4.410544395446777
    4. 'while' → logprob: -10.910544395446777
    5. ' while' → logprob: -11.660544395446777
    6. ',' → logprob: -11.660544395446777
    7. ' )' → logprob: -11.785544395446777
    8. ')
' → logprob: -12.410544395446777
    9. '
' → logprob: -12.535544395446777
    10. '    
' → logprob: -12.785544395446777

Token 173: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5028613209724426
    2. '   ' → logprob: -1.0028612613677979
    3. 'while' → logprob: -3.877861261367798
    4. '	while' → logprob: -5.627861499786377
    5. ' 
' → logprob: -5.877861499786377
    6. ' ' → logprob: -7.002861499786377
    7. '    
' → logprob: -9.127861022949219
    8. '    ' → logprob: -9.252861022949219
    9. '  
' → logprob: -9.752861022949219
    10. '  ' → logprob: -10.752861022949219

Token 174: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6336755156517029
    2. ' while' → logprob: -0.8836755156517029
    3. '   ' → logprob: -2.8836755752563477
    4. ' ' → logprob: -8.883675575256348
    5. '	while' → logprob: -10.883675575256348
    6. ' 
' → logprob: -12.133675575256348
    7. '  ' → logprob: -12.508675575256348
    8. '    
' → logprob: -13.258675575256348
    9. 'While' → logprob: -13.383675575256348
    10. '    ' → logprob: -14.508675575256348

Token 175: ' i' (ID: 575)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8609381318092346
    2. 'i' → logprob: -0.9859381318092346
    3. ' i' → logprob: -2.48593807220459
    4. ' q' → logprob: -2.48593807220459
    5. 'len' → logprob: -3.48593807220459
    6. ' len' → logprob: -4.98593807220459
    7. 'p' → logprob: -10.48593807220459
    8. ' ' → logprob: -10.73593807220459
    9. '(len' → logprob: -10.86093807220459
    10. '(i' → logprob: -10.98593807220459

Token 176: '-K' (ID: 12249)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2330295741558075
    2. '>=' → logprob: -1.7330296039581299
    3. '+' → logprob: -3.60802960395813
    4. ' +' → logprob: -6.733029365539551
    5. ' ' → logprob: -6.858029365539551
    6. '-' → logprob: -7.108029365539551
    7. ' <' → logprob: -7.733029365539551
    8. ' -' → logprob: -8.10802936553955
    9. '<' → logprob: -9.60802936553955
    10. '>' → logprob: -9.98302936553955

Token 177: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036430724430829287
    2. ' +' → logprob: -5.628643035888672
    3. '```' → logprob: -11.503643035888672
    4. '+
' → logprob: -11.878643035888672
    5. ''+' → logprob: -12.503643035888672
    6. '>=' → logprob: -12.503643035888672
    7. '++' → logprob: -12.878643035888672
    8. '   ' → logprob: -13.003643035888672
    9. ' ' → logprob: -13.378643035888672
    10. '`' → logprob: -13.378643035888672

Token 178: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3218676745891571
    2. '1' → logprob: -1.3218677043914795
    3. ' +' → logprob: -5.1968674659729
    4. '-' → logprob: -5.9468674659729
    5. ' ' → logprob: -9.071867942810059
    6. '+
' → logprob: -9.446867942810059
    7. '+-' → logprob: -9.696867942810059
    8. ' -' → logprob: -10.196867942810059
    9. '=-' → logprob: -11.321867942810059
    10. '```' → logprob: -11.696867942810059

Token 179: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04831990972161293
    2. ' >=' → logprob: -3.1733198165893555
    3. '==' → logprob: -5.5483198165893555
    4. '>' → logprob: -7.0483198165893555
    5. ']>=' → logprob: -8.673319816589355
    6. ')>=' → logprob: -9.048319816589355
    7. '<' → logprob: -9.298319816589355
    8. ' ==' → logprob: -9.548319816589355
    9. ' ' → logprob: -10.923319816589355
    10. '+' → logprob: -10.923319816589355

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -19.125158309936523
    4. '
' → logprob: -19.250158309936523
    5. '   ' → logprob: -19.250158309936523
    6. '-' → logprob: -19.375158309936523
    7. '  ' → logprob: -19.625158309936523
    8. '    ' → logprob: -20.625158309936523
    9. ' -' → logprob: -20.750158309936523
    10. '<|end|>' → logprob: -20.750158309936523

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -17.125139236450195
    4. '-' → logprob: -18.250139236450195
    5. ' -' → logprob: -18.625139236450195
    6. '  ' → logprob: -18.750139236450195
    7. '   ' → logprob: -18.750139236450195
    8. '۰' → logprob: -19.437639236450195
    9. '
' → logprob: -19.562639236450195
    10. '```' → logprob: -19.937639236450195

Token 182: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022299161180853844
    2. ':
' → logprob: -4.522299289703369
    3. ' :' → logprob: -5.147299289703369
    4. ' and' → logprob: -5.522299289703369
    5. '   ' → logprob: -7.647299289703369
    6. 'and' → logprob: -7.772299289703369
    7. ' :
' → logprob: -8.022298812866211
    8. '):' → logprob: -10.522298812866211
    9. ' ' → logprob: -10.647298812866211
    10. ' or' → logprob: -11.147298812866211

Token 183: ' P' (ID: 398)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.27581295371055603
    2. ' q' → logprob: -1.5258129835128784
    3. '   ' → logprob: -3.775812864303589
    4. ' ' → logprob: -8.150813102722168
    5. '  ' → logprob: -8.275813102722168
    6. '	q' → logprob: -10.025813102722168
    7. '    ' → logprob: -10.275813102722168
    8. '       ' → logprob: -11.150813102722168
    9. ' P' → logprob: -11.525813102722168
    10. 'P' → logprob: -11.775813102722168

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013357169227674603
    2. '[' → logprob: -6.876335620880127
    3. '[q' → logprob: -8.126336097717285
    4. '[P' → logprob: -12.751336097717285
    5. ' [' → logprob: -13.251336097717285
    6. '[
' → logprob: -13.751336097717285
    7. '[N' → logprob: -14.126336097717285
    8. '[I' → logprob: -15.001336097717285
    9. '[K' → logprob: -16.00133514404297
    10. '[(' → logprob: -16.50133514404297

Token 185: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.005577960517257452
    2. '-' → logprob: -5.88057804107666
    3. ' -' → logprob: -6.00557804107666
    4. ']' → logprob: -9.00557804107666
    5. 'K' → logprob: -9.75557804107666
    6. ']==' → logprob: -10.25557804107666
    7. '```' → logprob: -10.88057804107666
    8. '-k' → logprob: -11.50557804107666
    9. ' ' → logprob: -11.50557804107666
    10. '
' → logprob: -11.63057804107666

Token 186: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0395345538854599
    2. ']==' → logprob: -3.539534568786621
    3. ' ]' → logprob: -5.289534568786621
    4. '-' → logprob: -5.539534568786621
    5. '==' → logprob: -9.039534568786621
    6. ' -' → logprob: -9.414534568786621
    7. '+' → logprob: -9.664534568786621
    8. ' ' → logprob: -9.914534568786621
    9. '`]' → logprob: -10.039534568786621
    10. '   ' → logprob: -10.164534568786621

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.885492621222511e-05
    2. ' ' → logprob: -10.125068664550781
    3. ']' → logprob: -10.750068664550781
    4. '])' → logprob: -13.000068664550781
    5. '```' → logprob: -13.750068664550781
    6. ')' → logprob: -13.875068664550781
    7. '   ' → logprob: -14.125068664550781
    8. '-' → logprob: -15.125068664550781
    9. '
' → logprob: -15.250068664550781
    10. '  ' → logprob: -15.437568664550781

Token 188: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0634695291519165
    2. ' ==' → logprob: -2.813469409942627
    3. '=' → logprob: -7.438469409942627
    4. ']==' → logprob: -7.938469409942627
    5. 'in' → logprob: -8.813469886779785
    6. ']' → logprob: -8.813469886779785
    7. ' ' → logprob: -9.813469886779785
    8. '  ' → logprob: -10.063469886779785
    9. '===' → logprob: -10.313469886779785
    10. ' in' → logprob: -10.438469886779785

Token 189: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10190200060606003
    2. ' ==' → logprob: -2.3519020080566406
    3. '=' → logprob: -6.601902008056641
    4. ' ' → logprob: -8.85190200805664
    5. 'in' → logprob: -9.60190200805664
    6. '  ' → logprob: -10.72690200805664
    7. ']==' → logprob: -10.97690200805664
    8. ' in' → logprob: -11.22690200805664
    9. '==
' → logprob: -11.60190200805664
    10. '[' → logprob: -11.60190200805664

Token 190: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005937328562140465
    2. ' q' → logprob: -5.130937099456787
    3. '   ' → logprob: -12.380937576293945
    4. ' ' → logprob: -12.630937576293945
    5. '	q' → logprob: -14.505937576293945
    6. '  ' → logprob: -14.630937576293945
    7. '    ' → logprob: -16.380937576293945
    8. 's' → logprob: -16.880937576293945
    9. '
' → logprob: -17.005937576293945
    10. '     ' → logprob: -18.005937576293945

Token 191: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.2729995988775045e-06
    2. 'max' → logprob: -12.000006675720215
    3. ' min' → logprob: -20.0000057220459
    4. 'q' → logprob: -20.2500057220459
    5. '_min' → logprob: -20.6250057220459
    6. 'm' → logprob: -21.7500057220459
    7. 'in' → logprob: -22.0000057220459
    8. 'int' → logprob: -22.3750057220459
    9. '[min' → logprob: -22.6250057220459
    10. '	min' → logprob: -23.0000057220459

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.25
    3. '```' → logprob: -18.5
    4. '[
' → logprob: -18.75
    5. '.' → logprob: -18.875
    6. '.p' → logprob: -19.25
    7. '.front' → logprob: -19.375
    8. ' [' → logprob: -19.75
    9. '][' → logprob: -20.375
    10. '   ' → logprob: -20.5

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010199354437645525
    2. ' ' → logprob: -9.375102043151855
    3. '[' → logprob: -11.500102043151855
    4. 'min' → logprob: -13.125102043151855
    5. '   ' → logprob: -13.375102043151855
    6. '```' → logprob: -13.875102043151855
    7. '
' → logprob: -14.375102043151855
    8. ']' → logprob: -14.750102043151855
    9. 'q' → logprob: -14.750102043151855
    10. 'p' → logprob: -15.500102043151855

Token 194: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2856346368789673
    2. ']:' → logprob: -1.4106346368789673
    3. '):
' → logprob: -6.160634517669678
    4. ']):' → logprob: -6.785634517669678
    5. ']' → logprob: -7.660634517669678
    6. ']:
' → logprob: -8.035634994506836
    7. ')' → logprob: -8.660634994506836
    8. ':' → logprob: -8.910634994506836
    9. ' ):' → logprob: -10.035634994506836
    10. '):
' → logprob: -11.160634994506836

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25764697790145874
    2. '   ' → logprob: -1.5076470375061035
    3. ' q' → logprob: -5.2576470375061035
    4. '	q' → logprob: -8.507646560668945
    5. 'q' → logprob: -8.757646560668945
    6. '    
' → logprob: -10.257646560668945
    7. '	   ' → logprob: -10.382646560668945
    8. '
' → logprob: -10.757646560668945
    9. ',q' → logprob: -11.382646560668945
    10. '   ' → logprob: -11.507646560668945

Token 196: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.01831675134599209
    2. ' q' → logprob: -4.018316745758057
    3. '   ' → logprob: -9.018317222595215
    4. '	q' → logprob: -10.018317222595215
    5. '       ' → logprob: -14.143317222595215
    6. '           ' → logprob: -15.893317222595215
    7. '```' → logprob: -16.6433162689209
    8. '
' → logprob: -16.8933162689209
    9. ' ' → logprob: -17.1433162689209
    10. ',q' → logprob: -17.1433162689209

Token 197: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. 'max' → logprob: -16.75
    3. ' min' → logprob: -18.5
    4. 'm' → logprob: -18.625
    5. 'in' → logprob: -20.0
    6. '_min' → logprob: -20.5
    7. 'q' → logprob: -21.0
    8. '	min' → logprob: -21.25
    9. 'mini' → logprob: -22.0
    10. 'mi' → logprob: -22.375

Token 198: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0011808235431089997
    2. 'p' → logprob: -6.751180648803711
    3. '.' → logprob: -11.501180648803711
    4. 'opleft' → logprob: -14.876180648803711
    5. ' p' → logprob: -16.12618064880371
    6. '```' → logprob: -16.87618064880371
    7. '.pop' → logprob: -17.87618064880371
    8. ' .' → logprob: -19.12618064880371
    9. 'pop' → logprob: -19.25118064880371
    10. '	p' → logprob: -19.25118064880371

Token 199: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005629229708574712
    2. 'opl' → logprob: -7.750563144683838
    3. 'ople' → logprob: -9.62556266784668
    4. 'op' → logprob: -9.62556266784668
    5. 'o' → logprob: -16.37556266784668
    6. 'opf' → logprob: -17.50056266784668
    7. 'oplevel' → logprob: -17.62556266784668
    8. 'opr' → logprob: -18.12556266784668
    9. 'oph' → logprob: -18.62556266784668
    10. '```' → logprob: -18.62556266784668

Token 200: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00862131267786026
    2. '()
' → logprob: -4.7586212158203125
    3. '()

' → logprob: -12.508621215820312
    4. '()
' → logprob: -12.758621215820312
    5. '(' → logprob: -15.758621215820312
    6. '()\' → logprob: -16.758621215820312
    7. '()`' → logprob: -17.133621215820312
    8. '()


' → logprob: -18.008621215820312
    9. '(
' → logprob: -18.133621215820312
    10. '()]' → logprob: -18.508621215820312

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04511173069477081
    2. ' ' → logprob: -3.545111656188965
    3. ' while' → logprob: -5.295111656188965
    4. ' 
' → logprob: -5.670111656188965
    5. '  ' → logprob: -6.420111656188965
    6. '  
' → logprob: -6.920111656188965
    7. '    ' → logprob: -7.045111656188965
    8. '    
' → logprob: -7.295111656188965
    9. '<|end|>' → logprob: -7.295111656188965
    10. ')' → logprob: -7.670111656188965

Token 202: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2258273959159851
    2. ' while' → logprob: -1.7258274555206299
    3. 'while' (adapté à ' while') → logprob: -3.85082745552063
    4. ' ' → logprob: -6.100827217102051
    5. '  ' → logprob: -8.10082721710205
    6. '	while' → logprob: -8.85082721710205
    7. '    ' → logprob: -9.72582721710205
    8. ' 
' → logprob: -10.97582721710205
    9. '    
' → logprob: -10.97582721710205
    10. '
' → logprob: -11.47582721710205

Token 203: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47408798336982727
    2. ' q' → logprob: -0.9740879535675049
    3. 's' → logprob: -12.224087715148926
    4. 'len' → logprob: -13.224087715148926
    5. ' ' → logprob: -14.099087715148926
    6. '(q' → logprob: -14.099087715148926
    7. 'not' → logprob: -14.474087715148926
    8. ' len' → logprob: -14.724087715148926
    9. '   ' → logprob: -14.724087715148926
    10. '	q' → logprob: -15.099087715148926

Token 204: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1472419600977446e-06
    2. 'min' → logprob: -14.250000953674316
    3. 'and' → logprob: -14.875000953674316
    4. ' max' → logprob: -17.250001907348633
    5. '
' → logprob: -17.375001907348633
    6. '[max' → logprob: -17.750001907348633
    7. 'q' → logprob: -18.500001907348633
    8. '_max' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '(max' → logprob: -20.125001907348633

Token 205: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.008615161292254925
    2. ' and' → logprob: -4.758615016937256
    3. '[-' → logprob: -14.633615493774414
    4. '	and' → logprob: -16.883615493774414
    5. 'q' → logprob: -17.758615493774414
    6. ' ' → logprob: -18.008615493774414
    7. '[]' → logprob: -18.508615493774414
    8. '
' → logprob: -18.883615493774414
    9. '   ' → logprob: -19.133615493774414
    10. '        ' → logprob: -19.883615493774414

Token 206: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5231295228004456
    2. 'q' → logprob: -0.8981295228004456
    3. '	q' → logprob: -13.5231294631958
    4. ' ' → logprob: -13.8981294631958
    5. '[q' → logprob: -14.1481294631958
    6. '   ' → logprob: -14.2731294631958
    7. 's' → logprob: -14.6481294631958
    8. '  ' → logprob: -15.0231294631958
    9. '(q' → logprob: -15.1481294631958
    10. ' ' → logprob: -15.2731294631958

Token 207: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004383247811347246
    2. '[-' → logprob: -5.504383087158203
    3. 'and' → logprob: -8.379383087158203
    4. '_max' → logprob: -10.504383087158203
    5. '[max' → logprob: -10.504383087158203
    6. ' and' → logprob: -11.504383087158203
    7. ' max' → logprob: -12.129383087158203
    8. '
' → logprob: -13.504383087158203
    9. '.max' → logprob: -13.754383087158203
    10. '	max' → logprob: -14.504383087158203

Token 208: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7432603272027336e-06
    2. 'and' → logprob: -13.625001907348633
    3. ' and' → logprob: -14.500001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[
' → logprob: -17.875001907348633
    6. '][-' → logprob: -18.625001907348633
    7. ' [-' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '```' → logprob: -21.250001907348633
    10. '
' → logprob: -21.375001907348633

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024013224174268544
    2. 'p' → logprob: -9.000240325927734
    3. '-' → logprob: -9.625240325927734
    4. '0' → logprob: -10.875240325927734
    5. ' ' → logprob: -11.250240325927734
    6. '<p' → logprob: -12.000240325927734
    7. '
' → logprob: -12.625240325927734
    8. 'i' → logprob: -13.000240325927734
    9. ' p' → logprob: -13.250240325927734
    10. '<' → logprob: -13.625240325927734

Token 210: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0026456944178789854
    2. '<' → logprob: -6.002645492553711
    3. '<p' → logprob: -9.127645492553711
    4. ']' → logprob: -10.627645492553711
    5. ' >' → logprob: -10.752645492553711
    6. ' ' → logprob: -12.252645492553711
    7. '>' → logprob: -12.502645492553711
    8. ')' → logprob: -12.627645492553711
    9. ' <=' → logprob: -14.377645492553711
    10. '[' → logprob: -14.752645492553711

Token 211: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47460800409317017
    2. '<' → logprob: -0.9746080040931702
    3. '<p' → logprob: -7.599607944488525
    4. ' ' → logprob: -11.349608421325684
    5. '<int' → logprob: -12.099608421325684
    6. '<n' → logprob: -13.099608421325684
    7. '<size' → logprob: -13.849608421325684
    8. '<num' → logprob: -13.849608421325684
    9. '<
' → logprob: -14.224608421325684
    10. '<data' → logprob: -14.349608421325684

Token 212: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3868727385997772
    2. ' p' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.261872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '<p' → logprob: -15.386872291564941
    6. '   ' → logprob: -15.511872291564941
    7. '	p' → logprob: -15.636872291564941
    8. '  ' → logprob: -16.511873245239258
    9. '_p' → logprob: -17.011873245239258
    10. '*p' → logprob: -17.011873245239258

Token 213: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1902102828025818
    2. '   ' → logprob: -1.9402103424072266
    3. '<|end|>' → logprob: -4.690210342407227
    4. ':
' → logprob: -4.815210342407227
    5. ':' → logprob: -4.940210342407227
    6. 'q' → logprob: -6.565210342407227
    7. ' q' → logprob: -6.940210342407227
    8. ',q' → logprob: -7.440210342407227
    9. ',' → logprob: -7.815210342407227
    10. ' ' → logprob: -8.065210342407227

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09878721088171005
    2. ' q' → logprob: -2.973787307739258
    3. 'q' → logprob: -3.223787307739258
    4. '   ' → logprob: -5.973787307739258
    5. '	q' → logprob: -7.723787307739258
    6. ',q' → logprob: -9.848787307739258
    7. '```' → logprob: -9.973787307739258
    8. '
' → logprob: -11.348787307739258
    9. '<|end|>' → logprob: -12.098787307739258
    10. ',' → logprob: -12.223787307739258

Token 215: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.02975349873304367
    2. ' q' → logprob: -3.5297534465789795
    3. '	q' → logprob: -12.904753684997559
    4. '   ' → logprob: -15.029753684997559
    5. '       ' → logprob: -15.279753684997559
    6. '*q' → logprob: -17.779752731323242
    7. ',q' → logprob: -18.154752731323242
    8. '_q' → logprob: -18.529752731323242
    9. ' ' → logprob: -18.529752731323242
    10. '```' → logprob: -18.904752731323242

Token 216: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: 0.0
    2. ' max' → logprob: -18.125
    3. 'q' → logprob: -18.375
    4. '_max' → logprob: -18.625
    5. '	max' → logprob: -19.0
    6. '[max' → logprob: -20.75
    7. 'min' → logprob: -21.375
    8. 'm' → logprob: -21.75
    9. '(max' → logprob: -21.875
    10. 'maks' → logprob: -21.875

Token 217: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.320199877838604e-07
    2. 'pop' → logprob: -15.125
    3. '.' → logprob: -16.125
    4. ' .' → logprob: -16.75
    5. '.p' → logprob: -19.125
    6. ' pop' → logprob: -20.75
    7. '   ' → logprob: -21.25
    8. '.append' → logprob: -22.25
    9. '	pop' → logprob: -22.25
    10. '.Pop' → logprob: -23.375

Token 218: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014165272004902363
    2. '()
' → logprob: -4.26416540145874
    3. '()

' → logprob: -13.889164924621582
    4. '()
' → logprob: -14.514164924621582
    5. ')' → logprob: -16.5141658782959
    6. '())' → logprob: -16.7641658782959
    7. '()`' → logprob: -16.7641658782959
    8. '(' → logprob: -16.8891658782959
    9. '(p' → logprob: -18.0141658782959
    10. '()<' → logprob: -18.0141658782959

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004721207078546286
    2. 'q' → logprob: -5.629721164703369
    3. ' q' → logprob: -6.879721164703369
    4. '  ' → logprob: -10.754721641540527
    5. '	q' → logprob: -11.004721641540527
    6. '```' → logprob: -11.004721641540527
    7. '       ' → logprob: -11.254721641540527
    8. '<|end|>' → logprob: -11.504721641540527
    9. ' ' → logprob: -12.129721641540527
    10. '[q' → logprob: -12.754721641540527

Token 220: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00038479414070025086
    2. ' q' → logprob: -7.87538480758667
    3. '   ' → logprob: -12.500384330749512
    4. 'max' → logprob: -14.500384330749512
    5. '	q' → logprob: -15.000384330749512
    6. '```' → logprob: -15.875384330749512
    7. ' ' → logprob: -17.000385284423828
    8. '``' → logprob: -17.625385284423828
    9. '  ' → logprob: -18.125385284423828
    10. '[q' → logprob: -18.375385284423828

Token 221: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: 0.0
    2. 'min' → logprob: -17.625
    3. ' max' → logprob: -17.875
    4. '_max' → logprob: -19.625
    5. '	max' → logprob: -19.75
    6. '[max' → logprob: -20.0
    7. 'm' → logprob: -21.625
    8. '.max' → logprob: -22.125
    9. '=max' → logprob: -22.5
    10. '   ' → logprob: -23.0

Token 222: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.8889261304575484e-06
    2. 'append' → logprob: -12.625003814697266
    3. ' .' → logprob: -15.750003814697266
    4. '.' → logprob: -16.250003814697266
    5. '.app' → logprob: -16.500003814697266
    6. 'max' → logprob: -16.500003814697266
    7. '.Append' → logprob: -16.500003814697266
    8. 'Append' → logprob: -17.875003814697266
    9. ' append' → logprob: -18.000003814697266
    10. 'app' → logprob: -18.000003814697266

Token 223: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '(P' → logprob: -15.00000286102295
    4. 'p' → logprob: -15.37500286102295
    5. '(
' → logprob: -18.375001907348633
    6. ' (' → logprob: -19.250001907348633
    7. ' p' → logprob: -20.125001907348633
    8. '<p' → logprob: -20.500001907348633
    9. '(q' → logprob: -20.875001907348633
    10. '()' → logprob: -21.375001907348633

Token 224: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01846023090183735
    2. ')
' → logprob: -4.643460273742676
    3. ')' → logprob: -4.768460273742676
    4. ' if' → logprob: -9.518460273742676
    5. '    
' → logprob: -10.393460273742676
    6. '```' → logprob: -11.268460273742676
    7. '
' → logprob: -11.643460273742676
    8. '[i' → logprob: -11.643460273742676
    9. '[' → logprob: -11.893460273742676
    10. '<|end|>' → logprob: -12.643460273742676

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029065259150229394
    2. ' if' → logprob: -8.250290870666504
    3. 'if' → logprob: -11.250290870666504
    4. '	if' → logprob: -11.375290870666504
    5. '       ' → logprob: -13.125290870666504
    6. '```' → logprob: -13.875290870666504
    7. '    
' → logprob: -14.625290870666504
    8. '    ' → logprob: -15.000290870666504
    9. ' ' → logprob: -15.125290870666504
    10. '  ' → logprob: -15.500290870666504

Token 226: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4008961319923401
    2. ' if' → logprob: -1.1508960723876953
    3. '   ' → logprob: -4.275896072387695
    4. ' 
' → logprob: -12.150896072387695
    5. ' ' → logprob: -12.525896072387695
    6. 'i' → logprob: -12.775896072387695
    7. '
' → logprob: -12.900896072387695
    8. '    
' → logprob: -12.900896072387695
    9. '	if' → logprob: -13.025896072387695
    10. '       ' → logprob: -13.150896072387695

Token 227: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009758567437529564
    2. 'i' → logprob: -4.634758472442627
    3. ' ' → logprob: -13.259758949279785
    4. '   ' → logprob: -14.759758949279785
    5. ' (' → logprob: -16.38475799560547
    6. '(i' → logprob: -16.38475799560547
    7. ' ' → logprob: -16.50975799560547
    8. '    ' → logprob: -16.75975799560547
    9. '  ' → logprob: -17.00975799560547
    10. '	i' → logprob: -17.13475799560547

Token 228: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.004416467156261206
    2. ' -' → logprob: -6.004416465759277
    3. '-' → logprob: -6.254416465759277
    4. 'K' → logprob: -11.629416465759277
    5. ' K' → logprob: -13.004416465759277
    6. ' ' → logprob: -13.254416465759277
    7. '<K' → logprob: -13.629416465759277
    8. '   ' → logprob: -13.879416465759277
    9. ' >=' → logprob: -14.129416465759277
    10. '>=' → logprob: -15.504416465759277

Token 229: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016604241682216525
    2. '>=' → logprob: -7.001660346984863
    3. ' >=' → logprob: -7.501660346984863
    4. '+' → logprob: -9.251660346984863
    5. ' -' → logprob: -10.501660346984863
    6. '   ' → logprob: -11.001660346984863
    7. ' ' → logprob: -11.126660346984863
    8. ')>=' → logprob: -11.126660346984863
    9. ']>=' → logprob: -11.626660346984863
    10. '<|end|>' → logprob: -12.001660346984863

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '>=' → logprob: -14.875009536743164
    4. '0' → logprob: -15.875009536743164
    5. '+' → logprob: -17.500009536743164
    6. '```' → logprob: -17.750009536743164
    7. '   ' → logprob: -18.125009536743164
    8. '2' → logprob: -18.250009536743164
    9. ' >=' → logprob: -18.250009536743164
    10. '>' → logprob: -18.250009536743164

Token 231: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.018255416303873062
    2. '>=' → logprob: -4.018255233764648
    3. ' ' → logprob: -10.018255233764648
    4. ']>=' → logprob: -10.393255233764648
    5. '+' → logprob: -11.143255233764648
    6. ')>=' → logprob: -11.768255233764648
    7. ' +' → logprob: -13.018255233764648
    8. ')' → logprob: -14.018255233764648
    9. '<|end|>' → logprob: -14.268255233764648
    10. '   ' → logprob: -14.393255233764648

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033646851778030396
    2. ' ' → logprob: -3.408646821975708
    3. '   ' → logprob: -14.283646583557129
    4. '<|end|>' → logprob: -15.658646583557129
    5. ' ' → logprob: -16.033647537231445
    6. '  ' → logprob: -16.408647537231445
    7. '```' → logprob: -17.533647537231445
    8. '1' → logprob: -18.033647537231445
    9. '    ' → logprob: -18.158647537231445
    10. ' 
' → logprob: -18.596147537231445

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.875911712646484
    4. '```' → logprob: -17.063411712646484
    5. ' ' → logprob: -17.063411712646484
    6. '1' → logprob: -17.625911712646484
    7. '<|end|>' → logprob: -17.688411712646484
    8. '
' → logprob: -17.750911712646484
    9. '  ' → logprob: -17.938411712646484
    10. ' 
' → logprob: -19.000911712646484

Token 234: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014169389382004738
    2. 'and' → logprob: -4.264169216156006
    3. '   ' → logprob: -12.889169692993164
    4. ' ' → logprob: -13.514169692993164
    5. ' a' → logprob: -14.514169692993164
    6. '<|end|>' → logprob: -14.889169692993164
    7. '    ' → logprob: -15.639169692993164
    8. '	and' → logprob: -15.764169692993164
    9. ')' → logprob: -16.264169692993164
    10. ' ' → logprob: -16.389169692993164

Token 235: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.2519368827342987
    2. ' P' → logprob: -1.501936912536621
    3. '   ' → logprob: -12.001936912536621
    4. ' ' → logprob: -13.876936912536621
    5. '```' → logprob: -15.001936912536621
    6. '  ' → logprob: -16.126935958862305
    7. 'Q' → logprob: -16.876935958862305
    8. '	P' → logprob: -16.876935958862305
    9. '    ' → logprob: -17.001935958862305
    10. '(P' → logprob: -17.126935958862305

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023906009271740913
    2. '-K' → logprob: -4.398906230926514
    3. '[K' → logprob: -4.523906230926514
    4. 'K' → logprob: -8.023905754089355
    5. '[' → logprob: -9.898905754089355
    6. '```' → logprob: -10.273905754089355
    7. '   ' → logprob: -11.398905754089355
    8. '[
' → logprob: -11.398905754089355
    9. 'i' → logprob: -11.523905754089355
    10. ' K' → logprob: -11.898905754089355

Token 237: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -4.961759259458631e-06
    2. ' -' → logprob: -13.000004768371582
    3. '-' → logprob: -13.875004768371582
    4. 'K' → logprob: -14.000004768371582
    5. '-К' → logprob: -15.625004768371582
    6. '   ' → logprob: -15.750004768371582
    7. '
' → logprob: -15.875004768371582
    8. '[-' → logprob: -16.2500057220459
    9. '[K' → logprob: -16.3750057220459
    10. '[' → logprob: -16.5000057220459

Token 238: '-' (ID: 12)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.011105360463261604
    2. '-' → logprob: -4.511105537414551
    3. ' -' → logprob: -11.13610553741455
    4. '   ' → logprob: -11.26110553741455
    5. 'K' → logprob: -11.38610553741455
    6. '-К' → logprob: -12.38610553741455
    7. '[-' → logprob: -13.01110553741455
    8. ']' → logprob: -13.13610553741455
    9. '[' → logprob: -13.26110553741455
    10. '][' → logprob: -13.38610553741455

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021057340200059116
    2. 'K' → logprob: -8.500210762023926
    3. '-' → logprob: -12.500210762023926
    4. ' ' → logprob: -14.000210762023926
    5. '<|end|>' → logprob: -14.125210762023926
    6. '   ' → logprob: -14.500210762023926
    7. 'p' → logprob: -15.625210762023926
    8. ' K' → logprob: -15.625210762023926
    9. '```' → logprob: -15.625210762023926
    10. '[' → logprob: -16.00020980834961

Token 240: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6231458187103271
    2. ' ==' → logprob: -0.9981458187103271
    3. ']' → logprob: -2.498145818710327
    4. ']==' → logprob: -4.373146057128906
    5. ' ' → logprob: -9.248146057128906
    6. ' ]' → logprob: -9.998146057128906
    7. '}' → logprob: -10.123146057128906
    8. '=' → logprob: -10.123146057128906
    9. '[' → logprob: -10.373146057128906
    10. ')' → logprob: -11.623146057128906

Token 241: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08911339938640594
    2. ' ==' → logprob: -2.464113473892212
    3. '=' → logprob: -9.964113235473633
    4. ']==' → logprob: -9.964113235473633
    5. ' ' → logprob: -10.589113235473633
    6. '!=' → logprob: -10.589113235473633
    7. ']' → logprob: -11.589113235473633
    8. '[' → logprob: -12.589113235473633
    9. 'q' → logprob: -12.714113235473633
    10. '==
' → logprob: -13.214113235473633

Token 242: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.020544573664665222
    2. ' q' → logprob: -3.8955445289611816
    3. '	q' → logprob: -14.39554500579834
    4. '   ' → logprob: -14.64554500579834
    5. '[q' → logprob: -14.89554500579834
    6. ' ' → logprob: -15.52054500579834
    7. 's' → logprob: -16.020544052124023
    8. '```' → logprob: -16.520544052124023
    9. '`' → logprob: -16.645544052124023
    10. '
' → logprob: -16.645544052124023

Token 243: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.143808109802194e-05
    2. 'q' → logprob: -10.125041007995605
    3. ' max' → logprob: -14.125041007995605
    4. '[' → logprob: -15.250041007995605
    5. '[max' → logprob: -15.625041007995605
    6. '[q' → logprob: -17.000041961669922
    7. ' q' → logprob: -17.375041961669922
    8. '   ' → logprob: -17.375041961669922
    9. 'm' → logprob: -17.750041961669922
    10. '
' → logprob: -18.000041961669922

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004183986166026443
    2. '0' → logprob: -7.875418186187744
    3. '.' → logprob: -10.500418663024902
    4. '.p' → logprob: -12.625418663024902
    5. '   ' → logprob: -12.625418663024902
    6. 'p' → logprob: -13.125418663024902
    7. '.pop' → logprob: -14.125418663024902
    8. '```' → logprob: -14.625418663024902
    9. ' .' → logprob: -15.625418663024902
    10. ' ' → logprob: -15.750418663024902

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.625001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '```' → logprob: -18.687501907348633
    6. '(' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.187501907348633
    8. '1' → logprob: -19.250001907348633
    9. ']' → logprob: -19.375001907348633
    10. '۰' → logprob: -19.500001907348633

Token 246: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26437464356422424
    2. '():
' → logprob: -1.8893746137619019
    3. ':
' → logprob: -3.1393747329711914
    4. '):' → logprob: -4.264374732971191
    5. '       ' → logprob: -4.889374732971191
    6. ':' → logprob: -5.014374732971191
    7. ']:
' → logprob: -5.514374732971191
    8. '   ' → logprob: -5.514374732971191
    9. '():' → logprob: -6.764374732971191
    10. '):
' → logprob: -9.389374732971191

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006922688335180283
    2. 'q' → logprob: -5.381922721862793
    3. '   ' → logprob: -6.256922721862793
    4. ' q' → logprob: -8.006922721862793
    5. '	q' → logprob: -10.381922721862793
    6. '```' → logprob: -11.631922721862793
    7. '     ' → logprob: -12.756922721862793
    8. 's' → logprob: -13.256922721862793
    9. '           ' → logprob: -13.881922721862793
    10. '      ' → logprob: -13.881922721862793

Token 248: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -5.848420551046729e-05
    2. ' q' → logprob: -9.7500581741333
    3. '	q' → logprob: -16.750059127807617
    4. 'max' → logprob: -18.000059127807617
    5. '   ' → logprob: -18.375059127807617
    6. 'qml' → logprob: -19.250059127807617
    7. '
' → logprob: -19.500059127807617
    8. '```' → logprob: -19.750059127807617
    9. '       ' → logprob: -19.875059127807617
    10. 'qx' → logprob: -20.125059127807617

Token 249: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.512236498361744e-07
    2. ' max' → logprob: -14.875000953674316
    3. '.max' → logprob: -16.375
    4. 'q' → logprob: -17.5
    5. '[max' → logprob: -19.0
    6. '	max' → logprob: -19.625
    7. 'min' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. 'pop' → logprob: -20.5
    10. '(max' → logprob: -20.75

Token 250: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0006298751104623079
    2. 'p' → logprob: -7.375629901885986
    3. 'opleft' → logprob: -12.875629425048828
    4. '```' → logprob: -15.000629425048828
    5. '.pop' → logprob: -16.000629425048828
    6. 'pop' → logprob: -16.250629425048828
    7. '.' → logprob: -16.500629425048828
    8. ' p' → logprob: -17.250629425048828
    9. '   ' → logprob: -17.500629425048828
    10. ' .' → logprob: -17.625629425048828

Token 251: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -9.372294698550832e-06
    2. 'ople' → logprob: -12.250009536743164
    3. 'left' → logprob: -12.625009536743164
    4. 'op' → logprob: -13.625009536743164
    5. 'opl' → logprob: -17.000009536743164
    6. 'opt' → logprob: -18.625009536743164
    7. 'oplevel' → logprob: -20.250009536743164
    8. 'o' → logprob: -20.625009536743164
    9. 'ple' → logprob: -20.875009536743164
    10. 'lef' → logprob: -21.000009536743164

Token 252: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12694953382015228
    2. '()
' → logprob: -2.1269495487213135
    3. '(' → logprob: -11.751949310302734
    4. '   ' → logprob: -12.376949310302734
    5. '(
' → logprob: -12.626949310302734
    6. '()

' → logprob: -12.626949310302734
    7. '()
' → logprob: -13.251949310302734
    8. '():
' → logprob: -15.626949310302734
    9. '()`' → logprob: -15.626949310302734
    10. '()\' → logprob: -15.626949310302734

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1080835834145546
    2. ' ' → logprob: -2.733083486557007
    3. ' 
' → logprob: -3.733083486557007
    4. ' if' → logprob: -5.233083724975586
    5. ')' → logprob: -6.608083724975586
    6. '    
' → logprob: -6.733083724975586
    7. 'if' → logprob: -6.733083724975586
    8. '    ' → logprob: -7.108083724975586
    9. '<|end|>' → logprob: -7.483083724975586
    10. '[' → logprob: -7.608083724975586

Token 254: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5226302742958069
    2. ' ' → logprob: -1.772630214691162
    3. 'if' (adapté à ' if') → logprob: -2.397630214691162
    4. ' if' → logprob: -2.522630214691162
    5. ' 
' → logprob: -3.147630214691162
    6. '    ' → logprob: -5.397630214691162
    7. '    
' → logprob: -5.397630214691162
    8. 'i' → logprob: -5.897630214691162
    9. '<|end|>' → logprob: -6.397630214691162
    10. '	if' → logprob: -6.522630214691162

Token 255: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023264462128281593
    2. 'i' → logprob: -3.7732644081115723
    3. ' ' → logprob: -11.02326488494873
    4. '   ' → logprob: -13.77326488494873
    5. '	i' → logprob: -14.27326488494873
    6. ' ' → logprob: -14.64826488494873
    7. '(i' → logprob: -15.64826488494873
    8. ' (' → logprob: -15.64826488494873
    9. '  ' → logprob: -16.023263931274414
    10. '0' → logprob: -17.773263931274414

Token 256: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.42982086539268494
    2. ' >=' → logprob: -1.0548208951950073
    3. '+' → logprob: -6.929821014404297
    4. ' ' → logprob: -9.804821014404297
    5. ']>=' → logprob: -10.554821014404297
    6. ' +' → logprob: -10.929821014404297
    7. '   ' → logprob: -11.179821014404297
    8. '==' → logprob: -11.929821014404297
    9. ')>=' → logprob: -11.929821014404297
    10. '=' → logprob: -12.679821014404297

Token 257: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.000627610192168504
    2. ' K' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.500627517700195
    4. ' ' → logprob: -14.750627517700195
    5. '0' → logprob: -16.750627517700195
    6. '>K' → logprob: -17.625627517700195
    7. 'k' → logprob: -17.875627517700195
    8. '	K' → logprob: -17.875627517700195
    9. '<K' → logprob: -18.625627517700195
    10. '1' → logprob: -19.375627517700195

Token 258: ':
' (ID: 734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002036595979006961
    2. ' -' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.50020408630371
    4. '1' → logprob: -17.37520408630371
    5. ' ' → logprob: -17.62520408630371
    6. '```' → logprob: -17.87520408630371
    7. '+' → logprob: -18.37520408630371
    8. '-
' → logprob: -18.50020408630371
    9. 's' → logprob: -19.37520408630371
    10. '−' → logprob: -19.75020408630371

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38722559809684753
    2. '<|end|>' → logprob: -2.01222562789917
    3. '   ' → logprob: -2.63722562789917
    4. ' ' → logprob: -3.13722562789917
    5. '    ' → logprob: -4.26222562789917
    6. ' s' → logprob: -4.76222562789917
    7. '[' → logprob: -5.01222562789917
    8. '	' → logprob: -5.51222562789917
    9. '    
' → logprob: -5.51222562789917
    10. ' ' → logprob: -5.51222562789917

Token 260: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5240217447280884
    2. ' if' → logprob: -2.024021625518799
    3. ' continue' → logprob: -2.149021625518799
    4. '   ' → logprob: -2.399021625518799
    5. '       ' → logprob: -3.149021625518799
    6. 's' (adapté à ' s') → logprob: -4.399021625518799
    7. ' pass' → logprob: -5.274021625518799
    8. ' ' → logprob: -6.399021625518799
    9. 'if' → logprob: -6.399021625518799
    10. '    ' → logprob: -7.024021625518799

Token 261: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.035992857068777084
    2. 'min' → logprob: -3.4109928607940674
    3. 'l' → logprob: -6.285992622375488
    4. 'max' → logprob: -8.035992622375488
    5. '_' → logprob: -10.160992622375488
    6. '_min' → logprob: -11.285992622375488
    7. 'ldr' → logprob: -11.285992622375488
    8. 'd' → logprob: -11.410992622375488
    9. 'ln' → logprob: -11.785992622375488
    10. 'lid' → logprob: -11.910992622375488

Token 262: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.003179259831085801
    2. 'max' → logprob: -5.75317907333374
    3. 'm' → logprob: -14.128179550170898
    4. '   ' → logprob: -15.628179550170898
    5. '_min' → logprob: -15.753179550170898
    6. 'mini' → logprob: -16.1281795501709
    7. 's' → logprob: -16.1281795501709
    8. 'mi' → logprob: -16.2531795501709
    9. 'mn' → logprob: -17.3781795501709
    10. '(min' → logprob: -17.5031795501709

Token 263: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001189041300676763
    2. '.' → logprob: -6.751189231872559
    3. '.app' → logprob: -11.376189231872559
    4. '.ap' → logprob: -13.376189231872559
    5. '.Append' → logprob: -13.501189231872559
    6. '.push' → logprob: -13.626189231872559
    7. '.extend' → logprob: -13.626189231872559
    8. ' .' → logprob: -14.251189231872559
    9. 'append' → logprob: -14.376189231872559
    10. '<|end|>' → logprob: -15.751189231872559

Token 264: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00022082125360611826
    2. 'q' → logprob: -8.500221252441406
    3. '(' → logprob: -11.000221252441406
    4. '(
' → logprob: -15.625221252441406
    5. ' q' → logprob: -16.000221252441406
    6. '(min' → logprob: -16.000221252441406
    7. '((' → logprob: -16.375221252441406
    8. '()' → logprob: -16.625221252441406
    9. ' (' → logprob: -16.875221252441406
    10. '(p' → logprob: -16.875221252441406

Token 265: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2664456789934775e-06
    2. 'max' → logprob: -13.625000953674316
    3. '[' → logprob: -18.875001907348633
    4. 'm' → logprob: -20.000001907348633
    5. '_min' → logprob: -20.000001907348633
    6. 'mi' → logprob: -20.250001907348633
    7. ' min' → logprob: -20.250001907348633
    8. 'mini' → logprob: -21.000001907348633
    9. 'minimum' → logprob: -22.000001907348633
    10. '	min' → logprob: -22.125001907348633

Token 266: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.625000953674316
    3. '```' → logprob: -17.000001907348633
    4. 'p' → logprob: -18.625001907348633
    5. ' [' → logprob: -19.000001907348633
    6. '
' → logprob: -19.000001907348633
    7. '.' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.375001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '][' → logprob: -19.500001907348633

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.25001335144043
    4. '
' → logprob: -18.50001335144043
    5. '   ' → logprob: -19.00001335144043
    6. '00' → logprob: -19.50001335144043
    7. '۰' → logprob: -19.50001335144043
    8. 'First' → logprob: -19.75001335144043
    9. '０' → logprob: -20.00001335144043
    10. ']' → logprob: -20.00001335144043

Token 268: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009349246975034475
    2. ' )' → logprob: -7.250935077667236
    3. ')
' → logprob: -9.375934600830078
    4. '])' → logprob: -9.500934600830078
    5. '))' → logprob: -10.000934600830078
    6. '})' → logprob: -11.750934600830078
    7. '   ' → logprob: -13.375934600830078
    8. ' ' → logprob: -13.375934600830078
    9. ' )
' → logprob: -13.375934600830078
    10. ' })' → logprob: -13.500934600830078

Token 269: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19085408747196198
    2. '==' → logprob: -2.690854072570801
    3. '<|end|>' → logprob: -3.190854072570801
    4. '+' → logprob: -3.940854072570801
    5. ')' → logprob: -4.065854072570801
    6. '[' → logprob: -5.315854072570801
    7. ' ' → logprob: -5.440854072570801
    8. '  ' → logprob: -5.440854072570801
    9. ' if' → logprob: -5.940854072570801
    10. '=' → logprob: -6.190854072570801

Token 270: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -2.696889623621246e-06
    2. ' s' → logprob: -12.87500286102295
    3. '       ' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.500001907348633
    5. 'q' → logprob: -18.125001907348633
    6. '	s' → logprob: -19.625001907348633
    7. '
' → logprob: -21.500001907348633
    8. '           ' → logprob: -21.750001907348633
    9. '_s' → logprob: -22.375001907348633
    10. '`s' → logprob: -22.375001907348633

Token 271: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.0037709856405854225
    2. 'l' → logprob: -5.62877082824707
    3. '_' → logprob: -10.25377082824707
    4. 'ldr' → logprob: -10.75377082824707
    5. '_ld' → logprob: -11.25377082824707
    6. '.append' → logprob: -11.37877082824707
    7. '[' → logprob: -11.37877082824707
    8. '.' → logprob: -11.62877082824707
    9. 'lds' → logprob: -11.75377082824707
    10. 'd' → logprob: -12.00377082824707

Token 272: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00018089536752086133
    2. 'min' → logprob: -8.625181198120117
    3. 'ax' → logprob: -14.125181198120117
    4. 'append' → logprob: -15.250181198120117
    5. '.append' → logprob: -15.750181198120117
    6. 'm' → logprob: -16.375181198120117
    7. '_max' → logprob: -17.000181198120117
    8. '[-' → logprob: -17.125181198120117
    9. '[' → logprob: -17.375181198120117
    10. 'ma' → logprob: -17.375181198120117

Token 273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007628281135112047
    2. '.' → logprob: -4.882628440856934
    3. '<|end|>' → logprob: -11.632628440856934
    4. ' .' → logprob: -11.757628440856934
    5. '.app' → logprob: -13.632628440856934
    6. '.Append' → logprob: -13.632628440856934
    7. ').' → logprob: -14.007628440856934
    8. '.extend' → logprob: -14.007628440856934
    9. 'append' → logprob: -14.882628440856934
    10. '.setdefault' → logprob: -15.257628440856934

Token 274: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'q' → logprob: -16.5
    4. '(max' → logprob: -20.5
    5. '()' → logprob: -22.375
    6. '	q' → logprob: -22.5
    7. '[q' → logprob: -22.625
    8. '(s' → logprob: -22.75
    9. '((' → logprob: -22.75
    10. ' (' → logprob: -23.0

Token 275: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: 0.0
    2. ' max' → logprob: -18.875
    3. '[max' → logprob: -19.0
    4. '0' → logprob: -20.0
    5. '[' → logprob: -20.0
    6. 'min' → logprob: -21.125
    7. '	max' → logprob: -21.875
    8. '[i' → logprob: -22.0
    9. '   ' → logprob: -22.25
    10. 'ma' → logprob: -22.25

Token 276: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.051066520740278e-05
    2. '0' → logprob: -9.750060081481934
    3. ')' → logprob: -14.750060081481934
    4. '<|end|>' → logprob: -15.000060081481934
    5. '[-' → logprob: -15.250060081481934
    6. '[
' → logprob: -15.625060081481934
    7. '```' → logprob: -15.750060081481934
    8. '()[' → logprob: -16.00006103515625
    9. '1' → logprob: -16.25006103515625
    10. ' ' → logprob: -16.37506103515625

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '[' → logprob: -14.875000953674316
    4. '-' → logprob: -17.750001907348633
    5. ')' → logprob: -18.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. '<|end|>' → logprob: -19.875001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '
' → logprob: -20.062501907348633
    10. '۰' → logprob: -20.062501907348633

Token 278: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002130633220076561
    2. '])' → logprob: -6.252130508422852
    3. ')
' → logprob: -9.252130508422852
    4. '))' → logprob: -9.377130508422852
    5. '})' → logprob: -11.502130508422852
    6. '   ' → logprob: -12.127130508422852
    7. '+' → logprob: -13.627130508422852
    8. ' )' → logprob: -13.752130508422852
    9. '())' → logprob: -14.502130508422852
    10. '>)' → logprob: -14.752130508422852

Token 279: 'parent' (ID: 4903)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08926801383495331
    2. 'if' → logprob: -3.8392679691314697
    3. 'i' → logprob: -4.214268207550049
    4. ' if' → logprob: -4.589268207550049
    5. ')' → logprob: -4.714268207550049
    6. ' ' → logprob: -4.964268207550049
    7. '<|end|>' → logprob: -5.214268207550049
    8. '+' → logprob: -5.964268207550049
    9. ' 
' → logprob: -6.214268207550049
    10. ' i' → logprob: -6.214268207550049

Token 280: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0850034952163696
    2. '=' → logprob: -1.2100034952163696
    3. 'heses' → logprob: -1.5850034952163696
    4. '[' → logprob: -2.46000337600708
    5. 'h' → logprob: -3.71000337600708
    6. 's' → logprob: -3.96000337600708
    7. ')' → logprob: -4.83500337600708
    8. ' =' → logprob: -4.96000337600708
    9. 'if' → logprob: -5.58500337600708
    10. 'hesis' → logprob: -6.21000337600708

Token 281: ' list' (ID: 1562)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.954450249671936
    2. '[' → logprob: -1.079450249671936
    3. '[list' → logprob: -2.2044501304626465
    4. '[]' → logprob: -2.7044501304626465
    5. 'list' → logprob: -2.9544501304626465
    6. '{}' → logprob: -3.4544501304626465
    7. '{' → logprob: -5.3294501304626465
    8. '[i' → logprob: -6.0794501304626465
    9. '[parent' → logprob: -6.3294501304626465
    10. '[len' → logprob: -6.8294501304626465

Token 282: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.246537173457909e-06
    2. 'range' → logprob: -12.750003814697266
    3. '(' → logprob: -13.625003814697266
    4. '()' → logprob: -18.000003814697266
    5. '([' → logprob: -18.750003814697266
    6. '(-' → logprob: -19.125003814697266
    7. ' range' → logprob: -19.125003814697266
    8. '[' → logprob: -19.125003814697266
    9. '```' → logprob: -19.250003814697266
    10. '	range' → logprob: -19.250003814697266

Token 283: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.085517113911919e-05
    2. 'N' → logprob: -10.12505054473877
    3. '(' → logprob: -11.62505054473877
    4. '(len' → logprob: -13.62505054473877
    5. '(n' → logprob: -14.87505054473877
    6. '(K' → logprob: -16.750051498413086
    7. '	N' → logprob: -17.000051498413086
    8. ')' → logprob: -17.250051498413086
    9. '[N' → logprob: -17.500051498413086
    10. '(
' → logprob: -17.625051498413086

Token 284: '-K' (ID: 12249)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.39105141162872314
    2. '+' → logprob: -1.1410514116287231
    3. '))
' → logprob: -5.641051292419434
    4. ')' → logprob: -8.141051292419434
    5. ' +' → logprob: -8.266051292419434
    6. '*' → logprob: -10.766051292419434
    7. '+
' → logprob: -11.391051292419434
    8. '))

' → logprob: -11.516051292419434
    9. '-' → logprob: -12.141051292419434
    10. ')
' → logprob: -12.391051292419434

Token 285: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004191138141322881
    2. ' +' → logprob: -7.8754191398620605
    3. '1' → logprob: -10.250418663024902
    4. '+
' → logprob: -14.125418663024902
    5. ')+' → logprob: -14.250418663024902
    6. '()+' → logprob: -14.250418663024902
    7. ')' → logprob: -14.750418663024902
    8. '+)' → logprob: -14.875418663024902
    9. '   ' → logprob: -15.125418663024902
    10. '))' → logprob: -15.875418663024902

Token 286: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -16.375001907348633
    4. '```' → logprob: -16.500001907348633
    5. ')' → logprob: -16.625001907348633
    6. '
' → logprob: -17.250001907348633
    7. '2' → logprob: -17.437501907348633
    8. '   ' → logprob: -17.562501907348633
    9. '0' → logprob: -18.312501907348633
    10. '`' → logprob: -18.750001907348633

Token 287: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033666351810097694
    2. '+' → logprob: -5.753366470336914
    3. '))
' → logprob: -9.503366470336914
    4. ')' → logprob: -9.503366470336914
    5. ' +' → logprob: -10.878366470336914
    6. ' ))' → logprob: -11.378366470336914
    7. ')))' → logprob: -12.878366470336914
    8. '1' → logprob: -13.753366470336914
    9. '-' → logprob: -13.878366470336914
    10. '))

' → logprob: -14.128366470336914

Token 288: 'rank' (ID: 30162)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11489205807447433
    2. 'rank' → logprob: -2.23989200592041
    3. ')' → logprob: -6.61489200592041
    4. 'size' → logprob: -8.61489200592041
    5. '```' → logprob: -9.11489200592041
    6. 'parent' → logprob: -9.73989200592041
    7. 'find' → logprob: -9.86489200592041
    8. 'r' → logprob: -10.23989200592041
    9. 'ndef' → logprob: -10.48989200592041
    10. 'for' → logprob: -10.48989200592041

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018020345596596599
    2. '=' → logprob: -6.37680196762085
    3. '[' → logprob: -9.876802444458008
    4. ' ' → logprob: -11.126802444458008
    5. ')' → logprob: -11.376802444458008
    6. ' =[' → logprob: -11.751802444458008
    7. 's' → logprob: -11.876802444458008
    8. '<|end|>' → logprob: -13.001802444458008
    9. '=[' → logprob: -13.501802444458008
    10. '[]' → logprob: -14.376802444458008

Token 290: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5597102396423e-05
    2. ' [' → logprob: -10.250035285949707
    3. '0' → logprob: -16.250036239624023
    4. '[int' → logprob: -20.500036239624023
    5. '[N' → logprob: -21.500036239624023
    6. '1' → logprob: -21.625036239624023
    7. '([' → logprob: -21.875036239624023
    8. ' ' → logprob: -22.000036239624023
    9. '[len' → logprob: -22.375036239624023
    10. '[-' → logprob: -22.875036239624023

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '1' → logprob: -18.875
    4. '０' → logprob: -22.75
    5. '۰' → logprob: -23.375
    6. '```' → logprob: -23.625
    7. '   ' → logprob: -24.75
    8. '
' → logprob: -25.0
    9. '000' → logprob: -25.125
    10. '01' → logprob: -25.125

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018634299049153924
    2. ']*' → logprob: -6.376863479614258
    3. ' ]' → logprob: -9.501863479614258
    4. ']*(' → logprob: -9.626863479614258
    5. ' for' → logprob: -11.126863479614258
    6. ')' → logprob: -12.501863479614258
    7. ')]' → logprob: -14.251863479614258
    8. '])' → logprob: -14.501863479614258
    9. 'for' → logprob: -15.251863479614258
    10. ']int' → logprob: -15.626863479614258

Token 293: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7117178440093994
    2. '[' → logprob: -1.8367178440093994
    3. ']' → logprob: -2.0867178440093994
    4. 'for' → logprob: -2.2117178440093994
    5. ' for' → logprob: -2.7117178440093994
    6. '*[' → logprob: -4.46171760559082
    7. ')' → logprob: -4.71171760559082
    8. '0' → logprob: -5.08671760559082
    9. '*(' → logprob: -5.08671760559082
    10. ']*' → logprob: -5.08671760559082

Token 294: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.641841820150148e-05
    2. '(len' → logprob: -11.37502670288086
    3. ' (' → logprob: -11.62502670288086
    4. '(' → logprob: -12.25002670288086
    5. '(n' → logprob: -14.25002670288086
    6. '((' → logprob: -15.12502670288086
    7. 'len' → logprob: -15.50002670288086
    8. '
' → logprob: -16.12502670288086
    9. '（' → logprob: -18.00002670288086
    10. ' ' → logprob: -18.75002670288086

Token 295: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07007726281881332
    2. '(N' → logprob: -2.6950771808624268
    3. ' N' → logprob: -9.195076942443848
    4. ' (' → logprob: -10.945076942443848
    5. 'len' → logprob: -10.945076942443848
    6. '(' → logprob: -13.320076942443848
    7. '(len' → logprob: -13.570076942443848
    8. '[N' → logprob: -15.195076942443848
    9. '
' → logprob: -15.445076942443848
    10. '	N' → logprob: -15.570076942443848

Token 296: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.00015014449309092015
    2. ' -' → logprob: -8.875149726867676
    3. '+' → logprob: -12.125149726867676
    4. '-' → logprob: -12.375149726867676
    5. '-k' → logprob: -14.875149726867676
    6. '
' → logprob: -16.250150680541992
    7. 'K' → logprob: -16.500150680541992
    8. '-К' → logprob: -17.375150680541992
    9. '-M' → logprob: -17.875150680541992
    10. '-H' → logprob: -18.000150680541992

Token 297: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.7888184528565034e-05
    2. '1' → logprob: -10.3750581741333
    3. '2' → logprob: -10.7500581741333
    4. ' +' → logprob: -12.3750581741333
    5. '+
' → logprob: -14.3750581741333
    6. '```' → logprob: -15.6250581741333
    7. '   ' → logprob: -16.375057220458984
    8. '＋' → logprob: -18.125057220458984
    9. '
' → logprob: -18.500057220458984
    10. '()+' → logprob: -18.500057220458984

Token 298: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6327624917030334
    2. '2' → logprob: -0.7577624917030334
    3. ' ' → logprob: -9.132762908935547
    4. '+' → logprob: -10.757762908935547
    5. '3' → logprob: -11.132762908935547
    6. '   ' → logprob: -11.632762908935547
    7. '```' → logprob: -12.382762908935547
    8. '0' → logprob: -13.882762908935547
    9. '5' → logprob: -13.945262908935547
    10. '  ' → logprob: -14.320262908935547

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019401769386604428
    2. ')
' → logprob: -6.2519402503967285
    3. ' )' → logprob: -11.75193977355957
    4. ')
' → logprob: -13.00193977355957
    5. ')

' → logprob: -13.75193977355957
    6. ')`' → logprob: -16.25193977355957
    7. ' )
' → logprob: -16.50193977355957
    8. '))' → logprob: -17.25193977355957
    9. '),' → logprob: -17.75193977355957
    10. ']' → logprob: -17.87693977355957

Token 300: 'count' (ID: 5420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011734402505680919
    2. 'for' → logprob: -6.751173496246338
    3. ' def' → logprob: -13.00117301940918
    4. ' for' → logprob: -14.62617301940918
    5. '
' → logprob: -15.37617301940918
    6. '```' → logprob: -15.75117301940918
    7. 'i' → logprob: -15.87617301940918
    8. 'de' → logprob: -17.50117301940918
    9. 'find' → logprob: -17.87617301940918
    10. 'ndef' → logprob: -18.00117301940918

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011393452063202858
    2. 's' → logprob: -5.0113935470581055
    3. '=' → logprob: -5.3863935470581055
    4. ' ' → logprob: -10.386393547058105
    5. '_' → logprob: -10.636393547058105
    6. '[' → logprob: -11.761393547058105
    7. ')' → logprob: -12.136393547058105
    8. '   ' → logprob: -12.886393547058105
    9. ',' → logprob: -13.261393547058105
    10. '  ' → logprob: -13.261393547058105

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113418579101562
    2. '0' → logprob: -1.3363418579101562
    3. '[' → logprob: -1.4613418579101562
    4. '[N' → logprob: -2.0863418579101562
    5. 'N' → logprob: -2.9613418579101562
    6. ' [' → logprob: -4.211341857910156
    7. ' ' → logprob: -4.461341857910156
    8. ' N' → logprob: -5.461341857910156
    9. '[K' → logprob: -7.711341857910156
    10. '(N' → logprob: -8.586341857910156

Token 303: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19280973076820374
    2. '[N' → logprob: -2.692809820175171
    3. '1' → logprob: -2.942809820175171
    4. '0' → logprob: -3.192809820175171
    5. 'N' → logprob: -4.567809581756592
    6. '[K' → logprob: -6.317809581756592
    7. '{}' → logprob: -7.067809581756592
    8. ' [' → logprob: -7.942809581756592
    9. 'K' → logprob: -8.94281005859375
    10. ' ' → logprob: -9.06781005859375

Token 304: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007815150311216712
    2. ' for' → logprob: -7.250781536102295
    3. 'def' → logprob: -10.250781059265137
    4. 'i' → logprob: -10.500781059265137
    5. '
' → logprob: -12.125781059265137
    6. '<|end|>' → logprob: -13.875781059265137
    7. '```' → logprob: -14.125781059265137
    8. ')' → logprob: -14.750781059265137
    9. '	for' → logprob: -15.250781059265137
    10. 's' → logprob: -15.625781059265137

Token 305: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.6550729419104755e-05
    2. ' for' → logprob: -10.500036239624023
    3. 'def' → logprob: -11.750036239624023
    4. 'i' → logprob: -14.375036239624023
    5. '
' → logprob: -14.875036239624023
    6. '```' → logprob: -16.750036239624023
    7. '	for' → logprob: -17.375036239624023
    8. 's' → logprob: -18.000036239624023
    9. 'if' → logprob: -18.500036239624023
    10. '0' → logprob: -18.625036239624023

Token 306: ' root' (ID: 6577)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0026283347979187965
    2. 'find' → logprob: -6.002628326416016
    3. ' union' → logprob: -8.877628326416016
    4. ' def' → logprob: -12.002628326416016
    5. '_find' → logprob: -12.877628326416016
    6. 'union' → logprob: -13.377628326416016
    7. 'def' → logprob: -13.502628326416016
    8. '	find' → logprob: -14.002628326416016
    9. ' ' → logprob: -15.002628326416016
    10. '=find' → logprob: -15.877628326416016

Token 307: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009786666370928288
    2. '(a' → logprob: -4.759786605834961
    3. '(u' → logprob: -6.759786605834961
    4. '(v' → logprob: -12.259786605834961
    5. '(i' → logprob: -12.759786605834961
    6. '(p' → logprob: -13.259786605834961
    7. '(' → logprob: -13.759786605834961
    8. '(n' → logprob: -14.384786605834961
    9. '(node' → logprob: -14.884786605834961
    10. '(parent' → logprob: -15.134786605834961

Token 308: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014674631878733635
    2. '):
' → logprob: -4.264674663543701
    3. ')' → logprob: -7.889674663543701
    4. '(a' → logprob: -9.264674186706543
    5. ':' → logprob: -11.389674186706543
    6. '):
' → logprob: -11.389674186706543
    7. ' ):' → logprob: -11.764674186706543
    8. '(' → logprob: -12.764674186706543
    9. '():' → logprob: -13.764674186706543
    10. 'a' → logprob: -13.764674186706543

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4479885697364807
    2. ' while' → logprob: -1.322988510131836
    3. 'while' → logprob: -2.947988510131836
    4. ' if' → logprob: -3.447988510131836
    5. 'if' → logprob: -4.697988510131836
    6. '	while' → logprob: -7.072988510131836
    7. '    
' → logprob: -9.072988510131836
    8. 'a' → logprob: -9.322988510131836
    9. ' ' → logprob: -9.322988510131836
    10. '	if' → logprob: -9.947988510131836

Token 310: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4774021804332733
    2. 'if' → logprob: -1.7274022102355957
    3. ' while' → logprob: -1.7274022102355957
    4. ' if' → logprob: -3.7274022102355957
    5. '   ' → logprob: -10.102401733398438
    6. 'return' → logprob: -12.102401733398438
    7. '	while' → logprob: -12.227401733398438
    8. 'parent' → logprob: -12.977401733398438
    9. 'a' → logprob: -13.477401733398438
    10. '```' → logprob: -13.727401733398438

Token 311: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -3.774276774493046e-05
    2. ' parent' → logprob: -10.500038146972656
    3. 'a' → logprob: -11.500038146972656
    4. '(parent' → logprob: -18.750038146972656
    5. '	parent' → logprob: -19.875038146972656
    6. 'paren' → logprob: -20.625038146972656
    7. ' a' → logprob: -21.250038146972656
    8. '[parent' → logprob: -21.250038146972656
    9. ',parent' → logprob: -21.750038146972656
    10. '-parent' → logprob: -22.000038146972656

Token 312: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.747814349073451e-05
    2. 'a' → logprob: -11.000017166137695
    3. '[parent' → logprob: -14.125017166137695
    4. 'parent' → logprob: -18.000017166137695
    5. '```' → logprob: -18.125017166137695
    6. '(a' → logprob: -18.250017166137695
    7. '[
' → logprob: -18.875017166137695
    8. ' a' → logprob: -19.375017166137695
    9. '	a' → logprob: -19.750017166137695
    10. '[i' → logprob: -19.875017166137695

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013657763600349426
    2. ']!=' → logprob: -4.388657569885254
    3. 'a' → logprob: -7.263657569885254
    4. '[a' → logprob: -7.888657569885254
    5. '!=' → logprob: -9.888657569885254
    6. '[' → logprob: -11.013657569885254
    7. ' ]' → logprob: -13.138657569885254
    8. ' !=' → logprob: -14.263657569885254
    9. '```' → logprob: -14.638657569885254
    10. ' a' → logprob: -15.513657569885254

Token 314: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.002901282161474228
    2. ' !=' → logprob: -6.127901077270508
    3. '[a' → logprob: -8.002901077270508
    4. 'a' → logprob: -8.752901077270508
    5. ']!=' → logprob: -8.877901077270508
    6. '[' → logprob: -10.127901077270508
    7. '()!=' → logprob: -11.377901077270508
    8. '!==' → logprob: -11.502901077270508
    9. '[parent' → logprob: -11.627901077270508
    10. ')!=' → logprob: -12.002901077270508

Token 315: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5048530030981055e-06
    2. ' a' → logprob: -13.500001907348633
    3. '	a' → logprob: -18.500001907348633
    4. 'а' → logprob: -22.000001907348633
    5. 'parent' → logprob: -22.000001907348633
    6. '_a' → logprob: -22.500001907348633
    7. '>a' → logprob: -23.000001907348633
    8. ')a' → logprob: -23.250001907348633
    9. '#a' → logprob: -23.375001907348633
    10. '<a' → logprob: -23.500001907348633

Token 316: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35155168175697327
    2. ':' → logprob: -1.2265516519546509
    3. 'a' → logprob: -6.101551532745361
    4. ':a' → logprob: -7.476551532745361
    5. '):
' → logprob: -9.35155200958252
    6. ',a' → logprob: -9.35155200958252
    7. ' a' → logprob: -10.47655200958252
    8. '[a' → logprob: -10.72655200958252
    9. '   ' → logprob: -11.10155200958252
    10. 'and' → logprob: -11.72655200958252

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8219849467277527
    2. 'a' → logprob: -1.1969850063323975
    3. '   ' → logprob: -1.4469850063323975
    4. ' a' → logprob: -3.8219850063323975
    5. ' parent' → logprob: -7.196984767913818
    6. 'parent' → logprob: -9.071985244750977
    7. '	a' → logprob: -9.321985244750977
    8. ',a' → logprob: -9.446985244750977
    9. '
' → logprob: -10.071985244750977
    10. '[a' → logprob: -11.446985244750977

Token 318: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.027171488851308823
    2. 'a' → logprob: -4.027171611785889
    3. ' parent' → logprob: -5.027171611785889
    4. '   ' → logprob: -6.027171611785889
    5. ' a' → logprob: -11.77717113494873
    6. '	parent' → logprob: -13.52717113494873
    7. '
' → logprob: -14.02717113494873
    8. '       ' → logprob: -14.27717113494873
    9. '```' → logprob: -15.27717113494873
    10. '_parent' → logprob: -15.90217113494873

Token 319: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.56102097814437e-05
    2. 'a' → logprob: -10.000045776367188
    3. '[parent' → logprob: -15.750045776367188
    4. '[
' → logprob: -18.500045776367188
    5. '```' → logprob: -18.875045776367188
    6. '[' → logprob: -19.625045776367188
    7. '	a' → logprob: -20.000045776367188
    8. 'parent' → logprob: -20.250045776367188
    9. '
' → logprob: -20.625045776367188
    10. '(a' → logprob: -20.750045776367188

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020601212978363037
    2. '=' → logprob: -4.020601272583008
    3. ']=' → logprob: -6.020601272583008
    4. ' =' → logprob: -11.020601272583008
    5. ' ]' → logprob: -13.020601272583008
    6. 'a' → logprob: -14.145601272583008
    7. '[' → logprob: -15.145601272583008
    8. '=a' → logprob: -15.770601272583008
    9. ']+=' → logprob: -16.770601272583008
    10. ')' → logprob: -16.895601272583008

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007102862582542002
    2. ' =' → logprob: -7.250710487365723
    3. '=
' → logprob: -15.875710487365723
    4. '=a' → logprob: -15.875710487365723
    5. ']=' → logprob: -18.750709533691406
    6. '.=' → logprob: -18.750709533691406
    7. 'parent' → logprob: -19.250709533691406
    8. 'a' → logprob: -19.250709533691406
    9. '＝' → logprob: -19.625709533691406
    10. ']' → logprob: -20.000709533691406

Token 322: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0002613358374219388
    2. ' parent' → logprob: -8.250261306762695
    3. '(parent' → logprob: -18.000261306762695
    4. '	parent' → logprob: -19.125261306762695
    5. '[parent' → logprob: -19.750261306762695
    6. '   ' → logprob: -20.250261306762695
    7. 'paren' → logprob: -20.750261306762695
    8. ' ' → logprob: -20.875261306762695
    9. '.parent' → logprob: -21.250261306762695
    10. ',parent' → logprob: -21.750261306762695

Token 323: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.9027791495318525e-05
    2. '[a' → logprob: -11.125019073486328
    3. 'parent' → logprob: -12.625019073486328
    4. 'a' → logprob: -14.125019073486328
    5. '[' → logprob: -16.250019073486328
    6. '(parent' → logprob: -17.125019073486328
    7. '[
' → logprob: -17.875019073486328
    8. '	parent' → logprob: -18.000019073486328
    9. '```' → logprob: -18.500019073486328
    10. '[player' → logprob: -19.000019073486328

Token 324: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0003372502396814525
    2. 'a' → logprob: -8.000337600708008
    3. '[parent' → logprob: -13.250337600708008
    4. ' a' → logprob: -17.000337600708008
    5. '<a' → logprob: -17.750337600708008
    6. '[' → logprob: -17.875337600708008
    7. '```' → logprob: -17.875337600708008
    8. '	a' → logprob: -18.375337600708008
    9. '[
' → logprob: -18.375337600708008
    10. '(a' → logprob: -19.125337600708008

Token 325: ']]
' (ID: 29446)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.005941832438111305
    2. 'a' → logprob: -5.255941867828369
    3. ']]' → logprob: -7.255941867828369
    4. '[' → logprob: -13.630941390991211
    5. '(a' → logprob: -15.130941390991211
    6. ']' → logprob: -15.880941390991211
    7. ' a' → logprob: -16.63094139099121
    8. ']]
' → logprob: -17.25594139099121
    9. '[parent' → logprob: -17.75594139099121
    10. ']]]' → logprob: -18.00594139099121

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08395925909280777
    2. 'a' → logprob: -2.8339593410491943
    3. '   ' → logprob: -3.9589593410491943
    4. ' a' → logprob: -5.958959102630615
    5. ' ' → logprob: -11.083959579467773
    6. '	a' → logprob: -11.083959579467773
    7. ',a' → logprob: -11.208959579467773
    8. '>a' → logprob: -12.208959579467773
    9. '<|end|>' → logprob: -12.333959579467773
    10. ',' → logprob: -12.458959579467773

Token 327: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -7.553032628493384e-05
    2. ' a' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.250075340270996
    4. '	a' → logprob: -18.750076293945312
    5. '  ' → logprob: -20.875076293945312
    6. ' ' → logprob: -21.000076293945312
    7. '       ' → logprob: -21.250076293945312
    8. '
' → logprob: -22.125076293945312
    9. '```' → logprob: -22.125076293945312
    10. '    ' → logprob: -22.750076293945312

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '＝' → logprob: -18.878177642822266
    4. ',' → logprob: -19.003177642822266
    5. '.=' → logprob: -19.003177642822266
    6. '=
' → logprob: -19.253177642822266
    7. '+=' → logprob: -19.753177642822266
    8. '=

' → logprob: -19.878177642822266
    9. '=a' → logprob: -20.003177642822266
    10. '=}' → logprob: -20.253177642822266

Token 329: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001502717612311244
    2. ' parent' → logprob: -6.501502513885498
    3. '(parent' → logprob: -15.126502990722656
    4. '	parent' → logprob: -16.501502990722656
    5. '[parent' → logprob: -17.001502990722656
    6. '   ' → logprob: -17.501502990722656
    7. ',parent' → logprob: -18.751502990722656
    8. '.parent' → logprob: -19.251502990722656
    9. 'paren' → logprob: -20.126502990722656
    10. ' ' → logprob: -20.376502990722656

Token 330: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.8074162653647363e-05
    2. '[parent' → logprob: -11.500018119812012
    3. 'a' → logprob: -11.750018119812012
    4. '[
' → logprob: -18.375017166137695
    5. 'parent' → logprob: -18.375017166137695
    6. '(a' → logprob: -19.125017166137695
    7. '[' → logprob: -19.250017166137695
    8. '```' → logprob: -19.375017166137695
    9. '<a' → logprob: -20.000017166137695
    10. ' a' → logprob: -20.750017166137695

Token 331: ']
' (ID: 1592)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.13944707810878754
    2. ']' → logprob: -2.139446973800659
    3. 'a' → logprob: -5.014447212219238
    4. 'parent' → logprob: -6.139447212219238
    5. '[parent' → logprob: -6.139447212219238
    6. '])' → logprob: -6.764447212219238
    7. ')' → logprob: -9.514447212219238
    8. '(a' → logprob: -9.639447212219238
    9. ')]' → logprob: -9.639447212219238
    10. ']
' → logprob: -10.139447212219238

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07533430308103561
    2. 'return' → logprob: -2.825334310531616
    3. 'a' → logprob: -5.700334072113037
    4. ' ' → logprob: -5.825334072113037
    5. ' return' → logprob: -5.950334072113037
    6. '[' → logprob: -6.950334072113037
    7. 'print' → logprob: -7.450334072113037
    8. '```' → logprob: -7.450334072113037
    9. 'def' → logprob: -7.575334072113037
    10. '       ' → logprob: -7.825334072113037

Token 333: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02198655903339386
    2. '   ' → logprob: -4.521986484527588
    3. ' return' → logprob: -4.521986484527588
    4. ' ' → logprob: -11.646986961364746
    5. '	return' → logprob: -12.896986961364746
    6. '  ' → logprob: -15.271986961364746
    7. '       ' → logprob: -16.27198600769043
    8. 'eturn' → logprob: -16.52198600769043
    9. '{return' → logprob: -17.39698600769043
    10. ':return' → logprob: -17.64698600769043

Token 334: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006003346061334014
    2. ' a' → logprob: -7.500600337982178
    3. 'parent' → logprob: -10.00059986114502
    4. ' parent' → logprob: -13.12559986114502
    5. '(a' → logprob: -18.750600814819336
    6. ' ' → logprob: -19.125600814819336
    7. '(parent' → logprob: -19.250600814819336
    8. '	a' → logprob: -19.875600814819336
    9. ' ' → logprob: -20.250600814819336
    10. '   ' → logprob: -21.250600814819336

Token 335: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008319411426782608
    2. '
' → logprob: -5.13331937789917
    3. ' 
' → logprob: -7.50831937789917
    4. 'for' → logprob: -7.50831937789917
    5. '```' → logprob: -7.75831937789917
    6. '  
' → logprob: -8.258319854736328
    7. '<|end|>' → logprob: -8.383319854736328
    8. ' def' → logprob: -8.508319854736328
    9. '    
' → logprob: -9.383319854736328
    10. ' for' → logprob: -10.883319854736328

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02977965772151947
    2. 'for' → logprob: -3.5297796726226807
    3. ' for' → logprob: -10.654779434204102
    4. 'a' → logprob: -12.779779434204102
    5. ' def' → logprob: -13.654779434204102
    6. '```' → logprob: -14.529779434204102
    7. 'while' → logprob: -14.779779434204102
    8. 'if' → logprob: -14.904779434204102
    9. 'i' → logprob: -15.779779434204102
    10. 'from' → logprob: -16.5297794342041

Token 337: ' unite' (ID: 96146)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.28890153765678406
    2. 'un' → logprob: -1.6639015674591064
    3. ' unite' → logprob: -3.0389015674591064
    4. ' union' → logprob: -4.538901329040527
    5. 'merge' → logprob: -6.163901329040527
    6. 'join' → logprob: -8.288901329040527
    7. 'uni' → logprob: -8.538901329040527
    8. 'link' → logprob: -9.163901329040527
    9. ' unify' → logprob: -9.288901329040527
    10. '_union' → logprob: -9.913901329040527

Token 338: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -14.125003814697266
    4. '(
' → logprob: -16.375003814697266
    5. '(u' → logprob: -16.875003814697266
    6. '(parent' → logprob: -17.500003814697266
    7. '(A' → logprob: -17.750003814697266
    8. '(x' → logprob: -19.125003814697266
    9. 'a' → logprob: -19.875003814697266
    10. '((' → logprob: -19.875003814697266

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021966483909636736
    2. ',b' → logprob: -6.252196788787842
    3. ' ,' → logprob: -8.752196311950684
    4. ',a' → logprob: -9.127196311950684
    5. ',
' → logprob: -14.002196311950684
    6. 'a' → logprob: -15.752196311950684
    7. ',int' → logprob: -16.377197265625
    8. '   ' → logprob: -18.127197265625
    9. ',
' → logprob: -18.127197265625
    10. '‌,' → logprob: -18.252197265625

Token 340: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. ')b' → logprob: -19.773244857788086
    4. ',b' → logprob: -20.148244857788086
    5. ' ' → logprob: -20.398244857788086
    6. '	b' → logprob: -20.773244857788086
    7. '   ' → logprob: -21.398244857788086
    8. 'a' → logprob: -21.898244857788086
    9. ' 
' → logprob: -23.023244857788086
    10. '_b' → logprob: -23.148244857788086

Token 341: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31341761350631714
    2. '):' → logprob: -1.313417673110962
    3. '):
' → logprob: -8.938417434692383
    4. ')' → logprob: -10.813417434692383
    5. '):

' → logprob: -13.063417434692383
    6. ' ):
' → logprob: -13.938417434692383
    7. ':' → logprob: -14.688417434692383
    8. ' ):' → logprob: -14.688417434692383
    9. '   ' → logprob: -14.938417434692383
    10. ':
' → logprob: -16.563417434692383

Token 342: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.237380862236023
    2. '<|end|>' → logprob: -1.237380862236023
    3. '   ' → logprob: -1.487380862236023
    4. '	a' → logprob: -2.2373809814453125
    5. 'a' → logprob: -2.6123809814453125
    6. ' ' → logprob: -5.3623809814453125
    7. ',a' → logprob: -6.1123809814453125
    8. '```' → logprob: -6.9873809814453125
    9. ' 
' → logprob: -7.3623809814453125
    10. '>a' → logprob: -7.3623809814453125

Token 343: ' global' (ID: 5466)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009151478880085051
    2. ' a' → logprob: -7.000915050506592
    3. 'ra' → logprob: -12.62591552734375
    4. ' root' → logprob: -16.62591552734375
    5. ' ra' → logprob: -16.62591552734375
    6. '	a' → logprob: -16.87591552734375
    7. '\' → logprob: -17.25091552734375
    8. '#a' → logprob: -17.37591552734375
    9. '   ' → logprob: -17.62591552734375
    10. 'root' → logprob: -17.62591552734375

Token 344: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.054500666621607e-06
    2. ' count' → logprob: -12.75000286102295
    3. 'rank' → logprob: -16.500003814697266
    4. 'parent' → logprob: -19.500003814697266
    5. 'counter' → logprob: -21.375003814697266
    6. '_count' → logprob: -23.000003814697266
    7. ' ' → logprob: -23.000003814697266
    8. 'c' → logprob: -24.375003814697266
    9. '	count' → logprob: -24.500003814697266
    10. 'cou' → logprob: -24.875003814697266

Token 345: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038448113948106766
    2. '   ' → logprob: -3.5384480953216553
    3. '<|end|>' → logprob: -5.038448333740234
    4. ',' → logprob: -7.413448333740234
    5. '    
' → logprob: -7.538448333740234
    6. '  
' → logprob: -8.288448333740234
    7. ' 
' → logprob: -8.663448333740234
    8. '
' → logprob: -8.788448333740234
    9. ' ' → logprob: -9.663448333740234
    10. '   
' → logprob: -9.788448333740234

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21401119232177734
    2. '<|end|>' → logprob: -2.0890111923217773
    3. 'a' → logprob: -3.0890111923217773
    4. '
' → logprob: -4.714011192321777
    5. ' a' → logprob: -4.964011192321777
    6. '    
' → logprob: -5.839011192321777
    7. '  
' → logprob: -6.714011192321777
    8. ' 
' → logprob: -7.589011192321777
    9. '```' → logprob: -7.589011192321777
    10. ',a' → logprob: -7.839011192321777

Token 347: ' ra' (ID: 4409)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016129353316500783
    2. ' a' → logprob: -7.126613140106201
    3. 'ra' (adapté à ' ra') → logprob: -7.126613140106201
    4. ' ra' → logprob: -12.751612663269043
    5. 'pa' → logprob: -14.126612663269043
    6. 'r' → logprob: -14.626612663269043
    7. 'root' → logprob: -15.251612663269043
    8. '#a' → logprob: -15.751612663269043
    9. '_ra' → logprob: -16.75161361694336
    10. '```' → logprob: -16.87661361694336

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5756950378417969
    2. ' =' → logprob: -1.2006950378417969
    3. 'a' → logprob: -2.575695037841797
    4. '=a' → logprob: -2.950695037841797
    5. ',' → logprob: -5.325695037841797
    6. ',a' → logprob: -6.450695037841797
    7. 'nk' → logprob: -7.450695037841797
    8. '=
' → logprob: -7.950695037841797
    9. '=root' → logprob: -8.700695037841797
    10. '_a' → logprob: -8.825695037841797

Token 349: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.12692831456661224
    2. ' root' → logprob: -2.1269283294677734
    3. '(root' → logprob: -16.001928329467773
    4. '[root' → logprob: -17.251928329467773
    5. '	root' → logprob: -17.626928329467773
    6. 'a' → logprob: -18.126928329467773
    7. 'r' → logprob: -18.376928329467773
    8. '=root' → logprob: -19.001928329467773
    9. '/root' → logprob: -19.876928329467773
    10. '_root' → logprob: -20.126928329467773

Token 350: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -14.625000953674316
    3. '(' → logprob: -16.125
    4. '(
' → logprob: -18.0
    5. '[a' → logprob: -18.25
    6. '(A' → logprob: -18.375
    7. '(b' → logprob: -19.125
    8. '((' → logprob: -19.25
    9. '(ai' → logprob: -19.25
    10. '(ab' → logprob: -19.375

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759497880935669
    2. ')
' → logprob: -0.8259497880935669
    3. ')
' → logprob: -12.075949668884277
    4. ' )
' → logprob: -12.825949668884277
    5. ')

' → logprob: -14.325949668884277
    6. ')a' → logprob: -14.950949668884277
    7. ' )' → logprob: -15.075949668884277
    8. ');' → logprob: -15.450949668884277
    9. ')b' → logprob: -15.700949668884277
    10. 'a' → logprob: -15.950949668884277

Token 352: '   ' (ID: 271)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.6996224522590637
    2. ' rb' → logprob: -1.574622392654419
    3. '   ' → logprob: -1.824622392654419
    4. '_rb' → logprob: -2.574622392654419
    5. '(rb' → logprob: -2.949622392654419
    6. 'Rb' → logprob: -5.699622631072998
    7. '.rb' → logprob: -7.074622631072998
    8. '	r' → logprob: -7.324622631072998
    9. '  ' → logprob: -8.19962215423584
    10. ',' → logprob: -8.32462215423584

Token 353: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' (adapté à ' rb') → logprob: -1.5048530030981055e-06
    2. ' rb' → logprob: -13.500001907348633
    3. '_rb' → logprob: -17.750001907348633
    4. 'Rb' → logprob: -18.875001907348633
    5. '(rb' → logprob: -20.250001907348633
    6. 'ra' → logprob: -22.875001907348633
    7. 'rub' → logprob: -23.750001907348633
    8. 'RB' → logprob: -23.875001907348633
    9. 'r' → logprob: -24.125001907348633
    10. 'b' → logprob: -24.250001907348633

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2648763656616211
    2. ' =' → logprob: -1.514876365661621
    3. 'b' → logprob: -4.889876365661621
    4. '=b' → logprob: -6.139876365661621
    5. '(rb' → logprob: -6.264876365661621
    6. '(b' → logprob: -7.389876365661621
    7. '=
' → logprob: -8.139876365661621
    8. ')' → logprob: -9.139876365661621
    9. ' b' → logprob: -10.014876365661621
    10. ',' → logprob: -10.139876365661621

Token 355: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.004078758880496025
    2. ' root' → logprob: -5.5040788650512695
    3. '(root' → logprob: -15.62907886505127
    4. 'b' → logprob: -15.75407886505127
    5. '[root' → logprob: -18.504077911376953
    6. 'rb' → logprob: -18.754077911376953
    7. 'r' → logprob: -18.754077911376953
    8. '	root' → logprob: -19.004077911376953
    9. ' ' → logprob: -19.254077911376953
    10. '   ' → logprob: -19.629077911376953

Token 356: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00010068230039905757
    2. '(rb' → logprob: -9.250101089477539
    3. 'b' → logprob: -12.500101089477539
    4. '[b' → logprob: -15.250101089477539
    5. ')b' → logprob: -15.500101089477539
    6. ')' → logprob: -16.62510108947754
    7. '=b' → logprob: -16.62510108947754
    8. '   ' → logprob: -17.00010108947754
    9. '(' → logprob: -17.37510108947754
    10. '```' → logprob: -17.62510108947754

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816106028854847
    2. ')
' → logprob: -4.018161296844482
    3. ' )' → logprob: -11.643160820007324
    4. ' )
' → logprob: -13.768160820007324
    5. ')
' → logprob: -14.393160820007324
    6. '):
' → logprob: -14.893160820007324
    7. '   ' → logprob: -15.643160820007324
    8. ')

' → logprob: -16.39316177368164
    9. '):' → logprob: -17.51816177368164
    10. '),' → logprob: -17.64316177368164

Token 358: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4211784899234772
    2. 'if' (adapté à ' if') → logprob: -1.5461784601211548
    3. '   ' → logprob: -2.0461785793304443
    4. '	if' → logprob: -6.921178340911865
    5. '    ' → logprob: -8.921178817749023
    6. ' ' → logprob: -9.171178817749023
    7. '
' → logprob: -9.546178817749023
    8. '    
' → logprob: -10.671178817749023
    9. ' 
' → logprob: -10.921178817749023
    10. '```' → logprob: -10.921178817749023

Token 360: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.313262403011322
    2. ' ra' → logprob: -1.3132624626159668
    3. '_ra' → logprob: -14.938261985778809
    4. 'rank' → logprob: -15.563261985778809
    5. '   ' → logprob: -17.688262939453125
    6. '.ra' → logprob: -17.688262939453125
    7. ' ' → logprob: -17.813262939453125
    8. '-ra' → logprob: -17.813262939453125
    9. 'Ra' → logprob: -18.063262939453125
    10. '
' → logprob: -18.563262939453125

Token 361: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.44704872369766235
    2. ' !=' → logprob: -1.0720486640930176
    3. '==' → logprob: -4.322048664093018
    4. ' ==' → logprob: -5.322048664093018
    5. '=' → logprob: -11.697049140930176
    6. ']!=' → logprob: -11.822049140930176
    7. ')!=' → logprob: -13.322049140930176
    8. '()!=' → logprob: -13.322049140930176
    9. ' ' → logprob: -13.447049140930176
    10. ' ' → logprob: -13.697049140930176

Token 362: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.008615161292254925
    2. ' rb' → logprob: -4.758615016937256
    3. '(rb' → logprob: -14.633615493774414
    4. '_rb' → logprob: -15.633615493774414
    5. ' ' → logprob: -18.758615493774414
    6. '.rb' → logprob: -18.883615493774414
    7. 'ra' → logprob: -19.008615493774414
    8. '
' → logprob: -19.758615493774414
    9. 'r' → logprob: -20.508615493774414
    10. 'Rb' → logprob: -20.633615493774414

Token 363: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05724344030022621
    2. ':return' → logprob: -3.0572433471679688
    3. ':
' → logprob: -4.807243347167969
    4. '       ' → logprob: -8.057243347167969
    5. '   ' → logprob: -9.557243347167969
    6. ' or' → logprob: -10.807243347167969
    7. ' :' → logprob: -11.432243347167969
    8. 'return' → logprob: -11.807243347167969
    9. ')' → logprob: -11.932243347167969
    10. ')return' → logprob: -12.557243347167969

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006257365457713604
    2. ':return' → logprob: -6.0062575340271
    3. ' return' → logprob: -6.6312575340271
    4. '   ' → logprob: -6.6312575340271
    5. ':' → logprob: -7.3812575340271
    6. 'return' → logprob: -8.631257057189941
    7. '<|end|>' → logprob: -8.881257057189941
    8. ':
' → logprob: -9.006257057189941
    9. '
' → logprob: -10.756257057189941
    10. '	return' → logprob: -11.006257057189941

Token 365: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6388201117515564
    2. 'return' (adapté à ' return') → logprob: -0.8888201117515564
    3. '       ' → logprob: -3.388820171356201
    4. '   ' → logprob: -3.638820171356201
    5. '	return' → logprob: -7.138820171356201
    6. '
' → logprob: -9.763819694519043
    7. '    ' → logprob: -11.013819694519043
    8. '```' → logprob: -11.013819694519043
    9. ':return' → logprob: -11.388819694519043
    10. '     ' → logprob: -12.388819694519043

Token 366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5593357086181641
    2. ' rank' → logprob: -2.059335708618164
    3. 'if' → logprob: -2.684335708618164
    4. ' if' → logprob: -2.809335708618164
    5. 'rank' → logprob: -2.934335708618164
    6. ' None' → logprob: -3.309335708618164
    7. 'None' → logprob: -3.934335708618164
    8. '
' → logprob: -4.059335708618164
    9. ' False' → logprob: -4.559335708618164
    10. 'False' → logprob: -4.559335708618164

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010247125755995512
    2. ' if' → logprob: -7.7510247230529785
    3. '    
' → logprob: -8.50102424621582
    4. '  ' → logprob: -9.25102424621582
    5. '
' → logprob: -9.37602424621582
    6. ' rank' → logprob: -9.87602424621582
    7. '   
' → logprob: -9.87602424621582
    8. 'if' → logprob: -10.37602424621582
    9. '  
' → logprob: -10.87602424621582
    10. ' 
' → logprob: -11.00102424621582

Token 368: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4952089190483093
    2. 'if' (adapté à ' if') → logprob: -0.9952089190483093
    3. '   ' → logprob: -3.870208978652954
    4. '```' → logprob: -10.245208740234375
    5. '	if' → logprob: -11.495208740234375
    6. ' ' → logprob: -12.245208740234375
    7. 'If' → logprob: -13.620208740234375
    8. ' rank' → logprob: -13.745208740234375
    9. ' parent' → logprob: -13.995208740234375
    10. 'rank' → logprob: -14.370208740234375

Token 369: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0040793512016534805
    2. ' rank' → logprob: -5.504079341888428
    3. '(rank' → logprob: -13.879079818725586
    4. '.rank' → logprob: -18.504079818725586
    5. '_rank' → logprob: -19.254079818725586
    6. '   ' → logprob: -19.504079818725586
    7. 'ank' → logprob: -20.254079818725586
    8. 'rk' → logprob: -20.754079818725586
    9. '
' → logprob: -21.129079818725586
    10. ' ' → logprob: -21.129079818725586

Token 370: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '[a' → logprob: -12.625003814697266
    3. 'a' → logprob: -16.375003814697266
    4. 'ra' → logprob: -16.625003814697266
    5. '[
' → logprob: -17.000003814697266
    6. '[root' → logprob: -17.000003814697266
    7. ' [' → logprob: -17.375003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '```' → logprob: -18.750003814697266
    10. '[r' → logprob: -19.750003814697266

Token 371: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -2.8206473871250637e-05
    2. '[' → logprob: -10.500028610229492
    3. ' ra' → logprob: -15.125028610229492
    4. '_ra' → logprob: -15.625028610229492
    5. '-ra' → logprob: -16.500028610229492
    6. 'raq' → logprob: -18.125028610229492
    7. '
' → logprob: -18.250028610229492
    8. 'Ra' → logprob: -18.250028610229492
    9. 'raa' → logprob: -18.625028610229492
    10. '```' → logprob: -18.750028610229492

Token 372: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12128274887800217
    2. '<' → logprob: -2.2462828159332275
    3. '[' → logprob: -4.871282577514648
    4. ']' → logprob: -8.121282577514648
    5. ']<' → logprob: -8.496282577514648
    6. '[a' → logprob: -9.871282577514648
    7. '>' → logprob: -9.871282577514648
    8. '<a' → logprob: -9.996282577514648
    9. ' ' → logprob: -10.246282577514648
    10. ' >' → logprob: -10.746282577514648

Token 373: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07889771461486816
    2. ' <' → logprob: -2.578897714614868
    3. '>' → logprob: -13.078897476196289
    4. '[' → logprob: -13.703897476196289
    5. '<int' → logprob: -14.328897476196289
    6. '<a' → logprob: -14.453897476196289
    7. '<class' → logprob: -14.578897476196289
    8. ' ' → logprob: -14.578897476196289
    9. '<size' → logprob: -14.828897476196289
    10. 'a' → logprob: -15.453897476196289

Token 374: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.10021109133958817
    2. ' rank' → logprob: -2.3502111434936523
    3. '(rank' → logprob: -12.725211143493652
    4. 'rb' → logprob: -14.100211143493652
    5. 'ra' → logprob: -15.725211143493652
    6. ' rb' → logprob: -15.975211143493652
    7. '.rank' → logprob: -15.975211143493652
    8. '
' → logprob: -16.100210189819336
    9. ' ' → logprob: -16.100210189819336
    10. '   ' → logprob: -17.100210189819336

Token 375: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.017927029868588e-05
    2. '(rb' → logprob: -9.750080108642578
    3. 'rb' → logprob: -10.875080108642578
    4. '
' → logprob: -14.250080108642578
    5. '[
' → logprob: -14.375080108642578
    6. '.rb' → logprob: -14.750080108642578
    7. ' [' → logprob: -14.875080108642578
    8. '```' → logprob: -15.000080108642578
    9. ' rb' → logprob: -15.375080108642578
    10. '[r' → logprob: -16.125080108642578

Token 376: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -9.372294698550832e-06
    2. ' rb' → logprob: -11.625009536743164
    3. '(rb' → logprob: -15.375009536743164
    4. '
' → logprob: -16.500009536743164
    5. 'rank' → logprob: -17.375009536743164
    6. '_rb' → logprob: -17.875009536743164
    7. '.rb' → logprob: -18.125009536743164
    8. 'ra' → logprob: -19.750009536743164
    9. ' ' → logprob: -20.250009536743164
    10. '
' → logprob: -20.375009536743164

Token 377: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.42932698130607605
    2. ']:' → logprob: -2.0543270111083984
    3. ':
' → logprob: -2.3043270111083984
    4. ':' → logprob: -2.5543270111083984
    5. '):
' → logprob: -3.3043270111083984
    6. '   ' → logprob: -5.429327011108398
    7. '):' → logprob: -6.929327011108398
    8. ']' → logprob: -8.304327011108398
    9. '}:' → logprob: -8.554327011108398
    10. ' :
' → logprob: -9.054327011108398

Token 378: '       ' (ID: 309)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.190546914935112
    2. 'parent' → logprob: -2.065546989440918
    3. '       ' → logprob: -3.690546989440918
    4. ',parent' → logprob: -4.440546989440918
    5. '   ' → logprob: -5.315546989440918
    6. '	parent' → logprob: -6.065546989440918
    7. '[parent' → logprob: -7.315546989440918
    8. '(parent' → logprob: -7.565546989440918
    9. ':
' → logprob: -7.940546989440918
    10. '_parent' → logprob: -7.940546989440918

Token 379: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.2016967236995697
    2. ' parent' → logprob: -1.701696753501892
    3. 'ra' → logprob: -8.701696395874023
    4. '	parent' → logprob: -10.326696395874023
    5. ',parent' → logprob: -10.451696395874023
    6. '(parent' → logprob: -10.576696395874023
    7. ' ra' → logprob: -11.576696395874023
    8. '[parent' → logprob: -11.701696395874023
    9. '_parent' → logprob: -12.201696395874023
    10. '.parent' → logprob: -12.826696395874023

Token 380: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[r' → logprob: -14.875000953674316
    3. ' [' → logprob: -15.250000953674316
    4. '[root' → logprob: -15.250000953674316
    5. '(rb' → logprob: -15.625000953674316
    6. '```' → logprob: -15.625000953674316
    7. '[b' → logprob: -17.000001907348633
    8. '[a' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '[
' → logprob: -18.000001907348633

Token 381: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -1.9361264946837764e-07
    2. ' ra' → logprob: -15.875
    3. '[' → logprob: -18.125
    4. 'raq' → logprob: -18.125
    5. '_ra' → logprob: -18.25
    6. 'raa' → logprob: -18.75
    7. 'rea' → logprob: -19.375
    8. 'Ra' → logprob: -20.0
    9. 'r' → logprob: -20.375
    10. 'a' → logprob: -20.5

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034468264784663916
    2. ']=' → logprob: -5.75344705581665
    3. ' ]' → logprob: -8.878446578979492
    4. '=' → logprob: -9.003446578979492
    5. '[' → logprob: -12.253446578979492
    6. ' =' → logprob: -14.253446578979492
    7. ']+=' → logprob: -14.503446578979492
    8. 's' → logprob: -15.378446578979492
    9. ']
' → logprob: -15.878446578979492
    10. ')' → logprob: -16.878446578979492

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932284832000732
    2. ' =' → logprob: -0.6932284832000732
    3. '[' → logprob: -9.568228721618652
    4. '=s' → logprob: -12.568228721618652
    5. ']' → logprob: -13.443228721618652
    6. ']=' → logprob: -13.693228721618652
    7. '=b' → logprob: -14.068228721618652
    8. '=a' → logprob: -14.068228721618652
    9. '=
' → logprob: -14.318228721618652
    10. 's' → logprob: -14.818228721618652

Token 384: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0001234428636962548
    2. ' rb' → logprob: -9.000123023986816
    3. '(rb' → logprob: -17.500123977661133
    4. '_rb' → logprob: -18.375123977661133
    5. '.rb' → logprob: -23.000123977661133
    6. '
' → logprob: -23.250123977661133
    7. 'Rb' → logprob: -23.250123977661133
    8. 'RB' → logprob: -23.500123977661133
    9. 'b' → logprob: -23.625123977661133
    10. 'rab' → logprob: -23.875123977661133

Token 385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5073032379150391
    2. '<|end|>' → logprob: -1.507303237915039
    3. '
' → logprob: -2.257303237915039
    4. '       ' → logprob: -3.132303237915039
    5. 'else' → logprob: -4.007303237915039
    6. '    
' → logprob: -5.632303237915039
    7. '  
' → logprob: -6.507303237915039
    8. ' else' → logprob: -6.882303237915039
    9. '```' → logprob: -7.007303237915039
    10. '        
' → logprob: -7.257303237915039

Token 386: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6517959833145142
    2. '   ' → logprob: -0.7767959833145142
    3. 'else' → logprob: -4.401795864105225
    4. '<|end|>' → logprob: -5.276795864105225
    5. ' else' → logprob: -7.276795864105225
    6. '```' → logprob: -8.401796340942383
    7. '        
' → logprob: -9.151796340942383
    8. '
' → logprob: -9.276796340942383
    9. '    
' → logprob: -9.776796340942383
    10. '  
' → logprob: -9.776796340942383

Token 387: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15363158285617828
    2. '   ' → logprob: -2.0286316871643066
    3. ' else' → logprob: -4.903631687164307
    4. '
' → logprob: -6.403631687164307
    5. 'elif' → logprob: -6.528631687164307
    6. '    
' → logprob: -8.278631210327148
    7. ' 
' → logprob: -10.028631210327148
    8. '  
' → logprob: -11.403631210327148
    9. '   
' → logprob: -11.403631210327148
    10. '```' → logprob: -11.528631210327148

Token 388: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13133718073368073
    2. ':' → logprob: -2.1313371658325195
    3. '       ' → logprob: -5.6313371658325195
    4. '   ' → logprob: -7.3813371658325195
    5. ' :
' → logprob: -9.50633716583252
    6. '{
' → logprob: -9.88133716583252
    7. '[' → logprob: -11.25633716583252
    8. '{' → logprob: -11.38133716583252
    9. '```' → logprob: -11.63133716583252
    10. '    ' → logprob: -11.75633716583252

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037561915814876556
    2. ':' → logprob: -9.375375747680664
    3. '{
' → logprob: -9.375375747680664
    4. '{' → logprob: -9.750375747680664
    5. '```' → logprob: -10.000375747680664
    6. ':
' → logprob: -10.125375747680664
    7. '<|end|>' → logprob: -10.750375747680664
    8. 'parent' → logprob: -11.875375747680664
    9. '   ' → logprob: -12.250375747680664
    10. '[parent' → logprob: -12.250375747680664

Token 390: ' parent' (ID: 5980)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062492918223142624
    2. 'parent' (adapté à ' parent') → logprob: -2.812492847442627
    3. ' parent' → logprob: -8.187493324279785
    4. '           ' → logprob: -9.312493324279785
    5. '   ' → logprob: -9.687493324279785
    6. '{
' → logprob: -10.562493324279785
    7. '	parent' → logprob: -10.812493324279785
    8. '[parent' → logprob: -10.812493324279785
    9. ':' → logprob: -12.312493324279785
    10. ',parent' → logprob: -12.437493324279785

Token 391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.75
    3. '```' → logprob: -16.625
    4. '[parent' → logprob: -16.75
    5. '[
' → logprob: -18.125
    6. '[r' → logprob: -18.125
    7. '       ' → logprob: -18.125
    8. '[root' → logprob: -18.375
    9. '    ' → logprob: -18.625
    10. '(rb' → logprob: -18.75

Token 392: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -1.8624639324116288e-06
    2. ' rb' → logprob: -13.375001907348633
    3. '(rb' → logprob: -15.625001907348633
    4. '_rb' → logprob: -16.375001907348633
    5. '.rb' → logprob: -16.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. 'Rb' → logprob: -18.500001907348633
    8. '[' → logprob: -18.625001907348633
    9. '
' → logprob: -19.125001907348633
    10. '```' → logprob: -19.500001907348633

Token 393: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10160697251558304
    2. '=' → logprob: -2.476607084274292
    3. ' =' → logprob: -4.851606845855713
    4. ']=' → logprob: -5.601606845855713
    5. ' ]' → logprob: -6.851606845855713
    6. '[' → logprob: -11.101607322692871
    7. ')' → logprob: -12.476607322692871
    8. '   ' → logprob: -13.976607322692871
    9. ' ' → logprob: -14.476607322692871
    10. 's' → logprob: -15.226607322692871

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692862749099731
    2. ' =' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.126928329467773
    4. '[' → logprob: -16.126928329467773
    5. '=
' → logprob: -16.126928329467773
    6. '       ' → logprob: -16.501928329467773
    7. ')' → logprob: -17.876928329467773
    8. ']=' → logprob: -17.876928329467773
    9. '.=' → logprob: -18.001928329467773
    10. 'parent' → logprob: -18.501928329467773

Token 395: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -2.935296834039036e-06
    2. ' ra' → logprob: -12.75000286102295
    3. '_ra' → logprob: -18.375003814697266
    4. '
' → logprob: -19.875003814697266
    5. 'raid' → logprob: -20.125003814697266
    6. '[' → logprob: -20.250003814697266
    7. 'RA' → logprob: -20.625003814697266
    8. '-ra' → logprob: -20.625003814697266
    9. 'Ra' → logprob: -20.750003814697266
    10. '   ' → logprob: -21.000003814697266

Token 396: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1425589770078659
    2. '   ' → logprob: -2.142559051513672
    3. '```' → logprob: -4.392559051513672
    4. '<|end|>' → logprob: -6.642559051513672
    5. ' if' → logprob: -7.142559051513672
    6. 'if' → logprob: -8.392559051513672
    7. '        
' → logprob: -8.767559051513672
    8. ',' → logprob: -9.267559051513672
    9. '    ' → logprob: -9.392559051513672
    10. '	if' → logprob: -9.642559051513672

Token 397: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026479519437998533
    2. '```' → logprob: -6.627647876739502
    3. '       ' → logprob: -7.252647876739502
    4. 'if' → logprob: -7.627647876739502
    5. ' if' → logprob: -9.12764835357666
    6. '    ' → logprob: -12.25264835357666
    7. ' ' → logprob: -12.75264835357666
    8. '	if' → logprob: -13.25264835357666
    9. ',' → logprob: -13.50264835357666
    10. '     ' → logprob: -13.75264835357666

Token 398: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.750436007976532e-05
    2. '       ' → logprob: -10.37503719329834
    3. ' if' → logprob: -12.12503719329834
    4. '
' → logprob: -14.62503719329834
    5. '        
' → logprob: -15.50003719329834
    6. '   ' → logprob: -15.87503719329834
    7. '```' → logprob: -17.000038146972656
    8. '           ' → logprob: -17.375038146972656
    9. '	if' → logprob: -17.875038146972656
    10. '            
' → logprob: -18.750038146972656

Token 399: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -3.054500666621607e-06
    2. ' rank' → logprob: -12.75000286102295
    3. '(rank' → logprob: -16.375003814697266
    4. '
' → logprob: -19.750003814697266
    5. '_rank' → logprob: -21.750003814697266
    6. '   ' → logprob: -22.000003814697266
    7. '.rank' → logprob: -22.375003814697266
    8. 'Rank' → logprob: -23.125003814697266
    9. 'rk' → logprob: -23.625003814697266
    10. 'r' → logprob: -24.000003814697266

Token 400: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[parent' → logprob: -17.75
    3. '[root' → logprob: -17.75
    4. '[
' → logprob: -17.875
    5. '[a' → logprob: -18.25
    6. '   ' → logprob: -19.5
    7. 'ra' → logprob: -19.75
    8. ' [' → logprob: -19.75
    9. '```' → logprob: -20.0
    10. '[r' → logprob: -20.625

Token 401: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0019323242595419288
    2. '[' → logprob: -6.251932144165039
    3. ' ra' → logprob: -12.626932144165039
    4. '_ra' → logprob: -16.25193214416504
    5. '   ' → logprob: -16.37693214416504
    6. 'Ra' → logprob: -17.37693214416504
    7. '[
' → logprob: -17.37693214416504
    8. 'a' → logprob: -17.62693214416504
    9. '```' → logprob: -17.62693214416504
    10. 'RA' → logprob: -17.75193214416504

Token 402: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052625760436058044
    2. '==' → logprob: -5.25526237487793
    3. ' ==' → logprob: -10.88026237487793
    4. ']==' → logprob: -11.63026237487793
    5. '==
' → logprob: -14.88026237487793
    6. ']' → logprob: -15.13026237487793
    7. '[
' → logprob: -15.63026237487793
    8. '[a' → logprob: -16.88026237487793
    9. ')==' → logprob: -17.13026237487793
    10. 'a' → logprob: -17.50526237487793

Token 403: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007654900196939707
    2. '==' → logprob: -4.882654666900635
    3. ' ==' → logprob: -10.257655143737793
    4. '[a' → logprob: -12.507655143737793
    5. '[
' → logprob: -12.632655143737793
    6. '==
' → logprob: -12.757655143737793
    7. ']==' → logprob: -12.882655143737793
    8. '```' → logprob: -14.257655143737793
    9. '
' → logprob: -15.757655143737793
    10. 'a' → logprob: -15.882655143737793

Token 404: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -3.5716304410016164e-05
    2. ' rank' → logprob: -10.250035285949707
    3. '(rank' → logprob: -15.125035285949707
    4. '
' → logprob: -18.625036239624023
    5. '.rank' → logprob: -19.875036239624023
    6. 'ra' → logprob: -20.000036239624023
    7. '   ' → logprob: -20.000036239624023
    8. '_rank' → logprob: -21.250036239624023
    9. 'rk' → logprob: -21.625036239624023
    10. 'r' → logprob: -21.750036239624023

Token 405: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.25
    3. 'ra' → logprob: -17.75
    4. '```' → logprob: -18.375
    5. '[root' → logprob: -19.125
    6. '   ' → logprob: -19.75
    7. '[r' → logprob: -20.125
    8. ' [' → logprob: -20.125
    9. '[a' → logprob: -20.25
    10. 'a' → logprob: -20.5

Token 406: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0011804660316556692
    2. 'ra' → logprob: -6.751180648803711
    3. ' rb' → logprob: -11.876180648803711
    4. '(rb' → logprob: -13.126180648803711
    5. '_rb' → logprob: -14.001180648803711
    6. '[' → logprob: -16.12618064880371
    7. 'r' → logprob: -16.37618064880371
    8. '```' → logprob: -16.62618064880371
    9. 'RB' → logprob: -17.12618064880371
    10. 'rab' → logprob: -17.12618064880371

Token 407: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.21848320960998535
    2. ']:' → logprob: -1.7184832096099854
    3. ':' → logprob: -4.843482971191406
    4. ':
' → logprob: -4.843482971191406
    5. ']' → logprob: -7.218482971191406
    6. ']+=' → logprob: -8.843482971191406
    7. ']:
' → logprob: -8.968482971191406
    8. '   ' → logprob: -10.093482971191406
    9. ']:

' → logprob: -10.843482971191406
    10. '):
' → logprob: -11.218482971191406

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007403823547065258
    2. ' rank' → logprob: -5.13240385055542
    3. 'rank' → logprob: -6.88240385055542
    4. '_rank' → logprob: -9.132403373718262
    5. '       ' → logprob: -9.382403373718262
    6. '(rank' → logprob: -9.507403373718262
    7. '               ' → logprob: -9.882403373718262
    8. '   ' → logprob: -10.507403373718262
    9. '          ' → logprob: -11.007403373718262
    10. '	       ' → logprob: -11.007403373718262

Token 409: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.023258524015545845
    2. ' rank' → logprob: -3.7732584476470947
    3. '           ' → logprob: -12.023258209228516
    4. '   ' → logprob: -12.148258209228516
    5. '       ' → logprob: -13.898258209228516
    6. '(rank' → logprob: -14.273258209228516
    7. '_rank' → logprob: -16.023258209228516
    8. '.rank' → logprob: -16.648258209228516
    9. '               ' → logprob: -16.773258209228516
    10. 'Rank' → logprob: -18.773258209228516

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '   ' → logprob: -19.5
    3. '[
' → logprob: -20.25
    4. '```' → logprob: -20.5
    5. ' [' → logprob: -20.875
    6. '[a' → logprob: -21.125
    7. '[root' → logprob: -21.75
    8. '[parent' → logprob: -22.5
    9. '[r' → logprob: -23.375
    10. '	' → logprob: -23.75

Token 411: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0002632430987432599
    2. '[' → logprob: -8.250263214111328
    3. ' ra' → logprob: -13.875263214111328
    4. '_ra' → logprob: -14.000263214111328
    5. '-ra' → logprob: -16.625263214111328
    6. 'Ra' → logprob: -17.375263214111328
    7. '.ra' → logprob: -17.375263214111328
    8. '[
' → logprob: -17.875263214111328
    9. 'raa' → logprob: -17.875263214111328
    10. 'rae' → logprob: -18.125263214111328

Token 412: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.034739311784505844
    2. ']+=' → logprob: -3.6597392559051514
    3. ' +=' → logprob: -4.7847394943237305
    4. '[' → logprob: -10.28473949432373
    5. ']' → logprob: -12.03473949432373
    6. '   ' → logprob: -12.53473949432373
    7. '```' → logprob: -13.53473949432373
    8. '+' → logprob: -14.40973949432373
    9. '=' → logprob: -14.78473949432373
    10. '.append' → logprob: -15.65973949432373

Token 413: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00029685118352063
    2. ' +=' → logprob: -8.375296592712402
    3. ']+=' → logprob: -9.625296592712402
    4. '+' → logprob: -16.75029754638672
    5. '+='' → logprob: -17.00029754638672
    6. '   ' → logprob: -17.12529754638672
    7. '+="' → logprob: -17.37529754638672
    8. '=' → logprob: -18.75029754638672
    9. '```' → logprob: -19.00029754638672
    10. '+=(' → logprob: -19.25029754638672

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '
' → logprob: -19.250001907348633
    5. '```' → logprob: -20.375001907348633
    6. '  ' → logprob: -21.125001907348633
    7. '       ' → logprob: -22.125001907348633
    8. '<|end|>' → logprob: -22.250001907348633
    9. '	' → logprob: -22.625001907348633
    10. '１' → logprob: -23.375001907348633

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.25
    4. '
' → logprob: -19.375
    5. '```' → logprob: -20.0
    6. '<|end|>' → logprob: -22.5
    7. '۱' → logprob: -22.6875
    8. '१' → logprob: -22.75
    9. '[' → logprob: -22.8125
    10. '  ' → logprob: -22.8125

Token 416: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.442751407623291
    2. '
' → logprob: -1.317751407623291
    3. '<|end|>' → logprob: -2.942751407623291
    4. 'count' → logprob: -3.442751407623291
    5. ' count' → logprob: -6.817751407623291
    6. ')' → logprob: -7.442751407623291
    7. ',' → logprob: -7.567751407623291
    8. 'def' → logprob: -7.567751407623291
    9. '<|end|>' → logprob: -7.692751407623291
    10. '```' → logprob: -8.067750930786133

Token 417: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2507815659046173
    2. ' count' → logprob: -2.000781536102295
    3. '   ' → logprob: -2.500781536102295
    4. ' ' → logprob: -6.000781536102295
    5. '	count' → logprob: -7.000781536102295
    6. '<|end|>' → logprob: -8.250782012939453
    7. '_count' → logprob: -8.625782012939453
    8. '  ' → logprob: -8.875782012939453
    9. 'def' → logprob: -9.500782012939453
    10. '[count' → logprob: -9.750782012939453

Token 418: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00020866614067927003
    2. '   ' → logprob: -8.500208854675293
    3. ' count' → logprob: -12.250208854675293
    4. '	count' → logprob: -15.500208854675293
    5. '```' → logprob: -15.875208854675293
    6. '
' → logprob: -17.500207901000977
    7. 'if' → logprob: -18.000207901000977
    8. ' ' → logprob: -18.500207901000977
    9. 'global' → logprob: -18.750207901000977
    10. '  ' → logprob: -19.250207901000977

Token 419: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1271231770515442
    2. '+=' → logprob: -2.1271231174468994
    3. ' ' → logprob: -9.12712287902832
    4. '+' → logprob: -9.62712287902832
    5. '   ' → logprob: -11.62712287902832
    6. ' +' → logprob: -12.12712287902832
    7. '  ' → logprob: -13.37712287902832
    8. ']+=' → logprob: -13.62712287902832
    9. '=' → logprob: -13.75212287902832
    10. ' -=' → logprob: -14.12712287902832

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000555416801944375
    2. '-' → logprob: -7.500555515289307
    3. ' ' → logprob: -13.375555038452148
    4. ' -' → logprob: -14.250555038452148
    5. '```' → logprob: -15.750555038452148
    6. '<|end|>' → logprob: -16.00055503845215
    7. '   ' → logprob: -18.50055503845215
    8. '
' → logprob: -19.25055503845215
    9. '  ' → logprob: -19.50055503845215
    10. ')' → logprob: -20.43805503845215

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012515183538198471
    2. '-' → logprob: -4.387515068054199
    3. ' ' → logprob: -13.1375150680542
    4. ' -' → logprob: -13.2625150680542
    5. '```' → logprob: -13.5125150680542
    6. '<|end|>' → logprob: -15.3875150680542
    7. '
' → logprob: -16.825016021728516
    8. '0' → logprob: -16.887516021728516
    9. '2' → logprob: -16.887516021728516
    10. ')' → logprob: -17.575016021728516

Token 422: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.233089566230774
    2. '<|end|>' → logprob: -1.358089566230774
    3. ' 
' → logprob: -1.733089566230774
    4. 'for' → logprob: -2.4830894470214844
    5. 'if' → logprob: -2.6080894470214844
    6. ' if' → logprob: -3.2330894470214844
    7. ' for' → logprob: -3.7330894470214844
    8. '  
' → logprob: -3.8580894470214844
    9. ' ' → logprob: -3.8580894470214844
    10. '   ' → logprob: -5.733089447021484

Token 423: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006980460602790117
    2. ' for' → logprob: -5.6319804191589355
    3. 'i' → logprob: -5.8819804191589355
    4. 'if' → logprob: -7.5069804191589355
    5. '
' → logprob: -11.881980895996094
    6. '<|end|>' → logprob: -12.381980895996094
    7. '   ' → logprob: -12.631980895996094
    8. ')' → logprob: -12.756980895996094
    9. 'while' → logprob: -12.756980895996094
    10. '```' → logprob: -13.131980895996094

Token 424: ' components' (ID: 10674)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5040656328201294
    2. ' main' → logprob: -1.5040656328201294
    3. 'root' → logprob: -2.25406551361084
    4. 'range' → logprob: -3.87906551361084
    5. 'print' → logprob: -4.50406551361084
    6. ' root' → logprob: -4.75406551361084
    7. 'count' → logprob: -5.37906551361084
    8. 'for' → logprob: -5.50406551361084
    9. 'all' → logprob: -5.75406551361084
    10. ' range' → logprob: -6.50406551361084

Token 425: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0058772447519004345
    2. ' ():' → logprob: -5.8808770179748535
    3. '():
' → logprob: -6.6308770179748535
    4. '()' → logprob: -6.7558770179748535
    5. '(' → logprob: -8.005877494812012
    6. ' ()' → logprob: -8.505877494812012
    7. ' (' → logprob: -10.880877494812012
    8. '(a' → logprob: -11.880877494812012
    9. '():

' → logprob: -12.630877494812012
    10. '_count' → logprob: -12.755877494812012

Token 426: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0489962100982666
    2. '   ' → logprob: -1.1739962100982666
    3. ' return' → logprob: -1.2989962100982666
    4. ' res' → logprob: -4.2989959716796875
    5. 'res' → logprob: -4.6739959716796875
    6. ' ans' → logprob: -5.0489959716796875
    7. 'global' → logprob: -5.4239959716796875
    8. 'cnt' → logprob: -5.4239959716796875
    9. ' s' → logprob: -5.6739959716796875
    10. ' global' → logprob: -5.7989959716796875

Token 427: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2082815170288086
    2. ' return' → logprob: -2.3332815170288086
    3. 'roots' → logprob: -3.7082815170288086
    4. 'res' → logprob: -3.9582815170288086
    5. 'c' → logprob: -4.458281517028809
    6. 'comp' → logprob: -4.958281517028809
    7. 'r' → logprob: -5.208281517028809
    8. 's' → logprob: -5.208281517028809
    9. 'seen' → logprob: -5.458281517028809
    10. '   ' → logprob: -5.833281517028809

Token 428: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6725382208824158
    2. 'sum' → logprob: -1.1725382804870605
    3. 'N' → logprob: -2.0475382804870605
    4. ' N' → logprob: -4.2975382804870605
    5. ' len' → logprob: -4.2975382804870605
    6. ' sum' → logprob: -4.4225382804870605
    7. 'parent' → logprob: -5.0475382804870605
    8. '[N' → logprob: -6.1725382804870605
    9. '(N' → logprob: -6.7975382804870605
    10. '(len' → logprob: -7.2975382804870605

Token 429: '(parent' (ID: 24729)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6979541778564453
    2. '(set' → logprob: -0.8229541778564453
    3. '({' → logprob: -2.8229541778564453
    4. '(parent' → logprob: -6.197954177856445
    5. 'set' → logprob: -6.697954177856445
    6. '{' → logprob: -8.322954177856445
    7. '(list' → logprob: -9.197954177856445
    8. '(' → logprob: -9.447954177856445
    9. 'parent' → logprob: -9.572954177856445
    10. '[' → logprob: -10.197954177856445

Token 430: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004717414733022451
    2. ')-' → logprob: -5.3797173500061035
    3. ' )' → logprob: -10.254717826843262
    4. '-' → logprob: -11.129717826843262
    5. '[' → logprob: -11.254717826843262
    6. ' -' → logprob: -11.504717826843262
    7. '   ' → logprob: -12.504717826843262
    8. ')
' → logprob: -12.629717826843262
    9. '(' → logprob: -12.754717826843262
    10. ')-(' → logprob: -13.129717826843262

Token 431: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0975697860121727
    2. ')' → logprob: -2.972569704055786
    3. ' -' → logprob: -3.722569704055786
    4. '-set' → logprob: -4.847569942474365
    5. 'def' → logprob: -5.847569942474365
    6. ')-' → logprob: -6.222569942474365
    7. 'set' → logprob: -6.597569942474365
    8. '[' → logprob: -7.722569942474365
    9. '(set' → logprob: -7.972569942474365
    10. '   ' → logprob: -8.222569465637207

Token 432: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.017606263980269432
    2. '1' → logprob: -4.267606258392334
    3. '(' → logprob: -6.142606258392334
    4. '(count' → logprob: -7.392606258392334
    5. ' count' → logprob: -7.517606258392334
    6. 'parent' → logprob: -10.017606735229492
    7. '   ' → logprob: -10.392606735229492
    8. ' ' → logprob: -10.517606735229492
    9. ' (' → logprob: -11.017606735229492
    10. 'sum' → logprob: -12.267606735229492

Token 433: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058115627616643906
    2. 'if' → logprob: -4.058115482330322
    3. '+' → logprob: -4.558115482330322
    4. ' for' → logprob: -4.683115482330322
    5. 's' → logprob: -5.308115482330322
    6. '
' → logprob: -6.058115482330322
    7. '[' → logprob: -6.308115482330322
    8. '<|end|>' → logprob: -6.433115482330322
    9. '=' → logprob: -6.683115482330322
    10. ')' → logprob: -6.808115482330322

Token 434: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42454761266708374
    2. ' if' → logprob: -2.0495476722717285
    3. '[' → logprob: -2.5495476722717285
    4. '+' → logprob: -3.1745476722717285
    5. '<|end|>' → logprob: -3.2995476722717285
    6. '   ' → logprob: -4.5495476722717285
    7. 'if' → logprob: -4.7995476722717285
    8. ':' → logprob: -4.9245476722717285
    9. '  ' → logprob: -5.0495476722717285
    10. '(' → logprob: -5.5495476722717285

Token 435: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0007732972735539079
    2. 'i' → logprob: -7.2507734298706055
    3. '_' → logprob: -10.500773429870605
    4. ' _' → logprob: -11.000773429870605
    5. ' ' → logprob: -11.125773429870605
    6. '_i' → logprob: -13.125773429870605
    7. '	i' → logprob: -14.000773429870605
    8. ' ' → logprob: -14.875773429870605
    9. ' all' → logprob: -15.750773429870605
    10. ' in' → logprob: -16.12577247619629

Token 436: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008786279708147049
    2. 'in' → logprob: -4.758786201477051
    3. ' ' → logprob: -8.75878620147705
    4. ',' → logprob: -13.25878620147705
    5. 'range' → logprob: -13.25878620147705
    6. '1' → logprob: -13.50878620147705
    7. '+' → logprob: -13.63378620147705
    8. ')' → logprob: -13.75878620147705
    9. '   ' → logprob: -13.75878620147705
    10. ' ,' → logprob: -14.13378620147705

Token 437: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023256074637174606
    2. 'range' → logprob: -3.7732560634613037
    3. ' ' → logprob: -12.273256301879883
    4. ' all' → logprob: -12.648256301879883
    5. '(range' → logprob: -13.648256301879883
    6. 'all' → logprob: -14.648256301879883
    7. ' ran' → logprob: -15.398256301879883
    8. '	range' → logprob: -16.148256301879883
    9. '   ' → logprob: -16.273256301879883
    10. ')' → logprob: -16.273256301879883

Token 438: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16030871868133545
    2. '(' → logprob: -1.9103087186813354
    3. ' (' → logprob: -10.035308837890625
    4. '(len' → logprob: -10.785308837890625
    5. '1' → logprob: -11.660308837890625
    6. ' ' → logprob: -12.410308837890625
    7. '(n' → logprob: -12.910308837890625
    8. 'N' → logprob: -13.285308837890625
    9. '(
' → logprob: -13.910308837890625
    10. '((' → logprob: -14.785308837890625

Token 439: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.010242942720651627
    2. ' -' → logprob: -4.760242938995361
    3. '-' → logprob: -6.510242938995361
    4. '):' → logprob: -9.88524341583252
    5. '):
' → logprob: -10.26024341583252
    6. ')' → logprob: -11.88524341583252
    7. '-
' → logprob: -12.01024341583252
    8. ' ' → logprob: -12.13524341583252
    9. '
' → logprob: -12.26024341583252
    10. '   ' → logprob: -12.38524341583252

Token 440: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038619511760771275
    2. '-' → logprob: -6.503861904144287
    3. ' +' → logprob: -6.753861904144287
    4. '):
' → logprob: -7.253861904144287
    5. '):' → logprob: -8.003862380981445
    6. '   ' → logprob: -10.003862380981445
    7. '1' → logprob: -10.253862380981445
    8. ' -' → logprob: -11.003862380981445
    9. '
' → logprob: -11.253862380981445
    10. ' ' → logprob: -11.378862380981445

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002920830447692424
    2. ' ' → logprob: -8.25029182434082
    3. '2' → logprob: -10.62529182434082
    4. '   ' → logprob: -12.62529182434082
    5. ')' → logprob: -14.12529182434082
    6. '```' → logprob: -14.62529182434082
    7. '0' → logprob: -14.68779182434082
    8. '+' → logprob: -15.06279182434082
    9. '  ' → logprob: -15.37529182434082
    10. '
' → logprob: -15.81279182434082

Token 442: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2959906756877899
    2. '):' → logprob: -1.5459907054901123
    3. '-' → logprob: -3.1709907054901123
    4. ' -' → logprob: -7.170990467071533
    5. '):
' → logprob: -8.920990943908691
    6. ')' → logprob: -9.545990943908691
    7. '   ' → logprob: -9.795990943908691
    8. ' ):
' → logprob: -9.920990943908691
    9. '+' → logprob: -10.170990943908691
    10. ' ):' → logprob: -11.170990943908691

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03378136083483696
    2. ' if' → logprob: -3.6587812900543213
    3. 'if' → logprob: -4.9087815284729
    4. '    
' → logprob: -10.908781051635742
    5. ' ' → logprob: -11.033781051635742
    6. '       ' → logprob: -11.783781051635742
    7. ' for' → logprob: -11.908781051635742
    8. '```' → logprob: -12.158781051635742
    9. 'for' → logprob: -12.283781051635742
    10. '
' → logprob: -12.658781051635742

Token 444: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4053674042224884
    2. ' if' → logprob: -1.280367374420166
    3. '   ' → logprob: -2.905367374420166
    4. 'for' → logprob: -8.780367851257324
    5. ' ' → logprob: -9.155367851257324
    6. 'i' → logprob: -9.155367851257324
    7. ' i' → logprob: -9.405367851257324
    8. ' for' → logprob: -9.780367851257324
    9. '    
' → logprob: -10.655367851257324
    10. '
' → logprob: -11.405367851257324

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488192558288574
    2. '   ' → logprob: -2.5988192558288574
    3. ',' → logprob: -2.7238192558288574
    4. '=' → logprob: -2.7238192558288574
    5. ' ,' → logprob: -3.3488192558288574
    6. 'f' → logprob: -4.223819255828857
    7. '+' → logprob: -4.723819255828857
    8. ' if' → logprob: -4.973819255828857
    9. ' ' → logprob: -5.098819255828857
    10. 'if' → logprob: -5.223819255828857

Token 446: ' P' (ID: 398)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029258765280246735
    2. ' i' → logprob: -5.877925872802734
    3. '   ' → logprob: -9.377925872802734
    4. 's' → logprob: -11.377925872802734
    5. ' ' → logprob: -11.877925872802734
    6. '[i' → logprob: -12.002925872802734
    7. 'l' → logprob: -13.127925872802734
    8. '2' → logprob: -13.752925872802734
    9. 'all' → logprob: -13.877925872802734
    10. '[' → logprob: -14.002925872802734

Token 447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003280025441199541
    2. '[' → logprob: -6.628280162811279
    3. 'i' → logprob: -7.253280162811279
    4. '[l' → logprob: -7.253280162811279
    5. '[
' → logprob: -8.878279685974121
    6. 'l' → logprob: -9.253279685974121
    7. '   ' → logprob: -10.003279685974121
    8. '[s' → logprob: -10.003279685974121
    9. 's' → logprob: -10.628279685974121
    10. ' i' → logprob: -10.628279685974121

Token 448: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07411235570907593
    2. '+' → logprob: -3.6991124153137207
    3. ']-' → logprob: -4.074112415313721
    4. ':i' → logprob: -4.449112415313721
    5. ']+' → logprob: -5.199112415313721
    6. ']
' → logprob: -5.949112415313721
    7. '+i' → logprob: -6.074112415313721
    8. '   ' → logprob: -6.324112415313721
    9. '-' → logprob: -6.449112415313721
    10. ' ]' → logprob: -6.699112415313721

Token 449: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8405596017837524
    2. '   ' → logprob: -0.8405596017837524
    3. '<|end|>' → logprob: -3.090559482574463
    4. ' ' → logprob: -3.340559482574463
    5. '-' → logprob: -4.590559482574463
    6. ',' → logprob: -4.715559482574463
    7. '
' → logprob: -4.840559482574463
    8. ' +' → logprob: -5.090559482574463
    9. ' if' → logprob: -5.465559482574463
    10. ')' → logprob: -6.090559482574463

Token 450: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.036851510405540466
    2. 'if' → logprob: -3.536851406097412
    3. 'for' → logprob: -5.661851406097412
    4. '   ' → logprob: -5.786851406097412
    5. ' r' → logprob: -9.16185188293457
    6. 'while' → logprob: -9.28685188293457
    7. ' if' → logprob: -9.53685188293457
    8. 'v' → logprob: -10.16185188293457
    9. 'u' → logprob: -10.16185188293457
    10. 'max' → logprob: -10.28685188293457

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313309907913208
    2. ' =' → logprob: -1.313309907913208
    3. ' ' → logprob: -10.938309669494629
    4. '=P' → logprob: -11.563309669494629
    5. ',' → logprob: -11.813309669494629
    6. '=
' → logprob: -12.813309669494629
    7. ')' → logprob: -12.938309669494629
    8. ' =
' → logprob: -13.063309669494629
    9. ']' → logprob: -13.313309669494629
    10. '[' → logprob: -13.688309669494629

Token 452: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.04176677390933037
    2. ' P' → logprob: -3.916766881942749
    3. 'i' → logprob: -4.41676664352417
    4. 's' → logprob: -5.04176664352417
    5. '   ' → logprob: -6.66676664352417
    6. ' ' → logprob: -8.291767120361328
    7. ' i' → logprob: -8.291767120361328
    8. 'l' → logprob: -8.541767120361328
    9. ' s' → logprob: -8.791767120361328
    10. 'all' → logprob: -9.291767120361328

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00871479231864214
    2. 'i' → logprob: -4.75871467590332
    3. '[' → logprob: -9.63371467590332
    4. ' i' → logprob: -11.38371467590332
    5. '[
' → logprob: -12.00871467590332
    6. '(i' → logprob: -12.13371467590332
    7. '```' → logprob: -12.13371467590332
    8. '   ' → logprob: -13.50871467590332
    9. '`' → logprob: -14.13371467590332
    10. '+' → logprob: -14.13371467590332

Token 454: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11539829522371292
    2. ' +' → logprob: -3.115398406982422
    3. '+i' → logprob: -3.240398406982422
    4. ']' → logprob: -4.490398406982422
    5. ']+' → logprob: -4.990398406982422
    6. '[i' → logprob: -5.115398406982422
    7. 'i' → logprob: -7.115398406982422
    8. '   ' → logprob: -8.990398406982422
    9. '+l' → logprob: -9.240398406982422
    10. ' ' → logprob: -9.490398406982422

Token 455: 'K' (ID: 42)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06280218809843063
    2. 'K' → logprob: -2.8128020763397217
    3. 'i' → logprob: -7.187802314758301
    4. '
' → logprob: -10.5628023147583
    5. ' ' → logprob: -11.1878023147583
    6. ' K' → logprob: -11.4378023147583
    7. ']' → logprob: -12.0628023147583
    8. '0' → logprob: -12.1878023147583
    9. 'l' → logprob: -12.1878023147583
    10. '```' → logprob: -12.8128023147583

Token 456: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01898263767361641
    2. '1' → logprob: -5.393982410430908
    3. ']-' → logprob: -5.393982410430908
    4. ']
' → logprob: -5.643982410430908
    5. '-' → logprob: -5.768982410430908
    6. ']+' → logprob: -6.143982410430908
    7. '   ' → logprob: -8.143982887268066
    8. '][' → logprob: -9.018982887268066
    9. ']int' → logprob: -9.268982887268066
    10. '+' → logprob: -9.393982887268066

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07945291697978973
    2. ' if' → logprob: -2.8294529914855957
    3. '<|end|>' → logprob: -5.704452991485596
    4. '  
' → logprob: -5.954452991485596
    5. '    
' → logprob: -6.079452991485596
    6. '
' → logprob: -6.079452991485596
    7. 'if' → logprob: -6.204452991485596
    8. ' ' → logprob: -6.829452991485596
    9. ')' → logprob: -6.829452991485596
    10. '   
' → logprob: -6.954452991485596

Token 458: ' mn' (ID: 34208)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.349031537771225
    2. 'if' → logprob: -1.2240315675735474
    3. 'u' → logprob: -7.974031448364258
    4. '   ' → logprob: -8.849031448364258
    5. ' if' → logprob: -9.849031448364258
    6. 'for' → logprob: -10.974031448364258
    7. '    
' → logprob: -11.599031448364258
    8. '```' → logprob: -12.849031448364258
    9. '(un' → logprob: -12.974031448364258
    10. 'a' → logprob: -12.974031448364258

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4790648818016052
    2. '=' → logprob: -0.9790648818016052
    3. ',' → logprob: -6.47906494140625
    4. 'ax' → logprob: -7.60406494140625
    5. '.' → logprob: -7.85406494140625
    6. ')' → logprob: -8.10406494140625
    7. 'in' → logprob: -8.10406494140625
    8. '=min' → logprob: -8.10406494140625
    9. '<|end|>' → logprob: -8.35406494140625
    10. '>' → logprob: -8.60406494140625

Token 460: ' s' (ID: 265)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04123979061841965
    2. 'q' → logprob: -3.2912397384643555
    3. 's' → logprob: -6.4162397384643555
    4. 'max' → logprob: -7.1662397384643555
    5. ' min' → logprob: -7.6662397384643555
    6. '(min' → logprob: -9.416239738464355
    7. 'p' → logprob: -10.041239738464355
    8. 'float' → logprob: -10.166239738464355
    9. 'P' → logprob: -10.541239738464355
    10. '[min' → logprob: -10.916239738464355

Token 461: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -4.036524842376821e-05
    2. 'l' → logprob: -10.375040054321289
    3. 'min' → logprob: -12.500040054321289
    4. 'd' → logprob: -13.125040054321289
    5. '[' → logprob: -14.125040054321289
    6. '1' → logprob: -14.375040054321289
    7. 'ldr' → logprob: -14.750040054321289
    8. 'md' → logprob: -15.750040054321289
    9. 'dl' → logprob: -15.750040054321289
    10. '_ld' → logprob: -16.25004005432129

Token 462: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1637164789135568e-05
    2. 'max' → logprob: -11.375011444091797
    3. 'm' → logprob: -16.750011444091797
    4. 'mi' → logprob: -17.875011444091797
    5. '_min' → logprob: -17.875011444091797
    6. 'mini' → logprob: -18.375011444091797
    7. ' min' → logprob: -19.125011444091797
    8. '[min' → logprob: -19.875011444091797
    9. '	min' → logprob: -20.125011444091797
    10. 'mind' → logprob: -21.250011444091797

Token 463: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00279192253947258
    2. '[' → logprob: -6.252791881561279
    3. '[min' → logprob: -7.627791881561279
    4. '[l' → logprob: -8.627792358398438
    5. '.append' → logprob: -10.752792358398438
    6. '[
' → logprob: -11.252792358398438
    7. '[r' → logprob: -11.252792358398438
    8. '[s' → logprob: -11.252792358398438
    9. '[int' → logprob: -11.252792358398438
    10. '.index' → logprob: -11.377792358398438

Token 464: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34878024458885193
    2. ']
' → logprob: -1.2237802743911743
    3. ']==' → logprob: -9.473780632019043
    4. ' ]' → logprob: -9.598780632019043
    5. ' ]
' → logprob: -9.723780632019043
    6. ']+' → logprob: -10.223780632019043
    7. ']<' → logprob: -11.223780632019043
    8. ']
' → logprob: -11.223780632019043
    9. ']

' → logprob: -11.348780632019043
    10. '+' → logprob: -11.723780632019043

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16826269030570984
    2. '<|end|>' → logprob: -1.9182627201080322
    3. ' if' → logprob: -6.168262481689453
    4. 'if' → logprob: -6.668262481689453
    5. '+' → logprob: -7.043262481689453
    6. '    
' → logprob: -7.168262481689453
    7. '  ' → logprob: -7.793262481689453
    8. 'max' → logprob: -7.793262481689453
    9. ')' → logprob: -8.293262481689453
    10. ',' → logprob: -8.543262481689453

Token 466: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' (adapté à ' mx') → logprob: -0.00268218363635242
    2. 'mr' → logprob: -7.002682209014893
    3. 'if' → logprob: -7.502682209014893
    4. 'max' → logprob: -7.752682209014893
    5. 'mn' → logprob: -8.002681732177734
    6. ' mx' → logprob: -8.377681732177734
    7. 'm' → logprob: -9.752681732177734
    8. 'ma' → logprob: -10.377681732177734
    9. '+' → logprob: -10.752681732177734
    10. '   ' → logprob: -10.877681732177734

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326643228530884
    2. ' =' → logprob: -0.7576643228530884
    3. '[i' → logprob: -10.507664680480957
    4. ']' → logprob: -11.132664680480957
    5. '<|end|>' → logprob: -12.257664680480957
    6. ')' → logprob: -12.882664680480957
    7. ' ' → logprob: -13.007664680480957
    8. '.append' → logprob: -13.007664680480957
    9. ']=' → logprob: -13.257664680480957
    10. '   ' → logprob: -13.382664680480957

Token 468: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007608397863805294
    2. ' s' → logprob: -4.882608413696289
    3. '   ' → logprob: -13.882608413696289
    4. ' ' → logprob: -14.007608413696289
    5. '  ' → logprob: -16.13260841369629
    6. 'max' → logprob: -16.25760841369629
    7. '_s' → logprob: -17.13260841369629
    8. ']' → logprob: -17.25760841369629
    9. '	s' → logprob: -17.50760841369629
    10. ' ' → logprob: -17.50760841369629

Token 469: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -14.000003814697266
    3. 'l' → logprob: -14.000003814697266
    4. 'd' → logprob: -14.375003814697266
    5. '1' → logprob: -14.750003814697266
    6. ' ld' → logprob: -16.250003814697266
    7. 'ldr' → logprob: -16.250003814697266
    8. '[]' → logprob: -16.500003814697266
    9. '_ld' → logprob: -16.750003814697266
    10. '```' → logprob: -16.750003814697266

Token 470: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0068502346985042095
    2. '[i' → logprob: -5.131850242614746
    3. 'min' → logprob: -7.256850242614746
    4. 'i' → logprob: -8.506850242614746
    5. '[max' → logprob: -11.506850242614746
    6. '```' → logprob: -13.881850242614746
    7. ' i' → logprob: -14.756850242614746
    8. '[' → logprob: -15.006850242614746
    9. '_max' → logprob: -15.006850242614746
    10. ' max' → logprob: -15.256850242614746

Token 471: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.375000953674316
    3. '[' → logprob: -16.125
    4. '```' → logprob: -16.375
    5. '[min' → logprob: -17.5
    6. '[
' → logprob: -17.5
    7. '[I' → logprob: -18.375
    8. 's' → logprob: -18.75
    9. '[int' → logprob: -18.875
    10. '<|end|>' → logprob: -18.875

Token 472: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004464773926883936
    2. ']
' → logprob: -5.504464626312256
    3. '[i' → logprob: -8.004465103149414
    4. '   ' → logprob: -10.754465103149414
    5. ']
' → logprob: -11.254465103149414
    6. ']

' → logprob: -12.254465103149414
    7. ' ]' → logprob: -12.504465103149414
    8. ']+' → logprob: -13.004465103149414
    9. ']==' → logprob: -13.754465103149414
    10. ')' → logprob: -13.879465103149414

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30006417632102966
    2. '<|end|>' → logprob: -1.425064206123352
    3. ' if' → logprob: -4.8000640869140625
    4. ')' → logprob: -5.0500640869140625
    5. '    
' → logprob: -7.0500640869140625
    6. ' ' → logprob: -7.1750640869140625
    7. 'if' → logprob: -7.6750640869140625
    8. '  ' → logprob: -7.9250640869140625
    9. ',' → logprob: -8.050064086914062
    10. '<|end|>' → logprob: -8.175064086914062

Token 474: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03216785192489624
    2. 'un' → logprob: -3.657167911529541
    3. '   ' → logprob: -5.282167911529541
    4. 'u' → logprob: -8.032167434692383
    5. ' if' → logprob: -8.282167434692383
    6. '```' → logprob: -9.407167434692383
    7. 'for' → logprob: -9.657167434692383
    8. 'i' → logprob: -11.532167434692383
    9. 'union' → logprob: -12.032167434692383
    10. ')' → logprob: -12.407167434692383

Token 475: ' l' (ID: 305)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7303407192230225
    2. ' all' → logprob: -0.7303407192230225
    3. ' not' → logprob: -4.605340957641602
    4. ' l' → logprob: -4.730340957641602
    5. 'l' → logprob: -5.105340957641602
    6. 'not' → logprob: -6.105340957641602
    7. 'r' → logprob: -6.105340957641602
    8. ' r' → logprob: -6.480340957641602
    9. ' mn' → logprob: -6.980340957641602
    10. '(all' → logprob: -6.980340957641602

Token 476: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.26382750272750854
    2. ' ==' → logprob: -2.5138275623321533
    3. ' !=' → logprob: -3.0138275623321533
    4. ' >' → logprob: -3.1388275623321533
    5. '<' → logprob: -3.8888275623321533
    6. '==' → logprob: -4.513827323913574
    7. '[' → logprob: -4.888827323913574
    8. ' ' → logprob: -5.263827323913574
    9. ' <=' → logprob: -5.513827323913574
    10. '!=' → logprob: -5.513827323913574

Token 477: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.2917024791240692
    2. ' mn' → logprob: -2.1667025089263916
    3. 'r' → logprob: -2.2917025089263916
    4. 'mx' → logprob: -4.2917022705078125
    5. 'm' → logprob: -4.4167022705078125
    6. ' r' → logprob: -5.6667022705078125
    7. 'min' → logprob: -6.2917022705078125
    8. ' mx' → logprob: -6.4167022705078125
    9. ' ' → logprob: -7.1667022705078125
    10. 's' → logprob: -7.2917022705078125

Token 478: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3559717535972595
    2. ' or' → logprob: -1.2309718132019043
    3. 'and' → logprob: -4.980971813201904
    4. 'or' → logprob: -8.105971336364746
    5. ':' → logprob: -8.355971336364746
    6. ' ' → logprob: -9.980971336364746
    7. ')' → logprob: -10.855971336364746
    8. '   ' → logprob: -11.355971336364746
    9. ':
' → logprob: -11.980971336364746
    10. ' :' → logprob: -12.730971336364746

Token 479: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4492208957672119
    2. 'mx' → logprob: -1.074220895767212
    3. 'all' → logprob: -4.324220657348633
    4. ' mx' → logprob: -6.074220657348633
    5. 'not' → logprob: -6.699220657348633
    6. ' r' → logprob: -6.949220657348633
    7. 'max' → logprob: -7.324220657348633
    8. '(mx' → logprob: -7.699220657348633
    9. ' all' → logprob: -8.199220657348633
    10. 'mn' → logprob: -8.324220657348633

Token 480: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1814231276512146
    2. '==' → logprob: -2.8064231872558594
    3. ' >' → logprob: -2.9314231872558594
    4. ' <' → logprob: -3.0564231872558594
    5. ' !=' → logprob: -6.306423187255859
    6. '>' → logprob: -6.681423187255859
    7. ' ' → logprob: -7.056423187255859
    8. '<' → logprob: -7.306423187255859
    9. ')' → logprob: -8.80642318725586
    10. '!=' → logprob: -9.18142318725586

Token 481: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.0013414350105449557
    2. ' mx' → logprob: -6.626341342926025
    3. 'mn' → logprob: -11.751341819763184
    4. 'max' → logprob: -12.376341819763184
    5. 'm' → logprob: -13.751341819763184
    6. '(mx' → logprob: -14.376341819763184
    7. ' ' → logprob: -14.501341819763184
    8. '   ' → logprob: -14.876341819763184
    9. 's' → logprob: -15.876341819763184
    10. '.mx' → logprob: -16.001340866088867

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08289185911417007
    2. ':
' → logprob: -2.8328919410705566
    3. ' and' → logprob: -3.9578919410705566
    4. '   ' → logprob: -7.457891941070557
    5. ' or' → logprob: -7.707891941070557
    6. 'and' → logprob: -7.957891941070557
    7. '       ' → logprob: -8.832891464233398
    8. '):
' → logprob: -10.957891464233398
    9. '):' → logprob: -11.207891464233398
    10. ' :' → logprob: -11.582891464233398

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044979434460401535
    2. 'un' → logprob: -3.1699793338775635
    3. '   ' → logprob: -6.794979572296143
    4. ' and' → logprob: -8.419979095458984
    5. ' unite' → logprob: -8.794979095458984
    6. ' or' → logprob: -8.919979095458984
    7. ':' → logprob: -9.669979095458984
    8. ':
' → logprob: -9.669979095458984
    9. ' un' → logprob: -9.794979095458984
    10. 'and' → logprob: -10.544979095458984

Token 484: ' unite' (ID: 96146)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.042122047394514084
    2. 'if' → logprob: -3.2921221256256104
    3. '   ' → logprob: -5.667121887207031
    4. '       ' → logprob: -8.042121887207031
    5. ' unite' → logprob: -9.167121887207031
    6. ' if' → logprob: -9.667121887207031
    7. ' un' → logprob: -10.417121887207031
    8. 'continue' → logprob: -11.167121887207031
    9. '```' → logprob: -11.542121887207031
    10. '    
' → logprob: -11.792121887207031

Token 485: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.000000953674316
    3. '(' → logprob: -14.625000953674316
    4. ' i' → logprob: -17.500001907348633
    5. '(l' → logprob: -19.125001907348633
    6. '[i' → logprob: -19.625001907348633
    7. ',i' → logprob: -20.000001907348633
    8. ' (' → logprob: -20.000001907348633
    9. ')i' → logprob: -20.125001907348633
    10. '<|end|>' → logprob: -20.125001907348633

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.613041877746582
    2. ' i' → logprob: -1.488041877746582
    3. 'i' → logprob: -1.613041877746582
    4. ' ,' → logprob: -3.988041877746582
    5. ',i' → logprob: -4.238041877746582
    6. '   ' → logprob: -8.863041877746582
    7. ' ' → logprob: -10.238041877746582
    8. '	i' → logprob: -11.238041877746582
    9. ')' → logprob: -11.613041877746582
    10. '    ' → logprob: -12.113041877746582

Token 487: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015337858349084854
    2. ' i' → logprob: -6.5015339851379395
    3. '   ' → logprob: -10.376533508300781
    4. '	i' → logprob: -16.12653350830078
    5. ' ' → logprob: -16.62653350830078
    6. '  ' → logprob: -17.00153350830078
    7. '    ' → logprob: -17.75153350830078
    8. ')i' → logprob: -18.75153350830078
    9. '       ' → logprob: -18.87653350830078
    10. '(i' → logprob: -19.00153350830078

Token 488: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043472214019857347
    2. ' +' → logprob: -7.750434875488281
    3. '+i' → logprob: -13.625434875488281
    4. '+)' → logprob: -13.750434875488281
    5. '+
' → logprob: -14.500434875488281
    6. '+k' → logprob: -14.625434875488281
    7. '1' → logprob: -14.750434875488281
    8. ')' → logprob: -16.37543487548828
    9. '   ' → logprob: -16.62543487548828
    10. '```' → logprob: -17.37543487548828

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.625003814697266
    5. 'K' → logprob: -18.125003814697266
    6. '+' → logprob: -19.000003814697266
    7. ')' → logprob: -19.250003814697266
    8. '2' → logprob: -19.250003814697266
    9. '`' → logprob: -19.750003814697266
    10. '``' → logprob: -19.875003814697266

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002319071936653927
    2. ')
' → logprob: -8.375231742858887
    3. ' )' → logprob: -14.500231742858887
    4. '   ' → logprob: -15.000231742858887
    5. ')

' → logprob: -16.125232696533203
    6. '<|end|>' → logprob: -16.250232696533203
    7. ')
' → logprob: -16.750232696533203
    8. '))' → logprob: -17.375232696533203
    9. '())' → logprob: -17.500232696533203
    10. '),' → logprob: -17.500232696533203

Token 491: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' all' (ID: 722)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6948885321617126
    2. ' all' → logprob: -1.1948885917663574
    3. ' ' → logprob: -2.0698885917663574
    4. '__' → logprob: -3.5698885917663574
    5. ' K' → logprob: -3.8198885917663574
    6. ' not' → logprob: -4.819888591766357
    7. 'all' → logprob: -5.444888591766357
    8. ' count' → logprob: -6.319888591766357
    9. ' len' → logprob: -6.444888591766357
    10. 'K' → logprob: -6.569888591766357

Token 493: '(f' (ID: 1526)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -3.8219583075260743e-05
    2. '_all' → logprob: -10.375038146972656
    3. 'all' → logprob: -12.750038146972656
    4. '[i' → logprob: -13.875038146972656
    5. '(' → logprob: -13.875038146972656
    6. '(all' → logprob: -14.250038146972656
    7. '[' → logprob: -14.500038146972656
    8. '(i' → logprob: -15.750038146972656
    9. '```' → logprob: -16.250038146972656
    10. 'asc' → logprob: -16.250038146972656

Token 494: ' ==' (ID: 951)
  Prédit: 'alse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alse' → logprob: -0.0014545208541676402
    2. 'all' → logprob: -6.6264543533325195
    3. 'als' → logprob: -10.00145435333252
    4. 'al' → logprob: -10.87645435333252
    5. 'ilter' → logprob: -11.12645435333252
    6. '(all' → logprob: -11.62645435333252
    7. 'ind' → logprob: -12.25145435333252
    8. 'ALSE' → logprob: -12.25145435333252
    9. 'not' → logprob: -12.62645435333252
    10. 'unc' → logprob: -12.75145435333252

Token 495: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011195066384971142
    2. 'False' → logprob: -4.886195182800293
    3. ' True' → logprob: -5.636195182800293
    4. ' False' → logprob: -11.386195182800293
    5. '1' → logprob: -13.636195182800293
    6. '(True' → logprob: -13.886195182800293
    7. 'r' → logprob: -14.511195182800293
    8. '=True' → logprob: -14.886195182800293
    9. ' ' → logprob: -14.886195182800293
    10. '
' → logprob: -14.886195182800293

Token 496: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5951576232910156
    2. ')' → logprob: -0.8451576232910156
    3. ' for' → logprob: -4.845157623291016
    4. '()' → logprob: -4.970157623291016
    5. 'for' → logprob: -5.720157623291016
    6. '[' → logprob: -8.845157623291016
    7. '())' → logprob: -8.845157623291016
    8. '[]):' → logprob: -9.095157623291016
    9. ' or' → logprob: -9.345157623291016
    10. ',' → logprob: -9.470157623291016

Token 497: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5761447548866272
    2. ' f' → logprob: -0.8261447548866272
    3. '_' → logprob: -8.95114517211914
    4. ' in' → logprob: -10.57614517211914
    5. '_f' → logprob: -10.82614517211914
    6. '	f' → logprob: -10.82614517211914
    7. ' ' → logprob: -12.57614517211914
    8. ',f' → logprob: -13.57614517211914
    9. '(f' → logprob: -13.70114517211914
    10. ' _' → logprob: -13.70114517211914

Token 498: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009777575731277466
    2. 'in' → logprob: -4.634777545928955
    3. ' ' → logprob: -11.384778022766113
    4. 'f' → logprob: -12.759778022766113
    5. ' i' → logprob: -13.384778022766113
    6. ')' → logprob: -13.384778022766113
    7. ' f' → logprob: -13.384778022766113
    8. 'i' → logprob: -14.634778022766113
    9. 's' → logprob: -14.759778022766113
    10. ' not' → logprob: -15.009778022766113

Token 499: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08898264914751053
    2. ' all' → logprob: -2.463982582092285
    3. 's' → logprob: -10.838982582092285
    4. ' s' → logprob: -11.713982582092285
    5. ' ' → logprob: -12.213982582092285
    6. '(all' → logprob: -12.463982582092285
    7. '	all' → logprob: -13.213982582092285
    8. '   ' → logprob: -13.338982582092285
    9. 'al' → logprob: -13.463982582092285
    10. ')' → logprob: -14.463982582092285

Token 500: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1472419600977446e-06
    2. 'asc' → logprob: -14.375000953674316
    3. ')' → logprob: -14.875000953674316
    4. '_)' → logprob: -16.625001907348633
    5. '(' → logprob: -17.750001907348633
    6. '_all' → logprob: -18.375001907348633
    7. 'all' → logprob: -18.500001907348633
    8. '_f' → logprob: -18.500001907348633
    9. 'f' → logprob: -18.750001907348633
    10. '_false' → logprob: -18.875001907348633

Token 501: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. ' asc' → logprob: -17.0
    4. 'all' → logprob: -17.75
    5. 'max' → logprob: -18.0
    6. 'True' → logprob: -18.25
    7. 'asp' → logprob: -18.25
    8. 'False' → logprob: -18.625
    9. 'f' → logprob: -19.125
    10. 'false' → logprob: -19.75

Token 502: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014234490226954222
    2. ')' → logprob: -6.751423358917236
    3. '):
' → logprob: -8.501423835754395
    4. '[' → logprob: -10.751423835754395
    5. ' ):' → logprob: -11.626423835754395
    6. '[]):' → logprob: -11.626423835754395
    7. '()' → logprob: -12.876423835754395
    8. '():' → logprob: -13.251423835754395
    9. ']):' → logprob: -13.876423835754395
    10. '[:' → logprob: -14.001423835754395

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022459562867879868
    2. 'print' → logprob: -4.522459506988525
    3. ' print' → logprob: -4.522459506988525
    4. ':
' → logprob: -9.022459983825684
    5. '    
' → logprob: -9.397459983825684
    6. '
' → logprob: -9.522459983825684
    7. ':' → logprob: -9.897459983825684
    8. '	print' → logprob: -9.897459983825684
    9. '       ' → logprob: -10.772459983825684
    10. '```' → logprob: -11.022459983825684

Token 504: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.032529331743717194
    2. ' print' → logprob: -3.532529354095459
    3. '   ' → logprob: -5.907529354095459
    4. '
' → logprob: -10.4075288772583
    5. '```' → logprob: -11.2825288772583
    6. '	print' → logprob: -12.2825288772583
    7. ' ' → logprob: -12.6575288772583
    8. 'for' → logprob: -13.5325288772583
    9. 'count' → logprob: -13.7825288772583
    10. '``' → logprob: -14.7825288772583

Token 505: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22843243181705475
    2. '0' → logprob: -1.7284324169158936
    3. '(N' → logprob: -3.8534324169158936
    4. '(-' → logprob: -5.728432655334473
    5. '2' → logprob: -7.853432655334473
    6. '(K' → logprob: -7.978432655334473
    7. '1' → logprob: -8.478432655334473
    8. '(
' → logprob: -8.478432655334473
    9. '(len' → logprob: -8.728432655334473
    10. '(max' → logprob: -8.853432655334473

Token 506: 'components' (ID: 8395)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22956582903862
    2. 'N' → logprob: -1.9795658588409424
    3. '-' → logprob: -3.1045658588409424
    4. '1' → logprob: -4.354565620422363
    5. '2' → logprob: -5.729565620422363
    6. 'K' → logprob: -6.479565620422363
    7. ' ' → logprob: -6.979565620422363
    8. '-N' → logprob: -7.104565620422363
    9. 'max' → logprob: -7.229565620422363
    10. 'len' → logprob: -7.354565620422363

Token 507: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004298372659832239
    2. '())
' → logprob: -5.754298210144043
    3. '()' → logprob: -6.879298210144043
    4. '()-' → logprob: -9.629298210144043
    5. '()+' → logprob: -11.754298210144043
    6. ')' → logprob: -11.754298210144043
    7. '())
' → logprob: -12.504298210144043
    8. ' ())' → logprob: -13.129298210144043
    9. '()
' → logprob: -13.629298210144043
    10. '())

' → logprob: -13.754298210144043

Token 508: ' -' (ID: 533)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05064300075173378
    2. ')' → logprob: -3.925642967224121
    3. '()' → logprob: -3.925642967224121
    4. '())
' → logprob: -4.675642967224121
    5. '()-' → logprob: -8.675642967224121
    6. ')
' → logprob: -9.050642967224121
    7. '-' → logprob: -9.175642967224121
    8. '+' → logprob: -9.425642967224121
    9. '()+' → logprob: -9.800642967224121
    10. '()
' → logprob: -10.175642967224121

Token 509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011741555063053966
    2. ' ' → logprob: -6.751173973083496
    3. '2' → logprob: -12.876173973083496
    4. '   ' → logprob: -13.876173973083496
    5. '0' → logprob: -15.001173973083496
    6. '  ' → logprob: -16.376174926757812
    7. '
' → logprob: -17.376174926757812
    8. '3' → logprob: -17.501174926757812
    9. '4' → logprob: -18.626174926757812
    10. '```' → logprob: -18.876174926757812

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012535012501757592
    2. ' ' → logprob: -9.00012493133545
    3. '2' → logprob: -13.62512493133545
    4. 'count' → logprob: -15.50012493133545
    5. '0' → logprob: -15.62512493133545
    6. '   ' → logprob: -15.75012493133545
    7. 'K' → logprob: -16.625125885009766
    8. '(' → logprob: -17.250125885009766
    9. '
' → logprob: -17.375125885009766
    10. 'print' → logprob: -18.000125885009766

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0868278524139896e-05
    2. ' )' → logprob: -10.25006103515625
    3. ')
' → logprob: -10.75006103515625
    4. '```' → logprob: -13.25006103515625
    5. '`)' → logprob: -14.37506103515625
    6. '
' → logprob: -14.87506103515625
    7. '()' → logprob: -15.12506103515625
    8. '())' → logprob: -15.25006103515625
    9. '')' → logprob: -15.25006103515625
    10. '))' → logprob: -16.00006103515625

Token 512: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07819417864084244
    2. 'elif' → logprob: -2.9531941413879395
    3. ')' → logprob: -4.2031941413879395
    4. '<|end|>' → logprob: -4.9531941413879395
    5. ' else' → logprob: -7.5781941413879395
    6. 'exit' (adapté à ' exit') → logprob: -8.703194618225098
    7. '
' → logprob: -8.828194618225098
    8. '```' → logprob: -9.453194618225098
    9. '<|end|>' → logprob: -10.203194618225098
    10. '\n' → logprob: -11.203194618225098

Token 514: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.727905979962088e-05
    2. '()
' → logprob: -10.00004768371582
    3. '(' → logprob: -13.87504768371582
    4. '()\' → logprob: -15.37504768371582
    5. '()

' → logprob: -15.62504768371582
    6. '()`' → logprob: -16.00004768371582
    7. '())' → logprob: -16.50004768371582
    8. '()
' → logprob: -16.62504768371582
    9. ' ()' → logprob: -16.75004768371582
    10. '()<' → logprob: -17.12504768371582

Token 515: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009927731938660145
    2. 'for' → logprob: -4.634927749633789
    3. 'if' → logprob: -8.759927749633789
    4. ' print' → logprob: -12.634927749633789
    5. 'else' → logprob: -12.759927749633789
    6. '   ' → logprob: -13.009927749633789
    7. '```' → logprob: -13.009927749633789
    8. 'while' → logprob: -13.384927749633789
    9. 'i' → logprob: -13.759927749633789
    10. ' for' → logprob: -14.384927749633789

Token 516: '_i' (ID: 10853)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5820226073265076
    2. ' solve' → logprob: -1.4570226669311523
    3. ' dfs' → logprob: -1.9570226669311523
    4. ' bfs' → logprob: -4.457022666931152
    5. 'solve' → logprob: -4.832022666931152
    6. 'dfs' → logprob: -5.082022666931152
    7. ' count' → logprob: -5.082022666931152
    8. ' top' → logprob: -5.332022666931152
    9. ' ' → logprob: -5.707022666931152
    10. ' check' → logprob: -5.832022666931152

Token 517: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01894063502550125
    2. 'ndef' → logprob: -5.268940448760986
    3. 'def' → logprob: -5.643940448760986
    4. 'nt' → logprob: -5.768940448760986
    5. 'n' → logprob: -6.018940448760986
    6. '_' → logprob: -6.268940448760986
    7. '=' → logprob: -6.768940448760986
    8. 'nd' → logprob: -7.393940448760986
    9. ' =' → logprob: -8.018940925598145
    10. 'x' → logprob: -9.143940925598145

Token 518: ' N' (ID: 478)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.27619206905365
    2. 'n' → logprob: -1.65119206905365
    3. 'f' → logprob: -2.1511921882629395
    4. '0' → logprob: -2.2761921882629395
    5. 'ndef' → logprob: -2.4011921882629395
    6. ' ' → logprob: -2.5261921882629395
    7. '1' → logprob: -3.1511921882629395
    8. 'N' → logprob: -3.6511921882629395
    9. '_' → logprob: -4.5261921882629395
    10. 'None' → logprob: -4.7761921882629395

Token 519: '-K' (ID: 12249)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17671234905719757
    2. '+' → logprob: -2.3017122745513916
    3. '_' → logprob: -4.301712512969971
    4. ' -' → logprob: -4.426712512969971
    5. '=' → logprob: -4.926712512969971
    6. 'def' → logprob: -5.176712512969971
    7. 'K' → logprob: -5.426712512969971
    8. ',' → logprob: -5.551712512969971
    9. ' ' → logprob: -6.176712512969971
    10. ' =' → logprob: -6.551712512969971

Token 520: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003449683776125312
    2. '+
' → logprob: -6.3784499168396
    3. '_' → logprob: -7.1284499168396
    4. ' +' → logprob: -7.8784499168396
    5. '=' → logprob: -9.003449440002441
    6. '-' → logprob: -9.128449440002441
    7. 'for' → logprob: -9.503449440002441
    8. 'x' → logprob: -10.003449440002441
    9. '[' → logprob: -10.503449440002441
    10. 'def' → logprob: -10.628449440002441

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009967265650629997
    2. '2' → logprob: -4.63496732711792
    3. '+' → logprob: -8.884966850280762
    4. ' ' → logprob: -9.759966850280762
    5. '3' → logprob: -12.259966850280762
    6. '   ' → logprob: -13.009966850280762
    7. ' +' → logprob: -13.009966850280762
    8. 'def' → logprob: -13.822466850280762
    9. '0' → logprob: -14.447466850280762
    10. '```' → logprob: -14.447466850280762

Token 522: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7616536617279053
    2. '+' → logprob: -2.0116536617279053
    3. ' =' → logprob: -2.1366536617279053
    4. '<|end|>' → logprob: -2.2616536617279053
    5. '_' → logprob: -2.7616536617279053
    6. '[' → logprob: -3.1366536617279053
    7. ')' → logprob: -4.136653900146484
    8. '
' → logprob: -4.636653900146484
    9. '-' → logprob: -4.761653900146484
    10. ']' → logprob: -5.011653900146484

Token 523: 'for' (ID: 1938)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16242432594299316
    2. ' =' → logprob: -2.162424325942993
    3. 'f' → logprob: -3.912424325942993
    4. '_' → logprob: -4.912424087524414
    5. 'def' → logprob: -6.162424087524414
    6. 'for' → logprob: -6.912424087524414
    7. 'x' → logprob: -7.287424087524414
    8. ',' → logprob: -7.912424087524414
    9. ' ' → logprob: -7.912424087524414
    10. 'nd' → logprob: -8.162424087524414

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028445081785321236
    2. ' i' → logprob: -3.65344500541687
    3. '_i' → logprob: -7.403445243835449
    4. 'f' → logprob: -7.528445243835449
    5. 'def' → logprob: -8.15344524383545
    6. '_' → logprob: -8.15344524383545
    7. 'x' → logprob: -8.77844524383545
    8. 'j' → logprob: -10.15344524383545
    9. ' f' → logprob: -10.27844524383545
    10. 'd' → logprob: -10.40344524383545

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06203524023294449
    2. 'in' → logprob: -2.812035322189331
    3. ' ' → logprob: -10.68703556060791
    4. ',' → logprob: -10.81203556060791
    5. 'n' → logprob: -11.81203556060791
    6. 'def' → logprob: -13.18703556060791
    7. 'range' → logprob: -13.31203556060791
    8. '	in' → logprob: -13.31203556060791
    9. '   ' → logprob: -13.43703556060791
    10. ')' → logprob: -13.81203556060791

Token 526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12724126875400543
    2. ' range' → logprob: -2.127241373062134
    3. 'def' → logprob: -8.502241134643555
    4. ' ' → logprob: -10.627241134643555
    5. '_' → logprob: -10.877241134643555
    6. ' def' → logprob: -11.002241134643555
    7. 'in' → logprob: -11.502241134643555
    8. ' in' → logprob: -11.752241134643555
    9. '(range' → logprob: -12.002241134643555
    10. '   ' → logprob: -12.252241134643555

Token 527: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4343903362751007
    2. '(def' → logprob: -1.4343903064727783
    3. '(' → logprob: -2.4343903064727783
    4. '(_' → logprob: -4.809390544891357
    5. 'def' → logprob: -5.059390544891357
    6. ' (' → logprob: -5.184390544891357
    7. '(i' → logprob: -5.934390544891357
    8. '(de' → logprob: -6.684390544891357
    9. '(len' → logprob: -7.059390544891357
    10. ' def' → logprob: -7.934390544891357

Token 528: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.5598196983337402
    2. '):' → logprob: -1.8098196983337402
    3. '-def' → logprob: -2.3098196983337402
    4. 'def' → logprob: -2.6848196983337402
    5. '-' → logprob: -2.8098196983337402
    6. '):
' → logprob: -4.55981969833374
    7. ' -' → logprob: -4.80981969833374
    8. '+' → logprob: -5.18481969833374
    9. '_i' → logprob: -6.18481969833374
    10. ' def' → logprob: -6.18481969833374

Token 529: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022304873913526535
    2. '):' → logprob: -4.647305011749268
    3. '1' → logprob: -5.147305011749268
    4. '-' → logprob: -5.522305011749268
    5. '):
' → logprob: -6.647305011749268
    6. ',' → logprob: -8.27230453491211
    7. '   ' → logprob: -8.39730453491211
    8. ')' → logprob: -8.77230453491211
    9. ' +' → logprob: -9.02230453491211
    10. '+i' → logprob: -9.14730453491211

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007121934904716909
    2. '2' → logprob: -7.7507123947143555
    3. ' ' → logprob: -8.500712394714355
    4. '   ' → logprob: -11.063212394714355
    5. '+' → logprob: -11.125712394714355
    6. '10' → logprob: -11.250712394714355
    7. '```' → logprob: -11.938212394714355
    8. '0' → logprob: -12.000712394714355
    9. '3' → logprob: -12.875712394714355
    10. '11' → logprob: -13.250712394714355

Token 531: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5708314776420593
    2. '):
' → logprob: -0.9458314776420593
    3. '+' → logprob: -3.320831537246704
    4. '-' → logprob: -5.195831298828125
    5. ',' → logprob: -6.070831298828125
    6. ':' → logprob: -7.320831298828125
    7. ':def' → logprob: -7.320831298828125
    8. 'def' → logprob: -7.820831298828125
    9. '   ' → logprob: -8.445831298828125
    10. '):
' → logprob: -8.695831298828125

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040140533819794655
    2. ' if' → logprob: -5.629014015197754
    3. ' ' → logprob: -9.129014015197754
    4. '  ' → logprob: -9.504014015197754
    5. 'if' → logprob: -9.504014015197754
    6. '    ' → logprob: -10.254014015197754
    7. '<|end|>' → logprob: -10.504014015197754
    8. '    
' → logprob: -11.129014015197754
    9. ',' → logprob: -11.754014015197754
    10. '	if' → logprob: -12.004014015197754

Token 533: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49387797713279724
    2. ' if' → logprob: -1.1188780069351196
    3. 'if' (adapté à ' if') → logprob: -3.11887788772583
    4. ' all' → logprob: -5.86887788772583
    5. 'def' → logprob: -5.86887788772583
    6. ' for' → logprob: -6.36887788772583
    7. ' f' → logprob: -6.36887788772583
    8. ' def' → logprob: -6.36887788772583
    9. ' _' → logprob: -6.61887788772583
    10. ' i' → logprob: -6.74387788772583

Token 534: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08149097114801407
    2. ' all' → logprob: -3.081490993499756
    3. 'not' → logprob: -3.706490993499756
    4. ' not' → logprob: -5.331490993499756
    5. '   ' → logprob: -6.206490993499756
    6. 'P' → logprob: -8.206490516662598
    7. 's' → logprob: -8.331490516662598
    8. 'i' → logprob: -9.081490516662598
    9. ' ' → logprob: -9.331490516662598
    10. ' P' → logprob: -9.831490516662598

Token 535: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.236549335066229e-05
    2. '[i' → logprob: -10.875021934509277
    3. '[' → logprob: -14.250021934509277
    4. '(i' → logprob: -14.625021934509277
    5. '_all' → logprob: -14.875021934509277
    6. '[f' → logprob: -15.125021934509277
    7. '(all' → logprob: -15.500021934509277
    8. '_as' → logprob: -15.625021934509277
    9. 'asc' → logprob: -15.875021934509277
    10. '(f' → logprob: -15.875021934509277

Token 536: 'asc' (ID: 7400)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00035810720873996615
    2. 'asc' → logprob: -8.125358581542969
    3. 'all' → logprob: -10.500358581542969
    4. '[i' → logprob: -11.750358581542969
    5. 'f' → logprob: -11.750358581542969
    6. '(f' → logprob: -12.750358581542969
    7. 's' → logprob: -13.000358581542969
    8. '[f' → logprob: -13.250358581542969
    9. 'not' → logprob: -13.375358581542969
    10. '_all' → logprob: -13.500358581542969

Token 537: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.870950215263292e-05
    2. '[' → logprob: -10.000048637390137
    3. '[I' → logprob: -14.250048637390137
    4. '[
' → logprob: -14.500048637390137
    5. '[f' → logprob: -14.875048637390137
    6. '\[' → logprob: -15.000048637390137
    7. '==' → logprob: -15.375048637390137
    8. '```' → logprob: -15.500048637390137
    9. '[j' → logprob: -15.625048637390137
    10. ' [' → logprob: -15.875048637390137

Token 538: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09750058501958847
    2. ']:
' → logprob: -2.4725005626678467
    3. ']==' → logprob: -4.972500801086426
    4. ']' → logprob: -6.597500801086426
    5. ' ]' → logprob: -8.847500801086426
    6. ']:
' → logprob: -10.722500801086426
    7. ']:

' → logprob: -10.972500801086426
    8. '==' → logprob: -10.972500801086426
    9. ']>' → logprob: -11.347500801086426
    10. ':' → logprob: -11.972500801086426

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5754039883613586
    2. ':' → logprob: -1.5754039287567139
    3. '   ' → logprob: -2.325403928756714
    4. ':def' → logprob: -2.575403928756714
    5. ':
' → logprob: -3.700403928756714
    6. 'def' → logprob: -4.575404167175293
    7. ' def' → logprob: -4.950404167175293
    8. ' =' → logprob: -5.450404167175293
    9. '=' → logprob: -5.575404167175293
    10. '==' → logprob: -6.450404167175293

Token 540: ' unite' (ID: 96146)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02908433973789215
    2. '   ' → logprob: -3.7790844440460205
    3. ' def' → logprob: -5.779084205627441
    4. 'print' → logprob: -6.279084205627441
    5. '_def' → logprob: -8.154084205627441
    6. ' print' → logprob: -9.279084205627441
    7. ' ' → logprob: -9.654084205627441
    8. '       ' → logprob: -9.779084205627441
    9. 'if' → logprob: -9.779084205627441
    10. '
' → logprob: -9.904084205627441

Token 541: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00016241880075540394
    2. '(' → logprob: -8.750162124633789
    3. 'i' → logprob: -12.875162124633789
    4. 'def' → logprob: -14.625162124633789
    5. ' (' → logprob: -15.000162124633789
    6. '(def' → logprob: -15.625162124633789
    7. ' i' → logprob: -15.750162124633789
    8. '(
' → logprob: -15.750162124633789
    9. '(N' → logprob: -17.37516212463379
    10. '(n' → logprob: -17.50016212463379

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23271289467811584
    2. ',i' → logprob: -1.6077128648757935
    3. ' ,' → logprob: -5.107712745666504
    4. ' i' → logprob: -7.732712745666504
    5. 'def' → logprob: -7.857712745666504
    6. '(i' → logprob: -8.857712745666504
    7. ' def' → logprob: -9.732712745666504
    8. 'i' → logprob: -10.107712745666504
    9. ',f' → logprob: -10.732712745666504
    10. '   ' → logprob: -11.357712745666504

Token 543: ' def' (ID: 1056)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0815061405301094
    2. 'def' → logprob: -3.0815062522888184
    3. ' i' → logprob: -3.9565062522888184
    4. '_i' → logprob: -4.456506252288818
    5. ' def' → logprob: -7.206506252288818
    6. '_def' → logprob: -8.20650577545166
    7. '   ' → logprob: -8.45650577545166
    8. '0' → logprob: -8.70650577545166
    9. ' ' → logprob: -9.95650577545166
    10. 'N' → logprob: -10.33150577545166

Token 544: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005246210377663374
    2. 'i' → logprob: -5.255246162414551
    3. ')' → logprob: -13.38024616241455
    4. 'a' → logprob: -13.38024616241455
    5. 'f' → logprob: -13.50524616241455
    6. '```' → logprob: -13.75524616241455
    7. ' i' → logprob: -14.13024616241455
    8. '_a' → logprob: -14.69274616241455
    9. '+' → logprob: -14.75524616241455
    10. '\' → logprob: -14.94274616241455

Token 545: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05059812217950821
    2. ')
' → logprob: -3.05059814453125
    3. '+' → logprob: -6.30059814453125
    4. '+i' → logprob: -10.05059814453125
    5. ' )' → logprob: -10.30059814453125
    6. '   ' → logprob: -10.67559814453125
    7. ')i' → logprob: -11.17559814453125
    8. '+)' → logprob: -11.67559814453125
    9. ')return' → logprob: -11.67559814453125
    10. ' +' → logprob: -11.80059814453125

Token 546: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002519657602533698
    2. '(root' → logprob: -6.377519607543945
    3. 'components' → logprob: -7.877519607543945
    4. '(parent' → logprob: -8.002519607543945
    5. '((' → logprob: -10.502519607543945
    6. 'root' → logprob: -10.627519607543945
    7. '(len' → logprob: -11.627519607543945
    8. ' (' → logprob: -12.127519607543945
    9. '(component' → logprob: -12.127519607543945
    10. '(max' → logprob: -12.377519607543945

Token 548: 'components' (ID: 8395)
  Prédit: 'components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.0017721657641232014
    2. ' components' → logprob: -6.376772403717041
    3. 'component' → logprob: -11.001771926879883
    4. 'N' → logprob: -11.126771926879883
    5. '(' → logprob: -11.376771926879883
    6. 'parent' → logprob: -12.501771926879883
    7. 'comp' → logprob: -12.751771926879883
    8. 'len' → logprob: -12.876771926879883
    9. 'root' → logprob: -13.126771926879883
    10. 'max' → logprob: -13.251771926879883

Token 549: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031941127963364124
    2. '())' → logprob: -6.003194332122803
    3. '()-' → logprob: -7.253194332122803
    4. ' ()' → logprob: -12.503193855285645
    5. '()`' → logprob: -12.503193855285645
    6. '(' → logprob: -13.628193855285645
    7. ')' → logprob: -15.003193855285645
    8. '()
' → logprob: -15.253193855285645
    9. '（）' → logprob: -15.503193855285645
    10. '()[' → logprob: -15.878193855285645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 547
Tokens correctement prédits (1ère position, stricte): 257
Tokens correctement prédits (1ère position, avec adaptation): 280
Tokens correctement prédits (top 10): 487
Précision stricte (1ère position): 46.98%
Précision adaptée (1ère position): 51.19%
Précision (top 10): 89.03%
================================================================================
