================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
from bisect import bisect_right
from sys import exit
from string import ascii_lowercase

S, T = input(), input()
positions = defaultdict(list)
for idx, char in enumerate(S):
    positions[char].append(idx)

if any(not positions[c] for c in set(T)):
    print(-1)
    exit()

id, ans, n = -1, 0, len(S)
for c in T:
    idx_list = positions[c]
    i = bisect_right(idx_list, id)
    if i == len(idx_list):
        ans += n
        id = idx_list[0]
    else:
        id = idx_list[i]

print(ans + id + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007800268009305
    2. '(
' → logprob: -5.382800102233887
    3. '\n' → logprob: -7.007800102233887
    4. '\' → logprob: -7.382800102233887
    5. '```' → logprob: -7.507800102233887
    6. '\(' → logprob: -7.632800102233887
    7. '
' → logprob: -9.257800102233887
    8. '`' → logprob: -9.507800102233887
    9. 'newline' → logprob: -9.757800102233887
    10. '()' → logprob: -9.882800102233887

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5359821915626526
    2. '(
' → logprob: -2.160982131958008
    3. '
' → logprob: -2.535982131958008
    4. 'd' → logprob: -2.910982131958008
    5. '\n' → logprob: -3.535982131958008
    6. 'default' → logprob: -3.660982131958008
    7. '\' → logprob: -4.035982131958008
    8. 'def' → logprob: -4.035982131958008
    9. '```' → logprob: -4.160982131958008
    10. 'newline' → logprob: -4.785982131958008

Token 6: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5180084705352783
    2. ' collections' → logprob: -1.7680084705352783
    3. ' typing' → logprob: -2.3930084705352783
    4. ' ' → logprob: -3.2680084705352783
    5. ' os' → logprob: -3.2680084705352783
    6. ' sys' → logprob: -4.268008232116699
    7. ' math' → logprob: -4.393008232116699
    8. ' json' → logprob: -4.643008232116699
    9. ' functools' → logprob: -4.643008232116699
    10. 'collections' → logprob: -5.143008232116699

Token 7: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.961759259458631e-06
    2. 'e' → logprob: -13.000004768371582
    3. 't' → logprob: -13.875004768371582
    4. 'ected' → logprob: -14.875004768371582
    5. 'ec' → logprob: -14.875004768371582
    6. 'ectl' → logprob: -15.250004768371582
    7. 'ector' → logprob: -15.625004768371582
    8. '```' → logprob: -15.750004768371582
    9. '>' → logprob: -16.1250057220459
    10. 'ection' → logprob: -16.3750057220459

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3133937120437622
    2. 'import' → logprob: -1.3133937120437622
    3. '_import' → logprob: -9.188393592834473
    4. ' ' → logprob: -11.438393592834473
    5. '	import' → logprob: -11.563393592834473
    6. ' im' → logprob: -12.813393592834473
    7. '_' → logprob: -12.938393592834473
    8. ' ' → logprob: -13.688393592834473
    9. 'ort' → logprob: -14.438393592834473
    10. ' importar' → logprob: -14.688393592834473

Token 9: ' bis' (ID: 7204)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.9173749685287476
    2. ' bis' → logprob: -0.9173749685287476
    3. 'ins' → logprob: -1.6673749685287476
    4. 'bis' → logprob: -4.417375087738037
    5. '_ins' → logprob: -9.917374610900879
    6. 'import' → logprob: -13.042374610900879
    7. '.ins' → logprob: -13.042374610900879
    8. '```' → logprob: -13.917374610900879
    9. '_left' → logprob: -14.417374610900879
    10. ' import' → logprob: -14.417374610900879

Token 10: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00040302498382516205
    2. 'e' → logprob: -7.875402927398682
    3. 'ected' → logprob: -11.62540340423584
    4. 'ec' → logprob: -12.37540340423584
    5. 'ectl' → logprob: -12.50040340423584
    6. 'sect' → logprob: -13.62540340423584
    7. 'ecta' → logprob: -14.25040340423584
    8. 'ectin' → logprob: -14.25040340423584
    9. 'ector' → logprob: -14.37540340423584
    10. '\' → logprob: -14.62540340423584

Token 11: '_right' (ID: 24402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013658583164215088
    2. '(' → logprob: -5.13865852355957
    3. '_left' → logprob: -5.51365852355957
    4. '.' → logprob: -7.01365852355957
    5. '_
' → logprob: -7.88865852355957
    6. '_right' → logprob: -8.26365852355957
    7. '\' → logprob: -8.38865852355957
    8. '```' → logprob: -8.76365852355957
    9. '_

' → logprob: -8.76365852355957
    10. 'newline' → logprob: -8.88865852355957

Token 12: '
' (ID: 198)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.0665196180343628
    2. '(' → logprob: -1.1915196180343628
    3. '\' → logprob: -1.8165196180343628
    4. '\n' → logprob: -2.8165197372436523
    5. '
' → logprob: -3.1915197372436523
    6. 'def' → logprob: -3.1915197372436523
    7. '(

' → logprob: -3.4415197372436523
    8. '

' → logprob: -5.816519737243652
    9. '```' → logprob: -6.316519737243652
    10. 'newline' → logprob: -6.816519737243652

Token 13: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04205165058374405
    2. '
' → logprob: -3.2920515537261963
    3. '```' → logprob: -6.667051792144775
    4. '
' → logprob: -6.917051792144775
    5. '\n' → logprob: -6.917051792144775
    6. 'def' → logprob: -8.292051315307617
    7. '

' → logprob: -9.042051315307617
    8. '


' → logprob: -9.792051315307617
    9. '\' → logprob: -9.792051315307617
    10. 'class' → logprob: -10.167051315307617

Token 14: ' sys' (ID: 12228)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6994062662124634
    2. ' itertools' → logprob: -1.0744062662124634
    3. 'heap' → logprob: -2.824406147003174
    4. ' typing' → logprob: -2.949406147003174
    5. ' math' → logprob: -3.324406147003174
    6. ' operator' → logprob: -5.949406147003174
    7. 'math' → logprob: -6.074406147003174
    8. ' sorted' → logprob: -6.199406147003174
    9. 'typing' → logprob: -6.449406147003174
    10. ' sys' → logprob: -6.824406147003174

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011670723557472229
    2. 'import' → logprob: -4.5116705894470215
    3. '<|end|>' → logprob: -7.8866705894470215
    4. '.' → logprob: -9.26167106628418
    5. ' ' → logprob: -9.63667106628418
    6. ' .' → logprob: -10.51167106628418
    7. '<|end|>' → logprob: -10.76167106628418
    8. '	import' → logprob: -11.13667106628418
    9. ' imports' → logprob: -12.01167106628418
    10. '.import' → logprob: -12.63667106628418

Token 16: ' exit' (ID: 10654)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2032490223646164
    2. ' stdin' → logprob: -1.7032489776611328
    3. 'argv' → logprob: -6.953248977661133
    4. 'stderr' → logprob: -8.328248977661133
    5. 'stdout' → logprob: -8.453248977661133
    6. '.stdin' → logprob: -8.453248977661133
    7. 'max' → logprob: -9.203248977661133
    8. 'exit' → logprob: -10.328248977661133
    9. '(stdin' → logprob: -10.578248977661133
    10. ' argv' → logprob: -11.203248977661133

Token 17: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.22901636362075806
    2. '
' → logprob: -1.7290163040161133
    3. '\n' → logprob: -4.604016304016113
    4. 'import' → logprob: -5.104016304016113
    5. 'def' → logprob: -5.479016304016113
    6. '
' → logprob: -6.604016304016113
    7. '\' → logprob: -6.979016304016113
    8. '' → logprob: -7.104016304016113
    9. '```' → logprob: -7.104016304016113
    10. '


' → logprob: -7.604016304016113

Token 18: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0023702383041382
    2. '```' → logprob: -1.7523702383041382
    3. '\n' → logprob: -2.0023703575134277
    4. 'def' → logprob: -2.2523703575134277
    5. '
' → logprob: -2.2523703575134277
    6. '\' → logprob: -3.5023703575134277
    7. '`

' → logprob: -4.002370357513428
    8. '(' → logprob: -4.627370357513428
    9. '' → logprob: -4.627370357513428
    10. '`' → logprob: -5.002370357513428

Token 19: ' string' (ID: 1621)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.06337834149599075
    2. ' collections' → logprob: -4.06337833404541
    3. 'collections' → logprob: -4.68837833404541
    4. ' os' → logprob: -4.68837833404541
    5. ' math' → logprob: -4.93837833404541
    6. 'heap' → logprob: -5.31337833404541
    7. ' heap' → logprob: -5.56337833404541
    8. ' typing' → logprob: -6.18837833404541
    9. ' threading' → logprob: -6.31337833404541
    10. 'os' → logprob: -6.68837833404541

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3159986138343811
    2. 'import' → logprob: -1.3159985542297363
    3. '.' → logprob: -6.315998554229736
    4. ' ' → logprob: -7.440998554229736
    5. '<|end|>' → logprob: -8.440999031066895
    6. '	import' → logprob: -9.940999031066895
    7. ',' → logprob: -11.315999031066895
    8. '_import' → logprob: -11.440999031066895
    9. '<|end|>' → logprob: -11.815999031066895
    10. ' as' → logprob: -11.940999031066895

Token 21: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.061764415353536606
    2. ' ascii' → logprob: -3.0617644786834717
    3. ' punctuation' → logprob: -4.686764240264893
    4. 'pun' → logprob: -5.936764240264893
    5. 'as' → logprob: -7.561764240264893
    6. ' whitespace' → logprob: -8.18676471710205
    7. '.as' → logprob: -9.06176471710205
    8. ' printable' → logprob: -9.43676471710205
    9. 'wh' → logprob: -9.56176471710205
    10. 'he' → logprob: -10.06176471710205

Token 22: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.7401216626167297
    2. '_letters' → logprob: -0.7401216626167297
    3. 'letters' → logprob: -3.490121603012085
    4. 'lower' → logprob: -4.240121841430664
    5. '_upper' → logprob: -6.990121841430664
    6. 'let' → logprob: -10.990121841430664
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -11.615121841430664
    8. 'ght' → logprob: -11.865121841430664
    9. 'uppercase' → logprob: -11.990121841430664
    10. 'l' → logprob: -12.615121841430664

Token 23: 'case' (ID: 9994)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.394549697637558
    2. 'case' → logprob: -1.1445497274398804
    3. 'et' → logprob: -5.51954984664917
    4. 'letters' → logprob: -7.64454984664917
    5. '_letters' → logprob: -8.144549369812012
    6. 'a' → logprob: -8.269549369812012
    7. '_lower' → logprob: -8.269549369812012
    8. 'lower' → logprob: -8.769549369812012
    9. 'ow' → logprob: -8.769549369812012
    10. 't' → logprob: -9.019549369812012

Token 24: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.298820823431015
    2. '
' → logprob: -1.4238208532333374
    3. 'import' → logprob: -5.673820972442627
    4. '```' → logprob: -6.048820972442627
    5. ' 

' → logprob: -6.298820972442627
    6. 'a' → logprob: -6.298820972442627
    7. '\n' → logprob: -6.423820972442627
    8. '' → logprob: -6.798820972442627
    9. '<|end|>' → logprob: -7.173820972442627
    10. ',' → logprob: -7.298820972442627

Token 25: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0703141689300537
    2. 'def' → logprob: -1.6953141689300537
    3. 'd' → logprob: -2.3203141689300537
    4. '\' → logprob: -2.9453141689300537
    5. '

' → logprob: -2.9453141689300537
    6. 'class' → logprob: -2.9453141689300537
    7. '\n' → logprob: -3.1953141689300537
    8. '```' → logprob: -3.3203141689300537
    9. '' → logprob: -3.5703141689300537
    10. 'a' → logprob: -3.6953141689300537

Token 26: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23475982248783112
    2. ' =' → logprob: -1.73475980758667
    3. '.' → logprob: -3.73475980758667
    4. '[' → logprob: -5.98475980758667
    5. ' ' → logprob: -6.48475980758667
    6. ')' → logprob: -6.85975980758667
    7. ',' → logprob: -6.85975980758667
    8. '[:]' → logprob: -6.98475980758667
    9. '_' → logprob: -7.35975980758667
    10. ':' → logprob: -7.98475980758667

Token 27: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6154660582542419
    2. ' T' → logprob: -1.1154661178588867
    3. ' ' → logprob: -3.1154661178588867
    4. 'Q' → logprob: -4.115466117858887
    5. ' =' → logprob: -4.115466117858887
    6. 'N' → logprob: -4.740466117858887
    7. 'K' → logprob: -4.865466117858887
    8. '=' → logprob: -4.865466117858887
    9. ' K' → logprob: -4.865466117858887
    10. ' N' → logprob: -5.115466117858887

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28128647804260254
    2. '=' → logprob: -1.4062864780426025
    3. ',' → logprob: -9.031286239624023
    4. '=input' → logprob: -12.156286239624023
    5. ' ' → logprob: -12.906286239624023
    6. '=

' → logprob: -13.406286239624023
    7. '_' → logprob: -13.781286239624023
    8. '[' → logprob: -13.781286239624023
    9. ' =
' → logprob: -13.906286239624023
    10. ')' → logprob: -14.156286239624023

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12074249982833862
    2. ' input' → logprob: -2.2457425594329834
    3. 'map' → logprob: -5.120742321014404
    4. '"' → logprob: -7.745742321014404
    5. '[input' → logprob: -7.870742321014404
    6. ' map' → logprob: -8.120742797851562
    7. ''' → logprob: -8.245742797851562
    8. '""' → logprob: -8.995742797851562
    9. '(input' → logprob: -9.120742797851562
    10. '''' → logprob: -9.745742797851562

Token 30: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27708351612091064
    2. '()' → logprob: -1.5270835161209106
    3. '().' → logprob: -3.902083396911621
    4. '('' → logprob: -6.777083396911621
    5. '("("' → logprob: -7.152083396911621
    6. ')' → logprob: -7.402083396911621
    7. '[' → logprob: -8.152083396911621
    8. '.' → logprob: -8.402083396911621
    9. '`()' → logprob: -8.902083396911621
    10. '```' → logprob: -9.152083396911621

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18152961134910583
    2. 'input' → logprob: -1.8065296411514282
    3. ' ' → logprob: -6.931529521942139
    4. '=input' → logprob: -8.556529998779297
    5. '"' → logprob: -8.806529998779297
    6. '[input' → logprob: -9.306529998779297
    7. ''' → logprob: -9.431529998779297
    8. ' []' → logprob: -9.431529998779297
    9. '(input' → logprob: -10.619029998779297
    10. ' '' → logprob: -10.869029998779297

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.183501293184236e-05
    2. '(' → logprob: -10.37507152557373
    3. '()`' → logprob: -11.62507152557373
    4. '`()' → logprob: -11.62507152557373
    5. '()
' → logprob: -12.25007152557373
    6. '()

' → logprob: -12.37507152557373
    7. ' ()' → logprob: -13.00007152557373
    8. '().' → logprob: -13.25007152557373
    9. '```' → logprob: -13.25007152557373
    10. '(),' → logprob: -13.37507152557373

Token 33: 'positions' (ID: 32297)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017238536849617958
    2. ' 
' → logprob: -5.392238616943359
    3. '=' → logprob: -5.767238616943359
    4. '_' → logprob: -6.392238616943359
    5. '
' → logprob: -6.517238616943359
    6. 'n' → logprob: -6.892238616943359
    7. 'd' → logprob: -7.017238616943359
    8. 's' → logprob: -7.142238616943359
    9. '=
' → logprob: -7.642238616943359
    10. '' → logprob: -7.767238616943359

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741177558898926
    2. '=' → logprob: -0.9741177558898926
    3. ' ' → logprob: -11.224117279052734
    4. '[' → logprob: -11.474117279052734
    5. '_' → logprob: -11.724117279052734
    6. 's' → logprob: -13.099117279052734
    7. '.setdefault' → logprob: -13.474117279052734
    8. '={}' → logprob: -13.849117279052734
    9. '=[]' → logprob: -14.224117279052734
    10. '[:]' → logprob: -14.224117279052734

Token 35: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0889984667301178
    2. ' defaultdict' → logprob: -2.463998556137085
    3. ' default' → logprob: -10.463998794555664
    4. '(default' → logprob: -11.088998794555664
    5. '.default' → logprob: -12.213998794555664
    6. '"default' → logprob: -12.588998794555664
    7. ''default' → logprob: -13.088998794555664
    8. ' ' → logprob: -13.588998794555664
    9. '{' → logprob: -14.338998794555664
    10. 'def' → logprob: -14.713998794555664

Token 36: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0017569332849234343
    2. '(lambda' → logprob: -7.2517571449279785
    3. 'list' → logprob: -7.6267571449279785
    4. '(<' → logprob: -8.12675666809082
    5. '(' → logprob: -8.25175666809082
    6. '(
' → logprob: -13.87675666809082
    7. '```' → logprob: -14.37675666809082
    8. '(set' → logprob: -15.62675666809082
    9. '[list' → logprob: -16.00175666809082
    10. ':list' → logprob: -16.00175666809082

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. '()' → logprob: -10.625045776367188
    3. '())' → logprob: -11.875045776367188
    4. '[' → logprob: -12.000045776367188
    5. ')
' → logprob: -12.500045776367188
    6. ' )' → logprob: -13.000045776367188
    7. '(' → logprob: -14.125045776367188
    8. ')

' → logprob: -14.125045776367188
    9. '))' → logprob: -15.125045776367188
    10. ')`' → logprob: -16.375045776367188

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011035411152988672
    2. ' for' → logprob: -6.876103401184082
    3. '```' → logprob: -10.501103401184082
    4. '
' → logprob: -11.001103401184082
    5. '<|end|>' → logprob: -11.126103401184082
    6. 'For' → logprob: -12.251103401184082
    7. '	for' → logprob: -13.376103401184082
    8. '<|end|>' → logprob: -14.251103401184082
    9. 'newline' → logprob: -14.376103401184082
    10. ' 
' → logprob: -14.376103401184082

Token 39: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13502180576324463
    2. ' c' → logprob: -2.135021686553955
    3. ' idx' → logprob: -5.510021686553955
    4. 'i' → logprob: -6.010021686553955
    5. 'c' → logprob: -7.885021686553955
    6. ' ch' → logprob: -8.010022163391113
    7. ' ' → logprob: -8.135022163391113
    8. ' char' → logprob: -8.260022163391113
    9. ' index' → logprob: -8.885022163391113
    10. 'idx' → logprob: -10.010022163391113

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3811318874359131
    2. ' in' → logprob: -1.381131887435913
    3. 'in' → logprob: -2.756131887435913
    4. ' ,' → logprob: -6.381132125854492
    5. ' ' → logprob: -9.006132125854492
    6. 's' → logprob: -9.256132125854492
    7. ',in' → logprob: -9.881132125854492
    8. '```' → logprob: -10.881132125854492
    9. '_,' → logprob: -11.506132125854492
    10. 'n' → logprob: -12.006132125854492

Token 41: ' char' (ID: 1826)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.4848838746547699
    2. 'c' → logprob: -1.4848839044570923
    3. 'char' → logprob: -1.9848839044570923
    4. ' ch' → logprob: -4.234883785247803
    5. ' c' → logprob: -5.734883785247803
    6. ' char' → logprob: -5.984883785247803
    7. 'letter' → logprob: -10.109884262084961
    8. 'character' → logprob: -11.109884262084961
    9. ' letter' → logprob: -12.359884262084961
    10. 's' → logprob: -12.359884262084961

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014386092312633991
    2. 'in' → logprob: -4.264386177062988
    3. 's' → logprob: -8.889386177062988
    4. '<|end|>' → logprob: -10.014386177062988
    5. ' ' → logprob: -10.514386177062988
    6. '	in' → logprob: -12.639386177062988
    7. ',' → logprob: -12.764386177062988
    8. '<|end|>' → logprob: -13.639386177062988
    9. '```' → logprob: -13.889386177062988
    10. '_in' → logprob: -14.701886177062988

Token 43: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5231462121009827
    2. 'enumer' → logprob: -0.8981462121009827
    3. '```' → logprob: -11.023146629333496
    4. '(en' → logprob: -13.148146629333496
    5. '.enumer' → logprob: -13.898146629333496
    6. 'en' → logprob: -14.023146629333496
    7. 's' → logprob: -14.273146629333496
    8. ' ' → logprob: -15.273146629333496
    9. 'enum' → logprob: -15.398146629333496
    10. ' en' → logprob: -15.523146629333496

Token 44: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.003227740991860628
    2. '(' → logprob: -5.753227710723877
    3. '(s' → logprob: -10.503228187561035
    4. 'S' → logprob: -11.128228187561035
    5. ' (' → logprob: -12.628228187561035
    6. '((' → logprob: -13.628228187561035
    7. ')' → logprob: -13.753228187561035
    8. '(
' → logprob: -15.003228187561035
    9. ' S' → logprob: -15.128228187561035
    10. '(`' → logprob: -15.378228187561035

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005230080569162965
    2. ' ):' → logprob: -8.12552261352539
    3. '):
' → logprob: -9.25052261352539
    4. ')' → logprob: -9.87552261352539
    5. ':' → logprob: -9.87552261352539
    6. '[' → logprob: -11.37552261352539
    7. ']:' → logprob: -11.50052261352539
    8. ' ' → logprob: -13.87552261352539
    9. '   ' → logprob: -13.87552261352539
    10. '):
' → logprob: -14.25052261352539

Token 46: '   ' (ID: 271)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.35192516446113586
    2. '   ' → logprob: -1.2269251346588135
    3. 'positions' → logprob: -5.726925373077393
    4. '.positions' → logprob: -9.476924896240234
    5. '<|end|>' → logprob: -10.476924896240234
    6. '_positions' → logprob: -10.476924896240234
    7. '       ' → logprob: -10.726924896240234
    8. '```' → logprob: -10.726924896240234
    9. ' ' → logprob: -11.351924896240234
    10. '    
' → logprob: -11.726924896240234

Token 47: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.08698906749486923
    2. 'positions' (adapté à ' positions') → logprob: -2.586989164352417
    3. '   ' → logprob: -4.836988925933838
    4. '.positions' → logprob: -10.086989402770996
    5. '_positions' → logprob: -10.211989402770996
    6. '```' → logprob: -10.836989402770996
    7. '       ' → logprob: -11.711989402770996
    8. '    ' → logprob: -11.836989402770996
    9. ' ' → logprob: -12.086989402770996
    10. '<|end|>' → logprob: -12.961989402770996

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'char' → logprob: -14.500000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[c' → logprob: -17.375
    5. '[
' → logprob: -18.0
    6. '][' → logprob: -18.125
    7. ' [' → logprob: -18.25
    8. '<char' → logprob: -18.25
    9. '[S' → logprob: -18.625
    10. '(char' → logprob: -18.875

Token 49: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -6.034592388459714e-06
    2. ' char' → logprob: -12.125005722045898
    3. '<char' → logprob: -14.875005722045898
    4. '(char' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.0000057220459
    6. '	char' → logprob: -17.1250057220459
    7. ')' → logprob: -17.6250057220459
    8. '.char' → logprob: -18.2500057220459
    9. ',char' → logprob: -18.2500057220459
    10. '_char' → logprob: -18.5000057220459

Token 50: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.23304054141044617
    2. '].' → logprob: -1.7330405712127686
    3. ').' → logprob: -3.4830405712127686
    4. '.' → logprob: -8.108040809631348
    5. '.app' → logprob: -10.733040809631348
    6. ' ].' → logprob: -10.858040809631348
    7. '}.' → logprob: -11.108040809631348
    8. ')' → logprob: -11.358040809631348
    9. ' .' → logprob: -11.483040809631348
    10. '   ' → logprob: -11.483040809631348

Token 51: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. '.append' → logprob: -13.500001907348633
    3. ' append' → logprob: -15.125001907348633
    4. 'appen' → logprob: -15.250001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. '_append' → logprob: -16.750001907348633
    7. 'Append' → logprob: -17.250001907348633
    8. '	append' → logprob: -17.625001907348633
    9. 'app' → logprob: -17.875001907348633
    10. 'add' → logprob: -18.625001907348633

Token 52: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'idx' → logprob: -16.00000762939453
    4. ' (' → logprob: -16.25000762939453
    5. '(index' → logprob: -16.75000762939453
    6. ' idx' → logprob: -17.50000762939453
    7. '[idx' → logprob: -17.87500762939453
    8. '	idx' → logprob: -19.00000762939453
    9. ')' → logprob: -19.37500762939453
    10. '(
' → logprob: -20.25000762939453

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.000003814697266
    4. ')

' → logprob: -17.125003814697266
    5. '`)' → logprob: -18.000003814697266
    6. ')
' → logprob: -18.375003814697266
    7. '))' → logprob: -18.625003814697266
    8. ')return' → logprob: -18.875003814697266
    9. ')`' → logprob: -19.000003814697266
    10. '）' → logprob: -19.125003814697266

Token 54: 'if' (ID: 366)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.707465410232544
    2. 'pos' → logprob: -0.832465410232544
    3. 'current' → logprob: -4.082465171813965
    4. 'result' → logprob: -4.832465171813965
    5. 'idx' → logprob: -4.832465171813965
    6. 'last' → logprob: -5.207465171813965
    7. 'index' → logprob: -5.332465171813965
    8. 'answer' → logprob: -5.457465171813965
    9. 'cur' → logprob: -5.707465171813965
    10. 'if' → logprob: -5.707465171813965

Token 55: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7993164658546448
    2. ' len' → logprob: -0.7993164658546448
    3. 'len' → logprob: -3.17431640625
    4. ' T' → logprob: -3.17431640625
    5. 'not' → logprob: -4.29931640625
    6. ' S' → logprob: -6.54931640625
    7. 'T' → logprob: -6.67431640625
    8. ' ' → logprob: -8.42431640625
    9. ' char' → logprob: -8.92431640625
    10. 'char' → logprob: -9.04931640625

Token 56: '(not' (ID: 44576)
  Prédit: '(char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.23585854470729828
    2. '(c' → logprob: -1.6108585596084595
    3. '(' → logprob: -4.98585844039917
    4. '(lambda' → logprob: -6.11085844039917
    5. '(len' → logprob: -7.73585844039917
    6. '(ch' → logprob: -7.86085844039917
    7. 'char' → logprob: -8.860858917236328
    8. '((' → logprob: -9.110858917236328
    9. ' (' → logprob: -9.610858917236328
    10. '(pos' → logprob: -9.985858917236328

Token 57: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.18003500998020172
    2. ' positions' → logprob: -1.8050349950790405
    3. 'pos' → logprob: -8.555034637451172
    4. ' c' → logprob: -11.055034637451172
    5. 'char' → logprob: -11.055034637451172
    6. 'c' → logprob: -11.430034637451172
    7. ' pos' → logprob: -11.555034637451172
    8. ' ' → logprob: -12.242534637451172
    9. 'p' → logprob: -12.242534637451172
    10. '_positions' → logprob: -12.242534637451172

Token 58: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.08045239001512527
    2. '[' → logprob: -3.2054524421691895
    3. '[ch' → logprob: -3.3304524421691895
    4. '[t' → logprob: -7.4554524421691895
    5. '[x' → logprob: -9.580451965332031
    6. '.get' → logprob: -9.705451965332031
    7. '[token' → logprob: -10.205451965332031
    8. '[_' → logprob: -10.205451965332031
    9. 'c' → logprob: -10.580451965332031
    10. '[T' → logprob: -10.705451965332031

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006297559011727571
    2. ' for' → logprob: -8.125629425048828
    3. '])' → logprob: -8.875629425048828
    4. 'for' → logprob: -9.125629425048828
    5. ' ]' → logprob: -10.750629425048828
    6. ')' → logprob: -10.750629425048828
    7. '']' → logprob: -11.625629425048828
    8. 'r' → logprob: -12.500629425048828
    9. 'or' → logprob: -12.625629425048828
    10. 's' → logprob: -12.750629425048828

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1151706650853157
    2. 'for' → logprob: -2.24017071723938
    3. ')' → logprob: -6.115170478820801
    4. ' ' → logprob: -9.1151704788208
    5. '	for' → logprob: -11.9901704788208
    6. ' )' → logprob: -12.3651704788208
    7. ' or' → logprob: -12.7401704788208
    8. ' if' → logprob: -13.2401704788208
    9. ']' → logprob: -13.3651704788208
    10. '[' → logprob: -13.4901704788208

Token 61: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31328698992729187
    2. 'c' → logprob: -1.3132870197296143
    3. ' ' → logprob: -11.563286781311035
    4. '	c' → logprob: -12.438286781311035
    5. 'char' → logprob: -12.688286781311035
    6. 'T' → logprob: -13.500786781311035
    7. ')c' → logprob: -13.500786781311035
    8. ' ' → logprob: -13.875786781311035
    9. ' T' → logprob: -14.875786781311035
    10. '_c' → logprob: -14.938286781311035

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038127098232507706
    2. 'in' → logprob: -3.2881271839141846
    3. ' ' → logprob: -10.038126945495605
    4. 'T' → logprob: -11.038126945495605
    5. ' T' → logprob: -11.288126945495605
    6. 's' → logprob: -12.288126945495605
    7. '  ' → logprob: -13.163126945495605
    8. 'In' → logprob: -14.100626945495605
    9. ')' → logprob: -14.225626945495605
    10. 'import' → logprob: -14.538126945495605

Token 63: ' set' (ID: 920)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.1603393852710724
    2. 'T' → logprob: -1.91033935546875
    3. ' ' → logprob: -9.41033935546875
    4. ' set' → logprob: -11.03533935546875
    5. ')' → logprob: -12.16033935546875
    6. ' ascii' → logprob: -12.91033935546875
    7. 'set' → logprob: -13.47283935546875
    8. ' ' → logprob: -14.09783935546875
    9. ' range' → logprob: -14.47283935546875
    10. '	T' → logprob: -14.47283935546875

Token 64: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.019274543970823288
    2. 'T' → logprob: -4.019274711608887
    3. ' T' → logprob: -7.269274711608887
    4. '(' → logprob: -8.144274711608887
    5. ' (' → logprob: -9.269274711608887
    6. '(t' → logprob: -11.144274711608887
    7. ')' → logprob: -11.269274711608887
    8. ' of' → logprob: -13.019274711608887
    9. ' ' → logprob: -13.519274711608887
    10. '_T' → logprob: -13.706774711608887

Token 65: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.16226856410503387
    2. '):' → logprob: -2.28726863861084
    3. ')' → logprob: -3.16226863861084
    4. ')):
' → logprob: -5.66226863861084
    5. '))' → logprob: -6.66226863861084
    6. ' ):' → logprob: -7.53726863861084
    7. ')):
' → logprob: -8.16226863861084
    8. '):
' → logprob: -8.91226863861084
    9. ' ))' → logprob: -9.66226863861084
    10. ']):' → logprob: -10.28726863861084

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2010345160961151
    2. ' exit' → logprob: -1.8260345458984375
    3. 'exit' → logprob: -4.2010345458984375
    4. '	exit' → logprob: -5.9510345458984375
    5. '(exit' → logprob: -6.9510345458984375
    6. '    ' → logprob: -7.7010345458984375
    7. '    
' → logprob: -7.8260345458984375
    8. '```' → logprob: -7.8260345458984375
    9. ' print' → logprob: -8.076034545898438
    10. '
' → logprob: -8.951034545898438

Token 67: ' print' (ID: 2123)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.7817347049713135
    2. 'exit' → logprob: -1.0317347049713135
    3. 'print' (adapté à ' print') → logprob: -2.2817347049713135
    4. ' print' → logprob: -2.5317347049713135
    5. ' 
' → logprob: -6.031734466552734
    6. '   ' → logprob: -7.406734466552734
    7. '	exit' → logprob: -7.781734466552734
    8. '```' → logprob: -8.406734466552734
    9. '    
' → logprob: -9.031734466552734
    10. '(exit' → logprob: -9.531734466552734

Token 68: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.005857924465090036
    2. '(' → logprob: -5.255857944488525
    3. '-' → logprob: -7.630857944488525
    4. '("-' → logprob: -9.130857467651367
    5. '(
' → logprob: -11.130857467651367
    6. '('-' → logprob: -12.005857467651367
    7. ' (-' → logprob: -13.505857467651367
    8. '```' → logprob: -13.755857467651367
    9. '`' → logprob: -13.880857467651367
    10. ' -' → logprob: -14.005857467651367

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -16.75
    4. '2' → logprob: -19.0
    5. '11' → logprob: -19.125
    6. '`' → logprob: -19.4375
    7. '１' → logprob: -19.6875
    8. '۱' → logprob: -19.75
    9. '``' → logprob: -19.75
    10. '}' → logprob: -20.5625

Token 70: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10037542134523392
    2. ')' → logprob: -2.3503754138946533
    3. ')
' → logprob: -8.725375175476074
    4. ' )
' → logprob: -12.600375175476074
    5. ')return' → logprob: -13.725375175476074
    6. ' )' → logprob: -14.350375175476074
    7. ')

' → logprob: -14.850375175476074
    8. ')`
' → logprob: -14.975375175476074
    9. '   ' → logprob: -15.725375175476074
    10. '')
' → logprob: -15.975375175476074

Token 71: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23939508199691772
    2. '
' → logprob: -2.4893951416015625
    3. '   ' → logprob: -3.1143951416015625
    4. ' else' → logprob: -3.3643951416015625
    5. 'exit' → logprob: -3.8643951416015625
    6. ')' → logprob: -3.9893951416015625
    7. '```' → logprob: -5.6143951416015625
    8. ' exit' → logprob: -6.6143951416015625
    9. '    
' → logprob: -6.8643951416015625
    10. '	exit' → logprob: -7.1143951416015625

Token 72: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.08683781325817108
    2. 'else' → logprob: -3.3368377685546875
    3. ' exit' → logprob: -3.5868377685546875
    4. ')' → logprob: -4.5868377685546875
    5. '	exit' → logprob: -5.5868377685546875
    6. '
' → logprob: -5.9618377685546875
    7. '   ' → logprob: -6.7118377685546875
    8. ' else' → logprob: -7.5868377685546875
    9. '(exit' → logprob: -7.7118377685546875
    10. '```' → logprob: -8.211837768554688

Token 73: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39977362751960754
    2. '()
' → logprob: -1.1497735977172852
    3. '()

' → logprob: -5.149773597717285
    4. '(' → logprob: -5.524773597717285
    5. '(
' → logprob: -6.149773597717285
    6. '()\' → logprob: -7.899773597717285
    7. '0' → logprob: -8.649773597717285
    8. '
' → logprob: -8.649773597717285
    9. '()
' → logprob: -9.649773597717285
    10. '()`' → logprob: -10.524773597717285

Token 74: 'id' (ID: 315)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8859297037124634
    2. 'answer' → logprob: -2.010929584503174
    3. 'ans' → logprob: -2.385929584503174
    4. 'count' → logprob: -2.510929584503174
    5. 'prev' → logprob: -2.635929584503174
    6. 'result' → logprob: -2.635929584503174
    7. 'res' → logprob: -2.760929584503174
    8. 'current' → logprob: -3.635929584503174
    9. 'length' → logprob: -4.135929584503174
    10. 'idx' → logprob: -4.135929584503174

Token 75: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1041145626222715e-05
    2. '=' → logprob: -11.875011444091797
    3. ' =' → logprob: -13.625011444091797
    4. 'xes' → logprob: -14.000011444091797
    5. '_' → logprob: -14.250011444091797
    6. '_=' → logprob: -14.750011444091797
    7. 's' → logprob: -15.250011444091797
    8. 'xs' → logprob: -15.500011444091797
    9. '_pos' → logprob: -16.125011444091797
    10. 'xr' → logprob: -17.125011444091797

Token 76: ' ans' (ID: 3345)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.8684038519859314
    2. ' ans' → logprob: -2.243403911590576
    3. 'pos' → logprob: -2.368403911590576
    4. ' ' → logprob: -2.493403911590576
    5. ' count' → logprob: -2.868403911590576
    6. ' prev' → logprob: -2.868403911590576
    7. ' -' → logprob: -3.243403911590576
    8. '0' → logprob: -3.243403911590576
    9. ' length' → logprob: -3.743403911590576
    10. 'count' → logprob: -3.993403911590576

Token 77: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859793186187744
    2. '=' → logprob: -3.048597812652588
    3. ',' → logprob: -12.298598289489746
    4. ' ' → logprob: -12.673598289489746
    5. 's' → logprob: -14.048598289489746
    6. '  ' → logprob: -14.548598289489746
    7. 'space' → logprob: -14.548598289489746
    8. ' ,' → logprob: -15.298598289489746
    9. '<|end|>' → logprob: -15.923598289489746
    10. ' ' → logprob: -16.17359733581543

Token 78: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9412958025932312
    2. '0' → logprob: -1.066295862197876
    3. ' =' → logprob: -1.691295862197876
    4. '=' → logprob: -3.191295862197876
    5. 'pos' → logprob: -4.316295623779297
    6. ' len' → logprob: -5.316295623779297
    7. 'len' → logprob: -5.441295623779297
    8. '1' → logprob: -5.441295623779297
    9. ' pos' → logprob: -6.066295623779297
    10. 'count' → logprob: -6.566295623779297

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42877131700515747
    2. '=' → logprob: -1.0537712574005127
    3. ',' → logprob: -9.803771018981934
    4. '=int' → logprob: -12.178771018981934
    5. '<|end|>' → logprob: -12.678771018981934
    6. ' ' → logprob: -13.678771018981934
    7. '  ' → logprob: -13.678771018981934
    8. '=len' → logprob: -13.928771018981934
    9. 'space' → logprob: -14.303771018981934
    10. 's' → logprob: -14.303771018981934

Token 80: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1449960470199585
    2. '-' → logprob: -2.019996166229248
    3. ' -' → logprob: -6.644996166229248
    4. ' ' → logprob: -6.894996166229248
    5. 'len' → logprob: -12.64499568939209
    6. '−' → logprob: -15.01999568939209
    7. '=' → logprob: -15.14499568939209
    8. '   ' → logprob: -15.64499568939209
    9. '1' → logprob: -16.207496643066406
    10. 'n' → logprob: -16.457496643066406

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. 'len' → logprob: -9.62507152557373
    3. ' ' → logprob: -12.50007152557373
    4. '2' → logprob: -15.25007152557373
    5. ' len' → logprob: -15.62507152557373
    6. '100' → logprob: -16.000070571899414
    7. '(len' → logprob: -16.062570571899414
    8. '10' → logprob: -16.312570571899414
    9. '```' → logprob: -16.750070571899414
    10. '0' → logprob: -16.812570571899414

Token 82: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4635227620601654
    2. ',' → logprob: -1.8385227918624878
    3. 'len' → logprob: -1.8385227918624878
    4. ' len' → logprob: -3.5885226726531982
    5. ',len' → logprob: -4.338522911071777
    6. ' ' → logprob: -5.463522911071777
    7. '+' → logprob: -5.588522911071777
    8. ' ,' → logprob: -5.963522911071777
    9. '=len' → logprob: -7.838522911071777
    10. '(len' → logprob: -7.963522911071777

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1564435511827469
    2. '1' → logprob: -2.4064435958862305
    3. ' ' → logprob: -2.9064435958862305
    4. 'len' → logprob: -11.65644359588623
    5. ' len' → logprob: -13.46894359588623
    6. '2' → logprob: -14.46894359588623
    7. '<|end|>' → logprob: -14.46894359588623
    8. '```' → logprob: -14.84394359588623
    9. '  ' → logprob: -15.28144359588623
    10. '-' → logprob: -15.34394359588623

Token 84: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08902954310178757
    2. '0' → logprob: -2.464029550552368
    3. ' ' → logprob: -9.464029312133789
    4. 'len' → logprob: -11.464029312133789
    5. '2' → logprob: -15.151529312133789
    6. '-' → logprob: -15.964029312133789
    7. '=' → logprob: -16.21402931213379
    8. ' ' → logprob: -16.27652931213379
    9. '```' → logprob: -16.27652931213379
    10. ' len' → logprob: -16.27652931213379

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03470591828227043
    2. ',len' → logprob: -3.534705877304077
    3. '
' → logprob: -5.909706115722656
    4. ',n' → logprob: -6.534706115722656
    5. ',
' → logprob: -8.659706115722656
    6. 'len' → logprob: -9.159706115722656
    7. ',length' → logprob: -9.159706115722656
    8. ' ,' → logprob: -9.659706115722656
    9. 'for' → logprob: -9.659706115722656
    10. '0' → logprob: -9.659706115722656

Token 86: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10021518170833588
    2. ' len' → logprob: -2.350215196609497
    3. '(len' → logprob: -12.725214958190918
    4. '[len' → logprob: -12.975214958190918
    5. '<|end|>' → logprob: -13.475214958190918
    6. '=len' → logprob: -13.850214958190918
    7. ' ' → logprob: -14.475214958190918
    8. '	len' → logprob: -15.850214958190918
    9. '<len' → logprob: -15.975214958190918
    10. ',len' → logprob: -16.350215911865234

Token 87: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -2.3080716346157715e-05
    2. 'S' → logprob: -10.875022888183594
    3. '(' → logprob: -12.500022888183594
    4. 's' → logprob: -15.750022888183594
    5. '(s' → logprob: -16.000022888183594
    6. ')' → logprob: -16.875022888183594
    7. '<|end|>' → logprob: -17.750022888183594
    8. '(T' → logprob: -18.250022888183594
    9. '```' → logprob: -18.375022888183594
    10. '()' → logprob: -18.500022888183594

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013917774776928127
    2. ')
' → logprob: -9.125139236450195
    3. ' )' → logprob: -11.000139236450195
    4. ')

' → logprob: -12.250139236450195
    5. '<|end|>' → logprob: -12.375139236450195
    6. '')' → logprob: -14.000139236450195
    7. '`)' → logprob: -14.500139236450195
    8. '),' → logprob: -14.500139236450195
    9. '[' → logprob: -15.125139236450195
    10. '<|end|>' → logprob: -15.250139236450195

Token 89: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021103711798787117
    2. ' for' → logprob: -3.896103620529175
    3. '
' → logprob: -8.646103858947754
    4. '```' → logprob: -8.771103858947754
    5. '\n' → logprob: -9.396103858947754
    6. '<|end|>' → logprob: -9.521103858947754
    7. ' 
' → logprob: -10.021103858947754
    8. '\' → logprob: -11.521103858947754
    9. ' ' → logprob: -12.396103858947754
    10. '  
' → logprob: -12.646103858947754

Token 90: ' c' (ID: 274)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.832976758480072
    2. 'c' → logprob: -0.957976758480072
    3. ' c' → logprob: -2.207976818084717
    4. ' char' → logprob: -2.707976818084717
    5. 'ch' → logprob: -5.957976818084717
    6. 't' → logprob: -6.457976818084717
    7. ' t' → logprob: -7.957976818084717
    8. ' ch' → logprob: -8.457976341247559
    9. 'i' → logprob: -9.207976341247559
    10. ' ' → logprob: -10.457976341247559

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012798273004591465
    2. 'in' → logprob: -4.387798309326172
    3. ' ' → logprob: -8.262798309326172
    4. 's' → logprob: -11.637798309326172
    5. '  ' → logprob: -12.387798309326172
    6. 'T' → logprob: -12.762798309326172
    7. '_in' → logprob: -13.137798309326172
    8. '	in' → logprob: -13.387798309326172
    9. 'i' → logprob: -13.762798309326172
    10. ':' → logprob: -13.825298309326172

Token 92: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.02976241149008274
    2. 'T' → logprob: -3.5297625064849854
    3. ' ' → logprob: -11.529762268066406
    4. '(T' → logprob: -14.404762268066406
    5. ' ' → logprob: -14.654762268066406
    6. '	T' → logprob: -15.717262268066406
    7. '  ' → logprob: -15.967262268066406
    8. ' range' → logprob: -16.342262268066406
    9. '_T' → logprob: -16.592262268066406
    10. '(' → logprob: -16.717262268066406

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024739265791140497
    2. ' :' → logprob: -8.50024700164795
    3. ':
' → logprob: -10.12524700164795
    4. '):' → logprob: -13.37524700164795
    5. ':**' → logprob: -14.25024700164795
    6. '>:' → logprob: -14.75024700164795
    7. ',' → logprob: -15.75024700164795
    8. ' in' → logprob: -15.87524700164795
    9. ':

' → logprob: -16.125247955322266
    10. ''s' → logprob: -16.375247955322266

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4108775556087494
    2. ' pos' → logprob: -2.4108774662017822
    3. ' idx' → logprob: -2.5358774662017822
    4. 'pos' → logprob: -3.0358774662017822
    5. '```' → logprob: -3.2858774662017822
    6. 'idx' → logprob: -3.9108774662017822
    7. ' i' → logprob: -4.035877704620361
    8. '    ' → logprob: -4.410877704620361
    9. '    
' → logprob: -5.410877704620361
    10. ' ' → logprob: -5.410877704620361

Token 95: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.28865179419517517
    2. 'indices' → logprob: -2.413651704788208
    3. 'positions' → logprob: -2.913651704788208
    4. 'idx' (adapté à ' idx') → logprob: -2.913651704788208
    5. '   ' → logprob: -4.788651943206787
    6. ' indices' → logprob: -4.913651943206787
    7. ' positions' → logprob: -5.038651943206787
    8. ' pos' → logprob: -5.163651943206787
    9. 'indexes' → logprob: -5.288651943206787
    10. '```' → logprob: -5.538651943206787

Token 96: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3881622850894928
    2. ' =' → logprob: -1.2631622552871704
    3. '_list' → logprob: -3.76316237449646
    4. 's' → logprob: -4.388162136077881
    5. 'list' → logprob: -6.888162136077881
    6. 'ist' → logprob: -7.388162136077881
    7. 'x' → logprob: -7.638162136077881
    8. '_positions' → logprob: -8.263162612915039
    9. 'positions' → logprob: -8.638162612915039
    10. '_lists' → logprob: -9.263162612915039

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303669437766075
    2. '=' → logprob: -3.651303768157959
    3. ' ' → logprob: -13.4013032913208
    4. '<|end|>' → logprob: -14.0263032913208
    5. ',' → logprob: -15.0263032913208
    6. ')' → logprob: -15.9013032913208
    7. 's' → logprob: -16.151304244995117
    8. '<|end|>' → logprob: -16.776304244995117
    9. '   ' → logprob: -16.901304244995117
    10. '```' → logprob: -16.901304244995117

Token 98: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.038044244050979614
    2. ' positions' → logprob: -3.2880442142486572
    3. 'position' → logprob: -14.163043975830078
    4. '_positions' → logprob: -14.538043975830078
    5. '.positions' → logprob: -14.788043975830078
    6. '   ' → logprob: -15.163043975830078
    7. 'Positions' → logprob: -15.538043975830078
    8. 'pos' → logprob: -15.663043975830078
    9. 'locations' → logprob: -16.288043975830078
    10. ' posiciones' → logprob: -16.413043975830078

Token 99: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.512236498361744e-07
    2. 'c' → logprob: -15.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '```' → logprob: -19.0
    5. ' [' → logprob: -19.125
    6. '[
' → logprob: -19.5
    7. 'char' → logprob: -20.25
    8. '   ' → logprob: -20.875
    9. '[ch' → logprob: -21.125
    10. '
' → logprob: -21.25

Token 100: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2047242373228073
    2. ']' → logprob: -1.7047241926193237
    3. ']
' → logprob: -5.829724311828613
    4. ']

' → logprob: -8.829724311828613
    5. ' ]
' → logprob: -8.829724311828613
    6. ' ]' → logprob: -10.204724311828613
    7. '   ' → logprob: -11.454724311828613
    8. ')
' → logprob: -12.079724311828613
    9. ')' → logprob: -12.204724311828613
    10. '
' → logprob: -12.704724311828613

Token 101: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4549938440322876
    2. 'i' → logprob: -1.3299938440322876
    3. '   ' → logprob: -2.704993724822998
    4. ' i' → logprob: -4.204993724822998
    5. ' pos' → logprob: -4.704993724822998
    6. 'idx' → logprob: -5.454993724822998
    7. '```' → logprob: -5.829993724822998
    8. 'next' → logprob: -7.204993724822998
    9. 'ind' → logprob: -7.454993724822998
    10. '    
' → logprob: -7.954993724822998

Token 102: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10436531901359558
    2. 'i' (adapté à ' i') → logprob: -2.354365348815918
    3. ' pos' → logprob: -6.979365348815918
    4. '   ' → logprob: -7.229365348815918
    5. 'p' → logprob: -7.479365348815918
    6. ' i' → logprob: -7.604365348815918
    7. 'idx' → logprob: -7.604365348815918
    8. 'next' → logprob: -8.479365348815918
    9. 'j' → logprob: -8.479365348815918
    10. 'ind' → logprob: -8.604365348815918

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26802995800971985
    2. '=' → logprob: -1.5180299282073975
    3. 'dx' → logprob: -4.518030166625977
    4. 'd' → logprob: -5.768030166625977
    5. 'x' → logprob: -7.018030166625977
    6. 'nd' → logprob: -7.018030166625977
    7. '   ' → logprob: -9.643030166625977
    8. ' ' → logprob: -10.643030166625977
    9. 'n' → logprob: -11.143030166625977
    10. '_' → logprob: -12.143030166625977

Token 104: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0006271334132179618
    2. ' bis' → logprob: -7.375627040863037
    3. 'b' → logprob: -15.125627517700195
    4. '0' → logprob: -16.000627517700195
    5. 'bi' → logprob: -16.000627517700195
    6. '	b' → logprob: -17.000627517700195
    7. ' ' → logprob: -17.375627517700195
    8. '   ' → logprob: -17.500627517700195
    9. 'bs' → logprob: -17.500627517700195
    10. '(b' → logprob: -19.500627517700195

Token 105: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3151421844959259
    2. 'ect' → logprob: -1.3151421546936035
    3. 'sect' → logprob: -6.3151421546936035
    4. 'cet' → logprob: -11.440142631530762
    5. 't' → logprob: -11.565142631530762
    6. 'c' → logprob: -11.565142631530762
    7. 'ce' → logprob: -12.315142631530762
    8. '_right' → logprob: -12.565142631530762
    9. 'с' → logprob: -12.565142631530762
    10. 'cut' → logprob: -12.565142631530762

Token 106: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.1054253011243418e-05
    2. '_left' → logprob: -12.125020980834961
    3. 'right' → logprob: -12.500020980834961
    4. 'Right' → logprob: -12.500020980834961
    5. '_RIGHT' → logprob: -13.250020980834961
    6. '_' → logprob: -13.750020980834961
    7. '_positions' → logprob: -14.000020980834961
    8. '```' → logprob: -14.250020980834961
    9. 'i' → logprob: -14.625020980834961
    10. '_Right' → logprob: -14.625020980834961

Token 107: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -9.758300438988954e-05
    2. '(id' → logprob: -9.625097274780273
    3. '(' → logprob: -10.625097274780273
    4. 'idx' → logprob: -13.250097274780273
    5. '[idx' → logprob: -13.250097274780273
    6. '(i' → logprob: -13.375097274780273
    7. ' (' → logprob: -13.875097274780273
    8. ' idx' → logprob: -14.250097274780273
    9. '(
' → logprob: -15.500097274780273
    10. '	idx' → logprob: -16.500097274780273

Token 108: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.994086627149954e-05
    2. 's' → logprob: -9.875080108642578
    3. 'list' → logprob: -11.625080108642578
    4. '(idx' → logprob: -12.125080108642578
    5. 'List' → logprob: -12.250080108642578
    6. '[idx' → logprob: -12.625080108642578
    7. 'ist' → logprob: -13.750080108642578
    8. 'idx' → logprob: -13.750080108642578
    9. 'st' → logprob: -14.000080108642578
    10. ')' → logprob: -14.000080108642578

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057649530470371246
    2. '(id' → logprob: -3.432649612426758
    3. '(idx' → logprob: -4.307649612426758
    4. ',id' → logprob: -4.932649612426758
    5. ' ,' → logprob: -7.057649612426758
    6. '(' → logprob: -7.182649612426758
    7. ',(' → logprob: -7.307649612426758
    8. ' (' → logprob: -7.432649612426758
    9. '(i' → logprob: -9.307649612426758
    10. '(ids' → logprob: -11.182649612426758

Token 110: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.020543057471513748
    2. ' id' → logprob: -3.895543098449707
    3. '(id' → logprob: -15.395543098449707
    4. ')' → logprob: -15.520543098449707
    5. ' ' → logprob: -15.770543098449707
    6. '_id' → logprob: -16.02054214477539
    7. '"id' → logprob: -16.39554214477539
    8. '	id' → logprob: -16.64554214477539
    9. '[id' → logprob: -16.64554214477539
    10. ''id' → logprob: -16.89554214477539

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761139988899231
    2. ')
' → logprob: -0.8261139988899231
    3. ')
' → logprob: -9.4511137008667
    4. '   ' → logprob: -9.5761137008667
    5. ' )
' → logprob: -11.9511137008667
    6. ')

' → logprob: -12.3261137008667
    7. ' )' → logprob: -12.4511137008667
    8. ')`
' → logprob: -12.4511137008667
    9. ')+' → logprob: -12.7011137008667
    10. ')`' → logprob: -13.4511137008667

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012016603723168373
    2. '```' → logprob: -5.387016773223877
    3. ' if' → logprob: -5.887016773223877
    4. '    
' → logprob: -6.262016773223877
    5. 'if' → logprob: -6.887016773223877
    6. '
' → logprob: -7.637016773223877
    7. '  
' → logprob: -7.887016773223877
    8. '<|end|>' → logprob: -8.637016296386719
    9. '\n' → logprob: -8.887016296386719
    10. '``' → logprob: -9.137016296386719

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5516303181648254
    2. '   ' → logprob: -1.5516302585601807
    3. ' if' → logprob: -1.5516302585601807
    4. ' ' → logprob: -9.301630020141602
    5. '```' → logprob: -9.926630020141602
    6. '    
' → logprob: -11.551630020141602
    7. '
' → logprob: -11.676630020141602
    8. '    ' → logprob: -11.801630020141602
    9. '	if' → logprob: -12.176630020141602
    10. '  ' → logprob: -12.176630020141602

Token 114: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0891432836651802
    2. 'i' → logprob: -2.4641432762145996
    3. ' ' → logprob: -8.589143753051758
    4. '   ' → logprob: -11.839143753051758
    5. '  ' → logprob: -12.339143753051758
    6. '	i' → logprob: -13.464143753051758
    7. '(i' → logprob: -13.839143753051758
    8. ' ' → logprob: -14.339143753051758
    9. 'len' → logprob: -14.339143753051758
    10. '
' → logprob: -14.464143753051758

Token 115: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02981286123394966
    2. ' ==' → logprob: -3.529812812805176
    3. '<|end|>' → logprob: -11.029812812805176
    4. '>=' → logprob: -11.404812812805176
    5. ']==' → logprob: -11.404812812805176
    6. '=' → logprob: -11.654812812805176
    7. '==
' → logprob: -12.029812812805176
    8. ')==' → logprob: -12.279812812805176
    9. '===' → logprob: -14.029812812805176
    10. ')' → logprob: -14.404812812805176

Token 116: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.954393079970032e-05
    2. '0' → logprob: -10.500049591064453
    3. ' len' → logprob: -10.750049591064453
    4. ' ' → logprob: -15.250049591064453
    5. '=len' → logprob: -15.750049591064453
    6. '   ' → logprob: -16.625049591064453
    7. '(len' → logprob: -17.250049591064453
    8. '	len' → logprob: -17.500049591064453
    9. '[len' → logprob: -18.375049591064453
    10. '<len' → logprob: -18.625049591064453

Token 117: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -4.4849443838757e-06
    2. 'idx' → logprob: -12.750004768371582
    3. '(' → logprob: -13.750004768371582
    4. '(i' → logprob: -16.125003814697266
    5. '[idx' → logprob: -16.625003814697266
    6. '(
' → logprob: -17.125003814697266
    7. '(id' → logprob: -17.375003814697266
    8. ' idx' → logprob: -17.750003814697266
    9. '```' → logprob: -18.000003814697266
    10. ' (' → logprob: -18.250003814697266

Token 118: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. 'list' → logprob: -13.37500286102295
    3. 'List' → logprob: -14.00000286102295
    4. '_idx' → logprob: -16.375001907348633
    5. '_lst' → logprob: -16.625001907348633
    6. '_LIST' → logprob: -17.250001907348633
    7. '_' → logprob: -17.250001907348633
    8. 'ist' → logprob: -17.375001907348633
    9. ')' → logprob: -17.875001907348633
    10. '_)' → logprob: -18.250001907348633

Token 119: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38708266615867615
    2. '):' → logprob: -1.1370826959609985
    3. '):
' → logprob: -9.762083053588867
    4. ':' → logprob: -10.137083053588867
    5. ' ):
' → logprob: -10.512083053588867
    6. '   ' → logprob: -10.637083053588867
    7. ' ):' → logprob: -10.887083053588867
    8. '):

' → logprob: -10.887083053588867
    9. ':
' → logprob: -11.387083053588867
    10. ')' → logprob: -11.887083053588867

Token 120: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02487429790198803
    2. '       ' → logprob: -4.524874210357666
    3. ' ans' → logprob: -4.524874210357666
    4. 'ans' → logprob: -6.524874210357666
    5. '
' → logprob: -6.649874210357666
    6. '	ans' → logprob: -9.274874687194824
    7. '```' → logprob: -10.649874687194824
    8. '(ans' → logprob: -12.149874687194824
    9. '    
' → logprob: -12.399874687194824
    10. 'n' → logprob: -13.774874687194824

Token 121: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00018196819291915745
    2. '   ' → logprob: -9.250182151794434
    3. ' ans' → logprob: -10.000182151794434
    4. '
' → logprob: -10.375182151794434
    5. '	ans' → logprob: -12.000182151794434
    6. '```' → logprob: -13.750182151794434
    7. '``' → logprob: -14.250182151794434
    8. 'answer' → logprob: -14.375182151794434
    9. '       ' → logprob: -14.875182151794434
    10. '(ans' → logprob: -15.500182151794434

Token 122: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38703829050064087
    2. '+=' → logprob: -1.137038230895996
    3. '```' → logprob: -9.137038230895996
    4. ']+=' → logprob: -10.887038230895996
    5. '+' → logprob: -11.137038230895996
    6. '    ' → logprob: -11.512038230895996
    7. '   ' → logprob: -12.262038230895996
    8. ' ' → logprob: -13.262038230895996
    9. '=' → logprob: -13.512038230895996
    10. ')' → logprob: -14.012038230895996

Token 123: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.611219048500061
    2. '1' → logprob: -0.986219048500061
    3. ' n' → logprob: -2.4862189292907715
    4. ' ' → logprob: -6.9862189292907715
    5. '(n' → logprob: -9.36121940612793
    6. ' (' → logprob: -10.86121940612793
    7. '
' → logprob: -11.48621940612793
    8. '  ' → logprob: -11.86121940612793
    9. '   ' → logprob: -11.86121940612793
    10. 'len' → logprob: -11.98621940612793

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027524802833795547
    2. '-' → logprob: -3.902524709701538
    3. ' -' → logprob: -5.402524948120117
    4. '       ' → logprob: -6.777524948120117
    5. 'id' → logprob: -7.527524948120117
    6. '   ' → logprob: -8.652524948120117
    7. 'idx' → logprob: -8.902524948120117
    8. '
' → logprob: -9.402524948120117
    9. '           ' → logprob: -10.027524948120117
    10. '-id' → logprob: -10.027524948120117

Token 125: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3674193024635315
    2. '       ' → logprob: -1.7424192428588867
    3. 'id' → logprob: -2.1174192428588867
    4. '   ' → logprob: -4.492419242858887
    5. '
' → logprob: -8.492419242858887
    6. 'idx' → logprob: -8.742419242858887
    7. '           ' → logprob: -8.992419242858887
    8. '```' → logprob: -9.117419242858887
    9. ' id' → logprob: -9.617419242858887
    10. '        
' → logprob: -9.992419242858887

Token 126: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.4301653504371643
    2. 'i' → logprob: -1.0551652908325195
    3. 'idx' → logprob: -6.8051652908325195
    4. '       ' → logprob: -8.68016529083252
    5. 'ans' → logprob: -9.68016529083252
    6. '   ' → logprob: -10.05516529083252
    7. '
' → logprob: -10.55516529083252
    8. '           ' → logprob: -11.18016529083252
    9. ' i' → logprob: -11.30516529083252
    10. '        
' → logprob: -11.80516529083252

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690149784088135
    2. ' =' → logprob: -1.1369014978408813
    3. 'x' → logprob: -10.76190185546875
    4. ',' → logprob: -12.01190185546875
    5. '0' → logprob: -13.51190185546875
    6. ' ' → logprob: -14.88690185546875
    7. 'idx' → logprob: -15.63690185546875
    8. '=
' → logprob: -15.76190185546875
    9. 's' → logprob: -15.88690185546875
    10. '2' → logprob: -16.01190185546875

Token 128: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.862962229410186e-05
    2. ' idx' → logprob: -10.125078201293945
    3. '-' → logprob: -10.625078201293945
    4. '0' → logprob: -11.750078201293945
    5. 'positions' → logprob: -12.875078201293945
    6. '	idx' → logprob: -13.625078201293945
    7. 'pos' → logprob: -14.250078201293945
    8. '   ' → logprob: -14.500078201293945
    9. '[idx' → logprob: -14.500078201293945
    10. 'index' → logprob: -15.750078201293945

Token 129: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004886108450591564
    2. 'x' → logprob: -5.504886150360107
    3. 'idx' → logprob: -7.879886150360107
    4. 'list' → logprob: -8.87988567352295
    5. 'ist' → logprob: -9.00488567352295
    6. '_idx' → logprob: -9.62988567352295
    7. 'List' → logprob: -10.25488567352295
    8. 'lst' → logprob: -10.75488567352295
    9. '[idx' → logprob: -11.37988567352295
    10. '-' → logprob: -11.50488567352295

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859134554862976
    2. '0' → logprob: -3.048591375350952
    3. '[i' → logprob: -13.298591613769531
    4. ' ' → logprob: -13.798591613769531
    5. '[
' → logprob: -14.548591613769531
    6. '```' → logprob: -15.423591613769531
    7. ' [' → logprob: -15.548591613769531
    8. '
' → logprob: -15.798591613769531
    9. 'First' → logprob: -17.17359161376953
    10. '   ' → logprob: -17.42359161376953

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '[' → logprob: -17.375001907348633
    5. '00' → logprob: -19.000001907348633
    6. '```' → logprob: -19.500001907348633
    7. '000' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.250001907348633
    9. '۰' → logprob: -20.375001907348633
    10. '０' → logprob: -20.625001907348633

Token 132: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0779378414154053
    2. '<|end|>' → logprob: -1.0779378414154053
    3. ']' → logprob: -1.2029378414154053
    4. ']+' → logprob: -5.202938079833984
    5. '])' → logprob: -5.577938079833984
    6. ' )' → logprob: -6.077938079833984
    7. '
' → logprob: -6.202938079833984
    8. '}' → logprob: -6.577938079833984
    9. '<|end|>' → logprob: -6.952938079833984
    10. ' ]' → logprob: -7.077938079833984

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014368814416229725
    2. 'else' → logprob: -4.264369010925293
    3. ' else' → logprob: -8.514369010925293
    4. '       ' → logprob: -12.889369010925293
    5. '```' → logprob: -13.264369010925293
    6. '	else' → logprob: -16.264368057250977
    7. '    
' → logprob: -16.639368057250977
    8. 'continue' → logprob: -17.764368057250977
    9. '  ' → logprob: -17.764368057250977
    10. '_else' → logprob: -17.889368057250977

Token 134: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03989957273006439
    2. '   ' → logprob: -3.2898995876312256
    3. ' else' → logprob: -6.2898993492126465
    4. '	else' → logprob: -14.539899826049805
    5. '       ' → logprob: -14.789899826049805
    6. '```' → logprob: -14.914899826049805
    7. '  ' → logprob: -16.914899826049805
    8. '
' → logprob: -17.039899826049805
    9. ' ' → logprob: -17.789899826049805
    10. '}else' → logprob: -18.039899826049805

Token 135: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21655647456645966
    2. ' id' → logprob: -1.841556429862976
    3. 'id' → logprob: -3.5915565490722656
    4. '   ' → logprob: -4.841556549072266
    5. ':
' → logprob: -8.466556549072266
    6. '	id' → logprob: -9.091556549072266
    7. '
' → logprob: -9.216556549072266
    8. ':' → logprob: -9.466556549072266
    9. '           ' → logprob: -10.091556549072266
    10. '[id' → logprob: -10.591556549072266

Token 136: '       ' (ID: 309)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.048369891941547394
    2. '       ' → logprob: -3.798369884490967
    3. ' id' → logprob: -3.798369884490967
    4. '   ' → logprob: -6.048369884490967
    5. '```' → logprob: -11.048370361328125
    6. '	id' → logprob: -11.548370361328125
    7. '           ' → logprob: -12.048370361328125
    8. '        ' → logprob: -12.923370361328125
    9. '    ' → logprob: -13.173370361328125
    10. ' ' → logprob: -13.423370361328125

Token 137: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0006408308399841189
    2. ' id' → logprob: -7.500640869140625
    3. '   ' → logprob: -9.625640869140625
    4. '       ' → logprob: -10.750640869140625
    5. ' ' → logprob: -15.750640869140625
    6. '	id' → logprob: -16.625640869140625
    7. '  ' → logprob: -17.250640869140625
    8. '           ' → logprob: -17.375640869140625
    9. '```' → logprob: -18.000640869140625
    10. '
' → logprob: -18.250640869140625

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. ',' → logprob: -17.52975082397461
    5. ' =
' → logprob: -17.65475082397461
    6. ' ' → logprob: -18.52975082397461
    7. '＝' → logprob: -18.65475082397461
    8. ' +=' → logprob: -19.02975082397461
    9. ')' → logprob: -19.40475082397461
    10. '    ' → logprob: -19.40475082397461

Token 139: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.04858827963471413
    2. ' idx' → logprob: -3.048588275909424
    3. '[idx' → logprob: -14.173588752746582
    4. '	idx' → logprob: -15.798588752746582
    5. '(idx' → logprob: -16.298587799072266
    6. '   ' → logprob: -18.673587799072266
    7. 'index' → logprob: -19.048587799072266
    8. 'id' → logprob: -19.423587799072266
    9. ' ' → logprob: -20.048587799072266
    10. 'indx' → logprob: -20.298587799072266

Token 140: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.531315314830863e-06
    2. 'list' → logprob: -12.625003814697266
    3. 'List' → logprob: -17.000003814697266
    4. '[' → logprob: -17.375003814697266
    5. 'tolist' → logprob: -17.750003814697266
    6. '[i' → logprob: -18.250003814697266
    7. '_lists' → logprob: -18.750003814697266
    8. '$list' → logprob: -18.750003814697266
    9. '```' → logprob: -18.875003814697266
    10. '_' → logprob: -19.000003814697266

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[' → logprob: -16.125
    4. '```' → logprob: -17.0
    5. '[I' → logprob: -18.25
    6. '[
' → logprob: -18.375
    7. '[j' → logprob: -19.5
    8. '[u' → logprob: -20.125
    9. '
' → logprob: -20.125
    10. '   ' → logprob: -20.375

Token 142: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005582825746387243
    2. ']' → logprob: -5.880582809448242
    3. '<|end|>' → logprob: -6.005582809448242
    4. ')
' → logprob: -8.755582809448242
    5. ')]' → logprob: -9.755582809448242
    6. '}' → logprob: -10.380582809448242
    7. '<|end|>' → logprob: -10.505582809448242
    8. ' )' → logprob: -11.005582809448242
    9. '])' → logprob: -12.255582809448242
    10. '```' → logprob: -13.130582809448242

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07793926447629929
    2. 'ans' → logprob: -3.57793927192688
    3. ' print' → logprob: -3.95293927192688
    4. ' ans' → logprob: -4.327939033508301
    5. '1' → logprob: -4.827939033508301
    6. '```' → logprob: -5.077939033508301
    7. '(ans' → logprob: -8.9529390335083
    8. '``' → logprob: -9.3279390335083
    9. '   ' → logprob: -9.3279390335083
    10. '+' → logprob: -9.8279390335083

Token 144: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. 'ans' → logprob: -15.000000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(answer' → logprob: -17.125
    5. ' (' → logprob: -17.75
    6. '(
' → logprob: -19.125
    7. '	ans' → logprob: -19.25
    8. '(len' → logprob: -19.625
    9. '((' → logprob: -19.75
    10. '(abs' → logprob: -19.875

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038310229778289795
    2. ' +' → logprob: -3.2883102893829346
    3. ')' → logprob: -8.288310050964355
    4. '+)' → logprob: -11.038310050964355
    5. ' )' → logprob: -14.663310050964355
    6. ')+' → logprob: -14.913310050964355
    7. '+
' → logprob: -15.413310050964355
    8. '1' → logprob: -16.913311004638672
    9. ' ' → logprob: -17.288311004638672
    10. '＋' → logprob: -17.663311004638672

Token 146: ' id' (ID: 1211)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023490036837756634
    2. 'id' → logprob: -6.127348899841309
    3. ' ' → logprob: -8.752348899841309
    4. ' id' → logprob: -12.127348899841309
    5. '(id' → logprob: -15.127348899841309
    6. '+' → logprob: -16.877349853515625
    7. '[id' → logprob: -17.752349853515625
    8. 'len' → logprob: -17.877349853515625
    9. '"id' → logprob: -18.502349853515625
    10. '0' → logprob: -18.752349853515625

Token 147: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014553279615938663
    2. '+' → logprob: -4.264553070068359
    3. ' )' → logprob: -8.13955307006836
    4. ' +' → logprob: -10.13955307006836
    5. '+)' → logprob: -10.63955307006836
    6. ')
' → logprob: -11.51455307006836
    7. '<|end|>' → logprob: -11.88955307006836
    8. '```' → logprob: -12.01455307006836
    9. '`)' → logprob: -12.88955307006836
    10. '')' → logprob: -13.01455307006836

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '+' → logprob: -17.00010871887207
    4. ' +' → logprob: -17.75010871887207
    5. '
' → logprob: -19.00010871887207
    6. '```' → logprob: -19.12510871887207
    7. '   ' → logprob: -19.37510871887207
    8. ' ' → logprob: -19.62510871887207
    9. '۱' → logprob: -19.93760871887207
    10. '2' → logprob: -20.18760871887207

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -20.250001907348633
    4. '```' → logprob: -20.375001907348633
    5. '۱' → logprob: -20.625001907348633
    6. '+' → logprob: -20.625001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.750001907348633
    9. '﻿' → logprob: -21.875001907348633
    10. '１' → logprob: -22.125001907348633

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -16.250001907348633
    4. ')`' → logprob: -16.625001907348633
    5. '`)' → logprob: -18.000001907348633
    6. '))' → logprob: -18.375001907348633
    7. '）' → logprob: -18.375001907348633
    8. '')' → logprob: -19.500001907348633
    9. ')#' → logprob: -19.625001907348633
    10. ')}' → logprob: -19.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 43.92%
Précision adaptée (1ère position): 47.97%
Précision (top 10): 89.19%
================================================================================
