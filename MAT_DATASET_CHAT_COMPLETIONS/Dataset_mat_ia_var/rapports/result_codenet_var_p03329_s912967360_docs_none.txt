================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read = sys.stdin.read
readlines = sys.stdin.readlines
def main():
    n = int(input())
    nums = []
    n6 = 6
    while n6 <= n:
        nums.append(n6)
        n6 = n6 * 6
    n9 = 9
    while n9 <= n:
        nums.append(n9)
        n9 = n9 * 9
    nums.sort(reverse=True)
    dp = [i for i in range(2 * n + 1)]
    for num in nums:
        for j1 in range(n + 1):
            dp[j1+num] = min(dp[j1+num], dp[j1] + 1)
    print(dp[n])

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009628107771277428
    2. '_' → logprob: -6.0096282958984375
    3. 'line' → logprob: -6.1346282958984375
    4. ' (' → logprob: -6.3846282958984375
    5. '.' → logprob: -6.6346282958984375
    6. ')' → logprob: -8.009628295898438
    7. '_line' → logprob: -8.134628295898438
    8. 'space' → logprob: -8.509628295898438
    9. 'er' → logprob: -8.634628295898438
    10. '(
' → logprob: -8.759628295898438

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.28154993057250977
    2. 'sys' → logprob: -1.4065499305725098
    3. ' lambda' → logprob: -9.281549453735352
    4. '(sys' → logprob: -9.281549453735352
    5. ' open' → logprob: -9.906549453735352
    6. '=sys' → logprob: -9.906549453735352
    7. 'open' → logprob: -10.281549453735352
    8. 'lambda' → logprob: -10.406549453735352
    9. '	sys' → logprob: -10.906549453735352
    10. ' ' → logprob: -11.156549453735352

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.017033470794558525
    2. '.stdin' → logprob: -4.392033576965332
    3. '.readline' → logprob: -6.142033576965332
    4. '.stdout' → logprob: -7.017033576965332
    5. '.read' → logprob: -7.142033576965332
    6. ' .' → logprob: -8.392033576965332
    7. '.argv' → logprob: -8.642033576965332
    8. '.path' → logprob: -9.392033576965332
    9. '.import' → logprob: -9.642033576965332
    10. '.exit' → logprob: -10.392033576965332

Token 7: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1313103288412094
    2. '.read' → logprob: -2.256310224533081
    3. '.' → logprob: -4.00631046295166
    4. '.readlines' → logprob: -9.38131046295166
    5. 'read' → logprob: -10.75631046295166
    6. '.Read' → logprob: -12.13131046295166
    7. '.buffer' → logprob: -13.38131046295166
    8. ' .' → logprob: -13.63131046295166
    9. '.READ' → logprob: -14.25631046295166
    10. '.write' → logprob: -14.38131046295166

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2019193321466446
    2. '(' → logprob: -1.7019193172454834
    3. '(
' → logprob: -8.576919555664062
    4. '().' → logprob: -9.201919555664062
    5. '(

' → logprob: -9.451919555664062
    6. ' ()' → logprob: -10.451919555664062
    7. '()
' → logprob: -11.076919555664062
    8. '()

' → logprob: -11.201919555664062
    9. '.' → logprob: -11.326919555664062
    10. '()\' → logprob: -11.451919555664062

Token 9: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016986822709441185
    2. '(' → logprob: -4.141986846923828
    3. '().' → logprob: -7.891986846923828
    4. '()
' → logprob: -8.141986846923828
    5. '.' → logprob: -9.391986846923828
    6. '(
' → logprob: -9.641986846923828
    7. '()

' → logprob: -10.141986846923828
    8. ')' → logprob: -10.766986846923828
    9. '(

' → logprob: -10.891986846923828
    10. ' ()' → logprob: -11.266986846923828

Token 10: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11328650265932083
    2. '(' → logprob: -2.2382864952087402
    3. '(
' → logprob: -8.738286972045898
    4. '(

' → logprob: -9.613286972045898
    5. ' ()' → logprob: -9.738286972045898
    6. '()
' → logprob: -9.988286972045898
    7. ')' → logprob: -10.488286972045898
    8. '```' → logprob: -10.988286972045898
    9. '()

' → logprob: -11.238286972045898
    10. '().' → logprob: -11.488286972045898

Token 11: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07989014685153961
    2. '(' → logprob: -2.579890251159668
    3. '.' → logprob: -8.329890251159668
    4. '=' → logprob: -8.579890251159668
    5. ')' → logprob: -8.829890251159668
    6. ' ()' → logprob: -9.329890251159668
    7. '(
' → logprob: -9.954890251159668
    8. '().' → logprob: -9.954890251159668
    9. ' =' → logprob: -10.329890251159668
    10. ' (' → logprob: -10.454890251159668

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08899541944265366
    2. 'sys' → logprob: -2.4639954566955566
    3. 'read' → logprob: -10.713994979858398
    4. '=sys' → logprob: -11.463994979858398
    5. ' read' → logprob: -11.588994979858398
    6. '	sys' → logprob: -11.713994979858398
    7. '(sys' → logprob: -12.838994979858398
    8. ' ' → logprob: -13.713994979858398
    9. ' readline' → logprob: -13.963994979858398
    10. '_sys' → logprob: -15.588994979858398

Token 13: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04162441939115524
    2. '.readline' → logprob: -3.4166243076324463
    3. '.stdout' → logprob: -5.291624546051025
    4. '.readlines' → logprob: -6.291624546051025
    5. '.' → logprob: -7.041624546051025
    6. '.read' → logprob: -9.541624069213867
    7. '.argv' → logprob: -10.541624069213867
    8. '.stderr' → logprob: -10.791624069213867
    9. 'stdin' → logprob: -10.791624069213867
    10. ' .' → logprob: -11.291624069213867

Token 14: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.31339937448501587
    2. '.readline' → logprob: -1.313399314880371
    3. '.' → logprob: -9.188399314880371
    4. '.read' → logprob: -10.563399314880371
    5. ' .' → logprob: -11.938399314880371
    6. 'read' → logprob: -13.688399314880371
    7. 'lines' → logprob: -14.563399314880371
    8. '._' → logprob: -15.188399314880371
    9. '.lines' → logprob: -15.813399314880371
    10. '_lines' → logprob: -16.063400268554688

Token 15: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13529779016971588
    2. '(' → logprob: -3.0102977752685547
    3. '\n' → logprob: -3.1352977752685547
    4. '\' → logprob: -4.135297775268555
    5. '
' → logprob: -5.010297775268555
    6. 'newline' → logprob: -6.135297775268555
    7. '(
' → logprob: -6.635297775268555
    8. '' → logprob: -6.885297775268555
    9. '()
' → logprob: -7.010297775268555
    10. '_' → logprob: -7.135297775268555

Token 16: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07181289047002792
    2. '(' → logprob: -2.946812868118286
    3. '\n' → logprob: -5.196813106536865
    4. '\' → logprob: -5.446813106536865
    5. 'def' → logprob: -6.696813106536865
    6. '()
' → logprob: -6.821813106536865
    7. '()

' → logprob: -6.821813106536865
    8. '
' → logprob: -7.071813106536865
    9. '(
' → logprob: -7.446813106536865
    10. 'import' → logprob: -8.071812629699707

Token 17: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16841833293437958
    2. ' main' → logprob: -3.0434184074401855
    3. ' read' → logprob: -3.2934184074401855
    4. ' my' → logprob: -3.2934184074401855
    5. '_' → logprob: -4.4184184074401855
    6. ' _' → logprob: -5.6684184074401855
    7. ' function' → logprob: -6.0434184074401855
    8. ' readline' → logprob: -6.0434184074401855
    9. ' foo' → logprob: -6.1684184074401855
    10. ' process' → logprob: -6.5434184074401855

Token 18: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3150702714920044
    2. '():' → logprob: -1.3150702714920044
    3. '(:' → logprob: -6.565070152282715
    4. ':' → logprob: -8.940070152282715
    5. '(":' → logprob: -9.440070152282715
    6. ' ():' → logprob: -9.690070152282715
    7. '()' → logprob: -10.065070152282715
    8. ' (' → logprob: -10.440070152282715
    9. '(
' → logprob: -11.065070152282715
    10. '(**' → logprob: -12.190070152282715

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09545872360467911
    2. '(' → logprob: -2.720458745956421
    3. '    ' → logprob: -4.595458507537842
    4. ' ' → logprob: -4.720458507537842
    5. '    
' → logprob: -6.470458507537842
    6. '()' → logprob: -6.720458507537842
    7. '\' → logprob: -6.720458507537842
    8. ')' → logprob: -7.845458507537842
    9. ':' → logprob: -8.220458984375
    10. ' (' → logprob: -8.470458984375

Token 20: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.528867244720459
    2. '   ' → logprob: -1.403867244720459
    3. ' lines' → logprob: -3.403867244720459
    4. 'pass' → logprob: -3.528867244720459
    5. ' data' → logprob: -3.653867244720459
    6. 'input' → logprob: -4.403867244720459
    7. 'lines' → logprob: -4.653867244720459
    8. '    ' → logprob: -4.903867244720459
    9. 'n' (adapté à ' n') → logprob: -4.903867244720459
    10. 'line' → logprob: -5.028867244720459

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005377830006182194
    2. '=' → logprob: -5.505377769470215
    3. ' ' → logprob: -6.755377769470215
    4. '  ' → logprob: -9.880377769470215
    5. ',' → logprob: -10.005377769470215
    6. '=int' → logprob: -11.255377769470215
    7. ' ,' → logprob: -11.505377769470215
    8. '   ' → logprob: -12.255377769470215
    9. ' =
' → logprob: -13.130377769470215
    10. '.' → logprob: -13.380377769470215

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.009156791493296623
    2. 'int' → logprob: -4.759156703948975
    3. ' ' → logprob: -8.009157180786133
    4. ' read' → logprob: -8.634157180786133
    5. 'read' → logprob: -11.759157180786133
    6. ' input' → logprob: -11.884157180786133
    7. '  ' → logprob: -12.009157180786133
    8. ' len' → logprob: -12.384157180786133
    9. ' in' → logprob: -13.259157180786133
    10. 'len' → logprob: -14.009157180786133

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6938486099243164
    2. '(read' → logprob: -0.6938486099243164
    3. '(input' → logprob: -7.443848609924316
    4. ' (' → logprob: -9.318848609924316
    5. 'read' → logprob: -11.068848609924316
    6. '(
' → logprob: -12.443848609924316
    7. '(sys' → logprob: -13.318848609924316
    8. '('' → logprob: -13.443848609924316
    9. ' ' → logprob: -14.318848609924316
    10. '(

' → logprob: -14.568848609924316

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1273256540298462
    2. '()' → logprob: -2.1273255348205566
    3. '(' → logprob: -8.377326011657715
    4. ')' → logprob: -9.252326011657715
    5. ' ())' → logprob: -10.502326011657715
    6. '()))' → logprob: -11.002326011657715
    7. '('' → logprob: -11.752326011657715
    8. '().' → logprob: -12.752326011657715
    9. '();)' → logprob: -13.127326011657715
    10. '()]' → logprob: -13.252326011657715

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042622294276952744
    2. '    ' → logprob: -4.417622089385986
    3. '<|end|>' → logprob: -4.667622089385986
    4. '    
' → logprob: -4.917622089385986
    5. ' ' → logprob: -5.292622089385986
    6. '  ' → logprob: -5.792622089385986
    7. ')' → logprob: -6.167622089385986
    8. '
' → logprob: -7.542622089385986
    9. '\' → logprob: -7.667622089385986
    10. ' 
' → logprob: -8.167622566223145

Token 26: ' nums' (ID: 18117)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.40335214138031
    2. 'data' → logprob: -1.90335214138031
    3. 's' → logprob: -2.1533522605895996
    4. '   ' → logprob: -2.4033522605895996
    5. ' a' → logprob: -2.5283522605895996
    6. ' ' → logprob: -3.0283522605895996
    7. ' data' → logprob: -3.2783522605895996
    8. ' for' → logprob: -3.2783522605895996
    9. 'for' → logprob: -3.4033522605895996
    10. ' lines' → logprob: -3.6533522605895996

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03246781602501869
    2. '=' → logprob: -3.532467842102051
    3. '[' → logprob: -6.407467842102051
    4. '[:]' → logprob: -7.657467842102051
    5. '.' → logprob: -8.40746784210205
    6. ')' → logprob: -9.03246784210205
    7. '_' → logprob: -9.53246784210205
    8. '   ' → logprob: -10.28246784210205
    9. ' ' → logprob: -10.53246784210205
    10. '[]' → logprob: -10.78246784210205

Token 28: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10396970808506012
    2. 'list' → logprob: -2.4789698123931885
    3. ' [' → logprob: -4.603969573974609
    4. '[' → logprob: -6.853969573974609
    5. ' []' → logprob: -6.853969573974609
    6. '[list' → logprob: -6.853969573974609
    7. '[input' → logprob: -7.728969573974609
    8. ' input' → logprob: -7.728969573974609
    9. '[]' → logprob: -7.853969573974609
    10. ' read' → logprob: -8.35396957397461

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5300454497337341
    2. 'for' → logprob: -1.655045509338379
    3. ' for' → logprob: -1.780045509338379
    4. '<|end|>' → logprob: -3.280045509338379
    5. ' ' → logprob: -5.030045509338379
    6. '	for' → logprob: -5.155045509338379
    7. '<|end|>' → logprob: -7.530045509338379
    8. '  ' → logprob: -7.905045509338379
    9. '    ' → logprob: -7.905045509338379
    10. '
' → logprob: -8.655045509338379

Token 30: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0701427236199379
    2. ' for' → logprob: -2.6951427459716797
    3. '	for' → logprob: -8.82014274597168
    4. '   ' → logprob: -10.19514274597168
    5. ' ' → logprob: -11.19514274597168
    6. '<|end|>' → logprob: -12.19514274597168
    7. '    ' → logprob: -14.69514274597168
    8. ')' → logprob: -15.32014274597168
    9. '  ' → logprob: -15.32014274597168
    10. ' 
' → logprob: -15.44514274597168

Token 31: '6' (ID: 21)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7170666456222534
    2. 'ums' → logprob: -0.7170666456222534
    3. 'for' → logprob: -4.592066764831543
    4. ' for' → logprob: -5.217066764831543
    5. ' ' → logprob: -5.717066764831543
    6. ' um' → logprob: -6.717066764831543
    7. '   ' → logprob: -7.592066764831543
    8. 'e' → logprob: -7.592066764831543
    9. 'or' → logprob: -7.967066764831543
    10. '  ' → logprob: -8.217066764831543

Token 32: ' =' (ID: 314)
  Prédit: 'ums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.06301218271255493
    2. 'um' → logprob: -2.81301212310791
    3. ' =' → logprob: -7.18801212310791
    4. '=' → logprob: -8.56301212310791
    5. '   ' → logprob: -10.56301212310791
    6. '6' → logprob: -10.93801212310791
    7. 'ms' → logprob: -10.93801212310791
    8. ' ' → logprob: -11.56301212310791
    9. 'nums' → logprob: -12.06301212310791
    10. 'umbers' → logprob: -12.43801212310791

Token 33: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.24349765479564667
    2. ' ' → logprob: -2.118497610092163
    3. 'n' → logprob: -2.993497610092163
    4. ' n' → logprob: -3.618497610092163
    5. '0' → logprob: -4.743497848510742
    6. '100' → logprob: -4.993497848510742
    7. 'int' → logprob: -6.868497848510742
    8. '10' → logprob: -7.743497848510742
    9. '   ' → logprob: -7.868497848510742
    10. '[n' → logprob: -7.993497848510742

Token 34: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.09791876375675201
    2. 'n' → logprob: -2.597918748855591
    3. 'int' → logprob: -4.59791898727417
    4. '100' → logprob: -5.47291898727417
    5. ' ' → logprob: -7.09791898727417
    6. '10' → logprob: -7.09791898727417
    7. '0' → logprob: -7.59791898727417
    8. '600' → logprob: -8.097918510437012
    9. '666' → logprob: -8.347918510437012
    10. '[n' → logprob: -8.597918510437012

Token 35: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6845861673355103
    2. ' *' → logprob: -1.1845861673355103
    3. '**' → logprob: -2.3095860481262207
    4. '*n' → logprob: -3.8095860481262207
    5. '0' → logprob: -3.9345860481262207
    6. '+' → logprob: -4.434586048126221
    7. '<|end|>' → logprob: -4.559586048126221
    8. ' ' → logprob: -4.809586048126221
    9. ' **' → logprob: -5.309586048126221
    10. ')' → logprob: -5.559586048126221

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22787192463874817
    2. '0' → logprob: -2.852871894836426
    3. '*' → logprob: -3.727871894836426
    4. 'for' → logprob: -3.852871894836426
    5. '<|end|>' → logprob: -3.852871894836426
    6. 'while' → logprob: -4.227871894836426
    7. ' ' → logprob: -4.477871894836426
    8. ' for' → logprob: -4.477871894836426
    9. ' *' → logprob: -4.852871894836426
    10. ' while' → logprob: -5.227871894836426

Token 37: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48043516278266907
    2. ' for' → logprob: -1.6054351329803467
    3. '   ' → logprob: -2.3554351329803467
    4. ' ' → logprob: -2.9804351329803467
    5. ' *' → logprob: -4.980435371398926
    6. '<|end|>' → logprob: -5.355435371398926
    7. 'while' (adapté à ' while') → logprob: -5.480435371398926
    8. '    ' → logprob: -5.605435371398926
    9. '*' → logprob: -5.855435371398926
    10. '*n' → logprob: -6.105435371398926

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014361872337758541
    2. 'n' → logprob: -4.38936185836792
    3. ' len' → logprob: -6.51436185836792
    4. ' ' → logprob: -8.889362335205078
    5. 'len' → logprob: -9.139362335205078
    6. ' True' → logprob: -9.514362335205078
    7. 'True' → logprob: -10.639362335205078
    8. '(n' → logprob: -12.264362335205078
    9. ' not' → logprob: -12.764362335205078
    10. '	n' → logprob: -12.889362335205078

Token 39: '6' (ID: 21)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09985752403736115
    2. '>' → logprob: -2.4748575687408447
    3. ' >=' → logprob: -4.599857330322266
    4. '-' → logprob: -8.099857330322266
    5. '>=' → logprob: -8.224857330322266
    6. '6' → logprob: -9.224857330322266
    7. ' ' → logprob: -9.474857330322266
    8. ' <' → logprob: -11.599857330322266
    9. '%' → logprob: -11.974857330322266
    10. '   ' → logprob: -12.349857330322266

Token 40: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7108185291290283
    2. '<=' → logprob: -0.7108185291290283
    3. '<' → logprob: -4.710818290710449
    4. ' <' → logprob: -4.835818290710449
    5. '<n' → logprob: -8.58581829071045
    6. '*' → logprob: -8.71081829071045
    7. ' ' → logprob: -9.83581829071045
    8. '**' → logprob: -9.83581829071045
    9. ' *' → logprob: -10.33581829071045
    10. '<len' → logprob: -11.21081829071045

Token 41: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14294157922267914
    2. ' n' → logprob: -2.017941474914551
    3. '100' → logprob: -9.39294147491455
    4. ' ' → logprob: -9.64294147491455
    5. '999' → logprob: -10.51794147491455
    6. '10' → logprob: -10.89294147491455
    7. '   ' → logprob: -11.39294147491455
    8. '20' → logprob: -12.01794147491455
    9. '	n' → logprob: -12.39294147491455
    10. '99' → logprob: -12.64294147491455

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010185176506638527
    2. ':
' → logprob: -7.001018524169922
    3. ' :' → logprob: -9.751018524169922
    4. ' and' → logprob: -10.251018524169922
    5. 'and' → logprob: -12.876018524169922
    6. ':n' → logprob: -13.001018524169922
    7. '6' → logprob: -13.376018524169922
    8. ',' → logprob: -13.876018524169922
    9. '+:' → logprob: -13.876018524169922
    10. '*' → logprob: -14.001018524169922

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06845203787088394
    2. ':' → logprob: -2.9434521198272705
    3. '   ' → logprob: -4.818451881408691
    4. '<|end|>' → logprob: -6.068451881408691
    5. ':
' → logprob: -7.568451881408691
    6. '6' → logprob: -7.818451881408691
    7. ',' → logprob: -7.943451881408691
    8. '    ' → logprob: -7.943451881408691
    9. '):' → logprob: -8.568451881408691
    10. 'n' → logprob: -8.818451881408691

Token 44: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.5285221338272095
    2. 'nums' (adapté à ' nums') → logprob: -2.02852201461792
    3. '       ' → logprob: -2.65352201461792
    4. ' ' → logprob: -2.77852201461792
    5. ' if' → logprob: -3.02852201461792
    6. '    ' → logprob: -3.02852201461792
    7. '   ' → logprob: -4.15352201461792
    8. ' n' → logprob: -4.90352201461792
    9. ' 
' → logprob: -5.15352201461792
    10. '        ' → logprob: -5.40352201461792

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07890906929969788
    2. '.' → logprob: -2.578909158706665
    3. ' .' → logprob: -12.078908920288086
    4. '.add' → logprob: -12.578908920288086
    5. '.ap' → logprob: -12.578908920288086
    6. '.push' → logprob: -12.953908920288086
    7. '.app' → logprob: -13.078908920288086
    8. 'append' → logprob: -14.203908920288086
    9. '.Append' → logprob: -14.453908920288086
    10. '.extend' → logprob: -14.953908920288086

Token 46: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01609349437057972
    2. '(' → logprob: -4.141093730926514
    3. '((' → logprob: -10.391093254089355
    4. ' (' → logprob: -11.766093254089355
    5. '(i' → logprob: -12.391093254089355
    6. 'n' → logprob: -12.516093254089355
    7. '(int' → logprob: -12.641093254089355
    8. '(
' → logprob: -12.766093254089355
    9. '(str' → logprob: -13.516093254089355
    10. '(s' → logprob: -13.641093254089355

Token 47: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001843485952122137
    2. '-' → logprob: -9.000184059143066
    3. ' -' → logprob: -10.250184059143066
    4. ' ' → logprob: -11.500184059143066
    5. '//' → logprob: -12.562684059143066
    6. ')' → logprob: -13.125184059143066
    7. '```' → logprob: -13.125184059143066
    8. '_' → logprob: -13.500184059143066
    9. '   ' → logprob: -13.562684059143066
    10. ' //' → logprob: -13.750184059143066

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055395595729351044
    2. ')
' → logprob: -2.9303956031799316
    3. ' )' → logprob: -8.680395126342773
    4. ')
' → logprob: -9.305395126342773
    5. '*' → logprob: -9.430395126342773
    6. '   ' → logprob: -9.805395126342773
    7. ' )
' → logprob: -9.930395126342773
    8. '+' → logprob: -11.055395126342773
    9. ')

' → logprob: -11.180395126342773
    10. ',' → logprob: -11.305395126342773

Token 49: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.449203610420227
    2. ' 
' → logprob: -1.824203610420227
    3. '+' → logprob: -1.949203610420227
    4. '*' → logprob: -2.5742034912109375
    5. '   ' → logprob: -2.5742034912109375
    6. '    
' → logprob: -2.6992034912109375
    7. '
' → logprob: -2.9492034912109375
    8. '*n' → logprob: -2.9492034912109375
    9. '6' → logprob: -3.0742034912109375
    10. '    ' → logprob: -4.1992034912109375

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0007243485888466239
    2. ' n' → logprob: -7.7507243156433105
    3. '   ' → logprob: -8.250724792480469
    4. '6' → logprob: -11.375724792480469
    5. '       ' → logprob: -11.750724792480469
    6. '    ' → logprob: -12.500724792480469
    7. '	n' → logprob: -12.625724792480469
    8. '+' → logprob: -12.875724792480469
    9. ' ' → logprob: -14.125724792480469
    10. '```' → logprob: -14.375724792480469

Token 51: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001931696751853451
    2. '-=' → logprob: -9.50019359588623
    3. '+=' → logprob: -9.62519359588623
    4. ' -=' → logprob: -10.37519359588623
    5. ' +=' → logprob: -11.12519359588623
    6. '-' → logprob: -12.62519359588623
    7. '```' → logprob: -13.87519359588623
    8. '+' → logprob: -14.62519359588623
    9. '*=' → logprob: -15.12519359588623
    10. '//' → logprob: -15.12519359588623

Token 52: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.48316046595573425
    2. '+=' → logprob: -0.9831604957580566
    3. ' *=' → logprob: -5.358160495758057
    4. ' +=' → logprob: -5.483160495758057
    5. '=' → logprob: -9.483160018920898
    6. '*' → logprob: -9.858160018920898
    7. ' <<=' → logprob: -10.483160018920898
    8. '<<' → logprob: -11.733160018920898
    9. ' ' → logprob: -12.858160018920898
    10. '```' → logprob: -13.233160018920898

Token 53: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07188333570957184
    2. ' n' → logprob: -2.6968834400177
    3. '6' → logprob: -6.321883201599121
    4. 'int' → logprob: -9.696883201599121
    5. ' ' → logprob: -9.821883201599121
    6. '+' → logprob: -11.571883201599121
    7. '(n' → logprob: -11.696883201599121
    8. '	n' → logprob: -12.696883201599121
    9. ' int' → logprob: -13.321883201599121
    10. '   ' → logprob: -13.321883201599121

Token 54: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0692930668592453
    2. '+' → logprob: -3.0692930221557617
    3. ' ' → logprob: -4.194293022155762
    4. ' +' → logprob: -5.944293022155762
    5. '*' → logprob: -7.444293022155762
    6. '-' → logprob: -7.819293022155762
    7. 'n' → logprob: -8.069293022155762
    8. '   ' → logprob: -8.694293022155762
    9. '    ' → logprob: -8.694293022155762
    10. ' n' → logprob: -8.694293022155762

Token 55: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17285557091236115
    2. ' +' → logprob: -2.2978556156158447
    3. '*' → logprob: -2.9228556156158447
    4. ' *' → logprob: -5.422855377197266
    5. '6' → logprob: -9.922855377197266
    6. ' ' → logprob: -11.547855377197266
    7. '+=' → logprob: -12.422855377197266
    8. '+n' → logprob: -12.922855377197266
    9. '  ' → logprob: -13.547855377197266
    10. ' +=' → logprob: -13.922855377197266

Token 56: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0012907128548249602
    2. '2' → logprob: -6.876290798187256
    3. '3' → logprob: -8.501290321350098
    4. '7' → logprob: -10.751290321350098
    5. ' ' → logprob: -11.001290321350098
    6. '4' → logprob: -12.251290321350098
    7. '5' → logprob: -12.501290321350098
    8. '10' → logprob: -12.751290321350098
    9. '   ' → logprob: -13.001290321350098
    10. '9' → logprob: -14.626290321350098

Token 57: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.52788148727268e-05
    2. '3' → logprob: -10.250064849853516
    3. '2' → logprob: -10.875064849853516
    4. ' ' → logprob: -12.500064849853516
    5. '10' → logprob: -13.000064849853516
    6. '7' → logprob: -13.000064849853516
    7. '5' → logprob: -13.750064849853516
    8. '   ' → logprob: -14.875064849853516
    9. '4' → logprob: -15.000064849853516
    10. '9' → logprob: -15.750064849853516

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.272591233253479
    2. '    
' → logprob: -2.7725911140441895
    3. ' 
' → logprob: -2.8975911140441895
    4. '   ' → logprob: -3.0225911140441895
    5. '<|end|>' → logprob: -3.8975911140441895
    6. '+' → logprob: -4.5225911140441895
    7. ' ' → logprob: -5.0225911140441895
    8. '  
' → logprob: -5.2725911140441895
    9. '*' → logprob: -5.3975911140441895
    10. '6' → logprob: -5.3975911140441895

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38537248969078064
    2. '    
' → logprob: -2.0103724002838135
    3. '
' → logprob: -2.3853724002838135
    4. '  
' → logprob: -3.7603724002838135
    5. ' 
' → logprob: -4.135372638702393
    6. '\n' → logprob: -4.385372638702393
    7. ' ' → logprob: -4.510372638702393
    8. '<|end|>' → logprob: -4.760372638702393
    9. ' while' → logprob: -5.760372638702393
    10. 'while' → logprob: -5.760372638702393

Token 60: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.0766559839248657
    2. '   ' → logprob: -1.3266559839248657
    3. ' n' → logprob: -2.451655864715576
    4. '6' → logprob: -3.201655864715576
    5. 'while' → logprob: -3.326655864715576
    6. '7' → logprob: -3.451655864715576
    7. '    
' → logprob: -3.451655864715576
    8. ' while' → logprob: -3.576655864715576
    9. ' ' → logprob: -3.576655864715576
    10. '\n' → logprob: -4.076655864715576

Token 61: '9' (ID: 24)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0738428831100464
    2. ' ' → logprob: -1.4488428831100464
    3. '=' → logprob: -2.448843002319336
    4. '7' → logprob: -2.948843002319336
    5. '**' → logprob: -3.073843002319336
    6. '9' → logprob: -3.198843002319336
    7. '0' → logprob: -4.073843002319336
    8. '%' → logprob: -4.073843002319336
    9. '1' → logprob: -4.198843002319336
    10. ' *=' → logprob: -4.198843002319336

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054784446954727
    2. '=' → logprob: -3.895547866821289
    3. ' ' → logprob: -12.145547866821289
    4. '9' → logprob: -15.145547866821289
    5. '  ' → logprob: -15.895547866821289
    6. '   ' → logprob: -16.02054786682129
    7. ' ' → logprob: -17.02054786682129
    8. '_' → logprob: -17.77054786682129
    9. '    ' → logprob: -17.89554786682129
    10. '6' → logprob: -18.14554786682129

Token 63: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0022281676065176725
    2. ' ' → logprob: -6.127228260040283
    3. '   ' → logprob: -10.127227783203125
    4. '  ' → logprob: -13.127227783203125
    5. '    ' → logprob: -15.377227783203125
    6. '6' → logprob: -16.189727783203125
    7. '۹' → logprob: -16.314727783203125
    8. ' ' → logprob: -16.502227783203125
    9. '```' → logprob: -16.814727783203125
    10. '=' → logprob: -16.877227783203125

Token 64: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.375018119812012
    4. '  ' → logprob: -16.125019073486328
    5. '۹' → logprob: -17.125019073486328
    6. '6' → logprob: -17.437519073486328
    7. '९' → logprob: -17.750019073486328
    8. '٩' → logprob: -18.000019073486328
    9. '９' → logprob: -18.062519073486328
    10. '    ' → logprob: -18.312519073486328

Token 65: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09282402694225311
    2. ' while' → logprob: -2.9678239822387695
    3. '
' → logprob: -4.0928239822387695
    4. 'while' → logprob: -4.2178239822387695
    5. '<|end|>' → logprob: -5.4678239822387695
    6. '	while' → logprob: -7.8428239822387695
    7. '    
' → logprob: -7.9678239822387695
    8. '```' → logprob: -8.34282398223877
    9. '<|end|>' → logprob: -8.59282398223877
    10. ' 
' → logprob: -8.84282398223877

Token 67: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10823401063680649
    2. ' while' → logprob: -2.48323392868042
    3. '   ' → logprob: -3.98323392868042
    4. '	while' → logprob: -8.608234405517578
    5. '
' → logprob: -8.858234405517578
    6. '<|end|>' → logprob: -10.358234405517578
    7. '```' → logprob: -10.483234405517578
    8. '    
' → logprob: -10.858234405517578
    9. '\n' → logprob: -11.483234405517578
    10. '<|end|>' → logprob: -11.483234405517578

Token 68: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020544808357954025
    2. 'n' → logprob: -3.8955447673797607
    3. '9' → logprob: -14.02054500579834
    4. ' ' → logprob: -14.14554500579834
    5. '<|end|>' → logprob: -14.64554500579834
    6. '(n' → logprob: -15.77054500579834
    7. '<n' → logprob: -16.020544052124023
    8. '	n' → logprob: -16.145544052124023
    9. ')n' → logprob: -16.270544052124023
    10. '   ' → logprob: -16.395544052124023

Token 69: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.966313281329349e-05
    2. ' ' → logprob: -10.750049591064453
    3. '<=' → logprob: -11.125049591064453
    4. ' <=' → logprob: -11.750049591064453
    5. '<' → logprob: -13.625049591064453
    6. '   ' → logprob: -13.875049591064453
    7. '  ' → logprob: -14.375049591064453
    8. '<|end|>' → logprob: -15.000049591064453
    9. '```' → logprob: -15.125049591064453
    10. '*' → logprob: -15.250049591064453

Token 70: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018151583150029182
    2. '<=' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.51815128326416
    4. ')<=' → logprob: -16.518152236938477
    5. ' <' → logprob: -16.643152236938477
    6. ' ' → logprob: -17.018152236938477
    7. ']<=' → logprob: -17.018152236938477
    8. ' ≤' → logprob: -17.268152236938477
    9. ' <=",' → logprob: -17.393152236938477
    10. '<|end|>' → logprob: -17.643152236938477

Token 71: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05489277467131615
    2. 'n' → logprob: -2.9298927783966064
    3. ' ' → logprob: -13.054892539978027
    4. '<|end|>' → logprob: -13.054892539978027
    5. '   ' → logprob: -13.804892539978027
    6. '9' → logprob: -13.929892539978027
    7. '	n' → logprob: -14.304892539978027
    8. '```' → logprob: -14.304892539978027
    9. '_n' → logprob: -14.554892539978027
    10. ')n' → logprob: -14.804892539978027

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3491099178791046
    2. ':
' → logprob: -1.2241098880767822
    3. '       ' → logprob: -7.599110126495361
    4. '   ' → logprob: -9.349109649658203
    5. '):
' → logprob: -10.224109649658203
    6. ':
' → logprob: -11.349109649658203
    7. ':

' → logprob: -11.724109649658203
    8. ',' → logprob: -11.724109649658203
    9. ' :
' → logprob: -12.724109649658203
    10. '):' → logprob: -12.849109649658203

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003955224819947034
    2. '   ' → logprob: -8.875395774841309
    3. '<|end|>' → logprob: -8.875395774841309
    4. ':' → logprob: -10.125395774841309
    5. '```' → logprob: -10.875395774841309
    6. ',' → logprob: -11.000395774841309
    7. ' ' → logprob: -12.125395774841309
    8. ':
' → logprob: -12.375395774841309
    9. '<|end|>' → logprob: -12.500395774841309
    10. 'nums' → logprob: -12.500395774841309

Token 74: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.13140858709812164
    2. '       ' → logprob: -2.25640869140625
    3. ' nums' → logprob: -4.00640869140625
    4. '   ' → logprob: -9.13140869140625
    5. 'numbers' → logprob: -10.50640869140625
    6. 'n' → logprob: -11.13140869140625
    7. '9' → logprob: -11.25640869140625
    8. ' ' → logprob: -11.50640869140625
    9. 'num' → logprob: -11.63140869140625
    10. '```' → logprob: -11.63140869140625

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013729690108448267
    2. '.' → logprob: -6.626372814178467
    3. '.app' → logprob: -10.501373291015625
    4. '.add' → logprob: -11.751373291015625
    5. ' .' → logprob: -12.501373291015625
    6. '.ap' → logprob: -12.751373291015625
    7. '.extend' → logprob: -13.126373291015625
    8. '.push' → logprob: -14.251373291015625
    9. '.setdefault' → logprob: -14.376373291015625
    10. '.Append' → logprob: -15.376373291015625

Token 76: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000553151941858232
    2. '(' → logprob: -7.500553131103516
    3. ' (' → logprob: -16.500553131103516
    4. '((' → logprob: -18.625553131103516
    5. '(
' → logprob: -19.250553131103516
    6. '(nn' → logprob: -19.375553131103516
    7. '(

' → logprob: -20.125553131103516
    8. '(noun' → logprob: -20.375553131103516
    9. ' ' → logprob: -21.375553131103516
    10. '('' → logprob: -21.500553131103516

Token 77: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -16.625
    3. '९' → logprob: -16.75
    4. ' ' → logprob: -17.375
    5. '۹' → logprob: -17.375
    6. '   ' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. '
' → logprob: -17.8125
    9. '৯' → logprob: -17.9375
    10. '(' → logprob: -18.0625

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016089273616671562
    2. ')
' → logprob: -4.14108943939209
    3. '       ' → logprob: -10.14108943939209
    4. ')n' → logprob: -12.14108943939209
    5. '   ' → logprob: -12.39108943939209
    6. ')
' → logprob: -13.14108943939209
    7. ' )' → logprob: -13.39108943939209
    8. '<|end|>' → logprob: -14.01608943939209
    9. ')

' → logprob: -15.14108943939209
    10. '```' → logprob: -15.39108943939209

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002934437245130539
    2. '
' → logprob: -6.502934455871582
    3. '   ' → logprob: -7.127934455871582
    4. 'n' → logprob: -8.002934455871582
    5. ' ' → logprob: -9.877934455871582
    6. '        
' → logprob: -9.877934455871582
    7. '9' → logprob: -10.127934455871582
    8. ' 
' → logprob: -11.002934455871582
    9. '      ' → logprob: -11.002934455871582
    10. '    
' → logprob: -11.127934455871582

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.12695088982582092
    2. ' n' → logprob: -2.126950979232788
    3. '9' → logprob: -11.126951217651367
    4. '	n' → logprob: -12.501951217651367
    5. '   ' → logprob: -12.751951217651367
    6. '
' → logprob: -14.751951217651367
    7. '       ' → logprob: -15.251951217651367
    8. '_n' → logprob: -15.251951217651367
    9. ' 
' → logprob: -16.001951217651367
    10. '```' → logprob: -16.126951217651367

Token 81: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.968934758333489e-05
    2. '=' → logprob: -10.375069618225098
    3. ' =' → logprob: -11.375069618225098
    4. '+=' → logprob: -11.375069618225098
    5. '+' → logprob: -12.750069618225098
    6. ' +=' → logprob: -12.750069618225098
    7. 'ine' → logprob: -13.250069618225098
    8. ' ' → logprob: -13.500069618225098
    9. '   ' → logprob: -13.750069618225098
    10. '*' → logprob: -14.000069618225098

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707077503204346
    2. '=' → logprob: -1.1370707750320435
    3. ' *=' → logprob: -8.637070655822754
    4. '*=' → logprob: -11.012070655822754
    5. '*' → logprob: -12.387070655822754
    6. ' ' → logprob: -13.762070655822754
    7. ' *' → logprob: -14.512070655822754
    8. '=

' → logprob: -17.26207160949707
    9. '＝' → logprob: -17.38707160949707
    10. '   ' → logprob: -17.38707160949707

Token 83: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16024291515350342
    2. 'n' → logprob: -1.9102429151535034
    3. '9' → logprob: -11.410243034362793
    4. ' ' → logprob: -12.535243034362793
    5. '	n' → logprob: -13.035243034362793
    6. ' ' → logprob: -13.785243034362793
    7. ' 
' → logprob: -15.410243034362793
    8. '<|end|>' → logprob: -15.910243034362793
    9. ')n' → logprob: -16.285242080688477
    10. '   ' → logprob: -16.285242080688477

Token 84: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.4849443838757e-06
    2. '*' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. 'ine' → logprob: -16.250003814697266
    5. ' *' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '  ' → logprob: -17.625003814697266
    8. '```' → logprob: -17.750003814697266
    9. '_' → logprob: -18.187503814697266
    10. '`' → logprob: -18.375003814697266

Token 85: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759970545768738
    2. ' *' → logprob: -0.8259970545768738
    3. '9' → logprob: -10.700997352600098
    4. '**' → logprob: -11.200997352600098
    5. ' ' → logprob: -11.575997352600098
    6. ' ' → logprob: -12.200997352600098
    7. ' **' → logprob: -12.825997352600098
    8. ' *
' → logprob: -13.575997352600098
    9. '*object' → logprob: -14.450997352600098
    10. '*
' → logprob: -14.700997352600098

Token 86: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -16.875001907348633
    5. '९' → logprob: -17.687501907348633
    6. '  ' → logprob: -18.250001907348633
    7. '９' → logprob: -18.437501907348633
    8. '۹' → logprob: -18.500001907348633
    9. '`' → logprob: -18.500001907348633
    10. '৯' → logprob: -18.812501907348633

Token 87: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. '९' → logprob: -18.125
    6. '৯' → logprob: -18.875
    7. '۹' → logprob: -18.875
    8. '９' → logprob: -19.3125
    9. '  ' → logprob: -19.375
    10. '`' → logprob: -19.5

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4989334046840668
    2. '   ' → logprob: -1.1239334344863892
    3. '<|end|>' → logprob: -2.9989333152770996
    4. '    
' → logprob: -4.6239333152771
    5. '  
' → logprob: -5.9989333152771
    6. ' 
' → logprob: -6.3739333152771
    7. 'n' → logprob: -7.1239333152771
    8. '```' → logprob: -7.2489333152771
    9. '<|end|>' → logprob: -7.3739333152771
    10. '   
' → logprob: -7.7489333152771

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13605011999607086
    2. '
' → logprob: -3.011050224304199
    3. '<|end|>' → logprob: -3.011050224304199
    4. ' ' → logprob: -4.636050224304199
    5. '    
' → logprob: -5.261050224304199
    6. ' 
' → logprob: -5.636050224304199
    7. 'n' → logprob: -5.886050224304199
    8. '  
' → logprob: -6.386050224304199
    9. '```' → logprob: -6.636050224304199
    10. '  ' → logprob: -7.261050224304199

Token 90: ' nums' (ID: 18117)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06208520755171776
    2. '   ' → logprob: -3.1870851516723633
    3. ' dp' → logprob: -5.187085151672363
    4. 'cost' → logprob: -5.312085151672363
    5. 'nums' (adapté à ' nums') → logprob: -6.187085151672363
    6. 'dist' → logprob: -6.937085151672363
    7. 'm' → logprob: -7.312085151672363
    8. '    
' → logprob: -7.437085151672363
    9. '#' → logprob: -7.562085151672363
    10. '
' → logprob: -8.062085151672363

Token 91: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5057312846183777
    2. '.' → logprob: -1.2557313442230225
    3. '<|end|>' → logprob: -2.5057313442230225
    4. ')' → logprob: -4.380731105804443
    5. '[' → logprob: -5.380731105804443
    6. '.append' → logprob: -5.755731105804443
    7. '.pop' → logprob: -6.255731105804443
    8. '[:]' → logprob: -6.755731105804443
    9. '<|end|>' → logprob: -6.755731105804443
    10. ',' → logprob: -7.005731105804443

Token 92: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11289077997207642
    2. '(' → logprob: -2.2378907203674316
    3. '()
' → logprob: -9.86289119720459
    4. '()

' → logprob: -12.86289119720459
    5. '(
' → logprob: -12.98789119720459
    6. ' ()' → logprob: -13.11289119720459
    7. '()`' → logprob: -13.73789119720459
    8. '();' → logprob: -13.98789119720459
    9. '(

' → logprob: -13.98789119720459
    10. '()
' → logprob: -14.11289119720459

Token 93: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020196489989757538
    2. '=True' → logprob: -4.645196437835693
    3. ',' → logprob: -5.395196437835693
    4. '=' → logprob: -5.645196437835693
    5. ',)' → logprob: -6.270196437835693
    6. '(' → logprob: -9.270196914672852
    7. '))' → logprob: -9.645196914672852
    8. '()' → logprob: -9.645196914672852
    9. ' )' → logprob: -10.020196914672852
    10. '=False' → logprob: -10.395196914672852

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011307948443572968
    2. ')
' → logprob: -9.125113487243652
    3. ' )' → logprob: -12.750113487243652
    4. '   ' → logprob: -14.875113487243652
    5. ')

' → logprob: -15.625113487243652
    6. ')
' → logprob: -16.000112533569336
    7. '))' → logprob: -16.125112533569336
    8. ')`' → logprob: -16.375112533569336
    9. '`)' → logprob: -16.625112533569336
    10. '
' → logprob: -16.875112533569336

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7170041799545288
    2. '<|end|>' → logprob: -1.3420041799545288
    3. ')' → logprob: -2.3420042991638184
    4. '
' → logprob: -2.5920042991638184
    5. ':' → logprob: -3.3420042991638184
    6. ' ' → logprob: -4.717004299163818
    7. ',' → logprob: -4.717004299163818
    8. '\n' → logprob: -5.217004299163818
    9. '    
' → logprob: -5.217004299163818
    10. ' 
' → logprob: -5.717004299163818

Token 96: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.740770161151886
    2. '   ' → logprob: -1.4907701015472412
    3. ' dp' → logprob: -2.365770101547241
    4. 'for' → logprob: -2.615770101547241
    5. '<|end|>' → logprob: -3.240770101547241
    6. ' for' → logprob: -3.740770101547241
    7. ' ' → logprob: -4.11577033996582
    8. ')' → logprob: -4.49077033996582
    9. '    ' → logprob: -4.74077033996582
    10. 'm' → logprob: -5.61577033996582

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008675140561535954
    2. '=' → logprob: -7.1258673667907715
    3. '[' → logprob: -9.87586784362793
    4. ' ' → logprob: -12.12586784362793
    5. ' =[' → logprob: -12.25086784362793
    6. '=[' → logprob: -14.37586784362793
    7. '_' → logprob: -15.75086784362793
    8. ',' → logprob: -16.00086784362793
    9. ' [' → logprob: -16.12586784362793
    10. ' =
' → logprob: -16.12586784362793

Token 98: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3590814471244812
    2. ' [' → logprob: -1.359081506729126
    3. '[n' → logprob: -3.109081506729126
    4. '[int' → logprob: -9.859081268310547
    5. '[num' → logprob: -10.484081268310547
    6. '[len' → logprob: -10.609081268310547
    7. '[-' → logprob: -11.234081268310547
    8. '[i' → logprob: -12.734081268310547
    9. '[str' → logprob: -12.734081268310547
    10. '[node' → logprob: -12.859081268310547

Token 99: 'i' (ID: 72)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8259603381156921
    2. 'float' → logprob: -0.9509603381156921
    3. '0' → logprob: -1.825960397720337
    4. 'n' → logprob: -4.450960159301758
    5. '100' → logprob: -6.325960159301758
    6. '1' → logprob: -8.325960159301758
    7. ' float' → logprob: -8.450960159301758
    8. 'int' → logprob: -8.450960159301758
    9. ' ' → logprob: -8.950960159301758
    10. '999' → logprob: -9.075960159301758

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1323348730802536
    2. ']' → logprob: -3.0073349475860596
    3. 'for' → logprob: -3.5073349475860596
    4. 'n' → logprob: -3.5073349475860596
    5. ']*(' → logprob: -4.8823347091674805
    6. '+' → logprob: -6.6323347091674805
    7. ')' → logprob: -7.0073347091674805
    8. ' *' → logprob: -7.0073347091674805
    9. ' ' → logprob: -7.1323347091674805
    10. 'nt' → logprob: -7.3823347091674805

Token 101: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.039441272616386414
    2. 'range' → logprob: -3.2894413471221924
    3. ' i' → logprob: -6.664441108703613
    4. 'i' → logprob: -9.039441108703613
    5. ' ' → logprob: -13.539441108703613
    6. '(range' → logprob: -13.539441108703613
    7. ' xrange' → logprob: -14.164441108703613
    8. '	range' → logprob: -14.289441108703613
    9. '_range' → logprob: -14.914441108703613
    10. '  ' → logprob: -15.664441108703613

Token 102: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05051096901297569
    2. ' in' → logprob: -3.550510883331299
    3. 'range' → logprob: -3.925510883331299
    4. ' ' → logprob: -7.675510883331299
    5. 'in' → logprob: -8.175511360168457
    6. ' xrange' → logprob: -10.175511360168457
    7. '(range' → logprob: -11.425511360168457
    8. ' i' → logprob: -11.925511360168457
    9. '	range' → logprob: -12.425511360168457
    10. '  ' → logprob: -12.550511360168457

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889407873153687
    2. ' range' → logprob: -2.5788941383361816
    3. ' ' → logprob: -12.703893661499023
    4. '(range' → logprob: -14.453893661499023
    5. '	range' → logprob: -15.078893661499023
    6. '  ' → logprob: -15.453893661499023
    7. 'r' → logprob: -17.078893661499023
    8. ' xrange' → logprob: -17.078893661499023
    9. 'ran' → logprob: -17.078893661499023
    10. '   ' → logprob: -17.078893661499023

Token 104: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004646095912903547
    2. '(' → logprob: -5.379646301269531
    3. ' (' → logprob: -10.754646301269531
    4. '(
' → logprob: -12.754646301269531
    5. 'n' → logprob: -13.629646301269531
    6. ' n' → logprob: -15.754646301269531
    7. ' ' → logprob: -16.62964630126953
    8. '   ' → logprob: -16.75464630126953
    9. '((' → logprob: -17.12964630126953
    10. '(

' → logprob: -17.37964630126953

Token 105: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1544785499572754
    2. ' n' → logprob: -2.0294785499572754
    3. '(n' → logprob: -4.529478549957275
    4. '   ' → logprob: -7.529478549957275
    5. ' (' → logprob: -8.529478073120117
    6. '0' → logprob: -9.779478073120117
    7. '(' → logprob: -10.029478073120117
    8. ' ' → logprob: -10.404478073120117
    9. '	n' → logprob: -10.529478073120117
    10. ')n' → logprob: -10.904478073120117

Token 106: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2788701057434082
    2. ' n' → logprob: -1.4038701057434082
    3. '(n' → logprob: -1.9038701057434082
    4. '00' → logprob: -2.528870105743408
    5. '000' → logprob: -3.028870105743408
    6. 'n' → logprob: -3.153870105743408
    7. '+' → logprob: -4.153870105743408
    8. ' (' → logprob: -4.278870105743408
    9. '022' → logprob: -4.278870105743408
    10. '*n' → logprob: -4.278870105743408

Token 107: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2629092335700989
    2. ' n' → logprob: -2.262909173965454
    3. '(n' → logprob: -2.887909173965454
    4. '10' → logprob: -3.262909173965454
    5. ' (' → logprob: -4.137909412384033
    6. '0' → logprob: -5.262909412384033
    7. ' ' → logprob: -5.387909412384033
    8. '000' → logprob: -6.512909412384033
    9. '100' → logprob: -6.637909412384033
    10. '(' → logprob: -6.887909412384033

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868938982486725
    2. ' +' → logprob: -1.13689386844635
    3. ')' → logprob: -11.636894226074219
    4. ' ' → logprob: -12.511894226074219
    5. ')]' → logprob: -12.636894226074219
    6. ' +
' → logprob: -13.011894226074219
    7. '+
' → logprob: -13.886894226074219
    8. '+)' → logprob: -14.136894226074219
    9. ')+' → logprob: -14.136894226074219
    10. ')])' → logprob: -14.636894226074219

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016465028747916222
    2. ' ' → logprob: -6.501646518707275
    3. '2' → logprob: -8.876646041870117
    4. '   ' → logprob: -13.001646041870117
    5. '+' → logprob: -14.626646041870117
    6. '  ' → logprob: -14.876646041870117
    7. '
' → logprob: -15.251646041870117
    8. '10' → logprob: -15.376646041870117
    9. '3' → logprob: -16.126646041870117
    10. ')' → logprob: -16.251646041870117

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.4192871175473556e-05
    2. ' ' → logprob: -10.375054359436035
    3. '2' → logprob: -11.375054359436035
    4. '10' → logprob: -11.625054359436035
    5. '100' → logprob: -13.625054359436035
    6. '5' → logprob: -14.875054359436035
    7. '   ' → logprob: -15.500054359436035
    8. '7' → logprob: -15.625054359436035
    9. '50' → logprob: -16.25005340576172
    10. '20' → logprob: -16.37505340576172

Token 111: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008859075605869293
    2. ']' → logprob: -5.133859157562256
    3. ')' → logprob: -6.008859157562256
    4. ' )' → logprob: -9.008858680725098
    5. '])' → logprob: -9.258858680725098
    6. ')]
' → logprob: -9.383858680725098
    7. ' ]' → logprob: -9.508858680725098
    8. ')])' → logprob: -9.758858680725098
    9. '])]' → logprob: -10.883858680725098
    10. ' ])' → logprob: -11.883858680725098

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10340835899114609
    2. ' for' → logprob: -3.1034083366394043
    3. '<|end|>' → logprob: -3.6034083366394043
    4. '
' → logprob: -4.228408336639404
    5. 'for' → logprob: -5.353408336639404
    6. '    
' → logprob: -5.978408336639404
    7. ' ' → logprob: -6.478408336639404
    8. ' 
' → logprob: -7.103408336639404
    9. ')' → logprob: -7.853408336639404
    10. '  
' → logprob: -8.228408813476562

Token 113: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.771942675113678
    2. ' for' → logprob: -1.1469426155090332
    3. '
' → logprob: -1.8969426155090332
    4. 'for' (adapté à ' for') → logprob: -3.146942615509033
    5. ' ' → logprob: -4.646942615509033
    6. ' 
' → logprob: -5.271942615509033
    7. '    
' → logprob: -5.521942615509033
    8. '<|end|>' → logprob: -5.646942615509033
    9. '\n' → logprob: -6.521942615509033
    10. '  
' → logprob: -6.896942615509033

Token 114: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2231467217206955
    2. 'i' → logprob: -2.223146677017212
    3. ' num' → logprob: -2.848146677017212
    4. ' x' → logprob: -3.848146677017212
    5. 'x' → logprob: -5.598146915435791
    6. 'num' → logprob: -5.723146915435791
    7. ' ' → logprob: -5.973146915435791
    8. ' v' → logprob: -7.098146915435791
    9. ' n' → logprob: -7.848146915435791
    10. '   ' → logprob: -8.473146438598633

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01611425168812275
    2. 'in' → logprob: -4.141114234924316
    3. ' ' → logprob: -10.016114234924316
    4. 's' → logprob: -10.516114234924316
    5. '  ' → logprob: -13.016114234924316
    6. '	in' → logprob: -13.141114234924316
    7. 'n' → logprob: -13.516114234924316
    8. ' i' → logprob: -14.766114234924316
    9. ',' → logprob: -14.891114234924316
    10. '   ' → logprob: -15.266114234924316

Token 116: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.3869572579860687
    2. ' nums' → logprob: -1.1369572877883911
    3. '(nums' → logprob: -10.136957168579102
    4. 'num' → logprob: -10.136957168579102
    5. '_nums' → logprob: -12.386957168579102
    6. '
' → logprob: -14.011957168579102
    7. 'Nums' → logprob: -14.261957168579102
    8. ' num' → logprob: -14.386957168579102
    9. ' ' → logprob: -15.261957168579102
    10. '   ' → logprob: -16.1369571685791

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.12258882028982e-05
    2. ':
' → logprob: -9.75006103515625
    3. ' :' → logprob: -13.37506103515625
    4. '):' → logprob: -13.87506103515625
    5. '   ' → logprob: -16.25006103515625
    6. ',' → logprob: -16.37506103515625
    7. ':**' → logprob: -17.25006103515625
    8. ':

' → logprob: -17.50006103515625
    9. ':
' → logprob: -18.00006103515625
    10. '):
' → logprob: -18.00006103515625

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1605166792869568
    2. '   ' → logprob: -2.9105167388916016
    3. ' ' → logprob: -3.4105167388916016
    4. '    ' → logprob: -3.7855167388916016
    5. '<|end|>' → logprob: -3.7855167388916016
    6. ':' → logprob: -5.285516738891602
    7. ' 
' → logprob: -6.035516738891602
    8. ',' → logprob: -6.660516738891602
    9. '    
' → logprob: -6.910516738891602
    10. '        
' → logprob: -7.160516738891602

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0007332704844884574
    2. '   ' → logprob: -8.250733375549316
    3. ' ' → logprob: -8.375733375549316
    4. 'for' (adapté à ' for') → logprob: -9.000733375549316
    5. ' i' → logprob: -9.625733375549316
    6. '    ' → logprob: -11.000733375549316
    7. ' range' → logprob: -11.500733375549316
    8. ' 
' → logprob: -12.125733375549316
    9. '  ' → logprob: -12.500733375549316
    10. ' in' → logprob: -12.625733375549316

Token 120: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06329107284545898
    2. 'i' → logprob: -2.813291072845459
    3. ' j' → logprob: -7.188291072845459
    4. ' x' → logprob: -8.563291549682617
    5. 'j' → logprob: -8.813291549682617
    6. ' range' → logprob: -9.188291549682617
    7. 'x' → logprob: -10.063291549682617
    8. ' ' → logprob: -10.313291549682617
    9. 'range' → logprob: -11.188291549682617
    10. 'v' → logprob: -11.938291549682617

Token 121: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00408647395670414
    2. 'in' → logprob: -5.504086494445801
    3. ' ' → logprob: -12.1290864944458
    4. '	in' → logprob: -13.5040864944458
    5. '  ' → logprob: -15.0040864944458
    6. '   ' → logprob: -15.5040864944458
    7. 'range' → logprob: -15.6290864944458
    8. '    ' → logprob: -16.629085540771484
    9. ' ' → logprob: -16.754085540771484
    10. ',' → logprob: -16.879085540771484

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017641937592998147
    2. 'in' → logprob: -6.376764297485352
    3. 'range' → logprob: -10.626764297485352
    4. ' ' → logprob: -11.251764297485352
    5. 'n' → logprob: -11.876764297485352
    6. ',' → logprob: -12.251764297485352
    7. ' i' → logprob: -12.501764297485352
    8. '1' → logprob: -13.126764297485352
    9. ' range' → logprob: -13.376764297485352
    10. '   ' → logprob: -13.626764297485352

Token 123: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.016043050214648247
    2. 'range' → logprob: -4.141043186187744
    3. ' ' → logprob: -12.266042709350586
    4. '(range' → logprob: -13.641042709350586
    5. '   ' → logprob: -13.891042709350586
    6. '  ' → logprob: -14.141042709350586
    7. '	range' → logprob: -14.641042709350586
    8. '    ' → logprob: -16.266042709350586
    9. 'Range' → logprob: -16.391042709350586
    10. '[' → logprob: -16.516042709350586

Token 124: '(n' (ID: 2406)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00043341092532500625
    2. '(' → logprob: -8.625432968139648
    3. 'num' → logprob: -9.000432968139648
    4. '(len' → logprob: -9.500432968139648
    5. '(n' → logprob: -10.375432968139648
    6. ' num' → logprob: -11.125432968139648
    7. '(nums' → logprob: -12.000432968139648
    8. '[num' → logprob: -13.125432968139648
    9. ' (' → logprob: -14.500432968139648
    10. '	num' → logprob: -14.750432968139648

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.656028687953949
    2. ',num' → logprob: -1.1560287475585938
    3. ',' → logprob: -2.2810287475585938
    4. ' +' → logprob: -3.6560287475585938
    5. 'num' → logprob: -3.9060287475585938
    6. '-num' → logprob: -4.781028747558594
    7. ' -' → logprob: -6.406028747558594
    8. ' num' → logprob: -6.531028747558594
    9. '*num' → logprob: -6.531028747558594
    10. '*' → logprob: -7.031028747558594

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015285481931641698
    2. 'num' → logprob: -6.751528739929199
    3. ' ' → logprob: -8.0015287399292
    4. ' num' → logprob: -11.0015287399292
    5. '   ' → logprob: -13.1265287399292
    6. 'nums' → logprob: -14.0015287399292
    7. '  ' → logprob: -14.7515287399292
    8. '-' → logprob: -15.1265287399292
    9. '
' → logprob: -15.1265287399292
    10. '+' → logprob: -15.1265287399292

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014978687977418303
    2. 'num' → logprob: -9.250149726867676
    3. ' ' → logprob: -9.875149726867676
    4. '0' → logprob: -14.625149726867676
    5. '-' → logprob: -15.125149726867676
    6. ' num' → logprob: -15.250149726867676
    7. '   ' → logprob: -15.500149726867676
    8. '
' → logprob: -15.750149726867676
    9. '2' → logprob: -15.875149726867676
    10. 'nums' → logprob: -15.875149726867676

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007856692187488079
    2. ',' → logprob: -5.007856845855713
    3. '):
' → logprob: -7.257856845855713
    4. ',n' → logprob: -8.882856369018555
    5. ' ):' → logprob: -9.507856369018555
    6. ')' → logprob: -9.632856369018555
    7. ',num' → logprob: -9.632856369018555
    8. ':' → logprob: -9.757856369018555
    9. '   ' → logprob: -11.007856369018555
    10. ' ,' → logprob: -12.632856369018555

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8575822710990906
    2. '<|end|>' → logprob: -1.2325823307037354
    3. '        ' → logprob: -2.2325823307037354
    4. '       ' → logprob: -2.9825823307037354
    5. ':' → logprob: -2.9825823307037354
    6. ',' → logprob: -3.8575823307037354
    7. '            ' → logprob: -4.607582092285156
    8. '
' → logprob: -4.732582092285156
    9. ' ' → logprob: -4.857582092285156
    10. ' if' → logprob: -4.982582092285156

Token 130: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03226839005947113
    2. '   ' → logprob: -4.407268524169922
    3. ' for' → logprob: -5.032268524169922
    4. 'if' → logprob: -5.532268524169922
    5. ' dp' → logprob: -5.657268524169922
    6. '    ' → logprob: -6.282268524169922
    7. ' j' → logprob: -6.782268524169922
    8. ' ' → logprob: -6.907268524169922
    9. 'dp' (adapté à ' dp') → logprob: -7.532268524169922
    10. '           ' → logprob: -7.907268524169922

Token 131: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.020355364307761192
    2. '[min' → logprob: -4.270355224609375
    3. '[num' → logprob: -5.395355224609375
    4. 'min' → logprob: -7.520355224609375
    5. 'num' → logprob: -7.645355224609375
    6. '[' → logprob: -8.645355224609375
    7. '[
' → logprob: -9.270355224609375
    8. ' [' → logprob: -9.520355224609375
    9. 'j' → logprob: -9.895355224609375
    10. '
' → logprob: -9.895355224609375

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5558789372444153
    2. '+' → logprob: -1.4308788776397705
    3. ' +' → logprob: -1.9308788776397705
    4. ']' → logprob: -3.4308788776397705
    5. ' -' → logprob: -5.30587911605835
    6. '+j' → logprob: -6.18087911605835
    7. '   ' → logprob: -7.68087911605835
    8. '-' → logprob: -7.93087911605835
    9. ' ' → logprob: -8.305878639221191
    10. ']+' → logprob: -8.430878639221191

Token 133: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1809205710887909
    2. '+' → logprob: -2.4309206008911133
    3. ']=' → logprob: -3.1809206008911133
    4. ' +' → logprob: -4.430920600891113
    5. ' -' → logprob: -4.680920600891113
    6. '-' → logprob: -5.430920600891113
    7. '=' → logprob: -6.305920600891113
    8. '-num' → logprob: -6.305920600891113
    9. ' ]' → logprob: -6.680920600891113
    10. ' =' → logprob: -6.805920600891113

Token 134: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -7.465036105713807e-06
    2. ' num' → logprob: -11.875007629394531
    3. '[num' → logprob: -16.25000762939453
    4. '(num' → logprob: -16.75000762939453
    5. '   ' → logprob: -16.87500762939453
    6. '1' → logprob: -17.12500762939453
    7. '	num' → logprob: -17.25000762939453
    8. '*num' → logprob: -18.00000762939453
    9. '=num' → logprob: -18.25000762939453
    10. '
' → logprob: -18.25000762939453

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003637488465756178
    2. ']=' → logprob: -5.878637313842773
    3. ' ]' → logprob: -7.878637313842773
    4. ')' → logprob: -8.503637313842773
    5. ' =' → logprob: -8.878637313842773
    6. '=' → logprob: -9.628637313842773
    7. '=min' → logprob: -11.503637313842773
    8. '>' → logprob: -12.128637313842773
    9. '])' → logprob: -12.378637313842773
    10. '[' → logprob: -12.753637313842773

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03369860723614693
    2. '=' → logprob: -3.408698558807373
    3. '=min' → logprob: -9.908699035644531
    4. '    ' → logprob: -14.158699035644531
    5. ']' → logprob: -14.408699035644531
    6. '[' → logprob: -14.658699035644531
    7. 'min' → logprob: -15.158699035644531
    8. '   ' → logprob: -15.283699035644531
    9. ')' → logprob: -15.658699035644531
    10. ']=' → logprob: -16.03369903564453

Token 137: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815216802060604
    2. ' min' → logprob: -4.018152236938477
    3. '	min' → logprob: -13.268152236938477
    4. '   ' → logprob: -15.018152236938477
    5. 'max' → logprob: -16.018152236938477
    6. ' ' → logprob: -17.268152236938477
    7. '(min' → logprob: -17.393152236938477
    8. '[min' → logprob: -17.393152236938477
    9. 'mi' → logprob: -17.518152236938477
    10. '=min' → logprob: -18.268152236938477

Token 138: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.011058318428695202
    2. '(' → logprob: -4.511058330535889
    3. '(
' → logprob: -11.51105785369873
    4. '(

' → logprob: -15.13605785369873
    5. ' (' → logprob: -15.76105785369873
    6. '	dp' → logprob: -16.636058807373047
    7. '(d' → logprob: -17.511058807373047
    8. 'dp' → logprob: -17.886058807373047
    9. '(df' → logprob: -19.011058807373047
    10. '([' → logprob: -19.261058807373047

Token 139: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.500028610229492
    3. '[
' → logprob: -13.750028610229492
    4. ' [' → logprob: -16.125028610229492
    5. '[js' → logprob: -16.500028610229492
    6. 'j' → logprob: -18.375028610229492
    7. '```' → logprob: -18.875028610229492
    8. ')' → logprob: -19.500028610229492
    9. '[i' → logprob: -19.625028610229492
    10. ')[' → logprob: -19.750028610229492

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00343161984346807
    2. '+' → logprob: -6.003431797027588
    3. 'num' → logprob: -7.253431797027588
    4. '_num' → logprob: -10.12843132019043
    5. ')' → logprob: -10.37843132019043
    6. ' +' → logprob: -10.62843132019043
    7. '<|end|>' → logprob: -10.87843132019043
    8. '...' → logprob: -11.00343132019043
    9. '<|end|>' → logprob: -11.25343132019043
    10. '   ' → logprob: -11.25343132019043

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005827233660966158
    2. ' +' → logprob: -5.2558274269104
    3. ']+' → logprob: -8.630826950073242
    4. '[num' → logprob: -8.755826950073242
    5. ']' → logprob: -8.880826950073242
    6. '[' → logprob: -10.005826950073242
    7. '+j' → logprob: -10.005826950073242
    8. '[j' → logprob: -11.255826950073242
    9. '   ' → logprob: -12.755826950073242
    10. '+
' → logprob: -13.005826950073242

Token 142: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -6.337155355140567e-05
    2. ' num' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.750062942504883
    4. ' ' → logprob: -14.375062942504883
    5. 'nums' → logprob: -14.500062942504883
    6. ']' → logprob: -14.750062942504883
    7. '1' → logprob: -14.875062942504883
    8. '	num' → logprob: -14.875062942504883
    9. '_num' → logprob: -15.000062942504883
    10. '[num' → logprob: -15.750062942504883

Token 143: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.011053833179175854
    2. ',' → logprob: -5.011054039001465
    3. ' ],' → logprob: -5.636054039001465
    4. ']' → logprob: -7.761054039001465
    5. '],
' → logprob: -8.386054039001465
    6. ' ,' → logprob: -9.386054039001465
    7. ' ],
' → logprob: -12.136054039001465
    8. '],[' → logprob: -12.386054039001465
    9. '   ' → logprob: -12.511054039001465
    10. ']+' → logprob: -12.636054039001465

Token 144: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3870191276073456
    2. 'dp' → logprob: -1.137019157409668
    3. '	dp' → logprob: -9.262019157409668
    4. '(dp' → logprob: -10.262019157409668
    5. '   ' → logprob: -11.387019157409668
    6. '_dp' → logprob: -13.387019157409668
    7. '.dp' → logprob: -13.637019157409668
    8. ' ' → logprob: -13.762019157409668
    9. '1' → logprob: -13.887019157409668
    10. ')' → logprob: -14.387019157409668

Token 145: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.125004768371582
    3. '[
' → logprob: -14.000004768371582
    4. ' [' → logprob: -14.250004768371582
    5. 'j' → logprob: -14.375004768371582
    6. '[js' → logprob: -15.250004768371582
    7. ' j' → logprob: -16.1250057220459
    8. '	j' → logprob: -16.6250057220459
    9. '   ' → logprob: -17.0000057220459
    10. ' ' → logprob: -17.0000057220459

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12225700914859772
    2. '])' → logprob: -2.6222569942474365
    3. ']' → logprob: -3.3722569942474365
    4. ')' → logprob: -5.997257232666016
    5. '+' → logprob: -5.997257232666016
    6. ')]' → logprob: -7.497257232666016
    7. ']+' → logprob: -7.747257232666016
    8. '[' → logprob: -7.997257232666016
    9. '_]' → logprob: -7.997257232666016
    10. '[j' → logprob: -8.247257232666016

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012845005840063095
    2. ']+' → logprob: -4.387845039367676
    3. ' ]' → logprob: -8.012845039367676
    4. '[' → logprob: -13.762845039367676
    5. '   ' → logprob: -14.387845039367676
    6. ']
' → logprob: -14.387845039367676
    7. '+' → logprob: -14.387845039367676
    8. '+]' → logprob: -15.137845039367676
    9. ' ' → logprob: -15.637845039367676
    10. ']+=' → logprob: -16.13784408569336

Token 148: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6828827857971191
    2. ' +' → logprob: -1.1828827857971191
    3. ']' → logprob: -2.057882785797119
    4. ']+' → logprob: -2.807882785797119
    5. ' ]' → logprob: -8.557882308959961
    6. ')+' → logprob: -9.557882308959961
    7. ')' → logprob: -10.182882308959961
    8. '[' → logprob: -11.307882308959961
    9. ' ' → logprob: -11.432882308959961
    10. '+]' → logprob: -11.432882308959961

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.875553131103516
    4. '  ' → logprob: -17.813053131103516
    5. 'dp' → logprob: -18.125553131103516
    6. '１' → logprob: -18.500553131103516
    7. '```' → logprob: -18.938053131103516
    8. '[' → logprob: -19.375553131103516
    9. '
' → logprob: -19.688053131103516
    10. ' ' → logprob: -19.688053131103516

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -15.50048828125
    4. '  ' → logprob: -16.62548828125
    5. '１' → logprob: -17.06298828125
    6. '
' → logprob: -17.50048828125
    7. ')' → logprob: -17.81298828125
    8. '

' → logprob: -17.81298828125
    9. '```' → logprob: -17.81298828125
    10. ' ' → logprob: -18.18798828125

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005548207554966211
    2. ')
' → logprob: -7.500555038452148
    3. ' )' → logprob: -13.625555038452148
    4. '   ' → logprob: -15.500555038452148
    5. ')
' → logprob: -16.00055503845215
    6. '
' → logprob: -16.25055503845215
    7. '       ' → logprob: -16.62555503845215
    8. '<|end|>' → logprob: -16.87555503845215
    9. ')return' → logprob: -17.12555503845215
    10. '）' → logprob: -17.37555503845215

Token 152: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018471350893378258
    2. '   ' → logprob: -4.3934712409973145
    3. 'for' → logprob: -5.7684712409973145
    4. ' print' → logprob: -6.3934712409973145
    5. ' for' → logprob: -7.0184712409973145
    6. '```' → logprob: -9.018471717834473
    7. '    
' → logprob: -9.893471717834473
    8. '
' → logprob: -10.143471717834473
    9. ' 
' → logprob: -11.643471717834473
    10. 'return' → logprob: -11.768471717834473

Token 154: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.012580640614032745
    2. '(' → logprob: -4.512580871582031
    3. '(min' → logprob: -6.512580871582031
    4. '(
' → logprob: -10.137580871582031
    5. '(max' → logprob: -12.387580871582031
    6. ' (' → logprob: -13.137580871582031
    7. 'dp' → logprob: -14.762580871582031
    8. '(

' → logprob: -15.262580871582031
    9. ' dp' → logprob: -16.13758087158203
    10. '(n' → logprob: -16.51258087158203

Token 155: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.875008583068848
    3. '[
' → logprob: -13.875008583068848
    4. ')[' → logprob: -16.50000762939453
    5. '[j' → logprob: -16.75000762939453
    6. ')' → logprob: -16.75000762939453
    7. ' [' → logprob: -16.87500762939453
    8. ')n' → logprob: -17.12500762939453
    9. '(n' → logprob: -17.37500762939453
    10. 'n' → logprob: -17.62500762939453

Token 156: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.038069721311330795
    2. ')' → logprob: -3.288069725036621
    3. '))' → logprob: -11.788069725036621
    4. ']' → logprob: -11.788069725036621
    5. '})' → logprob: -12.663069725036621
    6. '])
' → logprob: -12.788069725036621
    7. ')])' → logprob: -12.788069725036621
    8. ')]' → logprob: -13.163069725036621
    9. ' ])' → logprob: -13.538069725036621
    10. ')
' → logprob: -15.288069725036621

Token 157: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1804593801498413
    2. '__' → logprob: -1.8054593801498413
    3. ' ' → logprob: -7.680459499359131
    4. '_' → logprob: -8.430459022521973
    5. '_name' → logprob: -11.305459022521973
    6. ' ' → logprob: -12.055459022521973
    7. ' _' → logprob: -12.430459022521973
    8. '___' → logprob: -12.680459022521973
    9. ' ' → logprob: -12.680459022521973
    10. 'name' → logprob: -13.680459022521973

Token 159: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03206107020378113
    2. ' __' → logprob: -4.2820611000061035
    3. ' ==' → logprob: -4.4070611000061035
    4. '.__' → logprob: -6.2820611000061035
    5. '==' → logprob: -6.6570611000061035
    6. '.' → logprob: -7.2820611000061035
    7. '_' → logprob: -7.4070611000061035
    8. '__.__' → logprob: -8.157060623168945
    9. '[' → logprob: -8.282060623168945
    10. ' .' → logprob: -9.282060623168945

Token 160: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.179569077678025e-05
    2. '==' → logprob: -10.375041961669922
    3. ' ==' → logprob: -12.625041961669922
    4. '__.__' → logprob: -13.000041961669922
    5. '_' → logprob: -13.125041961669922
    6. '__
' → logprob: -13.500041961669922
    7. '__.' → logprob: -14.500041961669922
    8. '=="' → logprob: -14.875041961669922
    9. ' __' → logprob: -15.125041961669922
    10. '___' → logprob: -15.375041961669922

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40004679560661316
    2. '==' → logprob: -1.2750468254089355
    3. '__' → logprob: -3.1500468254089355
    4. '=="' → logprob: -5.0250468254089355
    5. '.' → logprob: -8.525046348571777
    6. '.__' → logprob: -8.650046348571777
    7. '[' → logprob: -9.275046348571777
    8. '=='' → logprob: -9.275046348571777
    9. ' =="' → logprob: -9.650046348571777
    10. '=' → logprob: -9.900046348571777

Token 162: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06198135390877724
    2. ''' → logprob: -2.811981439590454
    3. ' "__' → logprob: -11.561981201171875
    4. '__' → logprob: -12.686981201171875
    5. ' '__' → logprob: -14.811981201171875
    6. ''"' → logprob: -15.686981201171875
    7. '"'' → logprob: -15.686981201171875
    8. '"user' → logprob: -16.061981201171875
    9. '"name' → logprob: -16.686981201171875
    10. '"_' → logprob: -17.311981201171875

Token 163: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020890454470645636
    2. 'name' → logprob: -8.500208854675293
    3. '__' → logprob: -12.500208854675293
    4. '_main' → logprob: -13.375208854675293
    5. 'ma' → logprob: -15.875208854675293
    6. 'm' → logprob: -17.00020980834961
    7. ' main' → logprob: -17.12520980834961
    8. '-main' → logprob: -19.25020980834961
    9. '__':
' → logprob: -19.25020980834961
    10. '	main' → logprob: -19.50020980834961

Token 164: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.25307244062423706
    2. '__' → logprob: -1.5030725002288818
    3. '__:' → logprob: -6.878072261810303
    4. '':' → logprob: -9.878072738647461
    5. '__":
' → logprob: -10.753072738647461
    6. ':' → logprob: -10.878072738647461
    7. '_' → logprob: -11.628072738647461
    8. '__.' → logprob: -11.628072738647461
    9. '('__' → logprob: -14.378072738647461
    10. '():' → logprob: -14.628072738647461

Token 165: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.046254176646471024
    2. '   ' → logprob: -3.7962541580200195
    3. 'main' → logprob: -4.2962541580200195
    4. '	main' → logprob: -4.7962541580200195
    5. '    
' → logprob: -7.6712541580200195
    6. '(main' → logprob: -8.42125415802002
    7. '_main' → logprob: -9.67125415802002
    8. ' 
' → logprob: -10.04625415802002
    9. '<|end|>' → logprob: -10.92125415802002
    10. '.main' → logprob: -11.42125415802002

Token 166: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.15310683415737e-05
    2. ' main' → logprob: -10.750021934509277
    3. '	main' → logprob: -18.12502098083496
    4. '   ' → logprob: -20.87502098083496
    5. '_main' → logprob: -21.37502098083496
    6. '(main' → logprob: -21.87502098083496
    7. 'mai' → logprob: -22.62502098083496
    8. 'ma' → logprob: -22.75002098083496
    9. '.main' → logprob: -22.87502098083496
    10. 'maine' → logprob: -23.25002098083496

Token 167: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00029959288076497614
    2. '(' → logprob: -8.375299453735352
    3. '()
' → logprob: -9.750299453735352
    4. '()`' → logprob: -12.500299453735352
    5. '()">' → logprob: -13.750299453735352
    6. '()<' → logprob: -13.875299453735352
    7. ' ()' → logprob: -13.875299453735352
    8. '()

' → logprob: -14.125299453735352
    9. '()\' → logprob: -14.125299453735352
    10. '(
' → logprob: -14.375299453735352


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 165
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 48.48%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 85.45%
================================================================================
