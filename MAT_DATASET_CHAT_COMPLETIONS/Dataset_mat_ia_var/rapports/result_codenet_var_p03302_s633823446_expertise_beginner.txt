================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = raw_input().split()
a = int(a)
b = int(b)

if a + b == 15:
    print "+"
elif a * b == 15:
    print "*"
else:
    print "x"
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' raw' (ID: 11428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47484058141708374
    2. '_input' → logprob: -0.9748405814170837
    3. ' _' → logprob: -8.22484016418457
    4. '_in' → logprob: -8.97484016418457
    5. '_inputs' → logprob: -9.84984016418457
    6. '_i' → logprob: -9.97484016418457
    7. 'input' → logprob: -10.22484016418457
    8. '._' → logprob: -10.47484016418457
    9. '.' → logprob: -10.72484016418457
    10. '_a' → logprob: -10.84984016418457

Token 6: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009220616775564849
    2. ''' → logprob: -8.125922203063965
    3. '('' → logprob: -8.500922203063965
    4. '(
' → logprob: -9.125922203063965
    5. '("("' → logprob: -9.375922203063965
    6. '.' → logprob: -9.750922203063965
    7. '()' → logprob: -9.875922203063965
    8. '('.')' → logprob: -11.000922203063965
    9. ' (' → logprob: -11.250922203063965
    10. '"' → logprob: -11.375922203063965

Token 7: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03157411515712738
    2. '()' → logprob: -4.906574249267578
    3. '.strip' → logprob: -4.906574249267578
    4. '().' → logprob: -5.156574249267578
    5. 'split' → logprob: -5.156574249267578
    6. '.' → logprob: -5.656574249267578
    7. ',' → logprob: -7.531574249267578
    8. '(' → logprob: -8.156574249267578
    9. ' split' → logprob: -9.031574249267578
    10. 'strip' → logprob: -9.656574249267578

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0040325685404241085
    2. '()' → logprob: -5.629032611846924
    3. '('' → logprob: -8.629032135009766
    4. '(
' → logprob: -9.504032135009766
    5. ''' → logprob: -9.879032135009766
    6. '("("' → logprob: -10.754032135009766
    7. '`' → logprob: -10.879032135009766
    8. '(

' → logprob: -11.004032135009766
    9. ' (' → logprob: -11.379032135009766
    10. '"' → logprob: -11.379032135009766

Token 9: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14286458492279053
    2. '.' → logprob: -2.39286470413208
    3. '#' → logprob: -4.01786470413208
    4. '=' → logprob: -5.26786470413208
    5. 'print' → logprob: -5.76786470413208
    6. '[' → logprob: -5.89286470413208
    7. ',' → logprob: -6.01786470413208
    8. '<|end|>' → logprob: -6.26786470413208
    9. '```' → logprob: -6.39286470413208
    10. ')' → logprob: -7.39286470413208

Token 10: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6232136487960815
    2. '[' → logprob: -0.9982136487960815
    3. '<|end|>' → logprob: -2.623213768005371
    4. '.' → logprob: -4.623213768005371
    5. ' ' → logprob: -5.123213768005371
    6. 'a' → logprob: -6.248213768005371
    7. ')' → logprob: -6.373213768005371
    8. '.strip' → logprob: -7.248213768005371
    9. '```' → logprob: -7.998213768005371
    10. ' +' → logprob: -8.123213768005371

Token 11: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3060598373413086
    2. ' int' → logprob: -1.5560598373413086
    3. 'a' → logprob: -3.3060598373413086
    4. ' a' → logprob: -4.556059837341309
    5. 'input' → logprob: -6.306059837341309
    6. 'float' → logprob: -6.806059837341309
    7. ' input' → logprob: -7.056059837341309
    8. ' float' → logprob: -7.681059837341309
    9. 'raw' → logprob: -8.181059837341309
    10. 'b' → logprob: -8.306059837341309

Token 12: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5236033201217651
    2. '(a' → logprob: -0.8986033201217651
    3. 'a' → logprob: -7.898603439331055
    4. ' (' → logprob: -10.648603439331055
    5. '```' → logprob: -11.023603439331055
    6. ' ' → logprob: -11.273603439331055
    7. '('' → logprob: -11.773603439331055
    8. ')' → logprob: -11.773603439331055
    9. '()' → logprob: -12.148603439331055
    10. '`' → logprob: -12.523603439331055

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020473242329899222
    2. '+' → logprob: -8.625205039978027
    3. ' )' → logprob: -11.750205039978027
    4. '<|end|>' → logprob: -12.500205039978027
    5. ')
' → logprob: -12.750205039978027
    6. ')a' → logprob: -13.125205039978027
    7. '+)' → logprob: -13.250205039978027
    8. ')+' → logprob: -13.500205039978027
    9. '),' → logprob: -14.125205039978027
    10. '*' → logprob: -14.250205039978027

Token 14: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.127489447593689
    2. '<|end|>' → logprob: -1.127489447593689
    3. ' ' → logprob: -1.377489447593689
    4. '+' → logprob: -2.5024895668029785
    5. ' b' → logprob: -5.0024895668029785
    6. ' 
' → logprob: -6.5024895668029785
    7. ',' → logprob: -6.6274895668029785
    8. ' ,' → logprob: -6.7524895668029785
    9. '<|end|>' → logprob: -6.7524895668029785
    10. '[' → logprob: -6.7524895668029785

Token 15: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48506516218185425
    2. ' +' → logprob: -1.360065221786499
    3. '<|end|>' → logprob: -2.735065221786499
    4. ' ' → logprob: -3.735065221786499
    5. ' =' → logprob: -4.23506498336792
    6. ')' → logprob: -5.11006498336792
    7. ' +=' → logprob: -5.11006498336792
    8. ' *' → logprob: -6.11006498336792
    9. '=' → logprob: -6.23506498336792
    10. '*' → logprob: -6.36006498336792

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002088338136673
    2. ' int' → logprob: -2.3502087593078613
    3. ' ' → logprob: -14.60020923614502
    4. '[int' → logprob: -15.35020923614502
    5. '<int' → logprob: -15.47520923614502
    6. '0' → logprob: -15.60020923614502
    7. '(int' → logprob: -15.60020923614502
    8. 'raw' → logprob: -15.72520923614502
    9. '=int' → logprob: -15.85020923614502
    10. '  ' → logprob: -16.225208282470703

Token 17: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023752963170409203
    2. '(b' → logprob: -6.37737512588501
    3. '(a' → logprob: -7.50237512588501
    4. ' (' → logprob: -10.127375602722168
    5. 'b' → logprob: -10.877375602722168
    6. '```' → logprob: -11.252375602722168
    7. '(
' → logprob: -12.127375602722168
    8. '(

' → logprob: -12.127375602722168
    9. 'a' → logprob: -12.127375602722168
    10. '("("' → logprob: -12.252375602722168

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '))' → logprob: -13.500005722045898
    3. '')' → logprob: -13.750005722045898
    4. '+' → logprob: -13.875005722045898
    5. ' )' → logprob: -14.625005722045898
    6. ')
' → logprob: -15.000005722045898
    7. '#' → logprob: -15.375005722045898
    8. '`)' → logprob: -15.500005722045898
    9. '<|end|>' → logprob: -15.750005722045898
    10. '*' → logprob: -16.3750057220459

Token 19: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8454316854476929
    2. 'c' → logprob: -1.0954316854476929
    3. 'if' → logprob: -2.2204318046569824
    4. 'i' → logprob: -3.3454318046569824
    5. 'print' → logprob: -3.4704318046569824
    6. 'for' → logprob: -3.7204318046569824
    7. 'result' → logprob: -5.345431804656982
    8. 'sum' → logprob: -5.345431804656982
    9. 's' → logprob: -5.470431804656982
    10. 'n' → logprob: -5.470431804656982

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.008416705764830112
    2. 'a' → logprob: -4.883416652679443
    3. ' ' → logprob: -7.133416652679443
    4. ' ' → logprob: -12.133417129516602
    5. '	a' → logprob: -12.883417129516602
    6. ' b' → logprob: -13.383417129516602
    7. '  ' → logprob: -14.008417129516602
    8. ' (' → logprob: -14.258417129516602
    9. '_a' → logprob: -14.383417129516602
    10. ' а' → logprob: -15.758417129516602

Token 21: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08804901689291
    2. ' <' → logprob: -2.7130489349365234
    3. ' <=' → logprob: -5.463048934936523
    4. ' ' → logprob: -5.463048934936523
    5. ' ==' → logprob: -5.588048934936523
    6. ' >=' → logprob: -5.713048934936523
    7. '>' → logprob: -6.338048934936523
    8. '<' → logprob: -8.088048934936523
    9. '  ' → logprob: -9.213048934936523
    10. ' !=' → logprob: -9.588048934936523

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.386879563331604
    2. ' b' → logprob: -1.136879563331604
    3. ' ' → logprob: -12.011879920959473
    4. '1' → logprob: -13.886879920959473
    5. '>b' → logprob: -14.886879920959473
    6. '<|end|>' → logprob: -15.761879920959473
    7. '_b' → logprob: -16.136878967285156
    8. '>' → logprob: -16.136878967285156
    9. '7' → logprob: -16.261878967285156
    10. '	b' → logprob: -16.261878967285156

Token 23: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.019995179027318954
    2. ' ==' → logprob: -4.644995212554932
    3. '>' → logprob: -5.894995212554932
    4. ' >=' → logprob: -5.894995212554932
    5. ' <=' → logprob: -6.144995212554932
    6. ' ' → logprob: -6.769995212554932
    7. ' <' → logprob: -6.769995212554932
    8. '==' → logprob: -9.269994735717773
    9. '  ' → logprob: -10.019994735717773
    10. '<|end|>' → logprob: -10.769994735717773

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1086035743355751
    2. '10' → logprob: -2.8586034774780273
    3. '100' → logprob: -3.2336034774780273
    4. '0' → logprob: -5.358603477478027
    5. '42' → logprob: -7.483603477478027
    6. '20' → logprob: -8.608603477478027
    7. '3' → logprob: -8.858603477478027
    8. ' a' → logprob: -9.483603477478027
    9. '7' → logprob: -9.483603477478027
    10. '1' → logprob: -9.608603477478027

Token 25: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24176393449306488
    2. '100' → logprob: -1.741763949394226
    3. '0' → logprob: -3.8667638301849365
    4. '3' → logprob: -5.116764068603516
    5. '1' → logprob: -6.116764068603516
    6. '20' → logprob: -6.366764068603516
    7. '15' → logprob: -6.491764068603516
    8. '5' → logprob: -6.616764068603516
    9. ' ' → logprob: -6.866764068603516
    10. '7' → logprob: -6.991764068603516

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003812217037193477
    2. ' :' → logprob: -7.875380992889404
    3. ':
' → logprob: -14.625381469726562
    4. ':**' → logprob: -14.750381469726562
    5. '):' → logprob: -16.250381469726562
    6. ' and' → logprob: -16.750381469726562
    7. '>:' → logprob: -17.500381469726562
    8. '：' → logprob: -17.750381469726562
    9. ':def' → logprob: -18.375381469726562
    10. ':return' → logprob: -18.500381469726562

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.047276258468628
    2. ' print' → logprob: -1.047276258468628
    3. 'print' → logprob: -1.922276258468628
    4. ':' → logprob: -1.922276258468628
    5. '	print' → logprob: -5.672276496887207
    6. '\n' → logprob: -6.922276496887207
    7. '.' → logprob: -8.422276496887207
    8. '    ' → logprob: -8.672276496887207
    9. ' :' → logprob: -8.922276496887207
    10. ' ' → logprob: -9.047276496887207

Token 28: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.027183782309293747
    2. 'print' (adapté à ' print') → logprob: -3.652183771133423
    3. '   ' → logprob: -7.152184009552002
    4. '    ' → logprob: -9.777183532714844
    5. '	print' → logprob: -10.402183532714844
    6. ' ' → logprob: -12.277183532714844
    7. ' pass' → logprob: -13.527183532714844
    8. '\n' → logprob: -13.527183532714844
    9. '       ' → logprob: -13.777183532714844
    10. '```' → logprob: -14.277183532714844

Token 29: ' "+"
' (ID: 165471)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5351310968399048
    2. '("' → logprob: -0.9101310968399048
    3. '('' → logprob: -4.785130977630615
    4. '"' → logprob: -6.410130977630615
    5. '("")' → logprob: -7.160130977630615
    6. '(a' → logprob: -7.910130977630615
    7. '(True' → logprob: -8.285131454467773
    8. '()' → logprob: -8.285131454467773
    9. '15' → logprob: -9.660131454467773
    10. '("("' → logprob: -9.785131454467773

Token 30: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6337385177612305
    2. 'else' → logprob: -0.7587385177612305
    3. ' else' → logprob: -7.3837385177612305
    4. ' elif' → logprob: -8.50873851776123
    5. 'e' → logprob: -10.13373851776123
    6. ' ' → logprob: -10.38373851776123
    7. 'es' → logprob: -10.38373851776123
    8. '```' → logprob: -10.63373851776123
    9. '-' → logprob: -10.75873851776123
    10. 'elseif' → logprob: -10.75873851776123

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04559668153524399
    2. 'a' → logprob: -3.2955965995788574
    3. ' ' → logprob: -4.920596599578857
    4. ' (' → logprob: -9.170597076416016
    5. '  ' → logprob: -9.920597076416016
    6. '(' → logprob: -10.920597076416016
    7. '(a' → logprob: -11.045597076416016
    8. '	a' → logprob: -11.170597076416016
    9. ' ' → logprob: -11.920597076416016
    10. '"' → logprob: -12.858097076416016

Token 32: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5132602453231812
    2. ' +' → logprob: -1.3882602453231812
    3. '+' → logprob: -2.8882603645324707
    4. '-' → logprob: -2.8882603645324707
    5. '*' → logprob: -4.013260364532471
    6. ' *' → logprob: -4.138260364532471
    7. ' ' → logprob: -5.513260364532471
    8. ' ==' → logprob: -6.638260364532471
    9. ' >' → logprob: -8.388259887695312
    10. '==' → logprob: -8.388259887695312

Token 33: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28168314695358276
    2. ' b' → logprob: -1.4066832065582275
    3. ' ' → logprob: -7.656682968139648
    4. '<|end|>' → logprob: -9.906682968139648
    5. '  ' → logprob: -12.531682968139648
    6. '	b' → logprob: -13.781682968139648
    7. '<|end|>' → logprob: -14.531682968139648
    8. '10' → logprob: -14.531682968139648
    9. '_b' → logprob: -14.781682968139648
    10. '>b' → logprob: -14.781682968139648

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05179280787706375
    2. '==' → logprob: -3.051792860031128
    3. ' >' → logprob: -6.426792621612549
    4. ' ' → logprob: -7.051792621612549
    5. ' <=' → logprob: -8.176793098449707
    6. ' <' → logprob: -8.551793098449707
    7. ' >=' → logprob: -9.051793098449707
    8. '>' → logprob: -10.176793098449707
    9. '=' → logprob: -10.926793098449707
    10. ' =' → logprob: -11.551793098449707

Token 35: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.002950720489025116
    2. ' ' → logprob: -6.377950668334961
    3. '24' → logprob: -7.252950668334961
    4. '25' → logprob: -9.002950668334961
    5. '0' → logprob: -9.127950668334961
    6. '1' → logprob: -9.627950668334961
    7. '100' → logprob: -9.752950668334961
    8. '20' → logprob: -10.252950668334961
    9. '2' → logprob: -10.377950668334961
    10. '50' → logprob: -10.627950668334961

Token 36: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0013546408154070377
    2. ' ' → logprob: -7.876354694366455
    3. 'a' → logprob: -8.001354217529297
    4. 'b' → logprob: -8.126354217529297
    5. '24' → logprob: -9.376354217529297
    6. '1' → logprob: -9.751354217529297
    7. '50' → logprob: -10.251354217529297
    8. '0' → logprob: -10.501354217529297
    9. '   ' → logprob: -10.876354217529297
    10. '45' → logprob: -11.001354217529297

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.704065213445574e-05
    2. ':
' → logprob: -10.625046730041504
    3. ' :' → logprob: -10.875046730041504
    4. ':**' → logprob: -13.500046730041504
    5. '):' → logprob: -13.625046730041504
    6. '>:' → logprob: -14.625046730041504
    7. '":' → logprob: -16.50004768371582
    8. '   ' → logprob: -16.62504768371582
    9. '：' → logprob: -16.62504768371582
    10. '":"' → logprob: -16.75004768371582

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019051048904657364
    2. ':' → logprob: -5.3940510749816895
    3. '    ' → logprob: -5.3940510749816895
    4. '<|end|>' → logprob: -5.7690510749816895
    5. ' ' → logprob: -5.8940510749816895
    6. '       ' → logprob: -7.0190510749816895
    7. '"' → logprob: -7.1440510749816895
    8. '+' → logprob: -8.144050598144531
    9. ' print' → logprob: -8.394050598144531
    10. 'print' → logprob: -8.519050598144531

Token 39: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5820910930633545
    2. '   ' → logprob: -1.2070910930633545
    3. ' print' → logprob: -1.9570910930633545
    4. '	print' → logprob: -8.082091331481934
    5. '    ' → logprob: -8.207091331481934
    6. '```' → logprob: -8.957091331481934
    7. '       ' → logprob: -9.207091331481934
    8. '"' → logprob: -10.457091331481934
    9. ' ' → logprob: -10.582091331481934
    10. '.print' → logprob: -11.832091331481934

Token 40: ' "*' (ID: 32458)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.053505416959524155
    2. ' "' → logprob: -4.0535054206848145
    3. '"+"' → logprob: -4.0535054206848145
    4. ' "-"' → logprob: -4.8035054206848145
    5. ' "+"' → logprob: -4.9285054206848145
    6. '"-' → logprob: -7.5535054206848145
    7. ' ' → logprob: -8.178504943847656
    8. ' "*"' → logprob: -8.303504943847656
    9. ''' → logprob: -8.553504943847656
    10. '-' → logprob: -8.803504943847656

Token 41: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00013965457037556916
    2. '"
' → logprob: -9.375139236450195
    3. '+"' → logprob: -11.125139236450195
    4. '")' → logprob: -11.375139236450195
    5. '```' → logprob: -11.875139236450195
    6. '+' → logprob: -12.500139236450195
    7. '"+' → logprob: -12.875139236450195
    8. '"""' → logprob: -12.875139236450195
    9. ' "' → logprob: -13.125139236450195
    10. '"*' → logprob: -13.250139236450195

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.010152441449463367
    2. 'elif' → logprob: -4.635152339935303
    3. ' else' → logprob: -8.135152816772461
    4. '<|end|>' → logprob: -10.510152816772461
    5. '\n' → logprob: -10.760152816772461
    6. '```' → logprob: -11.135152816772461
    7. '\' → logprob: -11.635152816772461
    8. '.' → logprob: -11.760152816772461
    9. '_else' → logprob: -12.260152816772461
    10. '_' → logprob: -12.385152816772461

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009863656014204025
    2. ' :' → logprob: -7.000986576080322
    3. ':
' → logprob: -9.875986099243164
    4. '   ' → logprob: -11.500986099243164
    5. '":"' → logprob: -12.250986099243164
    6. ' ":"' → logprob: -13.000986099243164
    7. ' :
' → logprob: -13.250986099243164
    8. '":' → logprob: -13.625986099243164
    9. ' print' → logprob: -14.375986099243164
    10. 'print' → logprob: -14.875986099243164

Token 44: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2877848446369171
    2. 'print' → logprob: -1.5377848148345947
    3. '"-' → logprob: -4.037785053253174
    4. '   ' → logprob: -4.912785053253174
    5. ' "-"' → logprob: -6.037785053253174
    6. ' print' → logprob: -6.537785053253174
    7. '-' → logprob: -6.662785053253174
    8. ' ' → logprob: -6.787785053253174
    9. ' "' → logprob: -6.912785053253174
    10. '""' → logprob: -7.287785053253174

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8704290390014648
    2. '"' → logprob: -1.1204290390014648
    3. '"-' → logprob: -1.6204290390014648
    4. '-' → logprob: -2.995429039001465
    5. ' "-"' → logprob: -5.870429039001465
    6. ' print' → logprob: -6.620429039001465
    7. ' ' → logprob: -7.495429039001465
    8. '   ' → logprob: -7.495429039001465
    9. '("-' → logprob: -7.620429039001465
    10. '""' → logprob: -8.245429039001465

Token 46: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11142031103372574
    2. '("' → logprob: -2.4864203929901123
    3. '("")' → logprob: -5.486420154571533
    4. '(' → logprob: -5.486420154571533
    5. '("-' → logprob: -5.486420154571533
    6. '()' → logprob: -5.736420154571533
    7. ' ' → logprob: -6.111420154571533
    8. ' "' → logprob: -6.236420154571533
    9. '"-' → logprob: -7.361420154571533
    10. '("="' → logprob: -7.611420154571533

Token 47: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026191607117652893
    2. '?' → logprob: -3.9011917114257812
    3. '"' → logprob: -6.401191711425781
    4. '-"' → logprob: -6.651191711425781
    5. '"-' → logprob: -7.151191711425781
    6. '15' → logprob: -7.526191711425781
    7. '0' → logprob: -7.651191711425781
    8. '?"' → logprob: -8.276191711425781
    9. '=' → logprob: -8.526191711425781
    10. '+' → logprob: -9.526191711425781

Token 48: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.35837464465294e-05
    2. 'x' → logprob: -10.875043869018555
    3. '"x' → logprob: -12.000043869018555
    4. '*"' → logprob: -12.125043869018555
    5. '+"' → logprob: -12.375043869018555
    6. '"
' → logprob: -13.125043869018555
    7. ' "' → logprob: -13.250043869018555
    8. '```' → logprob: -13.875043869018555
    9. ''"' → logprob: -14.500043869018555
    10. 'a' → logprob: -14.625043869018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 28.26%
Précision adaptée (1ère position): 32.61%
Précision (top 10): 80.43%
================================================================================
