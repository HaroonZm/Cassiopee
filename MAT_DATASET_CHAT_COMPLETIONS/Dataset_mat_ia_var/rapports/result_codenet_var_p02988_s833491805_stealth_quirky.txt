================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add
from sys import stdin

fetch = lambda: stdin.readline()
SIZE=int(fetch())
arr=[*map(int,fetch().split())]
hits=reduce(lambda c,i: c+((arr[i] >= min(arr[i-1],arr[i+1])) and (arr[i] <= max(arr[i-1],arr[i+1])) and arr[i]!=arr[i-1] and arr[i]!=arr[i+1]), range(1,SIZE-1), 0)
print(hits)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021727053448557854
    2. '(lambda' → logprob: -4.646727085113525
    3. ',' → logprob: -5.771727085113525
    4. '.' → logprob: -6.021727085113525
    5. '\' → logprob: -6.021727085113525
    6. ' (' → logprob: -6.396727085113525
    7. '```' → logprob: -7.396727085113525
    8. '(
' → logprob: -8.521726608276367
    9. ' ' → logprob: -8.521726608276367
    10. '\(' → logprob: -8.646726608276367

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019196312874555588
    2. '\' → logprob: -4.769196510314941
    3. 'def' → logprob: -5.644196510314941
    4. '(lambda' → logprob: -6.269196510314941
    5. ' ' → logprob: -6.394196510314941
    6. '```' → logprob: -7.394196510314941
    7. '(
' → logprob: -7.644196510314941
    8. ' (' → logprob: -8.144196510314941
    9. ',' → logprob: -8.269196510314941
    10. 'r' → logprob: -8.394196510314941

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06689119338989258
    2. 'import' → logprob: -2.8168911933898926
    3. '.' → logprob: -5.941891193389893
    4. ' ' → logprob: -6.191891193389893
    5. ' .' → logprob: -9.066890716552734
    6. '.import' → logprob: -9.566890716552734
    7. '	import' → logprob: -10.691890716552734
    8. '_import' → logprob: -11.816890716552734
    9. '<|end|>' → logprob: -12.191890716552734
    10. '-import' → logprob: -13.441890716552734

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.10536035150289536
    2. ' import' → logprob: -3.355360269546509
    3. 'add' → logprob: -3.480360269546509
    4. ' mul' → logprob: -3.605360269546509
    5. ' ' → logprob: -5.605360507965088
    6. 'mul' → logprob: -6.605360507965088
    7. 'import' → logprob: -6.730360507965088
    8. ' item' → logprob: -7.730360507965088
    9. ' icon' → logprob: -9.48036003112793
    10. 'item' → logprob: -9.98036003112793

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42952680587768555
    2. '(
' → logprob: -1.9295268058776855
    3. 'result' → logprob: -2.8045268058776855
    4. '\' → logprob: -2.8045268058776855
    5. '\n' → logprob: -3.9295268058776855
    6. 'a' → logprob: -4.4295268058776855
    7. '#' → logprob: -4.8045268058776855
    8. 'def' → logprob: -5.1795268058776855
    9. '
' → logprob: -5.3045268058776855
    10. 'sum' → logprob: -5.5545268058776855

Token 11: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.05831931531429291
    2. ' math' → logprob: -4.183319091796875
    3. '_' → logprob: -4.433319091796875
    4. 'math' → logprob: -4.808319091796875
    5. 'it' → logprob: -5.183319091796875
    6. 'collections' → logprob: -5.308319091796875
    7. ' functools' → logprob: -5.933319091796875
    8. ' collections' → logprob: -6.183319091796875
    9. ' os' → logprob: -6.683319091796875
    10. ' ' → logprob: -6.683319091796875

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2176886945962906
    2. 'import' → logprob: -2.217688798904419
    3. '.' → logprob: -2.467688798904419
    4. ' .' → logprob: -6.84268856048584
    5. '.import' → logprob: -7.96768856048584
    6. '<|end|>' → logprob: -8.59268856048584
    7. ',' → logprob: -9.34268856048584
    8. ' ' → logprob: -9.34268856048584
    9. '<|end|>' → logprob: -9.96768856048584
    10. '```' → logprob: -10.46768856048584

Token 13: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.5172536969184875
    2. ' argv' → logprob: -1.7672536373138428
    3. 'stdin' → logprob: -2.5172536373138428
    4. ' exit' → logprob: -3.1422536373138428
    5. ' stdin' → logprob: -3.3922536373138428
    6. 'stdout' → logprob: -3.3922536373138428
    7. 'exit' → logprob: -3.6422536373138428
    8. 'stderr' → logprob: -5.267253875732422
    9. ' path' → logprob: -5.892253875732422
    10. 'path' → logprob: -5.892253875732422

Token 14: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4306243658065796
    2. '\n' → logprob: -1.4306243658065796
    3. '

' → logprob: -1.6806243658065796
    4. '
' → logprob: -1.9306243658065796
    5. 'data' → logprob: -3.680624485015869
    6. '\' → logprob: -3.680624485015869
    7. '' → logprob: -4.055624485015869
    8. 'def' → logprob: -4.055624485015869
    9. 'newline' → logprob: -4.305624485015869
    10. '```' → logprob: -4.430624485015869

Token 15: 'fetch' (ID: 19843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33322641253471375
    2. 'data' → logprob: -1.7082264423370361
    3. 'result' → logprob: -3.708226442337036
    4. '`' → logprob: -3.958226442337036
    5. 'print' → logprob: -4.833226203918457
    6. 'n' → logprob: -5.208226203918457
    7. '```' → logprob: -5.208226203918457
    8. '\n' → logprob: -5.458226203918457
    9. '[' → logprob: -5.583226203918457
    10. '
' → logprob: -5.583226203918457

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41210702061653137
    2. '(' → logprob: -2.037106990814209
    3. '_data' → logprob: -2.287106990814209
    4. 'data' → logprob: -3.162106990814209
    5. '_input' → logprob: -3.787106990814209
    6. ' =' → logprob: -4.287106990814209
    7. '_line' → logprob: -4.912106990814209
    8. '=' → logprob: -5.287106990814209
    9. '()' → logprob: -5.537106990814209
    10. '_lines' → logprob: -6.412106990814209

Token 17: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.102049708366394
    2. 'lambda' → logprob: -1.352049708366394
    3. ' stdin' → logprob: -1.477049708366394
    4. 'stdin' → logprob: -1.852049708366394
    5. '(stdin' → logprob: -4.977049827575684
    6. 'list' → logprob: -5.352049827575684
    7. '(lambda' → logprob: -5.602049827575684
    8. ' list' → logprob: -5.852049827575684
    9. 'map' → logprob: -7.227049827575684
    10. 'input' → logprob: -7.352049827575684

Token 18: ':' (ID: 25)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7608165144920349
    2. 'line' → logprob: -1.5108165740966797
    3. ' x' → logprob: -1.7608165740966797
    4. 'x' → logprob: -3.1358165740966797
    5. 'lst' → logprob: -3.6358165740966797
    6. ' lst' → logprob: -3.7608165740966797
    7. ' lines' → logprob: -5.13581657409668
    8. 'lines' → logprob: -5.63581657409668
    9. ' tokens' → logprob: -5.76081657409668
    10. ' l' → logprob: -5.76081657409668

Token 19: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01421686913818121
    2. 'int' → logprob: -4.514216899871826
    3. ' stdin' → logprob: -6.514216899871826
    4. 'list' → logprob: -7.389216899871826
    5. '(stdin' → logprob: -7.639216899871826
    6. 'input' → logprob: -8.639216423034668
    7. 'next' → logprob: -8.764216423034668
    8. 'map' → logprob: -8.764216423034668
    9. 'stdout' → logprob: -10.139216423034668
    10. '.stdin' → logprob: -10.764216423034668

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024504918605089188
    2. '.read' → logprob: -3.7745048999786377
    3. '.' → logprob: -7.024505138397217
    4. '.readlines' → logprob: -8.149504661560059
    5. 'read' → logprob: -9.524504661560059
    6. ' readline' → logprob: -12.399504661560059
    7. '.Read' → logprob: -14.024504661560059
    8. '.write' → logprob: -14.899504661560059
    9. '.buffer' → logprob: -15.024504661560059
    10. '```' → logprob: -15.274504661560059

Token 21: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5759702920913696
    2. '()' → logprob: -0.8259702920913696
    3. '()
' → logprob: -11.575970649719238
    4. '(' → logprob: -11.700970649719238
    5. '()

' → logprob: -12.950970649719238
    6. ' ()' → logprob: -13.200970649719238
    7. '())' → logprob: -13.575970649719238
    8. '()\' → logprob: -13.700970649719238
    9. ' ().' → logprob: -13.825970649719238
    10. '()<' → logprob: -13.825970649719238

Token 22: 'SIZE' (ID: 48118)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39984795451164246
    2. 'result' → logprob: -2.899847984313965
    3. 'def' → logprob: -3.024847984313965
    4. 'split' → logprob: -3.149847984313965
    5. 'strip' → logprob: -3.274847984313965
    6. '().' → logprob: -3.649847984313965
    7. ' ' → logprob: -4.399847984313965
    8. 'rstrip' → logprob: -4.524847984313965
    9. '.strip' → logprob: -4.649847984313965
    10. 'sum' → logprob: -4.774847984313965

Token 23: '=int' (ID: 37431)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9145885109901428
    2. '=' → logprob: -1.039588451385498
    3. ' =' → logprob: -1.539588451385498
    4. ' ' → logprob: -3.914588451385498
    5. ')' → logprob: -5.414588451385498
    6. 'S' → logprob: -6.039588451385498
    7. '  ' → logprob: -7.414588451385498
    8. ',' → logprob: -7.789588451385498
    9. ' _' → logprob: -8.039588928222656
    10. '[' → logprob: -8.164588928222656

Token 24: '(fetch' (ID: 76382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39705267548561096
    2. '(fetch' → logprob: -1.1470526456832886
    3. '(input' → logprob: -5.272052764892578
    4. '('' → logprob: -5.647052764892578
    5. '(stdin' → logprob: -7.022052764892578
    6. 'fetch' → logprob: -8.897052764892578
    7. '()' → logprob: -9.522052764892578
    8. '("' → logprob: -10.022052764892578
    9. '(eval' → logprob: -10.147052764892578
    10. ' (' → logprob: -10.397052764892578

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048906292766332626
    2. '()' → logprob: -3.0489063262939453
    3. ')' → logprob: -8.673906326293945
    4. ' ())' → logprob: -9.798906326293945
    5. '(' → logprob: -10.173906326293945
    6. '().' → logprob: -10.298906326293945
    7. '();)' → logprob: -11.798906326293945
    8. '()))' → logprob: -12.423906326293945
    9. '())
' → logprob: -13.298906326293945
    10. '()]' → logprob: -13.673906326293945

Token 26: 'arr' (ID: 1614)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5432282090187073
    2. ')' → logprob: -2.2932281494140625
    3. ' ' → logprob: -3.0432281494140625
    4. '
' → logprob: -3.4182281494140625
    5. 'data' → logprob: -3.4182281494140625
    6. 'for' → logprob: -3.4182281494140625
    7. '.' → logprob: -3.5432281494140625
    8. 'result' → logprob: -3.9182281494140625
    9. '\' → logprob: -4.2932281494140625
    10. ' 
' → logprob: -4.6682281494140625

Token 27: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34982064366340637
    2. '=' → logprob: -1.224820613861084
    3. '[' → logprob: -7.224820613861084
    4. '[:]' → logprob: -7.724820613861084
    5. '=[]' → logprob: -9.349821090698242
    6. ' =[' → logprob: -9.974821090698242
    7. '=[' → logprob: -10.599821090698242
    8. '.' → logprob: -11.099821090698242
    9. '[:' → logprob: -11.474821090698242
    10. ' ' → logprob: -12.349821090698242

Token 28: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001332382787950337
    2. '*' → logprob: -7.5013322830200195
    3. 'map' → logprob: -7.8763322830200195
    4. ' int' → logprob: -9.12633228302002
    5. 'fetch' → logprob: -9.25133228302002
    6. '0' → logprob: -9.87633228302002
    7. '(int' → logprob: -10.00133228302002
    8. ']int' → logprob: -10.50133228302002
    9. 'list' → logprob: -11.00133228302002
    10. ']' → logprob: -11.25133228302002

Token 29: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0002251125843031332
    2. '(map' → logprob: -8.875225067138672
    3. ' map' → logprob: -9.875225067138672
    4. 'range' → logprob: -10.375225067138672
    5. 'list' → logprob: -14.250225067138672
    6. '	map' → logprob: -14.375225067138672
    7. 'fetch' → logprob: -14.750225067138672
    8. 'iter' → logprob: -15.000225067138672
    9. '```' → logprob: -16.375225067138672
    10. ' ' → logprob: -16.625225067138672

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019442226039245725
    2. '(' → logprob: -6.251944065093994
    3. 'int' → logprob: -12.251944541931152
    4. '(lambda' → logprob: -13.251944541931152
    5. '(float' → logprob: -13.376944541931152
    6. '(eval' → logprob: -13.501944541931152
    7. '(
' → logprob: -13.876944541931152
    8. ' (' → logprob: -13.876944541931152
    9. ']int' → logprob: -13.876944541931152
    10. ',int' → logprob: -14.501944541931152

Token 31: ',' (ID: 11)
  Prédit: '(fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fetch' → logprob: -0.0013313100207597017
    2. ',' → logprob: -6.876331329345703
    3. '(' → logprob: -8.626331329345703
    4. 'fetch' → logprob: -9.251331329345703
    5. '(stdin' → logprob: -11.501331329345703
    6. ',(' → logprob: -12.501331329345703
    7. ' (' → logprob: -12.626331329345703
    8. ' ,' → logprob: -13.126331329345703
    9. ' fetch' → logprob: -13.751331329345703
    10. '(f' → logprob: -14.126331329345703

Token 32: 'fetch' (ID: 19843)
  Prédit: 'fetch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.005858874414116144
    2. ' fetch' → logprob: -5.255858898162842
    3. '(fetch' → logprob: -7.380858898162842
    4. ' ' → logprob: -14.130858421325684
    5. 'stdin' → logprob: -15.130858421325684
    6. ')' → logprob: -15.880858421325684
    7. 'f' → logprob: -16.005859375
    8. 'input' → logprob: -16.255859375
    9. '.fetch' → logprob: -16.755859375
    10. 'fet' → logprob: -17.130859375

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.20603168499656e-05
    2. '()' → logprob: -10.000061988830566
    3. '())' → logprob: -11.875061988830566
    4. ')' → logprob: -12.375061988830566
    5. '()))' → logprob: -12.500061988830566
    6. ' ().' → logprob: -14.125061988830566
    7. 'split' → logprob: -15.250061988830566
    8. '())))' → logprob: -15.500061988830566
    9. '))' → logprob: -15.875061988830566
    10. '(' → logprob: -16.125062942504883

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01904742605984211
    2. 'strip' → logprob: -4.019047260284424
    3. 'rstrip' → logprob: -7.019047260284424
    4. ' split' → logprob: -13.144047737121582
    5. '(split' → logprob: -15.519047737121582
    6. 'rs' → logprob: -15.644047737121582
    7. 'spl' → logprob: -16.769046783447266
    8. ' strip' → logprob: -17.144046783447266
    9. '.split' → logprob: -17.394046783447266
    10. 's' → logprob: -17.894046783447266

Token 35: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.026707788929343224
    2. ')]' → logprob: -3.776707887649536
    3. ')' → logprob: -6.651707649230957
    4. '()))' → logprob: -6.776707649230957
    5. ')])' → logprob: -7.776707649230957
    6. '()]' → logprob: -8.276707649230957
    7. '))' → logprob: -8.526707649230957
    8. '()' → logprob: -9.276707649230957
    9. '(' → logprob: -10.026707649230957
    10. ' ())' → logprob: -12.151707649230957

Token 36: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01127322856336832
    2. ')' → logprob: -4.511273384094238
    3. ']' → logprob: -8.761273384094238
    4. ')])' → logprob: -10.011273384094238
    5. '))' → logprob: -11.511273384094238
    6. ')]
' → logprob: -12.011273384094238
    7. '])' → logprob: -13.136273384094238
    8. '),' → logprob: -13.386273384094238
    9. ')],' → logprob: -13.511273384094238
    10. '])]' → logprob: -14.011273384094238

Token 37: 'hits' (ID: 106054)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8219463229179382
    2. 'res' → logprob: -1.571946382522583
    3. 'print' → logprob: -2.571946382522583
    4. '\n' → logprob: -2.696946382522583
    5. 'reduce' → logprob: -3.071946382522583
    6. 'sum' → logprob: -3.321946382522583
    7. 'arr' → logprob: -3.321946382522583
    8. 'ans' → logprob: -4.071946144104004
    9. 's' → logprob: -4.071946144104004
    10. '\' → logprob: -4.571946144104004

Token 38: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3490389287471771
    2. '=' → logprob: -1.2240389585494995
    3. ' ' → logprob: -8.474039077758789
    4. ',' → logprob: -8.974039077758789
    5. '=[]' → logprob: -8.974039077758789
    6. '=[' → logprob: -10.349039077758789
    7. ' =[' → logprob: -10.724039077758789
    8. '_' → logprob: -11.099039077758789
    9. ' ,' → logprob: -11.099039077758789
    10. '[' → logprob: -11.849039077758789

Token 39: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4719158411026001
    2. '0' → logprob: -1.2219158411026
    3. '[' → logprob: -2.7219157218933105
    4. 'arr' → logprob: -4.9719157218933105
    5. '[]' → logprob: -5.8469157218933105
    6. ' reduce' → logprob: -6.2219157218933105
    7. '{}' → logprob: -6.5969157218933105
    8. ' ' → logprob: -7.0969157218933105
    9. ' [' → logprob: -7.7219157218933105
    10. '{' → logprob: -8.096916198730469

Token 40: '(lambda' (ID: 43341)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.02990240603685379
    2. '(' → logprob: -3.529902458190918
    3. '(operator' → logprob: -9.154902458190918
    4. '(lambda' → logprob: -10.154902458190918
    5. '((' → logprob: -13.154902458190918
    6. 'add' → logprob: -13.154902458190918
    7. ' (' → logprob: -13.779902458190918
    8. '(
' → logprob: -14.029902458190918
    9. '```' → logprob: -14.529902458190918
    10. '(Add' → logprob: -15.279902458190918

Token 41: ' c' (ID: 274)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.010646060109138489
    2. ' a' → logprob: -5.385645866394043
    3. ' x' → logprob: -5.510645866394043
    4. ',' → logprob: -7.260645866394043
    5. ' acc' → logprob: -7.885645866394043
    6. 'add' → logprob: -7.885645866394043
    7. 'x' → logprob: -8.760645866394043
    8. ' lambda' → logprob: -9.010645866394043
    9. 'a' → logprob: -9.760645866394043
    10. ' ' → logprob: -10.135645866394043

Token 42: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006567348726093769
    2. ',x' → logprob: -6.256567478179932
    3. ',c' → logprob: -6.506567478179932
    4. ' ,' → logprob: -6.631567478179932
    5. ',a' → logprob: -7.256567478179932
    6. ',b' → logprob: -8.006567001342773
    7. ',i' → logprob: -8.506567001342773
    8. ',count' → logprob: -9.006567001342773
    9. ',v' → logprob: -9.756567001342773
    10. ',int' → logprob: -10.131567001342773

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14291666448116302
    2. ',' → logprob: -2.642916679382324
    3. ',c' → logprob: -3.142916679382324
    4. ' :' → logprob: -4.642916679382324
    5. ':add' → logprob: -5.892916679382324
    6. ',:' → logprob: -6.767916679382324
    7. ',i' → logprob: -6.767916679382324
    8. ':c' → logprob: -6.767916679382324
    9. '+' → logprob: -7.142916679382324
    10. '+:' → logprob: -7.392916679382324

Token 44: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8437217473983765
    2. 'c' → logprob: -1.3437217473983765
    3. ' add' → logprob: -1.4687217473983765
    4. 'add' → logprob: -2.593721866607666
    5. '(add' → logprob: -6.343721866607666
    6. '(c' → logprob: -6.718721866607666
    7. ' (' → logprob: -7.218721866607666
    8. '(' → logprob: -8.593721389770508
    9. ' ' → logprob: -9.843721389770508
    10. '(i' → logprob: -11.031221389770508

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0984724760055542
    2. ' +' → logprob: -2.4734725952148438
    3. '+(' → logprob: -4.723472595214844
    4. ' +(' → logprob: -8.473472595214844
    5. '+[' → logprob: -9.098472595214844
    6. ' if' → logprob: -9.473472595214844
    7. '+:' → logprob: -9.598472595214844
    8. '+c' → logprob: -9.848472595214844
    9. '+i' → logprob: -10.848472595214844
    10. '+=' → logprob: -11.473472595214844

Token 46: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.45123544335365295
    2. ' (' → logprob: -2.07623553276062
    3. '(arr' → logprob: -2.32623553276062
    4. '(' → logprob: -2.95123553276062
    5. '1' → logprob: -3.32623553276062
    6. 'arr' → logprob: -4.451235294342041
    7. ' i' → logprob: -4.951235294342041
    8. ' ' → logprob: -5.076235294342041
    9. ' arr' → logprob: -5.076235294342041
    10. 'i' → logprob: -5.201235294342041

Token 47: 'arr' (ID: 1614)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.546967089176178
    2. 'arr' → logprob: -1.1719670295715332
    3. ' i' → logprob: -2.921967029571533
    4. ' arr' → logprob: -3.921967029571533
    5. '1' → logprob: -4.046967029571533
    6. 'abs' → logprob: -5.421967029571533
    7. ' ' → logprob: -5.671967029571533
    8. '(i' → logprob: -5.921967029571533
    9. '(arr' → logprob: -7.046967029571533
    10. ' (' → logprob: -7.046967029571533

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007258945843204856
    2. '[' → logprob: -7.875725746154785
    3. '[c' → logprob: -8.875725746154785
    4. ')' → logprob: -11.000725746154785
    5. '   ' → logprob: -11.125725746154785
    6. '[len' → logprob: -11.125725746154785
    7. ' [' → logprob: -11.250725746154785
    8. '==' → logprob: -11.375725746154785
    9. '[-' → logprob: -11.500725746154785
    10. '[s' → logprob: -11.500725746154785

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0978307723999023
    2. ']==' → logprob: -1.4728307723999023
    3. '-' → logprob: -1.7228307723999023
    4. ']>' → logprob: -2.2228307723999023
    5. ']!=' → logprob: -3.2228307723999023
    6. ']>=' → logprob: -3.3478307723999023
    7. ']<' → logprob: -3.4728307723999023
    8. ']%' → logprob: -4.222830772399902
    9. ']+' → logprob: -4.722830772399902
    10. ']-' → logprob: -4.722830772399902

Token 50: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1490037441253662
    2. '-' → logprob: -2.149003744125366
    3. '>' → logprob: -2.149003744125366
    4. '+' → logprob: -2.399003744125366
    5. '%' → logprob: -2.649003744125366
    6. '!=' → logprob: -2.774003744125366
    7. ' ==' → logprob: -3.024003744125366
    8. ')' → logprob: -3.149003744125366
    9. '>=' → logprob: -4.024003982543945
    10. ' and' → logprob: -4.149003982543945

Token 51: ' min' (ID: 1349)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.016681596636772156
    2. ' arr' → logprob: -4.766681671142578
    3. '10' → logprob: -6.766681671142578
    4. '0' → logprob: -7.266681671142578
    5. '100' → logprob: -7.391681671142578
    6. 'max' → logprob: -7.391681671142578
    7. '2' → logprob: -7.641681671142578
    8. ' ' → logprob: -7.766681671142578
    9. '50' → logprob: -7.891681671142578
    10. '5' → logprob: -8.016681671142578

Token 52: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0036545987240970135
    2. '(' → logprob: -5.753654479980469
    3. '([' → logprob: -8.503654479980469
    4. 'arr' → logprob: -9.128654479980469
    5. ' (' → logprob: -10.253654479980469
    6. '((' → logprob: -10.503654479980469
    7. ' arr' → logprob: -10.628654479980469
    8. '(
' → logprob: -10.878654479980469
    9. '[arr' → logprob: -11.503654479980469
    10. '(

' → logprob: -11.628654479980469

Token 53: '[i' (ID: 1768)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2771157920360565
    2. '[i' → logprob: -1.527115821838379
    3. '(arr' → logprob: -4.527115821838379
    4. '[:' → logprob: -5.152115821838379
    5. '(' → logprob: -6.027115821838379
    6. 'arr' → logprob: -6.152115821838379
    7. '(max' → logprob: -6.777115821838379
    8. '[' → logprob: -8.027115821838379
    9. ' arr' → logprob: -8.027115821838379
    10. '[max' → logprob: -8.277115821838379

Token 54: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29096975922584534
    2. ':i' → logprob: -2.4159698486328125
    3. '-' → logprob: -2.7909698486328125
    4. '(i' → logprob: -3.4159698486328125
    5. '[i' → logprob: -3.5409698486328125
    6. '],' → logprob: -4.6659698486328125
    7. 'max' → logprob: -4.7909698486328125
    8. ',i' → logprob: -4.9159698486328125
    9. ' ' → logprob: -5.7909698486328125
    10. '+' → logprob: -5.9159698486328125

Token 55: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1679394394159317
    2. '3' → logprob: -2.0429394245147705
    3. '1' → logprob: -3.9179394245147705
    4. '5' → logprob: -6.04293966293335
    5. '4' → logprob: -6.66793966293335
    6. 'i' → logprob: -7.79293966293335
    7. ' ' → logprob: -8.292939186096191
    8. '10' → logprob: -8.792939186096191
    9. '6' → logprob: -9.167939186096191
    10. '7' → logprob: -9.855439186096191

Token 56: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0032220338471233845
    2. ':i' → logprob: -5.8782219886779785
    3. 'i' → logprob: -8.878222465515137
    4. ':' → logprob: -9.378222465515137
    5. ',i' → logprob: -9.503222465515137
    6. ']' → logprob: -10.003222465515137
    7. ' ],' → logprob: -11.503222465515137
    8. '-' → logprob: -11.503222465515137
    9. ']+' → logprob: -11.628222465515137
    10. ']-' → logprob: -11.628222465515137

Token 57: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.03819525986909866
    2. ' arr' → logprob: -3.2881953716278076
    3. ' ' → logprob: -9.913195610046387
    4. 'i' → logprob: -10.288195610046387
    5. ' i' → logprob: -11.288195610046387
    6. '	arr' → logprob: -11.288195610046387
    7. '  ' → logprob: -11.413195610046387
    8. '(arr' → logprob: -11.538195610046387
    9. '   ' → logprob: -12.350695610046387
    10. '
' → logprob: -12.975695610046387

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01779119111597538
    2. '+' → logprob: -4.142791271209717
    3. '])' → logprob: -7.517791271209717
    4. 'i' → logprob: -8.017790794372559
    5. ']))' → logprob: -8.517790794372559
    6. ',i' → logprob: -8.517790794372559
    7. '+i' → logprob: -9.017790794372559
    8. '[' → logprob: -9.142790794372559
    9. '],' → logprob: -9.517790794372559
    10. ']' → logprob: -10.267790794372559

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01654043048620224
    2. '])' → logprob: -4.39154052734375
    3. ']))' → logprob: -6.76654052734375
    4. '-' → logprob: -6.76654052734375
    5. '])+' → logprob: -7.64154052734375
    6. '])-' → logprob: -7.76654052734375
    7. ']+' → logprob: -8.39154052734375
    8. ' +' → logprob: -8.64154052734375
    9. ']' → logprob: -8.89154052734375
    10. '+i' → logprob: -10.01654052734375

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03959380462765694
    2. '+' → logprob: -3.4145936965942383
    3. '0' → logprob: -5.914593696594238
    4. '2' → logprob: -6.664593696594238
    5. 'i' → logprob: -7.414593696594238
    6. ']))' → logprob: -7.914593696594238
    7. '])' → logprob: -8.039593696594238
    8. ' ' → logprob: -8.289593696594238
    9. ']+' → logprob: -9.039593696594238
    10. ']' → logprob: -9.039593696594238

Token 61: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.12704947590827942
    2. '])))' → logprob: -2.877049446105957
    3. '])' → logprob: -3.627049446105957
    4. ')))' → logprob: -4.252049446105957
    5. '))' → logprob: -4.627049446105957
    6. ']' → logprob: -5.752049446105957
    7. ')' → logprob: -5.877049446105957
    8. '])+' → logprob: -6.127049446105957
    9. '])-' → logprob: -7.127049446105957
    10. '-' → logprob: -7.377049446105957

Token 62: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.45409926772117615
    2. 'and' → logprob: -1.7040992975234985
    3. '),' → logprob: -1.9540992975234985
    4. ')' → logprob: -4.204099178314209
    5. ')),' → logprob: -4.329099178314209
    6. ' else' → logprob: -5.204099178314209
    7. ' ),' → logprob: -6.454099178314209
    8. ')+' → logprob: -6.829099178314209
    9. ' if' → logprob: -6.954099178314209
    10. '+' → logprob: -7.079099178314209

Token 63: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5486132502555847
    2. '(arr' → logprob: -1.0486133098602295
    3. ' arr' → logprob: -3.6736133098602295
    4. '1' → logprob: -4.04861307144165
    5. ' True' → logprob: -4.54861307144165
    6. ' ' → logprob: -5.29861307144165
    7. '(i' → logprob: -5.79861307144165
    8. '(' → logprob: -5.79861307144165
    9. 'True' → logprob: -6.42361307144165
    10. 'arr' → logprob: -6.42361307144165

Token 64: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1736634373664856
    2. '(arr' → logprob: -2.298663377761841
    3. ' arr' → logprob: -2.923663377761841
    4. ' (' → logprob: -5.79866361618042
    5. '(i' → logprob: -7.54866361618042
    6. 'i' → logprob: -7.92366361618042
    7. ' not' → logprob: -8.673663139343262
    8. '(' → logprob: -8.923663139343262
    9. 'True' → logprob: -8.986163139343262
    10. 'not' → logprob: -9.173663139343262

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.923874702304602e-05
    2. '[' → logprob: -10.125089645385742
    3. 'i' → logprob: -10.875089645385742
    4. ',i' → logprob: -12.000089645385742
    5. ')' → logprob: -12.125089645385742
    6. ' [' → logprob: -12.500089645385742
    7. '[
' → logprob: -13.500089645385742
    8. '[I' → logprob: -13.562589645385742
    9. '   ' → logprob: -13.875089645385742
    10. '(i' → logprob: -14.000089645385742

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11408471316099167
    2. ']>' → logprob: -2.7390847206115723
    3. ']!=' → logprob: -4.114084720611572
    4. '-' → logprob: -4.489084720611572
    5. ']+' → logprob: -5.364084720611572
    6. ']>=' → logprob: -5.489084720611572
    7. ' ]' → logprob: -5.864084720611572
    8. '+' → logprob: -6.364084720611572
    9. ']==' → logprob: -7.614084720611572
    10. ']-' → logprob: -7.864084720611572

Token 67: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12058940529823303
    2. ' >' → logprob: -2.7455894947052
    3. ']' → logprob: -3.6205894947052
    4. '!=' → logprob: -5.245589256286621
    5. ']>' → logprob: -5.245589256286621
    6. ' ' → logprob: -5.870589256286621
    7. ' !=' → logprob: -6.245589256286621
    8. '<' → logprob: -6.620589256286621
    9. ')' → logprob: -7.120589256286621
    10. '<=' → logprob: -7.745589256286621

Token 68: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03533763065934181
    2. ' max' → logprob: -3.5353376865386963
    3. 'min' → logprob: -5.410337448120117
    4. 'arr' → logprob: -7.160337448120117
    5. ' min' → logprob: -8.910337448120117
    6. '(max' → logprob: -9.285337448120117
    7. ' arr' → logprob: -10.535337448120117
    8. '0' → logprob: -11.285337448120117
    9. ' ' → logprob: -11.410337448120117
    10. ' (' → logprob: -12.660337448120117

Token 69: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. 'arr' → logprob: -14.750006675720215
    4. ' (' → logprob: -15.125006675720215
    5. '[arr' → logprob: -15.250006675720215
    6. '<arr' → logprob: -15.875006675720215
    7. '(array' → logprob: -18.3750057220459
    8. '	arr' → logprob: -18.5000057220459
    9. ' arr' → logprob: -18.6250057220459
    10. '<|end|>' → logprob: -18.7500057220459

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3199920178740285e-05
    2. '(i' → logprob: -11.625022888183594
    3. '-' → logprob: -12.625022888183594
    4. '[-' → logprob: -12.875022888183594
    5. '[' → logprob: -13.000022888183594
    6. 'i' → logprob: -13.750022888183594
    7. ')' → logprob: -13.750022888183594
    8. 'arr' → logprob: -13.875022888183594
    9. ' [' → logprob: -14.625022888183594
    10. '[(' → logprob: -15.125022888183594

Token 71: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005795358680188656
    2. 'i' → logprob: -6.005795478820801
    3. '1' → logprob: -6.130795478820801
    4. '+' → logprob: -7.755795478820801
    5. '[i' → logprob: -8.5057954788208
    6. ' -' → logprob: -8.6307954788208
    7. ' ' → logprob: -8.7557954788208
    8. ']' → logprob: -9.7557954788208
    9. '[' → logprob: -10.3807954788208
    10. ' i' → logprob: -11.0057954788208

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004195906512904912
    2. '2' → logprob: -8.000419616699219
    3. ' ' → logprob: -9.750419616699219
    4. '```' → logprob: -11.750419616699219
    5. '-' → logprob: -12.000419616699219
    6. '+' → logprob: -12.375419616699219
    7. '   ' → logprob: -12.750419616699219
    8. ')' → logprob: -14.437919616699219
    9. '  ' → logprob: -14.562919616699219
    10. '0' → logprob: -15.250419616699219

Token 73: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10675841569900513
    2. '],' → logprob: -2.9817583560943604
    3. ',i' → logprob: -3.2317583560943604
    4. ' ,' → logprob: -4.8567585945129395
    5. '),' → logprob: -6.4817585945129395
    6. '(),' → logprob: -7.2317585945129395
    7. ',index' → logprob: -8.606758117675781
    8. '```' → logprob: -9.106758117675781
    9. ' ' → logprob: -9.606758117675781
    10. ' ],' → logprob: -9.856758117675781

Token 74: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0005561320576816797
    2. ' arr' → logprob: -7.500555992126465
    3. '(arr' → logprob: -13.375555992126465
    4. '	arr' → logprob: -14.000555992126465
    5. '-arr' → logprob: -15.750555992126465
    6. ')' → logprob: -16.25055694580078
    7. '[arr' → logprob: -16.37555694580078
    8. '<arr' → logprob: -16.37555694580078
    9. '```' → logprob: -16.87555694580078
    10. '
' → logprob: -17.12555694580078

Token 75: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000343210413120687
    2. '1' → logprob: -8.875343322753906
    3. '[i' → logprob: -9.375343322753906
    4. '2' → logprob: -9.750343322753906
    5. ' +' → logprob: -10.375343322753906
    6. ' ' → logprob: -12.125343322753906
    7. '[' → logprob: -12.375343322753906
    8. '0' → logprob: -12.500343322753906
    9. '+
' → logprob: -12.750343322753906
    10. '])' → logprob: -13.000343322753906

Token 76: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002842199057340622
    2. '1' → logprob: -6.252842426300049
    3. '2' → logprob: -8.25284194946289
    4. '-' → logprob: -8.37784194946289
    5. ' +' → logprob: -9.00284194946289
    6. ']))' → logprob: -9.37784194946289
    7. '])' → logprob: -9.87784194946289
    8. ' ' → logprob: -10.37784194946289
    9. ']+' → logprob: -10.37784194946289
    10. '   ' → logprob: -10.62784194946289

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13988643884658813
    2. '2' → logprob: -2.3898863792419434
    3. '+' → logprob: -3.2648863792419434
    4. '0' → logprob: -8.139886856079102
    5. ' ' → logprob: -8.389886856079102
    6. '])' → logprob: -9.514886856079102
    7. '```' → logprob: -10.264886856079102
    8. '   ' → logprob: -11.139886856079102
    9. ']' → logprob: -11.514886856079102
    10. ']+' → logprob: -12.014886856079102

Token 78: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.19440779089927673
    2. '])),' → logprob: -1.9444078207015991
    3. '])))' → logprob: -4.819407939910889
    4. ')]' → logprob: -4.819407939910889
    5. ')))),' → logprob: -5.444407939910889
    6. ')))' → logprob: -5.569407939910889
    7. '))' → logprob: -5.944407939910889
    8. '))),' → logprob: -6.194407939910889
    9. ')' → logprob: -6.319407939910889
    10. ']' → logprob: -6.694407939910889

Token 79: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05259377509355545
    2. '),' → logprob: -3.42759370803833
    3. ' ,' → logprob: -4.42759370803833
    4. ',i' → logprob: -5.42759370803833
    5. ' for' → logprob: -7.30259370803833
    6. ' and' → logprob: -7.42759370803833
    7. 'for' → logprob: -8.177594184875488
    8. ' ' → logprob: -8.427594184875488
    9. ')' → logprob: -8.802594184875488
    10. 'and' → logprob: -9.302594184875488

Token 80: ' arr' (ID: 1724)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6614103317260742
    2. '(arr' → logprob: -1.0364103317260742
    3. ' arr' → logprob: -2.786410331726074
    4. '(i' → logprob: -3.786410331726074
    5. 'arr' → logprob: -3.911410331726074
    6. '(' → logprob: -4.411410331726074
    7. ' not' → logprob: -5.536410331726074
    8. '1' → logprob: -5.911410331726074
    9. ' ' → logprob: -6.911410331726074
    10. ' i' → logprob: -7.036410331726074

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020920883398503065
    2. '[' → logprob: -6.502091884613037
    3. ')' → logprob: -7.877091884613037
    4. '[len' → logprob: -10.752092361450195
    5. ' [' → logprob: -10.877092361450195
    6. '[j' → logprob: -11.002092361450195
    7. '[arr' → logprob: -11.002092361450195
    8. '[
' → logprob: -11.252092361450195
    9. '[s' → logprob: -11.377092361450195
    10. ',' → logprob: -11.377092361450195

Token 82: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1021978855133057
    2. '[i' → logprob: -1.4771978855133057
    3. '[' → logprob: -2.2271978855133057
    4. ')' → logprob: -2.2271978855133057
    5. ']==' → logprob: -2.9771978855133057
    6. ' ' → logprob: -3.2271978855133057
    7. '==' → logprob: -3.7271978855133057
    8. ' ==' → logprob: -4.102197647094727
    9. '-' → logprob: -4.227197647094727
    10. ' )' → logprob: -4.727197647094727

Token 83: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0015197417233139277
    2. 'min' → logprob: -7.001519680023193
    3. 'max' → logprob: -7.876519680023193
    4. ' arr' → logprob: -9.126520156860352
    5. '0' → logprob: -9.251520156860352
    6. '(arr' → logprob: -11.876520156860352
    7. ' ' → logprob: -12.751520156860352
    8. '1' → logprob: -12.876520156860352
    9. '	arr' → logprob: -13.001520156860352
    10. '[arr' → logprob: -13.376520156860352

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00030817187507636845
    2. '[' → logprob: -8.7503080368042
    3. 'i' → logprob: -9.6253080368042
    4. '[j' → logprob: -9.7503080368042
    5. '[I' → logprob: -12.7503080368042
    6. '```' → logprob: -13.0003080368042
    7. '[
' → logprob: -13.3753080368042
    8. '[arr' → logprob: -13.5003080368042
    9. ')' → logprob: -13.6253080368042
    10. '   ' → logprob: -13.7503080368042

Token 85: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09304357320070267
    2. '-' → logprob: -2.843043565750122
    3. 'i' → logprob: -4.218043804168701
    4. '1' → logprob: -5.093043804168701
    5. '[' → logprob: -5.968043804168701
    6. '])' → logprob: -6.468043804168701
    7. ']' → logprob: -6.593043804168701
    8. ' ' → logprob: -6.718043804168701
    9. '[-' → logprob: -7.218043804168701
    10. '   ' → logprob: -7.593043804168701

Token 86: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5260264277458191
    2. '1' → logprob: -0.9010264277458191
    3. '[i' → logprob: -7.526026248931885
    4. '2' → logprob: -7.526026248931885
    5. '0' → logprob: -7.651026248931885
    6. ' i' → logprob: -7.651026248931885
    7. ' ' → logprob: -7.776026248931885
    8. ']' → logprob: -8.151026725769043
    9. '```' → logprob: -10.276026725769043
    10. '[' → logprob: -10.651026725769043

Token 87: ']' (ID: 60)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6744129657745361
    2. ' and' → logprob: -0.7994129657745361
    3. '),' → logprob: -4.049412727355957
    4. ']),' → logprob: -4.049412727355957
    5. ')' → logprob: -5.924412727355957
    6. ']' → logprob: -7.049412727355957
    7. ' ]' → logprob: -7.799412727355957
    8. ' ' → logprob: -7.799412727355957
    9. ' ),' → logprob: -7.924412727355957
    10. ')),' → logprob: -8.299412727355957

Token 88: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6456066370010376
    2. 'and' → logprob: -0.7706066370010376
    3. '),' → logprob: -5.145606517791748
    4. ')' → logprob: -5.645606517791748
    5. ' ' → logprob: -7.270606517791748
    6. ',' → logprob: -7.645606517791748
    7. '[i' → logprob: -8.145606994628906
    8. '))' → logprob: -8.270606994628906
    9. ')]' → logprob: -8.270606994628906
    10. ')],' → logprob: -8.270606994628906

Token 89: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.145954892039299
    2. 'arr' → logprob: -2.0209548473358154
    3. '(arr' → logprob: -6.2709550857543945
    4. ' ' → logprob: -7.7709550857543945
    5. ' True' → logprob: -8.395955085754395
    6. ' (' → logprob: -8.520955085754395
    7. ' not' → logprob: -9.145955085754395
    8. '[arr' → logprob: -9.395955085754395
    9. '<arr' → logprob: -9.395955085754395
    10. ' ' → logprob: -9.895955085754395

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -13.375006675720215
    3. '[' → logprob: -13.500006675720215
    4. '```' → logprob: -14.125006675720215
    5. '[
' → logprob: -14.250006675720215
    6. ']' → logprob: -14.375006675720215
    7. '[j' → logprob: -14.750006675720215
    8. '[I' → logprob: -15.500006675720215
    9. '{i' → logprob: -16.1250057220459
    10. ')' → logprob: -16.3750057220459

Token 91: ']!=' (ID: 85780)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09662462025880814
    2. ']' → logprob: -2.8466246128082275
    3. ']!=' → logprob: -3.7216246128082275
    4. '-' → logprob: -4.971624851226807
    5. 'i' → logprob: -7.221624851226807
    6. ']+' → logprob: -7.596624851226807
    7. '+]' → logprob: -8.096624374389648
    8. ' ' → logprob: -8.221624374389648
    9. '[i' → logprob: -8.346624374389648
    10. '+i' → logprob: -8.846624374389648

Token 92: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -2.641841820150148e-05
    2. ' arr' → logprob: -10.62502670288086
    3. '	arr' → logprob: -14.25002670288086
    4. '(arr' → logprob: -14.75002670288086
    5. ' ' → logprob: -15.37502670288086
    6. '
' → logprob: -15.62502670288086
    7. '[arr' → logprob: -15.62502670288086
    8. '$arr' → logprob: -16.25002670288086
    9. '   ' → logprob: -16.87502670288086
    10. 'a' → logprob: -17.00002670288086

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. 'i' → logprob: -13.000006675720215
    3. '[' → logprob: -13.250006675720215
    4. '+' → logprob: -14.625006675720215
    5. '   ' → logprob: -14.750006675720215
    6. ' ' → logprob: -14.875006675720215
    7. ']' → logprob: -15.000006675720215
    8. '[j' → logprob: -15.250006675720215
    9. '     ' → logprob: -15.750006675720215
    10. ')' → logprob: -15.750006675720215

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006829036865383387
    2. '-' → logprob: -5.006829261779785
    3. '])' → logprob: -10.381829261779785
    4. '1' → logprob: -10.506829261779785
    5. ']' → logprob: -10.756829261779785
    6. ']+' → logprob: -11.006829261779785
    7. '+
' → logprob: -12.006829261779785
    8. ' +' → logprob: -12.256829261779785
    9. '+]' → logprob: -14.131829261779785
    10. '[i' → logprob: -14.256829261779785

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009063414763659239
    2. '2' → logprob: -7.125906467437744
    3. '+' → logprob: -9.500905990600586
    4. ' ' → logprob: -11.250905990600586
    5. 'i' → logprob: -12.000905990600586
    6. '0' → logprob: -13.500905990600586
    7. ']+' → logprob: -13.625905990600586
    8. '[i' → logprob: -14.438405990600586
    9. '```' → logprob: -14.688405990600586
    10. '   ' → logprob: -14.813405990600586

Token 96: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.29694098234176636
    2. ')),' → logprob: -1.6719410419464111
    3. '))' → logprob: -2.921941041946411
    4. ')' → logprob: -4.296940803527832
    5. ')))' → logprob: -7.296940803527832
    6. '))),' → logprob: -8.296940803527832
    7. ''),' → logprob: -8.546940803527832
    8. ')],' → logprob: -9.421940803527832
    9. ')'),' → logprob: -9.546940803527832
    10. ' ),' → logprob: -9.921940803527832

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023274481296539307
    2. ' range' → logprob: -3.7732744216918945
    3. '(range' → logprob: -10.898274421691895
    4. '	range' → logprob: -11.648274421691895
    5. '   ' → logprob: -14.773274421691895
    6. ' ' → logprob: -15.023274421691895
    7. 'arr' → logprob: -15.273274421691895
    8. 'rang' → logprob: -15.398274421691895
    9. '[' → logprob: -15.773274421691895
    10. 'rage' → logprob: -16.52327537536621

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(len' → logprob: -18.0
    3. '(
' → logprob: -18.125
    4. ' (' → logprob: -18.25
    5. '(S' → logprob: -18.625
    6. '((' → logprob: -18.75
    7. '1' → logprob: -19.25
    8. '\(' → logprob: -20.875
    9. '```' → logprob: -21.5
    10. ')(' → logprob: -21.5

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044318195432424545
    2. '(' → logprob: -7.750442981719971
    3. ' ' → logprob: -11.625443458557129
    4. '```' → logprob: -14.000443458557129
    5. '   ' → logprob: -14.375443458557129
    6. '۱' → logprob: -15.125443458557129
    7. '
' → logprob: -15.625443458557129
    8. '[' → logprob: -15.687943458557129
    9. '`' → logprob: -15.750443458557129
    10. 'SIZE' → logprob: -15.937943458557129

Token 100: ',S' (ID: 42097)
  Prédit: ',S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',S' → logprob: -0.5063437223434448
    2. ',' → logprob: -1.5063437223434448
    3. ',len' → logprob: -1.7563437223434448
    4. '(S' → logprob: -6.381343841552734
    5. '(len' → logprob: -7.131343841552734
    6. ',size' → logprob: -8.506343841552734
    7. ' ,' → logprob: -8.881343841552734
    8. 'len' → logprob: -10.131343841552734
    9. '(' → logprob: -10.756343841552734
    10. 'S' → logprob: -12.381343841552734

Token 101: 'IZE' (ID: 5950)
  Prédit: 'IZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IZE' → logprob: -7.896309739408025e-07
    2. 'IZ' → logprob: -14.750000953674316
    3. 'SIZE' → logprob: -16.375
    4. '(' → logprob: -16.75
    5. 'I' → logprob: -17.25
    6. '-' → logprob: -17.5
    7. 'Z' → logprob: -17.625
    8. 'ICE' → logprob: -17.875
    9. '
' → logprob: -18.25
    10. 'IX' → logprob: -18.375

Token 102: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003232136834412813
    2. '()-' → logprob: -5.753232002258301
    3. ' -' → logprob: -9.8782320022583
    4. '1' → logprob: -13.5032320022583
    5. '()' → logprob: -14.0032320022583
    6. '(' → logprob: -15.1282320022583
    7. '−' → logprob: -15.8782320022583
    8. '2' → logprob: -16.003232955932617
    9. '(-' → logprob: -16.253232955932617
    10. ')-' → logprob: -16.253232955932617

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. ')' → logprob: -15.125009536743164
    4. '```' → logprob: -15.750009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '۱' → logprob: -17.812509536743164
    7. '2' → logprob: -18.375009536743164
    8. '  ' → logprob: -18.500009536743164
    9. '``' → logprob: -18.687509536743164
    10. '１' → logprob: -18.750009536743164

Token 104: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12127968668937683
    2. '))' → logprob: -2.746279716491699
    3. ')' → logprob: -3.371279716491699
    4. ')])' → logprob: -4.246279716491699
    5. '),' → logprob: -6.746279716491699
    6. ',' → logprob: -9.1212797164917
    7. '])' → logprob: -10.4962797164917
    8. ')],' → logprob: -10.7462797164917
    9. '])]' → logprob: -11.3712797164917
    10. ')))' → logprob: -11.7462797164917

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010795372509164736
    2. ' ' → logprob: -9.375107765197754
    3. '1' → logprob: -10.750107765197754
    4. 'arr' → logprob: -13.875107765197754
    5. '2' → logprob: -15.250107765197754
    6. '   ' → logprob: -15.625107765197754
    7. ')' → logprob: -16.93760871887207
    8. 'int' → logprob: -17.06260871887207
    9. '-' → logprob: -17.18760871887207
    10. '  ' → logprob: -17.56260871887207

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.221884101862088e-05
    2. '1' → logprob: -9.500092506408691
    3. ' ' → logprob: -11.250092506408691
    4. 'arr' → logprob: -12.750092506408691
    5. 'int' → logprob: -14.875092506408691
    6. '2' → logprob: -14.875092506408691
    7. '-' → logprob: -15.250092506408691
    8. ')' → logprob: -15.937592506408691
    9. '   ' → logprob: -16.687591552734375
    10. '...' → logprob: -16.750091552734375

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')
' → logprob: -16.125001907348633
    5. ')`' → logprob: -17.250001907348633
    6. '),' → logprob: -17.500001907348633
    7. ')#' → logprob: -17.750001907348633
    8. ')+' → logprob: -17.750001907348633
    9. ')return' → logprob: -18.500001907348633
    10. '）' → logprob: -18.625001907348633

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0683683231472969
    2. ')' → logprob: -3.068368434906006
    3. '
' → logprob: -4.068368434906006
    4. '\n' → logprob: -7.443368434906006
    5. ' print' → logprob: -7.568368434906006
    6. '+' → logprob: -7.818368434906006
    7. '<|end|>' → logprob: -8.193367958068848
    8. ')
' → logprob: -8.568367958068848
    9. '#' → logprob: -9.693367958068848
    10. '(print' → logprob: -9.818367958068848

Token 109: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.16628293693065643
    2. '(' → logprob: -1.9162828922271729
    3. '('' → logprob: -5.166283130645752
    4. '("' → logprob: -9.166282653808594
    5. '("("' → logprob: -9.166282653808594
    6. '(hit' → logprob: -10.041282653808594
    7. '(f' → logprob: -10.791282653808594
    8. '(len' → logprob: -11.166282653808594
    9. '((' → logprob: -11.416282653808594
    10. '()' → logprob: -11.541282653808594

Token 110: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -1.3306015716807451e-05
    2. 'ts' → logprob: -11.87501335144043
    3. 'it' → logprob: -12.62501335144043
    4. 'hits' → logprob: -13.62501335144043
    5. 'itsa' → logprob: -14.50001335144043
    6. 'i' → logprob: -15.25001335144043
    7. 'itsin' → logprob: -15.50001335144043
    8. 'ITS' → logprob: -15.50001335144043
    9. '```' → logprob: -15.87501335144043
    10. 'ints' → logprob: -17.00001335144043

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.250001907348633
    3. ')`' → logprob: -15.500001907348633
    4. ' )' → logprob: -15.875001907348633
    5. '`)' → logprob: -16.000001907348633
    6. ')
' → logprob: -16.125001907348633
    7. ')}' → logprob: -17.500001907348633
    8. '')' → logprob: -18.250001907348633
    9. '})' → logprob: -18.375001907348633
    10. ')))' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 54.13%
Précision adaptée (1ère position): 54.13%
Précision (top 10): 82.57%
================================================================================
