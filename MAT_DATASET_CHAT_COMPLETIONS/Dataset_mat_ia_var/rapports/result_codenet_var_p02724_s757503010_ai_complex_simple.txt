================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
X = int(input())
from functools import reduce
import operator

f = lambda v, q: divmod(v, q)
a, (b, c) = (lambda x: (f(x, 500), f(f(x,500)[1], 5)))(X)
print(reduce(operator.add, map(lambda x, y: x * y, [a, b], [1000, 5])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'X' (ID: 55)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000872274860739708
    2. ''' → logprob: -7.5008721351623535
    3. 'X' → logprob: -9.250872611999512
    4. '```' → logprob: -10.125872611999512
    5. '[' → logprob: -10.250872611999512
    6. '('' → logprob: -10.750872611999512
    7. '(X' → logprob: -10.750872611999512
    8. '(
' → logprob: -10.750872611999512
    9. ')' → logprob: -10.875872611999512
    10. '`' → logprob: -10.875872611999512

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013045279309153557
    2. ')' → logprob: -5.013045310974121
    3. '()' → logprob: -5.138045310974121
    4. '(
' → logprob: -8.888045310974121
    5. '())' → logprob: -9.263045310974121
    6. '(X' → logprob: -10.388045310974121
    7. '('' → logprob: -10.513045310974121
    8. '```' → logprob: -11.013045310974121
    9. '(

' → logprob: -11.013045310974121
    10. '("("' → logprob: -11.388045310974121

Token 5: 'from' (ID: 2845)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02658323012292385
    2. '*' → logprob: -4.276583194732666
    3. '%' → logprob: -4.651583194732666
    4. '#' → logprob: -6.651583194732666
    5. '+
' → logprob: -8.026583671569824
    6. ')' → logprob: -8.276583671569824
    7. 'if' → logprob: -8.526583671569824
    8. '\n' → logprob: -8.526583671569824
    9. '**' → logprob: -8.651583671569824
    10. '>' → logprob: -9.901583671569824

Token 6: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.07689236849546432
    2. ' sys' → logprob: -2.701892375946045
    3. ' collections' → logprob: -6.451892375946045
    4. ' numpy' → logprob: -6.451892375946045
    5. ' ' → logprob: -7.076892375946045
    6. ' random' → logprob: -7.201892375946045
    7. ' sklearn' → logprob: -7.326892375946045
    8. '_' → logprob: -7.701892375946045
    9. ' itertools' → logprob: -7.826892375946045
    10. 'math' → logprob: -8.951891899108887

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03556026518344879
    2. 'import' → logprob: -3.785560369491577
    3. '.' → logprob: -4.785560131072998
    4. '_import' → logprob: -6.285560131072998
    5. ' .' → logprob: -6.660560131072998
    6. '.import' → logprob: -7.785560131072998
    7. '._' → logprob: -9.285560607910156
    8. '	import' → logprob: -9.785560607910156
    9. '_' → logprob: -9.910560607910156
    10. ' _' → logprob: -9.910560607910156

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.20065274834632874
    2. 'l' → logprob: -2.325652837753296
    3. ' l' → logprob: -3.825652837753296
    4. ' reduce' → logprob: -3.950652837753296
    5. 'wrap' → logprob: -4.200652599334717
    6. 'partial' → logprob: -4.325652599334717
    7. 'cache' → logprob: -4.700652599334717
    8. 'cmp' → logprob: -5.700652599334717
    9. ' wraps' → logprob: -6.700652599334717
    10. ' partial' → logprob: -7.825652599334717

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021817324683070183
    2. 'X' → logprob: -4.396817207336426
    3. '(
' → logprob: -5.771817207336426
    4. '*' → logprob: -6.646817207336426
    5. ')' → logprob: -6.771817207336426
    6. 'def' → logprob: -7.646817207336426
    7. '(lambda' → logprob: -7.646817207336426
    8. '[' → logprob: -7.896817207336426
    9. '\n' → logprob: -7.896817207336426
    10. '\' → logprob: -8.146817207336426

Token 10: 'import' (ID: 561)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7232596278190613
    2. 'X' → logprob: -2.223259687423706
    3. 'factor' → logprob: -2.223259687423706
    4. 's' → logprob: -2.598259687423706
    5. 'res' → logprob: -3.223259687423706
    6. 'f' → logprob: -3.223259687423706
    7. '(' → logprob: -3.848259687423706
    8. ')' → logprob: -3.973259687423706
    9. 'fact' → logprob: -4.473259449005127
    10. 'S' → logprob: -4.723259449005127

Token 11: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.389026015996933
    2. ' operator' → logprob: -1.1390260457992554
    3. 'operator' → logprob: -7.014026165008545
    4. ' itertools' → logprob: -7.014026165008545
    5. 'math' → logprob: -8.139025688171387
    6. ' sys' → logprob: -10.014025688171387
    7. ' functools' → logprob: -11.639025688171387
    8. ' operators' → logprob: -12.764025688171387
    9. '_operator' → logprob: -13.389025688171387
    10. ' os' → logprob: -13.514025688171387

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008596966043114662
    2. '*' → logprob: -5.633596897125244
    3. 'X' → logprob: -5.633596897125244
    4. '(
' → logprob: -7.383596897125244
    5. '`' → logprob: -9.258597373962402
    6. '#' → logprob: -9.383597373962402
    7. '**' → logprob: -9.758597373962402
    8. '(X' → logprob: -9.758597373962402
    9. '\n' → logprob: -10.133597373962402
    10. '+' → logprob: -10.258597373962402

Token 13: 'f' (ID: 69)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5342448353767395
    2. '*' → logprob: -2.1592447757720947
    3. '(
' → logprob: -2.2842447757720947
    4. '`' → logprob: -2.9092447757720947
    5. 'X' → logprob: -3.9092447757720947
    6. 'result' → logprob: -4.034245014190674
    7. 'factor' → logprob: -4.159245014190674
    8. ''' → logprob: -4.659245014190674
    9. '**' → logprob: -4.784245014190674
    10. '[' → logprob: -4.784245014190674

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0806768611073494
    2. 'a' → logprob: -3.330676794052124
    3. '_' → logprob: -3.705676794052124
    4. 'u' → logprob: -4.955677032470703
    5. 'ac' → logprob: -5.705677032470703
    6. 'o' → logprob: -6.080677032470703
    7. 'actor' → logprob: -7.080677032470703
    8. 'act' → logprob: -7.455677032470703
    9. 'or' → logprob: -7.580677032470703
    10. '.' → logprob: -7.955677032470703

Token 15: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18734030425548553
    2. 'reduce' → logprob: -1.937340259552002
    3. '(lambda' → logprob: -4.687340259552002
    4. ' lambda' → logprob: -4.687340259552002
    5. 'operator' → logprob: -5.187340259552002
    6. 'factor' → logprob: -6.687340259552002
    7. ' reduce' → logprob: -7.562340259552002
    8. 'pow' → logprob: -8.18734073638916
    9. ' functools' → logprob: -8.81234073638916
    10. ')' → logprob: -9.56234073638916

Token 16: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08284587413072586
    2. 'x' → logprob: -2.58284592628479
    3. ' a' → logprob: -6.457845687866211
    4. ' X' → logprob: -6.957845687866211
    5. 'a' → logprob: -7.457845687866211
    6. 'X' → logprob: -8.332845687866211
    7. ' n' → logprob: -8.832845687866211
    8. ' lambda' → logprob: -8.957845687866211
    9. ' i' → logprob: -9.082845687866211
    10. ' ' → logprob: -9.332845687866211

Token 17: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20988981425762177
    2. ',' → logprob: -1.8348897695541382
    3. ' :' → logprob: -3.8348898887634277
    4. ',v' → logprob: -5.584889888763428
    5. ' ,' → logprob: -6.834889888763428
    6. ':v' → logprob: -7.209889888763428
    7. ':,' → logprob: -7.334889888763428
    8. ',:' → logprob: -7.834889888763428
    9. ',f' → logprob: -8.83488941192627
    10. '_:' → logprob: -8.83488941192627

Token 18: ' q' (ID: 2335)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.3124125003814697
    2. ' x' → logprob: -1.4374125003814697
    3. 'x' → logprob: -1.8124125003814697
    4. ' a' → logprob: -2.5624125003814697
    5. 'w' → logprob: -2.9374125003814697
    6. 'a' → logprob: -3.0624125003814697
    7. ' acc' → logprob: -3.1874125003814697
    8. ' op' → logprob: -4.062412261962891
    9. ' u' → logprob: -4.312412261962891
    10. ' i' → logprob: -4.562412261962891

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022433342412114143
    2. ' :' → logprob: -4.397433280944824
    3. ',' → logprob: -4.772433280944824
    4. ',:' → logprob: -7.647433280944824
    5. ':v' → logprob: -8.647433280944824
    6. '=' → logprob: -9.147433280944824
    7. ':,' → logprob: -9.272433280944824
    8. ',v' → logprob: -9.522433280944824
    9. '+:' → logprob: -9.647433280944824
    10. ':f' → logprob: -9.772433280944824

Token 20: ' div' (ID: 4223)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6900844573974609
    2. 'v' → logprob: -1.190084457397461
    3. ' operator' → logprob: -1.940084457397461
    4. 'operator' → logprob: -3.190084457397461
    5. ' f' → logprob: -5.440084457397461
    6. 'f' → logprob: -6.940084457397461
    7. '(operator' → logprob: -7.190084457397461
    8. ' (' → logprob: -7.440084457397461
    9. ' ' → logprob: -7.440084457397461
    10. '(v' → logprob: -8.440084457397461

Token 21: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5489835739135742
    2. 'ide' → logprob: -0.9239835739135742
    3. 'operator' → logprob: -4.423983573913574
    4. 'v' → logprob: -4.798983573913574
    5. ' operator' → logprob: -7.423983573913574
    6. 'ision' → logprob: -7.548983573913574
    7. ' v' → logprob: -7.798983573913574
    8. 'e' → logprob: -7.798983573913574
    9. '   ' → logprob: -7.923983573913574
    10. 'de' → logprob: -7.923983573913574

Token 22: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.06533894687891006
    2. 'v' → logprob: -2.8153388500213623
    3. '(' → logprob: -6.315339088439941
    4. ' v' → logprob: -6.940339088439941
    5. '(q' → logprob: -7.565339088439941
    6. 'q' → logprob: -10.190339088439941
    7. ')' → logprob: -12.065339088439941
    8. ' (' → logprob: -12.065339088439941
    9. 'vq' → logprob: -12.065339088439941
    10. '	v' → logprob: -12.315339088439941

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01943320408463478
    2. ',q' → logprob: -4.01943302154541
    3. ' ,' → logprob: -8.14443302154541
    4. ' q' → logprob: -8.26943302154541
    5. '+' → logprob: -8.64443302154541
    6. '[q' → logprob: -8.64443302154541
    7. 'q' → logprob: -8.76943302154541
    8. '*q' → logprob: -8.89443302154541
    9. ' by' → logprob: -10.76943302154541
    10. '*' → logprob: -10.76943302154541

Token 24: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05870438739657402
    2. '10' → logprob: -3.433704376220703
    3. ' q' → logprob: -3.933704376220703
    4. '2' → logprob: -5.808704376220703
    5. ' ' → logprob: -6.808704376220703
    6. '6' → logprob: -8.808704376220703
    7. '7' → logprob: -8.933704376220703
    8. '5' → logprob: -9.058704376220703
    9. '4' → logprob: -9.183704376220703
    10. '3' → logprob: -9.183704376220703

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029861222952604294
    2. ')[' → logprob: -3.5298612117767334
    3. '[' → logprob: -9.529861450195312
    4. ')`' → logprob: -11.654861450195312
    5. '),' → logprob: -11.779861450195312
    6. '   ' → logprob: -12.279861450195312
    7. ' )' → logprob: -12.654861450195312
    8. ')
' → logprob: -13.029861450195312
    9. '))' → logprob: -13.279861450195312
    10. ',' → logprob: -13.279861450195312

Token 26: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41451510787010193
    2. ')' → logprob: -2.0395150184631348
    3. 'X' → logprob: -2.5395150184631348
    4. '(X' → logprob: -2.5395150184631348
    5. '*' → logprob: -4.289515018463135
    6. '[' → logprob: -4.539515018463135
    7. '(
' → logprob: -5.289515018463135
    8. ',' → logprob: -5.664515018463135
    9. '(*' → logprob: -5.914515018463135
    10. '(x' → logprob: -5.914515018463135

Token 27: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10002828389406204
    2. '=' → logprob: -3.7250282764434814
    3. ',' → logprob: -3.8500282764434814
    4. 'r' → logprob: -4.3500285148620605
    5. 's' → logprob: -4.6000285148620605
    6. '[' → logprob: -4.8500285148620605
    7. '(' → logprob: -5.7250285148620605
    8. 'g' → logprob: -6.2250285148620605
    9. 'X' → logprob: -6.4750285148620605
    10. ' ' → logprob: -6.7250285148620605

Token 28: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5261168479919434
    2. ' b' → logprob: -1.6511168479919434
    3. 'X' → logprob: -1.9011168479919434
    4. ' X' → logprob: -3.0261168479919434
    5. '*' → logprob: -5.651116847991943
    6. ' ' → logprob: -6.026116847991943
    7. 'a' → logprob: -6.276116847991943
    8. 'r' → logprob: -6.526116847991943
    9. 'f' → logprob: -6.651116847991943
    10. 'v' → logprob: -7.026116847991943

Token 29: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09010627120733261
    2. 'X' → logprob: -2.840106248855591
    3. 'a' → logprob: -3.965106248855591
    4. 'q' → logprob: -5.96510648727417
    5. '0' → logprob: -6.84010648727417
    6. 'x' → logprob: -7.46510648727417
    7. ' b' → logprob: -7.59010648727417
    8. '_' → logprob: -7.71510648727417
    9. ')' → logprob: -7.84010648727417
    10. 'v' → logprob: -7.84010648727417

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3740522563457489
    2. ')' → logprob: -1.3740522861480713
    3. '=' → logprob: -3.6240522861480713
    4. ',)' → logprob: -4.249052047729492
    5. ' =' → logprob: -4.749052047729492
    6. ')=' → logprob: -4.999052047729492
    7. ' )' → logprob: -7.374052047729492
    8. ' ' → logprob: -7.374052047729492
    9. ' =)' → logprob: -7.624052047729492
    10. '),' → logprob: -8.124052047729492

Token 31: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2856314182281494
    2. 'a' → logprob: -1.6606314182281494
    3. ' c' → logprob: -3.4106314182281494
    4. ' a' → logprob: -4.66063117980957
    5. 'b' → logprob: -5.03563117980957
    6. ')' → logprob: -5.53563117980957
    7. 'q' → logprob: -6.78563117980957
    8. 'r' → logprob: -7.28563117980957
    9. 'X' → logprob: -7.53563117980957
    10. ' b' → logprob: -7.53563117980957

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022713904036208987
    2. '),' → logprob: -8.750226974487305
    3. ')=' → logprob: -9.625226974487305
    4. '))' → logprob: -13.625226974487305
    5. ' )' → logprob: -14.375226974487305
    6. ',' → logprob: -14.500226974487305
    7. '=' → logprob: -16.125226974487305
    8. ' =' → logprob: -17.125226974487305
    9. '`)' → logprob: -17.375226974487305
    10. ')))' → logprob: -17.500226974487305

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14302857220172882
    2. '=' → logprob: -2.018028497695923
    3. ')' → logprob: -8.268028259277344
    4. ',' → logprob: -9.518028259277344
    5. '=f' → logprob: -11.643028259277344
    6. ')=' → logprob: -11.768028259277344
    7. 'f' → logprob: -13.018028259277344
    8. '),' → logprob: -13.893028259277344
    9. 's' → logprob: -14.143028259277344
    10. '<|end|>' → logprob: -14.643028259277344

Token 34: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07386881113052368
    2. ' f' → logprob: -2.823868751525879
    3. 'div' → logprob: -5.073868751525879
    4. 'reduce' → logprob: -5.698868751525879
    5. ' div' → logprob: -7.073868751525879
    6. '(f' → logprob: -7.823868751525879
    7. ' reduce' → logprob: -8.073868751525879
    8. 'map' → logprob: -8.823868751525879
    9. ' map' → logprob: -9.323868751525879
    10. '[f' → logprob: -9.448868751525879

Token 35: 'lambda' (ID: 35280)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5354483127593994
    2. 'X' → logprob: -1.0354483127593994
    3. 'reduce' → logprob: -3.2854483127593994
    4. 'div' → logprob: -4.16044807434082
    5. ' f' → logprob: -6.41044807434082
    6. ' X' → logprob: -6.41044807434082
    7. '1' → logprob: -7.41044807434082
    8. '(f' → logprob: -8.16044807434082
    9. 'int' → logprob: -8.28544807434082
    10. ')' → logprob: -8.28544807434082

Token 36: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4356964826583862
    2. ' x' → logprob: -1.4356964826583862
    3. 'f' → logprob: -2.185696601867676
    4. 'v' → logprob: -2.310696601867676
    5. ' v' → logprob: -2.310696601867676
    6. ' n' → logprob: -2.935696601867676
    7. ' f' → logprob: -2.935696601867676
    8. 'n' → logprob: -3.435696601867676
    9. 'lambda' → logprob: -3.935696601867676
    10. ' lambda' → logprob: -4.060696601867676

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012119027087464929
    2. ',' → logprob: -7.251212120056152
    3. ':f' → logprob: -8.626212120056152
    4. ' :' → logprob: -9.001212120056152
    5. ':x' → logprob: -9.501212120056152
    6. 'f' → logprob: -10.501212120056152
    7. ',f' → logprob: -11.126212120056152
    8. 'x' → logprob: -11.126212120056152
    9. ':
' → logprob: -12.001212120056152
    10. '=' → logprob: -12.251212120056152

Token 38: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8284080624580383
    2. 'f' → logprob: -2.0784080028533936
    3. ' f' → logprob: -2.0784080028533936
    4. '(f' → logprob: -2.4534080028533936
    5. '(re' → logprob: -2.8284080028533936
    6. ' reduce' → logprob: -3.3284080028533936
    7. '(div' → logprob: -3.8284080028533936
    8. '(x' → logprob: -3.8284080028533936
    9. '(' → logprob: -4.453408241271973
    10. '(lambda' → logprob: -4.578408241271973

Token 39: 'f' (ID: 69)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.3891735076904297
    2. 'f' → logprob: -1.6391735076904297
    3. 'reduce' → logprob: -1.8891735076904297
    4. 'x' → logprob: -2.1391735076904297
    5. '(div' → logprob: -2.1391735076904297
    6. '(x' → logprob: -3.1391735076904297
    7. '(f' → logprob: -3.5141735076904297
    8. '(re' → logprob: -3.6391735076904297
    9. ' div' → logprob: -3.8891735076904297
    10. ' (' → logprob: -4.26417350769043

Token 40: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002632257528603077
    2. 'x' → logprob: -6.377632141113281
    3. '(' → logprob: -7.877632141113281
    4. '(int' → logprob: -8.252632141113281
    5. '(X' → logprob: -9.377632141113281
    6. '(f' → logprob: -9.502632141113281
    7. ')(' → logprob: -10.377632141113281
    8. '((' → logprob: -10.877632141113281
    9. '(abs' → logprob: -10.877632141113281
    10. ' (' → logprob: -11.502632141113281

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004197355825453997
    2. '(' → logprob: -5.629197120666504
    3. ' ,' → logprob: -8.754197120666504
    4. '(x' → logprob: -10.004197120666504
    5. 'a' → logprob: -10.254197120666504
    6. '2' → logprob: -10.629197120666504
    7. ',x' → logprob: -10.629197120666504
    8. '(X' → logprob: -10.879197120666504
    9. ')(' → logprob: -10.941697120666504
    10. '
' → logprob: -11.066697120666504

Token 42: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5851409435272217
    2. '100' → logprob: -1.5851409435272217
    3. '10' → logprob: -2.2101409435272217
    4. '3' → logprob: -2.2101409435272217
    5. '60' → logprob: -2.4601409435272217
    6. ' ' → logprob: -2.7101409435272217
    7. '4' → logprob: -2.9601409435272217
    8. '6' → logprob: -3.3351409435272217
    9. '12' → logprob: -3.4601409435272217
    10. '5' → logprob: -3.9601409435272217

Token 43: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3463134765625
    2. '10' → logprob: -1.4713134765625
    3. '3' → logprob: -1.7213134765625
    4. '2' → logprob: -2.3463134765625
    5. '60' → logprob: -2.7213134765625
    6. '4' → logprob: -3.4713134765625
    7. '6' → logprob: -3.7213134765625
    8. '5' → logprob: -4.0963134765625
    9. '12' → logprob: -4.2213134765625
    10. ' ' → logprob: -4.7213134765625

Token 44: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04646847024559975
    2. '0' → logprob: -3.296468496322632
    3. ')' → logprob: -6.171468257904053
    4. ' ),' → logprob: -6.546468257904053
    5. ')[' → logprob: -6.921468257904053
    6. '00' → logprob: -7.046468257904053
    7. '),
' → logprob: -7.546468257904053
    8. ')))' → logprob: -7.546468257904053
    9. '))' → logprob: -7.796468257904053
    10. '  ' → logprob: -8.421468734741211

Token 45: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4432293474674225
    2. ' f' → logprob: -1.0682293176651
    3. '*f' → logprob: -4.8182291984558105
    4. 'div' → logprob: -6.1932291984558105
    5. ' ' → logprob: -6.5682291984558105
    6. ' div' → logprob: -7.0682291984558105
    7. ')' → logprob: -7.8182291984558105
    8. '*' → logprob: -8.193229675292969
    9. '  ' → logprob: -8.193229675292969
    10. ' (' → logprob: -8.318229675292969

Token 46: '(f' (ID: 1526)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1255384087562561
    2. '(f' → logprob: -2.5005383491516113
    3. '(' → logprob: -3.7505383491516113
    4. 'x' → logprob: -5.250538349151611
    5. 'f' → logprob: -6.000538349151611
    6. '(*' → logprob: -6.500538349151611
    7. '500' → logprob: -6.875538349151611
    8. '((' → logprob: -7.500538349151611
    9. '(a' → logprob: -7.875538349151611
    10. ')(' → logprob: -8.87553882598877

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2105947732925415
    2. '(' → logprob: -1.9605947732925415
    3. '(f' → logprob: -3.210594654083252
    4. '[' → logprob: -5.960594654083252
    5. 'x' → logprob: -6.710594654083252
    6. '(*' → logprob: -6.835594654083252
    7. '(b' → logprob: -7.210594654083252
    8. '(_' → logprob: -7.710594654083252
    9. '((' → logprob: -7.835594654083252
    10. '0' → logprob: -8.08559513092041

Token 48: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4793679118156433
    2. '(' → logprob: -0.9793679118156433
    3. '0' → logprob: -7.104367733001709
    4. '500' → logprob: -7.354367733001709
    5. ',' → logprob: -7.604367733001709
    6. ' ' → logprob: -7.729367733001709
    7. '100' → logprob: -7.979367733001709
    8. '1' → logprob: -7.979367733001709
    9. '))' → logprob: -7.979367733001709
    10. ')' → logprob: -7.979367733001709

Token 49: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.24185483157634735
    2. '5' → logprob: -2.1168549060821533
    3. ' ' → logprob: -2.8668549060821533
    4. '50' → logprob: -3.4918549060821533
    5. '250' → logprob: -6.366854667663574
    6. '500' → logprob: -6.491854667663574
    7. '10' → logprob: -7.116854667663574
    8. '20' → logprob: -7.116854667663574
    9. '200' → logprob: -7.241854667663574
    10. '25' → logprob: -8.241854667663574

Token 50: ')[' (ID: 13637)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11332140862941742
    2. '00' → logprob: -2.863321304321289
    3. ',' → logprob: -3.613321304321289
    4. '),' → logprob: -5.113321304321289
    5. '50' → logprob: -5.238321304321289
    6. '25' → logprob: -5.738321304321289
    7. ' ' → logprob: -6.113321304321289
    8. '(' → logprob: -6.238321304321289
    9. '500' → logprob: -6.238321304321289
    10. '5' → logprob: -7.738321304321289

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02840719372034073
    2. '0' → logprob: -3.653407096862793
    3. ' ' → logprob: -6.403407096862793
    4. '100' → logprob: -8.153407096862793
    5. '   ' → logprob: -9.528407096862793
    6. '(' → logprob: -11.028407096862793
    7. '  ' → logprob: -11.153407096862793
    8. '50' → logprob: -11.528407096862793
    9. '10' → logprob: -11.653407096862793
    10. '99' → logprob: -11.778407096862793

Token 52: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006701869890093803
    2. '00' → logprob: -5.381701946258545
    3. '0' → logprob: -7.006701946258545
    4. ' ,' → logprob: -7.881701946258545
    5. '50' → logprob: -8.756701469421387
    6. '20' → logprob: -9.381701469421387
    7. ' ' → logprob: -9.756701469421387
    8. '30' → logprob: -9.756701469421387
    9. '40' → logprob: -9.881701469421387
    10. '5' → logprob: -10.131701469421387

Token 53: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06427764892578125
    2. ' ' → logprob: -2.9392776489257812
    3. '50' → logprob: -4.814277648925781
    4. '5' → logprob: -6.939277648925781
    5. '  ' → logprob: -9.564277648925781
    6. '10' → logprob: -10.189277648925781
    7. '   ' → logprob: -10.189277648925781
    8. '20' → logprob: -10.439277648925781
    9. '30' → logprob: -10.814277648925781
    10. '25' → logprob: -11.189277648925781

Token 54: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11939741671085358
    2. '50' → logprob: -2.6193974018096924
    3. ' ' → logprob: -3.2443974018096924
    4. '5' → logprob: -7.8693976402282715
    5. '  ' → logprob: -9.244397163391113
    6. '   ' → logprob: -9.744397163391113
    7. '20' → logprob: -9.869397163391113
    8. '200' → logprob: -10.369397163391113
    9. '60' → logprob: -10.994397163391113
    10. '10' → logprob: -10.994397163391113

Token 55: '))' (ID: 915)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004401036538183689
    2. '00' → logprob: -5.504401206970215
    3. ')))' → logprob: -9.004401206970215
    4. ' ' → logprob: -9.504401206970215
    5. '))' → logprob: -9.879401206970215
    6. '   ' → logprob: -11.004401206970215
    7. '))[' → logprob: -11.254401206970215
    8. '5' → logprob: -11.629401206970215
    9. '1' → logprob: -11.754401206970215
    10. ')),' → logprob: -12.129401206970215

Token 56: ')(' (ID: 4898)
  Prédit: '))('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))(' → logprob: -0.6883358955383301
    2. '(X' → logprob: -0.9383358955383301
    3. '))' → logprob: -2.93833589553833
    4. ')(' → logprob: -3.56333589553833
    5. '(' → logprob: -4.43833589553833
    6. '(x' → logprob: -5.18833589553833
    7. 'X' → logprob: -5.43833589553833
    8. ')' → logprob: -5.93833589553833
    9. ' X' → logprob: -9.063335418701172
    10. '),' → logprob: -9.813335418701172

Token 57: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.001512004528194666
    2. ' X' → logprob: -6.501512050628662
    3. '  ' → logprob: -12.626511573791504
    4. '   ' → logprob: -13.126511573791504
    5. ' ' → logprob: -13.251511573791504
    6. 'x' → logprob: -13.751511573791504
    7. ')' → logprob: -13.876511573791504
    8. 'int' → logprob: -15.626511573791504
    9. '	X' → logprob: -16.50151252746582
    10. '(X' → logprob: -17.00151252746582

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134441673755646
    2. '))' → logprob: -1.3134441375732422
    3. ')))' → logprob: -8.688444137573242
    4. ')
' → logprob: -12.688444137573242
    5. ')}' → logprob: -12.813444137573242
    6. ' )' → logprob: -12.938444137573242
    7. ' ))' → logprob: -14.188444137573242
    8. '))
' → logprob: -14.313444137573242
    9. '})' → logprob: -14.313444137573242
    10. '0' → logprob: -14.688444137573242

Token 59: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05420848727226257
    2. '<|end|>' → logprob: -3.179208517074585
    3. ',' → logprob: -5.679208278656006
    4. ' ' → logprob: -6.429208278656006
    5. ':' → logprob: -6.554208278656006
    6. '*' → logprob: -7.054208278656006
    7. '```' → logprob: -7.179208278656006
    8. '<|end|>' → logprob: -7.804208278656006
    9. ')
' → logprob: -8.304208755493164
    10. '(' → logprob: -8.304208755493164

Token 60: '(re' (ID: 8178)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008390219882130623
    2. '(' → logprob: -5.258390426635742
    3. '((' → logprob: -6.133390426635742
    4. '(f' → logprob: -7.758390426635742
    5. 'a' → logprob: -8.258390426635742
    6. '('' → logprob: -8.758390426635742
    7. '(*' → logprob: -10.133390426635742
    8. '(b' → logprob: -10.258390426635742
    9. '(sum' → logprob: -11.508390426635742
    10. '(len' → logprob: -11.633390426635742

Token 61: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.10013797879219055
    2. 'pr' → logprob: -2.725137948989868
    3. 'peat' → logprob: -4.475138187408447
    4. 's' → logprob: -4.975138187408447
    5. 'verse' → logprob: -5.600138187408447
    6. 'place' → logprob: -5.975138187408447
    7. 'd' → logprob: -6.725138187408447
    8. 'g' → logprob: -7.225138187408447
    9. 'p' → logprob: -7.350138187408447
    10. 'duced' → logprob: -7.600138187408447

Token 62: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.00219273311085999
    2. '(' → logprob: -6.127192497253418
    3. ' (' → logprob: -12.377192497253418
    4. '(lambda' → logprob: -14.127192497253418
    5. '	operator' → logprob: -14.252192497253418
    6. 'operator' → logprob: -14.252192497253418
    7. '(op' → logprob: -14.752192497253418
    8. ' operator' → logprob: -15.127192497253418
    9. '(
' → logprob: -15.127192497253418
    10. ')' → logprob: -15.377192497253418

Token 63: '.add' (ID: 1950)
  Prédit: '.mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.022942494601011276
    2. '.add' → logprob: -4.022942543029785
    3. '.' → logprob: -5.397942543029785
    4. '.im' → logprob: -8.897942543029785
    5. '.multiply' → logprob: -10.147942543029785
    6. ' .' → logprob: -11.147942543029785
    7. '.matmul' → logprob: -11.272942543029785
    8. '.icon' → logprob: -11.772942543029785
    9. '.pow' → logprob: -12.022942543029785
    10. '.mult' → logprob: -12.022942543029785

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6619304418563843
    2. ',[' → logprob: -0.7869304418563843
    3. ',(' → logprob: -3.911930561065674
    4. '([' → logprob: -5.161930561065674
    5. '[a' → logprob: -6.536930561065674
    6. ',a' → logprob: -7.661930561065674
    7. ' ,[' → logprob: -7.911930561065674
    8. '[' → logprob: -8.036930084228516
    9. '(a' → logprob: -8.536930084228516
    10. '((' → logprob: -9.411930084228516

Token 65: ' map' (ID: 4014)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.4854041039943695
    2. 'a' → logprob: -1.110404133796692
    3. '(a' → logprob: -3.1104040145874023
    4. '[' → logprob: -5.735404014587402
    5. '[b' → logprob: -5.860404014587402
    6. ' [' → logprob: -6.360404014587402
    7. ' a' → logprob: -7.360404014587402
    8. ' (' → logprob: -7.860404014587402
    9. '[(' → logprob: -7.985404014587402
    10. '(' → logprob: -8.235404014587402

Token 66: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.6974590420722961
    2. '(int' → logprob: -1.1974589824676514
    3. '(lambda' → logprob: -1.8224589824676514
    4. '(operator' → logprob: -3.5724589824676514
    5. '(list' → logprob: -4.9474592208862305
    6. '(' → logprob: -6.5724592208862305
    7. '(tuple' → logprob: -7.4474592208862305
    8. '(len' → logprob: -7.6974592208862305
    9. '(ord' → logprob: -7.6974592208862305
    10. '(chr' → logprob: -8.82245922088623

Token 67: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.604629635810852
    2. 'lambda' → logprob: -1.729629635810852
    3. ' int' → logprob: -1.979629635810852
    4. 'int' → logprob: -2.3546295166015625
    5. ' str' → logprob: -3.8546295166015625
    6. 'str' → logprob: -4.8546295166015625
    7. '(lambda' → logprob: -5.9796295166015625
    8. ' list' → logprob: -6.3546295166015625
    9. 'operator' → logprob: -6.3546295166015625
    10. 'list' → logprob: -6.7296295166015625

Token 68: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1504354625940323
    2. ',' → logprob: -2.525435447692871
    3. ':int' → logprob: -3.275435447692871
    4. ',int' → logprob: -4.150435447692871
    5. ' :' → logprob: -6.650435447692871
    6. '=lambda' → logprob: -7.150435447692871
    7. 'lambda' → logprob: -7.275435447692871
    8. ':str' → logprob: -7.275435447692871
    9. ',len' → logprob: -7.275435447692871
    10. 'int' → logprob: -8.150435447692871

Token 69: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25405949354171753
    2. ' y' → logprob: -2.0040595531463623
    3. ' lambda' → logprob: -3.1290595531463623
    4. 'lambda' → logprob: -3.1290595531463623
    5. 'b' → logprob: -7.879059314727783
    6. 'c' → logprob: -8.129059791564941
    7. ' ' → logprob: -8.379059791564941
    8. '=lambda' → logprob: -8.629059791564941
    9. '  ' → logprob: -8.879059791564941
    10. 'x' → logprob: -8.879059791564941

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4882154166698456
    2. ',' → logprob: -1.363215446472168
    3. '=lambda' → logprob: -2.363215446472168
    4. ')' → logprob: -4.363215446472168
    5. '<|end|>' → logprob: -4.363215446472168
    6. ' :' → logprob: -5.988215446472168
    7. '),' → logprob: -6.363215446472168
    8. '):' → logprob: -6.613215446472168
    9. ' ,' → logprob: -6.988215446472168
    10. '=' → logprob: -7.363215446472168

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6070587038993835
    2. 'x' → logprob: -1.4820587635040283
    3. ' str' → logprob: -1.7320587635040283
    4. 'str' → logprob: -4.107058525085449
    5. ' int' → logprob: -4.357058525085449
    6. 'int' → logprob: -5.482058525085449
    7. ' (' → logprob: -5.482058525085449
    8. ' abs' → logprob: -5.982058525085449
    9. ' ' → logprob: -6.232058525085449
    10. ' lambda' → logprob: -6.482058525085449

Token 72: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022646520286798477
    2. ',y' → logprob: -4.022646427154541
    3. ' ,' → logprob: -6.022646427154541
    4. ',b' → logprob: -7.272646427154541
    5. '+' → logprob: -7.897646427154541
    6. ' +' → logprob: -8.1476469039917
    7. '+y' → logprob: -8.6476469039917
    8. ',x' → logprob: -9.2726469039917
    9. '[' → logprob: -9.8976469039917
    10. '*' → logprob: -9.8976469039917

Token 73: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25433409214019775
    2. ' y' → logprob: -1.5043340921401978
    3. '10' → logprob: -6.754333972930908
    4. ' ' → logprob: -7.254333972930908
    5. '100' → logprob: -8.629334449768066
    6. '(' → logprob: -10.254334449768066
    7. 'x' → logprob: -10.379334449768066
    8. '60' → logprob: -10.566834449768066
    9. '30' → logprob: -11.004334449768066
    10. '5' → logprob: -11.066834449768066

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0431438609957695
    2. ',[' → logprob: -3.5431437492370605
    3. ',(' → logprob: -4.5431437492370605
    4. '([' → logprob: -7.1681437492370605
    5. ' ,' → logprob: -7.1681437492370605
    6. ',b' → logprob: -7.9181437492370605
    7. ',c' → logprob: -8.543144226074219
    8. ',a' → logprob: -8.668144226074219
    9. '(' → logprob: -9.418144226074219
    10. '((' → logprob: -9.543144226074219

Token 75: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.49554845690727234
    2. '[a' → logprob: -1.6205484867095947
    3. '[' → logprob: -1.9955484867095947
    4. '(a' → logprob: -3.7455484867095947
    5. ' (' → logprob: -4.120548248291016
    6. '[b' → logprob: -4.870548248291016
    7. '(b' → logprob: -6.245548248291016
    8. '([' → logprob: -6.495548248291016
    9. '<|end|>' → logprob: -6.495548248291016
    10. ' a' → logprob: -6.745548248291016

Token 76: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9120622873306274
    2. '[a' → logprob: -0.9120622873306274
    3. ' [' → logprob: -2.412062168121338
    4. 'a' → logprob: -2.662062168121338
    5. '[b' → logprob: -3.912062168121338
    6. 'b' → logprob: -5.287062168121338
    7. ' a' → logprob: -5.412062168121338
    8. '(a' → logprob: -5.787062168121338
    9. ' ' → logprob: -6.537062168121338
    10. '   ' → logprob: -6.912062168121338

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008144664578139782
    2. ' ,' → logprob: -4.883144855499268
    3. ',[' → logprob: -8.13314437866211
    4. ',b' → logprob: -8.75814437866211
    5. '[' → logprob: -10.63314437866211
    6. ' ,[' → logprob: -11.00814437866211
    7. ' ' → logprob: -11.38314437866211
    8. ',c' → logprob: -11.75814437866211
    9. ',a' → logprob: -13.00814437866211
    10. '<|end|>' → logprob: -13.00814437866211

Token 78: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2443685680627823
    2. '50' → logprob: -2.494368553161621
    3. '100' → logprob: -2.869368553161621
    4. ' b' → logprob: -3.244368553161621
    5. ' ' → logprob: -4.494368553161621
    6. '[' → logprob: -4.869368553161621
    7. '5' → logprob: -5.244368553161621
    8. '10' → logprob: -5.869368553161621
    9. '20' → logprob: -6.119368553161621
    10. '1' → logprob: -6.119368553161621

Token 79: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011021530255675316
    2. '[' → logprob: -5.261021614074707
    3. ' ,' → logprob: -6.261021614074707
    4. ',[' → logprob: -6.261021614074707
    5. '],' → logprob: -7.011021614074707
    6. ',c' → logprob: -7.386021614074707
    7. '],[' → logprob: -8.136021614074707
    8. ' ,[' → logprob: -10.261021614074707
    9. ' [' → logprob: -10.511021614074707
    10. '),' → logprob: -11.261021614074707

Token 80: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09022217988967896
    2. ' [' → logprob: -2.465222120285034
    3. '[c' → logprob: -6.715222358703613
    4. ' ' → logprob: -10.340222358703613
    5. '  ' → logprob: -11.340222358703613
    6. 'c' → logprob: -12.090222358703613
    7. '   ' → logprob: -12.465222358703613
    8. ' c' → logprob: -12.840222358703613
    9. '[C' → logprob: -13.340222358703613
    10. '[
' → logprob: -13.465222358703613

Token 81: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.49813970923423767
    2. '[' → logprob: -1.74813973903656
    3. 'c' → logprob: -2.6231396198272705
    4. '10' → logprob: -2.9981396198272705
    5. '5' → logprob: -3.8731396198272705
    6. ' ' → logprob: -3.8731396198272705
    7. ' [' → logprob: -4.37313985824585
    8. '[c' → logprob: -4.37313985824585
    9. '50' → logprob: -5.12313985824585
    10. '1' → logprob: -5.12313985824585

Token 82: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45913422107696533
    2. '5' → logprob: -1.3341342210769653
    3. '0' → logprob: -3.084134101867676
    4. ' ' → logprob: -4.209134101867676
    5. ' ,' → logprob: -4.334134101867676
    6. '10' → logprob: -4.584134101867676
    7. '50' → logprob: -4.584134101867676
    8. '1' → logprob: -5.334134101867676
    9. '100' → logprob: -5.959134101867676
    10. '20' → logprob: -6.959134101867676

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009411675855517387
    2. ' ,' → logprob: -4.759411811828613
    3. ',c' → logprob: -8.259411811828613
    4. '500' → logprob: -8.759411811828613
    5. '100' → logprob: -9.134411811828613
    6. '5' → logprob: -9.634411811828613
    7. '0' → logprob: -10.009411811828613
    8. ' ' → logprob: -10.259411811828613
    9. ',
' → logprob: -10.884411811828613
    10. ',b' → logprob: -11.259411811828613

Token 84: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01558497454971075
    2. '10' → logprob: -5.015584945678711
    3. ' ' → logprob: -5.515584945678711
    4. '5' → logprob: -6.140584945678711
    5. '1' → logprob: -6.390584945678711
    6. '50' → logprob: -7.390584945678711
    7. '500' → logprob: -9.390584945678711
    8. '20' → logprob: -9.765584945678711
    9. '0' → logprob: -10.015584945678711
    10. '2' → logprob: -10.140584945678711

Token 85: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.14664508402347565
    2. '1' → logprob: -2.3966450691223145
    3. '10' → logprob: -3.8966450691223145
    4. '5' → logprob: -4.3966450691223145
    5. ' ' → logprob: -4.6466450691223145
    6. '50' → logprob: -6.2716450691223145
    7. '20' → logprob: -8.021645545959473
    8. '2' → logprob: -8.146645545959473
    9. '0' → logprob: -8.896645545959473
    10. '  ' → logprob: -9.021645545959473

Token 86: '])))' (ID: 196150)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.09954030811786652
    2. '))' → logprob: -3.3495402336120605
    3. ')))' → logprob: -3.8495402336120605
    4. ']' → logprob: -3.8495402336120605
    5. ' ]' → logprob: -4.7245402336120605
    6. ')' → logprob: -5.8495402336120605
    7. ',' → logprob: -6.8495402336120605
    8. '])' → logprob: -7.2245402336120605
    9. '])))' → logprob: -7.3495402336120605
    10. '0' → logprob: -7.7245402336120605


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 32.14%
Précision adaptée (1ère position): 32.14%
Précision (top 10): 71.43%
================================================================================
