================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import heappop, heappush
import numpy as np

def create_heap(a_list, n):
    h = []
    for i in range(n):
        push_to_heap(h, a_list, i)
    return h

def push_to_heap(h, a_list, i):
    heappush(h, (-a_list[i], i))

def initialize_dp(n):
    dp = get_negative_matrix(n)
    set_dp_starting_point(dp)
    return dp

def get_negative_matrix(n):
    # np.int is deprecated but preserved for similarity
    return (-10 ** 18) * np.ones((n + 1, n + 1), dtype=np.int)

def set_dp_starting_point(dp):
    dp[0, 0] = 0

def process_left(dp, i, a, k, n):
    values = compute_left_values(dp, i, a, k, n)
    update_left(dp, i, values)

def compute_left_values(dp, i, a, k, n):
    indices = np.arange(n)
    prev_values = dp[i, :-1]
    diffs = np.abs(k - indices)
    return prev_values + (-a) * diffs

def update_left(dp, i, values):
    dp[i + 1, 1:] = np.maximum(dp[i + 1, 1:], values)

def process_right(dp, i, a, k, n):
    values = compute_right_values(dp, i, a, k, n)
    update_right(dp, i, values)

def compute_right_values(dp, i, a, k, n):
    indices = np.arange(n - 1 - i, n + n - 1 - i)
    prev_values = dp[i, :-1]
    diffs = np.abs(k - indices)
    return prev_values + (-a) * diffs

def update_right(dp, i, values):
    dp[i + 1, :-1] = np.maximum(dp[i + 1, :-1], values)

def update_dp_with_heap(dp, h, n):
    for i in range(n):
        a, k = pop_from_heap(h)
        process_left(dp, i, a, k, n)
        process_right(dp, i, a, k, n)

def pop_from_heap(h):
    return heappop(h)

def get_result_from_dp(dp):
    return extract_max_from_last_row(dp)

def extract_max_from_last_row(dp):
    return dp[-1, :].max()

def solve(n, a_list):
    h = create_heap(a_list, n)
    dp = initialize_dp(n)
    update_dp_with_heap(dp, h, n)
    res = get_result_from_dp(dp)
    return res

def get_input():
    n = int(input())
    a_list = list(map(int, input().split()))
    return n, a_list

def print_result(res):
    print(res)

def main():
    n, a_list = get_input()
    res = solve(n, a_list)
    print_result(res)

def test_solve_basic():
    assert solve(4, [1, 3, 4, 2]) == 20

def test_solve_medium():
    assert solve(6, [5, 5, 6, 1, 1, 1]) == 58

def test_solve_hard():
    assert solve(6, [8, 6, 9, 1, 2, 1]) == 85

def test():
    test_solve_basic()
    test_solve_medium()
    test_solve_hard()
    # print(solve(2000, [0] * 2000))

if __name__ == "__main__":
    test()
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2625003159046173
    2. 'import' → logprob: -1.512500286102295
    3. ' import' → logprob: -4.637500286102295
    4. '.import' → logprob: -8.387500762939453
    5. 'i' → logprob: -8.762500762939453
    6. ' ' → logprob: -8.887500762939453
    7. ' .' → logprob: -9.762500762939453
    8. 'im' → logprob: -10.012500762939453
    9. '.im' → logprob: -10.012500762939453
    10. '(' → logprob: -10.387500762939453

Token 4: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10937143862247467
    2. 'heap' → logprob: -2.8593714237213135
    3. ' he' → logprob: -3.1093714237213135
    4. 'nl' → logprob: -6.609371662139893
    5. 'merge' → logprob: -8.984371185302734
    6. ' heap' → logprob: -10.109371185302734
    7. '```' → logprob: -10.109371185302734
    8. ' n' → logprob: -10.359371185302734
    9. 'n' → logprob: -10.359371185302734
    10. '`' → logprob: -10.359371185302734

Token 5: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.3900527358055115
    2. 'ap' → logprob: -1.1400527954101562
    3. 'a' → logprob: -6.390052795410156
    4. 'apl' → logprob: -6.890052795410156
    5. 'aps' → logprob: -8.265052795410156
    6. 'n' → logprob: -9.265052795410156
    7. 'nl' → logprob: -9.890052795410156
    8. 'q' → logprob: -10.765052795410156
    9. 'ап' → logprob: -11.390052795410156
    10. 'aq' → logprob: -11.640052795410156

Token 6: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0018277422059327364
    2. 'op' → logprob: -6.501827716827393
    3. 'us' → logprob: -8.25182819366455
    4. 'u' → logprob: -9.75182819366455
    5. 'o' → logprob: -12.12682819366455
    6. '```' → logprob: -15.00182819366455
    7. 'opleft' → logprob: -15.50182819366455
    8. '[' → logprob: -16.751827239990234
    9. 'uf' → logprob: -16.876827239990234
    10. 'push' → logprob: -17.126827239990234

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16081492602825165
    2. '(' → logprob: -2.2858150005340576
    3. 'import' → logprob: -3.2858150005340576
    4. '```' → logprob: -5.7858147621154785
    5. '(heap' → logprob: -6.6608147621154785
    6. '<|end|>' → logprob: -6.9108147621154785
    7. 'he' → logprob: -7.2858147621154785
    8. '[' → logprob: -7.4108147621154785
    9. ',
' → logprob: -7.6608147621154785
    10. '\(' → logprob: -7.7858147621154785

Token 8: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.057020287960767746
    2. ' he' → logprob: -3.0570201873779297
    3. 'heap' → logprob: -4.80702018737793
    4. ' heap' → logprob: -8.43202018737793
    5. ' heaps' → logprob: -13.68202018737793
    6. 'hep' → logprob: -13.68202018737793
    7. '```' → logprob: -13.80702018737793
    8. '.he' → logprob: -13.93202018737793
    9. '_he' → logprob: -14.30702018737793
    10. 'hev' → logprob: -14.30702018737793

Token 9: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023268306627869606
    2. 'ap' → logprob: -3.773268222808838
    3. 'a' → logprob: -10.773268699645996
    4. 'ап' → logprob: -14.148268699645996
    5. 'appen' → logprob: -14.898268699645996
    6. 'apl' → logprob: -15.273268699645996
    7. 'apput' → logprob: -16.39826774597168
    8. 'append' → logprob: -16.52326774597168
    9. 'APP' → logprob: -16.89826774597168
    10. 'apply' → logprob: -17.27326774597168

Token 10: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.008129963040119e-06
    2. 'us' → logprob: -12.500003814697266
    3. 'u' → logprob: -16.000003814697266
    4. 'push' → logprob: -17.750003814697266
    5. 'USH' → logprob: -18.625003814697266
    6. 'ushed' → logprob: -19.125003814697266
    7. 'op' → logprob: -19.625003814697266
    8. 'ushy' → logprob: -19.625003814697266
    9. '```' → logprob: -19.875003814697266
    10. 'ushi' → logprob: -20.125003814697266

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019722258730325848
    2. '\(' → logprob: -9.250197410583496
    3. '(
' → logprob: -9.875197410583496
    4. 'd' → logprob: -11.250197410583496
    5. 'def' → logprob: -11.500197410583496
    6. '\' → logprob: -12.125197410583496
    7. '[' → logprob: -12.625197410583496
    8. '#' → logprob: -13.250197410583496
    9. ' (' → logprob: -13.250197410583496
    10. 'a' → logprob: -13.375197410583496

Token 12: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015547400107607245
    2. '\(' → logprob: -7.6265549659729
    3. ' (' → logprob: -8.376554489135742
    4. '\' → logprob: -8.376554489135742
    5. '(
' → logprob: -8.626554489135742
    6. '[' → logprob: -8.751554489135742
    7. ',' → logprob: -9.751554489135742
    8. 'def' → logprob: -10.001554489135742
    9. '\n' → logprob: -10.751554489135742
    10. '```' → logprob: -10.751554489135742

Token 13: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2956346273422241
    2. ' os' → logprob: -2.1706347465515137
    3. ' heap' → logprob: -2.9206347465515137
    4. ' ' → logprob: -3.2956347465515137
    5. ' collections' → logprob: -3.7956347465515137
    6. ' math' → logprob: -3.7956347465515137
    7. ' itertools' → logprob: -5.670634746551514
    8. ' ' → logprob: -6.920634746551514
    9. ' space' → logprob: -7.170634746551514
    10. ' random' → logprob: -8.295634269714355

Token 14: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7197567224502563
    2. ' as' → logprob: -0.7197567224502563
    3. 'as' → logprob: -4.344756603240967
    4. '<|end|>' → logprob: -4.844756603240967
    5. ' ' → logprob: -5.844756603240967
    6. '.ndarray' → logprob: -6.969756603240967
    7. ' .' → logprob: -7.094756603240967
    8. '.as' → logprob: -8.094757080078125
    9. '<|end|>' → logprob: -9.094757080078125
    10. '.asarray' → logprob: -9.844757080078125

Token 15: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0005370667786337435
    2. 'np' → logprob: -7.625536918640137
    3. ' ' → logprob: -10.125536918640137
    4. ' ' → logprob: -11.750536918640137
    5. ' numpy' → logprob: -14.750536918640137
    6. ' n' → logprob: -15.875536918640137
    7. ' nd' → logprob: -16.375537872314453
    8. ' 
' → logprob: -16.500537872314453
    9. '    ' → logprob: -16.625537872314453
    10. ' pd' → logprob: -17.000537872314453

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.835203230381012
    2. '\' → logprob: -0.960203230381012
    3. '\n' → logprob: -2.960203170776367
    4. 'def' → logprob: -3.085203170776367
    5. '```' → logprob: -3.960203170776367
    6. '(' → logprob: -4.085203170776367
    7. '(
' → logprob: -4.335203170776367
    8. 'd' → logprob: -4.835203170776367
    9. '
' → logprob: -5.085203170776367
    10. '' → logprob: -5.085203170776367

Token 17: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.499042272567749
    2. 'd' → logprob: -0.999042272567749
    3. '(' → logprob: -4.124042510986328
    4. 'de' → logprob: -5.374042510986328
    5. '[' → logprob: -6.624042510986328
    6. '```' → logprob: -7.249042510986328
    7. '`' → logprob: -7.374042510986328
    8. '#' → logprob: -7.874042510986328
    9. 'a' → logprob: -8.999042510986328
    10. '(
' → logprob: -8.999042510986328

Token 18: ' create' (ID: 2501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005404045223258436
    2. ' space' → logprob: -8.375540733337402
    3. ' a' → logprob: -9.625540733337402
    4. ' shortest' → logprob: -10.125540733337402
    5. ' find' → logprob: -10.625540733337402
    6. ' ' → logprob: -10.875540733337402
    7. '_' → logprob: -11.125540733337402
    8. ' s' → logprob: -11.500540733337402
    9. ' process' → logprob: -11.625540733337402
    10. ' add' → logprob: -11.625540733337402

Token 19: '_heap' (ID: 88741)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00912513118237257
    2. '_array' → logprob: -5.509125232696533
    3. '_heap' → logprob: -6.759125232696533
    4. ' _' → logprob: -7.134125232696533
    5. '_space' → logprob: -7.759125232696533
    6. '_p' → logprob: -8.384124755859375
    7. ' ' → logprob: -8.384124755859375
    8. '(' → logprob: -8.509124755859375
    9. '_cube' → logprob: -8.509124755859375
    10. '_tensor' → logprob: -8.884124755859375

Token 20: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007118960842490196
    2. '_' → logprob: -5.007119178771973
    3. '_(' → logprob: -8.632119178771973
    4. ' (' → logprob: -9.632119178771973
    5. '_list' → logprob: -11.507119178771973
    6. '(_' → logprob: -11.507119178771973
    7. '_heap' → logprob: -11.632119178771973
    8. ')' → logprob: -11.757119178771973
    9. '("("' → logprob: -12.007119178771973
    10. '_space' → logprob: -12.007119178771973

Token 21: '_list' (ID: 4162)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22844505310058594
    2. '):' → logprob: -1.603445053100586
    3. '[' → logprob: -6.228445053100586
    4. 's' → logprob: -7.728445053100586
    5. ',' → logprob: -7.853445053100586
    6. '_' → logprob: -9.978445053100586
    7. '(' → logprob: -10.853445053100586
    8. '[]):' → logprob: -10.853445053100586
    9. 'a' → logprob: -10.978445053100586
    10. '):
' → logprob: -11.103445053100586

Token 22: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006074552424252033
    2. ')' → logprob: -5.13107442855835
    3. ',' → logprob: -9.131074905395508
    4. ':' → logprob: -10.881074905395508
    5. '[' → logprob: -11.381074905395508
    6. ' ):' → logprob: -12.506074905395508
    7. '):
' → logprob: -14.131074905395508
    8. '[]):' → logprob: -14.256074905395508
    9. ']:' → logprob: -14.631074905395508
    10. '   ' → logprob: -15.131074905395508

Token 23: ' n' (ID: 297)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5499893426895142
    2. ' max' → logprob: -1.5499893426895142
    3. ' key' → logprob: -2.2999892234802246
    4. ')' → logprob: -3.6749892234802246
    5. 'heap' → logprob: -3.9249892234802246
    6. ' a' → logprob: -4.049989223480225
    7. ' reverse' → logprob: -4.924989223480225
    8. ' capacity' → logprob: -5.049989223480225
    9. 'max' → logprob: -5.174989223480225
    10. ' lst' → logprob: -5.424989223480225

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003522621700540185
    2. ')' → logprob: -5.7535223960876465
    3. ',' → logprob: -8.128522872924805
    4. ' ):' → logprob: -10.753522872924805
    5. ':' → logprob: -11.253522872924805
    6. '=' → logprob: -11.628522872924805
    7. '_' → logprob: -13.378522872924805
    8. '):
' → logprob: -13.878522872924805
    9. ' ' → logprob: -14.378522872924805
    10. 'a' → logprob: -14.628522872924805

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5450484752655029
    2. ':' → logprob: -0.9200484752655029
    3. ' ' → logprob: -4.045048713684082
    4. ' :' → logprob: -6.920048713684082
    5. '    ' → logprob: -7.170048713684082
    6. '):' → logprob: -7.545048713684082
    7. ')' → logprob: -7.795048713684082
    8. '  ' → logprob: -8.170048713684082
    9. 'he' → logprob: -8.170048713684082
    10. '```' → logprob: -8.795048713684082

Token 26: ' h' (ID: 312)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.14413392543792725
    2. ' ' → logprob: -3.019134044647217
    3. 'heap' → logprob: -3.144134044647217
    4. ' h' → logprob: -4.019134044647217
    5. 'he' → logprob: -5.019134044647217
    6. ' he' → logprob: -5.644134044647217
    7. '   ' → logprob: -5.769134044647217
    8. 'h' (adapté à ' h') → logprob: -5.769134044647217
    9. ' heaps' → logprob: -6.769134044647217
    10. ' a' → logprob: -7.019134044647217

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22903656959533691
    2. 'e' → logprob: -1.979036569595337
    3. ' =' → logprob: -2.729036569595337
    4. '=[]' → logprob: -7.229036331176758
    5. ',' → logprob: -8.854036331176758
    6. '   ' → logprob: -9.354036331176758
    7. ' ' → logprob: -9.854036331176758
    8. '=e' → logprob: -9.979036331176758
    9. 'a' → logprob: -10.354036331176758
    10. '    ' → logprob: -10.604036331176758

Token 28: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16023163497447968
    2. '[]' → logprob: -1.910231590270996
    3. '[' → logprob: -12.410231590270996
    4. ' [' → logprob: -13.285231590270996
    5. '[]}' → logprob: -14.660231590270996
    6. ' ' → logprob: -14.785231590270996
    7. ' [],' → logprob: -15.285231590270996
    8. '[],' → logprob: -15.785231590270996
    9. '   ' → logprob: -16.035232543945312
    10. ' [])' → logprob: -16.410232543945312

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46181488037109375
    2. 'for' → logprob: -2.0868148803710938
    3. ' for' → logprob: -2.7118148803710938
    4. '    ' → logprob: -2.8368148803710938
    5. ' ' → logprob: -2.8368148803710938
    6. '    
' → logprob: -3.3368148803710938
    7. '
' → logprob: -4.461814880371094
    8. '<|end|>' → logprob: -5.211814880371094
    9. '  ' → logprob: -5.586814880371094
    10. ')' → logprob: -6.336814880371094

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014203932136297226
    2. ' for' → logprob: -4.264204025268555
    3. '   ' → logprob: -10.389204025268555
    4. ' ' → logprob: -12.639204025268555
    5. 'he' → logprob: -12.889204025268555
    6. '  ' → logprob: -13.389204025268555
    7. '	for' → logprob: -13.764204025268555
    8. '    ' → logprob: -14.264204025268555
    9. ' he' → logprob: -16.139204025268555
    10. ')' → logprob: -16.264204025268555

Token 31: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10550270974636078
    2. ' i' → logprob: -2.7305026054382324
    3. ' item' → logprob: -4.105502605438232
    4. ' x' → logprob: -4.355502605438232
    5. ' _' → logprob: -6.605502605438232
    6. ' num' → logprob: -6.855502605438232
    7. ' val' → logprob: -7.230502605438232
    8. ' a' → logprob: -7.230502605438232
    9. ' value' → logprob: -7.855502605438232
    10. '  ' → logprob: -7.855502605438232

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16183659434318542
    2. 'in' → logprob: -1.9118366241455078
    3. ' ' → logprob: -6.536836624145508
    4. '  ' → logprob: -9.161836624145508
    5. 'n' → logprob: -11.286836624145508
    6. '   ' → logprob: -11.536836624145508
    7. '	in' → logprob: -12.286836624145508
    8. ',' → logprob: -12.411836624145508
    9. ' i' → logprob: -12.536836624145508
    10. '    ' → logprob: -12.786836624145508

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009163758717477322
    2. 'range' → logprob: -4.759163856506348
    3. ' a' → logprob: -7.759163856506348
    4. ' ' → logprob: -9.384163856506348
    5. '  ' → logprob: -11.384163856506348
    6. '	range' → logprob: -11.884163856506348
    7. 'n' → logprob: -12.259163856506348
    8. 'a' → logprob: -12.259163856506348
    9. ' xrange' → logprob: -12.259163856506348
    10. ')' → logprob: -13.884163856506348

Token 34: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10061174631118774
    2. '(n' → logprob: -2.350611686706543
    3. ' (' → logprob: -8.475611686706543
    4. '(len' → logprob: -8.600611686706543
    5. '(
' → logprob: -11.725611686706543
    6. '(

' → logprob: -13.975611686706543
    7. '(a' → logprob: -14.100611686706543
    8. 'n' → logprob: -14.850611686706543
    9. ')' → logprob: -14.850611686706543
    10. ' ' → logprob: -15.225611686706543

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013078589923679829
    2. ')' → logprob: -4.638078689575195
    3. ' ):' → logprob: -5.763078689575195
    4. ':' → logprob: -9.638078689575195
    5. ' )' → logprob: -10.138078689575195
    6. '   ' → logprob: -10.388078689575195
    7. '):
' → logprob: -11.138078689575195
    8. '+' → logprob: -11.513078689575195
    9. ' ' → logprob: -12.013078689575195
    10. ',' → logprob: -12.263078689575195

Token 36: '       ' (ID: 309)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.8455582857131958
    2. '       ' → logprob: -1.2205582857131958
    3. 'he' → logprob: -1.9705582857131958
    4. ' ' → logprob: -2.9705581665039062
    5. '    ' → logprob: -3.0955581665039062
    6. '   ' → logprob: -3.4705581665039062
    7. '        ' → logprob: -6.220558166503906
    8. '_he' → logprob: -6.345558166503906
    9. ' 
' → logprob: -6.970558166503906
    10. '        
' → logprob: -7.095558166503906

Token 37: ' push' (ID: 9349)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.019229872152209282
    2. 'he' → logprob: -4.144229888916016
    3. '    ' → logprob: -6.519229888916016
    4. ' ' → logprob: -6.894229888916016
    5. '        ' → logprob: -8.769229888916016
    6. '_he' → logprob: -8.769229888916016
    7. '       ' → logprob: -8.894229888916016
    8. '   ' → logprob: -9.019229888916016
    9. ' h' → logprob: -10.144229888916016
    10. ' ' → logprob: -10.394229888916016

Token 38: '_to' (ID: 5089)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03591052070260048
    2. '(' → logprob: -3.5359106063842773
    3. ')' → logprob: -5.285910606384277
    4. ' (' → logprob: -7.535910606384277
    5. '(heap' → logprob: -8.035910606384277
    6. 'he' → logprob: -9.410910606384277
    7. ')(' → logprob: -10.410910606384277
    8. '/he' → logprob: -10.660910606384277
    9. '   ' → logprob: -11.160910606384277
    10. ' )' → logprob: -11.285910606384277

Token 39: '_heap' (ID: 88741)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06303904205560684
    2. 'heap' → logprob: -3.8130390644073486
    3. 'he' → logprob: -4.5630388259887695
    4. '(h' → logprob: -4.6880388259887695
    5. '_heap' → logprob: -5.0630388259887695
    6. ' h' → logprob: -5.4380388259887695
    7. 'p' → logprob: -6.0630388259887695
    8. 's' → logprob: -6.1880388259887695
    9. ' heap' → logprob: -6.9380388259887695
    10. ' ' → logprob: -6.9380388259887695

Token 40: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0014191613299772143
    2. '(' → logprob: -6.6264190673828125
    3. ' (' → logprob: -9.376419067382812
    4. ')' → logprob: -12.001419067382812
    5. '(heap' → logprob: -14.001419067382812
    6. ')(' → logprob: -14.751419067382812
    7. 's' → logprob: -15.001419067382812
    8. '(a' → logprob: -15.751419067382812
    9. '(H' → logprob: -16.126419067382812
    10. '(
' → logprob: -16.251419067382812

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013417120499070734
    2. ',a' → logprob: -9.000134468078613
    3. ' ,' → logprob: -12.000134468078613
    4. ')' → logprob: -13.625134468078613
    5. '(' → logprob: -13.750134468078613
    6. 'a' → logprob: -14.125134468078613
    7. '(a' → logprob: -15.125134468078613
    8. ',h' → logprob: -15.625134468078613
    9. '```' → logprob: -15.875134468078613
    10. '`,' → logprob: -16.000133514404297

Token 42: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759727358818054
    2. 'a' → logprob: -0.8259727358818054
    3. ')a' → logprob: -11.575972557067871
    4. ' ' → logprob: -11.700972557067871
    5. '<|end|>' → logprob: -11.950972557067871
    6. 'i' → logprob: -13.200972557067871
    7. ')' → logprob: -13.450972557067871
    8. '_a' → logprob: -13.575972557067871
    9. ' ' → logprob: -13.950972557067871
    10. '	a' → logprob: -14.075972557067871

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00015455135144293308
    2. '[i' → logprob: -9.000154495239258
    3. ')' → logprob: -10.875154495239258
    4. '[' → logprob: -13.125154495239258
    5. '_' → logprob: -13.750154495239258
    6. 'list' → logprob: -13.875154495239258
    7. ',' → logprob: -14.000154495239258
    8. ')_' → logprob: -14.375154495239258
    9. '```' → logprob: -14.500154495239258
    10. 'l' → logprob: -14.750154495239258

Token 44: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03041422925889492
    2. '[' → logprob: -3.530414342880249
    3. ',' → logprob: -7.78041410446167
    4. ')' → logprob: -9.030414581298828
    5. '[
' → logprob: -9.280414581298828
    6. ' [' → logprob: -11.780414581298828
    7. ',i' → logprob: -12.030414581298828
    8. '[j' → logprob: -12.530414581298828
    9. '```' → logprob: -12.905414581298828
    10. ' ' → logprob: -13.030414581298828

Token 45: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34903231263160706
    2. ' i' → logprob: -1.2240322828292847
    3. ')' → logprob: -7.599032402038574
    4. ' )' → logprob: -10.099032402038574
    5. ')i' → logprob: -10.724032402038574
    6. '[i' → logprob: -11.724032402038574
    7. 'a' → logprob: -12.599032402038574
    8. ' ' → logprob: -12.724032402038574
    9. '    ' → logprob: -13.224032402038574
    10. '(i' → logprob: -13.849032402038574

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ' )' → logprob: -10.500036239624023
    3. ')
' → logprob: -12.375036239624023
    4. '   ' → logprob: -13.000036239624023
    5. ',' → logprob: -14.000036239624023
    6. '))' → logprob: -15.000036239624023
    7. '),' → logprob: -15.750036239624023
    8. ' ' → logprob: -15.750036239624023
    9. '       ' → logprob: -16.250036239624023
    10. ')i' → logprob: -16.375036239624023

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5949177742004395
    2. ')' → logprob: -1.7199177742004395
    3. '   ' → logprob: -1.7199177742004395
    4. '(' → logprob: -4.0949177742004395
    5. '    
' → logprob: -4.0949177742004395
    6. '\' → logprob: -4.4699177742004395
    7. '<|end|>' → logprob: -4.8449177742004395
    8. '\n' → logprob: -4.9699177742004395
    9. 'def' → logprob: -5.3449177742004395
    10. ' ' → logprob: -5.4699177742004395

Token 48: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031226864084601402
    2. 'def' → logprob: -4.781226634979248
    3. '   ' → logprob: -4.906226634979248
    4. '\n' → logprob: -5.531226634979248
    5. '<|end|>' → logprob: -6.031226634979248
    6. '    
' → logprob: -6.156226634979248
    7. '  
' → logprob: -6.781226634979248
    8. '\' → logprob: -6.906226634979248
    9. '' → logprob: -7.156226634979248
    10. ' 
' → logprob: -7.281226634979248

Token 49: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.018159780651330948
    2. 'h' → logprob: -4.018159866333008
    3. '(h' → logprob: -12.518159866333008
    4. '	h' → logprob: -13.143159866333008
    5. ' ' → logprob: -13.393159866333008
    6. ' ' → logprob: -14.268159866333008
    7. '[h' → logprob: -14.518159866333008
    8. '_h' → logprob: -14.768159866333008
    9. ' (' → logprob: -15.143159866333008
    10. 's' → logprob: -15.893159866333008

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008654281497001648
    2. 'def' → logprob: -5.3836541175842285
    3. '<|end|>' → logprob: -6.1336541175842285
    4. '

' → logprob: -6.6336541175842285
    5. '
' → logprob: -9.258654594421387
    6. ' 
' → logprob: -9.758654594421387
    7. '' → logprob: -9.883654594421387
    8. '[' → logprob: -9.883654594421387
    9. '```' → logprob: -9.883654594421387
    10. '  
' → logprob: -10.383654594421387

Token 51: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04416096583008766
    2. 'def' → logprob: -3.169161081314087
    3. '

' → logprob: -7.044160842895508
    4. '```' → logprob: -9.919160842895508
    5. '
' → logprob: -10.044160842895508
    6. ' 
' → logprob: -10.294160842895508
    7. ' def' → logprob: -10.294160842895508
    8. '  
' → logprob: -10.794160842895508
    9. '\' → logprob: -10.794160842895508
    10. '' → logprob: -10.919160842895508

Token 52: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.026807136833667755
    2. '_' → logprob: -4.4018073081970215
    3. '_push' → logprob: -4.6518073081970215
    4. ' ' → logprob: -5.5268073081970215
    5. ' ' → logprob: -8.526806831359863
    6. ' def' → logprob: -8.901806831359863
    7. 'push' → logprob: -10.026806831359863
    8. '(push' → logprob: -10.276806831359863
    9. ' space' → logprob: -10.776806831359863
    10. '	push' → logprob: -10.776806831359863

Token 53: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.511406809295295e-06
    2. '_' → logprob: -12.250006675720215
    3. '_t' → logprob: -14.125006675720215
    4. '_from' → logprob: -15.125006675720215
    5. ')_' → logprob: -15.750006675720215
    6. '##_' → logprob: -16.1250057220459
    7. '_into' → logprob: -16.6250057220459
    8. '(' → logprob: -16.7500057220459
    9. '_he' → logprob: -16.7500057220459
    10. '_To' → logprob: -17.0000057220459

Token 54: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.0004158953088335693
    2. '_he' → logprob: -8.125415802001953
    3. '_' → logprob: -9.125415802001953
    4. 'heap' → logprob: -12.375415802001953
    5. '_h' → logprob: -13.000415802001953
    6. '_stack' → logprob: -13.750415802001953
    7. '```' → logprob: -14.250415802001953
    8. '(heap' → logprob: -14.250415802001953
    9. ')_' → logprob: -14.750415802001953
    10. '_hp' → logprob: -15.250415802001953

Token 55: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0053060962818562984
    2. '(' → logprob: -5.255306243896484
    3. '(heap' → logprob: -9.630306243896484
    4. ' (' → logprob: -12.005306243896484
    5. '(a' → logprob: -15.755306243896484
    6. '(ht' → logprob: -16.005306243896484
    7. '(
' → logprob: -16.880306243896484
    8. '(H' → logprob: -17.005306243896484
    9. '(s' → logprob: -17.130306243896484
    10. '(n' → logprob: -17.880306243896484

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -10.000052452087402
    3. ',h' → logprob: -12.000052452087402
    4. ',a' → logprob: -16.125051498413086
    5. ')' → logprob: -16.375051498413086
    6. ',p' → logprob: -17.375051498413086
    7. '   ' → logprob: -17.750051498413086
    8. '),' → logprob: -17.750051498413086
    9. ' h' → logprob: -18.250051498413086
    10. ',n' → logprob: -18.250051498413086

Token 57: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6939004063606262
    2. ' a' → logprob: -0.6939004063606262
    3. 'h' → logprob: -9.193900108337402
    4. ' h' → logprob: -9.193900108337402
    5. ' lst' → logprob: -9.318900108337402
    6. 'arr' → logprob: -9.693900108337402
    7. 'lst' → logprob: -9.943900108337402
    8. '   ' → logprob: -10.318900108337402
    9. ' arr' → logprob: -10.381400108337402
    10. ')' → logprob: -10.443900108337402

Token 58: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0024208449758589268
    2. ',' → logprob: -6.252420902252197
    3. ')' → logprob: -8.877420425415039
    4. '_' → logprob: -9.127420425415039
    5. 'list' → logprob: -9.252420425415039
    6. ' ,' → logprob: -10.377420425415039
    7. '_,' → logprob: -11.127420425415039
    8. 'List' → logprob: -11.252420425415039
    9. ' ' → logprob: -11.252420425415039
    10. ',_' → logprob: -11.377420425415039

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',i' → logprob: -13.625041961669922
    4. '   ' → logprob: -15.125041961669922
    5. ',index' → logprob: -17.125041961669922
    6. '[i' → logprob: -17.500041961669922
    7. ',int' → logprob: -18.125041961669922
    8. ',n' → logprob: -18.125041961669922
    9. '‌,' → logprob: -18.250041961669922
    10. ',a' → logprob: -19.000041961669922

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9558361172676086
    2. ' i' → logprob: -0.9558361172676086
    3. ' idx' → logprob: -2.455836057662964
    4. ' index' → logprob: -2.705836057662964
    5. 'index' → logprob: -3.205836057662964
    6. 'idx' → logprob: -3.330836057662964
    7. '   ' → logprob: -7.580836296081543
    8. 'pos' → logprob: -7.955836296081543
    9. 'k' → logprob: -8.080836296081543
    10. ' pos' → logprob: -8.705836296081543

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004989399458281696
    2. ')' → logprob: -8.62549877166748
    3. ' ):' → logprob: -8.75049877166748
    4. ',' → logprob: -8.87549877166748
    5. '):
' → logprob: -11.25049877166748
    6. '   ' → logprob: -11.87549877166748
    7. ':' → logprob: -15.37549877166748
    8. ' ' → logprob: -15.62549877166748
    9. ' )' → logprob: -16.250499725341797
    10. ')：' → logprob: -16.250499725341797

Token 62: '   ' (ID: 271)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5639923810958862
    2. '   ' → logprob: -1.0639923810958862
    3. 'he' → logprob: -2.938992500305176
    4. ' if' → logprob: -3.438992500305176
    5. ' heap' → logprob: -8.688992500305176
    6. '    ' → logprob: -8.938992500305176
    7. ' value' → logprob: -9.313992500305176
    8. 'if' → logprob: -9.563992500305176
    9. '```' → logprob: -9.688992500305176
    10. '  ' → logprob: -9.688992500305176

Token 63: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.12046480923891068
    2. 'he' (adapté à ' he') → logprob: -2.62046480178833
    3. ' if' → logprob: -3.87046480178833
    4. '   ' → logprob: -4.24546480178833
    5. ' value' → logprob: -6.12046480178833
    6. 'if' → logprob: -6.24546480178833
    7. 'value' → logprob: -7.49546480178833
    8. ' while' → logprob: -8.995465278625488
    9. ' item' → logprob: -9.120465278625488
    10. '```' → logprob: -9.495465278625488

Token 64: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0015035520773380995
    2. 'ap' → logprob: -6.5015034675598145
    3. ' app' → logprob: -14.751503944396973
    4. 'a' → logprob: -15.501503944396973
    5. 'push' → logprob: -15.626503944396973
    6. 'aps' → logprob: -15.876503944396973
    7. 'he' → logprob: -16.376502990722656
    8. '```' → logprob: -16.751502990722656
    9. 'ап' → logprob: -17.001502990722656
    10. '   ' → logprob: -17.501502990722656

Token 65: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.246537173457909e-06
    2. 'push' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.000003814697266
    4. 'us' → logprob: -15.500003814697266
    5. 'u' → logprob: -15.625003814697266
    6. '```' → logprob: -15.625003814697266
    7. ' ush' → logprob: -16.125003814697266
    8. 'sh' → logprob: -16.375003814697266
    9. '

' → logprob: -16.875003814697266
    10. 'USH' → logprob: -17.375003814697266

Token 66: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.008617172949016094
    2. '(' → logprob: -4.758617401123047
    3. '(heap' → logprob: -14.133617401123047
    4. '<|end|>' → logprob: -14.883617401123047
    5. '(i' → logprob: -15.383617401123047
    6. '(
' → logprob: -15.383617401123047
    7. ')' → logprob: -15.633617401123047
    8. '(H' → logprob: -15.758617401123047
    9. '(s' → logprob: -15.758617401123047
    10. '(ht' → logprob: -16.258617401123047

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8369768857955933
    2. '(' → logprob: -0.9619768857955933
    3. '(a' → logprob: -1.7119768857955933
    4. '(i' → logprob: -6.586977005004883
    5. ')' → logprob: -6.711977005004883
    6. ' ,' → logprob: -7.211977005004883
    7. ' (' → logprob: -7.711977005004883
    8. ',a' → logprob: -8.086977005004883
    9. '(
' → logprob: -8.836977005004883
    10. '(n' → logprob: -10.836977005004883

Token 68: ' (-' (ID: 21382)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14938971400260925
    2. ' a' → logprob: -2.1493897438049316
    3. '(a' → logprob: -4.149389743804932
    4. ' (' → logprob: -5.399389743804932
    5. '(' → logprob: -7.274389743804932
    6. ')' → logprob: -7.899389743804932
    7. 'i' → logprob: -8.024389266967773
    8. ')a' → logprob: -8.899389266967773
    9. '(i' → logprob: -9.024389266967773
    10. '-a' → logprob: -9.899389266967773

Token 69: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020413640595506877
    2. ' a' → logprob: -8.500204086303711
    3. ')a' → logprob: -15.750204086303711
    4. ')' → logprob: -16.00020408630371
    5. '   ' → logprob: -16.37520408630371
    6. 'i' → logprob: -16.75020408630371
    7. ' ' → logprob: -17.00020408630371
    8. 'np' → logprob: -17.25020408630371
    9. 'ai' → logprob: -17.31270408630371
    10. '1' → logprob: -17.37520408630371

Token 70: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2471589798224159e-05
    2. 'list' → logprob: -11.875012397766113
    3. 'List' → logprob: -14.250012397766113
    4. 's' → logprob: -14.625012397766113
    5. 'plist' → logprob: -14.625012397766113
    6. 'l' → logprob: -14.750012397766113
    7. '_lists' → logprob: -14.750012397766113
    8. '1' → logprob: -15.125012397766113
    9. 'olist' → logprob: -15.125012397766113
    10. 'ist' → logprob: -15.375012397766113

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005567280459217727
    2. '[' → logprob: -7.500556945800781
    3. ')' → logprob: -13.375556945800781
    4. '[
' → logprob: -14.625556945800781
    5. 'i' → logprob: -15.125556945800781
    6. '[I' → logprob: -15.125556945800781
    7. ' ' → logprob: -15.250556945800781
    8. '```' → logprob: -15.750556945800781
    9. ' [' → logprob: -15.875556945800781
    10. ')[' → logprob: -15.875556945800781

Token 72: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0017821642104536295
    2. ']' → logprob: -6.376781940460205
    3. '])' → logprob: -10.376782417297363
    4. '[i' → logprob: -11.376782417297363
    5. ']))' → logprob: -11.376782417297363
    6. '[' → logprob: -12.126782417297363
    7. '),' → logprob: -12.126782417297363
    8. ''],' → logprob: -12.501782417297363
    9. ',' → logprob: -12.876782417297363
    10. ' ],' → logprob: -13.001782417297363

Token 73: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1851537674665451
    2. ' i' → logprob: -1.8101537227630615
    3. 'a' → logprob: -5.435153961181641
    4. ' a' → logprob: -7.060153961181641
    5. ')' → logprob: -9.56015396118164
    6. '   ' → logprob: -10.06015396118164
    7. ' ' → logprob: -10.81015396118164
    8. '<|end|>' → logprob: -11.06015396118164
    9. ')i' → logprob: -12.43515396118164
    10. ' )' → logprob: -13.24765396118164

Token 74: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519603967666626
    2. ')' → logprob: -1.5019603967666626
    3. '))
' → logprob: -11.001960754394531
    4. ')
' → logprob: -11.751960754394531
    5. ')))' → logprob: -13.126960754394531
    6. ' ))' → logprob: -13.126960754394531
    7. ' )' → logprob: -13.626960754394531
    8. '),' → logprob: -14.251960754394531
    9. '))

' → logprob: -15.626960754394531
    10. '));' → logprob: -15.876960754394531

Token 75: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' initialize' (ID: 18400)
  Prédit: ' pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.01732793264091015
    2. 'pop' → logprob: -4.767327785491943
    3. ' def' → logprob: -5.017327785491943
    4. ' push' → logprob: -7.017327785491943
    5. ' create' → logprob: -7.892327785491943
    6. ' extract' → logprob: -8.642328262329102
    7. ' main' → logprob: -9.142328262329102
    8. ' get' → logprob: -9.142328262329102
    9. 'def' → logprob: -9.642328262329102
    10. ' pull' → logprob: -9.767328262329102

Token 77: '_dp' (ID: 133252)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.485277384519577
    2. '_' → logprob: -2.1102774143218994
    3. '_array' → logprob: -2.3602774143218994
    4. '(' → logprob: -2.9852774143218994
    5. '_weights' → logprob: -4.11027717590332
    6. '_data' → logprob: -4.36027717590332
    7. '(n' → logprob: -4.61027717590332
    8. '_a' → logprob: -4.61027717590332
    9. '_h' → logprob: -4.73527717590332
    10. '(a' → logprob: -4.98527717590332

Token 78: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49689003825187683
    2. '(n' → logprob: -0.9968900680541992
    3. '_' → logprob: -4.496890068054199
    4. '()' → logprob: -5.621890068054199
    5. '(h' → logprob: -5.996890068054199
    6. '():' → logprob: -6.746890068054199
    7. '(_' → logprob: -7.371890068054199
    8. '(a' → logprob: -7.371890068054199
    9. '_array' → logprob: -7.371890068054199
    10. '(size' → logprob: -7.996890068054199

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09350640326738358
    2. ',' → logprob: -2.468506336212158
    3. ')' → logprob: -5.468506336212158
    4. ' ):' → logprob: -8.343506813049316
    5. '):
' → logprob: -9.593506813049316
    6. ' ,' → logprob: -11.968506813049316
    7. ',n' → logprob: -11.968506813049316
    8. ':' → logprob: -12.718506813049316
    9. '=' → logprob: -12.718506813049316
    10. '   ' → logprob: -12.968506813049316

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09674917906522751
    2. ' dp' → logprob: -3.2217490673065186
    3. ' return' → logprob: -3.4717490673065186
    4. 'dp' → logprob: -4.346749305725098
    5. ' np' → logprob: -5.221749305725098
    6. 'return' → logprob: -6.721749305725098
    7. 'np' → logprob: -6.846749305725098
    8. ' ' → logprob: -8.846749305725098
    9. '```' → logprob: -8.971749305725098
    10. 'import' → logprob: -9.471749305725098

Token 81: ' dp' (ID: 21546)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.121324062347412
    2. ' return' → logprob: -1.246324062347412
    3. 'np' → logprob: -1.246324062347412
    4. ' np' → logprob: -2.496324062347412
    5. 'dp' (adapté à ' dp') → logprob: -4.496324062347412
    6. '   ' → logprob: -5.746324062347412
    7. '[np' → logprob: -6.996324062347412
    8. ' dp' → logprob: -7.246324062347412
    9. '[' → logprob: -8.49632453918457
    10. 'import' → logprob: -8.62132453918457

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018165161833167076
    2. '=' → logprob: -4.018165111541748
    3. '[' → logprob: -12.143165588378906
    4. ' ' → logprob: -12.143165588378906
    5. ')' → logprob: -13.768165588378906
    6. '<|end|>' → logprob: -14.143165588378906
    7. ' =[' → logprob: -14.268165588378906
    8. '=[]' → logprob: -14.893165588378906
    9. '[]' → logprob: -15.018165588378906
    10. ' =
' → logprob: -15.018165588378906

Token 83: ' get' (ID: 717)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.8284482359886169
    2. ' np' → logprob: -1.2034482955932617
    3. ' [' → logprob: -2.3284482955932617
    4. '[np' → logprob: -2.4534482955932617
    5. '[' → logprob: -2.8284482955932617
    6. '[[' → logprob: -4.578448295593262
    7. ' [[' → logprob: -5.203448295593262
    8. '[-' → logprob: -5.453448295593262
    9. ' [-' → logprob: -8.203448295593262
    10. '[n' → logprob: -9.453448295593262

Token 84: '_negative' (ID: 134489)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.07593332976102829
    2. '(np' → logprob: -4.575933456420898
    3. '_np' → logprob: -4.700933456420898
    4. '[np' → logprob: -5.075933456420898
    5. '[' → logprob: -5.200933456420898
    6. 'attr' → logprob: -5.575933456420898
    7. 'numpy' → logprob: -5.825933456420898
    8. ' np' → logprob: -5.825933456420898
    9. '[n' → logprob: -5.950933456420898
    10. '=np' → logprob: -6.075933456420898

Token 85: '_matrix' (ID: 23431)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03651055321097374
    2. '_inf' → logprob: -4.286510467529297
    3. 'a' → logprob: -5.286510467529297
    4. '1' → logprob: -5.411510467529297
    5. 'in' → logprob: -5.911510467529297
    6. '100' → logprob: -6.286510467529297
    7. 'array' → logprob: -6.786510467529297
    8. '(np' → logprob: -6.911510467529297
    9. '(n' → logprob: -7.036510467529297
    10. 'np' → logprob: -7.036510467529297

Token 86: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15248160064220428
    2. '(' → logprob: -2.9024815559387207
    3. '((' → logprob: -3.0274815559387207
    4. ' (' → logprob: -3.2774815559387207
    5. '(np' → logprob: -8.402482032775879
    6. '(s' → logprob: -10.152482032775879
    7. '<|end|>' → logprob: -10.652482032775879
    8. '([' → logprob: -10.777482032775879
    9. ' ((' → logprob: -11.402482032775879
    10. ')' → logprob: -11.902482032775879

Token 87: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027305353432893753
    2. ')' → logprob: -4.4023051261901855
    3. '(n' → logprob: -4.9023051261901855
    4. ',n' → logprob: -5.2773051261901855
    5. ' ,' → logprob: -6.2773051261901855
    6. '(' → logprob: -8.777305603027344
    7. ' (' → logprob: -10.152305603027344
    8. 'n' → logprob: -10.527305603027344
    9. ')n' → logprob: -11.152305603027344
    10. ' n' → logprob: -12.027305603027344

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13643001019954681
    2. '(n' → logprob: -2.761430025100708
    3. '(' → logprob: -3.636430025100708
    4. ' return' → logprob: -4.386429786682129
    5. 'return' → logprob: -4.386429786682129
    6. ' ' → logprob: -5.761429786682129
    7. ')' → logprob: -5.886429786682129
    8. '
' → logprob: -6.011429786682129
    9. 'n' → logprob: -7.011429786682129
    10. '    
' → logprob: -7.636429786682129

Token 89: ' set' (ID: 920)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6516057252883911
    2. 'return' → logprob: -1.4016057252883911
    3. ' return' → logprob: -1.5266057252883911
    4. 'n' → logprob: -5.776605606079102
    5. ' ' → logprob: -5.776605606079102
    6. '
' → logprob: -6.026605606079102
    7. 'dp' → logprob: -6.276605606079102
    8. '    
' → logprob: -7.401605606079102
    9. 'def' → logprob: -7.526605606079102
    10. ')' → logprob: -7.651605606079102

Token 90: '_dp' (ID: 133252)
  Prédit: '_di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_di' → logprob: -0.5510947704315186
    2. '_dp' → logprob: -1.3010947704315186
    3. '_diag' → logprob: -2.9260947704315186
    4. '(dp' → logprob: -3.6760947704315186
    5. '_identity' → logprob: -3.9260947704315186
    6. '_main' → logprob: -4.676095008850098
    7. '_base' → logprob: -5.051095008850098
    8. '_value' → logprob: -5.176095008850098
    9. 'dp' → logprob: -5.426095008850098
    10. '_' → logprob: -5.551095008850098

Token 91: '_start' (ID: 10949)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.15952739119529724
    2. '_' → logprob: -3.03452730178833
    3. '_base' → logprob: -3.78452730178833
    4. '(' → logprob: -3.78452730178833
    5. '_value' → logprob: -3.90952730178833
    6. '_to' → logprob: -4.90952730178833
    7. '0' → logprob: -5.53452730178833
    8. '_zero' → logprob: -5.65952730178833
    9. '_values' → logprob: -5.65952730178833
    10. '_start' → logprob: -6.03452730178833

Token 92: 'ing' (ID: 289)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.412850558757782
    2. '_value' → logprob: -1.5378506183624268
    3. '_values' → logprob: -2.6628506183624268
    4. 'ing' → logprob: -3.1628506183624268
    5. '_val' → logprob: -5.662850379943848
    6. '_state' → logprob: -6.787850379943848
    7. '_position' → logprob: -6.912850379943848
    8. '_point' → logprob: -7.412850379943848
    9. 'up' → logprob: -7.537850379943848
    10. 'value' → logprob: -7.662850379943848

Token 93: '_point' (ID: 15466)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3634127080440521
    2. '_value' → logprob: -1.9884127378463745
    3. '_points' → logprob: -2.738412618637085
    4. '_point' → logprob: -2.988412618637085
    5. '(dp' → logprob: -3.238412618637085
    6. '_positions' → logprob: -5.488412857055664
    7. '_state' → logprob: -5.988412857055664
    8. '_conditions' → logprob: -6.363412857055664
    9. '_states' → logprob: -6.988412857055664
    10. '_indices' → logprob: -7.113412857055664

Token 94: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006226073601283133
    2. 's' → logprob: -7.625622749328613
    3. '(' → logprob: -9.000622749328613
    4. 'dp' → logprob: -12.250622749328613
    5. 'ing' → logprob: -13.625622749328613
    6. '(n' → logprob: -14.125622749328613
    7. ' (' → logprob: -14.125622749328613
    8. '_dp' → logprob: -14.375622749328613
    9. '_(' → logprob: -14.625622749328613
    10. '(s' → logprob: -15.250622749328613

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5714232921600342
    2. '(n' → logprob: -0.9464232921600342
    3. '(' → logprob: -3.696423292160034
    4. ',' → logprob: -4.071423530578613
    5. '(dp' → logprob: -5.446423530578613
    6. ',n' → logprob: -8.571423530578613
    7. ' (' → logprob: -8.571423530578613
    8. ' )' → logprob: -8.696423530578613
    9. ')(' → logprob: -8.821423530578613
    10. '()' → logprob: -9.196423530578613

Token 96: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5463423132896423
    2. '
' → logprob: -1.296342372894287
    3. '<|end|>' → logprob: -2.921342372894287
    4. '\' → logprob: -3.671342372894287
    5. '   ' → logprob: -3.921342372894287
    6. '    
' → logprob: -4.296342372894287
    7. '(' → logprob: -4.921342372894287
    8. '\n' → logprob: -4.921342372894287
    9. '

' → logprob: -5.921342372894287
    10. 'return' → logprob: -6.046342372894287

Token 97: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6010950803756714
    2. '   ' → logprob: -0.8510950803756714
    3. ' return' → logprob: -3.726095199584961
    4. 'def' → logprob: -7.226095199584961
    5. '	return' → logprob: -11.476095199584961
    6. '<|end|>' → logprob: -11.851095199584961
    7. ' ' → logprob: -12.601095199584961
    8. '```' → logprob: -13.601095199584961
    9. '  ' → logprob: -13.851095199584961
    10. '{return' → logprob: -14.101095199584961

Token 98: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3868890106678009
    2. 'dp' → logprob: -1.1368889808654785
    3. '(dp' → logprob: -11.136889457702637
    4. '	dp' → logprob: -12.636889457702637
    5. '_dp' → logprob: -15.886889457702637
    6. '.dp' → logprob: -19.51188850402832
    7. ' ' → logprob: -20.63688850402832
    8. 'd' → logprob: -20.76188850402832
    9. 'Dp' → logprob: -21.26188850402832
    10. ' ' → logprob: -21.38688850402832

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31234097480773926
    2. 'def' → logprob: -2.1873409748077393
    3. '

' → logprob: -2.3123409748077393
    4. '<|end|>' → logprob: -2.9373409748077393
    5. ' def' → logprob: -6.81234073638916
    6. '```' → logprob: -7.06234073638916
    7. '<|end|>' → logprob: -7.56234073638916
    8. '\' → logprob: -7.81234073638916
    9. '(' → logprob: -8.43734073638916
    10. '(
' → logprob: -9.06234073638916

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031490255147218704
    2. '
' → logprob: -3.5314903259277344
    3. '

' → logprob: -6.781490325927734
    4. '<|end|>' → logprob: -8.281490325927734
    5. '```' → logprob: -8.656490325927734
    6. '\' → logprob: -9.781490325927734
    7. ' def' → logprob: -10.531490325927734
    8. '[
' → logprob: -11.156490325927734
    9. '[' → logprob: -11.156490325927734
    10. 'ndef' → logprob: -11.281490325927734

Token 101: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.024659037590026855
    2. ' initialize' → logprob: -4.399659156799316
    3. ' set' → logprob: -5.149659156799316
    4. 'get' → logprob: -5.649659156799316
    5. ' calculate' → logprob: -7.399659156799316
    6. '_get' → logprob: -7.649659156799316
    7. ' create' → logprob: -8.149659156799316
    8. ' compute' → logprob: -8.399659156799316
    9. ' update' → logprob: -8.774659156799316
    10. ' max' → logprob: -8.899659156799316

Token 102: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -1.981667537620524e-06
    2. '-negative' → logprob: -13.875001907348633
    3. '_neg' → logprob: -14.750001907348633
    4. ' negative' → logprob: -15.500001907348633
    5. '_positive' → logprob: -15.500001907348633
    6. 'negative' → logprob: -16.125001907348633
    7. '_-' → logprob: -16.625001907348633
    8. '_' → logprob: -18.250001907348633
    9. 'Negative' → logprob: -18.375001907348633
    10. '_numpy' → logprob: -19.000001907348633

Token 103: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00013917774776928127
    2. '_' → logprob: -9.500139236450195
    3. '_numpy' → logprob: -10.500139236450195
    4. '_array' → logprob: -10.625139236450195
    5. ' _' → logprob: -12.375139236450195
    6. '_max' → logprob: -13.375139236450195
    7. '_m' → logprob: -13.375139236450195
    8. '_mat' → logprob: -13.750139236450195
    9. '_np' → logprob: -14.000139236450195
    10. '_vector' → logprob: -14.500139236450195

Token 104: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002170839812606573
    2. '(' → logprob: -6.502171039581299
    3. ' (' → logprob: -7.377171039581299
    4. '<|end|>' → logprob: -10.25217056274414
    5. '(size' → logprob: -12.50217056274414
    6. '(
' → logprob: -13.62717056274414
    7. '(N' → logprob: -14.87717056274414
    8. '(num' → logprob: -15.00217056274414
    9. '<|end|>' → logprob: -15.25217056274414
    10. 'n' → logprob: -15.25217056274414

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004196998197585344
    2. '):
' → logprob: -5.504197120666504
    3. ' ):' → logprob: -10.004197120666504
    4. ')' → logprob: -10.129197120666504
    5. '(n' → logprob: -10.629197120666504
    6. ':' → logprob: -12.629197120666504
    7. '):
' → logprob: -13.004197120666504
    8. '):

' → logprob: -13.879197120666504
    9. ',' → logprob: -14.129197120666504
    10. '():' → logprob: -15.004197120666504

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1675411462783813
    2. ' -' → logprob: -1.5425411462783813
    3. ' np' → logprob: -2.042541027069092
    4. 'np' → logprob: -2.042541027069092
    5. '-n' → logprob: -2.167541027069092
    6. '-' → logprob: -2.542541027069092
    7. ' return' → logprob: -4.167541027069092
    8. '-return' → logprob: -6.042541027069092
    9. 'return' → logprob: -6.417541027069092
    10. '(np' → logprob: -7.042541027069092

Token 107: ' #' (ID: 1069)
  Prédit: '-n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.890677273273468
    2. ' -' → logprob: -1.2656772136688232
    3. '-' → logprob: -1.5156772136688232
    4. 'np' → logprob: -3.0156772136688232
    5. '-return' → logprob: -3.8906772136688232
    6. ' np' → logprob: -4.515677452087402
    7. ' return' → logprob: -5.640677452087402
    8. 'return' → logprob: -6.140677452087402
    9. '   ' → logprob: -7.265677452087402
    10. '-m' → logprob: -8.015677452087402

Token 108: ' np' (ID: 5374)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02102118730545044
    2. 'return' → logprob: -3.8960211277008057
    3. ' np' → logprob: -8.146020889282227
    4. '   ' → logprob: -8.771020889282227
    5. 'np' → logprob: -11.271020889282227
    6. 'import' → logprob: -11.646020889282227
    7. ' import' → logprob: -11.896020889282227
    8. ' matrix' → logprob: -12.396020889282227
    9. ' ' → logprob: -14.896020889282227
    10. ' n' → logprob: -15.271020889282227

Token 109: '.int' (ID: 21499)
  Prédit: '.zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.451679527759552
    2. '.' → logprob: -1.9516794681549072
    3. ' return' → logprob: -2.7016794681549072
    4. '-' → logprob: -2.9516794681549072
    5. ' -' → logprob: -3.3266794681549072
    6. '.full' → logprob: -3.7016794681549072
    7. 'return' → logprob: -4.201679706573486
    8. '.ones' → logprob: -5.076679706573486
    9. '.eye' → logprob: -5.451679706573486
    10. ' full' → logprob: -5.826679706573486

Token 110: ' is' (ID: 382)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.31981801986694336
    2. '64' → logprob: -1.3198180198669434
    3. '_' → logprob: -5.194818019866943
    4. 'er' → logprob: -8.319818496704102
    5. '6' → logprob: -8.444818496704102
    6. 'p' → logprob: -9.194818496704102
    7. 'e' → logprob: -9.944818496704102
    8. '8' → logprob: -10.069818496704102
    9. 'ean' → logprob: -10.069818496704102
    10. '3' → logprob: -10.194818496704102

Token 111: ' deprecated' (ID: 66913)
  Prédit: ' deprecated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deprecated' → logprob: -0.4289413094520569
    2. 'deprecated' → logprob: -1.053941249847412
    3. 'de' → logprob: -9.30394172668457
    4. 'np' → logprob: -10.05394172668457
    5. ' ' → logprob: -10.17894172668457
    6. ' np' → logprob: -10.92894172668457
    7. ' Deprecated' → logprob: -11.67894172668457
    8. 'Deprecated' → logprob: -11.67894172668457
    9. ' a' → logprob: -11.80394172668457
    10. ' de' → logprob: -12.55394172668457

Token 112: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.393336534500122
    2. 'int' → logprob: -1.893336534500122
    3. 'np' → logprob: -2.018336534500122
    4. '=int' → logprob: -2.518336534500122
    5. ' np' → logprob: -2.518336534500122
    6. '[int' → logprob: -2.518336534500122
    7. '(np' → logprob: -2.893336534500122
    8. ',' → logprob: -3.143336534500122
    9. '=np' → logprob: -3.268336534500122
    10. ' ' → logprob: -4.018336296081543

Token 113: ' preserved' (ID: 59936)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.7221009731292725
    2. ' np' → logprob: -0.8471009731292725
    3. ' still' → logprob: -3.2221009731292725
    4. 'int' → logprob: -3.8471009731292725
    5. ' numpy' → logprob: -4.972101211547852
    6. ' use' → logprob: -5.597101211547852
    7. 'numpy' → logprob: -6.222101211547852
    8. '=np' → logprob: -6.472101211547852
    9. ' used' → logprob: -6.472101211547852
    10. ' int' → logprob: -7.222101211547852

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4917652904987335
    2. 'np' → logprob: -1.7417652606964111
    3. 'for' → logprob: -1.9917652606964111
    4. ' as' → logprob: -3.616765260696411
    5. '   ' → logprob: -3.991765260696411
    6. ',' → logprob: -5.11676549911499
    7. 'as' → logprob: -5.11676549911499
    8. ' np' → logprob: -5.11676549911499
    9. ' in' → logprob: -5.24176549911499
    10. '=np' → logprob: -5.49176549911499

Token 115: ' similarity' (ID: 75539)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.6510736346244812
    2. 'compat' → logprob: -1.526073694229126
    3. 'now' → logprob: -1.651073694229126
    4. ' backward' → logprob: -3.151073694229126
    5. ' now' → logprob: -4.526073455810547
    6. 'np' → logprob: -5.026073455810547
    7. ' backwards' → logprob: -5.026073455810547
    8. ' compatibility' → logprob: -6.526073455810547
    9. '#' → logprob: -8.901073455810547
    10. 'numpy' → logprob: -9.026073455810547

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.269457221031189
    2. 'np' → logprob: -1.769457221031189
    3. ' np' → logprob: -1.769457221031189
    4. '=np' → logprob: -2.2694573402404785
    5. 'return' → logprob: -3.0194573402404785
    6. 'import' → logprob: -3.3944573402404785
    7. '=' → logprob: -3.6444573402404785
    8. ',' → logprob: -3.7694573402404785
    9. ' return' → logprob: -3.8944573402404785
    10. 'int' → logprob: -3.8944573402404785

Token 117: '   ' (ID: 271)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.6564022302627563
    2. ' return' → logprob: -1.6564022302627563
    3. 'np' → logprob: -2.781402111053467
    4. '=np' → logprob: -2.781402111053467
    5. ' =' → logprob: -3.531402111053467
    6. '(np' → logprob: -3.656402111053467
    7. '   ' → logprob: -4.156402111053467
    8. 'return' → logprob: -4.406402111053467
    9. ' n' → logprob: -4.406402111053467
    10. 'n' → logprob: -4.531402111053467

Token 118: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37601375579833984
    2. 'return' (adapté à ' return') → logprob: -1.3760137557983398
    3. '   ' → logprob: -3.37601375579834
    4. ' np' → logprob: -4.00101375579834
    5. 'np' → logprob: -5.50101375579834
    6. 'import' → logprob: -6.12601375579834
    7. ' n' → logprob: -7.37601375579834
    8. ')' → logprob: -7.75101375579834
    9. 'n' → logprob: -8.37601375579834
    10. ',' → logprob: -9.50101375579834

Token 119: ' (-' (ID: 21382)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.28455862402915955
    2. 'np' → logprob: -1.409558653831482
    3. ' -' → logprob: -5.9095587730407715
    4. '-' → logprob: -7.9095587730407715
    5. '-n' → logprob: -8.909558296203613
    6. ' ' → logprob: -9.534558296203613
    7. '(np' → logprob: -10.034558296203613
    8. '   ' → logprob: -10.159558296203613
    9. '  ' → logprob: -10.909558296203613
    10. '=np' → logprob: -13.409558296203613

Token 120: '10' (ID: 702)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.03838616609573364
    2. ' np' → logprob: -3.288386106491089
    3. '1' → logprob: -8.038386344909668
    4. '(np' → logprob: -12.038386344909668
    5. 'numpy' → logprob: -12.163386344909668
    6. ')' → logprob: -12.788386344909668
    7. ' ' → logprob: -12.913386344909668
    8. '   ' → logprob: -13.413386344909668
    9. '```' → logprob: -14.538386344909668
    10. '

' → logprob: -14.788386344909668

Token 121: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45444369316101074
    2. '**' → logprob: -1.5794436931610107
    3. '*np' → logprob: -2.0794436931610107
    4. ' **' → logprob: -3.9544436931610107
    5. ' *' → logprob: -4.82944393157959
    6. '*' → logprob: -6.70444393157959
    7. ')' → logprob: -6.82944393157959
    8. 'np' → logprob: -6.82944393157959
    9. ' np' → logprob: -6.95444393157959
    10. '00' → logprob: -7.07944393157959

Token 122: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.028305571526288986
    2. '6' → logprob: -3.9033055305480957
    3. '8' → logprob: -5.903305530548096
    4. '7' → logprob: -6.278305530548096
    5. '10' → logprob: -6.653305530548096
    6. ' ' → logprob: -6.778305530548096
    7. '5' → logprob: -7.528305530548096
    8. '4' → logprob: -10.028306007385254
    9. '   ' → logprob: -10.778306007385254
    10. '15' → logprob: -10.778306007385254

Token 123: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12195304036140442
    2. '6' → logprob: -2.371953010559082
    3. '7' → logprob: -4.996953010559082
    4. '8' → logprob: -4.996953010559082
    5. '5' → logprob: -5.371953010559082
    6. '10' → logprob: -5.871953010559082
    7. '4' → logprob: -8.121953010559082
    8. '15' → logprob: -9.746953010559082
    9. '12' → logprob: -9.871953010559082
    10. '18' → logprob: -10.496953010559082

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37864571809768677
    2. ' *' → logprob: -1.503645658493042
    3. '*np' → logprob: -3.003645658493042
    4. '*' → logprob: -4.128645896911621
    5. ' )' → logprob: -4.253645896911621
    6. ')*' → logprob: -4.628645896911621
    7. ',' → logprob: -6.253645896911621
    8. 'np' → logprob: -7.753645896911621
    9. '*)' → logprob: -8.753645896911621
    10. ' np' → logprob: -8.878645896911621

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2345362901687622
    2. '*np' → logprob: -1.7345362901687622
    3. '*' → logprob: -4.109536170959473
    4. ',' → logprob: -4.484536170959473
    5. 'np' → logprob: -6.234536170959473
    6. 'import' → logprob: -6.984536170959473
    7. ')' → logprob: -7.359536170959473
    8. ' np' → logprob: -7.734536170959473
    9. ',np' → logprob: -8.609536170959473
    10. '(np' → logprob: -8.859536170959473

Token 126: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.2014218121767044
    2. 'np' → logprob: -1.701421856880188
    3. ' ' → logprob: -12.451421737670898
    4. '(np' → logprob: -12.826421737670898
    5. '*np' → logprob: -14.701421737670898
    6. '   ' → logprob: -15.076421737670898
    7. ' ones' → logprob: -15.076421737670898
    8. ' ' → logprob: -15.201421737670898
    9. '  ' → logprob: -15.826421737670898
    10. '1' → logprob: -16.0764217376709

Token 127: '.ones' (ID: 73952)
  Prédit: '.ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ones' → logprob: -0.13493016362190247
    2. '.ndarray' → logprob: -2.75993013381958
    3. 'int' → logprob: -3.50993013381958
    4. '.' → logprob: -4.50993013381958
    5. '.int' → logprob: -4.75993013381958
    6. '.full' → logprob: -5.00993013381958
    7. ' .' → logprob: -6.25993013381958
    8. '.arange' → logprob: -7.13493013381958
    9. '.astype' → logprob: -7.50993013381958
    10. '<int' → logprob: -7.63493013381958

Token 128: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00017529279284644872
    2. '(' → logprob: -9.000175476074219
    3. '(n' → logprob: -9.875175476074219
    4. '(shape' → logprob: -16.00017547607422
    5. '(
' → logprob: -16.12517547607422
    6. ' ((' → logprob: -17.12517547607422
    7. '<|end|>' → logprob: -17.12517547607422
    8. ' ' → logprob: -17.25017547607422
    9. ',' → logprob: -17.75017547607422
    10. ' (' → logprob: -18.25017547607422

Token 129: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018208740220870823
    2. ' n' → logprob: -8.625182151794434
    3. ')n' → logprob: -13.875182151794434
    4. '   ' → logprob: -14.500182151794434
    5. '(n' → logprob: -14.625182151794434
    6. ')' → logprob: -16.000181198120117
    7. '	n' → logprob: -16.375181198120117
    8. '
' → logprob: -16.500181198120117
    9. ' ' → logprob: -16.625181198120117
    10. '<|end|>' → logprob: -17.125181198120117

Token 130: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019042472122237086
    2. ',n' → logprob: -6.376904010772705
    3. ' ,' → logprob: -8.626904487609863
    4. ')' → logprob: -12.001904487609863
    5. ',
' → logprob: -12.001904487609863
    6. 'n' → logprob: -12.501904487609863
    7. '<|end|>' → logprob: -12.626904487609863
    8. ' n' → logprob: -14.501904487609863
    9. '<|end|>' → logprob: -14.626904487609863
    10. ' ' → logprob: -14.751904487609863

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008880576118826866
    2. ' ' → logprob: -4.758880615234375
    3. '2' → logprob: -8.758880615234375
    4. '   ' → logprob: -9.258880615234375
    5. '
' → logprob: -11.758880615234375
    6. ' n' → logprob: -13.258880615234375
    7. '  ' → logprob: -13.508880615234375
    8. 'n' → logprob: -14.508880615234375
    9. '10' → logprob: -14.633880615234375
    10. ',' → logprob: -14.758880615234375

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001723607536405325
    2. '2' → logprob: -6.626723766326904
    3. ' ' → logprob: -8.001723289489746
    4. '   ' → logprob: -11.001723289489746
    5. '3' → logprob: -11.126723289489746
    6. '10' → logprob: -11.501723289489746
    7. '5' → logprob: -11.876723289489746
    8. 'n' → logprob: -12.251723289489746
    9. '  ' → logprob: -12.751723289489746
    10. '4' → logprob: -13.501723289489746

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002165486803278327
    2. ',n' → logprob: -6.2521653175354
    3. ' ,' → logprob: -8.377165794372559
    4. '),' → logprob: -13.377165794372559
    5. ')' → logprob: -13.377165794372559
    6. ',
' → logprob: -13.752165794372559
    7. ',)' → logprob: -13.877165794372559
    8. ',),' → logprob: -14.752165794372559
    9. '<|end|>' → logprob: -14.752165794372559
    10. ')n' → logprob: -15.877165794372559

Token 134: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5234033465385437
    2. 'n' → logprob: -0.8984033465385437
    3. ' ' → logprob: -9.02340316772461
    4. '2' → logprob: -9.39840316772461
    5. '   ' → logprob: -10.39840316772461
    6. '
' → logprob: -12.14840316772461
    7. ')n' → logprob: -12.27340316772461
    8. '    ' → logprob: -12.46090316772461
    9. ')' → logprob: -12.52340316772461
    10. '10' → logprob: -12.96090316772461

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001979668391868472
    2. ' +' → logprob: -6.251979827880859
    3. '),' → logprob: -10.25197982788086
    4. '))' → logprob: -11.75197982788086
    5. ',' → logprob: -13.25197982788086
    6. '1' → logprob: -13.37697982788086
    7. ')' → logprob: -13.50197982788086
    8. '+
' → logprob: -13.50197982788086
    9. '   ' → logprob: -14.75197982788086
    10. ')),' → logprob: -15.00197982788086

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015056940028443933
    2. ' ' → logprob: -6.5015058517456055
    3. '0' → logprob: -14.251505851745605
    4. ')' → logprob: -14.251505851745605
    5. '2' → logprob: -14.251505851745605
    6. '   ' → logprob: -14.814005851745605
    7. '  ' → logprob: -15.189005851745605
    8. '```' → logprob: -15.751505851745605
    9. '

' → logprob: -15.814005851745605
    10. '
' → logprob: -15.814005851745605

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018268341955263168
    2. ' ' → logprob: -8.62518310546875
    3. '2' → logprob: -13.25018310546875
    4. ')' → logprob: -15.06268310546875
    5. '   ' → logprob: -15.18768310546875
    6. '```' → logprob: -15.50018310546875
    7. '  ' → logprob: -15.75018310546875
    8. '

' → logprob: -16.25018310546875
    9. '
' → logprob: -16.62518310546875
    10. '１' → logprob: -17.06268310546875

Token 138: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.011648119427263737
    2. '))' → logprob: -4.511648178100586
    3. ' ),' → logprob: -7.636648178100586
    4. ')' → logprob: -9.386648178100586
    5. ',' → logprob: -10.886648178100586
    6. ' ))' → logprob: -11.511648178100586
    7. ',),' → logprob: -13.261648178100586
    8. '),
' → logprob: -14.136648178100586
    9. ')))' → logprob: -14.636648178100586
    10. ' ,' → logprob: -14.886648178100586

Token 139: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.03811802715063095
    2. ' dtype' → logprob: -3.2881181240081787
    3. 'np' → logprob: -10.163118362426758
    4. ')' → logprob: -10.913118362426758
    5. 'int' → logprob: -11.413118362426758
    6. ' np' → logprob: -11.788118362426758
    7. ' ' → logprob: -15.038118362426758
    8. '   ' → logprob: -15.413118362426758
    9. '  ' → logprob: -15.663118362426758
    10. ' int' → logprob: -15.788118362426758

Token 140: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.04386574402451515
    2. '=' → logprob: -3.29386568069458
    3. ' =' → logprob: -6.29386568069458
    4. 'np' → logprob: -6.29386568069458
    5. '=int' → logprob: -6.54386568069458
    6. ' np' → logprob: -7.66886568069458
    7. '(np' → logprob: -8.793866157531738
    8. ' ' → logprob: -10.793866157531738
    9. '   ' → logprob: -11.418866157531738
    10. 'int' → logprob: -12.168866157531738

Token 141: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -2.2961512513575144e-05
    2. 'int' → logprob: -11.250022888183594
    3. '.' → logprob: -11.625022888183594
    4. ' int' → logprob: -15.375022888183594
    5. '=int' → logprob: -15.875022888183594
    6. '.uint' → logprob: -15.875022888183594
    7. ' .' → logprob: -16.000022888183594
    8. '.integer' → logprob: -16.250022888183594
    9. ']int' → logprob: -16.875022888183594
    10. ':int' → logprob: -17.000022888183594

Token 142: ')

' (ID: 1029)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.052418000996112823
    2. '64' → logprob: -3.0524179935455322
    3. ')' → logprob: -5.677418231964111
    4. '_)' → logprob: -8.302417755126953
    5. 'p' → logprob: -9.677417755126953
    6. 'c' → logprob: -9.927417755126953
    7. '_' → logprob: -10.177417755126953
    8. ' ' → logprob: -13.802417755126953
    9. '8' → logprob: -14.302417755126953
    10. ' )' → logprob: -14.427417755126953

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35494929552078247
    2. ')' → logprob: -1.4799492359161377
    3. '<|end|>' → logprob: -2.7299492359161377
    4. '

' → logprob: -5.729949474334717
    5. '
' → logprob: -7.354949474334717
    6. ' def' → logprob: -7.604949474334717
    7. '```' → logprob: -8.229948997497559
    8. '<|end|>' → logprob: -8.479948997497559
    9. ']' → logprob: -8.854948997497559
    10. 'dtype' → logprob: -8.979948997497559

Token 144: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.06252416223287582
    2. 'set' → logprob: -2.8125240802764893
    3. '_set' → logprob: -8.68752384185791
    4. 'def' → logprob: -9.18752384185791
    5. ' def' → logprob: -9.93752384185791
    6. ' ' → logprob: -9.93752384185791
    7. ' get' → logprob: -11.12502384185791
    8. '	set' → logprob: -11.12502384185791
    9. 'et' → logprob: -11.18752384185791
    10. ' initialize' → logprob: -11.50002384185791

Token 145: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.0325924449716695e-05
    2. 'dp' → logprob: -11.50001049041748
    3. '_' → logprob: -16.750009536743164
    4. '_df' → logprob: -16.875009536743164
    5. '	dp' → logprob: -17.625009536743164
    6. '(dp' → logprob: -18.000009536743164
    7. ' dp' → logprob: -18.125009536743164
    8. 'def' → logprob: -18.750009536743164
    9. '_dl' → logprob: -18.750009536743164
    10. '_dc' → logprob: -19.000009536743164

Token 146: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.334533878136426e-05
    2. '_' → logprob: -10.750042915344238
    3. '_st' → logprob: -12.000042915344238
    4. '_started' → logprob: -13.125042915344238
    5. '```' → logprob: -13.875042915344238
    6. '_START' → logprob: -14.000042915344238
    7. ' _' → logprob: -14.125042915344238
    8. '_s' → logprob: -14.375042915344238
    9. '_value' → logprob: -14.375042915344238
    10. '_max' → logprob: -14.500042915344238

Token 147: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.5776860184123507e-06
    2. '_point' → logprob: -13.62500286102295
    3. 'ning' → logprob: -14.87500286102295
    4. 'ting' → logprob: -15.12500286102295
    5. 'inging' → logprob: -16.125001907348633
    6. 'point' → logprob: -16.250001907348633
    7. 'ining' → logprob: -16.375001907348633
    8. 'ng' → logprob: -16.625001907348633
    9. 'ging' → logprob: -17.250001907348633
    10. 'pping' → logprob: -17.375001907348633

Token 148: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.054500666621607e-06
    2. '_value' → logprob: -13.00000286102295
    3. '_points' → logprob: -14.37500286102295
    4. 'point' → logprob: -16.125003814697266
    5. '_position' → logprob: -17.625003814697266
    6. '_place' → logprob: -18.125003814697266
    7. '_dp' → logprob: -18.125003814697266
    8. '_POINT' → logprob: -18.375003814697266
    9. '_' → logprob: -18.500003814697266
    10. '_Point' → logprob: -18.750003814697266

Token 149: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0206720617134124e-05
    2. ' (' → logprob: -11.62501049041748
    3. '(' → logprob: -14.50001049041748
    4. '(df' → logprob: -14.75001049041748
    5. '(dx' → logprob: -16.625009536743164
    6. '(dm' → logprob: -17.000009536743164
    7. '(dt' → logprob: -17.375009536743164
    8. '(def' → logprob: -17.625009536743164
    9. '(
' → logprob: -17.875009536743164
    10. '(np' → logprob: -18.125009536743164

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4843980371952057
    2. ')' → logprob: -1.4843980073928833
    3. '):
' → logprob: -1.9843980073928833
    4. ',' → logprob: -4.609397888183594
    5. ')
' → logprob: -5.859397888183594
    6. '(dp' → logprob: -5.984397888183594
    7. '   ' → logprob: -6.609397888183594
    8. ')(' → logprob: -7.359397888183594
    9. '):

' → logprob: -7.609397888183594
    10. '(' → logprob: -7.984397888183594

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05670721456408501
    2. 'dp' → logprob: -3.1817071437835693
    3. ' dp' → logprob: -4.306707382202148
    4. '	dp' → logprob: -9.181707382202148
    5. '(dp' → logprob: -10.806707382202148
    6. '_dp' → logprob: -12.431707382202148
    7. '  ' → logprob: -13.056707382202148
    8. ' ' → logprob: -13.056707382202148
    9. '    
' → logprob: -14.181707382202148
    10. '```' → logprob: -14.181707382202148

Token 152: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.14318138360977173
    2. ' dp' → logprob: -2.018181324005127
    3. '   ' → logprob: -7.643181324005127
    4. '	dp' → logprob: -11.143181800842285
    5. ' for' → logprob: -12.268181800842285
    6. 'for' → logprob: -12.393181800842285
    7. ' ' → logprob: -13.143181800842285
    8. '(dp' → logprob: -14.643181800842285
    9. '_dp' → logprob: -15.018181800842285
    10. '  ' → logprob: -15.643181800842285

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. '0' → logprob: -11.625011444091797
    3. '[:,' → logprob: -14.500011444091797
    4. '
' → logprob: -14.750011444091797
    5. '```' → logprob: -15.125011444091797
    6. '[:' → logprob: -15.250011444091797
    7. '[
' → logprob: -15.250011444091797
    8. '[-' → logprob: -15.250011444091797
    9. ' [' → logprob: -15.375011444091797
    10. 'dp' → logprob: -16.250011444091797

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.978233846486546e-05
    2. ' ' → logprob: -10.000049591064453
    3. ',' → logprob: -14.000049591064453
    4. '[' → logprob: -14.125049591064453
    5. '1' → logprob: -14.250049591064453
    6. '-' → logprob: -14.375049591064453
    7. '
' → logprob: -14.375049591064453
    8. '   ' → logprob: -14.875049591064453
    9. '  ' → logprob: -15.625049591064453
    10. '][' → logprob: -16.250049591064453

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2816154956817627
    2. '][' → logprob: -1.4066154956817627
    3. ' ,' → logprob: -8.281615257263184
    4. '0' → logprob: -9.281615257263184
    5. ']' → logprob: -9.656615257263184
    6. ' ][' → logprob: -10.531615257263184
    7. '[' → logprob: -10.781615257263184
    8. ' ' → logprob: -13.156615257263184
    9. '"][' → logprob: -13.906615257263184
    10. ''][' → logprob: -14.031615257263184

Token 156: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. ']' → logprob: -14.87692928314209
    4. '   ' → logprob: -16.126928329467773
    5. '  ' → logprob: -16.126928329467773
    6. '
' → logprob: -17.376928329467773
    7. '1' → logprob: -17.751928329467773
    8. '-' → logprob: -18.126928329467773
    9. ':' → logprob: -18.626928329467773
    10. '    ' → logprob: -18.751928329467773

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. ']' → logprob: -16.125011444091797
    4. '-' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '  ' → logprob: -17.250011444091797
    7. '1' → logprob: -17.375011444091797
    8. '
' → logprob: -18.062511444091797
    9. '۰' → logprob: -18.500011444091797
    10. '```' → logprob: -18.562511444091797

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.05499910004437e-05
    2. ']=' → logprob: -9.625090599060059
    3. ' ]' → logprob: -10.625090599060059
    4. '=' → logprob: -16.000089645385742
    5. ']==' → logprob: -17.750089645385742
    6. '()]' → logprob: -18.500089645385742
    7. ']
' → logprob: -18.625089645385742
    8. '']' → logprob: -18.750089645385742
    9. '`]' → logprob: -18.750089645385742
    10. ')' → logprob: -19.250089645385742

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05584358796477318
    2. ' =' → logprob: -2.9308435916900635
    3. ']' → logprob: -7.180843353271484
    4. ']=' → logprob: -8.555843353271484
    5. ' ]' → logprob: -12.930843353271484
    6. ' ' → logprob: -13.430843353271484
    7. '[' → logprob: -13.555843353271484
    8. ')' → logprob: -13.930843353271484
    9. ')=' → logprob: -15.180843353271484
    10. ' ' → logprob: -15.430843353271484

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -17.250261306762695
    4. '   ' → logprob: -18.437761306762695
    5. '1' → logprob: -18.625261306762695
    6. '  ' → logprob: -18.687761306762695
    7. '00' → logprob: -19.125261306762695
    8. 'int' → logprob: -19.187761306762695
    9. ' ' → logprob: -19.375261306762695
    10. 'np' → logprob: -19.687761306762695

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -17.500003814697266
    4. 'int' → logprob: -19.062503814697266
    5. '1' → logprob: -19.187503814697266
    6. '00' → logprob: -19.687503814697266
    7. '०' → logprob: -19.750003814697266
    8. '０' → logprob: -19.812503814697266
    9. 'np' → logprob: -19.812503814697266
    10. '(' → logprob: -20.312503814697266

Token 162: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' process' (ID: 2273)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.586507797241211
    2. ' solve' → logprob: -1.836507797241211
    3. ' main' → logprob: -2.336507797241211
    4. ' update' → logprob: -2.336507797241211
    5. ' maximize' → logprob: -2.336507797241211
    6. ' process' → logprob: -2.836507797241211
    7. ' compute' → logprob: -3.211507797241211
    8. ' calculate' → logprob: -3.336507797241211
    9. ' find' → logprob: -3.586507797241211
    10. 'max' → logprob: -3.836507797241211

Token 165: '_left' (ID: 22189)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.7642170786857605
    2. '_heap' → logprob: -2.0142171382904053
    3. '(dp' → logprob: -3.2642171382904053
    4. '_segment' → logprob: -3.3892171382904053
    5. '_sequence' → logprob: -3.5142171382904053
    6. '_data' → logprob: -3.6392171382904053
    7. '_sub' → logprob: -3.7642171382904053
    8. '_query' → logprob: -4.014216899871826
    9. '_sequences' → logprob: -4.139216899871826
    10. '(n' → logprob: -4.264216899871826

Token 166: '(dp' (ID: 68843)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1679465770721436
    2. '(i' → logprob: -1.5429465770721436
    3. '(' → logprob: -1.7929465770721436
    4. 'over' → logprob: -2.7929465770721436
    5. '()' → logprob: -2.7929465770721436
    6. '(n' → logprob: -2.9179465770721436
    7. '(dp' → logprob: -2.9179465770721436
    8. '_over' → logprob: -5.167946815490723
    9. '(heap' → logprob: -5.167946815490723
    10. '(_' → logprob: -5.292946815490723

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001293927663937211
    2. ' ,' → logprob: -7.126294136047363
    3. '):' → logprob: -8.251294136047363
    4. ',n' → logprob: -9.001294136047363
    5. ')' → logprob: -10.251294136047363
    6. '   ' → logprob: -10.626294136047363
    7. ',h' → logprob: -11.876294136047363
    8. ',
' → logprob: -12.126294136047363
    9. ',i' → logprob: -12.501294136047363
    10. '):
' → logprob: -12.751294136047363

Token 168: ' i' (ID: 575)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5781029462814331
    2. ' h' → logprob: -1.203102946281433
    3. 'i' → logprob: -2.9531030654907227
    4. ' i' → logprob: -3.4531030654907227
    5. 'a' → logprob: -4.703103065490723
    6. ' n' → logprob: -5.078103065490723
    7. ' a' → logprob: -5.078103065490723
    8. ' left' → logprob: -5.328103065490723
    9. 'l' → logprob: -5.453103065490723
    10. ' l' → logprob: -5.578103065490723

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005331232212483883
    2. '):' → logprob: -5.630331039428711
    3. ' ,' → logprob: -6.755331039428711
    4. '):
' → logprob: -8.505331039428711
    5. ',j' → logprob: -9.130331039428711
    6. '   ' → logprob: -9.630331039428711
    7. '-' → logprob: -9.880331039428711
    8. '+' → logprob: -10.380331039428711
    9. ',
' → logprob: -10.755331039428711
    10. ')' → logprob: -11.005331039428711

Token 170: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5167335271835327
    2. ' j' → logprob: -1.0167335271835327
    3. 'i' → logprob: -4.641733646392822
    4. 'k' → logprob: -5.391733646392822
    5. ' i' → logprob: -5.516733646392822
    6. 'n' → logprob: -5.641733646392822
    7. 'h' → logprob: -5.766733646392822
    8. ' n' → logprob: -5.766733646392822
    9. ' k' → logprob: -6.391733646392822
    10. ' h' → logprob: -6.391733646392822

Token 171: ',' (ID: 11)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.54520183801651
    2. ',' → logprob: -1.0452017784118652
    3. ')' → logprob: -3.4202017784118652
    4. '[i' → logprob: -3.7952017784118652
    5. ',i' → logprob: -5.295201778411865
    6. '_i' → logprob: -5.670201778411865
    7. '   ' → logprob: -6.920201778411865
    8. 'rray' → logprob: -7.545201778411865
    9. '[' → logprob: -7.670201778411865
    10. ' ,' → logprob: -7.920201778411865

Token 172: ' k' (ID: 372)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.714185893535614
    2. ' h' → logprob: -1.4641859531402588
    3. 'j' → logprob: -2.839185953140259
    4. ' j' → logprob: -3.339185953140259
    5. 'i' → logprob: -3.714185953140259
    6. ' b' → logprob: -3.714185953140259
    7. 'b' → logprob: -3.714185953140259
    8. 'n' → logprob: -4.21418571472168
    9. ' n' → logprob: -4.46418571472168
    10. ' i' → logprob: -4.71418571472168

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6947723627090454
    2. '):' → logprob: -0.6947723627090454
    3. '):
' → logprob: -6.569772243499756
    4. ')' → logprob: -9.069772720336914
    5. ' ,' → logprob: -11.069772720336914
    6. ' ):' → logprob: -11.569772720336914
    7. '):
' → logprob: -11.819772720336914
    8. '1' → logprob: -11.944772720336914
    9. '   ' → logprob: -12.319772720336914
    10. 'e' → logprob: -12.319772720336914

Token 174: ' n' (ID: 297)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7469607591629028
    2. ' h' → logprob: -1.3719607591629028
    3. 'j' → logprob: -3.7469606399536133
    4. ' j' → logprob: -3.8719606399536133
    5. ' heap' → logprob: -4.246960639953613
    6. ' n' → logprob: -4.309460639953613
    7. 'n' → logprob: -4.496960639953613
    8. ' left' → logprob: -4.559460639953613
    9. 'heap' → logprob: -4.621960639953613
    10. 'l' → logprob: -5.059460639953613

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10236771404743195
    2. ',' → logprob: -2.352367639541626
    3. ')' → logprob: -6.602367877960205
    4. '):
' → logprob: -7.352367877960205
    5. ' ):' → logprob: -9.352367401123047
    6. ' ,' → logprob: -11.102367401123047
    7. '   ' → logprob: -11.602367401123047
    8. '-' → logprob: -11.852367401123047
    9. ',
' → logprob: -12.102367401123047
    10. '=' → logprob: -12.352367401123047

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5069586038589478
    2. ' for' → logprob: -1.5069586038589478
    3. ' if' → logprob: -2.256958484649658
    4. 'for' → logprob: -3.131958484649658
    5. 'if' → logprob: -3.756958484649658
    6. ' max' → logprob: -6.381958484649658
    7. 'dp' → logprob: -7.381958484649658
    8. ' dp' → logprob: -7.756958484649658
    9. 'max' → logprob: -8.006958961486816
    10. ' while' → logprob: -8.631958961486816

Token 177: ' values' (ID: 4824)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4313805103302002
    2. ' for' → logprob: -1.8063805103302002
    3. 'if' → logprob: -2.4313805103302
    4. ' if' → logprob: -3.3063805103302
    5. 'max' → logprob: -4.056380271911621
    6. '   ' → logprob: -4.056380271911621
    7. ' max' → logprob: -4.931380271911621
    8. 'dp' → logprob: -5.931380271911621
    9. ' res' → logprob: -6.056380271911621
    10. ' best' → logprob: -6.181380271911621

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34971922636032104
    2. '=' → logprob: -1.2247192859649658
    3. '   ' → logprob: -6.974719047546387
    4. 'for' → logprob: -8.849719047546387
    5. ',' → logprob: -9.349719047546387
    6. ' ' → logprob: -10.599719047546387
    7. '  ' → logprob: -11.349719047546387
    8. 'dp' → logprob: -11.599719047546387
    9. 'max' → logprob: -11.974719047546387
    10. '[' → logprob: -12.099719047546387

Token 179: ' compute' (ID: 23864)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3958680033683777
    2. '[' → logprob: -1.7708680629730225
    3. '[]
' → logprob: -2.3958680629730225
    4. '[-' → logprob: -3.7708680629730225
    5. 'dp' → logprob: -3.7708680629730225
    6. '[
' → logprob: -4.645867824554443
    7. '[np' → logprob: -6.020867824554443
    8. '[a' → logprob: -6.145867824554443
    9. '[]

' → logprob: -6.895867824554443
    10. '[d' → logprob: -7.270867824554443

Token 180: '_left' (ID: 22189)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1110355854034424
    2. '_left' → logprob: -1.4860355854034424
    3. '_values' → logprob: -2.1110355854034424
    4. '_dp' → logprob: -2.6110355854034424
    5. '_max' → logprob: -2.7360355854034424
    6. '([' → logprob: -3.1110355854034424
    7. 'left' → logprob: -4.361035346984863
    8. 'dp' → logprob: -4.486035346984863
    9. '_possible' → logprob: -4.486035346984863
    10. '_range' → logprob: -4.611035346984863

Token 181: '_values' (ID: 20393)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.029695875942707062
    2. '_values' → logprob: -3.654695987701416
    3. '_indices' → logprob: -7.404695987701416
    4. 's' → logprob: -7.779695987701416
    5. '_dp' → logprob: -8.154695510864258
    6. 'values' → logprob: -8.279695510864258
    7. '_vals' → logprob: -8.404695510864258
    8. '(' → logprob: -8.904695510864258
    9. '_sum' → logprob: -8.904695510864258
    10. '_max' → logprob: -8.904695510864258

Token 182: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0001478796184528619
    2. '(' → logprob: -9.125147819519043
    3. ' (' → logprob: -10.750147819519043
    4. '(i' → logprob: -12.625147819519043
    5. 'dp' → logprob: -12.750147819519043
    6. '(n' → logprob: -12.875147819519043
    7. '=' → logprob: -13.375147819519043
    8. '(k' → logprob: -13.750147819519043
    9. '(
' → logprob: -13.750147819519043
    10. '(d' → logprob: -14.250147819519043

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007914052694104612
    2. ' ,' → logprob: -7.375791549682617
    3. '   ' → logprob: -9.125791549682617
    4. ',i' → logprob: -10.375791549682617
    5. '[i' → logprob: -11.375791549682617
    6. ')' → logprob: -11.875791549682617
    7. '[' → logprob: -13.500791549682617
    8. ',
' → logprob: -14.000791549682617
    9. ',k' → logprob: -14.125791549682617
    10. '  ' → logprob: -14.250791549682617

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3159465789794922
    2. 'i' → logprob: -1.3159465789794922
    3. ' a' → logprob: -6.815946578979492
    4. 'a' → logprob: -7.315946578979492
    5. '   ' → logprob: -8.065946578979492
    6. ' k' → logprob: -8.690946578979492
    7. 'k' → logprob: -9.065946578979492
    8. ' ' → logprob: -9.190946578979492
    9. ' n' → logprob: -9.690946578979492
    10. '  ' → logprob: -9.815946578979492

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01816621422767639
    2. '-' → logprob: -4.3931660652160645
    3. ' ,' → logprob: -5.8931660652160645
    4. ' -' → logprob: -6.5181660652160645
    5. '   ' → logprob: -7.8931660652160645
    6. ',k' → logprob: -7.8931660652160645
    7. ',a' → logprob: -8.643166542053223
    8. ' ' → logprob: -8.768166542053223
    9. 'a' → logprob: -9.268166542053223
    10. ')' → logprob: -9.768166542053223

Token 186: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.311954140663147
    2. ' a' → logprob: -1.436954140663147
    3. 'k' → logprob: -3.8119540214538574
    4. ' k' → logprob: -4.936954021453857
    5. '   ' → logprob: -8.311954498291016
    6. 'n' → logprob: -8.436954498291016
    7. ' n' → logprob: -8.686954498291016
    8. ' ' → logprob: -8.686954498291016
    9. '  ' → logprob: -9.686954498291016
    10. 'i' → logprob: -9.811954498291016

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019037702586501837
    2. ',k' → logprob: -7.251903533935547
    3. '-' → logprob: -7.376903533935547
    4. ' ,' → logprob: -8.376903533935547
    5. ')' → logprob: -8.626903533935547
    6. '[k' → logprob: -10.126903533935547
    7. 'k' → logprob: -10.376903533935547
    8. ' -' → logprob: -10.626903533935547
    9. '   ' → logprob: -10.876903533935547
    10. '[' → logprob: -11.626903533935547

Token 188: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22564542293548584
    2. ' k' → logprob: -1.6006454229354858
    3. ' n' → logprob: -9.225645065307617
    4. ' ' → logprob: -9.725645065307617
    5. 'n' → logprob: -9.975645065307617
    6. '   ' → logprob: -11.475645065307617
    7. '
' → logprob: -12.600645065307617
    8. '  ' → logprob: -12.913145065307617
    9. ')' → logprob: -12.975645065307617
    10. ',' → logprob: -13.350645065307617

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00738370930776
    2. '-' → logprob: -5.757383823394775
    3. ')' → logprob: -6.632383823394775
    4. '   ' → logprob: -6.882383823394775
    5. ' ,' → logprob: -7.132383823394775
    6. ',n' → logprob: -7.757383823394775
    7. '+' → logprob: -8.007383346557617
    8. ' -' → logprob: -8.757383346557617
    9. ')
' → logprob: -10.382383346557617
    10. ' ' → logprob: -10.382383346557617

Token 190: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519463300704956
    2. ' n' → logprob: -1.5019463300704956
    3. ' ' → logprob: -12.376946449279785
    4. ')' → logprob: -12.501946449279785
    5. '   ' → logprob: -12.751946449279785
    6. '
' → logprob: -12.751946449279785
    7. ',' → logprob: -13.751946449279785
    8. ')n' → logprob: -14.751946449279785
    9. '	n' → logprob: -15.126946449279785
    10. '    ' → logprob: -15.126946449279785

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09053865075111389
    2. ')
' → logprob: -2.465538740158081
    3. '   ' → logprob: -6.590538501739502
    4. ')
' → logprob: -9.46553897857666
    5. ' )' → logprob: -10.09053897857666
    6. ',' → logprob: -10.46553897857666
    7. ' ' → logprob: -10.84053897857666
    8. ' )
' → logprob: -11.21553897857666
    9. '[' → logprob: -11.34053897857666
    10. ')

' → logprob: -11.71553897857666

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295025706291199
    2. '
' → logprob: -1.2795026302337646
    3. 'return' → logprob: -3.1545026302337646
    4. ' for' → logprob: -3.4045026302337646
    5. ' return' → logprob: -4.0295023918151855
    6. 'for' → logprob: -4.2795023918151855
    7. ')' → logprob: -5.1545023918151855
    8. '    
' → logprob: -5.2795023918151855
    9. ' 
' → logprob: -5.6545023918151855
    10. '<|end|>' → logprob: -5.7795023918151855

Token 193: ' update' (ID: 4027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5399178266525269
    2. ' for' → logprob: -0.9149178266525269
    3. 'return' → logprob: -5.414917945861816
    4. '   ' → logprob: -5.914917945861816
    5. ' return' → logprob: -5.914917945861816
    6. 'max' → logprob: -6.164917945861816
    7. 'dp' → logprob: -6.539917945861816
    8. ' max' → logprob: -6.664917945861816
    9. ' dp' → logprob: -7.164917945861816
    10. 'if' → logprob: -8.289917945861816

Token 194: '_left' (ID: 22189)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.03921102359890938
    2. '(dp' → logprob: -3.5392110347747803
    3. 'dp' → logprob: -5.289210796356201
    4. ' dp' → logprob: -6.414210796356201
    5. '_left' → logprob: -6.539210796356201
    6. '_max' → logprob: -8.03921127319336
    7. '_matrix' → logprob: -8.16421127319336
    8. '_values' → logprob: -8.78921127319336
    9. 'DP' → logprob: -9.41421127319336
    10. '_array' → logprob: -9.66421127319336

Token 195: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.11078228801488876
    2. '_dp' → logprob: -2.8607823848724365
    3. '_values' → logprob: -3.2357823848724365
    4. 'dp' → logprob: -5.735782146453857
    5. '_max' → logprob: -6.235782146453857
    6. '_matrix' → logprob: -7.735782146453857
    7. 's' → logprob: -7.860782146453857
    8. 'values' → logprob: -7.985782146453857
    9. '_heap' → logprob: -8.110782623291016
    10. 'max' → logprob: -8.860782623291016

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018792471382766962
    2. ' ,' → logprob: -8.625187873840332
    3. ',i' → logprob: -12.375187873840332
    4. '   ' → logprob: -12.875187873840332
    5. ')' → logprob: -14.750187873840332
    6. ',
' → logprob: -15.375187873840332
    7. 'values' → logprob: -15.750187873840332
    8. ',n' → logprob: -16.00018882751465
    9. ',k' → logprob: -16.00018882751465
    10. '[' → logprob: -16.25018882751465

Token 197: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32328540086746216
    2. 'i' → logprob: -1.4482853412628174
    3. ' values' → logprob: -3.5732853412628174
    4. 'values' → logprob: -4.4482855796813965
    5. ' dp' → logprob: -7.9482855796813965
    6. 'dp' → logprob: -8.573285102844238
    7. '   ' → logprob: -8.823285102844238
    8. ' ' → logprob: -8.823285102844238
    9. 'k' → logprob: -8.823285102844238
    10. ' n' → logprob: -8.823285102844238

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015515214763581753
    2. ' ,' → logprob: -6.876551628112793
    3. '-' → logprob: -8.376551628112793
    4. ')' → logprob: -9.376551628112793
    5. ' -' → logprob: -9.876551628112793
    6. '+' → logprob: -9.876551628112793
    7. '   ' → logprob: -10.251551628112793
    8. ',k' → logprob: -10.251551628112793
    9. 'values' → logprob: -12.251551628112793
    10. ' ' → logprob: -12.251551628112793

Token 199: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.702140748500824
    2. 'values' → logprob: -0.702140748500824
    3. 'k' → logprob: -5.827140808105469
    4. 'a' → logprob: -6.077140808105469
    5. ' a' → logprob: -6.327140808105469
    6. ' k' → logprob: -6.452140808105469
    7. ' n' → logprob: -9.202140808105469
    8. ' ' → logprob: -9.327140808105469
    9. 'n' → logprob: -9.577140808105469
    10. '   ' → logprob: -10.952140808105469

Token 200: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22644655406475067
    2. ')' → logprob: -1.601446509361267
    3. ',k' → logprob: -7.101446628570557
    4. ' ,' → logprob: -9.226446151733398
    5. ' )' → logprob: -10.226446151733398
    6. '[' → logprob: -10.976446151733398
    7. '   ' → logprob: -11.226446151733398
    8. '[k' → logprob: -11.476446151733398
    9. ',i' → logprob: -11.851446151733398
    10. '[i' → logprob: -12.226446151733398

Token 201: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.024604277219623e-05
    2. '
' → logprob: -10.625040054321289
    3. '<|end|>' → logprob: -11.625040054321289
    4. 'return' → logprob: -12.750040054321289
    5. '   ' → logprob: -13.625040054321289
    6. ')' → logprob: -13.875040054321289
    7. '  
' → logprob: -14.500040054321289
    8. '    
' → logprob: -15.375040054321289
    9. '#' → logprob: -15.750040054321289
    10. ' def' → logprob: -15.875040054321289

Token 202: ' compute' (ID: 23864)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.7009120583534241
    2. 'process' → logprob: -0.7009120583534241
    3. 'compute' → logprob: -5.450911998748779
    4. ' compute' → logprob: -6.450911998748779
    5. 'update' → logprob: -7.325911998748779
    6. '_process' → logprob: -7.575911998748779
    7. ' update' → logprob: -7.950911998748779
    8. 'rocess' → logprob: -8.950912475585938
    9. 'def' → logprob: -10.200912475585938
    10. ' def' → logprob: -10.825912475585938

Token 203: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.650518920039758e-06
    2. '_le' → logprob: -13.500003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_right' → logprob: -14.375003814697266
    5. ' _' → logprob: -15.250003814697266
    6. 'left' → logprob: -15.875003814697266
    7. '_values' → logprob: -16.000003814697266
    8. '```' → logprob: -16.625003814697266
    9. '_Left' → logprob: -17.125003814697266
    10. '_value' → logprob: -17.375003814697266

Token 204: '_values' (ID: 20393)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.12795844674110413
    2. '_values' → logprob: -2.1279585361480713
    3. '(' → logprob: -7.627958297729492
    4. 'values' → logprob: -8.627958297729492
    5. '_' → logprob: -8.752958297729492
    6. '_dp' → logprob: -10.002958297729492
    7. ' (' → logprob: -10.127958297729492
    8. '_(' → logprob: -10.627958297729492
    9. '(values' → logprob: -10.627958297729492
    10. '_value' → logprob: -11.377958297729492

Token 205: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.143808109802194e-05
    2. '(' → logprob: -10.500041007995605
    3. ' (' → logprob: -11.375041007995605
    4. '(def' → logprob: -13.375041007995605
    5. '(df' → logprob: -15.250041007995605
    6. 'def' → logprob: -15.875041007995605
    7. '(d' → logprob: -16.250041961669922
    8. 'dp' → logprob: -16.250041961669922
    9. ',' → logprob: -16.500041961669922
    10. '(
' → logprob: -17.125041961669922

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',i' → logprob: -15.125027656555176
    4. '   ' → logprob: -16.375028610229492
    5. ',
' → logprob: -17.750028610229492
    6. ',n' → logprob: -18.125028610229492
    7. '‌,' → logprob: -18.375028610229492
    8. ',d' → logprob: -18.500028610229492
    9. '

' → logprob: -19.000028610229492
    10. ',int' → logprob: -19.375028610229492

Token 207: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6329129338264465
    2. 'i' → logprob: -0.7579129338264465
    3. ')' → logprob: -8.632912635803223
    4. ' n' → logprob: -10.507912635803223
    5. 'n' → logprob: -10.757912635803223
    6. ',' → logprob: -11.007912635803223
    7. ' ' → logprob: -11.257912635803223
    8. ')i' → logprob: -11.382912635803223
    9. ',i' → logprob: -11.757912635803223
    10. 'a' → logprob: -11.757912635803223

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001732663222355768
    2. ' ,' → logprob: -8.750173568725586
    3. ',k' → logprob: -11.750173568725586
    4. ',a' → logprob: -13.125173568725586
    5. ',n' → logprob: -13.250173568725586
    6. '   ' → logprob: -14.125173568725586
    7. '):' → logprob: -14.625173568725586
    8. ',
' → logprob: -14.750173568725586
    9. ',i' → logprob: -15.000173568725586
    10. 'a' → logprob: -15.250173568725586

Token 209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32271191477775574
    2. ' a' → logprob: -1.4477119445800781
    3. 'k' → logprob: -3.822711944580078
    4. 'i' → logprob: -4.947711944580078
    5. ' k' → logprob: -4.947711944580078
    6. ' i' → logprob: -6.072711944580078
    7. 'n' → logprob: -6.947711944580078
    8. ' n' → logprob: -7.447711944580078
    9. ')' → logprob: -7.697711944580078
    10. 'range' → logprob: -9.822711944580078

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003987336531281471
    2. ',k' → logprob: -8.250398635864258
    3. ' ,' → logprob: -9.125398635864258
    4. '):' → logprob: -12.250398635864258
    5. '):
' → logprob: -12.375398635864258
    6. 'k' → logprob: -12.375398635864258
    7. ',n' → logprob: -12.875398635864258
    8. 'def' → logprob: -13.125398635864258
    9. ')' → logprob: -13.750398635864258
    10. 'a' → logprob: -13.750398635864258

Token 211: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04337172582745552
    2. ' k' → logprob: -3.1683716773986816
    3. 'n' → logprob: -8.79337215423584
    4. ' n' → logprob: -9.54337215423584
    5. 'a' → logprob: -9.66837215423584
    6. 'i' → logprob: -9.91837215423584
    7. ' a' → logprob: -11.16837215423584
    8. ')' → logprob: -11.91837215423584
    9. ' i' → logprob: -12.41837215423584
    10. ' ' → logprob: -12.79337215423584

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002534720697440207
    2. ',n' → logprob: -8.500253677368164
    3. ' ,' → logprob: -10.125253677368164
    4. '):' → logprob: -12.625253677368164
    5. '   ' → logprob: -13.625253677368164
    6. '):
' → logprob: -14.000253677368164
    7. ',
' → logprob: -14.000253677368164
    8. ',i' → logprob: -14.500253677368164
    9. ')' → logprob: -15.125253677368164
    10. ',j' → logprob: -15.375253677368164

Token 213: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06232426315546036
    2. ' n' → logprob: -2.812324285507202
    3. 'i' → logprob: -8.437324523925781
    4. 'a' → logprob: -10.062324523925781
    5. 'k' → logprob: -10.937324523925781
    6. ')' → logprob: -11.312324523925781
    7. ' i' → logprob: -11.312324523925781
    8. '   ' → logprob: -11.312324523925781
    9. ' ' → logprob: -11.812324523925781
    10. ' a' → logprob: -12.312324523925781

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47421085834503174
    2. '):
' → logprob: -0.9742108583450317
    3. '):
' → logprob: -9.599210739135742
    4. ',' → logprob: -10.474210739135742
    5. '   ' → logprob: -10.599210739135742
    6. '):

' → logprob: -12.224210739135742
    7. ' ):' → logprob: -12.474210739135742
    8. ')' → logprob: -13.349210739135742
    9. ' ):
' → logprob: -13.724210739135742
    10. ':' → logprob: -14.724210739135742

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34144219756126404
    2. ' values' → logprob: -1.7164422273635864
    3. 'values' → logprob: -3.591442108154297
    4. ' res' → logprob: -3.716442108154297
    5. ' vals' → logprob: -3.716442108154297
    6. ' left' → logprob: -4.341442108154297
    7. ' result' → logprob: -5.216442108154297
    8. 'vals' → logprob: -5.716442108154297
    9. 'left' → logprob: -6.341442108154297
    10. ' return' → logprob: -6.591442108154297

Token 216: ' indices' (ID: 30378)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.9878600239753723
    2. 'vals' → logprob: -1.7378599643707275
    3. ' res' → logprob: -2.2378599643707275
    4. ' values' → logprob: -2.3628599643707275
    5. ' vals' → logprob: -2.4878599643707275
    6. 'res' → logprob: -2.6128599643707275
    7. 'left' → logprob: -3.2378599643707275
    8. ' left' → logprob: -3.9878599643707275
    9. 'result' → logprob: -4.737860202789307
    10. 'arr' → logprob: -4.737860202789307

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3487606644630432
    2. '=' → logprob: -1.2237606048583984
    3. ',' → logprob: -8.848760604858398
    4. '   ' → logprob: -9.848760604858398
    5. ' ' → logprob: -9.973760604858398
    6. '  ' → logprob: -11.098760604858398
    7. 'import' → logprob: -11.598760604858398
    8. '_values' → logprob: -11.723760604858398
    9. 's' → logprob: -12.098760604858398
    10. '=np' → logprob: -12.098760604858398

Token 218: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.6478850841522217
    2. ' range' → logprob: -1.5228850841522217
    3. 'np' → logprob: -1.7728850841522217
    4. 'range' → logprob: -2.6478850841522217
    5. '[np' → logprob: -4.897885322570801
    6. ' [' → logprob: -5.647885322570801
    7. ' list' → logprob: -6.397885322570801
    8. '[' → logprob: -6.772885322570801
    9. '[(' → logprob: -7.022885322570801
    10. ' [(' → logprob: -7.647885322570801

Token 219: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.00010640407708706334
    2. 'ar' → logprob: -9.875106811523438
    3. '.' → logprob: -10.875106811523438
    4. '.maximum' → logprob: -11.750106811523438
    5. '
' → logprob: -12.375106811523438
    6. '.minimum' → logprob: -12.500106811523438
    7. '

' → logprob: -12.625106811523438
    8. 'range' → logprob: -12.875106811523438
    9. '```' → logprob: -13.250106811523438
    10. '.array' → logprob: -13.250106811523438

Token 220: '(n' (ID: 2406)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2235879898071289
    2. '(k' → logprob: -1.723587989807129
    3. '(n' → logprob: -3.973587989807129
    4. '(' → logprob: -6.223587989807129
    5. '(max' → logprob: -7.223587989807129
    6. '(a' → logprob: -8.723587989807129
    7. '(dp' → logprob: -9.598587989807129
    8. '(len' → logprob: -9.848587989807129
    9. '(min' → logprob: -10.348587989807129
    10. '(-' → logprob: -10.348587989807129

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6950157880783081
    2. '+' → logprob: -1.445015788078308
    3. ' +' → logprob: -2.0700159072875977
    4. ' -' → logprob: -2.4450159072875977
    5. '-' → logprob: -4.195015907287598
    6. '-k' → logprob: -4.320015907287598
    7. ')
' → logprob: -4.320015907287598
    8. ' )' → logprob: -5.820015907287598
    9. ',' → logprob: -6.570015907287598
    10. '-i' → logprob: -6.570015907287598

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07098076492547989
    2. '+' → logprob: -3.5709807872772217
    3. '
' → logprob: -4.195980548858643
    4. ' +' → logprob: -4.820980548858643
    5. '[' → logprob: -5.445980548858643
    6. ')' → logprob: -5.820980548858643
    7. '    
' → logprob: -5.945980548858643
    8. 'values' → logprob: -6.320980548858643
    9. ',' → logprob: -6.820980548858643
    10. '-' → logprob: -7.320980548858643

Token 223: ' prev' (ID: 10258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.497779130935669
    2. ' vals' → logprob: -1.497779130935669
    3. ' return' → logprob: -2.122779130935669
    4. ' values' → logprob: -2.372779130935669
    5. ' left' → logprob: -2.622779130935669
    6. 'values' → logprob: -3.247779130935669
    7. 'vals' → logprob: -3.497779130935669
    8. 'return' → logprob: -3.747779130935669
    9. 'left' → logprob: -3.872779130935669
    10. ' prev' → logprob: -3.997779130935669

Token 224: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.1513638198375702
    2. '_dp' → logprob: -2.7763638496398926
    3. '_vals' → logprob: -2.9013638496398926
    4. ' =' → logprob: -4.901363849639893
    5. '_val' → logprob: -4.901363849639893
    6. '_row' → logprob: -6.151363849639893
    7. '_max' → logprob: -6.401363849639893
    8. '_indices' → logprob: -7.151363849639893
    9. '_i' → logprob: -7.276363849639893
    10. '=' → logprob: -7.401363849639893

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.070001021027565
    2. '=' → logprob: -2.6950011253356934
    3. '   ' → logprob: -10.070000648498535
    4. ' ' → logprob: -11.445000648498535
    5. ',' → logprob: -12.070000648498535
    6. 'dp' → logprob: -13.570000648498535
    7. '  ' → logprob: -14.070000648498535
    8. 's' → logprob: -14.445000648498535
    9. ' =
' → logprob: -14.632500648498535
    10. ' ' → logprob: -14.820000648498535

Token 226: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.20511408150196075
    2. 'dp' → logprob: -1.7051141262054443
    3. ' np' → logprob: -6.080113887786865
    4. 'np' → logprob: -7.080113887786865
    5. '   ' → logprob: -8.330114364624023
    6. ' ' → logprob: -8.955114364624023
    7. '[' → logprob: -10.205114364624023
    8. '	dp' → logprob: -10.330114364624023
    9. '(dp' → logprob: -10.580114364624023
    10. ' [' → logprob: -10.892614364624023

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003564383659977466
    2. '[' → logprob: -8.250356674194336
    3. '[a' → logprob: -10.875356674194336
    4. 'i' → logprob: -11.375356674194336
    5. '[k' → logprob: -11.375356674194336
    6. '   ' → logprob: -11.375356674194336
    7. '[np' → logprob: -11.875356674194336
    8. '[
' → logprob: -12.000356674194336
    9. ',i' → logprob: -12.375356674194336
    10. '[n' → logprob: -12.375356674194336

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12381474673748016
    2. '-' → logprob: -2.248814821243286
    3. ',:' → logprob: -5.623814582824707
    4. ' -' → logprob: -6.123814582824707
    5. '[:-' → logprob: -6.748814582824707
    6. ' ' → logprob: -6.998814582824707
    7. ',np' → logprob: -7.873814582824707
    8. ' ,' → logprob: -7.873814582824707
    9. ',k' → logprob: -8.123814582824707
    10. '   ' → logprob: -8.248814582824707

Token 229: ' :-' (ID: 25415)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3701607286930084
    2. ':' → logprob: -1.370160698890686
    3. ':-' → logprob: -3.4951608180999756
    4. ' indices' → logprob: -4.7451605796813965
    5. 'np' → logprob: -5.4951605796813965
    6. ' :' → logprob: -5.9951605796813965
    7. 'k' → logprob: -6.3701605796813965
    8. '1' → logprob: -6.4951605796813965
    9. ':k' → logprob: -6.9951605796813965
    10. ':n' → logprob: -7.1201605796813965

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001926374970935285
    2. 'k' → logprob: -6.376926422119141
    3. 'n' → logprob: -8.62692642211914
    4. ' ' → logprob: -10.87692642211914
    5. 'a' → logprob: -11.87692642211914
    6. 'i' → logprob: -11.87692642211914
    7. 'indices' → logprob: -12.62692642211914
    8. ']' → logprob: -12.75192642211914
    9. '   ' → logprob: -13.37692642211914
    10. '-' → logprob: -13.75192642211914

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0043756477534770966
    2. ' ]' → logprob: -6.129375457763672
    3. ']
' → logprob: -6.879375457763672
    4. ']+' → logprob: -7.504375457763672
    5. '-' → logprob: -8.004375457763672
    6. ']-' → logprob: -9.629375457763672
    7. ' ' → logprob: -10.379375457763672
    8. '1' → logprob: -10.629375457763672
    9. '])' → logprob: -10.754375457763672
    10. '][' → logprob: -10.879375457763672

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27003607153892517
    2. ' +' → logprob: -2.020035982131958
    3. '+' → logprob: -2.395035982131958
    4. ' -' → logprob: -5.520036220550537
    5. '-' → logprob: -6.395036220550537
    6. '
' → logprob: -6.520036220550537
    7. '[' → logprob: -6.770036220550537
    8. 'new' → logprob: -7.395036220550537
    9. 'shift' → logprob: -7.520036220550537
    10. 'return' → logprob: -8.020035743713379

Token 233: ' dif' (ID: 1501)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8507501482963562
    2. 'c' → logprob: -2.225750207901001
    3. '   ' → logprob: -2.725750207901001
    4. 'new' → logprob: -2.725750207901001
    5. ' shifted' → logprob: -2.725750207901001
    6. ' return' → logprob: -2.975750207901001
    7. ' max' → logprob: -3.100750207901001
    8. ' candidates' → logprob: -3.600750207901001
    9. 'shift' → logprob: -3.975750207901001
    10. 'max' → logprob: -3.975750207901001

Token 234: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.7754928469657898
    2. 'ferences' → logprob: -1.0254929065704346
    3. 'f' → logprob: -1.7754929065704346
    4. 'ference' → logprob: -5.0254926681518555
    5. ' =' → logprob: -6.1504926681518555
    6. 'fer' → logprob: -7.1504926681518555
    7. 's' → logprob: -7.2754926681518555
    8. '=' → logprob: -7.4004926681518555
    9. '   ' → logprob: -8.900492668151855
    10. 'fers' → logprob: -9.150492668151855

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693671882152557
    2. '=' → logprob: -2.126936674118042
    3. ' ' → logprob: -12.501936912536621
    4. ',' → logprob: -13.376936912536621
    5. ' ' → logprob: -13.751936912536621
    6. '=np' → logprob: -14.501936912536621
    7. ')' → logprob: -15.001936912536621
    8. ' =
' → logprob: -15.376936912536621
    9. 's' → logprob: -15.376936912536621
    10. '+' → logprob: -15.626936912536621

Token 236: ' np' (ID: 5374)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7004462480545044
    2. 'prev' → logprob: -1.4504462480545044
    3. ' a' → logprob: -2.075446128845215
    4. 'dp' → logprob: -2.700446128845215
    5. ' prev' → logprob: -3.325446128845215
    6. 'np' → logprob: -4.075446128845215
    7. ' dp' → logprob: -4.325446128845215
    8. ' np' → logprob: -5.450446128845215
    9. ' ' → logprob: -6.450446128845215
    10. 'k' → logprob: -6.825446128845215

Token 237: '.abs' (ID: 29974)
  Prédit: '.maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.maximum' → logprob: -0.5025830268859863
    2. '.subtract' → logprob: -1.5025830268859863
    3. '.diff' → logprob: -2.2525830268859863
    4. '.abs' → logprob: -3.6275830268859863
    5. '.clip' → logprob: -4.502583026885986
    6. '.minimum' → logprob: -4.502583026885986
    7. '.zeros' → logprob: -5.377583026885986
    8. '.log' → logprob: -5.752583026885986
    9. '.concatenate' → logprob: -6.127583026885986
    10. '.arange' → logprob: -6.252583026885986

Token 238: '(k' (ID: 12125)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0024964679032564163
    2. '(indices' → logprob: -6.627496242523193
    3. '(' → logprob: -7.502496242523193
    4. '(np' → logprob: -7.752496242523193
    5. '(i' → logprob: -9.252496719360352
    6. '(k' → logprob: -9.877496719360352
    7. 'a' → logprob: -11.002496719360352
    8. '((' → logprob: -11.877496719360352
    9. '(values' → logprob: -12.627496719360352
    10. ' (' → logprob: -13.127496719360352

Token 239: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6958894729614258
    2. ' -' → logprob: -0.6958894729614258
    3. '+' → logprob: -7.445889472961426
    4. '[' → logprob: -7.570889472961426
    5. ' ' → logprob: -7.820889472961426
    6. ')' → logprob: -8.195889472961426
    7. ',' → logprob: -8.445889472961426
    8. 'a' → logprob: -9.070889472961426
    9. '   ' → logprob: -9.070889472961426
    10. '  ' → logprob: -9.320889472961426

Token 240: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6591751575469971
    2. 'a' → logprob: -1.409175157546997
    3. ' indices' → logprob: -1.659175157546997
    4. ' a' → logprob: -3.159175157546997
    5. 'np' → logprob: -6.409174919128418
    6. ' np' → logprob: -6.659174919128418
    7. 'i' → logprob: -6.909174919128418
    8. '   ' → logprob: -7.659174919128418
    9. ' ' → logprob: -7.784174919128418
    10. ' i' → logprob: -8.409174919128418

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005427392665296793
    2. ' )' → logprob: -6.380427360534668
    3. '[' → logprob: -6.505427360534668
    4. '[:' → logprob: -6.630427360534668
    5. '[:-' → logprob: -7.505427360534668
    6. ')
' → logprob: -8.630427360534668
    7. ')**' → logprob: -10.130427360534668
    8. '[np' → logprob: -10.380427360534668
    9. '[])' → logprob: -11.005427360534668
    10. '   ' → logprob: -11.630427360534668

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4952128529548645
    2. '
' → logprob: -1.4952127933502197
    3. ' *' → logprob: -2.8702127933502197
    4. ')' → logprob: -3.2452127933502197
    5. '[' → logprob: -3.6202127933502197
    6. '[np' → logprob: -4.745213031768799
    7. '  
' → logprob: -4.995213031768799
    8. '    
' → logprob: -5.245213031768799
    9. ' +' → logprob: -5.370213031768799
    10. '*' → logprob: -5.620213031768799

Token 243: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45009684562683105
    2. ' new' → logprob: -2.450096845626831
    3. ' max' → logprob: -2.575096845626831
    4. 'max' → logprob: -2.825096845626831
    5. 'new' → logprob: -3.700096845626831
    6. 'values' → logprob: -3.950096845626831
    7. 'vals' → logprob: -4.07509708404541
    8. 'return' (adapté à ' return') → logprob: -4.32509708404541
    9. ' vals' → logprob: -4.32509708404541
    10. ' return' → logprob: -4.70009708404541

Token 244: ' prev' (ID: 10258)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.38538727164268494
    2. ' np' → logprob: -1.2603873014450073
    3. 'prev' → logprob: -3.6353871822357178
    4. ' prev' → logprob: -4.760387420654297
    5. '(np' → logprob: -7.635387420654297
    6. 'max' → logprob: -8.385387420654297
    7. 'dp' → logprob: -8.885387420654297
    8. '   ' → logprob: -9.010387420654297
    9. ' ' → logprob: -9.510387420654297
    10. ' max' → logprob: -9.635387420654297

Token 245: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.9361264946837764e-07
    2. '_value' → logprob: -16.75
    3. '_VALUES' → logprob: -16.75
    4. '_' → logprob: -17.25
    5. 'values' → logprob: -18.0
    6. ' _' → logprob: -19.125
    7. '_vals' → logprob: -19.125
    8. '_
' → logprob: -20.625
    9. '__' → logprob: -20.75
    10. '_val' → logprob: -21.5

Token 246: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5999666452407837
    2. ' +' → logprob: -1.3499666452407837
    3. '+' → logprob: -2.349966526031494
    4. '-' → logprob: -2.349966526031494
    5. '[' → logprob: -7.224966526031494
    6. '-d' → logprob: -8.599967002868652
    7. ' ' → logprob: -10.599967002868652
    8. ',' → logprob: -10.599967002868652
    9. '+d' → logprob: -10.599967002868652
    10. '[-' → logprob: -10.724967002868652

Token 247: ' (-' (ID: 21382)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5634576082229614
    2. ' a' → logprob: -0.9384576082229614
    3. ' dif' → logprob: -3.563457489013672
    4. 'diff' → logprob: -4.813457489013672
    5. ' np' → logprob: -7.688457489013672
    6. ' ' → logprob: -7.688457489013672
    7. 'np' → logprob: -7.813457489013672
    8. ' (' → logprob: -8.438457489013672
    9. '-d' → logprob: -8.688457489013672
    10. '(a' → logprob: -8.688457489013672

Token 248: 'a' (ID: 64)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.21686218678951263
    2. 'a' → logprob: -1.7168622016906738
    3. ' a' → logprob: -4.841862201690674
    4. 'np' → logprob: -5.841862201690674
    5. ' dif' → logprob: -6.466862201690674
    6. '1' → logprob: -7.466862201690674
    7. 'abs' → logprob: -7.466862201690674
    8. 'dif' → logprob: -7.591862201690674
    9. '2' → logprob: -8.216861724853516
    10. '   ' → logprob: -8.341861724853516

Token 249: ')' (ID: 8)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09626003354787827
    2. '[d' → logprob: -2.7212600708007812
    3. '[i' → logprob: -4.596260070800781
    4. ')' → logprob: -4.721260070800781
    5. ' *' → logprob: -6.221260070800781
    6. '*' → logprob: -6.221260070800781
    7. '[k' → logprob: -6.846260070800781
    8. ')[' → logprob: -7.721260070800781
    9. '[a' → logprob: -8.096260070800781
    10. ')*' → logprob: -8.096260070800781

Token 250: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0584811195731163
    2. '*' → logprob: -2.933481216430664
    3. '[' → logprob: -6.183481216430664
    4. '*d' → logprob: -7.183481216430664
    5. '<|end|>' → logprob: -7.433481216430664
    6. '*np' → logprob: -10.433481216430664
    7. ' ' → logprob: -10.433481216430664
    8. '[d' → logprob: -10.433481216430664
    9. '[np' → logprob: -10.683481216430664
    10. '[...,' → logprob: -11.808481216430664

Token 251: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06333750486373901
    2. ' dif' → logprob: -2.813337564468384
    3. ' diff' → logprob: -7.313337326049805
    4. 'dif' → logprob: -8.313337326049805
    5. 'd' → logprob: -8.938337326049805
    6. ' ' → logprob: -9.438337326049805
    7. ' d' → logprob: -9.813337326049805
    8. '	d' → logprob: -10.563337326049805
    9. 'np' → logprob: -10.688337326049805
    10. '1' → logprob: -10.813337326049805

Token 252: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0008092674543149769
    2. 's' → logprob: -7.125809192657471
    3. ' fs' → logprob: -13.750809669494629
    4. 'qs' → logprob: -14.125809669494629
    5. 'ps' → logprob: -14.250809669494629
    6. 'f' → logprob: -14.375809669494629
    7. 'bs' → logprob: -15.000809669494629
    8. 'ffs' → logprob: -15.250809669494629
    9. 'gs' → logprob: -15.625809669494629
    10. 'cs' → logprob: -15.625809669494629

Token 253: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.6425096392631531
    2. ' update' → logprob: -0.7675096392631531
    3. 'process' → logprob: -5.142509460449219
    4. ' process' → logprob: -5.642509460449219
    5. 'compute' → logprob: -8.642509460449219
    6. ' ' → logprob: -9.142509460449219
    7. ' compute' → logprob: -9.642509460449219
    8. 'def' → logprob: -10.767509460449219
    9. '_update' → logprob: -11.267509460449219
    10. '	update' → logprob: -11.455009460449219

Token 256: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00022928470571059734
    2. '(dp' → logprob: -8.500228881835938
    3. 'left' → logprob: -10.750228881835938
    4. 'Left' → logprob: -13.375228881835938
    5. '(' → logprob: -13.875228881835938
    6. '_Left' → logprob: -14.250228881835938
    7. '_LEFT' → logprob: -14.375228881835938
    8. '```' → logprob: -15.375228881835938
    9. 'dp' → logprob: -16.250228881835938
    10. '_right' → logprob: -16.375228881835938

Token 257: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(df' → logprob: -16.250001907348633
    5. 'dp' → logprob: -17.625001907348633
    6. '(
' → logprob: -17.875001907348633
    7. '(dt' → logprob: -18.500001907348633
    8. '(def' → logprob: -18.625001907348633
    9. '[' → logprob: -19.250001907348633
    10. '```' → logprob: -19.625001907348633

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.802049756515771e-05
    2. ' ,' → logprob: -9.750067710876465
    3. ',i' → logprob: -12.250067710876465
    4. '(dp' → logprob: -12.750067710876465
    5. '[i' → logprob: -13.750067710876465
    6. '   ' → logprob: -14.625067710876465
    7. '[' → logprob: -16.12506866455078
    8. ',d' → logprob: -16.25006866455078
    9. ',
' → logprob: -16.50006866455078
    10. 'dp' → logprob: -17.25006866455078

Token 259: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38687339425086975
    2. 'i' → logprob: -1.1368733644485474
    3. '<|end|>' → logprob: -14.761873245239258
    4. ' ' → logprob: -14.886873245239258
    5. ')' → logprob: -14.886873245239258
    6. '	i' → logprob: -15.136873245239258
    7. ',i' → logprob: -15.261873245239258
    8. ')i' → logprob: -15.886873245239258
    9. '...' → logprob: -16.011873245239258
    10. '   ' → logprob: -16.136873245239258

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',i' → logprob: -13.875020027160645
    4. '   ' → logprob: -15.375020027160645
    5. ',
' → logprob: -16.62502098083496
    6. '  ' → logprob: -18.62502098083496
    7. ',a' → logprob: -18.87502098083496
    8. ' ' → logprob: -19.00002098083496
    9. '‌,' → logprob: -19.00002098083496
    10. ',int' → logprob: -19.25002098083496

Token 261: ' values' (ID: 4824)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44073396921157837
    2. ' i' → logprob: -1.0657339096069336
    3. ' np' → logprob: -5.315733909606934
    4. 'np' → logprob: -5.565733909606934
    5. 'a' → logprob: -7.315733909606934
    6. '-' → logprob: -7.690733909606934
    7. ' a' → logprob: -7.815733909606934
    8. 'range' → logprob: -8.190733909606934
    9. ' range' → logprob: -8.565733909606934
    10. ' -' → logprob: -8.565733909606934

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6220629215240479
    2. '):
' → logprob: -1.2470629215240479
    3. ',' → logprob: -1.7470629215240479
    4. '   ' → logprob: -6.872062683105469
    5. '):
' → logprob: -8.622062683105469
    6. ' ,' → logprob: -9.247062683105469
    7. ',i' → logprob: -9.247062683105469
    8. ' ):' → logprob: -10.747062683105469
    9. ',
' → logprob: -10.997062683105469
    10. ' ):
' → logprob: -11.122062683105469

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5022889971733093
    2. 'dp' → logprob: -1.752289056777954
    3. 'for' → logprob: -1.752289056777954
    4. ' for' → logprob: -3.377289056777954
    5. ' dp' → logprob: -4.502288818359375
    6. 'max' → logprob: -6.002288818359375
    7. ' max' → logprob: -8.752288818359375
    8. '```' → logprob: -9.877288818359375
    9. '	dp' → logprob: -10.127288818359375
    10. ' ' → logprob: -10.377288818359375

Token 264: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22741888463497162
    2. 'dp' (adapté à ' dp') → logprob: -1.7274188995361328
    3. 'max' → logprob: -4.477418899536133
    4. ' for' → logprob: -4.977418899536133
    5. '   ' → logprob: -5.352418899536133
    6. ' dp' → logprob: -6.602418899536133
    7. 'min' → logprob: -8.477418899536133
    8. 'best' → logprob: -8.727418899536133
    9. 'current' → logprob: -8.852418899536133
    10. 'j' → logprob: -8.852418899536133

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.875003814697266
    3. '[
' → logprob: -15.375003814697266
    4. ',i' → logprob: -15.375003814697266
    5. ',' → logprob: -15.875003814697266
    6. '[np' → logprob: -16.250003814697266
    7. '[I' → logprob: -16.375003814697266
    8. ' [' → logprob: -16.500003814697266
    9. '```' → logprob: -17.000003814697266
    10. 'i' → logprob: -17.125003814697266

Token 266: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005727555602788925
    2. ',i' → logprob: -5.630727767944336
    3. ' ,' → logprob: -6.505727767944336
    4. ']' → logprob: -8.130727767944336
    5. ' ' → logprob: -9.505727767944336
    6. ' -' → logprob: -9.755727767944336
    7. ',:' → logprob: -10.005727767944336
    8. ',np' → logprob: -10.505727767944336
    9. '-' → logprob: -10.630727767944336
    10. '][' → logprob: -11.005727767944336

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013899615034461021
    2. ' ' → logprob: -4.513899803161621
    3. ',' → logprob: -5.888899803161621
    4. '0' → logprob: -10.638899803161621
    5. '   ' → logprob: -11.138899803161621
    6. ' ,' → logprob: -11.638899803161621
    7. '<|end|>' → logprob: -11.763899803161621
    8. '  ' → logprob: -12.013899803161621
    9. '-' → logprob: -12.388899803161621
    10. ']' → logprob: -12.513899803161621

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018935515254270285
    2. ' ' → logprob: -9.250189781188965
    3. '0' → logprob: -9.500189781188965
    4. '   ' → logprob: -12.125189781188965
    5. ',' → logprob: -12.375189781188965
    6. 'np' → logprob: -12.875189781188965
    7. ':' → logprob: -13.375189781188965
    8. 'range' → logprob: -13.375189781188965
    9. '  ' → logprob: -14.500189781188965
    10. '-' → logprob: -14.750189781188965

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0667327418923378
    2. ']' → logprob: -2.94173264503479
    3. ',:' → logprob: -4.566732883453369
    4. ' ,' → logprob: -7.066732883453369
    5. ' ' → logprob: -9.316732406616211
    6. ' ]' → logprob: -9.691732406616211
    7. '   ' → logprob: -9.941732406616211
    8. ']=' → logprob: -10.066732406616211
    9. ' :]' → logprob: -10.191732406616211
    10. ',np' → logprob: -10.316732406616211

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37509626150131226
    2. ':' → logprob: -1.750096321105957
    3. ':]' → logprob: -2.500096321105957
    4. ':-' → logprob: -3.000096321105957
    5. '0' → logprob: -5.375096321105957
    6. ' :-' → logprob: -7.375096321105957
    7. ' ' → logprob: -7.500096321105957
    8. ' :]' → logprob: -7.625096321105957
    9. ' :' → logprob: -8.375096321105957
    10. '   ' → logprob: -8.875096321105957

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16452397406101227
    2. ':' → logprob: -2.5395240783691406
    3. ':]' → logprob: -3.1645240783691406
    4. ':-' → logprob: -3.5395240783691406
    5. '0' → logprob: -7.039524078369141
    6. ']' → logprob: -8.53952407836914
    7. 'np' → logprob: -9.53952407836914
    8. 'values' → logprob: -10.16452407836914
    9. ' :-' → logprob: -10.28952407836914
    10. ':)' → logprob: -10.28952407836914

Token 272: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0047190687619149685
    2. ']' → logprob: -5.504719257354736
    3. ':' → logprob: -7.754719257354736
    4. ':i' → logprob: -8.629718780517578
    5. ' :]' → logprob: -10.754718780517578
    6. '::' → logprob: -13.379718780517578
    7. ':-' → logprob: -13.629718780517578
    8. ':].' → logprob: -13.754718780517578
    9. ':],' → logprob: -14.004718780517578
    10. 'i' → logprob: -14.004718780517578

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20198167860507965
    2. ' =' → logprob: -1.7019816637039185
    3. '=np' → logprob: -7.826981544494629
    4. '[:]' → logprob: -10.201981544494629
    5. '[' → logprob: -10.451981544494629
    6. ' ' → logprob: -10.576981544494629
    7. 'np' → logprob: -10.826981544494629
    8. '+=' → logprob: -11.076981544494629
    9. '   ' → logprob: -11.701981544494629
    10. ']' → logprob: -11.951981544494629

Token 274: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.07919391244649887
    2. ' np' → logprob: -2.8291938304901123
    3. 'values' → logprob: -4.454194068908691
    4. ' values' → logprob: -5.704194068908691
    5. '   ' → logprob: -6.329194068908691
    6. 'dp' → logprob: -8.329194068908691
    7. ' dp' → logprob: -10.579194068908691
    8. ' ' → logprob: -10.954194068908691
    9. '    ' → logprob: -11.204194068908691
    10. 'max' → logprob: -11.329194068908691

Token 275: '.maximum' (ID: 128678)
  Prédit: '.maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.maximum' → logprob: -0.0013664272846654058
    2. 'maximum' → logprob: -6.62636661529541
    3. '.minimum' → logprob: -11.25136661529541
    4. '.' → logprob: -11.25136661529541
    5. '.c' → logprob: -11.37636661529541
    6. '.f' → logprob: -14.00136661529541
    7. ' maximum' → logprob: -15.00136661529541
    8. 'imum' → logprob: -15.12636661529541
    9. ' .' → logprob: -15.50136661529541
    10. '.am' → logprob: -15.62636661529541

Token 276: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.191489642835222e-05
    2. '(' → logprob: -10.125041961669922
    3. 'dp' → logprob: -14.125041961669922
    4. '(
' → logprob: -14.500041961669922
    5. ' (' → logprob: -15.250041961669922
    6. '(np' → logprob: -16.000041961669922
    7. '(update' → logprob: -16.500041961669922
    8. '(df' → logprob: -16.875041961669922
    9. '(dt' → logprob: -18.000041961669922
    10. '((' → logprob: -18.375041961669922

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6776029699249193e-05
    2. '[' → logprob: -10.87502670288086
    3. 'i' → logprob: -12.75002670288086
    4. '[
' → logprob: -13.00002670288086
    5. 'dp' → logprob: -13.75002670288086
    6. '[I' → logprob: -14.87502670288086
    7. ')' → logprob: -15.25002670288086
    8. '(i' → logprob: -16.12502670288086
    9. '
' → logprob: -16.25002670288086
    10. ' [' → logprob: -16.37502670288086

Token 278: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01820683293044567
    2. ' +' → logprob: -4.018206596374512
    3. ',' → logprob: -10.018206596374512
    4. '+,' → logprob: -12.643206596374512
    5. '[' → logprob: -13.018206596374512
    6. '+i' → logprob: -13.268206596374512
    7. '   ' → logprob: -13.768206596374512
    8. 'i' → logprob: -14.393206596374512
    9. ' ' → logprob: -14.643206596374512
    10. '<|end|>' → logprob: -14.768206596374512

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028256813529878855
    2. ' ' → logprob: -5.877825736999512
    3. '0' → logprob: -11.252825736999512
    4. ',' → logprob: -12.377825736999512
    5. '   ' → logprob: -13.252825736999512
    6. '[' → logprob: -14.377825736999512
    7. '  ' → logprob: -15.002825736999512
    8. 'i' → logprob: -15.440325736999512
    9. '```' → logprob: -16.190324783325195
    10. '    ' → logprob: -16.377824783325195

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004597439547069371
    2. ' ' → logprob: -8.375459671020508
    3. '0' → logprob: -8.500459671020508
    4. 'i' → logprob: -10.625459671020508
    5. '   ' → logprob: -14.875459671020508
    6. '
' → logprob: -15.250459671020508
    7. '  ' → logprob: -16.125459671020508
    8. ',' → logprob: -16.375459671020508
    9. '[i' → logprob: -16.437959671020508
    10. 'values' → logprob: -16.562959671020508

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.396757089532912e-05
    2. ' ,' → logprob: -10.2500638961792
    3. '1' → logprob: -11.7500638961792
    4. ' ' → logprob: -12.0000638961792
    5. 'i' → logprob: -12.3750638961792
    6. ']' → logprob: -12.7500638961792
    7. ',
' → logprob: -13.0000638961792
    8. '
' → logprob: -14.2500638961792
    9. '[' → logprob: -14.3750638961792
    10. '0' → logprob: -14.5000638961792

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027188193053007126
    2. ':-' → logprob: -3.652188301086426
    3. ',' → logprob: -7.527188301086426
    4. ' :-' → logprob: -8.777188301086426
    5. ':' → logprob: -9.527188301086426
    6. ' ' → logprob: -9.527188301086426
    7. '
' → logprob: -10.902188301086426
    8. '[:-' → logprob: -11.402188301086426
    9. '   ' → logprob: -11.652188301086426
    10. ':,' → logprob: -12.777188301086426

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07166287302970886
    2. ':-' → logprob: -2.6966629028320312
    3. ' :-' → logprob: -6.446662902832031
    4. ':' → logprob: -9.696662902832031
    5. ' ' → logprob: -10.196662902832031
    6. '[:-' → logprob: -11.196662902832031
    7. '
' → logprob: -11.321662902832031
    8. ',' → logprob: -12.321662902832031
    9. ':,' → logprob: -13.071662902832031
    10. '   ' → logprob: -13.071662902832031

Token 284: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.005704803857952356
    2. ':]' → logprob: -5.630704879760742
    3. ':,' → logprob: -6.630704879760742
    4. ':' → logprob: -7.380704879760742
    5. '],' → logprob: -8.880704879760742
    6. ',' → logprob: -11.255704879760742
    7. ':].' → logprob: -12.380704879760742
    8. ':-' → logprob: -13.380704879760742
    9. ']' → logprob: -14.255704879760742
    10. ':]

' → logprob: -14.755704879760742

Token 285: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.3133118152618408
    2. 'values' → logprob: -1.3133118152618408
    3. '   ' → logprob: -11.688311576843262
    4. 'dp' → logprob: -11.813311576843262
    5. '(values' → logprob: -11.813311576843262
    6. '	values' → logprob: -11.813311576843262
    7. ' dp' → logprob: -11.938311576843262
    8. '    ' → logprob: -12.688311576843262
    9. '.values' → logprob: -13.063311576843262
    10. ' ' → logprob: -13.188311576843262

Token 286: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009650575229898095
    2. ' )' → logprob: -7.000965118408203
    3. ')
' → logprob: -10.500965118408203
    4. '   ' → logprob: -11.375965118408203
    5. '[' → logprob: -12.375965118408203
    6. '<|end|>' → logprob: -13.000965118408203
    7. '+' → logprob: -13.500965118408203
    8. ' ' → logprob: -13.875965118408203
    9. ' +' → logprob: -14.375965118408203
    10. ',' → logprob: -14.500965118408203

Token 287: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3488841950893402
    2. 'process' → logprob: -1.2238842248916626
    3. 'def' → logprob: -9.098884582519531
    4. ' main' → logprob: -10.473884582519531
    5. ' initialize' → logprob: -10.473884582519531
    6. ' def' → logprob: -10.598884582519531
    7. ' update' → logprob: -10.973884582519531
    8. ' compute' → logprob: -10.973884582519531
    9. '	process' → logprob: -10.973884582519531
    10. 'update' → logprob: -11.098884582519531

Token 289: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00893929973244667
    2. '_left' → logprob: -4.758939266204834
    3. '_middle' → logprob: -9.508939743041992
    4. '_' → logprob: -9.508939743041992
    5. '_center' → logprob: -9.633939743041992
    6. 'right' → logprob: -10.758939743041992
    7. '_r' → logprob: -10.758939743041992
    8. '_down' → logprob: -11.633939743041992
    9. '_up' → logprob: -11.883939743041992
    10. '_mid' → logprob: -12.133939743041992

Token 290: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. '(df' → logprob: -15.62500286102295
    4. '(def' → logprob: -15.75000286102295
    5. ' (' → logprob: -16.000003814697266
    6. '(
' → logprob: -16.875003814697266
    7. 'dp' → logprob: -18.000003814697266
    8. '(dt' → logprob: -18.125003814697266
    9. '_dp' → logprob: -18.250003814697266
    10. '(ds' → logprob: -18.375003814697266

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.090760431718081e-05
    2. ' ,' → logprob: -9.375090599060059
    3. ',i' → logprob: -12.125090599060059
    4. '   ' → logprob: -15.750090599060059
    5. ')' → logprob: -16.500091552734375
    6. ',
' → logprob: -16.625091552734375
    7. 'def' → logprob: -16.750091552734375
    8. ',d' → logprob: -17.312591552734375
    9. '‌,' → logprob: -17.562591552734375
    10. ',int' → logprob: -18.000091552734375

Token 292: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08904111385345459
    2. 'i' → logprob: -2.464041233062744
    3. 'dp' → logprob: -10.839040756225586
    4. ' ' → logprob: -10.964040756225586
    5. '   ' → logprob: -11.214040756225586
    6. ' dp' → logprob: -11.464040756225586
    7. 'def' → logprob: -11.714040756225586
    8. ',' → logprob: -12.214040756225586
    9. '  ' → logprob: -12.339040756225586
    10. ')' → logprob: -12.464040756225586

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019376569252926856
    2. ' ,' → logprob: -8.62519359588623
    3. ',a' → logprob: -11.37519359588623
    4. 'a' → logprob: -14.25019359588623
    5. '   ' → logprob: -14.75019359588623
    6. ',i' → logprob: -15.00019359588623
    7. ',n' → logprob: -15.37519359588623
    8. '):' → logprob: -15.50019359588623
    9. ',d' → logprob: -16.000194549560547
    10. ',k' → logprob: -16.000194549560547

Token 294: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6716262102127075
    2. 'a' → logprob: -0.7966262102127075
    3. ' i' → logprob: -3.921626091003418
    4. 'i' → logprob: -4.046626091003418
    5. ' k' → logprob: -9.046626091003418
    6. ' n' → logprob: -9.046626091003418
    7. ' ' → logprob: -9.046626091003418
    8. 'k' → logprob: -9.046626091003418
    9. 'n' → logprob: -9.171626091003418
    10. 'dp' → logprob: -9.546626091003418

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009949409868568182
    2. ' ,' → logprob: -7.12599515914917
    3. ',k' → logprob: -8.625994682312012
    4. ',n' → logprob: -12.875994682312012
    5. ' k' → logprob: -13.000994682312012
    6. 'k' → logprob: -13.125994682312012
    7. ',i' → logprob: -14.125994682312012
    8. ')' → logprob: -14.375994682312012
    9. '   ' → logprob: -14.500994682312012
    10. ',
' → logprob: -15.000994682312012

Token 296: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4749744236469269
    2. ' k' → logprob: -0.9749743938446045
    3. ' n' → logprob: -7.724974632263184
    4. 'n' → logprob: -8.099974632263184
    5. 'np' → logprob: -11.099974632263184
    6. 'a' → logprob: -11.162474632263184
    7. ' ' → logprob: -11.412474632263184
    8. '1' → logprob: -11.474974632263184
    9. 'i' → logprob: -11.599974632263184
    10. ')' → logprob: -11.662474632263184

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001713590754661709
    2. ',n' → logprob: -9.375171661376953
    3. ' ,' → logprob: -9.375171661376953
    4. 'n' → logprob: -14.500171661376953
    5. ',
' → logprob: -15.500171661376953
    6. ',k' → logprob: -15.500171661376953
    7. '   ' → logprob: -16.125171661376953
    8. 'import' → logprob: -16.500171661376953
    9. '_,' → logprob: -16.750171661376953
    10. ',r' → logprob: -16.875171661376953

Token 298: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4287216067314148
    2. ' n' → logprob: -1.0537216663360596
    3. ',' → logprob: -12.30372142791748
    4. ')' → logprob: -13.05372142791748
    5. 'k' → logprob: -13.42872142791748
    6. ' ' → logprob: -13.55372142791748
    7. '   ' → logprob: -13.55372142791748
    8. ',n' → logprob: -13.55372142791748
    9. 'np' → logprob: -13.80372142791748
    10. '	n' → logprob: -13.80372142791748

Token 299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.508301317691803
    2. ',' → logprob: -1.3833012580871582
    3. '):' → logprob: -2.008301258087158
    4. '   ' → logprob: -4.383301258087158
    5. '):
' → logprob: -7.883301258087158
    6. ':' → logprob: -8.383301734924316
    7. ' ,' → logprob: -8.883301734924316
    8. ' ):
' → logprob: -9.633301734924316
    9. ')' → logprob: -9.758301734924316
    10. ',
' → logprob: -10.258301734924316

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5882691740989685
    2. 'values' → logprob: -0.8382691740989685
    3. ' values' → logprob: -4.463269233703613
    4. 'indices' → logprob: -7.713269233703613
    5. 'def' → logprob: -9.338269233703613
    6. 'left' → logprob: -10.213269233703613
    7. '	values' → logprob: -10.213269233703613
    8. 'right' → logprob: -10.338269233703613
    9. ' indices' → logprob: -10.838269233703613
    10. ' ' → logprob: -11.463269233703613

Token 301: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.0012272543972358108
    2. '   ' → logprob: -7.251227378845215
    3. 'indices' → logprob: -8.001227378845215
    4. ' values' → logprob: -8.876227378845215
    5. 'for' → logprob: -12.251227378845215
    6. 'def' → logprob: -12.251227378845215
    7. 'left' → logprob: -12.501227378845215
    8. '#' → logprob: -12.626227378845215
    9. 'vals' → logprob: -12.626227378845215
    10. 'right' → logprob: -12.751227378845215

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.326414108276367
    4. ',' → logprob: -15.951414108276367
    5. 's' → logprob: -16.951414108276367
    6. '=np' → logprob: -17.076414108276367
    7. '=create' → logprob: -17.826414108276367
    8. ')' → logprob: -18.576414108276367
    9. 'def' → logprob: -18.576414108276367
    10. '   ' → logprob: -18.576414108276367

Token 303: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.08901111781597137
    2. ' compute' → logprob: -2.4640111923217773
    3. ' ' → logprob: -10.714011192321777
    4. '-com' → logprob: -11.339011192321777
    5. 'np' → logprob: -12.214011192321777
    6. ' np' → logprob: -12.589011192321777
    7. ' -' → logprob: -12.589011192321777
    8. '   ' → logprob: -12.714011192321777
    9. 'process' → logprob: -12.714011192321777
    10. '.compute' → logprob: -12.839011192321777

Token 304: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00030817187507636845
    2. 'right' → logprob: -8.1253080368042
    3. '_left' → logprob: -11.6253080368042
    4. '_values' → logprob: -14.0003080368042
    5. '_' → logprob: -14.3753080368042
    6. 'Right' → logprob: -15.2503080368042
    7. '
' → logprob: -15.3753080368042
    8. '_RIGHT' → logprob: -15.6253080368042
    9. 'values' → logprob: -16.125308990478516
    10. '_r' → logprob: -16.375308990478516

Token 305: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.4121114822482923e-06
    2. 'values' → logprob: -12.875003814697266
    3. '(dp' → logprob: -14.875003814697266
    4. '_vals' → logprob: -15.375003814697266
    5. '_' → logprob: -16.000003814697266
    6. '_value' → logprob: -16.750003814697266
    7. 's' → logprob: -17.375003814697266
    8. '_indices' → logprob: -17.500003814697266
    9. '_left' → logprob: -17.500003814697266
    10. '(values' → logprob: -17.625003814697266

Token 306: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.088346359931165e-07
    2. 'dp' → logprob: -14.500000953674316
    3. '(' → logprob: -16.25
    4. ' (' → logprob: -16.875
    5. '(
' → logprob: -17.125
    6. '(def' → logprob: -17.875
    7. '(np' → logprob: -18.125
    8. '	dp' → logprob: -18.5
    9. '(df' → logprob: -18.625
    10. 'def' → logprob: -18.75

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010990150040015578
    2. '(dp' → logprob: -6.876099109649658
    3. ' ,' → logprob: -9.8760986328125
    4. '   ' → logprob: -12.1260986328125
    5. 'dp' → logprob: -12.2510986328125
    6. ' dp' → logprob: -13.0010986328125
    7. ')' → logprob: -14.0010986328125
    8. ',d' → logprob: -14.8760986328125
    9. ',
' → logprob: -15.0010986328125
    10. '	dp' → logprob: -15.3760986328125

Token 308: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01268057245761156
    2. ' i' → logprob: -4.387680530548096
    3. 'dp' → logprob: -9.012681007385254
    4. '   ' → logprob: -10.262681007385254
    5. ' dp' → logprob: -12.012681007385254
    6. ' ' → logprob: -12.887681007385254
    7. '  ' → logprob: -13.887681007385254
    8. '
' → logprob: -14.387681007385254
    9. ',' → logprob: -14.387681007385254
    10. ',i' → logprob: -14.887681007385254

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016599490481894463
    2. ' ,' → logprob: -8.875165939331055
    3. 'a' → logprob: -11.500165939331055
    4. '   ' → logprob: -12.250165939331055
    5. ',a' → logprob: -12.375165939331055
    6. ')' → logprob: -13.000165939331055
    7. ' a' → logprob: -14.250165939331055
    8. '+' → logprob: -14.375165939331055
    9. '```' → logprob: -14.500165939331055
    10. '[' → logprob: -15.250165939331055

Token 310: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03367290273308754
    2. ' a' → logprob: -3.40867280960083
    3. 'n' → logprob: -11.783673286437988
    4. ' ' → logprob: -12.283673286437988
    5. ' n' → logprob: -12.658673286437988
    6. 'i' → logprob: -12.658673286437988
    7. '   ' → logprob: -13.346173286437988
    8. 'k' → logprob: -13.408673286437988
    9. 'dp' → logprob: -14.033673286437988
    10. ' k' → logprob: -14.221173286437988

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.0536883615423e-05
    2. ',k' → logprob: -10.125080108642578
    3. ' ,' → logprob: -10.875080108642578
    4. ',n' → logprob: -11.000080108642578
    5. '   ' → logprob: -13.500080108642578
    6. '+' → logprob: -13.875080108642578
    7. '-' → logprob: -14.625080108642578
    8. ')' → logprob: -14.875080108642578
    9. 'import' → logprob: -15.500080108642578
    10. 'k' → logprob: -15.500080108642578

Token 312: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012515653856098652
    2. ' k' → logprob: -4.387515544891357
    3. 'n' → logprob: -13.137516021728516
    4. ' ' → logprob: -13.262516021728516
    5. '   ' → logprob: -14.387516021728516
    6. ' n' → logprob: -14.512516021728516
    7. 'np' → logprob: -15.262516021728516
    8. ',' → logprob: -15.825016021728516
    9. ')' → logprob: -16.012516021728516
    10. ' np' → logprob: -16.450016021728516

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008347623515874147
    2. ',n' → logprob: -7.500834941864014
    3. ' ,' → logprob: -8.250834465026855
    4. 'n' → logprob: -11.375834465026855
    5. '   ' → logprob: -13.250834465026855
    6. '+' → logprob: -13.625834465026855
    7. ')' → logprob: -14.000834465026855
    8. '),' → logprob: -14.125834465026855
    9. '```' → logprob: -14.375834465026855
    10. '-' → logprob: -14.500834465026855

Token 314: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11299236118793488
    2. ' n' → logprob: -2.237992286682129
    3. 'np' → logprob: -9.612992286682129
    4. '   ' → logprob: -10.362992286682129
    5. ' ' → logprob: -11.237992286682129
    6. ' np' → logprob: -11.362992286682129
    7. ',' → logprob: -11.737992286682129
    8. ')' → logprob: -11.987992286682129
    9. 'k' → logprob: -12.237992286682129
    10. '    ' → logprob: -12.362992286682129

Token 315: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39279302954673767
    2. ')' → logprob: -1.14279305934906
    3. '   ' → logprob: -5.51779317855835
    4. ',' → logprob: -6.51779317855835
    5. '):
' → logprob: -8.517792701721191
    6. ')
' → logprob: -9.142792701721191
    7. ' )
' → logprob: -10.142792701721191
    8. 'indices' → logprob: -11.017792701721191
    9. ' ' → logprob: -11.392792701721191
    10. '):' → logprob: -12.017792701721191

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06697269529104233
    2. 'indices' → logprob: -2.8169727325439453
    3. ' indices' → logprob: -5.566972732543945
    4. '
' → logprob: -7.066972732543945
    5. '    
' → logprob: -9.566972732543945
    6. '(indices' → logprob: -9.816972732543945
    7. '"indices' → logprob: -10.316972732543945
    8. '_indices' → logprob: -10.566972732543945
    9. 'def' → logprob: -10.691972732543945
    10. '.indices' → logprob: -11.066972732543945

Token 317: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.01116336602717638
    2. ' update' → logprob: -4.761163234710693
    3. '   ' → logprob: -6.636163234710693
    4. 'dp' → logprob: -6.761163234710693
    5. 'def' → logprob: -10.386163711547852
    6. ' dp' → logprob: -11.136163711547852
    7. 'updated' → logprob: -11.886163711547852
    8. '
' → logprob: -12.136163711547852
    9. ' ' → logprob: -12.636163711547852
    10. '  ' → logprob: -12.886163711547852

Token 318: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.054500666621607e-06
    2. 'right' → logprob: -13.62500286102295
    3. '_left' → logprob: -13.62500286102295
    4. 'Right' → logprob: -15.12500286102295
    5. '_' → logprob: -16.125003814697266
    6. '_r' → logprob: -16.375003814697266
    7. '_rhs' → logprob: -16.625003814697266
    8. '_RIGHT' → logprob: -16.875003814697266
    9. '_Right' → logprob: -17.250003814697266
    10. '
' → logprob: -18.125003814697266

Token 319: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. '(
' → logprob: -17.75
    4. '(df' → logprob: -18.5
    5. 'dp' → logprob: -19.0
    6. '	dp' → logprob: -20.375
    7. '(def' → logprob: -20.375
    8. ' (' → logprob: -20.375
    9. '(dt' → logprob: -20.625
    10. '(dispatch' → logprob: -20.75

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -13.25000286102295
    3. '(dp' → logprob: -14.62500286102295
    4. ',i' → logprob: -15.50000286102295
    5. 'dp' → logprob: -15.50000286102295
    6. ' dp' → logprob: -17.125001907348633
    7. ',d' → logprob: -17.125001907348633
    8. ',
' → logprob: -17.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. 'def' → logprob: -18.750001907348633

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021496564149857
    2. ' i' → logprob: -2.350214958190918
    3. 'dp' → logprob: -12.475214958190918
    4. '   ' → logprob: -13.100214958190918
    5. ' ' → logprob: -13.725214958190918
    6. ')' → logprob: -14.850214958190918
    7. ' dp' → logprob: -14.850214958190918
    8. '  ' → logprob: -15.350214958190918
    9. ')i' → logprob: -15.600214958190918
    10. ',i' → logprob: -16.475215911865234

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -9.875055313110352
    3. ',i' → logprob: -13.000055313110352
    4. '   ' → logprob: -13.500055313110352
    5. ')' → logprob: -16.00005531311035
    6. ',n' → logprob: -17.00005531311035
    7. ',d' → logprob: -17.12505531311035
    8. '  ' → logprob: -17.12505531311035
    9. ',v' → logprob: -17.25005531311035
    10. ',
' → logprob: -17.62505531311035

Token 323: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.6526893377304077
    2. 'values' → logprob: -0.7776893377304077
    3. 'i' → logprob: -4.277689456939697
    4. ' i' → logprob: -5.152689456939697
    5. ' ' → logprob: -8.902688980102539
    6. '   ' → logprob: -10.027688980102539
    7. 'dp' → logprob: -11.527688980102539
    8. 'a' → logprob: -11.902688980102539
    9. '  ' → logprob: -12.027688980102539
    10. '(values' → logprob: -12.277688980102539

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004827157128602266
    2. ')

' → logprob: -5.37982702255249
    3. ',' → logprob: -9.004827499389648
    4. 'def' → logprob: -9.754827499389648
    5. ')
' → logprob: -11.129827499389648
    6. '   ' → logprob: -12.379827499389648
    7. ' )' → logprob: -13.504827499389648
    8. ')i' → logprob: -13.629827499389648
    9. 'dp' → logprob: -13.754827499389648
    10. ')


' → logprob: -14.004827499389648

Token 325: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0921942703134846e-05
    2. '```' → logprob: -12.12501049041748
    3. ' def' → logprob: -13.00001049041748
    4. '
' → logprob: -13.50001049041748
    5. ')' → logprob: -14.25001049041748
    6. '<|end|>' → logprob: -15.50001049041748
    7. '[' → logprob: -15.62501049041748
    8. 'indices' → logprob: -16.125011444091797
    9. 'values' → logprob: -16.250011444091797
    10. ':def' → logprob: -16.250011444091797

Token 326: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -4.2987729102605954e-05
    2. ' compute' → logprob: -10.125042915344238
    3. 'process' → logprob: -13.125042915344238
    4. 'calculate' → logprob: -15.125042915344238
    5. 'get' → logprob: -15.250042915344238
    6. 'def' → logprob: -15.375042915344238
    7. '.compute' → logprob: -16.625043869018555
    8. 'computer' → logprob: -16.750043869018555
    9. '_compute' → logprob: -17.250043869018555
    10. '
' → logprob: -17.500043869018555

Token 327: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.054500666621607e-06
    2. 'right' → logprob: -13.00000286102295
    3. '_left' → logprob: -14.25000286102295
    4. '_' → logprob: -17.875003814697266
    5. '_rhs' → logprob: -18.125003814697266
    6. '_RIGHT' → logprob: -18.625003814697266
    7. '```' → logprob: -19.000003814697266
    8. '_r' → logprob: -19.125003814697266
    9. '_Right' → logprob: -19.375003814697266
    10. 'Right' → logprob: -19.500003814697266

Token 328: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.1472419600977446e-06
    2. 'values' → logprob: -13.875000953674316
    3. '_' → logprob: -16.500001907348633
    4. '_vals' → logprob: -17.250001907348633
    5. '(dp' → logprob: -17.375001907348633
    6. '_value' → logprob: -17.875001907348633
    7. '_indices' → logprob: -18.625001907348633
    8. '_VALUES' → logprob: -18.750001907348633
    9. '(values' → logprob: -19.250001907348633
    10. '_left' → logprob: -19.500001907348633

Token 329: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. ' (' → logprob: -18.125
    4. '(
' → logprob: -18.25
    5. '(def' → logprob: -18.875
    6. '(df' → logprob: -19.25
    7. 'dp' → logprob: -19.625
    8. '(d' → logprob: -19.625
    9. '(dt' → logprob: -21.25
    10. '	dp' → logprob: -21.25

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',i' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.500001907348633
    5. 'def' → logprob: -19.125001907348633
    6. '(i' → logprob: -19.125001907348633
    7. ',
' → logprob: -19.875001907348633
    8. '(dp' → logprob: -20.000001907348633
    9. '):' → logprob: -20.125001907348633
    10. ')' → logprob: -20.125001907348633

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12698322534561157
    2. ' i' → logprob: -2.126983165740967
    3. '   ' → logprob: -10.001983642578125
    4. ' ' → logprob: -12.751983642578125
    5. ',' → logprob: -13.376983642578125
    6. 'def' → logprob: -13.626983642578125
    7. '  ' → logprob: -13.876983642578125
    8. ',i' → logprob: -13.876983642578125
    9. ')' → logprob: -14.376983642578125
    10. '	i' → logprob: -14.501983642578125

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.000012397766113
    4. '):
' → logprob: -17.000011444091797
    5. ',a' → logprob: -17.125011444091797
    6. 'a' → logprob: -17.375011444091797
    7. ')' → logprob: -17.375011444091797
    8. ',n' → logprob: -17.625011444091797
    9. ',i' → logprob: -17.750011444091797
    10. ' ' → logprob: -18.250011444091797

Token 333: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02976912073791027
    2. ' a' → logprob: -3.5297691822052
    3. '   ' → logprob: -11.779768943786621
    4. 'n' → logprob: -12.779768943786621
    5. 'i' → logprob: -12.904768943786621
    6. 'k' → logprob: -13.279768943786621
    7. ' ' → logprob: -13.404768943786621
    8. '  ' → logprob: -14.654768943786621
    9. '	a' → logprob: -14.779768943786621
    10. ' n' → logprob: -15.154768943786621

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -11.625011444091797
    3. ',n' → logprob: -14.000011444091797
    4. ',k' → logprob: -14.375011444091797
    5. '   ' → logprob: -14.625011444091797
    6. '):
' → logprob: -15.750011444091797
    7. ' ' → logprob: -16.250011444091797
    8. ',a' → logprob: -16.750011444091797
    9. ',
' → logprob: -17.250011444091797
    10. '_,' → logprob: -17.375011444091797

Token 335: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05680881068110466
    2. ' k' → logprob: -2.9318087100982666
    3. 'a' → logprob: -6.431808948516846
    4. ' a' → logprob: -8.931808471679688
    5. ' ' → logprob: -9.306808471679688
    6. '   ' → logprob: -10.556808471679688
    7. ',' → logprob: -10.681808471679688
    8. 'n' → logprob: -11.056808471679688
    9. '  ' → logprob: -12.056808471679688
    10. 'i' → logprob: -12.181808471679688

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047845521476119757
    2. ',n' → logprob: -7.750478267669678
    3. ' ,' → logprob: -10.000478744506836
    4. '   ' → logprob: -13.375478744506836
    5. ',k' → logprob: -15.750478744506836
    6. ',a' → logprob: -16.125478744506836
    7. 'n' → logprob: -16.625478744506836
    8. ',r' → logprob: -16.625478744506836
    9. ',
' → logprob: -16.875478744506836
    10. ',b' → logprob: -17.000478744506836

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02328205481171608
    2. ' n' → logprob: -3.773282051086426
    3. 'k' → logprob: -10.398282051086426
    4. '   ' → logprob: -13.148282051086426
    5. ',' → logprob: -13.898282051086426
    6. ' ' → logprob: -14.148282051086426
    7. ',n' → logprob: -14.273282051086426
    8. ' k' → logprob: -14.523282051086426
    9. '	n' → logprob: -14.898282051086426
    10. 'a' → logprob: -15.023282051086426

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01783159375190735
    2. '   ' → logprob: -4.392831802368164
    3. '):' → logprob: -5.267831802368164
    4. ',' → logprob: -9.142831802368164
    5. '):
' → logprob: -10.392831802368164
    6. ' ):
' → logprob: -12.267831802368164
    7. ' ' → logprob: -13.017831802368164
    8. ':' → logprob: -13.142831802368164
    9. '):

' → logprob: -13.517831802368164
    10. '  ' → logprob: -13.642831802368164

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063323453068733215
    2. 'indices' → logprob: -5.1313323974609375
    3. ' indices' → logprob: -7.8813323974609375
    4. '       ' → logprob: -11.631332397460938
    5. '```' → logprob: -12.131332397460938
    6. 'indexes' → logprob: -12.881332397460938
    7. '    
' → logprob: -13.256332397460938
    8. '(indices' → logprob: -13.631332397460938
    9. '
' → logprob: -13.756332397460938
    10. '  ' → logprob: -14.131332397460938

Token 340: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' (adapté à ' indices') → logprob: -0.15069203078746796
    2. '   ' → logprob: -2.0256919860839844
    3. ' indices' → logprob: -4.900691986083984
    4. 'indexes' → logprob: -7.900691986083984
    5. 'inds' → logprob: -9.775691986083984
    6. 'n' → logprob: -10.400691986083984
    7. 'values' → logprob: -10.525691986083984
    8. 'idx' → logprob: -11.150691986083984
    9. 'index' → logprob: -11.650691986083984
    10. '  ' → logprob: -11.650691986083984

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14274254441261292
    2. '=' → logprob: -2.01774263381958
    3. '=np' → logprob: -10.017742156982422
    4. '   ' → logprob: -11.142742156982422
    5. ' ' → logprob: -13.517742156982422
    6. 'range' → logprob: -13.892742156982422
    7. 's' → logprob: -14.017742156982422
    8. '=n' → logprob: -14.017742156982422
    9. 'np' → logprob: -14.392742156982422
    10. 'n' → logprob: -14.517742156982422

Token 342: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.2812347710132599
    2. 'np' → logprob: -1.4062347412109375
    3. 'n' → logprob: -10.406234741210938
    4. ' ' → logprob: -10.906234741210938
    5. ' n' → logprob: -11.781234741210938
    6. '   ' → logprob: -12.406234741210938
    7. '=np' → logprob: -12.406234741210938
    8. '(np' → logprob: -12.531234741210938
    9. '  ' → logprob: -12.781234741210938
    10. '1' → logprob: -12.906234741210938

Token 343: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.00075602374272421
    2. 'ar' → logprob: -7.250755786895752
    3. 'range' → logprob: -11.00075626373291
    4. '.linspace' → logprob: -11.37575626373291
    5. 'array' → logprob: -11.75075626373291
    6. '.array' → logprob: -13.00075626373291
    7. 'np' → logprob: -13.00075626373291
    8. '```' → logprob: -13.50075626373291
    9. '
' → logprob: -14.00075626373291
    10. ' ar' → logprob: -14.25075626373291

Token 344: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08050244301557541
    2. '(' → logprob: -2.580502510070801
    3. '(i' → logprob: -7.080502510070801
    4. '(k' → logprob: -7.330502510070801
    5. 'n' → logprob: -9.4555025100708
    6. '1' → logprob: -11.0805025100708
    7. '(-' → logprob: -11.3305025100708
    8. 'k' → logprob: -13.3305025100708
    9. '((' → logprob: -13.7055025100708
    10. '(np' → logprob: -13.7055025100708

Token 345: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5346935391426086
    2. ')' → logprob: -1.6596934795379639
    3. '-' → logprob: -2.784693479537964
    4. '+' → logprob: -3.409693479537964
    5. ')
' → logprob: -3.534693479537964
    6. ')[' → logprob: -3.534693479537964
    7. ' ,' → logprob: -4.159693717956543
    8. ',n' → logprob: -4.284693717956543
    9. 'n' → logprob: -4.659693717956543
    10. ' +' → logprob: -4.909693717956543

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029840084607712924
    2. ' ' → logprob: -8.375298500061035
    3. 'k' → logprob: -10.250298500061035
    4. 'i' → logprob: -11.000298500061035
    5. '2' → logprob: -11.875298500061035
    6. '   ' → logprob: -12.875298500061035
    7. '-' → logprob: -13.000298500061035
    8. 'n' → logprob: -14.000298500061035
    9. '  ' → logprob: -14.750298500061035
    10. 'a' → logprob: -14.750298500061035

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011951648048125207
    2. 'i' → logprob: -9.25011920928955
    3. ' ' → logprob: -11.62511920928955
    4. '2' → logprob: -12.25011920928955
    5. 'k' → logprob: -12.25011920928955
    6. 'n' → logprob: -13.37511920928955
    7. '-' → logprob: -14.37511920928955
    8. '(i' → logprob: -14.37511920928955
    9. 'a' → logprob: -14.62511920928955
    10. '0' → logprob: -14.87511920928955

Token 348: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033448923379182816
    2. ' ,' → logprob: -3.6584489345550537
    3. ')' → logprob: -5.283448696136475
    4. ',-' → logprob: -6.908448696136475
    5. '-' → logprob: -8.158449172973633
    6. '+' → logprob: -8.408449172973633
    7. '0' → logprob: -8.783449172973633
    8. ' -' → logprob: -8.908449172973633
    9. ' +' → logprob: -9.783449172973633
    10. ')[' → logprob: -10.033449172973633

Token 349: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6124857664108276
    2. 'k' → logprob: -1.6124857664108276
    3. 'i' → logprob: -1.8624857664108276
    4. '0' → logprob: -2.487485885620117
    5. 'np' → logprob: -2.487485885620117
    6. 'n' → logprob: -2.987485885620117
    7. ' i' → logprob: -3.487485885620117
    8. ' ' → logprob: -3.862485885620117
    9. '(-' → logprob: -3.862485885620117
    10. '-' → logprob: -3.987485885620117

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08354221284389496
    2. ')' → logprob: -2.8335421085357666
    3. ' ,' → logprob: -4.083542346954346
    4. ')[' → logprob: -6.208542346954346
    5. ',-' → logprob: -7.208542346954346
    6. ')
' → logprob: -7.333542346954346
    7. '-' → logprob: -8.083541870117188
    8. ',n' → logprob: -8.208541870117188
    9. ' )' → logprob: -8.708541870117188
    10. '   ' → logprob: -9.333541870117188

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1509758085012436
    2. '-' → logprob: -2.0259757041931152
    3. '-n' → logprob: -6.275975704193115
    4. ' -' → logprob: -6.400975704193115
    5. ' n' → logprob: -6.525975704193115
    6. '0' → logprob: -6.775975704193115
    7. ',' → logprob: -7.025975704193115
    8. '
' → logprob: -8.275976181030273
    9. ')' → logprob: -8.400976181030273
    10. '2' → logprob: -9.213476181030273

Token 352: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.26050737500190735
    2. ')' → logprob: -1.510507345199585
    3. ')[' → logprob: -4.885507583618164
    4. '-' → logprob: -8.385507583618164
    5. ')

' → logprob: -8.385507583618164
    6. ' )
' → logprob: -8.885507583618164
    7. '[::-' → logprob: -9.260507583618164
    8. ',' → logprob: -9.635507583618164
    9. ')
' → logprob: -9.635507583618164
    10. '   ' → logprob: -10.010507583618164

Token 353: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04806305840611458
    2. '1' → logprob: -3.673063039779663
    3. 'i' → logprob: -4.298063278198242
    4. ')' → logprob: -6.298063278198242
    5. ' ' → logprob: -6.548063278198242
    6. 'k' → logprob: -6.798063278198242
    7. 'n' → logprob: -7.048063278198242
    8. '-i' → logprob: -8.048063278198242
    9. '(i' → logprob: -8.173063278198242
    10. '-' → logprob: -8.173063278198242

Token 354: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04164602607488632
    2. ')' → logprob: -4.0416460037231445
    3. ' -' → logprob: -4.7916460037231445
    4. '-i' → logprob: -4.7916460037231445
    5. ')
' → logprob: -5.6666460037231445
    6. ')[' → logprob: -6.1666460037231445
    7. '-k' → logprob: -8.416646003723145
    8. '-n' → logprob: -8.916646003723145
    9. '[' → logprob: -9.166646003723145
    10. '))' → logprob: -9.291646003723145

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03913984075188637
    2. 'i' → logprob: -3.289139747619629
    3. ' i' → logprob: -7.789139747619629
    4. ' ' → logprob: -7.914139747619629
    5. '(i' → logprob: -8.539139747619629
    6. '   ' → logprob: -9.914139747619629
    7. '2' → logprob: -10.914139747619629
    8. '(' → logprob: -11.039139747619629
    9. 'n' → logprob: -11.664139747619629
    10. '-' → logprob: -12.164139747619629

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04597357288002968
    2. 'i' → logprob: -3.545973539352417
    3. '-' → logprob: -4.295973777770996
    4. ' -' → logprob: -6.545973777770996
    5. '0' → logprob: -8.170973777770996
    6. '(i' → logprob: -8.545973777770996
    7. ' ' → logprob: -8.920973777770996
    8. '-i' → logprob: -9.045973777770996
    9. ' i' → logprob: -9.420973777770996
    10. '   ' → logprob: -9.795973777770996

Token 357: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8910848498344421
    2. '-' → logprob: -1.016084909439087
    3. ' -' → logprob: -2.266084909439087
    4. '-i' → logprob: -2.891084909439087
    5. ')
' → logprob: -3.016084909439087
    6. ')[' → logprob: -4.891084671020508
    7. '-k' → logprob: -6.016084671020508
    8. '-n' → logprob: -6.016084671020508
    9. '   ' → logprob: -6.266084671020508
    10. '[' → logprob: -6.641084671020508

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007023557089269161
    2. ' i' → logprob: -5.382023334503174
    3. '1' → logprob: -6.132023334503174
    4. '(i' → logprob: -9.632023811340332
    5. ' (' → logprob: -10.007023811340332
    6. '(' → logprob: -10.007023811340332
    7. ' ' → logprob: -10.257023811340332
    8. '   ' → logprob: -12.257023811340332
    9. ')' → logprob: -12.507023811340332
    10. '0' → logprob: -12.632023811340332

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49069684743881226
    2. ')
' → logprob: -0.9906968474388123
    3. ')[' → logprob: -4.490696907043457
    4. '[::-' → logprob: -6.115696907043457
    5. '-' → logprob: -6.615696907043457
    6. ' )
' → logprob: -8.115696907043457
    7. ' )' → logprob: -8.115696907043457
    8. '[' → logprob: -8.490696907043457
    9. ')

' → logprob: -8.615696907043457
    10. '   ' → logprob: -8.615696907043457

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037844041362404823
    2. '
' → logprob: -5.6287841796875
    3. 'prev' → logprob: -9.1287841796875
    4. '    
' → logprob: -10.3787841796875
    5. '```' → logprob: -10.6287841796875
    6. '[' → logprob: -12.1287841796875
    7. '[
' → logprob: -12.6287841796875
    8. ',' → logprob: -12.8787841796875
    9. ')' → logprob: -13.5037841796875
    10. ' prev' → logprob: -13.8787841796875

Token 361: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.07992415875196457
    2. '   ' → logprob: -2.9549241065979004
    3. ' prev' → logprob: -3.7049241065979004
    4. '	prev' → logprob: -9.954924583435059
    5. 'previous' → logprob: -10.829924583435059
    6. '  ' → logprob: -11.704924583435059
    7. '```' → logprob: -11.829924583435059
    8. 'diff' → logprob: -11.954924583435059
    9. ' ' → logprob: -12.079924583435059
    10. '
' → logprob: -12.204924583435059

Token 362: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0006846757605671883
    2. '[i' → logprob: -8.25068473815918
    3. 'values' → logprob: -8.25068473815918
    4. ' =' → logprob: -9.50068473815918
    5. '   ' → logprob: -9.75068473815918
    6. '[' → logprob: -11.50068473815918
    7. ' values' → logprob: -12.25068473815918
    8. '=' → logprob: -12.62568473815918
    9. '	values' → logprob: -13.12568473815918
    10. '_VALUES' → logprob: -13.25068473815918

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282528191804886
    2. '=' → logprob: -2.237825393676758
    3. '   ' → logprob: -13.362825393676758
    4. '[' → logprob: -14.987825393676758
    5. ',' → logprob: -14.987825393676758
    6. ' ' → logprob: -15.362825393676758
    7. '=
' → logprob: -15.862825393676758
    8. ' =
' → logprob: -16.237825393676758
    9. 'dp' → logprob: -16.362825393676758
    10. 's' → logprob: -16.487825393676758

Token 364: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5233029127120972
    2. ' dp' → logprob: -0.8983029127120972
    3. '   ' → logprob: -9.148303031921387
    4. 'np' → logprob: -10.523303031921387
    5. ' np' → logprob: -11.273303031921387
    6. '	dp' → logprob: -11.398303031921387
    7. '(dp' → logprob: -11.648303031921387
    8. ' ' → logprob: -11.648303031921387
    9. '  ' → logprob: -13.773303031921387
    10. '_dp' → logprob: -14.398303031921387

Token 365: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2842308680992573e-05
    2. '[' → logprob: -11.250022888183594
    3. 'i' → logprob: -12.625022888183594
    4. '[
' → logprob: -12.750022888183594
    5. '[n' → logprob: -13.375022888183594
    6. '[I' → logprob: -15.125022888183594
    7. '[-' → logprob: -15.250022888183594
    8. '[j' → logprob: -15.625022888183594
    9. ',i' → logprob: -15.750022888183594
    10. ' i' → logprob: -15.875022888183594

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009062222670763731
    2. ',i' → logprob: -7.750905990600586
    3. '[' → logprob: -8.375905990600586
    4. '[i' → logprob: -9.500905990600586
    5. '[:,' → logprob: -9.750905990600586
    6. ' ,' → logprob: -10.250905990600586
    7. '+' → logprob: -10.625905990600586
    8. 'i' → logprob: -10.875905990600586
    9. '   ' → logprob: -11.125905990600586
    10. '[:' → logprob: -12.500905990600586

Token 367: ' :-' (ID: 25415)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18447774648666382
    2. ':-' → logprob: -2.3094778060913086
    3. 'i' → logprob: -4.184477806091309
    4. 'n' → logprob: -4.559477806091309
    5. '-' → logprob: -4.559477806091309
    6. 'np' → logprob: -4.934477806091309
    7. 'indices' → logprob: -5.559477806091309
    8. ':n' → logprob: -5.809477806091309
    9. '-(' → logprob: -5.809477806091309
    10. ':' → logprob: -5.934477806091309

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018816311785485595
    2. '2' → logprob: -9.250187873840332
    3. '(' → logprob: -10.375187873840332
    4. 'i' → logprob: -10.500187873840332
    5. '-' → logprob: -11.750187873840332
    6. ' ' → logprob: -11.875187873840332
    7. 'n' → logprob: -12.375187873840332
    8. '   ' → logprob: -12.375187873840332
    9. '(i' → logprob: -12.625187873840332
    10. ']' → logprob: -13.375187873840332

Token 369: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5234886407852173
    2. ']' → logprob: -0.8984886407852173
    3. '   ' → logprob: -9.023488998413086
    4. ']
' → logprob: -9.523488998413086
    5. '-' → logprob: -10.023488998413086
    6. '][' → logprob: -10.023488998413086
    7. '[::-' → logprob: -10.648488998413086
    8. ']

' → logprob: -10.898488998413086
    9. '+' → logprob: -11.148488998413086
    10. ' ]
' → logprob: -11.523488998413086

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005110780242830515
    2. 'diff' → logprob: -5.505110740661621
    3. '
' → logprob: -7.130110740661621
    4. ' dif' → logprob: -8.880110740661621
    5. '    
' → logprob: -10.130110740661621
    6. '```' → logprob: -10.505110740661621
    7. ',' → logprob: -12.755110740661621
    8. ' diff' → logprob: -12.880110740661621
    9. '  ' → logprob: -13.005110740661621
    10. 'dif' → logprob: -13.005110740661621

Token 371: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22170354425907135
    2. '   ' → logprob: -2.09670352935791
    3. ' dif' → logprob: -2.59670352935791
    4. ' diff' → logprob: -7.84670352935791
    5. 'dif' (adapté à ' dif') → logprob: -7.97170352935791
    6. '
' → logprob: -8.72170352935791
    7. 'return' → logprob: -9.34670352935791
    8. 'abs' → logprob: -9.72170352935791
    9. 'offset' → logprob: -9.84670352935791
    10. 'd' → logprob: -9.84670352935791

Token 372: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0009049110230989754
    2. 'rs' → logprob: -8.25090503692627
    3. 'r' → logprob: -8.37590503692627
    4. 'ffs' → logprob: -8.37590503692627
    5. '   ' → logprob: -10.25090503692627
    6. 'ferences' → logprob: -10.37590503692627
    7. 'f' → logprob: -10.87590503692627
    8. 'fts' → logprob: -11.25090503692627
    9. 'qs' → logprob: -11.62590503692627
    10. ' fs' → logprob: -11.62590503692627

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268682897090912
    2. '=' → logprob: -2.0176868438720703
    3. '   ' → logprob: -11.89268684387207
    4. 's' → logprob: -13.51768684387207
    5. ' ' → logprob: -13.76768684387207
    6. '=np' → logprob: -14.39268684387207
    7. 'd' → logprob: -15.33018684387207
    8. '  ' → logprob: -15.70518684387207
    9. '2' → logprob: -15.83018684387207
    10. ')' → logprob: -16.08018684387207

Token 374: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.11134342849254608
    2. ' np' → logprob: -2.4863433837890625
    3. 'indices' → logprob: -4.2363433837890625
    4. 'k' → logprob: -5.1113433837890625
    5. ' indices' → logprob: -6.8613433837890625
    6. '(np' → logprob: -8.111343383789062
    7. ' k' → logprob: -8.486343383789062
    8. '[np' → logprob: -10.611343383789062
    9. 'indexes' → logprob: -11.361343383789062
    10. 'abs' → logprob: -11.486343383789062

Token 375: '.abs' (ID: 29974)
  Prédit: '.abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.abs' → logprob: -0.014179375022649765
    2. 'abs' → logprob: -4.264179229736328
    3. '.arange' → logprob: -12.139179229736328
    4. '.absolute' → logprob: -12.264179229736328
    5. '.maximum' → logprob: -13.764179229736328
    6. '.flip' → logprob: -13.764179229736328
    7. 'absolute' → logprob: -13.889179229736328
    8. ' abs' → logprob: -14.014179229736328
    9. '.minimum' → logprob: -14.389179229736328
    10. '(abs' → logprob: -14.764179229736328

Token 376: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.033797722309827805
    2. '(indices' → logprob: -3.5337977409362793
    3. '(np' → logprob: -6.533797740936279
    4. '(' → logprob: -6.908797740936279
    5. '((' → logprob: -7.408797740936279
    6. '(n' → logprob: -7.533797740936279
    7. 'k' → logprob: -9.033797264099121
    8. '(a' → logprob: -9.158797264099121
    9. '(ind' → logprob: -10.033797264099121
    10. '(i' → logprob: -10.033797264099121

Token 377: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42881500720977783
    2. '-' → logprob: -1.0538150072097778
    3. 'indices' → logprob: -9.553814888000488
    4. ' indices' → logprob: -10.553814888000488
    5. ' ' → logprob: -11.928814888000488
    6. '-ind' → logprob: -12.678814888000488
    7. '[' → logprob: -13.553814888000488
    8. '(indices' → logprob: -13.928814888000488
    9. ')' → logprob: -14.178814888000488
    10. ',' → logprob: -14.303814888000488

Token 378: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.31353774666786194
    2. ' indices' → logprob: -1.3135377168655396
    3. '(indices' → logprob: -8.93853759765625
    4. 'indexes' → logprob: -9.43853759765625
    5. '   ' → logprob: -10.56353759765625
    6. ' indexes' → logprob: -11.43853759765625
    7. 'np' → logprob: -11.43853759765625
    8. ' ' → logprob: -12.31353759765625
    9. ' (' → logprob: -12.68853759765625
    10. ' np' → logprob: -13.06353759765625

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006846087984740734
    2. ')
' → logprob: -5.006845951080322
    3. '   ' → logprob: -9.13184642791748
    4. '[' → logprob: -11.63184642791748
    5. ' )' → logprob: -11.63184642791748
    6. ')

' → logprob: -13.63184642791748
    7. ')
' → logprob: -13.88184642791748
    8. '[::-' → logprob: -14.63184642791748
    9. '[:-' → logprob: -14.63184642791748
    10. ' )
' → logprob: -15.25684642791748

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012106612848583609
    2. '
' → logprob: -9.500121116638184
    3. ' return' → logprob: -11.250121116638184
    4. '    
' → logprob: -11.375121116638184
    5. '```' → logprob: -11.625121116638184
    6. 'return' → logprob: -11.875121116638184
    7. ')' → logprob: -12.750121116638184
    8. '[' → logprob: -14.250121116638184
    9. '	return' → logprob: -14.625121116638184
    10. '  
' → logprob: -15.125121116638184

Token 381: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20305220782756805
    2. 'return' (adapté à ' return') → logprob: -2.328052282333374
    3. ' return' → logprob: -2.453052282333374
    4. '```' → logprob: -8.578052520751953
    5. '``' → logprob: -10.828052520751953
    6. '
' → logprob: -10.953052520751953
    7. ')' → logprob: -11.828052520751953
    8. '	return' → logprob: -12.078052520751953
    9. '[' → logprob: -13.078052520751953
    10. ')
' → logprob: -14.203052520751953

Token 382: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.16023793816566467
    2. ' prev' → logprob: -1.9102379083633423
    3. '(prev' → logprob: -11.660238265991211
    4. '	prev' → logprob: -13.410238265991211
    5. 'np' → logprob: -14.160238265991211
    6. ' ' → logprob: -14.285238265991211
    7. '   ' → logprob: -14.285238265991211
    8. '.prev' → logprob: -14.535238265991211
    9. '-prev' → logprob: -15.285238265991211
    10. '_prev' → logprob: -15.285238265991211

Token 383: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.961759259458631e-06
    2. 'values' → logprob: -12.250004768371582
    3. 'Values' → logprob: -16.2500057220459
    4. '_' → logprob: -17.6250057220459
    5. '_VALUES' → logprob: -17.7500057220459
    6. ' values' → logprob: -19.5000057220459
    7. '_value' → logprob: -20.1250057220459
    8. ' _' → logprob: -20.8750057220459
    9. 's' → logprob: -21.0000057220459
    10. '.values' → logprob: -21.6250057220459

Token 384: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07177804410457611
    2. '+' → logprob: -3.0717780590057373
    3. ' -' → logprob: -3.8217780590057373
    4. '-' → logprob: -7.196777820587158
    5. '[' → logprob: -8.446778297424316
    6. '   ' → logprob: -10.321778297424316
    7. '[-' → logprob: -11.946778297424316
    8. ')' → logprob: -11.946778297424316
    9. ' ' → logprob: -12.071778297424316
    10. ',' → logprob: -12.196778297424316

Token 385: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.20201069116592407
    2. '(-' → logprob: -1.7020106315612793
    3. ' (' → logprob: -7.827010631561279
    4. '(' → logprob: -8.827011108398438
    5. ' (+' → logprob: -11.452011108398438
    6. ' -' → logprob: -11.577011108398438
    7. ' ' → logprob: -11.577011108398438
    8. ' ((' → logprob: -12.452011108398438
    9. '-a' → logprob: -12.702011108398438
    10. 'a' → logprob: -12.702011108398438

Token 386: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014013137842994183
    2. ' a' → logprob: -8.875140190124512
    3. ' ' → logprob: -15.875140190124512
    4. '   ' → logprob: -16.750139236450195
    5. ')a' → logprob: -17.375139236450195
    6. '-a' → logprob: -17.625139236450195
    7. '	a' → logprob: -17.875139236450195
    8. '
' → logprob: -18.000139236450195
    9. ''a' → logprob: -18.250139236450195
    10. '```' → logprob: -18.375139236450195

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016265720478259027
    2. '*' → logprob: -9.000163078308105
    3. ')*' → logprob: -10.875163078308105
    4. ' *' → logprob: -11.750163078308105
    5. '*)' → logprob: -12.000163078308105
    6. ' )' → logprob: -12.125163078308105
    7. '[' → logprob: -15.000163078308105
    8. '#' → logprob: -15.875163078308105
    9. '）' → logprob: -16.87516212463379
    10. '')' → logprob: -17.12516212463379

Token 388: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6933743953704834
    2. ' *' → logprob: -0.6933743953704834
    3. ')' → logprob: -8.443374633789062
    4. '[' → logprob: -12.943374633789062
    5. '*d' → logprob: -13.318374633789062
    6. ' ' → logprob: -13.318374633789062
    7. '**' → logprob: -13.693374633789062
    8. ' ' → logprob: -14.068374633789062
    9. '*np' → logprob: -14.193374633789062
    10. 'def' → logprob: -14.193374633789062

Token 389: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1275007277727127
    2. ' dif' → logprob: -2.1275007724761963
    3. ' diff' → logprob: -8.002500534057617
    4. 'dif' → logprob: -9.002500534057617
    5. ' ' → logprob: -10.627500534057617
    6. 'd' → logprob: -10.877500534057617
    7. '   ' → logprob: -11.940000534057617
    8. '	d' → logprob: -12.002500534057617
    9. ' d' → logprob: -12.315000534057617
    10. '
' → logprob: -12.377500534057617

Token 390: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.045823566731997e-05
    2. 's' → logprob: -11.375020027160645
    3. 'ffs' → logprob: -12.750020027160645
    4. 'ferences' → logprob: -13.250020027160645
    5. ' fs' → logprob: -13.375020027160645
    6. 'cs' → logprob: -14.125020027160645
    7. 'qs' → logprob: -14.500020027160645
    8. 'f' → logprob: -14.500020027160645
    9. 'ks' → logprob: -15.500020027160645
    10. 'bs' → logprob: -15.875020027160645

Token 391: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00033534664544276893
    2. '
' → logprob: -8.625335693359375
    3. '```' → logprob: -9.625335693359375
    4. '<|end|>' → logprob: -9.625335693359375
    5. ')' → logprob: -11.125335693359375
    6. ' def' → logprob: -12.375335693359375
    7. '

' → logprob: -13.375335693359375
    8. '  
' → logprob: -14.125335693359375
    9. ':def' → logprob: -14.875335693359375
    10. '``' → logprob: -15.000335693359375

Token 392: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -12.625003814697266
    3. ' def' → logprob: -14.125003814697266
    4. ')' → logprob: -17.375003814697266
    5. '-def' → logprob: -18.125003814697266
    6. '<|end|>' → logprob: -18.250003814697266
    7. 'update' → logprob: -18.250003814697266
    8. '``' → logprob: -18.250003814697266
    9. 'ndef' → logprob: -18.750003814697266
    10. ':def' → logprob: -19.875003814697266

Token 393: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.38969457149505615
    2. ' update' → logprob: -1.1396945714950562
    3. 'process' → logprob: -6.264694690704346
    4. ' process' → logprob: -7.139694690704346
    5. 'compute' → logprob: -10.764694213867188
    6. ' main' → logprob: -11.264694213867188
    7. 'initialize' → logprob: -11.264694213867188
    8. 'apply' → logprob: -12.077194213867188
    9. 'main' → logprob: -12.139694213867188
    10. ' initialize' → logprob: -12.139694213867188

Token 394: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.0683535037969705e-05
    2. '_left' → logprob: -11.87501049041748
    3. '(dp' → logprob: -12.87501049041748
    4. 'right' → logprob: -15.25001049041748
    5. '_rhs' → logprob: -15.50001049041748
    6. '(_' → logprob: -15.75001049041748
    7. '_' → logprob: -16.375011444091797
    8. '_RIGHT' → logprob: -16.375011444091797
    9. '_r' → logprob: -16.375011444091797
    10. '_Right' → logprob: -16.500011444091797

Token 395: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. '(df' → logprob: -17.75
    4. '(
' → logprob: -19.375
    5. ' (' → logprob: -20.5
    6. 'dp' → logprob: -20.5
    7. '_dp' → logprob: -20.5
    8. '	dp' → logprob: -21.0
    9. '(def' → logprob: -21.375
    10. '(dt' → logprob: -21.5

Token 396: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.014183246530592442
    2. ',' → logprob: -4.264183044433594
    3. 'dp' → logprob: -11.389183044433594
    4. '   ' → logprob: -12.139183044433594
    5. ' dp' → logprob: -13.014183044433594
    6. '	dp' → logprob: -14.514183044433594
    7. ')' → logprob: -15.889183044433594
    8. ' (' → logprob: -16.514183044433594
    9. '_dp' → logprob: -17.389183044433594
    10. '(df' → logprob: -17.514183044433594

Token 397: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12694668769836426
    2. ' i' → logprob: -2.1269466876983643
    3. '   ' → logprob: -11.001946449279785
    4. ' ' → logprob: -13.501946449279785
    5. '  ' → logprob: -15.126946449279785
    6. '```' → logprob: -16.1269474029541
    7. '	i' → logprob: -16.5019474029541
    8. 'def' → logprob: -16.8769474029541
    9. ')' → logprob: -17.3769474029541
    10. '    ' → logprob: -17.5019474029541

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003589416155591607
    2. '(dp' → logprob: -8.000358581542969
    3. 'dp' → logprob: -10.875358581542969
    4. ' ,' → logprob: -13.000358581542969
    5. '   ' → logprob: -13.625358581542969
    6. ' dp' → logprob: -14.500358581542969
    7. '```' → logprob: -16.00035858154297
    8. ',
' → logprob: -16.12535858154297
    9. '(' → logprob: -16.25035858154297
    10. ')' → logprob: -16.50035858154297

Token 399: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.42518046498298645
    2. ' values' → logprob: -1.175180435180664
    3. 'i' → logprob: -3.425180435180664
    4. ' i' → logprob: -5.300180435180664
    5. ' ' → logprob: -10.800180435180664
    6. '   ' → logprob: -11.300180435180664
    7. ' dp' → logprob: -12.050180435180664
    8. 'dp' → logprob: -12.175180435180664
    9. '(values' → logprob: -13.050180435180664
    10. '	values' → logprob: -13.300180435180664

Token 400: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3755151033401489
    2. '):' → logprob: -1.250515103340149
    3. 'dp' → logprob: -4.500514984130859
    4. '   ' → logprob: -4.750514984130859
    5. '(dp' → logprob: -5.250514984130859
    6. ')' → logprob: -7.375514984130859
    7. ' dp' → logprob: -7.500514984130859
    8. ',' → logprob: -8.50051498413086
    9. '):
' → logprob: -8.87551498413086
    10. '):

' → logprob: -9.37551498413086

Token 401: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.042503371834754944
    2. '   ' → logprob: -3.2925033569335938
    3. ' dp' → logprob: -5.417503356933594
    4. '	dp' → logprob: -11.417503356933594
    5. '```' → logprob: -13.542503356933594
    6. '(dp' → logprob: -14.167503356933594
    7. '_dp' → logprob: -14.917503356933594
    8. ' ' → logprob: -16.042503356933594
    9. '  ' → logprob: -16.167503356933594
    10. '
' → logprob: -16.792503356933594

Token 402: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00014084660506341606
    2. '   ' → logprob: -9.000141143798828
    3. ' dp' → logprob: -11.000141143798828
    4. 'np' → logprob: -14.875141143798828
    5. '```' → logprob: -16.250141143798828
    6. '
' → logprob: -16.750141143798828
    7. '	dp' → logprob: -16.750141143798828
    8. 'for' → logprob: -17.625141143798828
    9. 'd' → logprob: -18.375141143798828
    10. 'max' → logprob: -18.500141143798828

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.000001907348633
    4. '[I' → logprob: -17.375001907348633
    5. ' [' → logprob: -18.875001907348633
    6. 'i' → logprob: -19.000001907348633
    7. '[int' → logprob: -19.000001907348633
    8. '```' → logprob: -19.250001907348633
    9. '[n' → logprob: -19.500001907348633
    10. '
' → logprob: -20.125001907348633

Token 404: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760583877563477
    2. ' +' → logprob: -0.8260583877563477
    3. '   ' → logprob: -9.451058387756348
    4. '[' → logprob: -10.826058387756348
    5. ',' → logprob: -11.451058387756348
    6. ' ' → logprob: -13.201058387756348
    7. '+,' → logprob: -13.326058387756348
    8. '1' → logprob: -13.701058387756348
    9. '
' → logprob: -13.701058387756348
    10. '+
' → logprob: -13.951058387756348

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021918986458331347
    2. ' ' → logprob: -6.12719202041626
    3. '   ' → logprob: -12.252191543579102
    4. ',' → logprob: -14.377191543579102
    5. '```' → logprob: -14.689691543579102
    6. '+' → logprob: -14.939691543579102
    7. '  ' → logprob: -15.064691543579102
    8. '
' → logprob: -16.5021915435791
    9. ')' → logprob: -17.3146915435791
    10. '0' → logprob: -17.5646915435791

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.500022888183594
    4. '2' → logprob: -16.125022888183594
    5. '```' → logprob: -16.500022888183594
    6. '  ' → logprob: -16.750022888183594
    7. '
' → logprob: -16.750022888183594
    8. '0' → logprob: -17.187522888183594
    9. '    ' → logprob: -18.187522888183594
    10. '     ' → logprob: -18.250022888183594

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004715450922958553
    2. ']' → logprob: -8.000471115112305
    3. ',:' → logprob: -10.000471115112305
    4. ' ,' → logprob: -10.250471115112305
    5. '[:,' → logprob: -11.000471115112305
    6. ':,' → logprob: -11.375471115112305
    7. ',:,' → logprob: -12.000471115112305
    8. ',:)' → logprob: -12.750471115112305
    9. ',
' → logprob: -12.875471115112305
    10. ',)' → logprob: -12.875471115112305

Token 408: ' :-' (ID: 25415)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029989173635840416
    2. ':-' → logprob: -3.654989242553711
    3. ' :-' → logprob: -6.779989242553711
    4. ' ' → logprob: -6.904989242553711
    5. ':' → logprob: -7.279989242553711
    6. ':]' → logprob: -8.029989242553711
    7. '0' → logprob: -8.404989242553711
    8. ' :' → logprob: -9.279989242553711
    9. ':)' → logprob: -10.029989242553711
    10. ' :]' → logprob: -10.404989242553711

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '   ' → logprob: -12.000011444091797
    3. '-' → logprob: -12.500011444091797
    4. '2' → logprob: -14.250011444091797
    5. ' ' → logprob: -14.375011444091797
    6. '```' → logprob: -16.375011444091797
    7. ' -' → logprob: -17.000011444091797
    8. '  ' → logprob: -17.375011444091797
    9. '    
' → logprob: -18.937511444091797
    10. '       ' → logprob: -19.000011444091797

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045307583059184253
    2. ' ]' → logprob: -8.000452995300293
    3. ']=' → logprob: -9.250452995300293
    4. '   ' → logprob: -11.375452995300293
    5. ')' → logprob: -11.750452995300293
    6. '=' → logprob: -14.375452995300293
    7. ',' → logprob: -15.375452995300293
    8. ' ' → logprob: -15.625452995300293
    9. ')]' → logprob: -15.875452995300293
    10. ':]' → logprob: -16.25045394897461

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023259222507476807
    2. ' =' → logprob: -3.773259162902832
    3. '   ' → logprob: -11.523259162902832
    4. '=np' → logprob: -12.648259162902832
    5. '=max' → logprob: -16.14826011657715
    6. 'max' → logprob: -16.27326011657715
    7. 'np' → logprob: -16.39826011657715
    8. '+=' → logprob: -16.77326011657715
    9. ' ' → logprob: -16.89826011657715
    10. '    ' → logprob: -17.02326011657715

Token 412: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.10021626949310303
    2. ' np' → logprob: -2.3502163887023926
    3. '   ' → logprob: -11.600215911865234
    4. '[np' → logprob: -16.100215911865234
    5. '(np' → logprob: -16.225215911865234
    6. '=np' → logprob: -16.475215911865234
    7. 'numpy' → logprob: -16.850215911865234
    8. ' ' → logprob: -16.975215911865234
    9. '    ' → logprob: -17.350215911865234
    10. 'max' → logprob: -17.475215911865234

Token 413: '.maximum' (ID: 128678)
  Prédit: '.maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.maximum' → logprob: -0.0015079588629305363
    2. 'maximum' → logprob: -6.501507759094238
    3. '.' → logprob: -12.626507759094238
    4. 'imum' → logprob: -13.251507759094238
    5. 'f' → logprob: -15.626507759094238
    6. '.clip' → logprob: -16.626508712768555
    7. '.Maximum' → logprob: -16.626508712768555
    8. 'np' → logprob: -16.876508712768555
    9. ' maximum' → logprob: -17.001508712768555
    10. '.f' → logprob: -17.126508712768555

Token 414: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.5332478142227046e-05
    2. 'dp' → logprob: -11.500015258789062
    3. '(' → logprob: -12.250015258789062
    4. '(
' → logprob: -15.375015258789062
    5. ' (' → logprob: -16.250015258789062
    6. '(df' → logprob: -17.250015258789062
    7. '	dp' → logprob: -17.750015258789062
    8. '   ' → logprob: -17.875015258789062
    9. ' dp' → logprob: -18.500015258789062
    10. '(dt' → logprob: -18.625015258789062

Token 415: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00395052507519722
    2. 'dp' → logprob: -6.003950595855713
    3. '(dp' → logprob: -7.128950595855713
    4. '[' → logprob: -7.378950595855713
    5. '[
' → logprob: -11.253950119018555
    6. ' dp' → logprob: -11.253950119018555
    7. '
' → logprob: -12.878950119018555
    8. '[d' → logprob: -12.878950119018555
    9. '(i' → logprob: -13.128950119018555
    10. '```' → logprob: -13.128950119018555

Token 416: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01976296678185463
    2. ' +' → logprob: -4.144762992858887
    3. '[i' → logprob: -5.644762992858887
    4. '[' → logprob: -9.019762992858887
    5. 'i' → logprob: -10.644762992858887
    6. '+i' → logprob: -10.769762992858887
    7. '   ' → logprob: -11.269762992858887
    8. '```' → logprob: -13.269762992858887
    9. ',' → logprob: -14.019762992858887
    10. ' [' → logprob: -14.394762992858887

Token 417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019245444855187088
    2. ' ' → logprob: -8.625192642211914
    3. 'i' → logprob: -11.750192642211914
    4. '   ' → logprob: -13.250192642211914
    5. '+' → logprob: -14.000192642211914
    6. '
' → logprob: -14.625192642211914
    7. '(i' → logprob: -14.812692642211914
    8. '```' → logprob: -14.937692642211914
    9. '  ' → logprob: -15.187692642211914
    10. ' i' → logprob: -15.687692642211914

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.375041007995605
    3. 'i' → logprob: -11.875041007995605
    4. '+' → logprob: -14.250041007995605
    5. '   ' → logprob: -14.562541007995605
    6. '
' → logprob: -15.187541007995605
    7. ',' → logprob: -15.312541007995605
    8. '[i' → logprob: -15.562541007995605
    9. '(i' → logprob: -15.812541007995605
    10. '```' → logprob: -16.12504005432129

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041148843592964113
    2. '[:-' → logprob: -8.375411033630371
    3. ' ,' → logprob: -9.625411033630371
    4. '[' → logprob: -9.625411033630371
    5. ',i' → logprob: -11.125411033630371
    6. '[:,' → logprob: -11.375411033630371
    7. '   ' → logprob: -12.500411033630371
    8. ',:' → logprob: -12.500411033630371
    9. '[:' → logprob: -12.875411033630371
    10. 'i' → logprob: -12.875411033630371

Token 420: ' :-' (ID: 25415)
  Prédit: ':-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.0019395847339183092
    2. ' :-' → logprob: -6.37693977355957
    3. '[:-' → logprob: -8.62693977355957
    4. '1' → logprob: -10.12693977355957
    5. '   ' → logprob: -12.12693977355957
    6. '
' → logprob: -12.25193977355957
    7. ':' → logprob: -12.37693977355957
    8. '0' → logprob: -13.00193977355957
    9. '```' → logprob: -15.50193977355957
    10. ',' → logprob: -15.50193977355957

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. '-' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.875024795532227
    4. '   ' → logprob: -15.750024795532227
    5. ']' → logprob: -15.875024795532227
    6. ' -' → logprob: -16.750024795532227
    7. '
' → logprob: -17.125024795532227
    8. '```' → logprob: -18.250024795532227
    9. '  ' → logprob: -18.750024795532227
    10. '2' → logprob: -18.750024795532227

Token 422: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12705819308757782
    2. '],' → logprob: -2.127058267593384
    3. ' ,' → logprob: -9.252058029174805
    4. '),' → logprob: -11.377058029174805
    5. ' ],' → logprob: -11.502058029174805
    6. '   ' → logprob: -11.877058029174805
    7. ']' → logprob: -12.627058029174805
    8. '},' → logprob: -14.627058029174805
    9. ',),' → logprob: -15.002058029174805
    10. '‌,' → logprob: -15.252058029174805

Token 423: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.2519337236881256
    2. 'values' → logprob: -1.5019336938858032
    3. '(values' → logprob: -13.126934051513672
    4. '	values' → logprob: -13.751934051513672
    5. '   ' → logprob: -14.501934051513672
    6. '.values' → logprob: -14.751934051513672
    7. 'value' → logprob: -15.626934051513672
    8. ' ' → logprob: -15.876934051513672
    9. '_values' → logprob: -16.501934051513672
    10. '-values' → logprob: -16.501934051513672

Token 424: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -13.625022888183594
    4. '   ' → logprob: -15.750022888183594
    5. ')

' → logprob: -16.375022888183594
    6. '[' → logprob: -18.500022888183594
    7. '))' → logprob: -18.625022888183594
    8. ')return' → logprob: -18.750022888183594
    9. '}' → logprob: -19.250022888183594
    10. ')
' → logprob: -19.250022888183594

Token 425: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004881130997091532
    2. '<|end|>' → logprob: -5.504880905151367
    3. '#' → logprob: -7.379880905151367
    4. '```' → logprob: -9.129880905151367
    5. ')' → logprob: -10.504880905151367
    6. 'for' → logprob: -11.379880905151367
    7. '...' → logprob: -11.879880905151367
    8. '<|end|>' → logprob: -12.004880905151367
    9. ' def' → logprob: -12.379880905151367
    10. '[' → logprob: -12.629880905151367

Token 426: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18200333416461945
    2. ' solve' → logprob: -2.6820032596588135
    3. 'main' → logprob: -2.9320032596588135
    4. 'solve' → logprob: -4.307003498077393
    5. ' max' → logprob: -5.057003498077393
    6. ' process' → logprob: -5.307003498077393
    7. 'max' → logprob: -5.682003498077393
    8. ' maximize' → logprob: -5.807003498077393
    9. ' find' → logprob: -6.057003498077393
    10. 'process' → logprob: -6.182003498077393

Token 427: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.43284091353416443
    2. '_left' → logprob: -1.8078409433364868
    3. '(dp' → logprob: -2.3078408241271973
    4. '_max' → logprob: -3.8078408241271973
    5. 'dp' → logprob: -4.432840824127197
    6. '_heap' → logprob: -4.557840824127197
    7. '_right' → logprob: -5.182840824127197
    8. '_values' → logprob: -5.557840824127197
    9. '_all' → logprob: -5.807840824127197
    10. '_' → logprob: -5.807840824127197

Token 428: '_with' (ID: 14161)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -10.62502670288086
    3. '(h' → logprob: -14.12502670288086
    4. ' (' → logprob: -15.00002670288086
    5. '(df' → logprob: -15.00002670288086
    6. '(i' → logprob: -15.12502670288086
    7. '(d' → logprob: -15.37502670288086
    8. 'dp' → logprob: -16.87502670288086
    9. '(def' → logprob: -17.00002670288086
    10. '(n' → logprob: -17.37502670288086

Token 429: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.58223956823349
    2. 'heap' → logprob: -1.4572396278381348
    3. '(h' → logprob: -2.2072396278381348
    4. '(heap' → logprob: -2.9572396278381348
    5. '(a' → logprob: -3.9572396278381348
    6. '_left' → logprob: -5.082239627838135
    7. 'left' → logprob: -6.207239627838135
    8. '_h' → logprob: -6.457239627838135
    9. '_push' → logprob: -6.457239627838135
    10. '_value' → logprob: -6.582239627838135

Token 430: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.029776528477668762
    2. '(h' → logprob: -3.5297765731811523
    3. '(' → logprob: -11.029776573181152
    4. '(d' → logprob: -12.904776573181152
    5. ' (' → logprob: -13.529776573181152
    6. '(def' → logprob: -13.654776573181152
    7. '(n' → logprob: -13.904776573181152
    8. '(df' → logprob: -13.904776573181152
    9. '(heap' → logprob: -14.029776573181152
    10. '(i' → logprob: -14.529776573181152

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024275471514556557
    2. ',h' → logprob: -8.500243186950684
    3. ' ,' → logprob: -10.250243186950684
    4. '(h' → logprob: -13.625243186950684
    5. ',
' → logprob: -14.125243186950684
    6. '   ' → logprob: -14.500243186950684
    7. 'h' → logprob: -15.000243186950684
    8. '):' → logprob: -15.250243186950684
    9. ',n' → logprob: -15.500243186950684
    10. ',d' → logprob: -15.750243186950684

Token 432: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.27173736691474915
    2. ' h' → logprob: -1.6467373371124268
    3. 'i' → logprob: -3.5217373371124268
    4. ' i' → logprob: -5.021737575531006
    5. 'n' → logprob: -6.146737575531006
    6. 'a' → logprob: -6.271737575531006
    7. 'dp' → logprob: -6.896737575531006
    8. ' n' → logprob: -6.896737575531006
    9. 'heap' → logprob: -7.021737575531006
    10. ' a' → logprob: -7.396737575531006

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002444125711917877
    2. '):' → logprob: -9.000244140625
    3. '):
' → logprob: -9.625244140625
    4. ',i' → logprob: -11.000244140625
    5. ' ,' → logprob: -11.250244140625
    6. '   ' → logprob: -11.750244140625
    7. ',h' → logprob: -12.500244140625
    8. ',
' → logprob: -13.125244140625
    9. ',n' → logprob: -13.125244140625
    10. 'def' → logprob: -13.375244140625

Token 434: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4138658940792084
    2. ' a' → logprob: -2.288865804672241
    3. 'i' → logprob: -2.538865804672241
    4. 'n' → logprob: -2.913865804672241
    5. 'dp' → logprob: -2.913865804672241
    6. ' n' → logprob: -4.28886604309082
    7. ' dp' → logprob: -4.41386604309082
    8. ' i' → logprob: -4.41386604309082
    9. 'h' → logprob: -5.41386604309082
    10. 'k' → logprob: -5.53886604309082

Token 435: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10797069221735
    2. ',' → logprob: -2.857970714569092
    3. '):
' → logprob: -3.107970714569092
    4. '):
' → logprob: -8.982970237731934
    5. '   ' → logprob: -9.232970237731934
    6. ')' → logprob: -10.607970237731934
    7. '):

' → logprob: -11.857970237731934
    8. ':' → logprob: -12.732970237731934
    9. ' ,' → logprob: -12.732970237731934
    10. ' ):' → logprob: -12.732970237731934

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06308392435312271
    2. 'for' → logprob: -2.9380838871002197
    3. ' for' → logprob: -4.938084125518799
    4. 'while' → logprob: -7.563084125518799
    5. 'i' → logprob: -8.18808364868164
    6. ' i' → logprob: -9.31308364868164
    7. ' while' → logprob: -10.06308364868164
    8. 'dp' → logprob: -10.68808364868164
    9. 'if' → logprob: -11.06308364868164
    10. 'def' → logprob: -11.81308364868164

Token 437: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1957186758518219
    2. 'while' → logprob: -1.8207186460494995
    3. 'dp' → logprob: -4.945718765258789
    4. 'temp' → logprob: -6.320718765258789
    5. 'if' → logprob: -6.445718765258789
    6. '   ' → logprob: -6.570718765258789
    7. 'i' → logprob: -6.695718765258789
    8. 'new' → logprob: -6.820718765258789
    9. 'h' → logprob: -7.570718765258789
    10. ' for' → logprob: -7.695718765258789

Token 438: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5481354594230652
    2. ' _' → logprob: -0.9231354594230652
    3. '_' → logprob: -4.173135280609131
    4. 'i' → logprob: -4.923135280609131
    5. '_i' → logprob: -7.173135280609131
    6. 'step' → logprob: -8.423135757446289
    7. ' ' → logprob: -8.798135757446289
    8. ' step' → logprob: -9.298135757446289
    9. '   ' → logprob: -9.423135757446289
    10. ' j' → logprob: -9.923135757446289

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01821678690612316
    2. 'in' → logprob: -4.018216609954834
    3. ',' → logprob: -10.393217086791992
    4. ' ' → logprob: -10.393217086791992
    5. 'n' → logprob: -14.143217086791992
    6. '   ' → logprob: -14.143217086791992
    7. 'range' → logprob: -14.143217086791992
    8. ')' → logprob: -14.393217086791992
    9. '```' → logprob: -15.018217086791992
    10. '_' → logprob: -15.143217086791992

Token 440: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004623087588697672
    2. ' range' → logprob: -5.379622936248779
    3. '   ' → logprob: -13.879623413085938
    4. ' ' → logprob: -14.004623413085938
    5. '  ' → logprob: -15.379623413085938
    6. '(range' → logprob: -15.379623413085938
    7. 'h' → logprob: -15.754623413085938
    8. '	range' → logprob: -15.879623413085938
    9. '
' → logprob: -16.129623413085938
    10. ')' → logprob: -16.629623413085938

Token 441: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004102265927940607
    2. '(' → logprob: -5.5041022300720215
    3. 'n' → logprob: -11.37910270690918
    4. '(len' → logprob: -11.50410270690918
    5. '(h' → logprob: -14.25410270690918
    6. ' n' → logprob: -14.37910270690918
    7. ' (' → logprob: -14.75410270690918
    8. '(
' → logprob: -15.00410270690918
    9. '1' → logprob: -16.37910270690918
    10. ',n' → logprob: -16.75410270690918

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1288031041622162
    2. '):
' → logprob: -2.128803014755249
    3. '+' → logprob: -6.753803253173828
    4. '-' → logprob: -8.378803253173828
    5. ' ):' → logprob: -8.378803253173828
    6. '   ' → logprob: -9.253803253173828
    7. ' +' → logprob: -10.003803253173828
    8. ')' → logprob: -10.128803253173828
    9. ',' → logprob: -10.878803253173828
    10. ' -' → logprob: -11.003803253173828

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5755443572998047
    2. '   ' → logprob: -0.9505443572998047
    3. ',' → logprob: -3.9505443572998047
    4. 'a' → logprob: -4.075544357299805
    5. '_,' → logprob: -4.825544357299805
    6. 'value' → logprob: -6.700544357299805
    7. ' a' → logprob: -6.950544357299805
    8. ' if' → logprob: -7.075544357299805
    9. ' value' → logprob: -7.575544357299805
    10. ' ,' → logprob: -7.700544357299805

Token 444: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3136770725250244
    2. 'value' → logprob: -2.0636770725250244
    3. 'val' → logprob: -2.5636770725250244
    4. '   ' → logprob: -3.4386770725250244
    5. 'if' → logprob: -3.9386770725250244
    6. 'neg' → logprob: -5.063676834106445
    7. 'while' → logprob: -5.813676834106445
    8. '(-' → logprob: -7.188676834106445
    9. 'v' → logprob: -7.438676834106445
    10. '_,' → logprob: -7.438676834106445

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01855900138616562
    2. '_val' → logprob: -4.643558979034424
    3. '_value' → logprob: -5.393558979034424
    4. 'a' → logprob: -6.643558979034424
    5. ' =' → logprob: -7.393558979034424
    6. '=' → logprob: -7.643558979034424
    7. 'value' → logprob: -8.268559455871582
    8. '_neg' → logprob: -8.268559455871582
    9. '_list' → logprob: -8.893559455871582
    10. 'val' → logprob: -8.893559455871582

Token 446: ' k' (ID: 372)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.245139479637146
    2. ' idx' → logprob: -1.870139479637146
    3. 'index' → logprob: -2.8701395988464355
    4. ' index' → logprob: -5.6201395988464355
    5. 'pos' → logprob: -6.8701395988464355
    6. 'j' → logprob: -7.8701395988464355
    7. 'k' → logprob: -8.245139122009277
    8. 'i' → logprob: -8.370139122009277
    9. '_idx' → logprob: -8.620139122009277
    10. ' pos' → logprob: -8.870139122009277

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048594411462545395
    2. ' =' → logprob: -3.0485944747924805
    3. '   ' → logprob: -12.92359447479248
    4. '=_' → logprob: -13.54859447479248
    5. ')' → logprob: -14.29859447479248
    6. '=
' → logprob: -14.29859447479248
    7. ')=' → logprob: -15.54859447479248
    8. ' ' → logprob: -15.79859447479248
    9. 'he' → logprob: -15.79859447479248
    10. '=item' → logprob: -16.048593521118164

Token 448: ' pop' (ID: 2735)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0732627883553505
    2. '-he' → logprob: -3.3232626914978027
    3. ' he' → logprob: -4.198262691497803
    4. '-' → logprob: -4.573262691497803
    5. '(-' → logprob: -5.573262691497803
    6. '   ' → logprob: -5.948262691497803
    7. ' -' → logprob: -6.448262691497803
    8. 'h' → logprob: -7.198262691497803
    9. ' (-' → logprob: -8.573263168334961
    10. '-h' → logprob: -9.448263168334961

Token 449: '_from' (ID: 12526)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.10218487679958344
    2. 'ush' → logprob: -3.352184772491455
    3. 'h' → logprob: -3.727184772491455
    4. 'he' → logprob: -4.477184772491455
    5. 'heap' → logprob: -4.602184772491455
    6. 'p' → logprob: -5.227184772491455
    7. ' =' → logprob: -6.477184772491455
    8. '_from' → logprob: -6.727184772491455
    9. 'e' → logprob: -6.852184772491455
    10. 'from' → logprob: -7.102184772491455

Token 450: '_heap' (ID: 88741)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6944907307624817
    2. 'heap' → logprob: -0.6944907307624817
    3. '_heap' → logprob: -6.944490909576416
    4. 'he' → logprob: -8.444490432739258
    5. ' heap' → logprob: -9.069490432739258
    6. '(heap' → logprob: -10.569490432739258
    7. '(h' → logprob: -11.444490432739258
    8. ' h' → logprob: -11.694490432739258
    9. '
' → logprob: -13.819490432739258
    10. 'hq' → logprob: -14.569490432739258

Token 451: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.4736459888808895e-05
    2. ' (' → logprob: -11.750014305114746
    3. 'h' → logprob: -13.250014305114746
    4. '(' → logprob: -13.500014305114746
    5. ')' → logprob: -13.625014305114746
    6. '(heap' → logprob: -14.250014305114746
    7. ' h' → logprob: -15.000014305114746
    8. '(
' → logprob: -15.375014305114746
    9. 's' → logprob: -15.500014305114746
    10. ',' → logprob: -15.625014305114746

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4302413761615753
    2. ')
' → logprob: -1.055241346359253
    3. ')
' → logprob: -6.680241584777832
    4. '()' → logprob: -9.305241584777832
    5. '())
' → logprob: -9.430241584777832
    6. ')

' → logprob: -10.430241584777832
    7. '()
' → logprob: -10.555241584777832
    8. '   ' → logprob: -10.805241584777832
    9. '())' → logprob: -11.180241584777832
    10. ' )
' → logprob: -12.180241584777832

Token 453: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1022802591323853
    2. '()
' → logprob: -1.2272802591323853
    3. '()' → logprob: -1.4772802591323853
    4. '
' → logprob: -2.7272801399230957
    5. 'he' → logprob: -4.227280139923096
    6. '       ' → logprob: -4.727280139923096
    7. '(
' → logprob: -4.977280139923096
    8. 'a' → logprob: -4.977280139923096
    9. 'def' → logprob: -5.352280139923096
    10. ' he' → logprob: -5.352280139923096

Token 454: ' process' (ID: 2273)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2224863767623901
    2. 'dp' → logprob: -1.8474863767623901
    3. ' a' → logprob: -2.0974864959716797
    4. '   ' → logprob: -2.3474864959716797
    5. ' dp' → logprob: -2.5974864959716797
    6. '       ' → logprob: -2.8474864959716797
    7. 'def' → logprob: -3.0974864959716797
    8. 'process' (adapté à ' process') → logprob: -3.3474864959716797
    9. 'he' → logprob: -3.7224864959716797
    10. ' he' → logprob: -3.8474864959716797

Token 455: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.9385402993066236e-05
    2. '_right' → logprob: -11.000019073486328
    3. 'left' → logprob: -12.875019073486328
    4. '_' → logprob: -17.250019073486328
    5. '```' → logprob: -18.250019073486328
    6. '_le' → logprob: -18.375019073486328
    7. '_LEFT' → logprob: -18.750019073486328
    8. 'Left' → logprob: -18.875019073486328
    9. '_Left' → logprob: -19.250019073486328
    10. ')_' → logprob: -19.875019073486328

Token 456: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.375005722045898
    3. ' (' → logprob: -14.375005722045898
    4. '(
' → logprob: -14.375005722045898
    5. 'dp' → logprob: -15.250005722045898
    6. '(df' → logprob: -17.5000057220459
    7. '```' → logprob: -17.6250057220459
    8. '	dp' → logprob: -17.7500057220459
    9. '(dt' → logprob: -18.2500057220459
    10. '(dispatch' → logprob: -18.8750057220459

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007356545538641512
    2. ' ,' → logprob: -7.625735759735107
    3. ',i' → logprob: -8.62573528289795
    4. '       ' → logprob: -10.00073528289795
    5. '(i' → logprob: -11.87573528289795
    6. '   ' → logprob: -12.25073528289795
    7. ',d' → logprob: -12.62573528289795
    8. '(' → logprob: -13.50073528289795
    9. ',n' → logprob: -13.62573528289795
    10. ',k' → logprob: -14.12573528289795

Token 458: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141500234603882
    2. 'i' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.701415061950684
    4. '   ' → logprob: -14.951415061950684
    5. '	i' → logprob: -15.201415061950684
    6. ',i' → logprob: -15.951415061950684
    7. ',' → logprob: -16.201414108276367
    8. ')i' → logprob: -16.326414108276367
    9. '<|end|>' → logprob: -16.701414108276367
    10. ')' → logprob: -16.826414108276367

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005293765105307102
    2. ' ,' → logprob: -5.255293846130371
    3. '   ' → logprob: -10.880293846130371
    4. ')' → logprob: -11.130293846130371
    5. '       ' → logprob: -11.255293846130371
    6. ',i' → logprob: -13.005293846130371
    7. ',k' → logprob: -13.130293846130371
    8. ' ' → logprob: -13.255293846130371
    9. '),' → logprob: -13.755293846130371
    10. '    ' → logprob: -13.880293846130371

Token 460: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18666821718215942
    2. ' a' → logprob: -1.8116681575775146
    3. ' -' → logprob: -5.686668395996094
    4. '-' → logprob: -7.061668395996094
    5. '-a' → logprob: -7.061668395996094
    6. 'i' → logprob: -7.186668395996094
    7. 'k' → logprob: -8.186668395996094
    8. ' i' → logprob: -9.061668395996094
    9. 'n' → logprob: -9.436668395996094
    10. '(-' → logprob: -9.436668395996094

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008003585040569305
    2. ' ,' → logprob: -5.0080037117004395
    3. ',k' → logprob: -6.7580037117004395
    4. ' k' → logprob: -9.633003234863281
    5. 'k' → logprob: -9.883003234863281
    6. '   ' → logprob: -12.508003234863281
    7. ' ' → logprob: -14.008003234863281
    8. ')' → logprob: -14.258003234863281
    9. '+' → logprob: -14.508003234863281
    10. ' +' → logprob: -14.633003234863281

Token 462: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25192973017692566
    2. ' k' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.25192928314209
    4. '   ' → logprob: -15.75192928314209
    5. '
' → logprob: -16.376930236816406
    6. ')' → logprob: -17.001930236816406
    7. '	k' → logprob: -17.001930236816406
    8. '    ' → logprob: -17.751930236816406
    9. '  ' → logprob: -18.251930236816406
    10. ',' → logprob: -18.501930236816406

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006973040290176868
    2. ',n' → logprob: -7.500697135925293
    3. ' ,' → logprob: -8.875697135925293
    4. '   ' → logprob: -13.000697135925293
    5. 'n' → logprob: -14.375697135925293
    6. ')' → logprob: -14.500697135925293
    7. '```' → logprob: -15.500697135925293
    8. '),' → logprob: -15.500697135925293
    9. '       ' → logprob: -16.25069808959961
    10. 's' → logprob: -16.37569808959961

Token 464: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759414434432983
    2. ' n' → logprob: -0.8259414434432983
    3. ')' → logprob: -14.32594108581543
    4. '   ' → logprob: -14.45094108581543
    5. ' ' → logprob: -15.07594108581543
    6. ')n' → logprob: -15.20094108581543
    7. '	n' → logprob: -15.57594108581543
    8. '
' → logprob: -16.82594108581543
    9. ',' → logprob: -17.70094108581543
    10. '(n' → logprob: -17.82594108581543

Token 465: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20934434235095978
    2. ')' → logprob: -1.7093443870544434
    3. '       ' → logprob: -5.084344387054443
    4. ',' → logprob: -6.584344387054443
    5. '   ' → logprob: -8.209343910217285
    6. ')
' → logprob: -10.709343910217285
    7. ')

' → logprob: -10.959343910217285
    8. ' )
' → logprob: -12.584343910217285
    9. ',)
' → logprob: -13.459343910217285
    10. ' ' → logprob: -13.834343910217285

Token 466: '       ' (ID: 309)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.8020209074020386
    2. '```' → logprob: -1.1770209074020386
    3. '
' → logprob: -2.927021026611328
    4. '\n' → logprob: -3.177021026611328
    5. '   ' → logprob: -3.302021026611328
    6. '\' → logprob: -3.677021026611328
    7. 'def' → logprob: -4.177021026611328
    8. ' process' → logprob: -4.302021026611328
    9. '<|end|>' → logprob: -4.427021026611328
    10. '    
' → logprob: -4.427021026611328

Token 467: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.24625666439533234
    2. ' process' → logprob: -1.996256709098816
    3. '       ' → logprob: -2.4962565898895264
    4. '	process' → logprob: -10.621256828308105
    5. '   ' → logprob: -11.246256828308105
    6. ' ' → logprob: -12.746256828308105
    7. '.process' → logprob: -14.371256828308105
    8. '```' → logprob: -14.996256828308105
    9. '        
' → logprob: -15.371256828308105
    10. '_process' → logprob: -15.371256828308105

Token 468: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -4.246537173457909e-06
    2. '_left' → logprob: -12.625003814697266
    3. 'right' → logprob: -14.500003814697266
    4. ' _' → logprob: -16.250003814697266
    5. '_RIGHT' → logprob: -16.625003814697266
    6. '_r' → logprob: -17.125003814697266
    7. '_' → logprob: -17.375003814697266
    8. 'Right' → logprob: -17.500003814697266
    9. '_Right' → logprob: -17.500003814697266
    10. '_rhs' → logprob: -18.500003814697266

Token 469: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(
' → logprob: -18.375
    5. '(df' → logprob: -18.75
    6. '	dp' → logprob: -20.0
    7. ',' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. 'dp' → logprob: -20.875
    10. '(dt' → logprob: -20.875

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020833229646086693
    2. '(dp' → logprob: -3.8958332538604736
    3. ' ,' → logprob: -8.270833015441895
    4. ')' → logprob: -11.145833015441895
    5. '(' → logprob: -12.145833015441895
    6. 'dp' → logprob: -12.270833015441895
    7. ' dp' → logprob: -12.520833015441895
    8. ',
' → logprob: -13.020833015441895
    9. '   ' → logprob: -13.145833015441895
    10. '	dp' → logprob: -13.645833015441895

Token 471: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029751643538475037
    2. ' i' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.529751777648926
    4. ' ' → logprob: -15.279751777648926
    5. '  ' → logprob: -16.02975082397461
    6. 'dp' → logprob: -16.40475082397461
    7. ')i' → logprob: -16.52975082397461
    8. '	i' → logprob: -16.65475082397461
    9. '[i' → logprob: -17.27975082397461
    10. '(i' → logprob: -17.40475082397461

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004045394714921713
    2. '(dp' → logprob: -5.629045486450195
    3. ' ,' → logprob: -7.754045486450195
    4. ')' → logprob: -11.879045486450195
    5. ' dp' → logprob: -13.004045486450195
    6. '(' → logprob: -13.129045486450195
    7. ' (' → logprob: -13.629045486450195
    8. 'dp' → logprob: -13.629045486450195
    9. ',
' → logprob: -14.254045486450195
    10. '   ' → logprob: -14.254045486450195

Token 473: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25209948420524597
    2. ' i' → logprob: -1.5020995140075684
    3. 'a' → logprob: -9.00209903717041
    4. ' ' → logprob: -11.37709903717041
    5. ' a' → logprob: -11.37709903717041
    6. '   ' → logprob: -11.50209903717041
    7. 'dp' → logprob: -12.62709903717041
    8. ',' → logprob: -13.25209903717041
    9. 'n' → logprob: -13.25209903717041
    10. '  ' → logprob: -13.25209903717041

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001835141738411039
    2. ' ,' → logprob: -8.62518310546875
    3. ',k' → logprob: -12.62518310546875
    4. ',n' → logprob: -15.62518310546875
    5. ')' → logprob: -15.75018310546875
    6. ',i' → logprob: -16.00018310546875
    7. ',h' → logprob: -16.37518310546875
    8. '   ' → logprob: -16.62518310546875
    9. ',
' → logprob: -17.25018310546875
    10. '```' → logprob: -17.50018310546875

Token 475: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0619698166847229
    2. ' k' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.936969757080078
    4. ',' → logprob: -15.186969757080078
    5. 'n' → logprob: -15.436969757080078
    6. ' n' → logprob: -16.186969757080078
    7. ',k' → logprob: -16.186969757080078
    8. ')' → logprob: -16.436969757080078
    9. '	k' → logprob: -16.436969757080078
    10. '   ' → logprob: -16.561969757080078

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014585316239390522
    2. ',n' → logprob: -9.12514591217041
    3. ' ,' → logprob: -10.25014591217041
    4. ')' → logprob: -14.62514591217041
    5. 'n' → logprob: -15.00014591217041
    6. ',h' → logprob: -15.25014591217041
    7. '```' → logprob: -16.000144958496094
    8. ',
' → logprob: -16.250144958496094
    9. 'def' → logprob: -16.500144958496094
    10. '   ' → logprob: -16.875144958496094

Token 477: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34847790002822876
    2. ' n' → logprob: -1.223477840423584
    3. ')' → logprob: -11.473478317260742
    4. ',' → logprob: -12.348478317260742
    5. ')n' → logprob: -12.348478317260742
    6. ' ' → logprob: -12.598478317260742
    7. ',n' → logprob: -13.348478317260742
    8. '	n' → logprob: -13.348478317260742
    9. 'i' → logprob: -13.723478317260742
    10. '   ' → logprob: -13.848478317260742

Token 478: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005019200034439564
    2. ')
' → logprob: -7.625502109527588
    3. '       ' → logprob: -12.12550163269043
    4. '   ' → logprob: -12.12550163269043
    5. ')

' → logprob: -13.62550163269043
    6. ' )' → logprob: -13.87550163269043
    7. '<|end|>' → logprob: -14.62550163269043
    8. ')return' → logprob: -16.50050163269043
    9. ')
' → logprob: -16.75050163269043
    10. '))' → logprob: -16.87550163269043

Token 479: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0825330838561058
    2. '[' → logprob: -3.332533121109009
    3. '(' → logprob: -3.582533121109009
    4. 'he' → logprob: -5.08253288269043
    5. ':' → logprob: -6.08253288269043
    6. 'a' → logprob: -6.20753288269043
    7. '(
' → logprob: -6.58253288269043
    8. '   ' → logprob: -7.20753288269043
    9. ')' → logprob: -7.33253288269043
    10. '[]' → logprob: -7.33253288269043

Token 480: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.1035827025771141
    2. ' pop' → logprob: -2.3535826206207275
    3. ' he' → logprob: -6.353582859039307
    4. 'he' → logprob: -6.978582859039307
    5. 'push' → logprob: -8.103582382202148
    6. 'heap' → logprob: -9.603582382202148
    7. ' push' → logprob: -9.853582382202148
    8. 'p' → logprob: -9.978582382202148
    9. 'h' → logprob: -10.103582382202148
    10. 'populate' → logprob: -10.603582382202148

Token 481: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -3.2378600735682994e-05
    2. 'from' → logprob: -10.375032424926758
    3. '_to' → logprob: -14.000032424926758
    4. '(heap' → logprob: -16.625032424926758
    5. '_FROM' → logprob: -16.625032424926758
    6. '(h' → logprob: -17.250032424926758
    7. '   ' → logprob: -17.500032424926758
    8. 'def' → logprob: -17.500032424926758
    9. ' from' → logprob: -18.125032424926758
    10. 'heap' → logprob: -18.375032424926758

Token 482: '_heap' (ID: 88741)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.048654817044734955
    2. '_heap' → logprob: -3.048654794692993
    3. 'he' → logprob: -9.673654556274414
    4. ' heap' → logprob: -13.048654556274414
    5. '(heap' → logprob: -13.673654556274414
    6. 'h' → logprob: -14.048654556274414
    7. 'Heap' → logprob: -15.173654556274414
    8. '.heap' → logprob: -16.923654556274414
    9. 'hp' → logprob: -17.548654556274414
    10. '_he' → logprob: -18.173654556274414

Token 483: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.750001907348633
    3. '(heap' → logprob: -13.875001907348633
    4. '(
' → logprob: -15.750001907348633
    5. ' (' → logprob: -16.375001907348633
    6. 'def' → logprob: -16.625001907348633
    7. 'h' → logprob: -19.375001907348633
    8. '(ht' → logprob: -20.000001907348633
    9. '((' → logprob: -20.750001907348633
    10. '```' → logprob: -20.750001907348633

Token 484: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761916041374207
    2. '):' → logprob: -0.8261916041374207
    3. ')' → logprob: -8.576191902160645
    4. '():
' → logprob: -10.451191902160645
    5. '):
' → logprob: -10.701191902160645
    6. '):

' → logprob: -12.201191902160645
    7. '():' → logprob: -12.451191902160645
    8. '()' → logprob: -13.826191902160645
    9. '   ' → logprob: -14.326191902160645
    10. ' ):
' → logprob: -14.701191902160645

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027843154966831207
    2. 'a' → logprob: -6.377784252166748
    3. 'return' → logprob: -7.877784252166748
    4. '```' → logprob: -8.127784729003906
    5. 'he' → logprob: -9.377784729003906
    6. ' return' → logprob: -9.502784729003906
    7. 'value' → logprob: -9.627784729003906
    8. ' a' → logprob: -10.002784729003906
    9. 'neg' → logprob: -10.377784729003906
    10. '  ' → logprob: -10.752784729003906

Token 486: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004974135663360357
    2. 'val' → logprob: -6.254974365234375
    3. 'value' → logprob: -6.754974365234375
    4. 'return' (adapté à ' return') → logprob: -7.254974365234375
    5. '   ' → logprob: -7.879974365234375
    6. 'neg' → logprob: -8.129974365234375
    7. 'v' → logprob: -9.004974365234375
    8. ' a' → logprob: -9.129974365234375
    9. 'he' → logprob: -9.254974365234375
    10. 'x' → logprob: -9.379974365234375

Token 487: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04466553404927254
    2. '(-' → logprob: -3.419665575027466
    3. ' he' → logprob: -4.919665336608887
    4. '((-' → logprob: -7.044665336608887
    5. '-he' → logprob: -7.044665336608887
    6. ' (-' → logprob: -7.294665336608887
    7. 'tuple' → logprob: -7.794665336608887
    8. '-' → logprob: -8.044665336608887
    9. 'neg' → logprob: -9.044665336608887
    10. '(' → logprob: -9.419665336608887

Token 488: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.961759259458631e-06
    2. 'ap' → logprob: -12.250004768371582
    3. 'a' → logprob: -16.2500057220459
    4. ' app' → logprob: -17.2500057220459
    5. '(app' → logprob: -18.3750057220459
    6. 'q' → logprob: -19.0000057220459
    7. '	app' → logprob: -19.0000057220459
    8. '```' → logprob: -19.2500057220459
    9. 'appt' → logprob: -19.5000057220459
    10. 'pp' → logprob: -19.7500057220459

Token 489: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -9.088346359931165e-07
    2. 'o' → logprob: -14.125000953674316
    3. 'оп' → logprob: -16.75
    4. 'p' → logprob: -17.125
    5. 'opp' → logprob: -17.75
    6. '[' → logprob: -18.125
    7. '(op' → logprob: -18.25
    8. 'pop' → logprob: -18.5
    9. '   ' → logprob: -18.75
    10. '

' → logprob: -18.75

Token 490: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. 'h' → logprob: -15.75
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -17.875
    5. '()' → logprob: -19.625
    6. '(
' → logprob: -21.25
    7. ' h' → logprob: -21.5
    8. '[h' → logprob: -22.0
    9. '(H' → logprob: -22.375
    10. '	h' → logprob: -22.375

Token 491: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. '())' → logprob: -11.250020027160645
    3. ')[' → logprob: -12.500020027160645
    4. '()' → logprob: -13.375020027160645
    5. ')
' → logprob: -13.875020027160645
    6. ' )' → logprob: -14.500020027160645
    7. '))' → logprob: -16.500019073486328
    8. ').' → logprob: -18.000019073486328
    9. ')#' → logprob: -18.375019073486328
    10. ')return' → logprob: -18.750019073486328

Token 492: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6526136994361877
    2. 'main' → logprob: -0.7776136994361877
    3. 'max' → logprob: -5.652613639831543
    4. 'calculate' → logprob: -6.152613639831543
    5. ' max' → logprob: -6.527613639831543
    6. 'create' → logprob: -6.527613639831543
    7. 'run' → logprob: -6.527613639831543
    8. 'process' → logprob: -6.902613639831543
    9. 'initialize' → logprob: -7.027613639831543
    10. ' create' → logprob: -7.027613639831543

Token 494: '_result' (ID: 11623)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.264836847782135
    2. '_best' → logprob: -1.6398367881774902
    3. '_dp' → logprob: -4.76483678817749
    4. '_opt' → logprob: -4.88983678817749
    5. 'max' → logprob: -5.01483678817749
    6. '_top' → logprob: -5.26483678817749
    7. '_next' → logprob: -6.26483678817749
    8. '_result' → logprob: -6.63983678817749
    9. '_final' → logprob: -6.63983678817749
    10. '_n' → logprob: -6.88983678817749

Token 495: '_from' (ID: 12526)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00011534435179783031
    2. '(' → logprob: -9.125115394592285
    3. ' (' → logprob: -12.500115394592285
    4. '(def' → logprob: -13.750115394592285
    5. '(
' → logprob: -14.375115394592285
    6. '(df' → logprob: -14.750115394592285
    7. '(max' → logprob: -15.875115394592285
    8. 'dp' → logprob: -16.12511444091797
    9. 'def' → logprob: -16.37511444091797
    10. '(d' → logprob: -17.12511444091797

Token 496: '_dp' (ID: 133252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008422649116255343
    2. '(dp' → logprob: -7.250842094421387
    3. '_dp' → logprob: -9.000842094421387
    4. ' dp' → logprob: -12.125842094421387
    5. '
' → logprob: -13.750842094421387
    6. 'def' → logprob: -13.875842094421387
    7. '```' → logprob: -14.500842094421387
    8. 'DP' → logprob: -14.875842094421387
    9. '	dp' → logprob: -15.000842094421387
    10. 'Dp' → logprob: -15.875842094421387

Token 497: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.125003814697266
    3. ' (' → logprob: -13.500003814697266
    4. 'dp' → logprob: -16.125003814697266
    5. '(df' → logprob: -17.750003814697266
    6. '(def' → logprob: -18.000003814697266
    7. '(
' → logprob: -18.000003814697266
    8. 'def' → logprob: -18.625003814697266
    9. ' dp' → logprob: -18.625003814697266
    10. '	dp' → logprob: -19.500003814697266

Token 498: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933486461639404
    2. '):' → logprob: -0.6933486461639404
    3. '):
' → logprob: -9.44334888458252
    4. ',' → logprob: -9.56834888458252
    5. ')' → logprob: -10.56834888458252
    6. ' ):' → logprob: -11.19334888458252
    7. '):

' → logprob: -12.19334888458252
    8. ' ):
' → logprob: -12.19334888458252
    9. '   ' → logprob: -13.31834888458252
    10. ' ' → logprob: -15.69334888458252

Token 499: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009678296744823456
    2. ' return' → logprob: -5.634678363800049
    3. '   ' → logprob: -5.884678363800049
    4. 'np' → logprob: -6.384678363800049
    5. 'max' → logprob: -7.009678363800049
    6. 'result' → logprob: -7.509678363800049
    7. '```' → logprob: -9.13467788696289
    8. 'dp' → logprob: -10.63467788696289
    9. ' np' → logprob: -12.88467788696289
    10. ' max' → logprob: -13.25967788696289

Token 500: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011559356935322285
    2. 'result' → logprob: -7.251155853271484
    3. 'max' → logprob: -8.501155853271484
    4. ' return' → logprob: -8.751155853271484
    5. 'np' → logprob: -9.501155853271484
    6. 'dp' → logprob: -12.251155853271484
    7. '   ' → logprob: -13.126155853271484
    8. 'res' → logprob: -13.501155853271484
    9. 'final' → logprob: -15.251155853271484
    10. 'import' → logprob: -15.376155853271484

Token 501: ' extract' (ID: 13424)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.18775369226932526
    2. 'dp' → logprob: -1.937753677368164
    3. ' np' → logprob: -3.687753677368164
    4. ' dp' → logprob: -6.312753677368164
    5. 'int' → logprob: -8.187753677368164
    6. ' int' → logprob: -11.187753677368164
    7. 'max' → logprob: -11.437753677368164
    8. '(np' → logprob: -12.562753677368164
    9. ' ' → logprob: -12.687753677368164
    10. '(dp' → logprob: -13.812753677368164

Token 502: '_max' (ID: 13731)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.2138404846191406
    2. '_max' → logprob: -1.2138404846191406
    3. 'dp' → logprob: -1.3388404846191406
    4. '_dp' → logprob: -2.5888404846191406
    5. '_result' → logprob: -3.2138404846191406
    6. 'max' → logprob: -4.588840484619141
    7. '(dp' → logprob: -5.588840484619141
    8. '(np' → logprob: -5.713840484619141
    9. '_best' → logprob: -6.088840484619141
    10. '_np' → logprob: -6.213840484619141

Token 503: '_from' (ID: 12526)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0017308680107817054
    2. 'imum' → logprob: -6.876730918884277
    3. '_value' → logprob: -8.001730918884277
    4. 'dp' → logprob: -8.376730918884277
    5. '(np' → logprob: -9.376730918884277
    6. '(' → logprob: -10.876730918884277
    7. 'value' → logprob: -11.376730918884277
    8. 'inum' → logprob: -12.626730918884277
    9. '(D' → logprob: -13.626730918884277
    10. '_' → logprob: -13.751730918884277

Token 504: '_last' (ID: 26359)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0037405795883387327
    2. '(dp' → logprob: -5.7537407875061035
    3. ' dp' → logprob: -7.5037407875061035
    4. '	dp' → logprob: -12.128740310668945
    5. '
' → logprob: -13.378740310668945
    6. 'np' → logprob: -13.878740310668945
    7. '_dp' → logprob: -13.878740310668945
    8. '```' → logprob: -14.253740310668945
    9. 'numpy' → logprob: -14.878740310668945
    10. '

' → logprob: -14.878740310668945

Token 505: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.06590228527784348
    2. '(dp' → logprob: -3.0659022331237793
    3. 'row' → logprob: -4.315902233123779
    4. 'dp' → logprob: -5.940902233123779
    5. '_dp' → logprob: -7.815902233123779
    6. '_line' → logprob: -8.065902709960938
    7. ' row' → logprob: -9.315902709960938
    8. '
' → logprob: -9.440902709960938
    9. ' dp' → logprob: -10.190902709960938
    10. 'Row' → logprob: -10.190902709960938

Token 506: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005923516000621021
    2. '(np' → logprob: -7.625592231750488
    3. 'dp' → logprob: -9.625592231750488
    4. '(' → logprob: -10.875592231750488
    5. '(max' → logprob: -11.750592231750488
    6. 'def' → logprob: -12.750592231750488
    7. ' (' → logprob: -13.125592231750488
    8. '(def' → logprob: -13.750592231750488
    9. '[np' → logprob: -13.875592231750488
    10. '(
' → logprob: -14.000592231750488

Token 507: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011487496085464954
    2. '(dp' → logprob: -4.5114874839782715
    3. '[' → logprob: -8.63648796081543
    4. 'dp' → logprob: -8.88648796081543
    5. ',' → logprob: -10.38648796081543
    6. '   ' → logprob: -10.38648796081543
    7. ')
' → logprob: -10.88648796081543
    8. '(' → logprob: -11.01148796081543
    9. ' )' → logprob: -12.13648796081543
    10. '())' → logprob: -12.63648796081543

Token 508: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.77627644513268e-06
    2. '```' → logprob: -12.500008583068848
    3. 'np' → logprob: -13.250008583068848
    4. ' def' → logprob: -13.625008583068848
    5. 'max' → logprob: -14.625008583068848
    6. '
' → logprob: -14.625008583068848
    7. '<|end|>' → logprob: -15.000008583068848
    8. '``' → logprob: -15.500008583068848
    9. 'return' → logprob: -15.500008583068848
    10. 'ndef' → logprob: -16.500009536743164

Token 509: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.14301152527332306
    2. ' extract' → logprob: -2.1430115699768066
    3. 'max' → logprob: -4.643011569976807
    4. ' max' → logprob: -5.643011569976807
    5. 'np' → logprob: -6.268011569976807
    6. ' np' → logprob: -8.143011093139648
    7. 'get' → logprob: -8.268011093139648
    8. 'def' → logprob: -8.893011093139648
    9. ' get' → logprob: -9.143011093139648
    10. 'numpy' → logprob: -10.768011093139648

Token 510: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00012451570364646614
    2. 'max' → logprob: -9.00012493133545
    3. '_from' → logprob: -15.37512493133545
    4. 'def' → logprob: -16.125123977661133
    5. 'from' → logprob: -16.125123977661133
    6. '_best' → logprob: -16.250123977661133
    7. '_last' → logprob: -16.375123977661133
    8. '_right' → logprob: -16.375123977661133
    9. '_' → logprob: -16.500123977661133
    10. 'Max' → logprob: -16.625123977661133

Token 511: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.04094221070408821
    2. '(dp' → logprob: -3.2909421920776367
    3. 'from' → logprob: -5.915942192077637
    4. '_(' → logprob: -9.540942192077637
    5. '(np' → logprob: -10.665942192077637
    6. '_' → logprob: -10.665942192077637
    7. '   ' → logprob: -11.290942192077637
    8. '_row' → logprob: -11.540942192077637
    9. ' from' → logprob: -11.790942192077637
    10. 'From' → logprob: -12.040942192077637

Token 512: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6632834076881409
    2. 'dp' → logprob: -0.9132834076881409
    3. '_last' → logprob: -2.538283348083496
    4. '(dp' → logprob: -5.413283348083496
    5. ' dp' → logprob: -9.663283348083496
    6. 'row' → logprob: -9.913283348083496
    7. 'max' → logprob: -10.788283348083496
    8. 'def' → logprob: -11.788283348083496
    9. '_dp' → logprob: -11.788283348083496
    10. '
' → logprob: -12.163283348083496

Token 513: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.166338137816638e-05
    2. 'row' → logprob: -10.375031471252441
    3. ' row' → logprob: -16.875032424926758
    4. '_' → logprob: -16.875032424926758
    5. '_rows' → logprob: -17.000032424926758
    6. '_ROW' → logprob: -17.000032424926758
    7. '_column' → logprob: -17.125032424926758
    8. '-row' → logprob: -17.250032424926758
    9. 'Row' → logprob: -17.500032424926758
    10. '_Row' → logprob: -17.500032424926758

Token 514: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0001278534036828205
    2. '(' → logprob: -9.000127792358398
    3. ' (' → logprob: -13.625127792358398
    4. '(def' → logprob: -14.000127792358398
    5. '(
' → logprob: -14.250127792358398
    6. '(row' → logprob: -14.875127792358398
    7. 'dp' → logprob: -14.875127792358398
    8. '(df' → logprob: -15.750127792358398
    9. 'def' → logprob: -15.875127792358398
    10. '
' → logprob: -16.6251277923584

Token 515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5788182020187378
    2. '):
' → logprob: -0.8288182020187378
    3. '(dp' → logprob: -6.078818321228027
    4. ')' → logprob: -7.953818321228027
    5. '):

' → logprob: -9.203818321228027
    6. '   ' → logprob: -10.078818321228027
    7. '):
' → logprob: -10.703818321228027
    8. ',' → logprob: -11.078818321228027
    9. ' ):' → logprob: -11.078818321228027
    10. ' ):
' → logprob: -11.328818321228027

Token 516: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004198778886348009
    2. 'np' → logprob: -6.0041985511779785
    3. '   ' → logprob: -6.5041985511779785
    4. 'dp' → logprob: -9.004199028015137
    5. ' return' → logprob: -9.254199028015137
    6. '
' → logprob: -13.129199028015137
    7. '```' → logprob: -13.379199028015137
    8. 'def' → logprob: -14.004199028015137
    9. '`' → logprob: -14.754199028015137
    10. 'max' → logprob: -15.004199028015137

Token 517: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009492144454270601
    2. 'np' → logprob: -7.000949382781982
    3. 'dp' → logprob: -10.500948905944824
    4. ' return' → logprob: -11.875948905944824
    5. 'max' → logprob: -12.750948905944824
    6. '
' → logprob: -15.750948905944824
    7. '   ' → logprob: -16.25094985961914
    8. 'int' → logprob: -16.62594985961914
    9. '```' → logprob: -17.25094985961914
    10. 'import' → logprob: -17.62594985961914

Token 518: ' dp' (ID: 21546)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.06573429703712463
    2. 'dp' → logprob: -2.815734386444092
    3. ' np' → logprob: -5.690734386444092
    4. 'int' → logprob: -8.190733909606934
    5. ' dp' → logprob: -9.190733909606934
    6. 'max' → logprob: -13.315733909606934
    7. ' int' → logprob: -14.065733909606934
    8. '(np' → logprob: -14.940733909606934
    9. '(dp' → logprob: -15.815733909606934
    10. 'float' → logprob: -16.06573486328125

Token 519: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.008492007851600647
    2. '.shape' → logprob: -4.8834919929504395
    3. '.max' → logprob: -7.5084919929504395
    4. '[:-' → logprob: -8.383492469787598
    5. '[' → logprob: -9.883492469787598
    6. '[np' → logprob: -10.883492469787598
    7. '[:,' → logprob: -11.133492469787598
    8. '.argmax' → logprob: -11.758492469787598
    9. '[max' → logprob: -12.133492469787598
    10. '[len' → logprob: -12.883492469787598

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003884894831571728
    2. ',' → logprob: -7.8753886222839355
    3. ' ' → logprob: -11.875388145446777
    4. ' ,' → logprob: -14.375388145446777
    5. '   ' → logprob: -15.375388145446777
    6. ':,' → logprob: -16.125389099121094
    7. ',-' → logprob: -16.250389099121094
    8. '-' → logprob: -17.000389099121094
    9. ',:' → logprob: -17.187889099121094
    10. '  ' → logprob: -17.250389099121094

Token 521: ',' (ID: 11)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.057327866554260254
    2. ',' → logprob: -2.9323277473449707
    3. ',:' → logprob: -6.432327747344971
    4. ':].' → logprob: -7.682327747344971
    5. ').' → logprob: -9.057328224182129
    6. ',max' → logprob: -9.307328224182129
    7. ',np' → logprob: -9.682328224182129
    8. ',-' → logprob: -10.807328224182129
    9. ' ].' → logprob: -11.057328224182129
    10. ']' → logprob: -11.182328224182129

Token 522: ' :' (ID: 712)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.00122844276484102
    2. ':-' → logprob: -7.501228332519531
    3. '].' → logprob: -8.126228332519531
    4. '0' → logprob: -8.751228332519531
    5. ':max' → logprob: -8.751228332519531
    6. '...' → logprob: -10.376228332519531
    7. ':' → logprob: -11.876228332519531
    8. ' :' → logprob: -12.001228332519531
    9. '-' → logprob: -12.376228332519531
    10. 'max' → logprob: -12.501228332519531

Token 523: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0012257046764716506
    2. ':].' → logprob: -6.751225471496582
    3. ']' → logprob: -11.001225471496582
    4. '1' → logprob: -11.251225471496582
    5. '-' → logprob: -11.626225471496582
    6. ' ].' → logprob: -12.001225471496582
    7. ').' → logprob: -13.376225471496582
    8. '...' → logprob: -13.501225471496582
    9. '   ' → logprob: -13.501225471496582
    10. '.max' → logprob: -13.876225471496582

Token 524: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.512236498361744e-07
    2. 'amax' → logprob: -14.625000953674316
    3. ' max' → logprob: -17.5
    4. '.max' → logprob: -19.875
    5. 'maximize' → logprob: -20.5
    6. 'arg' → logprob: -20.75
    7. '	max' → logprob: -20.875
    8. 'tolist' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. 'pt' → logprob: -21.75

Token 525: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -11.875033378601074
    3. '()]' → logprob: -11.875033378601074
    4. '()
' → logprob: -12.250033378601074
    5. '()`' → logprob: -12.500033378601074
    6. '().' → logprob: -13.250033378601074
    7. '()+' → logprob: -13.500033378601074
    8. '())' → logprob: -13.625033378601074
    9. '()

' → logprob: -14.000033378601074
    10. ' ()' → logprob: -14.125033378601074

Token 526: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010968588292598724
    2. 'main' → logprob: -5.1359686851501465
    3. ' solve' → logprob: -5.6359686851501465
    4. ' max' → logprob: -7.1359686851501465
    5. ' run' → logprob: -7.8859686851501465
    6. 'solve' → logprob: -9.760968208312988
    7. ' example' → logprob: -9.885968208312988
    8. 'max' → logprob: -10.385968208312988
    9. ' def' → logprob: -10.385968208312988
    10. ' calculate' → logprob: -10.885968208312988

Token 528: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014180204831063747
    2. '(' → logprob: -4.3891801834106445
    3. '(a' → logprob: -7.0141801834106445
    4. ' (' → logprob: -7.3891801834106445
    5. '(num' → logprob: -10.139180183410645
    6. '(N' → logprob: -10.639180183410645
    7. '()' → logprob: -11.139180183410645
    8. '(user' → logprob: -11.389180183410645
    9. '()(' → logprob: -11.639180183410645
    10. '_(' → logprob: -12.264180183410645

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',n' → logprob: -16.375001907348633
    4. '):' → logprob: -16.750001907348633
    5. ',
' → logprob: -16.750001907348633
    6. ',a' → logprob: -17.375001907348633
    7. '‌,' → logprob: -17.625001907348633
    8. ',int' → logprob: -19.625001907348633
    9. ',input' → logprob: -19.750001907348633
    10. '):
' → logprob: -19.875001907348633

Token 530: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01613454893231392
    2. ' a' → logprob: -4.141134738922119
    3. 'arr' → logprob: -9.516134262084961
    4. 'lst' → logprob: -11.391134262084961
    5. 'values' → logprob: -12.641134262084961
    6. ' arr' → logprob: -13.391134262084961
    7. ')' → logprob: -13.391134262084961
    8. ' lst' → logprob: -13.516134262084961
    9. '   ' → logprob: -13.641134262084961
    10. ' ' → logprob: -13.766134262084961

Token 531: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.517272024415433e-05
    2. '):' → logprob: -10.375075340270996
    3. '_' → logprob: -10.875075340270996
    4. '):
' → logprob: -11.375075340270996
    5. '_lst' → logprob: -11.625075340270996
    6. 'list' → logprob: -12.625075340270996
    7. '_array' → logprob: -14.875075340270996
    8. '_lists' → logprob: -15.000075340270996
    9. 'rray' → logprob: -16.25007438659668
    10. '_LIST' → logprob: -16.37507438659668

Token 532: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021915410179644823
    2. '):
' → logprob: -6.127191543579102
    3. ',' → logprob: -13.252191543579102
    4. '):
' → logprob: -13.252191543579102
    5. ')' → logprob: -13.377191543579102
    6. ' ):' → logprob: -14.377191543579102
    7. ':' → logprob: -14.627191543579102
    8. '   ' → logprob: -15.502191543579102
    9. '):

' → logprob: -16.3771915435791
    10. ' ' → logprob: -18.0021915435791

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03296564146876335
    2. ' dp' → logprob: -3.907965660095215
    3. ' h' → logprob: -4.657965660095215
    4. 'dp' → logprob: -6.032965660095215
    5. 'h' → logprob: -7.782965660095215
    6. '	dp' → logprob: -10.907965660095215
    7. '```' → logprob: -11.907965660095215
    8. 'n' → logprob: -11.907965660095215
    9. ' n' → logprob: -12.782965660095215
    10. '   ' → logprob: -12.907965660095215

Token 534: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.12852302193641663
    2. 'dp' → logprob: -2.128523111343384
    3. ' h' → logprob: -7.128522872924805
    4. '   ' → logprob: -7.628522872924805
    5. ' dp' → logprob: -8.128522872924805
    6. 'heap' → logprob: -12.878522872924805
    7. 'hp' → logprob: -13.253522872924805
    8. ' ' → logprob: -13.628522872924805
    9. '```' → logprob: -13.753522872924805
    10. '	h' → logprob: -14.253522872924805

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872982859611511
    2. '=' → logprob: -1.137298345565796
    3. '=create' → logprob: -7.762298107147217
    4. '   ' → logprob: -14.387298583984375
    5. ' ' → logprob: -15.012298583984375
    6. '=[]' → logprob: -16.012298583984375
    7. '  ' → logprob: -16.387298583984375
    8. ',' → logprob: -16.512298583984375
    9. '=h' → logprob: -17.012298583984375
    10. '=get' → logprob: -17.012298583984375

Token 536: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.07889540493488312
    2. ' create' → logprob: -2.578895330429077
    3. '[]' → logprob: -12.328895568847656
    4. '   ' → logprob: -15.578895568847656
    5. ' []' → logprob: -15.578895568847656
    6. '[]
' → logprob: -15.703895568847656
    7. ' ' → logprob: -15.828895568847656
    8. '(create' → logprob: -15.953895568847656
    9. '	create' → logprob: -16.078895568847656
    10. '=create' → logprob: -16.078895568847656

Token 537: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -7.612634362885728e-05
    2. '_' → logprob: -10.750076293945312
    3. 'heap' → logprob: -10.750076293945312
    4. '(h' → logprob: -11.625076293945312
    5. '(heap' → logprob: -11.875076293945312
    6. '_he' → logprob: -12.000076293945312
    7. '_h' → logprob: -12.250076293945312
    8. '_heat' → logprob: -13.875076293945312
    9. '```' → logprob: -14.000076293945312
    10. 'h' → logprob: -14.375076293945312

Token 538: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.840432565193623e-05
    2. '(' → logprob: -9.500088691711426
    3. '(h' → logprob: -12.375088691711426
    4. ' (' → logprob: -12.375088691711426
    5. ',' → logprob: -12.750088691711426
    6. '(n' → logprob: -13.625088691711426
    7. '((' → logprob: -14.375088691711426
    8. 'a' → logprob: -16.12508773803711
    9. ',a' → logprob: -17.00008773803711
    10. '(
' → logprob: -17.25008773803711

Token 539: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00012630375567823648
    2. 'list' → logprob: -9.125125885009766
    3. 'ist' → logprob: -12.000125885009766
    4. '(a' → logprob: -12.125125885009766
    5. ',' → logprob: -12.500125885009766
    6. 'a' → logprob: -14.625125885009766
    7. ',a' → logprob: -15.250125885009766
    8. 'List' → logprob: -15.250125885009766
    9. '=a' → logprob: -15.875125885009766
    10. '_lst' → logprob: -16.000125885009766

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013131031300872564
    2. ',n' → logprob: -9.000131607055664
    3. ' ,' → logprob: -11.875131607055664
    4. ',h' → logprob: -15.000131607055664
    5. '(n' → logprob: -15.750131607055664
    6. 'n' → logprob: -16.375131607055664
    7. ',a' → logprob: -16.625131607055664
    8. 'a' → logprob: -16.875131607055664
    9. ',
' → logprob: -17.000131607055664
    10. ')' → logprob: -17.000131607055664

Token 541: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170460251159966
    2. ' n' → logprob: -6.751170635223389
    3. ')n' → logprob: -16.126171112060547
    4. 'len' → logprob: -16.501171112060547
    5. ')' → logprob: -17.626171112060547
    6. '   ' → logprob: -18.501171112060547
    7. '	n' → logprob: -18.751171112060547
    8. '_n' → logprob: -21.126171112060547
    9. ')
' → logprob: -21.251171112060547
    10. ' len' → logprob: -21.376171112060547

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47409772872924805
    2. ',' → logprob: -0.974097728729248
    3. ',n' → logprob: -11.974098205566406
    4. ')
' → logprob: -12.224098205566406
    5. '   ' → logprob: -13.099098205566406
    6. '),' → logprob: -13.349098205566406
    7. ',)' → logprob: -13.599098205566406
    8. ' )' → logprob: -13.849098205566406
    9. ')n' → logprob: -13.974098205566406
    10. ' ,' → logprob: -13.974098205566406

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46955186128616333
    2. 'dp' → logprob: -1.0945518016815186
    3. ' dp' → logprob: -3.2195518016815186
    4. '	dp' → logprob: -10.719552040100098
    5. '_dp' → logprob: -11.469552040100098
    6. '```' → logprob: -12.094552040100098
    7. '
' → logprob: -12.219552040100098
    8. '    
' → logprob: -12.844552040100098
    9. '(dp' → logprob: -12.844552040100098
    10. '   ' → logprob: -13.344552040100098

Token 544: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0055683632381260395
    2. ' dp' → logprob: -5.255568504333496
    3. '   ' → logprob: -8.005568504333496
    4. '
' → logprob: -14.630568504333496
    5. '```' → logprob: -15.130568504333496
    6. '	dp' → logprob: -16.25556755065918
    7. '_dp' → logprob: -17.25556755065918
    8. '    
' → logprob: -17.63056755065918
    9. ' ' → logprob: -18.25556755065918
    10. '``' → logprob: -18.25556755065918

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408029437065125
    2. ' =' → logprob: -0.9740803241729736
    3. '=create' → logprob: -12.724080085754395
    4. ' ' → logprob: -16.59908103942871
    5. ',' → logprob: -16.59908103942871
    6. '=
' → logprob: -17.09908103942871
    7. ')' → logprob: -17.34908103942871
    8. '   ' → logprob: -17.72408103942871
    9. 'initialize' → logprob: -17.97408103942871
    10. '＝' → logprob: -17.97408103942871

Token 546: ' initialize' (ID: 18400)
  Prédit: ' initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.31326499581336975
    2. 'initialize' → logprob: -1.3132649660110474
    3. '	initialize' → logprob: -13.438264846801758
    4. '_initialize' → logprob: -13.813264846801758
    5. '.initialize' → logprob: -14.313264846801758
    6. ' ' → logprob: -17.438264846801758
    7. '   ' → logprob: -17.563264846801758
    8. 'initial' → logprob: -17.688264846801758
    9. 'Initialize' → logprob: -17.688264846801758
    10. 'itialize' → logprob: -17.813264846801758

Token 547: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.1359310746192932
    2. '(dp' → logprob: -2.3859310150146484
    3. 'dp' → logprob: -3.3859310150146484
    4. '(n' → logprob: -7.510931015014648
    5. ' dp' → logprob: -7.760931015014648
    6. ' (' → logprob: -8.760931015014648
    7. 'DP' → logprob: -10.260931015014648
    8. '(' → logprob: -10.510931015014648
    9. '	dp' → logprob: -10.510931015014648
    10. '_DP' → logprob: -12.010931015014648

Token 548: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2200749754119897e-06
    2. 'n' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.375001907348633
    4. '(' → logprob: -15.875001907348633
    5. ' n' → logprob: -17.375001907348633
    6. '```' → logprob: -17.750001907348633
    7. '
' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '(
' → logprob: -19.000001907348633
    10. 'def' → logprob: -19.125001907348633

Token 549: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931834816932678
    2. ')
' → logprob: -0.6931834816932678
    3. ')
' → logprob: -10.693183898925781
    4. '   ' → logprob: -11.443183898925781
    5. ')

' → logprob: -13.568183898925781
    6. ' )
' → logprob: -14.193183898925781
    7. ' )' → logprob: -15.068183898925781
    8. ' ' → logprob: -15.318183898925781
    9. '
' → logprob: -16.81818389892578
    10. ')n' → logprob: -16.81818389892578

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00894674751907587
    2. ' update' → logprob: -4.883946895599365
    3. 'update' → logprob: -6.633946895599365
    4. '
' → logprob: -11.133946418762207
    5. '```' → logprob: -11.758946418762207
    6. ' for' → logprob: -14.383946418762207
    7. '	update' → logprob: -14.633946418762207
    8. '    
' → logprob: -15.008946418762207
    9. '(update' → logprob: -15.508946418762207
    10. 'for' → logprob: -15.633946418762207

Token 551: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.002024758607149124
    2. ' update' → logprob: -6.2520246505737305
    3. '   ' → logprob: -9.25202465057373
    4. '	update' → logprob: -16.752025604248047
    5. '
' → logprob: -17.752025604248047
    6. '```' → logprob: -17.752025604248047
    7. '.update' → logprob: -18.252025604248047
    8. '_update' → logprob: -18.877025604248047
    9. ' ' → logprob: -18.877025604248047
    10. '  ' → logprob: -19.127025604248047

Token 552: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.60414821645827e-06
    2. 'dp' → logprob: -12.375004768371582
    3. '_db' → logprob: -15.875004768371582
    4. '_dt' → logprob: -17.125003814697266
    5. '_df' → logprob: -17.250003814697266
    6. '```' → logprob: -17.750003814697266
    7. '_dc' → logprob: -18.000003814697266
    8. 'DP' → logprob: -18.625003814697266
    9. '(dp' → logprob: -18.750003814697266
    10. '_py' → logprob: -19.250003814697266

Token 553: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -6.511406809295295e-06
    2. 'with' → logprob: -12.000006675720215
    3. '_WITH' → logprob: -16.3750057220459
    4. '   ' → logprob: -16.7500057220459
    5. '(dp' → logprob: -17.1250057220459
    6. 'With' → logprob: -17.5000057220459
    7. ' _' → logprob: -18.0000057220459
    8. '```' → logprob: -18.2500057220459
    9. '_from' → logprob: -18.5000057220459
    10. ' with' → logprob: -18.8750057220459

Token 554: '_heap' (ID: 88741)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.694516658782959
    2. '(dp' → logprob: -1.444516658782959
    3. '_heap' → logprob: -2.194516658782959
    4. 'heap' → logprob: -2.194516658782959
    5. '_dp' → logprob: -3.194516658782959
    6. '(heap' → logprob: -7.819516658782959
    7. ' dp' → logprob: -8.819517135620117
    8. ' heap' → logprob: -9.444517135620117
    9. '```' → logprob: -9.694517135620117
    10. 'h' → logprob: -9.819517135620117

Token 555: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.000048637390137
    3. ' (' → logprob: -12.875048637390137
    4. '(
' → logprob: -17.25004768371582
    5. '(df' → logprob: -18.00004768371582
    6. '(dt' → logprob: -18.62504768371582
    7. 'dp' → logprob: -18.62504768371582
    8. ',' → logprob: -19.50004768371582
    9. '(lp' → logprob: -19.62504768371582
    10. ' dp' → logprob: -20.00004768371582

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037340454291552305
    2. ',h' → logprob: -5.628734111785889
    3. '(h' → logprob: -9.12873363494873
    4. ' ,' → logprob: -10.87873363494873
    5. ' h' → logprob: -12.37873363494873
    6. ',
' → logprob: -14.25373363494873
    7. 'h' → logprob: -14.37873363494873
    8. ')' → logprob: -14.75373363494873
    9. '<|end|>' → logprob: -15.50373363494873
    10. '
' → logprob: -16.003734588623047

Token 557: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04858986660838127
    2. ' h' → logprob: -3.0485899448394775
    3. '<|end|>' → logprob: -14.298589706420898
    4. ')' → logprob: -14.673589706420898
    5. '	h' → logprob: -14.673589706420898
    6. ',h' → logprob: -15.048589706420898
    7. '(h' → logprob: -15.298589706420898
    8. '[h' → logprob: -15.298589706420898
    9. '_h' → logprob: -16.2985897064209
    10. '<h' → logprob: -16.4235897064209

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014692598779220134
    2. ',n' → logprob: -8.875146865844727
    3. ' ,' → logprob: -11.875146865844727
    4. ',
' → logprob: -16.500146865844727
    5. 'n' → logprob: -17.125146865844727
    6. '   ' → logprob: -17.875146865844727
    7. ')' → logprob: -18.625146865844727
    8. '‌,' → logprob: -19.250146865844727
    9. '```' → logprob: -19.625146865844727
    10. '),' → logprob: -20.000146865844727

Token 559: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759416818618774
    2. 'n' → logprob: -0.8259416818618774
    3. ')n' → logprob: -13.325942039489746
    4. ')' → logprob: -14.575942039489746
    5. '	n' → logprob: -15.825942039489746
    6. '_n' → logprob: -17.45094108581543
    7. '   ' → logprob: -17.45094108581543
    8. ',n' → logprob: -18.45094108581543
    9. '$n' → logprob: -18.70094108581543
    10. ' ' → logprob: -19.32594108581543

Token 560: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25236913561820984
    2. ')' → logprob: -1.5023691654205322
    3. '   ' → logprob: -7.752368927001953
    4. ')
' → logprob: -12.377368927001953
    5. ')

' → logprob: -12.502368927001953
    6. ')n' → logprob: -13.627368927001953
    7. ' )
' → logprob: -14.627368927001953
    8. ')return' → logprob: -15.377368927001953
    9. '
' → logprob: -15.627368927001953
    10. ' ' → logprob: -16.252368927001953

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004155329894274473
    2. 'return' → logprob: -6.129155158996582
    3. '
' → logprob: -6.629155158996582
    4. ' return' → logprob: -7.504155158996582
    5. 'result' → logprob: -9.629155158996582
    6. '```' → logprob: -11.129155158996582
    7. ' result' → logprob: -11.879155158996582
    8. '    
' → logprob: -11.879155158996582
    9. '``' → logprob: -14.879155158996582
    10. '	return' → logprob: -15.254155158996582

Token 562: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01838194951415062
    2. 'result' → logprob: -4.0183820724487305
    3. 'res' (adapté à ' res') → logprob: -9.26838207244873
    4. ' return' → logprob: -9.26838207244873
    5. '   ' → logprob: -10.39338207244873
    6. '
' → logprob: -11.51838207244873
    7. ' result' → logprob: -13.76838207244873
    8. '```' → logprob: -14.39338207244873
    9. 'answer' → logprob: -15.26838207244873
    10. 'max' → logprob: -15.26838207244873

Token 563: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.12291811406612396
    2. ' =' → logprob: -2.747918128967285
    3. '=' → logprob: -3.372918128967285
    4. 'ults' → logprob: -5.122918128967285
    5. 'u' → logprob: -5.747918128967285
    6. '   ' → logprob: -5.747918128967285
    7. 'ultat' → logprob: -6.372918128967285
    8. 'ault' → logprob: -7.497918128967285
    9. 'urn' → logprob: -7.622918128967285
    10. 't' → logprob: -7.747918128967285

Token 564: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20141363143920898
    2. 'get' → logprob: -1.701413631439209
    3. '(get' → logprob: -15.826414108276367
    4. 'int' → logprob: -17.076414108276367
    5. '   ' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.826414108276367
    7. ' int' → logprob: -18.076414108276367
    8. '_get' → logprob: -18.076414108276367
    9. '	get' → logprob: -18.076414108276367
    10. '  ' → logprob: -18.451414108276367

Token 565: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.088346359931165e-07
    2. 'result' → logprob: -14.875000953674316
    3. '_' → logprob: -15.375000953674316
    4. ' _' → logprob: -16.25
    5. '_res' → logprob: -17.0
    6. '_results' → logprob: -17.125
    7. '_solution' → logprob: -18.875
    8. '_answer' → logprob: -19.125
    9. '_return' → logprob: -19.25
    10. '_RESULT' → logprob: -19.625

Token 566: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -7.896309739408025e-07
    2. 'from' → logprob: -14.250000953674316
    3. '_FROM' → logprob: -17.625
    4. '_for' → logprob: -18.25
    5. ' _' → logprob: -18.75
    6. '_result' → logprob: -19.0
    7. '_' → logprob: -19.5
    8. 'From' → logprob: -20.875
    9. '_From' → logprob: -21.25
    10. '```' → logprob: -21.25

Token 567: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.38692259788513184
    2. 'dp' → logprob: -1.1369225978851318
    3. 'p' → logprob: -10.136922836303711
    4. 'DP' → logprob: -11.761922836303711
    5. 'Dp' → logprob: -13.761922836303711
    6. '	dp' → logprob: -14.011922836303711
    7. '(dp' → logprob: -14.136922836303711
    8. 'from' → logprob: -14.511922836303711
    9. 'lp' → logprob: -15.886922836303711
    10. 'result' → logprob: -16.01192283630371

Token 568: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.125
    3. ' (' → logprob: -16.125
    4. 'dp' → logprob: -18.375
    5. '```' → logprob: -19.25
    6. '(df' → logprob: -19.5
    7. '(lp' → logprob: -20.0
    8. '	dp' → logprob: -20.0
    9. '(dx' → logprob: -20.625
    10. '(res' → logprob: -20.875

Token 569: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1603025197982788
    2. ')' → logprob: -1.9103025197982788
    3. ')
' → logprob: -9.66030216217041
    4. '   ' → logprob: -12.16030216217041
    5. ')

' → logprob: -12.16030216217041
    6. 'return' → logprob: -13.03530216217041
    7. ' )
' → logprob: -14.41030216217041
    8. '()' → logprob: -15.28530216217041
    9. '(dp' → logprob: -15.28530216217041
    10. '())
' → logprob: -15.53530216217041

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001136050675995648
    2. ' return' → logprob: -7.12613582611084
    3. '
' → logprob: -8.37613582611084
    4. 'return' → logprob: -9.87613582611084
    5. '	return' → logprob: -10.75113582611084
    6. '```' → logprob: -11.50113582611084
    7. '    
' → logprob: -11.62613582611084
    8. '<|end|>' → logprob: -11.75113582611084
    9. '   ' → logprob: -15.62613582611084
    10. ',' → logprob: -15.75113582611084

Token 571: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19261448085308075
    2. '   ' → logprob: -2.4426145553588867
    3. 'return' (adapté à ' return') → logprob: -2.4426145553588867
    4. '
' → logprob: -6.692614555358887
    5. '	return' → logprob: -9.317614555358887
    6. '_return' → logprob: -14.067614555358887
    7. '```' → logprob: -14.067614555358887
    8. ':return' → logprob: -14.567614555358887
    9. 'eturn' → logprob: -15.067614555358887
    10. ' ' → logprob: -15.067614555358887

Token 572: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.01815076172351837
    2. 'res' → logprob: -4.018150806427002
    3. ' int' → logprob: -14.768150329589844
    4. 'int' → logprob: -15.518150329589844
    5. '(res' → logprob: -16.268150329589844
    6. ' -' → logprob: -16.768150329589844
    7. '-res' → logprob: -16.893150329589844
    8. ' ' → logprob: -17.018150329589844
    9. '	res' → logprob: -18.018150329589844
    10. '-' → logprob: -18.268150329589844

Token 573: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0031646527349948883
    2. ' test' → logprob: -6.378164768218994
    3. 'main' → logprob: -7.128164768218994
    4. ' example' → logprob: -8.003164291381836
    5. ' __' → logprob: -9.253164291381836
    6. ' solve' → logprob: -9.878164291381836
    7. ' run' → logprob: -10.253164291381836
    8. ' factorial' → logprob: -10.753164291381836
    9. ' max' → logprob: -11.003164291381836
    10. ' sample' → logprob: -11.253164291381836

Token 576: '_input' (ID: 12507)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.33102965354919434
    2. '_' → logprob: -2.3310296535491943
    3. '_result' → logprob: -3.0810296535491943
    4. '_next' → logprob: -3.2060296535491943
    5. '_list' → logprob: -4.331029891967773
    6. '_remaining' → logprob: -4.831029891967773
    7. '_sum' → logprob: -5.081029891967773
    8. '_indices' → logprob: -5.081029891967773
    9. '_s' → logprob: -5.081029891967773
    10. '_n' → logprob: -5.331029891967773

Token 577: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011371198343113065
    2. '():
' → logprob: -6.8761372566223145
    3. '()' → logprob: -9.501136779785156
    4. ' ():' → logprob: -11.626136779785156
    5. '():

' → logprob: -12.126136779785156
    6. '()>' → logprob: -12.626136779785156
    7. '_' → logprob: -13.001136779785156
    8. '(' → logprob: -13.626136779785156
    9. '():
' → logprob: -13.626136779785156
    10. '()">' → logprob: -14.001136779785156

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.631655216217041
    2. '():
' → logprob: -0.881655216217041
    3. '()' → logprob: -3.881655216217041
    4. 'n' → logprob: -3.881655216217041
    5. 'return' → logprob: -5.381655216217041
    6. '():' → logprob: -5.631655216217041
    7. ' n' → logprob: -6.756655216217041
    8. '```' → logprob: -7.256655216217041
    9. ' return' → logprob: -7.506655216217041
    10. 'import' → logprob: -7.881655216217041

Token 579: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9384775757789612
    2. ' return' → logprob: -1.1884775161743164
    3. ' n' → logprob: -1.5634775161743164
    4. 'return' → logprob: -2.4384775161743164
    5. '   ' → logprob: -5.063477516174316
    6. 'import' → logprob: -7.313477516174316
    7. ' import' → logprob: -8.813477516174316
    8. 'num' → logprob: -9.188477516174316
    9. '```' → logprob: -9.563477516174316
    10. ' size' → logprob: -11.188477516174316

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47482380270957947
    2. ' =' → logprob: -0.9748238325119019
    3. ',' → logprob: -7.224823951721191
    4. '=int' → logprob: -12.224823951721191
    5. '   ' → logprob: -12.474823951721191
    6. ' =
' → logprob: -12.974823951721191
    7. ' ' → logprob: -12.974823951721191
    8. '=input' → logprob: -12.974823951721191
    9. '=
' → logprob: -13.724823951721191
    10. '  ' → logprob: -14.599823951721191

Token 581: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0485873706638813
    2. ' int' → logprob: -3.0485873222351074
    3. '(int' → logprob: -18.548587799072266
    4. '[int' → logprob: -19.298587799072266
    5. ' ' → logprob: -19.673587799072266
    6. '=int' → logprob: -20.423587799072266
    7. '	int' → logprob: -21.048587799072266
    8. '<int' → logprob: -21.423587799072266
    9. '   ' → logprob: -22.173587799072266
    10. ':int' → logprob: -23.048587799072266

Token 582: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00024370834580622613
    2. '(' → logprob: -8.500244140625
    3. 'input' → logprob: -10.250244140625
    4. '()' → logprob: -12.250244140625
    5. '=input' → logprob: -17.125244140625
    6. '(
' → logprob: -17.500244140625
    7. ' input' → logprob: -18.750244140625
    8. ',input' → logprob: -19.500244140625
    9. '(open' → logprob: -20.250244140625
    10. '	input' → logprob: -20.375244140625

Token 583: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004180260002613068
    2. '()' → logprob: -5.504180431365967
    3. '())
' → logprob: -9.754179954528809
    4. '().' → logprob: -10.504179954528809
    5. '(' → logprob: -12.254179954528809
    6. ')' → logprob: -12.379179954528809
    7. ' ())' → logprob: -12.504179954528809
    8. '()
' → logprob: -13.879179954528809
    9. '())

' → logprob: -14.129179954528809
    10. '();)' → logprob: -14.629179954528809

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2542873024940491
    2. 'a' → logprob: -1.5042872428894043
    3. ' a' → logprob: -6.254287242889404
    4. '	a' → logprob: -8.504287719726562
    5. '<|end|>' → logprob: -8.629287719726562
    6. ',a' → logprob: -11.129287719726562
    7. ' ' → logprob: -12.129287719726562
    8. '  ' → logprob: -12.254287719726562
    9. '    
' → logprob: -12.629287719726562
    10. 'def' → logprob: -12.754287719726562

Token 585: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -9.849109119386412e-06
    2. '   ' → logprob: -11.625009536743164
    3. ' a' → logprob: -15.125009536743164
    4. '    
' → logprob: -15.625009536743164
    5. 'return' → logprob: -17.000009536743164
    6. 'input' → logprob: -17.500009536743164
    7. '>a' → logprob: -17.625009536743164
    8. '```' → logprob: -17.625009536743164
    9. 'line' → logprob: -17.750009536743164
    10. '	a' → logprob: -17.875009536743164

Token 586: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.7835754988482222e-05
    2. '_lst' → logprob: -11.625018119812012
    3. '_' → logprob: -12.000018119812012
    4. '_array' → logprob: -14.250018119812012
    5. '_values' → logprob: -14.750018119812012
    6. '_lista' → logprob: -14.875018119812012
    7. '=_' → logprob: -15.375018119812012
    8. '=[]' → logprob: -16.000017166137695
    9. '_LIST' → logprob: -16.125017166137695
    10. '_List' → logprob: -16.125017166137695

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603105366230011
    2. ' =' → logprob: -1.9103105068206787
    3. '()' → logprob: -9.785310745239258
    4. '(' → logprob: -11.160310745239258
    5. '=[]' → logprob: -12.035310745239258
    6. '.' → logprob: -12.910310745239258
    7. ' ' → logprob: -13.660310745239258
    8. ',' → logprob: -13.660310745239258
    9. '[:]' → logprob: -13.785310745239258
    10. '＝' → logprob: -14.410310745239258

Token 588: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0619683600962162
    2. ' list' → logprob: -2.8119683265686035
    3. '[list' → logprob: -14.436968803405762
    4. '[' → logprob: -16.436967849731445
    5. '	list' → logprob: -18.561967849731445
    6. '=list' → logprob: -19.811967849731445
    7. ' [' → logprob: -20.311967849731445
    8. 'List' → logprob: -20.686967849731445
    9. '(list' → logprob: -20.811967849731445
    10. ':list' → logprob: -21.186967849731445

Token 589: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'map' → logprob: -15.37501049041748
    4. '()' → logprob: -18.375009536743164
    5. '(
' → logprob: -19.250009536743164
    6. '(range' → logprob: -19.500009536743164
    7. '(int' → logprob: -20.000009536743164
    8. ' map' → logprob: -20.000009536743164
    9. '	map' → logprob: -20.250009536743164
    10. '(input' → logprob: -20.875009536743164

Token 590: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00036715567694045603
    2. 'int' → logprob: -8.000367164611816
    3. '(' → logprob: -10.500367164611816
    4. ',int' → logprob: -13.375367164611816
    5. '   ' → logprob: -13.625367164611816
    6. ' int' → logprob: -14.875367164611816
    7. '=int' → logprob: -15.625367164611816
    8. '<int' → logprob: -15.875367164611816
    9. '[int' → logprob: -15.875367164611816
    10. '(str' → logprob: -16.0003662109375

Token 591: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12599392235279083
    2. ',input' → logprob: -2.3759939670562744
    3. ',' → logprob: -3.8759939670562744
    4. 'input' → logprob: -5.875993728637695
    5. '(' → logprob: -6.375993728637695
    6. ' input' → logprob: -9.250993728637695
    7. ' (' → logprob: -9.625993728637695
    8. ' ' → logprob: -10.750993728637695
    9. '   ' → logprob: -11.625993728637695
    10. '=input' → logprob: -11.875993728637695

Token 592: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234832875430584
    2. ' input' → logprob: -5.255234718322754
    3. ',input' → logprob: -14.255234718322754
    4. '   ' → logprob: -15.630234718322754
    5. '(input' → logprob: -15.630234718322754
    6. '	input' → logprob: -17.63023567199707
    7. '<input' → logprob: -17.63023567199707
    8. '=input' → logprob: -17.75523567199707
    9. ' ' → logprob: -18.00523567199707
    10. '
' → logprob: -18.00523567199707

Token 593: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.465036105713807e-06
    2. '()' → logprob: -12.500007629394531
    3. ' .' → logprob: -14.000007629394531
    4. '   ' → logprob: -14.375007629394531
    5. 'input' → logprob: -14.500007629394531
    6. '.split' → logprob: -14.875007629394531
    7. '(' → logprob: -14.875007629394531
    8. ' ().' → logprob: -15.125007629394531
    9. '.' → logprob: -15.250007629394531
    10. 'split' → logprob: -16.12500762939453

Token 594: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007107630372047424
    2. 'strip' → logprob: -7.250710964202881
    3. 'rstrip' → logprob: -14.250710487365723
    4. ' split' → logprob: -15.625710487365723
    5. '(split' → logprob: -17.00071144104004
    6. 'spl' → logprob: -19.00071144104004
    7. '.split' → logprob: -20.37571144104004
    8. ' strip' → logprob: -21.12571144104004
    9. 'read' → logprob: -21.25071144104004
    10. '_split' → logprob: -21.75071144104004

Token 595: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0002647927321959287
    2. '()))
' → logprob: -8.625265121459961
    3. '()' → logprob: -9.500265121459961
    4. '(' → logprob: -12.375265121459961
    5. '))' → logprob: -12.500265121459961
    6. '()));' → logprob: -14.000265121459961
    7. '())' → logprob: -14.250265121459961
    8. '()))

' → logprob: -14.625265121459961
    9. '()))
' → logprob: -16.12526512145996
    10. '())))' → logprob: -16.50026512145996

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001665065879933536
    2. 'return' → logprob: -6.751665115356445
    3. ' return' → logprob: -7.751665115356445
    4. '<|end|>' → logprob: -10.001665115356445
    5. '	return' → logprob: -11.001665115356445
    6. ' ' → logprob: -14.376665115356445
    7. '<|end|>' → logprob: -14.501665115356445
    8. '
' → logprob: -15.001665115356445
    9. ':return' → logprob: -15.251665115356445
    10. ')' → logprob: -15.376665115356445

Token 597: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02004612423479557
    2. ' return' → logprob: -4.020046234130859
    3. '   ' → logprob: -6.270046234130859
    4. '	return' → logprob: -13.27004623413086
    5. ' ' → logprob: -14.64504623413086
    6. '{return' → logprob: -17.89504623413086
    7. ':return' → logprob: -18.02004623413086
    8. 'eturn' → logprob: -18.27004623413086
    9. '```' → logprob: -19.27004623413086
    10. '  ' → logprob: -19.39504623413086

Token 598: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014025058771949261
    2. ' n' → logprob: -9.000140190124512
    3. '(n' → logprob: -11.000140190124512
    4. '	n' → logprob: -17.125141143798828
    5. '   ' → logprob: -18.250141143798828
    6. '[n' → logprob: -18.750141143798828
    7. '(' → logprob: -20.375141143798828
    8. ' (' → logprob: -21.250141143798828
    9. ' ' → logprob: -23.000141143798828
    10. '  ' → logprob: -23.375141143798828

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025228000595234334
    2. ',a' → logprob: -8.375252723693848
    3. ' ,' → logprob: -10.875252723693848
    4. 'a' → logprob: -13.000252723693848
    5. ',
' → logprob: -14.750252723693848
    6. ' a' → logprob: -16.87525177001953
    7. '‌,' → logprob: -17.25025177001953
    8. ',n' → logprob: -18.25025177001953
    9. '<|end|>' → logprob: -18.25025177001953
    10. ',p' → logprob: -18.87525177001953

Token 600: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006715370807796717
    2. ' a' → logprob: -5.006715297698975
    3. '	a' → logprob: -18.131715774536133
    4. ' ' → logprob: -19.006715774536133
    5. '   ' → logprob: -19.381715774536133
    6. '[a' → logprob: -20.006715774536133
    7. 'list' → logprob: -20.381715774536133
    8. '_a' → logprob: -20.756715774536133
    9. '  ' → logprob: -21.256715774536133
    10. '(a' → logprob: -21.756715774536133

Token 601: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0683535037969705e-05
    2. 'list' → logprob: -11.50001049041748
    3. 'List' → logprob: -14.75001049041748
    4. '_lst' → logprob: -18.250011444091797
    5. '_l' → logprob: -18.375011444091797
    6. '_' → logprob: -18.750011444091797
    7. '_LIST' → logprob: -19.000011444091797
    8. '_List' → logprob: -19.250011444091797
    9. '_lista' → logprob: -19.500011444091797
    10. '_lists' → logprob: -19.625011444091797

Token 602: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3874639868736267
    2. 'if' → logprob: -1.1374640464782715
    3. '```' → logprob: -7.8874640464782715
    4. 'n' → logprob: -8.637463569641113
    5. 'print' → logprob: -10.637463569641113
    6. ' if' → logprob: -11.762463569641113
    7. '#' → logprob: -12.137463569641113
    8. 'for' → logprob: -13.887463569641113
    9. '<|end|>' → logprob: -14.887463569641113
    10. 'ndef' → logprob: -14.887463569641113

Token 604: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.015246429480612278
    2. ' main' → logprob: -4.265246391296387
    3. 'def' → logprob: -6.890246391296387
    4. '
' → logprob: -10.265246391296387
    5. '_main' → logprob: -11.265246391296387
    6. 'run' → logprob: -11.515246391296387
    7. ' def' → logprob: -12.515246391296387
    8. ' run' → logprob: -13.515246391296387
    9. 'get' → logprob: -14.265246391296387
    10. 'if' → logprob: -14.765246391296387

Token 605: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003092631697654724
    2. '_result' → logprob: -6.8780927658081055
    3. '(result' → logprob: -7.6280927658081055
    4. '("' → logprob: -8.128092765808105
    5. 'result' → logprob: -8.503092765808105
    6. '(get' → logprob: -8.753092765808105
    7. '()' → logprob: -8.753092765808105
    8. '(s' → logprob: -9.003092765808105
    9. '(
' → logprob: -9.128092765808105
    10. '(res' → logprob: -9.253092765808105

Token 606: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.011009973473846912
    2. '(' → logprob: -4.63601016998291
    3. '(result' → logprob: -6.76101016998291
    4. ' (' → logprob: -10.76101016998291
    5. '(s' → logprob: -10.76101016998291
    6. '()' → logprob: -11.38601016998291
    7. '(results' → logprob: -12.13601016998291
    8. '(
' → logprob: -12.26101016998291
    9. '(def' → logprob: -12.26101016998291
    10. '(data' → logprob: -12.51101016998291

Token 607: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17197299003601074
    2. '):' → logprob: -2.4219729900360107
    3. '(res' → logprob: -2.6719729900360107
    4. '():
' → logprob: -9.92197322845459
    5. ')' → logprob: -10.29697322845459
    6. '):
' → logprob: -10.67197322845459
    7. '(' → logprob: -11.67197322845459
    8. '()):
' → logprob: -12.42197322845459
    9. '):

' → logprob: -12.54697322845459
    10. 'res' → logprob: -12.54697322845459

Token 608: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01109014730900526
    2. ' print' → logprob: -4.761090278625488
    3. '   ' → logprob: -6.011090278625488
    4. '```' → logprob: -11.636090278625488
    5. '(print' → logprob: -12.011090278625488
    6. 'def' → logprob: -12.136090278625488
    7. '    
' → logprob: -15.011090278625488
    8. '	print' → logprob: -15.386090278625488
    9. '`' → logprob: -16.386089324951172
    10. 'pr' → logprob: -16.761089324951172

Token 609: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -21.875
    5. 'def' → logprob: -23.75
    6. 'pr' → logprob: -24.375
    7. 'printf' → logprob: -25.5
    8. 'println' → logprob: -25.75
    9. 'prin' → logprob: -26.0
    10. '(print' → logprob: -26.375

Token 610: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.976922744186595e-05
    2. 'res' → logprob: -10.250040054321289
    3. '(' → logprob: -12.375040054321289
    4. ' res' → logprob: -16.00004005432129
    5. '(result' → logprob: -17.62504005432129
    6. '()' → logprob: -18.00004005432129
    7. '(f' → logprob: -18.00004005432129
    8. '$res' → logprob: -19.25004005432129
    9. '=res' → logprob: -19.37504005432129
    10. '	res' → logprob: -20.00004005432129

Token 611: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '())' → logprob: -15.750000953674316
    3. '()' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.25
    5. '))' → logprob: -16.25
    6. ')`' → logprob: -16.5
    7. ' )' → logprob: -17.375
    8. '`)' → logprob: -18.0
    9. '')' → logprob: -18.625
    10. ')}' → logprob: -18.625

Token 612: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4740927219390869
    2. 'if' → logprob: -0.9740927219390869
    3. 'n' → logprob: -11.099092483520508
    4. ' if' → logprob: -15.099092483520508
    5. '```' → logprob: -15.974092483520508
    6. 'for' → logprob: -16.849092483520508
    7. '#' → logprob: -17.099092483520508
    8. ' def' → logprob: -17.349092483520508
    9. '
' → logprob: -17.349092483520508
    10. 'ndef' → logprob: -18.224092483520508

Token 613: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06748028099536896
    2. 'main' → logprob: -3.3174803256988525
    3. 'def' → logprob: -4.067480087280273
    4. ' def' → logprob: -4.442480087280273
    5. '_main' → logprob: -9.817480087280273
    6. 'if' → logprob: -10.067480087280273
    7. '
' → logprob: -11.067480087280273
    8. ' run' → logprob: -11.817480087280273
    9. ' if' → logprob: -13.942480087280273
    10. '__' → logprob: -14.817480087280273

Token 614: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002441741817165166
    2. '():
' → logprob: -8.375244140625
    3. ' ():' → logprob: -11.750244140625
    4. '()' → logprob: -12.375244140625
    5. '():
' → logprob: -14.125244140625
    6. '_' → logprob: -15.000244140625
    7. '(' → logprob: -15.500244140625
    8. '()>' → logprob: -15.875244140625
    9. '():

' → logprob: -16.500244140625
    10. '()">' → logprob: -17.000244140625

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014093453995883465
    2. 'n' → logprob: -5.014093399047852
    3. '()' → logprob: -5.889093399047852
    4. '():
' → logprob: -6.264093399047852
    5. '(n' → logprob: -6.764093399047852
    6. '
' → logprob: -7.514093399047852
    7. '():' → logprob: -7.764093399047852
    8. '()
' → logprob: -8.264093399047852
    9. ' n' → logprob: -9.389093399047852
    10. '	n' → logprob: -9.514093399047852

Token 616: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -6.0868278524139896e-05
    2. ' n' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.00006103515625
    4. '
' → logprob: -16.37506103515625
    5. '	n' → logprob: -16.87506103515625
    6. '```' → logprob: -18.50006103515625
    7. '    
' → logprob: -18.87506103515625
    8. '(n' → logprob: -20.25006103515625
    9. 'if' → logprob: -20.50006103515625
    10. '_n' → logprob: -20.87506103515625

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006454797694459558
    2. '=' → logprob: -7.625645637512207
    3. ' =' → logprob: -8.875645637512207
    4. ' ,' → logprob: -11.500645637512207
    5. '   ' → logprob: -12.875645637512207
    6. ',n' → logprob: -13.500645637512207
    7. ')' → logprob: -13.625645637512207
    8. '<|end|>' → logprob: -14.875645637512207
    9. '‌,' → logprob: -15.500645637512207
    10. 'def' → logprob: -15.750645637512207

Token 618: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16026809811592102
    2. ' a' → logprob: -1.9102680683135986
    3. '<|end|>' → logprob: -10.78526782989502
    4. '_a' → logprob: -11.53526782989502
    5. ' ' → logprob: -12.16026782989502
    6. '	a' → logprob: -12.66026782989502
    7. ',a' → logprob: -12.66026782989502
    8. '  ' → logprob: -15.28526782989502
    9. '*a' → logprob: -15.66026782989502
    10. '(a' → logprob: -15.78526782989502

Token 619: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08489882946014404
    2. '_list' → logprob: -3.3348989486694336
    3. '_' → logprob: -3.5848989486694336
    4. ',_' → logprob: -4.459898948669434
    5. '_,' → logprob: -5.209898948669434
    6. ' ,' → logprob: -7.959898948669434
    7. ' _' → logprob: -8.834898948669434
    8. '_user' → logprob: -8.834898948669434
    9. ' =' → logprob: -8.959898948669434
    10. '=' → logprob: -9.709898948669434

Token 620: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. '   ' → logprob: -14.376930236816406
    4. ',' → logprob: -15.751930236816406
    5. '＝' → logprob: -16.751930236816406
    6. '=
' → logprob: -17.126930236816406
    7. '=n' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '=create' → logprob: -17.876930236816406
    10. '    ' → logprob: -18.001930236816406

Token 621: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5759394764900208
    2. ' get' → logprob: -0.8259394764900208
    3. '=get' → logprob: -17.325939178466797
    4. '	get' → logprob: -17.575939178466797
    5. '(get' → logprob: -19.075939178466797
    6. '_get' → logprob: -19.700939178466797
    7. '[get' → logprob: -20.200939178466797
    8. ' geti' → logprob: -20.825939178466797
    9. ' gete' → logprob: -20.950939178466797
    10. ',get' → logprob: -21.075939178466797

Token 622: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1875571544806007e-05
    2. 'input' → logprob: -11.375011444091797
    3. 'Input' → logprob: -15.875011444091797
    4. '_' → logprob: -16.125011444091797
    5. '_inputs' → logprob: -16.375011444091797
    6. '_INPUT' → logprob: -17.750011444091797
    7. ' input' → logprob: -18.000011444091797
    8. '(input' → logprob: -18.375011444091797
    9. '_output' → logprob: -18.750011444091797
    10. ' _' → logprob: -18.875011444091797

Token 623: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28452956676483154
    2. '
' → logprob: -1.4095295667648315
    3. '()
' → logprob: -6.034529685974121
    4. '    
' → logprob: -7.909529685974121
    5. '()' → logprob: -8.534529685974121
    6. 'def' → logprob: -9.284529685974121
    7. '```' → logprob: -9.409529685974121
    8. '  
' → logprob: -9.534529685974121
    9. '<|end|>' → logprob: -10.159529685974121
    10. '
' → logprob: -10.534529685974121

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1271737813949585
    2. ' res' → logprob: -2.377173900604248
    3. 'res' → logprob: -3.627173900604248
    4. '	res' → logprob: -11.62717342376709
    5. 'result' → logprob: -13.12717342376709
    6. '```' → logprob: -13.37717342376709
    7. '
' → logprob: -13.62717342376709
    8. '<|end|>' → logprob: -14.25217342376709
    9. '    
' → logprob: -14.50217342376709
    10. ' result' → logprob: -15.00217342376709

Token 625: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0031794982496649027
    2. ' res' → logprob: -5.753179550170898
    3. 'result' → logprob: -13.253179550170898
    4. '   ' → logprob: -16.7531795501709
    5. '	res' → logprob: -18.1281795501709
    6. ' result' → logprob: -20.2531795501709
    7. '```' → logprob: -20.5031795501709
    8. '_res' → logprob: -20.7531795501709
    9. 'print' → logprob: -20.8781795501709
    10. 'r' → logprob: -21.1281795501709

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. '=create' → logprob: -14.826414108276367
    4. '=s' → logprob: -16.826414108276367
    5. '=get' → logprob: -17.076414108276367
    6. '<|end|>' → logprob: -17.576414108276367
    7. ' ' → logprob: -17.826414108276367
    8. '＝' → logprob: -17.951414108276367
    9. '  ' → logprob: -17.951414108276367
    10. ',' → logprob: -18.076414108276367

Token 627: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00861456897109747
    2. ' solve' → logprob: -4.758614540100098
    3. '.solve' → logprob: -18.008615493774414
    4. '   ' → logprob: -19.883615493774414
    5. 'sol' → logprob: -21.008615493774414
    6. '
' → logprob: -21.508615493774414
    7. ' ' → logprob: -21.758615493774414
    8. 'save' → logprob: -22.133615493774414
    9. 'solver' → logprob: -22.383615493774414
    10. 'resolve' → logprob: -22.633615493774414

Token 628: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020807012333534658
    2. '(' → logprob: -8.500207901000977
    3. ' (' → logprob: -12.500207901000977
    4. '(
' → logprob: -14.250207901000977
    5. 'n' → logprob: -17.500207901000977
    6. '```' → logprob: -17.625207901000977
    7. '(noun' → logprob: -17.875207901000977
    8. '((' → logprob: -18.125207901000977
    9. '<n' → logprob: -18.250207901000977
    10. '(

' → logprob: -18.562707901000977

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005873450427316129
    2. '(n' → logprob: -8.125587463378906
    3. ',n' → logprob: -8.250587463378906
    4. '(' → logprob: -11.000587463378906
    5. ' ,' → logprob: -12.000587463378906
    6. 'n' → logprob: -12.750587463378906
    7. ',
' → logprob: -12.875587463378906
    8. ')' → logprob: -13.500587463378906
    9. ' n' → logprob: -16.000587463378906
    10. '=' → logprob: -16.375587463378906

Token 630: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04471934214234352
    2. 'n' → logprob: -3.4197194576263428
    3. ' a' → logprob: -4.669719219207764
    4. ' n' → logprob: -6.419719219207764
    5. ')' → logprob: -12.294719696044922
    6. ' ' → logprob: -13.669719696044922
    7. ')a' → logprob: -14.419719696044922
    8. '<|end|>' → logprob: -14.794719696044922
    9. '```' → logprob: -15.044719696044922
    10. '	a' → logprob: -15.419719696044922

Token 631: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.9424725148128346e-05
    2. 'list' → logprob: -10.250049591064453
    3. 'ist' → logprob: -11.375049591064453
    4. '_' → logprob: -13.500049591064453
    5. 'List' → logprob: -15.000049591064453
    6. ',' → logprob: -15.500049591064453
    7. '_l' → logprob: -15.875049591064453
    8. ')' → logprob: -15.875049591064453
    9. ',_' → logprob: -16.125049591064453
    10. '_lst' → logprob: -16.250049591064453

Token 632: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31328243017196655
    2. ')' → logprob: -1.3132824897766113
    3. '   ' → logprob: -11.563282012939453
    4. ')
' → logprob: -11.938282012939453
    5. '(n' → logprob: -13.313282012939453
    6. ')n' → logprob: -13.813282012939453
    7. ' )
' → logprob: -13.938282012939453
    8. ')

' → logprob: -14.938282012939453
    9. ' ' → logprob: -14.938282012939453
    10. ',' → logprob: -15.563282012939453

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09802965819835663
    2. 'print' → logprob: -2.848029613494873
    3. '
' → logprob: -3.348029613494873
    4. '    
' → logprob: -8.973030090332031
    5. ' print' → logprob: -9.473030090332031
    6. '	print' → logprob: -10.598030090332031
    7. '(print' → logprob: -11.223030090332031
    8. '
' → logprob: -11.848030090332031
    9. '()
' → logprob: -12.473030090332031
    10. '```' → logprob: -12.848030090332031

Token 634: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027432903880253434
    2. ' print' → logprob: -8.250274658203125
    3. '   ' → logprob: -11.250274658203125
    4. '	print' → logprob: -17.125274658203125
    5. '  ' → logprob: -20.125274658203125
    6. '
' → logprob: -20.375274658203125
    7. ' ' → logprob: -20.750274658203125
    8. '.print' → logprob: -21.125274658203125
    9. '(print' → logprob: -21.750274658203125
    10. '_print' → logprob: -21.875274658203125

Token 635: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.87500286102295
    3. '_res' → logprob: -14.00000286102295
    4. '(' → logprob: -14.50000286102295
    5. '(result' → logprob: -15.75000286102295
    6. 'result' → logprob: -16.375001907348633
    7. '_results' → logprob: -17.000001907348633
    8. '(_' → logprob: -17.000001907348633
    9. '_RESULT' → logprob: -17.250001907348633
    10. '(res' → logprob: -18.250001907348633

Token 636: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'res' → logprob: -16.25002098083496
    4. '(
' → logprob: -17.25002098083496
    5. ' (' → logprob: -17.50002098083496
    6. '(re' → logprob: -19.37502098083496
    7. ',res' → logprob: -19.50002098083496
    8. '(result' → logprob: -20.12502098083496
    9. '(results' → logprob: -20.12502098083496
    10. '(resp' → logprob: -20.25002098083496

Token 637: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06830964982509613
    2. '())' → logprob: -2.8183095455169678
    3. '()' → logprob: -5.068309783935547
    4. ')
' → logprob: -11.068309783935547
    5. '()
' → logprob: -12.318309783935547
    6. ' )' → logprob: -12.693309783935547
    7. '())
' → logprob: -12.818309783935547
    8. '(' → logprob: -13.193309783935547
    9. ' ())' → logprob: -15.068309783935547
    10. ')

' → logprob: -15.568309783935547

Token 638: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005786505062133074
    2. '
' → logprob: -7.500578880310059
    3. ' if' → logprob: -10.875578880310059
    4. '```' → logprob: -12.375578880310059
    5. '\n' → logprob: -13.750578880310059
    6. 'main' → logprob: -14.125578880310059
    7. '#' → logprob: -14.750578880310059
    8. '<|end|>' → logprob: -15.750578880310059
    9. '\' → logprob: -16.625577926635742
    10. '

' → logprob: -17.000577926635742

Token 639: ' test' (ID: 1746)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21889053285121918
    2. ' __' → logprob: -1.9688905477523804
    3. ' main' → logprob: -3.593890428543091
    4. 'main' → logprob: -4.09389066696167
    5. '_' → logprob: -4.84389066696167
    6. 'if' → logprob: -5.96889066696167
    7. '_main' → logprob: -7.34389066696167
    8. ' _' → logprob: -7.71889066696167
    9. '_name' → logprob: -7.84389066696167
    10. '___' → logprob: -9.093890190124512

Token 640: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006182490848004818
    2. '_main' → logprob: -5.131182670593262
    3. '()' → logprob: -9.631182670593262
    4. '_:' → logprob: -9.756182670593262
    5. '():' → logprob: -10.006182670593262
    6. '_case' → logprob: -10.381182670593262
    7. '_s' → logprob: -11.631182670593262
    8. '_(' → logprob: -12.256182670593262
    9. '_Main' → logprob: -12.881182670593262
    10. '_##' → logprob: -12.881182670593262

Token 641: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.0011870148591697216
    2. 'olution' → logprob: -7.376186847686768
    3. 't' → logprob: -8.251187324523926
    4. 'et' → logprob: -9.751187324523926
    5. 'olutions' → logprob: -9.876187324523926
    6. 'ample' → logprob: -10.126187324523926
    7. 'olver' → logprob: -10.251187324523926
    8. 'um' → logprob: -10.376187324523926
    9. 'uite' → logprob: -10.876187324523926
    10. 'mall' → logprob: -11.251187324523926

Token 642: '_basic' (ID: 84491)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001725511101540178
    2. '():
' → logprob: -9.12517261505127
    3. ' ():' → logprob: -9.87517261505127
    4. '_' → logprob: -11.75017261505127
    5. '(' → logprob: -13.25017261505127
    6. '()' → logprob: -14.25017261505127
    7. '():

' → logprob: -14.37517261505127
    8. '():
' → logprob: -15.00017261505127
    9. '_case' → logprob: -15.00017261505127
    10. '_s' → logprob: -16.125171661376953

Token 643: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.555654105497524e-05
    2. '():
' → logprob: -9.37509536743164
    3. ' ():' → logprob: -12.00009536743164
    4. '()' → logprob: -12.50009536743164
    5. '(' → logprob: -14.75009536743164
    6. '():
' → logprob: -15.37509536743164
    7. '():

' → logprob: -15.87509536743164
    8. ':' → logprob: -17.50009536743164
    9. '_' → logprob: -18.12509536743164
    10. '):' → logprob: -19.62509536743164

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022601638920605183
    2. ' assert' → logprob: -7.127260208129883
    3. 'n' → logprob: -7.377260208129883
    4. 'assert' → logprob: -7.877260208129883
    5. ' n' → logprob: -8.502260208129883
    6. 'a' → logprob: -8.752260208129883
    7. ' a' → logprob: -9.877260208129883
    8. 'def' → logprob: -10.502260208129883
    9. ' def' → logprob: -13.252260208129883
    10. '   ' → logprob: -13.377260208129883

Token 645: ' assert' (ID: 3696)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2442198246717453
    2. ' a' → logprob: -2.6192197799682617
    3. 'n' → logprob: -2.7442197799682617
    4. ' n' → logprob: -3.2442197799682617
    5. '   ' → logprob: -3.7442197799682617
    6. 'assert' (adapté à ' assert') → logprob: -4.869219779968262
    7. ' assert' → logprob: -5.244219779968262
    8. 'def' → logprob: -6.494219779968262
    9. 'arr' → logprob: -7.369219779968262
    10. ' arr' → logprob: -7.494219779968262

Token 646: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.07889353483915329
    2. 'solve' → logprob: -2.5788934230804443
    3. '(s' → logprob: -12.578893661499023
    4. '.solve' → logprob: -15.703893661499023
    5. 's' → logprob: -16.828893661499023
    6. ' ' → logprob: -16.828893661499023
    7. '   ' → logprob: -17.453893661499023
    8. '(' → logprob: -17.703893661499023
    9. ' solver' → logprob: -18.203893661499023
    10. ' ' → logprob: -18.703893661499023

Token 647: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. ' (' → logprob: -13.000004768371582
    3. '([' → logprob: -13.750004768371582
    4. '(len' → logprob: -14.625004768371582
    5. '3' → logprob: -15.000004768371582
    6. '(n' → logprob: -15.375004768371582
    7. '```' → logprob: -16.1250057220459
    8. '5' → logprob: -16.2500057220459
    9. '((' → logprob: -16.3750057220459
    10. '(None' → logprob: -16.6250057220459

Token 648: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0037936619482934475
    2. '5' → logprob: -5.628793716430664
    3. '4' → logprob: -8.878793716430664
    4. '2' → logprob: -10.253793716430664
    5. '1' → logprob: -11.128793716430664
    6. ')' → logprob: -13.378793716430664
    7. ' ' → logprob: -13.753793716430664
    8. '```' → logprob: -14.628793716430664
    9. '   ' → logprob: -15.003793716430664
    10. '[' → logprob: -15.128793716430664

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013709533959627151
    2. ',[' → logprob: -6.626370906829834
    3. '([' → logprob: -10.376371383666992
    4. '[' → logprob: -11.376371383666992
    5. ' ,' → logprob: -13.126371383666992
    6. ' ,[' → logprob: -14.751371383666992
    7. '(' → logprob: -17.251371383666992
    8. '=[' → logprob: -17.376371383666992
    9. ' [' → logprob: -17.376371383666992
    10. ',
' → logprob: -17.876371383666992

Token 650: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.908022285439074e-05
    2. ' [' → logprob: -9.750059127807617
    3. '[-' → logprob: -14.875059127807617
    4. '   ' → logprob: -15.000059127807617
    5. ' ' → logprob: -18.625059127807617
    6. '  ' → logprob: -18.625059127807617
    7. ')' → logprob: -19.125059127807617
    8. '[
' → logprob: -19.625059127807617
    9. '    ' → logprob: -20.250059127807617
    10. ')[' → logprob: -21.375059127807617

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43936797976493835
    2. '4' → logprob: -2.1893680095672607
    3. '10' → logprob: -2.1893680095672607
    4. '5' → logprob: -2.8143680095672607
    5. '3' → logprob: -2.8143680095672607
    6. '2' → logprob: -5.064367771148682
    7. '7' → logprob: -5.814367771148682
    8. '8' → logprob: -6.564367771148682
    9. '9' → logprob: -7.689367771148682
    10. '6' → logprob: -8.56436824798584

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016563729150220752
    2. ' ,' → logprob: -8.875165939331055
    3. '2' → logprob: -11.125165939331055
    4. ',
' → logprob: -13.000165939331055
    5. '3' → logprob: -13.125165939331055
    6. '4' → logprob: -13.375165939331055
    7. '0' → logprob: -13.625165939331055
    8. '1' → logprob: -13.750165939331055
    9. '5' → logprob: -14.125165939331055
    10. '])' → logprob: -14.500165939331055

Token 653: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3534465432167053
    2. '3' → logprob: -1.2284464836120605
    3. '5' → logprob: -6.1034464836120605
    4. '4' → logprob: -6.7284464836120605
    5. ' ' → logprob: -7.3534464836120605
    6. '-' → logprob: -7.6034464836120605
    7. '1' → logprob: -8.353446960449219
    8. '7' → logprob: -9.353446960449219
    9. '6' → logprob: -10.603446960449219
    10. '9' → logprob: -10.978446960449219

Token 654: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33360418677330017
    2. '3' → logprob: -1.3336042165756226
    3. '5' → logprob: -4.833604335784912
    4. '4' → logprob: -4.833604335784912
    5. '1' → logprob: -5.833604335784912
    6. '10' → logprob: -7.708604335784912
    7. '7' → logprob: -8.208603858947754
    8. '9' → logprob: -8.833603858947754
    9. '8' → logprob: -8.958603858947754
    10. '6' → logprob: -9.083603858947754

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002656271681189537
    2. ' ,' → logprob: -8.750266075134277
    3. '7' → logprob: -10.250266075134277
    4. '2' → logprob: -10.250266075134277
    5. '5' → logprob: -10.500266075134277
    6. '1' → logprob: -12.750266075134277
    7. ' ' → logprob: -13.250266075134277
    8. '3' → logprob: -14.000266075134277
    9. '6' → logprob: -14.125266075134277
    10. '9' → logprob: -14.250266075134277

Token 656: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03196166083216667
    2. '5' → logprob: -3.531961679458618
    3. ' ' → logprob: -7.156961441040039
    4. '4' → logprob: -7.531961441040039
    5. '7' → logprob: -8.031961441040039
    6. '-' → logprob: -8.531961441040039
    7. '3' → logprob: -8.781961441040039
    8. '6' → logprob: -8.906961441040039
    9. '1' → logprob: -10.031961441040039
    10. '0' → logprob: -10.781961441040039

Token 657: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12967024743556976
    2. '5' → logprob: -2.1296701431274414
    3. '7' → logprob: -6.629670143127441
    4. '4' → logprob: -7.504670143127441
    5. '0' → logprob: -8.129670143127441
    6. '6' → logprob: -8.254670143127441
    7. '-' → logprob: -8.629670143127441
    8. '1' → logprob: -9.504670143127441
    9. '3' → logprob: -10.629670143127441
    10. '```' → logprob: -11.254670143127441

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.710618905955926e-05
    2. ' ,' → logprob: -9.375097274780273
    3. '])' → logprob: -12.375097274780273
    4. '2' → logprob: -12.750097274780273
    5. '7' → logprob: -13.500097274780273
    6. '3' → logprob: -13.875097274780273
    7. '1' → logprob: -14.125097274780273
    8. '5' → logprob: -14.375097274780273
    9. '0' → logprob: -14.875097274780273
    10. ',
' → logprob: -15.000097274780273

Token 659: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017083751736208797
    2. '7' → logprob: -7.376708507537842
    3. '5' → logprob: -7.626708507537842
    4. '1' → logprob: -8.251708030700684
    5. '6' → logprob: -9.126708030700684
    6. '-' → logprob: -10.001708030700684
    7. ' ' → logprob: -10.001708030700684
    8. '3' → logprob: -10.001708030700684
    9. '0' → logprob: -10.501708030700684
    10. '8' → logprob: -10.876708030700684

Token 660: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00489168893545866
    2. '5' → logprob: -6.254891872406006
    3. '1' → logprob: -6.504891872406006
    4. '7' → logprob: -7.629891872406006
    5. '3' → logprob: -7.879891872406006
    6. '6' → logprob: -8.379891395568848
    7. '0' → logprob: -8.754891395568848
    8. '8' → logprob: -9.879891395568848
    9. '9' → logprob: -10.004891395568848
    10. '-' → logprob: -10.379891395568848

Token 661: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.625000953674316
    3. ' ])' → logprob: -15.000000953674316
    4. '])
' → logprob: -15.625000953674316
    5. ',' → logprob: -16.375001907348633
    6. '))' → logprob: -16.625001907348633
    7. '4' → logprob: -16.875001907348633
    8. ']' → logprob: -17.000001907348633
    9. ''])' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.750001907348633

Token 662: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21820570528507233
    2. '==' → logprob: -2.093205690383911
    3. ' >=' → logprob: -2.968205690383911
    4. '>=' → logprob: -4.59320592880249
    5. ' >' → logprob: -4.84320592880249
    6. '>' → logprob: -6.71820592880249
    7. '()' → logprob: -7.09320592880249
    8. ' <=' → logprob: -7.21820592880249
    9. ' !=' → logprob: -8.718205451965332
    10. '<=' → logprob: -9.593205451965332

Token 663: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.057891327887773514
    2. '0' → logprob: -3.057891368865967
    3. '2' → logprob: -5.807891368865967
    4. '1' → logprob: -6.057891368865967
    5. '3' → logprob: -6.682891368865967
    6. '4' → logprob: -6.932891368865967
    7. '6' → logprob: -7.557891368865967
    8. '5' → logprob: -8.307890892028809
    9. '7' → logprob: -8.557890892028809
    10. '8' → logprob: -8.807890892028809

Token 664: '20' (ID: 455)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.036423198878765106
    2. '0' → logprob: -3.7864232063293457
    3. '2' → logprob: -5.411423206329346
    4. '1' → logprob: -5.661423206329346
    5. '3' → logprob: -6.286423206329346
    6. '4' → logprob: -6.536423206329346
    7. '6' → logprob: -7.411423206329346
    8. '5' → logprob: -7.911423206329346
    9. '7' → logprob: -8.161422729492188
    10. '8' → logprob: -8.661422729492188

Token 665: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002239470137283206
    2. '<|end|>' → logprob: -7.37723970413208
    3. 'main' → logprob: -7.75223970413208
    4. '#' → logprob: -7.75223970413208
    5. '_' → logprob: -8.502239227294922
    6. ' if' → logprob: -8.502239227294922
    7. '
' → logprob: -8.502239227294922
    8. 'def' → logprob: -9.627239227294922
    9. '.' → logprob: -10.752239227294922
    10. 'import' → logprob: -11.877239227294922

Token 666: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024043230339884758
    2. 'main' → logprob: -3.899043321609497
    3. '<|end|>' → logprob: -6.274043083190918
    4. '#' → logprob: -7.024043083190918
    5. '
' → logprob: -7.649043083190918
    6. ' if' → logprob: -9.149043083190918
    7. '```' → logprob: -10.149043083190918
    8. 'def' → logprob: -11.149043083190918
    9. ' main' → logprob: -11.774043083190918
    10. '.' → logprob: -12.024043083190918

Token 667: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.003223821986466646
    2. ' test' → logprob: -5.753223896026611
    3. 'if' → logprob: -10.253223419189453
    4. 'run' → logprob: -12.503223419189453
    5. 'pytest' → logprob: -12.628223419189453
    6. 'def' → logprob: -14.128223419189453
    7. '__' → logprob: -14.378223419189453
    8. ' if' → logprob: -14.378223419189453
    9. 'import' → logprob: -14.628223419189453
    10. 'main' → logprob: -14.878223419189453

Token 668: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0001984146365430206
    2. '_' → logprob: -9.500198364257812
    3. '_basic' → logprob: -9.875198364257812
    4. '_solver' → logprob: -11.250198364257812
    5. 'solve' → logprob: -11.750198364257812
    6. '_
' → logprob: -12.500198364257812
    7. '_solution' → logprob: -12.500198364257812
    8. 'def' → logprob: -12.750198364257812
    9. '_write' → logprob: -13.250198364257812
    10. '_add' → logprob: -13.250198364257812

Token 669: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -2.7133641196996905e-05
    2. 'solve' → logprob: -11.50002670288086
    3. 'et' → logprob: -12.12502670288086
    4. 'OLVE' → logprob: -12.87502670288086
    5. 'ove' → logprob: -13.00002670288086
    6. 'o' → logprob: -14.00002670288086
    7. 't' → logprob: -14.12502670288086
    8. '_' → logprob: -14.12502670288086
    9. 'ov' → logprob: -14.62502670288086
    10. 'olver' → logprob: -14.62502670288086

Token 670: '_medium' (ID: 130994)
  Prédit: '_basic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_basic' → logprob: -0.031215881928801537
    2. '_' → logprob: -4.281215667724609
    3. '_random' → logprob: -4.906215667724609
    4. '_edge' → logprob: -5.531215667724609
    5. '_complex' → logprob: -6.531215667724609
    6. '_more' → logprob: -7.031215667724609
    7. '_large' → logprob: -7.281215667724609
    8. '_empty' → logprob: -7.781215667724609
    9. '_corner' → logprob: -8.40621566772461
    10. '_max' → logprob: -8.40621566772461

Token 671: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.048633918166160583
    2. '():' → logprob: -3.0486338138580322
    3. '():
' → logprob: -10.173633575439453
    4. '()' → logprob: -12.298633575439453
    5. '():

' → logprob: -12.673633575439453
    6. ' ():' → logprob: -14.298633575439453
    7. 'def' → logprob: -16.923633575439453
    8. '()):
' → logprob: -17.298633575439453
    9. '_basic' → logprob: -17.423633575439453
    10. '(' → logprob: -17.923633575439453

Token 672: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023634890094399452
    2. 'def' → logprob: -3.898634910583496
    3. 'assert' → logprob: -6.023634910583496
    4. ' def' → logprob: -7.648634910583496
    5. ' assert' → logprob: -8.648634910583496
    6. '```' → logprob: -12.773634910583496
    7. '.assert' → logprob: -13.398634910583496
    8. '@pytest' → logprob: -13.398634910583496
    9. '
' → logprob: -13.648634910583496
    10. '	assert' → logprob: -13.898634910583496

Token 673: ' assert' (ID: 3696)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' (adapté à ' assert') → logprob: -0.30594608187675476
    2. 'def' → logprob: -1.5559461116790771
    3. ' assert' → logprob: -3.055946111679077
    4. '   ' → logprob: -5.430945873260498
    5. ' def' → logprob: -6.805945873260498
    6. 'import' → logprob: -12.305946350097656
    7. '
' → logprob: -13.055946350097656
    8. '.assert' → logprob: -13.055946350097656
    9. 'None' → logprob: -13.180946350097656
    10. '#' → logprob: -13.180946350097656

Token 674: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.03804171830415726
    2. 'solve' → logprob: -3.288041830062866
    3. '(s' → logprob: -16.663042068481445
    4. '.solve' → logprob: -16.788042068481445
    5. ' ' → logprob: -17.163042068481445
    6. 'sol' → logprob: -17.413042068481445
    7. ' test' → logprob: -17.538042068481445
    8. '   ' → logprob: -17.913042068481445
    9. 's' → logprob: -18.038042068481445
    10. ' solver' → logprob: -18.288042068481445

Token 675: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -17.625
    3. ' (' → logprob: -19.25
    4. '<|end|>' → logprob: -19.625
    5. '()' → logprob: -20.0
    6. '4' → logprob: -20.25
    7. '((' → logprob: -20.375
    8. '6' → logprob: -21.125
    9. '3' → logprob: -21.125
    10. ' ' → logprob: -21.625

Token 676: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10943544656038284
    2. '4' → logprob: -2.984435558319092
    3. '3' → logprob: -3.484435558319092
    4. '6' → logprob: -3.859435558319092
    5. '7' → logprob: -6.859435558319092
    6. '8' → logprob: -8.859435081481934
    7. '10' → logprob: -9.734435081481934
    8. '(' → logprob: -10.234435081481934
    9. '9' → logprob: -10.484435081481934
    10. '2' → logprob: -11.359435081481934

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022427814838010818
    2. ',[' → logprob: -9.000224113464355
    3. '[' → logprob: -9.500224113464355
    4. ' ,' → logprob: -11.125224113464355
    5. '   ' → logprob: -12.250224113464355
    6. '(' → logprob: -12.875224113464355
    7. ' [' → logprob: -13.000224113464355
    8. '([' → logprob: -14.000224113464355
    9. ' ,[' → logprob: -15.000224113464355
    10. ',
' → logprob: -15.750224113464355

Token 678: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05491500720381737
    2. ' [' → logprob: -2.929914951324463
    3. '[-' → logprob: -11.179915428161621
    4. '1' → logprob: -12.429915428161621
    5. ' ' → logprob: -12.679915428161621
    6. '4' → logprob: -13.304915428161621
    7. '3' → logprob: -13.554915428161621
    8. '6' → logprob: -13.679915428161621
    9. ')' → logprob: -13.679915428161621
    10. '2' → logprob: -13.804915428161621

Token 679: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0004055500030518
    2. '2' → logprob: -1.1254055500030518
    3. '5' → logprob: -1.6254055500030518
    4. '3' → logprob: -2.5004055500030518
    5. '4' → logprob: -3.7504055500030518
    6. '10' → logprob: -6.125405311584473
    7. '7' → logprob: -6.250405311584473
    8. '6' → logprob: -7.375405311584473
    9. '9' → logprob: -8.000405311584473
    10. '8' → logprob: -9.500405311584473

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ' ,' → logprob: -10.50006103515625
    3. '3' → logprob: -11.62506103515625
    4. '1' → logprob: -11.75006103515625
    5. '2' → logprob: -11.87506103515625
    6. ' ' → logprob: -13.12506103515625
    7. '4' → logprob: -13.25006103515625
    8. '5' → logprob: -13.37506103515625
    9. '7' → logprob: -13.87506103515625
    10. '6' → logprob: -14.25006103515625

Token 681: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4952857196331024
    2. '1' → logprob: -1.3702857494354248
    3. '3' → logprob: -2.120285749435425
    4. '4' → logprob: -5.120285511016846
    5. '7' → logprob: -5.620285511016846
    6. '9' → logprob: -5.620285511016846
    7. '10' → logprob: -6.120285511016846
    8. '8' → logprob: -7.495285511016846
    9. '12' → logprob: -8.745285987854004
    10. '6' → logprob: -8.995285987854004

Token 682: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.750031590461731
    2. '2' → logprob: -1.125031590461731
    3. '3' → logprob: -1.750031590461731
    4. '4' → logprob: -4.250031471252441
    5. '7' → logprob: -5.250031471252441
    6. '9' → logprob: -5.625031471252441
    7. '10' → logprob: -5.750031471252441
    8. '8' → logprob: -6.250031471252441
    9. '6' → logprob: -7.875031471252441
    10. '5' → logprob: -8.000031471252441

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022046364028938115
    2. ' ,' → logprob: -8.62522029876709
    3. '5' → logprob: -10.75022029876709
    4. '2' → logprob: -12.00022029876709
    5. ' ' → logprob: -12.25022029876709
    6. '3' → logprob: -12.75022029876709
    7. '1' → logprob: -12.87522029876709
    8. '4' → logprob: -13.37522029876709
    9. '6' → logprob: -14.75022029876709
    10. '7' → logprob: -14.87522029876709

Token 684: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5977376699447632
    2. '1' → logprob: -1.7227376699447632
    3. '4' → logprob: -2.0977377891540527
    4. '2' → logprob: -2.0977377891540527
    5. '5' → logprob: -3.7227377891540527
    6. '7' → logprob: -7.347737789154053
    7. '6' → logprob: -7.597737789154053
    8. '10' → logprob: -8.222737312316895
    9. '8' → logprob: -9.222737312316895
    10. '9' → logprob: -9.347737312316895

Token 685: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8986451625823975
    2. '1' → logprob: -1.5236451625823975
    3. '2' → logprob: -1.7736451625823975
    4. '4' → logprob: -2.0236451625823975
    5. '5' → logprob: -2.6486451625823975
    6. '7' → logprob: -7.023645401000977
    7. '6' → logprob: -7.273645401000977
    8. '10' → logprob: -8.398645401000977
    9. '0' → logprob: -8.773645401000977
    10. '8' → logprob: -8.898645401000977

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048477304517291486
    2. '5' → logprob: -8.250484466552734
    3. ' ,' → logprob: -8.875484466552734
    4. '3' → logprob: -10.500484466552734
    5. '4' → logprob: -10.875484466552734
    6. '2' → logprob: -11.375484466552734
    7. '1' → logprob: -11.625484466552734
    8. '6' → logprob: -11.875484466552734
    9. ' ' → logprob: -12.250484466552734
    10. '7' → logprob: -12.750484466552734

Token 687: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4678486585617065
    2. '1' → logprob: -1.5928486585617065
    3. '3' → logprob: -1.5928486585617065
    4. '4' → logprob: -1.7178486585617065
    5. '2' → logprob: -1.8428486585617065
    6. '6' → logprob: -4.217848777770996
    7. '7' → logprob: -4.717848777770996
    8. '8' → logprob: -7.592848777770996
    9. '9' → logprob: -7.967848777770996
    10. '10' → logprob: -8.342848777770996

Token 688: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6463825702667236
    2. '1' → logprob: -1.5213825702667236
    3. '3' → logprob: -2.2713825702667236
    4. '2' → logprob: -2.7713825702667236
    5. '4' → logprob: -2.7713825702667236
    6. '6' → logprob: -3.8963825702667236
    7. '7' → logprob: -4.7713823318481445
    8. '8' → logprob: -8.521382331848145
    9. '10' → logprob: -9.021382331848145
    10. '9' → logprob: -9.271382331848145

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002956591488327831
    2. ' ,' → logprob: -8.250295639038086
    3. '5' → logprob: -11.875295639038086
    4. '2' → logprob: -11.875295639038086
    5. '3' → logprob: -12.125295639038086
    6. '1' → logprob: -12.250295639038086
    7. '4' → logprob: -12.250295639038086
    8. '6' → logprob: -13.375295639038086
    9. '7' → logprob: -13.625295639038086
    10. '0' → logprob: -13.625295639038086

Token 690: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.198822021484375
    2. '2' → logprob: -1.448822021484375
    3. '4' → logprob: -1.573822021484375
    4. '5' → logprob: -1.823822021484375
    5. '7' → logprob: -3.448822021484375
    6. '1' → logprob: -3.698822021484375
    7. ' ' → logprob: -3.823822021484375
    8. '6' → logprob: -4.448822021484375
    9. '8' → logprob: -6.323822021484375
    10. '9' → logprob: -6.698822021484375

Token 691: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6866481900215149
    2. '4' → logprob: -1.3116481304168701
    3. '2' → logprob: -1.8116481304168701
    4. '7' → logprob: -3.81164813041687
    5. '5' → logprob: -3.81164813041687
    6. '1' → logprob: -4.686648368835449
    7. '6' → logprob: -5.686648368835449
    8. '10' → logprob: -6.061648368835449
    9. '8' → logprob: -6.186648368835449
    10. '9' → logprob: -6.186648368835449

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003003081073984504
    2. ' ,' → logprob: -8.750300407409668
    3. '])' → logprob: -10.375300407409668
    4. '5' → logprob: -10.500300407409668
    5. '4' → logprob: -10.750300407409668
    6. '3' → logprob: -11.125300407409668
    7. '2' → logprob: -11.375300407409668
    8. '7' → logprob: -11.375300407409668
    9. '6' → logprob: -11.500300407409668
    10. '1' → logprob: -12.250300407409668

Token 693: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1529403924942017
    2. '3' → logprob: -1.5279403924942017
    3. '2' → logprob: -1.6529403924942017
    4. '4' → logprob: -1.7779403924942017
    5. '1' → logprob: -3.027940273284912
    6. '6' → logprob: -3.527940273284912
    7. '7' → logprob: -3.902940273284912
    8. '8' → logprob: -6.027940273284912
    9. '0' → logprob: -6.152940273284912
    10. '9' → logprob: -6.402940273284912

Token 694: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.299590826034546
    2. '5' → logprob: -1.299590826034546
    3. '4' → logprob: -1.549590826034546
    4. '2' → logprob: -1.924590826034546
    5. '1' → logprob: -3.174590826034546
    6. '7' → logprob: -3.799590826034546
    7. '6' → logprob: -3.799590826034546
    8. '10' → logprob: -5.674591064453125
    9. '8' → logprob: -5.924591064453125
    10. '9' → logprob: -6.174591064453125

Token 695: '])' (ID: 4636)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.225453719496727
    2. '])' → logprob: -1.6004537343978882
    3. ' ])' → logprob: -11.35045337677002
    4. ' ,' → logprob: -11.60045337677002
    5. ')' → logprob: -11.72545337677002
    6. '])
' → logprob: -13.35045337677002
    7. '[' → logprob: -13.35045337677002
    8. ']' → logprob: -13.35045337677002
    9. '4' → logprob: -13.72545337677002
    10. '   ' → logprob: -13.72545337677002

Token 696: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25883299112319946
    2. '==' → logprob: -1.5088329315185547
    3. '()' → logprob: -5.383832931518555
    4. '()==' → logprob: -7.008832931518555
    5. ' >=' → logprob: -7.258832931518555
    6. '>=' → logprob: -7.883832931518555
    7. ' ' → logprob: -9.258832931518555
    8. ' <=' → logprob: -9.508832931518555
    9. '>' → logprob: -10.258832931518555
    10. '<=' → logprob: -10.633832931518555

Token 697: ' ' (ID: 220)
  Prédit: '36'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '36' → logprob: -2.1106250286102295
    2. '30' → logprob: -2.3606250286102295
    3. '42' → logprob: -2.4856250286102295
    4. '48' → logprob: -2.6106250286102295
    5. '40' → logprob: -2.8606250286102295
    6. '39' → logprob: -3.1106250286102295
    7. '33' → logprob: -3.2356250286102295
    8. '54' → logprob: -3.2356250286102295
    9. '38' → logprob: -3.3606250286102295
    10. '44' → logprob: -3.3606250286102295

Token 698: '58' (ID: 4635)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '40' → logprob: -2.0515518188476562
    2. '36' → logprob: -2.5515518188476562
    3. '30' → logprob: -2.6765518188476562
    4. '42' → logprob: -2.8015518188476562
    5. '48' → logprob: -2.9265518188476562
    6. '44' → logprob: -3.0515518188476562
    7. '38' → logprob: -3.1765518188476562
    8. '50' → logprob: -3.3015518188476562
    9. '45' → logprob: -3.4265518188476562
    10. '35' → logprob: -3.4265518188476562

Token 699: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7852462530136108
    2. '_' → logprob: -1.2852462530136108
    3. '<|end|>' → logprob: -1.9102462530136108
    4. '#' → logprob: -2.6602463722229004
    5. ')' → logprob: -3.5352463722229004
    6. 'def' → logprob: -5.4102463722229
    7. '
' → logprob: -5.6602463722229
    8. ' if' → logprob: -6.0352463722229
    9. '__' → logprob: -6.4102463722229
    10. '.' → logprob: -6.7852463722229

Token 700: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019711002241820097
    2. '#' → logprob: -6.626971244812012
    3. ' if' → logprob: -7.876971244812012
    4. '<|end|>' → logprob: -9.876971244812012
    5. '_' → logprob: -10.126971244812012
    6. 'i' → logprob: -10.126971244812012
    7. '.' → logprob: -10.251971244812012
    8. '[' → logprob: -10.751971244812012
    9. 'main' → logprob: -10.876971244812012
    10. '```' → logprob: -11.376971244812012

Token 701: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.2521822154521942
    2. 'test' → logprob: -1.5021822452545166
    3. 'def' → logprob: -8.377182006835938
    4. ' def' → logprob: -10.877182006835938
    5. '	test' → logprob: -14.252182006835938
    6. '(test' → logprob: -14.252182006835938
    7. '__' → logprob: -14.377182006835938
    8. 'import' → logprob: -15.252182006835938
    9. '@test' → logprob: -15.252182006835938
    10. ')test' → logprob: -15.627182006835938

Token 702: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0010005362564697862
    2. 'def' → logprob: -7.25100040435791
    3. '_' → logprob: -9.12600040435791
    4. '_test' → logprob: -9.50100040435791
    5. '_def' → logprob: -10.37600040435791
    6. 'solve' → logprob: -10.37600040435791
    7. '_define' → logprob: -11.37600040435791
    8. '_validate' → logprob: -11.75100040435791
    9. 'test' → logprob: -12.00100040435791
    10. '_finalize' → logprob: -13.25100040435791

Token 703: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -6.265633419388905e-05
    2. 'ove' → logprob: -10.375062942504883
    3. 'def' → logprob: -12.000062942504883
    4. 'solve' → logprob: -12.000062942504883
    5. 'OLVE' → logprob: -12.375062942504883
    6. 't' → logprob: -12.375062942504883
    7. 'erve' → logprob: -12.750062942504883
    8. 'et' → logprob: -13.125062942504883
    9. 'ov' → logprob: -14.125062942504883
    10. 'test' → logprob: -14.125062942504883

Token 704: '_h' (ID: 3434)
  Prédit: '_basic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_basic' → logprob: -0.04717443883419037
    2. '_medium' → logprob: -3.2971744537353516
    3. '_' → logprob: -5.422174453735352
    4. '_complex' → logprob: -6.422174453735352
    5. '_small' → logprob: -7.172174453735352
    6. '_large' → logprob: -7.547174453735352
    7. '_simple' → logprob: -7.672174453735352
    8. '_more' → logprob: -8.422174453735352
    9. '(' → logprob: -8.672174453735352
    10. '_edge' → logprob: -9.172174453735352

Token 705: 'ard' (ID: 597)
  Prédit: 'ard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.036526989191770554
    2. 'igh' → logprob: -3.911526918411255
    3. 'arder' → logprob: -4.286527156829834
    4. 'e' → logprob: -6.786527156829834
    5. 'uge' → logprob: -7.536527156829834
    6. 'eat' → logprob: -8.911526679992676
    7. 'eight' → logprob: -9.286526679992676
    8. 'idden' → logprob: -9.411526679992676
    9. 'ead' → logprob: -10.036526679992676
    10. 'arden' → logprob: -10.536526679992676

Token 706: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5763225555419922
    2. '():
' → logprob: -0.8263225555419922
    3. '()' → logprob: -8.451322555541992
    4. '():

' → logprob: -9.201322555541992
    5. '():
' → logprob: -10.326322555541992
    6. 'def' → logprob: -10.576322555541992
    7. ' ():' → logprob: -12.326322555541992
    8. '_' → logprob: -13.701322555541992
    9. '()>' → logprob: -13.826322555541992
    10. '(' → logprob: -14.076322555541992

Token 707: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.579767644405365
    2. '   ' → logprob: -0.829767644405365
    3. ' def' → logprob: -6.07976770401001
    4. 'assert' → logprob: -6.57976770401001
    5. '
' → logprob: -9.829767227172852
    6. ' assert' → logprob: -10.079767227172852
    7. ' ' → logprob: -11.454767227172852
    8. '[' → logprob: -11.704767227172852
    9. '  ' → logprob: -12.204767227172852
    10. '    
' → logprob: -12.454767227172852

Token 708: ' assert' (ID: 3696)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' (adapté à ' assert') → logprob: -0.3948027789592743
    2. ' assert' → logprob: -1.1448028087615967
    3. 'def' → logprob: -4.894802570343018
    4. ' def' → logprob: -8.144803047180176
    5. '...' → logprob: -9.644803047180176
    6. '   ' → logprob: -10.519803047180176
    7. 'import' → logprob: -11.394803047180176
    8. 'Assertion' → logprob: -12.019803047180176
    9. ' ' → logprob: -12.144803047180176
    10. '(assert' → logprob: -13.144803047180176

Token 709: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.3868800103664398
    2. 'solve' → logprob: -1.1368800401687622
    3. '(s' → logprob: -11.761879920959473
    4. '.solve' → logprob: -15.011879920959473
    5. '(' → logprob: -15.261879920959473
    6. 's' → logprob: -15.511879920959473
    7. ' ' → logprob: -16.01188087463379
    8. 'False' → logprob: -16.51188087463379
    9. '   ' → logprob: -17.01188087463379
    10. 'assert' → logprob: -17.13688087463379

Token 710: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '6' → logprob: -14.875000953674316
    3. '(
' → logprob: -15.500000953674316
    4. '10' → logprob: -16.0
    5. ' (' → logprob: -17.0
    6. '12' → logprob: -17.625
    7. '7' → logprob: -17.625
    8. '<|end|>' → logprob: -18.0
    9. '(len' → logprob: -18.375
    10. '18' → logprob: -18.625

Token 711: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8154432773590088
    2. '8' → logprob: -1.3154432773590088
    3. '7' → logprob: -1.5654432773590088
    4. '10' → logprob: -3.315443277359009
    5. '9' → logprob: -3.940443277359009
    6. '5' → logprob: -4.19044303894043
    7. '4' → logprob: -5.19044303894043
    8. '3' → logprob: -6.19044303894043
    9. '12' → logprob: -6.81544303894043
    10. '11' → logprob: -8.06544303894043

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. '[' → logprob: -10.125055313110352
    3. ',[' → logprob: -11.500055313110352
    4. ' ,' → logprob: -12.750055313110352
    5. '   ' → logprob: -13.500055313110352
    6. ' [' → logprob: -14.375055313110352
    7. ',
' → logprob: -16.12505531311035
    8. ')' → logprob: -17.25005531311035
    9. '([' → logprob: -17.25005531311035
    10. '<|end|>' → logprob: -17.50005531311035

Token 713: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2812505066394806
    2. ' [' → logprob: -1.4062504768371582
    3. '[-' → logprob: -9.656250953674316
    4. ' [-' → logprob: -11.281250953674316
    5. ' ' → logprob: -11.531250953674316
    6. '   ' → logprob: -11.906250953674316
    7. ')' → logprob: -12.781250953674316
    8. '  ' → logprob: -14.093750953674316
    9. ' ' → logprob: -14.218750953674316
    10. '(' → logprob: -14.656250953674316

Token 714: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0675075054168701
    2. '10' → logprob: -1.4425075054168701
    3. '5' → logprob: -1.5675075054168701
    4. '1' → logprob: -2.56750750541687
    5. '7' → logprob: -2.94250750541687
    6. '9' → logprob: -3.56750750541687
    7. '3' → logprob: -3.56750750541687
    8. '4' → logprob: -4.817507743835449
    9. '2' → logprob: -5.067507743835449
    10. '8' → logprob: -5.442507743835449

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001443035143893212
    2. ' ,' → logprob: -9.625144004821777
    3. '7' → logprob: -10.750144004821777
    4. '8' → logprob: -11.125144004821777
    5. '1' → logprob: -11.375144004821777
    6. '3' → logprob: -11.875144004821777
    7. ' ' → logprob: -12.125144004821777
    8. '2' → logprob: -12.250144004821777
    9. '5' → logprob: -12.375144004821777
    10. '6' → logprob: -12.750144004821777

Token 716: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0007723569869995
    2. '3' → logprob: -2.125772476196289
    3. '7' → logprob: -2.375772476196289
    4. '1' → logprob: -2.375772476196289
    5. '2' → logprob: -2.500772476196289
    6. '5' → logprob: -2.625772476196289
    7. '4' → logprob: -2.875772476196289
    8. ' ' → logprob: -3.000772476196289
    9. '9' → logprob: -3.375772476196289
    10. '6' → logprob: -3.875772476196289

Token 717: '6' (ID: 21)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.3713211417198181
    2. '7' → logprob: -2.121321201324463
    3. '3' → logprob: -2.996321201324463
    4. '2' → logprob: -3.121321201324463
    5. '1' → logprob: -3.371321201324463
    6. '5' → logprob: -3.746321201324463
    7. '4' → logprob: -4.121321201324463
    8. '9' → logprob: -4.496321201324463
    9. '6' → logprob: -4.871321201324463
    10. '10' → logprob: -6.121321201324463

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012654215970542282
    2. ' ,' → logprob: -9.375126838684082
    3. '7' → logprob: -11.750126838684082
    4. '8' → logprob: -11.875126838684082
    5. '3' → logprob: -12.125126838684082
    6. '2' → logprob: -12.250126838684082
    7. '4' → logprob: -12.375126838684082
    8. '1' → logprob: -12.750126838684082
    9. '6' → logprob: -12.875126838684082
    10. '5' → logprob: -13.000126838684082

Token 719: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.4598076343536377
    2. '3' → logprob: -1.5848076343536377
    3. '4' → logprob: -2.0848076343536377
    4. '2' → logprob: -2.3348076343536377
    5. '5' → logprob: -2.3348076343536377
    6. '8' → logprob: -2.4598076343536377
    7. '1' → logprob: -2.5848076343536377
    8. '6' → logprob: -3.4598076343536377
    9. '9' → logprob: -3.4598076343536377
    10. '10' → logprob: -4.334807395935059

Token 720: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.6156164407730103
    2. '3' → logprob: -1.7406164407730103
    3. '8' → logprob: -1.8656164407730103
    4. '2' → logprob: -2.1156163215637207
    5. '4' → logprob: -2.2406163215637207
    6. '6' → logprob: -2.4906163215637207
    7. '5' → logprob: -2.7406163215637207
    8. '1' → logprob: -2.8656163215637207
    9. '9' → logprob: -3.4906163215637207
    10. '10' → logprob: -5.115616321563721

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.911954500945285e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',
' → logprob: -14.000088691711426
    4. ']' → logprob: -14.375088691711426
    5. '8' → logprob: -14.750088691711426
    6. '[' → logprob: -14.875088691711426
    7. '6' → logprob: -15.000088691711426
    8. '4' → logprob: -15.250088691711426
    9. '3' → logprob: -15.375088691711426
    10. '7' → logprob: -15.375088691711426

Token 722: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1511586904525757
    2. '3' → logprob: -2.1511588096618652
    3. '1' → logprob: -2.2761588096618652
    4. '2' → logprob: -2.4011588096618652
    5. '4' → logprob: -2.5261588096618652
    6. '5' → logprob: -2.5261588096618652
    7. '7' → logprob: -2.5261588096618652
    8. '8' → logprob: -3.0261588096618652
    9. '6' → logprob: -3.1511588096618652
    10. '9' → logprob: -3.4011588096618652

Token 723: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5647931098937988
    2. '7' → logprob: -1.6897931098937988
    3. '2' → logprob: -1.9397931098937988
    4. '4' → logprob: -2.189793109893799
    5. '5' → logprob: -2.314793109893799
    6. '1' → logprob: -2.564793109893799
    7. '8' → logprob: -2.564793109893799
    8. '6' → logprob: -3.064793109893799
    9. '9' → logprob: -3.439793109893799
    10. '0' → logprob: -4.314793109893799

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. ' ,' → logprob: -9.000129699707031
    3. '1' → logprob: -13.750129699707031
    4. '8' → logprob: -13.875129699707031
    5. ',
' → logprob: -13.875129699707031
    6. '2' → logprob: -14.500129699707031
    7. '3' → logprob: -14.500129699707031
    8. '4' → logprob: -14.625129699707031
    9. '6' → logprob: -14.625129699707031
    10. '7' → logprob: -14.625129699707031

Token 725: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.7697453498840332
    2. ' ' → logprob: -1.8947453498840332
    3. '7' → logprob: -2.019745349884033
    4. '2' → logprob: -2.144745349884033
    5. '4' → logprob: -2.144745349884033
    6. '5' → logprob: -2.269745349884033
    7. '1' → logprob: -2.519745349884033
    8. '8' → logprob: -3.144745349884033
    9. '6' → logprob: -3.519745349884033
    10. '9' → logprob: -3.519745349884033

Token 726: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.7235699892044067
    2. '7' → logprob: -1.9735699892044067
    3. '4' → logprob: -2.098569869995117
    4. '5' → logprob: -2.098569869995117
    5. '8' → logprob: -2.223569869995117
    6. '2' → logprob: -2.348569869995117
    7. '1' → logprob: -2.348569869995117
    8. '6' → logprob: -2.723569869995117
    9. '9' → logprob: -2.973569869995117
    10. '10' → logprob: -4.598569869995117

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015109812375158072
    2. ' ,' → logprob: -9.125150680541992
    3. '])' → logprob: -10.500150680541992
    4. '1' → logprob: -12.625150680541992
    5. '3' → logprob: -13.125150680541992
    6. '6' → logprob: -13.250150680541992
    7. '8' → logprob: -13.500150680541992
    8. ',
' → logprob: -13.500150680541992
    9. '4' → logprob: -13.625150680541992
    10. '7' → logprob: -14.250150680541992

Token 728: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3078927993774414
    2. '7' → logprob: -1.8078927993774414
    3. '5' → logprob: -2.0578927993774414
    4. '4' → logprob: -2.1828927993774414
    5. '8' → logprob: -2.5578927993774414
    6. '1' → logprob: -2.6828927993774414
    7. '9' → logprob: -2.9328927993774414
    8. '6' → logprob: -3.3078927993774414
    9. '2' → logprob: -3.4328927993774414
    10. '0' → logprob: -3.4328927993774414

Token 729: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3922407627105713
    2. '7' → logprob: -2.0172407627105713
    3. '4' → logprob: -2.2672407627105713
    4. '1' → logprob: -2.2672407627105713
    5. '5' → logprob: -2.2672407627105713
    6. '8' → logprob: -2.3922407627105713
    7. '9' → logprob: -2.7672407627105713
    8. '6' → logprob: -3.0172407627105713
    9. '2' → logprob: -3.0172407627105713
    10. '0' → logprob: -3.0172407627105713

Token 730: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -6.229872087715194e-05
    2. ')' → logprob: -10.125061988830566
    3. ',' → logprob: -11.250061988830566
    4. ' ])' → logprob: -12.125061988830566
    5. '])
' → logprob: -13.375061988830566
    6. ']' → logprob: -14.125061988830566
    7. '))' → logprob: -15.500061988830566
    8. '])

' → logprob: -15.750061988830566
    9. '4' → logprob: -15.875061988830566
    10. ')])' → logprob: -15.875061988830566

Token 731: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20169751346111298
    2. '==' → logprob: -1.7016974687576294
    3. '()' → logprob: -8.95169734954834
    4. '()==' → logprob: -9.95169734954834
    5. ' >=' → logprob: -10.32669734954834
    6. ')' → logprob: -11.07669734954834
    7. '>=' → logprob: -11.07669734954834
    8. ' ' → logprob: -11.70169734954834
    9. '#' → logprob: -11.82669734954834
    10. ')==' → logprob: -12.57669734954834

Token 732: ' ' (ID: 220)
  Prédit: '72'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '72' → logprob: -2.6070022583007812
    2. '74' → logprob: -2.7320022583007812
    3. '70' → logprob: -3.1070022583007812
    4. '68' → logprob: -3.2320022583007812
    5. '66' → logprob: -3.2320022583007812
    6. '76' → logprob: -3.3570022583007812
    7. '80' → logprob: -3.4820022583007812
    8. '64' → logprob: -3.4820022583007812
    9. '78' → logprob: -3.4820022583007812
    10. '62' → logprob: -3.6070022583007812

Token 733: '85' (ID: 8017)
  Prédit: '72'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '72' → logprob: -2.4988601207733154
    2. '74' → logprob: -2.6238601207733154
    3. '68' → logprob: -2.9988601207733154
    4. '70' → logprob: -3.1238601207733154
    5. '66' → logprob: -3.1238601207733154
    6. '76' → logprob: -3.3738601207733154
    7. '69' → logprob: -3.3738601207733154
    8. '78' → logprob: -3.3738601207733154
    9. '64' → logprob: -3.4988601207733154
    10. '62' → logprob: -3.4988601207733154

Token 734: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1121053621172905
    2. '
' → logprob: -3.112105369567871
    3. '#' → logprob: -3.487105369567871
    4. '<|end|>' → logprob: -3.612105369567871
    5. ' if' → logprob: -6.237105369567871
    6. ')' → logprob: -7.362105369567871
    7. '```' → logprob: -8.237105369567871
    8. '_' → logprob: -8.237105369567871
    9. '

' → logprob: -8.612105369567871
    10. 'main' → logprob: -8.612105369567871

Token 735: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.3795937522663735e-05
    2. ' if' → logprob: -11.00002384185791
    3. 'main' → logprob: -12.37502384185791
    4. '#' → logprob: -13.12502384185791
    5. '```' → logprob: -14.12502384185791
    6. '<|end|>' → logprob: -17.000022888183594
    7. '...' → logprob: -17.500022888183594
    8. '
' → logprob: -17.625022888183594
    9. '#if' → logprob: -17.875022888183594
    10. 'If' → logprob: -18.000022888183594

Token 736: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.4288029968738556
    2. ' if' → logprob: -1.5538029670715332
    3. 'if' → logprob: -2.678802967071533
    4. ' __' → logprob: -2.803802967071533
    5. '__' → logprob: -5.303802967071533
    6. 'test' → logprob: -6.178802967071533
    7. ' main' → logprob: -8.053803443908691
    8. ' run' → logprob: -8.303803443908691
    9. ' pytest' → logprob: -9.053803443908691
    10. ' _' → logprob: -9.178803443908691

Token 737: '():
' (ID: 8595)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.014256465248763561
    2. '_' → logprob: -4.264256477355957
    3. '_solver' → logprob: -10.014256477355957
    4. 'solve' → logprob: -11.264256477355957
    5. '_test' → logprob: -11.889256477355957
    6. '_
' → logprob: -12.139256477355957
    7. '_validate' → logprob: -12.514256477355957
    8. '_sol' → logprob: -12.764256477355957
    9. '_solution' → logprob: -13.514256477355957
    10. '_complete' → logprob: -13.514256477355957

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023774705827236176
    2. ' test' → logprob: -3.7737746238708496
    3. 'test' → logprob: -8.148775100708008
    4. 'def' → logprob: -8.523775100708008
    5. ' def' → logprob: -10.648775100708008
    6. '	test' → logprob: -11.398775100708008
    7. ' ' → logprob: -13.773775100708008
    8. 'import' → logprob: -13.898775100708008
    9. '@test' → logprob: -14.273775100708008
    10. '
' → logprob: -14.398775100708008

Token 739: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.1015789806842804
    2. ' test' → logprob: -2.351578950881958
    3. '   ' → logprob: -6.601579189300537
    4. 'import' → logprob: -12.476578712463379
    5. 'for' → logprob: -12.476578712463379
    6. '	test' → logprob: -12.726578712463379
    7. ' for' → logprob: -13.351578712463379
    8. ' ' → logprob: -15.476578712463379
    9. 'main' → logprob: -15.601578712463379
    10. 'def' → logprob: -15.726578712463379

Token 740: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0015072436071932316
    2. '_' → logprob: -6.50150728225708
    3. '_solver' → logprob: -13.001506805419922
    4. '_sol' → logprob: -13.501506805419922
    5. '_
' → logprob: -15.501506805419922
    6. '_test' → logprob: -15.751506805419922
    7. '_solution' → logprob: -16.001506805419922
    8. '_validate' → logprob: -16.251506805419922
    9. '__' → logprob: -16.501506805419922
    10. '_write' → logprob: -16.751506805419922

Token 741: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -3.1186566047836095e-05
    2. 'solve' → logprob: -10.500031471252441
    3. 'o' → logprob: -12.750031471252441
    4. 'ove' → logprob: -15.125031471252441
    5. 'olv' → logprob: -15.500031471252441
    6. 'olver' → logprob: -16.625030517578125
    7. 'ol' → logprob: -17.000030517578125
    8. 'OLVE' → logprob: -17.625030517578125
    9. '_' → logprob: -18.000030517578125
    10. 'ov' → logprob: -19.000030517578125

Token 742: '_basic' (ID: 84491)
  Prédit: '_basic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_basic' → logprob: -1.6405310816480778e-05
    2. '_medium' → logprob: -11.375016212463379
    3. 'basic' → logprob: -13.375016212463379
    4. '_' → logprob: -13.875016212463379
    5. '_h' → logprob: -13.875016212463379
    6. '_bas' → logprob: -14.000016212463379
    7. '_easy' → logprob: -15.000016212463379
    8. '_basis' → logprob: -16.875017166137695
    9. '_BASIC' → logprob: -17.125017166137695
    10. '_soft' → logprob: -17.375017166137695

Token 743: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12705671787261963
    2. '()
' → logprob: -2.12705659866333
    3. '()

' → logprob: -9.002057075500488
    4. '()
' → logprob: -12.877057075500488
    5. '()\' → logprob: -14.127057075500488
    6. '()`' → logprob: -14.252057075500488
    7. '(' → logprob: -14.877057075500488
    8. '(
' → logprob: -15.377057075500488
    9. 'def' → logprob: -15.502057075500488
    10. '()


' → logprob: -15.627057075500488

Token 744: '   ' (ID: 271)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.42682918906211853
    2. 'if' → logprob: -1.176829218864441
    3. 'main' → logprob: -3.9268290996551514
    4. '
' → logprob: -4.5518293380737305
    5. '()' → logprob: -5.3018293380737305
    6. 'def' → logprob: -6.5518293380737305
    7. ' test' → logprob: -7.6768293380737305
    8. '#' → logprob: -7.8018293380737305
    9. '   ' → logprob: -7.8018293380737305
    10. '<|end|>' → logprob: -7.9268293380737305

Token 745: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -1.9361264946837764e-07
    2. ' test' → logprob: -16.0
    3. '   ' → logprob: -17.5
    4. 'def' → logprob: -21.125
    5. '#' → logprob: -23.125
    6. 'print' → logprob: -23.625
    7. '	test' → logprob: -24.0
    8. '```' → logprob: -24.0
    9. 'if' → logprob: -24.125
    10. 'import' → logprob: -24.25

Token 746: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.250001907348633
    3. '_solver' → logprob: -15.875001907348633
    4. '_sol' → logprob: -16.750001907348633
    5. '_write' → logprob: -17.625001907348633
    6. '\' → logprob: -17.750001907348633
    7. '_save' → logprob: -18.125001907348633
    8. '_soft' → logprob: -18.250001907348633
    9. 'solve' → logprob: -18.375001907348633
    10. '_so' → logprob: -18.500001907348633

Token 747: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.00016706773021724075
    2. 'ove' → logprob: -8.750166893005371
    3. 'solve' → logprob: -12.250166893005371
    4. 'o' → logprob: -13.625166893005371
    5. 'olv' → logprob: -14.250166893005371
    6. 'test' → logprob: -14.250166893005371
    7. 'OLVE' → logprob: -15.250166893005371
    8. 'e' → logprob: -15.375166893005371
    9. 'erve' → logprob: -15.750166893005371
    10. '_' → logprob: -15.875166893005371

Token 748: '_medium' (ID: 130994)
  Prédit: '_medium'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_medium' → logprob: -0.0009548133239150047
    2. '_h' → logprob: -7.250954627990723
    3. '_basic' → logprob: -8.375954627990723
    4. '_m' → logprob: -12.125954627990723
    5. '_med' → logprob: -12.625954627990723
    6. '_middle' → logprob: -13.250954627990723
    7. '_easy' → logprob: -13.250954627990723
    8. '_' → logprob: -13.500954627990723
    9. 'medium' → logprob: -14.125954627990723
    10. 'Medium' → logprob: -16.87595558166504

Token 749: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.045823566731997e-05
    2. 'test' → logprob: -11.625020027160645
    3. '
' → logprob: -12.375020027160645
    4. 'def' → logprob: -13.000020027160645
    5. '(test' → logprob: -13.375020027160645
    6. '    
' → logprob: -13.875020027160645
    7. '<|end|>' → logprob: -14.000020027160645
    8. '	test' → logprob: -14.750020027160645
    9. '```' → logprob: -15.375020027160645
    10. ' test' → logprob: -15.750020027160645

Token 750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037939001340419054
    2. 'test' → logprob: -5.878793716430664
    3. 'def' → logprob: -7.128793716430664
    4. ' test' → logprob: -8.753793716430664
    5. '
' → logprob: -11.753793716430664
    6. '(test' → logprob: -12.003793716430664
    7. '	test' → logprob: -12.128793716430664
    8. '[test' → logprob: -12.878793716430664
    9. '```' → logprob: -13.503793716430664
    10. '@test' → logprob: -13.628793716430664

Token 751: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -2.927930654550437e-05
    2. '   ' → logprob: -10.625029563903809
    3. 'def' → logprob: -12.750029563903809
    4. ' test' → logprob: -13.125029563903809
    5. '(test' → logprob: -18.250028610229492
    6. '	test' → logprob: -18.375028610229492
    7. '```' → logprob: -18.500028610229492
    8. '
' → logprob: -18.625028610229492
    9. '@test' → logprob: -19.625028610229492
    10. '[test' → logprob: -20.000028610229492

Token 752: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00021629150433000177
    2. '_h' → logprob: -8.750216484069824
    3. '_' → logprob: -9.875216484069824
    4. '__' → logprob: -12.500216484069824
    5. '_e' → logprob: -14.875216484069824
    6. '_solver' → logprob: -14.875216484069824
    7. '_validate' → logprob: -15.750216484069824
    8. '_f' → logprob: -15.875216484069824
    9. '\' → logprob: -16.000215530395508
    10. '_soft' → logprob: -16.000215530395508

Token 753: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.0007235141238197684
    2. 'ove' → logprob: -7.250723361968994
    3. '_' → logprob: -12.625723838806152
    4. 'OLVE' → logprob: -13.000723838806152
    5. '_s' → logprob: -13.125723838806152
    6. 'solve' → logprob: -13.125723838806152
    7. 'ol' → logprob: -14.125723838806152
    8. 'olv' → logprob: -14.250723838806152
    9. 'erve' → logprob: -14.375723838806152
    10. 'o' → logprob: -14.750723838806152

Token 754: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.127333340875339e-06
    2. 'Hard' → logprob: -12.750003814697266
    3. 'hard' → logprob: -14.375003814697266
    4. '_basic' → logprob: -15.000003814697266
    5. '_' → logprob: -15.125003814697266
    6. '_H' → logprob: -17.875003814697266
    7. '_easy' → logprob: -18.125003814697266
    8. ' hard' → logprob: -18.500003814697266
    9. '_soft' → logprob: -18.750003814697266
    10. '_s' → logprob: -18.875003814697266

Token 755: 'ard' (ID: 597)
  Prédit: 'ard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -1.3856492842023727e-06
    2. 'hard' → logprob: -14.125000953674316
    3. 'ард' → logprob: -15.375000953674316
    4. 'a' → logprob: -16.625001907348633
    5. 'ards' → logprob: -16.625001907348633
    6. 'ardware' → logprob: -17.000001907348633
    7. 'arp' → logprob: -17.125001907348633
    8. 'ar' → logprob: -17.250001907348633
    9. 'ardy' → logprob: -17.875001907348633
    10. 'and' → logprob: -18.375001907348633

Token 756: '()
' (ID: 1234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011646588332951069
    2. '<|end|>' → logprob: -5.136646747589111
    3. 'main' → logprob: -5.761646747589111
    4. 'test' → logprob: -6.761646747589111
    5. '
' → logprob: -7.136646747589111
    6. '#' → logprob: -8.386646270751953
    7. ' if' → logprob: -8.511646270751953
    8. '```' → logprob: -10.136646270751953
    9. ')' → logprob: -10.886646270751953
    10. '()' → logprob: -11.011646270751953

Token 757: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008657358586788177
    2. 'main' → logprob: -5.383657455444336
    3. '<|end|>' → logprob: -5.883657455444336
    4. '#' → logprob: -7.508657455444336
    5. '
' → logprob: -7.883657455444336
    6. ' if' → logprob: -8.633657455444336
    7. ')' → logprob: -10.133657455444336
    8. '```' → logprob: -11.008657455444336
    9. ' main' → logprob: -11.258657455444336
    10. '(main' → logprob: -11.258657455444336

Token 758: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018222402781248093
    2. 'main' → logprob: -4.018222332000732
    3. ' if' → logprob: -10.89322280883789
    4. '<|end|>' → logprob: -11.14322280883789
    5. 'print' → logprob: -11.39322280883789
    6. '#' (adapté à ' #') → logprob: -11.64322280883789
    7. '
' → logprob: -12.39322280883789
    8. '(main' → logprob: -12.64322280883789
    9. ' main' → logprob: -13.01822280883789
    10. 'return' → logprob: -13.14322280883789

Token 759: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6676348447799683
    2. 'if' → logprob: -0.7926348447799683
    3. 'main' → logprob: -3.917634963989258
    4. 'test' → logprob: -4.542634963989258
    5. '#' → logprob: -7.042634963989258
    6. 'pass' → logprob: -7.042634963989258
    7. 'assert' → logprob: -7.667634963989258
    8. ' if' → logprob: -7.792634963989258
    9. 'return' → logprob: -7.792634963989258
    10. 'import' → logprob: -7.917634963989258

Token 760: '(s' (ID: 1858)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08729903399944305
    2. '()' → logprob: -2.587299108505249
    3. '(' → logprob: -5.58729887008667
    4. '('' → logprob: -5.71229887008667
    5. '("")' → logprob: -7.83729887008667
    6. 'result' → logprob: -8.087299346923828
    7. '(test' → logprob: -8.212299346923828
    8. '(True' → logprob: -9.712299346923828
    9. '(main' → logprob: -9.837299346923828
    10. 'test' → logprob: -10.087299346923828

Token 761: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.0325924449716695e-05
    2. 'ol' → logprob: -12.87501049041748
    3. 'solve' → logprob: -13.75001049041748
    4. 'OLVE' → logprob: -14.00001049041748
    5. '"' → logprob: -14.25001049041748
    6. 'ove' → logprob: -14.25001049041748
    7. '```' → logprob: -14.37501049041748
    8. 'o' → logprob: -14.62501049041748
    9. 'olv' → logprob: -15.00001049041748
    10. '("' → logprob: -15.00001049041748

Token 762: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020989913027733564
    2. '())' → logprob: -6.37709903717041
    3. ')' → logprob: -8.00209903717041
    4. '()' → logprob: -10.50209903717041
    5. '(
' → logprob: -11.25209903717041
    6. '())
' → logprob: -12.37709903717041
    7. '(n' → logprob: -12.75209903717041
    8. '((' → logprob: -13.12709903717041
    9. '(__' → logprob: -14.00209903717041
    10. 'def' → logprob: -14.00209903717041

Token 763: '200' (ID: 1179)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.20518933236598969
    2. '4' → logprob: -2.4551892280578613
    3. '10' → logprob: -2.8301892280578613
    4. '8' → logprob: -4.455189228057861
    5. '))' → logprob: -4.955189228057861
    6. '[' → logprob: -5.455189228057861
    7. '7' → logprob: -5.455189228057861
    8. '20' → logprob: -5.580189228057861
    9. '12' → logprob: -5.705189228057861
    10. '9' → logprob: -6.080189228057861

Token 764: '0' (ID: 15)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3372058868408203
    2. '0' → logprob: -1.7122058868408203
    3. ')' → logprob: -3.0872058868408203
    4. ',' → logprob: -3.2122058868408203
    5. '00' → logprob: -4.46220588684082
    6. '000' → logprob: -4.83720588684082
    7. ',
' → logprob: -9.08720588684082
    8. '   ' → logprob: -10.08720588684082
    9. ')))' → logprob: -10.21220588684082
    10. '))
' → logprob: -10.33720588684082

Token 765: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3537449836730957
    2. ',' → logprob: -1.8537449836730957
    3. ')' → logprob: -1.9787449836730957
    4. ',
' → logprob: -6.228744983673096
    5. '0' → logprob: -7.478744983673096
    6. '000' → logprob: -9.103744506835938
    7. '00' → logprob: -9.103744506835938
    8. '   ' → logprob: -9.853744506835938
    9. ')))' → logprob: -10.228744506835938
    10. ',n' → logprob: -10.228744506835938

Token 766: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028320636600255966
    2. ' [' → logprob: -3.903320550918579
    3. 'range' → logprob: -5.903320789337158
    4. '[list' → logprob: -6.528320789337158
    5. '[np' → logprob: -6.778320789337158
    6. 'list' → logprob: -7.028320789337158
    7. ' range' → logprob: -8.2783203125
    8. 'np' → logprob: -8.5283203125
    9. '[random' → logprob: -8.5283203125
    10. '   ' → logprob: -9.1533203125

Token 767: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7387511134147644
    2. '2' → logprob: -1.4887511730194092
    3. '200' → logprob: -2.363751173019409
    4. '8' → logprob: -2.863751173019409
    5. '9' → logprob: -3.238751173019409
    6. '10' → logprob: -3.613751173019409
    7. 'i' → logprob: -4.36375093460083
    8. '3' → logprob: -4.48875093460083
    9. '100' → logprob: -4.48875093460083
    10. '0' → logprob: -4.48875093460083

Token 768: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5352821350097656
    2. ']*' → logprob: -0.9102821350097656
    3. ',' → logprob: -5.035282135009766
    4. ']))' → logprob: -5.910282135009766
    5. ' for' → logprob: -6.410282135009766
    6. '0' → logprob: -7.535282135009766
    7. ']+' → logprob: -8.410282135009766
    8. ']*(' → logprob: -8.410282135009766
    9. 'for' → logprob: -8.910282135009766
    10. '   ' → logprob: -10.160282135009766

Token 769: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42656949162483215
    2. ']*' → logprob: -1.6765694618225098
    3. ']))' → logprob: -2.5515694618225098
    4. ',' → logprob: -2.5515694618225098
    5. ' for' → logprob: -6.55156946182251
    6. '0' → logprob: -7.05156946182251
    7. '])' → logprob: -7.55156946182251
    8. ']*(' → logprob: -8.176569938659668
    9. ',
' → logprob: -8.301569938659668
    10. ')' → logprob: -8.426569938659668

Token 770: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.000694919959641993
    2. '20' → logprob: -8.62569522857666
    3. '10' → logprob: -8.87569522857666
    4. '100' → logprob: -9.12569522857666
    5. '2' → logprob: -10.00069522857666
    6. '(' → logprob: -10.25069522857666
    7. '199' → logprob: -10.62569522857666
    8. '0' → logprob: -10.62569522857666
    9. '5' → logprob: -10.87569522857666
    10. '1' → logprob: -10.87569522857666

Token 771: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.00017791526624932885
    2. '1' → logprob: -10.125178337097168
    3. '100' → logprob: -10.375178337097168
    4. '199' → logprob: -10.750178337097168
    5. '20' → logprob: -10.875178337097168
    6. '0' → logprob: -11.250178337097168
    7. '2' → logprob: -11.625178337097168
    8. '10' → logprob: -11.750178337097168
    9. '(' → logprob: -11.875178337097168
    10. ' ' → logprob: -12.375178337097168

Token 772: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023333763238042593
    2. ')' → logprob: -8.62523365020752
    3. '))' → logprob: -10.75023365020752
    4. '])' → logprob: -11.50023365020752
    5. ')]' → logprob: -11.62523365020752
    6. ')])' → logprob: -12.12523365020752
    7. '00' → logprob: -13.25023365020752
    8. ' ' → logprob: -14.00023365020752
    9. '   ' → logprob: -14.00023365020752
    10. ']))' → logprob: -14.00023365020752

Token 773: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012671155855059624
    2. ')' → logprob: -4.387670993804932
    3. '))
' → logprob: -9.01267147064209
    4. '0' → logprob: -11.26267147064209
    5. '])' → logprob: -11.63767147064209
    6. ')))' → logprob: -12.01267147064209
    7. '   ' → logprob: -12.38767147064209
    8. ')
' → logprob: -12.76267147064209
    9. ']))' → logprob: -14.01267147064209
    10. '))

' → logprob: -14.26267147064209

Token 774: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002534720697440207
    2. 'main' → logprob: -8.500253677368164
    3. ' if' → logprob: -10.125253677368164
    4. '#' → logprob: -12.250253677368164
    5. '<|end|>' → logprob: -13.500253677368164
    6. '
' → logprob: -13.625253677368164
    7. ')' → logprob: -13.750253677368164
    8. '```' → logprob: -15.250253677368164
    9. '(main' → logprob: -15.750253677368164
    10. 'i' → logprob: -15.875253677368164

Token 775: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2519826591014862
    2. ' __' → logprob: -1.5019826889038086
    3. 'name' → logprob: -9.876982688903809
    4. '_name' → logprob: -14.251982688903809
    5. ' name' → logprob: -14.501982688903809
    6. ' ' → logprob: -15.376982688903809
    7. 'if' → logprob: -15.376982688903809
    8. '___' → logprob: -15.501982688903809
    9. 'Name' → logprob: -15.751982688903809
    10. ''' → logprob: -16.501981735229492

Token 776: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01796543039381504
    2. ' ==' → logprob: -4.642965316772461
    3. '==' → logprob: -5.267965316772461
    4. ' __' → logprob: -5.892965316772461
    5. '.__' → logprob: -9.767965316772461
    6. '__.__' → logprob: -9.892965316772461
    7. '[' → logprob: -10.517965316772461
    8. '_' → logprob: -10.767965316772461
    9. 'name' → logprob: -10.767965316772461
    10. '=="' → logprob: -11.017965316772461

Token 777: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.246537173457909e-06
    2. '==' → logprob: -13.000003814697266
    3. '__.__' → logprob: -13.500003814697266
    4. '____' → logprob: -15.500003814697266
    5. '_' → logprob: -15.875003814697266
    6. '___' → logprob: -16.000003814697266
    7. '__
' → logprob: -16.750003814697266
    8. ' ==' → logprob: -16.750003814697266
    9. '__.' → logprob: -17.875003814697266
    10. '__('' → logprob: -17.875003814697266

Token 778: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5553153157234192
    2. '==' → logprob: -1.0553152561187744
    3. ' ==' → logprob: -2.6803152561187744
    4. '=="' → logprob: -4.6803154945373535
    5. '=='' → logprob: -9.055315017700195
    6. '==
' → logprob: -10.180315017700195
    7. '__.__' → logprob: -11.680315017700195
    8. '[' → logprob: -12.180315017700195
    9. '___' → logprob: -12.180315017700195
    10. '===' → logprob: -12.180315017700195

Token 779: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023254211992025375
    2. ''' → logprob: -3.773254156112671
    3. ' "__' → logprob: -12.14825439453125
    4. '__' → logprob: -12.89825439453125
    5. '"user' → logprob: -14.77325439453125
    6. ' '__' → logprob: -15.64825439453125
    7. ''"' → logprob: -16.02325439453125
    8. '"name' → logprob: -17.14825439453125
    9. '`' → logprob: -17.27325439453125
    10. '"class' → logprob: -18.02325439453125

Token 780: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.6240566083070007e-06
    2. 'name' → logprob: -13.875001907348633
    3. '__' → logprob: -14.500001907348633
    4. '_main' → logprob: -16.125001907348633
    5. ' main' → logprob: -16.500001907348633
    6. 'built' → logprob: -18.250001907348633
    7. '	main' → logprob: -19.250001907348633
    8. '-main' → logprob: -19.375001907348633
    9. 'ma' → logprob: -19.375001907348633
    10. ' "__' → logprob: -20.375001907348633

Token 781: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08002705872058868
    2. '__' → logprob: -2.5800271034240723
    3. '__':
' → logprob: -6.830027103424072
    4. '__.' → logprob: -10.205026626586914
    5. '__.__' → logprob: -11.830026626586914
    6. '__
' → logprob: -12.455026626586914
    7. '__["' → logprob: -12.705026626586914
    8. '__:' → logprob: -12.955026626586914
    9. '__
' → logprob: -13.955026626586914
    10. '_' → logprob: -14.705026626586914

Token 782: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.010594976134598255
    2. ' main' → logprob: -4.635594844818115
    3. '	main' → logprob: -7.760594844818115
    4. '   ' → logprob: -8.135595321655273
    5. '_main' → logprob: -9.260595321655273
    6. '    
' → logprob: -11.385595321655273
    7. '
' → logprob: -12.510595321655273
    8. '(main' → logprob: -12.885595321655273
    9. '__' → logprob: -13.010595321655273
    10. '_MAIN' → logprob: -13.885595321655273

Token 783: ' test' (ID: 1746)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.5776860184123507e-06
    2. 'test' (adapté à ' test') → logprob: -13.00000286102295
    3. 'import' → logprob: -16.000001907348633
    4. ' main' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '	main' → logprob: -18.500001907348633
    7. '
' → logprob: -23.125001907348633
    8. '.main' → logprob: -23.375001907348633
    9. '(main' → logprob: -23.500001907348633
    10. '```' → logprob: -23.500001907348633

Token 784: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16028617322444916
    2. '()
' → logprob: -1.9102861881256104
    3. 'main' → logprob: -10.410285949707031
    4. '()\' → logprob: -11.535285949707031
    5. '()
' → logprob: -11.660285949707031
    6. '_main' → logprob: -12.035285949707031
    7. '()

' → logprob: -13.160285949707031
    8. '()"' → logprob: -13.410285949707031
    9. '()<' → logprob: -13.535285949707031
    10. '()`' → logprob: -13.785285949707031

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5312840342521667
    2. 'main' → logprob: -1.7812840938568115
    3. '
' → logprob: -1.9062840938568115
    4. '<|end|>' → logprob: -2.5312840938568115
    5. '	main' → logprob: -5.281283855438232
    6. ' main' → logprob: -5.406283855438232
    7. '\n' → logprob: -5.906283855438232
    8. '    
' → logprob: -6.406283855438232
    9. '(main' → logprob: -8.28128433227539
    10. '()' → logprob: -8.28128433227539

Token 786: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0025127585977315903
    2. ' main' → logprob: -6.0025129318237305
    3. '	main' → logprob: -10.62751293182373
    4. '   ' → logprob: -11.75251293182373
    5. '(main' → logprob: -13.62751293182373
    6. '<|end|>' → logprob: -14.00251293182373
    7. '
' → logprob: -14.37751293182373
    8. 'import' → logprob: -14.62751293182373
    9. '    ' → logprob: -15.12751293182373
    10. '    
' → logprob: -15.37751293182373

Token 787: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 785
Tokens correctement prédits (1ère position, stricte): 386
Tokens correctement prédits (1ère position, avec adaptation): 415
Tokens correctement prédits (top 10): 677
Précision stricte (1ère position): 49.17%
Précision adaptée (1ère position): 52.87%
Précision (top 10): 86.24%
================================================================================
