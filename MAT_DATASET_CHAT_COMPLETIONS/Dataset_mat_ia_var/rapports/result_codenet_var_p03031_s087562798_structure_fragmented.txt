================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

def parse_input_line():
    return list(map(int, input().split()))

def read_n_m():
    n, m = parse_input_line()
    return n, m

def initialize_sx(n, m):
    return [[0]*n for _ in range(m)]

def create_tx():
    line = parse_input_line()
    return line[1:]

def assign_to_sx(sx, i, tx, n):
    for ti in tx:
        sx[i][n-ti] = 1 << (ti-1)

def read_sx(n, m):
    sx = initialize_sx(n, m)
    for i in range(m):
        tx = create_tx()
        assign_to_sx(sx, i, tx, n)
    return sx

def read_px():
    return parse_input_line()

def get_all_combinations(n):
    return range(1 << n)

def process_si(si):
    return sum(si)

def count_ones_in_binary(num):
    return Counter(bin(num)[2:])['1']

def compute_c(i, sum_si):
    return count_ones_in_binary(i & sum_si)

def get_temp_c_list(n, sx, i):
    temp_c_list = []
    for si in sx:
        sum_si = process_si(si)
        c = compute_c(i, sum_si)
        temp_c_list.append(c % 2)
    return temp_c_list

def check_px_equal(temp_c_list, px):
    return temp_c_list == px

def count_valid_ans(n, sx, px):
    ans = 0
    for i in get_all_combinations(n):
        temp_c_list = get_temp_c_list(n, sx, i)
        if check_px_equal(temp_c_list, px):
            ans += 1
    return ans

def solve(n, m, sx, px):
    return count_valid_ans(n, sx, px)

def main():
    n, m = read_n_m()
    sx = read_sx(n, m)
    px = read_px()
    print(solve(n, m, sx, px))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007449488039128482
    2. '.' → logprob: -7.625744819641113
    3. '\(' → logprob: -8.500744819641113
    4. ' (' → logprob: -11.625744819641113
    5. '(
' → logprob: -11.625744819641113
    6. '\' → logprob: -11.750744819641113
    7. '```' → logprob: -12.250744819641113
    8. '()' → logprob: -12.375744819641113
    9. '`' → logprob: -12.375744819641113
    10. 'newline' → logprob: -13.000744819641113

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011144968448206782
    2. 'a' → logprob: -8.126114845275879
    3. '.' → logprob: -8.501114845275879
    4. '\(' → logprob: -8.751114845275879
    5. '\' → logprob: -9.126114845275879
    6. '\n' → logprob: -9.376114845275879
    7. '```' → logprob: -9.501114845275879
    8. 'newline' → logprob: -10.001114845275879
    9. '(
' → logprob: -10.251114845275879
    10. 'import' → logprob: -10.376114845275879

Token 6: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014632348902523518
    2. ' process' → logprob: -5.514632225036621
    3. ' calculate' → logprob: -6.014632225036621
    4. ' space' → logprob: -6.139632225036621
    5. ' counter' → logprob: -6.639632225036621
    6. ' find' → logprob: -6.889632225036621
    7. ' count' → logprob: -7.389632225036621
    8. ' add' → logprob: -7.764632225036621
    9. ' ' → logprob: -7.889632225036621
    10. ' analyze' → logprob: -8.139632225036621

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3794330954551697
    2. '(' → logprob: -1.3794331550598145
    3. '_line' → logprob: -3.3794331550598145
    4. '_token' → logprob: -4.2544331550598145
    5. '_word' → logprob: -5.5044331550598145
    6. '_name' → logprob: -6.1294331550598145
    7. '_code' → logprob: -6.3794331550598145
    8. '_:' → logprob: -6.8794331550598145
    9. '_query' → logprob: -7.2544331550598145
    10. '_text' → logprob: -7.5044331550598145

Token 8: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04197060689330101
    2. '_' → logprob: -3.7919704914093018
    3. '(_' → logprob: -5.416970729827881
    4. '_line' → logprob: -5.916970729827881
    5. '_text' → logprob: -6.291970729827881
    6. '_input' → logprob: -6.416970729827881
    7. '(_:' → logprob: -6.791970729827881
    8. '(input' → logprob: -6.916970729827881
    9. '```' → logprob: -7.041970729827881
    10. '(line' → logprob: -7.041970729827881

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013977376511320472
    2. '(line' → logprob: -6.876397609710693
    3. '(:' → logprob: -8.751398086547852
    4. '():' → logprob: -9.751398086547852
    5. ':' → logprob: -9.876398086547852
    6. '("("' → logprob: -11.251398086547852
    7. '(user' → logprob: -11.626398086547852
    8. '_' → logprob: -11.626398086547852
    9. '(token' → logprob: -11.876398086547852
    10. '):' → logprob: -11.876398086547852

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004927985370159149
    2. '(' → logprob: -6.504928112030029
    3. '    ' → logprob: -6.754928112030029
    4. 'return' → logprob: -7.004928112030029
    5. ' return' → logprob: -8.004927635192871
    6. '```' → logprob: -8.379927635192871
    7. '(return' → logprob: -8.754927635192871
    8. '    
' → logprob: -8.879927635192871
    9. '...' → logprob: -9.004927635192871
    10. ' (' → logprob: -9.879927635192871

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17682293057441711
    2. 'return' (adapté à ' return') → logprob: -2.3018229007720947
    3. 'input' → logprob: -3.4268229007720947
    4. 'line' → logprob: -5.051823139190674
    5. 'data' → logprob: -5.301823139190674
    6. ' return' → logprob: -5.426823139190674
    7. ' line' → logprob: -5.926823139190674
    8. 'user' → logprob: -6.176823139190674
    9. '```' → logprob: -6.301823139190674
    10. '    ' → logprob: -6.801823139190674

Token 12: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4925709664821625
    2. 'input' → logprob: -0.9925709962844849
    3. ' []' → logprob: -5.617570877075195
    4. '[]' → logprob: -5.617570877075195
    5. ' ' → logprob: -5.742570877075195
    6. ' Counter' → logprob: -5.867570877075195
    7. ' list' → logprob: -6.117570877075195
    8. 'list' → logprob: -6.742570877075195
    9. ' map' → logprob: -8.367570877075195
    10. 'Counter' → logprob: -8.492570877075195

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027686210814863443
    2. '(input' → logprob: -6.252768516540527
    3. '(int' → logprob: -7.752768516540527
    4. '(eval' → logprob: -9.377768516540527
    5. '(range' → logprob: -10.127768516540527
    6. '('' → logprob: -10.127768516540527
    7. '(map' → logprob: -10.377768516540527
    8. '(open' → logprob: -10.627768516540527
    9. '(token' → logprob: -10.752768516540527
    10. '()' → logprob: -10.877768516540527

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03205784037709236
    2. '(str' → logprob: -3.782057762145996
    3. '(' → logprob: -4.782057762145996
    4. 'int' → logprob: -8.282057762145996
    5. 'str' → logprob: -9.657057762145996
    6. '(lambda' → logprob: -9.907057762145996
    7. '(ord' → logprob: -12.157057762145996
    8. '(input' → logprob: -12.407057762145996
    9. '(eval' → logprob: -12.532057762145996
    10. '(
' → logprob: -12.532057762145996

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6104405522346497
    2. '(' → logprob: -1.1104404926300049
    3. '<|end|>' → logprob: -2.985440492630005
    4. '))' → logprob: -3.735440492630005
    5. ')' → logprob: -3.985440492630005
    6. '<|end|>' → logprob: -5.360440731048584
    7. '(token' → logprob: -5.485440731048584
    8. 'input' → logprob: -5.485440731048584
    9. '```' → logprob: -5.985440731048584
    10. '(line' → logprob: -6.360440731048584

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11288874596357346
    2. ' input' → logprob: -2.237888813018799
    3. '(input' → logprob: -10.23788833618164
    4. ')' → logprob: -11.23788833618164
    5. ',input' → logprob: -11.73788833618164
    6. '	input' → logprob: -13.36288833618164
    7. '   ' → logprob: -13.73788833618164
    8. ' ' → logprob: -13.73788833618164
    9. '=input' → logprob: -13.73788833618164
    10. '))' → logprob: -13.86288833618164

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10793580859899521
    2. '()' → logprob: -2.857935905456543
    3. '()))' → logprob: -3.357935905456543
    4. '())))' → logprob: -5.357935905456543
    5. '(' → logprob: -5.857935905456543
    6. '())' → logprob: -6.357935905456543
    7. '()));' → logprob: -8.232935905456543
    8. '(()' → logprob: -8.732935905456543
    9. '('' → logprob: -8.982935905456543
    10. '`()' → logprob: -9.982935905456543

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04865651950240135
    2. 'strip' → logprob: -3.048656463623047
    3. 'rstrip' → logprob: -9.673656463623047
    4. ' split' → logprob: -12.298656463623047
    5. 'read' → logprob: -13.673656463623047
    6. ' strip' → logprob: -15.298656463623047
    7. ')' → logprob: -15.673656463623047
    8. '(split' → logprob: -16.048656463623047
    9. 'spl' → logprob: -17.048656463623047
    10. ' readline' → logprob: -18.798656463623047

Token 19: '()))

' (ID: 125972)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.8728926181793213
    2. '())))' → logprob: -1.7478926181793213
    3. '())' → logprob: -1.8728926181793213
    4. ')' → logprob: -2.2478926181793213
    5. '()))' → logprob: -2.2478926181793213
    6. '()' → logprob: -3.8728926181793213
    7. '))' → logprob: -4.247892379760742
    8. '(' → logprob: -4.872892379760742
    9. '())))
' → logprob: -8.997892379760742
    10. '))))' → logprob: -9.747892379760742

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5947098731994629
    2. 'n' → logprob: -0.8447098731994629
    3. 'data' → logprob: -4.844709873199463
    4. 'numbers' → logprob: -5.844709873199463
    5. 'nums' → logprob: -6.094709873199463
    6. 'num' → logprob: -6.094709873199463
    7. 'a' → logprob: -6.594709873199463
    8. 'number' → logprob: -7.594709873199463
    9. 'N' → logprob: -8.344709396362305
    10. 'arr' → logprob: -8.719709396362305

Token 21: ' read' (ID: 1729)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6680595278739929
    2. ' counter' → logprob: -1.9180595874786377
    3. ' main' → logprob: -2.5430595874786377
    4. ' process' → logprob: -2.6680595874786377
    5. ' calculate' → logprob: -2.7930595874786377
    6. ' solve' → logprob: -3.1680595874786377
    7. ' parse' → logprob: -3.4180595874786377
    8. ' find' → logprob: -4.293059349060059
    9. ' compute' → logprob: -4.543059349060059
    10. ' get' → logprob: -4.668059349060059

Token 22: '_n' (ID: 2170)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.03659766912460327
    2. '_data' → logprob: -4.161597728729248
    3. '_line' → logprob: -5.036597728729248
    4. '_' → logprob: -5.411597728729248
    5. '()' → logprob: -5.536597728729248
    6. '_lines' → logprob: -6.036597728729248
    7. '_array' → logprob: -7.536597728729248
    8. '_inputs' → logprob: -8.16159725189209
    9. '_numbers' → logprob: -8.41159725189209
    10. '_number' → logprob: -8.66159725189209

Token 23: '_m' (ID: 1285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.483378142118454
    2. '_lines' → logprob: -1.3583781719207764
    3. 'umbers' → logprob: -3.2333781719207764
    4. '_' → logprob: -3.2333781719207764
    5. 'umber' → logprob: -4.233377933502197
    6. 'um' → logprob: -4.358377933502197
    7. '_numbers' → logprob: -4.733377933502197
    8. '(' → logprob: -5.733377933502197
    9. 'ames' → logprob: -5.983377933502197
    10. '_values' → logprob: -7.233377933502197

Token 24: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48372143507003784
    2. '():' → logprob: -0.9837214350700378
    3. '```' → logprob: -6.3587212562561035
    4. '`()' → logprob: -6.4837212562561035
    5. '_line' → logprob: -6.7337212562561035
    6. '(' → logprob: -6.9837212562561035
    7. '()">' → logprob: -7.1087212562561035
    8. '()>' → logprob: -7.6087212562561035
    9. '_' → logprob: -7.9837212562561035
    10. '():
' → logprob: -8.108721733093262

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5166841149330139
    2. ' return' → logprob: -1.2666840553283691
    3. 'return' → logprob: -2.141684055328369
    4. '<|end|>' → logprob: -7.141684055328369
    5. '    
' → logprob: -7.391684055328369
    6. '()' → logprob: -7.391684055328369
    7. '	return' → logprob: -7.516684055328369
    8. '    ' → logprob: -7.641684055328369
    9. '(' → logprob: -8.016684532165527
    10. '```' → logprob: -8.266684532165527

Token 26: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0028194934129714966
    2. ' return' → logprob: -6.502819538116455
    3. '   ' → logprob: -6.752819538116455
    4. 'n' (adapté à ' n') → logprob: -9.127819061279297
    5. '```' → logprob: -10.877819061279297
    6. 'int' → logprob: -11.252819061279297
    7. 'map' → logprob: -12.377819061279297
    8. '`' → logprob: -13.627819061279297
    9. 'parse' → logprob: -14.127819061279297
    10. 'input' → logprob: -14.877819061279297

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010902122594416142
    2. ' ,' → logprob: -6.876090049743652
    3. ',m' → logprob: -10.376090049743652
    4. ' ' → logprob: -12.001090049743652
    5. ' =' → logprob: -12.251090049743652
    6. '=' → logprob: -12.626090049743652
    7. ',n' → logprob: -12.751090049743652
    8. ',int' → logprob: -13.376090049743652
    9. '_,' → logprob: -13.501090049743652
    10. ',
' → logprob: -14.001090049743652

Token 28: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6935234665870667
    2. ' m' → logprob: -0.6935234665870667
    3. ' ' → logprob: -8.193523406982422
    4. '<|end|>' → logprob: -9.568523406982422
    5. 'space' → logprob: -11.818523406982422
    6. '  ' → logprob: -12.318523406982422
    7. '    ' → logprob: -12.318523406982422
    8. 'input' → logprob: -12.818523406982422
    9. '_m' → logprob: -12.943523406982422
    10. '<|end|>' → logprob: -13.568523406982422

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033647309988737106
    2. '=' → logprob: -3.408647298812866
    3. ',' → logprob: -14.158647537231445
    4. ')' → logprob: -15.408647537231445
    5. '=input' → logprob: -15.408647537231445
    6. ' ' → logprob: -16.033647537231445
    7. ' =)' → logprob: -16.283647537231445
    8. '<|end|>' → logprob: -16.658647537231445
    9. '=int' → logprob: -16.783647537231445
    10. ' =
' → logprob: -17.658647537231445

Token 30: ' parse' (ID: 8420)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1195666715502739
    2. ' parse' → logprob: -2.2445666790008545
    3. 'map' → logprob: -5.619566440582275
    4. ' input' → logprob: -6.369566440582275
    5. 'parse' → logprob: -6.744566440582275
    6. 'input' → logprob: -9.619566917419434
    7. ' tuple' → logprob: -9.744566917419434
    8. ' list' → logprob: -10.494566917419434
    9. ' read' → logprob: -10.494566917419434
    10. ' ' → logprob: -10.994566917419434

Token 31: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.006741777528077364
    2. '_' → logprob: -5.006742000579834
    3. ' _' → logprob: -12.381741523742676
    4. '_line' → logprob: -12.631741523742676
    5. '_output' → logprob: -13.131741523742676
    6. '_inputs' → logprob: -13.256741523742676
    7. 'input' → logprob: -13.381741523742676
    8. '_in' → logprob: -13.381741523742676
    9. '```' → logprob: -13.881741523742676
    10. '_n' → logprob: -13.881741523742676

Token 32: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.762356209335849e-05
    2. '_' → logprob: -10.75003719329834
    3. '_lines' → logprob: -12.12503719329834
    4. ')_' → logprob: -13.12503719329834
    5. '_token' → logprob: -13.50003719329834
    6. 'line' → logprob: -13.75003719329834
    7. '```' → logprob: -13.75003719329834
    8. '_list' → logprob: -14.50003719329834
    9. '_LINE' → logprob: -15.00003719329834
    10. '_l' → logprob: -15.12503719329834

Token 33: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.547789674485102e-05
    2. '()
' → logprob: -11.000035285949707
    3. '())' → logprob: -11.125035285949707
    4. '()`' → logprob: -13.750035285949707
    5. '()

' → logprob: -13.875035285949707
    6. '(' → logprob: -14.000035285949707
    7. '()]' → logprob: -14.875035285949707
    8. ' ()' → logprob: -15.125035285949707
    9. ')' → logprob: -15.875035285949707
    10. '()"' → logprob: -16.250036239624023

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6577030420303345
    2. '<|end|>' → logprob: -1.4077030420303345
    3. '
' → logprob: -2.407702922821045
    4. '\n' → logprob: -2.657702922821045
    5. '    
' → logprob: -3.907702922821045
    6. 'return' → logprob: -4.532702922821045
    7. ' return' → logprob: -5.032702922821045
    8. ' ' → logprob: -5.407702922821045
    9. '	return' → logprob: -5.407702922821045
    10. '\' → logprob: -5.407702922821045

Token 35: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03731536492705345
    2. 'return' (adapté à ' return') → logprob: -3.6623153686523438
    3. ' return' → logprob: -4.537315368652344
    4. '    
' → logprob: -9.787315368652344
    5. '	return' → logprob: -9.912315368652344
    6. '    ' → logprob: -10.537315368652344
    7. ':return' → logprob: -10.537315368652344
    8. '  ' → logprob: -10.912315368652344
    9. '<|end|>' → logprob: -11.037315368652344
    10. ' ' → logprob: -11.162315368652344

Token 36: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02335122786462307
    2. 'n' → logprob: -3.7733511924743652
    3. ' (' → logprob: -9.523351669311523
    4. '(n' → logprob: -10.523351669311523
    5. ' ' → logprob: -13.273351669311523
    6. ' ' → logprob: -13.398351669311523
    7. '	n' → logprob: -13.523351669311523
    8. '   ' → logprob: -14.273351669311523
    9. '(' → logprob: -14.898351669311523
    10. '[n' → logprob: -17.023351669311523

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004456824157387018
    2. ' ,' → logprob: -5.629456996917725
    3. ',m' → logprob: -7.129456996917725
    4. ',n' → logprob: -10.129456520080566
    5. ' ' → logprob: -11.504456520080566
    6. ',
' → logprob: -13.629456520080566
    7. '<|end|>' → logprob: -14.004456520080566
    8. '‌,' → logprob: -14.254456520080566
    9. 'm' → logprob: -15.004456520080566
    10. ',b' → logprob: -15.129456520080566

Token 38: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.024080941453576088
    2. 'm' → logprob: -3.774080991744995
    3. ' ' → logprob: -7.149080753326416
    4. ' ' → logprob: -10.024081230163574
    5. 'space' → logprob: -12.649081230163574
    6. ' space' → logprob: -15.024081230163574
    7. '​' → logprob: -15.274081230163574
    8. ' ' → logprob: -16.024080276489258
    9. ' ​' → logprob: -16.024080276489258
    10. ' ' → logprob: -16.149080276489258

Token 39: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7997291684150696
    2. '
' → logprob: -1.0497291088104248
    3. '```' → logprob: -2.924729108810425
    4. '\' → logprob: -3.174729108810425
    5. 'n' → logprob: -3.424729108810425
    6. 'def' → logprob: -3.424729108810425
    7. '<|end|>' → logprob: -3.674729108810425
    8. '' → logprob: -5.674729347229004
    9. '    
' → logprob: -5.924729347229004
    10. ' 
' → logprob: -6.174729347229004

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045893192291259766
    2. 'n' → logprob: -3.5458931922912598
    3. '
' → logprob: -4.42089319229126
    4. '```' → logprob: -6.67089319229126
    5. '\n' → logprob: -7.04589319229126
    6. '

' → logprob: -7.29589319229126
    7. '<|end|>' → logprob: -7.92089319229126
    8. '<|end|>' → logprob: -8.420892715454102
    9. '\' → logprob: -8.795892715454102
    10. 'for' → logprob: -8.920892715454102

Token 41: ' initialize' (ID: 18400)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7505170106887817
    2. ' main' → logprob: -1.3755170106887817
    3. ' parse' → logprob: -2.625516891479492
    4. ' process' → logprob: -2.625516891479492
    5. ' count' → logprob: -2.625516891479492
    6. ' read' → logprob: -3.625516891479492
    7. ' build' → logprob: -4.875516891479492
    8. ' calculate' → logprob: -5.375516891479492
    9. 'solve' → logprob: -5.375516891479492
    10. ' find' → logprob: -5.750516891479492

Token 42: '_s' (ID: 1278)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.5815710425376892
    2. '_counts' → logprob: -1.331571102142334
    3. '_' → logprob: -2.581571102142334
    4. '_array' → logprob: -3.456571102142334
    5. '_c' → logprob: -4.456571102142334
    6. '_map' → logprob: -4.456571102142334
    7. '_data' → logprob: -4.581571102142334
    8. '_arrays' → logprob: -4.956571102142334
    9. '_matrix' → logprob: -5.456571102142334
    10. '(' → logprob: -5.581571102142334

Token 43: 'x' (ID: 87)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.6662801504135132
    2. 't' → logprob: -1.4162801504135132
    3. 'tring' → logprob: -2.0412802696228027
    4. 'ets' → logprob: -3.2912802696228027
    5. 'eg' → logprob: -3.6662802696228027
    6. '_' → logprob: -5.166280269622803
    7. 'tores' → logprob: -5.291280269622803
    8. 'egment' → logprob: -5.416280269622803
    9. 'cores' → logprob: -5.541280269622803
    10. '_counter' → logprob: -5.541280269622803

Token 44: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.214030385017395
    2. 'um' → logprob: -1.839030385017395
    3. 'y' → logprob: -1.964030385017395
    4. 's' → logprob: -2.3390302658081055
    5. '():
' → logprob: -2.4640302658081055
    6. 'or' → logprob: -2.8390302658081055
    7. '_and' → logprob: -3.7140302658081055
    8. '_s' → logprob: -3.8390302658081055
    9. '_y' → logprob: -4.0890302658081055
    10. '_' → logprob: -4.0890302658081055

Token 45: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07210296392440796
    2. ',' → logprob: -2.6971030235290527
    3. '):
' → logprob: -6.947103023529053
    4. ')' → logprob: -6.947103023529053
    5. ' ):' → logprob: -8.947102546691895
    6. ':' → logprob: -10.322102546691895
    7. '=' → logprob: -11.322102546691895
    8. '   ' → logprob: -11.572102546691895
    9. '):
' → logprob: -11.947102546691895
    10. '),' → logprob: -12.072102546691895

Token 46: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4752643406391144
    2. 'm' → logprob: -0.975264310836792
    3. ' ' → logprob: -7.350264549255371
    4. ')' → logprob: -8.975264549255371
    5. 'n' → logprob: -9.662764549255371
    6. ' n' → logprob: -9.912764549255371
    7. '   ' → logprob: -10.162764549255371
    8. '2' → logprob: -10.725264549255371
    9. 's' → logprob: -11.287764549255371
    10. '  ' → logprob: -11.350264549255371

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011355738388374448
    2. '):
' → logprob: -7.376135349273682
    3. ',' → logprob: -8.25113582611084
    4. ')' → logprob: -8.50113582611084
    5. ' ):' → logprob: -10.50113582611084
    6. '):
' → logprob: -11.50113582611084
    7. '   ' → logprob: -13.25113582611084
    8. ':' → logprob: -13.37613582611084
    9. ')):' → logprob: -14.37613582611084
    10. '=' → logprob: -14.50113582611084

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006086515262722969
    2. ' return' → logprob: -5.631086349487305
    3. 'return' → logprob: -6.631086349487305
    4. '    
' → logprob: -7.756086349487305
    5. 's' → logprob: -9.006086349487305
    6. '):
' → logprob: -9.256086349487305
    7. 'sx' → logprob: -9.381086349487305
    8. '```' → logprob: -9.631086349487305
    9. '
' → logprob: -9.881086349487305
    10. '  ' → logprob: -10.256086349487305

Token 49: ' return' (ID: 622)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -1.0386879444122314
    2. ' return' → logprob: -1.4136879444122314
    3. ' [' → logprob: -1.5386879444122314
    4. '   ' → logprob: -2.0386879444122314
    5. 'return' (adapté à ' return') → logprob: -3.5386879444122314
    6. '[[' → logprob: -4.288687705993652
    7. '[' → logprob: -4.913687705993652
    8. '[s' → logprob: -6.538687705993652
    9. ' ' → logprob: -6.663687705993652
    10. ' sx' → logprob: -6.913687705993652

Token 50: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.3143368065357208
    2. '[' → logprob: -1.4393367767333984
    3. ' [[' → logprob: -3.9393367767333984
    4. ' [' → logprob: -5.314336776733398
    5. '[['' → logprob: -6.064336776733398
    6. 'Counter' → logprob: -6.439336776733398
    7. '[n' → logprob: -6.939336776733398
    8. '[s' → logprob: -7.064336776733398
    9. '{' → logprob: -7.189336776733398
    10. '[(' → logprob: -7.689336776733398

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05666159465909004
    2. 'False' → logprob: -3.056661605834961
    3. 'None' → logprob: -6.556661605834961
    4. '-' → logprob: -6.681661605834961
    5. '[]' → logprob: -6.681661605834961
    6. ''.' → logprob: -6.806661605834961
    7. ''' → logprob: -7.431661605834961
    8. 'float' → logprob: -7.681661605834961
    9. '(' → logprob: -8.306661605834961
    10. 'True' → logprob: -8.431661605834961

Token 52: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8313694596290588
    2. ' for' → logprob: -0.8313694596290588
    3. ']*' → logprob: -2.581369400024414
    4. 'for' → logprob: -2.956369400024414
    5. ' ]' → logprob: -6.831369400024414
    6. ']*(' → logprob: -8.956369400024414
    7. '	for' → logprob: -9.081369400024414
    8. ' ' → logprob: -10.706369400024414
    9. ')' → logprob: -11.081369400024414
    10. '   ' → logprob: -11.081369400024414

Token 53: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1445769965648651
    2. '(m' → logprob: -2.0195770263671875
    3. '(n' → logprob: -7.0195770263671875
    4. ' (' → logprob: -7.8945770263671875
    5. ' m' → logprob: -8.519577026367188
    6. 'n' → logprob: -8.519577026367188
    7. '(' → logprob: -9.019577026367188
    8. '   ' → logprob: -9.519577026367188
    9. ' ' → logprob: -11.644577026367188
    10. '	m' → logprob: -12.957077026367188

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10031363368034363
    2. 'for' → logprob: -2.350313663482666
    3. ']' → logprob: -9.975313186645508
    4. '	for' → logprob: -10.725313186645508
    5. ')' → logprob: -11.850313186645508
    6. ' ' → logprob: -12.100313186645508
    7. 'm' → logprob: -12.475313186645508
    8. '<|end|>' → logprob: -12.850313186645508
    9. ' ]' → logprob: -12.975313186645508
    10. '+' → logprob: -12.975313186645508

Token 55: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009706635028123856
    2. ' _' → logprob: -4.759706497192383
    3. 'range' → logprob: -7.384706497192383
    4. '_' → logprob: -7.884706497192383
    5. '(range' → logprob: -10.259706497192383
    6. '_range' → logprob: -10.884706497192383
    7. ' ' → logprob: -10.884706497192383
    8. ' in' → logprob: -11.384706497192383
    9. ' xrange' → logprob: -12.134706497192383
    10. '	range' → logprob: -12.759706497192383

Token 56: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00790529977530241
    2. ' range' → logprob: -5.13290548324585
    3. 'in' → logprob: -6.75790548324585
    4. ' in' → logprob: -7.25790548324585
    5. '_' → logprob: -10.382905006408691
    6. '	range' → logprob: -11.007905006408691
    7. '(range' → logprob: -11.382905006408691
    8. ' ' → logprob: -11.507905006408691
    9. '<|end|>' → logprob: -11.757905006408691
    10. ' xrange' → logprob: -12.007905006408691

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022686660289764
    2. ' range' → logprob: -1.910226821899414
    3. '[' → logprob: -13.410226821899414
    4. '(range' → logprob: -14.410226821899414
    5. '	range' → logprob: -14.660226821899414
    6. 'm' → logprob: -16.035226821899414
    7. 'rang' → logprob: -16.910226821899414
    8. ' ' → logprob: -17.535226821899414
    9. ' xrange' → logprob: -17.910226821899414
    10. ')' → logprob: -18.785226821899414

Token 58: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007352970424108207
    2. '(' → logprob: -7.250735282897949
    3. ' (' → logprob: -10.87573528289795
    4. ')' → logprob: -13.12573528289795
    5. '(n' → logprob: -13.25073528289795
    6. '(s' → logprob: -13.50073528289795
    7. ')m' → logprob: -14.12573528289795
    8. ')(' → logprob: -15.37573528289795
    9. ' )' → logprob: -16.250736236572266
    10. 'm' → logprob: -16.250736236572266

Token 59: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.3596853831550106e-05
    2. ')' → logprob: -10.625053405761719
    3. ']' → logprob: -10.625053405761719
    4. ' )' → logprob: -12.625053405761719
    5. ')]
' → logprob: -14.625053405761719
    6. ')],' → logprob: -15.375053405761719
    7. '])]' → logprob: -15.500053405761719
    8. ' ]' → logprob: -15.875053405761719
    9. ')])' → logprob: -16.00005340576172
    10. ')][' → logprob: -16.00005340576172

Token 60: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9502993822097778
    2. '
' → logprob: -1.3252993822097778
    3. 'def' → logprob: -1.5752993822097778
    4. ')' → logprob: -3.5752992630004883
    5. '\' → logprob: -3.5752992630004883
    6. '.' → logprob: -4.325299263000488
    7. ']' → logprob: -4.575299263000488
    8. '#' → logprob: -4.700299263000488
    9. '' → logprob: -4.700299263000488
    10. 'n' → logprob: -5.325299263000488

Token 61: ' create' (ID: 2501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9161929488182068
    2. ' compute' → logprob: -1.2911930084228516
    3. ' initialize' → logprob: -1.9161930084228516
    4. ' calculate' → logprob: -2.5411930084228516
    5. ' update' → logprob: -3.6661930084228516
    6. ' count' → logprob: -4.416193008422852
    7. ' sum' → logprob: -4.416193008422852
    8. ' main' → logprob: -5.166193008422852
    9. ' _' → logprob: -5.166193008422852
    10. ' parse' → logprob: -5.291193008422852

Token 62: '_tx' (ID: 37845)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.19034551084041595
    2. '_counter' → logprob: -2.315345525741577
    3. '_' → logprob: -3.565345525741577
    4. '_matrix' → logprob: -4.940345287322998
    5. '_array' → logprob: -5.190345287322998
    6. 's' → logprob: -5.940345287322998
    7. '_set' → logprob: -6.065345287322998
    8. '_list' → logprob: -6.440345287322998
    9. '_count' → logprob: -6.565345287322998
    10. '_input' → logprob: -6.690345287322998

Token 63: '():
' (ID: 8595)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.036144062876701355
    2. '():' → logprob: -3.9111440181732178
    3. '(' → logprob: -5.036144256591797
    4. '(m' → logprob: -5.161144256591797
    5. '()' → logprob: -7.661144256591797
    6. '(s' → logprob: -7.786144256591797
    7. '_' → logprob: -7.786144256591797
    8. ' (' → logprob: -8.161144256591797
    9. '():
' → logprob: -8.661144256591797
    10. '(x' → logprob: -8.786144256591797

Token 64: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015239032916724682
    2. '[' → logprob: -4.515239238739014
    3. 'lambda' → logprob: -7.140239238739014
    4. 'def' → logprob: -7.140239238739014
    5. '{}' → logprob: -7.390239238739014
    6. ' []' → logprob: -7.390239238739014
    7. '0' → logprob: -7.515239238739014
    8. '[]
' → logprob: -8.265238761901855
    9. '(lambda' → logprob: -9.265238761901855
    10. 'set' → logprob: -9.640238761901855

Token 65: ' line' (ID: 2543)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22238853573799133
    2. '[' → logprob: -1.722388505935669
    3. '{}' → logprob: -5.097388744354248
    4. '0' → logprob: -5.597388744354248
    5. 'def' → logprob: -5.972388744354248
    6. ' []' → logprob: -6.222388744354248
    7. 'lambda' → logprob: -6.472388744354248
    8. 'return' → logprob: -6.722388744354248
    9. '[[' → logprob: -6.972388744354248
    10. 'default' → logprob: -7.597388744354248

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48388639092445374
    2. '=' → logprob: -1.1088863611221313
    3. 's' → logprob: -2.983886480331421
    4. '_' → logprob: -6.608886241912842
    5. '=line' → logprob: -7.733886241912842
    6. '()' → logprob: -7.858886241912842
    7. '_input' → logprob: -8.10888671875
    8. '=input' → logprob: -8.48388671875
    9. '_tokens' → logprob: -8.60888671875
    10. '_=' → logprob: -9.98388671875

Token 67: ' parse' (ID: 8420)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47520720958709717
    2. ' input' → logprob: -0.9752072095870972
    3. 'list' → logprob: -7.350207328796387
    4. ' list' → logprob: -8.350207328796387
    5. 'parse' → logprob: -8.850207328796387
    6. 'int' → logprob: -9.975207328796387
    7. ' parse' → logprob: -10.725207328796387
    8. '[]' → logprob: -11.475207328796387
    9. ' int' → logprob: -12.475207328796387
    10. '	input' → logprob: -12.600207328796387

Token 68: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -10.875021934509277
    3. '_line' → logprob: -13.125021934509277
    4. '_user' → logprob: -15.000021934509277
    5. 'input' → logprob: -15.250021934509277
    6. '_in' → logprob: -15.875021934509277
    7. '_Input' → logprob: -16.375022888183594
    8. '_output' → logprob: -16.500022888183594
    9. '```' → logprob: -16.500022888183594
    10. 'Input' → logprob: -17.125022888183594

Token 69: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.824579784530215e-05
    2. 'line' → logprob: -10.0000581741333
    3. '_' → logprob: -11.7500581741333
    4. '_token' → logprob: -12.6250581741333
    5. '_LINE' → logprob: -14.7500581741333
    6. '```' → logprob: -14.8750581741333
    7. 'Line' → logprob: -15.5000581741333
    8. ' line' → logprob: -16.125059127807617
    9. '_lin' → logprob: -16.250059127807617
    10. '_l' → logprob: -16.250059127807617

Token 70: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043102685594931245
    2. '()
' → logprob: -7.875431060791016
    3. '())' → logprob: -10.000431060791016
    4. ')' → logprob: -13.000431060791016
    5. '()

' → logprob: -13.750431060791016
    6. '()]' → logprob: -14.125431060791016
    7. '()<' → logprob: -15.500431060791016
    8. '()
' → logprob: -15.750431060791016
    9. '(' → logprob: -15.875431060791016
    10. '();' → logprob: -16.000431060791016

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019507750403136015
    2. '
' → logprob: -7.751950740814209
    3. 'return' → logprob: -7.876950740814209
    4. ' return' → logprob: -8.126951217651367
    5. '    
' → logprob: -8.251951217651367
    6. '<|end|>' → logprob: -8.751951217651367
    7. 'def' → logprob: -9.501951217651367
    8. 'tx' → logprob: -9.626951217651367
    9. '```' → logprob: -9.876951217651367
    10. ' tx' → logprob: -10.126951217651367

Token 72: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5995569229125977
    2. '   ' → logprob: -1.7245569229125977
    3. ' t' → logprob: -2.7245569229125977
    4. 'return' (adapté à ' return') → logprob: -2.8495569229125977
    5. ' tx' → logprob: -3.2245569229125977
    6. 't' → logprob: -3.7245569229125977
    7. ' counter' → logprob: -3.8495569229125977
    8. 'tx' → logprob: -4.974556922912598
    9. 'c' → logprob: -5.349556922912598
    10. ' c' → logprob: -5.474556922912598

Token 73: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.24572862684726715
    2. ' line' → logprob: -1.745728611946106
    3. ' tuple' → logprob: -4.370728492736816
    4. 'tuple' → logprob: -5.120728492736816
    5. ' Counter' → logprob: -5.370728492736816
    6. '[line' → logprob: -5.370728492736816
    7. ' [' → logprob: -5.495728492736816
    8. 'list' → logprob: -5.995728492736816
    9. '[' → logprob: -6.370728492736816
    10. ' list' → logprob: -6.370728492736816

Token 74: '[' (ID: 58)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08095933496952057
    2. '[' → logprob: -3.5809593200683594
    3. '<|end|>' → logprob: -4.080959320068359
    4. '
' → logprob: -4.705959320068359
    5. '```' → logprob: -5.080959320068359
    6. '\' → logprob: -5.205959320068359
    7. '#' → logprob: -5.330959320068359
    8. '\n' → logprob: -6.580959320068359
    9. ')' → logprob: -6.830959320068359
    10. '(' → logprob: -7.205959320068359

Token 75: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015797611325979233
    2. '-' → logprob: -4.7657976150512695
    3. '1' → logprob: -5.0157976150512695
    4. ' ' → logprob: -8.14079761505127
    5. '2' → logprob: -9.14079761505127
    6. ' -' → logprob: -9.76579761505127
    7. ':' → logprob: -10.39079761505127
    8. ']' → logprob: -11.26579761505127
    9. ':]' → logprob: -12.01579761505127
    10. '3' → logprob: -12.14079761505127

Token 76: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0009107483783736825
    2. ':' → logprob: -7.250910758972168
    3. ']' → logprob: -8.875910758972168
    4. ':],' → logprob: -10.375910758972168
    5. ' :]' → logprob: -10.875910758972168
    6. ':]
' → logprob: -12.000910758972168
    7. ':].' → logprob: -13.000910758972168
    8. ':]

' → logprob: -13.375910758972168
    9. ']:' → logprob: -14.750910758972168
    10. '[' → logprob: -15.500910758972168

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024335705675184727
    2. '<|end|>' → logprob: -6.752433776855469
    3. '
' → logprob: -7.127433776855469
    4. '\' → logprob: -9.127433776855469
    5. '```' → logprob: -9.752433776855469
    6. '<|end|>' → logprob: -9.752433776855469
    7. 'd' → logprob: -9.877433776855469
    8. '

' → logprob: -10.252433776855469
    9. 'n' → logprob: -10.377433776855469
    10. '[' → logprob: -10.752433776855469

Token 78: ' assign' (ID: 14975)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.3250800669193268
    2. ' process' → logprob: -2.325080156326294
    3. ' main' → logprob: -3.575080156326294
    4. ' update' → logprob: -3.575080156326294
    5. ' calculate' → logprob: -3.700080156326294
    6. ' count' → logprob: -4.200079917907715
    7. ' parse' → logprob: -4.325079917907715
    8. ' read' → logprob: -4.825079917907715
    9. ' solve' → logprob: -4.950079917907715
    10. ' add' → logprob: -5.075079917907715

Token 79: '_to' (ID: 5089)
  Prédit: '_tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tx' → logprob: -0.4850035011768341
    2. '_values' → logprob: -1.6100034713745117
    3. '_s' → logprob: -2.3600034713745117
    4. '_' → logprob: -3.7350034713745117
    5. '_value' → logprob: -3.8600034713745117
    6. '_to' → logprob: -4.235003471374512
    7. '_t' → logprob: -5.860003471374512
    8. '(' → logprob: -6.235003471374512
    9. '_indices' → logprob: -6.235003471374512
    10. '_counts' → logprob: -6.485003471374512

Token 80: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.12040922045707703
    2. 'sx' → logprob: -2.7454092502593994
    3. 's' → logprob: -3.4954092502593994
    4. '_tx' → logprob: -4.24540901184082
    5. 'tx' → logprob: -6.99540901184082
    6. '(s' → logprob: -7.24540901184082
    7. '```' → logprob: -7.62040901184082
    8. '_list' → logprob: -8.62040901184082
    9. '_array' → logprob: -8.74540901184082
    10. 'array' → logprob: -8.99540901184082

Token 81: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.943783253314905e-05
    2. '_x' → logprob: -9.750059127807617
    3. 's' → logprob: -14.625059127807617
    4. '_' → logprob: -15.250059127807617
    5. '[' → logprob: -15.500059127807617
    6. '```' → logprob: -15.625059127807617
    7. 'ex' → logprob: -17.250059127807617
    8. '(' → logprob: -17.250059127807617
    9. '(s' → logprob: -17.500059127807617
    10. '(x' → logprob: -17.750059127807617

Token 82: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.14432165026664734
    2. '(' → logprob: -2.0193216800689697
    3. '(n' → logprob: -6.769321441650391
    4. '(m' → logprob: -7.894321441650391
    5. 's' → logprob: -10.51932144165039
    6. '((' → logprob: -11.14432144165039
    7. '(x' → logprob: -11.26932144165039
    8. '(index' → logprob: -11.26932144165039
    9. '(line' → logprob: -11.39432144165039
    10. ' (' → logprob: -11.76932144165039

Token 83: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.875009536743164
    3. '[x' → logprob: -13.250009536743164
    4. '_x' → logprob: -14.500009536743164
    5. '```' → logprob: -16.500009536743164
    6. '[
' → logprob: -18.250009536743164
    7. '	x' → logprob: -18.250009536743164
    8. ')x' → logprob: -18.875009536743164
    9. ',' → logprob: -19.000009536743164
    10. 'xu' → logprob: -19.250009536743164

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011327129323035479
    2. '[' → logprob: -8.12613296508789
    3. '[line' → logprob: -8.75113296508789
    4. '[m' → logprob: -8.87613296508789
    5. '[s' → logprob: -9.37613296508789
    6. ' ,' → logprob: -9.37613296508789
    7. ',m' → logprob: -9.62613296508789
    8. '[],' → logprob: -10.12613296508789
    9. ',s' → logprob: -10.25113296508789
    10. ')' → logprob: -10.25113296508789

Token 85: ' i' (ID: 575)
  Prédit: ' tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tx' → logprob: -0.5657161474227905
    2. ' i' → logprob: -2.06571626663208
    3. ' m' → logprob: -2.31571626663208
    4. 'tx' → logprob: -2.69071626663208
    5. ' t' → logprob: -3.19071626663208
    6. 'i' → logprob: -3.44071626663208
    7. 'm' → logprob: -3.56571626663208
    8. ' x' → logprob: -4.94071626663208
    9. 'x' → logprob: -5.06571626663208
    10. ' idx' → logprob: -5.44071626663208

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001332382787950337
    2. ' ,' → logprob: -7.0013322830200195
    3. ')' → logprob: -8.25133228302002
    4. '][' → logprob: -10.37633228302002
    5. ']' → logprob: -10.75133228302002
    6. '],' → logprob: -11.25133228302002
    7. '):' → logprob: -11.25133228302002
    8. ' ' → logprob: -11.50133228302002
    9. '‌,' → logprob: -11.62633228302002
    10. '),' → logprob: -11.87633228302002

Token 87: ' tx' (ID: 10400)
  Prédit: ' tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tx' → logprob: -0.5838220119476318
    2. 'tx' → logprob: -2.083822011947632
    3. ' j' → logprob: -2.583822011947632
    4. ' value' → logprob: -3.458822011947632
    5. ' val' → logprob: -3.583822011947632
    6. 'j' → logprob: -3.583822011947632
    7. 'x' → logprob: -3.708822011947632
    8. ' x' → logprob: -3.958822011947632
    9. ' values' → logprob: -3.958822011947632
    10. ' t' → logprob: -3.958822011947632

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28537800908088684
    2. '):' → logprob: -1.4103779792785645
    3. '):
' → logprob: -6.1603779792785645
    4. ' ,' → logprob: -6.6603779792785645
    5. ')' → logprob: -8.660378456115723
    6. ' ):' → logprob: -8.660378456115723
    7. '[i' → logprob: -9.285378456115723
    8. ',i' → logprob: -9.535378456115723
    9. '):
' → logprob: -10.160378456115723
    10. '   ' → logprob: -10.285378456115723

Token 89: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34784460067749023
    2. 'n' → logprob: -2.3478446006774902
    3. ' m' → logprob: -2.7228446006774902
    4. ' j' → logprob: -2.7228446006774902
    5. 'j' → logprob: -3.9728446006774902
    6. 'm' → logprob: -4.34784460067749
    7. ' value' → logprob: -4.97284460067749
    8. ' val' → logprob: -5.59784460067749
    9. ' x' → logprob: -5.97284460067749
    10. ' ' → logprob: -6.09784460067749

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018221698701381683
    2. ',' → logprob: -4.393221855163574
    3. '):
' → logprob: -5.643221855163574
    4. ')' → logprob: -6.393221855163574
    5. ' ):' → logprob: -8.643221855163574
    6. '-' → logprob: -9.268221855163574
    7. '):
' → logprob: -10.393221855163574
    8. '[' → logprob: -10.518221855163574
    9. ':' → logprob: -10.643221855163574
    10. '[i' → logprob: -10.768221855163574

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11930283159017563
    2. '   ' → logprob: -2.244302749633789
    3. '):' → logprob: -5.494302749633789
    4. ' :' → logprob: -7.494302749633789
    5. '<|end|>' → logprob: -7.744302749633789
    6. ' for' → logprob: -8.119302749633789
    7. ':
' → logprob: -8.369302749633789
    8. ',' → logprob: -8.494302749633789
    9. '):
' → logprob: -9.494302749633789
    10. '       ' → logprob: -9.744302749633789

Token 92: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49507254362106323
    2. ' for' → logprob: -1.370072603225708
    3. '   ' → logprob: -1.995072603225708
    4. 'j' → logprob: -9.370072364807129
    5. ' j' → logprob: -10.245072364807129
    6. 'count' → logprob: -10.370072364807129
    7. 'x' → logprob: -10.495072364807129
    8. '	for' → logprob: -10.620072364807129
    9. '    
' → logprob: -10.745072364807129
    10. ' ' → logprob: -10.745072364807129

Token 93: ' ti' (ID: 2919)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.034956902265548706
    2. ' x' → logprob: -4.159956932067871
    3. 'j' → logprob: -4.534956932067871
    4. ' idx' → logprob: -5.784956932067871
    5. ' ' → logprob: -6.659956932067871
    6. ' _' → logprob: -6.784956932067871
    7. ' k' → logprob: -7.034956932067871
    8. 'x' → logprob: -7.284956932067871
    9. '_j' → logprob: -8.659956932067871
    10. ' index' → logprob: -9.034956932067871

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02140224166214466
    2. 'n' → logprob: -4.396402359008789
    3. 'in' → logprob: -5.396402359008789
    4. 'nd' → logprob: -5.646402359008789
    5. ' ' → logprob: -8.021402359008789
    6. 'x' → logprob: -8.771402359008789
    7. '  ' → logprob: -9.646402359008789
    8. 'dx' → logprob: -9.771402359008789
    9. '   ' → logprob: -10.396402359008789
    10. 'ex' → logprob: -10.771402359008789

Token 95: ' tx' (ID: 10400)
  Prédit: ' tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tx' → logprob: -0.422991544008255
    2. 'tx' → logprob: -1.1729915142059326
    3. ' range' → logprob: -3.5479915142059326
    4. 'range' → logprob: -5.172991752624512
    5. 'ti' → logprob: -7.547991752624512
    6. ' ti' → logprob: -8.172991752624512
    7. '(tx' → logprob: -9.547991752624512
    8. '	tx' → logprob: -10.047991752624512
    9. 't' → logprob: -10.797991752624512
    10. '[' → logprob: -11.172991752624512

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013049285858869553
    2. ':
' → logprob: -4.388049125671387
    3. ' :' → logprob: -7.763049125671387
    4. '       ' → logprob: -10.013049125671387
    5. ' :
' → logprob: -10.763049125671387
    6. '   ' → logprob: -11.138049125671387
    7. '<|end|>' → logprob: -12.013049125671387
    8. '):' → logprob: -12.263049125671387
    9. '[:' → logprob: -12.388049125671387
    10. '[' → logprob: -12.638049125671387

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030106235295534134
    2. ':' → logprob: -4.155106067657471
    3. ' 
' → logprob: -5.530106067657471
    4. '        
' → logprob: -5.655106067657471
    5. ' s' → logprob: -6.780106067657471
    6. ' ' → logprob: -7.280106067657471
    7. '
' → logprob: -7.405106067657471
    8. '<|end|>' → logprob: -7.655106067657471
    9. '0' → logprob: -7.780106067657471
    10. ':
' → logprob: -8.030106544494629

Token 98: ' sx' (ID: 39428)
  Prédit: ' sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -0.2124311923980713
    2. 'sx' (adapté à ' sx') → logprob: -2.5874311923980713
    3. '           ' → logprob: -3.2124311923980713
    4. '       ' → logprob: -3.5874311923980713
    5. 's' → logprob: -4.087430953979492
    6. ' 
' → logprob: -4.212430953979492
    7. ' s' → logprob: -4.712430953979492
    8. '
' → logprob: -6.712430953979492
    9. ' if' → logprob: -6.837430953979492
    10. '0' → logprob: -6.962430953979492

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0048673804849386215
    2. '[' → logprob: -5.5048675537109375
    3. '[m' → logprob: -7.6298675537109375
    4. '[s' → logprob: -9.004867553710938
    5. '[t' → logprob: -9.004867553710938
    6. '[j' → logprob: -10.254867553710938
    7. '[n' → logprob: -12.629867553710938
    8. '[idx' → logprob: -13.254867553710938
    9. '[I' → logprob: -13.504867553710938
    10. '[ii' → logprob: -13.504867553710938

Token 100: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00420151324942708
    2. '[' → logprob: -5.629201412200928
    3. ']' → logprob: -8.379201889038086
    4. ' ][' → logprob: -8.504201889038086
    5. '-' → logprob: -8.879201889038086
    6. ')][' → logprob: -12.254201889038086
    7. ']][' → logprob: -12.379201889038086
    8. '   ' → logprob: -13.129201889038086
    9. '"][' → logprob: -13.441701889038086
    10. ')[' → logprob: -13.504201889038086

Token 101: 'n' (ID: 77)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -3.1424973713001236e-05
    2. ' ti' → logprob: -11.125031471252441
    3. 't' → logprob: -11.250031471252441
    4. '
' → logprob: -14.375031471252441
    5. '	ti' → logprob: -14.375031471252441
    6. 'n' → logprob: -14.500031471252441
    7. ']' → logprob: -14.625031471252441
    8. '   ' → logprob: -15.000031471252441
    9. 'tj' → logprob: -15.250031471252441
    10. 'i' → logprob: -15.875031471252441

Token 102: '-ti' (ID: 178416)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04836023226380348
    2. ' -' → logprob: -3.1733603477478027
    3. '-ti' → logprob: -5.673360347747803
    4. '-t' → logprob: -6.923360347747803
    5. 'ti' → logprob: -8.048359870910645
    6. '1' → logprob: -8.798359870910645
    7. '-i' → logprob: -9.423359870910645
    8. 't' → logprob: -9.548359870910645
    9. ' ' → logprob: -9.798359870910645
    10. '
' → logprob: -10.423359870910645

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038324985653162003
    2. '-' → logprob: -6.1288323402404785
    3. ' ]' → logprob: -7.3788323402404785
    4. ']+=' → logprob: -7.5038323402404785
    5. ']=' → logprob: -8.503832817077637
    6. ' -' → logprob: -9.628832817077637
    7. '`]' → logprob: -10.753832817077637
    8. '()]' → logprob: -10.878832817077637
    9. '']' → logprob: -11.003832817077637
    10. '++]' → logprob: -11.128832817077637

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23507094383239746
    2. '+=' → logprob: -1.7350709438323975
    3. ' =' → logprob: -3.9850709438323975
    4. ' +=' → logprob: -4.235071182250977
    5. '+' → logprob: -11.360071182250977
    6. ']+=' → logprob: -11.610071182250977
    7. ' |=' → logprob: -13.860071182250977
    8. '=True' → logprob: -13.860071182250977
    9. '-=' → logprob: -13.985071182250977
    10. ' ' → logprob: -14.485071182250977

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008122475701384246
    2. ' ' → logprob: -7.75081205368042
    3. 'ti' → logprob: -8.875812530517578
    4. '0' → logprob: -9.000812530517578
    5. 'i' → logprob: -10.000812530517578
    6. 'sx' → logprob: -11.125812530517578
    7. 's' → logprob: -11.500812530517578
    8. 'True' → logprob: -11.938312530517578
    9. ' ti' → logprob: -12.000812530517578
    10. '   ' → logprob: -12.063312530517578

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025442568585276604
    2. 'ti' → logprob: -9.00025463104248
    3. 'i' → logprob: -10.00025463104248
    4. '0' → logprob: -10.37525463104248
    5. ' ' → logprob: -10.87525463104248
    6. 't' → logprob: -12.37525463104248
    7. '-' → logprob: -12.37525463104248
    8. '2' → logprob: -12.62525463104248
    9. 's' → logprob: -12.93775463104248
    10. '   ' → logprob: -13.18775463104248

Token 107: ' <<' (ID: 2256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07576194405555725
    2. '<|end|>' → logprob: -3.2007620334625244
    3. '\n' → logprob: -3.4507620334625244
    4. '<|end|>' → logprob: -9.325761795043945
    5. ' 
' → logprob: -9.575761795043945
    6. '  
' → logprob: -9.700761795043945
    7. '' → logprob: -9.825761795043945
    8. '
' → logprob: -9.950761795043945
    9. '\' → logprob: -10.075761795043945
    10. '

' → logprob: -10.700761795043945

Token 108: ' (' (ID: 350)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.15930713713169098
    2. '0' → logprob: -3.4093072414398193
    3. '(' → logprob: -3.6593072414398193
    4. '31' → logprob: -4.15930700302124
    5. '1' → logprob: -4.40930700302124
    6. 'i' → logprob: -4.53430700302124
    7. '(n' → logprob: -4.65930700302124
    8. '(i' → logprob: -4.78430700302124
    9. '(t' → logprob: -4.90930700302124
    10. ' ti' → logprob: -5.28430700302124

Token 109: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.18098494410514832
    2. ' ti' → logprob: -2.0559849739074707
    3. 'i' → logprob: -4.055984973907471
    4. 'm' → logprob: -4.680984973907471
    5. ' i' → logprob: -5.805984973907471
    6. 'n' → logprob: -5.930984973907471
    7. ' m' → logprob: -6.305984973907471
    8. ' n' → logprob: -6.680984973907471
    9. '   ' → logprob: -7.555984973907471
    10. 't' → logprob: -7.930984973907471

Token 110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28649282455444336
    2. ')' → logprob: -1.5364928245544434
    3. ' -' → logprob: -3.9114928245544434
    4. '   ' → logprob: -5.786492824554443
    5. '       ' → logprob: -5.786492824554443
    6. '	' → logprob: -6.286492824554443
    7. ' ' → logprob: -6.911492824554443
    8. '0' → logprob: -7.036492824554443
    9. '<|end|>' → logprob: -7.161492824554443
    10. ' )' → logprob: -8.036493301391602

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008128436165861785
    2. ' ' → logprob: -7.375813007354736
    3. '0' → logprob: -9.250812530517578
    4. '2' → logprob: -10.938312530517578
    5. '```' → logprob: -10.938312530517578
    6. '   ' → logprob: -11.438312530517578
    7. '<|end|>' → logprob: -11.813312530517578
    8. '`' → logprob: -12.375812530517578
    9. ')' → logprob: -13.250812530517578
    10. '-' → logprob: -13.563312530517578

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009421924478374422
    2. ' )' → logprob: -7.250942230224609
    3. ')
' → logprob: -8.50094223022461
    4. '       ' → logprob: -12.00094223022461
    5. '   ' → logprob: -12.12594223022461
    6. '))' → logprob: -12.75094223022461
    7. '<|end|>' → logprob: -13.25094223022461
    8. ')

' → logprob: -13.50094223022461
    9. ' ' → logprob: -13.62594223022461
    10. ')#' → logprob: -13.75094223022461

Token 113: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2881387174129486
    2. ' assign' → logprob: -1.788138747215271
    3. ' parse' → logprob: -2.7881386280059814
    4. ' initialize' → logprob: -5.6631388664245605
    5. ' ' → logprob: -6.1631388664245605
    6. ' _' → logprob: -6.4131388664245605
    7. ' test' → logprob: -6.4131388664245605
    8. ' find' → logprob: -6.4131388664245605
    9. ' create' → logprob: -6.6631388664245605
    10. 'assign' → logprob: -6.9131388664245605

Token 115: '_s' (ID: 1278)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.362216979265213
    2. '_' → logprob: -1.7372169494628906
    3. '_input' → logprob: -3.1122169494628906
    4. '_s' → logprob: -3.6122169494628906
    5. '_line' → logprob: -4.112216949462891
    6. '_lines' → logprob: -4.987216949462891
    7. '_queries' → logprob: -5.237216949462891
    8. '_data' → logprob: -5.487216949462891
    9. '()' → logprob: -5.862216949462891
    10. '_m' → logprob: -5.987216949462891

Token 116: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0018583188066259027
    2. '_x' → logprob: -7.501858234405518
    3. '()' → logprob: -8.001858711242676
    4. '(n' → logprob: -8.751858711242676
    5. 'n' → logprob: -9.126858711242676
    6. '(' → logprob: -9.376858711242676
    7. 'ize' → logprob: -10.001858711242676
    8. '```' → logprob: -10.001858711242676
    9. '_lines' → logprob: -10.001858711242676
    10. '():
' → logprob: -10.376858711242676

Token 117: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8149151802062988
    2. '(s' → logprob: -0.9399151802062988
    3. '(n' → logprob: -2.189915180206299
    4. '(' → logprob: -3.314915180206299
    5. '():
' → logprob: -4.564915180206299
    6. '()' → logprob: -5.189915180206299
    7. '(m' → logprob: -6.189915180206299
    8. 'def' → logprob: -9.18991470336914
    9. '(
' → logprob: -9.93991470336914
    10. ' (' → logprob: -10.43991470336914

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000146687583765015
    2. ',m' → logprob: -9.375146865844727
    3. ' ,' → logprob: -9.875146865844727
    4. '):' → logprob: -12.250146865844727
    5. 'm' → logprob: -12.750146865844727
    6. ')' → logprob: -13.625146865844727
    7. ',n' → logprob: -14.375146865844727
    8. ',
' → logprob: -14.875146865844727
    9. '):
' → logprob: -15.875146865844727
    10. ' ' → logprob: -16.500146865844727

Token 119: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004623203072696924
    2. ' m' → logprob: -5.3796234130859375
    3. ')' → logprob: -13.879623413085938
    4. '   ' → logprob: -14.629623413085938
    5. 'def' → logprob: -14.629623413085938
    6. 's' → logprob: -15.129623413085938
    7. ',' → logprob: -15.629623413085938
    8. '):
' → logprob: -15.754623413085938
    9. ' ' → logprob: -15.879623413085938
    10. '<|end|>' → logprob: -16.129623413085938

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021313487086445093
    2. '):
' → logprob: -6.627131462097168
    3. ',' → logprob: -7.252131462097168
    4. ')' → logprob: -9.377131462097168
    5. ' ):' → logprob: -12.002131462097168
    6. '):
' → logprob: -12.502131462097168
    7. '   ' → logprob: -13.877131462097168
    8. ':' → logprob: -15.002131462097168
    9. ' ' → logprob: -15.877131462097168
    10. ',n' → logprob: -16.12713050842285

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15611532330513
    2. 'sx' → logprob: -2.1561152935028076
    3. ' sx' → logprob: -4.031115531921387
    4. 's' → logprob: -4.656115531921387
    5. 'def' → logprob: -7.031115531921387
    6. '	s' → logprob: -8.406115531921387
    7. '```' → logprob: -8.531115531921387
    8. ' s' → logprob: -9.656115531921387
    9. ' ' → logprob: -10.156115531921387
    10. ' def' → logprob: -10.531115531921387

Token 122: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' (adapté à ' sx') → logprob: -0.6844760179519653
    2. '   ' → logprob: -1.4344760179519653
    3. ' sx' → logprob: -1.4344760179519653
    4. 's' → logprob: -4.059475898742676
    5. 'def' → logprob: -7.184475898742676
    6. ' s' → logprob: -7.434475898742676
    7. ' ' → logprob: -8.684475898742676
    8. 'n' → logprob: -9.684475898742676
    9. ' SX' → logprob: -9.934475898742676
    10. '
' → logprob: -10.184475898742676

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519730031490326
    2. '=' → logprob: -1.501973032951355
    3. ' =
' → logprob: -11.126973152160645
    4. ',' → logprob: -11.376973152160645
    5. '=[]' → logprob: -11.626973152160645
    6. '(' → logprob: -13.501973152160645
    7. ':' → logprob: -13.751973152160645
    8. '=
' → logprob: -13.751973152160645
    9. '   ' → logprob: -14.001973152160645
    10. ' ' → logprob: -14.126973152160645

Token 124: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.04859680309891701
    2. ' initialize' → logprob: -3.0485968589782715
    3. '[[' → logprob: -12.423596382141113
    4. '	initialize' → logprob: -12.923596382141113
    5. ' [[' → logprob: -14.173596382141113
    6. '[' → logprob: -14.298596382141113
    7. '[]' → logprob: -14.923596382141113
    8. '   ' → logprob: -15.048596382141113
    9. '.initialize' → logprob: -15.173596382141113
    10. ' ' → logprob: -15.423596382141113

Token 125: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.25000286102295
    3. '(s' → logprob: -14.12500286102295
    4. '```' → logprob: -18.000001907348633
    5. '_' → logprob: -18.125001907348633
    6. 'sx' → logprob: -18.625001907348633
    7. '(' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.500001907348633
    9. '_sn' → logprob: -19.750001907348633
    10. '_sz' → logprob: -19.875001907348633

Token 126: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.7053759519476444e-05
    2. 'sx' → logprob: -10.125057220458984
    3. '(x' → logprob: -12.000057220458984
    4. '(s' → logprob: -12.625057220458984
    5. 's' → logprob: -14.062557220458984
    6. '(' → logprob: -14.062557220458984
    7. '_x' → logprob: -14.125057220458984
    8. 'xu' → logprob: -14.312557220458984
    9. '_s' → logprob: -14.375057220458984
    10. '```' → logprob: -14.562557220458984

Token 127: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.319370302458992e-06
    2. 'n' → logprob: -13.000005722045898
    3. '(' → logprob: -13.125005722045898
    4. ' (' → logprob: -14.500005722045898
    5. '(
' → logprob: -16.5000057220459
    6. '<|end|>' → logprob: -16.6250057220459
    7. ' n' → logprob: -17.0000057220459
    8. 'def' → logprob: -17.0000057220459
    9. '
' → logprob: -17.1250057220459
    10. ',' → logprob: -17.3750057220459

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005873450427316129
    2. ',m' → logprob: -7.500587463378906
    3. ' ,' → logprob: -10.375587463378906
    4. 'm' → logprob: -12.875587463378906
    5. ',
' → logprob: -14.750587463378906
    6. ')' → logprob: -16.875587463378906
    7. ',n' → logprob: -17.125587463378906
    8. '```' → logprob: -17.375587463378906
    9. '   ' → logprob: -18.250587463378906
    10. '‌,' → logprob: -18.500587463378906

Token 129: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009757505729794502
    2. ' m' → logprob: -4.6347575187683105
    3. '   ' → logprob: -13.759757041931152
    4. ' ' → logprob: -15.634757041931152
    5. ')' → logprob: -15.759757041931152
    6. '    ' → logprob: -16.25975799560547
    7. ')m' → logprob: -17.00975799560547
    8. '  ' → logprob: -17.13475799560547
    9. '```' → logprob: -17.38475799560547
    10. '
' → logprob: -17.63475799560547

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029799437150359154
    2. ')
' → logprob: -3.529799461364746
    3. ')
' → logprob: -10.029799461364746
    4. ')

' → logprob: -12.279799461364746
    5. ' )' → logprob: -17.02979850769043
    6. ')return' → logprob: -17.52979850769043
    7. ')`' → logprob: -17.90479850769043
    8. '),' → logprob: -17.90479850769043
    9. ')

' → logprob: -18.15479850769043
    10. ')`
' → logprob: -18.40479850769043

Token 131: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0281366016715765
    2. '   ' → logprob: -4.278136730194092
    3. ' for' → logprob: -4.278136730194092
    4. '	for' → logprob: -12.403136253356934
    5. ' ' → logprob: -13.903136253356934
    6. '<|end|>' → logprob: -14.028136253356934
    7. '
' → logprob: -14.153136253356934
    8. '```' → logprob: -14.903136253356934
    9. '  ' → logprob: -15.153136253356934
    10. '    
' → logprob: -16.02813720703125

Token 132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.702754474943504e-05
    2. ' for' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.75003719329834
    4. '
' → logprob: -14.62503719329834
    5. '    
' → logprob: -18.000036239624023
    6. '	for' → logprob: -19.000036239624023
    7. '```' → logprob: -19.375036239624023
    8. ' 
' → logprob: -19.750036239624023
    9. '  
' → logprob: -20.250036239624023
    10. '   
' → logprob: -21.625036239624023

Token 133: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005103422328829765
    2. 'i' → logprob: -5.755103588104248
    3. ' range' → logprob: -6.380103588104248
    4. ' _' → logprob: -8.88010311126709
    5. 'range' → logprob: -9.88010311126709
    6. '_' → logprob: -11.13010311126709
    7. '_i' → logprob: -11.38010311126709
    8. ' in' → logprob: -12.00510311126709
    9. ' ' → logprob: -13.13010311126709
    10. '	i' → logprob: -13.25510311126709

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005250472575426102
    2. 'in' → logprob: -5.255250453948975
    3. ' ' → logprob: -11.130250930786133
    4. 'range' → logprob: -14.755250930786133
    5. ',' → logprob: -15.130250930786133
    6. '	in' → logprob: -15.380250930786133
    7. 'import' → logprob: -15.505250930786133
    8. 'n' → logprob: -15.630250930786133
    9. '_' → logprob: -15.755250930786133
    10. ' range' → logprob: -16.130250930786133

Token 135: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759474635124207
    2. 'range' → logprob: -0.8259474635124207
    3. '(range' → logprob: -12.075947761535645
    4. '	range' → logprob: -13.200947761535645
    5. ' xrange' → logprob: -15.575947761535645
    6. ' ' → logprob: -16.700946807861328
    7. '_range' → logprob: -17.200946807861328
    8. '   ' → logprob: -17.450946807861328
    9. 'rang' → logprob: -17.825946807861328
    10. '  ' → logprob: -17.825946807861328

Token 136: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.625004768371582
    3. 'm' → logprob: -13.375004768371582
    4. ' (' → logprob: -16.7500057220459
    5. ' m' → logprob: -17.3750057220459
    6. ',m' → logprob: -18.3750057220459
    7. '(
' → logprob: -18.7500057220459
    8. '	m' → logprob: -18.7500057220459
    9. '(M' → logprob: -19.0000057220459
    10. '(n' → logprob: -19.2500057220459

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026962202973663807
    2. '):
' → logprob: -6.1276960372924805
    3. ' ):' → logprob: -7.8776960372924805
    4. ':' → logprob: -9.00269603729248
    5. ')' → logprob: -12.00269603729248
    6. '):
' → logprob: -14.12769603729248
    7. ' ):
' → logprob: -14.37769603729248
    8. ' :' → logprob: -15.12769603729248
    9. '}:' → logprob: -15.37769603729248
    10. ',' → logprob: -15.50269603729248

Token 138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35570383071899414
    2. '       ' → logprob: -1.2307038307189941
    3. ' tx' → logprob: -5.230703830718994
    4. 'tx' → logprob: -6.355703830718994
    5. '	tx' → logprob: -9.855703353881836
    6. ' sx' → logprob: -11.105703353881836
    7. 'sx' → logprob: -11.105703353881836
    8. '
' → logprob: -11.480703353881836
    9. ' line' → logprob: -11.605703353881836
    10. '(tx' → logprob: -11.980703353881836

Token 139: ' tx' (ID: 10400)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26574140787124634
    2. 'tx' (adapté à ' tx') → logprob: -1.7657413482666016
    3. ' tx' → logprob: -3.6407413482666016
    4. '
' → logprob: -3.8907413482666016
    5. '       ' → logprob: -4.515741348266602
    6. '	tx' → logprob: -6.265741348266602
    7. '    
' → logprob: -6.765741348266602
    8. '           ' → logprob: -8.140741348266602
    9. '  ' → logprob: -8.140741348266602
    10. ' ' → logprob: -8.515741348266602

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197698414325714
    2. '=' → logprob: -2.811976909637451
    3. '=create' → logprob: -11.93697738647461
    4. ' ' → logprob: -13.81197738647461
    5. ')' → logprob: -13.93697738647461
    6. ',' → logprob: -14.43697738647461
    7. '=line' → logprob: -16.81197738647461
    8. '.' → logprob: -17.18697738647461
    9. ' =
' → logprob: -17.18697738647461
    10. '.append' → logprob: -17.43697738647461

Token 141: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.4291147291660309
    2. 'create' → logprob: -1.0541146993637085
    3. 'parse' → logprob: -8.17911434173584
    4. ' parse' → logprob: -9.30411434173584
    5. '(create' → logprob: -11.05411434173584
    6. '.create' → logprob: -11.55411434173584
    7. '=create' → logprob: -12.67911434173584
    8. '	create' → logprob: -12.92911434173584
    9. '_create' → logprob: -13.05411434173584
    10. 'read' → logprob: -13.17911434173584

Token 142: '_tx' (ID: 37845)
  Prédit: '_tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tx' → logprob: -2.236549335066229e-05
    2. 'tx' → logprob: -10.875021934509277
    3. '_t' → logprob: -13.875021934509277
    4. '_rx' → logprob: -14.000021934509277
    5. '	tx' → logprob: -14.750021934509277
    6. '_' → logprob: -14.875021934509277
    7. '(tx' → logprob: -15.125021934509277
    8. ' tx' → logprob: -15.375021934509277
    9. '_txt' → logprob: -16.125022888183594
    10. '_tex' → logprob: -16.750022888183594

Token 143: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -1.0358117818832397
    2. '       ' → logprob: -1.1608117818832397
    3. '()' → logprob: -1.1608117818832397
    4. '   ' → logprob: -4.160811901092529
    5. ')' → logprob: -6.660811901092529
    6. '(s' → logprob: -7.410811901092529
    7. '()
' → logprob: -8.410811424255371
    8. ')
' → logprob: -8.535811424255371
    9. '
' → logprob: -8.910811424255371
    10. '<|end|>' → logprob: -9.285811424255371

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3390372693538666
    2. '   ' → logprob: -1.339037299156189
    3. 'assign' → logprob: -3.7140371799468994
    4. ' assign' → logprob: -7.4640374183654785
    5. '<|end|>' → logprob: -8.83903694152832
    6. '	assign' → logprob: -9.21403694152832
    7. '(assign' → logprob: -9.46403694152832
    8. '        
' → logprob: -9.83903694152832
    9. '
' → logprob: -10.46403694152832
    10. ' ' → logprob: -10.96403694152832

Token 145: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' (adapté à ' assign') → logprob: -0.01048232801258564
    2. ' assign' → logprob: -4.635482311248779
    3. '   ' → logprob: -7.260482311248779
    4. '       ' → logprob: -11.510482788085938
    5. '	assign' → logprob: -12.135482788085938
    6. '
' → logprob: -12.635482788085938
    7. '.assign' → logprob: -13.510482788085938
    8. '(assign' → logprob: -14.135482788085938
    9. '_assign' → logprob: -14.260482788085938
    10. ' ' → logprob: -14.885482788085938

Token 146: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -16.875
    3. ' to' → logprob: -18.5
    4. 's' → logprob: -18.5
    5. 'To' → logprob: -18.75
    6. '_s' → logprob: -18.875
    7. '   ' → logprob: -19.625
    8. '_' → logprob: -20.0
    9. '_of' → logprob: -20.25
    10. '_TO' → logprob: -20.375

Token 147: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1822352260351181
    2. 'sx' → logprob: -2.1822352409362793
    3. '_s' → logprob: -2.9322352409362793
    4. 'x' → logprob: -7.807235240936279
    5. '(s' → logprob: -9.182234764099121
    6. ' sx' → logprob: -12.182234764099121
    7. '<s' → logprob: -13.182234764099121
    8. ' s' → logprob: -13.182234764099121
    9. '	s' → logprob: -13.307234764099121
    10. '-s' → logprob: -13.682234764099121

Token 148: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.696889623621246e-06
    2. 'sx' → logprob: -13.12500286102295
    3. '(x' → logprob: -15.50000286102295
    4. ' sx' → logprob: -16.250001907348633
    5. '_x' → logprob: -16.750001907348633
    6. '```' → logprob: -16.937501907348633
    7. 's' → logprob: -17.250001907348633
    8. '(s' → logprob: -17.375001907348633
    9. 'xu' → logprob: -17.375001907348633
    10. '[' → logprob: -18.125001907348633

Token 149: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. 's' → logprob: -15.000001907348633
    4. ' (' → logprob: -15.375001907348633
    5. '(
' → logprob: -16.000001907348633
    6. '```' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -17.375001907348633
    8. ')s' → logprob: -19.375001907348633
    9. '_s' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.875001907348633

Token 150: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.36574100604048e-06
    2. '[i' → logprob: -13.000004768371582
    3. '[' → logprob: -14.125004768371582
    4. ' x' → logprob: -15.125004768371582
    5. '[x' → logprob: -15.125004768371582
    6. ',x' → logprob: -15.375004768371582
    7. 'i' → logprob: -15.375004768371582
    8. ',' → logprob: -16.250003814697266
    9. '```' → logprob: -16.500003814697266
    10. 'sx' → logprob: -16.875003814697266

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025289228186011314
    2. ',s' → logprob: -4.400289058685303
    3. '(s' → logprob: -4.650289058685303
    4. ',i' → logprob: -6.275289058685303
    5. '(i' → logprob: -7.150289058685303
    6. '(' → logprob: -8.150289535522461
    7. ' ,' → logprob: -9.400289535522461
    8. 's' → logprob: -10.275289535522461
    9. ')' → logprob: -10.525289535522461
    10. ',n' → logprob: -11.275289535522461

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164102263748646
    2. ' i' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.139163970947266
    4. ')' → logprob: -16.139163970947266
    5. ')i' → logprob: -16.264163970947266
    6. 's' → logprob: -16.389163970947266
    7. '<|end|>' → logprob: -16.764163970947266
    8. '	i' → logprob: -17.139163970947266
    9. ' ' → logprob: -17.264163970947266
    10. '(i' → logprob: -17.889163970947266

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008070098701864481
    2. ' ,' → logprob: -7.12580680847168
    3. ',
' → logprob: -13.37580680847168
    4. '(tx' → logprob: -15.12580680847168
    5. 'tx' → logprob: -15.75080680847168
    6. '```' → logprob: -15.87580680847168
    7. '
' → logprob: -16.12580680847168
    8. '=' → logprob: -16.25080680847168
    9. '

' → logprob: -16.50080680847168
    10. 's' → logprob: -17.37580680847168

Token 154: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.0009130131802521646
    2. ' tx' → logprob: -7.000913143157959
    3. 'sx' → logprob: -14.0009126663208
    4. '(tx' → logprob: -15.0009126663208
    5. '	tx' → logprob: -15.8759126663208
    6. 'ti' → logprob: -16.750913619995117
    7. '_tx' → logprob: -16.875913619995117
    8. 't' → logprob: -17.625913619995117
    9. '.tx' → logprob: -17.750913619995117
    10. 'txn' → logprob: -18.375913619995117

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013300024438649416
    2. ',n' → logprob: -6.6263298988342285
    3. ' ,' → logprob: -12.626330375671387
    4. 'n' → logprob: -14.376330375671387
    5. '(n' → logprob: -16.37632942199707
    6. '```' → logprob: -16.87632942199707
    7. ',
' → logprob: -17.25132942199707
    8. '   ' → logprob: -17.62632942199707
    9. ')' → logprob: -18.00132942199707
    10. '[n' → logprob: -18.37632942199707

Token 156: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000491672137286514
    2. ' n' → logprob: -7.625491619110107
    3. ')n' → logprob: -13.500492095947266
    4. '	n' → logprob: -14.375492095947266
    5. 'm' → logprob: -14.875492095947266
    6. '(n' → logprob: -15.000492095947266
    7. 'len' → logprob: -15.375492095947266
    8. '_n' → logprob: -15.500492095947266
    9. ',n' → logprob: -15.750492095947266
    10. 'user' → logprob: -16.125492095947266

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760071277618408
    2. ')
' → logprob: -0.8260071277618408
    3. '   ' → logprob: -10.201006889343262
    4. ')return' → logprob: -11.201006889343262
    5. ')
' → logprob: -11.451006889343262
    6. ')

' → logprob: -12.201006889343262
    7. ' )
' → logprob: -15.201006889343262
    8. 'return' → logprob: -15.201006889343262
    9. ')n' → logprob: -15.326006889343262
    10. ' )' → logprob: -15.451006889343262

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07963819801807404
    2. 'return' → logprob: -2.5796382427215576
    3. ' return' → logprob: -7.2046380043029785
    4. '	return' → logprob: -13.454638481140137
    5. ' ' → logprob: -13.954638481140137
    6. '    
' → logprob: -14.204638481140137
    7. '       ' → logprob: -14.329638481140137
    8. ':return' → logprob: -14.704638481140137
    9. '```' → logprob: -14.829638481140137
    10. '   ' → logprob: -15.329638481140137

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005494853015989065
    2. '   ' → logprob: -5.255495071411133
    3. ' return' → logprob: -8.255495071411133
    4. '	return' → logprob: -14.005495071411133
    5. ' ' → logprob: -16.755495071411133
    6. ':return' → logprob: -17.005495071411133
    7. '```' → logprob: -17.130495071411133
    8. '
' → logprob: -17.380495071411133
    9. '    
' → logprob: -17.880495071411133
    10. 'eturn' → logprob: -18.130495071411133

Token 160: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.005662360228598118
    2. 's' → logprob: -5.505662441253662
    3. ' sx' → logprob: -6.505662441253662
    4. '(s' → logprob: -9.380661964416504
    5. '[s' → logprob: -13.755661964416504
    6. '`s' → logprob: -14.630661964416504
    7. '	s' → logprob: -14.630661964416504
    8. '(' → logprob: -15.505661964416504
    9. 'sz' → logprob: -16.00566291809082
    10. ' s' → logprob: -16.25566291809082

Token 161: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009546172805130482
    2. '<|end|>' → logprob: -4.759546279907227
    3. '#' → logprob: -8.384546279907227
    4. '[' → logprob: -8.884546279907227
    5. '```' → logprob: -9.134546279907227
    6. 'from' → logprob: -9.634546279907227
    7. ')' → logprob: -9.759546279907227
    8. '<|end|>' → logprob: -9.759546279907227
    9. '
' → logprob: -9.884546279907227
    10. 'n' → logprob: -10.009546279907227

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024953833781182766
    2. '#' → logprob: -9.500249862670898
    3. 'from' → logprob: -9.500249862670898
    4. '<|end|>' → logprob: -9.500249862670898
    5. '```' → logprob: -11.750249862670898
    6. 'n' → logprob: -11.875249862670898
    7. 'ndef' → logprob: -12.625249862670898
    8. '<|end|>' → logprob: -13.875249862670898
    9. 'data' → logprob: -14.000249862670898
    10. '[' → logprob: -14.250249862670898

Token 163: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12355698645114899
    2. 'main' → logprob: -2.7485570907592773
    3. ' count' → logprob: -3.8735570907592773
    4. ' solve' → logprob: -3.9985570907592773
    5. 'count' → logprob: -5.748557090759277
    6. 'solve' → logprob: -6.123557090759277
    7. ' process' → logprob: -6.373557090759277
    8. ' read' → logprob: -7.623557090759277
    9. ' find' → logprob: -7.748557090759277
    10. ' calculate' → logprob: -7.873557090759277

Token 164: '_px' (ID: 160291)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0204564332962036
    2. '_n' → logprob: -1.2704564332962036
    3. '_input' → logprob: -2.270456314086914
    4. '_m' → logprob: -2.645456314086914
    5. '_tx' → logprob: -3.270456314086914
    6. '_t' → logprob: -4.145456314086914
    7. '_q' → logprob: -4.395456314086914
    8. '_queries' → logprob: -4.395456314086914
    9. '_counter' → logprob: -5.020456314086914
    10. 'input' → logprob: -5.020456314086914

Token 165: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08141306042671204
    2. '():
' → logprob: -2.8314130306243896
    3. '(n' → logprob: -3.9564130306243896
    4. ' ():' → logprob: -9.706413269042969
    5. '():

' → logprob: -10.831413269042969
    6. '():
' → logprob: -10.956413269042969
    7. '()' → logprob: -11.331413269042969
    8. '(' → logprob: -11.956413269042969
    9. '(m' → logprob: -12.831413269042969
    10. 'def' → logprob: -13.206413269042969

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4393463134765625
    2. 'return' → logprob: -1.0643463134765625
    3. 'def' → logprob: -5.1893463134765625
    4. ' return' → logprob: -6.1893463134765625
    5. '()
' → logprob: -7.0643463134765625
    6. '
' → logprob: -7.6893463134765625
    7. '()' → logprob: -7.6893463134765625
    8. 'n' → logprob: -7.8143463134765625
    9. 'x' → logprob: -8.939346313476562
    10. '():
' → logprob: -8.939346313476562

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06708873808383942
    2. 'line' → logprob: -3.1920888423919678
    3. 'px' → logprob: -4.817088603973389
    4. 'n' → logprob: -5.317088603973389
    5. 'p' → logprob: -5.567088603973389
    6. 'def' → logprob: -5.942088603973389
    7. '   ' → logprob: -6.442088603973389
    8. ' return' → logprob: -6.817088603973389
    9. 'k' → logprob: -8.317089080810547
    10. 'parse' → logprob: -8.567089080810547

Token 168: ' parse' (ID: 8420)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6485320925712585
    2. 'parse' → logprob: -0.7735320925712585
    3. ' list' → logprob: -5.023531913757324
    4. ' parse' → logprob: -5.273531913757324
    5. '[]' → logprob: -6.773531913757324
    6. 'Counter' → logprob: -7.148531913757324
    7. 'int' → logprob: -7.398531913757324
    8. 'tuple' → logprob: -8.023531913757324
    9. 'map' → logprob: -8.148531913757324
    10. 'dict' → logprob: -8.648531913757324

Token 169: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0325924449716695e-05
    2. 'input' → logprob: -12.50001049041748
    3. '_output' → logprob: -13.50001049041748
    4. '_' → logprob: -13.62501049041748
    5. 'Input' → logprob: -13.87501049041748
    6. '_line' → logprob: -13.87501049041748
    7. '_int' → logprob: -14.62501049041748
    8. '_text' → logprob: -15.37501049041748
    9. 'int' → logprob: -15.50001049041748
    10. '```' → logprob: -15.50001049041748

Token 170: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -9.088346359931165e-07
    2. 'line' → logprob: -14.125000953674316
    3. '_list' → logprob: -16.875
    4. '_lines' → logprob: -17.375
    5. '```' → logprob: -17.75
    6. 'Line' → logprob: -18.125
    7. '_token' → logprob: -18.125
    8. '_LINE' → logprob: -18.5
    9. '_' → logprob: -19.25
    10. '_input' → logprob: -19.875

Token 171: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.504040356958285e-05
    2. '(' → logprob: -10.625064849853516
    3. '()
' → logprob: -10.875064849853516
    4. '()<' → logprob: -12.375064849853516
    5. '();' → logprob: -12.625064849853516
    6. '()(' → logprob: -12.750064849853516
    7. ' ()' → logprob: -13.125064849853516
    8. '()?' → logprob: -13.375064849853516
    9. '()\' → logprob: -13.750064849853516
    10. '()

' → logprob: -13.750064849853516

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022412508260458708
    2. '<|end|>' → logprob: -6.127241134643555
    3. '#' → logprob: -10.752241134643555
    4. '```' → logprob: -11.002241134643555
    5. '
' → logprob: -12.252241134643555
    6. '<|end|>' → logprob: -12.377241134643555
    7. 'from' → logprob: -12.377241134643555
    8. 'n' → logprob: -14.127241134643555
    9. '[' → logprob: -14.502241134643555
    10. 'The' → logprob: -15.002241134643555

Token 173: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2811955213546753
    2. 'main' → logprob: -2.031195640563965
    3. ' count' → logprob: -3.656195640563965
    4. ' solve' → logprob: -3.906195640563965
    5. ' process' → logprob: -4.281195640563965
    6. ' read' → logprob: -4.781195640563965
    7. 'solve' → logprob: -5.031195640563965
    8. 'read' → logprob: -5.156195640563965
    9. 'process' → logprob: -5.281195640563965
    10. 'count' → logprob: -5.406195640563965

Token 174: '_all' (ID: 13305)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.7844746112823486
    2. '_px' → logprob: -2.1594746112823486
    3. '_s' → logprob: -2.4094746112823486
    4. '_counter' → logprob: -2.5344746112823486
    5. '_unique' → logprob: -2.9094746112823486
    6. '_possible' → logprob: -3.0344746112823486
    7. '_m' → logprob: -3.7844746112823486
    8. '_counts' → logprob: -3.9094746112823486
    9. '_p' → logprob: -3.9094746112823486
    10. '_best' → logprob: -3.9094746112823486

Token 175: '_com' (ID: 10828)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.458391785621643
    2. '_com' → logprob: -1.708391785621643
    3. '_s' → logprob: -2.4583916664123535
    4. '_p' → logprob: -2.4583916664123535
    5. '_px' → logprob: -3.0833916664123535
    6. '_masks' → logprob: -3.3333916664123535
    7. '_sets' → logprob: -3.4583916664123535
    8. '_' → logprob: -3.4583916664123535
    9. '_counts' → logprob: -3.8333916664123535
    10. '_possible' → logprob: -3.9583916664123535

Token 176: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0040793512016534805
    2. 'b' → logprob: -5.754079341888428
    3. '_b' → logprob: -8.629079818725586
    4. 'bs' → logprob: -8.629079818725586
    5. 'ponents' → logprob: -9.379079818725586
    6. 'bits' → logprob: -9.629079818725586
    7. '```' → logprob: -9.629079818725586
    8. 'bin' → logprob: -10.129079818725586
    9. 'bined' → logprob: -10.254079818725586
    10. 'positions' → logprob: -10.379079818725586

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0988411009311676
    2. '(' → logprob: -3.4738411903381348
    3. '(s' → logprob: -3.7238411903381348
    4. '():' → logprob: -3.9738411903381348
    5. '(size' → logprob: -5.223841190338135
    6. '():
' → logprob: -5.348841190338135
    7. '(length' → logprob: -6.098841190338135
    8. ' (' → logprob: -6.473841190338135
    9. '(m' → logprob: -6.598841190338135
    10. '(nx' → logprob: -7.098841190338135

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14815233647823334
    2. ',' → logprob: -2.1481523513793945
    3. '):
' → logprob: -3.8981523513793945
    4. ' ):' → logprob: -8.523152351379395
    5. ')' → logprob: -8.648152351379395
    6. ',n' → logprob: -8.898152351379395
    7. '):
' → logprob: -9.398152351379395
    8. '=' → logprob: -10.398152351379395
    9. ' ,' → logprob: -11.398152351379395
    10. ':' → logprob: -11.398152351379395

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5190459489822388
    2. 'from' → logprob: -1.0190459489822388
    3. 'for' → logprob: -3.644045829772949
    4. 'import' → logprob: -5.144045829772949
    5. 'return' → logprob: -5.269045829772949
    6. 'range' → logprob: -6.519045829772949
    7. ' from' → logprob: -6.769045829772949
    8. 'yield' → logprob: -7.019045829772949
    9. 'def' → logprob: -7.269045829772949
    10. '[
' → logprob: -7.394045829772949

Token 180: ' return' (ID: 622)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.15218648314476013
    2. 'return' (adapté à ' return') → logprob: -3.027186393737793
    3. 'for' → logprob: -3.777186393737793
    4. 'com' → logprob: -3.902186393737793
    5. 'range' → logprob: -4.527186393737793
    6. '[' → logprob: -4.777186393737793
    7. 'if' → logprob: -4.902186393737793
    8. '[(' → logprob: -5.027186393737793
    9. 'import' → logprob: -5.277186393737793
    10. 'yield' → logprob: -5.527186393737793

Token 181: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16195298731327057
    2. '[(' → logprob: -2.2869529724121094
    3. '[[' → logprob: -3.7869529724121094
    4. '(' → logprob: -4.036952972412109
    5. 'range' → logprob: -5.786952972412109
    6. ' [' → logprob: -6.786952972412109
    7. 'list' → logprob: -6.911952972412109
    8. '1' → logprob: -7.786952972412109
    9. '(range' → logprob: -8.16195297241211
    10. '[list' → logprob: -8.28695297241211

Token 182: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.0020742492051795e-05
    2. '((' → logprob: -10.125049591064453
    3. '(n' → logprob: -11.875049591064453
    4. '(pow' → logprob: -13.000049591064453
    5. '1' → logprob: -15.375049591064453
    6. ' (' → logprob: -15.750049591064453
    7. '(
' → logprob: -16.125049591064453
    8. '2' → logprob: -16.125049591064453
    9. '()' → logprob: -18.000049591064453
    10. '(-' → logprob: -18.125049591064453

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1466466188430786
    2. '2' → logprob: -2.021646499633789
    3. '(' → logprob: -5.771646499633789
    4. 'n' → logprob: -7.396646499633789
    5. '0' → logprob: -8.896646499633789
    6. '3' → logprob: -9.521646499633789
    7. '(n' → logprob: -11.146646499633789
    8. ' ' → logprob: -12.271646499633789
    9. '4' → logprob: -13.271646499633789
    10. '   ' → logprob: -13.646646499633789

Token 184: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43320268392562866
    2. ' <<' → logprob: -1.4332027435302734
    3. '<<' → logprob: -2.3082027435302734
    4. ' ,' → logprob: -4.308202743530273
    5. '1' → logprob: -9.933202743530273
    6. '<<(' → logprob: -10.308202743530273
    7. ',n' → logprob: -10.558202743530273
    8. ' ' → logprob: -11.808202743530273
    9. '   ' → logprob: -12.308202743530273
    10. ',
' → logprob: -13.183202743530273

Token 185: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.639096970204264e-05
    2. ' n' → logprob: -9.250096321105957
    3. '	n' → logprob: -15.875096321105957
    4. '(n' → logprob: -16.625097274780273
    5. '   ' → logprob: -17.500097274780273
    6. ')n' → logprob: -18.500097274780273
    7. '_n' → logprob: -18.875097274780273
    8. '```' → logprob: -19.500097274780273
    9. ',n' → logprob: -19.875097274780273
    10. '
' → logprob: -20.250097274780273

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002639582962729037
    2. ' )' → logprob: -8.250264167785645
    3. ')
' → logprob: -13.625264167785645
    4. ',' → logprob: -15.125264167785645
    5. ')n' → logprob: -15.250264167785645
    6. '),' → logprob: -15.625264167785645
    7. '<|end|>' → logprob: -15.625264167785645
    8. '```' → logprob: -16.500263214111328
    9. 'n' → logprob: -16.750263214111328
    10. ')`' → logprob: -16.875263214111328

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11957914382219315
    2. '<|end|>' → logprob: -2.2445790767669678
    3. '
' → logprob: -6.244579315185547
    4. ':' → logprob: -6.369579315185547
    5. '

' → logprob: -6.869579315185547
    6. '<|end|>' → logprob: -7.494579315185547
    7. ')' → logprob: -7.994579315185547
    8. '```' → logprob: -8.119579315185547
    9. ':def' → logprob: -8.119579315185547
    10. '#' → logprob: -8.494579315185547

Token 188: ' process' (ID: 2273)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7499698400497437
    2. ' combine' → logprob: -1.9999698400497437
    3. ' calculate' → logprob: -2.374969959259033
    4. ' get' → logprob: -2.499969959259033
    5. ' def' → logprob: -3.249969959259033
    6. 'count' → logprob: -3.499969959259033
    7. ' generate' → logprob: -3.874969959259033
    8. 'def' → logprob: -4.249969959259033
    9. 'combine' → logprob: -4.499969959259033
    10. ' compute' → logprob: -4.624969959259033

Token 189: '_si' (ID: 105332)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8373512625694275
    2. '_com' → logprob: -0.8373512625694275
    3. '_s' → logprob: -3.5873513221740723
    4. '_comb' → logprob: -4.212351322174072
    5. '_input' → logprob: -4.337351322174072
    6. '_states' → logprob: -4.837351322174072
    7. '_bit' → logprob: -5.087351322174072
    8. '_bits' → logprob: -5.212351322174072
    9. '_mask' → logprob: -5.212351322174072
    10. '_state' → logprob: -5.337351322174072

Token 190: '(si' (ID: 181910)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0293478965759277
    2. '(n' → logprob: -1.2793478965759277
    3. 'ze' → logprob: -1.6543478965759277
    4. 'zes' → logprob: -2.7793478965759277
    5. 'x' → logprob: -2.9043478965759277
    6. '(i' → logprob: -4.404347896575928
    7. 's' → logprob: -4.404347896575928
    8. '(' → logprob: -4.779347896575928
    9. '(m' → logprob: -5.029347896575928
    10. '_s' → logprob: -6.029347896575928

Token 191: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3500356376171112
    2. '):' → logprob: -1.2250356674194336
    3. ')' → logprob: -7.475035667419434
    4. '):
' → logprob: -7.850035667419434
    5. '[' → logprob: -8.225035667419434
    6. 's' → logprob: -9.850035667419434
    7. ',n' → logprob: -9.975035667419434
    8. ' ,' → logprob: -9.975035667419434
    9. '[]):' → logprob: -10.350035667419434
    10. ':' → logprob: -10.725035667419434

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2603424787521362
    2. 'count' → logprob: -1.3853424787521362
    3. 'return' → logprob: -1.5103424787521362
    4. 'Counter' → logprob: -2.885342597961426
    5. 'counter' → logprob: -2.885342597961426
    6. 'cnt' → logprob: -3.635342597961426
    7. 'total' → logprob: -4.010342597961426
    8. 'max' → logprob: -4.135342597961426
    9. 'c' → logprob: -4.135342597961426
    10. 'def' → logprob: -4.635342597961426

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1504300832748413
    2. 'count' → logprob: -1.5254300832748413
    3. 'Counter' → logprob: -1.9004300832748413
    4. 'result' → logprob: -2.400430202484131
    5. 'counter' → logprob: -3.025430202484131
    6. 'res' → logprob: -3.275430202484131
    7. 'cnt' → logprob: -4.025430202484131
    8. ' return' → logprob: -4.025430202484131
    9. 'c' → logprob: -4.400430202484131
    10. 'max' → logprob: -4.650430202484131

Token 194: ' sum' (ID: 4215)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5014721751213074
    2. ' Counter' → logprob: -1.8764722347259521
    3. 'sum' → logprob: -2.501472234725952
    4. '[' → logprob: -3.251472234725952
    5. 'si' → logprob: -3.376472234725952
    6. ' sum' → logprob: -3.626472234725952
    7. ' si' → logprob: -4.251471996307373
    8. ' [' → logprob: -4.751471996307373
    9. 'max' → logprob: -5.001471996307373
    10. ' max' → logprob: -5.251471996307373

Token 195: '(si' (ID: 181910)
  Prédit: '(si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(si' → logprob: -0.28920528292655945
    2. 'si' → logprob: -1.6642053127288818
    3. '(' → logprob: -3.164205312728882
    4. '(x' → logprob: -4.789205074310303
    5. '([' → logprob: -5.414205074310303
    6. '((' → logprob: -5.664205074310303
    7. '(s' → logprob: -6.539205074310303
    8. '[' → logprob: -8.164205551147461
    9. '([(' → logprob: -8.164205551147461
    10. '(i' → logprob: -8.414205551147461

Token 196: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016992862219922245
    2. ',' → logprob: -9.50016975402832
    3. '[' → logprob: -9.75016975402832
    4. ' )' → logprob: -11.50016975402832
    5. ')>>' → logprob: -11.62516975402832
    6. '[])' → logprob: -12.50016975402832
    7. '())' → logprob: -13.12516975402832
    8. ')<<' → logprob: -13.37516975402832
    9. ')
' → logprob: -13.75016975402832
    10. '(' → logprob: -14.00016975402832

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03808177635073662
    2. '<|end|>' → logprob: -3.5380818843841553
    3. '
' → logprob: -4.913081645965576
    4. '

' → logprob: -7.788081645965576
    5. ' def' → logprob: -8.538082122802734
    6. '<|end|>' → logprob: -8.788082122802734
    7. '(' → logprob: -10.413082122802734
    8. '[' → logprob: -10.538082122802734
    9. '\n' → logprob: -10.788082122802734
    10. '\' → logprob: -11.163082122802734

Token 198: ' count' (ID: 3605)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.17490100860595703
    2. 'process' → logprob: -3.299901008605957
    3. ' main' → logprob: -3.674901008605957
    4. ' get' → logprob: -3.674901008605957
    5. ' read' → logprob: -4.299901008605957
    6. ' calculate' → logprob: -4.299901008605957
    7. ' parse' → logprob: -4.674901008605957
    8. ' combine' → logprob: -4.924901008605957
    9. ' find' → logprob: -5.549901008605957
    10. ' def' → logprob: -5.674901008605957

Token 199: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1256270408630371
    2. '_' → logprob: -3.375627040863037
    3. 'def' → logprob: -3.875627040863037
    4. '(s' → logprob: -4.125627040863037
    5. '<|end|>' → logprob: -4.750627040863037
    6. '=' → logprob: -5.000627040863037
    7. 's' → logprob: -5.250627040863037
    8. '_elements' → logprob: -5.500627040863037
    9. '(
' → logprob: -5.625627040863037
    10. '(counter' → logprob: -6.000627040863037

Token 200: 'ones' (ID: 3617)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5230019092559814
    2. 'bits' → logprob: -1.2730019092559814
    3. 'values' → logprob: -3.1480019092559814
    4. 'occ' → logprob: -3.6480019092559814
    5. 'items' → logprob: -4.273001670837402
    6. 'ones' → logprob: -4.773001670837402
    7. 'set' → logprob: -5.273001670837402
    8. 'sub' → logprob: -5.648001670837402
    9. 'si' → logprob: -6.023001670837402
    10. 'com' → logprob: -6.273001670837402

Token 201: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521416246891022
    2. '(n' → logprob: -1.7521415948867798
    3. ' (' → logprob: -4.37714147567749
    4. '(s' → logprob: -4.50214147567749
    5. '(num' → logprob: -4.50214147567749
    6. '(x' → logprob: -5.37714147567749
    7. '(number' → logprob: -6.00214147567749
    8. '(count' → logprob: -6.00214147567749
    9. '(value' → logprob: -6.37714147567749
    10. '<|end|>' → logprob: -7.62714147567749

Token 202: '_binary' (ID: 77551)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9288402795791626
    2. 'bin' → logprob: -1.1788402795791626
    3. 'def' → logprob: -1.6788402795791626
    4. 'n' → logprob: -3.428840160369873
    5. 's' → logprob: -4.053840160369873
    6. 'number' → logprob: -4.553840160369873
    7. 'int' → logprob: -4.928840160369873
    8. 'mask' → logprob: -4.928840160369873
    9. ' bin' → logprob: -5.428840160369873
    10. 'num' → logprob: -5.678840160369873

Token 203: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07233719527721405
    2. '(number' → logprob: -3.6973371505737305
    3. '(n' → logprob: -4.4473371505737305
    4. '(num' → logprob: -4.8223371505737305
    5. '(x' → logprob: -5.1973371505737305
    6. '(
' → logprob: -5.6973371505737305
    7. ')' → logprob: -6.1973371505737305
    8. 'count' → logprob: -6.1973371505737305
    9. '<|end|>' → logprob: -6.3223371505737305
    10. '(count' → logprob: -6.3223371505737305

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026291707530617714
    2. '):
' → logprob: -3.776291608810425
    3. ')' → logprob: -5.901291847229004
    4. ' ):' → logprob: -9.401291847229004
    5. ':' → logprob: -10.151291847229004
    6. '(' → logprob: -10.276291847229004
    7. '):

' → logprob: -10.776291847229004
    8. '   ' → logprob: -11.026291847229004
    9. '):
' → logprob: -11.276291847229004
    10. 's' → logprob: -11.401291847229004

Token 205: '   ' (ID: 271)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.015201110392808914
    2. ' bin' → logprob: -4.765201091766357
    3. 'def' → logprob: -5.515201091766357
    4. '   ' → logprob: -6.765201091766357
    5. 'return' → logprob: -6.765201091766357
    6. '(bin' → logprob: -8.515201568603516
    7. ' return' → logprob: -10.765201568603516
    8. '
' → logprob: -12.390201568603516
    9. 'num' → logprob: -13.265201568603516
    10. '    ' → logprob: -14.015201568603516

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5764966607093811
    2. 'bin' → logprob: -0.8264966607093811
    3. ' return' → logprob: -7.951496601104736
    4. '   ' → logprob: -8.826497077941895
    5. ' bin' → logprob: -9.951497077941895
    6. 'def' → logprob: -11.701497077941895
    7. 'count' → logprob: -14.701497077941895
    8. '```' → logprob: -14.701497077941895
    9. 'b' → logprob: -15.201497077941895
    10. '
' → logprob: -15.326497077941895

Token 207: ' Counter' (ID: 32251)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.03804194927215576
    2. ' bin' → logprob: -3.2880420684814453
    3. 'num' → logprob: -15.038042068481445
    4. '(bin' → logprob: -16.038042068481445
    5. 'b' → logprob: -17.663042068481445
    6. ' num' → logprob: -18.038042068481445
    7. '/bin' → logprob: -18.038042068481445
    8. '_bin' → logprob: -18.163042068481445
    9. '   ' → logprob: -18.163042068481445
    10. '-bin' → logprob: -18.538042068481445

Token 208: '(bin' (ID: 117327)
  Prédit: '(bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.10269972681999207
    2. 'bin' → logprob: -2.3526997566223145
    3. '[' → logprob: -7.1026997566223145
    4. '(str' → logprob: -7.2276997566223145
    5. '(format' → logprob: -7.3526997566223145
    6. ' bin' → logprob: -9.477699279785156
    7. '[str' → logprob: -9.727699279785156
    8. '(' → logprob: -10.602699279785156
    9. '(f' → logprob: -10.727699279785156
    10. '([' → logprob: -10.852699279785156

Token 209: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.002863723784685135
    2. 'num' → logprob: -6.252863883972168
    3. '(' → logprob: -7.627863883972168
    4. '(bin' → logprob: -8.127863883972168
    5. '(str' → logprob: -9.752863883972168
    6. ')' → logprob: -10.127863883972168
    7. '[num' → logprob: -11.002863883972168
    8. '('' → logprob: -11.627863883972168
    9. ')(' → logprob: -11.752863883972168
    10. 'str' → logprob: -12.502863883972168

Token 210: ')[' (ID: 13637)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5081837773323059
    2. ')['' → logprob: -1.2581837177276611
    3. '['' → logprob: -3.258183717727661
    4. '[' → logprob: -3.258183717727661
    5. '(' → logprob: -4.13318395614624
    6. ')' → logprob: -4.50818395614624
    7. ')[' → logprob: -5.63318395614624
    8. '))' → logprob: -6.75818395614624
    9. '()['' → logprob: -7.00818395614624
    10. ').' → logprob: -7.13318395614624

Token 211: '2' (ID: 17)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03204098343849182
    2. '1' → logprob: -3.532041072845459
    3. '"' → logprob: -6.407041072845459
    4. '('' → logprob: -8.6570405960083
    5. '
' → logprob: -9.1570405960083
    6. '[' → logprob: -9.1570405960083
    7. '2' → logprob: -9.2820405960083
    8. '```' → logprob: -9.6570405960083
    9. ''s' → logprob: -11.2820405960083
    10. '(' → logprob: -11.4070405960083

Token 212: ':' (ID: 25)
  Prédit: ']).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']).' → logprob: -0.3078753352165222
    2. '])' → logprob: -1.932875394821167
    3. ':' → logprob: -2.557875394821167
    4. '].' → logprob: -3.932875394821167
    5. ':].' → logprob: -3.932875394821167
    6. ']' → logprob: -5.932875156402588
    7. ']))' → logprob: -8.807875633239746
    8. ':]' → logprob: -8.932875633239746
    9. '],' → logprob: -9.057875633239746
    10. ').' → logprob: -9.432875633239746

Token 213: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5241273641586304
    2. ']).' → logprob: -0.8991273641586304
    3. '].' → logprob: -7.89912748336792
    4. ']' → logprob: -8.149127006530762
    5. ''' → logprob: -9.149127006530762
    6. ']))' → logprob: -10.149127006530762
    7. '],'' → logprob: -10.274127006530762
    8. '],' → logprob: -10.399127006530762
    9. '])[' → logprob: -10.524127006530762
    10. ').' → logprob: -11.524127006530762

Token 214: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.24228239059448242
    2. '()['' → logprob: -2.7422823905944824
    3. ')['' → logprob: -3.1172823905944824
    4. '[' → logprob: -3.6172823905944824
    5. 'def' → logprob: -4.367282390594482
    6. '()' → logprob: -4.492282390594482
    7. '('' → logprob: -4.492282390594482
    8. ')' → logprob: -4.617282390594482
    9. '0' → logprob: -5.117282390594482
    10. '.' → logprob: -5.367282390594482

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '0' → logprob: -22.875
    4. '```' → logprob: -23.25
    5. '۱' → logprob: -23.25
    6. '১' → logprob: -23.625
    7. ''s' → logprob: -24.0
    8. '
' → logprob: -24.25
    9. '<|end|>' → logprob: -24.25
    10. '4' → logprob: -24.375

Token 216: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -2.6656825866666622e-05
    2. ']' → logprob: -10.87502670288086
    3. ''' → logprob: -12.62502670288086
    4. '']
' → logprob: -13.12502670288086
    5. '"]' → logprob: -13.25002670288086
    6. ' ']' → logprob: -15.50002670288086
    7. '']

' → logprob: -16.25002670288086
    8. '']]' → logprob: -16.75002670288086
    9. '`]' → logprob: -17.12502670288086
    10. '}' → logprob: -17.50002670288086

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014108618721365929
    2. '<|end|>' → logprob: -4.514108657836914
    3. '
' → logprob: -5.889108657836914
    4. '<|end|>' → logprob: -9.389108657836914
    5. ' def' → logprob: -10.264108657836914
    6. '

' → logprob: -10.514108657836914
    7. ')' → logprob: -10.514108657836914
    8. '#' → logprob: -10.514108657836914
    9. '```' → logprob: -10.639108657836914
    10. '\' → logprob: -10.639108657836914

Token 218: ' compute' (ID: 23864)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.6319639682769775
    2. ' count' → logprob: -1.7569639682769775
    3. ' main' → logprob: -2.0069639682769775
    4. ' find' → logprob: -2.8819639682769775
    5. 'main' → logprob: -3.1319639682769775
    6. 'process' → logprob: -3.3819639682769775
    7. 'combine' → logprob: -3.3819639682769775
    8. 'get' → logprob: -3.6319639682769775
    9. ' process' → logprob: -3.7569639682769775
    10. ' get' → logprob: -3.7569639682769775

Token 219: '_c' (ID: 1303)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1995289325714111
    2. '_max' → logprob: -1.9495289325714111
    3. '_score' → logprob: -1.9495289325714111
    4. '_result' → logprob: -3.074528932571411
    5. '_s' → logprob: -3.324528932571411
    6. '_possible' → logprob: -3.574528932571411
    7. '_subset' → logprob: -3.574528932571411
    8. '_' → logprob: -3.699528932571411
    9. '_mask' → logprob: -3.824528932571411
    10. '_answer' → logprob: -3.949528932571411

Token 220: '(i' (ID: 3649)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.9290171265602112
    2. 'ount' → logprob: -1.1790170669555664
    3. 'over' → logprob: -2.1790170669555664
    4. 'om' → logprob: -2.3040170669555664
    5. 'ost' → logprob: -4.304017066955566
    6. 'ombo' → logprob: -4.429017066955566
    7. 'on' → logprob: -4.679017066955566
    8. 'nt' → logprob: -5.429017066955566
    9. '(s' → logprob: -5.554017066955566
    10. 'ont' → logprob: -5.554017066955566

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013641768135130405
    2. ',n' → logprob: -5.263641834259033
    3. 'n' → logprob: -5.763641834259033
    4. 's' → logprob: -6.263641834259033
    5. ' ,' → logprob: -6.763641834259033
    6. ',s' → logprob: -7.388641834259033
    7. 'x' → logprob: -7.388641834259033
    8. '):' → logprob: -8.138641357421875
    9. '):
' → logprob: -9.513641357421875
    10. ')' → logprob: -9.638641357421875

Token 222: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4786475896835327
    2. 'sx' → logprob: -1.6036475896835327
    3. 'j' → logprob: -1.8536475896835327
    4. ' n' → logprob: -2.6036477088928223
    5. ' sx' → logprob: -2.6036477088928223
    6. 's' → logprob: -2.8536477088928223
    7. 'si' → logprob: -2.8536477088928223
    8. ' j' → logprob: -3.3536477088928223
    9. ' si' → logprob: -3.9786477088928223
    10. 'x' → logprob: -4.228647708892822

Token 223: '_si' (ID: 105332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3292731046676636
    2. '_si' → logprob: -1.4542731046676636
    3. '_s' → logprob: -1.5792731046676636
    4. ',' → logprob: -2.704273223876953
    5. 'si' → logprob: -3.204273223876953
    6. '_' → logprob: -3.454273223876953
    7. ')' → logprob: -3.454273223876953
    8. '):' → logprob: -3.579273223876953
    9. '_,' → logprob: -4.079273223876953
    10. '(s' → logprob: -4.204273223876953

Token 224: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11639039218425751
    2. '):' → logprob: -2.8663904666900635
    3. '):
' → logprob: -3.1163904666900635
    4. 's' → logprob: -5.366390228271484
    5. ' ,' → logprob: -7.366390228271484
    6. '(i' → logprob: -7.491390228271484
    7. '[' → logprob: -7.491390228271484
    8. '[i' → logprob: -7.616390228271484
    9. ')' → logprob: -7.741390228271484
    10. '   ' → logprob: -8.491390228271484

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040567729622125626
    2. ':' → logprob: -3.415567636489868
    3. '(n' → logprob: -5.915567874908447
    4. ',' → logprob: -6.665567874908447
    5. '(' → logprob: -7.040567874908447
    6. '(s' → logprob: -7.790567874908447
    7. '=' → logprob: -7.915567874908447
    8. '):' → logprob: -8.165567398071289
    9. 'def' → logprob: -8.665567398071289
    10. ' =' → logprob: -8.790567398071289

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12352737784385681
    2. '   ' → logprob: -2.2485272884368896
    3. ' return' → logprob: -4.998527526855469
    4. 'if' → logprob: -5.873527526855469
    5. 'c' → logprob: -8.373527526855469
    6. 'max' → logprob: -8.748527526855469
    7. 'def' → logprob: -9.248527526855469
    8. 'sum' → logprob: -9.373527526855469
    9. 'import' → logprob: -9.498527526855469
    10. '1' → logprob: -9.873527526855469

Token 227: ' count' (ID: 3605)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.011373519897461
    2. '(' → logprob: -1.636373519897461
    3. '(i' → logprob: -1.636373519897461
    4. 'i' → logprob: -2.136373519897461
    5. '1' → logprob: -3.511373519897461
    6. 'max' → logprob: -3.761373519897461
    7. '(sum' → logprob: -4.386373519897461
    8. ' (' → logprob: -4.886373519897461
    9. '2' → logprob: -4.886373519897461
    10. '0' → logprob: -5.136373519897461

Token 228: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.011373155459296e-05
    2. '_one' → logprob: -11.250030517578125
    3. '_on' → logprob: -12.875030517578125
    4. '(i' → logprob: -13.250030517578125
    5. '(' → logprob: -13.750030517578125
    6. '```' → logprob: -13.875030517578125
    7. '_i' → logprob: -14.250030517578125
    8. '_once' → logprob: -14.250030517578125
    9. 'ones' → logprob: -14.250030517578125
    10. '_s' → logprob: -14.375030517578125

Token 229: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -11.250020027160645
    3. ' ones' → logprob: -12.125020027160645
    4. '.ones' → logprob: -14.375020027160645
    5. '1' → logprob: -15.000020027160645
    6. 'ONES' → logprob: -15.750020027160645
    7. 's' → logprob: -16.00002098083496
    8. 'one' → logprob: -16.00002098083496
    9. '```' → logprob: -16.50002098083496
    10. 'binary' → logprob: -16.75002098083496

Token 230: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0009816011879593134
    2. 'in' → logprob: -7.25098180770874
    3. 'int' → logprob: -9.375981330871582
    4. 'In' → logprob: -9.625981330871582
    5. '_counter' → logprob: -10.625981330871582
    6. '`' → logprob: -10.875981330871582
    7. '```' → logprob: -10.875981330871582
    8. '_binary' → logprob: -12.000981330871582
    9. '_' → logprob: -12.125981330871582
    10. 's' → logprob: -12.250981330871582

Token 231: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -0.004080897197127342
    2. 'binary' → logprob: -5.504080772399902
    3. 'b' → logprob: -13.754080772399902
    4. ' binary' → logprob: -14.754080772399902
    5. '(binary' → logprob: -14.754080772399902
    6. '_bin' → logprob: -15.879080772399902
    7. '_BINARY' → logprob: -16.00408172607422
    8. 'bin' → logprob: -16.00408172607422
    9. 'Binary' → logprob: -16.25408172607422
    10. '_python' → logprob: -16.37908172607422

Token 232: '(i' (ID: 3649)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.3375820815563202
    2. '(i' → logprob: -1.3375821113586426
    3. '(' → logprob: -3.8375821113586426
    4. '(s' → logprob: -6.712582111358643
    5. ' (' → logprob: -7.462582111358643
    6. '((' → logprob: -7.462582111358643
    7. '(
' → logprob: -10.712581634521484
    8. '(bin' → logprob: -11.462581634521484
    9. '(si' → logprob: -11.712581634521484
    10. '(f' → logprob: -11.837581634521484

Token 233: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20395974814891815
    2. ',' → logprob: -2.2039597034454346
    3. '-' → logprob: -2.9539597034454346
    4. ' -' → logprob: -4.078959941864014
    5. '+' → logprob: -6.203959941864014
    6. ' ,' → logprob: -6.703959941864014
    7. ' )' → logprob: -6.828959941864014
    8. ' +' → logprob: -8.703959465026855
    9. ')-' → logprob: -9.203959465026855
    10. '^' → logprob: -9.328959465026855

Token 234: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11283688992261887
    2. ' sum' → logprob: -2.2378368377685547
    3. '   ' → logprob: -11.987836837768555
    4. '(sum' → logprob: -12.487836837768555
    5. ' ' → logprob: -13.237836837768555
    6. '  ' → logprob: -13.612836837768555
    7. '	sum' → logprob: -14.862836837768555
    8. 'summ' → logprob: -15.237836837768555
    9. 's' → logprob: -15.487836837768555
    10. '
' → logprob: -15.612836837768555

Token 235: '_si' (ID: 105332)
  Prédit: '_si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_si' → logprob: -1.981667537620524e-06
    2. 'si' → logprob: -13.375001907348633
    3. '(si' → logprob: -15.750001907348633
    4. '­si' → logprob: -16.375001907348633
    5. '_pi' → logprob: -17.125001907348633
    6. 's' → logprob: -18.125001907348633
    7. '_s' → logprob: -18.250001907348633
    8. '_ci' → logprob: -18.375001907348633
    9. '_spi' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 236: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.125210297293961e-05
    2. ' )' → logprob: -10.375081062316895
    3. ')+' → logprob: -10.375081062316895
    4. ')
' → logprob: -12.125081062316895
    5. '))' → logprob: -12.500081062316895
    6. '())' → logprob: -13.000081062316895
    7. ')==' → logprob: -13.875081062316895
    8. ')>' → logprob: -13.875081062316895
    9. ')<<' → logprob: -14.000081062316895
    10. '   ' → logprob: -14.250081062316895

Token 237: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.323451042175293
    2. 'count' → logprob: -1.823451042175293
    3. 'compute' → logprob: -2.073451042175293
    4. ' main' → logprob: -2.448451042175293
    5. 'process' → logprob: -2.573451042175293
    6. 'find' → logprob: -3.323451042175293
    7. 'solve' → logprob: -3.323451042175293
    8. 'calculate' → logprob: -3.448451042175293
    9. ' count' → logprob: -3.698451042175293
    10. 'get' → logprob: -4.198451042175293

Token 239: '_temp' (ID: 27535)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.6704365015029907
    2. '_com' → logprob: -1.9204365015029907
    3. '_s' → logprob: -2.295436382293701
    4. '_max' → logprob: -2.295436382293701
    5. '_' → logprob: -2.545436382293701
    6. '_best' → logprob: -3.170436382293701
    7. '_possible' → logprob: -3.295436382293701
    8. '_unique' → logprob: -3.420436382293701
    9. '_comb' → logprob: -3.420436382293701
    10. '_next' → logprob: -3.420436382293701

Token 240: '_c' (ID: 1303)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.4419890642166138
    2. '(s' → logprob: -1.5669890642166138
    3. '_s' → logprob: -2.691988945007324
    4. 'or' → logprob: -2.941988945007324
    5. '_mask' → logprob: -3.191988945007324
    6. '(i' → logprob: -3.316988945007324
    7. '(n' → logprob: -3.816988945007324
    8. '_list' → logprob: -3.816988945007324
    9. '_value' → logprob: -3.816988945007324
    10. '_c' → logprob: -4.066988945007324

Token 241: '_list' (ID: 4162)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2110094577074051
    2. '(' → logprob: -1.9610095024108887
    3. '_(' → logprob: -3.4610095024108887
    4. '(_' → logprob: -5.336009502410889
    5. '_' → logprob: -5.461009502410889
    6. '(n' → logprob: -5.836009502410889
    7. 'def' → logprob: -6.711009502410889
    8. '```' → logprob: -7.086009502410889
    9. '():' → logprob: -7.586009502410889
    10. '(_:' → logprob: -7.836009502410889

Token 242: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.42660894989967346
    2. '(s' → logprob: -2.0516090393066406
    3. '(i' → logprob: -2.1766090393066406
    4. '(' → logprob: -2.6766090393066406
    5. '():' → logprob: -3.6766090393066406
    6. '(size' → logprob: -5.176609039306641
    7. '(si' → logprob: -6.051609039306641
    8. '(m' → logprob: -7.426609039306641
    9. '(lambda' → logprob: -7.801609039306641
    10. '(c' → logprob: -8.05160903930664

Token 243: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2830345928668976
    2. ',' → logprob: -1.4080345630645752
    3. '):
' → logprob: -6.908034801483154
    4. ',n' → logprob: -7.283034801483154
    5. ' ):' → logprob: -9.533034324645996
    6. ')' → logprob: -9.658034324645996
    7. '(n' → logprob: -10.783034324645996
    8. 'n' → logprob: -11.283034324645996
    9. '   ' → logprob: -11.908034324645996
    10. ' ,' → logprob: -12.158034324645996

Token 244: ' sx' (ID: 39428)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.43849483132362366
    2. 'sx' → logprob: -2.188494920730591
    3. 'm' → logprob: -2.563494920730591
    4. 'si' → logprob: -2.688494920730591
    5. ' sum' → logprob: -2.938494920730591
    6. ' sx' → logprob: -4.438494682312012
    7. 'i' → logprob: -4.563494682312012
    8. ' m' → logprob: -4.813494682312012
    9. 's' → logprob: -5.188494682312012
    10. ' si' → logprob: -5.313494682312012

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004395459778606892
    2. '):' → logprob: -5.504395484924316
    3. '):
' → logprob: -8.629395484924316
    4. ',i' → logprob: -10.504395484924316
    5. '[' → logprob: -10.629395484924316
    6. ',n' → logprob: -10.754395484924316
    7. ' ,' → logprob: -10.879395484924316
    8. '[i' → logprob: -11.629395484924316
    9. ')' → logprob: -11.629395484924316
    10. ',m' → logprob: -12.129395484924316

Token 246: ' i' (ID: 575)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6842002868652344
    2. 'm' → logprob: -1.4342002868652344
    3. 'i' → logprob: -1.8092002868652344
    4. 'si' → logprob: -2.5592002868652344
    5. ' sum' → logprob: -4.934200286865234
    6. ' m' → logprob: -5.934200286865234
    7. ' i' → logprob: -6.434200286865234
    8. ' si' → logprob: -6.434200286865234
    9. 's' → logprob: -6.809200286865234
    10. 'px' → logprob: -7.434200286865234

Token 247: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1042291447520256
    2. '):' → logprob: -2.479229211807251
    3. '):
' → logprob: -4.229228973388672
    4. ' ,' → logprob: -8.229228973388672
    5. ')' → logprob: -8.979228973388672
    6. '):
' → logprob: -9.354228973388672
    7. ' ):' → logprob: -9.979228973388672
    8. ',m' → logprob: -10.729228973388672
    9. '   ' → logprob: -11.104228973388672
    10. ',n' → logprob: -11.729228973388672

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.657694418914616e-05
    2. 'return' → logprob: -10.375056266784668
    3. 'temp' → logprob: -11.000056266784668
    4. ' return' → logprob: -12.000056266784668
    5. ' temp' → logprob: -13.750056266784668
    6. 'c' → logprob: -14.375056266784668
    7. '[' → logprob: -15.000056266784668
    8. 'tmp' → logprob: -15.375056266784668
    9. '   ' → logprob: -15.500056266784668
    10. '[temp' → logprob: -17.125057220458984

Token 249: ' temp' (ID: 5484)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14936497807502747
    2. '   ' → logprob: -2.649364948272705
    3. '[' → logprob: -3.649364948272705
    4. '[temp' → logprob: -4.024364948272705
    5. '[c' → logprob: -4.274364948272705
    6. 'temp' (adapté à ' temp') → logprob: -5.524364948272705
    7. ' return' → logprob: -6.149364948272705
    8. '[
' → logprob: -6.149364948272705
    9. 'c' → logprob: -7.149364948272705
    10. '[s' → logprob: -7.274364948272705

Token 250: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.010419806465506554
    2. ' =' → logprob: -5.260419845581055
    3. '=' → logprob: -5.385419845581055
    4. '   ' → logprob: -8.010419845581055
    5. '=_' → logprob: -9.135419845581055
    6. '_list' → logprob: -10.135419845581055
    7. 's' → logprob: -10.510419845581055
    8. 'c' → logprob: -10.635419845581055
    9. ' _' → logprob: -11.135419845581055
    10. '_' → logprob: -11.510419845581055

Token 251: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005100695416331291
    2. '=' → logprob: -6.005100727081299
    3. ' =' → logprob: -6.505100727081299
    4. 's' → logprob: -7.630100727081299
    5. '=_' → logprob: -8.38010025024414
    6. '_lst' → logprob: -8.50510025024414
    7. '=[]' → logprob: -9.38010025024414
    8. '=[]
' → logprob: -10.00510025024414
    9. 'ist' → logprob: -10.75510025024414
    10. '_' → logprob: -11.25510025024414

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768385529518127
    2. ' =' → logprob: -0.8268385529518127
    3. '(n' → logprob: -7.451838493347168
    4. '=[]' → logprob: -8.451838493347168
    5. '=[' → logprob: -9.826838493347168
    6. '=[]
' → logprob: -10.951838493347168
    7. '(' → logprob: -11.326838493347168
    8. '=n' → logprob: -12.201838493347168
    9. '   ' → logprob: -12.326838493347168
    10. 's' → logprob: -12.951838493347168

Token 253: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6121278405189514
    2. '[]' → logprob: -0.8621278405189514
    3. '[' → logprob: -3.3621277809143066
    4. '[
' → logprob: -7.487127780914307
    5. '[]

' → logprob: -9.362128257751465
    6. '[i' → logprob: -9.862128257751465
    7. ' []' → logprob: -10.112128257751465
    8. '[n' → logprob: -10.237128257751465
    9. ' []
' → logprob: -10.862128257751465
    10. ' [' → logprob: -10.862128257751465

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05247953534126282
    2. 'for' → logprob: -3.0524795055389404
    3. ' for' → logprob: -5.5524797439575195
    4. '
' → logprob: -12.17747974395752
    5. ' ' → logprob: -14.80247974395752
    6. '	for' → logprob: -14.92747974395752
    7. '    
' → logprob: -15.17747974395752
    8. '  ' → logprob: -15.30247974395752
    9. '```' → logprob: -15.30247974395752
    10. '       ' → logprob: -16.677478790283203

Token 255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002812124788761139
    2. '   ' → logprob: -6.002811908721924
    3. ' for' → logprob: -8.002812385559082
    4. 'sum' → logprob: -13.752812385559082
    5. '
' → logprob: -14.377812385559082
    6. '```' → logprob: -15.752812385559082
    7. '	for' → logprob: -16.877811431884766
    8. '``' → logprob: -17.252811431884766
    9. 'm' → logprob: -17.502811431884766
    10. ' ' → logprob: -17.752811431884766

Token 256: ' si' (ID: 1784)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12392933666706085
    2. 'x' → logprob: -3.248929262161255
    3. 'k' → logprob: -3.748929262161255
    4. 'idx' → logprob: -4.373929500579834
    5. 'row' → logprob: -4.623929500579834
    6. 'si' → logprob: -4.748929500579834
    7. 's' → logprob: -4.873929500579834
    8. 'm' → logprob: -5.873929500579834
    9. ' j' → logprob: -6.498929500579834
    10. 'ti' → logprob: -6.873929500579834

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028591297566890717
    2. 'in' → logprob: -3.6535913944244385
    3. ',' → logprob: -6.403591156005859
    4. 's' → logprob: -8.40359115600586
    5. '_idx' → logprob: -9.02859115600586
    6. 'n' → logprob: -9.27859115600586
    7. '_index' → logprob: -9.52859115600586
    8. 'index' → logprob: -10.27859115600586
    9. 'x' → logprob: -10.40359115600586
    10. 'idx' → logprob: -11.52859115600586

Token 258: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.0006494098342955112
    2. ' sx' → logprob: -7.500649452209473
    3. 's' → logprob: -9.250649452209473
    4. '(s' → logprob: -15.125649452209473
    5. '[s' → logprob: -16.750648498535156
    6. 'range' → logprob: -17.625648498535156
    7. 'x' → logprob: -17.750648498535156
    8. '   ' → logprob: -18.000648498535156
    9. 'SX' → logprob: -18.125648498535156
    10. '	s' → logprob: -18.250648498535156

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805755823850632
    2. ':
' → logprob: -3.288057565689087
    3. '):' → logprob: -12.288057327270508
    4. '):
' → logprob: -12.413057327270508
    5. '[' → logprob: -12.913057327270508
    6. ':
' → logprob: -13.288057327270508
    7. '       ' → logprob: -13.288057327270508
    8. '   ' → logprob: -15.163057327270508
    9. ':

' → logprob: -15.163057327270508
    10. '[:' → logprob: -15.163057327270508

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020854694594163448
    2. 'temp' → logprob: -9.000208854675293
    3. ' temp' → logprob: -9.875208854675293
    4. '   ' → logprob: -10.375208854675293
    5. ',' → logprob: -14.750208854675293
    6. ' if' → logprob: -15.000208854675293
    7. '	temp' → logprob: -15.125208854675293
    8. ':' → logprob: -15.250208854675293
    9. '           ' → logprob: -15.250208854675293
    10. ',temp' → logprob: -15.500208854675293

Token 261: ' sum' (ID: 4215)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.04676690697669983
    2. ' temp' → logprob: -3.171766996383667
    3. '       ' → logprob: -5.796766757965088
    4. '   ' → logprob: -7.296766757965088
    5. '           ' → logprob: -11.171767234802246
    6. 'tmp' → logprob: -11.421767234802246
    7. '	temp' → logprob: -12.296767234802246
    8. ' ' → logprob: -12.421767234802246
    9. '    ' → logprob: -13.171767234802246
    10. '  ' → logprob: -13.171767234802246

Token 262: '_si' (ID: 105332)
  Prédit: '_si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_si' → logprob: -0.0014942651614546776
    2. 'si' → logprob: -7.251494407653809
    3. '_s' → logprob: -8.001494407653809
    4. 's' → logprob: -8.876494407653809
    5. '_i' → logprob: -8.876494407653809
    6. 'i' → logprob: -9.376494407653809
    7. '(si' → logprob: -10.376494407653809
    8. '=' → logprob: -11.126494407653809
    9. ' =' → logprob: -11.626494407653809
    10. '_so' → logprob: -12.251494407653809

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16040101647377014
    2. ' =' → logprob: -1.9104009866714478
    3. '+=' → logprob: -9.535401344299316
    4. ' +=' → logprob: -9.785401344299316
    5. '=sum' → logprob: -10.660401344299316
    6. '.append' → logprob: -11.410401344299316
    7. '   ' → logprob: -12.410401344299316
    8. ')' → logprob: -12.535401344299316
    9. ' ' → logprob: -13.160401344299316
    10. '  ' → logprob: -14.160401344299316

Token 264: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.1389586627483368
    2. 'sum' → logprob: -2.263958692550659
    3. ' process' → logprob: -3.763958692550659
    4. ' sum' → logprob: -6.01395845413208
    5. '0' → logprob: -9.638958930969238
    6. '   ' → logprob: -9.888958930969238
    7. ' ' → logprob: -11.013958930969238
    8. '  ' → logprob: -12.388958930969238
    9. '	process' → logprob: -12.388958930969238
    10. 'reduce' → logprob: -12.513958930969238

Token 265: '_si' (ID: 105332)
  Prédit: '(si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(si' → logprob: -0.4570135176181793
    2. 'si' → logprob: -1.582013487815857
    3. '_si' → logprob: -1.832013487815857
    4. 's' → logprob: -7.4570136070251465
    5. ' si' → logprob: -8.457013130187988
    6. 'Si' → logprob: -8.832013130187988
    7. '(' → logprob: -9.832013130187988
    8. 'i' → logprob: -10.332013130187988
    9. '(s' → logprob: -10.457013130187988
    10. '```' → logprob: -11.207013130187988

Token 266: '(si' (ID: 181910)
  Prédit: '(si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(si' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. '(s' → logprob: -17.375
    4. 'si' → logprob: -17.625
    5. ' si' → logprob: -18.375
    6. '(ci' → logprob: -19.375
    7. '(sa' → logprob: -19.75
    8. '(sim' → logprob: -20.125
    9. ' (' → logprob: -20.875
    10. '(ui' → logprob: -21.25

Token 267: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018158255144953728
    2. ')' → logprob: -4.018158435821533
    3. ')
' → logprob: -11.893157958984375
    4. ' )
' → logprob: -14.268157958984375
    5. ')

' → logprob: -14.768157958984375
    6. '[i' → logprob: -15.268157958984375
    7. ')`
' → logprob: -16.268157958984375
    8. '   ' → logprob: -16.518157958984375
    9. '       ' → logprob: -17.018157958984375
    10. '[])
' → logprob: -17.393157958984375

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.805981972021982e-05
    2. ',' → logprob: -10.37509822845459
    3. ' for' → logprob: -10.50009822845459
    4. '   ' → logprob: -11.62509822845459
    5. ' if' → logprob: -12.37509822845459
    6. 'for' → logprob: -12.62509822845459
    7. '        
' → logprob: -13.00009822845459
    8. 'c' → logprob: -13.00009822845459
    9. 'temp' → logprob: -13.12509822845459
    10. '```' → logprob: -13.12509822845459

Token 269: ' c' (ID: 274)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0193228367716074
    2. ' temp' → logprob: -4.769322872161865
    3. '       ' → logprob: -5.144322872161865
    4. 'c' (adapté à ' c') → logprob: -5.769322872161865
    5. '   ' → logprob: -6.644322872161865
    6. 'count' → logprob: -9.269322395324707
    7. ' c' → logprob: -9.394322395324707
    8. 'tmp' → logprob: -9.644322395324707
    9. 'val' → logprob: -10.269322395324707
    10. 'value' → logprob: -10.644322395324707

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04074354097247124
    2. '=' → logprob: -3.290743589401245
    3. '_val' → logprob: -6.790743350982666
    4. '_value' → logprob: -7.040743350982666
    5. 'urrent' → logprob: -8.540743827819824
    6. '_' → logprob: -9.040743827819824
    7. 'ount' → logprob: -9.665743827819824
    8. '_temp' → logprob: -9.790743827819824
    9. '=int' → logprob: -9.915743827819824
    10. '_list' → logprob: -10.165743827819824

Token 271: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.06196768581867218
    2. ' compute' → logprob: -2.811967611312866
    3. '.compute' → logprob: -17.436967849731445
    4. 'computer' → logprob: -17.686967849731445
    5. 'comput' → logprob: -18.311967849731445
    6. '
' → logprob: -18.561967849731445
    7. '_compute' → logprob: -18.561967849731445
    8. ' ' → logprob: -18.686967849731445
    9. 'com' → logprob: -18.811967849731445
    10. '   ' → logprob: -19.061967849731445

Token 272: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.088346359931165e-07
    2. 'c' → logprob: -14.375000953674316
    3. '(i' → logprob: -16.25
    4. '_' → logprob: -16.375
    5. '(c' → logprob: -17.75
    6. '(' → logprob: -17.875
    7. '```' → logprob: -18.875
    8. ' _' → logprob: -19.125
    9. '
' → logprob: -19.25
    10. 's' → logprob: -19.5

Token 273: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0010375719284638762
    2. '(' → logprob: -6.87603759765625
    3. '(
' → logprob: -13.00103759765625
    4. 'c' → logprob: -14.00103759765625
    5. ' (' → logprob: -14.75103759765625
    6. '(s' → logprob: -14.87603759765625
    7. '((' → logprob: -15.37603759765625
    8. '(_,' → logprob: -15.50103759765625
    9. '(c' → logprob: -16.25103759765625
    10. '(n' → logprob: -16.25103759765625

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006178391631692648
    2. ' ,' → logprob: -8.000617980957031
    3. ',sum' → logprob: -8.375617980957031
    4. ',s' → logprob: -10.125617980957031
    5. ',
' → logprob: -11.625617980957031
    6. ',c' → logprob: -13.250617980957031
    7. '   ' → logprob: -15.750617980957031
    8. ',n' → logprob: -15.750617980957031
    9. ',int' → logprob: -16.75061798095703
    10. '  ' → logprob: -16.87561798095703

Token 275: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011049943044781685
    2. ' sum' → logprob: -4.511049747467041
    3. '
' → logprob: -14.0110502243042
    4. '(sum' → logprob: -14.1360502243042
    5. 's' → logprob: -15.6360502243042
    6. ')' → logprob: -16.386049270629883
    7. '	sum' → logprob: -16.511049270629883
    8. ' ' → logprob: -16.761049270629883
    9. 'summ' → logprob: -17.136049270629883
    10. 'int' → logprob: -17.511049270629883

Token 276: '_si' (ID: 105332)
  Prédit: '_si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_si' → logprob: -3.953082341467962e-05
    2. 'si' → logprob: -10.250039100646973
    3. '_i' → logprob: -12.875039100646973
    4. 'Si' → logprob: -14.875039100646973
    5. '(si' → logprob: -15.125039100646973
    6. '-si' → logprob: -15.375039100646973
    7. 'i' → logprob: -15.500039100646973
    8. '­si' → logprob: -15.750039100646973
    9. '_pi' → logprob: -16.37504005432129
    10. '_ci' → logprob: -16.75004005432129

Token 277: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029842812567949295
    2. ')' → logprob: -3.5298428535461426
    3. '       ' → logprob: -9.779842376708984
    4. ')
' → logprob: -10.279842376708984
    5. ')

' → logprob: -14.279842376708984
    6. ')`
' → logprob: -14.904842376708984
    7. ' )
' → logprob: -15.279842376708984
    8. '   ' → logprob: -15.779842376708984
    9. '))
' → logprob: -17.654842376708984
    10. '	' → logprob: -17.779842376708984

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.666993507067673e-05
    2. '   ' → logprob: -10.625036239624023
    3. ',' → logprob: -12.875036239624023
    4. '        
' → logprob: -13.125036239624023
    5. '<|end|>' → logprob: -13.375036239624023
    6. '	' → logprob: -14.000036239624023
    7. '```' → logprob: -14.000036239624023
    8. ')' → logprob: -14.000036239624023
    9. ' ' → logprob: -14.125036239624023
    10. '           ' → logprob: -14.250036239624023

Token 279: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007856834563426673
    2. 'temp' (adapté à ' temp') → logprob: -7.875785827636719
    3. ' temp' → logprob: -8.250785827636719
    4. '   ' → logprob: -8.875785827636719
    5. '	' → logprob: -13.625785827636719
    6. '           ' → logprob: -13.875785827636719
    7. '
' → logprob: -14.625785827636719
    8. ' ' → logprob: -14.750785827636719
    9. '	temp' → logprob: -14.750785827636719
    10. '        
' → logprob: -15.250785827636719

Token 280: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.250001907348633
    3. ' _' → logprob: -16.250001907348633
    4. '_temp' → logprob: -16.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '_s' → logprob: -17.875001907348633
    8. ')_' → logprob: -18.000001907348633
    9. 'c' → logprob: -18.375001907348633
    10. 's' → logprob: -18.625001907348633

Token 281: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.875000953674316
    3. '_lst' → logprob: -16.125
    4. '_' → logprob: -16.375
    5. 'List' → logprob: -16.75
    6. 'list' → logprob: -17.25
    7. '_List' → logprob: -17.625
    8. '._' → logprob: -17.75
    9. '_append' → logprob: -17.75
    10. '_LIST' → logprob: -18.375

Token 282: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02975812554359436
    2. '.' → logprob: -3.5297582149505615
    3. '.app' → logprob: -12.27975845336914
    4. '.ap' → logprob: -13.52975845336914
    5. 'append' → logprob: -14.02975845336914
    6. '.extend' → logprob: -14.90475845336914
    7. ' .' → logprob: -15.02975845336914
    8. '.Append' → logprob: -16.90475845336914
    9. '_append' → logprob: -17.02975845336914
    10. '.push' → logprob: -17.15475845336914

Token 283: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.250006675720215
    3. 'c' → logprob: -13.375006675720215
    4. '(
' → logprob: -17.2500057220459
    5. ' (' → logprob: -18.1250057220459
    6. '((' → logprob: -19.6250057220459
    7. ' c' → logprob: -20.0000057220459
    8. ')c' → logprob: -20.2500057220459
    9. '(C' → logprob: -20.7500057220459
    10. '(int' → logprob: -21.3750057220459

Token 284: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16023540496826172
    2. ')
' → logprob: -1.9102354049682617
    3. ')
' → logprob: -12.410235404968262
    4. '   ' → logprob: -12.535235404968262
    5. ')

' → logprob: -13.785235404968262
    6. ')return' → logprob: -13.910235404968262
    7. ' )' → logprob: -14.035235404968262
    8. ' )
' → logprob: -14.285235404968262
    9. ')`
' → logprob: -16.785236358642578
    10. '       ' → logprob: -16.785236358642578

Token 285: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.049106746912002563
    2. '3' → logprob: -4.299106597900391
    3. '10' → logprob: -4.674106597900391
    4. '100' → logprob: -5.049106597900391
    5. '(' → logprob: -5.549106597900391
    6. '(n' → logprob: -5.674106597900391
    7. 'n' → logprob: -6.799106597900391
    8. '9' → logprob: -6.924106597900391
    9. '101' → logprob: -7.174106597900391
    10. ' ' → logprob: -7.299106597900391

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043564729392528534
    2. '10' → logprob: -4.668564796447754
    3. '(' → logprob: -4.793564796447754
    4. '3' → logprob: -5.043564796447754
    5. '100' → logprob: -5.293564796447754
    6. 'n' → logprob: -5.543564796447754
    7. '(n' → logprob: -5.918564796447754
    8. '101' → logprob: -7.168564796447754
    9. '4' → logprob: -7.543564796447754
    10. '9' → logprob: -7.543564796447754

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008323782822117209
    2. ')
' → logprob: -7.125832557678223
    3. ' )' → logprob: -10.875832557678223
    4. '   ' → logprob: -11.750832557678223
    5. ')return' → logprob: -15.250832557678223
    6. ')

' → logprob: -15.500832557678223
    7. '       ' → logprob: -15.625832557678223
    8. ')
' → logprob: -15.875832557678223
    9. ' )
' → logprob: -16.000831604003906
    10. ' ' → logprob: -16.375831604003906

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037414103280752897
    2. '	return' → logprob: -6.253741264343262
    3. 'return' → logprob: -6.753741264343262
    4. ' return' → logprob: -7.503741264343262
    5. '
' → logprob: -9.503741264343262
    6. '    
' → logprob: -12.003741264343262
    7. '   ' → logprob: -12.503741264343262
    8. '       ' → logprob: -13.378741264343262
    9. '```' → logprob: -13.628741264343262
    10. ',' → logprob: -14.003741264343262

Token 289: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8301369547843933
    2. 'return' (adapté à ' return') → logprob: -0.8301369547843933
    3. ' return' → logprob: -2.080137014389038
    4. '	return' → logprob: -5.830136775970459
    5. ' ' → logprob: -9.580137252807617
    6. ':return' → logprob: -10.330137252807617
    7. 'eturn' → logprob: -10.830137252807617
    8. '
' → logprob: -10.955137252807617
    9. '```' → logprob: -11.580137252807617
    10. '    
' → logprob: -11.955137252807617

Token 290: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.005234594456851482
    2. ' temp' → logprob: -5.255234718322754
    3. '[temp' → logprob: -14.130234718322754
    4. '(temp' → logprob: -17.880233764648438
    5. 'tmp' → logprob: -18.005233764648438
    6. 'tem' → logprob: -18.130233764648438
    7. '	temp' → logprob: -18.130233764648438
    8. '[' → logprob: -18.380233764648438
    9. 'tuple' → logprob: -19.755233764648438
    10. ' ' → logprob: -20.380233764648438

Token 291: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.004830361343920231
    2. 'p' → logprob: -5.379830360412598
    3. '_p' → logprob: -8.754830360412598
    4. 'c' → logprob: -10.504830360412598
    5. '_' → logprob: -11.004830360412598
    6. '\' → logprob: -13.004830360412598
    7. ' _' → logprob: -13.129830360412598
    8. 't' → logprob: -13.629830360412598
    9. '```' → logprob: -14.629830360412598
    10. 'r' → logprob: -14.754830360412598

Token 292: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00034845535992644727
    2. 'list' → logprob: -8.000348091125488
    3. 'List' → logprob: -11.625348091125488
    4. 'ist' → logprob: -13.625348091125488
    5. 'temp' → logprob: -14.500348091125488
    6. 'c' → logprob: -14.875348091125488
    7. 'l' → logprob: -14.875348091125488
    8. 'lst' → logprob: -15.000348091125488
    9. '_l' → logprob: -15.125348091125488
    10. '_lst' → logprob: -15.375348091125488

Token 293: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3693525791168213
    2. '<|end|>' → logprob: -1.8693525791168213
    3. 'for' → logprob: -2.3693525791168213
    4. ')' → logprob: -4.369352340698242
    5. '   ' → logprob: -4.494352340698242
    6. ' for' → logprob: -4.619352340698242
    7. ']' → logprob: -5.494352340698242
    8. '[' → logprob: -5.744352340698242
    9. '       ' → logprob: -5.869352340698242
    10. 'n' → logprob: -5.994352340698242

Token 295: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.278695821762085
    2. 'main' → logprob: -1.903695821762085
    3. 'calculate' → logprob: -2.153695821762085
    4. ' check' → logprob: -2.778695821762085
    5. ' calculate' → logprob: -3.028695821762085
    6. 'check' → logprob: -3.028695821762085
    7. 'solve' → logprob: -3.153695821762085
    8. ' solve' → logprob: -3.278695821762085
    9. 'compute' → logprob: -3.403695821762085
    10. 'get' → logprob: -3.653695821762085

Token 296: '_px' (ID: 160291)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40926989912986755
    2. '_' → logprob: -1.40926992893219
    3. '_s' → logprob: -3.4092698097229004
    4. '(s' → logprob: -4.2842698097229
    5. '(_' → logprob: -4.9092698097229
    6. '_condition' → logprob: -4.9092698097229
    7. ' (' → logprob: -5.4092698097229
    8. '_com' → logprob: -5.9092698097229
    9. '_conditions' → logprob: -5.9092698097229
    10. '(i' → logprob: -6.0342698097229

Token 297: '_equal' (ID: 27882)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22701416909694672
    2. '(n' → logprob: -2.2270140647888184
    3. '(px' → logprob: -2.9770140647888184
    4. '(p' → logprob: -3.2270140647888184
    5. '(nx' → logprob: -6.352014064788818
    6. '(pi' → logprob: -7.102014064788818
    7. '(i' → logprob: -8.102014541625977
    8. '(py' → logprob: -8.102014541625977
    9. '(x' → logprob: -8.227014541625977
    10. '():' → logprob: -8.852014541625977

Token 298: '(temp' (ID: 19094)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.1382293850183487
    2. '(p' → logprob: -3.0132293701171875
    3. '(' → logprob: -3.2632293701171875
    4. '_px' → logprob: -3.3882293701171875
    5. '(_' → logprob: -6.6382293701171875
    6. '(s' → logprob: -6.7632293701171875
    7. '_' → logprob: -6.8882293701171875
    8. 's' → logprob: -7.0132293701171875
    9. '_p' → logprob: -7.0132293701171875
    10. '(py' → logprob: -7.2632293701171875

Token 299: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.004736041650176048
    2. '_px' → logprob: -5.754735946655273
    3. '_p' → logprob: -7.504735946655273
    4. '_' → logprob: -7.754735946655273
    5. '_list' → logprob: -8.129735946655273
    6. ')_' → logprob: -9.754735946655273
    7. '_py' → logprob: -10.129735946655273
    8. '_x' → logprob: -10.504735946655273
    9. ' _' → logprob: -10.879735946655273
    10. ')' → logprob: -11.129735946655273

Token 300: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.9160102712921798e-05
    2. 'list' → logprob: -11.250029563903809
    3. '_lst' → logprob: -12.875029563903809
    4. '_' → logprob: -13.000029563903809
    5. ' _' → logprob: -13.125029563903809
    6. ')_' → logprob: -13.375029563903809
    7. 's' → logprob: -13.375029563903809
    8. '_equal' → logprob: -13.875029563903809
    9. ')' → logprob: -14.125029563903809
    10. 'List' → logprob: -14.375029563903809

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010503156809136271
    2. ' ,' → logprob: -6.8760504722595215
    3. ',p' → logprob: -11.126049995422363
    4. ',
' → logprob: -13.376049995422363
    5. '   ' → logprob: -15.376049995422363
    6. '):' → logprob: -15.501049995422363
    7. ',

' → logprob: -15.626049995422363
    8. ')' → logprob: -16.25105094909668
    9. '_,' → logprob: -16.50105094909668
    10. '

' → logprob: -16.62605094909668

Token 302: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.38738617300987244
    2. ' px' → logprob: -1.1373862028121948
    3. 'p' → logprob: -8.012386322021484
    4. ' p' → logprob: -9.137386322021484
    5. ' ' → logprob: -11.387386322021484
    6. '(px' → logprob: -11.637386322021484
    7. '_px' → logprob: -11.637386322021484
    8. '   ' → logprob: -11.762386322021484
    9. 'def' → logprob: -12.262386322021484
    10. ')' → logprob: -12.512386322021484

Token 303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4401392340660095
    2. ',' → logprob: -1.0651392936706543
    3. '):
' → logprob: -4.690139293670654
    4. ')' → logprob: -6.690139293670654
    5. '[' → logprob: -7.440139293670654
    6. '):
' → logprob: -9.065138816833496
    7. ' ):' → logprob: -9.940138816833496
    8. '[]):' → logprob: -10.190138816833496
    9. '[:' → logprob: -10.440138816833496
    10. '):

' → logprob: -10.565138816833496

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008759701740927994
    2. ':' → logprob: -7.500875949859619
    3. ' return' → logprob: -8.750876426696777
    4. ':
' → logprob: -10.375876426696777
    5. '(' → logprob: -10.500876426696777
    6. '	return' → logprob: -10.500876426696777
    7. ':return' → logprob: -10.875876426696777
    8. 'return' → logprob: -11.375876426696777
    9. ' for' → logprob: -11.500876426696777
    10. ',' → logprob: -12.125876426696777

Token 305: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46467986702919006
    2. ' return' → logprob: -1.4646798372268677
    3. '   ' → logprob: -1.9646798372268677
    4. 'for' → logprob: -8.839679718017578
    5. 'def' → logprob: -9.339679718017578
    6. ' for' → logprob: -9.589679718017578
    7. '```' → logprob: -12.839679718017578
    8. ' ' → logprob: -12.964679718017578
    9. '	return' → logprob: -13.464679718017578
    10. '  ' → logprob: -13.964679718017578

Token 306: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.08085323870182037
    2. ' temp' → logprob: -2.705853223800659
    3. 'all' → logprob: -4.955853462219238
    4. ' all' → logprob: -5.580853462219238
    5. 'Counter' → logprob: -11.830853462219238
    6. '(temp' → logprob: -11.955853462219238
    7. 'tuple' → logprob: -12.330853462219238
    8. '[temp' → logprob: -12.330853462219238
    9. 'px' → logprob: -12.455853462219238
    10. 'len' → logprob: -12.455853462219238

Token 307: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9146995327901095e-05
    2. 'c' → logprob: -11.500019073486328
    3. '_temp' → logprob: -12.750019073486328
    4. '_' → logprob: -13.000019073486328
    5. 'temp' → logprob: -14.250019073486328
    6. '_list' → logprob: -14.750019073486328
    7. ' _' → logprob: -15.000019073486328
    8. '[_' → logprob: -15.375019073486328
    9. '_code' → logprob: -15.625019073486328
    10. 'if' → logprob: -15.875019073486328

Token 308: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.215330409351736e-05
    2. 'ist' → logprob: -10.375041961669922
    3. 'list' → logprob: -11.875041961669922
    4. '_' → logprob: -13.625041961669922
    5. '_l' → logprob: -13.625041961669922
    6. 'alist' → logprob: -15.250041961669922
    7. 'c' → logprob: -15.375041961669922
    8. 'List' → logprob: -15.375041961669922
    9. '_lst' → logprob: -15.375041961669922
    10. '_equal' → logprob: -15.875041961669922

Token 309: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868992328643799
    2. ' ==' → logprob: -1.1368992328643799
    3. '[:' → logprob: -11.5118989944458
    4. '[:]' → logprob: -12.0118989944458
    5. '=' → logprob: -12.2618989944458
    6. '[' → logprob: -12.8868989944458
    7. '==
' → logprob: -13.5118989944458
    8. ')==' → logprob: -13.6368989944458
    9. '[::-' → logprob: -14.0118989944458
    10. ']==' → logprob: -15.1368989944458

Token 310: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.2519322335720062
    2. ' px' → logprob: -1.5019322633743286
    3. '(px' → logprob: -12.751932144165039
    4. 'py' → logprob: -16.00193214416504
    5. '_px' → logprob: -16.00193214416504
    6. ':px' → logprob: -17.87693214416504
    7. 'pix' → logprob: -17.87693214416504
    8. ' py' → logprob: -19.50193214416504
    9. ' ' → logprob: -19.50193214416504
    10. ' ' → logprob: -19.75193214416504

Token 311: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02457459829747677
    2. '<|end|>' → logprob: -3.7745745182037354
    3. '
' → logprob: -7.7745747566223145
    4. '[' → logprob: -8.149574279785156
    5. '<|end|>' → logprob: -8.524574279785156
    6. '#' → logprob: -9.149574279785156
    7. ' def' → logprob: -9.274574279785156
    8. '```' → logprob: -9.274574279785156
    9. 'for' → logprob: -10.899574279785156
    10. '\' → logprob: -11.274574279785156

Token 312: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031580092036165297
    2. 'for' → logprob: -8.12531566619873
    3. '#' → logprob: -11.75031566619873
    4. '<|end|>' → logprob: -12.00031566619873
    5. '```' → logprob: -13.50031566619873
    6. 'n' → logprob: -13.62531566619873
    7. '
' → logprob: -14.62531566619873
    8. 'from' → logprob: -14.62531566619873
    9. ' def' → logprob: -14.75031566619873
    10. '<|end|>' → logprob: -15.12531566619873

Token 313: ' count' (ID: 3605)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09124760329723358
    2. ' main' → logprob: -2.71624755859375
    3. 'solve' → logprob: -4.09124755859375
    4. 'def' → logprob: -6.34124755859375
    5. 'find' → logprob: -6.59124755859375
    6. ' solve' → logprob: -7.34124755859375
    7. 'check' → logprob: -8.71624755859375
    8. ' find' → logprob: -8.84124755859375
    9. 'process' → logprob: -9.09124755859375
    10. 'parse' → logprob: -10.59124755859375

Token 314: '_valid' (ID: 23321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.243089959025383
    2. '_s' → logprob: -1.7430899143218994
    3. '_bits' → logprob: -5.1180901527404785
    4. '_matching' → logprob: -5.4930901527404785
    5. '_unique' → logprob: -5.4930901527404785
    6. '_matches' → logprob: -5.8680901527404785
    7. '_com' → logprob: -5.8680901527404785
    8. '_valid' → logprob: -6.2430901527404785
    9. '_elements' → logprob: -6.3680901527404785
    10. '_all' → logprob: -6.4930901527404785

Token 315: '_ans' (ID: 146254)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7543331384658813
    2. 'com' → logprob: -1.8793331384658813
    3. '_com' → logprob: -2.129333019256592
    4. '_sub' → logprob: -3.004333019256592
    5. '(' → logprob: -3.129333019256592
    6. '_assign' → logprob: -3.629333019256592
    7. '_configs' → logprob: -3.879333019256592
    8. 'solutions' → logprob: -4.129333019256592
    9. '_x' → logprob: -4.504333019256592
    10. 's' → logprob: -4.629333019256592

Token 316: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04245515540242195
    2. '(' → logprob: -3.2924551963806152
    3. '(s' → logprob: -5.667455196380615
    4. '():' → logprob: -7.667455196380615
    5. 's' → logprob: -7.917455196380615
    6. '(
' → logprob: -9.917454719543457
    7. '(p' → logprob: -11.167454719543457
    8. '(u' → logprob: -11.542454719543457
    9. '((' → logprob: -11.792454719543457
    10. ' (' → logprob: -12.667454719543457

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ',m' → logprob: -11.375020980834961
    3. ' ,' → logprob: -11.875020980834961
    4. ',n' → logprob: -14.000020980834961
    5. 'm' → logprob: -14.125020980834961
    6. ',
' → logprob: -14.375020980834961
    7. '):' → logprob: -16.37502098083496
    8. ',p' → logprob: -17.25002098083496
    9. '‌,' → logprob: -17.50002098083496
    10. ' m' → logprob: -18.00002098083496

Token 318: ' sx' (ID: 39428)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0029897091444581747
    2. ' m' → logprob: -6.002989768981934
    3. 'sx' → logprob: -7.627989768981934
    4. 'mx' → logprob: -11.377989768981934
    5. ' sx' → logprob: -12.127989768981934
    6. 'px' → logprob: -12.127989768981934
    7. '```' → logprob: -13.377989768981934
    8. '	m' → logprob: -13.877989768981934
    9. '   ' → logprob: -14.502989768981934
    10. '
' → logprob: -14.940489768981934

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',
' → logprob: -14.125041007995605
    4. ',m' → logprob: -14.750041007995605
    5. ',p' → logprob: -16.375041961669922
    6. '   ' → logprob: -16.625041961669922
    7. ',n' → logprob: -16.875041961669922
    8. 'm' → logprob: -17.500041961669922
    9. '):
' → logprob: -17.750041961669922
    10. ',

' → logprob: -18.375041961669922

Token 320: ' px' (ID: 27003)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007550785783678293
    2. 'px' → logprob: -5.2575507164001465
    3. ' m' → logprob: -6.1325507164001465
    4. 'mx' → logprob: -9.507551193237305
    5. ' px' → logprob: -9.632551193237305
    6. '	m' → logprob: -14.507551193237305
    7. '```' → logprob: -14.632551193237305
    8. 'py' → logprob: -14.757551193237305
    9. '   ' → logprob: -15.007551193237305
    10. ' mx' → logprob: -15.132551193237305

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31741198897361755
    2. '):
' → logprob: -1.31741201877594
    3. ',' → logprob: -5.69241189956665
    4. ' ):' → logprob: -8.067412376403809
    5. ')' → logprob: -8.442412376403809
    6. '):
' → logprob: -8.692412376403809
    7. ' ):
' → logprob: -10.067412376403809
    8. '):

' → logprob: -11.192412376403809
    9. '   ' → logprob: -11.567412376403809
    10. ',n' → logprob: -12.692412376403809

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5577775128767826e-06
    2. 'valid' → logprob: -12.875005722045898
    3. ' valid' → logprob: -13.500005722045898
    4. ' ans' → logprob: -14.375005722045898
    5. '```' → logprob: -14.375005722045898
    6. 'ans' → logprob: -15.375005722045898
    7. 'count' → logprob: -16.5000057220459
    8. 'def' → logprob: -16.7500057220459
    9. '	valid' → logprob: -17.5000057220459
    10. '``' → logprob: -17.6250057220459

Token 323: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.43276873230934143
    2. 'valid' → logprob: -1.682768702507019
    3. '   ' → logprob: -1.932768702507019
    4. 'count' → logprob: -4.307768821716309
    5. ' ans' → logprob: -5.682768821716309
    6. 'answer' → logprob: -5.932768821716309
    7. ' valid' → logprob: -7.182768821716309
    8. 'cnt' → logprob: -8.682768821716309
    9. 'result' → logprob: -9.307768821716309
    10. 'total' → logprob: -10.057768821716309

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519354820251465
    2. '=' → logprob: -1.5019354820251465
    3. '   ' → logprob: -12.751935958862305
    4. ',' → logprob: -13.251935958862305
    5. ' ' → logprob: -13.626935958862305
    6. '_' → logprob: -15.376935958862305
    7. '  ' → logprob: -15.751935958862305
    8. ')' → logprob: -16.876935958862305
    9. ' =
' → logprob: -17.501935958862305
    10. '```' → logprob: -17.501935958862305

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009131324477493763
    2. ' ' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.0009126663208
    4. '[' → logprob: -15.1884126663208
    5. '1' → logprob: -16.125913619995117
    6. '=' → logprob: -17.125913619995117
    7. 'int' → logprob: -17.375913619995117
    8. 'sum' → logprob: -17.375913619995117
    9. '```' → logprob: -17.375913619995117
    10. '  ' → logprob: -17.500913619995117

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '[' → logprob: -15.125007629394531
    4. '1' → logprob: -17.00000762939453
    5. '   ' → logprob: -17.00000762939453
    6. 'int' → logprob: -17.31250762939453
    7. '[]' → logprob: -17.75000762939453
    8. 'range' → logprob: -17.93750762939453
    9. '```' → logprob: -18.06250762939453
    10. '=' → logprob: -18.18750762939453

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3305397629737854
    2. ' for' → logprob: -1.8305397033691406
    3. '
' → logprob: -2.2055397033691406
    4. '<|end|>' → logprob: -5.205539703369141
    5. 'for' → logprob: -5.955539703369141
    6. '	for' → logprob: -6.705539703369141
    7. ',' → logprob: -7.705539703369141
    8. '    
' → logprob: -8.20553970336914
    9. '<|end|>' → logprob: -8.33053970336914
    10. 'n' → logprob: -8.70553970336914

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02105083502829075
    2. ' for' → logprob: -3.8960509300231934
    3. '
' → logprob: -8.146050453186035
    4. ',' → logprob: -10.021050453186035
    5. 'for' → logprob: -10.021050453186035
    6. '<|end|>' → logprob: -10.021050453186035
    7. '    
' → logprob: -10.271050453186035
    8. '	for' → logprob: -11.521050453186035
    9. ' n' → logprob: -12.146050453186035
    10. ' 
' → logprob: -12.271050453186035

Token 329: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01585240848362446
    2. ' for' → logprob: -4.265852451324463
    3. '   ' → logprob: -6.390852451324463
    4. 'n' → logprob: -11.765851974487305
    5. 'all' → logprob: -13.515851974487305
    6. '
' → logprob: -14.265851974487305
    7. ' ' → logprob: -15.265851974487305
    8. '	for' → logprob: -15.390851974487305
    9. '```' → logprob: -15.515851974487305
    10. ' n' → logprob: -16.640851974487305

Token 330: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04302465170621872
    2. ' i' → logprob: -3.1680245399475098
    3. ' ' → logprob: -12.543025016784668
    4. 'n' → logprob: -12.543025016784668
    5. '	i' → logprob: -12.668025016784668
    6. '   ' → logprob: -12.668025016784668
    7. '```' → logprob: -12.918025016784668
    8. 'x' → logprob: -13.668025016784668
    9. '_i' → logprob: -13.918025016784668
    10. 'comb' → logprob: -14.355525016784668

Token 331: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026308538392186165
    2. 'in' → logprob: -3.651308536529541
    3. ' ' → logprob: -12.5263090133667
    4. 'n' → logprob: -12.5263090133667
    5. '	in' → logprob: -15.1513090133667
    6. 'space' → logprob: -15.5263090133667
    7. '   ' → logprob: -16.401308059692383
    8. 'range' → logprob: -16.401308059692383
    9. ',' → logprob: -16.526308059692383
    10. '  ' → logprob: -16.901308059692383

Token 332: ' get' (ID: 717)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6029455661773682
    2. 'get' → logprob: -0.9779455661773682
    3. ' range' → logprob: -2.727945566177368
    4. ' get' → logprob: -4.477945327758789
    5. '(get' → logprob: -12.852945327758789
    6. ' ' → logprob: -13.602945327758789
    7. '	get' → logprob: -14.415445327758789
    8. '   ' → logprob: -14.477945327758789
    9. '(range' → logprob: -14.665445327758789
    10. '
' → logprob: -14.790445327758789

Token 333: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.000158842682139948
    2. 'all' → logprob: -8.75015926361084
    3. 'All' → logprob: -15.25015926361084
    4. ' all' → logprob: -16.375158309936523
    5. '_ALL' → logprob: -17.875158309936523
    6. ''all' → logprob: -18.500158309936523
    7. '	all' → logprob: -19.125158309936523
    8. ' ' → logprob: -19.375158309936523
    9. '_All' → logprob: -19.375158309936523
    10. '_com' → logprob: -19.875158309936523

Token 334: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.01433579158037901
    2. '(n' → logprob: -4.264335632324219
    3. 'com' → logprob: -9.014335632324219
    4. ' (' → logprob: -10.139335632324219
    5. '(' → logprob: -11.764335632324219
    6. '_comb' → logprob: -13.889335632324219
    7. ' ' → logprob: -14.514335632324219
    8. '```' → logprob: -14.764335632324219
    9. '_n' → logprob: -15.139335632324219
    10. '(com' → logprob: -15.264335632324219

Token 335: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0048823123797774315
    2. '(n' → logprob: -5.504882335662842
    3. 'b' → logprob: -7.504882335662842
    4. '(' → logprob: -9.629881858825684
    5. 'utations' → logprob: -9.754881858825684
    6. '(range' → logprob: -10.629881858825684
    7. 'inations' → logprob: -10.629881858825684
    8. 'bs' → logprob: -10.754881858825684
    9. 'bn' → logprob: -11.004881858825684
    10. '[n' → logprob: -11.379881858825684

Token 336: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -11.000020027160645
    3. ' (' → logprob: -13.750020027160645
    4. 'n' → logprob: -14.125020027160645
    5. '```' → logprob: -14.625020027160645
    6. ')(' → logprob: -14.875020027160645
    7. ',' → logprob: -16.000019073486328
    8. ',n' → logprob: -17.250019073486328
    9. '(
' → logprob: -17.625019073486328
    10. ')' → logprob: -17.875019073486328

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04860769584774971
    2. '):
' → logprob: -3.048607587814331
    3. '):
' → logprob: -11.54860782623291
    4. '   ' → logprob: -12.42360782623291
    5. ' ):' → logprob: -12.54860782623291
    6. ':' → logprob: -13.54860782623291
    7. ')' → logprob: -14.04860782623291
    8. '):

' → logprob: -14.92360782623291
    9. '():' → logprob: -15.54860782623291
    10. ' ):
' → logprob: -15.79860782623291

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005359939532354474
    2. '<|end|>' → logprob: -7.87553596496582
    3. ' if' → logprob: -9.62553596496582
    4. '
' → logprob: -11.00053596496582
    5. ',' → logprob: -11.12553596496582
    6. 'if' → logprob: -11.37553596496582
    7. '<|end|>' → logprob: -11.75053596496582
    8. '   ' → logprob: -11.75053596496582
    9. '        
' → logprob: -12.12553596496582
    10. '[' → logprob: -13.00053596496582

Token 339: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14051611721515656
    2. 'temp' (adapté à ' temp') → logprob: -2.5155160427093506
    3. ' temp' → logprob: -3.1405160427093506
    4. '   ' → logprob: -5.14051628112793
    5. '           ' → logprob: -7.51551628112793
    6. ' if' → logprob: -8.01551628112793
    7. 'if' → logprob: -8.76551628112793
    8. '
' → logprob: -11.26551628112793
    9. ' ' → logprob: -11.51551628112793
    10. '	temp' → logprob: -11.64051628112793

Token 340: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.62500286102295
    3. '=' → logprob: -14.37500286102295
    4. '=_' → logprob: -14.37500286102295
    5. '_temp' → logprob: -15.50000286102295
    6. ' =' → logprob: -16.000003814697266
    7. '```' → logprob: -16.750003814697266
    8. ' _' → logprob: -17.125003814697266
    9. '       ' → logprob: -17.250003814697266
    10. '_list' → logprob: -17.625003814697266

Token 341: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.404745439183898e-05
    2. 'list' → logprob: -10.50003433227539
    3. 'ist' → logprob: -12.37503433227539
    4. 'List' → logprob: -13.87503433227539
    5. '=' → logprob: -14.12503433227539
    6. ' =' → logprob: -14.62503433227539
    7. '_lst' → logprob: -16.75003433227539
    8. 'temp' → logprob: -17.37503433227539
    9. '_LIST' → logprob: -17.62503433227539
    10. '=_' → logprob: -17.75003433227539

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931651830673218
    2. ' =' → logprob: -0.6931651830673218
    3. '.append' → logprob: -10.943164825439453
    4. '=get' → logprob: -15.568164825439453
    5. '   ' → logprob: -16.818164825439453
    6. '+=' → logprob: -17.443164825439453
    7. '.extend' → logprob: -17.818164825439453
    8. '.=' → logprob: -17.818164825439453
    9. ' +=' → logprob: -18.193164825439453
    10. ',' → logprob: -18.318164825439453

Token 343: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10503265261650085
    2. ' get' → logprob: -2.3550326824188232
    3. '[get' → logprob: -5.355032444000244
    4. ' [' → logprob: -10.855032920837402
    5. '[]
' → logprob: -10.980032920837402
    6. '(get' → logprob: -10.980032920837402
    7. '[]' → logprob: -11.355032920837402
    8. '[i' → logprob: -12.480032920837402
    9. '[' → logprob: -12.480032920837402
    10. '.get' → logprob: -12.605032920837402

Token 344: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.020570848137140274
    2. 'temp' → logprob: -3.895570755004883
    3. '_tmp' → logprob: -11.270570755004883
    4. 'sx' → logprob: -12.020570755004883
    5. 'tmp' → logprob: -13.395570755004883
    6. '_' → logprob: -13.770570755004883
    7. 'px' → logprob: -14.020570755004883
    8. 's' → logprob: -14.145570755004883
    9. '(temp' → logprob: -14.145570755004883
    10. 'def' → logprob: -14.145570755004883

Token 345: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.7968066206085496e-05
    2. 'c' → logprob: -10.500027656555176
    3. '_temp' → logprob: -15.875027656555176
    4. 'temp' → logprob: -16.000028610229492
    5. '```' → logprob: -16.750028610229492
    6. '_' → logprob: -17.250028610229492
    7. '_list' → logprob: -17.375028610229492
    8. 's' → logprob: -17.500028610229492
    9. '_i' → logprob: -18.375028610229492
    10. 'C' → logprob: -18.625028610229492

Token 346: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007875907467678189
    2. 'ist' → logprob: -8.000787734985352
    3. 'list' → logprob: -8.000787734985352
    4. 'temp' → logprob: -9.500787734985352
    5. '_c' → logprob: -11.375787734985352
    6. 'st' → logprob: -11.375787734985352
    7. 'c' → logprob: -11.750787734985352
    8. 'alist' → logprob: -12.500787734985352
    9. 'List' → logprob: -13.125787734985352
    10. 'lst' → logprob: -14.375787734985352

Token 347: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.641841820150148e-05
    2. 'n' → logprob: -11.50002670288086
    3. '(' → logprob: -11.87502670288086
    4. '       ' → logprob: -12.37502670288086
    5. '```' → logprob: -12.87502670288086
    6. '   ' → logprob: -14.37502670288086
    7. '(
' → logprob: -14.50002670288086
    8. ' (' → logprob: -15.00002670288086
    9. '(len' → logprob: -15.37502670288086
    10. '<n' → logprob: -15.75002670288086

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038241007132455707
    2. ',s' → logprob: -7.875382423400879
    3. ' ,' → logprob: -13.500382423400879
    4. 's' → logprob: -14.625382423400879
    5. ',
' → logprob: -15.500382423400879
    6. ',S' → logprob: -17.000381469726562
    7. ')' → logprob: -17.000381469726562
    8. '(s' → logprob: -17.125381469726562
    9. '```' → logprob: -17.375381469726562
    10. ',x' → logprob: -17.625381469726562

Token 349: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.006719163153320551
    2. ' sx' → logprob: -5.00671911239624
    3. 's' → logprob: -12.756719589233398
    4. ' ' → logprob: -15.381719589233398
    5. '
' → logprob: -15.506719589233398
    6. 'x' → logprob: -15.756719589233398
    7. ',s' → logprob: -16.0067195892334
    8. ',' → logprob: -16.1317195892334
    9. '	s' → logprob: -16.7567195892334
    10. 'px' → logprob: -17.0067195892334

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ',i' → logprob: -11.250016212463379
    3. ' ,' → logprob: -12.875016212463379
    4. 'i' → logprob: -16.625015258789062
    5. ',
' → logprob: -18.000015258789062
    6. '[i' → logprob: -18.500015258789062
    7. '   ' → logprob: -18.750015258789062
    8. '```' → logprob: -20.375015258789062
    9. '‌,' → logprob: -20.750015258789062
    10. '_,' → logprob: -20.750015258789062

Token 351: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -18.250045776367188
    4. ')i' → logprob: -18.250045776367188
    5. '[i' → logprob: -18.625045776367188
    6. ')' → logprob: -19.250045776367188
    7. '
' → logprob: -20.125045776367188
    8. '   ' → logprob: -20.375045776367188
    9. ',i' → logprob: -20.375045776367188
    10. '_i' → logprob: -20.625045776367188

Token 352: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6211853623390198
    2. ')' → logprob: -0.8711853623390198
    3. '       ' → logprob: -3.121185302734375
    4. ',' → logprob: -9.621185302734375
    5. ')
' → logprob: -9.746185302734375
    6. '   ' → logprob: -12.621185302734375
    7. ')

' → logprob: -13.621185302734375
    8. '      ' → logprob: -14.621185302734375
    9. ')`
' → logprob: -14.621185302734375
    10. ' )
' → logprob: -14.996185302734375

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018101456225849688
    2. 'if' → logprob: -8.750181198120117
    3. ' if' → logprob: -11.000181198120117
    4. '   ' → logprob: -12.250181198120117
    5. '<|end|>' → logprob: -14.750181198120117
    6. '           ' → logprob: -15.250181198120117
    7. '```' → logprob: -15.750181198120117
    8. '	' → logprob: -16.625181198120117
    9. '
' → logprob: -16.625181198120117
    10. '        
' → logprob: -17.250181198120117

Token 354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00208947341889143
    2. '       ' → logprob: -6.252089500427246
    3. ' if' → logprob: -8.752089500427246
    4. '   ' → logprob: -13.002089500427246
    5. '	if' → logprob: -15.002089500427246
    6. '
' → logprob: -16.00208854675293
    7. 'for' → logprob: -16.75208854675293
    8. '           ' → logprob: -16.87708854675293
    9. ' ' → logprob: -17.50208854675293
    10. 'If' → logprob: -18.62708854675293

Token 355: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.01815076172351837
    2. 'check' → logprob: -4.018150806427002
    3. '(check' → logprob: -14.893150329589844
    4. '           ' → logprob: -15.393150329589844
    5. '       ' → logprob: -15.893150329589844
    6. '   ' → logprob: -16.518150329589844
    7. '	check' → logprob: -17.018150329589844
    8. '    ' → logprob: -18.268150329589844
    9. ' temp' → logprob: -18.518150329589844
    10. 'temp' → logprob: -19.143150329589844

Token 356: '_px' (ID: 160291)
  Prédit: '_px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_px' → logprob: -1.1472419600977446e-06
    2. 'px' → logprob: -13.875000953674316
    3. '(px' → logprob: -16.875001907348633
    4. '_py' → logprob: -16.875001907348633
    5. '_x' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. '_' → logprob: -18.250001907348633
    8. '   ' → logprob: -19.500001907348633
    9. 'def' → logprob: -20.125001907348633
    10. '_temp' → logprob: -20.250001907348633

Token 357: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -3.173704271830502e-06
    2. 'equal' → logprob: -13.00000286102295
    3. '_equals' → logprob: -14.25000286102295
    4. '_valid' → logprob: -15.87500286102295
    5. '_EQUAL' → logprob: -16.875003814697266
    6. '_equ' → logprob: -18.250003814697266
    7. '_eq' → logprob: -18.375003814697266
    8. 'Equal' → logprob: -19.125003814697266
    9. ' equal' → logprob: -19.125003814697266
    10. '(equal' → logprob: -19.250003814697266

Token 358: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -3.054500666621607e-06
    2. 'temp' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. ' (' → logprob: -15.00000286102295
    5. '(tmp' → logprob: -15.87500286102295
    6. '[temp' → logprob: -17.375003814697266
    7. '(
' → logprob: -17.500003814697266
    8. ',temp' → logprob: -18.500003814697266
    9. '	temp' → logprob: -19.875003814697266
    10. '=temp' → logprob: -20.000003814697266

Token 359: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00021855637896806002
    2. '_list' → logprob: -8.750218391418457
    3. 'c' → logprob: -9.750218391418457
    4. 'list' → logprob: -14.625218391418457
    5. '
' → logprob: -15.875218391418457
    6. 's' → logprob: -15.875218391418457
    7. 'p' → logprob: -16.125219345092773
    8. '	c' → logprob: -16.250219345092773
    9. 'alist' → logprob: -16.625219345092773
    10. '_i' → logprob: -16.750219345092773

Token 360: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00027813989436253905
    2. 'temp' → logprob: -8.87527847290039
    3. 'ist' → logprob: -9.12527847290039
    4. 'list' → logprob: -11.87527847290039
    5. 'st' → logprob: -12.25027847290039
    6. 'x' → logprob: -12.37527847290039
    7. 'alist' → logprob: -12.50027847290039
    8. '_l' → logprob: -13.12527847290039
    9. 'c' → logprob: -13.12527847290039
    10. 't' → logprob: -13.75027847290039

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017004783148877323
    2. ' ,' → logprob: -8.75016975402832
    3. ',
' → logprob: -12.50016975402832
    4. ',p' → logprob: -13.25016975402832
    5. ',n' → logprob: -13.50016975402832
    6. '(px' → logprob: -13.62516975402832
    7. '
' → logprob: -14.00016975402832
    8. ',s' → logprob: -14.00016975402832
    9. '),' → logprob: -14.62516975402832
    10. ')' → logprob: -15.37516975402832

Token 362: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.16022849082946777
    2. ' px' → logprob: -1.9102284908294678
    3. '(px' → logprob: -12.535228729248047
    4. '_px' → logprob: -15.035228729248047
    5. 'py' → logprob: -15.285228729248047
    6. ':px' → logprob: -17.035228729248047
    7. '
' → logprob: -17.410228729248047
    8. ' ' → logprob: -17.535228729248047
    9. 'p' → logprob: -17.910228729248047
    10. '   ' → logprob: -18.035228729248047

Token 363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011736826971173286
    2. '):' → logprob: -4.511736869812012
    3. '       ' → logprob: -7.386736869812012
    4. ':' → logprob: -10.386736869812012
    5. ':
' → logprob: -10.636736869812012
    6. '):
' → logprob: -12.136736869812012
    7. '   ' → logprob: -12.511736869812012
    8. '           ' → logprob: -13.011736869812012
    9. '():
' → logprob: -13.761736869812012
    10. ')' → logprob: -14.261736869812012

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.64708495605737e-05
    2. '
' → logprob: -9.750066757202148
    3. 'ans' → logprob: -12.750066757202148
    4. ' ans' → logprob: -13.125066757202148
    5. '               ' → logprob: -14.125066757202148
    6. '            
' → logprob: -14.250066757202148
    7. '```' → logprob: -14.875066757202148
    8. '		' → logprob: -15.125066757202148
    9. '	       ' → logprob: -15.250066757202148
    10. '       ' → logprob: -15.250066757202148

Token 365: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.46874094009399414
    2. '           ' → logprob: -1.2187409400939941
    3. 'ans' (adapté à ' ans') → logprob: -3.093740940093994
    4. '       ' → logprob: -3.468740940093994
    5. '               ' → logprob: -6.593740940093994
    6. '	ans' → logprob: -7.718740940093994
    7. '   ' → logprob: -8.468740463256836
    8. '(ans' → logprob: -9.843740463256836
    9. '
' → logprob: -10.468740463256836
    10. '_ans' → logprob: -11.843740463256836

Token 366: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38688406348228455
    2. ' +=' → logprob: -1.136884093284607
    3. '   ' → logprob: -12.261883735656738
    4. ']+=' → logprob: -12.386883735656738
    5. '    ' → logprob: -13.386883735656738
    6. '=' → logprob: -13.636883735656738
    7. '+' → logprob: -14.511883735656738
    8. '       ' → logprob: -15.386883735656738
    9. '        ' → logprob: -15.511883735656738
    10. '           ' → logprob: -15.761883735656738

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.500003814697266
    4. '```' → logprob: -17.625003814697266
    5. '１' → logprob: -19.625003814697266
    6. '
' → logprob: -19.812503814697266
    7. '       ' → logprob: -20.125003814697266
    8. '۱' → logprob: -20.437503814697266
    9. '111' → logprob: -20.500003814697266
    10. '100' → logprob: -20.562503814697266

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.75
    4. '１' → logprob: -19.5625
    5. '```' → logprob: -19.8125
    6. 'ans' → logprob: -20.875
    7. '۱' → logprob: -21.0
    8. '2' → logprob: -21.0625
    9. 'count' → logprob: -21.25
    10. '
' → logprob: -21.25

Token 369: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002882721892092377
    2. '
' → logprob: -9.000288009643555
    3. 'return' → logprob: -9.125288009643555
    4. ' return' → logprob: -10.125288009643555
    5. '	return' → logprob: -11.625288009643555
    6. '       ' → logprob: -12.375288009643555
    7. '```' → logprob: -14.000288009643555
    8. '<|end|>' → logprob: -14.500288009643555
    9. ',' → logprob: -14.875288009643555
    10. '    
' → logprob: -15.250288009643555

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032808599062263966
    2. 'return' → logprob: -5.7532806396484375
    3. ' return' → logprob: -9.503280639648438
    4. '	return' → logprob: -11.378280639648438
    5. '<|end|>' → logprob: -12.003280639648438
    6. '```' → logprob: -12.128280639648438
    7. '       ' → logprob: -12.628280639648438
    8. ':return' → logprob: -14.378280639648438
    9. 'def' → logprob: -14.628280639648438
    10. '
' → logprob: -14.753280639648438

Token 371: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014333550818264484
    2. '   ' → logprob: -4.514333724975586
    3. ' return' → logprob: -5.764333724975586
    4. '
' → logprob: -9.264333724975586
    5. '	return' → logprob: -10.514333724975586
    6. '<|end|>' → logprob: -11.639333724975586
    7. '```' → logprob: -11.889333724975586
    8. 'def' → logprob: -13.639333724975586
    9. ':return' → logprob: -14.139333724975586
    10. ' ' → logprob: -14.264333724975586

Token 372: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07889044284820557
    2. ' ans' → logprob: -2.578890323638916
    3. '(ans' → logprob: -14.953890800476074
    4. '	ans' → logprob: -14.953890800476074
    5. '_ans' → logprob: -17.703889846801758
    6. ' ' → logprob: -18.203889846801758
    7. '   ' → logprob: -19.203889846801758
    8. 'answer' → logprob: -19.328889846801758
    9. 'Ans' → logprob: -19.453889846801758
    10. '
' → logprob: -20.078889846801758

Token 373: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.737342357635498
    2. 'n' → logprob: -1.112342357635498
    3. 'print' → logprob: -1.987342357635498
    4. 'if' → logprob: -2.987342357635498
    5. '<|end|>' → logprob: -5.487342357635498
    6. '#' → logprob: -7.487342357635498
    7. '```' → logprob: -7.737342357635498
    8. 'from' → logprob: -10.362342834472656
    9. '(n' → logprob: -10.612342834472656
    10. ' if' → logprob: -10.612342834472656

Token 374: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008977110497653484
    2. 'n' → logprob: -5.008976936340332
    3. 'def' → logprob: -6.883976936340332
    4. 'if' → logprob: -7.383976936340332
    5. '```' → logprob: -8.258976936340332
    6. '#' → logprob: -8.758976936340332
    7. '<|end|>' → logprob: -9.258976936340332
    8. 'for' → logprob: -10.258976936340332
    9. 'sx' → logprob: -11.258976936340332
    10. ' print' → logprob: -11.383976936340332

Token 375: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04860009253025055
    2. ' main' → logprob: -3.048600196838379
    3. 'solve' → logprob: -11.923600196838379
    4. 'def' → logprob: -12.173600196838379
    5. ' solve' → logprob: -14.548600196838379
    6. 'solution' → logprob: -16.173599243164062
    7. '	main' → logprob: -16.548599243164062
    8. ' def' → logprob: -17.173599243164062
    9. '_main' → logprob: -17.423599243164062
    10. 'run' → logprob: -17.548599243164062

Token 376: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011843960965052247
    2. '():
' → logprob: -6.751184463500977
    3. ' ():' → logprob: -11.251184463500977
    4. '():
' → logprob: -14.126184463500977
    5. '(n' → logprob: -15.251184463500977
    6. '()' → logprob: -16.001184463500977
    7. '():

' → logprob: -16.251184463500977
    8. '(' → logprob: -18.126184463500977
    9. '().' → logprob: -20.751184463500977
    10. '();' → logprob: -21.001184463500977

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ',m' → logprob: -12.250008583068848
    3. ' ,' → logprob: -12.625008583068848
    4. ',
' → logprob: -15.000008583068848
    5. 'm' → logprob: -16.37500762939453
    6. '‌,' → logprob: -18.37500762939453
    7. '_,' → logprob: -19.25000762939453
    8. ',

' → logprob: -19.50000762939453
    9. ',p' → logprob: -19.62500762939453
    10. ',n' → logprob: -19.62500762939453

Token 378: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002220914699137211
    2. ' m' → logprob: -6.12722110748291
    3. 'sx' → logprob: -10.50222110748291
    4. '   ' → logprob: -12.25222110748291
    5. 'mx' → logprob: -13.50222110748291
    6. ' sx' → logprob: -14.50222110748291
    7. '	m' → logprob: -15.25222110748291
    8. ' ' → logprob: -15.62722110748291
    9. '    ' → logprob: -15.75222110748291
    10. 'px' → logprob: -15.75222110748291

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ',n' → logprob: -12.375005722045898
    3. '):' → logprob: -14.750005722045898
    4. ',s' → logprob: -15.000005722045898
    5. ' ,' → logprob: -15.250005722045898
    6. '   ' → logprob: -16.7500057220459
    7. ',
' → logprob: -16.8750057220459
    8. '):
' → logprob: -18.0000057220459
    9. ',p' → logprob: -18.1250057220459
    10. '(n' → logprob: -18.3750057220459

Token 380: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.016602924093604088
    2. ' sx' → logprob: -4.141602993011475
    3. 'px' → logprob: -8.141602516174316
    4. 's' → logprob: -8.391602516174316
    5. '   ' → logprob: -10.891602516174316
    6. ' ' → logprob: -11.266602516174316
    7. ' px' → logprob: -11.766602516174316
    8. ')' → logprob: -12.266602516174316
    9. '	s' → logprob: -14.141602516174316
    10. '  ' → logprob: -14.141602516174316

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',
' → logprob: -16.5
    4. ',p' → logprob: -16.625
    5. '‌,' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. '_,' → logprob: -19.75
    8. '‍,' → logprob: -20.875
    9. ',n' → logprob: -21.0
    10. ',s' → logprob: -21.125

Token 382: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.006716079078614712
    2. ' px' → logprob: -5.006716251373291
    3. 'p' → logprob: -15.881715774536133
    4. 'py' → logprob: -16.256715774536133
    5. '_px' → logprob: -16.381715774536133
    6. '(px' → logprob: -16.506715774536133
    7. '   ' → logprob: -16.881715774536133
    8. ',' → logprob: -17.006715774536133
    9. ' ' → logprob: -17.006715774536133
    10. 'mx' → logprob: -17.506715774536133

Token 383: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000561373308300972
    2. '):
' → logprob: -7.500561237335205
    3. ')' → logprob: -12.000561714172363
    4. '):
' → logprob: -13.500561714172363
    5. ' ):' → logprob: -14.750561714172363
    6. ',' → logprob: -15.500561714172363
    7. ':' → logprob: -15.750561714172363
    8. '):

' → logprob: -16.500560760498047
    9. '   ' → logprob: -17.125560760498047
    10. 'def' → logprob: -18.375560760498047

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036796480417251587
    2. 'return' → logprob: -6.0036797523498535
    3. 'ans' → logprob: -6.7536797523498535
    4. 'result' → logprob: -11.128679275512695
    5. ' return' → logprob: -11.378679275512695
    6. ' ans' → logprob: -12.503679275512695
    7. 'answer' → logprob: -12.753679275512695
    8. '	ans' → logprob: -13.128679275512695
    9. 'print' → logprob: -14.503679275512695
    10. 'count' → logprob: -14.628679275512695

Token 385: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10962937027215958
    2. 'return' (adapté à ' return') → logprob: -2.8596293926239014
    3. '   ' → logprob: -3.1096293926239014
    4. 'answer' → logprob: -6.984629154205322
    5. 'print' → logprob: -7.609629154205322
    6. 'result' → logprob: -7.984629154205322
    7. ' ans' → logprob: -9.35962963104248
    8. 'count' → logprob: -10.23462963104248
    9. '	ans' → logprob: -10.85962963104248
    10. ' return' → logprob: -10.98462963104248

Token 386: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011048528365790844
    2. ' count' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.511048316955566
    4. 'sum' → logprob: -15.886048316955566
    5. ' ' → logprob: -16.011049270629883
    6. '[count' → logprob: -16.011049270629883
    7. '(count' → logprob: -16.511049270629883
    8. '	count' → logprob: -18.636049270629883
    9. '  ' → logprob: -18.761049270629883
    10. '
' → logprob: -19.136049270629883

Token 387: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.0001170132018160075
    2. 'valid' → logprob: -9.125117301940918
    3. '_' → logprob: -12.250117301940918
    4. ' valid' → logprob: -13.500117301940918
    5. 'Valid' → logprob: -13.875117301940918
    6. '_ans' → logprob: -15.500117301940918
    7. '_VALID' → logprob: -16.0001163482666
    8. '(valid' → logprob: -16.2501163482666
    9. '_val' → logprob: -16.3751163482666
    10. '	valid' → logprob: -16.7501163482666

Token 388: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0001005630983854644
    2. '_valid' → logprob: -10.250100135803223
    3. 'ans' → logprob: -10.375100135803223
    4. '_answers' → logprob: -11.000100135803223
    5. '_answer' → logprob: -11.875100135803223
    6. 's' → logprob: -12.500100135803223
    7. '_s' → logprob: -13.000100135803223
    8. '(ans' → logprob: -13.750100135803223
    9. '_' → logprob: -13.750100135803223
    10. '```' → logprob: -15.000100135803223

Token 389: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11321455240249634
    2. '(' → logprob: -2.2382144927978516
    3. '(
' → logprob: -8.488214492797852
    4. '<|end|>' → logprob: -9.238214492797852
    5. '```' → logprob: -9.988214492797852
    6. ' (' → logprob: -10.613214492797852
    7. '(

' → logprob: -12.863214492797852
    8. ')(' → logprob: -12.863214492797852
    9. '(None' → logprob: -13.113214492797852
    10. ')' → logprob: -13.238214492797852

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005897291121073067
    2. ',s' → logprob: -8.250589370727539
    3. ' ,' → logprob: -8.625589370727539
    4. ',m' → logprob: -9.000589370727539
    5. ',
' → logprob: -11.000589370727539
    6. 'm' → logprob: -12.750589370727539
    7. '   ' → logprob: -13.625589370727539
    8. ',n' → logprob: -13.625589370727539
    9. ')' → logprob: -14.000589370727539
    10. ',x' → logprob: -14.750589370727539

Token 391: ' sx' (ID: 39428)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3169876039028168
    2. 'sx' → logprob: -1.3169876337051392
    3. ' m' → logprob: -6.06698751449585
    4. ' sx' → logprob: -6.69198751449585
    5. 's' → logprob: -9.566987991333008
    6. 'mx' → logprob: -9.691987991333008
    7. '   ' → logprob: -11.566987991333008
    8. ' ' → logprob: -12.066987991333008
    9. 'px' → logprob: -12.566987991333008
    10. 'x' → logprob: -13.691987991333008

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',p' → logprob: -14.750025749206543
    4. ',
' → logprob: -15.250025749206543
    5. '   ' → logprob: -15.250025749206543
    6. 'px' → logprob: -16.750024795532227
    7. '[' → logprob: -17.625024795532227
    8. ')' → logprob: -17.625024795532227
    9. '```' → logprob: -17.625024795532227
    10. '
' → logprob: -17.750024795532227

Token 393: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0011706985533237457
    2. ' px' → logprob: -6.751170635223389
    3. '(px' → logprob: -15.626171112060547
    4. 'p' → logprob: -16.876171112060547
    5. 'py' → logprob: -17.376171112060547
    6. 'mx' → logprob: -17.501171112060547
    7. '_px' → logprob: -17.751171112060547
    8. ' ' → logprob: -17.751171112060547
    9. 'pm' → logprob: -18.501171112060547
    10. ',' → logprob: -18.501171112060547

Token 394: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '))' → logprob: -16.125001907348633
    6. ')n' → logprob: -16.750001907348633
    7. ')}' → logprob: -17.250001907348633
    8. '<|end|>' → logprob: -17.500001907348633
    9. '}' → logprob: -17.625001907348633
    10. ')return' → logprob: -17.750001907348633

Token 395: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2725493013858795
    2. 'if' → logprob: -1.8975492715835571
    3. 'def' → logprob: -2.5225493907928467
    4. 'print' → logprob: -6.022549152374268
    5. '```' → logprob: -6.147549152374268
    6. '#' → logprob: -6.272549152374268
    7. 'for' → logprob: -6.772549152374268
    8. ' n' → logprob: -8.522549629211426
    9. 'x' → logprob: -8.897549629211426
    10. 'i' → logprob: -9.397549629211426

Token 396: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023479565978050232
    2. ' main' → logprob: -3.773479461669922
    3. '__' → logprob: -8.523479461669922
    4. 'def' → logprob: -11.023479461669922
    5. 'read' → logprob: -12.023479461669922
    6. '_main' → logprob: -12.398479461669922
    7. 'if' → logprob: -12.523479461669922
    8. 'parse' → logprob: -12.898479461669922
    9. ' __' → logprob: -13.523479461669922
    10. '
' → logprob: -14.148479461669922

Token 397: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001302374730585143
    2. '():
' → logprob: -9.000130653381348
    3. ' ():' → logprob: -12.000130653381348
    4. '()' → logprob: -14.875130653381348
    5. '():
' → logprob: -15.250130653381348
    6. '()>' → logprob: -18.12512969970703
    7. '(' → logprob: -18.75012969970703
    8. '():

' → logprob: -19.12512969970703
    9. '_' → logprob: -19.37512969970703
    10. '().' → logprob: -20.12512969970703

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.210468128323555
    2. 'n' → logprob: -1.7104681730270386
    3. ' n' → logprob: -4.710468292236328
    4. '	n' → logprob: -11.710468292236328
    5. '(n' → logprob: -13.085468292236328
    6. '```' → logprob: -14.085468292236328
    7. '
' → logprob: -14.210468292236328
    8. ',n' → logprob: -14.460468292236328
    9. ' ' → logprob: -14.585468292236328
    10. 'def' → logprob: -14.960468292236328

Token 399: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0002668192028068006
    2. ' n' → logprob: -8.250267028808594
    3. '   ' → logprob: -12.125267028808594
    4. '	n' → logprob: -16.250267028808594
    5. ' ' → logprob: -18.875267028808594
    6. '(n' → logprob: -19.250267028808594
    7. '```' → logprob: -19.250267028808594
    8. 'def' → logprob: -19.375267028808594
    9. 'if' → logprob: -20.000267028808594
    10. '
' → logprob: -20.250267028808594

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031055594445206225
    2. ',m' → logprob: -8.125310897827148
    3. ' ,' → logprob: -11.250310897827148
    4. 'm' → logprob: -13.625310897827148
    5. '=' → logprob: -15.875310897827148
    6. ' m' → logprob: -16.87531089782715
    7. '   ' → logprob: -17.00031089782715
    8. ',
' → logprob: -17.25031089782715
    9. '‌,' → logprob: -18.12531089782715
    10. '_,' → logprob: -18.25031089782715

Token 401: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740792512893677
    2. ' m' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.849079132080078
    4. '    ' → logprob: -13.974079132080078
    5. ',' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.474079132080078
    7. ',m' → logprob: -16.599079132080078
    8. ' ' → logprob: -16.849079132080078
    9. '	m' → logprob: -16.849079132080078
    10. '  ' → logprob: -16.974079132080078

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135458528995514
    2. '=' → logprob: -1.313545823097229
    3. ',' → logprob: -8.188546180725098
    4. '   ' → logprob: -12.688546180725098
    5. '=n' → logprob: -13.063546180725098
    6. ' =
' → logprob: -15.313546180725098
    7. '=m' → logprob: -16.06354522705078
    8. ' ' → logprob: -16.18854522705078
    9. '=
' → logprob: -16.31354522705078
    10. '=input' → logprob: -16.93854522705078

Token 403: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.25205084681510925
    2. 'read' → logprob: -1.5020508766174316
    3. ' parse' → logprob: -9.502050399780273
    4. 'parse' → logprob: -10.002050399780273
    5. '	read' → logprob: -13.627050399780273
    6. '   ' → logprob: -15.002050399780273
    7. ' ' → logprob: -16.127050399780273
    8. '  ' → logprob: -17.002050399780273
    9. '(read' → logprob: -17.502050399780273
    10. '_read' → logprob: -18.002050399780273

Token 404: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00016563729150220752
    2. 'n' → logprob: -9.250165939331055
    3. '()' → logprob: -11.000165939331055
    4. '()
' → logprob: -11.625165939331055
    5. '_s' → logprob: -11.875165939331055
    6. '```' → logprob: -11.875165939331055
    7. 'line' → logprob: -12.375165939331055
    8. '
' → logprob: -12.500165939331055
    9. '(n' → logprob: -13.000165939331055
    10. 's' → logprob: -13.250165939331055

Token 405: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.9888433093437925e-05
    2. ',' → logprob: -10.500040054321289
    3. 'm' → logprob: -11.875040054321289
    4. '_' → logprob: -12.625040054321289
    5. ',_' → logprob: -13.875040054321289
    6. ',m' → logprob: -14.125040054321289
    7. '_,' → logprob: -15.500040054321289
    8. '_mm' → logprob: -17.37504005432129
    9. '_ml' → logprob: -17.50004005432129
    10. '_mc' → logprob: -18.50004005432129

Token 406: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01420193538069725
    2. '   ' → logprob: -4.639202117919922
    3. '<|end|>' → logprob: -5.889202117919922
    4. '()
' → logprob: -7.014202117919922
    5. '    
' → logprob: -8.514202117919922
    6. '()' → logprob: -9.014202117919922
    7. '```' → logprob: -9.264202117919922
    8. '
' → logprob: -9.639202117919922
    9. '  
' → logprob: -9.764202117919922
    10. '(n' → logprob: -10.139202117919922

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006716079078614712
    2. 'sx' → logprob: -5.131716251373291
    3. ' sx' → logprob: -7.631716251373291
    4. 's' → logprob: -9.131715774536133
    5. '	s' → logprob: -9.631715774536133
    6. '
' → logprob: -10.131715774536133
    7. '```' → logprob: -10.381715774536133
    8. '<|end|>' → logprob: -10.756715774536133
    9. '  ' → logprob: -11.256715774536133
    10. ' ' → logprob: -11.756715774536133

Token 408: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' (adapté à ' sx') → logprob: -0.03720143064856529
    2. '   ' → logprob: -3.537201404571533
    3. ' sx' → logprob: -4.912201404571533
    4. 'px' → logprob: -10.537201881408691
    5. '```' → logprob: -11.162201881408691
    6. 's' → logprob: -11.787201881408691
    7. ' ' → logprob: -12.037201881408691
    8. '	s' → logprob: -12.037201881408691
    9. '  ' → logprob: -12.912201881408691
    10. '
' → logprob: -13.787201881408691

Token 409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576339602470398
    2. ' =' → logprob: -0.826339602470398
    3. ',' → logprob: -7.8263397216796875
    4. '   ' → logprob: -14.826339721679688
    5. ' ,' → logprob: -16.201339721679688
    6. '＝' → logprob: -16.451339721679688
    7. ' ' → logprob: -16.576339721679688
    8. '	' → logprob: -16.951339721679688
    9. '=s' → logprob: -16.951339721679688
    10. '=create' → logprob: -17.076339721679688

Token 410: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011049470864236355
    2. ' read' → logprob: -4.511049270629883
    3. '   ' → logprob: -13.511049270629883
    4. '(read' → logprob: -15.636049270629883
    5. '	read' → logprob: -17.136049270629883
    6. '_read' → logprob: -18.261049270629883
    7. '.read' → logprob: -18.261049270629883
    8. ' ' → logprob: -19.511049270629883
    9. '  ' → logprob: -20.386049270629883
    10. '/read' → logprob: -21.011049270629883

Token 411: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.04890606552362442
    2. 'sx' → logprob: -3.048906087875366
    3. 's' → logprob: -8.173906326293945
    4. '_n' → logprob: -10.673906326293945
    5. ' sx' → logprob: -13.048906326293945
    6. '(n' → logprob: -13.298906326293945
    7. '```' → logprob: -13.423906326293945
    8. 'x' → logprob: -13.798906326293945
    9. '_x' → logprob: -13.798906326293945
    10. 'n' → logprob: -13.798906326293945

Token 412: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. '(x' → logprob: -14.250001907348633
    3. '```' → logprob: -14.625001907348633
    4. '_x' → logprob: -14.875001907348633
    5. '[x' → logprob: -16.687501907348633
    6. ' x' → logprob: -16.812501907348633
    7. '(' → logprob: -16.875001907348633
    8. '	x' → logprob: -16.937501907348633
    9. '[' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.375001907348633

Token 413: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023727092891931534
    2. 'n' → logprob: -3.7737271785736084
    3. '   ' → logprob: -7.898726940155029
    4. '(' → logprob: -10.398727416992188
    5. ' n' → logprob: -11.148727416992188
    6. 's' → logprob: -11.148727416992188
    7. '```' → logprob: -11.398727416992188
    8. 'def' → logprob: -11.648727416992188
    9. '
' → logprob: -11.898727416992188
    10. ' (' → logprob: -12.148727416992188

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002266622323077172
    2. ',m' → logprob: -8.500226974487305
    3. ' ,' → logprob: -10.750226974487305
    4. 'm' → logprob: -13.750226974487305
    5. '   ' → logprob: -14.375226974487305
    6. ',
' → logprob: -16.750226974487305
    7. ')' → logprob: -18.125226974487305
    8. '```' → logprob: -18.875226974487305
    9. ',n' → logprob: -19.000226974487305
    10. '‌,' → logprob: -19.125226974487305

Token 415: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00014013137842994183
    2. ' m' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.875140190124512
    4. '    ' → logprob: -18.125139236450195
    5. ')m' → logprob: -18.125139236450195
    6. ')' → logprob: -18.375139236450195
    7. '```' → logprob: -18.625139236450195
    8. '
' → logprob: -18.625139236450195
    9. '  ' → logprob: -18.750139236450195
    10. '	m' → logprob: -19.000139236450195

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05125737190246582
    2. ')
' → logprob: -3.176257371902466
    3. '   ' → logprob: -4.801257133483887
    4. ',' → logprob: -13.426257133483887
    5. ')
' → logprob: -13.426257133483887
    6. ' )' → logprob: -14.301257133483887
    7. ' ' → logprob: -15.551257133483887
    8. '),' → logprob: -15.551257133483887
    9. ' )
' → logprob: -15.801257133483887
    10. '
' → logprob: -16.176258087158203

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012475410767365247
    2. 'px' → logprob: -9.00012493133545
    3. ' px' → logprob: -14.00012493133545
    4. '
' → logprob: -15.75012493133545
    5. '```' → logprob: -15.75012493133545
    6. '_px' → logprob: -16.250123977661133
    7. '   ' → logprob: -16.500123977661133
    8. '(px' → logprob: -17.125123977661133
    9. '    
' → logprob: -18.000123977661133
    10. ':px' → logprob: -18.500123977661133

Token 418: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.0005541055579669774
    2. '   ' → logprob: -7.750554084777832
    3. ' px' → logprob: -9.000554084777832
    4. '(px' → logprob: -17.00055503845215
    5. '_px' → logprob: -17.75055503845215
    6. 'py' → logprob: -17.87555503845215
    7. '  ' → logprob: -20.12555503845215
    8. ' ' → logprob: -20.75055503845215
    9. 'p' → logprob: -20.75055503845215
    10. ':px' → logprob: -21.25055503845215

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.136871337890625
    4. '=create' → logprob: -17.261871337890625
    5. ' ' → logprob: -17.636871337890625
    6. '=
' → logprob: -18.886871337890625
    7. '=parse' → logprob: -18.886871337890625
    8. '＝' → logprob: -19.261871337890625
    9. '=get' → logprob: -19.636871337890625
    10. '  ' → logprob: -19.761871337890625

Token 420: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.003177952254191041
    2. ' read' → logprob: -5.753178119659424
    3. 'parse' → logprob: -15.378177642822266
    4. '   ' → logprob: -18.628177642822266
    5. '	read' → logprob: -19.128177642822266
    6. '(read' → logprob: -19.253177642822266
    7. ' parse' → logprob: -21.503177642822266
    8. ' ' → logprob: -22.253177642822266
    9. '  ' → logprob: -22.378177642822266
    10. '_read' → logprob: -23.628177642822266

Token 421: '_px' (ID: 160291)
  Prédit: '_px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_px' → logprob: -6.988221684878226e-06
    2. 'px' → logprob: -12.375006675720215
    3. '_n' → logprob: -13.125006675720215
    4. '_x' → logprob: -15.250006675720215
    5. '_tx' → logprob: -15.250006675720215
    6. '_p' → logprob: -15.750006675720215
    7. '(px' → logprob: -16.50000762939453
    8. '_dx' → logprob: -17.37500762939453
    9. '_pc' → logprob: -18.50000762939453
    10. '_rx' → logprob: -18.62500762939453

Token 422: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0185577142983675
    2. '
' → logprob: -4.518557548522949
    3. '()
' → logprob: -5.018557548522949
    4. '()' → logprob: -7.268557548522949
    5. 'print' → logprob: -9.64355754852295
    6. '(ans' → logprob: -10.51855754852295
    7. '```' → logprob: -10.76855754852295
    8. '    
' → logprob: -10.76855754852295
    9. '(' → logprob: -11.26855754852295
    10. 'ans' → logprob: -12.26855754852295

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.982165698194876e-05
    2. 'print' → logprob: -9.625080108642578
    3. '```' → logprob: -11.625080108642578
    4. 'result' → logprob: -12.750080108642578
    5. '<|end|>' → logprob: -14.500080108642578
    6. 'output' → logprob: -15.250080108642578
    7. '
' → logprob: -15.375080108642578
    8. '    
' → logprob: -15.375080108642578
    9. ' print' → logprob: -15.500080108642578
    10. 'answer' → logprob: -15.875080108642578

Token 424: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01804996468126774
    2. 'ans' → logprob: -4.518050193786621
    3. 'result' → logprob: -5.018050193786621
    4. 'answer' → logprob: -8.018050193786621
    5. ' print' → logprob: -11.018050193786621
    6. 'res' → logprob: -11.518050193786621
    7. '   ' → logprob: -12.518050193786621
    8. ' result' → logprob: -15.018050193786621
    9. ' ans' → logprob: -15.143050193786621
    10. '
' → logprob: -15.768050193786621

Token 425: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. '(
' → logprob: -16.500036239624023
    4. '(sol' → logprob: -16.625036239624023
    5. 'solve' → logprob: -16.750036239624023
    6. '(solution' → logprob: -17.625036239624023
    7. '(count' → logprob: -19.500036239624023
    8. '(resolve' → logprob: -19.625036239624023
    9. ' solve' → logprob: -19.625036239624023
    10. '()' → logprob: -19.625036239624023

Token 426: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.005292815156280994
    2. 'x' → logprob: -5.255292892456055
    3. '(x' → logprob: -10.755292892456055
    4. 'ove' → logprob: -11.880292892456055
    5. 'ol' → logprob: -12.130292892456055
    6. ')' → logprob: -12.130292892456055
    7. '(' → logprob: -12.255292892456055
    8. 'um' → logprob: -12.880292892456055
    9. 'olv' → logprob: -13.005292892456055
    10. 'ain' → logprob: -13.255292892456055

Token 427: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024429336190223694
    2. '(' → logprob: -8.375244140625
    3. ' (' → logprob: -11.375244140625
    4. ')' → logprob: -13.500244140625
    5. ')(' → logprob: -14.875244140625
    6. '(
' → logprob: -15.125244140625
    7. ')n' → logprob: -16.625244140625
    8. 'n' → logprob: -16.875244140625
    9. '```' → logprob: -17.500244140625
    10. ',n' → logprob: -17.875244140625

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011880126112373546
    2. ' ,' → logprob: -9.37511920928955
    3. ',n' → logprob: -10.62511920928955
    4. ',m' → logprob: -12.00011920928955
    5. ',
' → logprob: -13.50011920928955
    6. '(' → logprob: -14.75011920928955
    7. ')' → logprob: -14.87511920928955
    8. '```' → logprob: -15.37511920928955
    9. '(n' → logprob: -15.50011920928955
    10. 'n' → logprob: -15.50011920928955

Token 429: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.313884973526001
    2. 'm' → logprob: -1.313884973526001
    3. ' n' → logprob: -7.563884735107422
    4. ' m' → logprob: -9.313884735107422
    5. '   ' → logprob: -11.813884735107422
    6. ')' → logprob: -13.063884735107422
    7. ' ' → logprob: -13.438884735107422
    8. '  ' → logprob: -14.563884735107422
    9. '    ' → logprob: -14.563884735107422
    10. '(n' → logprob: -14.813884735107422

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. ' ,' → logprob: -12.250009536743164
    3. ',s' → logprob: -12.375009536743164
    4. ',
' → logprob: -15.625009536743164
    5. 's' → logprob: -16.250009536743164
    6. ',x' → logprob: -17.500009536743164
    7. '   ' → logprob: -17.625009536743164
    8. ')' → logprob: -18.375009536743164
    9. '‌,' → logprob: -18.375009536743164
    10. ',n' → logprob: -18.750009536743164

Token 431: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.00012475410767365247
    2. ' sx' → logprob: -9.00012493133545
    3. 's' → logprob: -13.62512493133545
    4. '   ' → logprob: -17.375123977661133
    5. ')' → logprob: -18.125123977661133
    6. ' ' → logprob: -18.125123977661133
    7. '
' → logprob: -18.750123977661133
    8. 'px' → logprob: -19.125123977661133
    9. '	s' → logprob: -19.750123977661133
    10. '```' → logprob: -19.875123977661133

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.375004768371582
    3. 'px' → logprob: -17.250003814697266
    4. ')' → logprob: -18.250003814697266
    5. ',
' → logprob: -18.750003814697266
    6. ',p' → logprob: -19.375003814697266
    7. '),' → logprob: -19.375003814697266
    8. '[' → logprob: -19.625003814697266
    9. '```' → logprob: -20.000003814697266
    10. '(px' → logprob: -20.125003814697266

Token 433: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0015023599844425917
    2. ' px' → logprob: -6.501502513885498
    3. '(px' → logprob: -17.501502990722656
    4. '_px' → logprob: -17.751502990722656
    5. 'py' → logprob: -19.376502990722656
    6. ')' → logprob: -19.501502990722656
    7. ' ' → logprob: -19.501502990722656
    8. 'tx' → logprob: -19.876502990722656
    9. 'p' → logprob: -20.126502990722656
    10. 'Px' → logprob: -20.251502990722656

Token 434: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5954712075181305e-05
    2. ')' → logprob: -10.500036239624023
    3. '))
' → logprob: -11.750036239624023
    4. '()))' → logprob: -14.875036239624023
    5. ')))' → logprob: -16.125036239624023
    6. ' ))' → logprob: -17.250036239624023
    7. '   ' → logprob: -17.625036239624023
    8. '))

' → logprob: -17.875036239624023
    9. '()' → logprob: -18.875036239624023
    10. ' ' → logprob: -19.375036239624023

Token 435: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000158842682139948
    2. 'main' → logprob: -8.75015926361084
    3. ' if' → logprob: -15.00015926361084
    4. '#' → logprob: -16.625158309936523
    5. '#if' → logprob: -18.875158309936523
    6. '```' → logprob: -19.625158309936523
    7. ' main' → logprob: -20.000158309936523
    8. 'for' → logprob: -20.875158309936523
    9. '
' → logprob: -20.875158309936523
    10. 'print' → logprob: -21.000158309936523

Token 436: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5765398740768433
    2. ' __' → logprob: -0.8265398740768433
    3. 'name' → logprob: -7.701539993286133
    4. '_name' → logprob: -8.951539993286133
    5. 'Name' → logprob: -12.076539993286133
    6. ' ' → logprob: -12.326539993286133
    7. '_' → logprob: -12.701539993286133
    8. '___' → logprob: -13.076539993286133
    9. ' name' → logprob: -14.326539993286133
    10. ' ' → logprob: -14.576539993286133

Token 437: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012424180284142494
    2. ' ==' → logprob: -5.012423992156982
    3. '==' → logprob: -5.262423992156982
    4. ' __' → logprob: -7.637423992156982
    5. '=="' → logprob: -11.26242446899414
    6. 'name' → logprob: -12.38742446899414
    7. '.__' → logprob: -13.01242446899414
    8. '=='' → logprob: -13.13742446899414
    9. '__.__' → logprob: -13.38742446899414
    10. 'if' → logprob: -13.76242446899414

Token 438: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2352385965641588e-05
    2. '__.__' → logprob: -11.875012397766113
    3. '==' → logprob: -12.375012397766113
    4. ' ==' → logprob: -14.750012397766113
    5. '___' → logprob: -14.875012397766113
    6. '____' → logprob: -15.375012397766113
    7. '__.' → logprob: -15.750012397766113
    8. '__
' → logprob: -17.375011444091797
    9. '__('' → logprob: -18.000011444091797
    10. '_' → logprob: -18.500011444091797

Token 439: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5839532017707825
    2. '==' → logprob: -0.8339532017707825
    3. ' ==' → logprob: -4.958953380584717
    4. '=="' → logprob: -7.083953380584717
    5. '=='' → logprob: -9.583952903747559
    6. '===' → logprob: -10.708952903747559
    7. '_' → logprob: -11.333952903747559
    8. '=' → logprob: -11.333952903747559
    9. '___' → logprob: -12.708952903747559
    10. '==
' → logprob: -14.083952903747559

Token 440: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16031430661678314
    2. ''' → logprob: -1.9103143215179443
    3. ' "__' → logprob: -9.410314559936523
    4. '__' → logprob: -12.285314559936523
    5. ' '__' → logprob: -12.660314559936523
    6. '"user' → logprob: -15.660314559936523
    7. '("__' → logprob: -16.035314559936523
    8. '('__' → logprob: -16.535314559936523
    9. ''"' → logprob: -17.410314559936523
    10. '"'' → logprob: -18.035314559936523

Token 441: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00021998681768309325
    2. '__' → logprob: -9.00022029876709
    3. 'name' → logprob: -9.25022029876709
    4. 'm' → logprob: -15.12522029876709
    5. '__':
' → logprob: -17.000219345092773
    6. 'built' → logprob: -17.250219345092773
    7. '_main' → logprob: -17.625219345092773
    8. 'ma' → logprob: -17.875219345092773
    9. ' main' → logprob: -18.625219345092773
    10. 'code' → logprob: -18.750219345092773

Token 442: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.011065982282161713
    2. '__' → logprob: -4.51106595993042
    3. '__":
' → logprob: -11.011066436767578
    4. '__:' → logprob: -13.386066436767578
    5. '_' → logprob: -17.136066436767578
    6. '__.' → logprob: -17.386066436767578
    7. '__('' → logprob: -17.511066436767578
    8. '__
' → logprob: -18.261066436767578
    9. '__()
' → logprob: -18.636066436767578
    10. '()' → logprob: -18.761066436767578

Token 443: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.3451433409936726e-05
    2. ' main' → logprob: -10.500033378601074
    3. '	main' → logprob: -12.250033378601074
    4. '   ' → logprob: -13.875033378601074
    5. '_main' → logprob: -16.37503433227539
    6. '__' → logprob: -16.87503433227539
    7. '(main' → logprob: -20.12503433227539
    8. '
' → logprob: -20.37503433227539
    9. '.main' → logprob: -20.75003433227539
    10. 'Main' → logprob: -21.37503433227539

Token 444: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -22.375
    5. 'import' → logprob: -24.0
    6. '.main' → logprob: -25.5
    7. '_main' → logprob: -25.5
    8. '(main' → logprob: -27.0
    9. 'Main' → logprob: -28.625
    10. '
' → logprob: -28.875

Token 445: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.866576075553894
    2. '<|end|>' → logprob: -1.241576075553894
    3. '#' → logprob: -2.2415761947631836
    4. '```' → logprob: -2.3665761947631836
    5. '[' → logprob: -3.9915761947631836
    6. '<|end|>' → logprob: -4.116576194763184
    7. '   ' → logprob: -4.491576194763184
    8. ':' → logprob: -4.491576194763184
    9. '...' → logprob: -4.991576194763184
    10. 'def' → logprob: -5.116576194763184


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 443
Tokens correctement prédits (1ère position, stricte): 202
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 379
Précision stricte (1ère position): 45.60%
Précision adaptée (1ère position): 50.11%
Précision (top 10): 85.55%
================================================================================
