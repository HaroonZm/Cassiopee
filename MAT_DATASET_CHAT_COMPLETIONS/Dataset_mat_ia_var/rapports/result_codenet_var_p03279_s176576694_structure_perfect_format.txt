================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect
from collections import defaultdict

class Bit:
    def __init__(self, n):
        self.size = n
        self.tree = [0] * (n + 1)
        self.depth = n.bit_length()

    def sum(self, i):
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= i & -i
        return s

    def add(self, i, x):
        while i <= self.size:
            self.tree[i] += x
            i += i & -i

    def debug_print(self):
        for i in range(1, self.size + 1):
            j = (i & -i).bit_length()
            print('  ' * j, self.tree[i])

    def lower_bound(self, x):
        sum_ = 0
        pos = 0
        for i in range(self.depth, -1, -1):
            k = pos + (1 << i)
            if k <= self.size and sum_ + self.tree[k] < x:
                sum_ += self.tree[k]
                pos += 1 << i
        return pos + 1, sum_

n, m = map(int, input().split())
xxx = list(map(int, input().split()))
yyy = list(map(int, input().split()))
ab = defaultdict(set)
coordinates = set()

for x in xxx:
    if x < yyy[0] or yyy[-1] < x:
        continue
    i = bisect(yyy, x)
    a = x - yyy[i - 1]
    b = yyy[i] - x
    ab[a].add(b)
    coordinates.add(b)

cor_dict = {b: i for i, b in enumerate(sorted(coordinates), start=2)}
cdg = cor_dict.get
bit = Bit(len(coordinates) + 1)
bit.add(1, 1)

for a in sorted(ab):
    bbb = sorted(map(cdg, ab[a]), reverse=True)
    for b in bbb:
        bit.add(b, bit.sum(b - 1))

print(bit.sum(bit.size) % (10 ** 9 + 7))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02340957336127758
    2. 'import' → logprob: -3.773409605026245
    3. '.' → logprob: -9.023409843444824
    4. ' ' → logprob: -10.773409843444824
    5. '.import' → logprob: -11.773409843444824
    6. '_import' → logprob: -12.023409843444824
    7. ' .' → logprob: -12.773409843444824
    8. '```' → logprob: -13.273409843444824
    9. '	import' → logprob: -13.773409843444824
    10. '_' → logprob: -14.398409843444824

Token 4: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.043759625405073166
    2. 'ins' → logprob: -3.29375958442688
    3. ' bis' → logprob: -5.168759822845459
    4. ' ins' → logprob: -12.1687593460083
    5. 'b' → logprob: -12.9187593460083
    6. '```' → logprob: -13.7937593460083
    7. '_ins' → logprob: -14.4187593460083
    8. '*' → logprob: -15.4187593460083
    9. '.ins' → logprob: -15.5437593460083
    10. 'in' → logprob: -16.168760299682617

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.04875064268708229
    2. 'e' → logprob: -3.048750638961792
    3. 'ct' → logprob: -9.798750877380371
    4. 'n' → logprob: -9.923750877380371
    5. 'ec' → logprob: -10.423750877380371
    6. 't' → logprob: -11.673750877380371
    7. 'r' → logprob: -12.173750877380371
    8. 'ext' → logprob: -12.298750877380371
    9. 'ex' → logprob: -13.298750877380371
    10. 'p' → logprob: -13.548750877380371

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1282517910003662
    2. '.' → logprob: -2.128251791000366
    3. '_' → logprob: -7.253252029418945
    4. '_left' → logprob: -9.503252029418945
    5. '.b' → logprob: -9.503252029418945
    6. '```' → logprob: -9.628252029418945
    7. '`' → logprob: -9.753252029418945
    8. ' (' → logprob: -9.878252029418945
    9. '(
' → logprob: -10.503252029418945
    10. '._' → logprob: -10.628252029418945

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3016843795776367
    2. '_' → logprob: -1.4266843795776367
    3. '.' → logprob: -4.051684379577637
    4. '._' → logprob: -7.801684379577637
    5. '(
' → logprob: -7.801684379577637
    6. '_left' → logprob: -8.301684379577637
    7. ' (' → logprob: -8.551684379577637
    8. ',' → logprob: -8.676684379577637
    9. '[' → logprob: -9.176684379577637
    10. '`' → logprob: -9.426684379577637

Token 8: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.209711492061615
    2. ' collections' → logprob: -2.3347115516662598
    3. ' sys' → logprob: -3.0847115516662598
    4. ' itertools' → logprob: -4.33471155166626
    5. ' heap' → logprob: -4.58471155166626
    6. ' typing' → logprob: -4.70971155166626
    7. 'collections' → logprob: -5.20971155166626
    8. 'math' → logprob: -5.45971155166626
    9. ' ' → logprob: -6.58471155166626
    10. 'heap' → logprob: -7.33471155166626

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3192615211009979
    2. ' import' → logprob: -1.3192615509033203
    3. '.' → logprob: -5.44426155090332
    4. '<|end|>' → logprob: -6.94426155090332
    5. ' ' → logprob: -7.81926155090332
    6. '```' → logprob: -8.81926155090332
    7. '.Counter' → logprob: -10.56926155090332
    8. ' defaultdict' → logprob: -10.69426155090332
    9. '.import' → logprob: -10.69426155090332
    10. '_import' → logprob: -10.94426155090332

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.9454764723777771
    2. ' deque' → logprob: -1.4454765319824219
    3. ' abc' → logprob: -1.6954765319824219
    4. 'deque' → logprob: -1.8204765319824219
    5. 'abc' → logprob: -3.570476531982422
    6. ' named' → logprob: -7.070476531982422
    7. ' import' → logprob: -8.320476531982422
    8. 'default' → logprob: -8.570476531982422
    9. ' ' → logprob: -8.570476531982422
    10. 'import' → logprob: -8.570476531982422

Token 11: '

' (ID: 279)
  Prédit: '_

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_

' → logprob: -0.7466654777526855
    2. '

' → logprob: -1.1216654777526855
    3. '
' → logprob: -2.7466654777526855
    4. '(' → logprob: -3.2466654777526855
    5. '_' → logprob: -3.8716654777526855
    6. '\n' → logprob: -4.4966654777526855
    7. '(

' → logprob: -4.7466654777526855
    8. '`

' → logprob: -4.8716654777526855
    9. '_
' → logprob: -4.9966654777526855
    10. '\' → logprob: -5.1216654777526855

Token 12: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11302610486745834
    2. '(
' → logprob: -3.1130261421203613
    3. 'd' → logprob: -3.6130261421203613
    4. '_' → logprob: -4.238026142120361
    5. 'def' → logprob: -4.488026142120361
    6. '\' → logprob: -5.988026142120361
    7. '_
' → logprob: -6.988026142120361
    8. '(

' → logprob: -7.238026142120361
    9. '
' → logprob: -7.363026142120361
    10. '`' → logprob: -7.613026142120361

Token 13: ' Bit' (ID: 9422)
  Prédit: ' Sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sorted' → logprob: -0.8844196200370789
    2. ' ' → logprob: -1.0094196796417236
    3. ' Binary' → logprob: -3.1344196796417236
    4. ' Mult' → logprob: -3.3844196796417236
    5. ' Segment' → logprob: -3.8844196796417236
    6. ' Ordered' → logprob: -4.0094194412231445
    7. ' S' → logprob: -4.1344194412231445
    8. ' Default' → logprob: -4.2594194412231445
    9. ' Trie' → logprob: -4.2594194412231445
    10. ' Sparse' → logprob: -4.8844194412231445

Token 14: ':
' (ID: 734)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.1284514218568802
    2. ':' → logprob: -2.503451347351074
    3. '   ' → logprob: -5.003451347351074
    4. 'set' → logprob: -5.253451347351074
    5. ' :' → logprob: -5.503451347351074
    6. ' ' → logprob: -5.503451347351074
    7. 'vector' → logprob: -5.628451347351074
    8. 'array' → logprob: -5.628451347351074
    9. '  ' → logprob: -6.128451347351074
    10. ' Vector' → logprob: -6.253451347351074

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3653583228588104
    2. '   ' → logprob: -1.4903583526611328
    3. ' :' → logprob: -2.990358352661133
    4. '    ' → logprob: -3.865358352661133
    5. ' ' → logprob: -6.115358352661133
    6. '```' → logprob: -6.240358352661133
    7. '<|end|>' → logprob: -6.490358352661133
    8. '):' → logprob: -6.615358352661133
    9. '(object' → logprob: -7.740358352661133
    10. '  ' → logprob: -7.865358352661133

Token 16: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10175460577011108
    2. ':' → logprob: -2.601754665374756
    3. '(object' → logprob: -5.351754665374756
    4. '(' → logprob: -5.851754665374756
    5. '```' → logprob: -5.851754665374756
    6. '    ' → logprob: -5.976754665374756
    7. 'def' (adapté à ' def') → logprob: -5.976754665374756
    8. ' ' → logprob: -6.351754665374756
    9. ' def' → logprob: -6.851754665374756
    10. '  ' → logprob: -7.101754665374756

Token 17: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012692584656178951
    2. 'init' → logprob: -4.637692451477051
    3. ' init' → logprob: -6.012692451477051
    4. '__' → logprob: -7.887692451477051
    5. ' _' → logprob: -10.38769245147705
    6. '_init' → logprob: -11.13769245147705
    7. 'int' → logprob: -11.26269245147705
    8. ' nit' → logprob: -11.38769245147705
    9. 'it' → logprob: -11.51269245147705
    10. 'nit' → logprob: -11.88769245147705

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.875
    3. 'ini' → logprob: -16.625
    4. 'int' → logprob: -17.125
    5. 'inite' → logprob: -19.75
    6. 'in' → logprob: -20.125
    7. 'inti' → logprob: -20.125
    8. 'innit' → logprob: -20.125
    9. '_init' → logprob: -20.375
    10. '	init' → logprob: -20.625

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06300289183855057
    2. '__' → logprob: -2.813002824783325
    3. '__((' → logprob: -7.938003063201904
    4. '(' → logprob: -8.188002586364746
    5. '__(
' → logprob: -8.688002586364746
    6. '(self' → logprob: -9.813002586364746
    7. '__('' → logprob: -9.938002586364746
    8. '__(*' → logprob: -9.938002586364746
    9. ' (' → logprob: -10.688002586364746
    10. '<|end|>' → logprob: -10.938002586364746

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007145775598473847
    2. ' self' → logprob: -7.2507147789001465
    3. ')' → logprob: -12.750714302062988
    4. ' ' → logprob: -13.875714302062988
    5. '	self' → logprob: -15.250714302062988
    6. ',self' → logprob: -15.750714302062988
    7. '0' → logprob: -16.250715255737305
    8. '(self' → logprob: -16.500715255737305
    9. ',' → logprob: -17.000715255737305
    10. 's' → logprob: -17.500715255737305

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5410137176513672
    2. ' ,' → logprob: -0.9160137176513672
    3. ')' → logprob: -5.291013717651367
    4. ' )' → logprob: -5.541013717651367
    5. ' ' → logprob: -5.666013717651367
    6. 'self' → logprob: -5.916013717651367
    7. ' self' → logprob: -6.666013717651367
    8. '<|end|>' → logprob: -7.166013717651367
    9. ',self' → logprob: -8.166013717651367
    10. '  ' → logprob: -9.541013717651367

Token 22: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5289342999458313
    2. ' self' → logprob: -1.0289342403411865
    3. ' n' → logprob: -3.4039342403411865
    4. ' size' → logprob: -4.528934478759766
    5. 'n' → logprob: -4.903934478759766
    6. 'size' → logprob: -6.278934478759766
    7. '   ' → logprob: -10.153934478759766
    8. ' ' → logprob: -12.403934478759766
    9. '	self' → logprob: -12.528934478759766
    10. '       ' → logprob: -13.403934478759766

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008416350930929184
    2. ')' → logprob: -5.008416175842285
    3. ' ):' → logprob: -6.633416175842285
    4. '):
' → logprob: -8.633416175842285
    5. ',' → logprob: -9.383416175842285
    6. ':' → logprob: -9.508416175842285
    7. ' )' → logprob: -10.758416175842285
    8. ' ' → logprob: -12.008416175842285
    9. 'n' → logprob: -13.133416175842285
    10. '   ' → logprob: -13.633416175842285

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22828008234500885
    2. '    ' → logprob: -2.3532800674438477
    3. '        ' → logprob: -2.8532800674438477
    4. '(n' → logprob: -4.728280067443848
    5. 'self' → logprob: -4.853280067443848
    6. '   ' → logprob: -5.228280067443848
    7. 'n' → logprob: -5.228280067443848
    8. ':' → logprob: -5.353280067443848
    9. ',' → logprob: -5.603280067443848
    10. ' :' → logprob: -5.853280067443848

Token 25: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5487921237945557
    2. 'self' (adapté à ' self') → logprob: -0.9237921237945557
    3. '       ' → logprob: -3.7987921237945557
    4. '0' → logprob: -6.423791885375977
    5. '   ' → logprob: -7.673791885375977
    6. ' ' → logprob: -8.548791885375977
    7. ' [' → logprob: -8.548791885375977
    8. '        ' → logprob: -9.173791885375977
    9. 'n' → logprob: -9.298791885375977
    10. '[self' → logprob: -10.048791885375977

Token 26: '.size' (ID: 4463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.479785442352295
    2. ' size' → logprob: -1.479785442352295
    3. ' =' → logprob: -1.604785442352295
    4. ',' → logprob: -2.354785442352295
    5. '.' → logprob: -3.104785442352295
    6. '_size' → logprob: -3.229785442352295
    7. ' n' → logprob: -3.354785442352295
    8. '.size' → logprob: -3.729785442352295
    9. '       ' → logprob: -3.979785442352295
    10. ')' → logprob: -4.354785442352295

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023458540439606
    2. ' =' → logprob: -1.9102345705032349
    3. ' ' → logprob: -12.785234451293945
    4. '=int' → logprob: -13.410234451293945
    5. '<|end|>' → logprob: -13.535234451293945
    6. ')' → logprob: -13.910234451293945
    7. '=}' → logprob: -14.035234451293945
    8. '=n' → logprob: -14.535234451293945
    9. '=len' → logprob: -14.785234451293945
    10. ',' → logprob: -14.910234451293945

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011048170737922192
    2. 'n' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.761048316955566
    4. '	n' → logprob: -16.13604736328125
    5. ' ' → logprob: -18.38604736328125
    6. ')n' → logprob: -18.63604736328125
    7. '0' → logprob: -19.13604736328125
    8. '[' → logprob: -19.51104736328125
    9. '    ' → logprob: -19.76104736328125
    10. '   ' → logprob: -20.13604736328125

Token 29: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04359211027622223
    2. '
' → logprob: -3.6685922145843506
    3. '        ' → logprob: -4.4185919761657715
    4. '<|end|>' → logprob: -6.2935919761657715
    5. 'self' → logprob: -6.5435919761657715
    6. '+' → logprob: -6.6685919761657715
    7. ' self' → logprob: -8.79359245300293
    8. '   ' → logprob: -9.91859245300293
    9. '        
' → logprob: -10.04359245300293
    10. ' 
' → logprob: -10.16859245300293

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031175442039966583
    2. '<|end|>' → logprob: -3.531175374984741
    3. 'self' → logprob: -7.53117561340332
    4. '
' → logprob: -7.78117561340332
    5. '   ' → logprob: -9.03117561340332
    6. ')' → logprob: -9.15617561340332
    7. '<|end|>' → logprob: -9.78117561340332
    8. ' self' → logprob: -10.03117561340332
    9. ',' → logprob: -10.15617561340332
    10. 'n' → logprob: -11.03117561340332

Token 31: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012558390386402607
    2. 'self' (adapté à ' self') → logprob: -5.137558460235596
    3. ' self' → logprob: -5.262558460235596
    4. '   ' → logprob: -7.637558460235596
    5. '+' → logprob: -8.512557983398438
    6. '0' → logprob: -9.137557983398438
    7. ')' → logprob: -9.387557983398438
    8. ' ' → logprob: -9.387557983398438
    9. '
' → logprob: -9.637557983398438
    10. ',' → logprob: -10.012557983398438

Token 32: '.tree' (ID: 49211)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.3594250679016113
    2. '=' → logprob: -1.4844250679016113
    3. ' =' → logprob: -2.4844250679016113
    4. 'data' → logprob: -2.4844250679016113
    5. '.tree' → logprob: -2.7344250679016113
    6. '_data' → logprob: -2.7344250679016113
    7. ' tree' → logprob: -2.9844250679016113
    8. '.data' → logprob: -3.2344250679016113
    9. '_' → logprob: -3.2344250679016113
    10. 'tree' → logprob: -3.4844250679016113

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01607014797627926
    2. '=' → logprob: -4.141070365905762
    3. '<|end|>' → logprob: -10.891070365905762
    4. ' ' → logprob: -11.891070365905762
    5. '[' → logprob: -12.141070365905762
    6. '<|end|>' → logprob: -13.766070365905762
    7. '=[]' → logprob: -14.016070365905762
    8. ')' → logprob: -14.141070365905762
    9. '[:]' → logprob: -14.641070365905762
    10. 's' → logprob: -14.766070365905762

Token 34: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1269291490316391
    2. ' [' → logprob: -2.1269290447235107
    3. '[n' → logprob: -14.12692928314209
    4. '[int' → logprob: -15.75192928314209
    5. '[self' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '[len' → logprob: -17.626928329467773
    8. '[class' → logprob: -17.876928329467773
    9. '[size' → logprob: -18.001928329467773
    10. '[value' → logprob: -18.251928329467773

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '۰' → logprob: -18.37548828125
    4. '00' → logprob: -19.75048828125
    5. '000' → logprob: -20.87548828125
    6. '０' → logprob: -20.87548828125
    7. ' ' → logprob: -21.12548828125
    8. '  ' → logprob: -21.25048828125
    9. '٠' → logprob: -21.50048828125
    10. '   ' → logprob: -21.62548828125

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006856862455606461
    2. ']*(' → logprob: -5.006856918334961
    3. ']*' → logprob: -8.881856918334961
    4. ' ]' → logprob: -14.006856918334961
    5. ',' → logprob: -14.256856918334961
    6. ')' → logprob: -14.256856918334961
    7. ' ' → logprob: -15.506856918334961
    8. ']+' → logprob: -16.00685691833496
    9. '}' → logprob: -16.50685691833496
    10. '```' → logprob: -17.38185691833496

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.37654316425323486
    2. ' *' → logprob: -1.8765431642532349
    3. '*(' → logprob: -2.0015430450439453
    4. ']*(' → logprob: -4.001543045043945
    5. ']' → logprob: -5.626543045043945
    6. '*n' → logprob: -6.376543045043945
    7. ' ' → logprob: -7.751543045043945
    8. ']*' → logprob: -7.876543045043945
    9. '(n' → logprob: -8.626543045043945
    10. ')' → logprob: -8.751543045043945

Token 38: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.893480243277736e-05
    2. ' (' → logprob: -10.375039100646973
    3. '(' → logprob: -11.875039100646973
    4. '(self' → logprob: -14.250039100646973
    5. '((' → logprob: -16.750038146972656
    6. '   ' → logprob: -17.750038146972656
    7. '(nn' → logprob: -17.875038146972656
    8. 'n' → logprob: -18.250038146972656
    9. '(nx' → logprob: -18.375038146972656
    10. '(size' → logprob: -18.375038146972656

Token 39: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00030900631099939346
    2. ' (' → logprob: -8.625308990478516
    3. 'n' → logprob: -9.375308990478516
    4. '(' → logprob: -10.125308990478516
    5. ' n' → logprob: -12.625308990478516
    6. '(self' → logprob: -13.875308990478516
    7. '((' → logprob: -16.375308990478516
    8. '[n' → logprob: -16.750308990478516
    9. 'self' → logprob: -16.875308990478516
    10. '(
' → logprob: -17.125308990478516

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008615754544734955
    2. ' +' → logprob: -4.758615970611572
    3. '+
' → logprob: -14.758615493774414
    4. '+)' → logprob: -14.758615493774414
    5. ' plus' → logprob: -15.883615493774414
    6. ')' → logprob: -16.383615493774414
    7. ' +
' → logprob: -16.383615493774414
    8. '+n' → logprob: -16.508615493774414
    9. '＋' → logprob: -17.133615493774414
    10. '1' → logprob: -17.883615493774414

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '2' → logprob: -14.000141143798828
    4. '   ' → logprob: -17.375141143798828
    5. '```' → logprob: -17.375141143798828
    6. '  ' → logprob: -18.937641143798828
    7. '１' → logprob: -19.187641143798828
    8. '۱' → logprob: -19.500141143798828
    9. '
' → logprob: -19.750141143798828
    10. '

' → logprob: -19.812641143798828

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -17.125
    4. '2' → logprob: -17.375
    5. '１' → logprob: -18.8125
    6. '۱' → logprob: -19.0625
    7. '१' → logprob: -19.0625
    8. '   ' → logprob: -19.1875
    9. '' → logprob: -19.75
    10. '১' → logprob: -20.0625

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. ')
' → logprob: -11.000020027160645
    3. ' )' → logprob: -12.875020027160645
    4. '<|end|>' → logprob: -14.875020027160645
    5. '```' → logprob: -16.50002098083496
    6. '}' → logprob: -16.50002098083496
    7. ')

' → logprob: -16.87502098083496
    8. '   ' → logprob: -16.87502098083496
    9. '))' → logprob: -17.00002098083496
    10. ')`' → logprob: -17.12502098083496

Token 44: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09479741752147675
    2. ' 
' → logprob: -3.094797372817993
    3. '    
' → logprob: -3.469797372817993
    4. '   ' → logprob: -4.594797611236572
    5. '  
' → logprob: -6.219797611236572
    6. 'def' → logprob: -7.594797611236572
    7. '   
' → logprob: -7.719797611236572
    8. '' → logprob: -8.594797134399414
    9. '
' → logprob: -8.594797134399414
    10. ' ' → logprob: -8.969797134399414

Token 45: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9564248919487
    2. ' 
' → logprob: -0.9564248919487
    3. '    
' → logprob: -2.0814249515533447
    4. '   ' → logprob: -2.5814249515533447
    5. '  
' → logprob: -4.581424713134766
    6. 'def' → logprob: -5.206424713134766
    7. '   
' → logprob: -5.331424713134766
    8. ' def' → logprob: -5.581424713134766
    9. '' → logprob: -6.206424713134766
    10. ' ' → logprob: -6.331424713134766

Token 46: '.depth' (ID: 89791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29178521037101746
    2. '._' → logprob: -2.29178524017334
    3. '.update' → logprob: -2.54178524017334
    4. 'def' → logprob: -4.04178524017334
    5. '.bit' → logprob: -4.66678524017334
    6. '.data' → logprob: -4.79178524017334
    7. '.size' → logprob: -5.66678524017334
    8. '.index' → logprob: -5.66678524017334
    9. '_update' → logprob: -6.29178524017334
    10. '.n' → logprob: -6.41678524017334

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1653900444507599
    2. '=' → logprob: -2.2903900146484375
    3. ' ' → logprob: -3.0403900146484375
    4. '    ' → logprob: -7.1653900146484375
    5. '<|end|>' → logprob: -7.2903900146484375
    6. '_' → logprob: -7.4153900146484375
    7. '  ' → logprob: -8.165390014648438
    8. '   ' → logprob: -8.290390014648438
    9. ' +=' → logprob: -8.540390014648438
    10. ')' → logprob: -9.540390014648438

Token 48: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39559268951416016
    2. '[' → logprob: -2.02059268951416
    3. ' [' → logprob: -2.14559268951416
    4. ' ' → logprob: -3.02059268951416
    5. '1' → logprob: -4.64559268951416
    6. '[int' → logprob: -5.14559268951416
    7. 'n' → logprob: -5.64559268951416
    8. 'int' → logprob: -5.89559268951416
    9. '20' → logprob: -6.14559268951416
    10. ' n' → logprob: -7.14559268951416

Token 49: '.bit' (ID: 61866)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20394767820835114
    2. '<|end|>' → logprob: -2.5789477825164795
    3. '    
' → logprob: -3.4539477825164795
    4. ' 
' → logprob: -3.4539477825164795
    5. '   ' → logprob: -3.5789477825164795
    6. 'def' → logprob: -5.2039475440979
    7. '<|end|>' → logprob: -5.5789475440979
    8. ' def' → logprob: -5.5789475440979
    9. '  
' → logprob: -6.7039475440979
    10. '	def' → logprob: -7.8289475440979

Token 50: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.7432603272027336e-06
    2. 'length' → logprob: -14.125001907348633
    3. '_l' → logprob: -14.625001907348633
    4. 'ength' → logprob: -15.625001907348633
    5. '_count' → logprob: -15.875001907348633
    6. '_' → logprob: -16.375001907348633
    7. '_width' → logprob: -16.750001907348633
    8. '```' → logprob: -17.250001907348633
    9. '_LENGTH' → logprob: -17.375001907348633
    10. '_size' → logprob: -18.500001907348633

Token 51: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018031037179753184
    2. '(' → logprob: -6.376802921295166
    3. '()+' → logprob: -10.126803398132324
    4. '()
' → logprob: -10.251803398132324
    5. ' ()' → logprob: -11.751803398132324
    6. '()

' → logprob: -12.251803398132324
    7. '()`' → logprob: -12.626803398132324
    8. '(),' → logprob: -13.751803398132324
    9. '(
' → logprob: -13.876803398132324
    10. '())' → logprob: -14.126803398132324

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0106868743896484
    2. '    
' → logprob: -1.1356868743896484
    3. ' 
' → logprob: -1.6356868743896484
    4. '   ' → logprob: -2.5106868743896484
    5. '  
' → logprob: -4.010686874389648
    6. '   
' → logprob: -5.010686874389648
    7. '	
' → logprob: -5.885686874389648
    8. '<|end|>' → logprob: -6.135686874389648
    9. '        
' → logprob: -6.260686874389648
    10. 'def' → logprob: -6.635686874389648

Token 53: ' def' (ID: 1056)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1154447793960571
    2. 'def' (adapté à ' def') → logprob: -1.1154447793960571
    3. ' def' → logprob: -2.2404446601867676
    4. '
' → logprob: -2.3654446601867676
    5. '    
' → logprob: -2.8654446601867676
    6. '  
' → logprob: -3.2404446601867676
    7. '   ' → logprob: -3.6154446601867676
    8. ' ' → logprob: -4.865444660186768
    9. '	def' → logprob: -5.240444660186768
    10. '   
' → logprob: -5.990444660186768

Token 54: ' sum' (ID: 4215)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.03918877989053726
    2. '_update' → logprob: -3.789188861846924
    3. 'update' → logprob: -4.289188861846924
    4. ' add' → logprob: -6.664188861846924
    5. ' low' → logprob: -8.789188385009766
    6. '_add' → logprob: -8.914188385009766
    7. ' ' → logprob: -8.914188385009766
    8. ' upd' → logprob: -9.289188385009766
    9. 'add' → logprob: -9.789188385009766
    10. ' query' → logprob: -9.914188385009766

Token 55: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1149703711271286
    2. '(' → logprob: -2.2399704456329346
    3. ' (' → logprob: -6.2399702072143555
    4. '(s' → logprob: -9.864970207214355
    5. '<|end|>' → logprob: -10.739970207214355
    6. '_range' → logprob: -10.989970207214355
    7. '_up' → logprob: -11.114970207214355
    8. 'self' → logprob: -11.239970207214355
    9. '(
' → logprob: -11.489970207214355
    10. '_query' → logprob: -11.489970207214355

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007847936823964119
    2. '(self' → logprob: -5.882847785949707
    3. ' ,' → logprob: -6.132847785949707
    4. 'self' → logprob: -6.757847785949707
    5. ')' → logprob: -7.132847785949707
    6. ',self' → logprob: -8.007847785949707
    7. '       ' → logprob: -9.257847785949707
    8. '   ' → logprob: -9.382847785949707
    9. '):' → logprob: -10.007847785949707
    10. ',
' → logprob: -10.382847785949707

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4598703980445862
    2. 'i' → logprob: -1.3348703384399414
    3. ' idx' → logprob: -3.3348703384399414
    4. 'self' → logprob: -3.5848703384399414
    5. 'idx' → logprob: -4.209870338439941
    6. 'index' → logprob: -4.334870338439941
    7. ' self' → logprob: -4.709870338439941
    8. ' index' → logprob: -6.209870338439941
    9. 'k' → logprob: -7.334870338439941
    10. ')' → logprob: -7.584870338439941

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018825652077794075
    2. '):
' → logprob: -4.643825531005859
    3. ')' → logprob: -5.018825531005859
    4. ' ):' → logprob: -6.268825531005859
    5. ':' → logprob: -8.64382553100586
    6. '+' → logprob: -8.76882553100586
    7. ' )' → logprob: -9.76882553100586
    8. ',' → logprob: -10.26882553100586
    9. '   ' → logprob: -10.51882553100586
    10. ' ):
' → logprob: -10.64382553100586

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14233502745628357
    2. ':' → logprob: -2.3923349380493164
    3. '=' → logprob: -3.7673349380493164
    4. '
' → logprob: -5.642334938049316
    5. '   ' → logprob: -5.892334938049316
    6. ':
' → logprob: -6.392334938049316
    7. ' =' → logprob: -6.642334938049316
    8. '<|end|>' → logprob: -6.642334938049316
    9. ',' → logprob: -6.767334938049316
    10. '        ' → logprob: -7.017334938049316

Token 60: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.9489893317222595
    2. 'res' → logprob: -1.3239893913269043
    3. ' s' → logprob: -1.6989893913269043
    4. '       ' → logprob: -2.1989893913269043
    5. ' res' → logprob: -3.1989893913269043
    6. 'result' → logprob: -4.823989391326904
    7. 'total' → logprob: -6.448989391326904
    8. '   ' → logprob: -7.198989391326904
    9. ' result' → logprob: -7.323989391326904
    10. ' total' → logprob: -7.948989391326904

Token 61: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0985262542963028
    2. ' =' → logprob: -3.0985262393951416
    3. '+=' → logprob: -3.4735262393951416
    4. '=' → logprob: -4.348526477813721
    5. ' ' → logprob: -5.473526477813721
    6. '  ' → logprob: -7.973526477813721
    7. ' +' → logprob: -9.348526000976562
    8. '+' → logprob: -9.598526000976562
    9. '   ' → logprob: -10.223526000976562
    10. '    ' → logprob: -11.098526000976562

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894001692533493
    2. ' ' → logprob: -2.463939905166626
    3. '   ' → logprob: -14.963939666748047
    4. '       ' → logprob: -15.338939666748047
    5. ' ' → logprob: -17.463939666748047
    6. '```' → logprob: -17.901439666748047
    7. '  ' → logprob: -17.963939666748047
    8. '۰' → logprob: -18.401439666748047
    9. ' i' → logprob: -18.463939666748047
    10. 'self' → logprob: -18.838939666748047

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'i' → logprob: -16.375045776367188
    4. '   ' → logprob: -17.625045776367188
    5. '۰' → logprob: -19.000045776367188
    6. 's' → logprob: -19.125045776367188
    7. '```' → logprob: -19.250045776367188
    8. 'self' → logprob: -19.875045776367188
    9. '       ' → logprob: -20.000045776367188
    10. '  ' → logprob: -20.375045776367188

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30336514115333557
    2. '
' → logprob: -2.0533652305603027
    3. '<|end|>' → logprob: -2.5533652305603027
    4. '<|end|>' → logprob: -3.3033652305603027
    5. ' while' → logprob: -6.178365230560303
    6. '        
' → logprob: -6.303365230560303
    7. '	' → logprob: -6.678365230560303
    8. ',' → logprob: -6.678365230560303
    9. ' 
' → logprob: -6.803365230560303
    10. '   ' → logprob: -6.803365230560303

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08349351584911346
    2. '
' → logprob: -2.95849347114563
    3. '<|end|>' → logprob: -4.083493709564209
    4. '<|end|>' → logprob: -6.208493709564209
    5. '	' → logprob: -6.833493709564209
    6. ';' → logprob: -6.958493709564209
    7. ' while' → logprob: -6.958493709564209
    8. '        
' → logprob: -7.083493709564209
    9. '   ' → logprob: -7.333493709564209
    10. '	while' → logprob: -7.458493709564209

Token 66: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05970814824104309
    2. '       ' → logprob: -3.0597081184387207
    3. ' while' → logprob: -4.559708118438721
    4. 'i' → logprob: -7.684708118438721
    5. '   ' → logprob: -9.184708595275879
    6. '	while' → logprob: -10.809708595275879
    7. ' i' → logprob: -12.059708595275879
    8. 'While' → logprob: -12.434708595275879
    9. ' ' → logprob: -14.684708595275879
    10. '      ' → logprob: -15.309708595275879

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14268413186073303
    2. 'i' → logprob: -2.0176842212677
    3. '	i' → logprob: -12.517683982849121
    4. ' ' → logprob: -12.517683982849121
    5. '0' → logprob: -15.017683982849121
    6. '   ' → logprob: -15.017683982849121
    7. '(i' → logprob: -15.142683982849121
    8. ' ' → logprob: -15.392683982849121
    9. '>' → logprob: -16.017684936523438
    10. '  ' → logprob: -16.142684936523438

Token 68: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00043400691356509924
    2. ' >' → logprob: -7.750433921813965
    3. '&gt' → logprob: -13.375433921813965
    4. '>=' → logprob: -13.625433921813965
    5. '">' → logprob: -15.375433921813965
    6. ':' → logprob: -16.37543487548828
    7. '0' → logprob: -16.50043487548828
    8. '   ' → logprob: -17.12543487548828
    9. ' ' → logprob: -17.37543487548828
    10. '＞' → logprob: -17.37543487548828

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197552755475044
    2. ' ' → logprob: -2.8119754791259766
    3. '<|end|>' → logprob: -12.436975479125977
    4. '=' → logprob: -13.311975479125977
    5. '>' → logprob: -14.061975479125977
    6. '   ' → logprob: -15.061975479125977
    7. '  ' → logprob: -15.686975479125977
    8. '[' → logprob: -16.061975479125977
    9. '```' → logprob: -16.061975479125977
    10. '<|end|>' → logprob: -16.061975479125977

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -15.625017166137695
    4. '>' → logprob: -18.000017166137695
    5. '[' → logprob: -18.750017166137695
    6. '=' → logprob: -18.875017166137695
    7. '```' → logprob: -19.125017166137695
    8. '   ' → logprob: -19.125017166137695
    9. '<|end|>' → logprob: -19.375017166137695
    10. '
' → logprob: -19.625017166137695

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11371452361345291
    2. ':
' → logprob: -2.2387144565582275
    3. '       ' → logprob: -7.238714694976807
    4. '           ' → logprob: -9.863714218139648
    5. '):
' → logprob: -10.113714218139648
    6. '):' → logprob: -10.863714218139648
    7. '<|end|>' → logprob: -10.863714218139648
    8. ',' → logprob: -11.738714218139648
    9. ' :' → logprob: -11.988714218139648
    10. ':
' → logprob: -11.988714218139648

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002053193049505353
    2. '
' → logprob: -7.127053260803223
    3. '       ' → logprob: -7.377053260803223
    4. 's' → logprob: -8.127053260803223
    5. ' s' → logprob: -8.752053260803223
    6. '```' → logprob: -9.877053260803223
    7. '<|end|>' → logprob: -10.252053260803223
    8. '            
' → logprob: -11.377053260803223
    9. '               ' → logprob: -11.627053260803223
    10. 'n' → logprob: -11.627053260803223

Token 73: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.05816613510251045
    2. ' s' → logprob: -3.058166027069092
    3. '           ' → logprob: -4.683166027069092
    4. '               ' → logprob: -8.43316650390625
    5. '```' → logprob: -10.93316650390625
    6. '   ' → logprob: -11.05816650390625
    7. '       ' → logprob: -11.43316650390625
    8. '
' → logprob: -11.55816650390625
    9. ' ' → logprob: -12.05816650390625
    10. '	s' → logprob: -13.55816650390625

Token 74: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12706364691257477
    2. '+=' → logprob: -2.127063751220703
    3. '+' → logprob: -9.127063751220703
    4. ' +' → logprob: -11.002063751220703
    5. ']+=' → logprob: -12.252063751220703
    6. '           ' → logprob: -13.252063751220703
    7. '            ' → logprob: -13.502063751220703
    8. '    ' → logprob: -14.627063751220703
    9. '        ' → logprob: -15.127063751220703
    10. ' ' → logprob: -15.377063751220703

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615161292254925
    2. ' self' → logprob: -4.758615016937256
    3. '[self' → logprob: -14.758615493774414
    4. '(self' → logprob: -15.883615493774414
    5. '	self' → logprob: -16.758615493774414
    6. '=self' → logprob: -17.633615493774414
    7. '       ' → logprob: -17.883615493774414
    8. '           ' → logprob: -18.258615493774414
    9. '```' → logprob: -18.508615493774414
    10. 's' → logprob: -19.383615493774414

Token 76: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.000309840717818588
    2. '.' → logprob: -8.125309944152832
    3. 'tree' → logprob: -11.750309944152832
    4. ' .' → logprob: -13.000309944152832
    5. '	tree' → logprob: -13.125309944152832
    6. ' tree' → logprob: -15.375309944152832
    7. '.t' → logprob: -15.750309944152832
    8. '`.' → logprob: -15.750309944152832
    9. '[' → logprob: -16.500308990478516
    10. '.user' → logprob: -16.625308990478516

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '[
' → logprob: -18.500001907348633
    4. ' [' → logprob: -18.500001907348633
    5. '```' → logprob: -18.500001907348633
    6. 'i' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '[self' → logprob: -19.125001907348633
    9. '       ' → logprob: -20.250001907348633
    10. '[I' → logprob: -20.875001907348633

Token 78: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027105003595352173
    2. ']
' → logprob: -3.7771050930023193
    3. ')' → logprob: -5.65210485458374
    4. ' ]' → logprob: -8.902105331420898
    5. ')
' → logprob: -9.277105331420898
    6. '           ' → logprob: -10.402105331420898
    7. '<|end|>' → logprob: -10.902105331420898
    8. '       ' → logprob: -11.402105331420898
    9. ']
' → logprob: -11.527105331420898
    10. ')]' → logprob: -11.777105331420898

Token 79: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6957272887229919
    2. '           ' → logprob: -0.6957272887229919
    3. '
' → logprob: -7.570727348327637
    4. 'i' → logprob: -7.695727348327637
    5. ' i' → logprob: -7.695727348327637
    6. '            
' → logprob: -8.320727348327637
    7. '\n' → logprob: -8.445727348327637
    8. ' 
' → logprob: -8.820727348327637
    9. '       ' → logprob: -8.945727348327637
    10. '    
' → logprob: -9.320727348327637

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.030443133786320686
    2. ' i' → logprob: -3.5304431915283203
    3. '           ' → logprob: -7.28044319152832
    4. '   ' → logprob: -13.78044319152832
    5. '       ' → logprob: -14.15544319152832
    6. '	i' → logprob: -14.40544319152832
    7. ' ' → logprob: -14.78044319152832
    8. '```' → logprob: -15.40544319152832
    9. '               ' → logprob: -15.65544319152832
    10. '
' → logprob: -15.65544319152832

Token 81: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0588616319000721
    2. '-=' → logprob: -3.18386173248291
    3. '&' → logprob: -4.93386173248291
    4. ' &=' → logprob: -5.30886173248291
    5. ' &' → logprob: -6.18386173248291
    6. '-' → logprob: -7.30886173248291
    7. '=' → logprob: -7.80886173248291
    8. ' -' → logprob: -8.43386173248291
    9. ' ' → logprob: -9.18386173248291
    10. ' ^=' → logprob: -10.43386173248291

Token 82: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002496706321835518
    2. ' i' → logprob: -6.002496719360352
    3. '   ' → logprob: -11.627496719360352
    4. '(i' → logprob: -12.127496719360352
    5. ' ' → logprob: -13.127496719360352
    6. '  ' → logprob: -13.502496719360352
    7. '	i' → logprob: -13.627496719360352
    8. ' (' → logprob: -13.752496719360352
    9. '1' → logprob: -14.377496719360352
    10. '(' → logprob: -15.127496719360352

Token 83: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.39900875091552734
    2. ' &' → logprob: -1.1490087509155273
    3. '&i' → logprob: -4.899008750915527
    4. '&t' → logprob: -5.899008750915527
    5. '&r' → logprob: -6.899008750915527
    6. '&a' → logprob: -8.524008750915527
    7. '&s' → logprob: -9.024008750915527
    8. '"&' → logprob: -9.274008750915527
    9. '&p' → logprob: -9.649008750915527
    10. '&id' → logprob: -9.899008750915527

Token 84: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.13384775817394257
    2. '-' → logprob: -2.133847713470459
    3. ' -' → logprob: -5.008847713470459
    4. 'i' → logprob: -9.133848190307617
    5. '(-' → logprob: -9.258848190307617
    6. ' i' → logprob: -11.508848190307617
    7. '(i' → logprob: -13.383848190307617
    8. ' (-' → logprob: -14.008848190307617
    9. '   ' → logprob: -14.883848190307617
    10. '	i' → logprob: -15.633848190307617

Token 85: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.246537173457909e-06
    2. ' i' → logprob: -12.375003814697266
    3. '	i' → logprob: -17.500003814697266
    4. ' ' → logprob: -18.750003814697266
    5. '<|end|>' → logprob: -19.125003814697266
    6. ''i' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.250003814697266
    8. '_i' → logprob: -19.375003814697266
    9. '```' → logprob: -20.000003814697266
    10. '  ' → logprob: -20.500003814697266

Token 86: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061986736953258514
    2. ' i' → logprob: -2.8119866847991943
    3. '<|end|>' → logprob: -11.686986923217773
    4. ' ' → logprob: -11.811986923217773
    5. '	i' → logprob: -13.436986923217773
    6. '1' → logprob: -14.311986923217773
    7. '  ' → logprob: -15.311986923217773
    8. '_i' → logprob: -15.686986923217773
    9. '0' → logprob: -15.811986923217773
    10. '   ' → logprob: -16.061986923217773

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035631912760436535
    2. '   ' → logprob: -8.625356674194336
    3. 'return' → logprob: -9.500356674194336
    4. ' return' → logprob: -10.000356674194336
    5. ' ' → logprob: -11.250356674194336
    6. '        
' → logprob: -11.500356674194336
    7. '	' → logprob: -11.875356674194336
    8. '
' → logprob: -12.250356674194336
    9. '           ' → logprob: -12.625356674194336
    10. '      ' → logprob: -12.750356674194336

Token 88: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08622362464666367
    2. 'return' (adapté à ' return') → logprob: -3.086223602294922
    3. ' return' → logprob: -3.336223602294922
    4. '   ' → logprob: -6.836223602294922
    5. '	return' → logprob: -8.461223602294922
    6. ' ' → logprob: -10.586223602294922
    7. '```' → logprob: -10.836223602294922
    8. '
' → logprob: -11.586223602294922
    9. '           ' → logprob: -12.211223602294922
    10. '	' → logprob: -12.461223602294922

Token 89: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931476593017578
    2. ' s' → logprob: -0.6931476593017578
    3. '	s' → logprob: -15.443147659301758
    4. ' ' → logprob: -15.568147659301758
    5. ' ' → logprob: -16.318147659301758
    6. '(s' → logprob: -18.443147659301758
    7. '<s' → logprob: -18.693147659301758
    8. '`s' → logprob: -18.943147659301758
    9. '_s' → logprob: -19.068147659301758
    10. '"s' → logprob: -19.943147659301758

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06424007564783096
    2. '   ' → logprob: -3.564239978790283
    3. '    
' → logprob: -4.189239978790283
    4. ' 
' → logprob: -4.564239978790283
    5. '  
' → logprob: -5.439239978790283
    6. '<|end|>' → logprob: -6.189239978790283
    7. '```' → logprob: -7.814239978790283
    8. '   
' → logprob: -7.814239978790283
    9. '        
' → logprob: -8.439240455627441
    10. ' ' → logprob: -8.564240455627441

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27363964915275574
    2. '
' → logprob: -1.6486396789550781
    3. '    
' → logprob: -3.648639678955078
    4. '<|end|>' → logprob: -4.648639678955078
    5. ' 
' → logprob: -5.023639678955078
    6. '  
' → logprob: -6.273639678955078
    7. ' def' → logprob: -7.023639678955078
    8. '```' → logprob: -7.648639678955078
    9. 'def' → logprob: -7.773639678955078
    10. ' ' → logprob: -8.148639678955078

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004461450967937708
    2. '   ' → logprob: -5.504461288452148
    3. ' def' → logprob: -7.879461288452148
    4. '    
' → logprob: -13.004461288452148
    5. '	def' → logprob: -13.879461288452148
    6. '```' → logprob: -14.004461288452148
    7. ' ' → logprob: -15.504461288452148
    8. '        
' → logprob: -15.629461288452148
    9. '
' → logprob: -17.00446128845215
    10. '  
' → logprob: -17.25446128845215

Token 93: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.576228678226471
    2. ' update' → logprob: -0.826228678226471
    3. 'update' → logprob: -8.576229095458984
    4. 'add' → logprob: -9.951229095458984
    5. ' ' → logprob: -11.576229095458984
    6. ' def' → logprob: -11.826229095458984
    7. '.update' → logprob: -12.076229095458984
    8. ' build' → logprob: -12.076229095458984
    9. '_update' → logprob: -12.451229095458984
    10. '_add' → logprob: -13.076229095458984

Token 94: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019416073337197304
    2. '(' → logprob: -6.251941680908203
    3. ' (' → logprob: -11.376941680908203
    4. '(s' → logprob: -14.126941680908203
    5. '(
' → logprob: -15.376941680908203
    6. 'self' → logprob: -15.501941680908203
    7. ' ' → logprob: -15.626941680908203
    8. '   ' → logprob: -16.501941680908203
    9. '(sel' → logprob: -16.501941680908203
    10. '(i' → logprob: -16.626941680908203

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006884800270199776
    2. '(self' → logprob: -5.381884574890137
    3. 'self' → logprob: -6.631884574890137
    4. ' ,' → logprob: -7.131884574890137
    5. ',self' → logprob: -10.006884574890137
    6. ')' → logprob: -10.381884574890137
    7. ' self' → logprob: -10.756884574890137
    8. '(' → logprob: -11.506884574890137
    9. '       ' → logprob: -11.881884574890137
    10. ' (' → logprob: -12.131884574890137

Token 96: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39375966787338257
    2. 'i' → logprob: -1.1437597274780273
    3. 'self' → logprob: -5.518759727478027
    4. ' self' → logprob: -6.268759727478027
    5. '<|end|>' → logprob: -7.643759727478027
    6. '   ' → logprob: -8.393759727478027
    7. 'index' → logprob: -9.393759727478027
    8. ' ' → logprob: -10.143759727478027
    9. ')' → logprob: -10.143759727478027
    10. '       ' → logprob: -11.018759727478027

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001105762057704851
    2. ' ,' → logprob: -9.125110626220703
    3. ',i' → logprob: -13.625110626220703
    4. 'self' → logprob: -15.750110626220703
    5. ',self' → logprob: -16.250110626220703
    6. ',value' → logprob: -16.625110626220703
    7. '       ' → logprob: -17.125110626220703
    8. '   ' → logprob: -17.375110626220703
    9. ',n' → logprob: -17.375110626220703
    10. ',int' → logprob: -17.625110626220703

Token 98: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.575555682182312
    2. ' x' → logprob: -1.575555682182312
    3. 'v' → logprob: -1.825555682182312
    4. ' v' → logprob: -2.7005558013916016
    5. 'delta' → logprob: -6.950555801391602
    6. ' ' → logprob: -7.200555801391602
    7. ' delta' → logprob: -7.575555801391602
    8. 'w' → logprob: -9.325555801391602
    9. '1' → logprob: -9.700555801391602
    10. ' w' → logprob: -10.700555801391602

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004108442459255457
    2. '):
' → logprob: -5.504108428955078
    3. '):
' → logprob: -11.004108428955078
    4. ')' → logprob: -11.754108428955078
    5. ' ):' → logprob: -12.504108428955078
    6. ':' → logprob: -13.629108428955078
    7. '   ' → logprob: -14.754108428955078
    8. '):

' → logprob: -16.504108428955078
    9. '       ' → logprob: -16.879108428955078
    10. ' ' → logprob: -17.004108428955078

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006937315920367837
    2. '<|end|>' → logprob: -7.7506937980651855
    3. ' ' → logprob: -9.750693321228027
    4. '        ' → logprob: -9.875693321228027
    5. ' 
' → logprob: -10.250693321228027
    6. '        
' → logprob: -10.375693321228027
    7. '   ' → logprob: -10.500693321228027
    8. '      ' → logprob: -11.500693321228027
    9. '    ' → logprob: -11.625693321228027
    10. '
' → logprob: -11.750693321228027

Token 101: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29062867164611816
    2. ' while' → logprob: -1.4156286716461182
    3. 'while' (adapté à ' while') → logprob: -4.790628433227539
    4. ' i' → logprob: -7.040628433227539
    5. '        ' → logprob: -9.040628433227539
    6. '   ' → logprob: -9.665628433227539
    7. 'i' → logprob: -11.165628433227539
    8. '```' → logprob: -11.290628433227539
    9. '	while' → logprob: -11.290628433227539
    10. '    ' → logprob: -11.790628433227539

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759426951408386
    2. ' i' → logprob: -0.8259426951408386
    3. '   ' → logprob: -12.825942993164062
    4. 'self' → logprob: -15.200942993164062
    5. '	i' → logprob: -15.700942993164062
    6. '(i' → logprob: -16.575942993164062
    7. ' ' → logprob: -17.450942993164062
    8. ' self' → logprob: -18.075942993164062
    9. '  ' → logprob: -18.450942993164062
    10. '    ' → logprob: -18.700942993164062

Token 103: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1269282102584839
    2. '<=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -17.126928329467773
    4. '   ' → logprob: -17.751928329467773
    5. ' +=' → logprob: -18.126928329467773
    6. ' ≤' → logprob: -18.501928329467773
    7. ')<=' → logprob: -18.501928329467773
    8. '<' → logprob: -18.626928329467773
    9. ' <' → logprob: -18.626928329467773
    10. '+=' → logprob: -19.126928329467773

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245826363563538
    2. ' self' → logprob: -3.7732458114624023
    3. '       ' → logprob: -15.648245811462402
    4. '   ' → logprob: -16.52324676513672
    5. '	self' → logprob: -16.89824676513672
    6. '(self' → logprob: -17.27324676513672
    7. '
' → logprob: -17.52324676513672
    8. '=self' → logprob: -18.52324676513672
    9. '[self' → logprob: -18.89824676513672
    10. '```' → logprob: -19.52324676513672

Token 105: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.572941179503687e-05
    2. 'size' → logprob: -10.000045776367188
    3. '.' → logprob: -16.000045776367188
    4. ' size' → logprob: -16.250045776367188
    5. '	size' → logprob: -17.750045776367188
    6. 'self' → logprob: -18.000045776367188
    7. '       ' → logprob: -18.125045776367188
    8. '_size' → logprob: -18.500045776367188
    9. ':size' → logprob: -18.750045776367188
    10. '<size' → logprob: -19.000045776367188

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5242356657981873
    2. ':
' → logprob: -0.8992356657981873
    3. '           ' → logprob: -7.149235725402832
    4. '       ' → logprob: -8.649235725402832
    5. '):
' → logprob: -9.149235725402832
    6. '   ' → logprob: -11.274235725402832
    7. ':
' → logprob: -11.399235725402832
    8. ',' → logprob: -11.899235725402832
    9. ' :
' → logprob: -11.899235725402832
    10. '):' → logprob: -13.274235725402832

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003020961594302207
    2. 'self' → logprob: -8.7503023147583
    3. ' self' → logprob: -9.1253023147583
    4. '   ' → logprob: -11.3753023147583
    5. '       ' → logprob: -11.7503023147583
    6. '```' → logprob: -12.0003023147583
    7. '               ' → logprob: -12.6253023147583
    8. '
' → logprob: -12.8753023147583
    9. '	       ' → logprob: -14.1253023147583
    10. '[self' → logprob: -15.1253023147583

Token 108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011801271699368954
    2. ' self' → logprob: -4.636801242828369
    3. '           ' → logprob: -6.386801242828369
    4. '               ' → logprob: -8.136801719665527
    5. '       ' → logprob: -10.386801719665527
    6. '	self' → logprob: -11.136801719665527
    7. '   ' → logprob: -11.636801719665527
    8. '```' → logprob: -12.011801719665527
    9. '[self' → logprob: -12.636801719665527
    10. '*self' → logprob: -14.011801719665527

Token 109: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0007831838447600603
    2. '.' → logprob: -7.3757829666137695
    3. ' .' → logprob: -9.37578296661377
    4. '       ' → logprob: -10.25078296661377
    5. '].' → logprob: -11.75078296661377
    6. '   ' → logprob: -12.00078296661377
    7. '           ' → logprob: -12.37578296661377
    8. '	tree' → logprob: -12.37578296661377
    9. '`.' → logprob: -13.12578296661377
    10. 'tree' → logprob: -13.12578296661377

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '[I' → logprob: -16.25
    4. '           ' → logprob: -18.25
    5. '```' → logprob: -18.75
    6. ' [' → logprob: -18.875
    7. '[self' → logprob: -19.75
    8. '[index' → logprob: -20.25
    9. '[idx' → logprob: -20.75
    10. '[int' → logprob: -20.875

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16865040361881256
    2. ' +=' → logprob: -2.2936503887176514
    3. ']+=' → logprob: -3.0436503887176514
    4. '+=' → logprob: -5.9186506271362305
    5. ' ]' → logprob: -6.4186506271362305
    6. '        ' → logprob: -6.6686506271362305
    7. ')' → logprob: -7.1686506271362305
    8. '            ' → logprob: -9.41865062713623
    9. '    ' → logprob: -9.66865062713623
    10. '           ' → logprob: -10.29365062713623

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47411423921585083
    2. '+=' → logprob: -0.9741142392158508
    3. '           ' → logprob: -11.474114418029785
    4. '        ' → logprob: -11.724114418029785
    5. ']+=' → logprob: -11.849114418029785
    6. '            ' → logprob: -11.849114418029785
    7. '+' → logprob: -13.224114418029785
    8. '=' → logprob: -14.474114418029785
    9. '    ' → logprob: -14.724114418029785
    10. '```' → logprob: -14.724114418029785

Token 113: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '	x' → logprob: -20.003177642822266
    4. '$x' → logprob: -22.503177642822266
    5. ')x' → logprob: -22.628177642822266
    6. '(x' → logprob: -23.128177642822266
    7. '"x' → logprob: -24.003177642822266
    8. '{x' → logprob: -24.128177642822266
    9. '*x' → logprob: -24.128177642822266
    10. '           ' → logprob: -25.003177642822266

Token 114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.0100624169572257e-05
    2. 'i' → logprob: -11.500020027160645
    3. '   ' → logprob: -12.500020027160645
    4. ' i' → logprob: -12.625020027160645
    5. '       ' → logprob: -12.875020027160645
    6. ',' → logprob: -15.500020027160645
    7. '
' → logprob: -16.37502098083496
    8. ',i' → logprob: -16.87502098083496
    9. '               ' → logprob: -17.00002098083496
    10. '		' → logprob: -17.12502098083496

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5570885807392187e-05
    2. 'i' → logprob: -11.500015258789062
    3. '       ' → logprob: -13.125015258789062
    4. ' i' → logprob: -13.250015258789062
    5. '   ' → logprob: -13.500015258789062
    6. '```' → logprob: -16.125015258789062
    7. '		' → logprob: -17.125015258789062
    8. '               ' → logprob: -17.125015258789062
    9. '	       ' → logprob: -17.875015258789062
    10. '          ' → logprob: -17.875015258789062

Token 116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.5761870741844177
    2. ' i' → logprob: -0.8261870741844177
    3. '           ' → logprob: -8.326187133789062
    4. '   ' → logprob: -12.576187133789062
    5. '       ' → logprob: -13.451187133789062
    6. '	i' → logprob: -15.076187133789062
    7. '               ' → logprob: -15.826187133789062
    8. ' ' → logprob: -16.076187133789062
    9. '  ' → logprob: -16.576187133789062
    10. '    ' → logprob: -17.451187133789062

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759456157684326
    2. '+=' → logprob: -0.8259456157684326
    3. '=' → logprob: -12.700945854187012
    4. ' <<=' → logprob: -13.450945854187012
    5. '+' → logprob: -14.450945854187012
    6. ']+=' → logprob: -15.075945854187012
    7. '+=(' → logprob: -15.575945854187012
    8. ' ' → logprob: -15.575945854187012
    9. '    ' → logprob: -15.700945854187012
    10. '```' → logprob: -16.450944900512695

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868780732154846
    2. ' i' → logprob: -1.1368780136108398
    3. '(i' → logprob: -12.88687801361084
    4. '	i' → logprob: -13.51187801361084
    5. ' (' → logprob: -13.76187801361084
    6. '   ' → logprob: -14.01187801361084
    7. ' ' → logprob: -14.26187801361084
    8. '  ' → logprob: -14.88687801361084
    9. '(' → logprob: -16.011878967285156
    10. '```' → logprob: -16.136878967285156

Token 119: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.03207503259181976
    2. '&i' → logprob: -4.032074928283691
    3. '&' → logprob: -4.282074928283691
    4. '&amp' → logprob: -12.407074928283691
    5. '&id' → logprob: -12.407074928283691
    6. '&I' → logprob: -12.782074928283691
    7. '&r' → logprob: -14.282074928283691
    8. '&nbsp' → logprob: -14.407074928283691
    9. '&t' → logprob: -14.532074928283691
    10. ' ' → logprob: -15.282074928283691

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7515721917152405
    2. '-i' → logprob: -0.7515721917152405
    3. '-' → logprob: -2.8765721321105957
    4. ' i' → logprob: -8.251572608947754
    5. 'i' → logprob: -8.751572608947754
    6. '(-' → logprob: -14.376572608947754
    7. ' ' → logprob: -14.501572608947754
    8. '   ' → logprob: -14.751572608947754
    9. '	i' → logprob: -14.751572608947754
    10. '-I' → logprob: -15.126572608947754

Token 121: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -18.000003814697266
    4. '-i' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '<|end|>' → logprob: -19.750003814697266
    7. '_i' → logprob: -20.000003814697266
    8. ' ' → logprob: -21.000003814697266
    9. 'x' → logprob: -21.125003814697266
    10. ''i' → logprob: -21.250003814697266

Token 122: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5615062713623047
    2. '1' → logprob: -1.8115062713623047
    3. 'i' → logprob: -2.1865062713623047
    4. ' i' → logprob: -2.4365062713623047
    5. '   ' → logprob: -3.9365062713623047
    6. ' ' → logprob: -4.436506271362305
    7. '<|end|>' → logprob: -4.811506271362305
    8. '0' → logprob: -5.061506271362305
    9. ')' → logprob: -5.061506271362305
    10. '```' → logprob: -5.436506271362305

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19419124722480774
    2. '
' → logprob: -2.4441912174224854
    3. '<|end|>' → logprob: -2.5691912174224854
    4. 'def' → logprob: -4.6941914558410645
    5. '    
' → logprob: -6.6941914558410645
    6. 'class' → logprob: -7.0691914558410645
    7. '```' → logprob: -7.5691914558410645
    8. '<|end|>' → logprob: -7.6941914558410645
    9. '#' → logprob: -9.069190979003906
    10. ' def' → logprob: -9.194190979003906

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012495400384068489
    2. '   ' → logprob: -4.512495517730713
    3. ' def' → logprob: -6.887495517730713
    4. 'class' → logprob: -7.887495517730713
    5. '<|end|>' → logprob: -11.137495040893555
    6. '	def' → logprob: -11.512495040893555
    7. '
' → logprob: -12.387495040893555
    8. '#' → logprob: -12.512495040893555
    9. ' ' → logprob: -12.512495040893555
    10. '```' → logprob: -12.512495040893555

Token 125: ' debug' (ID: 15199)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2793251276016235
    2. 'build' → logprob: -1.5293251276016235
    3. 'query' → logprob: -1.7793251276016235
    4. ' build' → logprob: -2.279325008392334
    5. ' query' → logprob: -2.529325008392334
    6. ' range' → logprob: -3.154325008392334
    7. 'lower' → logprob: -3.779325008392334
    8. 'get' → logprob: -3.904325008392334
    9. 'reset' → logprob: -4.779325008392334
    10. ' get' → logprob: -5.154325008392334

Token 126: '_print' (ID: 31509)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010413667187094688
    2. '(' → logprob: -4.635413646697998
    3. 'self' → logprob: -8.010414123535156
    4. '()' → logprob: -8.760414123535156
    5. '_' → logprob: -9.760414123535156
    6. '   ' → logprob: -10.260414123535156
    7. ' (' → logprob: -10.510414123535156
    8. 'def' → logprob: -11.760414123535156
    9. '_(' → logprob: -11.760414123535156
    10. '_self' → logprob: -11.885414123535156

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004708038177341223
    2. '(' → logprob: -5.3797078132629395
    3. ' (' → logprob: -9.504708290100098
    4. '()' → logprob: -11.754708290100098
    5. '(s' → logprob: -13.379708290100098
    6. 'self' → logprob: -13.504708290100098
    7. ' ' → logprob: -13.754708290100098
    8. '   ' → logprob: -14.379708290100098
    9. '(
' → logprob: -14.754708290100098
    10. '(sel' → logprob: -15.504708290100098

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17811137437820435
    2. ',' → logprob: -2.0531113147735596
    3. '):
' → logprob: -3.6781113147735596
    4. 'self' → logprob: -5.053111553192139
    5. ')' → logprob: -6.678111553192139
    6. ' ):' → logprob: -6.928111553192139
    7. ' ,' → logprob: -7.178111553192139
    8. '(self' → logprob: -10.67811107635498
    9. ' self' → logprob: -10.80311107635498
    10. '):

' → logprob: -11.17811107635498

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048775310278870165
    2. '   ' → logprob: -8.125487327575684
    3. ' for' → logprob: -8.625487327575684
    4. ' print' → logprob: -12.250487327575684
    5. '	' → logprob: -13.750487327575684
    6. '    ' → logprob: -13.875487327575684
    7. '	   ' → logprob: -13.875487327575684
    8. 'print' → logprob: -14.125487327575684
    9. '      ' → logprob: -14.250487327575684
    10. 'for' → logprob: -14.375487327575684

Token 130: ' for' (ID: 395)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5652807354927063
    2. 'print' → logprob: -1.0652806758880615
    3. ' for' → logprob: -2.5652806758880615
    4. 'for' (adapté à ' for') → logprob: -4.690280914306641
    5. '       ' → logprob: -6.940280914306641
    6. '   ' → logprob: -9.44028091430664
    7. ' return' → logprob: -10.81528091430664
    8. 'return' → logprob: -11.31528091430664
    9. ' ' → logprob: -12.94028091430664
    10. '    ' → logprob: -13.56528091430664

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009891492314636707
    2. ' i' → logprob: -4.634891510009766
    3. 'v' → logprob: -9.634891510009766
    4. 'row' → logprob: -10.884891510009766
    5. 'value' → logprob: -11.009891510009766
    6. 'idx' → logprob: -11.634891510009766
    7. 'val' → logprob: -11.759891510009766
    8. '   ' → logprob: -12.009891510009766
    9. 'x' → logprob: -12.884891510009766
    10. ' row' → logprob: -13.384891510009766

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01126120239496231
    2. 'in' → logprob: -4.511260986328125
    3. ',' → logprob: -9.386260986328125
    4. '	in' → logprob: -10.386260986328125
    5. ' ' → logprob: -10.636260986328125
    6. '    ' → logprob: -11.136260986328125
    7. '   ' → logprob: -11.261260986328125
    8. '(' → logprob: -11.261260986328125
    9. '        ' → logprob: -11.886260986328125
    10. ' ,' → logprob: -12.261260986328125

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759404897689819
    2. ' range' → logprob: -0.8259404897689819
    3. '(range' → logprob: -14.200940132141113
    4. ' ' → logprob: -15.325940132141113
    5. '  ' → logprob: -16.32594108581543
    6. '   ' → logprob: -16.70094108581543
    7. '	range' → logprob: -16.82594108581543
    8. ' xrange' → logprob: -18.07594108581543
    9. 'rang' → logprob: -18.95094108581543
    10. '[' → logprob: -19.32594108581543

Token 134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003909927327185869
    2. '(self' → logprob: -7.875391006469727
    3. '1' → logprob: -11.500391006469727
    4. 'self' → logprob: -14.750391006469727
    5. '   ' → logprob: -15.500391006469727
    6. '(len' → logprob: -15.625391006469727
    7. ' ' → logprob: -17.375391006469727
    8. ' (' → logprob: -18.000391006469727
    9. ' self' → logprob: -18.875391006469727
    10. '       ' → logprob: -19.000391006469727

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018780550453811884
    2. 'self' → logprob: -8.625187873840332
    3. '   ' → logprob: -12.250187873840332
    4. ' ' → logprob: -13.250187873840332
    5. 'len' → logprob: -14.000187873840332
    6. '(' → logprob: -15.375187873840332
    7. '(self' → logprob: -15.500187873840332
    8. ' self' → logprob: -15.625187873840332
    9. '       ' → logprob: -17.125186920166016
    10. '           ' → logprob: -17.250186920166016

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009151478880085051
    2. ' ,' → logprob: -7.125915050506592
    3. ',self' → logprob: -9.25091552734375
    4. ',len' → logprob: -11.37591552734375
    5. '   ' → logprob: -13.87591552734375
    6. 'self' → logprob: -14.00091552734375
    7. '       ' → logprob: -14.12591552734375
    8. ',
' → logprob: -15.00091552734375
    9. ' self' → logprob: -16.00091552734375
    10. '    ' → logprob: -17.12591552734375

Token 137: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032017158810049295
    2. ' self' → logprob: -5.753201484680176
    3. 'len' → logprob: -10.878201484680176
    4. '   ' → logprob: -12.378201484680176
    5. ' len' → logprob: -15.003201484680176
    6. '       ' → logprob: -15.378201484680176
    7. '(self' → logprob: -16.378202438354492
    8. '    ' → logprob: -16.628202438354492
    9. '           ' → logprob: -16.878202438354492
    10. '	self' → logprob: -17.128202438354492

Token 138: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -3.054500666621607e-06
    2. 'size' → logprob: -13.00000286102295
    3. '.' → logprob: -14.25000286102295
    4. ' .' → logprob: -17.000003814697266
    5. ' size' → logprob: -17.875003814697266
    6. '   ' → logprob: -17.875003814697266
    7. ').' → logprob: -18.375003814697266
    8. ':size' → logprob: -18.500003814697266
    9. '	size' → logprob: -19.375003814697266
    10. '.length' → logprob: -19.375003814697266

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868759572505951
    2. ' +' → logprob: -1.1368759870529175
    3. '   ' → logprob: -12.511876106262207
    4. '()+' → logprob: -14.886876106262207
    5. '):' → logprob: -15.636876106262207
    6. '    ' → logprob: -15.886876106262207
    7. ' ' → logprob: -16.01187515258789
    8. '       ' → logprob: -16.26187515258789
    9. '):
' → logprob: -16.38687515258789
    10. '+
' → logprob: -16.63687515258789

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.50247573852539
    4. '2' → logprob: -17.87747573852539
    5. '       ' → logprob: -18.12747573852539
    6. '```' → logprob: -18.25247573852539
    7. '           ' → logprob: -19.00247573852539
    8. '=' → logprob: -19.62747573852539
    9. '    ' → logprob: -19.75247573852539
    10. '7' → logprob: -20.12747573852539

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.250009536743164
    4. '```' → logprob: -18.500009536743164
    5. ')' → logprob: -19.375009536743164
    6. '2' → logprob: -19.625009536743164
    7. '
' → logprob: -19.625009536743164
    8. '  ' → logprob: -20.437509536743164
    9. '11' → logprob: -20.750009536743164
    10. '１' → logprob: -21.375009536743164

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5772609710693359
    2. '):
' → logprob: -0.8272609710693359
    3. ':' → logprob: -6.702260971069336
    4. ':
' → logprob: -10.702260971069336
    5. ')' → logprob: -10.952260971069336
    6. ' ):
' → logprob: -11.077260971069336
    7. ' ):' → logprob: -11.327260971069336
    8. '       ' → logprob: -11.702260971069336
    9. '):
' → logprob: -11.827260971069336
    10. '   ' → logprob: -12.077260971069336

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006497346796095371
    2. ' print' → logprob: -5.256497383117676
    3. 'print' → logprob: -6.881497383117676
    4. '       ' → logprob: -8.381497383117676
    5. '   ' → logprob: -13.631497383117676
    6. '	       ' → logprob: -14.131497383117676
    7. '
' → logprob: -14.256497383117676
    8. '.print' → logprob: -14.381497383117676
    9. '```' → logprob: -14.381497383117676
    10. ',' → logprob: -14.631497383117676

Token 144: ' j' (ID: 441)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5276608467102051
    2. 'print' → logprob: -0.9026608467102051
    3. '           ' → logprob: -5.652660846710205
    4. 's' → logprob: -7.402660846710205
    5. ' s' → logprob: -8.027660369873047
    6. '            ' → logprob: -11.027660369873047
    7. '       ' → logprob: -11.152660369873047
    8. '   ' → logprob: -11.402660369873047
    9. 'prefix' → logprob: -12.152660369873047
    10. '    ' → logprob: -12.277660369873047

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6335897445678711
    2. '=' → logprob: -0.7585897445678711
    3. ' in' → logprob: -7.758589744567871
    4. ',' → logprob: -8.133589744567871
    5. 'in' → logprob: -10.133589744567871
    6. '   ' → logprob: -10.383589744567871
    7. ' ' → logprob: -10.383589744567871
    8. '    ' → logprob: -10.508589744567871
    9. '=i' → logprob: -10.508589744567871
    10. 'for' → logprob: -10.633589744567871

Token 146: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09477551281452179
    2. '1' → logprob: -3.094775438308716
    3. 'self' → logprob: -3.219775438308716
    4. ' i' → logprob: -5.719775676727295
    5. '0' → logprob: -7.344775676727295
    6. ' ' → logprob: -7.469775676727295
    7. ' self' → logprob: -7.844775676727295
    8. '(i' → logprob: -8.594775199890137
    9. '2' → logprob: -10.719775199890137
    10. '(' → logprob: -10.969775199890137

Token 147: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09574269503355026
    2. '1' → logprob: -2.595742702484131
    3. 'self' → logprob: -4.220742702484131
    4. ' i' → logprob: -7.095742702484131
    5. '(i' → logprob: -7.470742702484131
    6. ' ' → logprob: -8.345742225646973
    7. '2' → logprob: -9.470742225646973
    8. '(' → logprob: -9.845742225646973
    9. '   ' → logprob: -9.970742225646973
    10. 'j' → logprob: -10.345742225646973

Token 148: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.9384030103683472
    2. '-' → logprob: -1.5634030103683472
    3. ' ^' → logprob: -2.1884031295776367
    4. '   ' → logprob: -2.6884031295776367
    5. '+' → logprob: -2.8134031295776367
    6. '&' → logprob: -2.9384031295776367
    7. ' &' → logprob: -3.8134031295776367
    8. ')' → logprob: -3.9384031295776367
    9. '>>' → logprob: -3.9384031295776367
    10. '<<' → logprob: -4.313403129577637

Token 149: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5939862132072449
    2. ' -' → logprob: -1.2189862728118896
    3. '-' → logprob: -1.9689862728118896
    4. '(-' → logprob: -4.4689860343933105
    5. '-j' → logprob: -7.7189860343933105
    6. ' (-' → logprob: -8.343986511230469
    7. '-n' → logprob: -9.593986511230469
    8. '-f' → logprob: -9.718986511230469
    9. '   ' → logprob: -9.968986511230469
    10. '-k' → logprob: -10.218986511230469

Token 150: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011224505578866228
    2. 'j' → logprob: -9.250112533569336
    3. ' i' → logprob: -11.125112533569336
    4. ')i' → logprob: -14.250112533569336
    5. '	i' → logprob: -15.250112533569336
    6. ')' → logprob: -15.375112533569336
    7. '   ' → logprob: -16.000112533569336
    8. ''i' → logprob: -16.625112533569336
    9. '-i' → logprob: -17.250112533569336
    10. '_i' → logprob: -17.875112533569336

Token 151: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01494431309401989
    2. ').' → logprob: -4.889944076538086
    3. ')
' → logprob: -5.014944076538086
    4. ')>>' → logprob: -7.889944076538086
    5. ')<<' → logprob: -9.014944076538086
    6. ')+' → logprob: -10.514944076538086
    7. ' )' → logprob: -10.639944076538086
    8. ')#' → logprob: -11.014944076538086
    9. ')i' → logprob: -11.139944076538086
    10. '   ' → logprob: -11.514944076538086

Token 152: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0004237627435941249
    2. '.bit' → logprob: -7.875423908233643
    3. ' bit' → logprob: -10.250423431396484
    4. ' ' → logprob: -13.000423431396484
    5. '_bit' → logprob: -13.875423431396484
    6. 'j' → logprob: -13.875423431396484
    7. '```' → logprob: -14.125423431396484
    8. '__' → logprob: -14.250423431396484
    9. 'item' → logprob: -14.500423431396484
    10. '-bit' → logprob: -14.875423431396484

Token 153: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.1041145626222715e-05
    2. 'length' → logprob: -11.625011444091797
    3. '_' → logprob: -13.625011444091797
    4. '_count' → logprob: -15.500011444091797
    5. '```' → logprob: -16.250011444091797
    6. '_width' → logprob: -16.375011444091797
    7. '_LENGTH' → logprob: -16.500011444091797
    8. '   ' → logprob: -16.500011444091797
    9. '_size' → logprob: -16.750011444091797
    10. '
' → logprob: -17.375011444091797

Token 154: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006751020438969135
    2. '()-' → logprob: -5.00675106048584
    3. ' ()' → logprob: -11.50675106048584
    4. '           ' → logprob: -11.63175106048584
    5. '-' → logprob: -12.50675106048584
    6. '()
' → logprob: -12.50675106048584
    7. '())' → logprob: -13.13175106048584
    8. '(' → logprob: -13.38175106048584
    9. '()+' → logprob: -13.38175106048584
    10. '            ' → logprob: -14.00675106048584

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2084556370973587
    2. '       ' → logprob: -1.7084556818008423
    3. '<|end|>' → logprob: -5.708455562591553
    4. '	       ' → logprob: -7.083455562591553
    5. '   ' → logprob: -7.208455562591553
    6. ',' → logprob: -7.333455562591553
    7. ' ' → logprob: -7.958455562591553
    8. '        ' → logprob: -8.833456039428711
    9. '               ' → logprob: -9.083456039428711
    10. '        
' → logprob: -9.333456039428711

Token 156: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7250950932502747
    2. ' print' → logprob: -1.1000950336456299
    3. 'print' (adapté à ' print') → logprob: -1.7250950336456299
    4. '       ' → logprob: -6.225095272064209
    5. '            ' → logprob: -7.100095272064209
    6. '        ' → logprob: -7.475095272064209
    7. '   ' → logprob: -8.22509479522705
    8. ' for' → logprob: -8.47509479522705
    9. ' s' → logprob: -8.85009479522705
    10. '          ' → logprob: -8.97509479522705

Token 157: '('' (ID: 706)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.1566709727048874
    2. '(' → logprob: -2.6566710472106934
    3. '('' → logprob: -3.1566710472106934
    4. '("' → logprob: -4.156671047210693
    5. '(i' → logprob: -4.156671047210693
    6. '(self' → logprob: -7.031671047210693
    7. '((' → logprob: -10.531670570373535
    8. 'f' → logprob: -11.531670570373535
    9. '(j' → logprob: -11.906670570373535
    10. '(
' → logprob: -12.031670570373535

Token 158: ' ' (ID: 220)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.3203363418579102
    2. ''' → logprob: -1.4453363418579102
    3. ' '' → logprob: -2.44533634185791
    4. ' i' → logprob: -2.44533634185791
    5. 'i' → logprob: -2.57033634185791
    6. 'f' → logprob: -2.57033634185791
    7. '(i' → logprob: -3.07033634185791
    8. '(f' → logprob: -3.57033634185791
    9. '('' → logprob: -3.69533634185791
    10. ''f' → logprob: -3.82033634185791

Token 159: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7987992763519287
    2. 'i' → logprob: -1.2987992763519287
    3. ' '' → logprob: -1.7987992763519287
    4. ''*' → logprob: -3.6737992763519287
    5. ''i' → logprob: -4.423799514770508
    6. '(i' → logprob: -4.548799514770508
    7. ' i' → logprob: -4.923799514770508
    8. '('' → logprob: -5.048799514770508
    9. '[i' → logprob: -5.048799514770508
    10. '   ' → logprob: -5.048799514770508

Token 160: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5442103743553162
    2. 'f' → logprob: -1.294210433959961
    3. ''' → logprob: -2.919210433959961
    4. ''i' → logprob: -3.294210433959961
    5. ''f' → logprob: -3.544210433959961
    6. '(i' → logprob: -5.544210433959961
    7. ''*' → logprob: -5.544210433959961
    8. 'self' → logprob: -6.044210433959961
    9. ')' → logprob: -6.544210433959961
    10. ' i' → logprob: -6.669210433959961

Token 161: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0006934931734576821
    2. 'j' → logprob: -8.125693321228027
    3. '(' → logprob: -8.250693321228027
    4. '(self' → logprob: -9.750693321228027
    5. '(i' → logprob: -10.000693321228027
    6. ' (' → logprob: -10.625693321228027
    7. '(max' → logprob: -12.375693321228027
    8. '(n' → logprob: -13.750693321228027
    9. 'self' → logprob: -14.000693321228027
    10. '(depth' → logprob: -14.625693321228027

Token 162: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17512916028499603
    2. ',' → logprob: -1.9251291751861572
    3. ' +' → logprob: -4.925128936767578
    4. '+i' → logprob: -5.675128936767578
    5. ',i' → logprob: -6.050128936767578
    6. ',end' → logprob: -6.925128936767578
    7. ' ,' → logprob: -8.050128936767578
    8. '+,' → logprob: -8.800128936767578
    9. '+'' → logprob: -9.175128936767578
    10. ')' → logprob: -10.425128936767578

Token 163: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2958758473396301
    2. 'i' → logprob: -1.4208757877349854
    3. 'f' → logprob: -4.2958760261535645
    4. ' self' → logprob: -7.9208760261535645
    5. 'j' → logprob: -8.545875549316406
    6. ' i' → logprob: -8.920875549316406
    7. 'str' → logprob: -9.670875549316406
    8. ''*' → logprob: -10.045875549316406
    9. ''i' → logprob: -10.170875549316406
    10. 'end' → logprob: -10.420875549316406

Token 164: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -8.506661833962426e-05
    2. ' .' → logprob: -10.25008487701416
    3. '.' → logprob: -10.62508487701416
    4. 'tree' → logprob: -11.00008487701416
    5. '.size' → logprob: -13.00008487701416
    6. '.i' → logprob: -13.00008487701416
    7. ').' → logprob: -13.75008487701416
    8. '.t' → logprob: -14.00008487701416
    9. '	tree' → logprob: -14.25008487701416
    10. ' tree' → logprob: -15.25008487701416

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.133198283147067e-05
    2. '[' → logprob: -10.000051498413086
    3. '[j' → logprob: -12.500051498413086
    4. ')' → logprob: -13.625051498413086
    5. ')[' → logprob: -14.500051498413086
    6. '   ' → logprob: -15.500051498413086
    7. 'i' → logprob: -16.125051498413086
    8. '[
' → logprob: -16.625051498413086
    9. ' [' → logprob: -16.750051498413086
    10. '[I' → logprob: -16.875051498413086

Token 166: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.2576454335358e-05
    2. ',' → logprob: -10.000092506408691
    3. ')
' → logprob: -10.500092506408691
    4. ' )' → logprob: -11.375092506408691
    5. '))' → logprob: -13.375092506408691
    6. '   ' → logprob: -13.500092506408691
    7. '       ' → logprob: -13.500092506408691
    8. '')' → logprob: -13.625092506408691
    9. ')")' → logprob: -14.375092506408691
    10. ',)' → logprob: -14.875092506408691

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1378975212574005
    2. 'def' → logprob: -2.262897491455078
    3. ' def' → logprob: -4.512897491455078
    4. '<|end|>' → logprob: -4.637897491455078
    5. '	def' → logprob: -7.012897491455078
    6. '
' → logprob: -7.012897491455078
    7. '    
' → logprob: -7.887897491455078
    8. '<|end|>' → logprob: -7.887897491455078
    9. ' ' → logprob: -8.387897491455078
    10. ')' → logprob: -8.512897491455078

Token 168: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1066184788942337
    2. '   ' → logprob: -2.6066184043884277
    3. '#' → logprob: -4.981618404388428
    4. '<|end|>' → logprob: -5.356618404388428
    5. ' def' → logprob: -5.606618404388428
    6. 'class' → logprob: -5.856618404388428
    7. ')' → logprob: -5.856618404388428
    8. '
' → logprob: -6.231618404388428
    9. ' ' → logprob: -6.481618404388428
    10. '    
' → logprob: -7.731618404388428

Token 169: ' lower' (ID: 6931)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.5311795473098755
    2. 'range' → logprob: -1.6561795473098755
    3. ' build' → logprob: -2.031179428100586
    4. 'query' → logprob: -2.531179428100586
    5. 'lower' → logprob: -2.781179428100586
    6. 'max' → logprob: -3.281179428100586
    7. 'clear' → logprob: -3.406179428100586
    8. 'merge' → logprob: -3.406179428100586
    9. ' query' → logprob: -3.531179428100586
    10. ' range' → logprob: -3.781179428100586

Token 170: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.007874790579080582
    2. '_' → logprob: -4.882874965667725
    3. 'bound' → logprob: -8.257874488830566
    4. ' bound' → logprob: -12.257874488830566
    5. '_bounds' → logprob: -14.132874488830566
    6. '_than' → logprob: -14.132874488830566
    7. 'Bound' → logprob: -14.507874488830566
    8. '```' → logprob: -15.007874488830566
    9. '(' → logprob: -15.507874488830566
    10. '(bound' → logprob: -15.507874488830566

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.927930654550437e-05
    2. '(' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.625029563903809
    4. 'self' → logprob: -15.375029563903809
    5. '   ' → logprob: -15.500029563903809
    6. '       ' → logprob: -17.875028610229492
    7. '(
' → logprob: -18.000028610229492
    8. ' ' → logprob: -18.000028610229492
    9. '(this' → logprob: -18.500028610229492
    10. '(s' → logprob: -19.000028610229492

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014317690394818783
    2. ' ,' → logprob: -4.264317512512207
    3. 'self' → logprob: -9.014317512512207
    4. '(self' → logprob: -10.764317512512207
    5. ',self' → logprob: -11.764317512512207
    6. '   ' → logprob: -13.014317512512207
    7. ' self' → logprob: -14.764317512512207
    8. ',
' → logprob: -15.139317512512207
    9. ',s' → logprob: -15.514317512512207
    10. '       ' → logprob: -15.514317512512207

Token 173: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3303495943546295
    2. 'w' → logprob: -1.5803495645523071
    3. 'x' → logprob: -2.7053496837615967
    4. ' self' → logprob: -5.205349445343018
    5. ' w' → logprob: -5.955349445343018
    6. ' x' → logprob: -7.955349445343018
    7. 'key' → logprob: -10.080349922180176
    8. 'val' → logprob: -10.205349922180176
    9. 'value' → logprob: -10.455349922180176
    10. 'target' → logprob: -11.330349922180176

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007291293237358332
    2. '):
' → logprob: -5.132291316986084
    3. ',' → logprob: -6.882291316986084
    4. 'self' → logprob: -8.507290840148926
    5. '   ' → logprob: -10.007290840148926
    6. ' ):' → logprob: -10.257290840148926
    7. '       ' → logprob: -10.632290840148926
    8. ')' → logprob: -11.257290840148926
    9. '):
' → logprob: -11.632290840148926
    10. ':' → logprob: -12.382290840148926

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015963915502652526
    2. 'i' → logprob: -7.376596450805664
    3. '   ' → logprob: -7.501596450805664
    4. ' i' → logprob: -7.876596450805664
    5. 'pos' → logprob: -11.126596450805664
    6. '    ' → logprob: -12.251596450805664
    7. 'def' → logprob: -12.626596450805664
    8. 'idx' → logprob: -13.251596450805664
    9. 's' → logprob: -13.501596450805664
    10. 'index' → logprob: -13.626596450805664

Token 176: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0708206295967102
    2. 'idx' → logprob: -2.8208205699920654
    3. 'i' → logprob: -4.8208208084106445
    4. '   ' → logprob: -7.8208208084106445
    5. '       ' → logprob: -8.945820808410645
    6. 'index' → logprob: -9.695820808410645
    7. ' pos' → logprob: -9.695820808410645
    8. 's' → logprob: -10.445820808410645
    9. 'ans' → logprob: -10.570820808410645
    10. 'res' → logprob: -10.945820808410645

Token 177: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3880884647369385
    2. ' =' → logprob: -1.1380884647369385
    3. '_' → logprob: -7.263088226318359
    4. '_=' → logprob: -8.26308822631836
    5. ',' → logprob: -9.01308822631836
    6. ' ' → logprob: -10.63808822631836
    7. 'idx' → logprob: -10.88808822631836
    8. '_idx' → logprob: -11.13808822631836
    9. 'index' → logprob: -11.13808822631836
    10. '   ' → logprob: -11.38808822631836

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387053906917572
    2. ' =' → logprob: -1.1370539665222168
    3. ',' → logprob: -8.762053489685059
    4. ' ' → logprob: -10.887053489685059
    5. 's' → logprob: -12.512053489685059
    6. '   ' → logprob: -13.512053489685059
    7. ' s' → logprob: -14.637053489685059
    8. ' ,' → logprob: -15.012053489685059
    9. '  ' → logprob: -15.637053489685059
    10. '=s' → logprob: -15.637053489685059

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. '０' → logprob: -21.125123977661133
    5. '۰' → logprob: -21.250123977661133
    6. '  ' → logprob: -21.375123977661133
    7. 'pos' → logprob: -21.875123977661133
    8. '    ' → logprob: -22.125123977661133
    9. '=' → logprob: -22.125123977661133
    10. '       ' → logprob: -22.500123977661133

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.3750057220459
    4. 'pos' → logprob: -20.5000057220459
    5. '０' → logprob: -21.1250057220459
    6. '۰' → logprob: -21.8750057220459
    7. '=' → logprob: -22.1250057220459
    8. '```' → logprob: -22.2500057220459
    9. 'result' → logprob: -23.5000057220459
    10. 'idx' → logprob: -23.6250057220459

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026244908571243286
    2. 'pos' → logprob: -4.1512451171875
    3. ' pos' → logprob: -5.7762451171875
    4. ',' → logprob: -5.7762451171875
    5. ' and' → logprob: -6.7762451171875
    6. '   ' → logprob: -7.5262451171875
    7. 'idx' → logprob: -7.6512451171875
    8. 'index' → logprob: -7.7762451171875
    9. ',pos' → logprob: -7.7762451171875
    10. ' index' → logprob: -7.9012451171875

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09569133818149567
    2. 'pos' → logprob: -2.845691442489624
    3. ' pos' → logprob: -3.470691442489624
    4. '   ' → logprob: -7.220691204071045
    5. ',pos' → logprob: -7.720691204071045
    6. 'index' → logprob: -8.345691680908203
    7. ',' → logprob: -8.845691680908203
    8. 'idx' → logprob: -8.845691680908203
    9. 'i' → logprob: -9.095691680908203
    10. ' index' → logprob: -9.345691680908203

Token 183: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -6.706686690449715e-05
    2. 'i' → logprob: -10.125066757202148
    3. 'idx' → logprob: -11.125066757202148
    4. ' pos' → logprob: -11.375066757202148
    5. 'k' → logprob: -14.750066757202148
    6. 'mask' → logprob: -16.00006675720215
    7. '   ' → logprob: -16.25006675720215
    8. 'ipos' → logprob: -16.50006675720215
    9. 'index' → logprob: -17.25006675720215
    10. 'position' → logprob: -17.62506675720215

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142124593257904
    2. '=' → logprob: -1.7014212608337402
    3. ' ' → logprob: -11.826420783996582
    4. '   ' → logprob: -15.451420783996582
    5. '    ' → logprob: -15.826420783996582
    6. '  ' → logprob: -16.5764217376709
    7. '```' → logprob: -16.7014217376709
    8. ' +=' → logprob: -16.9514217376709
    9. ',' → logprob: -16.9514217376709
    10. ' <<=' → logprob: -17.3264217376709

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.87502670288086
    4. '۰' → logprob: -19.75002670288086
    5. '000' → logprob: -20.25002670288086
    6. '```' → logprob: -20.25002670288086
    7. '  ' → logprob: -20.62502670288086
    8. '00' → logprob: -21.25002670288086
    9. '=' → logprob: -21.31252670288086
    10. '０' → logprob: -22.25002670288086

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -19.375
    4. '۰' → logprob: -21.75
    5. '   ' → logprob: -22.0
    6. '000' → logprob: -22.25
    7. 'self' → logprob: -23.375
    8. '０' → logprob: -23.5
    9. '00' → logprob: -23.625
    10. '  ' → logprob: -23.875

Token 187: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020283881574869156
    2. ' for' → logprob: -4.0202836990356445
    3. 'for' → logprob: -6.2702836990356445
    4. '
' → logprob: -9.145283699035645
    5. '   ' → logprob: -9.520283699035645
    6. '        
' → logprob: -10.395283699035645
    7. ' bit' → logprob: -12.020283699035645
    8. '        ' → logprob: -12.395283699035645
    9. '    ' → logprob: -12.895283699035645
    10. ',' → logprob: -13.145283699035645

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015688715502619743
    2. ' for' → logprob: -4.265688896179199
    3. 'for' → logprob: -6.515688896179199
    4. '   ' → logprob: -10.1406888961792
    5. '        
' → logprob: -13.7656888961792
    6. '        ' → logprob: -14.6406888961792
    7. '      ' → logprob: -14.7656888961792
    8. '	for' → logprob: -14.7656888961792
    9. '           ' → logprob: -14.8906888961792
    10. '    ' → logprob: -15.1406888961792

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010836162604391575
    2. ' for' → logprob: -4.760836124420166
    3. '   ' → logprob: -6.635836124420166
    4. 'i' → logprob: -7.510836124420166
    5. '       ' → logprob: -8.135836601257324
    6. 'k' → logprob: -10.635836601257324
    7. ' i' → logprob: -10.760836601257324
    8. 'd' → logprob: -11.885836601257324
    9. ' ' → logprob: -12.135836601257324
    10. 'bit' → logprob: -12.260836601257324

Token 190: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28532516956329346
    2. 'd' → logprob: -1.5353251695632935
    3. ' i' → logprob: -3.785325050354004
    4. 'k' → logprob: -4.910325050354004
    5. ' d' → logprob: -5.910325050354004
    6. ' k' → logprob: -10.410325050354004
    7. 'j' → logprob: -11.410325050354004
    8. 'shift' → logprob: -12.285325050354004
    9. 'depth' → logprob: -12.410325050354004
    10. 'bit' → logprob: -12.660325050354004

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019473218126222491
    2. 'in' → logprob: -6.251947402954102
    3. 's' → logprob: -12.126947402954102
    4. ' =' → logprob: -12.626947402954102
    5. ' ' → logprob: -12.751947402954102
    6. '=' → logprob: -12.751947402954102
    7. 'n' → logprob: -13.501947402954102
    8. '   ' → logprob: -14.376947402954102
    9. ',' → logprob: -15.126947402954102
    10. 'd' → logprob: -15.376947402954102

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3887813687324524
    2. 're' → logprob: -1.1387813091278076
    3. ' reversed' → logprob: -6.388781547546387
    4. ' range' → logprob: -8.388781547546387
    5. '[' → logprob: -14.513781547546387
    6. 'reverse' → logprob: -15.888781547546387
    7. 'self' → logprob: -17.01378059387207
    8. '   ' → logprob: -17.26378059387207
    9. '[::-' → logprob: -17.26378059387207
    10. '(range' → logprob: -17.51378059387207

Token 193: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01112009584903717
    2. 'self' → logprob: -4.511120319366455
    3. ' self' → logprob: -10.511119842529297
    4. '(' → logprob: -11.511119842529297
    5. '[self' → logprob: -11.886119842529297
    6. 's' → logprob: -12.011119842529297
    7. '=self' → logprob: -12.261119842529297
    8. '   ' → logprob: -12.511119842529297
    9. ' (' → logprob: -12.511119842529297
    10. '
' → logprob: -12.886119842529297

Token 194: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0016637545777484775
    2. 'depth' → logprob: -6.501663684844971
    3. 'self' → logprob: -9.376664161682129
    4. '.size' → logprob: -10.751664161682129
    5. ' .' → logprob: -11.001664161682129
    6. '       ' → logprob: -11.501664161682129
    7. '   ' → logprob: -11.876664161682129
    8. '.level' → logprob: -12.376664161682129
    9. '.' → logprob: -12.751664161682129
    10. ' ' → logprob: -12.876664161682129

Token 195: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.820547878742218
    2. ',' → logprob: -0.945547878742218
    3. '-' → logprob: -1.9455478191375732
    4. ' ,' → logprob: -3.5705478191375732
    5. ',-' → logprob: -8.570548057556152
    6. '   ' → logprob: -9.820548057556152
    7. ' ' → logprob: -11.320548057556152
    8. '    ' → logprob: -11.820548057556152
    9. '  ' → logprob: -11.945548057556152
    10. ' -,' → logprob: -12.195548057556152

Token 196: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004886920796707273
    2. ' -' → logprob: -7.625488758087158
    3. '0' → logprob: -14.75048828125
    4. '
' → logprob: -16.62548828125
    5. ' ' → logprob: -16.62548828125
    6. '   ' → logprob: -17.12548828125
    7. '  ' → logprob: -17.87548828125
    8. '    ' → logprob: -19.25048828125
    9. '−' → logprob: -19.25048828125
    10. '```' → logprob: -20.12548828125

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. ' -' → logprob: -16.250003814697266
    4. '
' → logprob: -16.375003814697266
    5. '-' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '  ' → logprob: -17.000003814697266
    8. '

' → logprob: -17.625003814697266
    9. '```' → logprob: -18.312503814697266
    10. '１' → logprob: -18.562503814697266

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15460582077503204
    2. '-' → logprob: -2.7796058654785156
    3. ',-' → logprob: -2.7796058654785156
    4. ' -' → logprob: -4.154605865478516
    5. ' ,' → logprob: -5.904605865478516
    6. '       ' → logprob: -8.529605865478516
    7. ',
' → logprob: -8.529605865478516
    8. ' ,-' → logprob: -9.279605865478516
    9. '   ' → logprob: -9.779605865478516
    10. '):
' → logprob: -10.029605865478516

Token 199: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007105246186256409
    2. ' -' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.250710487365723
    4. '1' → logprob: -16.00071144104004
    5. ' ' → logprob: -16.50071144104004
    6. '  ' → logprob: -16.50071144104004
    7. '       ' → logprob: -17.87571144104004
    8. '```' → logprob: -18.25071144104004
    9. '
' → logprob: -18.75071144104004
    10. ')' → logprob: -19.12571144104004

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.375
    4. '
' → logprob: -19.25
    5. '  ' → logprob: -19.625
    6. ',' → logprob: -20.625
    7. ')' → logprob: -20.75
    8. '```' → logprob: -20.875
    9. '１' → logprob: -21.625
    10. '0' → logprob: -21.75

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17147991061210632
    2. '):
' → logprob: -1.9214799404144287
    3. ' ):' → logprob: -5.17147970199585
    4. ',' → logprob: -6.42147970199585
    5. '       ' → logprob: -6.92147970199585
    6. '1' → logprob: -6.92147970199585
    7. ' ):
' → logprob: -7.29647970199585
    8. '   ' → logprob: -7.54647970199585
    9. '-' → logprob: -7.79647970199585
    10. ':' → logprob: -9.671480178833008

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03315143659710884
    2. '1' → logprob: -4.408151626586914
    3. '        ' → logprob: -5.158151626586914
    4. '    ' → logprob: -5.158151626586914
    5. '       ' → logprob: -5.408151626586914
    6. '   ' → logprob: -6.533151626586914
    7. ' ' → logprob: -6.908151626586914
    8. ' if' → logprob: -8.283151626586914
    9. '
' → logprob: -8.533151626586914
    10. '            ' → logprob: -8.533151626586914

Token 203: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.49621036648750305
    2. 'k' (adapté à ' k') → logprob: -1.8712103366851807
    3. '           ' → logprob: -2.1212103366851807
    4. ' bit' → logprob: -2.7462103366851807
    5. 'bit' → logprob: -3.8712103366851807
    6. ' step' → logprob: -4.87121057510376
    7. ' next' → logprob: -4.87121057510376
    8. 'step' → logprob: -5.74621057510376
    9. ' mask' → logprob: -5.87121057510376
    10. ' shift' → logprob: -6.62121057510376

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28137800097465515
    2. '=' → logprob: -1.4063780307769775
    3. ' ' → logprob: -8.656377792358398
    4. '   ' → logprob: -10.906377792358398
    5. '1' → logprob: -11.156377792358398
    6. ' <<=' → logprob: -11.531377792358398
    7. '  ' → logprob: -12.781377792358398
    8. 'c' → logprob: -13.281377792358398
    9. 'w' → logprob: -13.281377792358398
    10. 'p' → logprob: -14.656377792358398

Token 205: ' pos' (ID: 1253)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01117314025759697
    2. 'pos' → logprob: -4.511173248291016
    3. ' ' → logprob: -9.136173248291016
    4. ' pos' → logprob: -11.386173248291016
    5. '(' → logprob: -12.261173248291016
    6. '(pos' → logprob: -13.761173248291016
    7. '   ' → logprob: -15.136173248291016
    8. ' (' → logprob: -16.636173248291016
    9. '[pos' → logprob: -17.011173248291016
    10. '  ' → logprob: -17.261173248291016

Token 206: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3872068226337433
    2. '+' → logprob: -1.137206792831421
    3. '+(' → logprob: -8.63720703125
    4. '|' → logprob: -9.26220703125
    5. ' |' → logprob: -9.76220703125
    6. ' ' → logprob: -13.13720703125
    7. ' +(' → logprob: -14.26220703125
    8. '   ' → logprob: -14.38720703125
    9. '+i' → logprob: -14.76220703125
    10. '+k' → logprob: -14.88720703125

Token 207: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.253090865968261e-06
    2. '1' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.875009536743164
    4. '[' → logprob: -16.375009536743164
    5. '(i' → logprob: -16.500009536743164
    6. '((' → logprob: -16.875009536743164
    7. '   ' → logprob: -17.125009536743164
    8. ' ' → logprob: -18.500009536743164
    9. '```' → logprob: -18.500009536743164
    10. '{' → logprob: -18.750009536743164

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -18.875
    4. '   ' → logprob: -19.625
    5. '(' → logprob: -19.75
    6. '```' → logprob: -21.5
    7. '2' → logprob: -23.0
    8. '[' → logprob: -23.125
    9. '' → logprob: -23.125
    10. '0' → logprob: -23.25

Token 209: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.005936621222645044
    2. ' <<' → logprob: -5.130936622619629
    3. '<' → logprob: -11.880936622619629
    4. '<<<' → logprob: -14.630936622619629
    5. '<<(' → logprob: -15.630936622619629
    6. ')<<' → logprob: -16.380935668945312
    7. ')' → logprob: -16.505935668945312
    8. '&lt' → logprob: -16.630935668945312
    9. '1' → logprob: -17.005935668945312
    10. '()<<' → logprob: -17.255935668945312

Token 210: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.542423165636137e-05
    2. ' i' → logprob: -9.375085830688477
    3. ')i' → logprob: -14.750085830688477
    4. '	i' → logprob: -16.625085830688477
    5. '*i' → logprob: -17.625085830688477
    6. '(i' → logprob: -18.375085830688477
    7. '{i' → logprob: -18.750085830688477
    8. '%i' → logprob: -18.875085830688477
    9. ',i' → logprob: -19.000085830688477
    10. '$i' → logprob: -19.125085830688477

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936008334159851
    2. ')
' → logprob: -0.6936008334159851
    3. ' )
' → logprob: -7.943600654602051
    4. ' )' → logprob: -9.31860065460205
    5. ')
' → logprob: -12.94360065460205
    6. ')

' → logprob: -13.56860065460205
    7. '           ' → logprob: -13.81860065460205
    8. ')>
' → logprob: -14.31860065460205
    9. '):
' → logprob: -14.56860065460205
    10. ')>' → logprob: -14.69360065460205

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2182127833366394
    2. '<|end|>' → logprob: -1.8432128429412842
    3. ' if' → logprob: -4.343212604522705
    4. ' ' → logprob: -4.843212604522705
    5. '       ' → logprob: -5.468212604522705
    6. '<|end|>' → logprob: -5.968212604522705
    7. ':' → logprob: -6.093212604522705
    8. '
' → logprob: -6.718212604522705
    9. ' 
' → logprob: -6.718212604522705
    10. '            
' → logprob: -7.093212604522705

Token 213: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5831294059753418
    2. 'if' (adapté à ' if') → logprob: -0.8331294059753418
    3. '           ' → logprob: -5.083129405975342
    4. '<|end|>' → logprob: -7.333129405975342
    5. ' ' → logprob: -8.5831298828125
    6. '
' → logprob: -10.3331298828125
    7. '<|end|>' → logprob: -11.7081298828125
    8. '            ' → logprob: -11.7081298828125
    9. '       ' → logprob: -11.8331298828125
    10. 'If' → logprob: -11.9581298828125

Token 214: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02324967086315155
    2. ' k' → logprob: -3.773249626159668
    3. ' ' → logprob: -13.398249626159668
    4. '	k' → logprob: -13.398249626159668
    5. '   ' → logprob: -14.773249626159668
    6. '  ' → logprob: -15.523249626159668
    7. '(k' → logprob: -15.898249626159668
    8. 'x' → logprob: -16.398250579833984
    9. 'self' → logprob: -16.523250579833984
    10. '<' → logprob: -16.523250579833984

Token 215: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25194522738456726
    2. ' <=' → logprob: -1.5019452571868896
    3. '<' → logprob: -11.376945495605469
    4. ')<=' → logprob: -13.501945495605469
    5. ' <' → logprob: -13.876945495605469
    6. '<size' → logprob: -14.501945495605469
    7. '=' → logprob: -15.001945495605469
    8. ']<=' → logprob: -15.126945495605469
    9. '[' → logprob: -15.251945495605469
    10. '<|end|>' → logprob: -15.376945495605469

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '
' → logprob: -18.875158309936523
    4. '   ' → logprob: -19.875158309936523
    5. '       ' → logprob: -20.125158309936523
    6. '=self' → logprob: -21.375158309936523
    7. '(self' → logprob: -21.375158309936523
    8. '	self' → logprob: -21.625158309936523
    9. '[self' → logprob: -22.500158309936523
    10. '           ' → logprob: -22.875158309936523

Token 217: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.693252444267273
    2. '.size' → logprob: -0.693252444267273
    3. ' size' → logprob: -9.193252563476562
    4. '<size' → logprob: -13.318252563476562
    5. ':size' → logprob: -13.818252563476562
    6. '	size' → logprob: -15.318252563476562
    7. '_size' → logprob: -15.818252563476562
    8. ',size' → logprob: -16.068252563476562
    9. 'self' → logprob: -16.193252563476562
    10. '=size' → logprob: -16.568252563476562

Token 218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858873412013054
    2. 'and' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.173588752746582
    4. '   ' → logprob: -15.298588752746582
    5. '    ' → logprob: -15.423588752746582
    6. '  ' → logprob: -16.798587799072266
    7. '           ' → logprob: -17.048587799072266
    8. '	and' → logprob: -17.173587799072266
    9. '          ' → logprob: -17.298587799072266
    10. '        ' → logprob: -17.298587799072266

Token 219: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00046081675100140274
    2. ' sum' → logprob: -8.000460624694824
    3. 'self' → logprob: -9.000460624694824
    4. '(sum' → logprob: -13.750460624694824
    5. '   ' → logprob: -14.500460624694824
    6. 's' → logprob: -16.12546157836914
    7. '	sum' → logprob: -16.50046157836914
    8. ' ' → logprob: -17.00046157836914
    9. '  ' → logprob: -17.00046157836914
    10. ' self' → logprob: -17.25046157836914

Token 220: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.931863051955588e-05
    2. '+' → logprob: -10.125059127807617
    3. ' +' → logprob: -11.000059127807617
    4. '_[' → logprob: -13.875059127807617
    5. '_
' → logprob: -14.125059127807617
    6. '_<' → logprob: -15.000059127807617
    7. '_

' → logprob: -16.000059127807617
    8. '_
' → logprob: -16.375059127807617
    9. '_=' → logprob: -16.500059127807617
    10. '   ' → logprob: -16.625059127807617

Token 221: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07709125429391861
    2. ' +' → logprob: -3.0770912170410156
    3. '+x' → logprob: -3.5770912170410156
    4. '+k' → logprob: -9.202091217041016
    5. '<' → logprob: -10.827091217041016
    6. '+i' → logprob: -12.452091217041016
    7. '+s' → logprob: -12.702091217041016
    8. '+c' → logprob: -12.827091217041016
    9. '+a' → logprob: -13.202091217041016
    10. '+j' → logprob: -13.452091217041016

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002619318547658622
    2. ' self' → logprob: -8.250262260437012
    3. '[self' → logprob: -15.375262260437012
    4. '(self' → logprob: -15.500262260437012
    5. '=self' → logprob: -16.875261306762695
    6. '           ' → logprob: -17.125261306762695
    7. '	self' → logprob: -17.125261306762695
    8. '       ' → logprob: -17.375261306762695
    9. '   ' → logprob: -17.375261306762695
    10. '
' → logprob: -17.500261306762695

Token 223: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00034893216798081994
    2. 'tree' → logprob: -8.000349044799805
    3. '.' → logprob: -12.000349044799805
    4. ' .' → logprob: -12.125349044799805
    5. '	tree' → logprob: -14.125349044799805
    6. ' tree' → logprob: -14.250349044799805
    7. 'Tree' → logprob: -16.125349044799805
    8. '
' → logprob: -16.625349044799805
    9. '[' → logprob: -16.625349044799805
    10. '.t' → logprob: -17.250349044799805

Token 224: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'k' → logprob: -16.125
    4. '[
' → logprob: -17.75
    5. '(k' → logprob: -19.25
    6. '[j' → logprob: -19.5
    7. '{k' → logprob: -20.125
    8. '[i' → logprob: -20.25
    9. ' [' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 225: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759842991828918
    2. '<' → logprob: -0.8259842991828918
    3. '<x' → logprob: -10.450984001159668
    4. ' ' → logprob: -12.200984001159668
    5. '<n' → logprob: -13.200984001159668
    6. '[' → logprob: -14.075984001159668
    7. '<th' → logprob: -14.200984001159668
    8. '<num' → logprob: -14.200984001159668
    9. '<len' → logprob: -14.325984001159668
    10. '<w' → logprob: -14.450984001159668

Token 226: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07900776714086533
    2. ' <' → logprob: -2.579007863998413
    3. '<x' → logprob: -9.079008102416992
    4. 'x' → logprob: -13.579008102416992
    5. ' ' → logprob: -14.079008102416992
    6. '<int' → logprob: -14.954008102416992
    7. '<len' → logprob: -15.329008102416992
    8. '[' → logprob: -15.454008102416992
    9. '<n' → logprob: -15.829008102416992
    10. '<data' → logprob: -15.954008102416992

Token 227: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '
' → logprob: -16.631715774536133
    4. '	x' → logprob: -17.256715774536133
    5. ' ' → logprob: -19.506715774536133
    6. '   ' → logprob: -19.631715774536133
    7. ')x' → logprob: -21.256715774536133
    8. '       ' → logprob: -22.006715774536133
    9. '>x' → logprob: -22.006715774536133
    10. '=x' → logprob: -22.131715774536133

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31327077746391296
    2. ':
' → logprob: -1.3132708072662354
    3. ':
' → logprob: -12.938270568847656
    4. '):
' → logprob: -13.063270568847656
    5. ' :
' → logprob: -13.063270568847656
    6. ' :' → logprob: -14.188270568847656
    7. ':

' → logprob: -14.188270568847656
    8. '):' → logprob: -14.438270568847656
    9. '           ' → logprob: -15.063270568847656
    10. ',' → logprob: -16.938270568847656

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012749579036608338
    2. '                
' → logprob: -9.875127792358398
    3. '           ' → logprob: -10.750127792358398
    4. '```' → logprob: -11.000127792358398
    5. '
' → logprob: -11.625127792358398
    6. ' sum' → logprob: -11.625127792358398
    7. 'sum' → logprob: -12.625127792358398
    8. '              ' → logprob: -12.750127792358398
    9. ':
' → logprob: -12.875127792358398
    10. '``' → logprob: -13.125127792358398

Token 230: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7145385146141052
    2. ' pos' → logprob: -1.58953857421875
    3. 'pos' → logprob: -1.83953857421875
    4. 'sum' (adapté à ' sum') → logprob: -1.96453857421875
    5. '                   ' → logprob: -5.08953857421875
    6. '               ' → logprob: -6.96453857421875
    7. '   ' → logprob: -8.21453857421875
    8. '
' → logprob: -10.83953857421875
    9. '           ' → logprob: -10.96453857421875
    10. ' ' → logprob: -11.08953857421875

Token 231: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.702754474943504e-05
    2. '+=' → logprob: -10.62503719329834
    3. ' +=' → logprob: -11.62503719329834
    4. '+' → logprob: -13.75003719329834
    5. '_,' → logprob: -13.87503719329834
    6. '_=' → logprob: -14.00003719329834
    7. '            ' → logprob: -15.50003719329834
    8. '        ' → logprob: -15.62503719329834
    9. ' ' → logprob: -16.500036239624023
    10. '    ' → logprob: -16.625036239624023

Token 232: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759491324424744
    2. '+=' → logprob: -0.8259491324424744
    3. '   ' → logprob: -13.200948715209961
    4. ',' → logprob: -13.325948715209961
    5. '=' → logprob: -13.575948715209961
    6. '           ' → logprob: -13.700948715209961
    7. ']+=' → logprob: -13.825948715209961
    8. '+' → logprob: -14.450948715209961
    9. '       ' → logprob: -14.575948715209961
    10. ' ' → logprob: -14.950948715209961

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00523837935179472
    2. ' self' → logprob: -5.2552385330200195
    3. '
' → logprob: -13.38023853302002
    4. '               ' → logprob: -14.25523853302002
    5. '           ' → logprob: -14.25523853302002
    6. '[self' → logprob: -14.38023853302002
    7. '(self' → logprob: -14.63023853302002
    8. '	self' → logprob: -15.25523853302002
    9. '       ' → logprob: -15.88023853302002
    10. '   ' → logprob: -16.130237579345703

Token 234: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0007111206650733948
    2. 'tree' → logprob: -7.250710964202881
    3. '	tree' → logprob: -14.500711441040039
    4. '.' → logprob: -14.750711441040039
    5. ' .' → logprob: -15.500711441040039
    6. ' tree' → logprob: -16.75071144104004
    7. '```' → logprob: -18.75071144104004
    8. '.table' → logprob: -18.87571144104004
    9. '[' → logprob: -19.12571144104004
    10. '   ' → logprob: -19.37571144104004

Token 235: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. 'k' → logprob: -15.75
    3. '[' → logprob: -17.375
    4. ' k' → logprob: -19.875
    5. ',k' → logprob: -20.125
    6. ' [' → logprob: -20.625
    7. '[i' → logprob: -20.75
    8. '(k' → logprob: -20.75
    9. '   ' → logprob: -21.125
    10. '[j' → logprob: -21.375

Token 236: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005715708248317242
    2. ',' → logprob: -6.005715847015381
    3. '
' → logprob: -6.130715847015381
    4. '           ' → logprob: -7.880715847015381
    5. '<|end|>' → logprob: -8.130715370178223
    6. '                
' → logprob: -9.255715370178223
    7. ')' → logprob: -9.380715370178223
    8. ')
' → logprob: -9.755715370178223
    9. ',k' → logprob: -10.630715370178223
    10. '                   ' → logprob: -11.005715370178223

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003143704670947045
    2. 'pos' → logprob: -8.250314712524414
    3. ' pos' → logprob: -10.375314712524414
    4. '```' → logprob: -11.125314712524414
    5. ',pos' → logprob: -12.750314712524414
    6. '``' → logprob: -14.000314712524414
    7. '                
' → logprob: -14.375314712524414
    8. '                   ' → logprob: -14.625314712524414
    9. '              ' → logprob: -14.750314712524414
    10. ',' → logprob: -15.000314712524414

Token 238: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.003178782993927598
    2. ' pos' → logprob: -5.753178596496582
    3. '               ' → logprob: -13.753178596496582
    4. 'position' → logprob: -19.2531795501709
    5. '	pos' → logprob: -19.5031795501709
    6. ',pos' → logprob: -20.0031795501709
    7. '           ' → logprob: -20.5031795501709
    8. '[pos' → logprob: -21.3781795501709
    9. '                   ' → logprob: -21.5031795501709
    10. '_pos' → logprob: -21.6281795501709

Token 239: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759446620941162
    2. '=' → logprob: -0.8259446620941162
    3. ' +=' → logprob: -12.325944900512695
    4. '+=' → logprob: -14.200944900512695
    5. '=k' → logprob: -16.825944900512695
    6. ' ' → logprob: -17.075944900512695
    7. '＝' → logprob: -18.075944900512695
    8. '.=' → logprob: -18.450944900512695
    9. ' |=' → logprob: -18.575944900512695
    10. ' =
' → logprob: -18.575944900512695

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026649541687220335
    2. '(' → logprob: -6.002665042877197
    3. ' ' → logprob: -8.627664566040039
    4. ' (' → logprob: -11.502664566040039
    5. 'k' → logprob: -16.37766456604004
    6. '```' → logprob: -18.00266456604004
    7. '(k' → logprob: -18.25266456604004
    8. '`' → logprob: -19.12766456604004
    9. '   ' → logprob: -19.50266456604004
    10. '[' → logprob: -20.25266456604004

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005237906239926815
    2. '(' → logprob: -5.255238056182861
    3. ' ' → logprob: -12.630237579345703
    4. ' (' → logprob: -14.255237579345703
    5. 'k' → logprob: -18.130237579345703
    6. '```' → logprob: -18.755237579345703
    7. '(k' → logprob: -19.630237579345703
    8. '   ' → logprob: -19.880237579345703
    9. '`' → logprob: -19.880237579345703
    10. '
' → logprob: -20.005237579345703

Token 242: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.021165110170841217
    2. ' <<' → logprob: -3.896165132522583
    3. '(' → logprob: -8.396164894104004
    4. 'k' → logprob: -8.771164894104004
    5. '<<(' → logprob: -8.771164894104004
    6. '<' → logprob: -10.396164894104004
    7. ' (' → logprob: -11.396164894104004
    8. '1' → logprob: -11.771164894104004
    9. '(k' → logprob: -11.771164894104004
    10. '```' → logprob: -11.771164894104004

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -17.750009536743164
    4. '	i' → logprob: -18.000009536743164
    5. '```' → logprob: -20.625009536743164
    6. '<|end|>' → logprob: -21.125009536743164
    7. '*i' → logprob: -21.125009536743164
    8. '
' → logprob: -21.125009536743164
    9. '(i' → logprob: -21.500009536743164
    10. '_i' → logprob: -21.750009536743164

Token 244: '
' (ID: 198)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.021800996735692024
    2. '               ' → logprob: -4.396800994873047
    3. '           ' → logprob: -5.271800994873047
    4. ' k' → logprob: -6.021800994873047
    5. '<|end|>' → logprob: -7.021800994873047
    6. '                   ' → logprob: -8.771800994873047
    7. '              ' → logprob: -9.271800994873047
    8. ',k' → logprob: -9.396800994873047
    9. '          ' → logprob: -9.521800994873047
    10. '```' → logprob: -9.771800994873047

Token 245: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7060133814811707
    2. '<|end|>' → logprob: -1.4560134410858154
    3. '       ' → logprob: -1.9560134410858154
    4. 'k' → logprob: -3.2060134410858154
    5. '```' → logprob: -3.5810134410858154
    6. ')' → logprob: -4.206013202667236
    7. 'return' → logprob: -4.206013202667236
    8. '               ' → logprob: -4.331013202667236
    9. '          ' → logprob: -5.456013202667236
    10. 'else' → logprob: -5.956013202667236

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02279125526547432
    2. '       ' → logprob: -4.397791385650635
    3. 'pos' → logprob: -5.022791385650635
    4. ' return' → logprob: -5.772791385650635
    5. '   ' → logprob: -8.772790908813477
    6. '           ' → logprob: -8.772790908813477
    7. '
' → logprob: -9.147790908813477
    8. '```' → logprob: -10.522790908813477
    9. '        
' → logprob: -10.897790908813477
    10. ' ' → logprob: -11.647790908813477

Token 247: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002613358374219388
    2. ' pos' → logprob: -8.250261306762695
    3. '(pos' → logprob: -20.875261306762695
    4. '	pos' → logprob: -21.375261306762695
    5. '   ' → logprob: -21.750261306762695
    6. 'post' → logprob: -23.500261306762695
    7. '[pos' → logprob: -23.500261306762695
    8. '_pos' → logprob: -23.750261306762695
    9. 'p' → logprob: -24.375261306762695
    10. 'pose' → logprob: -24.625261306762695

Token 248: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.750036239624023
    4. '0' → logprob: -18.125036239624023
    5. '   ' → logprob: -18.875036239624023
    6. '  ' → logprob: -20.000036239624023
    7. 'def' → logprob: -20.625036239624023
    8. '`' → logprob: -20.687536239624023
    9. '
' → logprob: -20.812536239624023
    10. '<|end|>' → logprob: -20.937536239624023

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.875
    4. '0' → logprob: -18.125
    5. '`' → logprob: -20.75
    6. '<|end|>' → logprob: -20.9375
    7. '１' → logprob: -21.0
    8. '   ' → logprob: -21.25
    9. '
' → logprob: -21.75
    10. '۱' → logprob: -21.9375

Token 251: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' sum' (ID: 4215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '_

' (ID: 44557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6889206171035767
    2. '=' → logprob: -0.8139206171035767
    3. '.' → logprob: -4.063920497894287
    4. ',' → logprob: -4.438920497894287
    5. '   ' → logprob: -4.813920497894287
    6. ')' → logprob: -5.188920497894287
    7. ' ' → logprob: -5.563920497894287
    8. ' .' → logprob: -6.313920497894287
    9. ':' → logprob: -6.563920497894287
    10. '<|end|>' → logprob: -6.563920497894287

Token 256: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.079520344734192
    2. 'k' → logprob: -1.204520344734192
    3. 'm' → logprob: -1.204520344734192
    4. 'a' → logprob: -3.4545202255249023
    5. 'x' → logprob: -4.579520225524902
    6. 'Q' → logprob: -5.579520225524902
    7. ' q' → logprob: -6.204520225524902
    8. 'K' → logprob: -6.329520225524902
    9. ' k' → logprob: -6.579520225524902
    10. 'A' → logprob: -6.704520225524902

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38701143860816956
    2. ' =' → logprob: -1.1370114088058472
    3. ',' → logprob: -8.887011528015137
    4. '=input' → logprob: -13.637011528015137
    5. ' ' → logprob: -14.137011528015137
    6. ' =
' → logprob: -16.51201057434082
    7. ' ,' → logprob: -16.63701057434082
    8. '=int' → logprob: -16.76201057434082
    9. '=

' → logprob: -17.13701057434082
    10. '=
' → logprob: -17.88701057434082

Token 258: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06198202446103096
    2. ' map' → logprob: -2.8119819164276123
    3. '0' → logprob: -12.561982154846191
    4. '[' → logprob: -12.936982154846191
    5. 'list' → logprob: -13.061982154846191
    6. ' ' → logprob: -13.186982154846191
    7. 'input' → logprob: -13.936982154846191
    8. '	map' → logprob: -14.186982154846191
    9. 'm' → logprob: -14.311982154846191
    10. '5' → logprob: -14.561982154846191

Token 259: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007803229382261634
    2. 'int' → logprob: -7.37578010559082
    3. '(str' → logprob: -9.62578010559082
    4. '(input' → logprob: -9.87578010559082
    5. '(' → logprob: -10.87578010559082
    6. 'input' → logprob: -11.25078010559082
    7. '[int' → logprob: -13.12578010559082
    8. 'str' → logprob: -14.12578010559082
    9. '=int' → logprob: -14.12578010559082
    10. '(
' → logprob: -15.37578010559082

Token 260: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.621022641658783
    2. ',input' → logprob: -1.6210227012634277
    3. '(input' → logprob: -2.1210227012634277
    4. '().' → logprob: -3.2460227012634277
    5. '(),' → logprob: -3.3710227012634277
    6. ',' → logprob: -3.4960227012634277
    7. '()' → logprob: -3.8710227012634277
    8. '=input' → logprob: -4.621022701263428
    9. ' input' → logprob: -4.746022701263428
    10. '(' → logprob: -6.746022701263428

Token 261: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078758880496025
    2. ' input' → logprob: -5.5040788650512695
    3. 'int' → logprob: -15.50407886505127
    4. 'str' → logprob: -16.504077911376953
    5. ' ' → logprob: -17.754077911376953
    6. 'map' → logprob: -18.004077911376953
    7. '0' → logprob: -18.629077911376953
    8. 'open' → logprob: -18.629077911376953
    9. '=input' → logprob: -19.379077911376953
    10. 'lambda' → logprob: -19.504077911376953

Token 262: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.2166411478538066e-05
    2. '()' → logprob: -9.875052452087402
    3. '())' → logprob: -14.625052452087402
    4. '()
' → logprob: -16.750051498413086
    5. ' ().' → logprob: -16.875051498413086
    6. '(' → logprob: -17.000051498413086
    7. '()[' → logprob: -17.125051498413086
    8. '()?.' → logprob: -19.000051498413086
    9. '()<' → logprob: -19.375051498413086
    10. '()>' → logprob: -19.500051498413086

Token 263: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003385614836588502
    2. 'strip' → logprob: -8.000338554382324
    3. 'rstrip' → logprob: -13.625338554382324
    4. '(split' → logprob: -14.000338554382324
    5. ' split' → logprob: -14.250338554382324
    6. '().' → logprob: -16.00033950805664
    7. '()' → logprob: -16.12533950805664
    8. ')' → logprob: -16.37533950805664
    9. 'spl' → logprob: -16.62533950805664
    10. '())' → logprob: -16.75033950805664

Token 264: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06757009029388428
    2. '())' → logprob: -2.817570209503174
    3. '()' → logprob: -5.192570209503174
    4. '(' → logprob: -11.067569732666016
    5. '))' → logprob: -12.192569732666016
    6. ')
' → logprob: -13.317569732666016
    7. '())
' → logprob: -13.567569732666016
    8. ')`' → logprob: -13.567569732666016
    9. '')' → logprob: -13.942569732666016
    10. '('' → logprob: -14.317569732666016

Token 265: 'xxx' (ID: 49993)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5843890309333801
    2. 'p' → logprob: -1.4593889713287354
    3. 's' → logprob: -3.5843889713287354
    4. 'arr' → logprob: -4.3343892097473145
    5. 'positions' → logprob: -4.3343892097473145
    6. 'pos' → logprob: -4.7093892097473145
    7. 'd' → logprob: -4.8343892097473145
    8. 'bit' → logprob: -4.8343892097473145
    9. 'cards' → logprob: -4.8343892097473145
    10. 'data' → logprob: -4.8343892097473145

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20698778331279755
    2. ' =' → logprob: -1.831987738609314
    3. '_' → logprob: -5.0819878578186035
    4. 's' → logprob: -5.9569878578186035
    5. '_list' → logprob: -5.9569878578186035
    6. ',' → logprob: -6.3319878578186035
    7. '=
' → logprob: -6.8319878578186035
    8. 'list' → logprob: -6.8319878578186035
    9. 'for' → logprob: -7.0819878578186035
    10. '=[]' → logprob: -7.0819878578186035

Token 267: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48336049914360046
    2. '[' → logprob: -1.3583605289459229
    3. 'default' → logprob: -2.233360528945923
    4. 'list' → logprob: -4.983360290527344
    5. '[n' → logprob: -5.233360290527344
    6. '[m' → logprob: -6.108360290527344
    7. '[]
' → logprob: -7.108360290527344
    8. '[list' → logprob: -7.233360290527344
    9. ' [' → logprob: -8.233360290527344
    10. '{}' → logprob: -8.358360290527344

Token 268: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00133595522493124
    2. '(' → logprob: -7.001336097717285
    3. '(int' → logprob: -7.876336097717285
    4. '(range' → logprob: -10.626336097717285
    5. '(input' → logprob: -11.751336097717285
    6. 'map' → logprob: -12.001336097717285
    7. '(
' → logprob: -13.251336097717285
    8. '()' → logprob: -13.251336097717285
    9. '[int' → logprob: -13.876336097717285
    10. '(list' → logprob: -14.876336097717285

Token 269: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00024084746837615967
    2. 'int' → logprob: -8.50024127960205
    3. '[int' → logprob: -11.12524127960205
    4. '(' → logprob: -11.62524127960205
    5. ',int' → logprob: -12.00024127960205
    6. '=int' → logprob: -12.25024127960205
    7. '<int' → logprob: -13.62524127960205
    8. ']int' → logprob: -14.37524127960205
    9. '```' → logprob: -15.12524127960205
    10. '(input' → logprob: -15.87524127960205

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2680187523365021
    2. ',input' → logprob: -1.7680187225341797
    3. '(input' → logprob: -2.7680187225341797
    4. 'input' → logprob: -6.64301872253418
    5. '   ' → logprob: -9.14301872253418
    6. '(' → logprob: -9.26801872253418
    7. ' ,' → logprob: -9.76801872253418
    8. ' ' → logprob: -10.64301872253418
    9. '```' → logprob: -10.76801872253418
    10. ' (' → logprob: -11.01801872253418

Token 271: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '(input' → logprob: -18.62509536743164
    4. ' ' → logprob: -18.75009536743164
    5. '   ' → logprob: -19.62509536743164
    6. '	input' → logprob: -20.25009536743164
    7. '=input' → logprob: -20.25009536743164
    8. 'Input' → logprob: -20.87509536743164
    9. '_input' → logprob: -21.12509536743164
    10. '<input' → logprob: -21.12509536743164

Token 272: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.12258882028982e-05
    2. '()' → logprob: -9.75006103515625
    3. '(' → logprob: -14.25006103515625
    4. '(),' → logprob: -14.25006103515625
    5. 'input' → logprob: -14.75006103515625
    6. ' ().' → logprob: -15.25006103515625
    7. '()[' → logprob: -15.37506103515625
    8. '()
' → logprob: -15.75006103515625
    9. '()))' → logprob: -15.87506103515625
    10. '(input' → logprob: -16.25006103515625

Token 273: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.624555291840807e-05
    2. 'strip' → logprob: -9.500076293945312
    3. ' split' → logprob: -14.000076293945312
    4. 'rstrip' → logprob: -15.125076293945312
    5. '(split' → logprob: -15.500076293945312
    6. 'spl' → logprob: -18.250076293945312
    7. '.split' → logprob: -19.375076293945312
    8. '_split' → logprob: -19.500076293945312
    9. 'plit' → logprob: -19.500076293945312
    10. 's' → logprob: -19.625076293945312

Token 274: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019222749397158623
    2. '()' → logprob: -4.894222736358643
    3. '))' → logprob: -5.019222736358643
    4. '(' → logprob: -6.019222736358643
    5. '())' → logprob: -6.019222736358643
    6. ')' → logprob: -10.5192232131958
    7. '()));' → logprob: -10.6442232131958
    8. '()))
' → logprob: -11.0192232131958
    9. '());' → logprob: -13.0192232131958
    10. '(),' → logprob: -13.6442232131958

Token 275: 'yyy' (ID: 77541)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.137609601020813
    2. 'count' → logprob: -2.5126094818115234
    3. 'pos' → logprob: -2.5126094818115234
    4. 'freq' → logprob: -2.6376094818115234
    5. 'cnt' → logprob: -2.7626094818115234
    6. 'counts' → logprob: -2.8876094818115234
    7. 's' → logprob: -3.1376094818115234
    8. 'bit' → logprob: -3.2626094818115234
    9. 'positions' → logprob: -3.3876094818115234
    10. 'dp' → logprob: -3.5126094818115234

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022513806819916
    2. ' =' → logprob: -1.9102251529693604
    3. ',' → logprob: -14.660224914550781
    4. ' ' → logprob: -16.03522491455078
    5. ')' → logprob: -16.16022491455078
    6. '=list' → logprob: -16.16022491455078
    7. '＝' → logprob: -16.53522491455078
    8. '=[]' → logprob: -16.78522491455078
    9. ')=' → logprob: -16.78522491455078
    10. ' ' → logprob: -17.03522491455078

Token 277: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00033069768687710166
    2. ' list' → logprob: -8.250330924987793
    3. '[list' → logprob: -10.250330924987793
    4. '[' → logprob: -11.000330924987793
    5. '[]' → logprob: -11.625330924987793
    6. '(list' → logprob: -12.000330924987793
    7. 'sorted' → logprob: -14.125330924987793
    8. ' [' → logprob: -14.250330924987793
    9. '[]
' → logprob: -14.625330924987793
    10. 'map' → logprob: -15.375330924987793

Token 278: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07907694578170776
    2. '(int' → logprob: -2.5790770053863525
    3. '(list' → logprob: -9.829076766967773
    4. '(' → logprob: -10.204076766967773
    5. 'map' → logprob: -10.204076766967773
    6. '[int' → logprob: -11.079076766967773
    7. 'int' → logprob: -11.579076766967773
    8. '(tuple' → logprob: -11.829076766967773
    9. '<int' → logprob: -11.954076766967773
    10. '(lambda' → logprob: -12.079076766967773

Token 279: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6962584257125854
    2. '(int' → logprob: -0.6962584257125854
    3. '=int' → logprob: -6.071258544921875
    4. '[int' → logprob: -7.821258544921875
    5. ',int' → logprob: -8.571258544921875
    6. '<int' → logprob: -8.696258544921875
    7. ']int' → logprob: -11.071258544921875
    8. '```' → logprob: -11.571258544921875
    9. ':int' → logprob: -12.196258544921875
    10. ' int' → logprob: -13.196258544921875

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3894259035587311
    2. ',int' → logprob: -1.1394258737564087
    3. '(int' → logprob: -6.139425754547119
    4. 'int' → logprob: -8.014426231384277
    5. ' ,' → logprob: -10.514426231384277
    6. ',input' → logprob: -10.889426231384277
    7. '[int' → logprob: -11.639426231384277
    8. '   ' → logprob: -12.764426231384277
    9. '=int' → logprob: -12.764426231384277
    10. '(),' → logprob: -13.639426231384277

Token 281: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.45848218582978e-06
    2. 'input' → logprob: -13.00000286102295
    3. '(int' → logprob: -16.875001907348633
    4. ' int' → logprob: -17.625001907348633
    5. '[int' → logprob: -17.625001907348633
    6. '=int' → logprob: -19.875001907348633
    7. 'str' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.875001907348633
    9. ')' → logprob: -21.375001907348633
    10. 'ints' → logprob: -21.875001907348633

Token 282: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00044092073221690953
    2. '()' → logprob: -8.25044059753418
    3. '()))' → logprob: -9.25044059753418
    4. '()))
' → logprob: -10.25044059753418
    5. '.split' → logprob: -11.25044059753418
    6. '()[' → logprob: -11.62544059753418
    7. '))' → logprob: -11.62544059753418
    8. '```' → logprob: -12.37544059753418
    9. 'split' → logprob: -12.87544059753418
    10. 'int' → logprob: -12.87544059753418

Token 283: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. ' split' → logprob: -14.12500286102295
    3. 'strip' → logprob: -14.50000286102295
    4. '(split' → logprob: -15.25000286102295
    5. 'skip' → logprob: -15.37500286102295
    6. 'size' → logprob: -16.000001907348633
    7. 'spl' → logprob: -16.000001907348633
    8. 'plit' → logprob: -16.125001907348633
    9. 's' → logprob: -16.250001907348633
    10. '1' → logprob: -16.250001907348633

Token 284: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011111362837255001
    2. '()))' → logprob: -4.511111259460449
    3. '()' → logprob: -9.88611125946045
    4. ')' → logprob: -12.13611125946045
    5. '))
' → logprob: -12.88611125946045
    6. '())' → logprob: -13.38611125946045
    7. '(' → logprob: -14.01111125946045
    8. ' ))' → logprob: -14.01111125946045
    9. '()))
' → logprob: -14.51111125946045
    10. '[]' → logprob: -15.38611125946045

Token 285: 'ab' (ID: 378)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.6459159851074219
    2. 'positions' → logprob: -2.520915985107422
    3. 'for' → logprob: -2.645915985107422
    4. 'freq' → logprob: -2.895915985107422
    5. 'used' → logprob: -3.020915985107422
    6. 'x' → logprob: -3.020915985107422
    7. 'p' → logprob: -3.020915985107422
    8. 'counts' → logprob: -3.145915985107422
    9. 'xxx' → logprob: -3.395915985107422
    10. 'indexes' → logprob: -3.520915985107422

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0190604105591774
    2. ' =' → logprob: -4.0190606117248535
    3. '=[]' → logprob: -8.269060134887695
    4. 's' → logprob: -8.519060134887695
    5. ',' → logprob: -8.519060134887695
    6. '_' → logprob: -8.644060134887695
    7. '_=' → logprob: -10.644060134887695
    8. 'cd' → logprob: -11.644060134887695
    9. 'a' → logprob: -11.769060134887695
    10. 'c' → logprob: -12.144060134887695

Token 287: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0165337473154068
    2. '[list' → logprob: -4.516533851623535
    3. ' [' → logprob: -5.266533851623535
    4. '[array' → logprob: -9.516533851623535
    5. '[input' → logprob: -9.891533851623535
    6. 'default' → logprob: -10.391533851623535
    7. '[List' → logprob: -10.641533851623535
    8. '[int' → logprob: -11.016533851623535
    9. '[class' → logprob: -11.266533851623535
    10. '[index' → logprob: -11.641533851623535

Token 288: '(set' (ID: 25904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.707984209060669
    2. '(list' → logprob: -0.707984209060669
    3. '(int' → logprob: -5.20798397064209
    4. '(lambda' → logprob: -5.33298397064209
    5. 'int' → logprob: -5.45798397064209
    6. 'lambda' → logprob: -9.20798397064209
    7. '<int' → logprob: -10.95798397064209
    8. '(<' → logprob: -12.08298397064209
    9. '[list' → logprob: -12.20798397064209
    10. '=list' → logprob: -12.45798397064209

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003192566568031907
    2. ')
' → logprob: -5.75319242477417
    3. ')

' → logprob: -12.128192901611328
    4. '())' → logprob: -12.253192901611328
    5. ')`' → logprob: -13.503192901611328
    6. '()' → logprob: -13.753192901611328
    7. ')`
' → logprob: -14.628192901611328
    8. ')
' → logprob: -15.003192901611328
    9. '))' → logprob: -15.128192901611328
    10. '[int' → logprob: -15.253192901611328

Token 290: 'coordinates' (ID: 74508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.093505099765025e-05
    2. ' for' → logprob: -11.000020980834961
    3. 'n' → logprob: -13.000020980834961
    4. 'count' → logprob: -14.750020980834961
    5. 'a' → logprob: -15.000020980834961
    6. 'next' → logprob: -15.500020980834961
    7. 'x' → logprob: -15.500020980834961
    8. 'i' → logprob: -15.625020980834961
    9. 'pairs' → logprob: -16.37502098083496
    10. '```' → logprob: -16.50002098083496

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31396710872650146
    2. ' =' → logprob: -1.3139671087265015
    3. '_set' → logprob: -8.313966751098633
    4. '_' → logprob: -8.938966751098633
    5. '_x' → logprob: -9.563966751098633
    6. '=set' → logprob: -9.563966751098633
    7. 'A' → logprob: -10.313966751098633
    8. '_a' → logprob: -10.563966751098633
    9. '_list' → logprob: -10.938966751098633
    10. 's' → logprob: -11.188966751098633

Token 292: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31848064064979553
    2. 'set' → logprob: -1.9434806108474731
    3. ' []' → logprob: -2.9434807300567627
    4. 'sorted' → logprob: -3.0684807300567627
    5. ' set' → logprob: -3.6934807300567627
    6. ' sorted' → logprob: -5.443480491638184
    7. 'list' → logprob: -7.943480491638184
    8. 'xxx' → logprob: -8.193480491638184
    9. '[' → logprob: -8.443480491638184
    10. '[]
' → logprob: -9.693480491638184

Token 293: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004331725067459047
    2. '()
' → logprob: -8.750432968139648
    3. '(x' → logprob: -8.750432968139648
    4. '(' → logprob: -9.500432968139648
    5. '((' → logprob: -10.750432968139648
    6. '();' → logprob: -11.875432968139648
    7. '()

' → logprob: -13.000432968139648
    8. '(()' → logprob: -13.375432968139648
    9. '()\' → logprob: -13.375432968139648
    10. '([(' → logprob: -13.625432968139648

Token 294: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010735770774772391
    2. ' for' → logprob: -9.250107765197754
    3. 'x' → logprob: -13.000107765197754
    4. 'a' → logprob: -13.125107765197754
    5. '```' → logprob: -13.375107765197754
    6. '
' → logprob: -13.500107765197754
    7. 'coordinates' → logprob: -13.875107765197754
    8. 'i' → logprob: -14.250107765197754
    9. '#' → logprob: -14.750107765197754
    10. 'n' → logprob: -14.875107765197754

Token 295: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.530200719833374
    2. ' x' → logprob: -1.905200719833374
    3. ' _' → logprob: -2.155200719833374
    4. 'i' → logprob: -3.030200719833374
    5. ' a' → logprob: -3.030200719833374
    6. 'x' → logprob: -3.655200719833374
    7. 'a' → logprob: -4.280200958251953
    8. '_' → logprob: -5.530200958251953
    9. ' ai' → logprob: -6.280200958251953
    10. '_x' → logprob: -6.655200958251953

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2044532746076584
    2. 'in' → logprob: -1.7044532299041748
    3. '_' → logprob: -6.204453468322754
    4. ' ' → logprob: -7.454453468322754
    5. ',' → logprob: -8.954453468322754
    6. '_in' → logprob: -8.954453468322754
    7. 'x' → logprob: -9.579453468322754
    8. '_x' → logprob: -10.204453468322754
    9. '  ' → logprob: -11.204453468322754
    10. '   ' → logprob: -11.454453468322754

Token 297: ' xxx' (ID: 33484)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.016292767599225044
    2. 'range' → logprob: -4.516292572021484
    3. ' xxx' → logprob: -5.391292572021484
    4. ' range' → logprob: -7.391292572021484
    5. 'enumer' → logprob: -11.141292572021484
    6. 'yyy' → logprob: -11.516292572021484
    7. 'zip' → logprob: -11.891292572021484
    8. '[' → logprob: -12.516292572021484
    9. '(x' → logprob: -12.766292572021484
    10. 'xyz' → logprob: -13.016292572021484

Token 298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004293580132070929
    2. ':
' → logprob: -7.875429153442383
    3. ' :' → logprob: -11.125429153442383
    4. ',' → logprob: -11.125429153442383
    5. '):' → logprob: -11.500429153442383
    6. 'in' → logprob: -12.375429153442383
    7. '   ' → logprob: -13.125429153442383
    8. ' in' → logprob: -13.500429153442383
    9. ')' → logprob: -14.500429153442383
    10. '.' → logprob: -15.125429153442383

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023876799270510674
    2. ' coordinates' → logprob: -3.773876905441284
    3. 'coordinates' → logprob: -7.398876667022705
    4. '   ' → logprob: -12.023877143859863
    5. '.coordinates' → logprob: -12.273877143859863
    6. '_coordinates' → logprob: -13.148877143859863
    7. 'Coordinates' → logprob: -13.773877143859863
    8. ' if' → logprob: -13.898877143859863
    9. ' ' → logprob: -14.398877143859863
    10. ' for' → logprob: -14.773877143859863

Token 300: ' if' (ID: 538)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.09571420401334763
    2. ' coordinates' → logprob: -2.5957140922546387
    3. '   ' → logprob: -4.095714092254639
    4. ' ' → logprob: -10.720714569091797
    5. '  ' → logprob: -12.470714569091797
    6. '.coordinates' → logprob: -13.220714569091797
    7. '_coordinates' → logprob: -13.345714569091797
    8. 'Coordinates' → logprob: -13.595714569091797
    9. 'coordinate' → logprob: -13.595714569091797
    10. 'coords' → logprob: -13.845714569091797

Token 301: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6358550786972046
    2. 'x' → logprob: -0.7608550786972046
    3. '(x' → logprob: -7.260855197906494
    4. ' not' → logprob: -7.885855197906494
    5. ' (' → logprob: -8.260854721069336
    6. 'n' → logprob: -8.510854721069336
    7. ' bis' → logprob: -8.635854721069336
    8. ' len' → logprob: -8.698354721069336
    9. ' ab' → logprob: -8.760854721069336
    10. ' ' → logprob: -8.823354721069336

Token 302: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2087419480085373
    2. '>' → logprob: -2.0837419033050537
    3. ' in' → logprob: -3.3337419033050537
    4. ' <' → logprob: -4.583742141723633
    5. ' not' → logprob: -4.708742141723633
    6. ' >=' → logprob: -5.083742141723633
    7. '>=' → logprob: -7.583742141723633
    8. ' !=' → logprob: -7.583742141723633
    9. ' ==' → logprob: -7.708742141723633
    10. 'in' → logprob: -7.708742141723633

Token 303: ' y' (ID: 342)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6968725919723511
    2. '0' → logprob: -0.9468725919723511
    3. ' ' → logprob: -2.5718727111816406
    4. 'n' → logprob: -3.8218727111816406
    5. ' m' → logprob: -4.946872711181641
    6. '1' → logprob: -6.196872711181641
    7. '100' → logprob: -6.321872711181641
    8. '=' → logprob: -6.446872711181641
    9. ' n' → logprob: -6.446872711181641
    10. 'y' → logprob: -7.446872711181641

Token 304: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.04865606501698494
    2. 'y' → logprob: -3.0486559867858887
    3. 'YY' → logprob: -10.673656463623047
    4. '=' → logprob: -11.423656463623047
    5. 'yyy' → logprob: -11.673656463623047
    6. '-' → logprob: -12.673656463623047
    7. 'es' → logprob: -12.923656463623047
    8. '_' → logprob: -13.298656463623047
    9. '{
' → logprob: -13.298656463623047
    10. '```' → logprob: -13.298656463623047

Token 305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036982970777899027
    2. '[m' → logprob: -6.003698348999023
    3. '[-' → logprob: -8.003698348999023
    4. ':' → logprob: -8.378698348999023
    5. '[x' → logprob: -8.878698348999023
    6. 'm' → logprob: -9.003698348999023
    7. '[n' → logprob: -9.128698348999023
    8. 'x' → logprob: -9.128698348999023
    9. '[i' → logprob: -10.378698348999023
    10. '[pos' → logprob: -11.503698348999023

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033963483292609453
    2. 'm' → logprob: -5.878396511077881
    3. '-' → logprob: -7.753396511077881
    4. ' ' → logprob: -9.628396034240723
    5. 'x' → logprob: -10.003396034240723
    6. '[' → logprob: -11.253396034240723
    7. 'n' → logprob: -11.378396034240723
    8. '1' → logprob: -12.128396034240723
    9. '
' → logprob: -12.878396034240723
    10. ' m' → logprob: -13.003396034240723

Token 307: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019394734874367714
    2. ']:
' → logprob: -4.019394874572754
    3. ']' → logprob: -7.519394874572754
    4. ':' → logprob: -8.144394874572754
    5. '):' → logprob: -8.894394874572754
    6. '[' → logprob: -9.269394874572754
    7. ']):' → logprob: -9.769394874572754
    8. ']:
' → logprob: -10.519394874572754
    9. ' ]' → logprob: -11.269394874572754
    10. '   ' → logprob: -11.519394874572754

Token 308: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05005275085568428
    2. ':
' → logprob: -3.0500526428222656
    3. ' and' → logprob: -6.800052642822266
    4. ' or' → logprob: -8.550052642822266
    5. '   ' → logprob: -10.050052642822266
    6. '       ' → logprob: -10.675052642822266
    7. 'and' → logprob: -10.800052642822266
    8. ':return' → logprob: -10.925052642822266
    9. '):' → logprob: -10.925052642822266
    10. '):
' → logprob: -11.925052642822266

Token 309: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01610991358757019
    2. ' x' → logprob: -4.141109943389893
    3. 'n' → logprob: -11.641109466552734
    4. '(x' → logprob: -11.766109466552734
    5. ' ' → logprob: -11.891109466552734
    6. ' (' → logprob: -11.891109466552734
    7. 'y' → logprob: -11.891109466552734
    8. 'False' → logprob: -11.891109466552734
    9. 'True' → logprob: -12.141109466552734
    10. '(' → logprob: -12.266109466552734

Token 310: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.11878406256437302
    2. 'x' → logprob: -2.993783950805664
    3. 'yyy' → logprob: -3.493783950805664
    4. '>' → logprob: -4.368783950805664
    5. 'y' → logprob: -4.868783950805664
    6. '[' → logprob: -6.243783950805664
    7. ' >' → logprob: -6.493783950805664
    8. '0' → logprob: -6.868783950805664
    9. '   ' → logprob: -6.868783950805664
    10. '```' → logprob: -7.118783950805664

Token 311: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017408426851034164
    2. '[-' → logprob: -4.14240837097168
    3. '0' → logprob: -7.39240837097168
    4. 'and' → logprob: -8.39240837097168
    5. ' and' → logprob: -8.64240837097168
    6. '.count' → logprob: -10.14240837097168
    7. '>' → logprob: -10.26740837097168
    8. ' ' → logprob: -10.64240837097168
    9. '[
' → logprob: -10.76740837097168
    10. '-' → logprob: -10.89240837097168

Token 312: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14416766166687012
    2. '-' → logprob: -2.01916766166687
    3. ' -' → logprob: -6.894167900085449
    4. '1' → logprob: -8.64416790008545
    5. ' ' → logprob: -8.76916790008545
    6. ']' → logprob: -9.01916790008545
    7. 'm' → logprob: -11.51916790008545
    8. 'x' → logprob: -11.89416790008545
    9. '   ' → logprob: -13.89416790008545
    10. ']==' → logprob: -14.14416790008545

Token 313: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23008514940738678
    2. '<' → logprob: -2.1050851345062256
    3. '>' → logprob: -3.4800851345062256
    4. '<x' → logprob: -3.8550851345062256
    5. ' >' → logprob: -4.105085372924805
    6. ']' → logprob: -5.855085372924805
    7. '>x' → logprob: -6.105085372924805
    8. ':' → logprob: -6.230085372924805
    9. ' <=' → logprob: -6.480085372924805
    10. '<=' → logprob: -7.230085372924805

Token 314: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8222867250442505
    2. ' >' → logprob: -1.3222867250442505
    3. '>' → logprob: -1.5722867250442505
    4. '<' → logprob: -3.322286605834961
    5. '<x' → logprob: -4.197286605834961
    6. '>x' → logprob: -4.572286605834961
    7. ' <=' → logprob: -4.947286605834961
    8. ':' → logprob: -5.322286605834961
    9. ' >=' → logprob: -5.447286605834961
    10. '<=' → logprob: -5.822286605834961

Token 315: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416398212313652
    2. ' x' → logprob: -4.264163970947266
    3. '	x' → logprob: -16.014163970947266
    4. '<|end|>' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.889163970947266
    6. ')x' → logprob: -17.264163970947266
    7. '=' → logprob: -17.514163970947266
    8. '(x' → logprob: -17.639163970947266
    9. '=x' → logprob: -17.889163970947266
    10. '{x' → logprob: -18.264163970947266

Token 316: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22874166071414948
    2. ':' → logprob: -1.6037416458129883
    3. '   ' → logprob: -6.103741645812988
    4. '       ' → logprob: -6.978741645812988
    5. 'continue' → logprob: -10.103741645812988
    6. ' continue' → logprob: -10.353741645812988
    7. ' or' → logprob: -10.728741645812988
    8. '):
' → logprob: -10.728741645812988
    9. '	continue' → logprob: -11.478741645812988
    10. ',' → logprob: -11.603741645812988

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03700592368841171
    2. '   ' → logprob: -3.53700590133667
    3. ' continue' → logprob: -5.03700590133667
    4. 'continue' → logprob: -7.41200590133667
    5. ' coordinates' → logprob: -9.537006378173828
    6. '
' → logprob: -11.162006378173828
    7. 'coordinates' → logprob: -11.412006378173828
    8. '	continue' → logprob: -11.662006378173828
    9. ',' → logprob: -11.787006378173828
    10. ':
' → logprob: -12.287006378173828

Token 318: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520743727684021
    2. ' coordinates' → logprob: -1.395743727684021
    3. 'coordinates' → logprob: -2.3957438468933105
    4. ' continue' → logprob: -3.2707438468933105
    5. 'continue' (adapté à ' continue') → logprob: -4.0207438468933105
    6. '       ' → logprob: -4.8957438468933105
    7. '    ' → logprob: -7.0207438468933105
    8. '           ' → logprob: -7.0207438468933105
    9. ' for' → logprob: -7.6457438468933105
    10. '  ' → logprob: -8.520743370056152

Token 319: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015550498210359365
    2. '
' → logprob: -9.750155448913574
    3. 'coordinates' → logprob: -9.875155448913574
    4. '    
' → logprob: -11.000155448913574
    5. ' coordinates' → logprob: -11.250155448913574
    6. '       ' → logprob: -11.500155448913574
    7. ',' → logprob: -13.375155448913574
    8. '        
' → logprob: -14.000155448913574
    9. '  
' → logprob: -14.875155448913574
    10. '1' → logprob: -15.125155448913574

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000891332805622369
    2. 'coordinates' → logprob: -8.00089168548584
    3. ' coordinates' → logprob: -8.25089168548584
    4. '
' → logprob: -9.12589168548584
    5. '    
' → logprob: -9.62589168548584
    6. ' for' → logprob: -10.12589168548584
    7. '<|end|>' → logprob: -10.75089168548584
    8. 'for' → logprob: -11.37589168548584
    9. ' ' → logprob: -11.62589168548584
    10. '       ' → logprob: -11.75089168548584

Token 321: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7068470120429993
    2. 'coordinates' → logprob: -0.9568470120429993
    3. ' coordinates' → logprob: -2.2068469524383545
    4. ' for' → logprob: -4.956847190856934
    5. 'for' → logprob: -5.456847190856934
    6. '       ' → logprob: -7.956847190856934
    7. ' ' → logprob: -8.831847190856934
    8. '.coordinates' → logprob: -9.456847190856934
    9. 'ab' → logprob: -9.581847190856934
    10. '           ' → logprob: -9.581847190856934

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04048748314380646
    2. '=' → logprob: -3.91548752784729
    3. 'f' → logprob: -4.415487289428711
    4. 'nd' → logprob: -5.165487289428711
    5. 'dx' → logprob: -6.415487289428711
    6. 'x' → logprob: -9.290487289428711
    7. 'n' → logprob: -9.665487289428711
    8. ' ' → logprob: -9.915487289428711
    9. ',' → logprob: -10.165487289428711
    10. 'nt' → logprob: -10.915487289428711

Token 323: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.009763171896338463
    2. ' bis' → logprob: -4.634763240814209
    3. '0' → logprob: -13.38476276397705
    4. ' ' → logprob: -13.50976276397705
    5. 'b' → logprob: -13.63476276397705
    6. '   ' → logprob: -13.75976276397705
    7. '	b' → logprob: -14.50976276397705
    8. 'bi' → logprob: -14.50976276397705
    9. '1' → logprob: -15.75976276397705
    10. 'max' → logprob: -16.134763717651367

Token 324: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.438573680294212e-06
    2. 'sect' → logprob: -13.000005722045898
    3. 'e' → logprob: -14.625005722045898
    4. '```' → logprob: -14.750005722045898
    5. 'ects' → logprob: -14.750005722045898
    6. 'ected' → logprob: -15.000005722045898
    7. 'pect' → logprob: -15.250005722045898
    8. '(x' → logprob: -15.375005722045898
    9. ' ect' → logprob: -15.625005722045898
    10. '(' → logprob: -15.750005722045898

Token 325: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09230632334947586
    2. '_left' → logprob: -2.46730637550354
    3. '_right' → logprob: -5.717306137084961
    4. '(ab' → logprob: -10.467306137084961
    5. 'left' → logprob: -10.842306137084961
    6. '(b' → logprob: -11.842306137084961
    7. 'right' → logprob: -12.467306137084961
    8. 'Left' → logprob: -12.717306137084961
    9. 'Right' → logprob: -13.342306137084961
    10. '(x' → logprob: -13.467306137084961

Token 326: 'yyy' (ID: 77541)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027112193405628204
    2. 'yyy' → logprob: -3.6521122455596924
    3. 'right' → logprob: -8.527112007141113
    4. '
' → logprob: -8.527112007141113
    5. 'yy' → logprob: -8.527112007141113
    6. ' ' → logprob: -9.902112007141113
    7. 'left' → logprob: -10.902112007141113
    8. '   ' → logprob: -11.027112007141113
    9. 'yleft' → logprob: -11.027112007141113
    10. 'yyyy' → logprob: -11.152112007141113

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6387664675712585
    2. ',x' → logprob: -0.7637664675712585
    3. '(x' → logprob: -5.638766288757324
    4. ',i' → logprob: -6.263766288757324
    5. 'import' → logprob: -8.138766288757324
    6. ' ,' → logprob: -8.763766288757324
    7. 'x' → logprob: -9.763766288757324
    8. ',b' → logprob: -10.013766288757324
    9. ',y' → logprob: -10.513766288757324
    10. '(i' → logprob: -11.138766288757324

Token 328: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12693965435028076
    2. ' x' → logprob: -2.1269397735595703
    3. '(x' → logprob: -12.12693977355957
    4. '0' → logprob: -12.87693977355957
    5. ')x' → logprob: -13.12693977355957
    6. '	x' → logprob: -14.12693977355957
    7. ')' → logprob: -15.00193977355957
    8. '1' → logprob: -16.00193977355957
    9. ' ' → logprob: -16.00193977355957
    10. '   ' → logprob: -16.12693977355957

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06265696883201599
    2. ')
' → logprob: -2.812656879425049
    3. ')-' → logprob: -7.437656879425049
    4. '[' → logprob: -10.937657356262207
    5. ' )' → logprob: -11.187657356262207
    6. ')

' → logprob: -11.937657356262207
    7. ',' → logprob: -11.937657356262207
    8. '1' → logprob: -12.062657356262207
    9. ')
' → logprob: -12.187657356262207
    10. ')<' → logprob: -12.437657356262207

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01719612255692482
    2. '
' → logprob: -5.142196178436279
    3. ' if' → logprob: -5.392196178436279
    4. '<|end|>' → logprob: -5.642196178436279
    5. '    
' → logprob: -7.017196178436279
    6. 'if' → logprob: -7.142196178436279
    7. ' ab' → logprob: -7.642196178436279
    8. 'ab' → logprob: -8.017195701599121
    9. ' ' → logprob: -8.767195701599121
    10. '  ' → logprob: -9.517195701599121

Token 331: ' a' (ID: 261)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.9066907167434692
    2. '   ' → logprob: -1.4066907167434692
    3. ' pos' → logprob: -1.7816907167434692
    4. 'pos' → logprob: -2.5316905975341797
    5. 'ab' → logprob: -2.7816905975341797
    6. ' if' → logprob: -4.15669059753418
    7. 'if' → logprob: -4.28169059753418
    8. ' i' → logprob: -5.03169059753418
    9. 'i' → logprob: -6.03169059753418
    10. '  ' → logprob: -8.03169059753418

Token 332: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32713088393211365
    2. ' =' → logprob: -1.327130913734436
    3. '=' → logprob: -4.8271307945251465
    4. ',' → logprob: -5.4521307945251465
    5. 'bb' → logprob: -7.7021307945251465
    6. 'bs' → logprob: -8.577131271362305
    7. ',b' → logprob: -9.077131271362305
    8. 'dd' → logprob: -9.202131271362305
    9. 'bc' → logprob: -9.577131271362305
    10. '   ' → logprob: -9.577131271362305

Token 333: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7544956803321838
    2. 'yyy' → logprob: -0.8794956803321838
    3. 'y' → logprob: -2.629495620727539
    4. 'i' → logprob: -3.754495620727539
    5. ' i' → logprob: -4.879495620727539
    6. 'xxx' → logprob: -5.754495620727539
    7. '(' → logprob: -6.504495620727539
    8. 'yy' → logprob: -7.129495620727539
    9. 'x' → logprob: -7.254495620727539
    10. 'ab' → logprob: -7.629495620727539

Token 334: ' -' (ID: 533)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.039317842572927475
    2. '-' → logprob: -3.5393178462982178
    3. 'bs' → logprob: -5.789317607879639
    4. ' -' → logprob: -6.164317607879639
    5. '
' → logprob: -6.414317607879639
    6. 'if' → logprob: -6.914317607879639
    7. ',' → logprob: -7.289317607879639
    8. 'i' → logprob: -8.539318084716797
    9. '-b' → logprob: -8.539318084716797
    10. '=' → logprob: -8.664318084716797

Token 335: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0019044855143874884
    2. ' y' → logprob: -6.376904487609863
    3. 'yy' → logprob: -8.626904487609863
    4. '  ' → logprob: -11.501904487609863
    5. '   ' → logprob: -12.376904487609863
    6. 'yyyy' → logprob: -13.001904487609863
    7. ' ' → logprob: -13.626904487609863
    8. '(' → logprob: -13.626904487609863
    9. '1' → logprob: -14.126904487609863
    10. 'xxx' → logprob: -14.501904487609863

Token 336: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.04500768706202507
    2. 'y' → logprob: -3.2950077056884766
    3. 'yyy' → logprob: -5.170007705688477
    4. 'ee' → logprob: -7.045007705688477
    5. '[' → logprob: -8.920007705688477
    6. '[i' → logprob: -9.545007705688477
    7. 'e' → logprob: -9.920007705688477
    8. 'mm' → logprob: -10.920007705688477
    9. 'xx' → logprob: -11.045007705688477
    10. 'n' → logprob: -11.670007705688477

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.750011444091797
    3. 'i' → logprob: -12.625011444091797
    4. '[m' → logprob: -15.500011444091797
    5. '[b' → logprob: -16.625011444091797
    6. '[min' → logprob: -16.625011444091797
    7. '[max' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.750011444091797
    9. 'a' → logprob: -17.750011444091797
    10. '[pos' → logprob: -18.000011444091797

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005979039240628481
    2. ' -' → logprob: -5.130979061126709
    3. '[i' → logprob: -10.00597858428955
    4. ']' → logprob: -12.88097858428955
    5. '[' → logprob: -13.38097858428955
    6. '1' → logprob: -15.13097858428955
    7. '])' → logprob: -15.25597858428955
    8. '   ' → logprob: -15.88097858428955
    9. 'i' → logprob: -16.005979537963867
    10. ' ' → logprob: -16.755979537963867

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.250016212463379
    3. '2' → logprob: -13.000016212463379
    4. '   ' → logprob: -15.125016212463379
    5. '-' → logprob: -15.625016212463379
    6. ']' → logprob: -16.875015258789062
    7. '  ' → logprob: -17.750015258789062
    8. '```' → logprob: -18.500015258789062
    9. '])' → logprob: -19.125015258789062
    10. '
' → logprob: -19.312515258789062

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.371605948312208e-05
    2. ' ' → logprob: -10.375053405761719
    3. '2' → logprob: -10.750053405761719
    4. ']' → logprob: -14.875053405761719
    5. '   ' → logprob: -14.875053405761719
    6. '  ' → logprob: -17.31255340576172
    7. '```' → logprob: -17.37505340576172
    8. '-' → logprob: -17.43755340576172
    9. '۱' → logprob: -17.62505340576172
    10. '])' → logprob: -17.68755340576172

Token 341: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5811685919761658
    2. ')' → logprob: -1.2061686515808105
    3. ')
' → logprob: -2.3311686515808105
    4. ']
' → logprob: -3.2061686515808105
    5. '<|end|>' → logprob: -6.5811686515808105
    6. '])' → logprob: -6.7061686515808105
    7. '])
' → logprob: -7.7061686515808105
    8. '   ' → logprob: -8.456168174743652
    9. '+' → logprob: -9.706168174743652
    10. ']+' → logprob: -9.956168174743652

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5315434336662292
    2. 'b' → logprob: -1.281543493270874
    3. '
' → logprob: -2.156543493270874
    4. '<|end|>' → logprob: -4.656543254852295
    5. ' b' → logprob: -5.781543254852295
    6. ' if' → logprob: -6.406543254852295
    7. ' ab' → logprob: -7.156543254852295
    8. '    
' → logprob: -7.406543254852295
    9. 'ab' → logprob: -7.531543254852295
    10. ' ' → logprob: -7.531543254852295

Token 343: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.011787133291363716
    2. ' b' → logprob: -4.636786937713623
    3. '   ' → logprob: -6.261786937713623
    4. 'd' → logprob: -10.386787414550781
    5. 'if' → logprob: -10.761787414550781
    6. ' ' → logprob: -11.011787414550781
    7. 'ab' → logprob: -11.511787414550781
    8. 'c' → logprob: -11.886787414550781
    9. ' if' → logprob: -12.011787414550781
    10. '    ' → logprob: -12.136787414550781

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889143377542496
    2. '=' → logprob: -2.5788915157318115
    3. ' ' → logprob: -13.70389175415039
    4. '   ' → logprob: -15.07889175415039
    5. ',' → logprob: -16.07889175415039
    6. ' =
' → logprob: -16.70389175415039
    7. '  ' → logprob: -17.45389175415039
    8. ')' → logprob: -17.45389175415039
    9. '    ' → logprob: -18.45389175415039
    10. '=
' → logprob: -18.82889175415039

Token 345: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.018223224207758904
    2. ' y' → logprob: -4.018223285675049
    3. '  ' → logprob: -10.76822280883789
    4. ' ' → logprob: -11.01822280883789
    5. 'yy' → logprob: -11.14322280883789
    6. '   ' → logprob: -11.76822280883789
    7. '0' → logprob: -12.26822280883789
    8. '```' → logprob: -13.26822280883789
    9. '999' → logprob: -14.01822280883789
    10. 'abs' → logprob: -14.14322280883789

Token 346: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.49342095851898193
    2. '[i' → logprob: -0.9934209585189819
    3. 'y' → logprob: -4.1184210777282715
    4. 'yyy' → logprob: -5.9934210777282715
    5. 'ii' → logprob: -8.868420600891113
    6. 'i' → logprob: -8.868420600891113
    7. 'yp' → logprob: -10.368420600891113
    8. '[y' → logprob: -10.618420600891113
    9. '[' → logprob: -11.243420600891113
    10. '[ii' → logprob: -11.993420600891113

Token 347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0060762143693864346
    2. 'i' → logprob: -5.131076335906982
    3. '[' → logprob: -8.881075859069824
    4. '[min' → logprob: -13.006075859069824
    5. ' i' → logprob: -13.631075859069824
    6. '[j' → logprob: -14.381075859069824
    7. '[
' → logprob: -14.506075859069824
    8. '   ' → logprob: -14.506075859069824
    9. '[next' → logprob: -15.131075859069824
    10. '[m' → logprob: -15.256075859069824

Token 348: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004832618869841099
    2. '-' → logprob: -5.629832744598389
    3. ']-' → logprob: -7.004832744598389
    4. ' -' → logprob: -8.12983226776123
    5. ' ]' → logprob: -12.00483226776123
    6. 'i' → logprob: -12.25483226776123
    7. ':' → logprob: -12.50483226776123
    8. '   ' → logprob: -12.62983226776123
    9. 'if' → logprob: -12.75483226776123
    10. '[' → logprob: -13.50483226776123

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021162778139114
    2. ' -' → logprob: -2.3502116203308105
    3. '-x' → logprob: -12.850212097167969
    4. ' ' → logprob: -13.350212097167969
    5. '   ' → logprob: -15.475212097167969
    6. '  ' → logprob: -15.975212097167969
    7. '-n' → logprob: -16.47521209716797
    8. '−' → logprob: -16.97521209716797
    9. '-b' → logprob: -17.10021209716797
    10. ')' → logprob: -17.60021209716797

Token 350: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.130576806142926e-05
    2. ' x' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -20.875030517578125
    4. '	x' → logprob: -21.000030517578125
    5. ')x' → logprob: -21.375030517578125
    6. '[' → logprob: -22.500030517578125
    7. '0' → logprob: -23.125030517578125
    8. '"x' → logprob: -23.250030517578125
    9. '$x' → logprob: -23.250030517578125
    10. '{x' → logprob: -23.250030517578125

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006543423980474472
    2. '
' → logprob: -5.1315436363220215
    3. 'ab' → logprob: -8.256543159484863
    4. ' ' → logprob: -9.381543159484863
    5. '  ' → logprob: -9.506543159484863
    6. '    
' → logprob: -10.131543159484863
    7. ',' → logprob: -10.381543159484863
    8. '       ' → logprob: -10.756543159484863
    9. '
' → logprob: -10.756543159484863
    10. ' ab' → logprob: -11.256543159484863

Token 352: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010227130725979805
    2. '               ' → logprob: -4.760227203369141
    3. '       ' → logprob: -7.010227203369141
    4. '   ' → logprob: -8.51022720336914
    5. 'pos' → logprob: -8.88522720336914
    6. '<|end|>' → logprob: -9.01022720336914
    7. '          ' → logprob: -9.13522720336914
    8. '                   ' → logprob: -10.38522720336914
    9. 'return' → logprob: -10.38522720336914
    10. '+' → logprob: -11.26022720336914

Token 353: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.721058189868927
    2. '   ' → logprob: -1.3460581302642822
    3. ' ab' → logprob: -1.8460581302642822
    4. 'if' → logprob: -2.9710581302642822
    5. ' if' → logprob: -3.3460581302642822
    6. 'pos' → logprob: -5.721058368682861
    7. '       ' → logprob: -6.096058368682861
    8. '           ' → logprob: -6.346058368682861
    9. ' pos' → logprob: -7.346058368682861
    10. 'for' → logprob: -8.346057891845703

Token 354: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00375186325982213
    2. '[i' → logprob: -5.628751754760742
    3. '[' → logprob: -9.003751754760742
    4. '[(' → logprob: -11.378751754760742
    5. '[b' → logprob: -11.378751754760742
    6. '[min' → logprob: -12.878751754760742
    7. 'a' → logprob: -14.503751754760742
    8. '[x' → logprob: -14.628751754760742
    9. '.setdefault' → logprob: -14.628751754760742
    10. '[{' → logprob: -14.753751754760742

Token 355: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -8.537868779967539e-06
    2. ']' → logprob: -12.375008583068848
    3. ' ].' → logprob: -13.000008583068848
    4. '.add' → logprob: -14.000008583068848
    5. '][' → logprob: -14.250008583068848
    6. 'add' → logprob: -15.375008583068848
    7. '.' → logprob: -15.750008583068848
    8. ']
' → logprob: -17.37500762939453
    9. '   ' → logprob: -17.87500762939453
    10. ').' → logprob: -18.12500762939453

Token 356: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.512236498361744e-07
    2. ' add' → logprob: -15.000000953674316
    3. '.add' → logprob: -16.5
    4. 'append' → logprob: -17.75
    5. 'update' → logprob: -19.5
    6. ')add' → logprob: -19.625
    7. '	add' → logprob: -20.75
    8. '_add' → logprob: -20.875
    9. 'ad' → logprob: -21.375
    10. ' ' → logprob: -22.0

Token 357: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06731156259775162
    2. '(i' → logprob: -2.9423115253448486
    3. '((' → logprob: -5.067311763763428
    4. '(x' → logprob: -5.442311763763428
    5. '(' → logprob: -6.942311763763428
    6. 'b' → logprob: -7.567311763763428
    7. '(y' → logprob: -8.69231128692627
    8. '(a' → logprob: -10.06731128692627
    9. 'i' → logprob: -11.19231128692627
    10. '(ab' → logprob: -12.31731128692627

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.515961285913363e-05
    2. ' )' → logprob: -10.125064849853516
    3. ')
' → logprob: -10.750064849853516
    4. '   ' → logprob: -13.625064849853516
    5. '       ' → logprob: -13.875064849853516
    6. ')}' → logprob: -14.875064849853516
    7. '<|end|>' → logprob: -15.250064849853516
    8. '))' → logprob: -16.125064849853516
    9. '}' → logprob: -16.375064849853516
    10. '           ' → logprob: -16.500064849853516

Token 359: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' coordinates' (ID: 27933)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6853387355804443
    2. '       ' → logprob: -1.3103387355804443
    3. '<|end|>' → logprob: -1.9353387355804443
    4. '   ' → logprob: -3.1853387355804443
    5. '               ' → logprob: -3.8103387355804443
    6. '                   ' → logprob: -6.060338973999023
    7. '        ' → logprob: -6.185338973999023
    8. ' ' → logprob: -6.310338973999023
    9. '          ' → logprob: -6.810338973999023
    10. 'b' → logprob: -6.935338973999023

Token 361: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.19939695298671722
    2. '.update' → logprob: -1.8243969678878784
    3. '.' → logprob: -3.949396848678589
    4. ' |=' → logprob: -9.699397087097168
    5. '|' → logprob: -9.824397087097168
    6. ' .' → logprob: -10.324397087097168
    7. '.union' → logprob: -10.949397087097168
    8. ').' → logprob: -11.949397087097168
    9. ' ' → logprob: -12.324397087097168
    10. '   ' → logprob: -12.574397087097168

Token 362: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.14771391451358795
    2. '(b' → logprob: -2.5227138996124268
    3. '((' → logprob: -2.8977138996124268
    4. '(x' → logprob: -7.022714138031006
    5. '(' → logprob: -7.397714138031006
    6. 'a' → logprob: -8.647713661193848
    7. '(ab' → logprob: -8.897713661193848
    8. 'b' → logprob: -9.522713661193848
    9. '(i' → logprob: -10.522713661193848
    10. '(y' → logprob: -12.897713661193848

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -12.00001049041748
    3. ' )' → logprob: -12.62501049041748
    4. '   ' → logprob: -14.50001049041748
    5. ')}' → logprob: -16.250009536743164
    6. '))' → logprob: -16.500009536743164
    7. ')return' → logprob: -17.125009536743164
    8. ')add' → logprob: -17.250009536743164
    9. ')a' → logprob: -17.500009536743164
    10. '}' → logprob: -17.750009536743164

Token 364: 'cor' (ID: 11111)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2467644214630127
    2. '   ' → logprob: -1.2467644214630127
    3. '       ' → logprob: -1.6217644214630127
    4. '    ' → logprob: -3.2467644214630127
    5. '           ' → logprob: -3.2467644214630127
    6. '<|end|>' → logprob: -3.4967644214630127
    7. 'for' → logprob: -4.121764183044434
    8. ')' → logprob: -4.121764183044434
    9. '  ' → logprob: -4.371764183044434
    10. '        ' → logprob: -4.621764183044434

Token 365: '_dict' (ID: 11295)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5795968770980835
    2. 'din' → logprob: -0.8295968770980835
    3. 'ordinates' → logprob: -6.204596996307373
    4. 'for' → logprob: -7.329596996307373
    5. 'ds' → logprob: -8.204596519470215
    6. 'di' → logprob: -8.329596519470215
    7. 'dict' → logprob: -8.454596519470215
    8. 'rd' → logprob: -9.704596519470215
    9. 'respond' → logprob: -10.204596519470215
    10. 'rect' → logprob: -10.329596519470215

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023732721805573
    2. ' =' → logprob: -1.9102373123168945
    3. '=create' → logprob: -13.410237312316895
    4. '={}' → logprob: -13.535237312316895
    5. '＝' → logprob: -13.910237312316895
    6. '={}
' → logprob: -14.035237312316895
    7. ',' → logprob: -14.035237312316895
    8. '=
' → logprob: -14.160237312316895
    9. 's' → logprob: -14.160237312316895
    10. '   ' → logprob: -14.285237312316895

Token 367: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.008406060747802258
    2. '{}' → logprob: -5.008406162261963
    3. 'dict' → logprob: -7.508406162261963
    4. 'default' → logprob: -7.508406162261963
    5. 'sorted' → logprob: -8.258405685424805
    6. '{x' → logprob: -8.758405685424805
    7. '{i' → logprob: -9.633405685424805
    8. '{id' → logprob: -10.383405685424805
    9. '{}
' → logprob: -10.508405685424805
    10. ' {' → logprob: -11.008405685424805

Token 368: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4957636296749115
    2. 'c' → logprob: -1.2457636594772339
    3. 'v' → logprob: -2.8707635402679443
    4. 'x' → logprob: -3.8707635402679443
    5. 'coord' → logprob: -3.8707635402679443
    6. 'k' → logprob: -6.370763778686523
    7. 'val' → logprob: -6.620763778686523
    8. 'y' → logprob: -7.370763778686523
    9. 'co' → logprob: -7.370763778686523
    10. 'cor' → logprob: -8.620763778686523

Token 369: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023831278085708618
    2. ':i' → logprob: -3.773831367492676
    3. ':b' → logprob: -7.648831367492676
    4. ':index' → logprob: -9.773831367492676
    5. ':k' → logprob: -11.273831367492676
    6. ' :' → logprob: -11.398831367492676
    7. ':value' → logprob: -11.898831367492676
    8. 'i' → logprob: -12.523831367492676
    9. 'b' → logprob: -12.648831367492676
    10. ':v' → logprob: -12.898831367492676

Token 370: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06260814517736435
    2. 'idx' → logprob: -2.812608242034912
    3. 'index' → logprob: -8.062607765197754
    4. 'b' → logprob: -9.187607765197754
    5. ' idx' → logprob: -9.187607765197754
    6. ' i' → logprob: -9.437607765197754
    7. '0' → logprob: -10.562607765197754
    8. 'j' → logprob: -11.937607765197754
    9. 'ix' → logprob: -12.812607765197754
    10. 'bis' → logprob: -12.937607765197754

Token 371: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5976086854934692
    2. 'for' → logprob: -0.8476086854934692
    3. '+' → logprob: -3.8476085662841797
    4. ' +' → logprob: -9.34760856628418
    5. '+b' → logprob: -11.72260856628418
    6. ' ' → logprob: -12.59760856628418
    7. 'b' → logprob: -12.97260856628418
    8. ':' → logprob: -13.47260856628418
    9. 'n' → logprob: -13.97260856628418
    10. '	for' → logprob: -14.09760856628418

Token 372: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.906711546937004e-05
    2. ' i' → logprob: -10.000048637390137
    3. 'b' → logprob: -13.125048637390137
    4. ',' → logprob: -13.625048637390137
    5. ',i' → logprob: -15.875048637390137
    6. 'cor' → logprob: -16.625049591064453
    7. '
' → logprob: -16.750049591064453
    8. '```' → logprob: -18.250049591064453
    9. '	i' → logprob: -18.750049591064453
    10. '   ' → logprob: -19.000049591064453

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6056857705116272
    2. 'i' → logprob: -1.1056857109069824
    3. 'enumer' → logprob: -2.6056857109069824
    4. 'b' → logprob: -3.9806857109069824
    5. ',i' → logprob: -4.105685710906982
    6. 'range' → logprob: -4.980685710906982
    7. ',b' → logprob: -5.355685710906982
    8. 'coordinates' → logprob: -6.855685710906982
    9. 'in' → logprob: -6.980685710906982
    10. ' i' → logprob: -7.980685710906982

Token 374: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001600347168277949
    2. ' b' → logprob: -8.750160217285156
    3. 'enumer' → logprob: -13.500160217285156
    4. '(b' → logprob: -16.750160217285156
    5. ' enumerate' → logprob: -17.500160217285156
    6. '	b' → logprob: -18.000160217285156
    7. ',b' → logprob: -18.625160217285156
    8. '
' → logprob: -20.125160217285156
    9. '_b' → logprob: -20.750160217285156
    10. '-b' → logprob: -20.750160217285156

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07000135630369186
    2. 'in' → logprob: -2.6950013637542725
    3. 'enumer' → logprob: -9.945001602172852
    4. 'n' → logprob: -12.070001602172852
    5. ',' → logprob: -12.195001602172852
    6. 'b' → logprob: -12.945001602172852
    7. ')' → logprob: -13.570001602172852
    8. ' enumerate' → logprob: -14.820001602172852
    9. 's' → logprob: -15.195001602172852
    10. '```' → logprob: -15.195001602172852

Token 376: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009118211455643177
    2. ' enumerate' → logprob: -7.000911712646484
    3. '
' → logprob: -15.125911712646484
    4. 'enum' → logprob: -16.125911712646484
    5. '```' → logprob: -17.000911712646484
    6. 'en' → logprob: -17.750911712646484
    7. 'enqueue' → logprob: -20.000911712646484
    8. '
' → logprob: -20.250911712646484
    9. '

' → logprob: -20.375911712646484
    10. 'Enumer' → logprob: -20.625911712646484

Token 377: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.061997827142477036
    2. 'sorted' → logprob: -2.811997890472412
    3. '(co' → logprob: -10.686997413635254
    4. 'coordinates' → logprob: -11.936997413635254
    5. ' sorted' → logprob: -14.686997413635254
    6. '(' → logprob: -15.561997413635254
    7. 'co' → logprob: -15.936997413635254
    8. 'coordinate' → logprob: -17.56199836730957
    9. '
' → logprob: -17.68699836730957
    10. 'coord' → logprob: -18.43699836730957

Token 378: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.0024768433067947626
    2. 'coordinates' → logprob: -6.002476692199707
    3. 'co' → logprob: -13.877476692199707
    4. '(list' → logprob: -16.627477645874023
    5. ' coordinates' → logprob: -16.752477645874023
    6. 'list' → logprob: -17.502477645874023
    7. '.coordinates' → logprob: -18.252477645874023
    8. ')' → logprob: -18.752477645874023
    9. 'Coordinates' → logprob: -18.877477645874023
    10. '```' → logprob: -19.002477645874023

Token 379: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -9.066919301403686e-05
    2. 'rd' → logprob: -9.500090599060059
    3. 'ordin' → logprob: -11.875090599060059
    4. 'ord' → logprob: -13.000090599060059
    5. 'coordinates' → logprob: -13.250090599060059
    6. 'or' → logprob: -13.500090599060059
    7. 'ordi' → logprob: -13.750090599060059
    8. 'ordinate' → logprob: -14.250090599060059
    9. 'ordan' → logprob: -14.750090599060059
    10. 'o' → logprob: -15.625090599060059

Token 380: '),' (ID: 936)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00013154871703591198
    2. ',' → logprob: -9.250131607055664
    3. ')' → logprob: -11.125131607055664
    4. ' )' → logprob: -11.750131607055664
    5. '))' → logprob: -12.250131607055664
    6. ');}' → logprob: -12.750131607055664
    7. ')}}' → logprob: -13.375131607055664
    8. '}' → logprob: -13.375131607055664
    9. ')}
' → logprob: -14.125131607055664
    10. ')}>' → logprob: -14.750131607055664

Token 381: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.390306293964386
    2. 'start' → logprob: -1.1403062343597412
    3. ' start' → logprob: -6.01530647277832
    4. ' ' → logprob: -7.01530647277832
    5. '0' → logprob: -9.39030647277832
    6. 'reverse' → logprob: -12.76530647277832
    7. ',start' → logprob: -13.39030647277832
    8. 'key' → logprob: -14.26530647277832
    9. '2' → logprob: -14.64030647277832
    10. '	start' → logprob: -15.39030647277832

Token 382: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.739826181321405e-05
    2. '1' → logprob: -10.00004768371582
    3. '(' → logprob: -13.25004768371582
    4. ' =' → logprob: -16.62504768371582
    5. '   ' → logprob: -17.00004768371582
    6. '=
' → logprob: -17.25004768371582
    7. ' ' → logprob: -18.87504768371582
    8. '0' → logprob: -19.25004768371582
    9. '2' → logprob: -19.50004768371582
    10. '
' → logprob: -19.75004768371582

Token 383: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000563042180147022
    2. '0' → logprob: -7.500563144683838
    3. ' ' → logprob: -11.75056266784668
    4. '2' → logprob: -13.50056266784668
    5. '   ' → logprob: -14.37556266784668
    6. '=' → logprob: -17.00056266784668
    7. '
' → logprob: -17.75056266784668
    8. '```' → logprob: -18.18806266784668
    9. '3' → logprob: -19.18806266784668
    10. ')' → logprob: -19.31306266784668

Token 384: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0002562137378845364
    2. ')' → logprob: -8.375256538391113
    3. ' )' → logprob: -10.875256538391113
    4. '}' → logprob: -12.125256538391113
    5. ');}' → logprob: -14.625256538391113
    6. '))' → logprob: -15.125256538391113
    7. '})' → logprob: -16.000255584716797
    8. ')}}' → logprob: -16.000255584716797
    9. ')}
' → logprob: -16.125255584716797
    10. ')]' → logprob: -17.375255584716797

Token 385: 'cd' (ID: 8301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.278647780418396
    2. 'depth' → logprob: -3.1536478996276855
    3. 'pos' → logprob: -3.6536478996276855
    4. 'x' → logprob: -3.9036478996276855
    5. 'max' → logprob: -3.9036478996276855
    6. 'k' → logprob: -4.4036478996276855
    7. 'res' → logprob: -4.5286478996276855
    8. ' for' → logprob: -4.6536478996276855
    9. 'cor' → logprob: -4.9036478996276855
    10. 'size' → logprob: -5.0286478996276855

Token 386: 'g' (ID: 70)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.37606075406074524
    2. ' =' → logprob: -1.8760607242584229
    3. '_dict' → logprob: -2.376060724258423
    4. 'ct' → logprob: -4.376060962677002
    5. 'f' → logprob: -4.501060962677002
    6. 'd' → logprob: -4.876060962677002
    7. 'ic' → logprob: -5.251060962677002
    8. 'dict' → logprob: -5.251060962677002
    9. 't' → logprob: -5.376060962677002
    10. '=' → logprob: -5.876060962677002

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3271501362323761
    2. '=' → logprob: -1.3271501064300537
    3. '_dict' → logprob: -5.202150344848633
    4. 'ict' → logprob: -5.452150344848633
    5. ' ' → logprob: -7.077150344848633
    6. 'ex' → logprob: -7.952150344848633
    7. 'o' → logprob: -8.452150344848633
    8. 't' → logprob: -8.452150344848633
    9. '_' → logprob: -8.577150344848633
    10. 'dict' → logprob: -8.577150344848633

Token 388: ' cor' (ID: 1907)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.009793160483241081
    2. '[' → logprob: -5.134793281555176
    3. '{' → logprob: -6.634793281555176
    4. 'Bit' → logprob: -6.759793281555176
    5. ' defaultdict' → logprob: -7.009793281555176
    6. '[[' → logprob: -8.884793281555176
    7. 'def' → logprob: -9.509793281555176
    8. ' [' → logprob: -9.509793281555176
    9. ' Bit' → logprob: -10.259793281555176
    10. '(default' → logprob: -10.634793281555176

Token 389: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.2554660141468048
    2. 'dict' → logprob: -2.0054659843444824
    3. 'ict' → logprob: -3.3804659843444824
    4. 'default' → logprob: -3.5054659843444824
    5. 't' → logprob: -5.380465984344482
    6. '{' → logprob: -5.380465984344482
    7. 'ct' → logprob: -5.630465984344482
    8. 'Dict' → logprob: -5.630465984344482
    9. '=' → logprob: -6.130465984344482
    10. ' =' → logprob: -6.505465984344482

Token 390: '.get' (ID: 775)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5825679898262024
    2. '<|end|>' → logprob: -1.4575679302215576
    3. '(ab' → logprob: -2.4575679302215576
    4. '(min' → logprob: -3.4575679302215576
    5. '(max' → logprob: -3.4575679302215576
    6. '(b' → logprob: -3.8325679302215576
    7. '(co' → logprob: -3.8325679302215576
    8. '(a' → logprob: -4.707568168640137
    9. ' ' → logprob: -7.207568168640137
    10. 'max' → logprob: -7.332568168640137

Token 392: 'bit' (ID: 6516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27949780225753784
    2. 'pos' → logprob: -2.6544978618621826
    3. 'bit' → logprob: -3.1544978618621826
    4. 'res' → logprob: -3.6544978618621826
    5. 'cur' → logprob: -4.7794976234436035
    6. 'ans' → logprob: -4.7794976234436035
    7. ' for' → logprob: -4.7794976234436035
    8. 'x' → logprob: -5.0294976234436035
    9. 'idx' → logprob: -5.1544976234436035
    10. 'depth' → logprob: -5.1544976234436035

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067469896748661995
    2. '=' → logprob: -5.006746768951416
    3. ' ' → logprob: -11.006747245788574
    4. ')' → logprob: -12.756747245788574
    5. ',' → logprob: -13.006747245788574
    6. '(' → logprob: -13.006747245788574
    7. '  ' → logprob: -13.381747245788574
    8. 's' → logprob: -13.506747245788574
    9. '.' → logprob: -14.631747245788574
    10. '_' → logprob: -14.631747245788574

Token 394: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.01815146580338478
    2. ' Bit' → logprob: -4.01815128326416
    3. '(Bit' → logprob: -13.64315128326416
    4. ' ' → logprob: -15.64315128326416
    5. '[' → logprob: -16.268152236938477
    6. 'Bi' → logprob: -17.018152236938477
    7. 'bit' → logprob: -17.143152236938477
    8. '.Bit' → logprob: -18.018152236938477
    9. '  ' → logprob: -18.643152236938477
    10. 'BIT' → logprob: -18.893152236938477

Token 395: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.01014464721083641
    2. '(n' → logprob: -5.0101447105407715
    3. '(m' → logprob: -5.7601447105407715
    4. '(' → logprob: -8.385144233703613
    5. 'len' → logprob: -10.135144233703613
    6. 'm' → logprob: -13.635144233703613
    7. '((' → logprob: -14.135144233703613
    8. '[len' → logprob: -14.135144233703613
    9. 'n' → logprob: -14.635144233703613
    10. '(
' → logprob: -14.635144233703613

Token 396: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.2519649565219879
    2. '(c' → logprob: -1.5019649267196655
    3. 'coordinates' → logprob: -10.501964569091797
    4. 'cor' → logprob: -12.626964569091797
    5. '(' → logprob: -13.126964569091797
    6. '(sorted' → logprob: -14.126964569091797
    7. '(coord' → logprob: -14.126964569091797
    8. '(coords' → logprob: -14.126964569091797
    9. ' coordinates' → logprob: -14.876964569091797
    10. 'co' → logprob: -16.251964569091797

Token 397: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.3063894510269165
    2. 'rd' → logprob: -1.8063894510269165
    3. 'r' → logprob: -2.306389331817627
    4. 'or' → logprob: -11.556389808654785
    5. 'cor' → logprob: -12.306389808654785
    6. 'ordin' → logprob: -12.431389808654785
    7. 'coordinates' → logprob: -12.431389808654785
    8. 'ord' → logprob: -12.681389808654785
    9. 'ordinate' → logprob: -12.806389808654785
    10. 'ro' → logprob: -13.931389808654785

Token 398: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14301709830760956
    2. '))' → logprob: -2.018017053604126
    3. ')
' → logprob: -9.018016815185547
    4. '+' → logprob: -9.143016815185547
    5. ' )' → logprob: -9.393016815185547
    6. '))
' → logprob: -11.393016815185547
    7. ' +' → logprob: -12.143016815185547
    8. ' ))' → logprob: -12.268016815185547
    9. ')))' → logprob: -12.768016815185547
    10. ')

' → logprob: -13.768016815185547

Token 399: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. '+' → logprob: -11.375028610229492
    3. ')
' → logprob: -12.000028610229492
    4. '))' → logprob: -12.250028610229492
    5. ' )' → logprob: -12.250028610229492
    6. ' +' → logprob: -15.375028610229492
    7. '+)' → logprob: -15.375028610229492
    8. '())' → logprob: -15.625028610229492
    9. ')

' → logprob: -16.375028610229492
    10. ')}' → logprob: -17.250028610229492

Token 400: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4119739234447479
    2. '3' → logprob: -1.4119739532470703
    3. '5' → logprob: -2.9119739532470703
    4. ' ' → logprob: -3.9119739532470703
    5. '10' → logprob: -4.53697395324707
    6. '4' → logprob: -4.78697395324707
    7. '1' → logprob: -7.53697395324707
    8. '  ' → logprob: -10.66197395324707
    9. '100' → logprob: -11.78697395324707
    10. '   ' → logprob: -12.16197395324707

Token 401: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16620014607906342
    2. '5' → logprob: -2.4162001609802246
    3. '3' → logprob: -3.1662001609802246
    4. '10' → logprob: -4.416200160980225
    5. '4' → logprob: -5.041200160980225
    6. '1' → logprob: -5.791200160980225
    7. ' ' → logprob: -10.541199684143066
    8. '7' → logprob: -11.041199684143066
    9. '6' → logprob: -11.166199684143066
    10. '100' → logprob: -11.416199684143066

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038348292582668364
    2. ')
' → logprob: -7.875383377075195
    3. ')

' → logprob: -13.250383377075195
    4. ' )' → logprob: -13.875383377075195
    5. ')
' → logprob: -14.625383377075195
    6. '))' → logprob: -17.000383377075195
    7. ')`' → logprob: -17.000383377075195
    8. ')add' → logprob: -18.375383377075195
    9. '),' → logprob: -18.500383377075195
    10. ')#' → logprob: -18.500383377075195

Token 403: 'bit' (ID: 6516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6313800811767578
    2. '           ' → logprob: -1.0063800811767578
    3. '   ' → logprob: -3.006380081176758
    4. '               ' → logprob: -3.506380081176758
    5. '        ' → logprob: -4.881380081176758
    6. ' for' → logprob: -5.631380081176758
    7. 'for' → logprob: -5.756380081176758
    8. '    ' → logprob: -6.006380081176758
    9. '            ' → logprob: -6.006380081176758
    10. '          ' → logprob: -7.256380081176758

Token 404: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0036416458897292614
    2. '.' → logprob: -5.628641605377197
    3. '.lower' → logprob: -10.628642082214355
    4. '.debug' → logprob: -12.253642082214355
    5. ' .' → logprob: -12.503642082214355
    6. ').' → logprob: -13.753642082214355
    7. 'add' → logprob: -14.253642082214355
    8. '.sum' → logprob: -14.878642082214355
    9. '.bit' → logprob: -14.878642082214355
    10. '.clear' → logprob: -14.878642082214355

Token 405: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017107181251049042
    2. '(c' → logprob: -4.142107009887695
    3. '<|end|>' → logprob: -7.142107009887695
    4. '0' → logprob: -8.767107009887695
    5. '1' → logprob: -9.892107009887695
    6. '(cd' → logprob: -10.892107009887695
    7. '(len' → logprob: -11.142107009887695
    8. '(ab' → logprob: -11.517107009887695
    9. '2' → logprob: -11.517107009887695
    10. '(co' → logprob: -12.267107009887695

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4417554438114166
    2. '2' → logprob: -1.6917554140090942
    3. 'cor' → logprob: -2.441755533218384
    4. '0' → logprob: -2.816755533218384
    5. 'cd' → logprob: -3.816755533218384
    6. 'len' → logprob: -6.191755294799805
    7. ' ' → logprob: -7.066755294799805
    8. '3' → logprob: -8.066755294799805
    9. ')' → logprob: -8.066755294799805
    10. ' cor' → logprob: -8.316755294799805

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008682293118909001
    2. ')' → logprob: -7.250868320465088
    3. '1' → logprob: -9.75086784362793
    4. '<|end|>' → logprob: -10.00086784362793
    5. ' ,' → logprob: -10.62586784362793
    6. ',n' → logprob: -11.37586784362793
    7. '0' → logprob: -12.25086784362793
    8. ',-' → logprob: -12.75086784362793
    9. '2' → logprob: -13.50086784362793
    10. ',len' → logprob: -13.62586784362793

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04303435981273651
    2. 'm' → logprob: -3.793034315109253
    3. 'len' → logprob: -4.793034553527832
    4. 'n' → logprob: -5.168034553527832
    5. '-' → logprob: -5.293034553527832
    6. ' ' → logprob: -8.418034553527832
    7. '-m' → logprob: -9.418034553527832
    8. '0' → logprob: -9.918034553527832
    9. ' -' → logprob: -10.543034553527832
    10. 'int' → logprob: -10.793034553527832

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0278524961322546
    2. '-' → logprob: -4.152852535247803
    3. 'm' → logprob: -4.902852535247803
    4. 'len' → logprob: -6.152852535247803
    5. 'n' → logprob: -6.402852535247803
    6. '-m' → logprob: -8.527852058410645
    7. '10' → logprob: -9.777852058410645
    8. '100' → logprob: -9.902852058410645
    9. ' ' → logprob: -10.027852058410645
    10. 'int' → logprob: -10.152852058410645

Token 410: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.553032628493384e-05
    2. ')
' → logprob: -9.625075340270996
    3. ' )' → logprob: -11.875075340270996
    4. '0' → logprob: -13.125075340270996
    5. '))' → logprob: -15.625075340270996
    6. '
' → logprob: -16.000076293945312
    7. ')

' → logprob: -16.250076293945312
    8. ')
' → logprob: -16.875076293945312
    9. '1' → logprob: -17.625076293945312
    10. '),' → logprob: -17.875076293945312

Token 411: 'for' (ID: 1938)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49793797731399536
    2. 'for' → logprob: -1.6229379177093506
    3. ' for' → logprob: -2.2479379177093506
    4. '           ' → logprob: -3.1229379177093506
    5. '   ' → logprob: -3.7479379177093506
    6. '        ' → logprob: -4.62293815612793
    7. '               ' → logprob: -5.24793815612793
    8. '    ' → logprob: -5.62293815612793
    9. '            ' → logprob: -6.87293815612793
    10. '                ' → logprob: -7.37293815612793

Token 412: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2531571388244629
    2. ' a' → logprob: -1.503157138824463
    3. 'b' → logprob: -8.003156661987305
    4. ' b' → logprob: -8.253156661987305
    5. '(a' → logprob: -8.628156661987305
    6. ' (' → logprob: -9.003156661987305
    7. ' key' → logprob: -10.003156661987305
    8. 'k' → logprob: -10.253156661987305
    9. 'i' → logprob: -10.378156661987305
    10. 'key' → logprob: -10.378156661987305

Token 413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046603426337242126
    2. 'in' → logprob: -3.6716034412384033
    3. ',' → logprob: -3.9216034412384033
    4. 'sorted' → logprob: -8.546603202819824
    5. 'a' → logprob: -10.921603202819824
    6. '   ' → logprob: -10.921603202819824
    7. 's' → logprob: -11.171603202819824
    8. 'b' → logprob: -12.296603202819824
    9. '_sorted' → logprob: -12.296603202819824
    10. ' ' → logprob: -12.671603202819824

Token 414: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0008641763124614954
    2. 'ab' → logprob: -7.125864028930664
    3. 'range' → logprob: -10.000864028930664
    4. ' sorted' → logprob: -11.375864028930664
    5. 'a' → logprob: -14.125864028930664
    6. '(sorted' → logprob: -14.125864028930664
    7. 'list' → logprob: -14.875864028930664
    8. '   ' → logprob: -15.250864028930664
    9. 're' → logprob: -16.250864028930664
    10. 'enumer' → logprob: -16.375864028930664

Token 415: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -1.700132997939363e-05
    2. 'ab' → logprob: -11.000017166137695
    3. '(a' → logprob: -15.125017166137695
    4. '(
' → logprob: -19.250017166137695
    5. '(abs' → logprob: -19.625017166137695
    6. '#ab' → logprob: -20.000017166137695
    7. '_ab' → logprob: -20.125017166137695
    8. '(list' → logprob: -20.250017166137695
    9. '((' → logprob: -21.000017166137695
    10. '(al' → logprob: -21.000017166137695

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09246958047151566
    2. '):
' → logprob: -2.4674696922302246
    3. '.keys' → logprob: -5.842469692230225
    4. '):
' → logprob: -7.842469692230225
    5. ')' → logprob: -9.467469215393066
    6. '(a' → logprob: -10.092469215393066
    7. 'keys' → logprob: -10.592469215393066
    8. ')):' → logprob: -10.717469215393066
    9. '):

' → logprob: -10.842469215393066
    10. '()):
' → logprob: -11.217469215393066

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013860112987458706
    2. 'for' → logprob: -4.63886022567749
    3. ' for' → logprob: -5.76386022567749
    4. 'bs' → logprob: -7.88886022567749
    5. 'b' → logprob: -9.013859748840332
    6. ' ' → logprob: -9.388859748840332
    7. 's' → logprob: -9.763859748840332
    8. ' bs' → logprob: -10.013859748840332
    9. 'count' → logprob: -10.513859748840332
    10. 'vals' → logprob: -10.888859748840332

Token 418: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0764449834823608
    2. '   ' → logprob: -1.5764449834823608
    3. 'tmp' → logprob: -2.4514451026916504
    4. 'bs' → logprob: -2.9514451026916504
    5. 'vals' → logprob: -3.0764451026916504
    6. 'temp' → logprob: -3.2014451026916504
    7. 'cur' → logprob: -4.20144510269165
    8. 'arr' → logprob: -4.32644510269165
    9. 'cnt' → logprob: -4.32644510269165
    10. 'b' (adapté à ' b') → logprob: -4.57644510269165

Token 419: 'bb' (ID: 10029)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1760369837284088
    2. ' =' → logprob: -2.676037073135376
    3. '_set' → logprob: -3.176037073135376
    4. '=' → logprob: -3.301037073135376
    5. 'set' → logprob: -4.926036834716797
    6. '_values' → logprob: -6.301036834716797
    7. 'for' → logprob: -6.551036834716797
    8. '_list' → logprob: -6.801036834716797
    9. 'values' → logprob: -7.926036834716797
    10. ':' → logprob: -7.926036834716797

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47440582513809204
    2. ' =' → logprob: -0.974405825138092
    3. 's' → logprob: -8.724406242370605
    4. '   ' → logprob: -9.724406242370605
    5. '=set' → logprob: -10.599406242370605
    6. ',' → logprob: -11.099406242370605
    7. '_set' → logprob: -11.099406242370605
    8. 'set' → logprob: -11.224406242370605
    9. '    ' → logprob: -11.599406242370605
    10. ' ' → logprob: -11.974406242370605

Token 421: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.04082983359694481
    2. '[' → logprob: -3.41582989692688
    3. 'ab' → logprob: -5.915829658508301
    4. '[]
' → logprob: -6.415829658508301
    5. '[]' → logprob: -6.665829658508301
    6. 'list' → logprob: -6.790829658508301
    7. '[list' → logprob: -9.1658296585083
    8. ' sorted' → logprob: -9.1658296585083
    9. '[a' → logprob: -10.1658296585083
    10. '[]

' → logprob: -10.6658296585083

Token 422: '(map' (ID: 16946)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.0023235564585775137
    2. 'ab' → logprob: -6.252323627471924
    3. '(list' → logprob: -7.877323627471924
    4. 'list' → logprob: -11.127323150634766
    5. '([' → logprob: -14.877323150634766
    6. '#ab' → logprob: -15.627323150634766
    7. '(b' → logprob: -15.877323150634766
    8. '(
' → logprob: -16.252323150634766
    9. '_ab' → logprob: -16.877323150634766
    10. ' ab' → logprob: -17.002323150634766

Token 423: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.07162868976593018
    2. '(ab' → logprob: -2.6966285705566406
    3. '(cd' → logprob: -6.696628570556641
    4. 'ab' → logprob: -8.32162857055664
    5. 'cd' → logprob: -9.69662857055664
    6. 'cor' → logprob: -9.69662857055664
    7. '(b' → logprob: -10.32162857055664
    8. '(lambda' → logprob: -10.57162857055664
    9. '(' → logprob: -11.44662857055664
    10. '(con' → logprob: -12.57162857055664

Token 424: 'dg' (ID: 49449)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.7904335856437683
    2. 'd' → logprob: -1.290433645248413
    3. '(c' → logprob: -2.165433645248413
    4. 'or' → logprob: -2.415433645248413
    5. '(d' → logprob: -4.040433406829834
    6. 'cor' → logprob: -4.290433406829834
    7. 'dg' → logprob: -4.415433406829834
    8. 'od' → logprob: -4.915433406829834
    9. 'dag' → logprob: -6.040433406829834
    10. '(cd' → logprob: -6.165433406829834

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14770746231079102
    2. '(ab' → logprob: -2.022707462310791
    3. 'ab' → logprob: -5.647707462310791
    4. '   ' → logprob: -6.897707462310791
    5. 'b' → logprob: -8.897706985473633
    6. ' ,' → logprob: -9.147706985473633
    7. ',b' → logprob: -9.897706985473633
    8. '(lambda' → logprob: -10.272706985473633
    9. '))' → logprob: -10.522706985473633
    10. '),' → logprob: -10.897706985473633

Token 426: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00020830852736253291
    2. ' ab' → logprob: -8.500207901000977
    3. '(ab' → logprob: -12.250207901000977
    4. '   ' → logprob: -17.250207901000977
    5. 'list' → logprob: -17.375207901000977
    6. '#ab' → logprob: -17.750207901000977
    7. 'abbr' → logprob: -18.000207901000977
    8. '_ab' → logprob: -18.375207901000977
    9. ''ab' → logprob: -18.750207901000977
    10. 'b' → logprob: -19.125207901000977

Token 427: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.2113979209971149e-05
    2. 'a' → logprob: -11.375012397766113
    3. '
' → logprob: -16.500011444091797
    4. '   ' → logprob: -16.625011444091797
    5. ' [' → logprob: -16.625011444091797
    6. '[' → logprob: -16.750011444091797
    7. '[b' → logprob: -16.875011444091797
    8. '[
' → logprob: -17.125011444091797
    9. ')' → logprob: -17.250011444091797
    10. ')[' → logprob: -17.500011444091797

Token 428: ']),' (ID: 19560)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.4438701272010803
    2. ']))
' → logprob: -1.0688700675964355
    3. '))' → logprob: -4.5688700675964355
    4. ')))' → logprob: -6.1938700675964355
    5. ')))
' → logprob: -7.3188700675964355
    6. '   ' → logprob: -7.9438700675964355
    7. '))
' → logprob: -8.318870544433594
    8. ']' → logprob: -8.443870544433594
    9. '[a' → logprob: -8.568870544433594
    10. ']))

' → logprob: -8.693870544433594

Token 429: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.049712639302015305
    2. ' reverse' → logprob: -3.799712657928467
    3. 'key' → logprob: -3.924712657928467
    4. ' key' → logprob: -6.174712657928467
    5. ')' → logprob: -6.424712657928467
    6. '   ' → logprob: -7.174712657928467
    7. 'lambda' → logprob: -7.424712657928467
    8. ')
' → logprob: -7.924712657928467
    9. '       ' → logprob: -8.549712181091309
    10. 'None' → logprob: -9.174712181091309

Token 430: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00037728800089098513
    2. '=' → logprob: -8.250377655029297
    3. '(True' → logprob: -9.250377655029297
    4. '()' → logprob: -12.000377655029297
    5. '   ' → logprob: -12.000377655029297
    6. '       ' → logprob: -12.500377655029297
    7. 'True' → logprob: -13.500377655029297
    8. '())' → logprob: -14.125377655029297
    9. ' =' → logprob: -14.625377655029297
    10. '()
' → logprob: -15.250377655029297

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2545522153377533
    2. ')
' → logprob: -1.5045522451400757
    3. '):
' → logprob: -6.504552364349365
    4. '   ' → logprob: -7.254552364349365
    5. '):' → logprob: -8.004551887512207
    6. ')
' → logprob: -10.129551887512207
    7. ',' → logprob: -11.004551887512207
    8. ' )' → logprob: -12.754551887512207
    9. '       ' → logprob: -13.129551887512207
    10. ':' → logprob: -13.254551887512207

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4492773413658142
    2. '
' → logprob: -1.949277400970459
    3. '       ' → logprob: -2.449277400970459
    4. '<|end|>' → logprob: -2.824277400970459
    5. '    
' → logprob: -3.699277400970459
    6. ')' → logprob: -5.324277400970459
    7. '[' → logprob: -5.574277400970459
    8. '    ' → logprob: -5.574277400970459
    9. '  
' → logprob: -5.574277400970459
    10. '0' → logprob: -5.699277400970459

Token 433: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26506689190864563
    2. '   ' → logprob: -2.1400668621063232
    3. ' for' → logprob: -2.2650668621063232
    4. 'count' → logprob: -5.515067100524902
    5. 'prev' → logprob: -6.140067100524902
    6. 'sum' → logprob: -6.640067100524902
    7. 'cnt' → logprob: -6.890067100524902
    8. 'acc' → logprob: -7.390067100524902
    9. 'c' → logprob: -8.390067100524902
    10. '    
' → logprob: -8.515067100524902

Token 434: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21922549605369568
    2. 'c' → logprob: -2.9692254066467285
    3. 'x' → logprob: -2.9692254066467285
    4. 'bb' → logprob: -2.9692254066467285
    5. 'i' → logprob: -4.5942254066467285
    6. ' b' → logprob: -4.9692254066467285
    7. 'j' → logprob: -5.3442254066467285
    8. 'v' → logprob: -5.3442254066467285
    9. 'idx' → logprob: -5.8442254066467285
    10. 'pos' → logprob: -5.8442254066467285

Token 435: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027650510892271996
    2. 'in' → logprob: -3.6526505947113037
    3. 'b' → logprob: -6.902650356292725
    4. 'bbb' → logprob: -8.652650833129883
    5. ' ' → logprob: -9.277650833129883
    6. '  ' → logprob: -10.527650833129883
    7. '   ' → logprob: -10.652650833129883
    8. 'bb' → logprob: -11.527650833129883
    9. '_' → logprob: -12.402650833129883
    10. '_in' → logprob: -12.777650833129883

Token 436: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.0002016331272898242
    2. ' b' → logprob: -9.000201225280762
    3. 'bb' → logprob: -9.500201225280762
    4. 'b' → logprob: -12.875201225280762
    5. 'bbbb' → logprob: -14.500201225280762
    6. 'BBB' → logprob: -16.500202178955078
    7. '	b' → logprob: -16.625202178955078
    8. 'bbe' → logprob: -16.875202178955078
    9. 'bbs' → logprob: -16.875202178955078
    10. '   ' → logprob: -17.250202178955078

Token 437: 'bb' (ID: 10029)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5319173336029053
    2. 'bb' → logprob: -1.9069173336029053
    3. 'bbb' → logprob: -2.1569173336029053
    4. ':' → logprob: -2.7819173336029053
    5. '   ' → logprob: -3.0319173336029053
    6. '       ' → logprob: -4.531917572021484
    7. '  ' → logprob: -5.656917572021484
    8. '):' → logprob: -5.781917572021484
    9. '+' → logprob: -5.906917572021484
    10. ':
' → logprob: -6.031917572021484

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26223814487457275
    2. ':
' → logprob: -1.6372381448745728
    3. '   ' → logprob: -4.387238025665283
    4. '       ' → logprob: -4.762238025665283
    5. '):
' → logprob: -4.887238025665283
    6. ',' → logprob: -5.012238025665283
    7. '<|end|>' → logprob: -7.762238025665283
    8. '):' → logprob: -8.262238502502441
    9. '():
' → logprob: -10.137238502502441
    10. '<|end|>' → logprob: -10.637238502502441

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035707976669073105
    2. 'bit' → logprob: -3.410707950592041
    3. ' bit' → logprob: -6.660707950592041
    4. '      ' → logprob: -7.910707950592041
    5. '   ' → logprob: -9.0357084274292
    6. '    ' → logprob: -9.5357084274292
    7. ',' → logprob: -9.9107084274292
    8. '     ' → logprob: -10.0357084274292
    9. '        
' → logprob: -10.0357084274292
    10. '           ' → logprob: -10.5357084274292

Token 440: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7747001051902771
    2. 'bit' (adapté à ' bit') → logprob: -1.5247001647949219
    3. 'count' → logprob: -3.399700164794922
    4. 'sum' → logprob: -3.399700164794922
    5. 'val' → logprob: -3.524700164794922
    6. 'c' → logprob: -3.524700164794922
    7. 'cnt' → logprob: -3.524700164794922
    8. 'cur' → logprob: -3.774700164794922
    9. 'v' → logprob: -3.899700164794922
    10. 'print' → logprob: -3.899700164794922

Token 441: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.12275998294353485
    2. '.sum' → logprob: -2.372760057449341
    3. '.' → logprob: -3.997760057449341
    4. 'sum' → logprob: -6.122759819030762
    5. ' .' → logprob: -6.747759819030762
    6. '_sum' → logprob: -7.872759819030762
    7. '.remove' → logprob: -9.872759819030762
    8. ' sum' → logprob: -10.622759819030762
    9. 'add' → logprob: -10.622759819030762
    10. '.update' → logprob: -11.497759819030762

Token 442: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.8921695047756657e-05
    2. 'b' → logprob: -10.625028610229492
    3. '(' → logprob: -12.500028610229492
    4. '	b' → logprob: -15.125028610229492
    5. ')b' → logprob: -15.125028610229492
    6. '(
' → logprob: -15.750028610229492
    7. ',b' → logprob: -17.125028610229492
    8. ' b' → logprob: -17.375028610229492
    9. '=b' → logprob: -18.625028610229492
    10. '```' → logprob: -18.750028610229492

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. '-' → logprob: -9.25019359588623
    3. ' ,' → logprob: -10.25019359588623
    4. ',-' → logprob: -10.50019359588623
    5. ' -' → logprob: -10.87519359588623
    6. '   ' → logprob: -12.25019359588623
    7. '1' → logprob: -13.12519359588623
    8. '+' → logprob: -13.12519359588623
    9. ',
' → logprob: -13.37519359588623
    10. ')' → logprob: -13.75019359588623

Token 444: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12254412472248077
    2. '1' → logprob: -2.747544050216675
    3. ' bit' → logprob: -2.997544050216675
    4. '-' → logprob: -7.372544288635254
    5. '-bit' → logprob: -8.122544288635254
    6. '(bit' → logprob: -8.747544288635254
    7. ' ' → logprob: -9.372544288635254
    8. '   ' → logprob: -9.622544288635254
    9. ' -' → logprob: -10.122544288635254
    10. 'bitr' → logprob: -10.997544288635254

Token 445: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.00012833021173719317
    2. '.tree' → logprob: -9.750128746032715
    3. 'sum' → logprob: -10.500128746032715
    4. '.' → logprob: -10.875128746032715
    5. ').' → logprob: -11.250128746032715
    6. '.size' → logprob: -11.875128746032715
    7. '.query' → logprob: -14.250128746032715
    8. '.b' → logprob: -14.875128746032715
    9. ' sum' → logprob: -14.875128746032715
    10. '	sum' → logprob: -14.875128746032715

Token 446: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.416665640543215e-05
    2. 'b' → logprob: -10.75003433227539
    3. '(' → logprob: -12.25003433227539
    4. ' b' → logprob: -12.50003433227539
    5. ' (' → logprob: -13.00003433227539
    6. ')b' → logprob: -14.50003433227539
    7. '(bit' → logprob: -14.62503433227539
    8. '	b' → logprob: -15.12503433227539
    9. ')' → logprob: -15.12503433227539
    10. '[b' → logprob: -16.12503433227539

Token 447: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4809584617614746
    2. '-' → logprob: -1.1059584617614746
    3. ' -' → logprob: -4.230958461761475
    4. '(b' → logprob: -4.480958461761475
    5. '()' → logprob: -4.480958461761475
    6. 'b' → logprob: -4.980958461761475
    7. '()-' → logprob: -5.605958461761475
    8. ')-' → logprob: -6.605958461761475
    9. ')b' → logprob: -7.730958461761475
    10. '(' → logprob: -7.855958461761475

Token 448: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.750024795532227
    3. '-' → logprob: -13.875024795532227
    4. '   ' → logprob: -14.375024795532227
    5. ')' → logprob: -14.500024795532227
    6. 'b' → logprob: -15.375024795532227
    7. '```' → logprob: -15.375024795532227
    8. '2' → logprob: -15.625024795532227
    9. '  ' → logprob: -17.000024795532227
    10. '(' → logprob: -17.125024795532227

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.500032424926758
    3. ')' → logprob: -13.687532424926758
    4. '-' → logprob: -13.750032424926758
    5. '   ' → logprob: -14.187532424926758
    6. '```' → logprob: -14.812532424926758
    7. '2' → logprob: -15.062532424926758
    8. 'b' → logprob: -15.687532424926758
    9. '  ' → logprob: -16.187532424926758
    10. '(' → logprob: -16.187532424926758

Token 450: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2520406246185303
    2. ')' → logprob: -1.5020406246185303
    3. '))
' → logprob: -10.37704086303711
    4. ')
' → logprob: -10.87704086303711
    5. ' ))' → logprob: -10.87704086303711
    6. ')))' → logprob: -11.00204086303711
    7. ' )' → logprob: -11.00204086303711
    8. '       ' → logprob: -12.87704086303711
    9. ')b' → logprob: -14.00204086303711
    10. '   ' → logprob: -14.00204086303711

Token 451: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.250042915344238
    3. '(sum' → logprob: -12.375042915344238
    4. '(max' → logprob: -14.125042915344238
    5. '(bits' → logprob: -14.375042915344238
    6. '()' → logprob: -14.625042915344238
    7. 'bit' → logprob: -14.625042915344238
    8. '(b' → logprob: -15.000042915344238
    9. '((' → logprob: -15.375042915344238
    10. '(Bit' → logprob: -15.375042915344238

Token 453: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -2.1054253011243418e-05
    2. ' .' → logprob: -11.375020980834961
    3. '.' → logprob: -12.000020980834961
    4. '.tree' → logprob: -13.625020980834961
    5. '.size' → logprob: -13.875020980834961
    6. 'sum' → logprob: -14.750020980834961
    7. ').' → logprob: -15.125020980834961
    8. '.Sum' → logprob: -15.250020980834961
    9. '.lower' → logprob: -15.500020980834961
    10. '.s' → logprob: -16.12502098083496

Token 454: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.3136976957321167
    2. '(len' → logprob: -1.3136976957321167
    3. '(n' → logprob: -8.188697814941406
    4. '(' → logprob: -9.313697814941406
    5. '(bits' → logprob: -10.188697814941406
    6. 'bit' → logprob: -12.313697814941406
    7. '(size' → logprob: -12.313697814941406
    8. ')' → logprob: -12.563697814941406
    9. '(length' → logprob: -12.688697814941406
    10. '((' → logprob: -12.688697814941406

Token 455: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -8.77627644513268e-06
    2. ' .' → logprob: -12.250008583068848
    3. 'size' → logprob: -12.875008583068848
    4. '.' → logprob: -13.750008583068848
    5. ' size' → logprob: -15.625008583068848
    6. '.tree' → logprob: -15.875008583068848
    7. '   ' → logprob: -17.000009536743164
    8. ' ' → logprob: -17.250009536743164
    9. '.bit' → logprob: -17.750009536743164
    10. '  ' → logprob: -18.375009536743164

Token 456: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008817716501653194
    2. ')' → logprob: -4.758817672729492
    3. ' ))' → logprob: -8.883817672729492
    4. '()))' → logprob: -10.133817672729492
    5. '))
' → logprob: -11.508817672729492
    6. ' )' → logprob: -12.133817672729492
    7. '-' → logprob: -12.883817672729492
    8. '())' → logprob: -13.383817672729492
    9. ' -' → logprob: -13.508817672729492
    10. ')
' → logprob: -13.883817672729492

Token 457: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001266613689949736
    2. '))' → logprob: -9.125126838684082
    3. ')
' → logprob: -11.500126838684082
    4. ' )' → logprob: -11.875126838684082
    5. '())' → logprob: -15.750126838684082
    6. '+' → logprob: -16.000125885009766
    7. '})' → logprob: -16.750125885009766
    8. ')))' → logprob: -16.750125885009766
    9. '`)' → logprob: -17.125125885009766
    10. '```' → logprob: -17.125125885009766

Token 458: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47174257040023804
    2. '100' → logprob: -1.8467426300048828
    3. '(m' → logprob: -1.9717426300048828
    4. 'm' → logprob: -3.096742630004883
    5. ' (' → logprob: -3.596742630004883
    6. ' ' → logprob: -5.471742630004883
    7. '998' → logprob: -6.346742630004883
    8. '10' → logprob: -8.846742630004883
    9. '1' → logprob: -9.346742630004883
    10. '123' → logprob: -9.846742630004883

Token 459: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0036237118765711784
    2. '100' → logprob: -5.7536234855651855
    3. '998' → logprob: -7.7536234855651855
    4. ' ' → logprob: -11.253623962402344
    5. '1' → logprob: -12.753623962402344
    6. '   ' → logprob: -15.253623962402344
    7. '(' → logprob: -15.378623962402344
    8. '109' → logprob: -16.753623962402344
    9. 'int' → logprob: -16.878623962402344
    10. '
' → logprob: -17.003623962402344

Token 460: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005262265913188457
    2. '+' → logprob: -8.250526428222656
    3. '**' → logprob: -9.000526428222656
    4. '```' → logprob: -9.625526428222656
    5. '09' → logprob: -9.750526428222656
    6. ' ' → logprob: -12.000526428222656
    7. '``' → logprob: -12.625526428222656
    8. '   ' → logprob: -12.875526428222656
    9. '009' → logprob: -13.375526428222656
    10. '_' → logprob: -14.125526428222656

Token 461: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.125
    3. ' ' → logprob: -18.25
    4. '```' → logprob: -19.75
    5. '   ' → logprob: -21.875
    6. '
' → logprob: -22.25
    7. '+' → logprob: -22.75
    8. '19' → logprob: -23.5
    9. '９' → logprob: -23.5
    10. '``' → logprob: -23.5

Token 462: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.0
    3. '
' → logprob: -19.25
    4. '19' → logprob: -19.5
    5. '```' → logprob: -19.5
    6. ' ' → logprob: -20.0
    7. '+' → logprob: -20.125
    8. '   ' → logprob: -20.5
    9. '10' → logprob: -20.625
    10. '8' → logprob: -20.625

Token 463: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003024537581950426
    2. ' +' → logprob: -8.2503023147583
    3. '7' → logprob: -10.1253023147583
    4. '```' → logprob: -14.5003023147583
    5. '＋' → logprob: -15.1253023147583
    6. '+
' → logprob: -15.5003023147583
    7. ')+' → logprob: -17.875303268432617
    8. '   ' → logprob: -17.875303268432617
    9. '9' → logprob: -18.125303268432617
    10. '+)' → logprob: -18.125303268432617

Token 464: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '+' → logprob: -20.0
    4. '9' → logprob: -20.75
    5. '```' → logprob: -20.75
    6. '   ' → logprob: -20.875
    7. '07' → logprob: -22.5
    8. '
' → logprob: -22.625
    9. '

' → logprob: -22.75
    10. ' ' → logprob: -23.25

Token 465: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '9' → logprob: -18.875
    3. ' ' → logprob: -19.125
    4. '```' → logprob: -20.375
    5. '+' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. '
' → logprob: -21.875
    8. '07' → logprob: -22.0
    9. '

' → logprob: -22.375
    10. ' ' → logprob: -22.875

Token 466: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889650017023087
    2. '))' → logprob: -2.5788965225219727
    3. ')))' → logprob: -12.453896522521973
    4. ' )' → logprob: -13.328896522521973
    5. ')
' → logprob: -14.328896522521973
    6. ')}' → logprob: -16.078895568847656
    7. '))
' → logprob: -16.578895568847656
    8. '})' → logprob: -16.578895568847656
    9. ')`' → logprob: -16.703895568847656
    10. ' ))' → logprob: -17.328895568847656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 464
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 208
Tokens correctement prédits (top 10): 398
Précision stricte (1ère position): 41.38%
Précision adaptée (1ère position): 44.83%
Précision (top 10): 85.78%
================================================================================
