================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

N = None
for line in sys.stdin:
    for word in line.strip().split():
        N = int(word)
        break
    if N is not None:
        break

ans = 100000000000000000
amax = math.floor(math.sqrt(N))
i = 1
while i <= amax:
    if N % i == 0:
        current = i + (N // i) - 2
        if current < ans:
            ans = current
    i += 1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8861402273178101
    2. '\' → logprob: -1.38614022731781
    3. 'import' → logprob: -2.1361403465270996
    4. '\n' → logprob: -2.2611403465270996
    5. 'def' → logprob: -3.5111403465270996
    6. '```' → logprob: -3.6361403465270996
    7. ',' → logprob: -4.3861403465271
    8. '#' → logprob: -4.6361403465271
    9. '
' → logprob: -4.6361403465271
    10. '' → logprob: -5.3861403465271

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9738211035728455
    2. '_' → logprob: -1.5988211631774902
    3. ' ' → logprob: -1.8488211631774902
    4. ' =' → logprob: -2.0988211631774902
    5. ')' → logprob: -2.5988211631774902
    6. '.' → logprob: -3.7238211631774902
    7. ',' → logprob: -4.22382116317749
    8. ' )' → logprob: -5.09882116317749
    9. '  ' → logprob: -5.59882116317749
    10. '[' → logprob: -5.72382116317749

Token 8: ' None' (ID: 4662)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09664031863212585
    2. ' ' → logprob: -2.7216403484344482
    3. 'int' → logprob: -3.8466403484344482
    4. '10' → logprob: -5.346640110015869
    5. '100' → logprob: -9.721640586853027
    6. '20' → logprob: -9.721640586853027
    7. '5' → logprob: -9.846640586853027
    8. '50' → logprob: -11.096640586853027
    9. ' input' → logprob: -11.596640586853027
    10. '[int' → logprob: -12.221640586853027

Token 9: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020696038380265236
    2. ' =' → logprob: -4.02069616317749
    3. '#' → logprob: -7.52069616317749
    4. '<|end|>' → logprob: -7.52069616317749
    5. ',' → logprob: -8.020695686340332
    6. 'N' → logprob: -8.895695686340332
    7. ' ' → logprob: -8.895695686340332
    8. '\' → logprob: -8.895695686340332
    9. '```' → logprob: -9.020695686340332
    10. '=
' → logprob: -9.270695686340332

Token 10: 'for' (ID: 1938)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019599171355366707
    2. ' =' → logprob: -6.376959800720215
    3. '#' → logprob: -9.251959800720215
    4. ',' → logprob: -10.126959800720215
    5. '=
' → logprob: -10.126959800720215
    6. 'n' → logprob: -11.001959800720215
    7. ' ' → logprob: -11.376959800720215
    8. '<|end|>' → logprob: -11.751959800720215
    9. '
' → logprob: -12.251959800720215
    10. 'for' → logprob: -12.251959800720215

Token 11: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005888025742024183
    2. ' i' → logprob: -5.755887985229492
    3. '  ' → logprob: -6.005887985229492
    4. ' _' → logprob: -9.380887985229492
    5. '_' → logprob: -10.630887985229492
    6. 'i' → logprob: -11.130887985229492
    7. ' range' → logprob: -11.255887985229492
    8. ' ' → logprob: -11.255887985229492
    9. ' N' → logprob: -11.255887985229492
    10. ' item' → logprob: -11.630887985229492

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003237243974581361
    2. 'in' → logprob: -5.753237247467041
    3. ' ' → logprob: -10.378236770629883
    4. ' i' → logprob: -12.503236770629883
    5. ',' → logprob: -12.628236770629883
    6. 's' → logprob: -12.753236770629883
    7. 'import' → logprob: -13.378236770629883
    8. '```' → logprob: -13.378236770629883
    9. '	in' → logprob: -13.378236770629883
    10. ':' → logprob: -13.503236770629883

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4742215573787689
    2. 'sys' → logprob: -0.9742215871810913
    3. '=sys' → logprob: -9.099221229553223
    4. '	sys' → logprob: -10.974221229553223
    5. '(sys' → logprob: -11.849221229553223
    6. ' iter' → logprob: -12.724221229553223
    7. 'stdin' → logprob: -13.599221229553223
    8. '```' → logprob: -13.724221229553223
    9. 'iter' → logprob: -14.349221229553223
    10. ' ' → logprob: -14.474221229553223

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010032468708232045
    2. '.' → logprob: -10.750100135803223
    3. '.argv' → logprob: -10.750100135803223
    4. ' .' → logprob: -10.875100135803223
    5. '.stdout' → logprob: -11.125100135803223
    6. ' stdin' → logprob: -11.875100135803223
    7. 'stdin' → logprob: -12.000100135803223
    8. '.readline' → logprob: -12.250100135803223
    9. '.input' → logprob: -13.125100135803223
    10. '.std' → logprob: -13.250100135803223

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013844015775248408
    2. '.readline' → logprob: -7.126384258270264
    3. '.' → logprob: -8.626384735107422
    4. '.strip' → logprob: -8.751384735107422
    5. '.split' → logprob: -9.501384735107422
    6. ':
' → logprob: -9.626384735107422
    7. ' :' → logprob: -10.251384735107422
    8. '.rstrip' → logprob: -10.501384735107422
    9. '.readlines' → logprob: -11.376384735107422
    10. ':**' → logprob: -12.251384735107422

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009123834781348705
    2. ':' → logprob: -5.134123802185059
    3. '    
' → logprob: -7.259123802185059
    4. ' line' → logprob: -7.384123802185059
    5. ' if' → logprob: -7.634123802185059
    6. ' N' → logprob: -8.009123802185059
    7. ' ' → logprob: -8.759123802185059
    8. '.strip' → logprob: -9.009123802185059
    9. 'if' → logprob: -9.259123802185059
    10. 'N' → logprob: -9.259123802185059

Token 17: ' for' (ID: 395)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05332878604531288
    2. ' if' → logprob: -3.6783287525177
    3. '   ' → logprob: -4.803328990936279
    4. ' N' → logprob: -4.803328990936279
    5. ' stripped' → logprob: -5.553328990936279
    6. 'line' → logprob: -5.678328990936279
    7. ' lines' → logprob: -6.678328990936279
    8. ' n' → logprob: -7.303328990936279
    9. 'if' → logprob: -8.178328514099121
    10. 'N' → logprob: -8.553328514099121

Token 18: ' word' (ID: 2195)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.3772011697292328
    2. ' ' → logprob: -1.8772011995315552
    3. ' word' → logprob: -1.8772011995315552
    4. 'token' → logprob: -6.002201080322266
    5. ' c' → logprob: -6.252201080322266
    6. ' char' → logprob: -6.502201080322266
    7. ' item' → logprob: -7.502201080322266
    8. ' i' → logprob: -7.627201080322266
    9. ' part' → logprob: -8.502201080322266
    10. ' line' → logprob: -9.252201080322266

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007617983501404524
    2. 'in' → logprob: -4.882617950439453
    3. 's' → logprob: -12.257617950439453
    4. ' ' → logprob: -12.632617950439453
    5. '```' → logprob: -14.257617950439453
    6. '	in' → logprob: -14.382617950439453
    7. '  ' → logprob: -14.507617950439453
    8. '_in' → logprob: -14.757617950439453
    9. '    ' → logprob: -15.257617950439453
    10. '<|end|>' → logprob: -15.632617950439453

Token 20: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.062004204839468
    2. 'line' → logprob: -2.8120040893554688
    3. ' word' → logprob: -11.062004089355469
    4. ' ' → logprob: -12.312004089355469
    5. '   ' → logprob: -12.437004089355469
    6. '	line' → logprob: -12.437004089355469
    7. '(line' → logprob: -12.687004089355469
    8. 'word' → logprob: -13.187004089355469
    9. '=line' → logprob: -13.437004089355469
    10. '[line' → logprob: -14.437004089355469

Token 21: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.003451818134635687
    2. '.strip' → logprob: -6.378451824188232
    3. '.' → logprob: -6.503451824188232
    4. ' .' → logprob: -8.628451347351074
    5. '.rstrip' → logprob: -10.003451347351074
    6. ':' → logprob: -11.253451347351074
    7. 'split' → logprob: -12.003451347351074
    8. '   ' → logprob: -12.878451347351074
    9. ' split' → logprob: -13.878451347351074
    10. '.s' → logprob: -14.003451347351074

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7848862373502925e-05
    2. '()' → logprob: -10.750027656555176
    3. ' ().' → logprob: -12.375027656555176
    4. '.split' → logprob: -13.250027656555176
    5. '():' → logprob: -16.000028610229492
    6. '('' → logprob: -16.125028610229492
    7. '().'' → logprob: -16.250028610229492
    8. '.' → logprob: -17.750028610229492
    9. '(' → logprob: -17.875028610229492
    10. ''s' → logprob: -18.125028610229492

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.500000953674316
    3. 'spl' → logprob: -16.375
    4. 'rstrip' → logprob: -16.375
    5. 'strip' → logprob: -16.75
    6. '```' → logprob: -17.5
    7. '(split' → logprob: -17.5
    8. '.split' → logprob: -17.625
    9. 'replace' → logprob: -17.75
    10. 'startswith' → logprob: -18.0

Token 24: '():
' (ID: 8595)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03311431035399437
    2. '(' → logprob: -4.158114433288574
    3. '()' → logprob: -4.158114433288574
    4. '("("' → logprob: -6.783114433288574
    5. '("' → logprob: -9.408114433288574
    6. '(',' → logprob: -9.908114433288574
    7. '(`' → logprob: -11.908114433288574
    8. ''' → logprob: -12.158114433288574
    9. '('.')' → logprob: -12.283114433288574
    10. '())' → logprob: -13.033114433288574

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12860195338726044
    2. ' if' → logprob: -2.5036020278930664
    3. 'if' → logprob: -3.3786020278930664
    4. '   ' → logprob: -5.628602027893066
    5. ' N' → logprob: -7.753602027893066
    6. '```' → logprob: -8.253602027893066
    7. 'N' → logprob: -8.378602027893066
    8. ':' → logprob: -10.503602027893066
    9. '    ' → logprob: -10.753602027893066
    10. '[' → logprob: -11.003602027893066

Token 26: ' N' (ID: 478)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3904382884502411
    2. 'if' → logprob: -1.5154383182525635
    3. 'N' (adapté à ' N') → logprob: -3.0154383182525635
    4. '           ' → logprob: -3.5154383182525635
    5. ' N' → logprob: -4.140438079833984
    6. '   ' → logprob: -4.890438079833984
    7. '       ' → logprob: -7.515438079833984
    8. 'n' → logprob: -8.265438079833984
    9. '```' → logprob: -9.015438079833984
    10. 'i' → logprob: -9.265438079833984

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232244729995728
    2. '=' → logprob: -0.8982244729995728
    3. ' +=' → logprob: -10.398224830627441
    4. ' is' → logprob: -10.773224830627441
    5. '+=' → logprob: -11.523224830627441
    6. ' ' → logprob: -11.523224830627441
    7. '=int' → logprob: -11.648224830627441
    8. ' =)' → logprob: -12.273224830627441
    9. '=None' → logprob: -12.523224830627441
    10. ' ==' → logprob: -12.523224830627441

Token 28: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12697733938694
    2. ' int' → logprob: -2.1269774436950684
    3. 'float' → logprob: -10.25197696685791
    4. ' float' → logprob: -11.75197696685791
    5. 'word' → logprob: -13.37697696685791
    6. ' word' → logprob: -13.62697696685791
    7. '(int' → logprob: -14.12697696685791
    8. ' ' → logprob: -14.62697696685791
    9. 'len' → logprob: -15.00197696685791
    10. '=int' → logprob: -15.00197696685791

Token 29: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.20146284997463226
    2. '(' → logprob: -1.7014628648757935
    3. ' (' → logprob: -10.951462745666504
    4. 'word' → logprob: -11.701462745666504
    5. '('' → logprob: -11.951462745666504
    6. '("("' → logprob: -12.951462745666504
    7. ' word' → logprob: -13.076462745666504
    8. '(w' → logprob: -13.201462745666504
    9. '(world' → logprob: -13.326462745666504
    10. '(
' → logprob: -13.326462745666504

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. ' )' → logprob: -10.625030517578125
    3. ')
' → logprob: -12.375030517578125
    4. '))' → logprob: -14.875030517578125
    5. '+' → logprob: -15.000030517578125
    6. ' ' → logprob: -16.000030517578125
    7. '   ' → logprob: -16.125030517578125
    8. ')**' → logprob: -16.750030517578125
    9. ')))' → logprob: -16.750030517578125
    10. '<|end|>' → logprob: -16.750030517578125

Token 31: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6720209717750549
    2. '<|end|>' → logprob: -1.9220209121704102
    3. ' ' → logprob: -2.54702091217041
    4. ' 
' → logprob: -2.79702091217041
    5. '#' → logprob: -3.17202091217041
    6. ')' → logprob: -3.42202091217041
    7. 'if' → logprob: -3.54702091217041
    8. '\n' → logprob: -3.92202091217041
    9. 'print' → logprob: -4.42202091217041
    10. ' if' → logprob: -4.54702091217041

Token 32: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6255123019218445
    2. ' ' → logprob: -1.5005123615264893
    3. 'break' (adapté à ' break') → logprob: -1.6255123615264893
    4. '    ' → logprob: -4.25051212310791
    5. '\n' → logprob: -4.50051212310791
    6. '```' → logprob: -5.12551212310791
    7. '        ' → logprob: -5.62551212310791
    8. '   ' → logprob: -5.75051212310791
    9. '       ' → logprob: -6.37551212310791
    10. ' \' → logprob: -7.25051212310791

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055885978043079376
    2. '\n' → logprob: -3.9308860301971436
    3. '    ' → logprob: -4.5558857917785645
    4. '    
' → logprob: -5.3058857917785645
    5. ' ' → logprob: -5.6808857917785645
    6. '
' → logprob: -5.8058857917785645
    7. 'break' → logprob: -6.0558857917785645
    8. '<|end|>' → logprob: -6.1808857917785645
    9. '  ' → logprob: -6.3058857917785645
    10. '       ' → logprob: -6.6808857917785645

Token 36: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0007615071372129023
    2. 'N' → logprob: -7.25076150894165
    3. ' ' → logprob: -10.125761032104492
    4. ' ' → logprob: -11.625761032104492
    5. ' not' → logprob: -13.500761032104492
    6. ' isinstance' → logprob: -14.125761032104492
    7. ' a' → logprob: -16.125761032104492
    8. ' True' → logprob: -16.250761032104492
    9. ' None' → logprob: -16.500761032104492
    10. '    ' → logprob: -16.750761032104492

Token 37: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0047610728070139885
    2. 'is' → logprob: -5.379761219024658
    3. ':' → logprob: -9.0047607421875
    4. '<|end|>' → logprob: -11.8797607421875
    5. ' ' → logprob: -12.3797607421875
    6. '>' → logprob: -13.0047607421875
    7. '<|end|>' → logprob: -13.1297607421875
    8. '	is' → logprob: -14.3797607421875
    9. '!=' → logprob: -14.3797607421875
    10. ':
' → logprob: -14.7547607421875

Token 38: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04373817890882492
    2. 'not' → logprob: -3.1687381267547607
    3. ' None' → logprob: -7.41873836517334
    4. 'None' → logprob: -9.16873836517334
    5. ' ' → logprob: -10.66873836517334
    6. ' n' → logprob: -13.04373836517334
    7. ' ' → logprob: -13.60623836517334
    8. 'n' → logprob: -13.73123836517334
    9. '	not' → logprob: -14.04373836517334
    10. 'Not' → logprob: -14.10623836517334

Token 39: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759397745132446
    2. ' None' → logprob: -0.8259397745132446
    3. '(None' → logprob: -15.825940132141113
    4. '=None' → logprob: -16.950939178466797
    5. '_None' → logprob: -17.075939178466797
    6. ' ' → logprob: -17.950939178466797
    7. 'none' → logprob: -19.575939178466797
    8. '_none' → logprob: -19.700939178466797
    9. '```' → logprob: -19.700939178466797
    10. ' none' → logprob: -20.075939178466797

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028640811797231436
    2. '       ' → logprob: -6.127863883972168
    3. ':
' → logprob: -8.002863883972168
    4. '   ' → logprob: -8.252863883972168
    5. ' :' → logprob: -9.627863883972168
    6. '<|end|>' → logprob: -12.002863883972168
    7. '    ' → logprob: -13.002863883972168
    8. '<|end|>' → logprob: -13.502863883972168
    9. '           ' → logprob: -13.627863883972168
    10. '):' → logprob: -13.752863883972168

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021271906734909862
    2. '   ' → logprob: -8.500212669372559
    3. '```' → logprob: -12.875212669372559
    4. ':' → logprob: -13.625212669372559
    5. '           ' → logprob: -13.625212669372559
    6. ' break' → logprob: -13.875212669372559
    7. ' ' → logprob: -13.875212669372559
    8. '<|end|>' → logprob: -14.875212669372559
    9. '      ' → logprob: -15.000212669372559
    10. '     ' → logprob: -15.250212669372559

Token 42: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20843259990215302
    2. '   ' → logprob: -1.9584325551986694
    3. ' break' → logprob: -3.083432674407959
    4. 'break' (adapté à ' break') → logprob: -6.708432674407959
    5. '	break' → logprob: -11.2084321975708
    6. ' ' → logprob: -11.3334321975708
    7. '```' → logprob: -11.5834321975708
    8. '           ' → logprob: -12.9584321975708
    9. '    ' → logprob: -13.3334321975708
    10. '     ' → logprob: -14.2084321975708

Token 43: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2588618993759155
    2. '#' → logprob: -1.8838618993759155
    3. 'for' → logprob: -1.8838618993759155
    4. 'n' → logprob: -2.258862018585205
    5. '
' → logprob: -3.008862018585205
    6. '\' → logprob: -3.258862018585205
    7. ' 
' → logprob: -3.508862018585205
    8. '' → logprob: -3.758862018585205
    9. '```' → logprob: -3.883862018585205
    10. 'i' → logprob: -3.883862018585205

Token 44: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5410531759262085
    2. 'for' → logprob: -1.7910531759262085
    3. 'factor' → logprob: -2.166053295135498
    4. '#' → logprob: -2.291053295135498
    5. 'n' → logprob: -2.291053295135498
    6. 'print' → logprob: -2.791053295135498
    7. 'if' → logprob: -3.291053295135498
    8. 's' → logprob: -3.416053295135498
    9. 'def' → logprob: -3.791053295135498
    10. 'count' → logprob: -4.041053295135498

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08907011151313782
    2. '=' → logprob: -2.4640700817108154
    3. '_' → logprob: -9.214070320129395
    4. ' ' → logprob: -11.964070320129395
    5. 's' → logprob: -12.089070320129395
    6. '[' → logprob: -12.589070320129395
    7. ' +=' → logprob: -12.964070320129395
    8. ':' → logprob: -13.214070320129395
    9. 'space' → logprob: -13.339070320129395
    10. ' =
' → logprob: -13.464070320129395

Token 46: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7338083982467651
    2. 'math' → logprob: -1.3588083982467651
    3. '0' → logprob: -2.3588085174560547
    4. ' ' → logprob: -2.9838085174560547
    5. ' N' → logprob: -3.1088085174560547
    6. '1' → logprob: -3.2338085174560547
    7. '"' → logprob: -4.858808517456055
    8. '(math' → logprob: -5.733808517456055
    9. ' sum' → logprob: -5.858808517456055
    10. ' int' → logprob: -5.983808517456055

Token 47: '100' (ID: 1353)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5012760162353516
    2. '0' → logprob: -1.8762760162353516
    3. 'N' → logprob: -2.2512760162353516
    4. '1' → logprob: -2.7512760162353516
    5. 'sum' → logprob: -4.001276016235352
    6. '2' → logprob: -4.876276016235352
    7. 'max' → logprob: -5.126276016235352
    8. '[N' → logprob: -5.126276016235352
    9. 'int' → logprob: -5.251276016235352
    10. 'pow' → logprob: -5.376276016235352

Token 48: '000' (ID: 1302)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.189836025238037
    2. '%' → logprob: -1.564836025238037
    3. ' ' → logprob: -1.689836025238037
    4. ' *' → logprob: -2.189836025238037
    5. '**' → logprob: -2.564836025238037
    6. '0' → logprob: -3.314836025238037
    7. ' %' → logprob: -4.064836025238037
    8. ' **' → logprob: -4.189836025238037
    9. '000' → logprob: -4.564836025238037
    10. '00' → logprob: -5.314836025238037

Token 49: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2455616146326065
    2. '000' → logprob: -1.6205615997314453
    3. '<|end|>' → logprob: -4.995561599731445
    4. '00' → logprob: -5.870561599731445
    5. '*' → logprob: -5.870561599731445
    6. ' ' → logprob: -5.995561599731445
    7. '%' → logprob: -6.495561599731445
    8. '**' → logprob: -6.870561599731445
    9. '\' → logprob: -7.370561599731445
    10. '  
' → logprob: -8.245561599731445

Token 50: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024652406573295593
    2. '000' → logprob: -3.7746524810791016
    3. '<|end|>' → logprob: -6.899652481079102
    4. '00' → logprob: -9.274652481079102
    5. '1' → logprob: -9.524652481079102
    6. ' ' → logprob: -9.649652481079102
    7. '+' → logprob: -9.774652481079102
    8. '
' → logprob: -10.149652481079102
    9. '```' → logprob: -11.774652481079102
    10. '\' → logprob: -11.899652481079102

Token 51: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01610475964844227
    2. '000' → logprob: -4.141104698181152
    3. '00' → logprob: -10.391104698181152
    4. '
' → logprob: -11.891104698181152
    5. '

' → logprob: -12.391104698181152
    6. '\n' → logprob: -12.641104698181152
    7. '1' → logprob: -12.766104698181152
    8. '```' → logprob: -12.891104698181152
    9. '#' → logprob: -13.141104698181152
    10. '\' → logprob: -13.141104698181152

Token 52: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02071717567741871
    2. '000' → logprob: -3.895717144012451
    3. '00' → logprob: -9.27071762084961
    4. '_' → logprob: -10.14571762084961
    5. '+' → logprob: -11.77071762084961
    6. '.' → logprob: -11.89571762084961
    7. ' ' → logprob: -12.14571762084961
    8. '1' → logprob: -12.39571762084961
    9. '-' → logprob: -12.52071762084961
    10. '#' → logprob: -13.02071762084961

Token 53: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23430810868740082
    2. '000' → logprob: -1.609308123588562
    3. ' ' → logprob: -5.609308242797852
    4. '+' → logprob: -6.734308242797852
    5. '00' → logprob: -6.984308242797852
    6. '**' → logprob: -6.984308242797852
    7. '_' → logprob: -7.234308242797852
    8. '.' → logprob: -7.859308242797852
    9. '```' → logprob: -8.734308242797852
    10. '' → logprob: -9.109308242797852

Token 54: 'amax' (ID: 129555)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08556506782770157
    2. ' for' → logprob: -2.5855650901794434
    3. '**' → logprob: -6.085565090179443
    4. '
' → logprob: -6.460565090179443
    5. '0' → logprob: -7.085565090179443
    6. '*' → logprob: -7.960565090179443
    7. '\n' → logprob: -8.210564613342285
    8. 'a' → logprob: -8.585564613342285
    9. ' ' → logprob: -8.960564613342285
    10. 'i' → logprob: -9.335564613342285

Token 55: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.142606720328331
    2. '=' → logprob: -2.267606735229492
    3. '_=' → logprob: -4.517606735229492
    4. ' =' → logprob: -4.642606735229492
    5. '_val' → logprob: -5.142606735229492
    6. '_idx' → logprob: -6.642606735229492
    7. '_i' → logprob: -7.267606735229492
    8. '=_' → logprob: -8.267606735229492
    9. '_index' → logprob: -8.517606735229492
    10. '_value' → logprob: -8.642606735229492

Token 56: ' math' (ID: 13324)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2977341413497925
    2. ' None' → logprob: -1.2977341413497925
    3. ' ' → logprob: -1.5477341413497925
    4. 'None' → logprob: -2.422734260559082
    5. '-' → logprob: -2.547734260559082
    6. ' -' → logprob: -3.547734260559082
    7. ' N' → logprob: -3.672734260559082
    8. 'N' → logprob: -4.922734260559082
    9. '1' → logprob: -5.672734260559082
    10. ' float' → logprob: -6.297734260559082

Token 57: '.floor' (ID: 23934)
  Prédit: '.inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.006253334693610668
    2. ' inf' → logprob: -6.256253242492676
    3. '.ceil' → logprob: -6.881253242492676
    4. '.sqrt' → logprob: -7.006253242492676
    5. '_inf' → logprob: -7.381253242492676
    6. '.pow' → logprob: -7.381253242492676
    7. 'inf' → logprob: -7.631253242492676
    8. '.floor' → logprob: -8.756253242492676
    9. '.log' → logprob: -8.881253242492676
    10. '```' → logprob: -9.756253242492676

Token 58: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.3034602105617523
    2. '(N' → logprob: -1.4284602403640747
    3. '(' → logprob: -4.053460121154785
    4. '(s' → logprob: -6.303460121154785
    5. '((' → logprob: -6.303460121154785
    6. '(n' → logprob: -7.178460121154785
    7. '(pow' → logprob: -9.053460121154785
    8. 'math' → logprob: -10.303460121154785
    9. '(-' → logprob: -10.303460121154785
    10. '(len' → logprob: -10.928460121154785

Token 59: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.034131426364183426
    2. '.log' → logprob: -3.4091315269470215
    3. '.pow' → logprob: -7.9091315269470215
    4. 'sqrt' → logprob: -10.159131050109863
    5. '.' → logprob: -10.284131050109863
    6. '.s' → logprob: -11.659131050109863
    7. '.ceil' → logprob: -11.909131050109863
    8. '.pi' → logprob: -12.034131050109863
    9. 'log' → logprob: -12.159131050109863
    10. '.factor' → logprob: -12.659131050109863

Token 60: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0026006263215094805
    2. '(' → logprob: -6.00260066986084
    3. 'N' → logprob: -9.12760066986084
    4. ' (' → logprob: -11.75260066986084
    5. '(
' → logprob: -12.75260066986084
    6. '((' → logprob: -13.12760066986084
    7. '(n' → logprob: -13.12760066986084
    8. ')' → logprob: -14.62760066986084
    9. ')(' → logprob: -15.00260066986084
    10. ' N' → logprob: -15.87760066986084

Token 61: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006305815186351538
    2. ')' → logprob: -5.381305694580078
    3. '))+' → logprob: -7.131305694580078
    4. ' ))' → logprob: -7.881305694580078
    5. ')))' → logprob: -8.006305694580078
    6. '()))' → logprob: -9.881305694580078
    7. ')+' → logprob: -10.381305694580078
    8. '(' → logprob: -10.631305694580078
    9. '/' → logprob: -11.381305694580078
    10. '))
' → logprob: -11.506305694580078

Token 62: 'i' (ID: 72)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35798242688179016
    2. 'for' → logprob: -1.4829823970794678
    3. ' for' → logprob: -3.1079823970794678
    4. '*' → logprob: -4.357982635498047
    5. '**' → logprob: -4.857982635498047
    6. ')' → logprob: -6.107982635498047
    7. '<|end|>' → logprob: -6.232982635498047
    8. ' ' → logprob: -6.857982635498047
    9. '+
' → logprob: -6.982982635498047
    10. ' +' → logprob: -7.232982635498047

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761616230010986
    2. '=' → logprob: -0.8261616230010986
    3. 'n' → logprob: -8.82616138458252
    4. ' ' → logprob: -9.82616138458252
    5. 's' → logprob: -11.07616138458252
    6. 'd' → logprob: -13.32616138458252
    7. 'f' → logprob: -13.82616138458252
    8. ' n' → logprob: -14.70116138458252
    9. ' +=' → logprob: -14.82616138458252
    10. ',' → logprob: -15.07616138458252

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1630907952785492
    2. '2' → logprob: -1.9130908250808716
    3. '0' → logprob: -6.413090705871582
    4. 'amax' → logprob: -7.163090705871582
    5. ' ' → logprob: -8.038090705871582
    6. 'a' → logprob: -9.288090705871582
    7. '3' → logprob: -11.663090705871582
    8. 'max' → logprob: -12.288090705871582
    9. 'imax' → logprob: -12.413090705871582
    10. '-' → logprob: -13.413090705871582

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22729502618312836
    2. '2' → logprob: -1.6022950410842896
    3. '0' → logprob: -6.977294921875
    4. 'amax' → logprob: -7.102294921875
    5. ' ' → logprob: -9.477294921875
    6. 'a' → logprob: -10.852294921875
    7. 'imax' → logprob: -12.289794921875
    8. '(' → logprob: -12.602294921875
    9. '3' → logprob: -12.727294921875
    10. 'max' → logprob: -12.852294921875

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9150394797325134
    2. '<|end|>' → logprob: -1.0400395393371582
    3. '+' → logprob: -1.6650395393371582
    4. ' ' → logprob: -3.790039539337158
    5. '<|end|>' → logprob: -4.540039539337158
    6. ' 
' → logprob: -5.040039539337158
    7. '*' → logprob: -5.665039539337158
    8. 'while' → logprob: -5.915039539337158
    9. ':' → logprob: -6.290039539337158
    10. '**' → logprob: -6.665039539337158

Token 67: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003052811836823821
    2. '<|end|>' → logprob: -6.628052711486816
    3. 'while' → logprob: -7.128052711486816
    4. ' 
' → logprob: -7.503052711486816
    5. ' while' → logprob: -9.003052711486816
    6. '+' → logprob: -9.253052711486816
    7. '  
' → logprob: -9.503052711486816
    8. '<|end|>' → logprob: -11.003052711486816
    9. '

' → logprob: -11.753052711486816
    10. '+
' → logprob: -11.753052711486816

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01817803643643856
    2. 'i' → logprob: -4.0181779861450195
    3. '(i' → logprob: -11.14317798614502
    4. ' ' → logprob: -11.76817798614502
    5. '	i' → logprob: -13.26817798614502
    6. ' (' → logprob: -13.64317798614502
    7. ' ' → logprob: -13.64317798614502
    8. '(' → logprob: -14.14317798614502
    9. ' True' → logprob: -15.26817798614502
    10. 'True' → logprob: -15.51817798614502

Token 69: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.423788458108902
    2. ' <=' → logprob: -1.1737884283065796
    3. '*' → logprob: -4.298788547515869
    4. ' *' → logprob: -4.423788547515869
    5. '*i' → logprob: -4.548788547515869
    6. '<' → logprob: -10.048788070678711
    7. '**' → logprob: -10.423788070678711
    8. ' ' → logprob: -12.048788070678711
    9. ' <' → logprob: -12.423788070678711
    10. 'i' → logprob: -13.048788070678711

Token 70: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3987826704978943
    2. 'amax' → logprob: -1.148782730102539
    3. 'a' → logprob: -4.523782730102539
    4. 'am' → logprob: -8.023782730102539
    5. ' ' → logprob: -8.773782730102539
    6. ' am' → logprob: -8.898782730102539
    7. 'amin' → logprob: -9.273782730102539
    8. '	a' → logprob: -9.773782730102539
    9. 'ams' → logprob: -10.023782730102539
    10. 'amn' → logprob: -10.648782730102539

Token 71: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.36574100604048e-06
    2. 'm' → logprob: -13.875004768371582
    3. 'maz' → logprob: -13.875004768371582
    4. 'mac' → logprob: -14.125004768371582
    5. 'mx' → logprob: -14.500004768371582
    6. 'ma' → logprob: -14.500004768371582
    7. '_max' → logprob: -15.250004768371582
    8. 'mak' → logprob: -17.000003814697266
    9. 'мак' → logprob: -17.000003814697266
    10. 'mas' → logprob: -17.125003814697266

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3487044870853424
    2. ':
' → logprob: -1.22370445728302
    3. ' :
' → logprob: -8.97370433807373
    4. ' and' → logprob: -9.84870433807373
    5. ' :' → logprob: -9.84870433807373
    6. ':
' → logprob: -11.34870433807373
    7. ':

' → logprob: -12.22370433807373
    8. '**' → logprob: -12.47370433807373
    9. 'and' → logprob: -13.47370433807373
    10. ':i' → logprob: -13.84870433807373

Token 73: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46645158529281616
    2. ':
' → logprob: -1.716451644897461
    3. '   ' → logprob: -2.216451644897461
    4. ' ' → logprob: -3.216451644897461
    5. ' :
' → logprob: -4.466451644897461
    6. ' and' → logprob: -4.466451644897461
    7. ' :' → logprob: -4.591451644897461
    8. ' if' → logprob: -5.466451644897461
    9. '<|end|>' → logprob: -6.091451644897461
    10. '    ' → logprob: -6.591451644897461

Token 74: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5433819890022278
    2. ' ' → logprob: -0.9183819890022278
    3. 'if' (adapté à ' if') → logprob: -4.043382167816162
    4. ' 
' → logprob: -6.793382167816162
    5. '<|end|>' → logprob: -7.418382167816162
    6. '   ' → logprob: -8.418381690979004
    7. ' i' → logprob: -8.668381690979004
    8. '1' → logprob: -9.668381690979004
    9. '  ' → logprob: -9.793381690979004
    10. '    ' → logprob: -9.918381690979004

Token 75: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14344218373298645
    2. 'N' → logprob: -2.018442153930664
    3. ' ' → logprob: -7.268442153930664
    4. ' ' → logprob: -10.018442153930664
    5. ' (' → logprob: -11.518442153930664
    6. '   ' → logprob: -12.643442153930664
    7. '  ' → logprob: -12.768442153930664
    8. ' i' → logprob: -13.018442153930664
    9. '	N' → logprob: -13.143442153930664
    10. 'i' → logprob: -13.643442153930664

Token 76: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31381842494010925
    2. '%' → logprob: -1.4388184547424316
    3. '%i' → logprob: -3.4388184547424316
    4. ' ' → logprob: -10.313817977905273
    5. ' ' → logprob: -12.938817977905273
    6. '%e' → logprob: -14.313817977905273
    7. '%d' → logprob: -14.938817977905273
    8. '%x' → logprob: -15.688817977905273
    9. '％' → logprob: -15.813817977905273
    10. '%c' → logprob: -15.938817977905273

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026312489062547684
    2. ' i' → logprob: -3.6513125896453857
    3. ' ' → logprob: -11.901312828063965
    4. '   ' → logprob: -12.901312828063965
    5. '	i' → logprob: -13.651312828063965
    6. '  ' → logprob: -14.151312828063965
    7. '<|end|>' → logprob: -14.401312828063965
    8. ' ' → logprob: -16.02631187438965
    9. '```' → logprob: -16.77631187438965
    10. '<|end|>' → logprob: -17.02631187438965

Token 78: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869211673736572
    2. ' ==' → logprob: -1.1369211673736572
    3. ' ' → logprob: -10.886920928955078
    4. '===' → logprob: -11.636920928955078
    5. '=' → logprob: -11.761920928955078
    6. ')==' → logprob: -11.886920928955078
    7. '0' → logprob: -12.886920928955078
    8. '==
' → logprob: -13.511920928955078
    9. ')' → logprob: -14.011920928955078
    10. ']==' → logprob: -14.511920928955078

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804229199886322
    2. ' ' → logprob: -3.2880423069000244
    3. '  ' → logprob: -14.913042068481445
    4. '   ' → logprob: -15.538042068481445
    5. ' ' → logprob: -16.538042068481445
    6. '<|end|>' → logprob: -16.663042068481445
    7. '    ' → logprob: -16.850542068481445
    8. '```' → logprob: -17.163042068481445
    9. '۰' → logprob: -17.663042068481445
    10. ' ' → logprob: -18.850542068481445

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '  ' → logprob: -17.87523078918457
    4. '   ' → logprob: -18.12523078918457
    5. '۰' → logprob: -18.56273078918457
    6. '```' → logprob: -20.00023078918457
    7. '  ' → logprob: -20.06273078918457
    8. '०' → logprob: -20.25023078918457
    9. '=' → logprob: -20.25023078918457
    10. '٠' → logprob: -20.25023078918457

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001674110535532236
    2. ':
' → logprob: -6.501674175262451
    3. ' and' → logprob: -9.126673698425293
    4. ' :' → logprob: -9.876673698425293
    5. 'and' → logprob: -12.501673698425293
    6. ':

' → logprob: -12.876673698425293
    7. '   ' → logprob: -13.001673698425293
    8. '):' → logprob: -14.376673698425293
    9. ' :
' → logprob: -14.626673698425293
    10. '=' → logprob: -14.626673698425293

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757547080516815
    2. '   ' → logprob: -1.475754737854004
    3. '    
' → logprob: -2.725754737854004
    4. ' 
' → logprob: -3.600754737854004
    5. '
' → logprob: -4.350754737854004
    6. '        
' → logprob: -4.600754737854004
    7. ' ' → logprob: -5.100754737854004
    8. ' ans' → logprob: -5.225754737854004
    9. '```' → logprob: -5.350754737854004
    10. 'ans' → logprob: -5.850754737854004

Token 83: ' current' (ID: 2208)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.631485641002655
    2. 'j' → logprob: -1.1314857006072998
    3. 'a' → logprob: -2.7564857006073
    4. 'other' → logprob: -3.8814857006073
    5. '   ' → logprob: -4.131485462188721
    6. 'b' → logprob: -4.506485462188721
    7. ' j' → logprob: -5.006485462188721
    8. ' ans' → logprob: -5.131485462188721
    9. 'diff' → logprob: -5.881485462188721
    10. 'if' → logprob: -6.006485462188721

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21852411329746246
    2. ' =' → logprob: -1.7185240983963013
    3. '_ans' → logprob: -5.218523979187012
    4. 'ans' → logprob: -5.718523979187012
    5. 'i' → logprob: -6.718523979187012
    6. '_sum' → logprob: -6.968523979187012
    7. '=i' → logprob: -7.218523979187012
    8. '_diff' → logprob: -7.468523979187012
    9. '=max' → logprob: -7.843523979187012
    10. 'diff' → logprob: -7.843523979187012

Token 85: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2219766527414322
    2. 'max' → logprob: -2.4719767570495605
    3. 'N' → logprob: -2.8469767570495605
    4. ' i' → logprob: -3.8469767570495605
    5. 'abs' → logprob: -4.3469767570495605
    6. ' max' → logprob: -4.7219767570495605
    7. ' N' → logprob: -5.4719767570495605
    8. ' ' → logprob: -6.3469767570495605
    9. ' abs' → logprob: -6.5969767570495605
    10. 'min' → logprob: -6.5969767570495605

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6607168316841125
    2. ' +' → logprob: -0.9107168316841125
    3. '*' → logprob: -2.6607167720794678
    4. ' *' → logprob: -4.660717010498047
    5. '**' → logprob: -7.535717010498047
    6. '*i' → logprob: -7.535717010498047
    7. '
' → logprob: -8.785717010498047
    8. '+
' → logprob: -9.410717010498047
    9. ' -' → logprob: -9.535717010498047
    10. ' ' → logprob: -9.535717010498047

Token 87: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11283019185066223
    2. ' N' → logprob: -2.36283016204834
    3. ' (' → logprob: -4.61283016204834
    4. '(N' → logprob: -6.36283016204834
    5. '(' → logprob: -7.98783016204834
    6. ' ' → logprob: -8.11283016204834
    7. 'int' → logprob: -8.73783016204834
    8. '(int' → logprob: -10.98783016204834
    9. ' int' → logprob: -11.11283016204834
    10. '	N' → logprob: -11.48783016204834

Token 88: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00027694785967469215
    2. ' N' → logprob: -8.250276565551758
    3. ')' → logprob: -12.125276565551758
    4. ' ' → logprob: -12.625276565551758
    5. '(N' → logprob: -13.375276565551758
    6. ' (' → logprob: -13.875276565551758
    7. '  ' → logprob: -13.875276565551758
    8. '(' → logprob: -13.875276565551758
    9. '	N' → logprob: -14.625276565551758
    10. '<|end|>' → logprob: -15.000276565551758

Token 89: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2530783712863922
    2. ' //' → logprob: -1.5030783414840698
    3. ' ' → logprob: -7.003078460693359
    4. '/i' → logprob: -9.00307846069336
    5. '/' → logprob: -10.00307846069336
    6. ' /' → logprob: -10.37807846069336
    7. ' ' → logprob: -11.12807846069336
    8. 'i' → logprob: -12.12807846069336
    9. '//=' → logprob: -12.75307846069336
    10. '```' → logprob: -13.12807846069336

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007102862582542002
    2. ' i' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.625710487365723
    4. '   ' → logprob: -16.250709533691406
    5. '	i' → logprob: -16.375709533691406
    6. '  ' → logprob: -18.000709533691406
    7. '<|end|>' → logprob: -18.125709533691406
    8. ')i' → logprob: -18.500709533691406
    9. ')' → logprob: -18.625709533691406
    10. '```' → logprob: -18.750709533691406

Token 91: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2825509011745453
    2. ')' → logprob: -1.4075509309768677
    3. ' )
' → logprob: -6.907550811767578
    4. '   ' → logprob: -8.657550811767578
    5. ' )' → logprob: -9.157550811767578
    6. ')**' → logprob: -10.157550811767578
    7. '-' → logprob: -10.782550811767578
    8. '       ' → logprob: -10.907550811767578
    9. ')
' → logprob: -10.907550811767578
    10. ' -' → logprob: -12.157550811767578

Token 92: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07403398305177689
    2. '-' → logprob: -3.0740339756011963
    3. ' -' → logprob: -4.574034214019775
    4. '   ' → logprob: -5.324034214019775
    5. ' 
' → logprob: -5.949034214019775
    6. 'if' → logprob: -6.324034214019775
    7. '       ' → logprob: -6.574034214019775
    8. ' ' → logprob: -7.074034214019775
    9. 'current' → logprob: -7.074034214019775
    10. ' if' → logprob: -7.574034214019775

Token 93: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001157366088591516
    2. ' ' → logprob: -6.876157283782959
    3. '1' → logprob: -9.001157760620117
    4. '   ' → logprob: -14.751157760620117
    5. '  ' → logprob: -15.626157760620117
    6. '-' → logprob: -15.751157760620117
    7. '２' → logprob: -16.376157760620117
    8. ' ' → logprob: -16.438657760620117
    9. '>' → logprob: -17.251157760620117
    10. '3' → logprob: -17.313657760620117

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.274932143744081e-05
    2. ' ' → logprob: -10.500042915344238
    3. '1' → logprob: -11.125042915344238
    4. '２' → logprob: -16.437541961669922
    5. ' ' → logprob: -16.875041961669922
    6. '२' → logprob: -17.562541961669922
    7. '  ' → logprob: -17.687541961669922
    8. '-' → logprob: -17.687541961669922
    9. '   ' → logprob: -17.687541961669922
    10. '3' → logprob: -17.937541961669922

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031617194414138794
    2. 'if' → logprob: -4.531617164611816
    3. ' if' → logprob: -4.781617164611816
    4. '   ' → logprob: -5.031617164611816
    5. ':
' → logprob: -6.656617164611816
    6. '    
' → logprob: -7.156617164611816
    7. ' 
' → logprob: -7.156617164611816
    8. '
' → logprob: -7.156617164611816
    9. 'ans' → logprob: -8.156617164611816
    10. '  
' → logprob: -8.156617164611816

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19396710395812988
    2. ' if' → logprob: -1.9439671039581299
    3. 'if' → logprob: -3.44396710395813
    4. '       ' → logprob: -7.068966865539551
    5. '    
' → logprob: -8.56896686553955
    6. '	if' → logprob: -9.06896686553955
    7. '
' → logprob: -10.69396686553955
    8. '```' → logprob: -10.94396686553955
    9. 'ans' → logprob: -11.94396686553955
    10. '        
' → logprob: -12.19396686553955

Token 97: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27419525384902954
    2. '   ' → logprob: -1.5241951942443848
    3. ' if' → logprob: -3.8991951942443848
    4. '       ' → logprob: -6.399195194244385
    5. 'ans' → logprob: -9.524195671081543
    6. '	if' → logprob: -11.024195671081543
    7. ' ' → logprob: -12.774195671081543
    8. '  ' → logprob: -13.274195671081543
    9. '
' → logprob: -13.524195671081543
    10. '    
' → logprob: -13.649195671081543

Token 98: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.05489085614681244
    2. 'current' → logprob: -2.9298908710479736
    3. '(current' → logprob: -12.554890632629395
    4. '	current' → logprob: -13.304890632629395
    5. 'urrent' → logprob: -13.679890632629395
    6. '$current' → logprob: -14.679890632629395
    7. ' ' → logprob: -14.929890632629395
    8. 'Current' → logprob: -15.054890632629395
    9. '_current' → logprob: -15.304890632629395
    10. '   ' → logprob: -15.804890632629395

Token 99: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4287817180156708
    2. '<' → logprob: -1.0537817478179932
    3. ' ' → logprob: -9.678781509399414
    4. '<int' → logprob: -12.428781509399414
    5. '   ' → logprob: -13.053781509399414
    6. '<class' → logprob: -14.053781509399414
    7. ' <=' → logprob: -14.178781509399414
    8. '<
' → logprob: -14.178781509399414
    9. '```' → logprob: -14.303781509399414
    10. '<N' → logprob: -14.428781509399414

Token 100: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002614550176076591
    2. ' ans' → logprob: -8.250261306762695
    3. '	ans' → logprob: -16.125261306762695
    4. 'answer' → logprob: -17.000261306762695
    5. '(ans' → logprob: -18.500261306762695
    6. '   ' → logprob: -19.125261306762695
    7. 'Ans' → logprob: -20.125261306762695
    8. '_ans' → logprob: -20.250261306762695
    9. ' ' → logprob: -21.000261306762695
    10. 'anse' → logprob: -21.750261306762695

Token 101: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759859085083008
    2. ':' → logprob: -0.8259859085083008
    3. '   ' → logprob: -11.0759859085083
    4. '):
' → logprob: -11.3259859085083
    5. '       ' → logprob: -12.0759859085083
    6. ':
' → logprob: -12.0759859085083
    7. '):' → logprob: -12.5759859085083
    8. '           ' → logprob: -13.4509859085083
    9. ' :
' → logprob: -14.5759859085083
    10. ':

' → logprob: -14.7009859085083

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0085487375035882
    2. 'ans' → logprob: -4.883548736572266
    3. ' ans' → logprob: -7.133548736572266
    4. '       ' → logprob: -9.383548736572266
    5. '	ans' → logprob: -10.508548736572266
    6. '```' → logprob: -11.258548736572266
    7. '               ' → logprob: -12.008548736572266
    8. '   ' → logprob: -12.258548736572266
    9. '          ' → logprob: -12.633548736572266
    10. '(ans' → logprob: -13.008548736572266

Token 103: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0853269100189209
    2. ' ans' → logprob: -2.585326910018921
    3. '           ' → logprob: -5.0853271484375
    4. 'current' → logprob: -9.3353271484375
    5. '               ' → logprob: -9.8353271484375
    6. '	ans' → logprob: -10.2103271484375
    7. ' current' → logprob: -10.7103271484375
    8. '   ' → logprob: -11.3353271484375
    9. '(ans' → logprob: -12.4603271484375
    10. '       ' → logprob: -12.5853271484375

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.503177642822266
    4. ' =
' → logprob: -18.503177642822266
    5. '＝' → logprob: -18.628177642822266
    6. ' =)' → logprob: -18.878177642822266
    7. ',' → logprob: -19.503177642822266
    8. '    ' → logprob: -20.003177642822266
    9. ' ' → logprob: -20.753177642822266
    10. '   ' → logprob: -20.753177642822266

Token 105: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10020699352025986
    2. ' current' → logprob: -2.3502070903778076
    3. '	current' → logprob: -15.725207328796387
    4. '(current' → logprob: -16.60020637512207
    5. '$current' → logprob: -16.60020637512207
    6. '[current' → logprob: -18.22520637512207
    7. 'urrent' → logprob: -18.22520637512207
    8. '.current' → logprob: -18.22520637512207
    9. 'cur' → logprob: -18.60020637512207
    10. '   ' → logprob: -18.97520637512207

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021360700950026512
    2. '
' → logprob: -4.146360874176025
    3. ' i' → logprob: -6.021360874176025
    4. '    
' → logprob: -6.896360874176025
    5. '  
' → logprob: -7.271360874176025
    6. ' 
' → logprob: -7.771360874176025
    7. '   
' → logprob: -8.396360397338867
    8. '       ' → logprob: -8.771360397338867
    9. '  ' → logprob: -9.271360397338867
    10. '	i' → logprob: -9.646360397338867

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016353088431060314
    2. ' i' → logprob: -6.6266350746154785
    3. 'i' → logprob: -8.251635551452637
    4. '    
' → logprob: -10.876635551452637
    5. '       ' → logprob: -11.501635551452637
    6. '
' → logprob: -11.626635551452637
    7. '	i' → logprob: -12.501635551452637
    8. '        
' → logprob: -13.751635551452637
    9. '```' → logprob: -13.876635551452637
    10. '  ' → logprob: -14.126635551452637

Token 108: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.340844064950943
    2. ' i' → logprob: -1.5908440351486206
    3. 'i' (adapté à ' i') → logprob: -2.46584415435791
    4. '	i' → logprob: -9.46584415435791
    5. ' ' → logprob: -10.09084415435791
    6. '  ' → logprob: -11.96584415435791
    7. ',i' → logprob: -12.34084415435791
    8. '+' → logprob: -12.96584415435791
    9. '_i' → logprob: -13.46584415435791
    10. '+i' → logprob: -13.59084415435791

Token 109: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012627131305634975
    2. ' +=' → logprob: -4.387627124786377
    3. '+' → logprob: -9.387627601623535
    4. '=' → logprob: -10.387627601623535
    5. '++' → logprob: -13.512627601623535
    6. '1' → logprob: -14.387627601623535
    7. ']+=' → logprob: -15.137627601623535
    8. ' ' → logprob: -15.512627601623535
    9. '```' → logprob: -15.762627601623535
    10. '<|end|>' → logprob: -16.51262664794922

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -18.37501335144043
    4. '   ' → logprob: -19.00001335144043
    5. '  ' → logprob: -19.62501335144043
    6. '<|end|>' → logprob: -19.87501335144043
    7. '+' → logprob: -20.06251335144043
    8. '１' → logprob: -20.12501335144043
    9. '2' → logprob: -20.93751335144043
    10. '۱' → logprob: -21.31251335144043

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -20.25
    4. '```' → logprob: -20.625
    5. '+' → logprob: -21.1875
    6. '   ' → logprob: -21.25
    7. '۱' → logprob: -21.6875
    8. '2' → logprob: -21.8125
    9. '  ' → logprob: -21.875
    10. '१' → logprob: -22.25

Token 112: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. '
' → logprob: -15.875000953674316
    5. '-print' → logprob: -20.0
    6. '#print' → logprob: -20.5
    7. 'for' → logprob: -21.0
    8. '  
' → logprob: -21.125
    9. '    
' → logprob: -21.375
    10. '``' → logprob: -21.75

Token 113: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. ' print' → logprob: -16.375
    4. '
' → logprob: -19.125
    5. '``' → logprob: -21.25
    6. '#print' → logprob: -21.5
    7. '(print' → logprob: -22.125
    8. '-print' → logprob: -22.5
    9. 'for' → logprob: -22.75
    10. '.print' → logprob: -23.0

Token 114: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.029796430841088295
    2. '(' → logprob: -3.5297963619232178
    3. '('' → logprob: -10.904796600341797
    4. '("' → logprob: -11.779796600341797
    5. '()' → logprob: -12.029796600341797
    6. '(f' → logprob: -12.154796600341797
    7. ' (' → logprob: -12.404796600341797
    8. 'ans' → logprob: -13.404796600341797
    9. '((' → logprob: -13.904796600341797
    10. '(answer' → logprob: -14.654796600341797

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.750000953674316
    3. ')`' → logprob: -15.750000953674316
    4. ' )' → logprob: -16.125
    5. '`)' → logprob: -17.25
    6. ')
' → logprob: -17.375
    7. '```' → logprob: -18.625
    8. '')' → logprob: -18.75
    9. ')}' → logprob: -19.25
    10. '()' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 38.94%
Précision adaptée (1ère position): 40.71%
Précision (top 10): 83.19%
================================================================================
