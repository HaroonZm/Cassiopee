================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from bisect import bisect_left as bsl
from bisect import bisect_right as bsr
import collections as cl
import copy as cp
import heapq as hq
from collections import defaultdict as dd
from heapq import heappop as hpop, heappush as hpush
import itertools as it
input = lambda: sys.stdin.readline()
from collections import defaultdict as ddf
from heapq import heappop as hpop2, heappush as hpush2

from decimal import *

#--- 二分探索を自作関数でラップ ---
binary_search_left = lambda lst, x: next((i for i,v in enumerate(lst) if v >= x), len(lst))
binary_search_right = lambda lst, x: next((i for i,v in enumerate(lst) if v > x), len(lst))

#--- プライオリティキューのラップ ---
def priority_queue_push(heap, x): list(map(lambda _: hq.heappush(heap, x), [None]))
def priority_queue_pop(heap): return list(map(lambda _: hq.heappop(heap), [None]))[0]
def priority_queue_push_max(heap, x): hq.heappush(heap, -x)
def priority_queue_pop_max(heap): return -hq.heappop(heap)

#--- タプルリストのソート (無駄に複数キー) ---
def sort_tuples(L, keys): return sorted(L, key=lambda t: tuple(f(t) for f in keys))

sort_ab_asc = lambda L: sort_tuples(L, [lambda x: x[0], lambda x: x[1]])
sort_a_asc_b_desc = lambda L: sort_tuples(L, [lambda x: x[0], lambda x: -x[1]])
sort_a_desc_b_asc = lambda L: sort_tuples(L, [lambda x: -x[0], lambda x: x[1]])
sort_ab_desc = lambda L: sort_tuples(L, [lambda x: -x[0], lambda x: -x[1]])
sort_b_asc = lambda L: sort_tuples(L, [lambda x: x[1]])
sort_b_desc = lambda L: sort_tuples(L, [lambda x: -x[1]])

#--- 累乗 ---
power_mod = lambda x, y, z: pow(x, y, z)

#--- 切り上げ整数除算 ---
ceil_div = lambda a, b: (a + b - 1) // b if b else 0 if a==0 else float('inf')

#--- dict for ---
dict_iter_print = lambda d: list(map(lambda t: print(t[0], t[1]), d.items()))

inputInt = lambda: int(input())
inputMap = lambda: (lambda z: (int(w) for w in z))(input().split())
inputList = lambda: list(map(int, input().split()))
inputStr = lambda: input()[:-1]

inf = float('inf')
mod = 10**9 + 7

#=================================================================================
#=================================================================================

def main():
    X, Y = tuple(it.islice(inputMap(), 2))
    if (X+Y) % 3:
        print(0)
        return sys.exit()
    turn = (X+Y)//3
    X, Y = X-turn, Y-turn
    if min(X,Y) < 0:
        print(0)
        return sys.exit()
    print(combination(X+Y, X))

#=================================================================================
# nCr mod m (無駄に reduce と map を使う)
def combination(n, r, mod=10**9+7):
    import functools as ft
    r = min(r, n-r)
    if r < 0 or n < 0: return 0
    numer = ft.reduce(lambda x, y: x*y%mod, map(lambda i: n-i, range(r)), 1)
    denom = ft.reduce(lambda x, y: x*y%mod, map(lambda i: i+1, range(r)), 1)
    return numer * modinv(denom, mod) % mod

# mを法とするaの乗法的逆元
modinv = lambda a, mod=10**9+7: pow(a, mod-2, mod)

def egcd(a, b):
    return (b,0,1) if a==0 else tuple(reversed(list(it.chain([None], egcd(b%a, a)))[1:]))

# nHr mod m (使いまわし)
H = lambda n, r, mod=10**9+7: combination(n+r-1, r, mod)

class Combination:
    def __init__(self, n_max, mod=10**9+7):
        self.mod = mod
        self.modinv = list(it.accumulate(
            [0,1]+[0]*(n_max-1),
            lambda acc, nxt: self.mod - self.mod//(acc if nxt>1 else 2) * (acc if nxt>1 else 1)%self.mod if nxt>1 else acc
        )) if n_max>0 else [0,1]
        self.fac, self.facinv = self._make_factorials(n_max)
    def __call__(self, n, r):
        if not 0<=r<=n: return 0
        return self.fac[n]*self.facinv[r]%self.mod*self.facinv[n-r]%self.mod
    def _make_factorials(self, n):
        fac = [1]*(n+1); finv = [1]*(n+1)
        for i in range(1, n+1): fac[i] = fac[i-1]*i%self.mod
        for i in range(1, n+1): finv[i] = finv[i-1]*modinv(i, self.mod)%self.mod
        return fac, finv

#=================================================================================
def dfs(graph, parent, counter, edge):
    from collections import deque
    stk = deque()
    [stk.append(edge)]
    while stk:
        p = stk.pop()
        [ (
            (
                parent.setdefault(e, p),
                counter.setdefault(e, 0),
                counter.__setitem__(e, counter[e] + counter.get(p,0)),
                stk.append(e)
            ) if parent[p]!=e else None
        ) for e in graph.get(p,[]) ]

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5595126152038574
    2. ' os' → logprob: -1.0595126152038574
    3. 'collections' → logprob: -2.8095126152038574
    4. 'os' → logprob: -4.684512615203857
    5. ' datetime' → logprob: -5.309512615203857
    6. ' itertools' → logprob: -6.059512615203857
    7. ' typing' → logprob: -6.184512615203857
    8. 'datetime' → logprob: -7.934512615203857
    9. ' pathlib' → logprob: -8.059513092041016
    10. ' numpy' → logprob: -8.059513092041016

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.840432565193623e-05
    2. 't' → logprob: -9.875088691711426
    3. 'e' → logprob: -10.750088691711426
    4. 'ectl' → logprob: -12.625088691711426
    5. '>' → logprob: -12.750088691711426
    6. 'ected' → logprob: -13.250088691711426
    7. '```' → logprob: -13.500088691711426
    8. 'ector' → logprob: -13.625088691711426
    9. 'ec' → logprob: -13.750088691711426
    10. 'import' → logprob: -14.125088691711426

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.029836570844054222
    2. 'import' → logprob: -3.529836654663086
    3. ' ' → logprob: -10.154836654663086
    4. '	import' → logprob: -10.654836654663086
    5. '_import' → logprob: -11.029836654663086
    6. ' ' → logprob: -12.654836654663086
    7. '_' → logprob: -14.154836654663086
    8. '.' → logprob: -14.529836654663086
    9. ' ```' → logprob: -15.154836654663086
    10. ' importar' → logprob: -15.404836654663086

Token 10: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.1395014226436615
    2. ' bis' → logprob: -2.1395013332366943
    3. 'ins' → logprob: -4.389501571655273
    4. ' ins' → logprob: -9.389501571655273
    5. 'b' → logprob: -13.514501571655273
    6. '```' → logprob: -14.389501571655273
    7. 'in' → logprob: -14.889501571655273
    8. 'he' → logprob: -14.889501571655273
    9. 'is' → logprob: -14.889501571655273
    10. 'bl' → logprob: -15.514501571655273

Token 11: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.318681188422488e-05
    2. 'e' → logprob: -11.37501335144043
    3. 'ec' → logprob: -14.12501335144043
    4. 'ected' → logprob: -15.00001335144043
    5. 'ectl' → logprob: -16.00001335144043
    6. '```' → logprob: -16.50001335144043
    7. 'ecta' → logprob: -16.87501335144043
    8. '{' → logprob: -17.12501335144043
    9. 'ection' → logprob: -17.25001335144043
    10. 'sect' → logprob: -17.25001335144043

Token 12: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06374415010213852
    2. '_left' → logprob: -3.813744068145752
    3. '(' → logprob: -4.438744068145752
    4. '.' → logprob: -4.938744068145752
    5. '_right' → logprob: -5.188744068145752
    6. 'import' → logprob: -5.188744068145752
    7. ' ' → logprob: -6.063744068145752
    8. '._' → logprob: -7.188744068145752
    9. ' _' → logprob: -7.188744068145752
    10. '```' → logprob: -7.563744068145752

Token 13: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1634676456451416
    2. '\n' → logprob: -1.9134676456451416
    3. '```' → logprob: -2.0384676456451416
    4. '\' → logprob: -2.5384676456451416
    5. 'import' → logprob: -2.5384676456451416
    6. '
' → logprob: -2.5384676456451416
    7. ',' → logprob: -3.1634676456451416
    8. 'def' → logprob: -3.4134676456451416
    9. '(
' → logprob: -3.5384676456451416
    10. '

' → logprob: -3.7884676456451416

Token 14: ' b' (ID: 287)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5417120456695557
    2. 'bl' → logprob: -0.9167120456695557
    3. 'b' → logprob: -4.666711807250977
    4. ' bis' → logprob: -4.791711807250977
    5. 'bs' → logprob: -8.791711807250977
    6. 'bi' → logprob: -9.166711807250977
    7. '`' → logprob: -9.416711807250977
    8. 'bli' → logprob: -9.541711807250977
    9. 'index' → logprob: -9.791711807250977
    10. '```' → logprob: -9.791711807250977

Token 15: 'sl' (ID: 4500)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.048466309905052185
    2. 'i' → logprob: -3.423466205596924
    3. 'ise' → logprob: -4.423466205596924
    4. 'in' → logprob: -7.423466205596924
    5. 'isi' → logprob: -7.923466205596924
    6. 'isc' → logprob: -8.173466682434082
    7. '_i' → logprob: -8.423466682434082
    8. 'iso' → logprob: -8.923466682434082
    9. '_is' → logprob: -9.423466682434082
    10. 'isce' → logprob: -9.610966682434082

Token 16: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1804139614105225
    2. '\n' → logprob: -1.3054139614105225
    3. '
' → logprob: -1.4304139614105225
    4. '(' → logprob: -3.1804139614105225
    5. '' → logprob: -3.1804139614105225
    6. '

' → logprob: -3.3054139614105225
    7. ',' → logprob: -4.305414199829102
    8. '
' → logprob: -4.680414199829102
    9. 'import' → logprob: -4.805414199829102
    10. 'newline' → logprob: -5.055414199829102

Token 17: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.38956448435783386
    2. '
' → logprob: -2.0145645141601562
    3. 'import' → logprob: -2.0145645141601562
    4. ',' → logprob: -3.7645645141601562
    5. '' → logprob: -5.014564514160156
    6. 'def' → logprob: -5.014564514160156
    7. '
' → logprob: -5.889564514160156
    8. '\n' → logprob: -6.139564514160156
    9. '


' → logprob: -6.139564514160156
    10. '```' → logprob: -6.264564514160156

Token 18: ' bis' (ID: 7204)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.6432524919509888
    2. ' itertools' → logprob: -1.5182524919509888
    3. 'heap' → logprob: -2.268252372741699
    4. ' collections' → logprob: -2.393252372741699
    5. ' heap' → logprob: -3.268252372741699
    6. 'bis' → logprob: -4.393252372741699
    7. ' bis' → logprob: -6.268252372741699
    8. 'math' → logprob: -6.393252372741699
    9. 'typing' → logprob: -6.893252372741699
    10. 'operator' → logprob: -6.893252372741699

Token 19: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0007492328295484185
    2. 'e' → logprob: -7.250749111175537
    3. 'ec' → logprob: -11.125749588012695
    4. 'ort' → logprob: -11.250749588012695
    5. 'ection' → logprob: -13.000749588012695
    6. 'ectl' → logprob: -13.375749588012695
    7. 'ert' → logprob: -13.875749588012695
    8. 'ections' → logprob: -14.000749588012695
    9. 'elect' → logprob: -14.250749588012695
    10. 'import' → logprob: -14.375749588012695

Token 20: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17439496517181396
    2. ' import' → logprob: -2.0493950843811035
    3. '_right' → logprob: -3.7993950843811035
    4. '_' → logprob: -5.1743950843811035
    5. '_import' → logprob: -6.0493950843811035
    6. '<|end|>' → logprob: -7.5493950843811035
    7. '_left' → logprob: -9.424394607543945
    8. 'right' → logprob: -9.549394607543945
    9. '	import' → logprob: -9.799394607543945
    10. ' ' → logprob: -10.549394607543945

Token 21: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.22589729726314545
    2. 'bis' → logprob: -1.6008973121643066
    3. '_right' → logprob: -8.100896835327148
    4. 'b' → logprob: -9.100896835327148
    5. 'ins' → logprob: -10.600896835327148
    6. ' b' → logprob: -11.350896835327148
    7. 'import' → logprob: -11.475896835327148
    8. '_b' → logprob: -11.975896835327148
    9. '_' → logprob: -12.475896835327148
    10. 'right' → logprob: -12.600896835327148

Token 22: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0015888927737250924
    2. 'sect' → logprob: -6.751588821411133
    3. '_right' → logprob: -8.376588821411133
    4. 'e' → logprob: -8.751588821411133
    5. '_' → logprob: -11.376588821411133
    6. 'ected' → logprob: -12.876588821411133
    7. 'ec' → logprob: -13.001588821411133
    8. '_exact' → logprob: -13.001588821411133
    9. 'r' → logprob: -13.501588821411133
    10. 'ext' → logprob: -13.626588821411133

Token 23: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.10336439311504364
    2. '_' → logprob: -2.3533644676208496
    3. '_left' → logprob: -5.97836446762085
    4. '_r' → logprob: -7.72836446762085
    5. '_

' → logprob: -10.478363990783691
    6. '_split' → logprob: -11.103363990783691
    7. '_RIGHT' → logprob: -11.353363990783691
    8. '_write' → logprob: -11.478363990783691
    9. 'right' → logprob: -11.728363990783691
    10. '<|end|>' → logprob: -11.728363990783691

Token 24: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.2018251270055771
    2. 'as' → logprob: -1.7018251419067383
    3. '<|end|>' → logprob: -8.326825141906738
    4. '(as' → logprob: -9.826825141906738
    5. ' ' → logprob: -10.201825141906738
    6. ' (' → logprob: -10.701825141906738
    7. '	as' → logprob: -11.201825141906738
    8. '_as' → logprob: -11.201825141906738
    9. '<|end|>' → logprob: -11.826825141906738
    10. '(' → logprob: -11.951825141906738

Token 25: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.01872468926012516
    2. ' b' → logprob: -4.0187249183654785
    3. 'b' → logprob: -7.5187249183654785
    4. 'br' → logprob: -11.64372444152832
    5. ' ' → logprob: -12.14372444152832
    6. '	b' → logprob: -12.39372444152832
    7. '_b' → logprob: -13.26872444152832
    8. ' bs' → logprob: -13.51872444152832
    9. '

' → logprob: -14.01872444152832
    10. 'BS' → logprob: -14.01872444152832

Token 26: 'sr' (ID: 25616)
  Prédit: 'sr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -0.049284130334854126
    2. 'sl' → logprob: -3.0492842197418213
    3. 's' → logprob: -7.299283981323242
    4. 'is' → logprob: -11.174283981323242
    5. 'rs' → logprob: -12.924283981323242
    6. 'r' → logprob: -13.549283981323242
    7. 'rl' → logprob: -14.299283981323242
    8. 'sp' → logprob: -14.424283981323242
    9. 'si' → logprob: -14.924283981323242
    10. 'ir' → logprob: -15.549283981323242

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6488549709320068
    2. '\n' → logprob: -1.8988549709320068
    3. '

' → logprob: -2.273854970932007
    4. '```' → logprob: -2.648854970932007
    5. '<|end|>' → logprob: -2.773854970932007
    6. 'import' → logprob: -3.148854970932007
    7. '\' → logprob: -4.273855209350586
    8. '' → logprob: -4.523855209350586
    9. '#' → logprob: -4.898855209350586
    10. 'newline' → logprob: -5.773855209350586

Token 28: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.17803694307804108
    2. '
' → logprob: -1.9280369281768799
    3. '' → logprob: -5.428037166595459
    4. 'import' → logprob: -5.678037166595459
    5. '#' → logprob: -6.053037166595459
    6. '```' → logprob: -6.428037166595459
    7. '\n' → logprob: -6.678037166595459
    8. 'def' → logprob: -7.178037166595459
    9. '
' → logprob: -7.553037166595459
    10. '


' → logprob: -7.678037166595459

Token 29: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.27923914790153503
    2. ' itertools' → logprob: -2.1542391777038574
    3. ' collections' → logprob: -2.2792391777038574
    4. ' numpy' → logprob: -5.154239177703857
    5. ' threading' → logprob: -5.154239177703857
    6. ' random' → logprob: -5.529239177703857
    7. ' heap' → logprob: -5.779239177703857
    8. ' functools' → logprob: -6.029239177703857
    9. ' re' → logprob: -6.279239177703857
    10. ' sys' → logprob: -7.529239177703857

Token 30: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.055741786956787
    2. 'import' → logprob: -1.430741786956787
    3. '

' → logprob: -1.555741786956787
    4. '\n' → logprob: -3.180741786956787
    5. '<|end|>' → logprob: -3.180741786956787
    6. '.' → logprob: -3.680741786956787
    7. 'newline' → logprob: -3.680741786956787
    8. ',' → logprob: -4.305741786956787
    9. 'n' → logprob: -4.430741786956787
    10. '```' → logprob: -4.680741786956787

Token 31: ' cl' (ID: 567)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.19003403186798096
    2. 'col' → logprob: -3.0650339126586914
    3. ' coll' → logprob: -3.1900339126586914
    4. ' co' → logprob: -3.1900339126586914
    5. ' cl' → logprob: -3.6900339126586914
    6. ' ' → logprob: -4.940033912658691
    7. ' cole' → logprob: -4.940033912658691
    8. 'cl' → logprob: -6.815033912658691
    9. ' colle' → logprob: -7.440033912658691
    10. ' c' → logprob: -7.440033912658691

Token 32: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5942506194114685
    2. '' → logprob: -2.2192506790161133
    3. 'c' → logprob: -3.3442506790161133
    4. 'newline' → logprob: -3.3442506790161133
    5. '
' → logprob: -3.5942506790161133
    6. '\n' → logprob: -3.7192506790161133
    7. '_' → logprob: -3.9692506790161133
    8. 'a' → logprob: -4.094250679016113
    9. 'd' → logprob: -4.344250679016113
    10. 'from' → logprob: -4.469250679016113

Token 33: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7710774540901184
    2. '<|end|>' → logprob: -1.5210773944854736
    3. 'import' → logprob: -2.3960773944854736
    4. '' → logprob: -3.1460773944854736
    5. '

' → logprob: -3.5210773944854736
    6. '\n' → logprob: -3.7710773944854736
    7. 'n' → logprob: -3.8960773944854736
    8. ' ' → logprob: -4.021077632904053
    9. 'newline' → logprob: -4.146077632904053
    10. ',' → logprob: -4.646077632904053

Token 34: ' copy' (ID: 5150)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.21702885627746582
    2. ' heap' → logprob: -1.7170288562774658
    3. ' os' → logprob: -4.842028617858887
    4. ' functools' → logprob: -6.092028617858887
    5. ' re' → logprob: -6.592028617858887
    6. 'heap' → logprob: -7.092028617858887
    7. 'it' → logprob: -7.342028617858887
    8. ' operator' → logprob: -7.592028617858887
    9. ' copy' → logprob: -7.717028617858887
    10. ' numpy' → logprob: -7.967028617858887

Token 35: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6429163813591003
    2. '<|end|>' → logprob: -1.0179164409637451
    3. ' as' → logprob: -2.767916440963745
    4. 'import' → logprob: -4.017916202545166
    5. 'as' → logprob: -4.267916202545166
    6. '<|end|>' → logprob: -5.392916202545166
    7. '.' → logprob: -5.892916202545166
    8. '
' → logprob: -6.392916202545166
    9. ',' → logprob: -6.392916202545166
    10. '_' → logprob: -6.642916202545166

Token 36: ' cp' (ID: 27776)
  Prédit: ' cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cp' → logprob: -0.2571103274822235
    2. 'cpy' → logprob: -1.507110357284546
    3. 'cp' → logprob: -5.757110118865967
    4. ' ' → logprob: -7.007110118865967
    5. ' py' → logprob: -7.382110118865967
    6. ' copy' → logprob: -8.132110595703125
    7. 'copy' → logprob: -9.132110595703125
    8. '	cp' → logprob: -10.882110595703125
    9. ' co' → logprob: -11.007110595703125
    10. ' c' → logprob: -11.007110595703125

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.16432897746562958
    2. ' heap' → logprob: -2.4143290519714355
    3. ' os' → logprob: -3.5393290519714355
    4. ' functools' → logprob: -4.6643290519714355
    5. ' numpy' → logprob: -5.2893290519714355
    6. 'it' → logprob: -5.6643290519714355
    7. ' json' → logprob: -5.7893290519714355
    8. ' operator' → logprob: -6.4143290519714355
    9. 'heap' → logprob: -6.4143290519714355
    10. ' re' → logprob: -6.4143290519714355

Token 40: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. '<|end|>' → logprob: -13.875001907348633
    3. 'queue' → logprob: -14.000001907348633
    4. 'u' → logprob: -16.875001907348633
    5. '_queue' → logprob: -17.375001907348633
    6. '_' → logprob: -17.375001907348633
    7. 's' → logprob: -18.500001907348633
    8. ' queue' → logprob: -18.750001907348633
    9. 'ql' → logprob: -18.750001907348633
    10. 'ify' → logprob: -19.250001907348633

Token 41: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08540757745504379
    2. '<|end|>' → logprob: -2.7104074954986572
    3. '.' → logprob: -4.960407733917236
    4. ' as' → logprob: -5.085407733917236
    5. '  ' → logprob: -7.960407733917236
    6. 'as' → logprob: -8.085407257080078
    7. 'import' → logprob: -8.085407257080078
    8. ' 
' → logprob: -8.335407257080078
    9. ' )' → logprob: -8.460407257080078
    10. '<|end|>' → logprob: -8.585407257080078

Token 42: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.03653917461633682
    2. ' h' → logprob: -3.536539077758789
    3. 'hp' → logprob: -5.286539077758789
    4. ' hp' → logprob: -7.286539077758789
    5. '	h' → logprob: -7.786539077758789
    6. 'h' → logprob: -7.911539077758789
    7. ' ' → logprob: -9.161539077758789
    8. '   ' → logprob: -10.286539077758789
    9. '_h' → logprob: -10.536539077758789
    10. 'heap' → logprob: -11.161539077758789

Token 43: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12712696194648743
    2. 'e' → logprob: -2.127126932144165
    3. 'p' → logprob: -9.752126693725586
    4. '<|end|>' → logprob: -10.002126693725586
    5. 'op' → logprob: -10.127126693725586
    6. 'l' → logprob: -10.752126693725586
    7. ' ' → logprob: -11.877126693725586
    8. '#' → logprob: -12.127126693725586
    9. 'Q' → logprob: -12.877126693725586
    10. 'a' → logprob: -13.002126693725586

Token 44: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5938004851341248
    2. '<|end|>' → logprob: -1.7188005447387695
    3. '
' → logprob: -2.2188005447387695
    4. 'import' → logprob: -2.8438005447387695
    5. ' ' → logprob: -3.4688005447387695
    6. '\n' → logprob: -3.9688005447387695
    7. '' → logprob: -4.0938005447387695
    8. '#' → logprob: -4.9688005447387695
    9. ',' → logprob: -5.3438005447387695
    10. '\' → logprob: -5.5938005447387695

Token 45: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' collections' (ID: 22690)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.04085489735007286
    2. ' functools' → logprob: -4.4158549308776855
    3. 'it' → logprob: -5.2908549308776855
    4. ' collections' → logprob: -5.6658549308776855
    5. 'collections' → logprob: -5.7908549308776855
    6. ' typing' → logprob: -5.7908549308776855
    7. ' math' → logprob: -6.2908549308776855
    8. ' threading' → logprob: -6.4158549308776855
    9. ' operator' → logprob: -6.5408549308776855
    10. 'operator' → logprob: -6.5408549308776855

Token 47: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1501709371805191
    2. ' import' → logprob: -2.0251710414886475
    3. '<|end|>' → logprob: -5.400170803070068
    4. '.' → logprob: -7.025170803070068
    5. 'port' → logprob: -7.525170803070068
    6. '	import' → logprob: -8.025171279907227
    7. 'from' → logprob: -8.650171279907227
    8. 'collections' → logprob: -9.025171279907227
    9. 'module' → logprob: -9.525171279907227
    10. '_import' → logprob: -9.525171279907227

Token 48: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.4202662408351898
    2. ' defaultdict' → logprob: -1.1702662706375122
    3. 'deque' → logprob: -3.4202661514282227
    4. 'default' → logprob: -9.295266151428223
    5. 'de' → logprob: -10.545266151428223
    6. ' Counter' → logprob: -11.670266151428223
    7. ' de' → logprob: -12.545266151428223
    8. ' named' → logprob: -12.795266151428223
    9. ' abc' → logprob: -13.545266151428223
    10. 'Deque' → logprob: -13.670266151428223

Token 49: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.142602801322937
    2. '<|end|>' → logprob: -2.8926029205322266
    3. 'as' → logprob: -3.5176029205322266
    4. ' ' → logprob: -3.5176029205322266
    5. 'import' → logprob: -4.392602920532227
    6. ',' → logprob: -5.767602920532227
    7. '<|end|>' → logprob: -7.142602920532227
    8. ' 
' → logprob: -7.517602920532227
    9. '
' → logprob: -8.392602920532227
    10. 'def' → logprob: -8.642602920532227

Token 50: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.20235945284366608
    2. ' dd' → logprob: -1.7023594379425049
    3. '_dd' → logprob: -7.202359676361084
    4. 'ddb' → logprob: -10.077359199523926
    5. 'd' → logprob: -10.202359199523926
    6. ' d' → logprob: -10.827359199523926
    7. 'df' → logprob: -11.077359199523926
    8. '-dd' → logprob: -11.077359199523926
    9. 'ddi' → logprob: -11.327359199523926
    10. 'default' → logprob: -11.452359199523926

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45876196026802063
    2. '<|end|>' → logprob: -1.4587619304656982
    3. ',' → logprob: -3.2087619304656982
    4. '

' → logprob: -3.4587619304656982
    5. '.' → logprob: -3.7087619304656982
    6. 'import' → logprob: -5.083762168884277
    7. '' → logprob: -5.333762168884277
    8. 'def' → logprob: -5.333762168884277
    9. '\n' → logprob: -5.833762168884277
    10. 'newline' → logprob: -5.958762168884277

Token 53: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1381700038909912
    2. ' typing' → logprob: -2.388170003890991
    3. 'typing' → logprob: -4.38817024230957
    4. '_' → logprob: -5.51317024230957
    5. ' functools' → logprob: -5.76317024230957
    6. 'collections' → logprob: -5.76317024230957
    7. ' math' → logprob: -5.76317024230957
    8. ' operator' → logprob: -5.88817024230957
    9. ' collections' → logprob: -6.01317024230957
    10. ' dat' → logprob: -6.63817024230957

Token 54: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.034592388459714e-06
    2. '<|end|>' → logprob: -12.500005722045898
    3. 'queue' → logprob: -13.500005722045898
    4. 'import' → logprob: -14.250005722045898
    5. 'ql' → logprob: -18.0000057220459
    6. '<|end|>' → logprob: -18.3750057220459
    7. ' queue' → logprob: -18.5000057220459
    8. 'dict' → logprob: -18.5000057220459
    9. 'qid' → logprob: -18.8750057220459
    10. 'vq' → logprob: -18.8750057220459

Token 55: ' import' (ID: 1588)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.20520032942295074
    2. ' he' → logprob: -1.7052003145217896
    3. 'heap' → logprob: -5.9552001953125
    4. 'nl' → logprob: -7.2052001953125
    5. '.he' → logprob: -8.8302001953125
    6. ' ' → logprob: -8.9552001953125
    7. ' heap' → logprob: -10.3302001953125
    8. 'n' → logprob: -10.5802001953125
    9. '```' → logprob: -10.7052001953125
    10. '_he' → logprob: -10.8302001953125

Token 57: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.004084693267941475
    2. 'ap' → logprob: -5.504084587097168
    3. 'a' → logprob: -12.254084587097168
    4. 'appen' → logprob: -14.754084587097168
    5. 'ап' → logprob: -15.129084587097168
    6. 'pp' → logprob: -15.254084587097168
    7. '```' → logprob: -15.379084587097168
    8. 'apput' → logprob: -16.754085540771484
    9. ' app' → logprob: -17.004085540771484
    10. 'appa' → logprob: -17.504085540771484

Token 58: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.004626768175512552
    2. 'op' → logprob: -5.379626750946045
    3. 'us' → logprob: -12.504627227783203
    4. '```' → logprob: -13.754627227783203
    5. 'push' → logprob: -14.504627227783203
    6. 'u' → logprob: -15.129627227783203
    7. 'opleft' → logprob: -15.254627227783203
    8. 'o' → logprob: -15.629627227783203
    9. 'osh' → logprob: -16.379627227783203
    10. '   ' → logprob: -16.629627227783203

Token 59: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7893248200416565
    2. '<|end|>' → logprob: -0.7893248200416565
    3. ' as' → logprob: -2.5393247604370117
    4. 'as' → logprob: -5.414324760437012
    5. ',' → logprob: -5.664324760437012
    6. 'import' → logprob: -5.914324760437012
    7. '  ' → logprob: -7.164324760437012
    8. ' ,' → logprob: -7.789324760437012
    9. '<|end|>' → logprob: -7.789324760437012
    10. '(' → logprob: -9.164324760437012

Token 60: ' h' (ID: 312)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.013770880177617073
    2. ' h' → logprob: -4.638771057128906
    3. 'he' → logprob: -5.888771057128906
    4. ' hp' → logprob: -7.763771057128906
    5. 'hq' → logprob: -7.888771057128906
    6. ' heap' → logprob: -8.263771057128906
    7. ' ' → logprob: -9.888771057128906
    8. '	h' → logprob: -10.388771057128906
    9. 'hpp' → logprob: -10.763771057128906
    10. 'heap' → logprob: -10.763771057128906

Token 61: 'pop' (ID: 15042)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01270611584186554
    2. 'q' → logprob: -4.637706279754639
    3. 'p' → logprob: -6.262706279754639
    4. 'ea' → logprob: -8.63770580291748
    5. '<|end|>' → logprob: -8.63770580291748
    6. 'eep' → logprob: -9.01270580291748
    7. 'op' → logprob: -9.13770580291748
    8. 'elp' → logprob: -10.01270580291748
    9. 'ep' → logprob: -10.13770580291748
    10. 'em' → logprob: -10.26270580291748

Token 62: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.021634066477417946
    2. ',' → logprob: -4.146634101867676
    3. ' from' → logprob: -6.396634101867676
    4. 'he' → logprob: -7.021634101867676
    5. 'import' → logprob: -7.146634101867676
    6. '
' → logprob: -7.646634101867676
    7. '  
' → logprob: -8.146634101867676
    8. ',
' → logprob: -8.271634101867676
    9. 'def' → logprob: -8.771634101867676
    10. '' → logprob: -8.771634101867676

Token 63: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.16456200182437897
    2. ' he' → logprob: -1.9145619869232178
    3. 'heap' → logprob: -5.539562225341797
    4. ' heap' → logprob: -7.914562225341797
    5. 'h' → logprob: -11.539562225341797
    6. 'hep' → logprob: -12.039562225341797
    7. ' ' → logprob: -12.164562225341797
    8. '_he' → logprob: -12.664562225341797
    9. '.he' → logprob: -13.039562225341797
    10. 'hev' → logprob: -13.539562225341797

Token 64: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.011062435805797577
    2. 'ap' → logprob: -4.5110626220703125
    3. 'a' → logprob: -12.011062622070312
    4. '```' → logprob: -13.261062622070312
    5. 'ап' → logprob: -13.511062622070312
    6. 'pp' → logprob: -13.761062622070312
    7. 'appen' → logprob: -14.011062622070312
    8. 'e' → logprob: -14.386062622070312
    9. 'push' → logprob: -14.386062622070312
    10. 'APP' → logprob: -14.761062622070312

Token 65: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.633853652398102e-05
    2. 'op' → logprob: -10.250056266784668
    3. 'push' → logprob: -11.500056266784668
    4. 'us' → logprob: -12.500056266784668
    5. 'u' → logprob: -13.000056266784668
    6. '```' → logprob: -13.250056266784668
    7. '   ' → logprob: -14.250056266784668
    8. 'ut' → logprob: -14.625056266784668
    9. 'p' → logprob: -15.250056266784668
    10. 'sh' → logprob: -15.500056266784668

Token 66: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.12154754996299744
    2. 'as' → logprob: -2.6215474605560303
    3. '<|end|>' → logprob: -3.2465474605560303
    4. ' ' → logprob: -6.121547698974609
    5. ' (' → logprob: -8.62154769897461
    6. '  ' → logprob: -9.24654769897461
    7. '<|end|>' → logprob: -9.49654769897461
    8. '(as' → logprob: -9.62154769897461
    9. '(' → logprob: -9.62154769897461
    10. '(h' → logprob: -10.24654769897461

Token 67: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04364815354347229
    2. ' h' → logprob: -3.2936482429504395
    3. 'hp' → logprob: -5.6686482429504395
    4. ' hp' → logprob: -6.6686482429504395
    5. '	h' → logprob: -7.2936482429504395
    6. ' ' → logprob: -9.293647766113281
    7. 'hpp' → logprob: -10.293647766113281
    8. 'he' → logprob: -10.793647766113281
    9. ' he' → logprob: -11.418647766113281
    10. '```' → logprob: -11.918647766113281

Token 68: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.02255060523748398
    2. 'ush' → logprob: -4.147550582885742
    3. 'p' → logprob: -5.147550582885742
    4. 'pus' → logprob: -8.022550582885742
    5. 'app' → logprob: -9.272550582885742
    6. 'put' → logprob: -9.522550582885742
    7. 'pop' → logprob: -9.522550582885742
    8. 'e' → logprob: -10.647550582885742
    9. 'op' → logprob: -11.272550582885742
    10. 'ps' → logprob: -11.397550582885742

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8014771342277527
    2. ' itertools' → logprob: -0.9264771342277527
    3. ' numpy' → logprob: -2.1764771938323975
    4. ' threading' → logprob: -3.9264771938323975
    5. ' random' → logprob: -4.801476955413818
    6. ' functools' → logprob: -5.176476955413818
    7. ' re' → logprob: -6.426476955413818
    8. ' operator' → logprob: -6.676476955413818
    9. 'numpy' → logprob: -6.676476955413818
    10. ' io' → logprob: -7.051476955413818

Token 72: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.014335671439766884
    2. ' it' → logprob: -4.264335632324219
    3. '	it' → logprob: -9.139335632324219
    4. 'itl' → logprob: -10.764335632324219
    5. '_it' → logprob: -11.139335632324219
    6. 'itg' → logprob: -11.639335632324219
    7. ' itt' → logprob: -11.889335632324219
    8. 'It' → logprob: -12.389335632324219
    9. '(it' → logprob: -12.889335632324219
    10. 'its' → logprob: -13.014335632324219

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03718385472893715
    2. '()' → logprob: -3.6621837615966797
    3. '.' → logprob: -5.53718376159668
    4. '<|end|>' → logprob: -5.53718376159668
    5. '```' → logprob: -7.41218376159668
    6. ')' → logprob: -7.53718376159668
    7. '=' → logprob: -7.66218376159668
    8. '<|end|>' → logprob: -8.41218376159668
    9. ' (' → logprob: -8.78718376159668
    10. ' =' → logprob: -8.91218376159668

Token 77: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.048690129071474075
    2. ' sys' → logprob: -3.0486900806427
    3. 'input' → logprob: -9.298689842224121
    4. 'lambda' → logprob: -12.798689842224121
    5. '=sys' → logprob: -12.798689842224121
    6. '	sys' → logprob: -13.298689842224121
    7. '(sys' → logprob: -13.548689842224121
    8. ' input' → logprob: -13.673689842224121
    9. 'raw' → logprob: -13.923689842224121
    10. ' lambda' → logprob: -15.673689842224121

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1760164052248001
    2. ' :' → logprob: -2.051016330718994
    3. ' ' → logprob: -3.676016330718994
    4. '()' → logprob: -5.801016330718994
    5. '<|end|>' → logprob: -7.051016330718994
    6. '():' → logprob: -7.301016330718994
    7. ':str' → logprob: -7.676016330718994
    8. ' sys' → logprob: -7.801016330718994
    9. '.readline' → logprob: -8.301016807556152
    10. ' readline' → logprob: -8.426016807556152

Token 79: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1302468329668045
    2. ' sys' → logprob: -2.130246877670288
    3. 'input' → logprob: -5.755246639251709
    4. ' input' → logprob: -8.880247116088867
    5. '=sys' → logprob: -12.505247116088867
    6. '	sys' → logprob: -13.380247116088867
    7. '(sys' → logprob: -13.755247116088867
    8. 'str' → logprob: -14.505247116088867
    9. 'stdin' → logprob: -14.880247116088867
    10. 'raw' → logprob: -15.255247116088867

Token 80: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00021045419271104038
    2. '.stdout' → logprob: -8.750210762023926
    3. 'stdin' → logprob: -10.000210762023926
    4. '.' → logprob: -13.250210762023926
    5. '.std' → logprob: -13.250210762023926
    6. '.readline' → logprob: -13.375210762023926
    7. '.argv' → logprob: -14.500210762023926
    8. '.version' → logprob: -15.000210762023926
    9. ' stdin' → logprob: -15.125210762023926
    10. '(stdin' → logprob: -15.750210762023926

Token 81: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002582402084954083
    2. '.read' → logprob: -8.500258445739746
    3. '.' → logprob: -9.875258445739746
    4. 'read' → logprob: -13.500258445739746
    5. '.buffer' → logprob: -13.500258445739746
    6. '.readlines' → logprob: -15.000258445739746
    7. ' readline' → logprob: -16.12525749206543
    8. '.Read' → logprob: -16.37525749206543
    9. '_read' → logprob: -17.62525749206543
    10. '.stdin' → logprob: -17.75025749206543

Token 82: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033262718468904495
    2. '(' → logprob: -4.158262729644775
    3. '()
' → logprob: -4.658262729644775
    4. '()

' → logprob: -5.283262729644775
    5. '(
' → logprob: -6.908262729644775
    6. '
' → logprob: -8.033262252807617
    7. '<|end|>' → logprob: -8.158262252807617
    8. '()\' → logprob: -8.283262252807617
    9. '(

' → logprob: -8.908262252807617
    10. '\n' → logprob: -9.033262252807617

Token 83: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9548813700675964
    2. '<|end|>' → logprob: -1.2048814296722412
    3. 'def' → logprob: -2.079881429672241
    4. '#' → logprob: -2.079881429672241
    5. '\n' → logprob: -3.829881429672241
    6. '

' → logprob: -4.329881191253662
    7. '(' → logprob: -5.204881191253662
    8. '<|end|>' → logprob: -5.579881191253662
    9. '()' → logprob: -5.954881191253662
    10. '' → logprob: -6.204881191253662

Token 84: ' collections' (ID: 22690)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3327980041503906
    2. ' math' → logprob: -1.9577980041503906
    3. ' os' → logprob: -3.2077980041503906
    4. ' functools' → logprob: -3.3327980041503906
    5. ' collections' → logprob: -3.4577980041503906
    6. ' datetime' → logprob: -4.957798004150391
    7. ' io' → logprob: -5.082798004150391
    8. '_' → logprob: -5.207798004150391
    9. 'typing' → logprob: -5.457798004150391
    10. ' random' → logprob: -5.957798004150391

Token 85: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22796359658241272
    2. '<|end|>' → logprob: -2.47796368598938
    3. 'import' → logprob: -2.85296368598938
    4. ' ' → logprob: -3.10296368598938
    5. '.' → logprob: -4.227963447570801
    6. '	import' → logprob: -7.602963447570801
    7. '_import' → logprob: -7.727963447570801
    8. '.collections' → logprob: -8.1029634475708
    9. '<|end|>' → logprob: -8.1029634475708
    10. ' .' → logprob: -8.6029634475708

Token 86: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.18839481472969055
    2. 'deque' → logprob: -2.438394784927368
    3. ' defaultdict' → logprob: -2.688394784927368
    4. ' Counter' → logprob: -4.313395023345947
    5. ' de' → logprob: -6.563395023345947
    6. 'Counter' → logprob: -7.313395023345947
    7. 'de' → logprob: -8.063394546508789
    8. 'default' → logprob: -8.313394546508789
    9. ' ' → logprob: -8.938394546508789
    10. ' d' → logprob: -10.063394546508789

Token 87: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25720924139022827
    2. '()' → logprob: -1.632209300994873
    3. '<|end|>' → logprob: -4.382209300994873
    4. '.' → logprob: -4.882209300994873
    5. ',' → logprob: -5.507209300994873
    6. '(
' → logprob: -6.757209300994873
    7. ' (' → logprob: -7.007209300994873
    8. 's' → logprob: -7.007209300994873
    9. ' ' → logprob: -7.382209300994873
    10. ')' → logprob: -7.632209300994873

Token 88: ' d' (ID: 272)
  Prédit: ' dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dd' → logprob: -0.003240816527977586
    2. 'dd' → logprob: -6.253240585327148
    3. ' d' → logprob: -7.003240585327148
    4. ' defaultdict' → logprob: -8.753240585327148
    5. '_dd' → logprob: -9.628240585327148
    6. ' ' → logprob: -9.878240585327148
    7. 'd' → logprob: -11.003240585327148
    8. ' ' → logprob: -11.190740585327148
    9. 'default' → logprob: -11.253240585327148
    10. ' default' → logprob: -11.628240585327148

Token 89: 'df' (ID: 4750)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.7053759519476444e-05
    2. 'a' → logprob: -10.625057220458984
    3. 'e' → logprob: -11.375057220458984
    4. ' ' → logprob: -12.000057220458984
    5. 'f' → logprob: -12.250057220458984
    6. 'i' → logprob: -12.875057220458984
    7. ' d' → logprob: -13.375057220458984
    8. 'D' → logprob: -13.625057220458984
    9. 'c' → logprob: -13.875057220458984
    10. ' defaultdict' → logprob: -14.250057220458984

Token 90: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7509756684303284
    2. '<|end|>' → logprob: -1.7509756088256836
    3. '
' → logprob: -2.2509756088256836
    4. 'd' → logprob: -2.3759756088256836
    5. '(' → logprob: -3.1259756088256836
    6. 'f' → logprob: -3.1259756088256836
    7. '_' → logprob: -4.250975608825684
    8. '\n' → logprob: -4.625975608825684
    9. '\' → logprob: -4.750975608825684
    10. ')' → logprob: -5.000975608825684

Token 91: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5914620161056519
    2. ' math' → logprob: -1.9664620161056519
    3. ' itertools' → logprob: -1.9664620161056519
    4. ' typing' → logprob: -2.7164621353149414
    5. ' io' → logprob: -4.091462135314941
    6. ' operator' → logprob: -4.466462135314941
    7. ' functools' → logprob: -4.466462135314941
    8. ' os' → logprob: -4.466462135314941
    9. ' random' → logprob: -4.591462135314941
    10. '_' → logprob: -4.591462135314941

Token 93: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006328551680780947
    2. '<|end|>' → logprob: -7.3756327629089355
    3. 'queue' → logprob: -12.875633239746094
    4. '<|end|>' → logprob: -13.375633239746094
    5. 'p' → logprob: -14.500633239746094
    6. 'import' → logprob: -15.250633239746094
    7. ' ' → logprob: -15.875633239746094
    8. '...' → logprob: -15.875633239746094
    9. '_' → logprob: -16.000633239746094
    10. 'qml' → logprob: -16.500633239746094

Token 94: ' import' (ID: 1588)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3958708941936493
    2. ' import' → logprob: -1.3958709239959717
    3. '<|end|>' → logprob: -2.7708709239959717
    4. 'import' → logprob: -4.145870685577393
    5. '<|end|>' → logprob: -7.770870685577393
    6. '_' → logprob: -9.14587116241455
    7. ' ' → logprob: -9.39587116241455
    8. '.' → logprob: -9.52087116241455
    9. '  ' → logprob: -9.89587116241455
    10. '_import' → logprob: -10.39587116241455

Token 95: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2309693545103073
    2. ' he' → logprob: -2.3559694290161133
    3. 'heap' → logprob: -2.9809694290161133
    4. ' ' → logprob: -3.3559694290161133
    5. '<|end|>' → logprob: -4.605969429016113
    6. 'h' → logprob: -4.855969429016113
    7. ' heap' → logprob: -5.480969429016113
    8. ' h' → logprob: -6.230969429016113
    9. '	h' → logprob: -7.855969429016113
    10. '  ' → logprob: -8.480969429016113

Token 96: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.024797437712550163
    2. 'ap' → logprob: -3.7747974395751953
    3. 'a' → logprob: -7.274797439575195
    4. 'q' → logprob: -8.149797439575195
    5. 'pp' → logprob: -9.024797439575195
    6. 'p' → logprob: -9.899797439575195
    7. 'appen' → logprob: -9.899797439575195
    8. 'qp' → logprob: -10.212297439575195
    9. 'appa' → logprob: -10.274797439575195
    10. 'pop' → logprob: -10.524797439575195

Token 97: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5284871459007263
    2. 'ush' → logprob: -0.9034871459007263
    3. 'o' → logprob: -6.278487205505371
    4. 'us' → logprob: -6.778487205505371
    5. 'u' → logprob: -8.090987205505371
    6. 'opp' → logprob: -8.090987205505371
    7. 'p' → logprob: -8.465987205505371
    8. 'q' → logprob: -8.778487205505371
    9. 'pop' → logprob: -8.840987205505371
    10. 'e' → logprob: -8.903487205505371

Token 98: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.8190191984176636
    2. ' ' → logprob: -1.1940191984176636
    3. 'as' → logprob: -1.9440191984176636
    4. '<|end|>' → logprob: -2.194019317626953
    5. ',' → logprob: -7.569019317626953
    6. '<|end|>' → logprob: -8.194019317626953
    7. '  ' → logprob: -8.444019317626953
    8. ' ,' → logprob: -9.069019317626953
    9. ' ' → logprob: -9.319019317626953
    10. '(as' → logprob: -9.819019317626953

Token 99: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4710669219493866
    2. 'h' → logprob: -1.221066951751709
    3. ' hp' → logprob: -3.471066951751709
    4. 'hp' → logprob: -3.471066951751709
    5. 'hpp' → logprob: -4.971066951751709
    6. '	h' → logprob: -5.596066951751709
    7. 'hq' → logprob: -5.721066951751709
    8. 'hcp' → logprob: -6.846066951751709
    9. ' ' → logprob: -7.221066951751709
    10. ' he' → logprob: -7.658566951751709

Token 100: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.24866868555545807
    2. 'push' → logprob: -1.6236686706542969
    3. 'p' → logprob: -4.373668670654297
    4. 'pus' → logprob: -5.123668670654297
    5. 'pu' → logprob: -6.873668670654297
    6. 'op' → logprob: -6.998668670654297
    7. 'q' → logprob: -7.623668670654297
    8. 'put' → logprob: -7.748668670654297
    9. 'ps' → logprob: -8.123668670654297
    10. 'e' → logprob: -8.248668670654297

Token 101: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005604511592537165
    2. ' ,' → logprob: -5.6306047439575195
    3. ' ' → logprob: -6.2556047439575195
    4. '<|end|>' → logprob: -10.25560474395752
    5. ')' → logprob: -11.13060474395752
    6. ',
' → logprob: -11.88060474395752
    7. 'import' → logprob: -12.25560474395752
    8. '.' → logprob: -13.13060474395752
    9. ',h' → logprob: -13.38060474395752
    10. ' he' → logprob: -13.38060474395752

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022382817696779966
    2. ' ,' → logprob: -6.2522382736206055
    3. ' ' → logprob: -8.127238273620605
    4. ',
' → logprob: -12.127238273620605
    5. '<|end|>' → logprob: -12.502238273620605
    6. ')' → logprob: -14.002238273620605
    7. ' he' → logprob: -14.002238273620605
    8. ',h' → logprob: -14.627238273620605
    9. 'import' → logprob: -14.752238273620605
    10. 'he' → logprob: -15.002238273620605

Token 103: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.020775679498910904
    2. 'he' → logprob: -3.89577579498291
    3. '<|end|>' → logprob: -9.27077579498291
    4. ' h' → logprob: -10.02077579498291
    5. ' ' → logprob: -10.27077579498291
    6. ' ' → logprob: -10.64577579498291
    7. 'h' → logprob: -11.27077579498291
    8. '_he' → logprob: -11.64577579498291
    9. '.he' → logprob: -12.39577579498291
    10. ' He' → logprob: -13.27077579498291

Token 104: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0725826695561409
    2. 'push' → logprob: -2.822582721710205
    3. 'pp' → logprob: -4.572582721710205
    4. 'p' → logprob: -9.197582244873047
    5. 'ap' → logprob: -10.072582244873047
    6. 'appen' → logprob: -10.697582244873047
    7. 'ps' → logprob: -11.322582244873047
    8. 'a' → logprob: -11.572582244873047
    9. 'pass' → logprob: -12.697582244873047
    10. '_push' → logprob: -12.697582244873047

Token 105: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0001725511101540178
    2. 'op' → logprob: -8.75017261505127
    3. 'push' → logprob: -12.25017261505127
    4. 'us' → logprob: -12.37517261505127
    5. 'u' → logprob: -14.25017261505127
    6. 'sh' → logprob: -14.25017261505127
    7. '```' → logprob: -14.25017261505127
    8. 'p' → logprob: -14.50017261505127
    9. '   ' → logprob: -15.12517261505127
    10. ' ush' → logprob: -15.25017261505127

Token 106: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4212391674518585
    2. '<|end|>' → logprob: -1.2962391376495361
    3. ' ' → logprob: -2.921239137649536
    4. 'as' → logprob: -4.171239376068115
    5. '<|end|>' → logprob: -8.046238899230957
    6. '_' → logprob: -8.671238899230957
    7. '  ' → logprob: -9.171238899230957
    8. ' ' → logprob: -9.671238899230957
    9. ')' → logprob: -9.921238899230957
    10. ' )' → logprob: -10.046238899230957

Token 107: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08905080705881119
    2. ' h' → logprob: -2.464050769805908
    3. 'hpp' → logprob: -9.964051246643066
    4. '	h' → logprob: -11.089051246643066
    5. 'hp' → logprob: -11.589051246643066
    6. 'hcp' → logprob: -11.714051246643066
    7. ' ' → logprob: -12.089051246643066
    8. 'hq' → logprob: -12.214051246643066
    9. '_h' → logprob: -12.464051246643066
    10. ' ' → logprob: -12.839051246643066

Token 108: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.0125344879925251
    2. 'ush' → logprob: -4.3875346183776855
    3. 'pop' → logprob: -11.637534141540527
    4. 'pus' → logprob: -12.262534141540527
    5. 'us' → logprob: -13.137534141540527
    6. 'up' → logprob: -13.387534141540527
    7. ' push' → logprob: -13.637534141540527
    8. '	push' → logprob: -13.887534141540527
    9. 'u' → logprob: -14.012534141540527
    10. 'usp' → logprob: -14.137534141540527

Token 109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. '1' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '3' → logprob: -14.875004768371582
    5. 's' → logprob: -15.125004768371582
    6. 'new' → logprob: -16.500003814697266
    7. 'f' → logprob: -17.250003814697266
    8. 'w' → logprob: -17.625003814697266
    9. '₂' → logprob: -17.750003814697266
    10. 'd' → logprob: -17.875003814697266

Token 110: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37209007143974304
    2. ',' → logprob: -2.7470901012420654
    3. '<|end|>' → logprob: -3.1220901012420654
    4. '(' → logprob: -3.3720901012420654
    5. ' ' → logprob: -3.4970901012420654
    6. ')' → logprob: -3.6220901012420654
    7. '_' → logprob: -4.122089862823486
    8. '#' → logprob: -4.247089862823486
    9. '(
' → logprob: -4.247089862823486
    10. '' → logprob: -4.747089862823486

Token 111: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5834462642669678
    2. '#' → logprob: -2.0834462642669678
    3. 'a' → logprob: -2.3334462642669678
    4. '
' → logprob: -3.3334462642669678
    5. '(' → logprob: -3.4584462642669678
    6. 'def' → logprob: -3.4584462642669678
    7. 'n' → logprob: -3.7084462642669678
    8. ')' → logprob: -4.708446502685547
    9. '(
' → logprob: -4.833446502685547
    10. ',' → logprob: -5.083446502685547

Token 112: ' decimal' (ID: 26964)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.7177788019180298
    2. ' math' → logprob: -1.3427788019180298
    3. ' collections' → logprob: -3.0927786827087402
    4. ' operator' → logprob: -3.0927786827087402
    5. ' random' → logprob: -3.2177786827087402
    6. ' functools' → logprob: -3.2177786827087402
    7. '_' → logprob: -3.8427786827087402
    8. ' datetime' → logprob: -3.8427786827087402
    9. ' os' → logprob: -4.71777868270874
    10. ' itertools' → logprob: -4.96777868270874

Token 113: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13247165083885193
    2. ' ' → logprob: -2.2574715614318848
    3. '<|end|>' → logprob: -4.132471561431885
    4. 'import' → logprob: -5.757471561431885
    5. ' ' → logprob: -9.382472038269043
    6. '<|end|>' → logprob: -9.632472038269043
    7. '	import' → logprob: -10.507472038269043
    8. '.' → logprob: -10.757472038269043
    9. ' ```' → logprob: -11.132472038269043
    10. ' im' → logprob: -11.632472038269043

Token 114: ' *

' (ID: 40558)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.2847447991371155
    2. 'Decimal' → logprob: -1.4097447395324707
    3. '.Decimal' → logprob: -5.659744739532471
    4. ' ' → logprob: -10.409745216369629
    5. 'decimal' → logprob: -11.034745216369629
    6. 'Decimals' → logprob: -11.284745216369629
    7. ' decimal' → logprob: -11.409745216369629
    8. ' ' → logprob: -11.659745216369629
    9. '_decimal' → logprob: -11.784745216369629
    10. 'Context' → logprob: -12.159745216369629

Token 115: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0708969309926033
    2. '.' → logprob: -3.070896863937378
    3. 'd' → logprob: -4.945897102355957
    4. ' 
' → logprob: -5.695897102355957
    5. '#' → logprob: -5.945897102355957
    6. 'x' → logprob: -7.195897102355957
    7. 'g' → logprob: -7.195897102355957
    8. '0' → logprob: -7.320897102355957
    9. 'a' → logprob: -7.320897102355957
    10. '<|end|>' → logprob: -7.320897102355957

Token 116: '---' (ID: 10356)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005485610105097294
    2. 'd' → logprob: -5.880485534667969
    3. '#' → logprob: -6.880485534667969
    4. '.' → logprob: -8.255485534667969
    5. 'D' → logprob: -8.255485534667969
    6. ' 
' → logprob: -8.630485534667969
    7. 'get' → logprob: -9.255485534667969
    8. 'a' → logprob: -9.255485534667969
    9. 'x' → logprob: -9.630485534667969
    10. 'c' → logprob: -9.755485534667969

Token 117: ' 二' (ID: 49626)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011601800099015236
    2. '<|end|>' → logprob: -5.51160192489624
    3. '#' → logprob: -6.13660192489624
    4. '.' → logprob: -6.26160192489624
    5. ' 
' → logprob: -6.63660192489624
    6. 'd' → logprob: -6.76160192489624
    7. '0' → logprob: -9.011601448059082
    8. 'x' → logprob: -9.636601448059082
    9. ',' → logprob: -9.886601448059082
    10. 'a' → logprob: -10.011601448059082

Token 118: '分' (ID: 2957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22457551956176758
    2. '元' → logprob: -2.8495755195617676
    3. '次' → logprob: -3.0995755195617676
    4. '分' → logprob: -3.4745755195617676
    5. '進' → logprob: -4.349575519561768
    6. '級' → logprob: -4.849575519561768
    7. ' #' → logprob: -5.599575519561768
    8. '線' → logprob: -5.974575519561768
    9. 'f' → logprob: -6.099575519561768
    10. '进' → logprob: -6.349575519561768

Token 119: '探索' (ID: 191406)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.8657254576683044
    2. '検索' → logprob: -1.3657255172729492
    3. ' ' → logprob: -2.115725517272949
    4. ')' → logprob: -2.990725517272949
    5. ' search' → logprob: -3.240725517272949
    6. '#' → logprob: -3.490725517272949
    7. '探索' → logprob: -3.740725517272949
    8. 'def' → logprob: -4.115725517272949
    9. '_search' → logprob: -4.615725517272949
    10. ' )' → logprob: -4.865725517272949

Token 120: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6635653972625732
    2. ' ' → logprob: -0.7885653972625732
    3. '#' → logprob: -4.788565635681152
    4. '  ' → logprob: -5.413565635681152
    5. 'd' → logprob: -5.788565635681152
    6. '_' → logprob: -6.038565635681152
    7. ' def' → logprob: -6.413565635681152
    8. ' #' → logprob: -6.538565635681152
    9. 'n' → logprob: -6.913565635681152
    10. '
' → logprob: -6.913565635681152

Token 121: '自' (ID: 6912)
  Prédit: '使'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '使' → logprob: -0.4256625771522522
    2. 'def' → logprob: -1.6756625175476074
    3. 'つ' → logprob: -3.1756625175476074
    4. '用' → logprob: -3.4256625175476074
    5. 'する' → logprob: -3.5506625175476074
    6. '実' → logprob: -4.425662517547607
    7. '行' → logprob: -4.425662517547607
    8. '#' → logprob: -4.550662517547607
    9. '利用' → logprob: -4.800662517547607
    10. '定' → logprob: -5.175662517547607

Token 122: '作' (ID: 6239)
  Prédit: '用'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '用' → logprob: -0.6311379075050354
    2. '能' → logprob: -1.7561378479003906
    3. 'def' → logprob: -2.1311378479003906
    4. '#' → logprob: -3.2561378479003906
    5. 'つ' → logprob: -3.3811378479003906
    6. '定' → logprob: -3.8811378479003906
    7. '使' → logprob: -4.256137847900391
    8. '内' → logprob: -4.631137847900391
    9. '装' → logprob: -4.881137847900391
    10. '続' → logprob: -5.006137847900391

Token 123: '関' (ID: 42366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03587900847196579
    2. 'd' → logprob: -4.410879135131836
    3. ' def' → logprob: -4.410879135131836
    4. 'de' → logprob: -4.910879135131836
    5. ':' → logprob: -7.160879135131836
    6. '_' → logprob: -7.285879135131836
    7. '
' → logprob: -7.535879135131836
    8. '#' → logprob: -7.910879135131836
    9. ' de' → logprob: -8.035879135131836
    10. '(' → logprob: -8.535879135131836

Token 124: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.004485542885959148
    2. 'def' → logprob: -5.504485607147217
    3. '```' → logprob: -8.004485130310059
    4. 'ction' → logprob: -11.504485130310059
    5. ')' → logprob: -11.504485130310059
    6. 'す' → logprob: -11.879485130310059
    7. '#' → logprob: -11.879485130310059
    8. '連' → logprob: -12.254485130310059
    9. 's' → logprob: -12.379485130310059
    10. 'class' → logprob: -12.629485130310059

Token 125: 'で' (ID: 4344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061625886708498
    2. ' def' → logprob: -3.3116259574890137
    3. '_' → logprob: -4.936625957489014
    4. 'd' → logprob: -5.311625957489014
    5. '
' → logprob: -5.811625957489014
    6. 'de' → logprob: -6.061625957489014
    7. '(' → logprob: -6.561625957489014
    8. ':' → logprob: -7.186625957489014
    9. 'n' → logprob: -7.311625957489014
    10. ')' → logprob: -7.936625957489014

Token 126: 'ラ' (ID: 8547)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05192715302109718
    2. 'd' → logprob: -3.926927089691162
    3. '
' → logprob: -3.926927089691162
    4. ' def' → logprob: -4.926927089691162
    5. 'de' → logprob: -6.051927089691162
    6. ' de' → logprob: -8.17692756652832
    7. '#' → logprob: -8.42692756652832
    8. ' ' → logprob: -8.80192756652832
    9. 'n' → logprob: -9.30192756652832
    10. ' 
' → logprob: -9.30192756652832

Token 127: 'ップ' (ID: 41523)
  Prédit: 'ス'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ス' → logprob: -0.434905469417572
    2. 'ース' → logprob: -2.559905529022217
    3. 'イズ' → logprob: -2.684905529022217
    4. 'イル' → logprob: -2.809905529022217
    5. 'イン' → logprob: -3.309905529022217
    6. 'イ' → logprob: -3.309905529022217
    7. 'ール' → logprob: -4.309905529022217
    8. 'イス' → logprob: -4.559905529022217
    9. 'リ' → logprob: -4.809905529022217
    10. 'ク' → logprob: -5.309905529022217

Token 128: ' ---
' (ID: 128468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00746571272611618
    2. ' def' → logprob: -5.632465839385986
    3. 'd' → logprob: -6.132465839385986
    4. '(' → logprob: -7.757465839385986
    5. '_' → logprob: -8.007465362548828
    6. '
' → logprob: -8.757465362548828
    7. ':' → logprob: -8.757465362548828
    8. '\' → logprob: -8.882465362548828
    9. '(
' → logprob: -9.007465362548828
    10. 'de' → logprob: -9.007465362548828

Token 129: 'binary' (ID: 57009)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3202883005142212
    2. 'def' → logprob: -1.3202883005142212
    3. ' ' → logprob: -5.445288181304932
    4. ' 
' → logprob: -7.320288181304932
    5. 'de' → logprob: -7.570288181304932
    6. ' def' → logprob: -7.570288181304932
    7. ' d' → logprob: -7.695288181304932
    8. '
' → logprob: -9.07028865814209
    9. '(' → logprob: -9.19528865814209
    10. '_' → logprob: -9.69528865814209

Token 130: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0011780819622799754
    2. '_' → logprob: -6.75117826461792
    3. '_find' → logprob: -12.251177787780762
    4. 'search' → logprob: -13.751177787780762
    5. '_se' → logprob: -14.376177787780762
    6. '_Search' → logprob: -14.751177787780762
    7. ' _' → logprob: -15.126177787780762
    8. '_insert' → logprob: -15.876177787780762
    9. 'Search' → logprob: -16.001178741455078
    10. '_query' → logprob: -16.001178741455078

Token 131: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020762484520673752
    2. '_' → logprob: -3.8957624435424805
    3. '_(' → logprob: -9.27076244354248
    4. ' (' → logprob: -10.52076244354248
    5. '_search' → logprob: -10.89576244354248
    6. '(
' → logprob: -11.02076244354248
    7. '(_' → logprob: -12.02076244354248
    8. '_left' → logprob: -12.39576244354248
    9. ':' → logprob: -12.52076244354248
    10. ')' → logprob: -12.52076244354248

Token 132: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019483851792756468
    2. '_' → logprob: -8.750194549560547
    3. '(
' → logprob: -11.375194549560547
    4. ' (' → logprob: -12.125194549560547
    5. ':' → logprob: -12.875194549560547
    6. ',' → logprob: -13.000194549560547
    7. '[' → logprob: -13.125194549560547
    8. '(

' → logprob: -13.125194549560547
    9. ')' → logprob: -13.375194549560547
    10. 'def' → logprob: -14.250194549560547

Token 133: ' lambda' (ID: 27871)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6714992523193359
    2. 'b' → logprob: -0.7964992523193359
    3. 'lambda' → logprob: -3.921499252319336
    4. ' lambda' → logprob: -4.296499252319336
    5. ' bis' → logprob: -6.171499252319336
    6. '(lambda' → logprob: -7.046499252319336
    7. 'bis' → logprob: -7.046499252319336
    8. '(b' → logprob: -7.796499252319336
    9. ' ' → logprob: -8.671499252319336
    10. 'bs' → logprob: -9.171499252319336

Token 134: ' lst' (ID: 33384)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.6594761610031128
    2. 'arr' → logprob: -1.5344761610031128
    3. ' arr' → logprob: -1.9094761610031128
    4. '(lst' → logprob: -3.6594762802124023
    5. '(lambda' → logprob: -4.034476280212402
    6. ' a' → logprob: -4.284476280212402
    7. ' (' → logprob: -4.284476280212402
    8. '(array' → logprob: -4.409476280212402
    9. ' lst' → logprob: -4.534476280212402
    10. ' array' → logprob: -4.909476280212402

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004965558764524758
    2. ' ,' → logprob: -8.250496864318848
    3. ',b' → logprob: -8.875496864318848
    4. ',l' → logprob: -10.500496864318848
    5. ',n' → logprob: -10.750496864318848
    6. ',index' → logprob: -11.125496864318848
    7. ',len' → logprob: -12.000496864318848
    8. ',x' → logprob: -12.500496864318848
    9. ',s' → logprob: -12.625496864318848
    10. ',value' → logprob: -13.125496864318848

Token 136: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3202803432941437
    2. 'x' → logprob: -1.3202803134918213
    3. 'target' → logprob: -6.3202805519104
    4. ' val' → logprob: -6.5702805519104
    5. 'v' → logprob: -6.8202805519104
    6. ' target' → logprob: -7.0702805519104
    7. ' key' → logprob: -7.3202805519104
    8. 'val' → logprob: -7.9452805519104
    9. 'key' → logprob: -7.9452805519104
    10. ' v' → logprob: -8.195280075073242

Token 137: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0047178915701806545
    2. ' :' → logprob: -5.879717826843262
    3. ',' → logprob: -6.754717826843262
    4. ':b' → logprob: -7.504717826843262
    5. ',b' → logprob: -8.879717826843262
    6. ',:' → logprob: -10.754717826843262
    7. ':x' → logprob: -11.504717826843262
    8. ':list' → logprob: -12.129717826843262
    9. ':index' → logprob: -12.629717826843262
    10. ':not' → logprob: -12.879717826843262

Token 138: ' next' (ID: 2613)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5239185094833374
    2. 'b' → logprob: -0.8989185094833374
    3. ' bis' → logprob: -7.898918628692627
    4. 'bis' → logprob: -8.523918151855469
    5. '	b' → logprob: -9.023918151855469
    6. ' ' → logprob: -10.023918151855469
    7. 'lst' → logprob: -11.023918151855469
    8. 'bs' → logprob: -11.148918151855469
    9. '(b' → logprob: -11.898918151855469
    10. ' lst' → logprob: -12.773918151855469

Token 139: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.026915302500128746
    2. '((' → logprob: -3.7769153118133545
    3. '(x' → logprob: -6.526915073394775
    4. '(' → logprob: -7.026915073394775
    5. '(idx' → logprob: -7.151915073394775
    6. '(iter' → logprob: -7.651915073394775
    7. '(it' → logprob: -11.151915550231934
    8. '(filter' → logprob: -11.776915550231934
    9. '(index' → logprob: -12.026915550231934
    10. '(ix' → logprob: -12.151915550231934

Token 140: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033515440300107002
    2. 'idx' → logprob: -6.50335168838501
    3. '(i' → logprob: -6.50335168838501
    4. ' i' → logprob: -8.503351211547852
    5. 'b' → logprob: -10.003351211547852
    6. 'bis' → logprob: -10.253351211547852
    7. 'ix' → logprob: -11.503351211547852
    8. '(b' → logprob: -11.878351211547852
    9. 'index' → logprob: -12.003351211547852
    10. 'len' → logprob: -12.003351211547852

Token 141: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018232475966215134
    2. 'for' → logprob: -4.018232345581055
    3. '(i' → logprob: -10.518232345581055
    4. ' ' → logprob: -10.643232345581055
    5. ' i' → logprob: -11.393232345581055
    6. 'i' → logprob: -12.268232345581055
    7. 'idx' → logprob: -12.643232345581055
    8. '
' → logprob: -12.893232345581055
    9. '	for' → logprob: -12.893232345581055
    10. '(x' → logprob: -13.268232345581055

Token 142: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21373215317726135
    2. 'i' → logprob: -2.3387322425842285
    3. ',' → logprob: -2.4637322425842285
    4. ' in' → logprob: -5.0887322425842285
    5. ' range' → logprob: -6.3387322425842285
    6. 'range' → logprob: -7.3387322425842285
    7. ',i' → logprob: -7.4637322425842285
    8. 'enumer' → logprob: -7.4637322425842285
    9. ' ' → logprob: -8.08873176574707
    10. ' ,' → logprob: -8.21373176574707

Token 143: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009738749358803034
    2. ' in' → logprob: -7.125973701477051
    3. ' ,' → logprob: -9.87597370147705
    4. ',x' → logprob: -10.12597370147705
    5. 'in' → logprob: -10.62597370147705
    6. 'enumer' → logprob: -11.12597370147705
    7. ',i' → logprob: -11.50097370147705
    8. ',count' → logprob: -12.00097370147705
    9. ',b' → logprob: -12.50097370147705
    10. ',y' → logprob: -12.50097370147705

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2041286826133728
    2. 'in' → logprob: -1.8291287422180176
    3. 'enumer' → logprob: -3.8291287422180176
    4. ' enumerate' → logprob: -6.329128742218018
    5. ',' → logprob: -7.579128742218018
    6. ' enumer' → logprob: -10.70412826538086
    7. ')' → logprob: -11.57912826538086
    8. ' ' → logprob: -11.57912826538086
    9. '.enumer' → logprob: -12.45412826538086
    10. '<|end|>' → logprob: -12.57912826538086

Token 145: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2819003164768219
    2. 'enumer' → logprob: -1.4069002866744995
    3. ' range' → logprob: -7.781900405883789
    4. 'range' → logprob: -8.531900405883789
    5. ' in' → logprob: -10.031900405883789
    6. '
' → logprob: -10.906900405883789
    7. ')' → logprob: -11.156900405883789
    8. 'in' → logprob: -11.406900405883789
    9. ',' → logprob: -11.406900405883789
    10. ' ' → logprob: -11.531900405883789

Token 146: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.02728864923119545
    2. 'lst' → logprob: -3.9022886753082275
    3. ' lst' → logprob: -5.027288436889648
    4. '(' → logprob: -9.652288436889648
    5. '(l' → logprob: -9.777288436889648
    6. ')' → logprob: -11.027288436889648
    7. 's' → logprob: -11.402288436889648
    8. '_lst' → logprob: -12.027288436889648
    9. '
' → logprob: -12.777288436889648
    10. '(range' → logprob: -13.527288436889648

Token 147: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.002831626683473587
    2. 'if' → logprob: -6.00283145904541
    3. ')' → logprob: -8.00283145904541
    4. ' ' → logprob: -11.12783145904541
    5. ' )' → logprob: -13.00283145904541
    6. '	if' → logprob: -13.62783145904541
    7. ':' → logprob: -13.75283145904541
    8. ' in' → logprob: -14.12783145904541
    9. '
' → logprob: -14.25283145904541
    10. 'in' → logprob: -16.252832412719727

Token 148: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02325444668531418
    2. 'if' → logprob: -3.77325439453125
    3. ' ' → logprob: -12.39825439453125
    4. ')' → logprob: -13.02325439453125
    5. '	if' → logprob: -13.27325439453125
    6. ' in' → logprob: -14.77325439453125
    7. 'in' → logprob: -15.77325439453125
    8. ':' → logprob: -16.14825439453125
    9. '
' → logprob: -16.89825439453125
    10. '   ' → logprob: -16.89825439453125

Token 149: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.17983447015285492
    2. 'v' → logprob: -1.8048344850540161
    3. '	v' → logprob: -9.554834365844727
    4. ' ' → logprob: -11.429834365844727
    5. '(v' → logprob: -13.554834365844727
    6. '    ' → logprob: -13.554834365844727
    7. ' ' → logprob: -13.679834365844727
    8. ')v' → logprob: -14.054834365844727
    9. ' x' → logprob: -14.179834365844727
    10. 'x' → logprob: -14.304834365844727

Token 150: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.31378236413002014
    2. '>=' → logprob: -1.3137823343276978
    3. ' ' → logprob: -8.063782691955566
    4. '>' → logprob: -9.563782691955566
    5. '[' → logprob: -9.813782691955566
    6. ']>=' → logprob: -10.813782691955566
    7. ' >' → logprob: -11.063782691955566
    8. ')>=' → logprob: -11.688782691955566
    9. ' ' → logprob: -11.938782691955566
    10. '<' → logprob: -12.188782691955566

Token 151: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132633566856384
    2. 'x' → logprob: -1.3132634162902832
    3. ' ' → logprob: -14.563262939453125
    4. ')' → logprob: -14.563262939453125
    5. ')x' → logprob: -15.063262939453125
    6. '	x' → logprob: -15.813262939453125
    7. ' ' → logprob: -15.938262939453125
    8. ' )' → logprob: -17.188262939453125
    9. '(x' → logprob: -17.438262939453125
    10. ''x' → logprob: -17.438262939453125

Token 152: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005607591941952705
    2. ' ),' → logprob: -5.505607604980469
    3. '))' → logprob: -6.505607604980469
    4. ')' → logprob: -11.005607604980469
    5. ' ))' → logprob: -12.380607604980469
    6. '),(' → logprob: -12.380607604980469
    7. '),'' → logprob: -12.505607604980469
    8. '),"' → logprob: -14.005607604980469
    9. ' else' → logprob: -14.255607604980469
    10. ')),' → logprob: -14.255607604980469

Token 153: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004873955331277102
    2. '0' → logprob: -8.375487327575684
    3. ' len' → logprob: -8.625487327575684
    4. '-' → logprob: -9.750487327575684
    5. 'None' → logprob: -11.250487327575684
    6. ' -' → logprob: -13.125487327575684
    7. '(len' → logprob: -14.000487327575684
    8. '[len' → logprob: -14.250487327575684
    9. '-l' → logprob: -14.875487327575684
    10. ' ' → logprob: -14.875487327575684

Token 154: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -5.943783253314905e-05
    2. '(' → logprob: -9.875059127807617
    3. '(
' → logprob: -12.500059127807617
    4. 'lst' → logprob: -12.875059127807617
    5. '(l' → logprob: -13.750059127807617
    6. '(ls' → logprob: -15.125059127807617
    7. '(

' → logprob: -16.375059127807617
    8. '(lhs' → logprob: -16.875059127807617
    9. ')' → logprob: -17.125059127807617
    10. '(list' → logprob: -17.250059127807617

Token 155: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6328742504119873
    2. '))' → logprob: -0.7578742504119873
    3. ')))' → logprob: -8.757874488830566
    4. ' )' → logprob: -10.007874488830566
    5. '())' → logprob: -11.007874488830566
    6. ')
' → logprob: -11.382874488830566
    7. '))
' → logprob: -11.382874488830566
    8. ' ))' → logprob: -11.882874488830566
    9. 'lst' → logprob: -12.507874488830566
    10. ')>' → logprob: -12.632874488830566

Token 156: 'binary' (ID: 57009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5360745787620544
    2. '<|end|>' → logprob: -2.036074638366699
    3. '_' → logprob: -2.161074638366699
    4. '
' → logprob: -2.411074638366699
    5. '(' → logprob: -3.036074638366699
    6. '#' → logprob: -4.661074638366699
    7. ',' → logprob: -5.286074638366699
    8. ' ' → logprob: -5.786074638366699
    9. '[' → logprob: -5.786074638366699
    10. 'b' → logprob: -6.411074638366699

Token 157: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.002195813925936818
    2. '_' → logprob: -6.127195835113525
    3. ' _' → logprob: -13.002195358276367
    4. '_s' → logprob: -13.377195358276367
    5. 'search' → logprob: -13.377195358276367
    6. '_space' → logprob: -13.752195358276367
    7. '_
' → logprob: -14.502195358276367
    8. '_Search' → logprob: -14.627195358276367
    9. '_binary' → logprob: -14.627195358276367
    10. '_write' → logprob: -14.877195358276367

Token 158: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.03887166827917099
    2. '_left' → logprob: -3.2888717651367188
    3. '_' → logprob: -7.288871765136719
    4. '_next' → logprob: -11.288871765136719
    5. '_write' → logprob: -11.538871765136719
    6. '_rhs' → logprob: -11.538871765136719
    7. ''_' → logprob: -12.038871765136719
    8. '_s' → logprob: -12.163871765136719
    9. '_lower' → logprob: -12.288871765136719
    10. '_start' → logprob: -12.538871765136719

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014218121767044
    2. '=' → logprob: -1.701421856880188
    3. '=lambda' → logprob: -11.951421737670898
    4. '_' → logprob: -13.576421737670898
    5. '_=' → logprob: -15.076421737670898
    6. '＝' → logprob: -15.451421737670898
    7. ' ' → logprob: -15.576421737670898
    8. '=_' → logprob: -16.8264217376709
    9. ')' → logprob: -16.9514217376709
    10. '=b' → logprob: -17.3264217376709

Token 160: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20344077050685883
    2. ' lambda' → logprob: -1.70344078540802
    3. '(lambda' → logprob: -6.2034406661987305
    4. '=lambda' → logprob: -13.45344066619873
    5. ' (' → logprob: -14.70344066619873
    6. 'binary' → logprob: -14.82844066619873
    7. '_lambda' → logprob: -15.57844066619873
    8. ' binary' → logprob: -16.078441619873047
    9. ' ' → logprob: -16.328441619873047
    10. '(' → logprob: -16.328441619873047

Token 161: ' lst' (ID: 33384)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.5606662631034851
    2. 'lst' → logprob: -0.9356662631034851
    3. ' lst' → logprob: -3.31066632270813
    4. '(lambda' → logprob: -8.68566608428955
    5. ' (' → logprob: -9.18566608428955
    6. 'lambda' → logprob: -9.93566608428955
    7. '_lst' → logprob: -11.31066608428955
    8. '.lst' → logprob: -12.06066608428955
    9. 'list' → logprob: -12.31066608428955
    10. '(ls' → logprob: -12.93566608428955

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034392563975416124
    2. ',x' → logprob: -8.125344276428223
    3. ' ,' → logprob: -10.500344276428223
    4. ',b' → logprob: -11.250344276428223
    5. ',v' → logprob: -13.500344276428223
    6. '=lambda' → logprob: -13.625344276428223
    7. 'lambda' → logprob: -14.000344276428223
    8. ',l' → logprob: -14.625344276428223
    9. ',y' → logprob: -15.000344276428223
    10. ' ' → logprob: -15.000344276428223

Token 163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018863797187805176
    2. ' x' → logprob: -4.018863677978516
    3. 'lambda' → logprob: -7.268863677978516
    4. ' lambda' → logprob: -11.393863677978516
    5. '(x' → logprob: -12.893863677978516
    6. '[x' → logprob: -13.643863677978516
    7. '(lambda' → logprob: -14.268863677978516
    8. ' ' → logprob: -15.018863677978516
    9. '[' → logprob: -16.018863677978516
    10. 'b' → logprob: -16.143863677978516

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3782830137643032e-05
    2. ' :' → logprob: -11.25001335144043
    3. '=' → logprob: -14.62501335144043
    4. ':list' → logprob: -16.50001335144043
    5. '_:' → logprob: -16.62501335144043
    6. ':return' → logprob: -17.50001335144043
    7. ':
' → logprob: -17.75001335144043
    8. ',' → logprob: -17.87501335144043
    9. ':b' → logprob: -18.25001335144043
    10. '：' → logprob: -18.87501335144043

Token 165: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2520633339881897
    2. ' next' → logprob: -1.502063274383545
    3. '(next' → logprob: -9.877063751220703
    4. 'bis' → logprob: -10.877063751220703
    5. 'binary' → logprob: -10.877063751220703
    6. 'b' → logprob: -11.002063751220703
    7. 'len' → logprob: -11.377063751220703
    8. ' bis' → logprob: -12.377063751220703
    9. '[next' → logprob: -12.377063751220703
    10. ' binary' → logprob: -12.627063751220703

Token 166: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.875000953674316
    3. '(i' → logprob: -16.0
    4. '(lambda' → logprob: -16.75
    5. '(
' → logprob: -18.5
    6. ' ((' → logprob: -19.125
    7. '(('' → logprob: -19.625
    8. '>((' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '[(' → logprob: -20.25

Token 167: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.016036832705140114
    2. 'i' → logprob: -4.1410369873046875
    3. ' (' → logprob: -13.891036987304688
    4. '(' → logprob: -13.891036987304688
    5. ' i' → logprob: -15.266036987304688
    6. '(len' → logprob: -16.141036987304688
    7. '{i' → logprob: -16.391036987304688
    8. '((' → logprob: -16.641036987304688
    9. '[i' → logprob: -17.266036987304688
    10. '(I' → logprob: -17.391036987304688

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10283955931663513
    2. 'for' → logprob: -2.352839469909668
    3. '(i' → logprob: -6.102839469909668
    4. '(v' → logprob: -8.602839469909668
    5. '(' → logprob: -9.102839469909668
    6. ' (' → logprob: -10.102839469909668
    7. '(for' → logprob: -10.102839469909668
    8. '	for' → logprob: -11.852839469909668
    9. '((' → logprob: -12.852839469909668
    10. '(len' → logprob: -13.602839469909668

Token 169: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013784517534077168
    2. '(v' → logprob: -4.888784408569336
    3. ' v' → logprob: -6.138784408569336
    4. 'enumer' → logprob: -6.138784408569336
    5. ',v' → logprob: -7.013784408569336
    6. ' enumerate' → logprob: -7.138784408569336
    7. 'lst' → logprob: -9.888784408569336
    8. 'i' → logprob: -10.388784408569336
    9. '[v' → logprob: -10.763784408569336
    10. 'range' → logprob: -11.513784408569336

Token 170: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0003433296224102378
    2. ',' → logprob: -8.500343322753906
    3. '(v' → logprob: -9.875343322753906
    4. 'enumer' → logprob: -9.875343322753906
    5. 'v' → logprob: -11.250343322753906
    6. 'for' → logprob: -11.500343322753906
    7. ' ,' → logprob: -12.875343322753906
    8. ' for' → logprob: -13.125343322753906
    9. ',len' → logprob: -13.500343322753906
    10. ',en' → logprob: -13.500343322753906

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021627536043524742
    2. 'in' → logprob: -3.896627426147461
    3. ' enumerate' → logprob: -7.396627426147461
    4. 'enumer' → logprob: -8.521627426147461
    5. '(lst' → logprob: -8.771627426147461
    6. '(' → logprob: -9.646627426147461
    7. ')' → logprob: -11.021627426147461
    8. ' (' → logprob: -11.646627426147461
    9. 'lst' → logprob: -12.146627426147461
    10. '<|end|>' → logprob: -12.271627426147461

Token 172: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20326897501945496
    2. ' enumerate' → logprob: -1.7032690048217773
    3. 'lst' → logprob: -6.328269004821777
    4. ' lst' → logprob: -9.703269004821777
    5. '(lst' → logprob: -12.328269004821777
    6. 'enum' → logprob: -13.453269004821777
    7. ' enumer' → logprob: -14.578269004821777
    8. ' ' → logprob: -14.953269004821777
    9. '.enumer' → logprob: -15.203269004821777
    10. '
' → logprob: -15.703269004821777

Token 173: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.07889970391988754
    2. 'lst' → logprob: -2.578899621963501
    3. '(' → logprob: -12.203899383544922
    4. ' lst' → logprob: -13.078899383544922
    5. '(l' → logprob: -14.203899383544922
    6. '_lst' → logprob: -14.953899383544922
    7. '.lst' → logprob: -15.078899383544922
    8. 'list' → logprob: -15.203899383544922
    9. '(
' → logprob: -15.328899383544922
    10. '(ls' → logprob: -15.453899383544922

Token 174: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0016720877029001713
    2. 'if' → logprob: -6.501672267913818
    3. ')' → logprob: -8.75167179107666
    4. 'lst' → logprob: -11.75167179107666
    5. ' ' → logprob: -13.25167179107666
    6. ' )' → logprob: -13.87667179107666
    7. ' lst' → logprob: -14.75167179107666
    8. ' in' → logprob: -16.126672744750977
    9. '),' → logprob: -16.251672744750977
    10. '(lst' → logprob: -16.376672744750977

Token 175: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0019312551012262702
    2. 'if' → logprob: -6.251931190490723
    3. ' ' → logprob: -13.626931190490723
    4. ')' → logprob: -14.376931190490723
    5. ' in' → logprob: -15.126931190490723
    6. 'lst' → logprob: -15.751931190490723
    7. ' lst' → logprob: -15.876931190490723
    8. '(lst' → logprob: -16.12693214416504
    9. ' for' → logprob: -16.87693214416504
    10. ' )' → logprob: -16.87693214416504

Token 176: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.05488566681742668
    2. 'v' → logprob: -2.9298856258392334
    3. '	v' → logprob: -13.679885864257812
    4. '(v' → logprob: -14.554885864257812
    5. ')v' → logprob: -15.179885864257812
    6. ' ' → logprob: -15.304885864257812
    7. '>' → logprob: -15.929885864257812
    8. ' ' → logprob: -16.054885864257812
    9. '_v' → logprob: -16.054885864257812
    10. '   ' → logprob: -16.179885864257812

Token 177: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3484635353088379
    2. ' >' → logprob: -1.223463535308838
    3. ' ' → logprob: -12.09846305847168
    4. '>x' → logprob: -12.22346305847168
    5. '<=' → logprob: -13.09846305847168
    6. ' <=' → logprob: -13.47346305847168
    7. '＞' → logprob: -13.59846305847168
    8. '<' → logprob: -14.84846305847168
    9. ' ' → logprob: -14.97346305847168
    10. '">' → logprob: -15.22346305847168

Token 178: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759410858154297
    2. 'x' → logprob: -0.8259410858154297
    3. '	x' → logprob: -14.82594108581543
    4. ')x' → logprob: -14.82594108581543
    5. ')' → logprob: -15.32594108581543
    6. ' ' → logprob: -15.32594108581543
    7. ' ' → logprob: -15.57594108581543
    8. '(x' → logprob: -16.32594108581543
    9. '```' → logprob: -17.07594108581543
    10. ',' → logprob: -17.20094108581543

Token 179: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0014151156647130847
    2. ',' → logprob: -6.626415252685547
    3. ')' → logprob: -9.751415252685547
    4. ' ),' → logprob: -10.501415252685547
    5. ',),' → logprob: -13.751415252685547
    6. '))' → logprob: -14.251415252685547
    7. ' ,' → logprob: -14.751415252685547
    8. 'lst' → logprob: -15.001415252685547
    9. ',len' → logprob: -15.126415252685547
    10. '},' → logprob: -15.501415252685547

Token 180: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193408131599426
    2. ' len' → logprob: -1.5019340515136719
    3. '(len' → logprob: -13.251934051513672
    4. '[len' → logprob: -13.376934051513672
    5. 'x' → logprob: -14.751934051513672
    6. '	len' → logprob: -15.001934051513672
    7. ' ' → logprob: -15.251934051513672
    8. '<len' → logprob: -15.501934051513672
    9. '=len' → logprob: -15.626934051513672
    10. ',len' → logprob: -16.501934051513672

Token 181: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -5.7888184528565034e-05
    2. '(' → logprob: -10.0000581741333
    3. 'lst' → logprob: -11.6250581741333
    4. '(ls' → logprob: -13.2500581741333
    5. '(list' → logprob: -14.5000581741333
    6. '(l' → logprob: -14.6250581741333
    7. '(lista' → logprob: -15.2500581741333
    8. '(
' → logprob: -15.7500581741333
    9. ')' → logprob: -16.125057220458984
    10. ' lst' → logprob: -16.250057220458984

Token 182: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020607752725481987
    2. ')' → logprob: -3.8956077098846436
    3. 'lst' → logprob: -10.395607948303223
    4. ')))' → logprob: -11.270607948303223
    5. ' ))' → logprob: -11.770607948303223
    6. '))
' → logprob: -12.270607948303223
    7. '(lst' → logprob: -12.895607948303223
    8. ' )' → logprob: -13.645607948303223
    9. '])' → logprob: -14.020607948303223
    10. 'list' → logprob: -14.270607948303223

Token 183: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35329118371009827
    2. '#' → logprob: -2.3532912731170654
    3. 'n' → logprob: -2.6032912731170654
    4. 'def' → logprob: -3.1032912731170654
    5. '(' → logprob: -3.4782912731170654
    6. 'a' → logprob: -4.228291034698486
    7. ' ' → logprob: -4.478291034698486
    8. '\' → logprob: -4.603291034698486
    9. '\n' → logprob: -5.603291034698486
    10. '[' → logprob: -6.478291034698486

Token 184: '---' (ID: 10356)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2572760581970215
    2. '#' → logprob: -2.3822760581970215
    3. 'def' → logprob: -2.3822760581970215
    4. '_' → logprob: -4.3822760581970215
    5. 'n' → logprob: -4.6322760581970215
    6. '(' → logprob: -5.1322760581970215
    7. 'a' → logprob: -5.6322760581970215
    8. 'D' → logprob: -5.7572760581970215
    9. '[' → logprob: -6.8822760581970215
    10. 'de' → logprob: -7.0072760581970215

Token 185: ' プ' (ID: 81791)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034914080053567886
    2. ' def' → logprob: -4.159914016723633
    3. 'class' → logprob: -4.909914016723633
    4. '#' → logprob: -5.659914016723633
    5. 'from' → logprob: -6.284914016723633
    6. 'sys' → logprob: -6.409914016723633
    7. 'INF' → logprob: -6.909914016723633
    8. 'if' → logprob: -7.909914016723633
    9. 'import' → logprob: -8.034914016723633
    10. 'MOD' → logprob: -8.284914016723633

Token 186: 'ライ' (ID: 61503)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4152088761329651
    2. '#' → logprob: -2.1652088165283203
    3. 'リ' → logprob: -2.2902088165283203
    4. 'def' → logprob: -3.2902088165283203
    5. 'int' → logprob: -4.04020881652832
    6. 'ロ' → logprob: -4.04020881652832
    7. 'ro' → logprob: -4.66520881652832
    8. 'ログ' → logprob: -5.16520881652832
    9. 'log' → logprob: -5.47770881652832
    10. 'rom' → logprob: -6.35270881652832

Token 187: 'オ' (ID: 22708)
  Prédit: 'ベ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ベ' → logprob: -0.7285473346710205
    2. 'ロ' → logprob: -1.1035473346710205
    3. 'def' → logprob: -3.1035473346710205
    4. 'vate' → logprob: -3.1035473346710205
    5. 'バ' → logprob: -3.4785473346710205
    6. 'ント' → logprob: -4.353547096252441
    7. '#' → logprob: -4.353547096252441
    8. 'ログ' → logprob: -4.478547096252441
    9. 'm' → logprob: -5.603547096252441
    10. '_' → logprob: -5.603547096252441

Token 188: 'リ' (ID: 9007)
  Prédit: 'リ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'リ' → logprob: -0.014864210970699787
    2. 'ティ' → logprob: -4.639864444732666
    3. 'r' → logprob: -5.639864444732666
    4. 'ority' → logprob: -7.514864444732666
    5. 'irty' → logprob: -7.764864444732666
    6. '```' → logprob: -9.014863967895508
    7. 'ー' → logprob: -9.139863967895508
    8. '\xef\xbe' → logprob: -9.889863967895508
    9. 'バ' → logprob: -9.889863967895508
    10. '―' → logprob: -10.514863967895508

Token 189: 'ティ' (ID: 61437)
  Prédit: 'ティ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ティ' → logprob: -0.0012897592969238758
    2. 'テ' → logprob: -6.7512898445129395
    3. '티' → logprob: -9.876289367675781
    4. 'ty' → logprob: -9.876289367675781
    5. 'リ' → logprob: -12.501289367675781
    6. '```' → logprob: -12.626289367675781
    7. 't' → logprob: -13.251289367675781
    8. 'タ' → logprob: -13.501289367675781
    9. 'て' → logprob: -14.001289367675781
    10. '\xef\xbe' → logprob: -14.001289367675781

Token 190: 'キ' (ID: 18368)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.914981484413147
    2. '_queue' → logprob: -1.539981484413147
    3. 'queue' → logprob: -1.914981484413147
    4. 'Queue' → logprob: -2.0399813652038574
    5. ' queue' → logprob: -2.6649813652038574
    6. ' ' → logprob: -3.6649813652038574
    7. 'Q' → logprob: -4.914981365203857
    8. ' _' → logprob: -7.039981365203857
    9. 'Queues' → logprob: -7.164981365203857
    10. '_QUEUE' → logprob: -7.539981365203857

Token 191: 'ュー' (ID: 51978)
  Prédit: 'ュー'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ュー' → logprob: -0.005516307894140482
    2. 'ュ' → logprob: -5.255516529083252
    3. 'ue' → logprob: -9.005516052246094
    4. '```' → logprob: -9.755516052246094
    5. 'queue' → logprob: -10.880516052246094
    6. 'ー' → logprob: -11.005516052246094
    7. 'ゅ' → logprob: -11.130516052246094
    8. 'u' → logprob: -11.255516052246094
    9. 'ティ' → logprob: -12.130516052246094
    10. '_queue' → logprob: -12.130516052246094

Token 192: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021155888214707375
    2. '=' → logprob: -4.521155834197998
    3. '_' → logprob: -6.271155834197998
    4. ' ' → logprob: -7.021155834197998
    5. 'import' → logprob: -7.146155834197998
    6. '=[]' → logprob: -7.146155834197998
    7. 'を' → logprob: -7.146155834197998
    8. 'class' → logprob: -7.271155834197998
    9. 'def' → logprob: -7.521155834197998
    10. '(' → logprob: -7.646155834197998

Token 193: 'ラ' (ID: 8547)
  Prédit: '使'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '使' → logprob: -1.8431833982467651
    2. '説明' → logprob: -1.9681833982467651
    3. '操作' → logprob: -2.3431835174560547
    4. '利用' → logprob: -2.3431835174560547
    5. '基本' → logprob: -2.5931835174560547
    6. 'コメント' → logprob: -2.7181835174560547
    7. 'ラ' → logprob: -2.7181835174560547
    8. '使用' → logprob: -3.0931835174560547
    9. 'コード' → logprob: -3.4681835174560547
    10. '活' → logprob: -3.4681835174560547

Token 194: 'ップ' (ID: 41523)
  Prédit: 'イン'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'イン' → logprob: -0.15581689774990082
    2. 'イ' → logprob: -2.6558167934417725
    3. 'ス' → logprob: -4.280817031860352
    4. 'ン' → logprob: -4.530817031860352
    5. 'ネ' → logprob: -4.905817031860352
    6. 'import' → logprob: -5.030817031860352
    7. 'ine' → logprob: -5.155817031860352
    8. 'ist' → logprob: -5.280817031860352
    9. 'ム' → logprob: -5.280817031860352
    10. 'def' → logprob: -6.280817031860352

Token 195: ' ---
' (ID: 128468)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040302012115716934
    2. '=' → logprob: -4.79030179977417
    3. 'class' → logprob: -4.79030179977417
    4. 'def' → logprob: -5.16530179977417
    5. '---' → logprob: -6.04030179977417
    6. '_' → logprob: -6.04030179977417
    7. ' ---' → logprob: -6.16530179977417
    8. 'push' → logprob: -6.29030179977417
    9. 's' → logprob: -7.04030179977417
    10. '=[]' → logprob: -7.29030179977417

Token 196: 'def' (ID: 1314)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.7084382772445679
    2. 'class' → logprob: -1.3334382772445679
    3. 'def' → logprob: -2.4584383964538574
    4. 'pq' → logprob: -2.7084383964538574
    5. 'h' → logprob: -3.3334383964538574
    6. 'priority' → logprob: -3.8334383964538574
    7. 'pop' → logprob: -4.833438396453857
    8. 'p' → logprob: -4.958438396453857
    9. 'hq' → logprob: -5.333438396453857
    10. 'd' → logprob: -5.833438396453857

Token 197: ' priority' (ID: 17621)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.554575502872467
    2. ' p' → logprob: -2.0545754432678223
    3. ' pq' → logprob: -2.0545754432678223
    4. 'push' → logprob: -2.4295754432678223
    5. ' priority' → logprob: -3.5545754432678223
    6. ' he' → logprob: -4.429575443267822
    7. 'priority' → logprob: -4.679575443267822
    8. 'p' → logprob: -4.804575443267822
    9. 'pq' → logprob: -4.804575443267822
    10. ' h' → logprob: -5.804575443267822

Token 198: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.016840429976582527
    2. 'queue' → logprob: -4.64184045791626
    3. '_enqueue' → logprob: -6.26684045791626
    4. '_push' → logprob: -6.39184045791626
    5. ' queue' → logprob: -6.76684045791626
    6. '_' → logprob: -7.01684045791626
    7. 'q' → logprob: -7.89184045791626
    8. '(queue' → logprob: -7.89184045791626
    9. '_q' → logprob: -8.016839981079102
    10. 'def' → logprob: -10.016839981079102

Token 199: '_push' (ID: 35376)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002870801545213908
    2. '(' → logprob: -8.500287055969238
    3. ':' → logprob: -10.875287055969238
    4. '(lst' → logprob: -10.875287055969238
    5. '():
' → logprob: -11.375287055969238
    6. '(queue' → logprob: -11.625287055969238
    7. ' ():' → logprob: -11.625287055969238
    8. '()' → logprob: -12.250287055969238
    9. '(size' → logprob: -13.000287055969238
    10. '(list' → logprob: -13.625287055969238

Token 200: '(heap' (ID: 173794)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5613406300544739
    2. '(q' → logprob: -1.561340570449829
    3. '(queue' → logprob: -1.811340570449829
    4. '(heap' → logprob: -3.061340570449829
    5. '(' → logprob: -5.686340808868408
    6. '(lst' → logprob: -5.936340808868408
    7. '(h' → logprob: -6.311340808868408
    8. '(stack' → logprob: -7.311340808868408
    9. '(arr' → logprob: -7.561340808868408
    10. ' (' → logprob: -8.31134033203125

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007541201775893569
    2. ' ,' → logprob: -8.125754356384277
    3. ',h' → logprob: -8.625754356384277
    4. '(heap' → logprob: -8.750754356384277
    5. ',p' → logprob: -9.750754356384277
    6. ',item' → logprob: -10.625754356384277
    7. '):' → logprob: -11.250754356384277
    8. ',q' → logprob: -11.750754356384277
    9. 'heap' → logprob: -12.375754356384277
    10. ' heap' → logprob: -13.375754356384277

Token 202: ' x' (ID: 1215)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.03043237514793873
    2. ' item' → logprob: -3.9054324626922607
    3. 'value' → logprob: -5.030432224273682
    4. 'val' → logprob: -6.405432224273682
    5. 'x' → logprob: -7.530432224273682
    6. 'elem' → logprob: -7.780432224273682
    7. ' value' → logprob: -8.15543270111084
    8. ' val' → logprob: -8.65543270111084
    9. 'element' → logprob: -8.78043270111084
    10. ' x' → logprob: -10.90543270111084

Token 203: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003074566484428942
    2. '):
' → logprob: -8.500307083129883
    3. ')' → logprob: -9.375307083129883
    4. ' ):' → logprob: -11.500307083129883
    5. ':' → logprob: -11.750307083129883
    6. '):
' → logprob: -14.500307083129883
    7. ')：' → logprob: -15.000307083129883
    8. ',' → logprob: -15.375307083129883
    9. '):

' → logprob: -16.875307083129883
    10. ' ' → logprob: -17.250307083129883

Token 204: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48571816086769104
    2. ' h' → logprob: -0.9857181310653687
    3. '
' → logprob: -5.110718250274658
    4. '	h' → logprob: -5.360718250274658
    5. 'h' → logprob: -7.360718250274658
    6. '    
' → logprob: -9.6107177734375
    7. ' ' → logprob: -10.9857177734375
    8. ' 
' → logprob: -10.9857177734375
    9. '  
' → logprob: -10.9857177734375
    10. '  ' → logprob: -11.2357177734375

Token 205: '(map' (ID: 16946)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5493128299713135
    2. '(heap' → logprob: -1.2993128299713135
    3. 'append' → logprob: -2.4243128299713135
    4. '(h' → logprob: -3.9243128299713135
    5. '.' → logprob: -4.299312591552734
    6. '_append' → logprob: -5.049312591552734
    7. '.push' → logprob: -5.799312591552734
    8. '.insert' → logprob: -5.799312591552734
    9. 'heap' → logprob: -6.299312591552734
    10. '.heap' → logprob: -6.424312591552734

Token 206: '(lambda' (ID: 43341)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.041465580463409424
    2. '(lambda' → logprob: -3.4164655208587646
    3. '(' → logprob: -5.541465759277344
    4. '(heap' → logprob: -5.666465759277344
    5. 'h' → logprob: -8.666465759277344
    6. '(part' → logprob: -9.666465759277344
    7. 'heap' → logprob: -10.166465759277344
    8. '(
' → logprob: -10.416465759277344
    9. 'lambda' → logprob: -10.541465759277344
    10. ' (' → logprob: -10.916465759277344

Token 207: ' _:' (ID: 133568)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.09856116771698
    2. ' h' → logprob: -1.47356116771698
    3. '(lambda' → logprob: -1.72356116771698
    4. 'lambda' → logprob: -2.5985612869262695
    5. ' lambda' → logprob: -2.7235612869262695
    6. '(h' → logprob: -2.8485612869262695
    7. '(' → logprob: -4.3485612869262695
    8. ' (' → logprob: -4.4735612869262695
    9. ' heap' → logprob: -4.7235612869262695
    10. 'heap' → logprob: -4.8485612869262695

Token 208: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3676142692565918
    2. 'hq' → logprob: -1.3676142692565918
    3. ' h' → logprob: -3.617614269256592
    4. 'heap' → logprob: -3.867614269256592
    5. 'None' → logprob: -6.367614269256592
    6. ' heap' → logprob: -6.992614269256592
    7. ' None' → logprob: -7.492614269256592
    8. 'he' → logprob: -7.617614269256592
    9. '(h' → logprob: -8.55511474609375
    10. 'hpp' → logprob: -9.05511474609375

Token 209: 'q' (ID: 80)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.00014287306112237275
    2. 'ush' → logprob: -8.875143051147461
    3. 'q' → logprob: -13.875143051147461
    4. '.push' → logprob: -14.500143051147461
    5. 'p' → logprob: -14.875143051147461
    6. 'pop' → logprob: -15.000143051147461
    7. 'h' → logprob: -15.000143051147461
    8. '_push' → logprob: -15.875143051147461
    9. 'put' → logprob: -16.37514305114746
    10. ' push' → logprob: -16.62514305114746

Token 210: '.he' (ID: 67786)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.28102272748947144
    2. 'push' → logprob: -1.7810227870941162
    3. '.he' → logprob: -3.531022787094116
    4. 'he' → logprob: -3.656022787094116
    5. 'h' → logprob: -4.031022548675537
    6. '.push' → logprob: -6.281022548675537
    7. '.h' → logprob: -7.031022548675537
    8. 'heap' → logprob: -8.156023025512695
    9. '.' → logprob: -9.406023025512695
    10. '_push' → logprob: -9.531023025512695

Token 211: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.3557529857498594e-05
    2. 'pp' → logprob: -11.25002384185791
    3. 'ap' → logprob: -11.62502384185791
    4. 'push' → logprob: -13.87502384185791
    5. '```' → logprob: -15.37502384185791
    6. 'a' → logprob: -15.50002384185791
    7. '[' → logprob: -16.750022888183594
    8. 'p' → logprob: -17.375022888183594
    9. 'ush' → logprob: -17.625022888183594
    10. 'appen' → logprob: -17.750022888183594

Token 212: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.8087270038668066e-05
    2. 'push' → logprob: -10.625027656555176
    3. 'op' → logprob: -13.000027656555176
    4. 'sh' → logprob: -15.375027656555176
    5. '```' → logprob: -15.375027656555176
    6. '

' → logprob: -16.000028610229492
    7. 'p' → logprob: -16.125028610229492
    8. 'u' → logprob: -16.125028610229492
    9. '   ' → logprob: -16.250028610229492
    10. '[' → logprob: -16.500028610229492

Token 213: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.966313281329349e-05
    2. '(' → logprob: -10.625049591064453
    3. ' (' → logprob: -11.375049591064453
    4. '(queue' → logprob: -12.000049591064453
    5. ')' → logprob: -12.875049591064453
    6. '(h' → logprob: -13.375049591064453
    7. ',' → logprob: -14.000049591064453
    8. '(stack' → logprob: -14.375049591064453
    9. 'heap' → logprob: -14.875049591064453
    10. ' ' → logprob: -15.000049591064453

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0065954094752669334
    2. '(heap' → logprob: -5.381595611572266
    3. ',x' → logprob: -7.256595611572266
    4. ',h' → logprob: -7.881595611572266
    5. ' ,' → logprob: -8.006595611572266
    6. ',(' → logprob: -8.381595611572266
    7. '(' → logprob: -8.756595611572266
    8. ',[' → logprob: -9.006595611572266
    9. '(x' → logprob: -11.756595611572266
    10. ',y' → logprob: -12.006595611572266

Token 215: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008713730610907078
    2. ' x' → logprob: -4.758713722229004
    3. '(x' → logprob: -9.258713722229004
    4. '_x' → logprob: -13.758713722229004
    5. ')x' → logprob: -14.383713722229004
    6. '_' → logprob: -14.758713722229004
    7. ')' → logprob: -14.883713722229004
    8. ' ' → logprob: -14.883713722229004
    9. '(' → logprob: -15.383713722229004
    10. '
' → logprob: -15.508713722229004

Token 216: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18221276998519897
    2. ',' → logprob: -1.8072128295898438
    3. ')))' → logprob: -6.682212829589844
    4. ')),' → logprob: -7.932212829589844
    5. ' ),' → logprob: -8.182212829589844
    6. ')' → logprob: -8.307212829589844
    7. '))' → logprob: -9.182212829589844
    8. ' ,' → logprob: -9.432212829589844
    9. ',),' → logprob: -9.932212829589844
    10. ',x' → logprob: -10.807212829589844

Token 217: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4746662974357605
    2. 'range' → logprob: -0.9746662974357605
    3. ' range' → logprob: -8.099666595458984
    4. '[]' → logprob: -8.724666595458984
    5. '[_' → logprob: -10.099666595458984
    6. '(' → logprob: -10.974666595458984
    7. '['' → logprob: -11.474666595458984
    8. '(range' → logprob: -11.599666595458984
    9. 'iter' → logprob: -11.974666595458984
    10. '["' → logprob: -12.099666595458984

Token 218: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0831151232123375
    2. 'None' → logprob: -2.8331151008605957
    3. 'range' → logprob: -4.458115100860596
    4. '[' → logprob: -5.458115100860596
    5. '[]' → logprob: -5.458115100860596
    6. '_' → logprob: -7.708115100860596
    7. '()' → logprob: -8.583115577697754
    8. '1' → logprob: -9.458115577697754
    9. ' range' → logprob: -10.583115577697754
    10. '_[' → logprob: -11.583115577697754

Token 219: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.13220328092575073
    2. ']' → logprob: -2.1322033405303955
    3. ']*' → logprob: -5.632203102111816
    4. ']:' → logprob: -7.382203102111816
    5. '],' → logprob: -8.007203102111816
    6. ',' → logprob: -8.757203102111816
    7. '][:' → logprob: -9.757203102111816
    8. '])))' → logprob: -9.757203102111816
    9. ':' → logprob: -9.882203102111816
    10. '])):
' → logprob: -10.007203102111816

Token 220: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05879970267415047
    2. '<|end|>' → logprob: -3.1837997436523438
    3. '
' → logprob: -4.308799743652344
    4. 'def' → logprob: -7.558799743652344
    5. ')
' → logprob: -8.183799743652344
    6. '(' → logprob: -8.433799743652344
    7. '<|end|>' → logprob: -8.808799743652344
    8. '  
' → logprob: -8.933799743652344
    9. '\n' → logprob: -9.058799743652344
    10. ' ' → logprob: -9.183799743652344

Token 221: ' priority' (ID: 17621)
  Prédit: ' priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priority' → logprob: -0.3485257923603058
    2. 'priority' → logprob: -1.2235257625579834
    3. 'def' → logprob: -10.223526000976562
    4. '_priority' → logprob: -10.598526000976562
    5. '(priority' → logprob: -11.598526000976562
    6. ' def' → logprob: -11.973526000976562
    7. '
' → logprob: -13.848526000976562
    8. 'riority' → logprob: -13.973526000976562
    9. 'prior' → logprob: -14.098526000976562
    10. ' ' → logprob: -15.098526000976562

Token 222: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -5.512236498361744e-07
    2. 'queue' → logprob: -14.500000953674316
    3. '_' → logprob: -17.125
    4. '_QUEUE' → logprob: -17.625
    5. ' queue' → logprob: -17.75
    6. '_stack' → logprob: -18.75
    7. '	queue' → logprob: -19.625
    8. 'Queue' → logprob: -19.875
    9. 'def' → logprob: -19.875
    10. '_query' → logprob: -20.5

Token 223: '_pop' (ID: 48814)
  Prédit: '_pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pop' → logprob: -0.0009381395066156983
    2. '_push' → logprob: -7.0009379386901855
    3. '_pull' → logprob: -11.125938415527344
    4. 'pop' → logprob: -12.000938415527344
    5. '_pe' → logprob: -13.250938415527344
    6. '_p' → logprob: -13.250938415527344
    7. '_' → logprob: -14.375938415527344
    8. '_append' → logprob: -14.500938415527344
    9. '_poll' → logprob: -14.625938415527344
    10. '_remove' → logprob: -15.500938415527344

Token 224: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.492120155598968e-05
    2. '(queue' → logprob: -10.125064849853516
    3. '(' → logprob: -10.625064849853516
    4. '(stack' → logprob: -15.250064849853516
    5. ' (' → logprob: -16.125064849853516
    6. '(h' → logprob: -16.625064849853516
    7. 'heap' → logprob: -17.250064849853516
    8. ' heap' → logprob: -18.375064849853516
    9. '(head' → logprob: -18.500064849853516
    10. '(deck' → logprob: -18.875064849853516

Token 225: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023288333788514137
    2. '):' → logprob: -3.7732882499694824
    3. '(heap' → logprob: -11.02328872680664
    4. ')' → logprob: -11.14828872680664
    5. ' ,' → logprob: -12.27328872680664
    6. ' ):' → logprob: -12.39828872680664
    7. ',h' → logprob: -14.27328872680664
    8. 'heap' → logprob: -14.77328872680664
    9. ',size' → logprob: -14.89828872680664
    10. '):
' → logprob: -14.89828872680664

Token 226: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0025599722284823656
    2. 'return' → logprob: -6.252560138702393
    3. '   ' → logprob: -7.502560138702393
    4. '	return' → logprob: -9.627559661865234
    5. ' if' → logprob: -12.127559661865234
    6. ' ' → logprob: -12.877559661865234
    7. '
' → logprob: -13.252559661865234
    8. ' 
' → logprob: -13.377559661865234
    9. ' ' → logprob: -14.877559661865234
    10. ' h' → logprob: -15.002559661865234

Token 227: ' list' (ID: 1562)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.23200996220111847
    2. ' h' → logprob: -1.857010006904602
    3. 'h' → logprob: -2.9820098876953125
    4. ' None' → logprob: -9.982009887695312
    5. '	h' → logprob: -9.982009887695312
    6. 'None' → logprob: -10.732009887695312
    7. 'hp' → logprob: -10.857009887695312
    8. '(h' → logprob: -11.107009887695312
    9. ' ' → logprob: -11.232009887695312
    10. 'hcp' → logprob: -11.607009887695312

Token 228: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003628342878073454
    2. 'map' → logprob: -6.003628253936768
    3. '(h' → logprob: -6.878628253936768
    4. '(' → logprob: -10.253628730773926
    5. '(heap' → logprob: -10.503628730773926
    6. 'h' → logprob: -10.628628730773926
    7. '([' → logprob: -11.753628730773926
    8. '(filter' → logprob: -11.878628730773926
    9. '.map' → logprob: -12.628628730773926
    10. 'heap' → logprob: -12.753628730773926

Token 229: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0012727351859211922
    2. '(h' → logprob: -6.876272678375244
    3. 'lambda' → logprob: -8.501273155212402
    4. '(' → logprob: -10.251273155212402
    5. 'h' → logprob: -14.251273155212402
    6. '(l' → logprob: -16.126272201538086
    7. '(heap' → logprob: -16.126272201538086
    8. '=lambda' → logprob: -16.251272201538086
    9. 'hq' → logprob: -16.751272201538086
    10. '(
' → logprob: -16.876272201538086

Token 230: ' _:' (ID: 133568)
  Prédit: '_:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.02963257022202015
    2. ' _:' → logprob: -4.279632568359375
    3. '_' → logprob: -4.654632568359375
    4. '(_:' → logprob: -5.404632568359375
    5. 'h' → logprob: -8.029632568359375
    6. ':' → logprob: -8.279632568359375
    7. '   ' → logprob: -8.904632568359375
    8. ':_' → logprob: -9.154632568359375
    9. ' ' → logprob: -9.779632568359375
    10. '_h' → logprob: -9.779632568359375

Token 231: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.015234212391078472
    2. 'h' → logprob: -4.890233993530273
    3. ' h' → logprob: -4.890233993530273
    4. 'he' → logprob: -10.765233993530273
    5. 'hp' → logprob: -11.890233993530273
    6. '	h' → logprob: -12.140233993530273
    7. ' ' → logprob: -12.140233993530273
    8. '   ' → logprob: -12.390233993530273
    9. 'hcp' → logprob: -12.515233993530273
    10. 'hk' → logprob: -12.640233993530273

Token 232: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00896446593105793
    2. 'pop' → logprob: -4.758964538574219
    3. 'op' → logprob: -9.008964538574219
    4. 'p' → logprob: -9.133964538574219
    5. 'hq' → logprob: -10.133964538574219
    6. 'pq' → logprob: -10.258964538574219
    7. '.pop' → logprob: -11.008964538574219
    8. 'qp' → logprob: -11.633964538574219
    9. 'h' → logprob: -12.508964538574219
    10. 'qu' → logprob: -12.633964538574219

Token 233: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00021712594025302678
    2. 'he' → logprob: -8.50021743774414
    3. ' he' → logprob: -11.87521743774414
    4. '.h' → logprob: -12.75021743774414
    5. '.' → logprob: -13.50021743774414
    6. '_he' → logprob: -14.37521743774414
    7. '```' → logprob: -14.87521743774414
    8. '<|end|>' → logprob: -15.12521743774414
    9. '.heap' → logprob: -15.25021743774414
    10. ' .' → logprob: -15.25021743774414

Token 234: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00020103710994590074
    2. 'pop' → logprob: -8.625201225280762
    3. 'ap' → logprob: -11.125201225280762
    4. 'pp' → logprob: -13.000201225280762
    5. 'p' → logprob: -13.625201225280762
    6. 'op' → logprob: -13.875201225280762
    7. 'q' → logprob: -14.125201225280762
    8. '```' → logprob: -14.875201225280762
    9. 'e' → logprob: -15.625201225280762
    10. '[' → logprob: -15.750201225280762

Token 235: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.553032628493384e-05
    2. 'pop' → logprob: -10.125075340270996
    3. 'ush' → logprob: -10.750075340270996
    4. 'o' → logprob: -12.500075340270996
    5. 'opp' → logprob: -12.500075340270996
    6. 'p' → logprob: -13.250075340270996
    7. 'оп' → logprob: -13.375075340270996
    8. '```' → logprob: -14.750075340270996
    9. 'app' → logprob: -14.875075340270996
    10. '   ' → logprob: -14.875075340270996

Token 236: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -14.75000286102295
    4. '(queue' → logprob: -15.50000286102295
    5. 'heap' → logprob: -16.500001907348633
    6. '(stack' → logprob: -16.625001907348633
    7. ' heap' → logprob: -17.125001907348633
    8. '(h' → logprob: -18.375001907348633
    9. '(hash' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.875001907348633

Token 237: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6330719590187073
    2. '(heap' → logprob: -0.7580719590187073
    3. 'heap' → logprob: -8.758071899414062
    4. ' ,' → logprob: -9.008071899414062
    5. ' heap' → logprob: -9.758071899414062
    6. '(' → logprob: -9.758071899414062
    7. '.heap' → logprob: -10.758071899414062
    8. '),' → logprob: -11.258071899414062
    9. ')))' → logprob: -11.258071899414062
    10. '(queue' → logprob: -12.508071899414062

Token 238: ' [' (ID: 723)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3534184992313385
    2. '[' → logprob: -1.2284184694290161
    3. ' heap' → logprob: -5.978418350219727
    4. ' [' → logprob: -6.478418350219727
    5. 'range' → logprob: -7.353418350219727
    6. '(heap' → logprob: -8.478418350219727
    7. ' range' → logprob: -10.728418350219727
    8. '[h' → logprob: -12.353418350219727
    9. '.heap' → logprob: -12.603418350219727
    10. ' ' → logprob: -12.728418350219727

Token 239: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.073596548754722e-05
    2. '0' → logprob: -10.12505054473877
    3. 'heap' → logprob: -12.12505054473877
    4. ' None' → logprob: -12.25005054473877
    5. '_None' → logprob: -15.50005054473877
    6. '(None' → logprob: -16.375051498413086
    7. '1' → logprob: -16.750051498413086
    8. '   ' → logprob: -17.000051498413086
    9. 'True' → logprob: -17.750051498413086
    10. ',None' → logprob: -18.125051498413086

Token 240: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00023357603640761226
    2. ']' → logprob: -9.00023365020752
    3. '])' → logprob: -10.00023365020752
    4. ']))
' → logprob: -10.50023365020752
    5. '))' → logprob: -10.87523365020752
    6. '()' → logprob: -11.87523365020752
    7. '']))' → logprob: -12.50023365020752
    8. '])))' → logprob: -13.12523365020752
    9. ']))

' → logprob: -13.62523365020752
    10. '])).' → logprob: -13.75023365020752

Token 241: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21678300201892853
    2. '
' → logprob: -2.716783046722412
    3. '(
' → logprob: -2.841783046722412
    4. '[' → logprob: -3.841783046722412
    5. ':' → logprob: -4.216783046722412
    6. 'def' → logprob: -4.466783046722412
    7. ')' → logprob: -4.591783046722412
    8. '<|end|>' → logprob: -4.966783046722412
    9. ',' → logprob: -6.466783046722412
    10. '_' → logprob: -6.591783046722412

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '-' → logprob: -16.5
    4. '
' → logprob: -19.0
    5. '０' → logprob: -19.25
    6. '00' → logprob: -19.4375
    7. '000' → logprob: -19.6875
    8. '   ' → logprob: -19.75
    9. '۰' → logprob: -19.875
    10. '٠' → logprob: -20.125

Token 243: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. '])' → logprob: -11.625030517578125
    3. '）' → logprob: -11.625030517578125
    4. ']' → logprob: -12.250030517578125
    5. ' )' → logprob: -12.875030517578125
    6. ')]' → logprob: -13.375030517578125
    7. ')
' → logprob: -13.500030517578125
    8. '()' → logprob: -14.250030517578125
    9. '())' → logprob: -14.500030517578125
    10. '})' → logprob: -15.375030517578125

Token 244: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0101807117462158
    2. '#' → logprob: -1.1351807117462158
    3. 'def' → logprob: -2.010180711746216
    4. 'd' → logprob: -3.260180711746216
    5. ':' → logprob: -3.385180711746216
    6. '(' → logprob: -3.760180711746216
    7. '<|end|>' → logprob: -3.760180711746216
    8. ')' → logprob: -4.260180473327637
    9. ',' → logprob: -4.760180473327637
    10. ' 
' → logprob: -5.260180473327637

Token 245: ' priority' (ID: 17621)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.08922319859266281
    2. ' priority' → logprob: -2.4642231464385986
    3. 'main' → logprob: -9.21422290802002
    4. 'd' → logprob: -9.71422290802002
    5. ' main' → logprob: -10.58922290802002
    6. ' d' → logprob: -10.83922290802002
    7. 'prior' → logprob: -10.96422290802002
    8. '_priority' → logprob: -11.33922290802002
    9. 'heap' → logprob: -12.08922290802002
    10. 'he' → logprob: -12.58922290802002

Token 246: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. 'queue' → logprob: -16.375001907348633
    4. '_stack' → logprob: -16.875001907348633
    5. '_QUEUE' → logprob: -17.000001907348633
    6. '_list' → logprob: -18.125001907348633
    7. '_priority' → logprob: -18.375001907348633
    8. '_query' → logprob: -18.875001907348633
    9. '	queue' → logprob: -19.125001907348633
    10. '_q' → logprob: -19.250001907348633

Token 247: '_push' (ID: 35376)
  Prédit: '_push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_push' → logprob: -0.9975677132606506
    2. '_pop' → logprob: -1.1225676536560059
    3. '_pe' → logprob: -1.2475676536560059
    4. '_size' → logprob: -4.497567653656006
    5. '_remove' → logprob: -5.872567653656006
    6. '_top' → logprob: -6.622567653656006
    7. '_append' → logprob: -6.997567653656006
    8. '_clear' → logprob: -7.497567653656006
    9. '_empty' → logprob: -7.872567653656006
    10. '_replace' → logprob: -8.247568130493164

Token 248: '_max' (ID: 13731)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.05324786156415939
    2. '(' → logprob: -3.6782479286193848
    3. '_' → logprob: -3.9282479286193848
    4. '_(' → logprob: -6.303247928619385
    5. '_list' → logprob: -6.928247928619385
    6. '(queue' → logprob: -7.178247928619385
    7. 'heap' → logprob: -7.678247928619385
    8. '2' → logprob: -7.678247928619385
    9. '_heap' → logprob: -7.928247928619385
    10. '_append' → logprob: -8.053247451782227

Token 249: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.00016206118743866682
    2. '(' → logprob: -8.875162124633789
    3. '_heap' → logprob: -11.625162124633789
    4. '(queue' → logprob: -12.000162124633789
    5. 'heap' → logprob: -12.250162124633789
    6. ' (' → logprob: -13.750162124633789
    7. ' heap' → logprob: -15.250162124633789
    8. '(tree' → logprob: -15.500162124633789
    9. '(lst' → logprob: -15.500162124633789
    10. '(stack' → logprob: -16.25016212463379

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011343709047650918
    2. ' ,' → logprob: -9.375113487243652
    3. ',h' → logprob: -11.375113487243652
    4. ',x' → logprob: -11.875113487243652
    5. ',item' → logprob: -13.375113487243652
    6. '(heap' → logprob: -13.500113487243652
    7. ',array' → logprob: -13.750113487243652
    8. ',list' → logprob: -13.875113487243652
    9. ',l' → logprob: -14.250113487243652
    10. ',p' → logprob: -14.375113487243652

Token 251: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4782991409301758
    2. 'x' → logprob: -0.9782991409301758
    3. '-x' → logprob: -5.478299140930176
    4. ' -' → logprob: -10.603299140930176
    5. '-' → logprob: -11.728299140930176
    6. '	x' → logprob: -13.603299140930176
    7. ' ' → logprob: -13.728299140930176
    8. '_x' → logprob: -14.478299140930176
    9. '(x' → logprob: -16.10329818725586
    10. '```' → logprob: -16.22829818725586

Token 252: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.4987974029500037e-05
    2. '):
' → logprob: -11.375024795532227
    3. ' ):' → logprob: -11.875024795532227
    4. ')' → logprob: -12.375024795532227
    5. ':' → logprob: -13.750024795532227
    6. ',' → logprob: -14.375024795532227
    7. '):
' → logprob: -15.250024795532227
    8. '):

' → logprob: -15.375024795532227
    9. ']:' → logprob: -17.125024795532227
    10. '[]):' → logprob: -17.125024795532227

Token 253: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.45714622735977173
    2. ' list' → logprob: -1.832146167755127
    3. 'hq' → logprob: -2.582146167755127
    4. 'list' → logprob: -2.957146167755127
    5. '   ' → logprob: -3.832146167755127
    6. 'priority' → logprob: -3.957146167755127
    7. ' priority' → logprob: -4.082146167755127
    8. ' return' → logprob: -4.457146167755127
    9. 'h' → logprob: -5.707146167755127
    10. 'return' → logprob: -6.332146167755127

Token 254: 'q' (ID: 80)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.0024246484972536564
    2. 'q' → logprob: -6.252424716949463
    3. 'ush' → logprob: -8.127424240112305
    4. 'h' → logprob: -9.502424240112305
    5. 'p' → logprob: -9.502424240112305
    6. '.push' → logprob: -10.627424240112305
    7. '_push' → logprob: -11.627424240112305
    8. 'pop' → logprob: -12.127424240112305
    9. 'e' → logprob: -12.502424240112305
    10. 'op' → logprob: -13.502424240112305

Token 255: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0032676649279892445
    2. '._' → logprob: -6.378267765045166
    3. '_he' → logprob: -7.503267765045166
    4. '_push' → logprob: -7.753267765045166
    5. 'push' → logprob: -8.253267288208008
    6. '.heap' → logprob: -8.878267288208008
    7. '.' → logprob: -9.503267288208008
    8. 'he' → logprob: -9.753267288208008
    9. 'ush' → logprob: -10.753267288208008
    10. 'heap' → logprob: -12.003267288208008

Token 256: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005042336881160736
    2. 'pp' → logprob: -5.880042552947998
    3. 'push' → logprob: -6.255042552947998
    4. 'ap' → logprob: -8.75504207611084
    5. 'ush' → logprob: -8.88004207611084
    6. '```' → logprob: -12.38004207611084
    7. 'p' → logprob: -12.75504207611084
    8. 'appen' → logprob: -13.75504207611084
    9. 'a' → logprob: -14.00504207611084
    10. 'APP' → logprob: -14.00504207611084

Token 257: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.5941604690160602e-05
    2. 'push' → logprob: -10.625025749206543
    3. 'u' → logprob: -14.625025749206543
    4. 'app' → logprob: -14.875025749206543
    5. 'p' → logprob: -15.375025749206543
    6. '   ' → logprob: -15.500025749206543
    7. '```' → logprob: -15.625025749206543
    8. 'Push' → logprob: -16.50002670288086
    9. '[' → logprob: -16.75002670288086
    10. 'op' → logprob: -17.25002670288086

Token 258: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.847109812544659e-05
    2. '(-' → logprob: -10.750048637390137
    3. 'heap' → logprob: -11.250048637390137
    4. '(' → logprob: -12.625048637390137
    5. '((-' → logprob: -12.750048637390137
    6. '(max' → logprob: -13.375048637390137
    7. 'max' → logprob: -13.500048637390137
    8. ' heap' → logprob: -13.625048637390137
    9. '(-(' → logprob: -13.625048637390137
    10. '([-' → logprob: -14.750048637390137

Token 259: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.5051172971725464
    2. ',' → logprob: -1.0051172971725464
    3. '(-' → logprob: -3.755117416381836
    4. '(' → logprob: -5.380117416381836
    5. '((-' → logprob: -7.505117416381836
    6. ' ,' → logprob: -7.505117416381836
    7. ' heap' → logprob: -7.630117416381836
    8. ' (-' → logprob: -8.130117416381836
    9. ',-' → logprob: -8.630117416381836
    10. ')' → logprob: -9.380117416381836

Token 260: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.03217143192887306
    2. ' -' → logprob: -3.5321714878082275
    3. '-h' → logprob: -6.782171249389648
    4. '-' → logprob: -6.782171249389648
    5. '-q' → logprob: -9.157171249389648
    6. '-int' → logprob: -11.157171249389648
    7. '-u' → logprob: -12.282171249389648
    8. '-Q' → logprob: -12.532171249389648
    9. '-i' → logprob: -12.532171249389648
    10. '-ip' → logprob: -12.782171249389648

Token 261: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -21.500001907348633
    4. 'int' → logprob: -22.000001907348633
    5. ')x' → logprob: -22.000001907348633
    6. '	x' → logprob: -22.250001907348633
    7. '(x' → logprob: -22.750001907348633
    8. '```' → logprob: -23.500001907348633
    9. '1' → logprob: -24.375001907348633
    10. ''x' → logprob: -24.625001907348633

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014764121442567557
    2. ' )' → logprob: -8.875147819519043
    3. ')
' → logprob: -12.000147819519043
    4. ')x' → logprob: -14.000147819519043
    5. ',' → logprob: -14.500147819519043
    6. '))' → logprob: -16.375146865844727
    7. ')

' → logprob: -16.750146865844727
    8. '),' → logprob: -16.750146865844727
    9. ')#' → logprob: -17.125146865844727
    10. ')}' → logprob: -17.750146865844727

Token 263: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28255853056907654
    2. '<|end|>' → logprob: -1.407558560371399
    3. '
' → logprob: -7.282558441162109
    4. ' def' → logprob: -7.657558441162109
    5. '<|end|>' → logprob: -9.90755844116211
    6. '_' → logprob: -9.90755844116211
    7. ')' → logprob: -10.40755844116211
    8. '_def' → logprob: -10.40755844116211
    9. ' 
' → logprob: -10.78255844116211
    10. '()' → logprob: -11.15755844116211

Token 264: ' priority' (ID: 17621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12254096567630768
    2. 'priority' → logprob: -2.2475409507751465
    3. ' def' → logprob: -5.1225409507751465
    4. ' priority' → logprob: -5.7475409507751465
    5. '
' → logprob: -8.122541427612305
    6. '_priority' → logprob: -9.247541427612305
    7. '(priority' → logprob: -9.872541427612305
    8. '_def' → logprob: -10.622541427612305
    9. 'riority' → logprob: -11.372541427612305
    10. ' ' → logprob: -12.622541427612305

Token 265: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.816093228830141e-06
    2. 'queue' → logprob: -13.25000286102295
    3. '_' → logprob: -15.12500286102295
    4. '_QUEUE' → logprob: -15.25000286102295
    5. 'Queue' → logprob: -15.62500286102295
    6. 'def' → logprob: -15.75000286102295
    7. '_priority' → logprob: -17.125001907348633
    8. '_stack' → logprob: -17.125001907348633
    9. '
' → logprob: -17.250001907348633
    10. 'que' → logprob: -17.375001907348633

Token 266: '_pop' (ID: 48814)
  Prédit: '_pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pop' → logprob: -0.00018149138486478478
    2. 'pop' → logprob: -8.625181198120117
    3. 'Pop' → logprob: -14.000181198120117
    4. '_max' → logprob: -15.000181198120117
    5. '.pop' → logprob: -15.125181198120117
    6. '_pe' → logprob: -15.625181198120117
    7. '_push' → logprob: -16.500181198120117
    8. '_p' → logprob: -16.750181198120117
    9. '_get' → logprob: -17.125181198120117
    10. ' pop' → logprob: -17.125181198120117

Token 267: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0002636006975080818
    2. 'max' → logprob: -8.250263214111328
    3. '_' → logprob: -13.750263214111328
    4. '_min' → logprob: -14.000263214111328
    5. '_MAX' → logprob: -15.375263214111328
    6. 'Max' → logprob: -15.750263214111328
    7. '(max' → logprob: -17.000263214111328
    8. '(heap' → logprob: -18.625263214111328
    9. '```' → logprob: -18.750263214111328
    10. '_val' → logprob: -19.375263214111328

Token 268: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0008084330474957824
    2. '(' → logprob: -7.125808238983154
    3. 'heap' → logprob: -13.250808715820312
    4. '(stack' → logprob: -14.375808715820312
    5. '(queue' → logprob: -14.625808715820312
    6. '(
' → logprob: -15.000808715820312
    7. ' heap' → logprob: -15.250808715820312
    8. '(h' → logprob: -15.875808715820312
    9. '<|end|>' → logprob: -16.375808715820312
    10. '_heap' → logprob: -16.875808715820312

Token 269: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002193908003391698
    2. ')' → logprob: -9.000219345092773
    3. ' ):' → logprob: -9.625219345092773
    4. '):
' → logprob: -10.875219345092773
    5. ',' → logprob: -11.750219345092773
    6. '(heap' → logprob: -13.625219345092773
    7. '):

' → logprob: -14.000219345092773
    8. '):
' → logprob: -15.500219345092773
    9. ' )' → logprob: -15.500219345092773
    10. ')=' → logprob: -15.750219345092773

Token 270: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03459756076335907
    2. 'return' → logprob: -3.534597635269165
    3. ' -' → logprob: -5.409597396850586
    4. '	return' → logprob: -8.784597396850586
    5. '-return' → logprob: -9.534597396850586
    6. '   ' → logprob: -10.409597396850586
    7. ' h' → logprob: -10.784597396850586
    8. ' ' → logprob: -10.784597396850586
    9. '-h' → logprob: -11.034597396850586
    10. ' ' → logprob: -11.534597396850586

Token 271: ' -' (ID: 533)
  Prédit: '-h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-h' → logprob: -0.2642368972301483
    2. ' -' → logprob: -1.5142369270324707
    3. '-' → logprob: -4.514236927032471
    4. '-q' → logprob: -7.389236927032471
    5. '-he' → logprob: -7.889236927032471
    6. '-x' → logprob: -9.014236450195312
    7. '-ħ' → logprob: -10.139236450195312
    8. '-gh' → logprob: -10.639236450195312
    9. '-u' → logprob: -11.264236450195312
    10. '-hi' → logprob: -11.389236450195312

Token 272: 'hq' (ID: 156668)
  Prédit: 'hq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -6.988221684878226e-06
    2. 'h' → logprob: -12.250006675720215
    3. ' h' → logprob: -13.125006675720215
    4. 'heap' → logprob: -16.50000762939453
    5. 'hp' → logprob: -17.25000762939453
    6. 'pq' → logprob: -17.50000762939453
    7. '(h' → logprob: -18.25000762939453
    8. 'hg' → logprob: -18.37500762939453
    9. '1' → logprob: -18.62500762939453
    10. ' ' → logprob: -18.75000762939453

Token 273: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0024764856789261103
    2. 'he' → logprob: -6.002476692199707
    3. '.h' → logprob: -15.127476692199707
    4. 'h' → logprob: -15.752476692199707
    5. ' he' → logprob: -15.877476692199707
    6. 'q' → logprob: -16.12747573852539
    7. '_he' → logprob: -16.50247573852539
    8. '.heap' → logprob: -16.75247573852539
    9. 'hq' → logprob: -16.75247573852539
    10. '.' → logprob: -17.00247573852539

Token 274: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.897412822581828e-05
    2. 'pop' → logprob: -10.750068664550781
    3. 'ap' → logprob: -10.750068664550781
    4. 'pp' → logprob: -11.375068664550781
    5. 'q' → logprob: -12.000068664550781
    6. 'op' → logprob: -12.375068664550781
    7. 'p' → logprob: -13.250068664550781
    8. 'opp' → logprob: -13.500068664550781
    9. 'a' → logprob: -15.500068664550781
    10. 'e' → logprob: -15.500068664550781

Token 275: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.576873758807778e-05
    2. 'pop' → logprob: -9.750075340270996
    3. 'p' → logprob: -11.500075340270996
    4. 'q' → logprob: -12.125075340270996
    5. 'o' → logprob: -13.500075340270996
    6. 'opp' → logprob: -16.125076293945312
    7. 'ap' → logprob: -16.375076293945312
    8. 'оп' → logprob: -17.000076293945312
    9. 'he' → logprob: -17.125076293945312
    10. 'e' → logprob: -17.125076293945312

Token 276: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.2200749754119897e-06
    2. 'heap' → logprob: -13.375001907348633
    3. '(queue' → logprob: -15.375001907348633
    4. '(' → logprob: -15.500001907348633
    5. '(max' → logprob: -16.125001907348633
    6. '(hash' → logprob: -17.250001907348633
    7. 'max' → logprob: -17.625001907348633
    8. '(h' → logprob: -18.500001907348633
    9. ' heap' → logprob: -18.625001907348633
    10. '.heap' → logprob: -18.750001907348633

Token 277: ')

' (ID: 1029)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0343380905687809
    2. ')' → logprob: -3.4093379974365234
    3. 'heap' → logprob: -8.034337997436523
    4. '(' → logprob: -8.034337997436523
    5. '())' → logprob: -11.409337997436523
    6. ' heap' → logprob: -11.784337997436523
    7. '.heap' → logprob: -12.534337997436523
    8. ')
' → logprob: -12.784337997436523
    9. '(
' → logprob: -12.909337997436523
    10. ')#' → logprob: -13.159337997436523

Token 278: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5038497447967529
    2. 'def' → logprob: -1.003849744796753
    3. '<|end|>' → logprob: -5.003849983215332
    4. '(' → logprob: -5.253849983215332
    5. 'd' → logprob: -5.753849983215332
    6. ')' → logprob: -5.753849983215332
    7. '
' → logprob: -6.128849983215332
    8. 'class' → logprob: -6.628849983215332
    9. ' ' → logprob: -7.003849983215332
    10. '\' → logprob: -7.378849983215332

Token 279: '---' (ID: 10356)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6029013991355896
    2. '#' → logprob: -1.4779014587402344
    3. ')' → logprob: -2.6029014587402344
    4. ':' → logprob: -3.7279014587402344
    5. ' ' → logprob: -4.102901458740234
    6. '=' → logprob: -4.227901458740234
    7. '
' → logprob: -4.227901458740234
    8. 'd' → logprob: -4.227901458740234
    9. '[' → logprob: -4.352901458740234
    10. 'def' → logprob: -4.352901458740234

Token 280: ' タ' (ID: 107090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11190903186798096
    2. ' ' → logprob: -3.3619089126586914
    3. ' def' → logprob: -4.111908912658691
    4. 'class' → logprob: -4.111908912658691
    5. 'import' → logprob: -4.611908912658691
    6. '#' → logprob: -4.611908912658691
    7. 'from' → logprob: -4.736908912658691
    8. ' class' → logprob: -7.049408912658691
    9. 'input' → logprob: -7.236908912658691
    10. ' #' → logprob: -7.424408912658691

Token 281: 'プ' (ID: 14515)
  Prédit: 'イトル'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'イトル' → logprob: -0.6206458210945129
    2. 'イ' → logprob: -1.6206457614898682
    3. 'ブ' → logprob: -1.7456457614898682
    4. 'プ' → logprob: -3.495645761489868
    5. 'グ' → logprob: -4.120645999908447
    6. 'b' → logprob: -4.370645999908447
    7. '
' → logprob: -4.745645999908447
    8. 'ー' → logprob: -5.370645999908447
    9. 'イル' → logprob: -5.620645999908447
    10. 'スク' → logprob: -5.995645999908447

Token 282: 'ル' (ID: 7052)
  Prédit: 'ル'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ル' → logprob: -4.3226136767771095e-05
    2. 'プ' → logprob: -11.375042915344238
    3. '```' → logprob: -11.375042915344238
    4. '...' → logprob: -12.250042915344238
    5. '#' → logprob: -12.750042915344238
    6. 'le' → logprob: -13.250042915344238
    7. '
' → logprob: -13.375042915344238
    8. '(' → logprob: -13.500042915344238
    9. 'る' → logprob: -13.625042915344238
    10. 'uple' → logprob: -14.375042915344238

Token 283: 'リ' (ID: 9007)
  Prédit: '_unpack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unpack' → logprob: -1.3537498712539673
    2. 'def' → logprob: -1.4787498712539673
    3. '_append' → logprob: -1.6037498712539673
    4. ' =' → logprob: -2.1037497520446777
    5. '<|end|>' → logprob: -3.6037497520446777
    6. '_to' → logprob: -3.7287497520446777
    7. '_' → logprob: -4.603749752044678
    8. '_tuple' → logprob: -4.728749752044678
    9. 'to' → logprob: -4.728749752044678
    10. '_copy' → logprob: -4.728749752044678

Token 284: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.20789435505867004
    2. 'ス' → logprob: -1.7078943252563477
    3. 'st' → logprob: -5.457894325256348
    4. 'す' → logprob: -6.332894325256348
    5. 's' → logprob: -9.457894325256348
    6. '스트' → logprob: -10.457894325256348
    7. 'ース' → logprob: -10.582894325256348
    8. '\xef\xbd' → logprob: -10.582894325256348
    9. 'クト' → logprob: -10.582894325256348
    10. '```' → logprob: -10.832894325256348

Token 285: 'の' (ID: 3385)
  Prédit: '_append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_append' → logprob: -0.22807008028030396
    2. '_to' → logprob: -2.103070020675659
    3. '_add' → logprob: -4.103070259094238
    4. '_sort' → logprob: -4.228070259094238
    5. '_' → logprob: -4.478070259094238
    6. '_copy' → logprob: -4.978070259094238
    7. 'def' → logprob: -5.103070259094238
    8. ' =' → logprob: -5.478070259094238
    9. '_wrap' → logprob: -6.228070259094238
    10. '_split' → logprob: -6.478070259094238

Token 286: 'ソ' (ID: 41675)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.07128319144248962
    2. 'ソ' → logprob: -3.8212831020355225
    3. 'sorted' → logprob: -4.071283340454102
    4. 'key' → logprob: -4.946283340454102
    5. 'index' → logprob: -5.321283340454102
    6. 'search' → logprob: -6.071283340454102
    7. 'append' → logprob: -6.321283340454102
    8. '#' → logprob: -6.571283340454102
    9. 'def' → logprob: -6.696283340454102
    10. 'binary' → logprob: -6.821283340454102

Token 287: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.06819797307252884
    2. 'rt' → logprob: -2.8181979656219482
    3. 'ー' → logprob: -5.318198204040527
    4. 'ort' → logprob: -7.693198204040527
    5. 'ーティ' → logprob: -8.568198204040527
    6. '```' → logprob: -8.693198204040527
    7. 'ータ' → logprob: -8.818198204040527
    8. '
' → logprob: -9.318198204040527
    9. 'r' → logprob: -10.068198204040527
    10. '``' → logprob: -10.068198204040527

Token 288: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42790237069129944
    2. ' =' → logprob: -1.177902340888977
    3. '=' → logprob: -3.5529024600982666
    4. '#' → logprob: -5.5529022216796875
    5. 'sorted' → logprob: -5.5529022216796875
    6. 'key' → logprob: -7.0529022216796875
    7. '.sort' → logprob: -7.5529022216796875
    8. 'sort' → logprob: -7.8029022216796875
    9. '_sorted' → logprob: -7.8029022216796875
    10. ' def' → logprob: -7.9279022216796875

Token 289: '無' (ID: 10205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4557112455368042
    2. 'key' → logprob: -1.2057112455368042
    3. 'def' → logprob: -3.5807113647460938
    4. 'lst' → logprob: -3.8307113647460938
    5. ' key' → logprob: -5.580711364746094
    6. '#' → logprob: -5.705711364746094
    7. 'lambda' → logprob: -5.705711364746094
    8. 'keys' → logprob: -6.580711364746094
    9. 'reverse' → logprob: -6.955711364746094
    10. 'キー' → logprob: -7.205711364746094

Token 290: '�' (ID: 51268)
  Prédit: '変更'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '変更' → logprob: -1.286840796470642
    2. '改' → logprob: -2.1618409156799316
    3. '\xe9\xa7' → logprob: -2.1618409156799316
    4. '効' → logprob: -2.4118409156799316
    5. '名' → logprob: -2.5368409156799316
    6. '料' → logprob: -3.1618409156799316
    7. '変' → logprob: -3.2868409156799316
    8. '理' → logprob: -3.2868409156799316
    9. '破' → logprob: -3.7868409156799316
    10. '条件' → logprob: -4.036840915679932

Token 291: '�' (ID: 226)
  Prédit: '料'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '料' → logprob: -0.3345390856266022
    2. '題' → logprob: -2.8345391750335693
    3. 'し' → logprob: -3.0845391750335693
    4. '\xe5\x84' → logprob: -3.3345391750335693
    5. '```' → logprob: -3.4595391750335693
    6. '\xe9\xa7' → logprob: -3.7095391750335693
    7. '修' → logprob: -4.08453893661499
    8. '効' → logprob: -4.08453893661499
    9. '#' → logprob: -4.58453893661499
    10. '\xe5\x8a' → logprob: -5.45953893661499

Token 292: 'に' (ID: 5280)
  Prédit: '料'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '料' → logprob: -0.9848999381065369
    2. '題' → logprob: -1.6098999977111816
    3. 'し' → logprob: -2.1098999977111816
    4. '効' → logprob: -2.2348999977111816
    5. '```' → logprob: -2.9848999977111816
    6. '\xe9\xa7' → logprob: -3.6098999977111816
    7. '理' → logprob: -4.109899997711182
    8. '名' → logprob: -4.484899997711182
    9. '�' → logprob: -4.609899997711182
    10. '#' → logprob: -4.859899997711182

Token 293: '�' (ID: 98172)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0126440525054932
    2. '効' → logprob: -1.1376440525054932
    3. '理' → logprob: -3.262644052505493
    4. 'し' → logprob: -3.262644052505493
    5. 'None' → logprob: -3.262644052505493
    6. '#' → logprob: -4.012643814086914
    7. 'が' → logprob: -4.262643814086914
    8. 'r' → logprob: -4.512643814086914
    9. '-' → logprob: -4.512643814086914
    10. '改' → logprob: -4.637643814086914

Token 294: '�' (ID: 229)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ー' → logprob: -1.4703518152236938
    2. 'し' → logprob: -1.4703518152236938
    3. 'n' → logprob: -2.5953516960144043
    4. 'r' → logprob: -2.8453516960144043
    5. 'p' → logprob: -2.8453516960144043
    6. '効' → logprob: -3.2203516960144043
    7. '続' → logprob: -3.7203516960144043
    8. '題' → logprob: -3.8453516960144043
    9. 'を' → logprob: -4.095351696014404
    10. '```' → logprob: -4.095351696014404

Token 295: '数' (ID: 7135)
  Prédit: '効'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '効' → logprob: -1.4910169839859009
    2. 'ー' → logprob: -2.2410168647766113
    3. '順' → logprob: -2.4910168647766113
    4. 'p' → logprob: -2.4910168647766113
    5. 'def' → logprob: -3.1160168647766113
    6. 'し' → logprob: -3.3660168647766113
    7. '続' → logprob: -3.4910168647766113
    8. '#' → logprob: -3.8660168647766113
    9. '-' → logprob: -3.9910168647766113
    10. '題' → logprob: -4.116016864776611

Token 296: 'キー' (ID: 143825)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ー' → logprob: -1.6487876176834106
    2. ')' → logprob: -1.7737876176834106
    3. '引' → logprob: -2.398787498474121
    4. 'を' → logprob: -3.023787498474121
    5. '順' → logprob: -3.273787498474121
    6. '）' → logprob: -3.398787498474121
    7. 'の' → logprob: -3.398787498474121
    8. 'し' → logprob: -3.398787498474121
    9. 'す' → logprob: -3.398787498474121
    10. 'ま' → logprob: -3.523787498474121

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5785999298095703
    2. 'ー' → logprob: -1.3285999298095703
    3. '）' → logprob: -3.2035999298095703
    4. 'つ' → logprob: -3.2035999298095703
    5. 'を' → logprob: -4.32859992980957
    6. ',' → logprob: -4.82859992980957
    7. 'で' → logprob: -5.07859992980957
    8. '�' → logprob: -5.20359992980957
    9. '-' → logprob: -5.32859992980957
    10. 'す' → logprob: -5.57859992980957

Token 298: ' ---
' (ID: 128468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10244444757699966
    2. '#' → logprob: -4.477444648742676
    3. 'キー' → logprob: -4.477444648742676
    4. 'で' → logprob: -4.727444648742676
    5. 'd' → logprob: -5.227444648742676
    6. 'を' → logprob: -5.477444648742676
    7. 'ム' → logprob: -5.602444648742676
    8. 'ー' → logprob: -5.727444648742676
    9. 'の' → logprob: -5.852444648742676
    10. 'key' → logprob: -5.977444648742676

Token 299: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057728420943021774
    2. 'd' → logprob: -3.6827285289764404
    3. '#' → logprob: -4.182728290557861
    4. 'n' → logprob: -5.932728290557861
    5. '_' → logprob: -6.932728290557861
    6. 'l' → logprob: -7.057728290557861
    7. 'key' → logprob: -7.057728290557861
    8. 'de' → logprob: -7.182728290557861
    9. '多' → logprob: -7.432728290557861
    10. '\xe8\xa4' → logprob: -7.432728290557861

Token 300: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7266800999641418
    2. ' sort' → logprob: -1.726680040359497
    3. ' tuple' → logprob: -1.726680040359497
    4. 'tuple' → logprob: -2.226680040359497
    5. 'multi' → logprob: -3.726680040359497
    6. ' multi' → logprob: -4.351680278778076
    7. 'tu' → logprob: -5.226680278778076
    8. 'sorted' → logprob: -5.976680278778076
    9. 'def' → logprob: -6.101680278778076
    10. ' def' → logprob: -6.851680278778076

Token 301: '_t' (ID: 838)
  Prédit: '_by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.5911127328872681
    2. '(lst' → logprob: -1.466112732887268
    3. '_key' → logprob: -2.5911126136779785
    4. '_list' → logprob: -2.7161126136779785
    5. '_' → logprob: -3.3411126136779785
    6. '_t' → logprob: -4.5911126136779785
    7. '(' → logprob: -5.2161126136779785
    8. 'by' → logprob: -5.3411126136779785
    9. '_lists' → logprob: -5.9661126136779785
    10. '_tuple' → logprob: -5.9661126136779785

Token 302: 'uples' (ID: 165982)
  Prédit: 'uple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uple' → logprob: -0.06629985570907593
    2. 'uples' → logprob: -2.9412999153137207
    3. 'l' → logprob: -5.316299915313721
    4. 'up' → logprob: -5.691299915313721
    5. 'upl' → logprob: -6.566299915313721
    6. 'pl' → logprob: -7.316299915313721
    7. 'list' → logprob: -7.691299915313721
    8. 'lst' → logprob: -9.191299438476562
    9. 'u' → logprob: -9.441299438476562
    10. 'ple' → logprob: -9.816299438476562

Token 303: '(L' (ID: 11075)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.05412684381008148
    2. '(t' → logprob: -3.429126739501953
    3. '(l' → logprob: -4.804126739501953
    4. '_by' → logprob: -5.304126739501953
    5. '(' → logprob: -5.554126739501953
    6. '(arr' → logprob: -6.804126739501953
    7. '(list' → logprob: -7.429126739501953
    8. '(tuple' → logprob: -8.179126739501953
    9. '(ls' → logprob: -8.179126739501953
    10. '_key' → logprob: -8.429126739501953

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. ',t' → logprob: -10.500105857849121
    3. ' ,' → logprob: -10.625105857849121
    4. ',key' → logprob: -11.500105857849121
    5. ',L' → logprob: -11.500105857849121
    6. ',l' → logprob: -11.625105857849121
    7. 'ist' → logprob: -11.750105857849121
    8. ',k' → logprob: -12.375105857849121
    9. ',n' → logprob: -12.375105857849121
    10. '):' → logprob: -13.250105857849121

Token 305: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.11736314743757248
    2. 'key' → logprob: -2.867363214492798
    3. ' keys' → logprob: -2.992363214492798
    4. ' key' → logprob: -5.992362976074219
    5. 'k' → logprob: -7.742362976074219
    6. '*' → logprob: -8.367362976074219
    7. 'indices' → logprob: -8.867362976074219
    8. 'ks' → logprob: -9.117362976074219
    9. 'n' → logprob: -10.242362976074219
    10. 'idx' → logprob: -10.367362976074219

Token 306: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04855864495038986
    2. '):' → logprob: -3.1735587120056152
    3. '=None' → logprob: -5.923558712005615
    4. '=' → logprob: -6.173558712005615
    5. '=[]' → logprob: -7.673558712005615
    6. '=[],' → logprob: -8.923558235168457
    7. ',*' → logprob: -9.673558235168457
    8. ' ,' → logprob: -10.923558235168457
    9. ':' → logprob: -11.173558235168457
    10. ')' → logprob: -11.298558235168457

Token 307: ' return' (ID: 622)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5847366452217102
    2. ' return' → logprob: -1.8347365856170654
    3. ' sorted' → logprob: -1.8347365856170654
    4. '   ' → logprob: -3.4597365856170654
    5. ' for' → logprob: -3.9597365856170654
    6. 'L' → logprob: -4.2097368240356445
    7. ' pass' → logprob: -4.3347368240356445
    8. ' keys' → logprob: -4.5847368240356445
    9. 'sorted' → logprob: -4.7097368240356445
    10. 'return' → logprob: -4.8347368240356445

Token 308: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00015538577281404287
    2. ' sorted' → logprob: -8.875155448913574
    3. '(sorted' → logprob: -11.625155448913574
    4. 'tuple' → logprob: -12.625155448913574
    5. 'L' → logprob: -13.000155448913574
    6. 'list' → logprob: -14.625155448913574
    7. '[' → logprob: -15.125155448913574
    8. '.sorted' → logprob: -17.375154495239258
    9. '[L' → logprob: -17.375154495239258
    10. 's' → logprob: -17.500154495239258

Token 309: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -8.673547563375905e-05
    2. '(' → logprob: -9.375086784362793
    3. '(
' → logprob: -13.500086784362793
    4. 'L' → logprob: -15.125086784362793
    5. '((' → logprob: -15.500086784362793
    6. '[L' → logprob: -18.125085830688477
    7. '(l' → logprob: -18.250085830688477
    8. '```' → logprob: -18.625085830688477
    9. '(

' → logprob: -18.750085830688477
    10. '([' → logprob: -19.000085830688477

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023459533229470253
    2. ',key' → logprob: -3.7734594345092773
    3. 'key' → logprob: -8.648459434509277
    4. '(key' → logprob: -10.648459434509277
    5. ' ,' → logprob: -11.398459434509277
    6. ')' → logprob: -13.648459434509277
    7. '[key' → logprob: -13.773459434509277
    8. ' key' → logprob: -14.148459434509277
    9. '(),' → logprob: -15.898459434509277
    10. '=' → logprob: -16.023460388183594

Token 311: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0032136032823473215
    2. ' key' → logprob: -5.753213405609131
    3. 'reverse' → logprob: -10.253213882446289
    4. 'lambda' → logprob: -15.253213882446289
    5. ' reverse' → logprob: -16.25321388244629
    6. '   ' → logprob: -16.25321388244629
    7. '	key' → logprob: -16.75321388244629
    8. ' ' → logprob: -16.87821388244629
    9. '(key' → logprob: -16.87821388244629
    10. 'k' → logprob: -17.87821388244629

Token 312: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.018151583150029182
    2. '=' → logprob: -4.018151760101318
    3. '=
' → logprob: -14.26815128326416
    4. 'lambda' → logprob: -14.39315128326416
    5. '=l' → logprob: -15.64315128326416
    6. '=item' → logprob: -15.89315128326416
    7. 'keys' → logprob: -16.893152236938477
    8. '=

' → logprob: -17.518152236938477
    9. '=_' → logprob: -18.018152236938477
    10. ' =' → logprob: -18.393152236938477

Token 313: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08054918050765991
    2. 't' → logprob: -2.5805492401123047
    3. ' x' → logprob: -6.580549240112305
    4. ' t' → logprob: -8.330549240112305
    5. 'tpl' → logprob: -10.580549240112305
    6. ' tup' → logprob: -13.330549240112305
    7. ' tpl' → logprob: -14.205549240112305
    8. '   ' → logprob: -14.330549240112305
    9. 'e' → logprob: -14.830549240112305
    10. '	t' → logprob: -15.455549240112305

Token 314: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020956608932465315
    2. ' tuple' → logprob: -6.752095699310303
    3. 'tuple' → logprob: -7.377095699310303
    4. ' :' → logprob: -8.502095222473145
    5. ' t' → logprob: -10.627095222473145
    6. '[' → logprob: -10.752095222473145
    7. '(tuple' → logprob: -10.752095222473145
    8. 't' → logprob: -11.252095222473145
    9. ':t' → logprob: -12.627095222473145
    10. ':
' → logprob: -12.877095222473145

Token 315: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.005288423039019108
    2. ' tuple' → logprob: -5.255288600921631
    3. '(tuple' → logprob: -9.880288124084473
    4. '[' → logprob: -13.130288124084473
    5. 'operator' → logprob: -14.380288124084473
    6. 't' → logprob: -14.880288124084473
    7. 'item' → logprob: -15.130288124084473
    8. '_tuple' → logprob: -16.00528907775879
    9. '(' → logprob: -16.13028907775879
    10. 'tu' → logprob: -17.38028907775879

Token 316: '(f' (ID: 1526)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4756394326686859
    2. 't' → logprob: -0.9756394624710083
    3. '(' → logprob: -7.225639343261719
    4. '[t' → logprob: -7.225639343261719
    5. '([' → logprob: -10.100639343261719
    6. ' t' → logprob: -10.475639343261719
    7. '[' → logprob: -10.725639343261719
    8. '((' → logprob: -11.975639343261719
    9. '(-' → logprob: -13.225639343261719
    10. 'tuple' → logprob: -14.225639343261719

Token 317: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6596286296844482
    2. 't' → logprob: -0.7846286296844482
    3. ' t' → logprob: -4.284628868103027
    4. '(keys' → logprob: -5.159628868103027
    5. 'keys' → logprob: -6.784628868103027
    6. '(' → logprob: -6.909628868103027
    7. '(lambda' → logprob: -7.159628868103027
    8. 'un' → logprob: -7.409628868103027
    9. 'unc' → logprob: -7.534628868103027
    10. '(int' → logprob: -7.659628868103027

Token 318: ')' (ID: 8)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.008055731654167175
    2. 't' → logprob: -6.133055686950684
    3. ')' → logprob: -6.508055686950684
    4. '(k' → logprob: -7.258055686950684
    5. '(key' → logprob: -7.383055686950684
    6. '(' → logprob: -7.508055686950684
    7. 'k' → logprob: -7.633055686950684
    8. ' for' → logprob: -8.133055686950684
    9. ' t' → logprob: -8.258055686950684
    10. '(keys' → logprob: -8.258055686950684

Token 319: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1455310881137848
    2. 'for' → logprob: -2.020531177520752
    3. ')' → logprob: -6.020531177520752
    4. '(keys' → logprob: -8.895530700683594
    5. '(' → logprob: -9.645530700683594
    6. '))' → logprob: -10.270530700683594
    7. 'keys' → logprob: -10.520530700683594
    8. '	for' → logprob: -10.520530700683594
    9. ' ' → logprob: -10.770530700683594
    10. ' keys' → logprob: -10.770530700683594

Token 320: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1426878571510315
    2. ' f' → logprob: -2.0176877975463867
    3. 'keys' → logprob: -12.267687797546387
    4. ' keys' → logprob: -12.642687797546387
    5. '(f' → logprob: -13.642687797546387
    6. '	f' → logprob: -13.767687797546387
    7. '[f' → logprob: -14.017687797546387
    8. ' ' → logprob: -14.142687797546387
    9. 'k' → logprob: -15.142687797546387
    10. '[' → logprob: -15.767687797546387

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0072534154169261456
    2. 'in' → logprob: -5.257253646850586
    3. 'keys' → logprob: -6.257253646850586
    4. ' keys' → logprob: -10.007253646850586
    5. '(keys' → logprob: -10.507253646850586
    6. 's' → logprob: -10.757253646850586
    7. '.keys' → logprob: -13.007253646850586
    8. ' ' → logprob: -13.257253646850586
    9. '	keys' → logprob: -14.007253646850586
    10. 'import' → logprob: -14.882253646850586

Token 322: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.001177012687548995
    2. ' keys' → logprob: -6.751176834106445
    3. '(keys' → logprob: -12.626176834106445
    4. '	keys' → logprob: -13.876176834106445
    5. '[key' → logprob: -14.001176834106445
    6. '[' → logprob: -14.126176834106445
    7. 'key' → logprob: -14.376176834106445
    8. '.keys' → logprob: -15.501176834106445
    9. '
' → logprob: -16.001176834106445
    10. ' [' → logprob: -16.501176834106445

Token 323: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003280025441199541
    2. ')' → logprob: -5.753280162811279
    3. '),' → logprob: -10.128279685974121
    4. ' ))' → logprob: -10.253279685974121
    5. '))
' → logprob: -11.003279685974121
    6. ')))' → logprob: -12.003279685974121
    7. ' )' → logprob: -13.878279685974121
    8. '()))' → logprob: -14.253279685974121
    9. '));' → logprob: -14.378279685974121
    10. ')
' → logprob: -15.128279685974121

Token 324: 'sort' (ID: 13373)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9763875007629395
    2. '[' → logprob: -2.2263875007629395
    3. '_' → logprob: -2.2263875007629395
    4. '=' → logprob: -2.4763875007629395
    5. ')' → logprob: -2.6013875007629395
    6. '�' → logprob: -3.1013875007629395
    7. ' ' → logprob: -3.2263875007629395
    8. '\u' → logprob: -3.8513875007629395
    9. '\' → logprob: -4.1013875007629395
    10. ',' → logprob: -4.3513875007629395

Token 325: '_ab' (ID: 53632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44280797243118286
    2. '(' → logprob: -1.192807912826538
    3. '_t' → logprob: -2.942807912826538
    4. '<|end|>' → logprob: -8.067808151245117
    5. '.' → logprob: -8.442808151245117
    6. ')' → logprob: -8.442808151245117
    7. 't' → logprob: -9.067808151245117
    8. '<|end|>' → logprob: -9.192808151245117
    9. '_s' → logprob: -9.817808151245117
    10. '(
' → logprob: -9.942808151245117

Token 326: '_' (ID: 62)
  Prédit: 'solute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solute' → logprob: -0.6506069302558899
    2. 's' → logprob: -1.4006068706512451
    3. 'sol' → logprob: -2.025606870651245
    4. 'solutely' → logprob: -3.525606870651245
    5. '_t' → logprob: -3.525606870651245
    6. 'c' → logprob: -5.150607109069824
    7. ' tuples' → logprob: -5.650607109069824
    8. '_sol' → logprob: -5.775607109069824
    9. '_s' → logprob: -5.900607109069824
    10. 't' → logprob: -6.025607109069824

Token 327: 'asc' (ID: 7400)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3554685711860657
    2. 'solute' → logprob: -1.605468511581421
    3. 'sol' → logprob: -3.230468511581421
    4. 'list' → logprob: -3.480468511581421
    5. 'a' → logprob: -4.85546875
    6. 'tuple' → logprob: -5.73046875
    7. '_list' → logprob: -5.85546875
    8. 'c' → logprob: -6.35546875
    9. '(a' → logprob: -6.85546875
    10. ' =' → logprob: -7.10546875

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1118350625038147
    2. ' =' → logprob: -2.36183500289917
    3. 'ending' → logprob: -5.23683500289917
    4. '=lambda' → logprob: -6.48683500289917
    5. '_=' → logprob: -6.73683500289917
    6. '_' → logprob: -6.86183500289917
    7. 'end' → logprob: -7.23683500289917
    8. '=[]' → logprob: -7.36183500289917
    9. '=_' → logprob: -7.48683500289917
    10. ')' → logprob: -8.986835479736328

Token 329: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03788287192583084
    2. ' lambda' → logprob: -3.5378828048706055
    3. '(lambda' → logprob: -4.9128828048706055
    4. 'sort' → logprob: -8.037882804870605
    5. 'sorted' → logprob: -8.037882804870605
    6. ' ' → logprob: -10.287882804870605
    7. '=lambda' → logprob: -10.412882804870605
    8. '  ' → logprob: -11.912882804870605
    9. '[' → logprob: -12.037882804870605
    10. '[]' → logprob: -12.162882804870605

Token 330: ' L' (ID: 451)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.528605341911316
    2. ' lambda' → logprob: -1.778605341911316
    3. ' x' → logprob: -1.903605341911316
    4. 'x' → logprob: -1.903605341911316
    5. ' a' → logprob: -2.0286054611206055
    6. 'a' → logprob: -2.1536054611206055
    7. ' ab' → logprob: -3.5286054611206055
    8. 'ab' → logprob: -4.4036054611206055
    9. ' t' → logprob: -5.1536054611206055
    10. 't' → logprob: -5.2786054611206055

Token 331: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23006440699100494
    2. ',' → logprob: -1.6050643920898438
    3. 'sorted' → logprob: -5.855064392089844
    4. ' :' → logprob: -6.480064392089844
    5. ',L' → logprob: -9.105064392089844
    6. ' ,' → logprob: -10.480064392089844
    7. 'L' → logprob: -10.855064392089844
    8. ' sorted' → logprob: -10.855064392089844
    9. ':L' → logprob: -11.105064392089844
    10. '_sorted' → logprob: -11.605064392089844

Token 332: ' sort' (ID: 4506)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.02459065243601799
    2. 'sort' → logprob: -4.149590492248535
    3. ' sorted' → logprob: -4.774590492248535
    4. ' sort' → logprob: -9.524590492248535
    5. ' ' → logprob: -13.774590492248535
    6. '(sorted' → logprob: -13.774590492248535
    7. '  ' → logprob: -14.149590492248535
    8. '   ' → logprob: -14.149590492248535
    9. 's' → logprob: -15.149590492248535
    10. 'tuple' → logprob: -15.274590492248535

Token 333: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.004093597177416086
    2. '_ab' → logprob: -5.504093647003174
    3. 't' → logprob: -11.504093170166016
    4. '_' → logprob: -13.254093170166016
    5. 'ab' → logprob: -14.129093170166016
    6. 's' → logprob: -14.504093170166016
    7. '(' → logprob: -14.504093170166016
    8. 'tu' → logprob: -14.754093170166016
    9. '_a' → logprob: -15.629093170166016
    10. 'a' → logprob: -16.004093170166016

Token 334: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -4.417976379045285e-05
    2. 'ples' → logprob: -10.750043869018555
    3. 'uple' → logprob: -11.125043869018555
    4. 'tu' → logprob: -12.500043869018555
    5. 'up' → logprob: -13.000043869018555
    6. 'ules' → logprob: -14.250043869018555
    7. 'iples' → logprob: -14.875043869018555
    8. 'u' → logprob: -15.375043869018555
    9. ' tuples' → logprob: -15.625043869018555
    10. '(' → logprob: -15.875043869018555

Token 335: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -16.875001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '((' → logprob: -19.125001907348633
    6. '(lst' → logprob: -19.875001907348633
    7. '(I' → logprob: -20.375001907348633
    8. '(l' → logprob: -20.375001907348633
    9. '<|end|>' → logprob: -20.500001907348633
    10. '(len' → logprob: -20.625001907348633

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002838276559486985
    2. ',[' → logprob: -5.877838134765625
    3. ',(' → logprob: -10.627838134765625
    4. ',L' → logprob: -12.252838134765625
    5. ' ,' → logprob: -13.127838134765625
    6. '([' → logprob: -14.127838134765625
    7. ',['' → logprob: -14.127838134765625
    8. ' ,[' → logprob: -14.127838134765625
    9. ',key' → logprob: -15.877838134765625
    10. '(' → logprob: -16.877838134765625

Token 337: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003081690752878785
    2. ' [' → logprob: -6.878081798553467
    3. '[int' → logprob: -7.128081798553467
    4. '[key' → logprob: -7.628081798553467
    5. '[(' → logprob: -8.503081321716309
    6. '[str' → logprob: -8.628081321716309
    7. '(lambda' → logprob: -9.003081321716309
    8. '[
' → logprob: -9.628081321716309
    9. '[l' → logprob: -10.003081321716309
    10. '[f' → logprob: -10.878081321716309

Token 338: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.008785571902990341
    2. '(lambda' → logprob: -4.758785724639893
    3. ' lambda' → logprob: -8.758785247802734
    4. 'operator' → logprob: -12.383785247802734
    5. '=lambda' → logprob: -12.883785247802734
    6. ' ' → logprob: -13.258785247802734
    7. '(' → logprob: -13.383785247802734
    8. ' (' → logprob: -14.008785247802734
    9. '   ' → logprob: -14.133785247802734
    10. 'lam' → logprob: -14.383785247802734

Token 339: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.33925288915634155
    2. 'x' → logprob: -1.3392529487609863
    3. ' t' → logprob: -3.9642529487609863
    4. 't' → logprob: -5.089252948760986
    5. ' lambda' → logprob: -7.839252948760986
    6. 'lambda' → logprob: -9.589252471923828
    7. ' a' → logprob: -10.964252471923828
    8. 'a' → logprob: -11.214252471923828
    9. ' ab' → logprob: -12.589252471923828
    10. 'e' → logprob: -12.839252471923828

Token 340: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025520040653645992
    2. ':x' → logprob: -6.002552032470703
    3. ' :' → logprob: -9.502552032470703
    4. '[' → logprob: -14.002552032470703
    5. 'x' → logprob: -15.252552032470703
    6. ',' → logprob: -16.252552032470703
    7. ':[' → logprob: -16.377552032470703
    8. ':int' → logprob: -16.502552032470703
    9. ':(' → logprob: -16.627552032470703
    10. ',x' → logprob: -16.877552032470703

Token 341: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003178071230649948
    2. ' x' → logprob: -5.753178119659424
    3. '(x' → logprob: -16.253177642822266
    4. ' ' → logprob: -16.503177642822266
    5. 'int' → logprob: -16.878177642822266
    6. '	x' → logprob: -16.878177642822266
    7. '0' → logprob: -17.628177642822266
    8. '   ' → logprob: -17.753177642822266
    9. 'abs' → logprob: -17.878177642822266
    10. 'ord' → logprob: -17.878177642822266

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005947356694377959
    2. '])' → logprob: -7.750594615936279
    3. ',' → logprob: -9.000595092773438
    4. ',a' → logprob: -10.750595092773438
    5. '.' → logprob: -12.000595092773438
    6. '[a' → logprob: -12.750595092773438
    7. 'a' → logprob: -13.125595092773438
    8. ' ' → logprob: -13.375595092773438
    9. ' [' → logprob: -13.625595092773438
    10. '.a' → logprob: -13.625595092773438

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.03521392197581e-05
    2. '1' → logprob: -10.625030517578125
    3. ' ' → logprob: -12.250030517578125
    4. '
' → logprob: -14.875030517578125
    5. '[' → logprob: -15.625030517578125
    6. '   ' → logprob: -15.625030517578125
    7. 'i' → logprob: -16.312530517578125
    8. '  ' → logprob: -16.500030517578125
    9. 'a' → logprob: -16.937530517578125
    10. '-' → logprob: -17.187530517578125

Token 344: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003581064520403743
    2. '])' → logprob: -6.1285810470581055
    3. ' ,' → logprob: -6.8785810470581055
    4. ',x' → logprob: -8.128581047058105
    5. ',
' → logprob: -10.378581047058105
    6. ' ])' → logprob: -10.628581047058105
    7. ')])' → logprob: -13.378581047058105
    8. ',l' → logprob: -13.628581047058105
    9. '])]' → logprob: -13.628581047058105
    10. ',b' → logprob: -14.128581047058105

Token 345: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04859123006463051
    2. ' lambda' → logprob: -3.048591136932373
    3. '    ' → logprob: -13.548591613769531
    4. '(lambda' → logprob: -13.548591613769531
    5. '   ' → logprob: -14.048591613769531
    6. ' ' → logprob: -16.17359161376953
    7. '=lambda' → logprob: -16.42359161376953
    8. '  ' → logprob: -16.92359161376953
    9. 'lam' → logprob: -17.54859161376953
    10. '.lambda' → logprob: -17.79859161376953

Token 346: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020555200055241585
    2. 'x' → logprob: -3.895555257797241
    3. ' lambda' → logprob: -11.64555549621582
    4. 'lambda' → logprob: -12.52055549621582
    5. ' ' → logprob: -14.64555549621582
    6. '=lambda' → logprob: -15.77055549621582
    7. ' ' → logprob: -16.27055549621582
    8. ' y' → logprob: -16.64555549621582
    9. '	x' → logprob: -16.77055549621582
    10. '(x' → logprob: -17.27055549621582

Token 347: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015478975547011942
    2. '[' → logprob: -8.875154495239258
    3. ' :' → logprob: -11.750154495239258
    4. ' ' → logprob: -12.875154495239258
    5. ':x' → logprob: -13.875154495239258
    6. 'x' → logprob: -14.125154495239258
    7. '   ' → logprob: -14.500154495239258
    8. ',' → logprob: -14.625154495239258
    9. '  ' → logprob: -14.625154495239258
    10. '.' → logprob: -14.750154495239258

Token 348: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687369227409363
    2. ' x' → logprob: -1.136873722076416
    3. '	x' → logprob: -14.136873245239258
    4. ' ' → logprob: -14.136873245239258
    5. '(x' → logprob: -15.011873245239258
    6. '   ' → logprob: -15.386873245239258
    7. '    ' → logprob: -15.761873245239258
    8. '1' → logprob: -16.136873245239258
    9. '  ' → logprob: -16.136873245239258
    10. ')x' → logprob: -16.386873245239258

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. ':' → logprob: -11.875008583068848
    3. '1' → logprob: -14.625008583068848
    4. ' [' → logprob: -15.250008583068848
    5. '   ' → logprob: -15.500008583068848
    6. ' ' → logprob: -16.50000762939453
    7. '[
' → logprob: -16.50000762939453
    8. '.' → logprob: -16.62500762939453
    9. '0' → logprob: -16.75000762939453
    10. '  ' → logprob: -17.00000762939453

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '0' → logprob: -12.875006675720215
    3. '[' → logprob: -13.125006675720215
    4. ' ' → logprob: -13.500006675720215
    5. '```' → logprob: -14.625006675720215
    6. '   ' → logprob: -15.750006675720215
    7. '  ' → logprob: -16.62500762939453
    8. '
' → logprob: -16.62500762939453
    9. '１' → logprob: -16.93750762939453
    10. '-' → logprob: -16.93750762939453

Token 351: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -4.537180211627856e-05
    2. ' ])' → logprob: -11.125045776367188
    3. ')])' → logprob: -11.250045776367188
    4. ',' → logprob: -12.500045776367188
    5. '])
' → logprob: -12.875045776367188
    6. ')' → logprob: -12.875045776367188
    7. ']' → logprob: -12.875045776367188
    8. ']])' → logprob: -13.250045776367188
    9. '])]' → logprob: -13.250045776367188
    10. ']);' → logprob: -14.000045776367188

Token 352: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.1324290633201599
    2. '<|end|>' → logprob: -2.2574291229248047
    3. ')' → logprob: -4.507429122924805
    4. '
' → logprob: -6.007429122924805
    5. '.sort' → logprob: -6.257429122924805
    6. '(sort' → logprob: -6.382429122924805
    7. ' sort' → logprob: -6.882429122924805
    8. 'def' → logprob: -8.382429122924805
    9. '_sort' → logprob: -9.007429122924805
    10. '<|end|>' → logprob: -9.132429122924805

Token 353: '_a' (ID: 10852)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.00013738969573751092
    2. '_c' → logprob: -9.500137329101562
    3. '_cd' → logprob: -10.625137329101562
    4. '_b' → logprob: -12.125137329101562
    5. '_' → logprob: -12.250137329101562
    6. '_ac' → logprob: -12.250137329101562
    7. '_t' → logprob: -12.250137329101562
    8. '_bc' → logprob: -12.625137329101562
    9. '_xy' → logprob: -13.000137329101562
    10. '_a' → logprob: -13.125137329101562

Token 354: '_' (ID: 62)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.9898420572280884
    2. 'sc' → logprob: -1.2398420572280884
    3. 'bc' → logprob: -2.114841938018799
    4. 'b' → logprob: -2.239841938018799
    5. '_desc' → logprob: -3.114841938018799
    6. '_bc' → logprob: -3.114841938018799
    7. 'bs' → logprob: -4.489841938018799
    8. '_sc' → logprob: -5.489841938018799
    9. '_' → logprob: -6.364841938018799
    10. 'bd' → logprob: -6.489841938018799

Token 355: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.1732758730649948
    2. 'sc' → logprob: -2.298275947570801
    3. 'desc' → logprob: -2.923275947570801
    4. 'esc' → logprob: -6.548275947570801
    5. '_desc' → logprob: -6.673275947570801
    6. 'bs' → logprob: -7.048275947570801
    7. 'b' → logprob: -7.173275947570801
    8. 'bc' → logprob: -8.4232759475708
    9. '_' → logprob: -9.2982759475708
    10. 'bd' → logprob: -9.6732759475708

Token 356: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759419202804565
    2. '=' → logprob: -0.8259419202804565
    3. ' ' → logprob: -14.075942039489746
    4. '=lambda' → logprob: -14.450942039489746
    5. 's' → logprob: -15.325942039489746
    6. '<|end|>' → logprob: -15.700942039489746
    7. '＝' → logprob: -15.825942039489746
    8. '=
' → logprob: -15.950942039489746
    9. '_=' → logprob: -16.32594108581543
    10. '=}' → logprob: -16.95094108581543

Token 357: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.06805231422185898
    2. '_' → logprob: -3.568052291870117
    3. 'desc' → logprob: -3.568052291870117
    4. 'sc' → logprob: -5.193052291870117
    5. 'esc' → logprob: -6.193052291870117
    6. 'asc' → logprob: -6.693052291870117
    7. '_dec' → logprob: -9.193052291870117
    8. ' =' → logprob: -10.068052291870117
    9. '_des' → logprob: -10.193052291870117
    10. ' desc' → logprob: -10.318052291870117

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519392669200897
    2. ' =' → logprob: -1.501939296722412
    3. '=lambda' → logprob: -11.501938819885254
    4. '＝' → logprob: -16.25193977355957
    5. '=
' → logprob: -17.62693977355957
    6. ' ' → logprob: -18.75193977355957
    7. '=

' → logprob: -19.12693977355957
    8. ' =
' → logprob: -19.37693977355957
    9. '=}' → logprob: -20.00193977355957
    10. 's' → logprob: -20.75193977355957

Token 359: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3132857382297516
    2. ' lambda' → logprob: -1.3132857084274292
    3. '(lambda' → logprob: -10.813285827636719
    4. '=lambda' → logprob: -12.563285827636719
    5. 'ambda' → logprob: -15.688285827636719
    6. '_lambda' → logprob: -16.43828582763672
    7. ' lamb' → logprob: -16.81328582763672
    8. '.lambda' → logprob: -17.56328582763672
    9. 'lam' → logprob: -17.68828582763672
    10. 'l' → logprob: -19.06328582763672

Token 360: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6931775212287903
    2. ' L' → logprob: -0.6931775212287903
    3. '(L' → logprob: -10.693177223205566
    4. 'lambda' → logprob: -12.443177223205566
    5. ' lambda' → logprob: -13.943177223205566
    6. '[L' → logprob: -13.943177223205566
    7. '	L' → logprob: -14.068177223205566
    8. ':L' → logprob: -14.318177223205566
    9. '.L' → logprob: -15.568177223205566
    10. ' ' → logprob: -16.068178176879883

Token 361: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.676981345459353e-06
    2. ' :' → logprob: -12.125005722045898
    3. '=' → logprob: -15.875005722045898
    4. ':list' → logprob: -17.7500057220459
    5. ':L' → logprob: -18.0000057220459
    6. 'sort' → logprob: -18.1250057220459
    7. ',' → logprob: -18.3750057220459
    8. 'sorted' → logprob: -18.8750057220459
    9. '(L' → logprob: -19.1250057220459
    10. ' =' → logprob: -19.5000057220459

Token 362: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.693401575088501
    2. 'sort' → logprob: -0.693401575088501
    3. 'sorted' → logprob: -8.818401336669922
    4. ' sorted' → logprob: -9.193401336669922
    5. ' ' → logprob: -13.818401336669922
    6. '	sort' → logprob: -13.943401336669922
    7. 'lambda' → logprob: -14.318401336669922
    8. '(sort' → logprob: -14.318401336669922
    9. 'def' → logprob: -14.443401336669922
    10. ' lambda' → logprob: -14.943401336669922

Token 363: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.60414821645827e-06
    2. 'lambda' → logprob: -13.250004768371582
    3. '(lambda' → logprob: -13.375004768371582
    4. 't' → logprob: -14.250004768371582
    5. 'tu' → logprob: -15.625004768371582
    6. '_lambda' → logprob: -15.875004768371582
    7. '_ab' → logprob: -16.250003814697266
    8. '(t' → logprob: -16.625003814697266
    9. '(' → logprob: -17.750003814697266
    10. 'uples' → logprob: -17.750003814697266

Token 364: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.0017395552713423967
    2. '_t' → logprob: -7.001739501953125
    3. 'tu' → logprob: -7.876739501953125
    4. 'ples' → logprob: -8.001739501953125
    5. 'up' → logprob: -9.626739501953125
    6. 'uple' → logprob: -11.001739501953125
    7. 't' → logprob: -11.751739501953125
    8. 'u' → logprob: -12.001739501953125
    9. 'upl' → logprob: -12.251739501953125
    10. ' tuples' → logprob: -13.501739501953125

Token 365: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -18.0
    4. '[L' → logprob: -20.0
    5. 'L' → logprob: -20.375
    6. '(
' → logprob: -20.875
    7. '(lambda' → logprob: -21.0
    8. '((' → logprob: -21.625
    9. '(List' → logprob: -21.875
    10. 'def' → logprob: -22.0

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005673298146575689
    2. '(L' → logprob: -7.500567436218262
    3. ',L' → logprob: -11.875567436218262
    4. ' ,' → logprob: -12.750567436218262
    5. '(' → logprob: -13.000567436218262
    6. 'L' → logprob: -13.875567436218262
    7. ',[' → logprob: -14.500567436218262
    8. '[' → logprob: -14.875567436218262
    9. ')' → logprob: -16.375566482543945
    10. ' L' → logprob: -16.500566482543945

Token 367: ' [' (ID: 723)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.018491363152861595
    2. ' [' → logprob: -4.018491268157959
    3. '[' → logprob: -8.018491744995117
    4. '[x' → logprob: -12.018491744995117
    5. 'L' → logprob: -12.518491744995117
    6. '[l' → logprob: -13.893491744995117
    7. ' L' → logprob: -13.893491744995117
    8. '[(' → logprob: -15.893491744995117
    9. '[
' → logprob: -16.393491744995117
    10. '[List' → logprob: -17.143491744995117

Token 368: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00020568605395965278
    2. ' lambda' → logprob: -8.500205993652344
    3. '(lambda' → logprob: -13.250205993652344
    4. '   ' → logprob: -15.375205993652344
    5. 'lam' → logprob: -16.000205993652344
    6. '    ' → logprob: -17.375205993652344
    7. '  ' → logprob: -17.625205993652344
    8. ' ' → logprob: -17.875205993652344
    9. '=lambda' → logprob: -18.000205993652344
    10. '[' → logprob: -18.750205993652344

Token 369: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22546209394931793
    2. 'x' → logprob: -1.6004620790481567
    3. 'lambda' → logprob: -10.725461959838867
    4. ' lambda' → logprob: -11.100461959838867
    5. 'L' → logprob: -12.975461959838867
    6. ' ' → logprob: -13.225461959838867
    7. ' L' → logprob: -14.037961959838867
    8. '(x' → logprob: -14.100461959838867
    9. '	x' → logprob: -14.475461959838867
    10. '[' → logprob: -14.475461959838867

Token 370: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.554343366995454e-05
    2. ' :' → logprob: -9.875085830688477
    3. '[' → logprob: -11.125085830688477
    4. ':x' → logprob: -11.250085830688477
    5. 'x' → logprob: -12.500085830688477
    6. ' x' → logprob: -13.875085830688477
    7. ' ' → logprob: -14.500085830688477
    8. '   ' → logprob: -14.875085830688477
    9. '  ' → logprob: -15.250085830688477
    10. ':
' → logprob: -16.500085830688477

Token 371: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011726059019565582
    2. ' x' → logprob: -6.7511725425720215
    3. 'lambda' → logprob: -13.62617301940918
    4. '(x' → logprob: -14.37617301940918
    5. '-x' → logprob: -15.37617301940918
    6. '-' → logprob: -15.75117301940918
    7. ' ' → logprob: -16.37617301940918
    8. '   ' → logprob: -16.62617301940918
    9. '	x' → logprob: -17.50117301940918
    10. ' lambda' → logprob: -17.62617301940918

Token 372: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016635251813568175
    2. ':' → logprob: -8.750165939331055
    3. '0' → logprob: -12.000165939331055
    4. '   ' → logprob: -14.500165939331055
    5. 'x' → logprob: -15.000165939331055
    6. ' ' → logprob: -15.500165939331055
    7. ' [' → logprob: -16.000165939331055
    8. '  ' → logprob: -16.750165939331055
    9. 'a' → logprob: -16.875165939331055
    10. ',' → logprob: -16.875165939331055

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.656383680412546e-05
    2. '1' → logprob: -10.125046730041504
    3. '[' → logprob: -12.750046730041504
    4. ' ' → logprob: -13.625046730041504
    5. ':' → logprob: -14.625046730041504
    6. '   ' → logprob: -14.750046730041504
    7. 'a' → logprob: -15.312546730041504
    8. '-' → logprob: -15.562546730041504
    9. '(' → logprob: -15.625046730041504
    10. '```' → logprob: -15.750046730041504

Token 374: '],' (ID: 2155)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062297940254211426
    2. ',' → logprob: -2.812297821044922
    3. ' ,' → logprob: -9.437297821044922
    4. ' :' → logprob: -9.562297821044922
    5. '[' → logprob: -10.062297821044922
    6. '):' → logprob: -10.437297821044922
    7. ')' → logprob: -10.562297821044922
    8. '),' → logprob: -11.062297821044922
    9. ':x' → logprob: -11.437297821044922
    10. ',x' → logprob: -11.562297821044922

Token 375: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0009188431431539357
    2. ' lambda' → logprob: -7.000918865203857
    3. '(lambda' → logprob: -12.0009183883667
    4. '   ' → logprob: -14.5009183883667
    5. '           ' → logprob: -15.1259183883667
    6. '    ' → logprob: -16.625919342041016
    7. '=lambda' → logprob: -16.750919342041016
    8. '            ' → logprob: -16.875919342041016
    9. '          ' → logprob: -17.375919342041016
    10. '                   ' → logprob: -17.375919342041016

Token 376: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.034072790294885635
    2. ' x' → logprob: -3.7840728759765625
    3. 'lambda' → logprob: -4.6590728759765625
    4. ' lambda' → logprob: -6.6590728759765625
    5. '(lambda' → logprob: -12.159072875976562
    6. '   ' → logprob: -13.534072875976562
    7. ':' → logprob: -13.659072875976562
    8. ' ' → logprob: -13.784072875976562
    9. '=lambda' → logprob: -14.784072875976562
    10. 'l' → logprob: -15.284072875976562

Token 377: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003160393098369241
    2. '[' → logprob: -8.50031566619873
    3. 'lambda' → logprob: -9.75031566619873
    4. ' :' → logprob: -11.12531566619873
    5. ':-' → logprob: -11.50031566619873
    6. '0' → logprob: -12.12531566619873
    7. ':x' → logprob: -12.12531566619873
    8. 'x' → logprob: -12.75031566619873
    9. '   ' → logprob: -12.75031566619873
    10. '1' → logprob: -12.75031566619873

Token 378: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.3311080038547516
    2. '-' → logprob: -1.5811079740524292
    3. ' -' → logprob: -2.5811080932617188
    4. '-value' → logprob: -9.581108093261719
    5. '-max' → logprob: -10.206108093261719
    6. '-sort' → logprob: -10.706108093261719
    7. '-int' → logprob: -10.956108093261719
    8. '-desc' → logprob: -11.206108093261719
    9. '-xl' → logprob: -11.331108093261719
    10. '-key' → logprob: -11.581108093261719

Token 379: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4391956685576588e-05
    2. ' x' → logprob: -10.625024795532227
    3. '(x' → logprob: -18.875024795532227
    4. '1' → logprob: -19.625024795532227
    5. '	x' → logprob: -19.750024795532227
    6. '   ' → logprob: -20.750024795532227
    7. '<|end|>' → logprob: -21.000024795532227
    8. '```' → logprob: -21.125024795532227
    9. ' ' → logprob: -21.375024795532227
    10. '
' → logprob: -21.500024795532227

Token 380: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015955790877342224
    2. '1' → logprob: -8.75015926361084
    3. '[
' → logprob: -15.00015926361084
    4. '```' → logprob: -15.62515926361084
    5. ' [' → logprob: -16.125160217285156
    6. '(' → logprob: -16.250160217285156
    7. '   ' → logprob: -16.312660217285156
    8. '.' → logprob: -16.562660217285156
    9. '][' → logprob: -17.062660217285156
    10. 'x' → logprob: -17.187660217285156

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.00000286102295
    3. '１' → logprob: -16.000001907348633
    4. '```' → logprob: -16.625001907348633
    5. '
' → logprob: -17.125001907348633
    6. '0' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '``' → logprob: -18.437501907348633
    10. '{' → logprob: -18.875001907348633

Token 382: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04362430050969124
    2. ')])' → logprob: -3.1686244010925293
    3. ')' → logprob: -8.168623924255371
    4. '])]' → logprob: -8.543623924255371
    5. ']])' → logprob: -9.168623924255371
    6. ')]' → logprob: -11.043623924255371
    7. ']))' → logprob: -11.543623924255371
    8. ' ])' → logprob: -12.293623924255371
    9. ']' → logprob: -12.418623924255371
    10. '])
' → logprob: -13.293623924255371

Token 383: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.4031353294849396
    2. '<|end|>' → logprob: -1.2781352996826172
    3. '(sort' → logprob: -4.153135299682617
    4. ' sort' → logprob: -4.153135299682617
    5. ')' → logprob: -4.903135299682617
    6. '#' → logprob: -5.653135299682617
    7. 'def' → logprob: -5.653135299682617
    8. '.sort' → logprob: -6.153135299682617
    9. '<|end|>' → logprob: -7.278135299682617
    10. ' ' → logprob: -7.403135299682617

Token 384: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.16033898293972015
    2. '_b' → logprob: -2.160338878631592
    3. '_c' → logprob: -3.910338878631592
    4. '_ab' → logprob: -4.660338878631592
    5. '_t' → logprob: -5.785338878631592
    6. '_' → logprob: -8.78533935546875
    7. '_s' → logprob: -10.41033935546875
    8. 'a' → logprob: -10.91033935546875
    9. '_d' → logprob: -10.91033935546875
    10. '_i' → logprob: -11.53533935546875

Token 385: '_desc' (ID: 26683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.351697033504024e-05
    2. '_desc' → logprob: -10.375083923339844
    3. '_ab' → logprob: -10.625083923339844
    4. '_a' → logprob: -10.875083923339844
    5. '_b' → logprob: -12.875083923339844
    6. 'a' → logprob: -12.875083923339844
    7. '_des' → logprob: -13.625083923339844
    8. 'def' → logprob: -14.625083923339844
    9. '_as' → logprob: -15.000083923339844
    10. '_code' → logprob: -15.500083923339844

Token 386: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4298032820224762
    2. '=' → logprob: -1.0548032522201538
    3. '=lambda' → logprob: -7.054803371429443
    4. '=_' → logprob: -9.054802894592285
    5. '_' → logprob: -9.554802894592285
    6. '_=' → logprob: -10.304802894592285
    7. '=L' → logprob: -12.054802894592285
    8. '_b' → logprob: -13.054802894592285
    9. '_a' → logprob: -13.179802894592285
    10. '＝' → logprob: -13.429802894592285

Token 387: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5759963393211365
    2. '_desc' → logprob: -0.8259963393211365
    3. '_des' → logprob: -10.825996398925781
    4. 'asc' → logprob: -10.825996398925781
    5. 'desc' → logprob: -11.700996398925781
    6. '_def' → logprob: -13.450996398925781
    7. '_abs' → logprob: -13.700996398925781
    8. '__' → logprob: -13.950996398925781
    9. '_as' → logprob: -13.950996398925781
    10. ' _' → logprob: -14.075996398925781

Token 388: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.029907269403338432
    2. 'desc' → logprob: -3.5299072265625
    3. 'lambda' → logprob: -8.7799072265625
    4. '_desc' → logprob: -13.1549072265625
    5. ' asc' → logprob: -14.9049072265625
    6. 'esc' → logprob: -14.9049072265625
    7. 'abs' → logprob: -16.6549072265625
    8. '(lambda' → logprob: -16.7799072265625
    9. ' lambda' → logprob: -16.9049072265625
    10. 'lam' → logprob: -16.9049072265625

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386898398399353
    2. ' =' → logprob: -1.136898398399353
    3. '=lambda' → logprob: -10.511898040771484
    4. '＝' → logprob: -16.511898040771484
    5. ' ' → logprob: -16.761898040771484
    6. '=
' → logprob: -17.386898040771484
    7. '=

' → logprob: -19.011898040771484
    8. '<|end|>' → logprob: -19.136898040771484
    9. ' =
' → logprob: -19.261898040771484
    10. '_=' → logprob: -19.386898040771484

Token 390: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47413817048072815
    2. ' lambda' → logprob: -0.9741381406784058
    3. '(lambda' → logprob: -9.724138259887695
    4. '=lambda' → logprob: -13.599138259887695
    5. '_lambda' → logprob: -16.599138259887695
    6. '.lambda' → logprob: -17.474138259887695
    7. 'lam' → logprob: -18.099138259887695
    8. ' lamb' → logprob: -18.224138259887695
    9. 'λ' → logprob: -18.974138259887695
    10. 'ambda' → logprob: -19.599138259887695

Token 391: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014325805008411407
    2. ' L' → logprob: -4.2643256187438965
    3. '(L' → logprob: -8.764326095581055
    4. 'lambda' → logprob: -12.139326095581055
    5. ' lambda' → logprob: -14.764326095581055
    6. '	L' → logprob: -15.639326095581055
    7. '[L' → logprob: -16.014326095581055
    8. '.L' → logprob: -16.764326095581055
    9. ' ' → logprob: -17.514326095581055
    10. '(lambda' → logprob: -18.264326095581055

Token 392: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2471589798224159e-05
    2. ' :' → logprob: -11.375012397766113
    3. '=' → logprob: -14.500012397766113
    4. ':list' → logprob: -15.875012397766113
    5. 'sort' → logprob: -16.25001335144043
    6. ':L' → logprob: -16.75001335144043
    7. '=lambda' → logprob: -17.37501335144043
    8. ' sort' → logprob: -18.75001335144043
    9. ' =' → logprob: -18.75001335144043
    10. ':l' → logprob: -18.87501335144043

Token 393: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.01871836557984352
    2. ' sort' → logprob: -4.018718242645264
    3. 'lambda' → logprob: -7.518718242645264
    4. ' lambda' → logprob: -10.643718719482422
    5. '(sort' → logprob: -14.143718719482422
    6. 'sorted' → logprob: -14.768718719482422
    7. 'L' → logprob: -14.893718719482422
    8. '(lambda' → logprob: -17.018718719482422
    9. '	sort' → logprob: -17.018718719482422
    10. ' ' → logprob: -17.643718719482422

Token 394: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.026576850563287735
    2. 'tu' → logprob: -3.6515767574310303
    3. 'uples' → logprob: -8.77657699584961
    4. 't' → logprob: -9.02657699584961
    5. '(t' → logprob: -14.65157699584961
    6. 'Tu' → logprob: -14.65157699584961
    7. ' tuples' → logprob: -15.02657699584961
    8. 'lambda' → logprob: -15.02657699584961
    9. 'tuple' → logprob: -15.65157699584961
    10. '[' → logprob: -16.27657699584961

Token 395: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.002051885472610593
    2. 'tu' → logprob: -6.627051830291748
    3. 'ples' → logprob: -7.502051830291748
    4. 'up' → logprob: -9.252052307128906
    5. 'uple' → logprob: -10.752052307128906
    6. 'u' → logprob: -11.502052307128906
    7. 'upl' → logprob: -11.752052307128906
    8. ' tuples' → logprob: -12.127052307128906
    9. 'ubles' → logprob: -12.252052307128906
    10. 't' → logprob: -12.377052307128906

Token 396: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. 'L' → logprob: -16.000003814697266
    4. ' (' → logprob: -16.625003814697266
    5. '[L' → logprob: -17.250003814697266
    6. '(lambda' → logprob: -17.750003814697266
    7. '(
' → logprob: -18.875003814697266
    8. 'def' → logprob: -19.750003814697266
    9. '([' → logprob: -20.000003814697266
    10. ' L' → logprob: -20.125003814697266

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. '[' → logprob: -11.12502384185791
    3. ',[' → logprob: -12.25002384185791
    4. ' ,' → logprob: -12.75002384185791
    5. ',L' → logprob: -14.87502384185791
    6. ',
' → logprob: -16.250022888183594
    7. 'x' → logprob: -16.375022888183594
    8. 'L' → logprob: -16.375022888183594
    9. ':' → logprob: -16.500022888183594
    10. ',l' → logprob: -17.125022888183594

Token 398: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001278534036828205
    2. ' [' → logprob: -9.000127792358398
    3. 'lambda' → logprob: -12.375127792358398
    4. '[
' → logprob: -16.3751277923584
    5. '(lambda' → logprob: -17.3751277923584
    6. '[x' → logprob: -17.5001277923584
    7. ' lambda' → logprob: -17.6251277923584
    8. '   ' → logprob: -17.7501277923584
    9. '[L' → logprob: -17.7501277923584
    10. ' ' → logprob: -18.3751277923584

Token 399: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00020616286201402545
    2. ' lambda' → logprob: -8.500205993652344
    3. '(lambda' → logprob: -13.000205993652344
    4. '   ' → logprob: -16.125205993652344
    5. 'lam' → logprob: -16.125205993652344
    6. 'λ' → logprob: -17.125205993652344
    7. '.lambda' → logprob: -17.375205993652344
    8. 'x' → logprob: -17.625205993652344
    9. '=lambda' → logprob: -17.750205993652344
    10. '_lambda' → logprob: -17.750205993652344

Token 400: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02630993351340294
    2. ' x' → logprob: -3.6513099670410156
    3. 'L' → logprob: -12.526309967041016
    4. 'lambda' → logprob: -12.526309967041016
    5. ' L' → logprob: -13.776309967041016
    6. ' lambda' → logprob: -14.276309967041016
    7. ' ' → logprob: -15.651309967041016
    8. '(x' → logprob: -16.026309967041016
    9. '   ' → logprob: -17.026309967041016
    10. '	x' → logprob: -17.151309967041016

Token 401: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.629921436891891e-05
    2. ':x' → logprob: -11.50002670288086
    3. ':-' → logprob: -12.00002670288086
    4. 'x' → logprob: -12.00002670288086
    5. ' :' → logprob: -13.00002670288086
    6. '[' → logprob: -14.25002670288086
    7. '[-' → logprob: -15.62502670288086
    8. ' ' → logprob: -15.87502670288086
    9. '   ' → logprob: -16.00002670288086
    10. 'lambda' → logprob: -16.12502670288086

Token 402: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001709805685095489
    2. 'lambda' → logprob: -6.501709938049316
    3. ' x' → logprob: -8.501709938049316
    4. ' lambda' → logprob: -12.376709938049316
    5. '(lambda' → logprob: -16.376708984375
    6. '(x' → logprob: -17.126708984375
    7. 'L' → logprob: -17.251708984375
    8. '   ' → logprob: -17.751708984375
    9. 'xl' → logprob: -17.876708984375
    10. ' ' → logprob: -18.251708984375

Token 403: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.125009536743164
    4. 'lambda' → logprob: -18.375009536743164
    5. '(x' → logprob: -18.500009536743164
    6. ')x' → logprob: -20.125009536743164
    7. '[' → logprob: -20.375009536743164
    8. ' ' → logprob: -21.125009536743164
    9. '	x' → logprob: -21.125009536743164
    10. '$x' → logprob: -21.250009536743164

Token 404: '[' (ID: 58)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016326900804415345
    2. '[' → logprob: -6.5016326904296875
    3. ' x' → logprob: -9.001632690429688
    4. '(x' → logprob: -12.376632690429688
    5. '0' → logprob: -13.251632690429688
    6. '1' → logprob: -14.251632690429688
    7. '.x' → logprob: -16.126632690429688
    8. '	x' → logprob: -16.376632690429688
    9. '[x' → logprob: -16.501632690429688
    10. '(' → logprob: -17.001632690429688

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. 'x' → logprob: -13.50000286102295
    3. '[' → logprob: -13.87500286102295
    4. '1' → logprob: -16.000001907348633
    5. '０' → logprob: -17.500001907348633
    6. '۰' → logprob: -18.500001907348633
    7. '
' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.750001907348633
    9. '(' → logprob: -19.625001907348633
    10. 'i' → logprob: -20.000001907348633

Token 406: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026526954025030136
    2. ' ,' → logprob: -8.500265121459961
    3. '],' → logprob: -9.875265121459961
    4. ']' → logprob: -12.500265121459961
    5. '),' → logprob: -13.125265121459961
    6. ',x' → logprob: -13.125265121459961
    7. '[' → logprob: -13.750265121459961
    8. '   ' → logprob: -14.625265121459961
    9. ')' → logprob: -15.625265121459961
    10. ']),' → logprob: -15.750265121459961

Token 407: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0024762547109276056
    2. ' lambda' → logprob: -6.002476215362549
    3. '(lambda' → logprob: -14.377476692199707
    4. '.lambda' → logprob: -18.25247573852539
    5. '=lambda' → logprob: -19.00247573852539
    6. '   ' → logprob: -19.00247573852539
    7. 'lam' → logprob: -19.25247573852539
    8. 'λ' → logprob: -19.62747573852539
    9. '_lambda' → logprob: -19.87747573852539
    10. '    ' → logprob: -19.87747573852539

Token 408: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043710620957426727
    2. ' x' → logprob: -7.750437259674072
    3. 'lambda' → logprob: -12.000436782836914
    4. '1' → logprob: -16.625436782836914
    5. ' lambda' → logprob: -16.625436782836914
    6. '[' → logprob: -16.875436782836914
    7. ' ' → logprob: -17.625436782836914
    8. '(x' → logprob: -18.125436782836914
    9. '	x' → logprob: -18.750436782836914
    10. '$x' → logprob: -19.250436782836914

Token 409: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016253599897027016
    2. '[' → logprob: -4.141253471374512
    3. '1' → logprob: -8.891253471374512
    4. '0' → logprob: -10.266253471374512
    5. ')' → logprob: -11.516253471374512
    6. ' ' → logprob: -11.891253471374512
    7. ']' → logprob: -12.016253471374512
    8. '):' → logprob: -12.641253471374512
    9. ' :' → logprob: -12.641253471374512
    10. 'lambda' → logprob: -12.891253471374512

Token 410: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.955703818472102e-05
    2. ' x' → logprob: -9.750059127807617
    3. 'lambda' → logprob: -13.625059127807617
    4. '(x' → logprob: -18.625059127807617
    5. '	x' → logprob: -18.875059127807617
    6. '0' → logprob: -20.250059127807617
    7. ' lambda' → logprob: -20.250059127807617
    8. '$x' → logprob: -20.375059127807617
    9. ')x' → logprob: -20.375059127807617
    10. '1' → logprob: -21.750059127807617

Token 411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043013688176870346
    2. '1' → logprob: -3.168013572692871
    3. ' ' → logprob: -12.793013572692871
    4. ' [' → logprob: -13.168013572692871
    5. '-' → logprob: -13.293013572692871
    6. '   ' → logprob: -13.543013572692871
    7. '```' → logprob: -13.543013572692871
    8. '(' → logprob: -13.793013572692871
    9. '.' → logprob: -14.168013572692871
    10. ']' → logprob: -14.293013572692871

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.62500286102295
    3. '(' → logprob: -15.25000286102295
    4. '0' → logprob: -15.25000286102295
    5. '-' → logprob: -15.62500286102295
    6. '```' → logprob: -15.62500286102295
    7. '
' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.312501907348633
    9. ' ' → logprob: -16.500001907348633
    10. '１' → logprob: -17.625001907348633

Token 413: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -5.180879816180095e-05
    2. ')])' → logprob: -10.375051498413086
    3. ']])' → logprob: -11.750051498413086
    4. '])]' → logprob: -11.875051498413086
    5. '])
' → logprob: -12.750051498413086
    6. ' ])' → logprob: -14.000051498413086
    7. ')' → logprob: -14.750051498413086
    8. ''])' → logprob: -15.125051498413086
    9. ']))' → logprob: -15.500051498413086
    10. '})' → logprob: -15.875051498413086

Token 414: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.08810120075941086
    2. '<|end|>' → logprob: -3.2131011486053467
    3. '(sort' → logprob: -4.088101387023926
    4. ')' → logprob: -4.213101387023926
    5. '
' → logprob: -5.838101387023926
    6. '(' → logprob: -6.338101387023926
    7. ' sort' → logprob: -6.838101387023926
    8. '(
' → logprob: -6.838101387023926
    9. '[' → logprob: -7.213101387023926
    10. '.sort' → logprob: -7.338101387023926

Token 415: '_ab' (ID: 53632)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.194110756041482e-05
    2. '_' → logprob: -10.500061988830566
    3. 'a' → logprob: -11.125061988830566
    4. '_b' → logprob: -11.625061988830566
    5. '_ab' → logprob: -11.750061988830566
    6. 'def' → logprob: -13.875061988830566
    7. '_c' → logprob: -13.875061988830566
    8. '_s' → logprob: -15.750061988830566
    9. ' _' → logprob: -16.12506103515625
    10. '_x' → logprob: -16.25006103515625

Token 416: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.0011268829694017768
    2. '_' → logprob: -7.126126766204834
    3. 'desc' → logprob: -8.126127243041992
    4. '_des' → logprob: -11.001127243041992
    5. 'def' → logprob: -12.751127243041992
    6. '_dec' → logprob: -13.126127243041992
    7. '_def' → logprob: -13.126127243041992
    8. '_d' → logprob: -14.376127243041992
    9. '_DESC' → logprob: -14.376127243041992
    10. 'd' → logprob: -15.126127243041992

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38699355721473694
    2. ' =' → logprob: -1.1369935274124146
    3. '=lambda' → logprob: -9.011993408203125
    4. '＝' → logprob: -15.011993408203125
    5. '_=' → logprob: -16.511993408203125
    6. ' ' → logprob: -16.886993408203125
    7. 's' → logprob: -17.761993408203125
    8. '=_' → logprob: -17.886993408203125
    9. '=L' → logprob: -17.886993408203125
    10. '_' → logprob: -18.011993408203125

Token 418: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.12694679200649261
    2. ' lambda' → logprob: -2.1269466876983643
    3. '(lambda' → logprob: -11.001946449279785
    4. '=lambda' → logprob: -13.126946449279785
    5. '_lambda' → logprob: -17.0019474029541
    6. 'ambda' → logprob: -17.5019474029541
    7. '.lambda' → logprob: -19.0019474029541
    8. 'lam' → logprob: -20.0019474029541
    9. ' lamb' → logprob: -20.5019474029541
    10. 'l' → logprob: -20.7519474029541

Token 419: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.012659032829105854
    2. ' L' → logprob: -4.762659072875977
    3. '(L' → logprob: -5.512659072875977
    4. 'lambda' → logprob: -14.262659072875977
    5. '	L' → logprob: -16.137659072875977
    6. ' lambda' → logprob: -16.512659072875977
    7. '[L' → logprob: -16.637659072875977
    8. '(' → logprob: -17.262659072875977
    9. ':L' → logprob: -17.387659072875977
    10. '.L' → logprob: -17.387659072875977

Token 420: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6047699318733066e-05
    2. ' :' → logprob: -11.500016212463379
    3. '(L' → logprob: -13.000016212463379
    4. ':L' → logprob: -13.250016212463379
    5. ',' → logprob: -14.000016212463379
    6. '=' → logprob: -14.500016212463379
    7. 'L' → logprob: -14.875016212463379
    8. ':list' → logprob: -17.125015258789062
    9. ',L' → logprob: -17.375015258789062
    10. 'sorted' → logprob: -18.125015258789062

Token 421: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.023277277126908302
    2. ' sort' → logprob: -3.7732772827148438
    3. 'lambda' → logprob: -10.898277282714844
    4. 'sorted' → logprob: -11.523277282714844
    5. ' lambda' → logprob: -13.023277282714844
    6. ' sorted' → logprob: -14.523277282714844
    7. '(sort' → logprob: -14.898277282714844
    8. 'reverse' → logprob: -15.273277282714844
    9. '	sort' → logprob: -17.398277282714844
    10. ' reverse' → logprob: -18.023277282714844

Token 422: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00016837897419463843
    2. '(lambda' → logprob: -8.875168800354004
    3. 'lambda' → logprob: -11.750168800354004
    4. '[' → logprob: -11.875168800354004
    5. '(' → logprob: -12.375168800354004
    6. '(reverse' → logprob: -13.250168800354004
    7. 'reverse' → logprob: -13.500168800354004
    8. 't' → logprob: -13.500168800354004
    9. '[::-' → logprob: -13.500168800354004
    10. '_lambda' → logprob: -14.375168800354004

Token 423: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.0002193908003391698
    2. 'ples' → logprob: -9.000219345092773
    3. 'tu' → logprob: -9.875219345092773
    4. 'uple' → logprob: -11.125219345092773
    5. '_t' → logprob: -11.375219345092773
    6. 'u' → logprob: -11.875219345092773
    7. 'up' → logprob: -12.500219345092773
    8. 'ules' → logprob: -13.125219345092773
    9. '_' → logprob: -13.750219345092773
    10. 'iples' → logprob: -14.250219345092773

Token 424: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. 'L' → logprob: -15.250000953674316
    4. '(lambda' → logprob: -17.375001907348633
    5. '[L' → logprob: -17.625001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.500001907348633
    8. 'def' → logprob: -19.125001907348633
    9. ' (' → logprob: -19.625001907348633
    10. '(l' → logprob: -19.750001907348633

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. '(L' → logprob: -10.750045776367188
    3. ',L' → logprob: -10.875045776367188
    4. ' ,' → logprob: -12.750045776367188
    5. 'L' → logprob: -13.125045776367188
    6. ' L' → logprob: -16.250045776367188
    7. ')' → logprob: -17.750045776367188
    8. '[L' → logprob: -18.125045776367188
    9. '(' → logprob: -18.375045776367188
    10. '[' → logprob: -18.750045776367188

Token 426: ' [' (ID: 723)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6870240569114685
    2. '[L' → logprob: -1.1870241165161133
    3. '[' → logprob: -1.6870241165161133
    4. ' [' → logprob: -5.187024116516113
    5. ' L' → logprob: -6.812024116516113
    6. '(L' → logprob: -10.687024116516113
    7. '[x' → logprob: -12.312024116516113
    8. '[l' → logprob: -12.562024116516113
    9. 'lambda' → logprob: -13.187024116516113
    10. '   ' → logprob: -13.437024116516113

Token 427: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -2.15310683415737e-05
    2. ' lambda' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.75002098083496
    4. '(lambda' → logprob: -16.75002098083496
    5. 'λ' → logprob: -18.50002098083496
    6. 'lam' → logprob: -19.37502098083496
    7. '=lambda' → logprob: -20.37502098083496
    8. ' ' → logprob: -20.75002098083496
    9. '  ' → logprob: -21.00002098083496
    10. '    ' → logprob: -21.25002098083496

Token 428: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043281487887725234
    2. ' x' → logprob: -7.750432968139648
    3. 'lambda' → logprob: -13.125432968139648
    4. ' lambda' → logprob: -17.25043296813965
    5. '	x' → logprob: -19.62543296813965
    6. '   ' → logprob: -19.62543296813965
    7. ' ' → logprob: -19.87543296813965
    8. '(x' → logprob: -20.00043296813965
    9. 't' → logprob: -20.25043296813965
    10. '[' → logprob: -20.87543296813965

Token 429: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005511255003511906
    2. 'lambda' → logprob: -7.875551223754883
    3. 'x' → logprob: -8.875551223754883
    4. ' lambda' → logprob: -11.500551223754883
    5. '=lambda' → logprob: -12.125551223754883
    6. '   ' → logprob: -12.375551223754883
    7. ' :' → logprob: -13.375551223754883
    8. '[' → logprob: -13.375551223754883
    9. ':x' → logprob: -13.500551223754883
    10. ' ' → logprob: -13.500551223754883

Token 430: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008790414780378342
    2. 'lambda' → logprob: -4.883790493011475
    3. ' lambda' → logprob: -8.133790016174316
    4. '-x' → logprob: -8.133790016174316
    5. '-l' → logprob: -8.258790016174316
    6. ' x' → logprob: -8.508790016174316
    7. '-' → logprob: -9.258790016174316
    8. ' -' → logprob: -10.383790016174316
    9. '   ' → logprob: -12.258790016174316
    10. ' ' → logprob: -12.883790016174316

Token 431: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.625000953674316
    3. '(x' → logprob: -18.875001907348633
    4. '[' → logprob: -19.750001907348633
    5. '0' → logprob: -19.875001907348633
    6. '1' → logprob: -21.250001907348633
    7. '<|end|>' → logprob: -21.750001907348633
    8. ')x' → logprob: -22.000001907348633
    9. '	x' → logprob: -22.250001907348633
    10. 'lambda' → logprob: -22.500001907348633

Token 432: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010473522706888616
    2. '0' → logprob: -9.250104904174805
    3. ':' → logprob: -11.750104904174805
    4. ' [' → logprob: -15.750104904174805
    5. ' ' → logprob: -16.000104904174805
    6. 'x' → logprob: -16.125104904174805
    7. '   ' → logprob: -16.750104904174805
    8. '[
' → logprob: -17.125104904174805
    9. ')' → logprob: -17.500104904174805
    10. '
' → logprob: -17.500104904174805

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006310671451501548
    2. '[' → logprob: -7.375630855560303
    3. ' ' → logprob: -13.000631332397461
    4. 'x' → logprob: -14.125631332397461
    5. '1' → logprob: -14.500631332397461
    6. '   ' → logprob: -15.438131332397461
    7. '
' → logprob: -16.00063133239746
    8. '```' → logprob: -16.50063133239746
    9. '۰' → logprob: -16.68813133239746
    10. '  ' → logprob: -17.06313133239746

Token 434: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.625009536743164
    3. '),' → logprob: -15.125009536743164
    4. '[' → logprob: -15.375009536743164
    5. 'lambda' → logprob: -15.500009536743164
    6. ',x' → logprob: -16.000009536743164
    7. '(),' → logprob: -16.875009536743164
    8. ')' → logprob: -17.000009536743164
    9. '],' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.250009536743164

Token 435: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.061970602720975876
    2. ' lambda' → logprob: -2.8119707107543945
    3. '(lambda' → logprob: -12.936970710754395
    4. '=lambda' → logprob: -15.436970710754395
    5. '.lambda' → logprob: -15.561970710754395
    6. '   ' → logprob: -17.436969757080078
    7. '_lambda' → logprob: -17.436969757080078
    8. '    ' → logprob: -18.061969757080078
    9. ' ' → logprob: -18.061969757080078
    10. ' lamb' → logprob: -18.436969757080078

Token 436: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10717285424470901
    2. ' lambda' → logprob: -2.607172966003418
    3. 'x' → logprob: -3.607172966003418
    4. ' x' → logprob: -8.107172966003418
    5. ':' → logprob: -8.232172966003418
    6. ' ' → logprob: -10.107172966003418
    7. '(lambda' → logprob: -10.232172966003418
    8. '=lambda' → logprob: -10.357172966003418
    9. '   ' → logprob: -10.607172966003418
    10. '-' → logprob: -10.732172966003418

Token 437: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022290023043751717
    2. '[' → logprob: -6.1272292137146
    3. '-' → logprob: -10.252228736877441
    4. 'lambda' → logprob: -12.877228736877441
    5. '   ' → logprob: -13.377228736877441
    6. ']' → logprob: -14.127228736877441
    7. ':-' → logprob: -14.377228736877441
    8. '=lambda' → logprob: -14.627228736877441
    9. ' :' → logprob: -14.877228736877441
    10. 'x' → logprob: -15.127228736877441

Token 438: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.5910346508026123
    2. ' -' → logprob: -0.8410346508026123
    3. '-' → logprob: -4.216034889221191
    4. '-l' → logprob: -8.591034889221191
    5. 'x' → logprob: -10.591034889221191
    6. 'lambda' → logprob: -12.591034889221191
    7. ' ' → logprob: -12.841034889221191
    8. '-t' → logprob: -13.091034889221191
    9. '   ' → logprob: -13.341034889221191
    10. ' lambda' → logprob: -13.716034889221191

Token 439: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.625
    3. '1' → logprob: -19.625
    4. '0' → logprob: -20.625
    5. '```' → logprob: -21.5
    6. '[' → logprob: -21.625
    7. '(x' → logprob: -21.75
    8. '   ' → logprob: -22.625
    9. ')x' → logprob: -22.75
    10. '	x' → logprob: -23.0

Token 440: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0040793512016534805
    2. '1' → logprob: -5.504079341888428
    3. '0' → logprob: -14.629079818725586
    4. ']' → logprob: -15.879079818725586
    5. '   ' → logprob: -16.754079818725586
    6. '[
' → logprob: -17.129079818725586
    7. ')' → logprob: -17.254079818725586
    8. '(' → logprob: -17.254079818725586
    9. ' [' → logprob: -17.629079818725586
    10. '```' → logprob: -17.754079818725586

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. '
' → logprob: -16.62500762939453
    4. ' ' → logprob: -16.75000762939453
    5. '   ' → logprob: -17.50000762939453
    6. '１' → logprob: -17.62500762939453
    7. '```' → logprob: -18.37500762939453
    8. ']' → logprob: -18.87500762939453
    9. '' → logprob: -19.18750762939453
    10. '
' → logprob: -19.68750762939453

Token 442: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12802380323410034
    2. ')])' → logprob: -2.128023862838745
    3. ']])' → logprob: -7.378023624420166
    4. '])]' → logprob: -8.378024101257324
    5. ')' → logprob: -8.628024101257324
    6. ']))' → logprob: -10.503024101257324
    7. ')]' → logprob: -10.753024101257324
    8. ']' → logprob: -12.253024101257324
    9. ' ])' → logprob: -13.253024101257324
    10. '])
' → logprob: -13.378024101257324

Token 443: 'sort' (ID: 13373)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10349725931882858
    2. '_' → logprob: -2.728497266769409
    3. '=' → logprob: -4.97849702835083
    4. ')' → logprob: -5.10349702835083
    5. 'def' → logprob: -5.97849702835083
    6. ' ' → logprob: -6.10349702835083
    7. '' → logprob: -6.22849702835083
    8. '
' → logprob: -6.22849702835083
    9. ' 
' → logprob: -6.97849702835083
    10. '(' → logprob: -7.10349702835083

Token 444: '_b' (ID: 1535)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.10958632081747055
    2. '_a' → logprob: -3.109586238861084
    3. 'ab' → logprob: -3.484586238861084
    4. '_c' → logprob: -4.109586238861084
    5. '_cd' → logprob: -5.484586238861084
    6. 'a' → logprob: -6.109586238861084
    7. '_' → logprob: -6.359586238861084
    8. 'abc' → logprob: -6.359586238861084
    9. '_t' → logprob: -7.109586238861084
    10. '_b' → logprob: -8.234586715698242

Token 445: '_' (ID: 62)
  Prédit: '_desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.3307645618915558
    2. '_' → logprob: -1.3307645320892334
    3. '_ab' → logprob: -4.0807647705078125
    4. 'desc' → logprob: -8.830764770507812
    5. '_des' → logprob: -8.830764770507812
    6. '_abs' → logprob: -10.330764770507812
    7. '_lambda' → logprob: -10.580764770507812
    8. '=' → logprob: -10.955764770507812
    9. '=lambda' → logprob: -11.455764770507812
    10. ' =' → logprob: -11.580764770507812

Token 446: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.0008308322867378592
    2. 'desc' → logprob: -7.12583065032959
    3. '_desc' → logprob: -11.25083065032959
    4. '_' → logprob: -11.37583065032959
    5. 'ascending' → logprob: -14.25083065032959
    6. 'lambda' → logprob: -14.62583065032959
    7. 'ab' → logprob: -15.50083065032959
    8. 'abs' → logprob: -15.50083065032959
    9. ' asc' → logprob: -15.75083065032959
    10. 'def' → logprob: -16.625831604003906

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12703688442707062
    2. ' =' → logprob: -2.1270368099212646
    3. '=lambda' → logprob: -9.127037048339844
    4. '＝' → logprob: -16.627037048339844
    5. '=
' → logprob: -17.627037048339844
    6. '_=' → logprob: -17.877037048339844
    7. '=_' → logprob: -18.502037048339844
    8. '=s' → logprob: -19.002037048339844
    9. '=L' → logprob: -19.127037048339844
    10. '=list' → logprob: -19.377037048339844

Token 448: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00043102685594931245
    2. ' lambda' → logprob: -7.750431060791016
    3. '(lambda' → logprob: -15.000431060791016
    4. '=lambda' → logprob: -19.625431060791016
    5. 'lam' → logprob: -20.250431060791016
    6. 'l' → logprob: -21.000431060791016
    7. '_lambda' → logprob: -21.250431060791016
    8. '```' → logprob: -21.250431060791016
    9. 'λ' → logprob: -21.625431060791016
    10. '   ' → logprob: -21.750431060791016

Token 449: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.023546746000647545
    2. ' L' → logprob: -3.7735466957092285
    3. 'lambda' → logprob: -8.523547172546387
    4. '(L' → logprob: -9.398547172546387
    5. ' lambda' → logprob: -11.023547172546387
    6. 'sort' → logprob: -13.648547172546387
    7. '	L' → logprob: -14.648547172546387
    8. ' ' → logprob: -15.023547172546387
    9. '   ' → logprob: -15.523547172546387
    10. 'l' → logprob: -15.648547172546387

Token 450: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.843177233240567e-05
    2. ' :' → logprob: -11.000018119812012
    3. '=' → logprob: -14.625018119812012
    4. 'lambda' → logprob: -15.000018119812012
    5. 'sort' → logprob: -15.250018119812012
    6. ':L' → logprob: -15.500018119812012
    7. 'L' → logprob: -16.000019073486328
    8. ':list' → logprob: -16.250019073486328
    9. ',' → logprob: -16.625019073486328
    10. '=lambda' → logprob: -16.750019073486328

Token 451: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.005390280392020941
    2. ' sort' → logprob: -5.255390167236328
    3. 'lambda' → logprob: -8.880390167236328
    4. 'sorted' → logprob: -11.130390167236328
    5. ' lambda' → logprob: -13.130390167236328
    6. '(sort' → logprob: -14.755390167236328
    7. ' sorted' → logprob: -15.755390167236328
    8. ' ' → logprob: -16.880390167236328
    9. '	sort' → logprob: -17.755390167236328
    10. 'l' → logprob: -18.255390167236328

Token 452: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00915159098803997
    2. 'lambda' → logprob: -4.884151458740234
    3. 'tu' → logprob: -7.384151458740234
    4. '_b' → logprob: -7.759151458740234
    5. 't' → logprob: -8.134151458740234
    6. 'b' → logprob: -9.384151458740234
    7. '(lambda' → logprob: -9.509151458740234
    8. '_lambda' → logprob: -11.009151458740234
    9. '_list' → logprob: -12.384151458740234
    10. '_l' → logprob: -12.384151458740234

Token 453: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.00016063073417171836
    2. 'ples' → logprob: -9.750160217285156
    3. 'tu' → logprob: -10.375160217285156
    4. 'lambda' → logprob: -10.875160217285156
    5. 'lists' → logprob: -11.250160217285156
    6. 'up' → logprob: -11.875160217285156
    7. 'uple' → logprob: -11.875160217285156
    8. 'list' → logprob: -11.875160217285156
    9. 'l' → logprob: -12.500160217285156
    10. 'upl' → logprob: -12.750160217285156

Token 454: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -7.896309739408025e-07
    2. '(lambda' → logprob: -14.875000953674316
    3. '(' → logprob: -15.750000953674316
    4. 'L' → logprob: -16.0
    5. ',' → logprob: -16.75
    6. ' (' → logprob: -17.25
    7. '[L' → logprob: -17.75
    8. '```' → logprob: -19.0
    9. '(
' → logprob: -19.5
    10. '(List' → logprob: -19.5

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012240358628332615
    2. '(L' → logprob: -6.751224040985107
    3. ',L' → logprob: -10.12622356414795
    4. ' ,' → logprob: -11.87622356414795
    5. 'L' → logprob: -12.12622356414795
    6. '[' → logprob: -14.87622356414795
    7. ' (' → logprob: -15.50122356414795
    8. '(' → logprob: -15.62622356414795
    9. '[L' → logprob: -15.62622356414795
    10. ',[' → logprob: -15.87622356414795

Token 456: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8139747977256775
    2. '[L' → logprob: -1.0639748573303223
    3. 'L' → logprob: -1.5639748573303223
    4. ' [' → logprob: -6.063974857330322
    5. '[x' → logprob: -9.438974380493164
    6. ' L' → logprob: -9.813974380493164
    7. 'lambda' → logprob: -10.563974380493164
    8. '[l' → logprob: -10.813974380493164
    9. '[s' → logprob: -12.563974380493164
    10. '(L' → logprob: -12.938974380493164

Token 457: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.7954958821064793e-05
    2. ' lambda' → logprob: -11.250018119812012
    3. '(lambda' → logprob: -12.250018119812012
    4. '   ' → logprob: -15.875018119812012
    5. '=lambda' → logprob: -19.125017166137695
    6. 'lam' → logprob: -19.250017166137695
    7. 'λ' → logprob: -19.500017166137695
    8. '  ' → logprob: -20.500017166137695
    9. '    ' → logprob: -20.625017166137695
    10. '.lambda' → logprob: -20.625017166137695

Token 458: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001507601235061884
    2. 'lambda' → logprob: -6.751507759094238
    3. ' x' → logprob: -8.001507759094238
    4. ' lambda' → logprob: -13.001507759094238
    5. '   ' → logprob: -16.501506805419922
    6. '(x' → logprob: -17.001506805419922
    7. '(lambda' → logprob: -17.376506805419922
    8. 'l' → logprob: -17.376506805419922
    9. ' ' → logprob: -18.376506805419922
    10. '  ' → logprob: -18.876506805419922

Token 459: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006167324259877205
    2. 'lambda' → logprob: -5.131167411804199
    3. ' lambda' → logprob: -9.3811674118042
    4. 'x' → logprob: -9.8811674118042
    5. '[' → logprob: -10.0061674118042
    6. '=lambda' → logprob: -10.1311674118042
    7. '(lambda' → logprob: -11.5061674118042
    8. ' :' → logprob: -12.6311674118042
    9. '   ' → logprob: -13.7561674118042
    10. ':x' → logprob: -13.7561674118042

Token 460: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16025742888450623
    2. 'lambda' → logprob: -1.9102574586868286
    3. ' lambda' → logprob: -10.910257339477539
    4. ' x' → logprob: -11.410257339477539
    5. '(lambda' → logprob: -12.535257339477539
    6. '(x' → logprob: -15.410257339477539
    7. '   ' → logprob: -16.28525733947754
    8. '```' → logprob: -17.28525733947754
    9. ' ' → logprob: -17.78525733947754
    10. '=lambda' → logprob: -18.28525733947754

Token 461: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019300628919154406
    2. ':' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.001930236816406
    4. '```' → logprob: -16.251930236816406
    5. ' ' → logprob: -16.626930236816406
    6. 'x' → logprob: -16.626930236816406
    7. ' :' → logprob: -17.126930236816406
    8. '1' → logprob: -17.251930236816406
    9. ' [' → logprob: -17.251930236816406
    10. '  ' → logprob: -17.376930236816406

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.375001907348633
    3. '0' → logprob: -14.500001907348633
    4. '```' → logprob: -15.375001907348633
    5. ' ' → logprob: -16.375001907348633
    6. 'x' → logprob: -17.125001907348633
    7. '' → logprob: -17.250001907348633
    8. '
' → logprob: -17.250001907348633
    9. '-' → logprob: -17.312501907348633
    10. '   ' → logprob: -17.437501907348633

Token 463: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001923352392623201
    2. ')])' → logprob: -9.625192642211914
    3. ')' → logprob: -9.875192642211914
    4. ',' → logprob: -10.625192642211914
    5. '])]' → logprob: -11.000192642211914
    6. ']' → logprob: -11.375192642211914
    7. '])
' → logprob: -12.375192642211914
    8. ']);' → logprob: -12.875192642211914
    9. ']))' → logprob: -13.000192642211914
    10. ':' → logprob: -13.000192642211914

Token 464: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7414589524269104
    2. 'def' → logprob: -0.9914589524269104
    3. '<|end|>' → logprob: -1.9914588928222656
    4. '#' → logprob: -4.991458892822266
    5. ')' → logprob: -5.741458892822266
    6. '```' → logprob: -6.991458892822266
    7. '<|end|>' → logprob: -7.366458892822266
    8. 'import' → logprob: -7.616458892822266
    9. 'newline' → logprob: -7.866458892822266
    10. '.sort' → logprob: -7.866458892822266

Token 465: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.026342563331127167
    2. '_a' → logprob: -3.6513426303863525
    3. '_ab' → logprob: -10.901342391967773
    4. 'a' → logprob: -10.901342391967773
    5. 'b' → logprob: -12.901342391967773
    6. '_' → logprob: -13.026342391967773
    7. '_c' → logprob: -14.776342391967773
    8. '_t' → logprob: -15.401342391967773
    9. '```' → logprob: -17.151342391967773
    10. 'ab' → logprob: -17.526342391967773

Token 466: '_desc' (ID: 26683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.981667537620524e-06
    2. '_desc' → logprob: -13.500001907348633
    3. 'asc' → logprob: -16.500001907348633
    4. '_lambda' → logprob: -17.000001907348633
    5. '_des' → logprob: -17.250001907348633
    6. '_as' → logprob: -17.250001907348633
    7. ' _' → logprob: -17.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. '=lambda' → logprob: -18.125001907348633
    10. '=' → logprob: -18.125001907348633

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029870478436350822
    2. ' =' → logprob: -3.5298705101013184
    3. '=lambda' → logprob: -9.02987003326416
    4. '=
' → logprob: -16.404870986938477
    5. '＝' → logprob: -16.654870986938477
    6. '<|end|>' → logprob: -16.654870986938477
    7. '_=' → logprob: -17.404870986938477
    8. '=}' → logprob: -17.904870986938477
    9. '=

' → logprob: -18.654870986938477
    10. '=L' → logprob: -18.654870986938477

Token 468: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.048594068735837936
    2. ' lambda' → logprob: -3.0485939979553223
    3. '(lambda' → logprob: -11.92359447479248
    4. '=lambda' → logprob: -16.173593521118164
    5. '_lambda' → logprob: -18.298593521118164
    6. '.lambda' → logprob: -19.048593521118164
    7. 'λ' → logprob: -19.298593521118164
    8. 'ambda' → logprob: -20.048593521118164
    9. ' ' → logprob: -20.173593521118164
    10. 'l' → logprob: -20.423593521118164

Token 469: ' L' (ID: 451)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03615188971161842
    2. 'L' → logprob: -3.411151885986328
    3. ' lambda' → logprob: -6.036151885986328
    4. ' L' → logprob: -9.911151885986328
    5. '(lambda' → logprob: -10.161151885986328
    6. '(L' → logprob: -11.161151885986328
    7. 'λ' → logprob: -13.036151885986328
    8. 'ambda' → logprob: -13.286151885986328
    9. '_lambda' → logprob: -13.286151885986328
    10. '=lambda' → logprob: -14.161151885986328

Token 470: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005000463221222162
    2. '=lambda' → logprob: -5.880000591278076
    3. '=' → logprob: -6.130000591278076
    4. 'lambda' → logprob: -12.005000114440918
    5. '(lambda' → logprob: -12.755000114440918
    6. ' =' → logprob: -12.880000114440918
    7. '_lambda' → logprob: -13.630000114440918
    8. ':L' → logprob: -13.755000114440918
    9. ' :' → logprob: -14.630000114440918
    10. 'ambda' → logprob: -14.755000114440918

Token 471: ' sort' (ID: 4506)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.32860520482063293
    2. 'sort' → logprob: -1.3286051750183105
    3. ' lambda' → logprob: -4.3286051750183105
    4. ' sort' → logprob: -6.3286051750183105
    5. '(lambda' → logprob: -8.703605651855469
    6. 'sorted' → logprob: -10.328605651855469
    7. 'L' → logprob: -11.203605651855469
    8. '(sort' → logprob: -11.328605651855469
    9. 'λ' → logprob: -11.578605651855469
    10. 'l' → logprob: -11.703605651855469

Token 472: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.08937561511993408
    2. 'lambda' → logprob: -2.9643754959106445
    3. '(lambda' → logprob: -3.7143754959106445
    4. '[' → logprob: -5.7143754959106445
    5. 'uples' → logprob: -6.3393754959106445
    6. '_lambda' → logprob: -6.4643754959106445
    7. '=lambda' → logprob: -6.8393754959106445
    8. 'tu' → logprob: -7.4643754959106445
    9. '_list' → logprob: -8.339375495910645
    10. '_lists' → logprob: -8.589375495910645

Token 473: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.009483115747570992
    2. 'ples' → logprob: -4.759483337402344
    3. 'uple' → logprob: -8.634483337402344
    4. 'lambda' → logprob: -8.634483337402344
    5. 'upl' → logprob: -8.634483337402344
    6. 'sort' → logprob: -9.009483337402344
    7. 'up' → logprob: -9.259483337402344
    8. '(lambda' → logprob: -11.134483337402344
    9. 'ple' → logprob: -11.259483337402344
    10. 'ups' → logprob: -11.509483337402344

Token 474: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0001261845463886857
    2. '(lambda' → logprob: -9.000125885009766
    3. '(' → logprob: -13.625125885009766
    4. 'lambda' → logprob: -14.000125885009766
    5. 'L' → logprob: -15.000125885009766
    6. '=lambda' → logprob: -16.000125885009766
    7. ' lambda' → logprob: -17.125125885009766
    8. ' (' → logprob: -17.375125885009766
    9. '[L' → logprob: -17.625125885009766
    10. '(S' → logprob: -17.875125885009766

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12759703397750854
    2. '(L' → logprob: -2.1275970935821533
    3. ',L' → logprob: -7.627596855163574
    4. '(' → logprob: -9.627596855163574
    5. '[' → logprob: -9.877596855163574
    6. '[L' → logprob: -10.752596855163574
    7. 'L' → logprob: -11.252596855163574
    8. ' ,' → logprob: -11.752596855163574
    9. '=' → logprob: -12.752596855163574
    10. '(lambda' → logprob: -12.752596855163574

Token 476: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.392824874026701e-05
    2. '[L' → logprob: -10.87503433227539
    3. ' [' → logprob: -11.37503433227539
    4. 'lambda' → logprob: -13.00003433227539
    5. 'L' → logprob: -14.50003433227539
    6. '[l' → logprob: -15.12503433227539
    7. '(lambda' → logprob: -15.75003433227539
    8. '[x' → logprob: -16.25003433227539
    9. '   ' → logprob: -16.50003433227539
    10. '[b' → logprob: -16.87503433227539

Token 477: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3870927095413208
    2. 'L' → logprob: -1.1370927095413208
    3. '[' → logprob: -8.887092590332031
    4. ' lambda' → logprob: -10.512092590332031
    5. '(lambda' → logprob: -10.637092590332031
    6. '[L' → logprob: -10.762092590332031
    7. ' L' → logprob: -12.262092590332031
    8. '```' → logprob: -13.512092590332031
    9. '(L' → logprob: -13.887092590332031
    10. 'x' → logprob: -13.887092590332031

Token 478: ' x' (ID: 1215)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00024335073248948902
    2. 'x' → logprob: -8.625243186950684
    3. ' L' → logprob: -9.875243186950684
    4. 'lambda' → logprob: -11.500243186950684
    5. '(L' → logprob: -13.500243186950684
    6. ' x' → logprob: -15.500243186950684
    7. '[L' → logprob: -15.750243186950684
    8. ' lambda' → logprob: -15.750243186950684
    9. '(x' → logprob: -16.000244140625
    10. '(lambda' → logprob: -17.000244140625

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013635702198371291
    2. '=lambda' → logprob: -6.626363754272461
    3. 'lambda' → logprob: -11.001363754272461
    4. '(lambda' → logprob: -11.876363754272461
    5. '[' → logprob: -12.376363754272461
    6. ' lambda' → logprob: -13.001363754272461
    7. ',' → logprob: -13.251363754272461
    8. '=' → logprob: -13.501363754272461
    9. ' :' → logprob: -13.751363754272461
    10. '):' → logprob: -13.751363754272461

Token 480: ' -' (ID: 533)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0013820211170241237
    2. 'lambda' → logprob: -7.376381874084473
    3. ' L' → logprob: -7.501381874084473
    4. 'x' → logprob: -8.626381874084473
    5. '[' → logprob: -11.251381874084473
    6. ' lambda' → logprob: -12.501381874084473
    7. '[x' → logprob: -12.876381874084473
    8. '[L' → logprob: -13.001381874084473
    9. ' x' → logprob: -14.001381874084473
    10. ' [' → logprob: -15.501381874084473

Token 481: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -14.75
    3. '[' → logprob: -18.625
    4. '(x' → logprob: -18.625
    5. '1' → logprob: -19.75
    6. 'lambda' → logprob: -20.0
    7. ')x' → logprob: -20.25
    8. '[x' → logprob: -20.75
    9. '{x' → logprob: -21.125
    10. '<|end|>' → logprob: -21.5

Token 482: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -12.125007629394531
    3. '(' → logprob: -13.125007629394531
    4. '(x' → logprob: -16.12500762939453
    5. ')' → logprob: -16.37500762939453
    6. 'x' → logprob: -16.75000762939453
    7. ']' → logprob: -18.62500762939453
    8. '0' → logprob: -18.62500762939453
    9. ':' → logprob: -18.75000762939453
    10. '```' → logprob: -19.00000762939453

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. '[' → logprob: -10.750021934509277
    3. '0' → logprob: -16.375022888183594
    4. ')' → logprob: -16.500022888183594
    5. '(' → logprob: -16.625022888183594
    6. '１' → logprob: -16.750022888183594
    7. ' ' → logprob: -16.750022888183594
    8. ']' → logprob: -16.875022888183594
    9. '```' → logprob: -17.125022888183594
    10. '   ' → logprob: -17.250022888183594

Token 484: ']])

' (ID: 186741)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001974788261577487
    2. ')])' → logprob: -6.376974582672119
    3. ')' → logprob: -8.376975059509277
    4. ']])' → logprob: -10.751975059509277
    5. '])]' → logprob: -11.626975059509277
    6. '])
' → logprob: -12.876975059509277
    7. ')]' → logprob: -12.876975059509277
    8. ''])' → logprob: -13.001975059509277
    9. ']' → logprob: -13.001975059509277
    10. ']))' → logprob: -14.501975059509277

Token 485: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05438768118619919
    2. 'def' → logprob: -3.5543875694274902
    3. ')' → logprob: -5.17938756942749
    4. '_' → logprob: -6.05438756942749
    5. '=' → logprob: -6.55438756942749
    6. ':' → logprob: -6.80438756942749
    7. '#
' → logprob: -7.05438756942749
    8. ',' → logprob: -7.05438756942749
    9. '
' → logprob: -7.30438756942749
    10. 'd' → logprob: -7.30438756942749

Token 486: '---' (ID: 10356)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15643835067749023
    2. '=' → logprob: -3.5314383506774902
    3. '_' → logprob: -3.6564383506774902
    4. 'def' → logprob: -3.9064383506774902
    5. '�' → logprob: -4.40643835067749
    6. 'd' → logprob: -4.65643835067749
    7. ')' → logprob: -5.40643835067749
    8. 'u' → logprob: -5.40643835067749
    9. ',' → logprob: -5.65643835067749
    10. 'x' → logprob: -5.90643835067749

Token 487: ' �' (ID: 48031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3328465223312378
    2. '#' → logprob: -1.5828465223312378
    3. '_' → logprob: -1.5828465223312378
    4. 'd' → logprob: -1.8328465223312378
    5. ')' → logprob: -4.395346641540527
    6. 'n' → logprob: -4.645346641540527
    7. 'import' → logprob: -4.832846641540527
    8. 'i' → logprob: -4.895346641540527
    9. '__' → logprob: -5.145346641540527
    10. 's' → logprob: -5.145346641540527

Token 488: '�' (ID: 107)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3638860583305359
    2. 'def' → logprob: -1.9888861179351807
    3. '_' → logprob: -2.8638861179351807
    4. '=' → logprob: -4.738885879516602
    5. 'd' → logprob: -4.801385879516602
    6. '�' → logprob: -4.863885879516602
    7. 'n' → logprob: -4.926385879516602
    8. 'ん' → logprob: -5.238885879516602
    9. 'u' → logprob: -5.488885879516602
    10. ')' → logprob: -5.738885879516602

Token 489: '乗' (ID: 155429)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8778291940689087
    2. '#' → logprob: -1.0028291940689087
    3. 'コード' → logprob: -3.877829074859619
    4. 'ん' → logprob: -4.190329074859619
    5. 'from' → logprob: -4.190329074859619
    6. '_' → logprob: -4.440329074859619
    7. '��' → logprob: -5.252829074859619
    8. 'import' → logprob: -5.315329074859619
    9. '���' → logprob: -5.377829074859619
    10. '...' → logprob: -5.565329074859619

Token 490: ' ---
' (ID: 128468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06807336211204529
    2. 'lambda' → logprob: -2.943073272705078
    3. 'pow' → logprob: -4.693073272705078
    4. '=lambda' → logprob: -6.693073272705078
    5. ' def' → logprob: -7.318073272705078
    6. 'x' → logprob: -7.318073272705078
    7. '**' → logprob: -8.443073272705078
    8. '(lambda' → logprob: -8.818073272705078
    9. '=' → logprob: -8.943073272705078
    10. ' lambda' → logprob: -9.068073272705078

Token 491: 'power' (ID: 22295)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3919752836227417
    2. 'pow' → logprob: -1.1419752836227417
    3. 'power' → logprob: -6.266975402832031
    4. 'sqrt' → logprob: -6.891975402832031
    5. 'square' → logprob: -6.891975402832031
    6. 'import' → logprob: -7.766975402832031
    7. ' def' → logprob: -9.016975402832031
    8. 's' → logprob: -9.141975402832031
    9. 'sq' → logprob: -9.766975402832031
    10. 'ip' → logprob: -9.766975402832031

Token 492: '_mod' (ID: 15325)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14334139227867126
    2. '=' → logprob: -2.018341302871704
    3. 'def' → logprob: -8.018341064453125
    4. '=lambda' → logprob: -9.143341064453125
    5. '2' → logprob: -10.018341064453125
    6. '_' → logprob: -10.143341064453125
    7. ' ' → logprob: -10.268341064453125
    8. 's' → logprob: -10.393341064453125
    9. '**' → logprob: -11.393341064453125
    10. 'pow' → logprob: -11.518341064453125

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17999179661273956
    2. '=' → logprob: -1.8049918413162231
    3. '=lambda' → logprob: -8.804991722106934
    4. 'def' → logprob: -10.179991722106934
    5. ' ' → logprob: -10.429991722106934
    6. 'pow' → logprob: -10.929991722106934
    7. 'import' → logprob: -13.554991722106934
    8. '_' → logprob: -13.554991722106934
    9. '<|end|>' → logprob: -13.554991722106934
    10. '(power' → logprob: -13.679991722106934

Token 494: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09198888391256332
    2. ' lambda' → logprob: -2.4669888019561768
    3. 'pow' → logprob: -5.841989040374756
    4. '(lambda' → logprob: -9.466988563537598
    5. ' pow' → logprob: -9.966988563537598
    6. 'def' → logprob: -11.716988563537598
    7. ' ' → logprob: -12.466988563537598
    8. '=lambda' → logprob: -12.966988563537598
    9. 'lam' → logprob: -13.716988563537598
    10. '10' → logprob: -15.091988563537598

Token 495: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.641850471496582
    2. 'pow' → logprob: -1.391850471496582
    3. 'a' → logprob: -2.016850471496582
    4. ' x' → logprob: -3.266850471496582
    5. 'lambda' → logprob: -3.391850471496582
    6. '(a' → logprob: -5.141850471496582
    7. ' lambda' → logprob: -5.391850471496582
    8. ' a' → logprob: -5.641850471496582
    9. '(x' → logprob: -6.391850471496582
    10. 'base' → logprob: -6.641850471496582

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009808859322220087
    2. ',x' → logprob: -7.625980854034424
    3. 'x' → logprob: -8.125981330871582
    4. ',n' → logprob: -9.375981330871582
    5. 'pow' → logprob: -10.000981330871582
    6. ',p' → logprob: -10.375981330871582
    7. ' ,' → logprob: -10.750981330871582
    8. 'n' → logprob: -12.500981330871582
    9. 'y' → logprob: -13.375981330871582
    10. ':' → logprob: -13.500981330871582

Token 497: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05182167515158653
    2. ' y' → logprob: -3.426821708679199
    3. 'n' → logprob: -4.301821708679199
    4. 'p' → logprob: -6.551821708679199
    5. 'm' → logprob: -6.926821708679199
    6. 'pow' → logprob: -7.426821708679199
    7. 'x' → logprob: -7.551821708679199
    8. 'a' → logprob: -7.801821708679199
    9. ' n' → logprob: -8.8018217086792
    10. 'b' → logprob: -9.6768217086792

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001483564410591498
    2. ',x' → logprob: -9.50014877319336
    3. ':' → logprob: -9.87514877319336
    4. ',p' → logprob: -12.12514877319336
    5. 'pow' → logprob: -12.12514877319336
    6. ' ,' → logprob: -12.37514877319336
    7. 'x' → logprob: -12.62514877319336
    8. ',n' → logprob: -13.37514877319336
    9. ',k' → logprob: -14.75014877319336
    10. ',i' → logprob: -15.00014877319336

Token 499: ' z' (ID: 579)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1284194439649582
    2. 'mod' → logprob: -2.2534193992614746
    3. 'p' → logprob: -4.628419399261475
    4. 'z' → logprob: -5.753419399261475
    5. ' m' → logprob: -6.878419399261475
    6. 'MOD' → logprob: -7.003419399261475
    7. ' mod' → logprob: -8.253419876098633
    8. 'md' → logprob: -8.503419876098633
    9. 'mo' → logprob: -10.253419876098633
    10. 'M' → logprob: -10.503419876098633

Token 500: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013095269969198853
    2. ' :' → logprob: -9.125130653381348
    3. 'pow' → logprob: -11.500130653381348
    4. ',' → logprob: -11.750130653381348
    5. '=' → logprob: -12.750130653381348
    6. ':
' → logprob: -15.000130653381348
    7. ':x' → logprob: -15.375130653381348
    8. ' pow' → logprob: -15.625130653381348
    9. ':(' → logprob: -16.000131607055664
    10. '(pow' → logprob: -16.125131607055664

Token 501: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.236549335066229e-05
    2. ' pow' → logprob: -10.750021934509277
    3. '(pow' → logprob: -14.000021934509277
    4. '1' → logprob: -18.750022888183594
    5. '
' → logprob: -19.250022888183594
    6. '   ' → logprob: -19.500022888183594
    7. '_pow' → logprob: -20.125022888183594
    8. '0' → logprob: -21.250022888183594
    9. '(' → logprob: -21.500022888183594
    10. 'power' → logprob: -21.625022888183594

Token 502: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014191711321473122
    2. '(' → logprob: -4.264191627502441
    3. '(
' → logprob: -10.764191627502441
    4. 'x' → logprob: -11.889191627502441
    5. '(int' → logprob: -16.139192581176758
    6. '(pow' → logprob: -17.264192581176758
    7. ' (' → logprob: -17.639192581176758
    8. '(
' → logprob: -18.139192581176758
    9. '(base' → logprob: -18.389192581176758
    10. 'pow' → logprob: -18.514192581176758

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05227874219417572
    2. '%' → logprob: -3.052278757095337
    3. ',y' → logprob: -5.677278518676758
    4. ' %' → logprob: -8.927278518676758
    5. ' ,' → logprob: -9.927278518676758
    6. '%,' → logprob: -10.427278518676758
    7. '%x' → logprob: -10.552278518676758
    8. ',x' → logprob: -11.302278518676758
    9. ',%' → logprob: -12.802278518676758
    10. '(' → logprob: -13.427278518676758

Token 504: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009118211455643177
    2. ' y' → logprob: -7.000911712646484
    3. '	y' → logprob: -16.375911712646484
    4. ' ' → logprob: -16.375911712646484
    5. '(y' → logprob: -16.625911712646484
    6. ',y' → logprob: -18.250911712646484
    7. '  ' → logprob: -19.250911712646484
    8. ''y' → logprob: -19.250911712646484
    9. '   ' → logprob: -19.500911712646484
    10. '<|end|>' → logprob: -20.125911712646484

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026309354230761528
    2. '%' → logprob: -3.7763092517852783
    3. ',z' → logprob: -6.026309490203857
    4. ' %' → logprob: -7.901309490203857
    5. ' ,' → logprob: -8.5263090133667
    6. ',y' → logprob: -10.1513090133667
    7. '%,' → logprob: -10.4013090133667
    8. ')' → logprob: -13.1513090133667
    9. ',%' → logprob: -13.5263090133667
    10. '%x' → logprob: -14.1513090133667

Token 506: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0067161982879042625
    2. ' z' → logprob: -5.006716251373291
    3. '	z' → logprob: -14.006715774536133
    4. ' ' → logprob: -16.881715774536133
    5. ')' → logprob: -17.756715774536133
    6. ' ' → logprob: -18.131715774536133
    7. '(z' → logprob: -18.381715774536133
    8. '[z' → logprob: -18.631715774536133
    9. '   ' → logprob: -18.756715774536133
    10. '  ' → logprob: -19.006715774536133

Token 507: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -14.875000953674316
    4. '),' → logprob: -17.750001907348633
    5. ')#' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.250001907348633
    7. ')return' → logprob: -18.375001907348633
    8. '))' → logprob: -18.750001907348633
    9. ')`' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.375001907348633

Token 508: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.827279269695282
    2. 'def' → logprob: -1.5772793292999268
    3. ')' → logprob: -1.7022793292999268
    4. '=' → logprob: -3.0772793292999268
    5. 'x' → logprob: -3.5772793292999268
    6. ',' → logprob: -3.8272793292999268
    7. ' ' → logprob: -4.077279090881348
    8. '<|end|>' → logprob: -4.702279090881348
    9. ':' → logprob: -5.202279090881348
    10. '_' → logprob: -5.327279090881348

Token 509: '---' (ID: 10356)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2173740416765213
    2. 'def' → logprob: -2.467374086380005
    3. ')' → logprob: -3.842374086380005
    4. '_' → logprob: -3.967374086380005
    5. '=' → logprob: -4.217373847961426
    6. '
' → logprob: -4.342373847961426
    7. 'x' → logprob: -5.217373847961426
    8. ',' → logprob: -5.592373847961426
    9. ' ' → logprob: -5.717373847961426
    10. '0' → logprob: -6.279873847961426

Token 510: ' �' (ID: 10748)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0442142486572266
    2. 'factor' → logprob: -1.6692142486572266
    3. 'math' → logprob: -2.5442142486572266
    4. 'sys' → logprob: -2.6692142486572266
    5. 'mod' → logprob: -2.7942142486572266
    6. 'sqrt' → logprob: -3.1692142486572266
    7. 'def' → logprob: -3.2942142486572266
    8. 'ceil' → logprob: -3.9192142486572266
    9. 'pow' → logprob: -4.169214248657227
    10. 'inf' → logprob: -4.419214248657227

Token 511: '�' (ID: 229)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2428826093673706
    2. 'def' → logprob: -1.2428826093673706
    3. 'abs' → logprob: -1.7428826093673706
    4. '=' → logprob: -2.24288272857666
    5. '_' → logprob: -4.11788272857666
    6. ' =' → logprob: -4.11788272857666
    7. 'pow' → logprob: -4.49288272857666
    8. '2' → logprob: -4.99288272857666
    9. 'mod' → logprob: -5.11788272857666
    10. 'b' → logprob: -5.18038272857666

Token 512: 'り' (ID: 7297)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.894232988357544
    2. 'def' → logprob: -1.894232988357544
    3. '=' → logprob: -2.644232988357544
    4. '乗' → logprob: -2.644232988357544
    5. '#' → logprob: -3.644232988357544
    6. 'div' → logprob: -3.769232988357544
    7. 'e' → logprob: -3.894232988357544
    8. 'ー' → logprob: -4.019232749938965
    9. '除' → logprob: -4.394232749938965
    10. ')' → logprob: -4.644232749938965

Token 513: '上' (ID: 4286)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.6728671789169312
    2. '返' → logprob: -2.0478672981262207
    3. 'え' → logprob: -2.7978672981262207
    4. 'あ' → logprob: -3.0478672981262207
    5. 'う' → logprob: -3.2978672981262207
    6. '算' → logprob: -3.5478672981262207
    7. 'か' → logprob: -3.6728672981262207
    8. '込み' → logprob: -3.9228672981262207
    9. 'ょう' → logprob: -3.9228672981262207
    10. 'ん' → logprob: -4.922867298126221

Token 514: 'げ' (ID: 62943)
  Prédit: 'げ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'げ' → logprob: -0.00023178798437584192
    2. 'が' → logprob: -8.750231742858887
    3. 'け' → logprob: -10.500231742858887
    4. 'え' → logprob: -11.000231742858887
    5. 'へ' → logprob: -11.625231742858887
    6. 'め' → logprob: -11.750231742858887
    7. 'り' → logprob: -11.875231742858887
    8. '上' → logprob: -13.000231742858887
    9. '切' → logprob: -14.500231742858887
    10. 'き' → logprob: -15.000231742858887

Token 515: '整数' (ID: 173952)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.7671715021133423
    2. 'div' → logprob: -1.7671715021133423
    3. 'import' → logprob: -2.0171713829040527
    4. 'def' → logprob: -2.3921713829040527
    5. '=' → logprob: -2.7671713829040527
    6. '_div' → logprob: -2.8921713829040527
    7. ' =' → logprob: -4.517171382904053
    8. '_' → logprob: -4.767171382904053
    9. 'division' → logprob: -7.017171382904053
    10. '=lambda' → logprob: -8.517171859741211

Token 516: '除' (ID: 18593)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.604839563369751
    2. '=' → logprob: -0.854839563369751
    3. 'ceil' → logprob: -3.854839563369751
    4. 'import' → logprob: -5.104839324951172
    5. 'def' → logprob: -7.104839324951172
    6. '_' → logprob: -9.104839324951172
    7. 'div' → logprob: -9.979839324951172
    8. 'ce' → logprob: -10.104839324951172
    9. '=lambda' → logprob: -10.354839324951172
    10. 'floor' → logprob: -10.604839324951172

Token 517: '算' (ID: 16727)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'し' → logprob: -1.3267072439193726
    2. 'す' → logprob: -1.8267072439193726
    3. '```' → logprob: -2.201707363128662
    4. 'def' → logprob: -2.451707363128662
    5. 'り' → logprob: -2.701707363128662
    6. 'division' → logprob: -2.951707363128662
    7. '除' → logprob: -3.076707363128662
    8. 'け' → logprob: -3.826707363128662
    9. 'ceil' → logprob: -3.826707363128662
    10. 'div' → logprob: -4.701707363128662

Token 518: ' ---
' (ID: 128468)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5266334414482117
    2. '=' → logprob: -0.9016334414482117
    3. 'ceil' → logprob: -6.276633262634277
    4. 'div' → logprob: -6.776633262634277
    5. 'def' → logprob: -7.901633262634277
    6. '_div' → logprob: -10.401633262634277
    7. '＝' → logprob: -11.776633262634277
    8. ' ceil' → logprob: -11.901633262634277
    9. '_' → logprob: -12.026633262634277
    10. 'a' → logprob: -12.026633262634277

Token 519: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.12005998194217682
    2. 'def' → logprob: -2.6200599670410156
    3. 'div' → logprob: -3.2450599670410156
    4. 'divide' → logprob: -7.495059967041016
    5. 'int' → logprob: -7.745059967041016
    6. 'ce' → logprob: -8.370059967041016
    7. 'c' → logprob: -10.370059967041016
    8. 'integer' → logprob: -10.495059967041016
    9. 'floor' → logprob: -10.745059967041016
    10. ' ceil' → logprob: -10.870059967041016

Token 520: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0025782748125493526
    2. 'div' → logprob: -6.252578258514404
    3. '_' → logprob: -7.627578258514404
    4. ' =' → logprob: -9.377578735351562
    5. '=' → logprob: -9.752578735351562
    6. '=lambda' → logprob: -11.752578735351562
    7. '_DIV' → logprob: -12.877578735351562
    8. '_lambda' → logprob: -13.252578735351562
    9. 'divide' → logprob: -13.502578735351562
    10. 'division' → logprob: -13.627578735351562

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136756420135498
    2. ' =' → logprob: -1.3136756420135498
    3. '=lambda' → logprob: -7.813675880432129
    4. 'ision' → logprob: -11.813675880432129
    5. '＝' → logprob: -13.563675880432129
    6. 'ide' → logprob: -14.938675880432129
    7. '=int' → logprob: -15.563675880432129
    8. ' ' → logprob: -15.813675880432129
    9. '=

' → logprob: -16.813674926757812
    10. '=
' → logprob: -17.063674926757812

Token 522: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1271958202123642
    2. ' lambda' → logprob: -2.1271958351135254
    3. '(lambda' → logprob: -8.252195358276367
    4. '=lambda' → logprob: -11.877195358276367
    5. '_lambda' → logprob: -16.752195358276367
    6. '   ' → logprob: -17.252195358276367
    7. ' ' → logprob: -17.502195358276367
    8. 'def' → logprob: -17.752195358276367
    9. 'l' → logprob: -17.752195358276367
    10. 'lam' → logprob: -18.502195358276367

Token 523: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.46714115142822266
    2. ' lambda' → logprob: -1.2171411514282227
    3. 'a' → logprob: -2.7171411514282227
    4. ' a' → logprob: -4.592141151428223
    5. 'x' → logprob: -7.467141151428223
    6. '=lambda' → logprob: -8.467141151428223
    7. ' x' → logprob: -9.217141151428223
    8. '(lambda' → logprob: -10.217141151428223
    9. ' ' → logprob: -11.592141151428223
    10. '(a' → logprob: -12.717141151428223

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0119177782908082
    2. 'a' → logprob: -4.761917591094971
    3. ',a' → logprob: -6.261917591094971
    4. ',b' → logprob: -7.761917591094971
    5. ',x' → logprob: -8.011918067932129
    6. ' ,' → logprob: -8.011918067932129
    7. 'x' → logprob: -8.636918067932129
    8. '(a' → logprob: -10.011918067932129
    9. ' a' → logprob: -10.511918067932129
    10. 'b' → logprob: -10.511918067932129

Token 525: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858850687742233
    2. ' b' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.048588752746582
    4. '	b' → logprob: -16.048587799072266
    5. 'x' → logprob: -16.423587799072266
    6. '  ' → logprob: -16.798587799072266
    7. '   ' → logprob: -17.048587799072266
    8. 'a' → logprob: -17.298587799072266
    9. '    ' → logprob: -17.673587799072266
    10. ' ' → logprob: -18.048587799072266

Token 526: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002957783581223339
    2. ' :' → logprob: -8.500295639038086
    3. ':(' → logprob: -9.375295639038086
    4. '(a' → logprob: -12.500295639038086
    5. 'a' → logprob: -13.500295639038086
    6. ',' → logprob: -13.750295639038086
    7. ':a' → logprob: -14.625295639038086
    8. ' (' → logprob: -15.500295639038086
    9. ':
' → logprob: -15.625295639038086
    10. ' :(' → logprob: -15.875295639038086

Token 527: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0692877322435379
    2. '-' → logprob: -3.3192877769470215
    3. ' -' → logprob: -4.3192877769470215
    4. ' (' → logprob: -4.4442877769470215
    5. '-(' → logprob: -5.1942877769470215
    6. '-a' → logprob: -9.569287300109863
    7. ' ' → logprob: -10.069287300109863
    8. 'a' → logprob: -10.444287300109863
    9. '((' → logprob: -12.194287300109863
    10. ' -(' → logprob: -12.319287300109863

Token 528: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00037037418223917484
    2. '(a' → logprob: -8.125370025634766
    3. ' a' → logprob: -10.000370025634766
    4. '-' → logprob: -11.000370025634766
    5. '-a' → logprob: -11.375370025634766
    6. '-(' → logprob: -14.625370025634766
    7. ' (' → logprob: -15.875370025634766
    8. ' -' → logprob: -16.000370025634766
    9. '	a' → logprob: -16.875370025634766
    10. ' ' → logprob: -17.250370025634766

Token 529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5046824216842651
    2. '+' → logprob: -1.0046824216842651
    3. '+b' → logprob: -3.5046825408935547
    4. '-' → logprob: -10.254682540893555
    5. '+(' → logprob: -10.254682540893555
    6. '＋' → logprob: -11.754682540893555
    7. ' -' → logprob: -12.254682540893555
    8. '+B' → logprob: -14.004682540893555
    9. ' +(' → logprob: -14.379682540893555
    10. ' ' → logprob: -14.754682540893555

Token 530: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0020397489424794912
    2. '(b' → logprob: -6.252039909362793
    3. ' b' → logprob: -9.127039909362793
    4. ' (' → logprob: -13.127039909362793
    5. '(' → logprob: -14.752039909362793
    6. '	b' → logprob: -16.627038955688477
    7. ' ' → logprob: -18.252038955688477
    8. '   ' → logprob: -19.002038955688477
    9. ')b' → logprob: -19.377038955688477
    10. '-' → logprob: -20.002038955688477

Token 531: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048589076846838
    2. ' -' → logprob: -3.048588991165161
    3. 'b' → logprob: -13.923588752746582
    4. ' ' → logprob: -15.173588752746582
    5. '1' → logprob: -15.548588752746582
    6. '-b' → logprob: -16.2985897064209
    7. '−' → logprob: -16.2985897064209
    8. ' b' → logprob: -16.6735897064209
    9. '–' → logprob: -17.4235897064209
    10. 'a' → logprob: -18.0485897064209

Token 532: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '１' → logprob: -19.875003814697266
    4. '   ' → logprob: -22.875003814697266
    5. '```' → logprob: -23.000003814697266
    6. '(' → logprob: -23.500003814697266
    7. '۱' → logprob: -23.625003814697266
    8. '
' → logprob: -24.500003814697266
    9. '  ' → logprob: -24.750003814697266
    10. '-' → logprob: -24.750003814697266

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '１' → logprob: -20.25
    4. '۱' → logprob: -24.0
    5. '```' → logprob: -24.25
    6. '(' → logprob: -25.125
    7. '   ' → logprob: -25.75
    8. '
' → logprob: -26.0
    9. '  ' → logprob: -26.125
    10. 'b' → logprob: -26.25

Token 534: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023250021040439606
    2. ')//' → logprob: -3.773250102996826
    3. ' )' → logprob: -12.523249626159668
    4. '//' → logprob: -14.398249626159668
    5. ')
' → logprob: -15.148249626159668
    6. ')#' → logprob: -16.648250579833984
    7. '）' → logprob: -17.648250579833984
    8. ' ' → logprob: -18.273250579833984
    9. ' //' → logprob: -18.773250579833984
    10. ')

' → logprob: -19.273250579833984

Token 535: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0385061576962471
    2. ' //' → logprob: -3.288506269454956
    3. '#' → logprob: -8.538506507873535
    4. ')' → logprob: -8.538506507873535
    5. ')//' → logprob: -10.038506507873535
    6. '//
' → logprob: -11.663506507873535
    7. ' ' → logprob: -12.038506507873535
    8. '```' → logprob: -12.288506507873535
    9. ' ' → logprob: -12.538506507873535
    10. '	' → logprob: -13.163506507873535

Token 536: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. '	b' → logprob: -21.12509536743164
    4. ')b' → logprob: -23.37509536743164
    5. ' ' → logprob: -23.75009536743164
    6. '   ' → logprob: -24.50009536743164
    7. '  ' → logprob: -25.37509536743164
    8. '>b' → logprob: -25.87509536743164
    9. ' б' → logprob: -26.62509536743164
    10. '```' → logprob: -26.62509536743164

Token 537: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05500245466828346
    2. ' b' → logprob: -2.930002450942993
    3. 'a' → logprob: -9.305002212524414
    4. '(b' → logprob: -11.305002212524414
    5. ' a' → logprob: -11.930002212524414
    6. ' ' → logprob: -12.430002212524414
    7. '1' → logprob: -13.305002212524414
    8. '0' → logprob: -13.680002212524414
    9. ' (' → logprob: -13.680002212524414
    10. '	b' → logprob: -13.930002212524414

Token 539: ' else' (ID: 1203)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2134522646665573
    2. '>' → logprob: -2.0884523391723633
    3. 'else' → logprob: -2.9634523391723633
    4. ' else' → logprob: -4.213452339172363
    5. ' !=' → logprob: -6.338452339172363
    6. ' >' → logprob: -9.213452339172363
    7. ' ' → logprob: -11.588452339172363
    8. '!==' → logprob: -11.713452339172363
    9. '0' → logprob: -13.963452339172363
    10. '()!=' → logprob: -14.088452339172363

Token 540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.053504180163145065
    2. 'None' → logprob: -3.053504228591919
    3. 'a' → logprob: -6.05350399017334
    4. ' ' → logprob: -6.30350399017334
    5. ' None' → logprob: -7.55350399017334
    6. '-' → logprob: -9.67850399017334
    7. '(a' → logprob: -10.05350399017334
    8. '1' → logprob: -10.42850399017334
    9. ' a' → logprob: -10.42850399017334
    10. '(None' → logprob: -11.92850399017334

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005536231677979231
    2. 'None' → logprob: -5.630536079406738
    3. 'a' → logprob: -6.380536079406738
    4. '1' → logprob: -9.255536079406738
    5. ' ' → logprob: -10.005536079406738
    6. '-' → logprob: -10.130536079406738
    7. 'float' → logprob: -10.755536079406738
    8. '(a' → logprob: -11.380536079406738
    9. 'int' → logprob: -11.755536079406738
    10. 'Value' → logprob: -12.505536079406738

Token 542: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016241183038800955
    2. ' a' → logprob: -6.50162410736084
    3. 'b' → logprob: -9.37662410736084
    4. 'not' → logprob: -10.75162410736084
    5. ' not' → logprob: -11.50162410736084
    6. '0' → logprob: -12.62662410736084
    7. '(a' → logprob: -14.25162410736084
    8. ' b' → logprob: -14.37662410736084
    9. ' ' → logprob: -15.50162410736084
    10. '   ' → logprob: -15.62662410736084

Token 544: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5293323993682861
    2. ' ==' → logprob: -0.9043323993682861
    3. ' else' → logprob: -5.779332160949707
    4. '<=' → logprob: -6.779332160949707
    5. ' <=' → logprob: -7.404332160949707
    6. ' ' → logprob: -7.529332160949707
    7. 'else' → logprob: -8.154332160949707
    8. ' <' → logprob: -8.154332160949707
    9. '<' → logprob: -9.029332160949707
    10. '=' → logprob: -10.279332160949707

Token 545: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. 'a' → logprob: -16.37548828125
    4. '  ' → logprob: -17.25048828125
    5. 'b' → logprob: -17.37548828125
    6. '<|end|>' → logprob: -17.62548828125
    7. '۰' → logprob: -17.75048828125
    8. '```' → logprob: -17.87548828125
    9. 'False' → logprob: -18.62548828125
    10. 'else' → logprob: -18.81298828125

Token 546: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.14269457757472992
    2. 'else' → logprob: -2.0176944732666016
    3. ' ' → logprob: -11.142694473266602
    4. '	else' → logprob: -12.767694473266602
    5. '  ' → logprob: -14.642694473266602
    6. '```' → logprob: -15.517694473266602
    7. '    ' → logprob: -15.642694473266602
    8. '   ' → logprob: -15.642694473266602
    9. '0' → logprob: -15.767694473266602
    10. '        ' → logprob: -15.892694473266602

Token 547: ' float' (ID: 4428)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.031986117362976
    2. 'float' → logprob: -1.531986117362976
    3. '0' → logprob: -1.906986117362976
    4. '(' → logprob: -2.2819862365722656
    5. '1' → logprob: -3.0319862365722656
    6. 'None' → logprob: -3.1569862365722656
    7. 'a' → logprob: -3.9069862365722656
    8. '(float' → logprob: -4.031986236572266
    9. '-' → logprob: -4.156986236572266
    10. 'math' → logprob: -4.781986236572266

Token 548: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023964671418070793
    2. ''in' → logprob: -3.7739646434783936
    3. ''' → logprob: -7.523964881896973
    4. '("' → logprob: -9.398964881896973
    5. '(' → logprob: -10.273964881896973
    6. ''a' → logprob: -11.523964881896973
    7. 'inf' → logprob: -11.523964881896973
    8. ''on' → logprob: -12.523964881896973
    9. ''ex' → logprob: -12.648964881896973
    10. ''s' → logprob: -13.023964881896973

Token 549: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.02459251694381237
    2. 'inf' → logprob: -3.899592399597168
    3. ''' → logprob: -5.524592399597168
    4. 'nan' → logprob: -11.774592399597168
    5. ''ins' → logprob: -11.899592399597168
    6. ''inc' → logprob: -12.274592399597168
    7. 'in' → logprob: -12.524592399597168
    8. ''int' → logprob: -12.774592399597168
    9. ''un' → logprob: -13.024592399597168
    10. ''ind' → logprob: -13.274592399597168

Token 550: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006749358493834734
    2. '')' → logprob: -5.006749153137207
    3. '()' → logprob: -11.381749153137207
    4. ' )' → logprob: -12.006749153137207
    5. '())' → logprob: -12.506749153137207
    6. '")' → logprob: -12.756749153137207
    7. '))' → logprob: -13.381749153137207
    8. ')
' → logprob: -13.631749153137207
    9. '<|end|>' → logprob: -13.631749153137207
    10. '`)' → logprob: -14.006749153137207

Token 551: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: '---' (ID: 10356)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17196494340896606
    2. 'def' → logprob: -2.0469648838043213
    3. '_' → logprob: -5.1719651222229
    4. 'import' → logprob: -5.7969651222229
    5. 'from' → logprob: -6.1719651222229
    6. ')' → logprob: -6.2969651222229
    7. '__' → logprob: -6.9219651222229
    8. '
' → logprob: -7.0469651222229
    9. 'class' → logprob: -7.1719651222229
    10. '"""' → logprob: -7.2969651222229

Token 553: ' dict' (ID: 11878)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6199854016304016
    2. 'math' → logprob: -2.119985342025757
    3. 'def' → logprob: -2.994985342025757
    4. 'INF' → logprob: -3.369985342025757
    5. 'inf' → logprob: -3.744985342025757
    6. 'factor' → logprob: -3.994985342025757
    7. 'range' → logprob: -4.119985580444336
    8. '__' → logprob: -4.369985580444336
    9. 'main' → logprob: -4.369985580444336
    10. 'g' → logprob: -4.494985580444336

Token 554: ' for' (ID: 395)
  Prédit: '_get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_get' → logprob: -0.6201518177986145
    2. '.setdefault' → logprob: -1.6201517581939697
    3. 'get' → logprob: -2.7451517581939697
    4. '_update' → logprob: -2.8701517581939697
    5. '_merge' → logprob: -3.2451517581939697
    6. '.get' → logprob: -4.370151996612549
    7. ' get' → logprob: -4.620151996612549
    8. 'update' → logprob: -4.870151996612549
    9. '_items' → logprob: -4.995151996612549
    10. '.update' → logprob: -5.120151996612549

Token 555: ' ---
' (ID: 128468)
  Prédit: ' counting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counting' → logprob: -1.414862036705017
    2. ' defaultdict' → logprob: -2.0398621559143066
    3. 'default' → logprob: -2.1648621559143066
    4. 'set' → logprob: -2.7898621559143066
    5. 'list' → logprob: -2.9148621559143066
    6. 'count' → logprob: -3.0398621559143066
    7. ' def' → logprob: -3.4148621559143066
    8. 'counter' → logprob: -3.4148621559143066
    9. ' counter' → logprob: -3.5398621559143066
    10. 'int' → logprob: -3.5398621559143066

Token 556: 'dict' (ID: 20993)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0039280797354876995
    2. 'dict' → logprob: -6.878928184509277
    3. 'dd' → logprob: -7.128928184509277
    4. ' def' → logprob: -7.253928184509277
    5. 'get' → logprob: -7.503928184509277
    6. 'class' → logprob: -8.253928184509277
    7. 'for' → logprob: -9.253928184509277
    8. 'lambda' → logprob: -9.503928184509277
    9. 'keys' → logprob: -9.628928184509277
    10. 'd' → logprob: -9.753928184509277

Token 557: '_iter' (ID: 27043)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3476182222366333
    2. '_' → logprob: -1.4726182222366333
    3. '_items' → logprob: -1.7226182222366333
    4. '=' → logprob: -2.8476181030273438
    5. '_com' → logprob: -3.0976181030273438
    6. 's' → logprob: -3.0976181030273438
    7. '_comp' → logprob: -3.2226181030273438
    8. '(' → logprob: -3.7226181030273438
    9. '.setdefault' → logprob: -3.7226181030273438
    10. '_iterator' → logprob: -4.097618103027344

Token 558: '_print' (ID: 31509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28360721468925476
    2. '=' → logprob: -1.7836072444915771
    3. 'items' → logprob: -2.783607244491577
    4. '=lambda' → logprob: -4.533607006072998
    5. '_items' → logprob: -5.408607006072998
    6. 'ator' → logprob: -7.033607006072998
    7. 'keys' → logprob: -8.283607482910156
    8. 'able' → logprob: -8.658607482910156
    9. 'item' → logprob: -8.783607482910156
    10. 'def' → logprob: -9.283607482910156

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2528761029243469
    2. '=' → logprob: -1.5028760433197021
    3. '=lambda' → logprob: -7.377876281738281
    4. 'd' → logprob: -9.127876281738281
    5. 'def' → logprob: -10.502876281738281
    6. '(d' → logprob: -10.752876281738281
    7. 'items' → logprob: -10.877876281738281
    8. 's' → logprob: -11.002876281738281
    9. '(lambda' → logprob: -11.002876281738281
    10. '=(' → logprob: -11.502876281738281

Token 560: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05093000829219818
    2. '(lambda' → logprob: -3.3009300231933594
    3. ' lambda' → logprob: -4.550930023193359
    4. 'def' → logprob: -6.300930023193359
    5. '=lambda' → logprob: -7.925930023193359
    6. '   ' → logprob: -11.42593002319336
    7. '```' → logprob: -11.67593002319336
    8. ' def' → logprob: -11.92593002319336
    9. '  ' → logprob: -12.05093002319336
    10. ' =' → logprob: -12.05093002319336

Token 561: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14320111274719238
    2. ' d' → logprob: -2.0182011127471924
    3. 'dict' → logprob: -8.643200874328613
    4. 'dd' → logprob: -8.768200874328613
    5. 'dic' → logprob: -9.643200874328613
    6. 'D' → logprob: -10.768200874328613
    7. ' dic' → logprob: -11.018200874328613
    8. '(d' → logprob: -11.018200874328613
    9. ' dd' → logprob: -11.018200874328613
    10. 'x' → logprob: -11.518200874328613

Token 562: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3289896249771118
    2. ',' → logprob: -2.0789895057678223
    3. ',d' → logprob: -2.5789895057678223
    4. ' :' → logprob: -2.7039895057678223
    5. '(d' → logprob: -5.453989505767822
    6. ' d' → logprob: -5.828989505767822
    7. 'd' → logprob: -6.078989505767822
    8. ':d' → logprob: -6.953989505767822
    9. 'items' → logprob: -7.828989505767822
    10. ':
' → logprob: -8.57898998260498

Token 563: ' list' (ID: 1562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06460310518741608
    2. '[' → logprob: -3.189603090286255
    3. '"\' → logprob: -4.314603328704834
    4. ''\' → logprob: -5.189603328704834
    5. '(print' → logprob: -6.689603328704834
    6. '[(' → logprob: -8.064602851867676
    7. '{' → logprob: -8.814602851867676
    8. '"' → logprob: -8.939602851867676
    9. ' print' → logprob: -9.064602851867676
    10. 'for' → logprob: -9.189602851867676

Token 564: '(map' (ID: 16946)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.020027900114655495
    2. '(map' → logprob: -4.270028114318848
    3. '((' → logprob: -5.520028114318848
    4. '(' → logprob: -6.520028114318848
    5. 'd' → logprob: -8.645028114318848
    6. '(k' → logprob: -9.520028114318848
    7. '(print' → logprob: -9.895028114318848
    8. '(zip' → logprob: -10.770028114318848
    9. '(
' → logprob: -11.770028114318848
    10. '(filter' → logprob: -11.770028114318848

Token 565: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.202541321516037
    2. '(print' → logprob: -1.7025413513183594
    3. 'print' → logprob: -7.077541351318359
    4. '(' → logprob: -8.20254135131836
    5. 'lambda' → logprob: -12.45254135131836
    6. ' (' → logprob: -13.20254135131836
    7. '```' → logprob: -13.57754135131836
    8. '((' → logprob: -13.82754135131836
    9. '(
' → logprob: -14.20254135131836
    10. '   ' → logprob: -14.57754135131836

Token 566: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.39493581652641296
    2. 'k' → logprob: -1.2699358463287354
    3. 'kv' → logprob: -3.5199358463287354
    4. 'print' → logprob: -4.269935607910156
    5. '(lambda' → logprob: -7.394935607910156
    6. 'x' → logprob: -8.019935607910156
    7. ' lambda' → logprob: -8.019935607910156
    8. 'item' → logprob: -9.269935607910156
    9. '_:' → logprob: -9.269935607910156
    10. '```' → logprob: -9.394935607910156

Token 567: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011667684884741902
    2. ' :' → logprob: -7.751166820526123
    3. 'd' → logprob: -7.876166820526123
    4. 't' → logprob: -9.376166343688965
    5. ':t' → logprob: -9.376166343688965
    6. 'print' → logprob: -9.626166343688965
    7. ':
' → logprob: -10.626166343688965
    8. ':d' → logprob: -10.751166343688965
    9. ':(' → logprob: -11.126166343688965
    10. 'f' → logprob: -11.376166343688965

Token 568: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001204519416205585
    2. ' print' → logprob: -7.126204490661621
    3. '(print' → logprob: -8.251204490661621
    4. '   ' → logprob: -9.751204490661621
    5. 'lambda' → logprob: -10.376204490661621
    6. '(lambda' → logprob: -10.751204490661621
    7. ' ' → logprob: -11.251204490661621
    8. 'sys' → logprob: -12.501204490661621
    9. '(' → logprob: -13.001204490661621
    10. '#print' → logprob: -13.001204490661621

Token 569: '(t' (ID: 2025)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.14308074116706848
    2. '(t' → logprob: -2.143080711364746
    3. '('{}' → logprob: -5.268080711364746
    4. '(' → logprob: -5.518080711364746
    5. '("{}' → logprob: -5.518080711364746
    6. '(str' → logprob: -6.268080711364746
    7. '(*' → logprob: -7.143080711364746
    8. '("{' → logprob: -9.893080711364746
    9. '((' → logprob: -10.768080711364746
    10. '('' → logprob: -10.768080711364746

Token 570: '[' (ID: 58)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9214007258415222
    2. '(' → logprob: -1.546400785446167
    3. '(t' → logprob: -2.296400785446167
    4. '[' → logprob: -2.921400785446167
    5. ')' → logprob: -3.421400785446167
    6. '),' → logprob: -3.671400785446167
    7. '()))' → logprob: -3.796400785446167
    8. ',' → logprob: -3.796400785446167
    9. '(f' → logprob: -3.921400785446167
    10. '(*' → logprob: -4.171400547027588

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02826548181474209
    2. 't' → logprob: -4.403265476226807
    3. ')' → logprob: -5.153265476226807
    4. '))' → logprob: -5.778265476226807
    5. '),' → logprob: -6.278265476226807
    6. 'd' → logprob: -7.153265476226807
    7. '(' → logprob: -7.153265476226807
    8. ' t' → logprob: -7.528265476226807
    9. ' ' → logprob: -7.528265476226807
    10. ')),' → logprob: -7.528265476226807

Token 572: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016176922945305705
    2. ',d' → logprob: -7.376617908477783
    3. ',t' → logprob: -7.751617908477783
    4. ' ,' → logprob: -8.376617431640625
    5. '),' → logprob: -8.876617431640625
    6. ')' → logprob: -9.751617431640625
    7. ',end' → logprob: -10.251617431640625
    8. ',
' → logprob: -10.376617431640625
    9. ',",' → logprob: -11.251617431640625
    10. ',),' → logprob: -11.626617431640625

Token 573: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001172129064798355
    2. ' t' → logprob: -6.751172065734863
    3. 'd' → logprob: -13.501172065734863
    4. ' ' → logprob: -15.126172065734863
    5. '(t' → logprob: -16.75117301940918
    6. ')' → logprob: -16.75117301940918
    7. ' d' → logprob: -17.25117301940918
    8. '	t' → logprob: -17.25117301940918
    9. 'end' → logprob: -17.87617301940918
    10. '  ' → logprob: -17.87617301940918

Token 574: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005117177031934261
    2. ',t' → logprob: -6.380116939544678
    3. ',d' → logprob: -7.005116939544678
    4. ')' → logprob: -7.005116939544678
    5. '1' → logprob: -7.755116939544678
    6. ' ,' → logprob: -7.755116939544678
    7. '))' → logprob: -8.505117416381836
    8. '[' → logprob: -9.005117416381836
    9. '),' → logprob: -9.130117416381836
    10. ',end' → logprob: -9.755117416381836

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.959636033978313e-05
    2. ' ' → logprob: -9.375089645385742
    3. ')' → logprob: -12.625089645385742
    4. '])' → logprob: -14.250089645385742
    5. '  ' → logprob: -14.750089645385742
    6. '   ' → logprob: -16.000089645385742
    7. ',' → logprob: -17.250089645385742
    8. '    ' → logprob: -17.375089645385742
    9. '<|end|>' → logprob: -17.375089645385742
    10. ')])' → logprob: -17.500089645385742

Token 576: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005287003703415394
    2. ')' → logprob: -5.255287170410156
    3. ')))' → logprob: -11.005287170410156
    4. ' ),' → logprob: -11.630287170410156
    5. ',' → logprob: -11.755287170410156
    6. ')),' → logprob: -12.130287170410156
    7. '))' → logprob: -12.380287170410156
    8. ' ' → logprob: -13.005287170410156
    9. '   ' → logprob: -13.380287170410156
    10. ',),' → logprob: -13.630287170410156

Token 577: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011028258595615625
    2. ' d' → logprob: -7.251102924346924
    3. 'list' → logprob: -8.001102447509766
    4. 'dd' → logprob: -10.001102447509766
    5. ' list' → logprob: -12.501102447509766
    6. ')' → logprob: -13.251102447509766
    7. 'dict' → logprob: -13.251102447509766
    8. ')d' → logprob: -13.251102447509766
    9. 'sorted' → logprob: -14.251102447509766
    10. '[' → logprob: -14.626102447509766

Token 578: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.000837384897749871
    2. 'items' → logprob: -7.750837326049805
    3. '.' → logprob: -8.250837326049805
    4. '))' → logprob: -9.500837326049805
    5. '.iteritems' → logprob: -10.000837326049805
    6. ')' → logprob: -11.125837326049805
    7. ')))' → logprob: -13.125837326049805
    8. '.Items' → logprob: -13.250837326049805
    9. ' items' → logprob: -13.500837326049805
    10. ' .' → logprob: -13.625837326049805

Token 579: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028243225067853928
    2. '))' → logprob: -3.65324330329895
    3. '()' → logprob: -6.403243064880371
    4. '())' → logprob: -8.403243064880371
    5. '()))
' → logprob: -10.028243064880371
    6. '(),' → logprob: -12.153243064880371
    7. ')' → logprob: -12.778243064880371
    8. '()))

' → logprob: -13.028243064880371
    9. '()));' → logprob: -13.153243064880371
    10. '(' → logprob: -13.528243064880371

Token 580: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: 'Int' (ID: 2471)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009306333377026021
    2. '(' → logprob: -7.2509307861328125
    3. '()
' → logprob: -9.375930786132812
    4. '<|end|>' → logprob: -10.000930786132812
    5. '().' → logprob: -10.125930786132812
    6. '()

' → logprob: -11.500930786132812
    7. '()<' → logprob: -12.250930786132812
    8. ':' → logprob: -12.375930786132812
    9. ')' → logprob: -12.375930786132812
    10. '())' → logprob: -12.750930786132812

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5781949162483215
    2. ' =' → logprob: -0.8281949162483215
    3. ' ' → logprob: -6.828195095062256
    4. '()' → logprob: -7.703195095062256
    5. '=int' → logprob: -8.078194618225098
    6. '＝' → logprob: -9.203194618225098
    7. 's' → logprob: -9.203194618225098
    8. 'int' → logprob: -9.453194618225098
    9. '  ' → logprob: -10.078194618225098
    10. '=lambda' → logprob: -10.828194618225098

Token 583: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06372301280498505
    2. ' lambda' → logprob: -3.313723087310791
    3. 'int' → logprob: -3.688723087310791
    4. '(lambda' → logprob: -8.063722610473633
    5. ' int' → logprob: -10.438722610473633
    6. '=lambda' → logprob: -13.188722610473633
    7. '(int' → logprob: -13.563722610473633
    8. ' ' → logprob: -13.688722610473633
    9. 'lam' → logprob: -14.188722610473633
    10. '0' → logprob: -14.813722610473633

Token 584: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017367299646139145
    2. '():' → logprob: -4.517367362976074
    3. 'int' → logprob: -5.142367362976074
    4. '(int' → logprob: -8.017367362976074
    5. ' ()' → logprob: -10.142367362976074
    6. ':' → logprob: -10.517367362976074
    7. '()>' → logprob: -11.142367362976074
    8. '(' → logprob: -11.767367362976074
    9. '()=>' → logprob: -11.767367362976074
    10. ':int' → logprob: -12.267367362976074

Token 585: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007101670489646494
    2. ' int' → logprob: -7.2507100105285645
    3. '(int' → logprob: -16.500709533691406
    4. '	int' → logprob: -16.500709533691406
    5. 'ints' → logprob: -17.125709533691406
    6. 'in' → logprob: -17.750709533691406
    7. 'i' → logprob: -18.000709533691406
    8. ' ' → logprob: -18.750709533691406
    9. '[int' → logprob: -18.875709533691406
    10. '<int' → logprob: -19.000709533691406

Token 586: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.082895273109898e-05
    2. 'input' → logprob: -10.875030517578125
    3. '()' → logprob: -11.875030517578125
    4. '(' → logprob: -12.250030517578125
    5. ' input' → logprob: -17.500030517578125
    6. ' (' → logprob: -18.000030517578125
    7. '(sys' → logprob: -18.125030517578125
    8. '((' → logprob: -18.750030517578125
    9. '(in' → logprob: -19.000030517578125
    10. '(inp' → logprob: -19.125030517578125

Token 587: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029069632291793823
    2. '().' → logprob: -4.029069423675537
    3. '()' → logprob: -4.529069423675537
    4. '(' → logprob: -10.279069900512695
    5. ')' → logprob: -10.904069900512695
    6. ' ())' → logprob: -11.779069900512695
    7. '()[' → logprob: -13.029069900512695
    8. '())
' → logprob: -13.279069900512695
    9. '();)' → logprob: -13.654069900512695
    10. '()]' → logprob: -13.654069900512695

Token 588: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006660192273557186
    2. '<|end|>' → logprob: -5.506659984588623
    3. 'def' → logprob: -7.006659984588623
    4. '()' → logprob: -7.756659984588623
    5. '<|end|>' → logprob: -8.131660461425781
    6. ')' → logprob: -8.131660461425781
    7. ' input' → logprob: -8.756660461425781
    8. 'int' → logprob: -8.881660461425781
    9. '(input' → logprob: -9.131660461425781
    10. '#' → logprob: -10.006660461425781

Token 589: 'Map' (ID: 2307)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.46465903520584106
    2. '()' → logprob: -1.2146589756011963
    3. 'Str' → logprob: -2.9646589756011963
    4. '_str' → logprob: -4.964659214019775
    5. 'List' → logprob: -5.089659214019775
    6. ' ' → logprob: -5.839659214019775
    7. 'Line' → logprob: -6.589659214019775
    8. ' =' → logprob: -7.089659214019775
    9. '()>' → logprob: -7.089659214019775
    10. '_list' → logprob: -7.464659214019775

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.478617399930954
    2. '()' → logprob: -1.9786174297332764
    3. ' =' → logprob: -2.2286174297332764
    4. '(lambda' → logprob: -2.8536174297332764
    5. '=lambda' → logprob: -2.9786174297332764
    6. '(' → logprob: -3.8536174297332764
    7. 'lambda' → logprob: -6.228617191314697
    8. 'map' → logprob: -7.228617191314697
    9. '(int' → logprob: -7.478617191314697
    10. ':' → logprob: -7.728617191314697

Token 591: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.005401307251304388
    2. ' lambda' → logprob: -5.255401134490967
    3. '(lambda' → logprob: -8.880401611328125
    4. 'map' → logprob: -10.505401611328125
    5. '=lambda' → logprob: -14.630401611328125
    6. 'int' → logprob: -15.880401611328125
    7. '   ' → logprob: -16.005401611328125
    8. 'list' → logprob: -16.505401611328125
    9. ' map' → logprob: -16.755401611328125
    10. '    ' → logprob: -17.005401611328125

Token 592: ':' (ID: 25)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.18904687464237213
    2. 'lambda' → logprob: -2.189046859741211
    3. 'int' → logprob: -2.814046859741211
    4. 'list' → logprob: -9.689046859741211
    5. '(int' → logprob: -9.939046859741211
    6. '(lambda' → logprob: -10.189046859741211
    7. '   ' → logprob: -10.689046859741211
    8. ':' → logprob: -10.689046859741211
    9. ' map' → logprob: -10.814046859741211
    10. 'tuple' → logprob: -11.064046859741211

Token 593: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -4.584861744660884e-05
    2. ' map' → logprob: -10.250045776367188
    3. 'list' → logprob: -11.500045776367188
    4. 'tuple' → logprob: -15.500045776367188
    5. 'lambda' → logprob: -16.250045776367188
    6. '	map' → logprob: -17.750045776367188
    7. 'm' → logprob: -19.250045776367188
    8. '   ' → logprob: -19.375045776367188
    9. '(map' → logprob: -19.500045776367188
    10. '  ' → logprob: -19.875045776367188

Token 594: 'lambda' (ID: 35280)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0004297155828680843
    2. 'int' → logprob: -8.1254301071167
    3. ' map' → logprob: -9.0004301071167
    4. 'lambda' → logprob: -12.0004301071167
    5. '	map' → logprob: -13.6254301071167
    6. 'm' → logprob: -13.7504301071167
    7. 'mp' → logprob: -15.1254301071167
    8. '
' → logprob: -15.1254301071167
    9. ')' → logprob: -15.2504301071167
    10. ' ' → logprob: -15.5004301071167

Token 595: ' z' (ID: 579)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0020377261098474264
    2. ' map' → logprob: -6.752037525177002
    3. 'list' → logprob: -7.502037525177002
    4. 'int' → logprob: -8.50203800201416
    5. 'lambda' → logprob: -10.12703800201416
    6. ':' → logprob: -10.50203800201416
    7. 'm' → logprob: -10.62703800201416
    8. 'x' → logprob: -12.25203800201416
    9. 'tuple' → logprob: -12.75203800201416
    10. 'a' → logprob: -13.12703800201416

Token 596: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021622052416205406
    2. ':list' → logprob: -3.8966219425201416
    3. 'list' → logprob: -7.896622180938721
    4. '=' → logprob: -8.896621704101562
    5. 'map' → logprob: -9.021621704101562
    6. ' :' → logprob: -9.146621704101562
    7. '=list' → logprob: -9.271621704101562
    8. ':[' → logprob: -9.646621704101562
    9. ':int' → logprob: -10.021621704101562
    10. ':z' → logprob: -10.146621704101562

Token 597: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.33200064301490784
    2. 'list' → logprob: -1.3320006132125854
    3. 'tuple' → logprob: -4.082000732421875
    4. 'z' → logprob: -6.832000732421875
    5. '[z' → logprob: -8.707000732421875
    6. ' map' → logprob: -9.082000732421875
    7. '[' → logprob: -9.457000732421875
    8. '[int' → logprob: -9.582000732421875
    9. 'zip' → logprob: -10.082000732421875
    10. 'int' → logprob: -10.082000732421875

Token 598: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.0792357921600342
    2. '*' → logprob: -1.3292357921600342
    3. 'int' → logprob: -1.5792357921600342
    4. '[int' → logprob: -2.454235792160034
    5. 'list' → logprob: -2.954235792160034
    6. '*z' → logprob: -3.329235792160034
    7. 'z' → logprob: -5.079236030578613
    8. '[z' → logprob: -5.829236030578613
    9. '*[' → logprob: -6.454236030578613
    10. 'tuple' → logprob: -7.204236030578613

Token 599: '(w' (ID: 7420)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.14158287644386292
    2. 'z' → logprob: -2.64158296585083
    3. '(x' → logprob: -3.26658296585083
    4. '(*' → logprob: -5.39158296585083
    5. '(next' → logprob: -5.64158296585083
    6. 'x' → logprob: -6.14158296585083
    7. 'list' → logprob: -6.26658296585083
    8. '(i' → logprob: -6.51658296585083
    9. ')' → logprob: -6.51658296585083
    10. 'next' → logprob: -6.64158296585083

Token 600: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14014719426631927
    2. '(w' → logprob: -2.7651472091674805
    3. 'w' → logprob: -3.0151472091674805
    4. ' for' → logprob: -4.2651472091674805
    5. '(z' → logprob: -5.7651472091674805
    6. 'z' → logprob: -7.5151472091674805
    7. '(x' → logprob: -8.14014720916748
    8. ')' → logprob: -8.51514720916748
    9. 'x' → logprob: -8.89014720916748
    10. 'or' → logprob: -9.76514720916748

Token 601: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026906240731477737
    2. ' for' → logprob: -3.7769062519073486
    3. '(w' → logprob: -5.6519060134887695
    4. '()' → logprob: -9.27690601348877
    5. 'w' → logprob: -10.65190601348877
    6. '(z' → logprob: -11.65190601348877
    7. '	for' → logprob: -12.40190601348877
    8. '
' → logprob: -12.52690601348877
    9. ')' → logprob: -12.77690601348877
    10. '(x' → logprob: -13.15190601348877

Token 602: ' w' (ID: 286)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.010469351895153522
    2. 'w' → logprob: -4.635469436645508
    3. ' z' → logprob: -7.260469436645508
    4. ' w' → logprob: -11.635469436645508
    5. '	z' → logprob: -14.385469436645508
    6. ' in' → logprob: -15.385469436645508
    7. ' ' → logprob: -15.635469436645508
    8. ')' → logprob: -15.885469436645508
    9. '(z' → logprob: -16.135469436645508
    10. ',z' → logprob: -16.885469436645508

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14150360226631165
    2. 'in' → logprob: -2.1415035724639893
    3. 'z' → logprob: -4.266503810882568
    4. ' z' → logprob: -7.766503810882568
    5. ')' → logprob: -12.01650333404541
    6. ' ' → logprob: -12.76650333404541
    7. ',z' → logprob: -13.64150333404541
    8. 'w' → logprob: -14.26650333404541
    9. 'x' → logprob: -14.26650333404541
    10. ',' → logprob: -14.26650333404541

Token 604: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -4.723352049040841e-06
    2. ' z' → logprob: -13.000004768371582
    3. 'input' → logprob: -13.125004768371582
    4. 'sys' → logprob: -14.750004768371582
    5. ' ' → logprob: -17.750003814697266
    6. '	z' → logprob: -18.250003814697266
    7. 'x' → logprob: -19.750003814697266
    8. '
' → logprob: -19.750003814697266
    9. '(z' → logprob: -19.750003814697266
    10. ')' → logprob: -19.875003814697266

Token 605: '))(' (ID: 72297)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6373721957206726
    2. 'input' → logprob: -1.0123722553253174
    3. '().' → logprob: -2.2623722553253174
    4. '(sys' → logprob: -6.512372016906738
    5. ' input' → logprob: -7.637372016906738
    6. '=input' → logprob: -8.012372016906738
    7. '()' → logprob: -8.137372016906738
    8. 'split' → logprob: -8.387372016906738
    9. 'sys' → logprob: -8.512372016906738
    10. '())' → logprob: -8.762372016906738

Token 606: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020652047533076257
    2. ' input' → logprob: -8.50020694732666
    3. 'list' → logprob: -13.25020694732666
    4. 'sys' → logprob: -14.50020694732666
    5. '(input' → logprob: -15.00020694732666
    6. '[input' → logprob: -16.000205993652344
    7. 'map' → logprob: -17.000205993652344
    8. '<input' → logprob: -17.250205993652344
    9. ' ' → logprob: -17.750205993652344
    10. '
' → logprob: -17.750205993652344

Token 607: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -19.375003814697266
    4. '()[' → logprob: -19.750003814697266
    5. '())' → logprob: -20.750003814697266
    6. '().__' → logprob: -20.875003814697266
    7. '.strip' → logprob: -21.000003814697266
    8. '()
' → logprob: -21.125003814697266
    9. '()))' → logprob: -21.250003814697266
    10. '(' → logprob: -21.375003814697266

Token 608: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2131377011537552
    2. 'split' → logprob: -1.7131377458572388
    3. 'rstrip' → logprob: -4.463137626647949
    4. ' strip' → logprob: -9.33813762664795
    5. '().' → logprob: -10.58813762664795
    6. ' split' → logprob: -11.08813762664795
    7. '.strip' → logprob: -14.21313762664795
    8. '(strip' → logprob: -15.33813762664795
    9. 'spl' → logprob: -15.71313762664795
    10. '-strip' → logprob: -16.463138580322266

Token 609: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001136285369284451
    2. ')' → logprob: -7.501136302947998
    3. '()' → logprob: -7.501136302947998
    4. '())
' → logprob: -10.87613582611084
    5. ' ())' → logprob: -12.12613582611084
    6. '(' → logprob: -12.50113582611084
    7. '()))' → logprob: -13.62613582611084
    8. '())

' → logprob: -15.12613582611084
    9. '();)' → logprob: -15.25113582611084
    10. '()]' → logprob: -15.62613582611084

Token 610: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001676852349191904
    2. '
' → logprob: -7.0016770362854
    3. ')' → logprob: -8.376676559448242
    4. '()' → logprob: -8.501676559448242
    5. ' input' → logprob: -9.876676559448242
    6. '(input' → logprob: -10.376676559448242
    7. 'def' → logprob: -10.376676559448242
    8. '_input' → logprob: -10.501676559448242
    9. '<|end|>' → logprob: -10.501676559448242
    10. 'newline' → logprob: -10.876676559448242

Token 611: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.003434000303968787
    2. '_list' → logprob: -6.503434181213379
    3. 'Line' → logprob: -6.503434181213379
    4. 'Lst' → logprob: -8.753434181213379
    5. 'Str' → logprob: -9.128434181213379
    6. 'list' → logprob: -10.003434181213379
    7. 'Array' → logprob: -10.128434181213379
    8. 'Lines' → logprob: -10.503434181213379
    9. ' =' → logprob: -11.628434181213379
    10. 's' → logprob: -11.753434181213379

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029886556789278984
    2. ' =' → logprob: -3.529886484146118
    3. '=lambda' → logprob: -8.904886245727539
    4. '＝' → logprob: -15.529886245727539
    5. '=input' → logprob: -16.15488624572754
    6. 'lambda' → logprob: -16.40488624572754
    7. '=[]' → logprob: -17.77988624572754
    8. 's' → logprob: -17.90488624572754
    9. ' ' → logprob: -18.52988624572754
    10. ':' → logprob: -18.65488624572754

Token 613: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.023941397666931152
    2. ' lambda' → logprob: -3.7739415168762207
    3. '(lambda' → logprob: -7.273941516876221
    4. 'list' → logprob: -13.648941040039062
    5. '    ' → logprob: -14.648941040039062
    6. '   ' → logprob: -15.398941040039062
    7. '=lambda' → logprob: -15.523941040039062
    8. ' ' → logprob: -15.773941040039062
    9. 'input' → logprob: -16.898941040039062
    10. '     ' → logprob: -17.148941040039062

Token 614: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10993284732103348
    2. 'lambda' → logprob: -2.9849328994750977
    3. ' lambda' → logprob: -3.3599328994750977
    4. '():' → logprob: -4.359932899475098
    5. ' :' → logprob: -5.984932899475098
    6. '(lambda' → logprob: -6.234932899475098
    7. ':list' → logprob: -7.234932899475098
    8. 'list' → logprob: -7.484932899475098
    9. ' list' → logprob: -9.609932899475098
    10. '=lambda' → logprob: -9.984932899475098

Token 615: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01841365359723568
    2. ' list' → logprob: -4.018413543701172
    3. '[list' → logprob: -8.268413543701172
    4. '[' → logprob: -12.768413543701172
    5. '[int' → logprob: -12.893413543701172
    6. ' [' → logprob: -14.018413543701172
    7. '[input' → logprob: -14.143413543701172
    8. '(list' → logprob: -15.143413543701172
    9. 'map' → logprob: -17.393413543701172
    10. '	list' → logprob: -17.643413543701172

Token 616: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002390594017924741
    2. '(input' → logprob: -8.500239372253418
    3. 'map' → logprob: -10.750239372253418
    4. '(int' → logprob: -11.625239372253418
    5. '(' → logprob: -12.250239372253418
    6. 'input' → logprob: -15.875239372253418
    7. '()' → logprob: -16.0002384185791
    8. ' map' → logprob: -16.6252384185791
    9. '_map' → logprob: -17.3752384185791
    10. '	map' → logprob: -17.6252384185791

Token 617: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011711753904819489
    2. 'int' → logprob: -6.751171112060547
    3. ' int' → logprob: -14.751171112060547
    4. '=int' → logprob: -16.001171112060547
    5. '<int' → logprob: -16.001171112060547
    6. '(' → logprob: -16.126171112060547
    7. '	int' → logprob: -16.376171112060547
    8. '(lambda' → logprob: -16.876171112060547
    9. ':int' → logprob: -17.126171112060547
    10. '[int' → logprob: -17.376171112060547

Token 618: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.052666954696178436
    2. ',' → logprob: -3.0526669025421143
    3. '(input' → logprob: -5.552667140960693
    4. 'input' → logprob: -8.677666664123535
    5. ',(' → logprob: -11.927666664123535
    6. ' ,' → logprob: -12.052666664123535
    7. ' input' → logprob: -12.427666664123535
    8. ',int' → logprob: -12.552666664123535
    9. '=input' → logprob: -13.677666664123535
    10. ' (' → logprob: -13.802666664123535

Token 619: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001505578518845141
    2. ' input' → logprob: -6.501505374908447
    3. 'lambda' → logprob: -12.876505851745605
    4. ' ' → logprob: -15.751505851745605
    5. '<input' → logprob: -15.876505851745605
    6. 'sys' → logprob: -16.12650489807129
    7. 'list' → logprob: -16.37650489807129
    8. '(input' → logprob: -16.62650489807129
    9. ')' → logprob: -16.75150489807129
    10. '	input' → logprob: -17.00150489807129

Token 620: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3441568911075592
    2. '))' → logprob: -1.7191568613052368
    3. '()))' → logprob: -2.2191569805145264
    4. '()' → logprob: -5.844156742095947
    5. '.' → logprob: -9.469157218933105
    6. '()));' → logprob: -9.469157218933105
    7. 'input' → logprob: -9.844157218933105
    8. ')' → logprob: -10.219157218933105
    9. '())' → logprob: -10.219157218933105
    10. ',' → logprob: -11.094157218933105

Token 621: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019307781476527452
    2. 'strip' → logprob: -6.2519307136535645
    3. 'rstrip' → logprob: -13.876931190490723
    4. ' split' → logprob: -15.001931190490723
    5. 'spl' → logprob: -15.001931190490723
    6. ')' → logprob: -15.751931190490723
    7. 'plit' → logprob: -16.376930236816406
    8. '(split' → logprob: -16.376930236816406
    9. 'read' → logprob: -16.626930236816406
    10. 'next' → logprob: -17.376930236816406

Token 622: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06358072906732559
    2. '))' → logprob: -2.8135807514190674
    3. '()' → logprob: -6.813580513000488
    4. '())' → logprob: -7.688580513000488
    5. '()))
' → logprob: -10.313580513000488
    6. ')' → logprob: -11.188580513000488
    7. '(' → logprob: -12.813580513000488
    8. '()));' → logprob: -13.188580513000488
    9. ' ))' → logprob: -14.438580513000488
    10. '()))

' → logprob: -14.438580513000488

Token 623: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3569616675376892
    2. '<|end|>' → logprob: -1.731961727142334
    3. 'print' → logprob: -3.481961727142334
    4. 'input' → logprob: -3.731961727142334
    5. '#' → logprob: -3.856961727142334
    6. 'output' → logprob: -4.481961727142334
    7. ')' → logprob: -4.606961727142334
    8. '<|end|>' → logprob: -5.606961727142334
    9. 'from' → logprob: -5.731961727142334
    10. 'class' → logprob: -5.731961727142334

Token 624: 'Str' (ID: 3504)
  Prédit: 'Str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Str' → logprob: -0.06893795728683472
    2. 'List' → logprob: -3.6939380168914795
    3. 'Strip' → logprob: -4.4439377784729
    4. '()' → logprob: -4.5689377784729
    5. '_str' → logprob: -4.5689377784729
    6. 'Split' → logprob: -6.1939377784729
    7. 'String' → logprob: -6.1939377784729
    8. '().' → logprob: -6.3189377784729
    9. 'Line' → logprob: -7.8189377784729
    10. ' =' → logprob: -7.9439377784729

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932010650634766
    2. ' =' → logprob: -0.6932010650634766
    3. '=lambda' → logprob: -9.943201065063477
    4. '()' → logprob: -12.693201065063477
    5. '＝' → logprob: -14.693201065063477
    6. ')' → logprob: -14.818201065063477
    7. ' ' → logprob: -14.943201065063477
    8. ':' → logprob: -15.318201065063477
    9. '=[]' → logprob: -15.568201065063477
    10. '=input' → logprob: -15.568201065063477

Token 626: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05173655226826668
    2. ' lambda' → logprob: -3.05173659324646
    3. 'input' → logprob: -5.801736354827881
    4. '(lambda' → logprob: -9.301736831665039
    5. ' input' → logprob: -10.551736831665039
    6. 'str' → logprob: -13.676736831665039
    7. '=lambda' → logprob: -14.051736831665039
    8. '   ' → logprob: -14.176736831665039
    9. ' ' → logprob: -14.801736831665039
    10. 'lam' → logprob: -15.176736831665039

Token 627: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06910785287618637
    2. 'input' → logprob: -3.6941077709198
    3. ':' → logprob: -3.8191077709198
    4. 'str' → logprob: -4.694108009338379
    5. '():' → logprob: -4.694108009338379
    6. '()' → logprob: -7.694108009338379
    7. ' lambda' → logprob: -7.944108009338379
    8. '(lambda' → logprob: -7.944108009338379
    9. '=lambda' → logprob: -8.819108009338379
    10. '=input' → logprob: -9.069108009338379

Token 628: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020520923135336488
    2. 'str' → logprob: -8.750205039978027
    3. ' input' → logprob: -10.125205039978027
    4. 'sys' → logprob: -12.250205039978027
    5. 'list' → logprob: -13.375205039978027
    6. '(input' → logprob: -15.625205039978027
    7. 'lambda' → logprob: -15.875205039978027
    8. 'strip' → logprob: -16.750205993652344
    9. '<input' → logprob: -18.375205993652344
    10. 's' → logprob: -18.750205993652344

Token 629: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011055010370910168
    2. '()' → logprob: -4.511054992675781
    3. '.strip' → logprob: -12.511054992675781
    4. '.rstrip' → logprob: -13.136054992675781
    5. '()
' → logprob: -14.511054992675781
    6. 'rstrip' → logprob: -14.886054992675781
    7. 'strip' → logprob: -15.636054992675781
    8. '().__' → logprob: -16.13605499267578
    9. ' ().' → logprob: -16.38605499267578
    10. '(' → logprob: -16.38605499267578

Token 630: '[:-' (ID: 63556)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08509340137243271
    2. '().' → logprob: -2.5850934982299805
    3. '.strip' → logprob: -5.5850934982299805
    4. '.rstrip' → logprob: -6.3350934982299805
    5. 'rstrip' → logprob: -8.08509349822998
    6. '()
' → logprob: -9.33509349822998
    7. '<|end|>' → logprob: -9.83509349822998
    8. 'strip' → logprob: -9.83509349822998
    9. '()\' → logprob: -10.21009349822998
    10. '())' → logprob: -10.83509349822998

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'newline' → logprob: -19.625
    3. '１' → logprob: -19.875
    4. ' ' → logprob: -19.875
    5. '\n' → logprob: -20.5
    6. '
' → logprob: -21.625
    7. '```' → logprob: -21.625
    8. '১' → logprob: -22.875
    9. '۱' → logprob: -23.125
    10. '

' → logprob: -23.375

Token 632: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.088138227118179e-05
    2. '()' → logprob: -10.125070571899414
    3. '<|end|>' → logprob: -11.250070571899414
    4. '())' → logprob: -11.750070571899414
    5. '')' → logprob: -12.125070571899414
    6. ']' → logprob: -13.750070571899414
    7. '#' → logprob: -14.125070571899414
    8. ')
' → logprob: -14.625070571899414
    9. ' )' → logprob: -14.750070571899414
    10. '）' → logprob: -14.875070571899414

Token 633: 'inf' (ID: 22226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2306574285030365
    2. '#' → logprob: -1.7306574583053589
    3. 'print' → logprob: -4.855657577514648
    4. '<|end|>' → logprob: -5.355657577514648
    5. 'class' → logprob: -5.605657577514648
    6. '<|end|>' → logprob: -5.855657577514648
    7. 'import' → logprob: -5.980657577514648
    8. '\n' → logprob: -6.855657577514648
    9. '\' → logprob: -7.105657577514648
    10. '```' → logprob: -7.105657577514648

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014173386618494987
    2. '=' → logprob: -4.26417350769043
    3. ' ' → logprob: -12.38917350769043
    4. '_' → logprob: -13.01417350769043
    5. '＝' → logprob: -13.63917350769043
    6. ',' → logprob: -14.01417350769043
    7. ' =
' → logprob: -14.63917350769043
    8. '  ' → logprob: -15.13917350769043
    9. ' ' → logprob: -16.38917350769043
    10. ':' → logprob: -16.38917350769043

Token 635: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16186590492725372
    2. 'float' → logprob: -1.9118659496307373
    3. '1' → logprob: -6.786865711212158
    4. 'int' → logprob: -8.536866188049316
    5. ' ' → logprob: -9.161866188049316
    6. '100' → logprob: -9.411866188049316
    7. ' float' → logprob: -10.161866188049316
    8. '999' → logprob: -10.786866188049316
    9. '2' → logprob: -11.036866188049316
    10. 'pow' → logprob: -11.411866188049316

Token 636: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.060931745916604996
    2. ''' → logprob: -3.18593168258667
    3. '('' → logprob: -5.56093168258667
    4. ''ex' → logprob: -5.68593168258667
    5. ''ins' → logprob: -6.56093168258667
    6. ''t' → logprob: -6.81093168258667
    7. '"' → logprob: -6.93593168258667
    8. ''import' → logprob: -7.56093168258667
    9. ''any' → logprob: -7.56093168258667
    10. ''act' → logprob: -7.68593168258667

Token 637: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.01867682673037052
    2. ''in' → logprob: -4.3936767578125
    3. ''' → logprob: -5.6436767578125
    4. '"' → logprob: -6.1436767578125
    5. 'in' → logprob: -8.6436767578125
    6. '123' → logprob: -9.5186767578125
    7. 'info' → logprob: -10.1436767578125
    8. '100' → logprob: -10.2686767578125
    9. '64' → logprob: -10.3936767578125
    10. '('' → logprob: -11.2686767578125

Token 638: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009177703177556396
    2. '')' → logprob: -7.000917911529541
    3. ')
' → logprob: -12.125917434692383
    4. '")' → logprob: -14.875917434692383
    5. '()' → logprob: -15.625917434692383
    6. ' )' → logprob: -15.625917434692383
    7. '())' → logprob: -16.375917434692383
    8. ')

' → logprob: -17.000917434692383
    9. ')
' → logprob: -17.000917434692383
    10. '')
' → logprob: -17.125917434692383

Token 639: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38305261731147766
    2. '#' → logprob: -1.3830525875091553
    3. 'n' → logprob: -4.633052825927734
    4. '<|end|>' → logprob: -4.633052825927734
    5. 'inf' → logprob: -5.133052825927734
    6. '0' → logprob: -5.258052825927734
    7. 'class' → logprob: -5.633052825927734
    8. ')' → logprob: -5.758052825927734
    9. '<|end|>' → logprob: -5.758052825927734
    10. 'None' → logprob: -6.133052825927734

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038431596010923386
    2. '=' → logprob: -3.2884316444396973
    3. ' ' → logprob: -8.288431167602539
    4. '<|end|>' → logprob: -9.663431167602539
    5. '_' → logprob: -10.038431167602539
    6. ',' → logprob: -11.163431167602539
    7. ' =
' → logprob: -12.163431167602539
    8. '  ' → logprob: -12.913431167602539
    9. ' =)' → logprob: -13.538431167602539
    10. ' ,' → logprob: -13.663431167602539

Token 641: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011749001714633778
    2. '100' → logprob: -9.375117301940918
    3. ' ' → logprob: -10.625117301940918
    4. '998' → logprob: -12.000117301940918
    5. '1' → logprob: -13.250117301940918
    6. 'int' → logprob: -14.875117301940918
    7. 'pow' → logprob: -17.500118255615234
    8. '(' → logprob: -17.625118255615234
    9. '１０' → logprob: -17.750118255615234
    10. '109' → logprob: -20.375118255615234

Token 642: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.198043699143454e-05
    2. '100' → logprob: -9.500091552734375
    3. '998' → logprob: -11.000091552734375
    4. '1' → logprob: -15.625091552734375
    5. 'int' → logprob: -16.000091552734375
    6. '(' → logprob: -17.000091552734375
    7. ' ' → logprob: -18.000091552734375
    8. '１０' → logprob: -18.000091552734375
    9. 'pow' → logprob: -18.750091552734375
    10. '999' → logprob: -21.000091552734375

Token 643: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12811033427715302
    2. '**' → logprob: -2.128110408782959
    3. '09' → logprob: -6.753110408782959
    4. '000' → logprob: -12.0031099319458
    5. '009' → logprob: -13.3781099319458
    6. '+' → logprob: -13.5031099319458
    7. '*' → logprob: -13.8781099319458
    8. '^' → logprob: -14.2531099319458
    9. '7' → logprob: -14.2531099319458
    10. '```' → logprob: -14.5031099319458

Token 644: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '```' → logprob: -20.375
    4. '９' → logprob: -21.125
    5. '+' → logprob: -22.0
    6. ' ' → logprob: -22.625
    7. '
' → logprob: -23.125
    8. '19' → logprob: -23.625
    9. '10' → logprob: -23.75
    10. '18' → logprob: -24.25

Token 645: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.436450636712834e-05
    2. '7' → logprob: -9.625094413757324
    3. ' +' → logprob: -10.500094413757324
    4. '＋' → logprob: -14.375094413757324
    5. '+
' → logprob: -15.625094413757324
    6. 'plus' → logprob: -18.250093460083008
    7. '```' → logprob: -19.375093460083008
    8. ' plus' → logprob: -19.750093460083008
    9. '
' → logprob: -20.500093460083008
    10. ' ' → logprob: -20.625093460083008

Token 646: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.75
    3. '```' → logprob: -19.625
    4. '７' → logprob: -20.0
    5. '07' → logprob: -20.5
    6. ' ' → logprob: -21.625
    7. '9' → logprob: -22.125
    8. '   ' → logprob: -22.25
    9. '
' → logprob: -22.5
    10. '

' → logprob: -23.0

Token 647: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.125
    3. '７' → logprob: -21.125
    4. '```' → logprob: -21.5
    5. '07' → logprob: -21.875
    6. ' ' → logprob: -22.375
    7. '9' → logprob: -22.5
    8. '

' → logprob: -23.375
    9. '
' → logprob: -23.5
    10. '   ' → logprob: -24.125

Token 648: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7004827857017517
    2. '<|end|>' → logprob: -1.0754828453063965
    3. '
' → logprob: -2.4504828453063965
    4. '#' → logprob: -2.9504828453063965
    5. 'class' → logprob: -4.3254828453063965
    6. '<|end|>' → logprob: -5.3254828453063965
    7. ')' → logprob: -7.2004828453063965
    8. '

' → logprob: -7.3254828453063965
    9. '\n' → logprob: -7.4504828453063965
    10. '```' → logprob: -7.5754828453063965

Token 649: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018205778673291206
    2. 'class' → logprob: -4.143205642700195
    3. '#' → logprob: -6.518205642700195
    4. 'for' → logprob: -9.143205642700195
    5. '<|end|>' → logprob: -9.143205642700195
    6. '<|end|>' → logprob: -9.393205642700195
    7. 'from' → logprob: -9.518205642700195
    8. 'n' → logprob: -9.518205642700195
    9. 'print' → logprob: -10.143205642700195
    10. 'import' → logprob: -10.143205642700195

Token 650: '================================================================================' (ID: 111845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021501412615180016
    2. 'class' → logprob: -4.146501541137695
    3. '#' → logprob: -5.396501541137695
    4. 'from' → logprob: -7.396501541137695
    5. 'import' → logprob: -9.021501541137695
    6. 'n' → logprob: -9.521501541137695
    7. 'for' → logprob: -10.896501541137695
    8. 'print' → logprob: -11.521501541137695
    9. 'a' → logprob: -11.896501541137695
    10. 'N' → logprob: -11.896501541137695

Token 651: '=
' (ID: 31206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02605421468615532
    2. 'class' → logprob: -3.9010541439056396
    3. '#' → logprob: -5.401054382324219
    4. '<|end|>' → logprob: -7.526054382324219
    5. 'from' → logprob: -8.651054382324219
    6. 'import' → logprob: -8.776054382324219
    7. '<|end|>' → logprob: -9.651054382324219
    8. 'print' → logprob: -11.901054382324219
    9. '```' → logprob: -11.901054382324219
    10. ' ' → logprob: -12.151054382324219

Token 652: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017058901488780975
    2. 'class' → logprob: -4.142058849334717
    3. '#' → logprob: -7.267058849334717
    4. 'from' → logprob: -8.642059326171875
    5. 'for' → logprob: -10.017059326171875
    6. 'n' → logprob: -10.142059326171875
    7. 'import' → logprob: -10.517059326171875
    8. 'N' → logprob: -12.142059326171875
    9. 'de' → logprob: -12.267059326171875
    10. 'print' → logprob: -12.517059326171875

Token 653: '================================================================================' (ID: 111845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016570331528782845
    2. 'class' → logprob: -4.641570568084717
    3. '#' → logprob: -5.516570568084717
    4. 'import' → logprob: -6.516570568084717
    5. 'from' → logprob: -6.766570568084717
    6. 'print' → logprob: -10.516570091247559
    7. '#!/' → logprob: -11.016570091247559
    8. 'input' → logprob: -11.016570091247559
    9. ' def' → logprob: -11.266570091247559
    10. '@' → logprob: -11.641570091247559

Token 654: '=

' (ID: 153792)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9058593511581421
    2. 'def' → logprob: -1.030859351158142
    3. '#' → logprob: -1.905859351158142
    4. 'class' → logprob: -2.7808594703674316
    5. '\n' → logprob: -4.405859470367432
    6. '<|end|>' → logprob: -5.405859470367432
    7. '

' → logprob: -5.405859470367432
    8. '\' → logprob: -6.155859470367432
    9. 'import' → logprob: -6.655859470367432
    10. '<|end|>' → logprob: -6.780859470367432

Token 655: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056077707558870316
    2. 'class' → logprob: -2.931077718734741
    3. 'n' → logprob: -7.181077480316162
    4. '#' → logprob: -8.55607795715332
    5. 'for' → logprob: -9.68107795715332
    6. 'from' → logprob: -9.93107795715332
    7. 'import' → logprob: -10.05607795715332
    8. 'N' → logprob: -10.80607795715332
    9. 'print' → logprob: -10.93107795715332
    10. 'd' → logprob: -11.43107795715332

Token 656: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003476412734016776
    2. ' solve' → logprob: -6.378476619720459
    3. 'main' → logprob: -6.378476619720459
    4. 'solve' → logprob: -10.7534761428833
    5. '	main' → logprob: -11.2534761428833
    6. ' binary' → logprob: -11.2534761428833
    7. '_main' → logprob: -12.0034761428833
    8. ' solution' → logprob: -12.2534761428833
    9. ' dfs' → logprob: -12.7534761428833
    10. ' resolve' → logprob: -13.1284761428833

Token 657: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.722539834911004e-05
    2. ' ():' → logprob: -9.500097274780273
    3. '(' → logprob: -11.000097274780273
    4. '()' → logprob: -12.625097274780273
    5. '():
' → logprob: -13.125097274780273
    6. '(:' → logprob: -15.625097274780273
    7. '(":' → logprob: -16.125097274780273
    8. ' (' → logprob: -17.250097274780273
    9. ':' → logprob: -17.375097274780273
    10. ' ()' → logprob: -18.500097274780273

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01423825602978468
    2. '    ' → logprob: -4.389238357543945
    3. '<|end|>' → logprob: -7.639238357543945
    4. '	' → logprob: -8.139238357543945
    5. ' pass' → logprob: -8.639238357543945
    6. '	pass' → logprob: -8.889238357543945
    7. '    
' → logprob: -8.889238357543945
    8. 'n' → logprob: -9.514238357543945
    9. '	n' → logprob: -9.764238357543945
    10. ' n' → logprob: -9.889238357543945

Token 659: ' X' (ID: 2127)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029277458786964417
    2. 'N' → logprob: -4.154277324676514
    3. ' n' → logprob: -4.529277324676514
    4. '   ' → logprob: -6.279277324676514
    5. ' N' → logprob: -8.654277801513672
    6. '	n' → logprob: -9.154277801513672
    7. ' pass' → logprob: -9.404277801513672
    8. '    ' → logprob: -9.529277801513672
    9. 's' → logprob: -11.029277801513672
    10. 'pass' → logprob: -11.154277801513672

Token 660: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19621668756008148
    2. ',' → logprob: -2.321216583251953
    3. '=' → logprob: -2.571216583251953
    4. ' ' → logprob: -6.696216583251953
    5. ' ,' → logprob: -6.696216583251953
    6. '=int' → logprob: -7.696216583251953
    7. '=input' → logprob: -7.696216583251953
    8. '   ' → logprob: -10.696216583251953
    9. ',input' → logprob: -10.696216583251953
    10. ',X' → logprob: -10.821216583251953

Token 661: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.11920306086540222
    2. 'K' → logprob: -2.4942030906677246
    3. 'N' → logprob: -4.119203090667725
    4. 'M' → logprob: -4.994203090667725
    5. 'A' → logprob: -5.369203090667725
    6. 'D' → logprob: -7.369203090667725
    7. 'Q' → logprob: -7.994203090667725
    8. ' Y' → logprob: -8.119202613830566
    9. 'L' → logprob: -8.619202613830566
    10. 'C' → logprob: -8.994202613830566

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890003174543381
    2. ' =' → logprob: -2.578900098800659
    3. ',' → logprob: -11.828900337219238
    4. '=input' → logprob: -12.828900337219238
    5. ' ' → logprob: -15.828900337219238
    6. ')=' → logprob: -16.703899383544922
    7. ')' → logprob: -16.828899383544922
    8. '＝' → logprob: -17.203899383544922
    9. '=list' → logprob: -17.703899383544922
    10. '=int' → logprob: -17.703899383544922

Token 663: ' tuple' (ID: 31311)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0095618963241577
    2. ' input' → logprob: -1.1345618963241577
    3. ' map' → logprob: -1.3845618963241577
    4. 'map' → logprob: -2.7595620155334473
    5. 'list' → logprob: -9.259561538696289
    6. ' list' → logprob: -9.384561538696289
    7. ' ' → logprob: -10.509561538696289
    8. 'Map' → logprob: -11.134561538696289
    9. ' X' → logprob: -11.384561538696289
    10. ' b' → logprob: -11.384561538696289

Token 664: '(it' (ID: 29445)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6120439767837524
    2. '(map' → logprob: -1.2370439767837524
    3. 'input' → logprob: -2.487043857574463
    4. 'map' → logprob: -2.487043857574463
    5. '(' → logprob: -6.987043857574463
    6. ' map' → logprob: -9.237044334411621
    7. '(int' → logprob: -9.487044334411621
    8. ' input' → logprob: -10.487044334411621
    9. '()' → logprob: -11.487044334411621
    10. 'Map' → logprob: -11.612044334411621

Token 665: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.005194501485675573
    2. '.chain' → logprob: -5.880194664001465
    3. '.per' → logprob: -7.380194664001465
    4. '.zip' → logprob: -7.380194664001465
    5. '.acc' → logprob: -7.880194664001465
    6. '.product' → logprob: -8.130194664001465
    7. 'ertools' → logprob: -8.755194664001465
    8. '.repeat' → logprob: -9.255194664001465
    9. '.take' → logprob: -9.755194664001465
    10. '.com' → logprob: -10.255194664001465

Token 666: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.0280383548888494e-06
    2. 'lic' → logprob: -14.875000953674316
    3. 'slice' → logprob: -15.625000953674316
    4. 'plit' → logprob: -15.875000953674316
    5. 'pace' → logprob: -16.125001907348633
    6. 'li' → logprob: -16.625001907348633
    7. 'lices' → logprob: -16.750001907348633
    8. 'liced' → logprob: -17.625001907348633
    9. 'l' → logprob: -17.750001907348633
    10. 'ice' → logprob: -18.000001907348633

Token 667: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00233687786385417
    2. '(map' → logprob: -7.0023369789123535
    3. '(iter' → logprob: -7.1273369789123535
    4. 'input' → logprob: -8.127336502075195
    5. '(sys' → logprob: -9.002336502075195
    6. '(it' → logprob: -9.377336502075195
    7. '(' → logprob: -10.127336502075195
    8. '(dd' → logprob: -11.127336502075195
    9. ',input' → logprob: -11.377336502075195
    10. 'map' → logprob: -11.877336502075195

Token 668: 'Map' (ID: 2307)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0900668352842331
    2. '().' → logprob: -2.590066909790039
    3. '()' → logprob: -4.590066909790039
    4. '().__' → logprob: -7.465066909790039
    5. ',' → logprob: -8.465066909790039
    6. '()(' → logprob: -10.340066909790039
    7. '(' → logprob: -10.715066909790039
    8. ' (),' → logprob: -10.840066909790039
    9. '()
' → logprob: -10.965066909790039
    10. '(),"' → logprob: -11.215066909790039

Token 669: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14593058824539185
    2. ',' → logprob: -2.645930528640747
    3. '(),' → logprob: -2.770930528640747
    4. '(X' → logprob: -6.895930767059326
    5. ' (' → logprob: -7.770930767059326
    6. '(input' → logprob: -8.270930290222168
    7. '((' → logprob: -8.895930290222168
    8. '(Y' → logprob: -9.270930290222168
    9. ' ,' → logprob: -9.395930290222168
    10. ',(' → logprob: -10.395930290222168

Token 670: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029744720086455345
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.875297546386719
    4. '0' → logprob: -14.875297546386719
    5. '  ' → logprob: -15.750297546386719
    6. '	' → logprob: -15.812797546386719
    7. '1' → logprob: -16.68779754638672
    8. '    ' → logprob: -16.81279754638672
    9. '２' → logprob: -16.87529754638672
    10. '
' → logprob: -17.06279754638672

Token 671: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.804671233519912e-05
    2. ' ' → logprob: -9.37508773803711
    3. '0' → logprob: -13.62508773803711
    4. '1' → logprob: -14.12508773803711
    5. '   ' → logprob: -14.87508773803711
    6. '    ' → logprob: -15.93758773803711
    7. '  ' → logprob: -15.93758773803711
    8. '(' → logprob: -16.06258773803711
    9. ',' → logprob: -16.37508773803711
    10. '	' → logprob: -16.43758773803711

Token 672: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.742448022123426e-05
    2. ')' → logprob: -9.875067710876465
    3. '))
' → logprob: -11.500067710876465
    4. ' ))' → logprob: -13.375067710876465
    5. '));' → logprob: -13.625067710876465
    6. ' ' → logprob: -14.250067710876465
    7. '),' → logprob: -14.250067710876465
    8. ')))' → logprob: -14.500067710876465
    9. ',' → logprob: -15.125067710876465
    10. '()))' → logprob: -15.625067710876465

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09092579036951065
    2. '<|end|>' → logprob: -3.090925693511963
    3. '    
' → logprob: -3.965925693511963
    4. '
' → logprob: -4.090925693511963
    5. ')' → logprob: -5.715925693511963
    6. ' 
' → logprob: -7.465925693511963
    7. ' ' → logprob: -8.215926170349121
    8. '    ' → logprob: -8.715926170349121
    9. '#' → logprob: -8.715926170349121
    10. '<|end|>' → logprob: -8.840926170349121

Token 674: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.2476131916046143
    2. 'S' → logprob: -2.3726131916046143
    3. 'dp' → logprob: -2.3726131916046143
    4. 'print' → logprob: -2.9976131916046143
    5. 'a' → logprob: -3.1226131916046143
    6. 'ans' → logprob: -3.1226131916046143
    7. 's' → logprob: -3.3726131916046143
    8. 'Z' → logprob: -3.6226131916046143
    9. 'd' → logprob: -3.7476131916046143
    10. 'D' → logprob: -3.7476131916046143

Token 675: ' (' (ID: 350)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.014056913554668427
    2. 'X' → logprob: -4.88905668258667
    3. ' ' → logprob: -5.38905668258667
    4. ' Y' → logprob: -6.38905668258667
    5. ' not' → logprob: -9.764057159423828
    6. ' (' → logprob: -10.014057159423828
    7. ' abs' → logprob: -10.264057159423828
    8. ' ' → logprob: -11.389057159423828
    9. 'Y' → logprob: -11.514057159423828
    10. '(' → logprob: -11.639057159423828

Token 676: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03577951714396477
    2. 'Y' → logprob: -4.0357794761657715
    3. ' X' → logprob: -4.5357794761657715
    4. '(X' → logprob: -5.4107794761657715
    5. 'abs' → logprob: -6.5357794761657715
    6. ' Y' → logprob: -7.9107794761657715
    7. ' (' → logprob: -8.91077995300293
    8. '(abs' → logprob: -9.28577995300293
    9. ' abs' → logprob: -9.78577995300293
    10. '(Y' → logprob: -9.91077995300293

Token 677: '+' (ID: 10)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7191105484962463
    2. ' <' → logprob: -1.3441104888916016
    3. ' ==' → logprob: -2.9691104888916016
    4. '>' → logprob: -3.2191104888916016
    5. '+' → logprob: -3.3441104888916016
    6. ' +' → logprob: -3.4691104888916016
    7. ' >=' → logprob: -3.5941104888916016
    8. ' <=' → logprob: -3.8441104888916016
    9. '<' → logprob: -4.094110488891602
    10. '==' → logprob: -4.594110488891602

Token 678: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00173337128944695
    2. ' Y' → logprob: -6.876733303070068
    3. '1' → logprob: -7.376733303070068
    4. '2' → logprob: -10.001733779907227
    5. ' ' → logprob: -11.501733779907227
    6. '3' → logprob: -12.626733779907227
    7. 'X' → logprob: -12.626733779907227
    8. '4' → logprob: -13.501733779907227
    9. '0' → logprob: -13.501733779907227
    10. '	Y' → logprob: -13.626733779907227

Token 679: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034660208970308304
    2. ')%' → logprob: -3.5346601009368896
    3. '>=' → logprob: -6.909660339355469
    4. '>' → logprob: -6.909660339355469
    5. '==' → logprob: -7.284660339355469
    6. ')>=' → logprob: -7.409660339355469
    7. ')>' → logprob: -8.034660339355469
    8. '<=' → logprob: -8.409660339355469
    9. ')==' → logprob: -8.659660339355469
    10. ' )' → logprob: -8.659660339355469

Token 680: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038364481180906296
    2. ' %' → logprob: -3.2883644104003906
    3. '>' → logprob: -8.91336441040039
    4. ')' → logprob: -10.41336441040039
    5. ' >' → logprob: -10.78836441040039
    6. '==' → logprob: -10.78836441040039
    7. ' ==' → logprob: -10.78836441040039
    8. '>=' → logprob: -10.78836441040039
    9. '<' → logprob: -11.16336441040039
    10. ' ' → logprob: -11.28836441040039

Token 681: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6368401050567627
    2. '3' → logprob: -0.7618401050567627
    3. ' ' → logprob: -5.511839866638184
    4. '4' → logprob: -8.886839866638184
    5. '10' → logprob: -10.386839866638184
    6. '7' → logprob: -12.136839866638184
    7. '1' → logprob: -12.636839866638184
    8. '5' → logprob: -12.761839866638184
    9. '  ' → logprob: -12.761839866638184
    10. '{' → logprob: -13.636839866638184

Token 682: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1806919276714325
    2. '3' → logprob: -1.8056919574737549
    3. ' ' → logprob: -7.055691719055176
    4. '4' → logprob: -10.305691719055176
    5. '10' → logprob: -10.305691719055176
    6. '7' → logprob: -12.555691719055176
    7. '1' → logprob: -12.805691719055176
    8. '{' → logprob: -13.055691719055176
    9. '  ' → logprob: -13.180691719055176
    10. '5' → logprob: -13.180691719055176

Token 683: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1618354767560959
    2. '!=' → logprob: -1.9118354320526123
    3. ' ==' → logprob: -6.786835670471191
    4. '==' → logprob: -7.786835670471191
    5. ':' → logprob: -10.161835670471191
    6. ')!=' → logprob: -11.786835670471191
    7. ' ' → logprob: -12.036835670471191
    8. '()!=' → logprob: -12.661835670471191
    9. ' !' → logprob: -13.411835670471191
    10. '!==' → logprob: -13.536835670471191

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034237600630149245
    2. ' return' → logprob: -8.37534236907959
    3. ' print' → logprob: -10.37534236907959
    4. '   ' → logprob: -10.50034236907959
    5. 'return' → logprob: -10.50034236907959
    6. 'print' → logprob: -11.75034236907959
    7. '    ' → logprob: -11.87534236907959
    8. '0' → logprob: -13.62534236907959
    9. '	' → logprob: -13.62534236907959
    10. ',' → logprob: -13.87534236907959

Token 685: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000721487682312727
    2. '   ' → logprob: -7.625721454620361
    3. ' print' → logprob: -8.62572193145752
    4. 'return' → logprob: -9.87572193145752
    5. '	print' → logprob: -13.87572193145752
    6. '    
' → logprob: -14.37572193145752
    7. '
' → logprob: -14.75072193145752
    8. '       ' → logprob: -14.87572193145752
    9. ' ' → logprob: -16.250720977783203
    10. 'pr' → logprob: -17.000720977783203

Token 686: '(' (ID: 7)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5372898578643799
    2. '-' → logprob: -1.6622898578643799
    3. '(' → logprob: -1.7872898578643799
    4. '0' → logprob: -3.16228985786438
    5. '("' → logprob: -4.287289619445801
    6. '('' → logprob: -6.287289619445801
    7. '("-' → logprob: -7.662289619445801
    8. ' -' → logprob: -10.5372896194458
    9. ' ' → logprob: -10.5372896194458
    10. '('-' → logprob: -11.2872896194458

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035846480750478804
    2. '"' → logprob: -8.000358581542969
    3. ''' → logprob: -11.000358581542969
    4. ' ' → logprob: -12.750358581542969
    5. '"No' → logprob: -12.750358581542969
    6. 'No' → logprob: -15.500358581542969
    7. '-' → logprob: -16.12535858154297
    8. 'print' → logprob: -16.37535858154297
    9. '   ' → logprob: -17.12535858154297
    10. '`' → logprob: -17.25035858154297

Token 688: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22036704421043396
    2. ')
' → logprob: -2.345366954803467
    3. '       ' → logprob: -2.845366954803467
    4. '   ' → logprob: -3.470366954803467
    5. ')return' → logprob: -4.470366954803467
    6. '
' → logprob: -7.345366954803467
    7. 'return' → logprob: -8.470367431640625
    8. ':return' → logprob: -9.595367431640625
    9. ')
' → logprob: -9.720367431640625
    10. ');' → logprob: -9.845367431640625

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005632805987261236
    2. '   ' → logprob: -7.500563144683838
    3. '<|end|>' → logprob: -12.750563621520996
    4. 'return' → logprob: -13.250563621520996
    5. ',' → logprob: -13.625563621520996
    6. '	' → logprob: -13.875563621520996
    7. '
' → logprob: -14.250563621520996
    8. 'import' → logprob: -14.375563621520996
    9. '      ' → logprob: -15.250563621520996
    10. ';' → logprob: -15.375563621520996

Token 690: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023303363472223282
    2. '       ' → logprob: -3.773303270339966
    3. '   ' → logprob: -9.898303031921387
    4. ' return' → logprob: -12.273303031921387
    5. '	return' → logprob: -13.023303031921387
    6. '
' → logprob: -15.273303031921387
    7. 'exit' → logprob: -15.898303031921387
    8. 'ret' → logprob: -16.648303985595703
    9. ' ' → logprob: -17.523303985595703
    10. '	' → logprob: -17.523303985595703

Token 691: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005458105355501175
    2. '    ' → logprob: -5.755457878112793
    3. '    
' → logprob: -6.255457878112793
    4. '  ' → logprob: -9.880457878112793
    5. 'x' → logprob: -10.005457878112793
    6. 'n' → logprob: -10.005457878112793
    7. 'X' → logprob: -10.755457878112793
    8. ' if' → logprob: -10.880457878112793
    9. '<|end|>' → logprob: -10.880457878112793
    10. '
' → logprob: -10.880457878112793

Token 692: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -7.73183855926618e-05
    2. 'exit' → logprob: -10.625077247619629
    3. '.' → logprob: -11.250077247619629
    4. ' .' → logprob: -11.875077247619629
    5. '   ' → logprob: -12.250077247619629
    6. '.stdout' → logprob: -12.250077247619629
    7. '_exit' → logprob: -12.625077247619629
    8. '.max' → logprob: -12.750077247619629
    9. '().' → logprob: -12.875077247619629
    10. 'Exit' → logprob: -13.250077247619629

Token 693: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02329963445663452
    2. '(' → logprob: -3.7732996940612793
    3. '()
' → logprob: -9.898299217224121
    4. '0' → logprob: -13.523299217224121
    5. '()`' → logprob: -14.523299217224121
    6. '()

' → logprob: -15.023299217224121
    7. '()(' → logprob: -15.273299217224121
    8. ' ()' → logprob: -15.273299217224121
    9. '()\' → logprob: -15.398299217224121
    10. '();' → logprob: -15.398299217224121

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7989734411239624
    2. '    
' → logprob: -1.4239734411239624
    3. ' 
' → logprob: -1.9239734411239624
    4. '<|end|>' → logprob: -2.173973560333252
    5. '   
' → logprob: -4.173973560333252
    6. '
' → logprob: -4.298973560333252
    7. '  
' → logprob: -4.923973560333252
    8. ' ' → logprob: -5.923973560333252
    9. '    ' → logprob: -6.048973560333252
    10. '\n' → logprob: -6.173973560333252

Token 695: ' turn' (ID: 3716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39005306363105774
    2. 'if' → logprob: -2.5150530338287354
    3. 'x' → logprob: -2.7650530338287354
    4. 'n' → logprob: -3.0150530338287354
    5. 'dp' → logprob: -3.6400530338287354
    6. 'a' → logprob: -4.2650532722473145
    7. 'cnt' → logprob: -4.5150532722473145
    8. 'X' → logprob: -4.5150532722473145
    9. 'r' → logprob: -4.8900532722473145
    10. 'count' → logprob: -5.1400532722473145

Token 696: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09735945612192154
    2. ' =' → logprob: -2.4723594188690186
    3. '=' → logprob: -5.347359657287598
    4. '_count' → logprob: -6.597359657287598
    5. '_' → logprob: -6.972359657287598
    6. ' s' → logprob: -8.097359657287598
    7. '_num' → logprob: -8.097359657287598
    8. '1' → logprob: -8.472359657287598
    9. ' ' → logprob: -8.847359657287598
    10. 'count' → logprob: -9.847359657287598

Token 697: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03303749859333038
    2. ' (' → logprob: -3.5330374240875244
    3. '(int' → logprob: -7.0330376625061035
    4. '(' → logprob: -7.0330376625061035
    5. '(x' → logprob: -7.4080376625061035
    6. '0' → logprob: -7.6580376625061035
    7. '(Y' → logprob: -9.158037185668945
    8. 'min' → logprob: -9.533037185668945
    9. '(max' → logprob: -9.783037185668945
    10. 'max' → logprob: -9.783037185668945

Token 698: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0017347980756312609
    2. '(X' → logprob: -6.376734733581543
    3. ' X' → logprob: -10.626734733581543
    4. '   ' → logprob: -12.751734733581543
    5. ' (' → logprob: -14.126734733581543
    6. ' ' → logprob: -14.126734733581543
    7. 'x' → logprob: -14.376734733581543
    8. ')' → logprob: -14.376734733581543
    9. '	X' → logprob: -14.501734733581543
    10. '0' → logprob: -14.751734733581543

Token 699: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008622024208307266
    2. ' +' → logprob: -4.758622169494629
    3. ',' → logprob: -12.508622169494629
    4. '＋' → logprob: -13.258622169494629
    5. '+
' → logprob: -14.133622169494629
    6. ' plus' → logprob: -15.258622169494629
    7. '+,' → logprob: -15.633622169494629
    8. ' ' → logprob: -15.758622169494629
    9. 'plus' → logprob: -15.883622169494629
    10. '_plus' → logprob: -16.321121215820312

Token 700: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -5.3954463510308415e-05
    2. ' Y' → logprob: -9.875054359436035
    3. ' ' → logprob: -13.875054359436035
    4. 'X' → logprob: -14.000054359436035
    5. '	Y' → logprob: -15.000054359436035
    6. '   ' → logprob: -17.12505340576172
    7. ')' → logprob: -17.12505340576172
    8. 'def' → logprob: -17.25005340576172
    9. 'import' → logprob: -17.25005340576172
    10. '(Y' → logprob: -17.25005340576172

Token 701: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03994813561439514
    2. ' //' → logprob: -3.5399482250213623
    3. '//' → logprob: -5.164947986602783
    4. ' )' → logprob: -6.414947986602783
    5. ')//' → logprob: -6.664947986602783
    6. '   ' → logprob: -7.164947986602783
    7. ' ' → logprob: -7.539947986602783
    8. '#' → logprob: -9.164948463439941
    9. ' ' → logprob: -9.914948463439941
    10. '    ' → logprob: -11.539948463439941

Token 702: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.125011444091797
    4. '３' → logprob: -17.687511444091797
    5. '৩' → logprob: -18.312511444091797
    6. '
' → logprob: -18.312511444091797
    7. '  ' → logprob: -18.687511444091797
    8. '۳' → logprob: -18.687511444091797
    9. '```' → logprob: -18.750011444091797
    10. '=' → logprob: -19.375011444091797

Token 703: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0221053846180439
    2. '
' → logprob: -4.6471052169799805
    3. '    
' → logprob: -5.6471052169799805
    4. 'if' → logprob: -5.6471052169799805
    5. '<|end|>' → logprob: -6.2721052169799805
    6. ' if' → logprob: -6.7721052169799805
    7. 'def' → logprob: -7.7721052169799805
    8. ')' → logprob: -8.27210521697998
    9. '    ' → logprob: -8.39710521697998
    10. 'X' → logprob: -8.77210521697998

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009748648852109909
    2. 'if' → logprob: -4.759748458862305
    3. ' if' → logprob: -7.134748458862305
    4. '    
' → logprob: -8.884748458862305
    5. '<|end|>' → logprob: -10.134748458862305
    6. '
' → logprob: -10.259748458862305
    7. '    ' → logprob: -10.259748458862305
    8. 'def' → logprob: -10.759748458862305
    9. 'x' → logprob: -10.884748458862305
    10. 'X' → logprob: -12.134748458862305

Token 705: ' X' (ID: 2127)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33305299282073975
    2. 'x' → logprob: -2.4580531120300293
    3. 'a' → logprob: -2.8330531120300293
    4. 'dp' → logprob: -2.9580531120300293
    5. 'ans' → logprob: -3.3330531120300293
    6. 'for' → logprob: -4.833053112030029
    7. 'cnt' → logprob: -4.833053112030029
    8. 'def' → logprob: -4.833053112030029
    9. 'c' → logprob: -5.458053112030029
    10. 'count' → logprob: -5.583053112030029

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11471062898635864
    2. ' -=' → logprob: -3.114710569381714
    3. '-=' → logprob: -3.489710569381714
    4. '=' → logprob: -4.239710807800293
    5. '>=' → logprob: -4.739710807800293
    6. ' >=' → logprob: -5.864710807800293
    7. ' =' → logprob: -6.239710807800293
    8. '>' → logprob: -6.364710807800293
    9. ' ,' → logprob: -6.614710807800293
    10. '-' → logprob: -7.614710807800293

Token 707: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0005071613122709095
    2. ' Y' → logprob: -7.625507354736328
    3. '=' → logprob: -11.250507354736328
    4. 'X' → logprob: -12.750507354736328
    5. ' =' → logprob: -13.625507354736328
    6. 'y' → logprob: -14.750507354736328
    7. '	Y' → logprob: -14.750507354736328
    8. ' ' → logprob: -15.000507354736328
    9. '   ' → logprob: -15.625507354736328
    10. '...' → logprob: -16.375507354736328

Token 708: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.065277099609375
    2. '=' → logprob: -1.315277099609375
    3. ' =' → logprob: -1.440277099609375
    4. '-=' → logprob: -2.065277099609375
    5. ',' → logprob: -3.815277099609375
    6. '-' → logprob: -7.315277099609375
    7. '+=' → logprob: -8.440277099609375
    8. ' +=' → logprob: -8.440277099609375
    9. ' ,' → logprob: -9.440277099609375
    10. '   ' → logprob: -10.065277099609375

Token 709: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.09144126623868942
    2. 'turn' → logprob: -2.7164411544799805
    3. '(X' → logprob: -5.2164411544799805
    4. 'tuple' → logprob: -5.3414411544799805
    5. '(turn' → logprob: -5.3414411544799805
    6. 'max' → logprob: -6.3414411544799805
    7. 'abs' → logprob: -7.2164411544799805
    8. 'dd' → logprob: -7.3414411544799805
    9. 'int' → logprob: -7.5914411544799805
    10. 'Y' → logprob: -7.8414411544799805

Token 710: '-turn' (ID: 120746)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48042574524879456
    2. ',' → logprob: -1.2304257154464722
    3. '-turn' → logprob: -2.9804258346557617
    4. ' -' → logprob: -3.6054258346557617
    5. '-Y' → logprob: -4.730425834655762
    6. '-X' → logprob: -6.855425834655762
    7. '+' → logprob: -7.730425834655762
    8. ',Y' → logprob: -7.730425834655762
    9. '-y' → logprob: -8.480425834655762
    10. '-=' → logprob: -9.105425834655762

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021569548698607832
    2. ' ,' → logprob: -8.875215530395508
    3. ',Y' → logprob: -9.500215530395508
    4. ',y' → logprob: -14.500215530395508
    5. ',
' → logprob: -16.000215530395508
    6. 'Y' → logprob: -16.125215530395508
    7. ',X' → logprob: -16.500215530395508
    8. ' ' → logprob: -16.875215530395508
    9. '+' → logprob: -16.875215530395508
    10. '-' → logprob: -17.125215530395508

Token 712: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.001170225441455841
    2. ' Y' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. '	Y' → logprob: -18.626171112060547
    5. ' ' → logprob: -19.376171112060547
    6. 'y' → logprob: -20.001171112060547
    7. '  ' → logprob: -20.501171112060547
    8. 'X' → logprob: -22.001171112060547
    9. '    ' → logprob: -22.376171112060547
    10. '[Y' → logprob: -23.126171112060547

Token 713: '-turn' (ID: 120746)
  Prédit: '-turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-turn' → logprob: -5.550411151489243e-05
    2. '-' → logprob: -10.500055313110352
    3. ' -' → logprob: -10.500055313110352
    4. 'turn' → logprob: -15.250055313110352
    5. '-tu' → logprob: -18.25005531311035
    6. '-
' → logprob: -18.25005531311035
    7. '-return' → logprob: -18.50005531311035
    8. '-tr' → logprob: -18.87505531311035
    9. '_turn' → logprob: -19.37505531311035
    10. '-t' → logprob: -19.37505531311035

Token 714: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06402765214443207
    2. '
' → logprob: -2.9390275478363037
    3. 'if' → logprob: -5.314027786254883
    4. '    
' → logprob: -5.689027786254883
    5. '<|end|>' → logprob: -7.939027786254883
    6. ' if' → logprob: -8.314027786254883
    7. 'def' → logprob: -9.564027786254883
    8. ',' → logprob: -10.814027786254883
    9. '  
' → logprob: -11.314027786254883
    10. '```' → logprob: -11.564027786254883

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05770287290215492
    2. 'if' → logprob: -2.9327027797698975
    3. ' if' → logprob: -6.307703018188477
    4. '<|end|>' → logprob: -7.057703018188477
    5. '    
' → logprob: -9.682703018188477
    6. '
' → logprob: -10.057703018188477
    7. 'def' → logprob: -11.557703018188477
    8. 'for' → logprob: -12.557703018188477
    9. '	if' → logprob: -13.057703018188477
    10. '    ' → logprob: -13.057703018188477

Token 716: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0054597631096839905
    2. '   ' → logprob: -5.630459785461426
    3. ' if' → logprob: -6.630459785461426
    4. 'print' → logprob: -8.505459785461426
    5. 'dp' → logprob: -8.880459785461426
    6. 'res' → logprob: -10.130459785461426
    7. 'ans' → logprob: -10.380459785461426
    8. 'answer' → logprob: -10.505459785461426
    9. 'from' → logprob: -10.755459785461426
    10. 'def' → logprob: -11.005459785461426

Token 717: ' min' (ID: 1349)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20757542550563812
    2. ' X' → logprob: -1.7075754404067993
    3. ' min' → logprob: -5.83257532119751
    4. 'min' → logprob: -5.95757532119751
    5. ' ' → logprob: -8.957575798034668
    6. '(' → logprob: -9.207575798034668
    7. ' not' → logprob: -9.457575798034668
    8. ' (' → logprob: -9.582575798034668
    9. '(X' → logprob: -9.582575798034668
    10. '(min' → logprob: -9.957575798034668

Token 718: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -8.65707261255011e-06
    2. '((' → logprob: -12.125008583068848
    3. '(' → logprob: -13.125008583068848
    4. '([' → logprob: -13.875008583068848
    5. 'X' → logprob: -15.125008583068848
    6. '(
' → logprob: -16.750009536743164
    7. '(x' → logprob: -17.625009536743164
    8. ' (' → logprob: -18.000009536743164
    9. '[X' → logprob: -20.000009536743164
    10. '	X' → logprob: -20.500009536743164

Token 719: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013448772951960564
    2. ' ,' → logprob: -6.876344680786133
    3. ',X' → logprob: -9.001344680786133
    4. ',Y' → logprob: -9.251344680786133
    5. '<|end|>' → logprob: -10.251344680786133
    6. ',<' → logprob: -10.501344680786133
    7. ')' → logprob: -11.376344680786133
    8. ' <' → logprob: -12.376344680786133
    9. ',
' → logprob: -13.001344680786133
    10. ',List' → logprob: -13.876344680786133

Token 720: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06823582947254181
    2. ')<' → logprob: -2.9432358741760254
    3. ' <' → logprob: -4.568235874176025
    4. '<' → logprob: -6.193235874176025
    5. ' )' → logprob: -7.568235874176025
    6. ',' → logprob: -8.943235397338867
    7. ',<' → logprob: -9.193235397338867
    8. '()<' → logprob: -9.693235397338867
    9. ')>=' → logprob: -10.818235397338867
    10. ' ' → logprob: -12.818235397338867

Token 721: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5760223865509033
    2. '<' → logprob: -0.8260223865509033
    3. '()<' → logprob: -10.326022148132324
    4. ' ' → logprob: -10.701022148132324
    5. ' >=' → logprob: -11.576022148132324
    6. '>=' → logprob: -12.326022148132324
    7. ')<' → logprob: -13.576022148132324
    8. '0' → logprob: -13.826022148132324
    9. '<int' → logprob: -13.826022148132324
    10. ')' → logprob: -13.951022148132324

Token 722: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.375709533691406
    4. '０' → logprob: -18.500709533691406
    5. '۰' → logprob: -19.125709533691406
    6. '000' → logprob: -20.500709533691406
    7. '  ' → logprob: -20.625709533691406
    8. '00' → logprob: -20.750709533691406
    9. '=' → logprob: -20.875709533691406
    10. '-' → logprob: -21.125709533691406

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '０' → logprob: -18.375003814697266
    4. '۰' → logprob: -18.375003814697266
    5. '০' → logprob: -20.875003814697266
    6. '-' → logprob: -21.125003814697266
    7. '०' → logprob: -21.875003814697266
    8. '٠' → logprob: -21.875003814697266
    9. '=' → logprob: -22.000003814697266
    10. '  ' → logprob: -22.250003814697266

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09299870580434799
    2. ':
' → logprob: -2.717998743057251
    3. ' or' → logprob: -3.967998743057251
    4. '   ' → logprob: -6.467998504638672
    5. ':return' → logprob: -6.717998504638672
    6. '       ' → logprob: -6.842998504638672
    7. ' and' → logprob: -11.342998504638672
    8. ',' → logprob: -11.467998504638672
    9. 'or' → logprob: -11.717998504638672
    10. '):' → logprob: -12.342998504638672

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008091921918094158
    2. 'print' → logprob: -5.258091926574707
    3. '   ' → logprob: -6.008091926574707
    4. ' print' → logprob: -7.883091926574707
    5. 'return' → logprob: -11.633091926574707
    6. ' return' → logprob: -12.383091926574707
    7. ' ' → logprob: -14.008091926574707
    8. ',' → logprob: -14.008091926574707
    9. '	print' → logprob: -14.383091926574707
    10. '
' → logprob: -14.633091926574707

Token 726: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04319055378437042
    2. '       ' → logprob: -3.2931904792785645
    3. ' print' → logprob: -5.2931904792785645
    4. '   ' → logprob: -9.293190956115723
    5. 'return' → logprob: -11.168190956115723
    6. '	print' → logprob: -13.043190956115723
    7. ' ' → logprob: -14.668190956115723
    8. ' return' → logprob: -15.043190956115723
    9. '     ' → logprob: -15.293190956115723
    10. 'pr' → logprob: -15.543190956115723

Token 727: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011708177626132965
    2. '0' → logprob: -6.751170635223389
    3. ' (' → logprob: -15.001171112060547
    4. '(
' → logprob: -15.751171112060547
    5. ' ' → logprob: -16.626171112060547
    6. '()' → logprob: -20.376171112060547
    7. '(

' → logprob: -21.001171112060547
    8. '```' → logprob: -21.126171112060547
    9. '('' → logprob: -21.251171112060547
    10. '00' → logprob: -21.251171112060547

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. ' ' → logprob: -15.37500286102295
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -19.500001907348633
    6. '"' → logprob: -20.000001907348633
    7. '`' → logprob: -20.250001907348633
    8. '０' → logprob: -20.375001907348633
    9. '00' → logprob: -20.750001907348633
    10. ')' → logprob: -21.125001907348633

Token 729: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10228097438812256
    2. '       ' → logprob: -2.602281093597412
    3. ')
' → logprob: -4.102281093597412
    4. ')return' → logprob: -5.102281093597412
    5. '   ' → logprob: -7.727281093597412
    6. '<|end|>' → logprob: -10.602280616760254
    7. '
' → logprob: -11.727280616760254
    8. ' )' → logprob: -11.977280616760254
    9. ')
' → logprob: -12.227280616760254
    10. ')#' → logprob: -13.227280616760254

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011754630832001567
    2. '   ' → logprob: -6.751175403594971
    3. '<|end|>' → logprob: -13.126175880432129
    4. 'return' → logprob: -13.251175880432129
    5. 'def' → logprob: -15.001175880432129
    6. ',' → logprob: -15.126175880432129
    7. ' return' → logprob: -15.126175880432129
    8. 'import' → logprob: -15.501175880432129
    9. ')' → logprob: -16.001174926757812
    10. '	' → logprob: -16.626174926757812

Token 731: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015551876276731491
    2. 'return' (adapté à ' return') → logprob: -4.265552043914795
    3. ' return' → logprob: -6.640552043914795
    4. '   ' → logprob: -9.515551567077637
    5. '	return' → logprob: -12.515551567077637
    6. ' ' → logprob: -12.890551567077637
    7. 'def' → logprob: -15.140551567077637
    8. '
' → logprob: -15.140551567077637
    9. '     ' → logprob: -15.515551567077637
    10. '	' → logprob: -15.640551567077637

Token 732: ' sys' (ID: 12228)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.597313404083252
    2. '   ' → logprob: -1.347313404083252
    3. '
' → logprob: -1.722313404083252
    4. '    
' → logprob: -5.347313404083252
    5. ' ' → logprob: -6.347313404083252
    6. 'None' → logprob: -6.472313404083252
    7. '1' → logprob: -7.222313404083252
    8. ' 
' → logprob: -7.722313404083252
    9. '  
' → logprob: -7.722313404083252
    10. ')' → logprob: -8.472312927246094

Token 733: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -1.7432603272027336e-06
    2. 'exit' → logprob: -13.500001907348633
    3. '.' → logprob: -16.250001907348633
    4. '	exit' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ' .' → logprob: -18.250001907348633
    7. '
' → logprob: -18.500001907348633
    8. '.EXIT' → logprob: -18.625001907348633
    9. '_exit' → logprob: -18.750001907348633
    10. '.quit' → logprob: -18.875001907348633

Token 734: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03396885097026825
    2. '()
' → logprob: -3.408968925476074
    3. '   ' → logprob: -8.283968925476074
    4. '()

' → logprob: -10.408968925476074
    5. '())' → logprob: -10.908968925476074
    6. '(' → logprob: -12.283968925476074
    7. '()\' → logprob: -12.283968925476074
    8. '()
' → logprob: -12.783968925476074
    9. ')' → logprob: -13.033968925476074
    10. '()<' → logprob: -13.408968925476074

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035338323563337326
    2. 'print' → logprob: -3.6603384017944336
    3. 'count' → logprob: -5.660338401794434
    4. '    
' → logprob: -5.660338401794434
    5. 'n' → logprob: -7.535338401794434
    6. '
' → logprob: -8.160338401794434
    7. 'cnt' → logprob: -8.410338401794434
    8. 'dp' → logprob: -8.535338401794434
    9. 'result' → logprob: -8.910338401794434
    10. 'total' → logprob: -9.410338401794434

Token 736: ' print' (ID: 2123)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5172162055969238
    2. 'print' (adapté à ' print') → logprob: -1.1422162055969238
    3. '   ' → logprob: -2.892216205596924
    4. 'res' → logprob: -4.767216205596924
    5. '#' → logprob: -4.767216205596924
    6. 'cnt' → logprob: -6.017216205596924
    7. 'ans' → logprob: -6.142216205596924
    8. 'def' → logprob: -6.267216205596924
    9. 'n' → logprob: -6.392216205596924
    10. 'count' → logprob: -7.142216205596924

Token 737: '(com' (ID: 27868)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.5352393388748169
    2. '(' → logprob: -1.160239338874817
    3. 'pow' → logprob: -3.1602392196655273
    4. '(power' → logprob: -3.7852392196655273
    5. '((' → logprob: -4.410239219665527
    6. '(com' → logprob: -4.660239219665527
    7. '(math' → logprob: -4.785239219665527
    8. '1' → logprob: -6.035239219665527
    9. 'comb' → logprob: -6.910239219665527
    10. '(((' → logprob: -6.910239219665527

Token 738: 'bination' (ID: 180524)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018077615823131055
    2. 'pow' → logprob: -9.875181198120117
    3. '[b' → logprob: -10.000181198120117
    4. 'binations' → logprob: -10.500181198120117
    5. '[' → logprob: -10.625181198120117
    6. '(' → logprob: -11.875181198120117
    7. '(b' → logprob: -12.125181198120117
    8. '1' → logprob: -12.500181198120117
    9. 'p' → logprob: -13.125181198120117
    10. ''b' → logprob: -13.250181198120117

Token 739: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0017627633642405272
    2. '(' → logprob: -7.001762866973877
    3. ')' → logprob: -7.876762866973877
    4. 's' → logprob: -8.501762390136719
    5. '((' → logprob: -9.501762390136719
    6. '(Y' → logprob: -10.001762390136719
    7. '(N' → logprob: -10.126762390136719
    8. '(n' → logprob: -11.001762390136719
    9. 'mod' → logprob: -11.126762390136719
    10. '(
' → logprob: -11.126762390136719

Token 740: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06287170201539993
    2. '+' → logprob: -3.8128716945648193
    3. ' +' → logprob: -4.187871932983398
    4. ' ,' → logprob: -4.312871932983398
    5. ',Y' → logprob: -5.062871932983398
    6. '<|end|>' → logprob: -6.062871932983398
    7. ',X' → logprob: -6.812871932983398
    8. '(X' → logprob: -8.437871932983398
    9. ')' → logprob: -9.187871932983398
    10. '+,' → logprob: -9.812871932983398

Token 741: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0008717980235815048
    2. 'turn' → logprob: -7.125871658325195
    3. ' Y' → logprob: -9.625871658325195
    4. 'X' → logprob: -14.625871658325195
    5. '(turn' → logprob: -14.750871658325195
    6. ' ' → logprob: -15.750871658325195
    7. ' turn' → logprob: -15.750871658325195
    8. '(Y' → logprob: -16.500871658325195
    9. '	Y' → logprob: -16.750871658325195
    10. '   ' → logprob: -17.375871658325195

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02075628750026226
    2. ',X' → logprob: -3.895756244659424
    3. ' ,' → logprob: -8.645756721496582
    4. 'X' → logprob: -11.520756721496582
    5. 'turn' → logprob: -11.770756721496582
    6. ')' → logprob: -12.395756721496582
    7. '(X' → logprob: -12.520756721496582
    8. ',
' → logprob: -12.895756721496582
    9. '[X' → logprob: -12.895756721496582
    10. ',K' → logprob: -13.770756721496582

Token 743: ' X' (ID: 2127)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.009215030819177628
    2. ' turn' → logprob: -5.009214878082275
    3. 'X' → logprob: -6.009214878082275
    4. ' X' → logprob: -10.384215354919434
    5. '(turn' → logprob: -12.634215354919434
    6. 'Y' → logprob: -13.134215354919434
    7. ' ' → logprob: -13.509215354919434
    8. '2' → logprob: -13.759215354919434
    9. '   ' → logprob: -14.509215354919434
    10. ')' → logprob: -15.259215354919434

Token 744: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3484937250614166
    2. ')' → logprob: -1.2234936952590942
    3. ')))' → logprob: -11.223493576049805
    4. ' )' → logprob: -11.723493576049805
    5. ',' → logprob: -11.723493576049805
    6. ' ))' → logprob: -12.223493576049805
    7. '),' → logprob: -12.723493576049805
    8. '+' → logprob: -13.098493576049805
    9. ')+' → logprob: -13.348493576049805
    10. ')
' → logprob: -13.598493576049805

Token 745: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05718286707997322
    2. 'def' → logprob: -2.932182788848877
    3. '_' → logprob: -6.932182788848877
    4. '(
' → logprob: -7.182182788848877
    5. ')' → logprob: -8.682183265686035
    6. '#' → logprob: -9.557183265686035
    7. ',' → logprob: -9.682183265686035
    8. ':' → logprob: -9.807183265686035
    9. 'import' → logprob: -9.807183265686035
    10. 'de' → logprob: -10.807183265686035

Token 746: '================================================================================' (ID: 111845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5691231489181519
    2. 'def' → logprob: -1.1941231489181519
    3. '(' → logprob: -2.0691232681274414
    4. '(
' → logprob: -5.569123268127441
    5. 'de' → logprob: -8.194123268127441
    6. 'c' → logprob: -8.319123268127441
    7. '#' → logprob: -9.444123268127441
    8. ')' → logprob: -9.569123268127441
    9. '\' → logprob: -10.444123268127441
    10. ':' → logprob: -10.444123268127441

Token 747: '=
' (ID: 31206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008820551447570324
    2. 'from' → logprob: -4.758820533752441
    3. 'import' → logprob: -9.508820533752441
    4. '
' → logprob: -10.258820533752441
    5. '#' → logprob: -10.383820533752441
    6. 'n' → logprob: -10.883820533752441
    7. 'comb' → logprob: -11.133820533752441
    8. 'factor' → logprob: -11.508820533752441
    9. '(' → logprob: -11.633820533752441
    10. '_' → logprob: -12.883820533752441

Token 748: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04946896433830261
    2. 'from' → logprob: -3.049468994140625
    3. 'factor' → logprob: -7.549468994140625
    4. 'comb' → logprob: -8.799468994140625
    5. 'import' → logprob: -9.174468994140625
    6. '#' → logprob: -9.424468994140625
    7. 'fact' → logprob: -11.799468994140625
    8. '@' → logprob: -12.424468994140625
    9. '
' → logprob: -13.049468994140625
    10. 'class' → logprob: -13.424468994140625

Token 749: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014221328310668468
    2. 'from' → logprob: -4.26422119140625
    3. 'comb' → logprob: -10.63922119140625
    4. 'factor' → logprob: -11.01422119140625
    5. 'import' → logprob: -11.13922119140625
    6. '#' → logprob: -13.13922119140625
    7. '@' → logprob: -14.88922119140625
    8. 'fact' → logprob: -15.38922119140625
    9. 'sys' → logprob: -16.38922119140625
    10. 'class' → logprob: -16.38922119140625

Token 750: 'Cr' (ID: 14225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6033542156219482
    2. 'def' → logprob: -0.9783542156219482
    3. '<|end|>' → logprob: -3.3533542156219482
    4. ' ' → logprob: -4.103354454040527
    5. '!' → logprob: -4.603354454040527
    6. '=' → logprob: -5.853354454040527
    7. '#' → logprob: -6.228354454040527
    8. ',' → logprob: -6.353354454040527
    9. ' =' → logprob: -6.478354454040527
    10. 'C' → logprob: -6.478354454040527

Token 751: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038237713277339935
    2. '(' → logprob: -3.6632378101348877
    3. '_' → logprob: -5.038237571716309
    4. '(
' → logprob: -6.163237571716309
    5. '=' → logprob: -6.538237571716309
    6. '(n' → logprob: -7.788237571716309
    7. ')' → logprob: -8.038237571716309
    8. ' =' → logprob: -8.413237571716309
    9. '_def' → logprob: -8.413237571716309
    10. ' def' → logprob: -8.788237571716309

Token 752: ' m' (ID: 284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01594051904976368
    2. 'n' → logprob: -5.3909406661987305
    3. ' =' → logprob: -5.8909406661987305
    4. '
' → logprob: -6.2659406661987305
    5. '=' → logprob: -6.3909406661987305
    6. 'import' → logprob: -6.6409406661987305
    7. '_' → logprob: -6.7659406661987305
    8. '```' → logprob: -7.7659406661987305
    9. 'mod' → logprob: -8.26594066619873
    10. '_n' → logprob: -8.39094066619873

Token 753: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007591230678372085
    2. '_' → logprob: -7.875759124755859
    3. '
' → logprob: -9.50075912475586
    4. '(' → logprob: -9.75075912475586
    5. ' def' → logprob: -9.87575912475586
    6. '(
' → logprob: -10.00075912475586
    7. '_def' → logprob: -10.37575912475586
    8. '=' → logprob: -10.50075912475586
    9. ')' → logprob: -11.12575912475586
    10. ' =' → logprob: -11.62575912475586

Token 754: '無' (ID: 10205)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0071429903618991375
    2. ')' → logprob: -5.132143020629883
    3. 'n' → logprob: -7.007143020629883
    4. 'lambda' → logprob: -8.882143020629883
    5. '=' → logprob: -9.632143020629883
    6. '=lambda' → logprob: -10.382143020629883
    7. 'import' → logprob: -10.507143020629883
    8. ' def' → logprob: -11.632143020629883
    9. ' =' → logprob: -11.757143020629883
    10. 'from' → logprob: -12.007143020629883

Token 755: '�' (ID: 51268)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037250127643346786
    2. ')' → logprob: -3.53725004196167
    3. ' def' → logprob: -6.28725004196167
    4. '#' → logprob: -6.53725004196167
    5. '_' → logprob: -6.66225004196167
    6. '```' → logprob: -7.66225004196167
    7. 'int' → logprob: -7.91225004196167
    8. 's' → logprob: -7.91225004196167
    9. 'x' → logprob: -8.662250518798828
    10. ',' → logprob: -8.662250518798828

Token 756: '�' (ID: 226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014008591882884502
    2. '```' → logprob: -5.014008522033691
    3. ')' → logprob: -6.639008522033691
    4. '#' → logprob: -6.889008522033691
    5. '(' → logprob: -6.889008522033691
    6. 't' → logprob: -7.514008522033691
    7. '=' → logprob: -7.639008522033691
    8. '2' → logprob: -7.764008522033691
    9. '<|end|>' → logprob: -8.514008522033691
    10. '``' → logprob: -8.889008522033691

Token 757: 'に' (ID: 5280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020695101469755173
    2. ')' → logprob: -4.020695209503174
    3. '#' → logprob: -6.645695209503174
    4. 'の' → logprob: -8.270694732666016
    5. '=' → logprob: -8.520694732666016
    6. '```' → logprob: -8.895694732666016
    7. '
' → logprob: -9.270694732666016
    8. ' def' → logprob: -9.395694732666016
    9. 'n' → logprob: -9.520694732666016
    10. 'p' → logprob: -10.145694732666016

Token 758: ' reduce' (ID: 10389)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029219577088952065
    2. '```' → logprob: -4.654219627380371
    3. '100' → logprob: -5.654219627380371
    4. ')' → logprob: -5.779219627380371
    5. '#' → logprob: -6.029219627380371
    6. '10' → logprob: -6.154219627380371
    7. '998' → logprob: -6.404219627380371
    8. 'n' → logprob: -7.154219627380371
    9. '``' → logprob: -7.154219627380371
    10. 'p' → logprob: -7.279219627380371

Token 759: ' と' (ID: 150026)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.057937003672122955
    2. 'def' → logprob: -3.307936906814575
    3. 'import' → logprob: -4.307937145233154
    4. ')' → logprob: -5.432937145233154
    5. ' from' → logprob: -7.057937145233154
    6. ')
' → logprob: -8.432936668395996
    7. ')(
' → logprob: -8.682936668395996
    8. '(
' → logprob: -8.807936668395996
    9. '(lambda' → logprob: -9.432936668395996
    10. '```' → logprob: -9.557936668395996

Token 760: ' map' (ID: 4014)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.7971002459526062
    2. 'fun' → logprob: -0.9221002459526062
    3. 'math' → logprob: -2.547100305557251
    4. 'import' → logprob: -3.922100305557251
    5. ')' → logprob: -4.047100067138672
    6. 'from' → logprob: -4.297100067138672
    7. 'operator' → logprob: -4.422100067138672
    8. ' functools' → logprob: -5.547100067138672
    9. 'lambda' → logprob: -6.172100067138672
    10. 'def' → logprob: -6.297100067138672

Token 761: ' を' (ID: 107105)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9720918536186218
    2. 'from' → logprob: -0.9720918536186218
    3. 'def' → logprob: -2.0970919132232666
    4. ')' → logprob: -2.8470919132232666
    5. '(lambda' → logprob: -4.0970916748046875
    6. ',' → logprob: -4.3470916748046875
    7. ' from' → logprob: -4.4720916748046875
    8. 'を' → logprob: -4.7220916748046875
    9. ' を' → logprob: -5.7220916748046875
    10. ' def' → logprob: -5.8470916748046875

Token 762: '使' (ID: 15159)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23403143882751465
    2. 'import' → logprob: -1.6090314388275146
    3. 'def' → logprob: -5.109031677246094
    4. 'reduce' → logprob: -6.484031677246094
    5. ')' → logprob: -7.859031677246094
    6. ' from' → logprob: -8.609031677246094
    7. '```' → logprob: -9.234031677246094
    8. '#' → logprob: -9.359031677246094
    9. '__' → logprob: -9.984031677246094
    10. 'lambda' → logprob: -10.109031677246094

Token 763: 'う' (ID: 8574)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4224134087562561
    2. 'import' → logprob: -1.2974133491516113
    3. 'def' → logprob: -2.7974133491516113
    4. '用' → logprob: -5.047413349151611
    5. '```' → logprob: -7.797413349151611
    6. ')' → logprob: -7.922413349151611
    7. 'う' → logprob: -8.04741382598877
    8. ' from' → logprob: -8.17241382598877
    9. 'を' → logprob: -8.29741382598877
    10. 'わ' → logprob: -8.42241382598877

Token 764: ')
' (ID: 446)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6861719489097595
    2. 'def' → logprob: -1.5611720085144043
    3. 'from' → logprob: -1.9361720085144043
    4. ')' → logprob: -2.6861720085144043
    5. ')
' → logprob: -3.3111720085144043
    6. 'を' → logprob: -4.686172008514404
    7. '
' → logprob: -5.186172008514404
    8. '#' → logprob: -5.311172008514404
    9. 'で' → logprob: -5.686172008514404
    10. ',' → logprob: -6.186172008514404

Token 765: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08015557378530502
    2. 'from' → logprob: -2.580155611038208
    3. 'import' → logprob: -6.705155372619629
    4. 'n' → logprob: -10.955155372619629
    5. ' def' → logprob: -11.705155372619629
    6. ' from' → logprob: -11.955155372619629
    7. ')' → logprob: -13.330155372619629
    8. '#' → logprob: -13.455155372619629
    9. '=' → logprob: -13.705155372619629
    10. ' =' → logprob: -13.955155372619629

Token 766: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0016041287453845143
    2. 'n' → logprob: -7.001604080200195
    3. ' combination' → logprob: -8.376604080200195
    4. 'mod' → logprob: -8.501604080200195
    5. 'com' → logprob: -9.251604080200195
    6. '_comb' → logprob: -9.626604080200195
    7. 'combine' → logprob: -9.626604080200195
    8. 'factor' → logprob: -11.626604080200195
    9. 'Combination' → logprob: -12.251604080200195
    10. 'pow' → logprob: -12.376604080200195

Token 767: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.8444881536415778e-05
    2. '(N' → logprob: -11.000028610229492
    3. '(' → logprob: -11.625028610229492
    4. 'def' → logprob: -13.250028610229492
    5. 'n' → logprob: -14.375028610229492
    6. ' (' → logprob: -14.750028610229492
    7. '(a' → logprob: -17.125028610229492
    8. '(
' → logprob: -17.875028610229492
    9. '(x' → logprob: -18.125028610229492
    10. '(k' → logprob: -19.625028610229492

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024215869780164212
    2. ' ,' → logprob: -8.750242233276367
    3. ',n' → logprob: -10.000242233276367
    4. ',k' → logprob: -10.250242233276367
    5. ',r' → logprob: -14.625242233276367
    6. ':' → logprob: -14.625242233276367
    7. 'def' → logprob: -15.125242233276367
    8. ',int' → logprob: -15.250242233276367
    9. ',m' → logprob: -15.375242233276367
    10. '(n' → logprob: -15.500242233276367

Token 769: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1002611368894577
    2. 'k' → logprob: -2.3502612113952637
    3. ' r' → logprob: -10.100260734558105
    4. '```' → logprob: -11.850260734558105
    5. ' k' → logprob: -12.975260734558105
    6. '
' → logprob: -13.600260734558105
    7. 'm' → logprob: -14.475260734558105
    8. '``' → logprob: -14.600260734558105
    9. 'int' → logprob: -14.975260734558105
    10. '
' → logprob: -14.975260734558105

Token 770: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002392421243712306
    2. '):
' → logprob: -6.127392292022705
    3. '):
' → logprob: -9.377392768859863
    4. ')' → logprob: -9.627392768859863
    5. ',' → logprob: -10.502392768859863
    6. ' ):' → logprob: -10.627392768859863
    7. ':' → logprob: -12.502392768859863
    8. '):

' → logprob: -15.002392768859863
    9. '   ' → logprob: -15.377392768859863
    10. ')：' → logprob: -15.877392768859863

Token 771: ' mod' (ID: 1812)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.050549738109111786
    2. 'mod' → logprob: -3.5505497455596924
    3. ' m' → logprob: -3.9255497455596924
    4. ' mod' → logprob: -7.175549507141113
    5. 'MOD' → logprob: -9.550549507141113
    6. 'p' → logprob: -11.550549507141113
    7. ' MOD' → logprob: -12.925549507141113
    8. ' ' → logprob: -13.925549507141113
    9. '_mod' → logprob: -14.300549507141113
    10. ' modulo' → logprob: -14.550549507141113

Token 772: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03169943392276764
    2. '):' → logprob: -3.5316994190216064
    3. '=None' → logprob: -6.5316996574401855
    4. ' =' → logprob: -7.7816996574401855
    5. ':' → logprob: -10.656699180603027
    6. ' ):' → logprob: -10.781699180603027
    7. '=m' → logprob: -11.406699180603027
    8. ')' → logprob: -12.781699180603027
    9. '):
' → logprob: -12.781699180603027
    10. '=int' → logprob: -12.906699180603027

Token 773: '10' (ID: 702)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00027444821898825467
    2. '10' → logprob: -8.250274658203125
    3. ' mod' → logprob: -11.250274658203125
    4. '100' → logprob: -17.250274658203125
    5. '(mod' → logprob: -17.500274658203125
    6. 'pow' → logprob: -18.500274658203125
    7. 'int' → logprob: -18.750274658203125
    8. 'MOD' → logprob: -19.000274658203125
    9. '	mod' → logprob: -19.625274658203125
    10. ' ' → logprob: -19.625274658203125

Token 774: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.047928184270858765
    2. '9' → logprob: -3.1729280948638916
    3. 'mod' → logprob: -5.422928333282471
    4. ' mod' → logprob: -7.922928333282471
    5. '):
' → logprob: -10.172927856445312
    6. ')' → logprob: -10.172927856445312
    7. '(mod' → logprob: -10.422927856445312
    8. '```' → logprob: -11.922927856445312
    9. '09' → logprob: -12.047927856445312
    10. 'pow' → logprob: -12.297927856445312

Token 775: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.625
    3. '```' → logprob: -19.875
    4. '９' → logprob: -20.75
    5. ' ' → logprob: -20.875
    6. '+' → logprob: -21.625
    7. '
' → logprob: -22.9375
    8. '``' → logprob: -23.1875
    9. '10' → logprob: -23.25
    10. '۹' → logprob: -23.4375

Token 776: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015157493180595338
    2. ' +' → logprob: -8.875151634216309
    3. '7' → logprob: -11.500151634216309
    4. '＋' → logprob: -13.625151634216309
    5. '9' → logprob: -15.250151634216309
    6. '+
' → logprob: -16.625150680541992
    7. ')+' → logprob: -17.375150680541992
    8. '```' → logprob: -19.000150680541992
    9. '()+' → logprob: -19.125150680541992
    10. '+)' → logprob: -19.375150680541992

Token 777: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00043341092532500625
    2. '9' → logprob: -7.750433444976807
    3. '+' → logprob: -13.125432968139648
    4. '```' → logprob: -15.000432968139648
    5. '07' → logprob: -15.875432968139648
    6. ' ' → logprob: -16.50043296813965
    7. '6' → logprob: -16.75043296813965
    8. '57' → logprob: -16.87543296813965
    9. '27' → logprob: -17.62543296813965
    10. '37' → logprob: -17.62543296813965

Token 778: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07935523986816406
    2. '):
' → logprob: -2.579355239868164
    3. '):
' → logprob: -7.829355239868164
    4. ')' → logprob: -9.704355239868164
    5. '):

' → logprob: -12.829355239868164
    6. ' ):' → logprob: -12.954355239868164
    7. ')：' → logprob: -14.329355239868164
    8. ' ):
' → logprob: -15.454355239868164
    9. ''):' → logprob: -15.954355239868164
    10. '):

' → logprob: -16.454355239868164

Token 779: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9291483163833618
    2. 'res' → logprob: -1.5541483163833618
    3. ' if' → logprob: -1.8041483163833618
    4. ' res' → logprob: -2.6791481971740723
    5. '   ' → logprob: -3.1791481971740723
    6. 'r' → logprob: -3.9291481971740723
    7. 'result' → logprob: -4.054148197174072
    8. '1' → logprob: -4.304148197174072
    9. 'from' → logprob: -4.804148197174072
    10. 'ans' → logprob: -4.929148197174072

Token 780: ' import' (ID: 1588)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39374133944511414
    2. 'res' → logprob: -1.3937413692474365
    3. 'r' → logprob: -3.2687413692474365
    4. 'result' → logprob: -4.143741130828857
    5. 'num' → logprob: -4.268741130828857
    6. 'numer' → logprob: -4.893741130828857
    7. 'from' → logprob: -7.518741130828857
    8. 'a' → logprob: -8.393741607666016
    9. 'x' → logprob: -8.518741607666016
    10. 'ans' → logprob: -8.643741607666016

Token 781: ' functools' (ID: 142636)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.7331569194793701
    2. 'fun' → logprob: -1.2331569194793701
    3. 'operator' → logprob: -1.4831569194793701
    4. 'fra' → logprob: -7.233157157897949
    5. ' functools' → logprob: -8.10815715789795
    6. 'sys' → logprob: -8.35815715789795
    7. ' operator' → logprob: -11.10815715789795
    8. ' math' → logprob: -11.23315715789795
    9. 'collections' → logprob: -11.23315715789795
    10. 'reduce' → logprob: -11.48315715789795

Token 782: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39780277013778687
    2. ',' → logprob: -1.1478028297424316
    3. '    
' → logprob: -5.272802829742432
    4. '
' → logprob: -5.897802829742432
    5. ' as' → logprob: -6.772802829742432
    6. ' ,' → logprob: -7.147802829742432
    7. '    ' → logprob: -8.897802352905273
    8. 'def' → logprob: -9.147802352905273
    9. ' 
' → logprob: -9.147802352905273
    10. '<|end|>' → logprob: -9.647802352905273

Token 783: ' ft' (ID: 16280)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.023336557671427727
    2. 'fun' → logprob: -3.77333664894104
    3. 'fn' → logprob: -10.523336410522461
    4. 'fc' → logprob: -10.648336410522461
    5. 'fu' → logprob: -10.648336410522461
    6. 'fp' → logprob: -12.273336410522461
    7. 'ff' → logprob: -12.773336410522461
    8. 'f' → logprob: -12.773336410522461
    9. ' ft' → logprob: -13.148336410522461
    10. 'func' → logprob: -13.523336410522461

Token 784: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6358247995376587
    2. ',' → logprob: -1.0108247995376587
    3. '
' → logprob: -2.385824680328369
    4. '    
' → logprob: -5.010824680328369
    5. 'import' → logprob: -5.510824680328369
    6. 'def' → logprob: -6.635824680328369
    7. '  
' → logprob: -7.510824680328369
    8. 'return' → logprob: -7.885824680328369
    9. ',
' → logprob: -8.010825157165527
    10. '
' → logprob: -8.385825157165527

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027883611619472504
    2. ',' → logprob: -6.877788543701172
    3. '    
' → logprob: -7.377788543701172
    4. '
' → logprob: -8.127788543701172
    5. 'return' → logprob: -8.127788543701172
    6. ' return' → logprob: -8.627788543701172
    7. 'import' → logprob: -9.002788543701172
    8. 'def' → logprob: -10.752788543701172
    9. ' 
' → logprob: -10.877788543701172
    10. '    ' → logprob: -11.002788543701172

Token 786: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1553952991962433
    2. 'numer' → logprob: -2.655395269393921
    3. 'return' → logprob: -3.155395269393921
    4. 'num' → logprob: -4.1553955078125
    5. 'if' → logprob: -4.9053955078125
    6. 'def' → logprob: -5.9053955078125
    7. 'den' → logprob: -6.0303955078125
    8. 'res' → logprob: -6.6553955078125
    9. 'fact' → logprob: -8.7803955078125
    10. 'r' (adapté à ' r') → logprob: -8.7803955078125

Token 787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2547388970851898
    2. ' =' → logprob: -1.5047389268875122
    3. '>' → logprob: -7.004738807678223
    4. ',' → logprob: -7.879738807678223
    5. '<=' → logprob: -7.879738807678223
    6. ' if' → logprob: -8.004738807678223
    7. 'if' → logprob: -8.254738807678223
    8. ' >' → logprob: -8.879738807678223
    9. ' <=' → logprob: -9.629738807678223
    10. ')' → logprob: -9.754738807678223

Token 788: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00014895245840307325
    2. ' min' → logprob: -9.00014877319336
    3. '0' → logprob: -10.87514877319336
    4. 'r' → logprob: -12.25014877319336
    5. 'n' → logprob: -14.25014877319336
    6. 'max' → logprob: -14.37514877319336
    7. '	min' → logprob: -14.75014877319336
    8. '(min' → logprob: -16.87514877319336
    9. '=min' → logprob: -17.62514877319336
    10. '.min' → logprob: -17.75014877319336

Token 789: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.125017166137695
    3. '(n' → logprob: -13.750017166137695
    4. 'r' → logprob: -14.000017166137695
    5. ' (' → logprob: -14.375017166137695
    6. ' r' → logprob: -16.375017166137695
    7. ',' → logprob: -19.125017166137695
    8. ')' → logprob: -19.125017166137695
    9. ')(' → logprob: -19.125017166137695
    10. '<|end|>' → logprob: -19.125017166137695

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012035090912831947
    2. ',n' → logprob: -9.250120162963867
    3. ' ,' → logprob: -11.000120162963867
    4. ',r' → logprob: -11.875120162963867
    5. '(n' → logprob: -14.875120162963867
    6. 'n' → logprob: -16.250120162963867
    7. ',
' → logprob: -17.000120162963867
    8. 'r' → logprob: -17.375120162963867
    9. ',len' → logprob: -18.375120162963867
    10. ')' → logprob: -18.500120162963867

Token 791: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061967797577381134
    2. ' n' → logprob: -2.8119678497314453
    3. '	n' → logprob: -15.936967849731445
    4. '(n' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.436967849731445
    6. ')n' → logprob: -18.061967849731445
    7. '_n' → logprob: -18.186967849731445
    8. ')' → logprob: -19.311967849731445
    9. '\n' → logprob: -19.436967849731445
    10. '' → logprob: -20.061967849731445

Token 792: '-r' (ID: 6335)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9390804171562195
    2. '-' → logprob: -1.1890804767608643
    3. '-r' → logprob: -1.1890804767608643
    4. '-R' → logprob: -11.689080238342285
    5. 'r' → logprob: -14.689080238342285
    6. ')' → logprob: -14.689080238342285
    7. ',' → logprob: -15.314080238342285
    8. '−' → logprob: -15.314080238342285
    9. '-
' → logprob: -15.814080238342285
    10. '[' → logprob: -16.3140811920166

Token 793: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1428537368774414
    2. ')
' → logprob: -2.0178537368774414
    3. ' )' → logprob: -9.642853736877441
    4. ')
' → logprob: -9.642853736877441
    5. ' )
' → logprob: -10.642853736877441
    6. '   ' → logprob: -11.642853736877441
    7. ')n' → logprob: -13.267853736877441
    8. '+' → logprob: -13.392853736877441
    9. 'if' → logprob: -13.517853736877441
    10. ' if' → logprob: -13.642853736877441

Token 794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007722244481556118
    2. '<|end|>' → logprob: -8.000772476196289
    3. '
' → logprob: -9.000772476196289
    4. ')' → logprob: -9.250772476196289
    5. '    
' → logprob: -9.625772476196289
    6. ',' → logprob: -9.875772476196289
    7. ' if' → logprob: -10.625772476196289
    8. 'n' → logprob: -11.000772476196289
    9. '<|end|>' → logprob: -11.250772476196289
    10. ' return' → logprob: -11.875772476196289

Token 795: ' if' (ID: 538)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.906007707118988
    2. 'num' → logprob: -1.0310077667236328
    3. 'if' (adapté à ' if') → logprob: -1.6560077667236328
    4. '   ' → logprob: -4.031007766723633
    5. ' numerator' → logprob: -4.281007766723633
    6. ' if' → logprob: -5.031007766723633
    7. 'res' → logprob: -5.406007766723633
    8. ' numer' → logprob: -5.906007766723633
    9. ' num' → logprob: -6.531007766723633
    10. 'return' → logprob: -7.781007766723633

Token 796: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234475247561932
    2. ' r' → logprob: -5.255234241485596
    3. '0' → logprob: -14.880234718322754
    4. 'n' → logprob: -16.005233764648438
    5. ' ' → logprob: -16.630233764648438
    6. '(r' → logprob: -17.067733764648438
    7. '_r' → logprob: -17.130233764648438
    8. '	r' → logprob: -17.192733764648438
    9. '```' → logprob: -18.067733764648438
    10. '
' → logprob: -18.192733764648438

Token 797: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2813992500305176
    2. ' ==' → logprob: -1.4063992500305176
    3. '=' → logprob: -8.90639877319336
    4. '0' → logprob: -10.28139877319336
    5. '>' → logprob: -10.40639877319336
    6. '<' → logprob: -11.15639877319336
    7. ')==' → logprob: -12.03139877319336
    8. ')' → logprob: -12.28139877319336
    9. ' =' → logprob: -12.28139877319336
    10. ' >' → logprob: -12.40639877319336

Token 798: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017567262053489685
    2. '1' → logprob: -4.142567157745361
    3. '=' → logprob: -6.517567157745361
    4. ' ' → logprob: -9.89256763458252
    5. '2' → logprob: -12.89256763458252
    6. ' =' → logprob: -13.76756763458252
    7. '```' → logprob: -15.64256763458252
    8. '==' → logprob: -15.89256763458252
    9. 'or' → logprob: -16.517566680908203
    10. '۰' → logprob: -17.267566680908203

Token 799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000250491953920573
    2. '1' → logprob: -8.375250816345215
    3. '=' → logprob: -11.250250816345215
    4. '2' → logprob: -12.125250816345215
    5. ' ' → logprob: -14.000250816345215
    6. '```' → logprob: -14.750250816345215
    7. '۰' → logprob: -16.8752498626709
    8. ' =' → logprob: -17.0002498626709
    9. 'or' → logprob: -17.3127498626709
    10. '０' → logprob: -17.4377498626709

Token 800: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15264731645584106
    2. ' or' → logprob: -2.4026472568511963
    3. ':return' → logprob: -3.2776472568511963
    4. '   ' → logprob: -4.777647495269775
    5. ':
' → logprob: -5.402647495269775
    6. '<|end|>' → logprob: -9.027647018432617
    7. '       ' → logprob: -9.402647018432617
    8. ' :' → logprob: -9.527647018432617
    9. 'or' → logprob: -9.902647018432617
    10. ',' → logprob: -10.152647018432617

Token 801: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015217645559459925
    2. ' r' → logprob: -6.876521587371826
    3. 'n' → logprob: -7.626521587371826
    4. ' n' → logprob: -13.626522064208984
    5. '```' → logprob: -16.376522064208984
    6. '   ' → logprob: -16.626522064208984
    7. '	r' → logprob: -16.814022064208984
    8. ' ' → logprob: -17.064022064208984
    9. ' ' → logprob: -17.439022064208984
    10. '0' → logprob: -17.689022064208984

Token 802: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06521598994731903
    2. ' <' → logprob: -2.815216064453125
    3. '+' → logprob: -6.440216064453125
    4. '<n' → logprob: -6.565216064453125
    5. ' ' → logprob: -9.815216064453125
    6. '[' → logprob: -10.065216064453125
    7. '<
' → logprob: -10.690216064453125
    8. '-' → logprob: -11.565216064453125
    9. ' r' → logprob: -11.815216064453125
    10. '<Token' → logprob: -11.940216064453125

Token 803: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47415491938591003
    2. '0' → logprob: -0.9741549491882324
    3. ' ' → logprob: -9.849154472351074
    4. ' r' → logprob: -10.599154472351074
    5. '1' → logprob: -16.34915542602539
    6. '	r' → logprob: -18.22415542602539
    7. 'rr' → logprob: -18.34915542602539
    8. '2' → logprob: -18.72415542602539
    9. 'a' → logprob: -19.09915542602539
    10. ' ' → logprob: -19.59915542602539

Token 804: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5759445428848267
    2. '0' → logprob: -0.8259445428848267
    3. ' r' → logprob: -12.825944900512695
    4. ' ' → logprob: -12.950944900512695
    5. '1' → logprob: -16.450944900512695
    6. '2' → logprob: -18.950944900512695
    7. 'a' → logprob: -19.700944900512695
    8. 'rr' → logprob: -19.700944900512695
    9. '	r' → logprob: -19.950944900512695
    10. '​' → logprob: -20.825944900512695

Token 805: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.33118924498558044
    2. ':' → logprob: -1.3311892747879028
    3. ':return' → logprob: -4.831189155578613
    4. '   ' → logprob: -5.331189155578613
    5. ':
' → logprob: -5.581189155578613
    6. 'or' → logprob: -7.081189155578613
    7. '       ' → logprob: -8.706189155578613
    8. '	or' → logprob: -9.456189155578613
    9. ' :' → logprob: -9.956189155578613
    10. ')' → logprob: -11.331189155578613

Token 806: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9259918928146362
    2. '   ' → logprob: -0.9259918928146362
    3. ' return' → logprob: -2.050992012023926
    4. '       ' → logprob: -2.925992012023926
    5. 'return' → logprob: -4.050992012023926
    6. ' ' → logprob: -5.050992012023926
    7. '1' → logprob: -6.800992012023926
    8. '    ' → logprob: -8.550992012023926
    9. ':return' → logprob: -9.675992012023926
    10. '	return' → logprob: -10.175992012023926

Token 807: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.750059127807617
    4. '  ' → logprob: -16.250059127807617
    5. 'None' → logprob: -16.375059127807617
    6. '1' → logprob: -16.875059127807617
    7. '    ' → logprob: -17.750059127807617
    8. '[]' → logprob: -17.750059127807617
    9. ' ' → logprob: -17.875059127807617
    10. '  
' → logprob: -17.875059127807617

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. '  ' → logprob: -17.625019073486328
    5. '1' → logprob: -18.125019073486328
    6. '۰' → logprob: -18.187519073486328
    7. '    ' → logprob: -18.562519073486328
    8. 'None' → logprob: -18.625019073486328
    9. '000' → logprob: -18.687519073486328
    10. '０' → logprob: -18.750019073486328

Token 809: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014585461467504501
    2. '
' → logprob: -4.264585494995117
    3. '    
' → logprob: -8.264585494995117
    4. ' if' → logprob: -9.889585494995117
    5. '<|end|>' → logprob: -10.889585494995117
    6. '  
' → logprob: -11.264585494995117
    7. ',' → logprob: -11.514585494995117
    8. 'n' → logprob: -11.889585494995117
    9. '
' → logprob: -12.139585494995117
    10. 'tokens' → logprob: -12.264585494995117

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003448792558629066
    2. 'res' → logprob: -9.375345230102539
    3. ' res' → logprob: -9.375345230102539
    4. 'result' → logprob: -10.375345230102539
    5. '    
' → logprob: -10.500345230102539
    6. ' if' → logprob: -10.875345230102539
    7. 'if' → logprob: -11.125345230102539
    8. 'num' → logprob: -11.250345230102539
    9. 'numer' → logprob: -11.500345230102539
    10. 'n' → logprob: -11.625345230102539

Token 811: ' numer' (ID: 9076)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.194329023361206
    2. 'num' → logprob: -1.194329023361206
    3. 'numer' (adapté à ' numer') → logprob: -1.319329023361206
    4. 'res' → logprob: -2.694329023361206
    5. 'return' → logprob: -3.069329023361206
    6. ' numerator' → logprob: -6.069329261779785
    7. ' numer' → logprob: -6.194329261779785
    8. 'n' → logprob: -6.569329261779785
    9. 'p' → logprob: -6.944329261779785
    10. ' num' → logprob: -6.944329261779785

Token 812: ' =' (ID: 314)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.9601863026618958
    2. ' =' → logprob: -1.085186243057251
    3. '=' → logprob: -1.335186243057251
    4. 'ators' → logprob: -4.21018648147583
    5. '   ' → logprob: -7.33518648147583
    6. ',' → logprob: -7.58518648147583
    7. ' ' → logprob: -9.210186004638672
    8. 's' → logprob: -10.210186004638672
    9. 'ater' → logprob: -11.960186004638672
    10. 'ATOR' → logprob: -12.085186004638672

Token 813: ' ft' (ID: 16280)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.0005629229708574712
    2. '1' → logprob: -7.500563144683838
    3. ' ft' → logprob: -12.25056266784668
    4. 'lambda' → logprob: -13.37556266784668
    5. 'list' → logprob: -14.62556266784668
    6. 'cp' → logprob: -14.75056266784668
    7. ' ' → logprob: -14.75056266784668
    8. '(ft' → logprob: -14.75056266784668
    9. 'fts' → logprob: -14.75056266784668
    10. 'pow' → logprob: -15.12556266784668

Token 814: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.0010032742284238338
    2. '.acc' → logprob: -7.251003265380859
    3. '.re' → logprob: -9.62600326538086
    4. '.import' → logprob: -9.62600326538086
    5. '.prod' → logprob: -10.50100326538086
    6. 'import' → logprob: -10.50100326538086
    7. '.partial' → logprob: -10.62600326538086
    8. 'reduce' → logprob: -11.37600326538086
    9. '.reducer' → logprob: -11.62600326538086
    10. '.mul' → logprob: -11.87600326538086

Token 815: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0010001786286011338
    2. 'lambda' → logprob: -7.12600040435791
    3. '   ' → logprob: -9.25100040435791
    4. '(' → logprob: -9.87600040435791
    5. ' (' → logprob: -11.00100040435791
    6. ' lambda' → logprob: -11.37600040435791
    7. '(int' → logprob: -11.50100040435791
    8. '(operator' → logprob: -12.12600040435791
    9. '    ' → logprob: -13.62600040435791
    10. '=lambda' → logprob: -13.87600040435791

Token 816: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12227357178926468
    2. 'a' → logprob: -2.9972736835479736
    3. 'lambda' → logprob: -3.1222736835479736
    4. ' x' → logprob: -3.9972736835479736
    5. ' lambda' → logprob: -6.1222734451293945
    6. ' a' → logprob: -7.7472734451293945
    7. '(lambda' → logprob: -10.122273445129395
    8. ' ' → logprob: -10.372273445129395
    9. 'acc' → logprob: -11.122273445129395
    10. '	x' → logprob: -11.497273445129395

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026816062163561583
    2. ',x' → logprob: -6.002681732177734
    3. 'lambda' → logprob: -9.002681732177734
    4. 'x' → logprob: -9.752681732177734
    5. ':' → logprob: -11.377681732177734
    6. ' ,' → logprob: -11.877681732177734
    7. '_,' → logprob: -13.752681732177734
    8. ',k' → logprob: -14.377681732177734
    9. '=lambda' → logprob: -14.377681732177734
    10. ',l' → logprob: -14.752681732177734

Token 818: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14635297656059265
    2. ' y' → logprob: -2.021353006362915
    3. 'x' → logprob: -6.271352767944336
    4. 'acc' → logprob: -6.896352767944336
    5. 'a' → logprob: -7.521352767944336
    6. 'lambda' → logprob: -9.146352767944336
    7. ' x' → logprob: -10.271352767944336
    8. ' acc' → logprob: -10.271352767944336
    9. ' lambda' → logprob: -10.646352767944336
    10. ' ' → logprob: -11.521352767944336

Token 819: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08754676580429077
    2. ',' → logprob: -2.5875468254089355
    3. 'lambda' → logprob: -4.9625468254089355
    4. 'x' → logprob: -7.7125468254089355
    5. ',x' → logprob: -7.9625468254089355
    6. ' :' → logprob: -8.962546348571777
    7. '(lambda' → logprob: -9.087546348571777
    8. '(' → logprob: -9.462546348571777
    9. '1' → logprob: -9.462546348571777
    10. ' ,' → logprob: -9.587546348571777

Token 820: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5814102292060852
    2. '(x' → logprob: -1.9564101696014404
    3. ' (' → logprob: -2.2064101696014404
    4. 'x' → logprob: -2.4564101696014404
    5. '(' → logprob: -2.9564101696014404
    6. 'lambda' → logprob: -3.0814101696014404
    7. ' x' → logprob: -5.8314104080200195
    8. ' lambda' → logprob: -6.7064104080200195
    9. '(int' → logprob: -6.8314104080200195
    10. '(operator' → logprob: -8.95641040802002

Token 821: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.018186936154961586
    2. ' *' → logprob: -4.018187046051025
    3. '*x' → logprob: -10.518186569213867
    4. '*y' → logprob: -11.643186569213867
    5. '**' → logprob: -14.268186569213867
    6. ' ' → logprob: -15.393186569213867
    7. '*(' → logprob: -15.643186569213867
    8. ' ' → logprob: -16.893186569213867
    9. '*=' → logprob: -17.518186569213867
    10. '*k' → logprob: -17.518186569213867

Token 822: '%' (ID: 4)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004072109237313271
    2. ' ,' → logprob: -6.004072189331055
    3. 'range' → logprob: -7.629072189331055
    4. '%' → logprob: -7.754072189331055
    5. ' %' → logprob: -8.129072189331055
    6. ' range' → logprob: -9.004072189331055
    7. ' *' → logprob: -9.629072189331055
    8. '(range' → logprob: -9.879072189331055
    9. '*' → logprob: -10.129072189331055
    10. ',
' → logprob: -11.254072189331055

Token 823: 'mod' (ID: 4847)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0375855527818203
    2. ' y' → logprob: -4.287585735321045
    3. '10' → logprob: -4.537585735321045
    4. 'mod' → logprob: -4.787585735321045
    5. '100' → logprob: -6.662585735321045
    6. '(' → logprob: -7.412585735321045
    7. ' ' → logprob: -7.662585735321045
    8. '(y' → logprob: -8.287585258483887
    9. '%' → logprob: -8.412585258483887
    10. 'n' → logprob: -8.787585258483887

Token 824: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013472576392814517
    2. ' ,' → logprob: -6.626347064971924
    3. ',
' → logprob: -12.251347541809082
    4. ',(' → logprob: -12.501347541809082
    5. ',y' → logprob: -12.626347541809082
    6. '   ' → logprob: -13.626347541809082
    7. ',n' → logprob: -13.751347541809082
    8. ',map' → logprob: -14.001347541809082
    9. ',list' → logprob: -14.126347541809082
    10. ' ' → logprob: -14.376347541809082

Token 825: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026217024424113333
    2. ' range' → logprob: -8.250262260437012
    3. '(range' → logprob: -14.250262260437012
    4. 'it' → logprob: -15.625262260437012
    5. '	range' → logprob: -16.375261306762695
    6. 'list' → logprob: -17.125261306762695
    7. '[' → logprob: -18.500261306762695
    8. ' ' → logprob: -18.875261306762695
    9. '   ' → logprob: -19.375261306762695
    10. 'map' → logprob: -19.500261306762695

Token 826: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.003423897083848715
    2. '(int' → logprob: -5.753423690795898
    3. 'lambda' → logprob: -8.378423690795898
    4. 'int' → logprob: -11.753423690795898
    5. '(' → logprob: -12.253423690795898
    6. '(str' → logprob: -12.878423690795898
    7. '(operator' → logprob: -14.878423690795898
    8. ' (' → logprob: -16.0034236907959
    9. '   ' → logprob: -16.2534236907959
    10. ' lambda' → logprob: -16.3784236907959

Token 827: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.019477980211377144
    2. 'int' → logprob: -4.519477844238281
    3. '(lambda' → logprob: -5.019477844238281
    4. ' lambda' → logprob: -6.519477844238281
    5. '(int' → logprob: -8.269477844238281
    6. 'x' → logprob: -11.644477844238281
    7. 'z' → logprob: -11.894477844238281
    8. ' (' → logprob: -12.019477844238281
    9. '(' → logprob: -12.144477844238281
    10. 'i' → logprob: -12.519477844238281

Token 828: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027114381082355976
    2. ' :' → logprob: -6.127711296081543
    3. 'lambda' → logprob: -8.377711296081543
    4. ':i' → logprob: -9.127711296081543
    5. ' i' → logprob: -9.752711296081543
    6. ':(' → logprob: -9.752711296081543
    7. ':n' → logprob: -11.002711296081543
    8. '(lambda' → logprob: -11.002711296081543
    9. ' lambda' → logprob: -11.252711296081543
    10. 'n' → logprob: -11.877711296081543

Token 829: ' n' (ID: 297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09385799616575241
    2. '(lambda' → logprob: -2.593858003616333
    3. 'n' → logprob: -4.968857765197754
    4. ' lambda' → logprob: -5.343857765197754
    5. '(n' → logprob: -5.843857765197754
    6. 'int' → logprob: -8.968857765197754
    7. ' (' → logprob: -10.343857765197754
    8. ' n' → logprob: -10.593857765197754
    9. '   ' → logprob: -11.093857765197754
    10. '(' → logprob: -12.218857765197754

Token 830: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9121431112289429
    2. '-' → logprob: -1.0371431112289429
    3. '-i' → logprob: -1.4121431112289429
    4. '+' → logprob: -8.662142753601074
    5. '-(' → logprob: -10.537142753601074
    6. '-
' → logprob: -11.537142753601074
    7. ' ' → logprob: -12.037142753601074
    8. '-x' → logprob: -12.162142753601074
    9. '-k' → logprob: -12.912142753601074
    10. ' i' → logprob: -12.912142753601074

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022110389545559883
    2. ',i' → logprob: -7.002211093902588
    3. ' ,' → logprob: -7.377211093902588
    4. ',r' → logprob: -8.50221061706543
    5. ')' → logprob: -9.37721061706543
    6. ',n' → logprob: -9.62721061706543
    7. '+' → logprob: -9.75221061706543
    8. ':' → logprob: -10.25221061706543
    9. '%' → logprob: -10.87721061706543
    10. ',x' → logprob: -11.00221061706543

Token 832: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.060365608893335e-05
    2. ' range' → logprob: -10.125041007995605
    3. '(range' → logprob: -15.000041007995605
    4. '	range' → logprob: -16.00004005432129
    5. 'rang' → logprob: -18.75004005432129
    6. ')' → logprob: -19.37504005432129
    7. 'list' → logprob: -19.37504005432129
    8. ' xrange' → logprob: -19.75004005432129
    9. 'ran' → logprob: -20.00004005432129
    10. 'r' → logprob: -20.75004005432129

Token 833: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.20157141983509064
    2. 'r' → logprob: -1.7015714645385742
    3. '(' → logprob: -9.326571464538574
    4. '	r' → logprob: -10.201571464538574
    5. '0' → logprob: -11.451571464538574
    6. ' r' → logprob: -11.576571464538574
    7. ',r' → logprob: -12.826571464538574
    8. '[r' → logprob: -12.951571464538574
    9. '(
' → logprob: -13.201571464538574
    10. ' (' → logprob: -13.326571464538574

Token 834: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05109653249382973
    2. '),' → logprob: -3.5510964393615723
    3. ')),' → logprob: -4.676096439361572
    4. ')' → logprob: -5.176096439361572
    5. '0' → logprob: -5.801096439361572
    6. '1' → logprob: -6.801096439361572
    7. '(' → logprob: -7.051096439361572
    8. ')))' → logprob: -7.301096439361572
    9. '));' → logprob: -9.17609691619873
    10. ')):' → logprob: -9.30109691619873

Token 835: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007260137936100364
    2. ' ' → logprob: -7.250726222991943
    3. '   ' → logprob: -11.250725746154785
    4. 'n' → logprob: -14.000725746154785
    5. 'mod' → logprob: -14.375725746154785
    6. '  ' → logprob: -14.500725746154785
    7. '<|end|>' → logprob: -14.875725746154785
    8. '    ' → logprob: -15.750725746154785
    9. '(' → logprob: -15.875725746154785
    10. 'pow' → logprob: -16.0007266998291

Token 836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014597235713154078
    2. ' ' → logprob: -8.87514591217041
    3. '   ' → logprob: -12.25014591217041
    4. '  ' → logprob: -14.87514591217041
    5. '    ' → logprob: -15.75014591217041
    6. '<|end|>' → logprob: -16.000146865844727
    7. '۱' → logprob: -16.250146865844727
    8. '     ' → logprob: -16.750146865844727
    9. '(' → logprob: -16.750146865844727
    10. ')' → logprob: -17.125146865844727

Token 837: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004438662901520729
    2. ' )' → logprob: -5.504438877105713
    3. '*' → logprob: -9.004438400268555
    4. ',' → logprob: -9.129438400268555
    5. '   ' → logprob: -9.504438400268555
    6. ' *' → logprob: -10.504438400268555
    7. ')
' → logprob: -11.379438400268555
    8. ')*' → logprob: -12.754438400268555
    9. '*)' → logprob: -13.129438400268555
    10. ',)' → logprob: -13.629438400268555

Token 838: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6018397808074951
    2. '<|end|>' → logprob: -1.3518397808074951
    3. '   ' → logprob: -1.7268397808074951
    4. ' )' → logprob: -4.976840019226074
    5. ' ' → logprob: -5.851840019226074
    6. '    ' → logprob: -6.101840019226074
    7. '<|end|>' → logprob: -7.476840019226074
    8. '+' → logprob: -7.601840019226074
    9. '  ' → logprob: -7.851840019226074
    10. '*' → logprob: -7.976840019226074

Token 839: ' denom' (ID: 73604)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5177153944969177
    2. 'numer' → logprob: -1.3927154541015625
    3. 'ft' → logprob: -2.7677154541015625
    4. ' lambda' → logprob: -2.8927154541015625
    5. '   ' → logprob: -4.1427154541015625
    6. ' ft' → logprob: -5.0177154541015625
    7. ' numer' → logprob: -5.3927154541015625
    8. ')' → logprob: -5.8927154541015625
    9. 'den' → logprob: -6.1427154541015625
    10. '(lambda' → logprob: -6.3927154541015625

Token 840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015320509672165
    2. '=' → logprob: -1.701532006263733
    3. '=lambda' → logprob: -9.076532363891602
    4. 's' → logprob: -12.576532363891602
    5. ' =
' → logprob: -15.076532363891602
    6. '=
' → logprob: -15.451532363891602
    7. '＝' → logprob: -15.701532363891602
    8. ',' → logprob: -15.951532363891602
    9. ' ' → logprob: -17.3265323638916
    10. 'lambda' → logprob: -17.7015323638916

Token 841: ' ft' (ID: 16280)
  Prédit: ' ft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ft' → logprob: -0.5760706067085266
    2. 'ft' → logprob: -0.8260706067085266
    3. '1' → logprob: -9.826070785522461
    4. '(ft' → logprob: -10.201070785522461
    5. '	ft' → logprob: -11.201070785522461
    6. '_ft' → logprob: -11.826070785522461
    7. ' ' → logprob: -12.326070785522461
    8. 'pow' → logprob: -12.576070785522461
    9. '*ft' → logprob: -12.951070785522461
    10. '-ft' → logprob: -13.826070785522461

Token 842: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.0052362410351634026
    2. 'reduce' → logprob: -5.2552361488342285
    3. ' reduce' → logprob: -13.505236625671387
    4. '_reduce' → logprob: -14.255236625671387
    5. ' .' → logprob: -15.755236625671387
    6. 'import' → logprob: -16.00523567199707
    7. '.' → logprob: -16.63023567199707
    8. '.partial' → logprob: -17.88023567199707
    9. 'redu' → logprob: -18.13023567199707
    10. '.re' → logprob: -18.38023567199707

Token 843: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.1279553291387856e-05
    2. 'lambda' → logprob: -12.000011444091797
    3. '(' → logprob: -12.250011444091797
    4. ' (' → logprob: -15.875011444091797
    5. '=lambda' → logprob: -16.875011444091797
    6. ' lambda' → logprob: -17.250011444091797
    7. '(
' → logprob: -18.875011444091797
    8. '(l' → logprob: -19.750011444091797
    9. '```' → logprob: -20.125011444091797
    10. '1' → logprob: -21.750011444091797

Token 844: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09401610493659973
    2. 'lambda' → logprob: -2.7190160751342773
    3. ' x' → logprob: -4.094016075134277
    4. '(lambda' → logprob: -5.594016075134277
    5. ' lambda' → logprob: -5.719016075134277
    6. '<|end|>' → logprob: -9.594016075134277
    7. '=lambda' → logprob: -10.719016075134277
    8. ' ' → logprob: -11.344016075134277
    9. '(x' → logprob: -11.844016075134277
    10. 'l' → logprob: -13.094016075134277

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008509631152264774
    2. ' ,' → logprob: -7.375851154327393
    3. 'lambda' → logprob: -9.500850677490234
    4. ' lambda' → logprob: -9.875850677490234
    5. ',x' → logprob: -10.125850677490234
    6. '=lambda' → logprob: -10.250850677490234
    7. '(lambda' → logprob: -11.125850677490234
    8. '<|end|>' → logprob: -12.250850677490234
    9. ',n' → logprob: -14.250850677490234
    10. ',k' → logprob: -14.500850677490234

Token 846: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005233882926404476
    2. ' y' → logprob: -5.2552337646484375
    3. 'lambda' → logprob: -16.130233764648438
    4. 'x' → logprob: -18.130233764648438
    5. ' lambda' → logprob: -19.380233764648438
    6. ',y' → logprob: -20.255233764648438
    7. '	y' → logprob: -20.255233764648438
    8. ' ' → logprob: -20.380233764648438
    9. ',' → logprob: -21.380233764648438
    10. '  ' → logprob: -22.130233764648438

Token 847: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8581047654151917
    2. ':' → logprob: -0.9831047654151917
    3. '=lambda' → logprob: -2.108104705810547
    4. ' lambda' → logprob: -2.983104705810547
    5. '(lambda' → logprob: -4.233104705810547
    6. 'lambda' → logprob: -4.483104705810547
    7. ' ,' → logprob: -6.108104705810547
    8. ' :' → logprob: -7.108104705810547
    9. '<|end|>' → logprob: -7.358104705810547
    10. '=' → logprob: -9.608104705810547

Token 848: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05056968331336975
    2. ' lambda' → logprob: -3.300569772720337
    3. '(lambda' → logprob: -4.425569534301758
    4. 'x' → logprob: -7.675569534301758
    5. ' x' → logprob: -11.175569534301758
    6. ' (' → logprob: -13.300569534301758
    7. '=lambda' → logprob: -13.550569534301758
    8. '(' → logprob: -14.550569534301758
    9. '1' → logprob: -14.800569534301758
    10. '(x' → logprob: -15.175569534301758

Token 849: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20554201304912567
    2. ',' → logprob: -2.3305420875549316
    3. '*y' → logprob: -2.8305420875549316
    4. 'lambda' → logprob: -4.580542087554932
    5. ' *' → logprob: -4.705542087554932
    6. '(lambda' → logprob: -6.080542087554932
    7. ',y' → logprob: -6.080542087554932
    8. '*x' → logprob: -6.330542087554932
    9. ':' → logprob: -6.705542087554932
    10. ' lambda' → logprob: -7.205542087554932

Token 850: '%' (ID: 4)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.600182056427002
    2. 'lambda' → logprob: -0.975182056427002
    3. ',' → logprob: -2.850182056427002
    4. ' lambda' → logprob: -4.725182056427002
    5. '%' → logprob: -5.350182056427002
    6. '=lambda' → logprob: -5.975182056427002
    7. '(' → logprob: -10.100181579589844
    8. ' ,' → logprob: -10.475181579589844
    9. '%,' → logprob: -10.600181579589844
    10. 'mod' → logprob: -10.600181579589844

Token 851: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0047251260839402676
    2. '(mod' → logprob: -5.504724979400635
    3. ' mod' → logprob: -7.879724979400635
    4. 'lambda' → logprob: -8.379725456237793
    5. '```' → logprob: -11.879725456237793
    6. 'int' → logprob: -12.129725456237793
    7. '(lambda' → logprob: -12.254725456237793
    8. ' (' → logprob: -12.879725456237793
    9. '(' → logprob: -12.879725456237793
    10. '2' → logprob: -13.004725456237793

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006892018136568367
    2. 'lambda' → logprob: -7.6256890296936035
    3. '(lambda' → logprob: -8.750689506530762
    4. ' ,' → logprob: -10.250689506530762
    5. '=lambda' → logprob: -12.500689506530762
    6. ' lambda' → logprob: -13.375689506530762
    7. ',
' → logprob: -14.250689506530762
    8. '(' → logprob: -14.750689506530762
    9. '   ' → logprob: -15.375689506530762
    10. ',map' → logprob: -15.750689506530762

Token 853: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5120455026626587
    2. 'map' → logprob: -1.0120455026626587
    3. 'lambda' → logprob: -4.137045383453369
    4. ' map' → logprob: -4.387045383453369
    5. ' range' → logprob: -4.762045383453369
    6. ' lambda' → logprob: -8.387045860290527
    7. '(range' → logprob: -10.012045860290527
    8. '(map' → logprob: -12.012045860290527
    9. '   ' → logprob: -12.012045860290527
    10. '(lambda' → logprob: -12.262045860290527

Token 854: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0003718046355061233
    2. 'lambda' → logprob: -8.250371932983398
    3. '=lambda' → logprob: -9.625371932983398
    4. '(' → logprob: -10.125371932983398
    5. '<|end|>' → logprob: -12.750371932983398
    6. '```' → logprob: -14.875371932983398
    7. '(int' → logprob: -15.125371932983398
    8. '(range' → logprob: -15.375371932983398
    9. '(l' → logprob: -15.375371932983398
    10. ' lambda' → logprob: -16.3753719329834

Token 855: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.15064045786857605
    2. '(lambda' → logprob: -2.9006404876708984
    3. 'i' → logprob: -3.0256404876708984
    4. ' lambda' → logprob: -3.4006404876708984
    5. '=lambda' → logprob: -6.650640487670898
    6. ' i' → logprob: -6.775640487670898
    7. '   ' → logprob: -9.025640487670898
    8. 'int' → logprob: -9.650640487670898
    9. 'y' → logprob: -9.650640487670898
    10. '(i' → logprob: -10.150640487670898

Token 856: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1851983517408371
    2. '(lambda' → logprob: -1.9351983070373535
    3. 'lambda' → logprob: -4.3101983070373535
    4. '=lambda' → logprob: -5.4351983070373535
    5. ' lambda' → logprob: -5.4351983070373535
    6. '<|end|>' → logprob: -6.8101983070373535
    7. '(' → logprob: -7.1851983070373535
    8. ' :' → logprob: -7.6851983070373535
    9. '```' → logprob: -10.685198783874512
    10. ':return' → logprob: -10.935198783874512

Token 857: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6630067825317383
    2. 'lambda' → logprob: -1.1630067825317383
    3. ' i' → logprob: -2.7880067825317383
    4. '(i' → logprob: -3.0380067825317383
    5. ' lambda' → logprob: -3.4130067825317383
    6. '(lambda' → logprob: -4.038006782531738
    7. ' (' → logprob: -5.163006782531738
    8. 'range' → logprob: -5.913006782531738
    9. '1' → logprob: -6.163006782531738
    10. 'int' → logprob: -7.663006782531738

Token 858: '+' (ID: 10)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.894642174243927
    2. '+' → logprob: -1.0196421146392822
    3. '1' → logprob: -2.0196421146392822
    4. ':' → logprob: -2.6446421146392822
    5. ',' → logprob: -4.644642353057861
    6. ' +' → logprob: -5.019642353057861
    7. 'for' → logprob: -6.019642353057861
    8. '(' → logprob: -6.144642353057861
    9. 'in' → logprob: -6.269642353057861
    10. 'from' → logprob: -7.019642353057861

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -15.750021934509277
    4. '   ' → logprob: -17.00002098083496
    5. '１' → logprob: -17.62502098083496
    6. '۱' → logprob: -17.62502098083496
    7. '2' → logprob: -17.87502098083496
    8. '`' → logprob: -18.68752098083496
    9. '<|end|>' → logprob: -18.75002098083496
    10. '(' → logprob: -18.81252098083496

Token 860: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004976866766810417
    2. ',r' → logprob: -5.379976749420166
    3. ' ,' → logprob: -8.379977226257324
    4. ',n' → logprob: -9.129977226257324
    5. 'range' → logprob: -12.254977226257324
    6. '(range' → logprob: -12.504977226257324
    7. '(r' → logprob: -12.754977226257324
    8. ' range' → logprob: -13.379977226257324
    9. '),' → logprob: -14.004977226257324
    10. '(n' → logprob: -14.504977226257324

Token 861: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009117019944824278
    2. ' range' → logprob: -7.000911712646484
    3. '	range' → logprob: -16.250911712646484
    4. '(range' → logprob: -16.375911712646484
    5. ' xrange' → logprob: -20.875911712646484
    6. '.range' → logprob: -21.750911712646484
    7. '_range' → logprob: -22.000911712646484
    8. '   ' → logprob: -22.250911712646484
    9. 'rang' → logprob: -22.750911712646484
    10. 'Range' → logprob: -23.375911712646484

Token 862: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.889424836728722e-05
    2. 'r' → logprob: -9.250099182128906
    3. '(' → logprob: -12.875099182128906
    4. '[r' → logprob: -17.625099182128906
    5. '(
' → logprob: -17.875099182128906
    6. '	r' → logprob: -18.125099182128906
    7. '```' → logprob: -18.125099182128906
    8. ' r' → logprob: -18.375099182128906
    9. ')' → logprob: -19.000099182128906
    10. ' (' → logprob: -19.250099182128906

Token 863: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -3.166338137816638e-05
    2. ' ),' → logprob: -10.875031471252441
    3. ',' → logprob: -11.375031471252441
    4. ',),' → logprob: -15.000031471252441
    5. ')' → logprob: -15.375031471252441
    6. '   ' → logprob: -16.000032424926758
    7. '1' → logprob: -16.125032424926758
    8. '))' → logprob: -16.125032424926758
    9. '...),' → logprob: -17.250032424926758
    10. '()),' → logprob: -17.500032424926758

Token 864: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031808018684387207
    2. ' ' → logprob: -5.753180980682373
    3. '   ' → logprob: -12.753180503845215
    4. '  ' → logprob: -16.75318145751953
    5. 'mod' → logprob: -16.87818145751953
    6. ')' → logprob: -17.25318145751953
    7. 'def' → logprob: -17.69068145751953
    8. '```' → logprob: -18.19068145751953
    9. '[' → logprob: -18.37818145751953
    10. '    ' → logprob: -18.50318145751953

Token 865: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.375003814697266
    4. 'mod' → logprob: -18.500003814697266
    5. ')' → logprob: -19.000003814697266
    6. 'def' → logprob: -19.000003814697266
    7. '```' → logprob: -19.125003814697266
    8. '  ' → logprob: -19.500003814697266
    9. '       ' → logprob: -19.625003814697266
    10. '(' → logprob: -19.937503814697266

Token 866: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002786167024169117
    2. '   ' → logprob: -8.37527847290039
    3. ')
' → logprob: -10.12527847290039
    4. ' )' → logprob: -12.37527847290039
    5. ')return' → logprob: -13.37527847290039
    6. ')#' → logprob: -14.00027847290039
    7. ' ' → logprob: -15.50027847290039
    8. '  ' → logprob: -16.12527847290039
    9. ')
' → logprob: -16.25027847290039
    10. ')*' → logprob: -16.37527847290039

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016344779869541526
    2. 'return' → logprob: -6.87663459777832
    3. ' return' → logprob: -7.50163459777832
    4. '
' → logprob: -10.87663459777832
    5. '    
' → logprob: -11.12663459777832
    6. '	return' → logprob: -12.37663459777832
    7. '```' → logprob: -12.50163459777832
    8. 'def' → logprob: -13.00163459777832
    9. '   ' → logprob: -13.37663459777832
    10. ')' → logprob: -15.00163459777832

Token 868: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5554211139678955
    2. 'return' (adapté à ' return') → logprob: -1.0554211139678955
    3. ' return' → logprob: -2.6804211139678955
    4. ')' → logprob: -5.305420875549316
    5. 'numer' → logprob: -6.930420875549316
    6. '	return' → logprob: -7.680420875549316
    7. 'result' → logprob: -7.680420875549316
    8. 'def' → logprob: -7.805420875549316
    9. 'den' → logprob: -8.055420875549316
    10. ' ' → logprob: -8.680420875549316

Token 869: ' numer' (ID: 9076)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5827487707138062
    2. 'numer' → logprob: -0.9577487707138062
    3. ' numer' → logprob: -3.2077488899230957
    4. ' (' → logprob: -4.082748889923096
    5. 'n' → logprob: -8.582748413085938
    6. ' numerator' → logprob: -9.457748413085938
    7. 'pow' → logprob: -9.957748413085938
    8. '(f' → logprob: -10.457748413085938
    9. '(' → logprob: -10.457748413085938
    10. '   ' → logprob: -10.582748413085938

Token 870: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20157921314239502
    2. '*' → logprob: -1.701579213142395
    3. 'pow' → logprob: -9.826579093933105
    4. '*h' → logprob: -9.951579093933105
    5. '	' → logprob: -11.076579093933105
    6. '   ' → logprob: -11.326579093933105
    7. ' *
' → logprob: -11.576579093933105
    8. ' h' → logprob: -11.826579093933105
    9. ' pow' → logprob: -12.701579093933105
    10. 'h' → logprob: -12.701579093933105

Token 871: ' mod' (ID: 1812)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -8.65707261255011e-06
    2. ' pow' → logprob: -11.750008583068848
    3. 'power' → logprob: -14.500008583068848
    4. '(pow' → logprob: -15.875008583068848
    5. 'ft' → logprob: -16.375009536743164
    6. 'pw' → logprob: -18.250009536743164
    7. 'mod' → logprob: -18.500009536743164
    8. '```' → logprob: -18.750009536743164
    9. 'p' → logprob: -19.375009536743164
    10. '   ' → logprob: -19.500009536743164

Token 872: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.014777416363358498
    2. ' pow' → logprob: -4.514777183532715
    3. '_pow' → logprob: -5.764777183532715
    4. 'inv' → logprob: -8.139777183532715
    5. '(pow' → logprob: -8.639777183532715
    6. '_inv' → logprob: -10.639777183532715
    7. '   ' → logprob: -10.764777183532715
    8. '.pow' → logprob: -11.389777183532715
    9. '<|end|>' → logprob: -11.389777183532715
    10. '_inverse' → logprob: -11.639777183532715

Token 873: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05609788000583649
    2. ' (' → logprob: -2.931097984313965
    3. '(mod' → logprob: -6.806097984313965
    4. 'den' → logprob: -10.056097984313965
    5. '(
' → logprob: -10.431097984313965
    6. ' (
' → logprob: -11.931097984313965
    7. 'mod' → logprob: -12.306097984313965
    8. '(n' → logprob: -12.931097984313965
    9. ' ' → logprob: -13.181097984313965
    10. '(def' → logprob: -13.556097984313965

Token 874: 'den' (ID: 1660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759411454200745
    2. 'den' → logprob: -0.8259411454200745
    3. '-den' → logprob: -15.07594108581543
    4. '_den' → logprob: -15.20094108581543
    5. '```' → logprob: -15.32594108581543
    6. ' denom' → logprob: -15.82594108581543
    7. 'mod' → logprob: -15.95094108581543
    8. 'Den' → logprob: -15.95094108581543
    9. 'def' → logprob: -16.20094108581543
    10. '.den' → logprob: -16.32594108581543

Token 875: 'om' (ID: 310)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6341906189918518
    2. 'om' → logprob: -0.7591906189918518
    3. '(mod' → logprob: -7.259190559387207
    4. 'o' → logprob: -7.509190559387207
    5. '[' → logprob: -9.009190559387207
    6. 'omod' → logprob: -9.134190559387207
    7. ' mod' → logprob: -10.384190559387207
    8. '```' → logprob: -10.759190559387207
    9. 'm' → logprob: -11.634190559387207
    10. 'um' → logprob: -11.759190559387207

Token 876: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18413570523262024
    2. '%' → logprob: -2.184135675430298
    3. ',' → logprob: -3.059135675430298
    4. ')%' → logprob: -5.434135913848877
    5. ')' → logprob: -6.059135913848877
    6. ' ,' → logprob: -6.434135913848877
    7. '%,' → logprob: -9.559135437011719
    8. ' )' → logprob: -9.559135437011719
    9. ' %,' → logprob: -10.184135437011719
    10. ',%' → logprob: -10.434135437011719

Token 877: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0036032749339938164
    2. ' mod' → logprob: -5.628603458404541
    3. '(mod' → logprob: -13.128602981567383
    4. '	mod' → logprob: -14.128602981567383
    5. '10' → logprob: -15.753602981567383
    6. '   ' → logprob: -16.503602981567383
    7. ' ' → logprob: -16.878602981567383
    8. '```' → logprob: -17.003602981567383
    9. 'module' → logprob: -17.503602981567383
    10. ' мод' → logprob: -18.003602981567383

Token 878: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005554605275392532
    2. ')%' → logprob: -5.380554676055908
    3. ' )' → logprob: -7.005554676055908
    4. ',' → logprob: -11.25555419921875
    5. '   ' → logprob: -11.88055419921875
    6. '%' → logprob: -12.38055419921875
    7. '%)' → logprob: -13.63055419921875
    8. ')
' → logprob: -15.13055419921875
    9. ' %' → logprob: -15.25555419921875
    10. ')#' → logprob: -15.75555419921875

Token 879: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04951253533363342
    2. ' %' → logprob: -3.0495126247406006
    3. '%
' → logprob: -7.6745123863220215
    4. ')' → logprob: -8.54951286315918
    5. '   ' → logprob: -9.54951286315918
    6. 'def' → logprob: -10.04951286315918
    7. '<|end|>' → logprob: -10.04951286315918
    8. '%n' → logprob: -10.79951286315918
    9. ')%' → logprob: -11.29951286315918
    10. ' %
' → logprob: -11.29951286315918

Token 880: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.5577775128767826e-06
    2. ' mod' → logprob: -12.250005722045898
    3. '(mod' → logprob: -14.250005722045898
    4. '	mod' → logprob: -21.3750057220459
    5. 'MOD' → logprob: -22.7500057220459
    6. '(' → logprob: -22.7500057220459
    7. ' ' → logprob: -23.5000057220459
    8. ' мод' → logprob: -23.6250057220459
    9. 'mo' → logprob: -23.8750057220459
    10. 'modal' → logprob: -24.2500057220459

Token 881: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47523781657218933
    2. '
' → logprob: -0.9752378463745117
    3. '

' → logprob: -8.225237846374512
    4. '<|end|>' → logprob: -8.475237846374512
    5. '\n' → logprob: -8.975237846374512
    6. '    
' → logprob: -9.475237846374512
    7. ' def' → logprob: -9.725237846374512
    8. ' 
' → logprob: -9.725237846374512
    9. '
' → logprob: -9.850237846374512
    10. ')' → logprob: -9.850237846374512

Token 882: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035572313936427236
    2. '
' → logprob: -8.12535572052002
    3. '\' → logprob: -10.75035572052002
    4. 'mod' → logprob: -11.87535572052002
    5. '#' → logprob: -12.12535572052002
    6. '  
' → logprob: -12.25035572052002
    7. '\n' → logprob: -12.25035572052002
    8. '(' → logprob: -12.75035572052002
    9. ' 
' → logprob: -12.75035572052002
    10. ')' → logprob: -12.87535572052002

Token 883: ' m' (ID: 284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4153549020411447e-05
    2. '(' → logprob: -11.75002384185791
    3. 'mod' → logprob: -12.25002384185791
    4. '
' → logprob: -12.87502384185791
    5. 'pow' → logprob: -13.00002384185791
    6. '0' → logprob: -13.00002384185791
    7. 'd' → logprob: -13.50002384185791
    8. '#' → logprob: -13.75002384185791
    9. '\' → logprob: -14.75002384185791
    10. '1' → logprob: -15.62502384185791

Token 884: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33835434913635254
    2. 'inv' → logprob: -1.5883543491363525
    3. 'od' → logprob: -2.8383543491363525
    4. '^{-' → logprob: -4.963354110717773
    5. 'ultip' → logprob: -5.088354110717773
    6. '_inv' → logprob: -5.588354110717773
    7. 'mod' → logprob: -5.838354110717773
    8. '_inverse' → logprob: -7.213354110717773
    9. '^-' → logprob: -7.338354110717773
    10. '#' → logprob: -7.588354110717773

Token 885: '法' (ID: 5625)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3625548481941223
    2. 'lambda' → logprob: -1.9875547885894775
    3. 'pow' → logprob: -2.6125547885894775
    4. '<|end|>' → logprob: -3.6125547885894775
    5. 'a' → logprob: -3.7375547885894775
    6. 'mod' → logprob: -4.362555027008057
    7. 'p' → logprob: -4.862555027008057
    8. 'x' → logprob: -5.112555027008057
    9. 'm' → logprob: -5.112555027008057
    10. 'b' → logprob: -5.737555027008057

Token 886: 'と' (ID: 5330)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1856352686882019
    2. ')' → logprob: -2.6856353282928467
    3. 'pow' → logprob: -3.5606353282928467
    4. 'mod' → logprob: -4.435635089874268
    5. '逆' → logprob: -4.560635089874268
    6. 'inverse' → logprob: -4.685635089874268
    7. '#' → logprob: -4.935635089874268
    8. 'inv' → logprob: -5.060635089874268
    9. '_inverse' → logprob: -5.185635089874268
    10. 'invert' → logprob: -6.060635089874268

Token 887: 'する' (ID: 39065)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048818089067935944
    2. 'mod' → logprob: -4.423818111419678
    3. '```' → logprob: -4.798818111419678
    4. 'b' → logprob: -5.298818111419678
    5. 'inv' → logprob: -5.548818111419678
    6. 'pow' → logprob: -5.673818111419678
    7. '<|end|>' → logprob: -5.923818111419678
    8. 'x' → logprob: -5.923818111419678
    9. 'inverse' → logprob: -6.048818111419678
    10. '#' → logprob: -6.423818111419678

Token 888: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014822512865066528
    2. 'mod' → logprob: -4.389822483062744
    3. 'pow' → logprob: -7.139822483062744
    4. '<|end|>' → logprob: -7.139822483062744
    5. 'n' → logprob: -8.639822959899902
    6. 'm' → logprob: -8.639822959899902
    7. 'a' → logprob: -9.139822959899902
    8. 'div' → logprob: -9.389822959899902
    9. 'lambda' → logprob: -9.639822959899902
    10. 'x' → logprob: -10.514822959899902

Token 889: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2636701762676239
    2. '^{-' → logprob: -1.8886702060699463
    3. '_inverse' → logprob: -4.138669967651367
    4. '(' → logprob: -4.388669967651367
    5. ')' → logprob: -4.638669967651367
    6. 'n' → logprob: -5.013669967651367
    7. '_inv' → logprob: -5.138669967651367
    8. '^-' → logprob: -5.263669967651367
    9. '^' → logprob: -5.388669967651367
    10. '**' → logprob: -5.638669967651367

Token 890: '乗' (ID: 155429)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6273845434188843
    2. 'pow' → logprob: -1.0023845434188843
    3. 'inverse' → logprob: -2.752384662628174
    4. 'def' → logprob: -4.377384662628174
    5. '逆' → logprob: -5.377384662628174
    6. 'multip' → logprob: -6.002384662628174
    7. ' modular' → logprob: -6.127384662628174
    8. 'power' → logprob: -6.377384662628174
    9. 'inv' → logprob: -6.377384662628174
    10. 'invert' → logprob: -6.377384662628174

Token 891: '法' (ID: 5625)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32997018098831177
    2. 'token' → logprob: -3.454970121383667
    3. 'mod' → logprob: -3.704970121383667
    4. '_inverse' → logprob: -4.079970359802246
    5. '逆' → logprob: -4.204970359802246
    6. '法' → logprob: -4.454970359802246
    7. 'a' → logprob: -4.579970359802246
    8. 'tion' → logprob: -4.704970359802246
    9. 't' → logprob: -4.704970359802246
    10. '1' → logprob: -4.704970359802246

Token 892: '的' (ID: 1616)
  Prédit: '逆'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '逆' → logprob: -0.004963578190654516
    2. '_inverse' → logprob: -5.879963397979736
    3. 'inverse' → logprob: -7.379963397979736
    4. 'def' → logprob: -7.379963397979736
    5. '_inv' → logprob: -8.004963874816895
    6. ' invers' → logprob: -9.004963874816895
    7. 'inv' → logprob: -9.254963874816895
    8. 'a' → logprob: -9.629963874816895
    9. 'invert' → logprob: -9.629963874816895
    10. '反' → logprob: -10.254963874816895

Token 893: '逆' (ID: 89037)
  Prédit: '逆'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '逆' → logprob: -0.1147463396191597
    2. '_inverse' → logprob: -3.114746332168579
    3. 'inverse' → logprob: -3.239746332168579
    4. 'def' → logprob: -3.989746332168579
    5. ' inverse' → logprob: -6.364746570587158
    6. '_inv' → logprob: -6.614746570587158
    7. 'Inverse' → logprob: -7.364746570587158
    8. 'inv' → logprob: -7.489746570587158
    9. '.inverse' → logprob: -8.11474609375
    10. ' invers' → logprob: -8.23974609375

Token 894: '元' (ID: 6753)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.6269086599349976
    2. '逆' → logprob: -1.8769086599349976
    3. '元' → logprob: -2.376908779144287
    4. 'def' → logprob: -3.001908779144287
    5. '除' → logprob: -3.626908779144287
    6. 'a' → logprob: -3.626908779144287
    7. 'inv' → logprob: -4.001908779144287
    8. 'は' → logprob: -4.376908779144287
    9. 'の' → logprob: -4.626908779144287
    10. 'x' → logprob: -4.626908779144287

Token 895: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20084495842456818
    2. '(' → logprob: -2.9508450031280518
    3. ' ' → logprob: -3.5758450031280518
    4. '<|end|>' → logprob: -3.7008450031280518
    5. ' =' → logprob: -3.8258450031280518
    6. ' def' → logprob: -4.075844764709473
    7. '_' → logprob: -4.450844764709473
    8. '=' → logprob: -4.575844764709473
    9. ',' → logprob: -5.325844764709473
    10. 'a' → logprob: -6.325844764709473

Token 896: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035572313936427236
    2. 'd' → logprob: -8.25035572052002
    3. 'mod' → logprob: -10.12535572052002
    4. 'a' → logprob: -10.62535572052002
    5. 'm' → logprob: -11.12535572052002
    6. ' def' → logprob: -12.50035572052002
    7. '0' → logprob: -12.62535572052002
    8. 'pow' → logprob: -13.00035572052002
    9. '(' → logprob: -13.75035572052002
    10. 'inverse' → logprob: -13.75035572052002

Token 897: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.022340545430779457
    2. 'def' → logprob: -4.022340774536133
    3. '_inv' → logprob: -5.522340774536133
    4. 'inverse' → logprob: -8.772340774536133
    5. '_inverse' → logprob: -10.772340774536133
    6. 'invert' → logprob: -12.397340774536133
    7. '=' → logprob: -13.397340774536133
    8. 'in' → logprob: -13.522340774536133
    9. 'INV' → logprob: -14.147340774536133
    10. ' =' → logprob: -14.647340774536133

Token 898: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038087617605924606
    2. '=' → logprob: -3.2880876064300537
    3. '(a' → logprob: -11.038087844848633
    4. '=lambda' → logprob: -11.038087844848633
    5. 'a' → logprob: -12.288087844848633
    6. 'def' → logprob: -12.913087844848633
    7. '(' → logprob: -13.038087844848633
    8. '＝' → logprob: -14.038087844848633
    9. '_' → logprob: -14.163087844848633
    10. '=(' → logprob: -14.663087844848633

Token 899: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.004085047636181116
    2. ' lambda' → logprob: -5.504085063934326
    3. '(lambda' → logprob: -12.004084587097168
    4. '=lambda' → logprob: -14.879084587097168
    5. 'def' → logprob: -17.879085540771484
    6. 'lam' → logprob: -17.879085540771484
    7. 'l' → logprob: -18.629085540771484
    8. '   ' → logprob: -18.879085540771484
    9. '_lambda' → logprob: -18.879085540771484
    10. 'λ' → logprob: -19.004085540771484

Token 900: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8670179997570813e-05
    2. ' a' → logprob: -11.125019073486328
    3. '(a' → logprob: -12.625019073486328
    4. '	a' → logprob: -15.375019073486328
    5. 'lambda' → logprob: -16.125019073486328
    6. 'x' → logprob: -16.625019073486328
    7. 'pow' → logprob: -18.000019073486328
    8. 'def' → logprob: -19.000019073486328
    9. '(lambda' → logprob: -19.875019073486328
    10. ' ' → logprob: -20.375019073486328

Token 901: ',' (ID: 11)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7715746164321899
    2. 'a' → logprob: -1.39657461643219
    3. ',' → logprob: -1.64657461643219
    4. ':' → logprob: -2.8965744972229004
    5. ' :' → logprob: -3.5215744972229004
    6. ',a' → logprob: -4.6465744972229
    7. ':a' → logprob: -6.2715744972229
    8. ' ,' → logprob: -7.1465744972229
    9. 'pow' → logprob: -8.146574974060059
    10. ' ' → logprob: -10.396574974060059

Token 902: ' mod' (ID: 1812)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.041118185967206955
    2. 'mod' → logprob: -3.2911181449890137
    3. ' m' → logprob: -6.791118144989014
    4. 'a' → logprob: -6.916118144989014
    5. 'b' → logprob: -7.291118144989014
    6. ' mod' → logprob: -8.916118621826172
    7. 'p' → logprob: -9.041118621826172
    8. 'z' → logprob: -11.541118621826172
    9. 'x' → logprob: -12.166118621826172
    10. ' a' → logprob: -13.166118621826172

Token 903: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02834589220583439
    2. 'a' → logprob: -4.403346061706543
    3. ',' → logprob: -4.653346061706543
    4. ' :' → logprob: -5.278346061706543
    5. ',a' → logprob: -7.903346061706543
    6. ':a' → logprob: -8.028346061706543
    7. '=' → logprob: -8.153346061706543
    8. ' a' → logprob: -9.778346061706543
    9. 'pow' → logprob: -11.778346061706543
    10. '=a' → logprob: -12.278346061706543

Token 904: '10' (ID: 702)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07941845059394836
    2. '10' → logprob: -2.579418420791626
    3. 'pow' → logprob: -7.704418659210205
    4. ' mod' → logprob: -9.579418182373047
    5. 'int' → logprob: -12.954418182373047
    6. '(mod' → logprob: -13.079418182373047
    7. '100' → logprob: -13.204418182373047
    8. '(' → logprob: -14.079418182373047
    9. ' ' → logprob: -14.204418182373047
    10. 'MOD' → logprob: -14.704418182373047

Token 905: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012567573226988316
    2. '9' → logprob: -4.387567520141602
    3. '^' → logprob: -10.137567520141602
    4. ' **' → logprob: -11.512567520141602
    5. ' ' → logprob: -12.262567520141602
    6. '09' → logprob: -13.387567520141602
    7. '_' → logprob: -14.387567520141602
    8. '```' → logprob: -15.012567520141602
    9. '*' → logprob: -15.262567520141602
    10. '[' → logprob: -15.887567520141602

Token 906: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.62500286102295
    3. '(' → logprob: -14.37500286102295
    4. 'int' → logprob: -14.75000286102295
    5. '09' → logprob: -16.125003814697266
    6. '109' → logprob: -16.250003814697266
    7. '999' → logprob: -16.375003814697266
    8. 'mod' → logprob: -16.500003814697266
    9. '987' → logprob: -16.500003814697266
    10. '998' → logprob: -16.750003814697266

Token 907: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078758880496025
    2. ' +' → logprob: -5.5040788650512695
    3. '＋' → logprob: -15.37907886505127
    4. '-' → logprob: -16.754077911376953
    5. '```' → logprob: -17.129077911376953
    6. '+
' → logprob: -18.254077911376953
    7. '7' → logprob: -18.379077911376953
    8. ' ' → logprob: -19.066577911376953
    9. '()+' → logprob: -19.441577911376953
    10. '+a' → logprob: -19.566577911376953

Token 908: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.56102097814437e-05
    2. '+' → logprob: -10.000045776367188
    3. '```' → logprob: -15.875045776367188
    4. '07' → logprob: -17.125045776367188
    5. '57' → logprob: -17.750045776367188
    6. ' ' → logprob: -19.250045776367188
    7. '27' → logprob: -19.250045776367188
    8. ' +' → logprob: -19.625045776367188
    9. '6' → logprob: -19.875045776367188
    10. '007' → logprob: -20.000045776367188

Token 909: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007063677534461021
    2. 'pow' → logprob: -5.507063865661621
    3. ' :' → logprob: -6.007063865661621
    4. ':a' → logprob: -8.507063865661621
    5. 'a' → logprob: -9.507063865661621
    6. ' pow' → logprob: -9.632063865661621
    7. ':def' → logprob: -10.007063865661621
    8. ',' → logprob: -10.507063865661621
    9. ':(' → logprob: -10.757063865661621
    10. '(pow' → logprob: -11.007063865661621

Token 910: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.320199877838604e-07
    2. ' pow' → logprob: -14.875
    3. 'power' → logprob: -17.5
    4. '(pow' → logprob: -21.0
    5. '_pow' → logprob: -21.875
    6. 'pw' → logprob: -22.0
    7. 'mod' → logprob: -22.375
    8. 'Pow' → logprob: -22.75
    9. 'p' → logprob: -23.25
    10. 'powers' → logprob: -24.125

Token 911: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014289376325905323
    2. '(' → logprob: -4.264289379119873
    3. 'a' → logprob: -9.014288902282715
    4. '(
' → logprob: -12.389288902282715
    5. '(

' → logprob: -18.13928985595703
    6. '(
' → logprob: -18.38928985595703
    7. ')a' → logprob: -19.01428985595703
    8. '```' → logprob: -19.01428985595703
    9. 'def' → logprob: -19.38928985595703
    10. '$a' → logprob: -19.51428985595703

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025373713579028845
    2. 'a' → logprob: -6.752537250518799
    3. ',-' → logprob: -7.627537250518799
    4. 'mod' → logprob: -7.752537250518799
    5. ',a' → logprob: -8.752537727355957
    6. '(mod' → logprob: -9.502537727355957
    7. '(' → logprob: -9.502537727355957
    8. '-' → logprob: -9.752537727355957
    9. '(-' → logprob: -10.377537727355957
    10. '(a' → logprob: -10.377537727355957

Token 913: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.735893965815194e-05
    2. ' mod' → logprob: -11.000017166137695
    3. '(mod' → logprob: -14.375017166137695
    4. '-' → logprob: -17.375017166137695
    5. '	mod' → logprob: -17.875017166137695
    6. '-mod' → logprob: -18.125017166137695
    7. 'modal' → logprob: -19.375017166137695
    8. '.mod' → logprob: -20.000017166137695
    9. '_mod' → logprob: -20.375017166137695
    10. 'mods' → logprob: -21.000017166137695

Token 914: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.438573680294212e-06
    2. ' -' → logprob: -12.125005722045898
    3. '−' → logprob: -18.2500057220459
    4. '```' → logprob: -20.2500057220459
    5. '–' → logprob: -21.2500057220459
    6. ' ' → logprob: -21.5000057220459
    7. 'a' → logprob: -21.6250057220459
    8. '()-' → logprob: -21.8750057220459
    9. ''-' → logprob: -22.5000057220459
    10. '1' → logprob: -23.5000057220459

Token 915: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '-' → logprob: -15.500000953674316
    4. '۲' → logprob: -16.687501907348633
    5. '```' → logprob: -16.812501907348633
    6. '２' → logprob: -17.750001907348633
    7. '₂' → logprob: -18.000001907348633
    8. '२' → logprob: -18.125001907348633
    9. '' → logprob: -18.187501907348633
    10. '٢' → logprob: -18.375001907348633

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006151092704385519
    2. '-' → logprob: -5.75615119934082
    3. ')' → logprob: -6.50615119934082
    4. ' ,' → logprob: -6.88115119934082
    5. ' -' → logprob: -7.75615119934082
    6. ',
' → logprob: -11.88115119934082
    7. '+' → logprob: -12.25615119934082
    8. ' )' → logprob: -12.75615119934082
    9. '```' → logprob: -14.25615119934082
    10. ' ' → logprob: -14.63115119934082

Token 917: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.676292231422849e-05
    2. ' mod' → logprob: -11.000017166137695
    3. '	mod' → logprob: -20.125017166137695
    4. '(mod' → logprob: -21.000017166137695
    5. ')' → logprob: -21.000017166137695
    6. '```' → logprob: -23.375017166137695
    7. 'moder' → logprob: -23.750017166137695
    8. '   ' → logprob: -24.375017166137695
    9. 'mods' → logprob: -24.375017166137695
    10. ' ' → logprob: -24.375017166137695

Token 918: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ')#' → logprob: -18.625001907348633
    5. ')

' → logprob: -18.875001907348633
    6. '),' → logprob: -19.500001907348633
    7. ')return' → logprob: -20.500001907348633
    8. ')`' → logprob: -20.500001907348633
    9. '）' → logprob: -20.750001907348633
    10. '))' → logprob: -20.875001907348633

Token 919: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.966313281329349e-05
    2. 'main' → logprob: -10.250049591064453
    3. '```' → logprob: -12.000049591064453
    4. '<|end|>' → logprob: -12.375049591064453
    5. '#' → logprob: -13.125049591064453
    6. ' if' → logprob: -13.625049591064453
    7. '
' → logprob: -15.875049591064453
    8. '<|end|>' → logprob: -16.125049591064453
    9. '  
' → logprob: -16.375049591064453
    10. '#if' → logprob: -16.500049591064453

Token 920: ' eg' (ID: 9768)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3754700720310211
    2. ' __' → logprob: -1.5004700422286987
    3. ' main' → logprob: -3.1254701614379883
    4. 'main' → logprob: -3.5004701614379883
    5. 'if' → logprob: -5.125470161437988
    6. '_' → logprob: -5.500470161437988
    7. '_main' → logprob: -6.125470161437988
    8. ' sys' → logprob: -6.875470161437988
    9. 'sys' → logprob: -7.250470161437988
    10. '_name' → logprob: -8.500470161437988

Token 921: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.961759259458631e-06
    2. '_cd' → logprob: -12.500004768371582
    3. 'c' → logprob: -14.875004768371582
    4. 'CD' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. 't' → logprob: -16.2500057220459
    7. 'g' → logprob: -16.6250057220459
    8. 'def' → logprob: -16.8750057220459
    9. 'cdn' → logprob: -17.2500057220459
    10. '(cd' → logprob: -17.3750057220459

Token 922: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05657079815864563
    2. '(' → logprob: -2.9315707683563232
    3. ' (' → logprob: -6.431571006774902
    4. '(x' → logprob: -10.306571006774902
    5. '_' → logprob: -11.556571006774902
    6. '_(' → logprob: -11.556571006774902
    7. '(lambda' → logprob: -12.181571006774902
    8. '（' → logprob: -13.056571006774902
    9. '(e' → logprob: -13.181571006774902
    10. 'a' → logprob: -13.306571006774902

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033404985442757607
    2. ',a' → logprob: -6.253340721130371
    3. ',b' → logprob: -6.753340721130371
    4. ' ,' → logprob: -8.503340721130371
    5. '_,' → logprob: -11.003340721130371
    6. 'a' → logprob: -12.253340721130371
    7. ',int' → logprob: -12.503340721130371
    8. ',n' → logprob: -13.253340721130371
    9. '(a' → logprob: -13.628340721130371
    10. ',y' → logprob: -13.878340721130371

Token 924: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '	b' → logprob: -16.751928329467773
    4. '   ' → logprob: -18.001928329467773
    5. 'a' → logprob: -19.126928329467773
    6. ',b' → logprob: -19.251928329467773
    7. ' ' → logprob: -19.501928329467773
    8. '```' → logprob: -19.876928329467773
    9. '    ' → logprob: -20.251928329467773
    10. '0' → logprob: -20.501928329467773

Token 925: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013375049456954002
    2. '):' → logprob: -7.12633752822876
    3. ',a' → logprob: -7.62633752822876
    4. ',b' → logprob: -11.001337051391602
    5. ' ,' → logprob: -11.626337051391602
    6. '):
' → logprob: -11.626337051391602
    7. 'a' → logprob: -13.126337051391602
    8. '   ' → logprob: -13.251337051391602
    9. ',n' → logprob: -13.251337051391602
    10. ',
' → logprob: -14.126337051391602

Token 926: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30119088292121887
    2. ' a' → logprob: -2.9261908531188965
    3. 'def' → logprob: -3.1761908531188965
    4. ' def' → logprob: -3.4261908531188965
    5. ' (' → logprob: -3.6761908531188965
    6. ' return' → logprob: -3.6761908531188965
    7. ' if' → logprob: -4.0511908531188965
    8. 'a' → logprob: -4.3011908531188965
    9. ' for' → logprob: -4.8011908531188965
    10. ' while' → logprob: -5.0511908531188965

Token 927: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7135524749755859
    2. ' a' → logprob: -2.088552474975586
    3. '   ' → logprob: -2.338552474975586
    4. ' return' → logprob: -2.588552474975586
    5. ' while' → logprob: -2.838552474975586
    6. 'a' → logprob: -3.463552474975586
    7. ' 
' → logprob: -3.838552474975586
    8. 'if' → logprob: -3.838552474975586
    9. 'def' → logprob: -4.088552474975586
    10. ' ' → logprob: -4.338552474975586

Token 928: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09157582372426987
    2. '(b' → logprob: -2.716575860977173
    3. 'a' → logprob: -4.341575622558594
    4. '(a' → logprob: -4.966575622558594
    5. 'eg' → logprob: -6.841575622558594
    6. ' (' → logprob: -8.591575622558594
    7. '(' → logprob: -8.966575622558594
    8. ' b' → logprob: -10.591575622558594
    9. '0' → logprob: -12.091575622558594
    10. '(
' → logprob: -12.341575622558594

Token 929: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02576625719666481
    2. 'eg' → logprob: -3.775766372680664
    3. 'a' → logprob: -6.025766372680664
    4. '0' → logprob: -10.025766372680664
    5. 'lambda' → logprob: -11.150766372680664
    6. '(b' → logprob: -11.275766372680664
    7. ')' → logprob: -11.650766372680664
    8. ')b' → logprob: -12.275766372680664
    9. ' b' → logprob: -12.400766372680664
    10. ' eg' → logprob: -12.525766372680664

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009344357065856457
    2. ',a' → logprob: -5.509344577789307
    3. '%' → logprob: -5.884344577789307
    4. 'a' → logprob: -6.134344577789307
    5. ' ,' → logprob: -8.759344100952148
    6. ',b' → logprob: -10.634344100952148
    7. '),' → logprob: -11.009344100952148
    8. ' %' → logprob: -11.259344100952148
    9. '%b' → logprob: -11.384344100952148
    10. ' ' → logprob: -11.509344100952148

Token 931: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. 'lambda' → logprob: -17.875003814697266
    4. '(a' → logprob: -18.375003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '	a' → logprob: -19.125003814697266
    7. 'eg' → logprob: -19.500003814697266
    8. ')' → logprob: -19.750003814697266
    9. ''a' → logprob: -19.750003814697266
    10. ')a' → logprob: -20.250003814697266

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16225416958332062
    2. ',a' → logprob: -1.9122542142868042
    3. ',b' → logprob: -6.412254333496094
    4. ' ,' → logprob: -8.537254333496094
    5. 'a' → logprob: -10.037254333496094
    6. ')' → logprob: -10.162254333496094
    7. ',x' → logprob: -10.662254333496094
    8. ',q' → logprob: -10.912254333496094
    9. '),(' → logprob: -11.037254333496094
    10. '),' → logprob: -11.412254333496094

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048588961362838745
    2. 'a' → logprob: -3.048588991165161
    3. '0' → logprob: -13.673588752746582
    4. ' a' → logprob: -16.0485897064209
    5. ' ' → logprob: -16.1735897064209
    6. 'b' → logprob: -16.6735897064209
    7. '   ' → logprob: -17.0485897064209
    8. '```' → logprob: -17.6735897064209
    9. '(a' → logprob: -17.7985897064209
    10. '(' → logprob: -17.7985897064209

Token 934: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0364636555314064
    2. ',' → logprob: -3.411463737487793
    3. '<|end|>' → logprob: -6.661463737487793
    4. ' if' → logprob: -6.786463737487793
    5. ')
' → logprob: -9.161463737487793
    6. ',a' → logprob: -9.536463737487793
    7. 'def' → logprob: -9.786463737487793
    8. '),' → logprob: -10.286463737487793
    9. 'if' → logprob: -10.411463737487793
    10. ' ,' → logprob: -11.286463737487793

Token 935: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16730079054832458
    2. ' if' → logprob: -2.5423007011413574
    3. '<|end|>' → logprob: -3.5423007011413574
    4. ',' → logprob: -4.167300701141357
    5. 'if' → logprob: -4.417300701141357
    6. '(' → logprob: -4.667300701141357
    7. 'a' → logprob: -5.667300701141357
    8. ' (' → logprob: -5.917300701141357
    9. ' def' → logprob: -7.667300701141357
    10. ',a' → logprob: -7.792300701141357

Token 936: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00321336486376822
    2. 'a' → logprob: -5.753213405609131
    3. ' b' → logprob: -10.253212928771973
    4. ' a' → logprob: -15.253212928771973
    5. 'not' → logprob: -16.37821388244629
    6. '(b' → logprob: -16.62821388244629
    7. ' not' → logprob: -18.00321388244629
    8. '(a' → logprob: -18.37821388244629
    9. '	b' → logprob: -18.75321388244629
    10. '0' → logprob: -19.50321388244629

Token 937: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03043249435722828
    2. ' ==' → logprob: -3.5304324626922607
    3. '%' → logprob: -8.28043270111084
    4. 'a' → logprob: -8.53043270111084
    5. '%b' → logprob: -9.40543270111084
    6. '[' → logprob: -9.53043270111084
    7. '=' → logprob: -10.03043270111084
    8. '0' → logprob: -11.90543270111084
    9. ']==' → logprob: -12.40543270111084
    10. 'b' → logprob: -12.40543270111084

Token 938: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020969063043594
    2. 'b' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.10020923614502
    4. ' b' → logprob: -13.85020923614502
    5. 'a' → logprob: -17.600210189819336
    6. '```' → logprob: -17.600210189819336
    7. '%b' → logprob: -17.850210189819336
    8. '1' → logprob: -17.975210189819336
    9. '	b' → logprob: -18.225210189819336
    10. '(b' → logprob: -18.600210189819336

Token 939: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.34824082255363464
    2. 'else' → logprob: -1.598240852355957
    3. ',' → logprob: -3.223240852355957
    4. '<|end|>' → logprob: -3.473240852355957
    5. ':' → logprob: -4.598240852355957
    6. '```' → logprob: -5.348240852355957
    7. '(a' → logprob: -6.223240852355957
    8. 'def' → logprob: -7.723240852355957
    9. ' (' → logprob: -7.848240852355957
    10. '(' → logprob: -7.973240852355957

Token 940: ' tuple' (ID: 31311)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.3314550817012787
    2. '(lambda' → logprob: -1.956455111503601
    3. 'g' → logprob: -3.0814549922943115
    4. 'def' → logprob: -3.3314549922943115
    5. 'lambda' → logprob: -3.3314549922943115
    6. '(g' → logprob: -4.956455230712891
    7. '(c' → logprob: -5.706455230712891
    8. 'c' → logprob: -6.331455230712891
    9. 'tuple' → logprob: -6.331455230712891
    10. '(' → logprob: -6.581455230712891

Token 941: '(re' (ID: 8178)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.7163721919059753
    2. '(map' → logprob: -0.8413721919059753
    3. '(x' → logprob: -4.341372013092041
    4. '(a' → logprob: -4.341372013092041
    5. '(' → logprob: -4.466372013092041
    6. ' eg' → logprob: -4.591372013092041
    7. '(lambda' → logprob: -4.591372013092041
    8. '(zip' → logprob: -5.216372013092041
    9. 'map' → logprob: -5.591372013092041
    10. '((' → logprob: -6.216372013092041

Token 942: 'versed' (ID: 76479)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9449629783630371
    2. 'versed' → logprob: -1.194962978363037
    3. 'duce' → logprob: -1.319962978363037
    4. 'cur' → logprob: -4.069962978363037
    5. 'map' → logprob: -4.694962978363037
    6. 'duced' → logprob: -5.194962978363037
    7. 'g' → logprob: -5.944962978363037
    8. '[' → logprob: -6.444962978363037
    9. 'curse' → logprob: -6.444962978363037
    10. 'd' → logprob: -7.319962978363037

Token 943: '(list' (ID: 13116)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.001052338513545692
    2. '(' → logprob: -6.876052379608154
    3. ' eg' → logprob: -11.376051902770996
    4. '((' → logprob: -13.001051902770996
    5. '(div' → logprob: -13.751051902770996
    6. 'div' → logprob: -13.751051902770996
    7. '(e' → logprob: -13.876051902770996
    8. '(
' → logprob: -14.376051902770996
    9. '(*' → logprob: -15.001051902770996
    10. '(g' → logprob: -15.126051902770996

Token 944: '(it' (ID: 29445)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.00016539888747502118
    2. '(' → logprob: -9.625164985656738
    3. 'div' → logprob: -9.625164985656738
    4. ' eg' → logprob: -10.750164985656738
    5. '(div' → logprob: -12.125164985656738
    6. 'def' → logprob: -13.000164985656738
    7. 'map' → logprob: -13.625164985656738
    8. '(
' → logprob: -14.000164985656738
    9. '((' → logprob: -14.375164985656738
    10. '(*' → logprob: -14.500164985656738

Token 945: '.chain' (ID: 103950)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.9576159715652466
    2. 'eg' → logprob: -2.082615852355957
    3. 'acc' → logprob: -2.207615852355957
    4. '(it' → logprob: -2.207615852355957
    5. '(zip' → logprob: -2.457615852355957
    6. '(' → logprob: -2.832615852355957
    7. '(st' → logprob: -3.582615852355957
    8. 'st' → logprob: -3.832615852355957
    9. 'map' → logprob: -4.457615852355957
    10. '.acc' → logprob: -4.832615852355957

Token 946: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032819606363773346
    2. '(*' → logprob: -4.407819747924805
    3. '([' → logprob: -4.532819747924805
    4. '((' → logprob: -5.407819747924805
    5. '(range' → logprob: -6.532819747924805
    6. '(*(' → logprob: -6.907819747924805
    7. '([(' → logprob: -7.032819747924805
    8. '(it' → logprob: -7.532819747924805
    9. 'eg' → logprob: -7.907819747924805
    10. '(div' → logprob: -9.032819747924805

Token 947: 'None' (ID: 8505)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.08196762949228287
    2. '*' → logprob: -2.58196759223938
    3. '(' → logprob: -6.581967830657959
    4. '(*' → logprob: -7.206967830657959
    5. '*(' → logprob: -7.581967830657959
    6. '*[' → logprob: -9.0819673538208
    7. ' eg' → logprob: -9.2069673538208
    8. '[' → logprob: -9.9569673538208
    9. '   ' → logprob: -10.7069673538208
    10. ' *' → logprob: -10.8319673538208

Token 948: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.40345674753189087
    2. '(' → logprob: -1.528456687927246
    3. '(it' → logprob: -2.528456687927246
    4. '],[' → logprob: -4.403456687927246
    5. 'eg' → logprob: -5.278456687927246
    6. '((' → logprob: -5.403456687927246
    7. '(iter' → logprob: -5.778456687927246
    8. '(*' → logprob: -6.153456687927246
    9. '([' → logprob: -6.778456687927246
    10. 'from' → logprob: -6.903456687927246

Token 949: ' eg' (ID: 9768)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -8.816591434879228e-05
    2. '[' → logprob: -10.50008773803711
    3. '[*' → logprob: -11.37508773803711
    4. 'map' → logprob: -11.50008773803711
    5. '[(' → logprob: -11.87508773803711
    6. '(' → logprob: -11.87508773803711
    7. '(*' → logprob: -12.12508773803711
    8. '*' → logprob: -12.25008773803711
    9. ' eg' → logprob: -12.50008773803711
    10. 'list' → logprob: -12.75008773803711

Token 950: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.537868779967539e-06
    2. 'cdf' → logprob: -12.375008583068848
    3. 'cdn' → logprob: -12.875008583068848
    4. 'c' → logprob: -13.625008583068848
    5. '(cd' → logprob: -16.00000762939453
    6. '(a' → logprob: -16.37500762939453
    7. 'cdr' → logprob: -16.75000762939453
    8. ' cd' → logprob: -17.25000762939453
    9. '```' → logprob: -17.37500762939453
    10. '	cd' → logprob: -17.50000762939453

Token 951: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0007254178053699434
    2. '((' → logprob: -8.250725746154785
    3. 'b' → logprob: -8.375725746154785
    4. '(a' → logprob: -8.750725746154785
    5. '(' → logprob: -10.750725746154785
    6. '(abs' → logprob: -10.875725746154785
    7. '([' → logprob: -11.375725746154785
    8. '(
' → logprob: -12.000725746154785
    9. '[b' → logprob: -12.000725746154785
    10. 'a' → logprob: -12.250725746154785

Token 952: '%' (ID: 4)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02820521406829357
    2. 'a' → logprob: -4.028205394744873
    3. '%' → logprob: -4.653205394744873
    4. '(' → logprob: -8.278204917907715
    5. '%b' → logprob: -10.528204917907715
    6. '%d' → logprob: -10.653204917907715
    7. 'mod' → logprob: -10.778204917907715
    8. '()%' → logprob: -11.028204917907715
    9. '#a' → logprob: -11.153204917907715
    10. '//' → logprob: -11.278204917907715

Token 953: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.7697225252486533e-06
    2. ' a' → logprob: -12.500003814697266
    3. ',a' → logprob: -18.375003814697266
    4. '(a' → logprob: -19.625003814697266
    5. '	a' → logprob: -20.125003814697266
    6. 'b' → logprob: -20.375003814697266
    7. ')a' → logprob: -20.500003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '>a' → logprob: -20.750003814697266
    10. '#a' → logprob: -20.875003814697266

Token 954: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09907649457454681
    2. '(a' → logprob: -2.474076509475708
    3. ',' → logprob: -5.974076271057129
    4. '[a' → logprob: -6.349076271057129
    5. '[' → logprob: -6.724076271057129
    6. 'b' → logprob: -6.849076271057129
    7. ',a' → logprob: -6.974076271057129
    8. '(b' → logprob: -7.099076271057129
    9. '(' → logprob: -7.599076271057129
    10. '),' → logprob: -8.224076271057129

Token 955: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.246537173457909e-06
    2. ' a' → logprob: -12.375003814697266
    3. ',a' → logprob: -19.250003814697266
    4. '	a' → logprob: -20.125003814697266
    5. '(a' → logprob: -20.750003814697266
    6. '#a' → logprob: -20.875003814697266
    7. '   ' → logprob: -20.875003814697266
    8. '\a' → logprob: -21.250003814697266
    9. '<|end|>' → logprob: -21.375003814697266
    10. '>a' → logprob: -21.500003814697266

Token 956: '))' (ID: 915)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.260172963142395
    2. '[:-' → logprob: -1.260172963142395
    3. '[' → logprob: -1.510172963142395
    4. '))))' → logprob: -2.6351728439331055
    5. ')))' → logprob: -3.3851728439331055
    6. '(a' → logprob: -3.5101728439331055
    7. ')[' → logprob: -3.6351728439331055
    8. ')' → logprob: -4.3851728439331055
    9. '[:' → logprob: -4.5101728439331055
    10. 'a' → logprob: -5.0101728439331055

Token 957: ')[' (ID: 13637)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.09253423660993576
    2. '[' → logprob: -2.842534303665161
    3. '(' → logprob: -4.717534065246582
    4. '())))' → logprob: -5.092534065246582
    5. ')[' → logprob: -5.342534065246582
    6. '()[' → logprob: -5.342534065246582
    7. '()' → logprob: -6.467534065246582
    8. '))' → logprob: -6.592534065246582
    9. '))[' → logprob: -6.967534065246582
    10. '[:-' → logprob: -7.592534065246582

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01189081184566021
    2. ':-' → logprob: -5.011890888214111
    3. ':' → logprob: -5.386890888214111
    4. '-' → logprob: -8.261890411376953
    5. '0' → logprob: -9.011890411376953
    6. '::-' → logprob: -9.386890411376953
    7. '2' → logprob: -10.261890411376953
    8. '[:-' → logprob: -10.511890411376953
    9. '(' → logprob: -10.886890411376953
    10. '```' → logprob: -11.761890411376953

Token 959: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03165508434176445
    2. '3' → logprob: -4.156655311584473
    3. '1' → logprob: -5.156655311584473
    4. ':]' → logprob: -5.281655311584473
    5. ':-' → logprob: -6.281655311584473
    6. ']))' → logprob: -6.531655311584473
    7. '2' → logprob: -6.906655311584473
    8. '(' → logprob: -9.031655311584473
    9. '0' → logprob: -10.406655311584473
    10. '4' → logprob: -10.531655311584473

Token 960: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002845529466867447
    2. '()))' → logprob: -6.627845764160156
    3. ')))' → logprob: -7.002845764160156
    4. '(' → logprob: -8.377845764160156
    5. ')' → logprob: -8.752845764160156
    6. '))
' → logprob: -9.377845764160156
    7. ' ))' → logprob: -10.377845764160156
    8. '<|end|>' → logprob: -10.502845764160156
    9. '[:-' → logprob: -11.502845764160156
    10. '))(' → logprob: -11.752845764160156

Token 961: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09029927849769592
    2. '<|end|>' → logprob: -2.840299367904663
    3. ')' → logprob: -3.715299367904663
    4. '(' → logprob: -7.340299129486084
    5. ':' → logprob: -7.465299129486084
    6. '#' → logprob: -7.465299129486084
    7. '```' → logprob: -7.965299129486084
    8. ',' → logprob: -8.090299606323242
    9. '[' → logprob: -8.340299606323242
    10. '(a' → logprob: -8.965299606323242

Token 962: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0470731258392334
    2. '```' → logprob: -1.4220731258392334
    3. '#' → logprob: -1.5470731258392334
    4. ')' → logprob: -2.2970731258392334
    5. 'for' → logprob: -3.9220731258392334
    6. 'a' → logprob: -4.1720733642578125
    7. '<|end|>' → logprob: -4.1720733642578125
    8. '...' → logprob: -4.4220733642578125
    9. 'print' → logprob: -4.6720733642578125
    10. 'if' → logprob: -4.9220733642578125

Token 963: 'Hr' (ID: 106096)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.011300918646156788
    2. 'C' → logprob: -4.886301040649414
    3. ',' → logprob: -6.386301040649414
    4. '!' → logprob: -6.761301040649414
    5. 'Pr' → logprob: -7.511301040649414
    6. 'Cm' → logprob: -9.261301040649414
    7. '#' → logprob: -9.636301040649414
    8. 'cr' → logprob: -10.136301040649414
    9. 'def' → logprob: -10.761301040649414
    10. 'CR' → logprob: -11.011301040649414

Token 964: ' mod' (ID: 1812)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4527934789657593
    2. '=' → logprob: -1.0777934789657593
    3. '=lambda' → logprob: -3.827793598175049
    4. 'def' → logprob: -6.452793598175049
    5. '<|end|>' → logprob: -8.70279312133789
    6. '(lambda' → logprob: -9.07779312133789
    7. 'lambda' → logprob: -9.95279312133789
    8. '#' → logprob: -10.45279312133789
    9. ' def' → logprob: -10.45279312133789
    10. '(n' → logprob: -10.95279312133789

Token 965: ' m' (ID: 284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7527902722358704
    2. '=lambda' → logprob: -1.2527902126312256
    3. 'lambda' → logprob: -1.6277902126312256
    4. '=' → logprob: -3.8777902126312256
    5. '(lambda' → logprob: -3.8777902126312256
    6. ' def' → logprob: -5.752790451049805
    7. ' =' → logprob: -7.002790451049805
    8. ' lambda' → logprob: -7.127790451049805
    9. '```' → logprob: -7.627790451049805
    10. '_lambda' → logprob: -10.377790451049805

Token 966: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03859631344676018
    2. '=' → logprob: -3.4135963916778564
    3. '=lambda' → logprob: -5.413596153259277
    4. ' def' → logprob: -8.413596153259277
    5. ' =' → logprob: -8.538596153259277
    6. '#' → logprob: -10.788596153259277
    7. '<|end|>' → logprob: -11.538596153259277
    8. 'lambda' → logprob: -12.038596153259277
    9. 'n' → logprob: -12.663596153259277
    10. '_def' → logprob: -12.788596153259277

Token 967: '使' (ID: 15159)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07262778282165527
    2. 'def' → logprob: -3.0726277828216553
    3. '=lambda' → logprob: -3.9476277828216553
    4. '(lambda' → logprob: -5.822628021240234
    5. ' lambda' → logprob: -7.197628021240234
    6. '<|end|>' → logprob: -8.322628021240234
    7. ')' → logprob: -8.447628021240234
    8. '=' → logprob: -9.072628021240234
    9. ' def' → logprob: -10.197628021240234
    10. 'n' → logprob: -10.322628021240234

Token 968: 'い' (ID: 3826)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.245880588889122
    2. 'lambda' → logprob: -2.870880603790283
    3. '=' → logprob: -2.995880603790283
    4. '(lambda' → logprob: -3.120880603790283
    5. 'def' → logprob: -3.995880603790283
    6. ' lambda' → logprob: -4.495880603790283
    7. ')' → logprob: -4.745880603790283
    8. '...' → logprob: -4.870880603790283
    9. '<|end|>' → logprob: -4.995880603790283
    10. '=[]' → logprob: -6.120880603790283

Token 969: 'ま' (ID: 5042)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.2723668813705444
    2. 'def' → logprob: -1.3973668813705444
    3. '...' → logprob: -1.8973668813705444
    4. 'lambda' → logprob: -2.647367000579834
    5. '=' → logprob: -2.897367000579834
    6. '続きを' → logprob: -3.522367000579834
    7. 'コード' → logprob: -3.647367000579834
    8. ' def' → logprob: -3.897367000579834
    9. ' code' → logprob: -4.022367000579834
    10. 'code' → logprob: -4.897367000579834

Token 970: 'わ' (ID: 20473)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.04522249475121498
    2. 'def' → logprob: -4.170222282409668
    3. 'ず' → logprob: -4.420222282409668
    4. 'なし' → logprob: -6.045222282409668
    5. 'せ' → logprob: -6.170222282409668
    6. 'づ' → logprob: -6.420222282409668
    7. '...' → logprob: -6.670222282409668
    8. 'が' → logprob: -6.920222282409668
    9. '```' → logprob: -6.920222282409668
    10. 'コード' → logprob: -7.295222282409668

Token 971: 'し' (ID: 3829)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.0054799318313599
    2. 'def' → logprob: -1.1304799318313599
    3. 'し' → logprob: -1.8804799318313599
    4. '```' → logprob: -2.2554798126220703
    5. 'せ' → logprob: -4.13047981262207
    6. '#' → logprob: -4.50547981262207
    7. 'たり' → logprob: -5.75547981262207
    8. '1' → logprob: -5.75547981262207
    9. 's' → logprob: -6.00547981262207
    10. 'f' → logprob: -6.00547981262207

Token 972: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1641089767217636
    2. 'def' → logprob: -2.039108991622925
    3. '(' → logprob: -5.164108753204346
    4. '):' → logprob: -6.164108753204346
    5. '#' → logprob: -6.414108753204346
    6. ' def' → logprob: -6.664108753204346
    7. ',' → logprob: -6.664108753204346
    8. 'コード' → logprob: -6.789108753204346
    9. '(n' → logprob: -7.039108753204346
    10. ' (' → logprob: -7.039108753204346

Token 973: 'H' (ID: 39)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010568885772954673
    2. 'comb' → logprob: -9.625105857849121
    3. 'hr' → logprob: -12.500105857849121
    4. 'rep' → logprob: -12.500105857849121
    5. 'mult' → logprob: -12.625105857849121
    6. 'r' → logprob: -12.625105857849121
    7. 'h' → logprob: -12.750105857849121
    8. 'from' → logprob: -12.750105857849121
    9. 'repeat' → logprob: -12.875105857849121
    10. 'lambda' → logprob: -13.000105857849121

Token 974: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7900592088699341
    2. 'def' → logprob: -1.165059208869934
    3. '=' → logprob: -1.915059208869934
    4. '_r' → logprob: -3.1650590896606445
    5. ' =' → logprob: -3.2900590896606445
    6. 'comb' → logprob: -5.2900590896606445
    7. 'R' → logprob: -7.5400590896606445
    8. '=lambda' → logprob: -7.6650590896606445
    9. '_' → logprob: -8.040059089660645
    10. '_comb' → logprob: -8.165059089660645

Token 975: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1160847395658493
    2. 'dd' → logprob: -2.9910848140716553
    3. '[' → logprob: -3.1160848140716553
    4. '[]' → logprob: -4.741084575653076
    5. '(lambda' → logprob: -5.491084575653076
    6. 'default' → logprob: -6.866084575653076
    7. '(dd' → logprob: -7.866084575653076
    8. ' lambda' → logprob: -8.366085052490234
    9. '0' → logprob: -9.116085052490234
    10. ' [' → logprob: -9.991085052490234

Token 976: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15609432756900787
    2. 'lambda' → logprob: -2.1560943126678467
    3. '(n' → logprob: -4.156094551086426
    4. ' n' → logprob: -5.156094551086426
    5. '(lambda' → logprob: -5.906094551086426
    6. ' lambda' → logprob: -6.281094551086426
    7. 'def' → logprob: -6.656094551086426
    8. 'r' → logprob: -6.781094551086426
    9. ' def' → logprob: -9.656094551086426
    10. '=lambda' → logprob: -10.031094551086426

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49234333634376526
    2. ',r' → logprob: -1.3673433065414429
    3. 'r' → logprob: -2.1173434257507324
    4. ',k' → logprob: -5.742343425750732
    5. 'n' → logprob: -5.867343425750732
    6. ' r' → logprob: -6.242343425750732
    7. ',n' → logprob: -6.367343425750732
    8. 'lambda' → logprob: -6.867343425750732
    9. 'k' → logprob: -7.242343425750732
    10. '=lambda' → logprob: -7.617343425750732

Token 978: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07928961515426636
    2. 'k' → logprob: -2.579289674758911
    3. ' r' → logprob: -8.079289436340332
    4. 'n' → logprob: -10.329289436340332
    5. 'm' → logprob: -10.704289436340332
    6. ' k' → logprob: -11.079289436340332
    7. 'def' → logprob: -12.079289436340332
    8. 'x' → logprob: -12.204289436340332
    9. 'lambda' → logprob: -12.704289436340332
    10. 'a' → logprob: -13.454289436340332

Token 979: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010039615444839
    2. '=' → logprob: -5.510039806365967
    3. ',' → logprob: -5.635039806365967
    4. ',n' → logprob: -7.385039806365967
    5. ' :' → logprob: -7.885039806365967
    6. '(n' → logprob: -8.010039329528809
    7. ':n' → logprob: -8.010039329528809
    8. 'n' → logprob: -8.135039329528809
    9. 'a' → logprob: -9.260039329528809
    10. '=n' → logprob: -9.385039329528809

Token 980: ' mod' (ID: 1812)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.08817443251609802
    2. ' combination' → logprob: -3.088174343109131
    3. 'lambda' → logprob: -4.213174343109131
    4. 'r' → logprob: -4.338174343109131
    5. '(lambda' → logprob: -5.588174343109131
    6. 'pow' → logprob: -6.338174343109131
    7. '(com' → logprob: -7.088174343109131
    8. '(r' → logprob: -7.088174343109131
    9. '(n' → logprob: -7.213174343109131
    10. 'power' → logprob: -7.588174343109131

Token 981: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.240773543715477
    2. ',' → logprob: -1.7407735586166382
    3. '=' → logprob: -3.4907734394073486
    4. ',n' → logprob: -5.365773677825928
    5. ' :' → logprob: -6.240773677825928
    6. ':(' → logprob: -7.740773677825928
    7. ',a' → logprob: -8.49077320098877
    8. ',r' → logprob: -8.49077320098877
    9. ',:' → logprob: -8.86577320098877
    10. ':n' → logprob: -9.11577320098877

Token 982: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030420811846852303
    2. 'mod' → logprob: -3.5304207801818848
    3. 'int' → logprob: -7.405420780181885
    4. 'pow' → logprob: -10.530421257019043
    5. ' ' → logprob: -10.905421257019043
    6. ' mod' → logprob: -11.155421257019043
    7. '100' → logprob: -13.655421257019043
    8. '(' → logprob: -14.655421257019043
    9. '1' → logprob: -15.280421257019043
    10. 'MOD' → logprob: -15.655421257019043

Token 983: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -5.180879816180095e-05
    2. '9' → logprob: -9.875051498413086
    3. '```' → logprob: -15.500051498413086
    4. '^' → logprob: -17.125051498413086
    5. '*' → logprob: -17.750051498413086
    6. '=' → logprob: -18.000051498413086
    7. '`' → logprob: -18.500051498413086
    8. ' **' → logprob: -19.375051498413086
    9. '10' → logprob: -19.500051498413086
    10. '
' → logprob: -19.625051498413086

Token 984: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. 'int' → logprob: -17.25
    3. ' ' → logprob: -20.125
    4. '(' → logprob: -20.375
    5. '```' → logprob: -20.375
    6. 'mod' → logprob: -20.625
    7. '100' → logprob: -20.75
    8. '``' → logprob: -21.0
    9. '09' → logprob: -21.0
    10. '^' → logprob: -21.375

Token 985: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2723104848410003e-05
    2. ' +' → logprob: -10.750022888183594
    3. '7' → logprob: -14.375022888183594
    4. '```' → logprob: -15.250022888183594
    5. '9' → logprob: -15.750022888183594
    6. '-' → logprob: -15.750022888183594
    7. '＋' → logprob: -16.500022888183594
    8. '+r' → logprob: -18.125022888183594
    9. '+
' → logprob: -18.375022888183594
    10. '   ' → logprob: -18.375022888183594

Token 986: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.953082341467962e-05
    2. '9' → logprob: -10.250039100646973
    3. '+' → logprob: -13.500039100646973
    4. '```' → logprob: -13.750039100646973
    5. '07' → logprob: -14.875039100646973
    6. '6' → logprob: -15.250039100646973
    7. ' ' → logprob: -15.562539100646973
    8. '-' → logprob: -15.687539100646973
    9. '27' → logprob: -16.06254005432129
    10. '10' → logprob: -16.68754005432129

Token 987: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0219828002154827e-05
    2. ' :' → logprob: -11.375020027160645
    3. ',' → logprob: -12.625020027160645
    4. ':(' → logprob: -13.000020027160645
    5. '   ' → logprob: -14.000020027160645
    6. ':n' → logprob: -14.250020027160645
    7. '       ' → logprob: -15.125020027160645
    8. '=' → logprob: -15.500020027160645
    9. 'n' → logprob: -15.625020027160645
    10. ':[' → logprob: -15.750020027160645

Token 988: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.00045140698784962296
    2. ' combination' → logprob: -7.750451564788818
    3. '(com' → logprob: -11.50045108795166
    4. 'pow' → logprob: -12.50045108795166
    5. 'com' → logprob: -13.00045108795166
    6. '(' → logprob: -13.37545108795166
    7. 'math' → logprob: -14.00045108795166
    8. '0' → logprob: -15.25045108795166
    9. 'combo' → logprob: -15.25045108795166
    10. 'power' → logprob: -15.25045108795166

Token 989: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.743758760625497e-05
    2. 'n' → logprob: -9.875077247619629
    3. '(' → logprob: -10.625077247619629
    4. '((' → logprob: -13.625077247619629
    5. '(
' → logprob: -15.375077247619629
    6. '<|end|>' → logprob: -16.000078201293945
    7. 'def' → logprob: -16.750078201293945
    8. ' (' → logprob: -17.250078201293945
    9. '```' → logprob: -18.375078201293945
    10. '#' → logprob: -18.750078201293945

Token 990: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.00010771531378850341
    2. '+' → logprob: -9.375107765197754
    3. ' +' → logprob: -10.750107765197754
    4. 'r' → logprob: -13.750107765197754
    5. '+
' → logprob: -15.500107765197754
    6. '[r' → logprob: -16.875106811523438
    7. '-' → logprob: -17.875106811523438
    8. 'plus' → logprob: -18.375106811523438
    9. '＋' → logprob: -18.375106811523438
    10. '(r' → logprob: -18.375106811523438

Token 991: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006446661427617073
    2. ',' → logprob: -5.506446838378906
    3. 'r' → logprob: -6.381446838378906
    4. ' -' → logprob: -7.506446838378906
    5. ',r' → logprob: -9.131446838378906
    6. '-r' → logprob: -12.131446838378906
    7. ' r' → logprob: -12.631446838378906
    8. '   ' → logprob: -13.131446838378906
    9. '1' → logprob: -13.631446838378906
    10. ' ' → logprob: -14.256446838378906

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.625
    3. ' ' → logprob: -16.25
    4. '１' → logprob: -17.5625
    5. '۱' → logprob: -18.6875
    6. '১' → logprob: -19.25
    7. '१' → logprob: -19.75
    8. '2' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. ' r' → logprob: -19.8125

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001754310796968639
    2. ',r' → logprob: -6.376754283905029
    3. ',n' → logprob: -10.126754760742188
    4. ' ,' → logprob: -11.376754760742188
    5. 'r' → logprob: -15.376754760742188
    6. ')' → logprob: -15.751754760742188
    7. ' r' → logprob: -15.876754760742188
    8. '(r' → logprob: -17.251754760742188
    9. '   ' → logprob: -17.376754760742188
    10. '[r' → logprob: -17.876754760742188

Token 994: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.0126840758603066e-05
    2. ' r' → logprob: -10.125040054321289
    3. 'n' → logprob: -17.00004005432129
    4. '	r' → logprob: -17.62504005432129
    5. '   ' → logprob: -17.62504005432129
    6. '﻿' → logprob: -21.12504005432129
    7. '  ' → logprob: -21.12504005432129
    8. '(r' → logprob: -21.25004005432129
    9. '_r' → logprob: -21.50004005432129
    10. '    ' → logprob: -21.75004005432129

Token 995: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044092073221690953
    2. ',' → logprob: -7.750441074371338
    3. ' )' → logprob: -13.12544059753418
    4. '-' → logprob: -13.25044059753418
    5. '))' → logprob: -13.75044059753418
    6. ')}' → logprob: -14.00044059753418
    7. ')#' → logprob: -14.25044059753418
    8. ',)' → logprob: -14.37544059753418
    9. '),' → logprob: -14.62544059753418
    10. ')
' → logprob: -15.00044059753418

Token 996: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.002475777640938759
    2. ' mod' → logprob: -6.002475738525391
    3. '	mod' → logprob: -17.12747573852539
    4. 'm' → logprob: -19.50247573852539
    5. '(mod' → logprob: -19.87747573852539
    6. ' мод' → logprob: -20.00247573852539
    7. '```' → logprob: -20.12747573852539
    8. '.mod' → logprob: -20.37747573852539
    9. ' ' → logprob: -20.37747573852539
    10. ')' → logprob: -20.75247573852539

Token 997: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -16.5
    4. ')
' → logprob: -17.75
    5. '),' → logprob: -18.375
    6. ')#' → logprob: -18.5
    7. ',)' → logprob: -18.625
    8. '()' → logprob: -18.625
    9. ')}' → logprob: -18.625
    10. ')}}' → logprob: -18.875

Token 998: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005151443183422089
    2. 'main' → logprob: -8.37551498413086
    3. '<|end|>' → logprob: -8.75051498413086
    4. '#' → logprob: -9.12551498413086
    5. '```' → logprob: -12.00051498413086
    6. ' if' → logprob: -12.25051498413086
    7. '#if' → logprob: -13.00051498413086
    8. '...' → logprob: -14.50051498413086
    9. ')' → logprob: -14.62551498413086
    10. '<|end|>' → logprob: -14.62551498413086

Token 999: ' Combination' (ID: 134507)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.20109282433986664
    2. 'deque' → logprob: -2.3260927200317383
    3. 'Priority' → logprob: -3.5760927200317383
    4. 'Deque' → logprob: -4.576092720031738
    5. 'Combination' → logprob: -4.701092720031738
    6. 'Solution' → logprob: -5.326092720031738
    7. 'Factor' → logprob: -5.576092720031738
    8. 'Segment' → logprob: -5.701092720031738
    9. 'Queue' → logprob: -5.701092720031738
    10. 'default' → logprob: -5.826092720031738

Token 1000: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001502598519437015
    2. '(' → logprob: -6.626502513885498
    3. '():' → logprob: -9.751502990722656
    4. '):' → logprob: -10.501502990722656
    5. '>:' → logprob: -10.876502990722656
    6. ':
' → logprob: -10.876502990722656
    7. '{' → logprob: -11.876502990722656
    8. '(object' → logprob: -11.876502990722656
    9. '<|end|>' → logprob: -11.876502990722656
    10. '(n' → logprob: -12.126502990722656

Token 1001: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4907521605491638
    2. ':' → logprob: -0.9907521605491638
    3. 'def' → logprob: -4.990752220153809
    4. 'object' → logprob: -5.615752220153809
    5. '(object' → logprob: -5.740752220153809
    6. ':
' → logprob: -7.240752220153809
    7. 'class' → logprob: -7.490752220153809
    8. '```' → logprob: -8.115752220153809
    9. '<|end|>' → logprob: -8.115752220153809
    10. ' object' → logprob: -8.365752220153809

Token 1002: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08911328762769699
    2. ' def' → logprob: -2.589113235473633
    3. '   ' → logprob: -4.589113235473633
    4. 'class' → logprob: -12.214113235473633
    5. '	def' → logprob: -13.089113235473633
    6. ' ' → logprob: -13.464113235473633
    7. '__' → logprob: -13.964113235473633
    8. 'mod' → logprob: -16.089113235473633
    9. 'import' → logprob: -16.964113235473633
    10. 'from' → logprob: -17.089113235473633

Token 1003: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015529575757682323
    2. 'init' → logprob: -4.515529632568359
    3. ' __' → logprob: -5.765529632568359
    4. '_init' → logprob: -6.640529632568359
    5. 'def' → logprob: -11.01552963256836
    6. '___' → logprob: -12.01552963256836
    7. '__(' → logprob: -12.76552963256836
    8. '.__' → logprob: -13.14052963256836
    9. 'int' → logprob: -13.39052963256836
    10. '____' → logprob: -14.39052963256836

Token 1004: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0014936764491721988
    2. 'nit' → logprob: -6.751493453979492
    3. 'int' → logprob: -8.501493453979492
    4. 'it' → logprob: -9.376493453979492
    5. '```' → logprob: -11.626493453979492
    6. 'module' → logprob: -12.501493453979492
    7. 'ital' → logprob: -12.501493453979492
    8. 'ittest' → logprob: -12.751493453979492
    9. 'class' → logprob: -13.001493453979492
    10. '__' → logprob: -13.501493453979492

Token 1005: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04599463567137718
    2. '(self' → logprob: -3.420994520187378
    3. '(' → logprob: -5.420994758605957
    4. '__(
' → logprob: -5.670994758605957
    5. '__' → logprob: -6.045994758605957
    6. 'self' → logprob: -6.670994758605957
    7. '<|end|>' → logprob: -8.170994758605957
    8. '__((' → logprob: -9.045994758605957
    9. ' (' → logprob: -9.670994758605957
    10. '__(*' → logprob: -10.420994758605957

Token 1006: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.990154047845863e-05
    2. ' self' → logprob: -10.000049591064453
    3. '(self' → logprob: -12.625049591064453
    4. '0' → logprob: -15.250049591064453
    5. '	self' → logprob: -15.625049591064453
    6. 's' → logprob: -15.625049591064453
    7. '   ' → logprob: -15.625049591064453
    8. 'def' → logprob: -15.875049591064453
    9. '       ' → logprob: -16.625049591064453
    10. '1' → logprob: -17.000049591064453

Token 1007: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025921566411852837
    2. '(self' → logprob: -3.900921583175659
    3. 'self' → logprob: -6.65092134475708
    4. '(' → logprob: -6.65092134475708
    5. '(n' → logprob: -6.90092134475708
    6. ' (' → logprob: -7.40092134475708
    7. '__(' → logprob: -7.52592134475708
    8. ',self' → logprob: -8.775921821594238
    9. ')(' → logprob: -9.025921821594238
    10. '<|end|>' → logprob: -9.775921821594238

Token 1008: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09995891898870468
    2. 'self' → logprob: -3.224958896636963
    3. 'n' → logprob: -3.474958896636963
    4. '100' → logprob: -4.099958896636963
    5. 'MAX' → logprob: -5.224958896636963
    6. '10' → logprob: -6.349958896636963
    7. 'N' → logprob: -7.974958896636963
    8. 'limit' → logprob: -8.849959373474121
    9. 'size' → logprob: -9.599959373474121
    10. '200' → logprob: -10.099959373474121

Token 1009: '_max' (ID: 13731)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01031291950494051
    2. ',' → logprob: -4.760313034057617
    3. ' +' → logprob: -7.385313034057617
    4. '=' → logprob: -7.635313034057617
    5. '):' → logprob: -7.885313034057617
    6. ',n' → logprob: -9.510313034057617
    7. '):
' → logprob: -10.135313034057617
    8. '   ' → logprob: -10.260313034057617
    9. '+n' → logprob: -11.010313034057617
    10. '=None' → logprob: -11.260313034057617

Token 1010: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34059810638427734
    2. ',' → logprob: -1.3405981063842773
    3. '):' → logprob: -4.090598106384277
    4. '=' → logprob: -4.715598106384277
    5. ':' → logprob: -7.715598106384277
    6. '):
' → logprob: -8.215598106384277
    7. '=None' → logprob: -8.590598106384277
    8. ' +' → logprob: -8.715598106384277
    9. ',n' → logprob: -9.465598106384277
    10. '+,' → logprob: -10.715598106384277

Token 1011: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0921942703134846e-05
    2. ' mod' → logprob: -11.50001049041748
    3. 'MOD' → logprob: -14.25001049041748
    4. '_mod' → logprob: -17.875011444091797
    5. 'm' → logprob: -18.750011444091797
    6. '	mod' → logprob: -19.000011444091797
    7. '10' → logprob: -19.625011444091797
    8. 'Mod' → logprob: -19.625011444091797
    9. 'moder' → logprob: -19.625011444091797
    10. 'md' → logprob: -20.500011444091797

Token 1012: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.74250727891922
    2. '):' → logprob: -0.74250727891922
    3. '):
' → logprob: -3.117507219314575
    4. ':' → logprob: -5.992507457733154
    5. '):
' → logprob: -6.867507457733154
    6. '=None' → logprob: -8.992506980895996
    7. '=int' → logprob: -9.117506980895996
    8. ' ):' → logprob: -10.367506980895996
    9. ':int' → logprob: -10.992506980895996
    10. ',' → logprob: -11.117506980895996

Token 1013: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010413920972496271
    2. '100' → logprob: -9.250103950500488
    3. 'int' → logprob: -12.125103950500488
    4. ' ' → logprob: -13.500103950500488
    5. '1' → logprob: -14.500103950500488
    6. '(' → logprob: -15.125103950500488
    7. ')' → logprob: -15.625103950500488
    8. '998' → logprob: -15.625103950500488
    9. '[int' → logprob: -16.875104904174805
    10. '0' → logprob: -17.625104904174805

Token 1014: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006975602358579636
    2. '9' → logprob: -5.0069756507873535
    3. '=' → logprob: -9.131975173950195
    4. ')' → logprob: -9.881975173950195
    5. '^' → logprob: -10.131975173950195
    6. '```' → logprob: -10.756975173950195
    7. 'python' → logprob: -12.256975173950195
    8. 'int' → logprob: -12.381975173950195
    9. '):
' → logprob: -12.506975173950195
    10. ')**' → logprob: -13.006975173950195

Token 1015: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. 'int' → logprob: -17.375
    3. ' ' → logprob: -18.875
    4. '09' → logprob: -19.75
    5. '```' → logprob: -20.75
    6. '900' → logprob: -21.0
    7. '100' → logprob: -21.125
    8. 'import' → logprob: -21.375
    9. '987' → logprob: -21.625
    10. '``' → logprob: -21.75

Token 1016: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9146995327901095e-05
    2. ' +' → logprob: -10.875019073486328
    3. '+
' → logprob: -17.250019073486328
    4. '＋' → logprob: -17.875019073486328
    5. '   ' → logprob: -18.000019073486328
    6. ',' → logprob: -18.875019073486328
    7. '+,' → logprob: -20.000019073486328
    8. '```' → logprob: -20.000019073486328
    9. '7' → logprob: -20.375019073486328
    10. '()+' → logprob: -20.625019073486328

Token 1017: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -18.875
    3. '07' → logprob: -19.125
    4. '9' → logprob: -19.5
    5. ' ' → logprob: -20.125
    6. '+' → logprob: -20.375
    7. '27' → logprob: -22.0
    8. 'int' → logprob: -22.125
    9. '37' → logprob: -22.25
    10. '17' → logprob: -22.875

Token 1018: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.388994425535202
    2. '):
' → logprob: -1.1389944553375244
    3. ',' → logprob: -6.513994216918945
    4. '   ' → logprob: -7.638994216918945
    5. '):
' → logprob: -9.763994216918945
    6. '       ' → logprob: -10.013994216918945
    7. ')' → logprob: -10.388994216918945
    8. ' ):' → logprob: -11.888994216918945
    9. ' ' → logprob: -12.388994216918945
    10. '=' → logprob: -12.388994216918945

Token 1019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02115040086209774
    2. '   ' → logprob: -4.021150588989258
    3. '        
' → logprob: -7.021150588989258
    4. '```' → logprob: -7.646150588989258
    5. '[' → logprob: -8.021150588989258
    6. ' ' → logprob: -8.146150588989258
    7. '(n' → logprob: -8.146150588989258
    8. '    ' → logprob: -9.646150588989258
    9. '
' → logprob: -9.771150588989258
    10. ' def' → logprob: -9.896150588989258

Token 1020: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016474456060677767
    2. '       ' → logprob: -7.001647472381592
    3. ' self' → logprob: -7.251647472381592
    4. '   ' → logprob: -11.001646995544434
    5. 'mod' → logprob: -12.251646995544434
    6. '	self' → logprob: -13.126646995544434
    7. '	' → logprob: -13.751646995544434
    8. 'from' → logprob: -14.376646995544434
    9. 'def' → logprob: -14.751646995544434
    10. 'super' → logprob: -15.001646995544434

Token 1021: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.7655851244926453
    2. 'mod' → logprob: -0.8905851244926453
    3. 'n' → logprob: -2.39058518409729
    4. '.n' → logprob: -4.515584945678711
    5. '_mod' → logprob: -5.015584945678711
    6. ' n' → logprob: -5.640584945678711
    7. 'max' → logprob: -5.890584945678711
    8. ' ' → logprob: -6.140584945678711
    9. ' mod' → logprob: -6.515584945678711
    10. '   ' → logprob: -6.765584945678711

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31332671642303467
    2. ' =' → logprob: -1.3133267164230347
    3. ',' → logprob: -9.938326835632324
    4. ' ' → logprob: -12.063326835632324
    5. '   ' → logprob: -13.063326835632324
    6. '<|end|>' → logprob: -13.063326835632324
    7. '=int' → logprob: -13.188326835632324
    8. '=self' → logprob: -14.063326835632324
    9. '	' → logprob: -14.813326835632324
    10. '  ' → logprob: -15.063326835632324

Token 1023: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001932205050252378
    2. '10' → logprob: -6.251932144165039
    3. 'int' → logprob: -12.751932144165039
    4. ' mod' → logprob: -14.501932144165039
    5. '100' → logprob: -16.12693214416504
    6. '(mod' → logprob: -18.00193214416504
    7. 'pow' → logprob: -18.87693214416504
    8. '	mod' → logprob: -19.12693214416504
    9. ' ' → logprob: -19.37693214416504
    10. 'MOD' → logprob: -20.37693214416504

Token 1024: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001363093382678926
    2. 'self' → logprob: -7.376363277435303
    3. '
' → logprob: -7.751363277435303
    4. '	' → logprob: -9.626362800598145
    5. '```' → logprob: -9.751362800598145
    6. '<|end|>' → logprob: -9.876362800598145
    7. ',' → logprob: -10.001362800598145
    8. '   ' → logprob: -10.501362800598145
    9. ' self' → logprob: -10.751362800598145
    10. 'import' → logprob: -11.376362800598145

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004063202068209648
    2. 'self' → logprob: -5.879063129425049
    3. ' self' → logprob: -8.004063606262207
    4. '
' → logprob: -8.129063606262207
    5. '   ' → logprob: -8.629063606262207
    6. '	' → logprob: -8.879063606262207
    7. 'import' → logprob: -9.504063606262207
    8. '<|end|>' → logprob: -9.879063606262207
    9. '```' → logprob: -10.004063606262207
    10. '	self' → logprob: -10.129063606262207

Token 1026: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016971994191408157
    2. '       ' → logprob: -6.501697063446045
    3. ' self' → logprob: -9.126697540283203
    4. '   ' → logprob: -10.251697540283203
    5. 'fact' → logprob: -10.626697540283203
    6. 'fac' → logprob: -11.126697540283203
    7. 'n' → logprob: -12.251697540283203
    8. 'factor' → logprob: -12.876697540283203
    9. 'f' → logprob: -13.876697540283203
    10. 'pow' → logprob: -14.251697540283203

Token 1027: '.mod' (ID: 19046)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.1383582204580307
    2. '.fact' → logprob: -2.6383581161499023
    3. '.fac' → logprob: -3.5133581161499023
    4. '.factor' → logprob: -3.8883581161499023
    5. '.max' → logprob: -5.763358116149902
    6. 'n' → logprob: -6.638358116149902
    7. '.mod' → logprob: -7.013358116149902
    8. 'fact' → logprob: -7.013358116149902
    9. '.size' → logprob: -7.638358116149902
    10. '.f' → logprob: -8.638358116149902

Token 1028: 'inv' (ID: 31086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8012837767601013
    2. 'inv' → logprob: -1.176283836364746
    3. ' =' → logprob: -2.176283836364746
    4. '_factor' → logprob: -3.676283836364746
    5. 'ulus' → logprob: -3.676283836364746
    6. '_inv' → logprob: -4.051283836364746
    7. '_fac' → logprob: -4.176283836364746
    8. 'pow' → logprob: -4.301283836364746
    9. 'fac' → logprob: -4.551283836364746
    10. 'ular' → logprob: -5.426283836364746

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3840866684913635
    2. 's' → logprob: -1.5090866088867188
    3. ' =' → logprob: -2.3840866088867188
    4. '_' → logprob: -6.384086608886719
    5. '_list' → logprob: -6.634086608886719
    6. '_arr' → logprob: -7.759086608886719
    7. '_=' → logprob: -8.009086608886719
    8. '_n' → logprob: -8.384086608886719
    9. '_s' → logprob: -8.759086608886719
    10. ',' → logprob: -9.009086608886719

Token 1030: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035067072603851557
    2. '{}' → logprob: -6.503506660461426
    3. 'lambda' → logprob: -6.878506660461426
    4. '{' → logprob: -7.253506660461426
    5. '[]' → logprob: -9.003506660461426
    6. '(lambda' → logprob: -9.753506660461426
    7. '[self' → logprob: -10.503506660461426
    8. '[n' → logprob: -10.878506660461426
    9. '[int' → logprob: -12.253506660461426
    10. '[p' → logprob: -12.378506660461426

Token 1031: '(it' (ID: 29445)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.008240316063165665
    2. '(map' → logprob: -4.883240222930908
    3. '(' → logprob: -8.133240699768066
    4. '(re' → logprob: -9.133240699768066
    5. '[' → logprob: -9.383240699768066
    6. '([' → logprob: -10.508240699768066
    7. '.append' → logprob: -10.758240699768066
    8. '()' → logprob: -10.883240699768066
    9. 'range' → logprob: -11.133240699768066
    10. '=' → logprob: -11.508240699768066

Token 1032: '.acc' (ID: 70239)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.44344690442085266
    2. '(acc' → logprob: -1.4434468746185303
    3. '.acc' → logprob: -2.5684468746185303
    4. '_acc' → logprob: -4.068447113037109
    5. 'import' → logprob: -5.068447113037109
    6. '(it' → logprob: -5.193447113037109
    7. 'Acc' → logprob: -5.818447113037109
    8. '(chain' → logprob: -6.068447113037109
    9. 'ertools' → logprob: -6.068447113037109
    10. '	acc' → logprob: -6.943447113037109

Token 1033: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00010759611177491024
    2. 'um' → logprob: -9.500107765197754
    3. 'cum' → logprob: -11.500107765197754
    4. 'culate' → logprob: -13.000107765197754
    5. '**' → logprob: -13.125107765197754
    6. '=' → logprob: -13.375107765197754
    7. '```' → logprob: -13.375107765197754
    8. 'm' → logprob: -13.625107765197754
    9. '*' → logprob: -13.750107765197754
    10. '...' → logprob: -13.750107765197754

Token 1034: '(
' (ID: 1607)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.4893811345100403
    2. 'range' → logprob: -0.9893811345100403
    3. '[' → logprob: -4.739381313323975
    4. '(it' → logprob: -6.114381313323975
    5. '(lambda' → logprob: -6.364381313323975
    6. 'it' → logprob: -6.989381313323975
    7. '[it' → logprob: -7.239381313323975
    8. 'lambda' → logprob: -7.864381313323975
    9. '(' → logprob: -8.489380836486816
    10. '[int' → logprob: -9.239380836486816

Token 1035: '           ' (ID: 352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3106258809566498
    2. '(range' → logprob: -1.8106259107589722
    3. '[' → logprob: -2.5606257915496826
    4. '[it' → logprob: -4.435626029968262
    5. '(it' → logprob: -5.060626029968262
    6. 'it' → logprob: -5.310626029968262
    7. '   ' → logprob: -6.435626029968262
    8. '[i' → logprob: -7.810626029968262
    9. '(' → logprob: -8.310626029968262
    10. '([' → logprob: -8.435626029968262

Token 1036: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012599951587617397
    2. '(range' → logprob: -4.762599945068359
    3. '[' (adapté à ' [') → logprob: -5.762599945068359
    4. 'it' → logprob: -7.637599945068359
    5. '[it' → logprob: -8.63759994506836
    6. '[i' → logprob: -9.63759994506836
    7. '[x' → logprob: -9.88759994506836
    8. '(it' → logprob: -10.63759994506836
    9. '(' → logprob: -11.38759994506836
    10. ' range' → logprob: -11.88759994506836

Token 1037: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003884750185534358
    2. '0' → logprob: -5.628884792327881
    3. '[' → logprob: -9.003884315490723
    4. 'range' → logprob: -9.003884315490723
    5. 'i' → logprob: -11.503884315490723
    6. 'pow' → logprob: -11.753884315490723
    7. 'int' → logprob: -11.878884315490723
    8. 'None' → logprob: -12.503884315490723
    9. '(' → logprob: -12.878884315490723
    10. '[int' → logprob: -13.628884315490723

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012407224625349045
    2. '[' → logprob: -5.137407302856445
    3. '1' → logprob: -6.137407302856445
    4. '0' → logprob: -6.262407302856445
    5. ',[' → logprob: -6.762407302856445
    6. ' ,' → logprob: -7.762407302856445
    7. ',
' → logprob: -8.387407302856445
    8. '   ' → logprob: -8.637407302856445
    9. ']+' → logprob: -9.262407302856445
    10. ']' → logprob: -9.637407302856445

Token 1039: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.500030517578125
    3. '0' → logprob: -13.250030517578125
    4. '   ' → logprob: -14.375030517578125
    5. '  ' → logprob: -16.500030517578125
    6. '    ' → logprob: -16.875030517578125
    7. ']' → logprob: -17.125030517578125
    8. '     ' → logprob: -17.125030517578125
    9. '           ' → logprob: -17.500030517578125
    10. '[' → logprob: -17.500030517578125

Token 1040: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03243007883429527
    2. ',
' → logprob: -3.7824301719665527
    3. ',[' → logprob: -5.407430171966553
    4. ' ,' → logprob: -6.407430171966553
    5. ']+' → logprob: -6.907430171966553
    6. ']' → logprob: -7.282430171966553
    7. '[' → logprob: -7.532430171966553
    8. '   ' → logprob: -9.282429695129395
    9. '       ' → logprob: -9.657429695129395
    10. ',n' → logprob: -10.032429695129395

Token 1041: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10462957620620728
    2. '[list' → logprob: -2.6046295166015625
    3. '[n' → logprob: -4.1046295166015625
    4. 'list' → logprob: -4.8546295166015625
    5. '[i' → logprob: -8.229629516601562
    6. '[(' → logprob: -8.354629516601562
    7. ' [' → logprob: -8.854629516601562
    8. '[it' → logprob: -9.104629516601562
    9. ' list' → logprob: -9.479629516601562
    10. '[int' → logprob: -9.729629516601562

Token 1042: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010109718888998032
    2. 'pow' → logprob: -4.885109901428223
    3. '(i' → logprob: -6.885109901428223
    4. '0' → logprob: -7.385109901428223
    5. 'x' → logprob: -8.260109901428223
    6. '1' → logprob: -8.385109901428223
    7. '(' → logprob: -9.135109901428223
    8. 'None' → logprob: -10.135109901428223
    9. ' i' → logprob: -10.135109901428223
    10. 'int' → logprob: -10.510109901428223

Token 1043: ']*(' (ID: 92627)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6387715339660645
    2. ']*(' → logprob: -1.1387715339660645
    3. ']+' → logprob: -2.5137715339660645
    4. ']' → logprob: -3.0137715339660645
    5. ']*' → logprob: -3.8887715339660645
    6. '0' → logprob: -8.138771057128906
    7. ',
' → logprob: -8.138771057128906
    8. ',(' → logprob: -8.638771057128906
    9. '1' → logprob: -9.263771057128906
    10. ',n' → logprob: -9.388771057128906

Token 1044: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.842555426876061e-06
    2. ' n' → logprob: -12.625004768371582
    3. '	n' → logprob: -14.875004768371582
    4. '100' → logprob: -15.000004768371582
    5. '_n' → logprob: -15.250004768371582
    6. ')n' → logprob: -15.750004768371582
    7. '(n' → logprob: -16.0000057220459
    8. '10' → logprob: -16.1250057220459
    9. '?n' → logprob: -16.6250057220459
    10. '[' → logprob: -17.0000057220459

Token 1045: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.009290498681366444
    2. 'max' → logprob: -4.75929069519043
    3. '_MAX' → logprob: -8.50929069519043
    4. '_' → logprob: -8.88429069519043
    5. '_tokens' → logprob: -9.38429069519043
    6. '-max' → logprob: -9.50929069519043
    7. 'Max' → logprob: -9.75929069519043
    8. '[max' → logprob: -11.25929069519043
    9. '	max' → logprob: -11.25929069519043
    10. 'maxlength' → logprob: -11.50929069519043

Token 1046: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9981420336989686e-05
    2. ' -' → logprob: -11.125020027160645
    3. '[' → logprob: -13.250020027160645
    4. '),' → logprob: -13.875020027160645
    5. '```' → logprob: -14.375020027160645
    6. ')' → logprob: -14.500020027160645
    7. '#' → logprob: -15.000020027160645
    8. '+' → logprob: -15.125020027160645
    9. '0' → logprob: -15.375020027160645
    10. '<|end|>' → logprob: -16.125019073486328

Token 1047: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01781485415995121
    2. '998' → logprob: -4.892814636230469
    3. '1' → logprob: -5.017814636230469
    4. ' ' → logprob: -6.517814636230469
    5. '100' → logprob: -7.517814636230469
    6. '999' → logprob: -7.517814636230469
    7. '10' → logprob: -7.892814636230469
    8. '(' → logprob: -8.392814636230469
    9. '0' → logprob: -9.392814636230469
    10. ' -' → logprob: -9.642814636230469

Token 1048: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11282230168581009
    2. ',[' → logprob: -3.2378222942352295
    3. '+[' → logprob: -3.4878222942352295
    4. ',
' → logprob: -3.8628222942352295
    5. '[' → logprob: -5.237822532653809
    6. '+' → logprob: -5.362822532653809
    7. '),' → logprob: -5.737822532653809
    8. ',n' → logprob: -6.862822532653809
    9. ' ,' → logprob: -7.362822532653809
    10. ' ,[' → logprob: -8.862822532653809

Token 1049: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059763725847005844
    2. 'lambda' → logprob: -3.6847636699676514
    3. ' lambda' → logprob: -4.1847639083862305
    4. ' [' → logprob: -4.8097639083862305
    5. ',' → logprob: -4.9347639083862305
    6. '0' → logprob: -7.0597639083862305
    7. '   ' → logprob: -7.3097639083862305
    8. ' ' → logprob: -8.93476390838623
    9. ',[' → logprob: -8.93476390838623
    10. '[
' → logprob: -9.18476390838623

Token 1050: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.006968263071030378
    2. ' lambda' → logprob: -5.0069684982299805
    3. '   ' → logprob: -8.38196849822998
    4. '(lambda' → logprob: -11.00696849822998
    5. '           ' → logprob: -12.88196849822998
    6. '               ' → logprob: -13.50696849822998
    7. '       ' → logprob: -13.75696849822998
    8. ' ' → logprob: -14.63196849822998
    9. '=lambda' → logprob: -14.63196849822998
    10. '    ' → logprob: -14.75696849822998

Token 1051: ' acc' (ID: 1259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22695381939411163
    2. 'i' → logprob: -2.1019537448883057
    3. 'a' → logprob: -2.7269537448883057
    4. 'acc' → logprob: -4.476953983306885
    5. 's' → logprob: -6.476953983306885
    6. 'j' → logprob: -6.851953983306885
    7. 'ac' → logprob: -7.601953983306885
    8. 'l' → logprob: -8.726953506469727
    9. ' acc' → logprob: -8.976953506469727
    10. 'm' → logprob: -9.101953506469727

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42498183250427246
    2. 'x' → logprob: -1.9249818325042725
    3. 'lambda' → logprob: -2.0499818325042725
    4. 'a' → logprob: -3.2999818325042725
    5. ' lambda' → logprob: -4.674982070922852
    6. 'i' → logprob: -4.924982070922852
    7. ' x' → logprob: -5.174982070922852
    8. ' ,' → logprob: -5.424982070922852
    9. '_,' → logprob: -6.174982070922852
    10. ',x' → logprob: -6.674982070922852

Token 1053: ' nxt' (ID: 160200)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759972333908081
    2. 'i' → logprob: -0.8259972333908081
    3. 'k' → logprob: -10.200997352600098
    4. ' i' → logprob: -12.325997352600098
    5. 'n' → logprob: -12.575997352600098
    6. 'a' → logprob: -12.700997352600098
    7. 'b' → logprob: -13.075997352600098
    8. 'idx' → logprob: -13.075997352600098
    9. ' x' → logprob: -13.200997352600098
    10. 'j' → logprob: -13.825997352600098

Token 1054: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1413736343383789
    2. ',n' → logprob: -2.141373634338379
    3. ',x' → logprob: -5.016373634338379
    4. ':' → logprob: -5.641373634338379
    5. ' ,' → logprob: -6.266373634338379
    6. ',i' → logprob: -6.766373634338379
    7. ',k' → logprob: -7.766373634338379
    8. 'n' → logprob: -8.891373634338379
    9. '   ' → logprob: -9.641373634338379
    10. ',index' → logprob: -9.891373634338379

Token 1055: ' self' (ID: 1051)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.18179303407669067
    2. 'acc' → logprob: -1.806792974472046
    3. '(' → logprob: -6.556793212890625
    4. '(-' → logprob: -8.681793212890625
    5. '	acc' → logprob: -9.306793212890625
    6. ' acc' → logprob: -9.556793212890625
    7. '(n' → logprob: -9.806793212890625
    8. '((' → logprob: -10.181793212890625
    9. '(ac' → logprob: -10.306793212890625
    10. ' (' → logprob: -10.806793212890625

Token 1056: '.mod' (ID: 19046)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.7271783351898193
    2. 'acc' → logprob: -1.6021783351898193
    3. 'mod' → logprob: -1.7271783351898193
    4. '(' → logprob: -2.7271783351898193
    5. ' (' → logprob: -3.7271783351898193
    6. ' acc' → logprob: -4.352178573608398
    7. '*' → logprob: -4.977178573608398
    8. 'pow' → logprob: -5.227178573608398
    9. '(n' → logprob: -5.352178573608398
    10. '(mod' → logprob: -5.352178573608398

Token 1057: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10400936007499695
    2. 'inv' → logprob: -3.1040093898773193
    3. ' *' → logprob: -3.4790093898773193
    4. '//' → logprob: -3.9790093898773193
    5. '   ' → logprob: -6.35400915145874
    6. ' //' → logprob: -6.97900915145874
    7. 'pow' → logprob: -7.97900915145874
    8. 'div' → logprob: -8.354009628295898
    9. '*(' → logprob: -8.729009628295898
    10. 'if' → logprob: -8.854009628295898

Token 1058: ' self' (ID: 1051)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6951344013214111
    2. '(acc' → logprob: -0.6951344013214111
    3. '(' → logprob: -6.820134162902832
    4. 'self' → logprob: -7.320134162902832
    5. '(self' → logprob: -8.695134162902832
    6. ' acc' → logprob: -10.195134162902832
    7. '	acc' → logprob: -11.695134162902832
    8. ' (' → logprob: -12.445134162902832
    9. '(mod' → logprob: -12.445134162902832
    10. 'ac' → logprob: -12.945134162902832

Token 1059: '.mod' (ID: 19046)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2536766529083252
    2. '(acc' → logprob: -1.6286766529083252
    3. 'mod' → logprob: -3.753676652908325
    4. '(' → logprob: -6.128676414489746
    5. '(mod' → logprob: -6.253676414489746
    6. '(n' → logprob: -9.503676414489746
    7. '//' → logprob: -9.628676414489746
    8. '*' → logprob: -9.878676414489746
    9. '	acc' → logprob: -10.253676414489746
    10. ' acc' → logprob: -10.628676414489746

Token 1060: '//' (ID: 393)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.009956412948668003
    2. 'acc' → logprob: -4.884956359863281
    3. '*' → logprob: -6.509956359863281
    4. '//' → logprob: -8.134956359863281
    5. '*(' → logprob: -9.009956359863281
    6. '#' → logprob: -9.134956359863281
    7. '   ' → logprob: -10.134956359863281
    8. '(inv' → logprob: -10.134956359863281
    9. 'prev' → logprob: -10.259956359863281
    10. 'div' → logprob: -10.384956359863281

Token 1061: '(' (ID: 7)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.961759259458631e-06
    2. '(n' → logprob: -12.625004768371582
    3. '[' → logprob: -15.125004768371582
    4. 'next' → logprob: -15.625004768371582
    5. '
' → logprob: -15.750004768371582
    6. '[n' → logprob: -15.750004768371582
    7. ' nxt' → logprob: -15.750004768371582
    8. '<n' → logprob: -16.2500057220459
    9. '{' → logprob: -16.5000057220459
    10. '(' → logprob: -16.6250057220459

Token 1062: 'acc' (ID: 3717)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.538490950129926e-05
    2. '(n' → logprob: -10.625055313110352
    3. ' nxt' → logprob: -11.625055313110352
    4. 'next' → logprob: -12.375055313110352
    5. '<|end|>' → logprob: -12.500055313110352
    6. '[' → logprob: -13.125055313110352
    7. 'nth' → logprob: -13.500055313110352
    8. 'ncmp' → logprob: -13.875055313110352
    9. '[n' → logprob: -14.000055313110352
    10. '{' → logprob: -14.000055313110352

Token 1063: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03879391402006149
    2. '[n' → logprob: -4.163794040679932
    3. ' nxt' → logprob: -4.163794040679932
    4. '   ' → logprob: -5.663794040679932
    5. '[' → logprob: -6.663794040679932
    6. '
' → logprob: -7.913794040679932
    7. '(n' → logprob: -8.163793563842773
    8. '2' → logprob: -8.538793563842773
    9. '	n' → logprob: -8.538793563842773
    10. '       ' → logprob: -8.663793563842773

Token 1064: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019619399681687355
    2. ' nxt' → logprob: -6.251961708068848
    3. '(n' → logprob: -10.751961708068848
    4. 'acc' → logprob: -11.626961708068848
    5. 'next' → logprob: -14.251961708068848
    6. '   ' → logprob: -15.001961708068848
    7. '(' → logprob: -15.126961708068848
    8. '[n' → logprob: -15.126961708068848
    9. '[' → logprob: -15.251961708068848
    10. '1' → logprob: -15.501961708068848

Token 1065: '>' (ID: 29)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3412230014801025
    2. 'acc' → logprob: -1.4662230014801025
    3. 'n' → logprob: -1.7162230014801025
    4. ' nxt' → logprob: -1.7162230014801025
    5. ' or' → logprob: -3.5912230014801025
    6. ' else' → logprob: -4.341222763061523
    7. 'if' → logprob: -4.341222763061523
    8. ' if' → logprob: -4.341222763061523
    9. '[n' → logprob: -4.341222763061523
    10. '0' → logprob: -4.466222763061523

Token 1066: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.183313250541687
    2. 'acc' → logprob: -2.4333133697509766
    3. 'n' → logprob: -3.3083133697509766
    4. '1' → logprob: -3.8083133697509766
    5. ' nxt' → logprob: -4.183313369750977
    6. 'None' → logprob: -6.183313369750977
    7. ' ' → logprob: -7.308313369750977
    8. '(' → logprob: -7.433313369750977
    9. '(n' → logprob: -7.683313369750977
    10. ' acc' → logprob: -7.808313369750977

Token 1067: ' else' (ID: 1203)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49335265159606934
    2. ' +' → logprob: -1.6183526515960693
    3. ' else' → logprob: -1.9933526515960693
    4. ' if' → logprob: -3.4933526515960693
    5. 'else' → logprob: -4.493352890014648
    6. ' or' → logprob: -5.618352890014648
    7. '+n' → logprob: -5.618352890014648
    8. 'if' → logprob: -6.243352890014648
    9. ' nxt' → logprob: -7.118352890014648
    10. ' and' → logprob: -7.743352890014648

Token 1068: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004775906912982464
    2. ' nxt' → logprob: -6.1297760009765625
    3. 'acc' → logprob: -6.5047760009765625
    4. '(n' → logprob: -7.7547760009765625
    5. '0' → logprob: -8.379776000976562
    6. '1' → logprob: -8.504776000976562
    7. '(' → logprob: -9.004776000976562
    8. '2' → logprob: -10.629776000976562
    9. 'ac' → logprob: -11.129776000976562
    10. '[' → logprob: -11.129776000976562

Token 1069: '2' (ID: 17)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4605873227119446
    2. 'n' → logprob: -1.0855872631072998
    3. ' nxt' → logprob: -3.9605872631073
    4. '0' → logprob: -5.585587501525879
    5. ' acc' → logprob: -5.585587501525879
    6. 'ac' → logprob: -6.085587501525879
    7. '1' → logprob: -7.335587501525879
    8. '(n' → logprob: -7.460587501525879
    9. '(acc' → logprob: -7.585587501525879
    10. '2' → logprob: -8.335587501525879

Token 1070: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0142180919647217
    2. '+' → logprob: -1.8892180919647217
    3. ' +' → logprob: -2.0142180919647217
    4. ' ,' → logprob: -2.0142180919647217
    5. ')' → logprob: -2.8892180919647217
    6. ' if' → logprob: -3.1392180919647217
    7. ' *' → logprob: -3.5142180919647217
    8. ' nxt' → logprob: -3.5142180919647217
    9. ' )' → logprob: -4.264218330383301
    10. '),' → logprob: -4.389218330383301

Token 1071: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8679309487342834
    2. ' *' → logprob: -1.4929308891296387
    3. ' if' → logprob: -2.2429308891296387
    4. ' ,' → logprob: -2.4929308891296387
    5. ')' → logprob: -2.9929308891296387
    6. ' )' → logprob: -3.4929308891296387
    7. '),' → logprob: -3.7429308891296387
    8. ' ),' → logprob: -4.117930889129639
    9. '*' → logprob: -4.617930889129639
    10. ' ' → logprob: -4.742930889129639

Token 1072: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4342038333415985
    2. '(n' → logprob: -1.934203863143921
    3. '(acc' → logprob: -2.934203863143921
    4. 'n' → logprob: -3.059203863143921
    5. 'self' → logprob: -3.309203863143921
    6. '(' → logprob: -3.559203863143921
    7. ' acc' → logprob: -3.934203863143921
    8. ' nxt' → logprob: -4.309203624725342
    9. ' (' → logprob: -5.684203624725342
    10. ' self' → logprob: -6.309203624725342

Token 1073: 'acc' (ID: 3717)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42593708634376526
    2. 'acc' → logprob: -1.9259370565414429
    3. '(n' → logprob: -2.5509371757507324
    4. 'self' → logprob: -2.5509371757507324
    5. '(acc' → logprob: -3.9259371757507324
    6. '(' → logprob: -4.550937175750732
    7. ' nxt' → logprob: -4.675937175750732
    8. '(self' → logprob: -6.175937175750732
    9. ' acc' → logprob: -7.425937175750732
    10. ' (' → logprob: -7.800937175750732

Token 1074: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22403571009635925
    2. ' ,' → logprob: -2.0990357398986816
    3. ',n' → logprob: -3.3490357398986816
    4. ' if' → logprob: -3.9740357398986816
    5. ' nxt' → logprob: -4.724035739898682
    6. '+' → logprob: -5.849035739898682
    7. 'n' → logprob: -6.349035739898682
    8. 'if' → logprob: -6.724035739898682
    9. ' ' → logprob: -6.724035739898682
    10. '1' → logprob: -7.099035739898682

Token 1075: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07162413746118546
    2. '(n' → logprob: -3.3216240406036377
    3. ' nxt' → logprob: -3.5716240406036377
    4. 'acc' → logprob: -6.321624279022217
    5. '(' → logprob: -7.071624279022217
    6. 'self' → logprob: -7.446624279022217
    7. '0' → logprob: -8.321623802185059
    8. ' (' → logprob: -8.321623802185059
    9. '[n' → logprob: -8.696623802185059
    10. '       ' → logprob: -8.821623802185059

Token 1076: '>' (ID: 29)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47727152705192566
    2. ',' → logprob: -2.352271556854248
    3. '-' → logprob: -2.602271556854248
    4. '+' → logprob: -2.727271556854248
    5. ' -' → logprob: -3.977271556854248
    6. ' ' → logprob: -3.977271556854248
    7. ' +' → logprob: -4.227271556854248
    8. '[n' → logprob: -4.227271556854248
    9. ' else' → logprob: -4.477271556854248
    10. '[' → logprob: -4.977271556854248

Token 1077: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4010203182697296
    2. 'n' → logprob: -1.2760202884674072
    3. '1' → logprob: -3.6510202884674072
    4. ' nxt' → logprob: -4.651020526885986
    5. 'acc' → logprob: -4.776020526885986
    6. ' ' → logprob: -5.151020526885986
    7. 'None' → logprob: -7.401020526885986
    8. '2' → logprob: -8.276020050048828
    9. 'next' → logprob: -8.901020050048828
    10. ' None' → logprob: -9.651020050048828

Token 1078: ' else' (ID: 1203)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42027485370635986
    2. ' ,' → logprob: -1.1702748537063599
    3. '-' → logprob: -5.04527473449707
    4. ')' → logprob: -5.17027473449707
    5. ' )' → logprob: -5.29527473449707
    6. ' if' → logprob: -6.04527473449707
    7. ' -' → logprob: -6.17027473449707
    8. '1' → logprob: -6.54527473449707
    9. ' else' → logprob: -6.67027473449707
    10. '),' → logprob: -6.79527473449707

Token 1079: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13136477768421173
    2. 'acc' → logprob: -3.6313648223876953
    3. 'mod' → logprob: -3.7563648223876953
    4. '(n' → logprob: -3.8813648223876953
    5. '(self' → logprob: -4.131364822387695
    6. '0' → logprob: -4.506364822387695
    7. '(acc' → logprob: -5.256364822387695
    8. ' self' → logprob: -5.506364822387695
    9. 'n' → logprob: -5.756364822387695
    10. '(' → logprob: -5.881364822387695

Token 1080: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09192429482936859
    2. 'mod' → logprob: -3.2169241905212402
    3. '0' → logprob: -3.4669241905212402
    4. 'n' → logprob: -4.71692419052124
    5. 'acc' → logprob: -6.21692419052124
    6. '(n' → logprob: -6.84192419052124
    7. '[' → logprob: -6.96692419052124
    8. '(' → logprob: -6.96692419052124
    9. '[n' → logprob: -7.34192419052124
    10. '(self' → logprob: -7.59192419052124

Token 1081: ')%' (ID: 57656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19248653948307037
    2. ' ,' → logprob: -2.067486524581909
    3. ')' → logprob: -4.067486763000488
    4. '),' → logprob: -4.692486763000488
    5. ' )' → logprob: -5.067486763000488
    6. ',n' → logprob: -5.192486763000488
    7. ' ),' → logprob: -6.067486763000488
    8. '[n' → logprob: -6.442486763000488
    9. ',
' → logprob: -6.567486763000488
    10. ' ' → logprob: -7.442486763000488

Token 1082: 'self' (ID: 1156)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007033615838736296
    2. ' nxt' → logprob: -5.007033824920654
    3. '(n' → logprob: -8.632033348083496
    4. 'acc' → logprob: -9.382033348083496
    5. '[n' → logprob: -11.632033348083496
    6. '0' → logprob: -12.007033348083496
    7. ' n' → logprob: -12.132033348083496
    8. '[' → logprob: -12.382033348083496
    9. '1' → logprob: -12.382033348083496
    10. '2' → logprob: -12.632033348083496

Token 1083: '.mod' (ID: 19046)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7183341383934021
    2. 'n' → logprob: -0.8433341383934021
    3. 'mod' → logprob: -2.593334197998047
    4. ' acc' → logprob: -5.593334197998047
    5. 'a' → logprob: -7.093334197998047
    6. 'ac' → logprob: -7.343334197998047
    7. '0' → logprob: -7.593334197998047
    8. ' mod' → logprob: -7.718334197998047
    9. '
' → logprob: -8.218334197998047
    10. ' ' → logprob: -8.843334197998047

Token 1084: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13626983761787415
    2. ' ,' → logprob: -2.3862698078155518
    3. ',n' → logprob: -4.136270046234131
    4. ' )' → logprob: -4.636270046234131
    5. ')' → logprob: -5.636270046234131
    6. ',
' → logprob: -6.261270046234131
    7. ' ))' → logprob: -7.136270046234131
    8. '   ' → logprob: -7.261270046234131
    9. '))' → logprob: -7.261270046234131
    10. ')))' → logprob: -7.386270046234131

Token 1085: ' nxt' (ID: 160200)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.498108446598053
    2. 'n' → logprob: -0.998108446598053
    3. ' acc' → logprob: -4.873108386993408
    4. ' nxt' → logprob: -5.248108386993408
    5. '(acc' → logprob: -5.498108386993408
    6. 'True' → logprob: -6.123108386993408
    7. 'ac' → logprob: -6.873108386993408
    8. '(n' → logprob: -6.998108386993408
    9. 'not' → logprob: -7.373108386993408
    10. '(True' → logprob: -7.998108386993408

Token 1086: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.7060924768447876
    2. ' >' → logprob: -1.7060924768447876
    3. ' <' → logprob: -1.8310924768447876
    4. '+' → logprob: -2.331092357635498
    5. '==' → logprob: -2.581092357635498
    6. ' else' → logprob: -2.831092357635498
    7. ' <=' → logprob: -3.081092357635498
    8. ',' → logprob: -3.081092357635498
    9. '<' → logprob: -3.206092357635498
    10. 'else' → logprob: -3.331092357635498

Token 1087: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037263904232531786
    2. '0' → logprob: -8.500372886657715
    3. ' ' → logprob: -8.875372886657715
    4. 'n' → logprob: -10.625372886657715
    5. '2' → logprob: -13.375372886657715
    6. '=' → logprob: -13.750372886657715
    7. ' nxt' → logprob: -14.562872886657715
    8. '<|end|>' → logprob: -15.812872886657715
    9. '' → logprob: -15.937872886657715
    10. '>' → logprob: -16.0003719329834

Token 1088: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.010713634081184864
    2. 'else' → logprob: -4.635713577270508
    3. ')' → logprob: -7.260713577270508
    4. ',' → logprob: -9.385713577270508
    5. ' ' → logprob: -9.510713577270508
    6. ' )' → logprob: -9.885713577270508
    7. '),' → logprob: -11.635713577270508
    8. '-' → logprob: -12.635713577270508
    9. '0' → logprob: -12.635713577270508
    10. '+' → logprob: -12.760713577270508

Token 1089: ' acc' (ID: 1259)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.80660480260849
    2. '1' → logprob: -1.0566048622131348
    3. 'n' → logprob: -1.9316048622131348
    4. ' nxt' → logprob: -4.306604862213135
    5. '(n' → logprob: -4.681604862213135
    6. ' ' → logprob: -4.681604862213135
    7. '[n' → logprob: -4.931604862213135
    8. 'acc' → logprob: -4.931604862213135
    9. '[' → logprob: -5.306604862213135
    10. '(' → logprob: -6.181604862213135

Token 1090: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.991638720035553
    2. ' )' → logprob: -1.1166386604309082
    3. ',' → logprob: -1.6166386604309082
    4. '))' → logprob: -3.116638660430908
    5. ')))' → logprob: -3.866638660430908
    6. ' ))' → logprob: -4.616638660430908
    7. ',
' → logprob: -4.741638660430908
    8. ' ,' → logprob: -5.491638660430908
    9. '),' → logprob: -5.866638660430908
    10. ' ),' → logprob: -6.366638660430908

Token 1091: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1790764033794403
    2. ',' → logprob: -2.3040764331817627
    3. '[' → logprob: -3.3040764331817627
    4. ' )' → logprob: -4.179076194763184
    5. '[n' → logprob: -5.804076194763184
    6. ',
' → logprob: -6.054076194763184
    7. ')))' → logprob: -6.804076194763184
    8. ' ,' → logprob: -6.804076194763184
    9. '   ' → logprob: -7.179076194763184
    10. '),' → logprob: -7.179076194763184

Token 1092: ' ))' (ID: 27539)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' (adapté à ' ))') → logprob: -0.0920138880610466
    2. ')' → logprob: -2.9670138359069824
    3. ')))' → logprob: -4.342013835906982
    4. ')):' → logprob: -4.592013835906982
    5. '):' → logprob: -5.592013835906982
    6. ',' → logprob: -5.842013835906982
    7. '       ' → logprob: -6.092013835906982
    8. '   ' → logprob: -6.717013835906982
    9. '),' → logprob: -6.842013835906982
    10. ' ))' → logprob: -7.717013835906982

Token 1093: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4410885274410248
    2. '[' → logprob: -1.3160885572433472
    3. ':' → logprob: -3.4410884380340576
    4. '   ' → logprob: -4.066088676452637
    5. '<|end|>' → logprob: -4.316088676452637
    6. ',' → logprob: -5.316088676452637
    7. '[
' → logprob: -5.316088676452637
    8. '       ' → logprob: -5.441088676452637
    9. ']' → logprob: -6.066088676452637
    10. ' ' → logprob: -6.191088676452637

Token 1094: ' n' (ID: 297)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.18090961873531342
    2. 'n' → logprob: -1.8059096336364746
    3. ' False' → logprob: -7.430909633636475
    4. 'not' → logprob: -7.930909633636475
    5. 'True' → logprob: -9.430909156799316
    6. 'len' → logprob: -10.305909156799316
    7. 'None' → logprob: -10.430909156799316
    8. ' n' → logprob: -10.805909156799316
    9. '0' → logprob: -11.055909156799316
    10. '(False' → logprob: -11.805909156799316

Token 1095: '_max' (ID: 13731)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.4286699295043945
    2. '_' → logprob: -1.4286699295043945
    3. ')' → logprob: -2.3036699295043945
    4. '_max' → logprob: -2.4286699295043945
    5. 'n' → logprob: -2.8036699295043945
    6. ',' → logprob: -3.3036699295043945
    7. ':' → logprob: -3.5536699295043945
    8. '=' → logprob: -3.5536699295043945
    9. '[' → logprob: -3.5536699295043945
    10. '+' → logprob: -3.8036699295043945

Token 1096: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1991463899612427
    2. '>=' → logprob: -1.1991463899612427
    3. ':' → logprob: -1.8241463899612427
    4. ' >=' → logprob: -2.199146270751953
    5. ' >' → logprob: -3.074146270751953
    6. ')' → logprob: -4.074146270751953
    7. '<|end|>' → logprob: -4.699146270751953
    8. ' <' → logprob: -4.824146270751953
    9. '=' → logprob: -4.824146270751953
    10. '<' → logprob: -4.824146270751953

Token 1097: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002311549847945571
    2. '0' → logprob: -6.127311706542969
    3. ' ' → logprob: -9.127311706542969
    4. '2' → logprob: -11.877311706542969
    5. '=' → logprob: -12.252311706542969
    6. '```' → logprob: -12.377311706542969
    7. '   ' → logprob: -14.502311706542969
    8. '     ' → logprob: -15.814811706542969
    9. '[' → logprob: -15.814811706542969
    10. '
' → logprob: -15.939811706542969

Token 1098: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.13792784512043
    2. 'else' → logprob: -2.387927770614624
    3. ')' → logprob: -4.387928009033203
    4. ':' → logprob: -4.637928009033203
    5. '       ' → logprob: -5.387928009033203
    6. ':
' → logprob: -5.512928009033203
    7. '<|end|>' → logprob: -6.262928009033203
    8. '   ' → logprob: -6.387928009033203
    9. '	else' → logprob: -6.762928009033203
    10. '[' → logprob: -7.262928009033203

Token 1099: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5778059959411621
    2. '[' → logprob: -0.8278059959411621
    3. ' []' → logprob: -7.202805995941162
    4. ' [' → logprob: -7.452805995941162
    5. 'None' → logprob: -7.702805995941162
    6. '[]
' → logprob: -9.82780647277832
    7. ' None' → logprob: -11.95280647277832
    8. '0' → logprob: -12.07780647277832
    9. '[n' → logprob: -12.07780647277832
    10. '[])' → logprob: -12.32780647277832

Token 1100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02265479601919651
    2. '[' → logprob: -4.522655010223389
    3. ']' → logprob: -5.147655010223389
    4. '1' → logprob: -5.397655010223389
    5. '[]' → logprob: -7.022655010223389
    6. '])' → logprob: -8.89765453338623
    7. 'None' → logprob: -9.27265453338623
    8. '[])' → logprob: -11.02265453338623
    9. '(' → logprob: -11.89765453338623
    10. '][' → logprob: -12.14765453338623

Token 1101: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000642499653622508
    2. '[' → logprob: -8.250642776489258
    3. ',' → logprob: -8.625642776489258
    4. '<|end|>' → logprob: -9.250642776489258
    5. '0' → logprob: -9.750642776489258
    6. ']
' → logprob: -11.875642776489258
    7. ')' → logprob: -12.000642776489258
    8. ' ]' → logprob: -12.250642776489258
    9. '])' → logprob: -12.375642776489258
    10. '.' → logprob: -12.625642776489258

Token 1102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5773402452468872
    2. '0' → logprob: -0.8273402452468872
    3. ' ' → logprob: -6.827340126037598
    4. ']' → logprob: -8.577340126037598
    5. 'None' → logprob: -10.202340126037598
    6. '2' → logprob: -10.827340126037598
    7. '])' → logprob: -11.452340126037598
    8. '```' → logprob: -11.702340126037598
    9. '   ' → logprob: -11.827340126037598
    10. ')' → logprob: -12.202340126037598

Token 1103: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12798038125038147
    2. ')' → logprob: -2.2529804706573486
    3. '<|end|>' → logprob: -4.8779802322387695
    4. '])' → logprob: -5.5029802322387695
    5. '   ' → logprob: -7.0029802322387695
    6. '       ' → logprob: -7.3779802322387695
    7. '[' → logprob: -7.3779802322387695
    8. ')]' → logprob: -7.7529802322387695
    9. ',' → logprob: -8.62798023223877
    10. '<|end|>' → logprob: -9.25298023223877

Token 1104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5547884702682495
    2. ')' → logprob: -1.3047884702682495
    3. '       ' → logprob: -2.304788589477539
    4. '<|end|>' → logprob: -3.804788589477539
    5. '[' → logprob: -4.304788589477539
    6. ']' → logprob: -4.929788589477539
    7. ':' → logprob: -6.179788589477539
    8. ',' → logprob: -6.179788589477539
    9. 'def' → logprob: -6.429788589477539
    10. '[
' → logprob: -7.179788589477539

Token 1105: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09449832886457443
    2. '<|end|>' → logprob: -3.2194983959198
    3. '   ' → logprob: -3.3444983959198
    4. ')' → logprob: -4.344498157501221
    5. ']' → logprob: -8.094498634338379
    6. '    ' → logprob: -8.219498634338379
    7. '        ' → logprob: -8.344498634338379
    8. '[' → logprob: -8.469498634338379
    9. '           ' → logprob: -9.219498634338379
    10. 'def' → logprob: -9.219498634338379

Token 1106: '.fac' (ID: 108153)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5384865999221802
    2. 'fac' → logprob: -0.9134865999221802
    3. 'factor' → logprob: -4.413486480712891
    4. ' fact' → logprob: -7.038486480712891
    5. 'max' → logprob: -7.538486480712891
    6. 'size' → logprob: -8.16348648071289
    7. '_fac' → logprob: -8.28848648071289
    8. 'facts' → logprob: -8.41348648071289
    9. 'n' → logprob: -8.78848648071289
    10. '.fac' → logprob: -8.91348648071289

Token 1107: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2259720414876938
    2. ' =' → logprob: -1.600972056388855
    3. '   ' → logprob: -8.475972175598145
    4. '[' → logprob: -8.725972175598145
    5. '=[' → logprob: -9.350972175598145
    6. ',' → logprob: -10.100972175598145
    7. '=[]' → logprob: -10.975972175598145
    8. 's' → logprob: -11.725972175598145
    9. '  ' → logprob: -12.225972175598145
    10. ' ' → logprob: -12.725972175598145

Token 1108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16397440433502197
    2. ' self' → logprob: -2.4139742851257324
    3. '[' → logprob: -3.2889742851257324
    4. '[self' → logprob: -4.163974285125732
    5. ' [' → logprob: -4.788974285125732
    6. '       ' → logprob: -7.913974285125732
    7. '   ' → logprob: -9.66397476196289
    8. ' ' → logprob: -10.41397476196289
    9. '           ' → logprob: -10.53897476196289
    10. '        ' → logprob: -10.91397476196289

Token 1109: '.f' (ID: 1196)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3919515311717987
    2. '=' → logprob: -1.516951560974121
    3. 'fac' → logprob: -2.766951560974121
    4. ' =' → logprob: -4.391951560974121
    5. 'mod' → logprob: -4.641951560974121
    6. '_inv' → logprob: -4.766951560974121
    7. '=[' → logprob: -6.141951560974121
    8. 'inverse' → logprob: -6.391951560974121
    9. '[' → logprob: -6.516951560974121
    10. 'pow' → logprob: -6.891951560974121

Token 1110: 'acin' (ID: 18829)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.06487451493740082
    2. 'ac' → logprob: -3.1898744106292725
    3. 'act' → logprob: -3.9398744106292725
    4. '_inv' → logprob: -7.189874649047852
    5. 'acs' → logprob: -7.314874649047852
    6. 'actor' → logprob: -8.939874649047852
    7. '[' → logprob: -8.939874649047852
    8. 'iv' → logprob: -8.939874649047852
    9. 'Inv' → logprob: -9.314874649047852
    10. 'in' → logprob: -9.814874649047852

Token 1111: 'v' (ID: 85)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5640684366226196
    2. '=' → logprob: -1.6890684366226196
    3. '=[' → logprob: -2.56406831741333
    4. '[' → logprob: -2.81406831741333
    5. 'v' → logprob: -2.93906831741333
    6. ' =' → logprob: -3.81406831741333
    7. '_list' → logprob: -4.68906831741333
    8. 'list' → logprob: -4.81406831741333
    9. 'um' → logprob: -5.81406831741333
    10. 'ts' → logprob: -5.93906831741333

Token 1112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753385111689568
    2. ' =' → logprob: -3.5297534465789795
    3. '=[' → logprob: -13.279753684997559
    4. '=list' → logprob: -14.779753684997559
    5. ' =[' → logprob: -15.154753684997559
    6. ',' → logprob: -15.529753684997559
    7. '[' → logprob: -16.279752731323242
    8. '=[]' → logprob: -16.279752731323242
    9. ' ' → logprob: -16.529752731323242
    10. '＝' → logprob: -16.779752731323242

Token 1113: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4574419856071472
    2. '[list' → logprob: -1.582442045211792
    3. 'list' → logprob: -1.957442045211792
    4. ' [' → logprob: -4.582441806793213
    5. '[it' → logprob: -5.082441806793213
    6. '([' → logprob: -6.207441806793213
    7. '[self' → logprob: -7.332441806793213
    8. ' list' → logprob: -8.207442283630371
    9. '(list' → logprob: -8.332442283630371
    10. '[n' → logprob: -8.707442283630371

Token 1114: '._' (ID: 2697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01202320121228695
    2. '([' → logprob: -5.387022972106934
    3. '=' → logprob: -5.887022972106934
    4. '[[' → logprob: -6.262022972106934
    5. '=[' → logprob: -7.387022972106934
    6. '0' → logprob: -7.887022972106934
    7. ' =' → logprob: -8.512022972106934
    8. 'list' → logprob: -8.512022972106934
    9. '[
' → logprob: -8.637022972106934
    10. '(' → logprob: -8.762022972106934

Token 1115: 'make' (ID: 14172)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.0433495044708252
    2. '[' → logprob: -1.1683495044708252
    3. '__' → logprob: -1.6683495044708252
    4. 'init' → logprob: -2.418349504470825
    5. '_acc' → logprob: -4.418349266052246
    6. 'build' → logprob: -4.793349266052246
    7. '__[' → logprob: -5.043349266052246
    8. '_init' → logprob: -5.293349266052246
    9. 'initialize' → logprob: -5.668349266052246
    10. 'append' → logprob: -5.668349266052246

Token 1116: '_factor' (ID: 43757)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3323367238044739
    2. '(' → logprob: -2.082336664199829
    3. '[' → logprob: -2.582336664199829
    4. '(n' → logprob: -2.832336664199829
    5. 'fac' → logprob: -4.832336902618408
    6. '[n' → logprob: -5.582336902618408
    7. '_fac' → logprob: -5.832336902618408
    8. '(
' → logprob: -6.082336902618408
    9. 'factor' → logprob: -6.332336902618408
    10. '_factor' → logprob: -6.457336902618408

Token 1117: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.251963347196579
    2. 'ial' → logprob: -1.5019633769989014
    3. '```' → logprob: -10.62696361541748
    4. 'def' → logprob: -12.12696361541748
    5. 'ialize' → logprob: -14.00196361541748
    6. '   ' → logprob: -14.37696361541748
    7. 'iales' → logprob: -14.37696361541748
    8. 'ialist' → logprob: -14.50196361541748
    9. '[' → logprob: -14.62696361541748
    10. ' ' → logprob: -14.75196361541748

Token 1118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4306175112724304
    2. '(' → logprob: -1.0556175708770752
    3. '([' → logprob: -6.930617332458496
    4. '(
' → logprob: -8.055617332458496
    5. ',' → logprob: -8.430617332458496
    6. '((' → logprob: -9.180617332458496
    7. '=' → logprob: -9.555617332458496
    8. '[' → logprob: -9.930617332458496
    9. '```' → logprob: -10.305617332458496
    10. ' (' → logprob: -10.680617332458496

Token 1119: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0008110555354505777
    2. 'max' → logprob: -7.1258111000061035
    3. '_' → logprob: -12.750810623168945
    4. '+' → logprob: -14.125810623168945
    5. '```' → logprob: -14.125810623168945
    6. '=' → logprob: -14.750810623168945
    7. 'ax' → logprob: -14.750810623168945
    8. '_MAX' → logprob: -15.125810623168945
    9. ')_' → logprob: -15.125810623168945
    10. ')' → logprob: -15.500810623168945

Token 1120: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004198424983769655
    2. ')' → logprob: -6.0041985511779785
    3. '   ' → logprob: -7.0041985511779785
    4. '[' → logprob: -7.7541985511779785
    5. ',[' → logprob: -9.50419807434082
    6. '<|end|>' → logprob: -9.87919807434082
    7. ' ,' → logprob: -10.12919807434082
    8. ',n' → logprob: -10.37919807434082
    9. '<|end|>' → logprob: -10.50419807434082
    10. '```' → logprob: -10.62919807434082

Token 1121: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445195436477661
    2. ')' → logprob: -1.2945195436477661
    3. '   ' → logprob: -1.4195195436477661
    4. '[' → logprob: -2.4195194244384766
    5. '(' → logprob: -5.044519424438477
    6. '[
' → logprob: -5.294519424438477
    7. '<|end|>' → logprob: -5.419519424438477
    8. 'def' → logprob: -5.419519424438477
    9. '(
' → logprob: -5.669519424438477
    10. ':' → logprob: -6.044519424438477

Token 1122: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12262004613876343
    2. 'def' (adapté à ' def') → logprob: -2.872620105743408
    3. ')' → logprob: -3.622620105743408
    4. ' def' → logprob: -4.372620105743408
    5. '[' → logprob: -5.372620105743408
    6. '       ' → logprob: -5.747620105743408
    7. ',' → logprob: -5.872620105743408
    8. ':' → logprob: -5.872620105743408
    9. '<|end|>' → logprob: -6.247620105743408
    10. '	def' → logprob: -6.497620105743408

Token 1123: ' __' (ID: 2516)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.0007459024200215936
    2. '_mod' → logprob: -8.00074577331543
    3. '_fac' → logprob: -8.62574577331543
    4. '_init' → logprob: -9.00074577331543
    5. '_factor' → logprob: -10.25074577331543
    6. 'make' → logprob: -10.75074577331543
    7. 'mod' → logprob: -11.12574577331543
    8. '__' → logprob: -12.25074577331543
    9. '_next' → logprob: -12.75074577331543
    10. '_max' → logprob: -12.87574577331543

Token 1124: 'call' (ID: 9925)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.011572344228625298
    2. 'len' → logprob: -5.261572360992432
    3. 'call' → logprob: -6.011572360992432
    4. 'next' → logprob: -6.011572360992432
    5. 'getitem' → logprob: -6.886572360992432
    6. 'iter' → logprob: -7.886572360992432
    7. 'repr' → logprob: -11.136571884155273
    8. '_init' → logprob: -13.261571884155273
    9. 'new' → logprob: -13.761571884155273
    10. 'contains' → logprob: -14.136571884155273

Token 1125: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05645352229475975
    2. '<|end|>' → logprob: -3.6814534664154053
    3. '(self' → logprob: -4.306453704833984
    4. '(
' → logprob: -4.556453704833984
    5. ' (' → logprob: -5.681453704833984
    6. '[' → logprob: -7.056453704833984
    7. '<|end|>' → logprob: -8.181453704833984
    8. '   ' → logprob: -8.806453704833984
    9. 'def' → logprob: -9.056453704833984
    10. 'self' → logprob: -9.181453704833984

Token 1126: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.061054359131958e-06
    2. '   ' → logprob: -12.625007629394531
    3. 'n' → logprob: -12.875007629394531
    4. ' self' → logprob: -13.750007629394531
    5. '       ' → logprob: -13.875007629394531
    6. ' ' → logprob: -17.00000762939453
    7. 'def' → logprob: -17.62500762939453
    8. '...' → logprob: -18.87500762939453
    9. 'x' → logprob: -19.25000762939453
    10. '0' → logprob: -19.50000762939453

Token 1127: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019316986203193665
    2. ' (' → logprob: -4.644317150115967
    3. '(
' → logprob: -5.519317150115967
    4. '(n' → logprob: -6.269317150115967
    5. '[' → logprob: -6.394317150115967
    6. ',' → logprob: -7.519317150115967
    7. '.' → logprob: -7.894317150115967
    8. ')' → logprob: -8.269316673278809
    9. '_' → logprob: -9.144316673278809
    10. '__' → logprob: -9.144316673278809

Token 1128: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.313268780708313
    2. 'self' → logprob: -1.313268780708313
    3. ' self' → logprob: -12.188268661499023
    4. ' n' → logprob: -13.313268661499023
    5. '   ' → logprob: -15.438268661499023
    6. 'k' → logprob: -17.313268661499023
    7. 'def' → logprob: -17.563268661499023
    8. '       ' → logprob: -17.563268661499023
    9. '```' → logprob: -18.063268661499023
    10. ' ' → logprob: -18.188268661499023

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004416228737682104
    2. ',r' → logprob: -5.754416465759277
    3. ',k' → logprob: -7.004416465759277
    4. ',n' → logprob: -8.254416465759277
    5. ' ,' → logprob: -10.129416465759277
    6. '   ' → logprob: -12.254416465759277
    7. '):' → logprob: -12.629416465759277
    8. ',y' → logprob: -13.004416465759277
    9. ',p' → logprob: -13.004416465759277
    10. ',m' → logprob: -13.254416465759277

Token 1130: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006723302416503429
    2. 'k' → logprob: -5.006723403930664
    3. ' r' → logprob: -11.756723403930664
    4. '   ' → logprob: -16.256723403930664
    5. 'm' → logprob: -17.131723403930664
    6. ' k' → logprob: -17.256723403930664
    7. '  ' → logprob: -18.631723403930664
    8. ' ' → logprob: -19.256723403930664
    9. '	r' → logprob: -19.881723403930664
    10. '    ' → logprob: -20.006723403930664

Token 1131: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07410848140716553
    2. '):' → logprob: -2.699108600616455
    3. '):
' → logprob: -5.699108600616455
    4. ' ,' → logprob: -7.949108600616455
    5. '   ' → logprob: -8.574108123779297
    6. ',n' → logprob: -9.699108123779297
    7. '<|end|>' → logprob: -9.699108123779297
    8. ':' → logprob: -10.199108123779297
    9. ')' → logprob: -10.324108123779297
    10. '<|end|>' → logprob: -10.574108123779297

Token 1132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0092957019805908
    2. '<|end|>' → logprob: -1.0092957019805908
    3. '(' → logprob: -2.259295701980591
    4. ':' → logprob: -2.759295701980591
    5. '(
' → logprob: -3.134295701980591
    6. '[' → logprob: -4.134295463562012
    7. ' (' → logprob: -4.759295463562012
    8. ' return' → logprob: -5.384295463562012
    9. '(return' → logprob: -5.634295463562012
    10. ':return' → logprob: -6.134295463562012

Token 1133: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31210315227508545
    2. ' return' → logprob: -1.5621031522750854
    3. '       ' → logprob: -3.812103271484375
    4. 'if' (adapté à ' if') → logprob: -3.937103271484375
    5. 'return' → logprob: -4.312103271484375
    6. '0' → logprob: -6.812103271484375
    7. '
' → logprob: -7.812103271484375
    8. ' None' → logprob: -7.937103271484375
    9. ' n' → logprob: -8.062103271484375
    10. '   ' → logprob: -8.187103271484375

Token 1134: ' not' (ID: 625)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3873974680900574
    2. ' r' → logprob: -1.1373975276947021
    3. ' n' → logprob: -8.137397766113281
    4. 'n' → logprob: -8.637397766113281
    5. ' not' → logprob: -10.012397766113281
    6. '   ' → logprob: -11.887397766113281
    7. '0' → logprob: -13.262397766113281
    8. 'not' → logprob: -13.762397766113281
    9. ' ' → logprob: -14.012397766113281
    10. '  ' → logprob: -15.012397766113281

Token 1135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17306625843048096
    2. '(' → logprob: -2.0480661392211914
    3. ' ' → logprob: -3.9230661392211914
    4. ' (' → logprob: -4.673066139221191
    5. '(r' → logprob: -8.048066139221191
    6. '(n' → logprob: -8.423066139221191
    7. ' isinstance' → logprob: -8.423066139221191
    8. ' r' → logprob: -10.923066139221191
    9. 'r' → logprob: -10.923066139221191
    10. '   ' → logprob: -12.423066139221191

Token 1136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31806257367134094
    2. '(' → logprob: -1.3180625438690186
    3. ' (' → logprob: -6.193062782287598
    4. '(r' → logprob: -6.568062782287598
    5. ' ' → logprob: -7.568062782287598
    6. '(n' → logprob: -7.943062782287598
    7. 'r' → logprob: -8.443062782287598
    8. 'is' → logprob: -9.068062782287598
    9. ' isinstance' → logprob: -9.568062782287598
    10. '(is' → logprob: -9.818062782287598

Token 1137: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759485363960266
    2. ' <=' → logprob: -0.8259485363960266
    3. ')<=' → logprob: -12.825948715209961
    4. ']<=' → logprob: -13.950948715209961
    5. '<' → logprob: -14.075948715209961
    6. '```' → logprob: -14.325948715209961
    7. ')' → logprob: -14.325948715209961
    8. '≤' → logprob: -14.700948715209961
    9. '   ' → logprob: -14.825948715209961
    10. '<|end|>' → logprob: -14.950948715209961

Token 1138: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.868328920158092e-05
    2. 'n' → logprob: -11.125028610229492
    3. ' r' → logprob: -11.250028610229492
    4. '   ' → logprob: -14.375028610229492
    5. '	r' → logprob: -16.500028610229492
    6. ' ' → logprob: -16.875028610229492
    7. '=' → logprob: -16.875028610229492
    8. '```' → logprob: -17.250028610229492
    9. '=r' → logprob: -17.250028610229492
    10. '  ' → logprob: -18.125028610229492

Token 1139: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.009811695665121078
    2. ' <=' → logprob: -4.634811878204346
    3. ' and' → logprob: -10.259811401367188
    4. 'and' → logprob: -12.509811401367188
    5. '<len' → logprob: -12.759811401367188
    6. '<n' → logprob: -13.009811401367188
    7. ')<=' → logprob: -13.009811401367188
    8. '≤' → logprob: -13.259811401367188
    9. '<|end|>' → logprob: -13.384811401367188
    10. '0' → logprob: -13.759811401367188

Token 1140: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. ' n' → logprob: -13.875000953674316
    3. '	n' → logprob: -20.250001907348633
    4. ')n' → logprob: -23.250001907348633
    5. '```' → logprob: -23.625001907348633
    6. '_n' → logprob: -24.000001907348633
    7. '   ' → logprob: -24.000001907348633
    8. 'n't' → logprob: -24.125001907348633
    9. '(n' → logprob: -24.250001907348633
    10. ',n' → logprob: -24.500001907348633

Token 1141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06973966956138611
    2. ' and' → logprob: -3.444739580154419
    3. ':return' → logprob: -4.319739818572998
    4. '<|end|>' → logprob: -4.944739818572998
    5. '[' → logprob: -5.819739818572998
    6. ')' → logprob: -5.944739818572998
    7. '):' → logprob: -6.069739818572998
    8. ':
' → logprob: -6.319739818572998
    9. ' else' → logprob: -6.444739818572998
    10. 'and' → logprob: -7.319739818572998

Token 1142: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17224916815757751
    2. '           ' → logprob: -2.4222490787506104
    3. 'return' → logprob: -3.5472490787506104
    4. '       ' → logprob: -4.4222493171691895
    5. ' 
' → logprob: -5.0472493171691895
    6. ' ' → logprob: -5.0472493171691895
    7. '0' → logprob: -5.4222493171691895
    8. ':return' → logprob: -5.5472493171691895
    9. '1' → logprob: -6.4222493171691895
    10. '        ' → logprob: -6.7972493171691895

Token 1143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.625036239624023
    4. '۰' → logprob: -22.625036239624023
    5. '  ' → logprob: -23.125036239624023
    6. ' ' → logprob: -23.500036239624023
    7. '０' → logprob: -23.500036239624023
    8. '
' → logprob: -23.625036239624023
    9. '	' → logprob: -23.875036239624023
    10. '       ' → logprob: -24.375036239624023

Token 1144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -20.375
    5. '000' → logprob: -20.875
    6. '０' → logprob: -21.0
    7. '00' → logprob: -21.125
    8. '```' → logprob: -21.625
    9. '
' → logprob: -22.3125
    10. 'None' → logprob: -22.8125

Token 1145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23004357516765594
    2. '<|end|>' → logprob: -1.6050435304641724
    3. '
' → logprob: -6.355043411254883
    4. '   ' → logprob: -6.730043411254883
    5. '<|end|>' → logprob: -7.355043411254883
    6. ')' → logprob: -7.730043411254883
    7. ',' → logprob: -8.980043411254883
    8. '	' → logprob: -9.480043411254883
    9. '[' → logprob: -10.105043411254883
    10. '```' → logprob: -10.105043411254883

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017247911542654037
    2. '   ' → logprob: -4.267247676849365
    3. '<|end|>' → logprob: -6.142247676849365
    4. '	' → logprob: -7.267247676849365
    5. '	   ' → logprob: -9.642248153686523
    6. '    ' → logprob: -10.517248153686523
    7. '	return' → logprob: -10.767248153686523
    8. '<|end|>' → logprob: -11.267248153686523
    9. ' ' → logprob: -11.392248153686523
    10. '   ' → logprob: -11.767248153686523

Token 1147: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020756712183356285
    2. 'return' (adapté à ' return') → logprob: -7.377075672149658
    3. 'fac' → logprob: -7.752075672149658
    4. '   ' → logprob: -7.877075672149658
    5. 'numer' → logprob: -8.6270751953125
    6. 'n' → logprob: -8.8770751953125
    7. 'if' → logprob: -9.0020751953125
    8. 'fact' → logprob: -9.6270751953125
    9. 'f' → logprob: -10.6270751953125
    10. ' if' → logprob: -10.7520751953125

Token 1148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02735372632741928
    2. '(self' → logprob: -3.7773537635803223
    3. ' self' → logprob: -5.527353763580322
    4. ' (' → logprob: -9.027353286743164
    5. '   ' → logprob: -13.152353286743164
    6. '       ' → logprob: -14.277353286743164
    7. '(' → logprob: -14.777353286743164
    8. ' ' → logprob: -16.277353286743164
    9. '	self' → logprob: -16.402353286743164
    10. '  ' → logprob: -17.277353286743164

Token 1149: '.fac' (ID: 108153)
  Prédit: '.fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fac' → logprob: -1.4259644558478612e-05
    2. 'fac' → logprob: -11.250014305114746
    3. '.fc' → logprob: -14.750014305114746
    4. '_fac' → logprob: -15.125014305114746
    5. '.fact' → logprob: -15.625014305114746
    6. '.fa' → logprob: -15.875014305114746
    7. '.' → logprob: -16.25001335144043
    8. 'FAC' → logprob: -16.62501335144043
    9. 'Fac' → logprob: -17.12501335144043
    10. ' .' → logprob: -17.37501335144043

Token 1150: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.128163257315464e-07
    2. '(n' → logprob: -15.75
    3. 'n' → logprob: -16.125
    4. '[' → logprob: -17.375
    5. '[
' → logprob: -17.5
    6. '[r' → logprob: -19.25
    7. '```' → logprob: -19.375
    8. '	n' → logprob: -19.5
    9. '
' → logprob: -20.375
    10. '[i' → logprob: -20.875

Token 1151: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039415258914232254
    2. '[r' → logprob: -3.5394153594970703
    3. ']*' → logprob: -4.78941535949707
    4. '][' → logprob: -7.66441535949707
    5. '[n' → logprob: -7.78941535949707
    6. '[' → logprob: -8.28941535949707
    7. '   ' → logprob: -9.16441535949707
    8. '[self' → logprob: -10.66441535949707
    9. ' ]' → logprob: -11.91441535949707
    10. '       ' → logprob: -12.41441535949707

Token 1152: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026574634830467403
    2. ' self' → logprob: -8.250266075134277
    3. '(self' → logprob: -12.875266075134277
    4. '	self' → logprob: -14.125266075134277
    5. '[self' → logprob: -14.750266075134277
    6. '<|end|>' → logprob: -15.000266075134277
    7. '*self' → logprob: -16.12526512145996
    8. '       ' → logprob: -16.87526512145996
    9. '```' → logprob: -16.87526512145996
    10. '   ' → logprob: -17.12526512145996

Token 1153: '.f' (ID: 1196)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0018293926259502769
    2. '.f' → logprob: -6.501829624176025
    3. '	f' → logprob: -9.126829147338867
    4. 'fac' → logprob: -9.126829147338867
    5. '_f' → logprob: -9.876829147338867
    6. ''f' → logprob: -11.126829147338867
    7. '(f' → logprob: -11.751829147338867
    8. '.fac' → logprob: -12.126829147338867
    9. '   ' → logprob: -13.126829147338867
    10. '-f' → logprob: -13.376829147338867

Token 1154: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.01628889888525009
    2. 'ac' → logprob: -4.141288757324219
    3. 'ain' → logprob: -8.641288757324219
    4. 'cin' → logprob: -9.891288757324219
    5. 'inv' → logprob: -11.266288757324219
    6. 'a' → logprob: -12.016288757324219
    7. '
' → logprob: -14.141288757324219
    8. 'avin' → logprob: -14.391288757324219
    9. '   ' → logprob: -14.516288757324219
    10. ' ac' → logprob: -14.516288757324219

Token 1155: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. '[v' → logprob: -14.625000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'в' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. '```' → logprob: -17.5
    7. 'vs' → logprob: -17.625
    8. '
' → logprob: -17.75
    9. 'vx' → logprob: -18.375
    10. 'x' → logprob: -18.5

Token 1156: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.630610641877865e-06
    2. '[n' → logprob: -12.500006675720215
    3. 'r' → logprob: -13.250006675720215
    4. '[' → logprob: -14.500006675720215
    5. '```' → logprob: -15.125006675720215
    6. '(r' → logprob: -16.3750057220459
    7. '[
' → logprob: -16.3750057220459
    8. '	r' → logprob: -16.6250057220459
    9. '   ' → logprob: -17.8750057220459
    10. '[m' → logprob: -18.5000057220459

Token 1157: ']%' (ID: 158002)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14780503511428833
    2. ']%' → logprob: -2.3978049755096436
    3. '[n' → logprob: -3.8978049755096436
    4. ']*' → logprob: -3.8978049755096436
    5. '%' → logprob: -5.522805213928223
    6. '%n' → logprob: -7.022805213928223
    7. '*n' → logprob: -8.397805213928223
    8. '//' → logprob: -8.647805213928223
    9. '*' → logprob: -9.022805213928223
    10. '   ' → logprob: -9.147805213928223

Token 1158: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00219735992141068
    2. ' self' → logprob: -6.127197265625
    3. '[self' → logprob: -12.252197265625
    4. '   ' → logprob: -12.877197265625
    5. '       ' → logprob: -13.252197265625
    6. ' ' → logprob: -14.252197265625
    7. '(self' → logprob: -14.377197265625
    8. 'mod' → logprob: -14.502197265625
    9. '*self' → logprob: -14.502197265625
    10. '	self' → logprob: -14.752197265625

Token 1159: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.504040356958285e-05
    2. 'self' → logprob: -10.375064849853516
    3. '.mod' → logprob: -11.125064849853516
    4. '_mod' → logprob: -11.250064849853516
    5. ' mod' → logprob: -12.750064849853516
    6. 'fac' → logprob: -13.750064849853516
    7. '	mod' → logprob: -14.000064849853516
    8. '   ' → logprob: -14.625064849853516
    9. '```' → logprob: -15.500064849853516
    10. 'MOD' → logprob: -16.000064849853516

Token 1160: '*self' (ID: 120355)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6993963122367859
    2. '*self' → logprob: -1.1993963718414307
    3. '*' → logprob: -1.6993963718414307
    4. '       ' → logprob: -4.949396133422852
    5. '   ' → logprob: -5.324396133422852
    6. 'def' → logprob: -5.449396133422852
    7. '%' → logprob: -7.074396133422852
    8. '*object' → logprob: -8.199396133422852
    9. '*(' → logprob: -8.324396133422852
    10. '	' → logprob: -8.324396133422852

Token 1161: '.f' (ID: 1196)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.7420536279678345
    2. 'f' → logprob: -0.9920536279678345
    3. 'fac' → logprob: -1.9920536279678345
    4. 'ac' → logprob: -4.992053508758545
    5. '_fac' → logprob: -5.617053508758545
    6. '.f' → logprob: -5.867053508758545
    7. '	f' → logprob: -6.617053508758545
    8. '[' → logprob: -7.742053508758545
    9. '.fac' → logprob: -7.742053508758545
    10. '[f' → logprob: -7.992053508758545

Token 1162: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.22757460176944733
    2. 'ac' → logprob: -1.6025745868682861
    3. 'cin' → logprob: -6.602574825286865
    4. 'inv' → logprob: -7.477574825286865
    5. 'ain' → logprob: -9.352574348449707
    6. 'acij' → logprob: -10.602574348449707
    7. 'a' → logprob: -11.102574348449707
    8. 'aci' → logprob: -11.477574348449707
    9. 'acf' → logprob: -11.727574348449707
    10. 'acc' → logprob: -11.852574348449707

Token 1163: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -15.500000953674316
    3. '   ' → logprob: -16.000001907348633
    4. 'inv' → logprob: -16.000001907348633
    5. 'nv' → logprob: -16.375001907348633
    6. '```' → logprob: -16.375001907348633
    7. 'rv' → logprob: -16.750001907348633
    8. '[v' → logprob: -17.250001907348633
    9. '[' → logprob: -17.250001907348633
    10. 'в' → logprob: -17.437501907348633

Token 1164: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.0100624169572257e-05
    2. 'n' → logprob: -10.875020027160645
    3. '[
' → logprob: -14.750020027160645
    4. '
' → logprob: -15.000020027160645
    5. '[' → logprob: -15.750020027160645
    6. '(n' → logprob: -15.875020027160645
    7. '   ' → logprob: -16.75002098083496
    8. '	n' → logprob: -17.25002098083496
    9. '```' → logprob: -17.50002098083496
    10. '[-' → logprob: -17.75002098083496

Token 1165: '-r' (ID: 6335)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16214144229888916
    2. '[r' → logprob: -2.0371413230895996
    3. 'r' → logprob: -4.7871413230896
    4. 'n' → logprob: -4.7871413230896
    5. '-r' → logprob: -6.6621413230896
    6. '[' → logprob: -7.0371413230896
    7. '(n' → logprob: -8.537141799926758
    8. '[-' → logprob: -9.287141799926758
    9. '-n' → logprob: -9.787141799926758
    10. '{' → logprob: -10.662141799926758

Token 1166: ']%' (ID: 158002)
  Prédit: ']%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.19693228602409363
    2. '%' → logprob: -1.821932315826416
    3. ']' → logprob: -4.571932315826416
    4. '%n' → logprob: -5.071932315826416
    5. '[n' → logprob: -8.446931838989258
    6. ' %' → logprob: -8.821931838989258
    7. '[r' → logprob: -10.321931838989258
    8. ')%' → logprob: -11.821931838989258
    9. '%x' → logprob: -11.946931838989258
    10. '[' → logprob: -12.446931838989258

Token 1167: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.5577775128767826e-06
    2. ' self' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.0000057220459
    4. '
' → logprob: -17.3750057220459
    5. '       ' → logprob: -17.8750057220459
    6. '(self' → logprob: -18.0000057220459
    7. ' ' → logprob: -18.7500057220459
    8. '[self' → logprob: -19.2500057220459
    9. '	self' → logprob: -19.8750057220459
    10. '  ' → logprob: -20.1250057220459

Token 1168: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.002475777640938759
    2. 'mod' → logprob: -6.002475738525391
    3. '	mod' → logprob: -16.12747573852539
    4. '```' → logprob: -18.12747573852539
    5. '_mod' → logprob: -18.37747573852539
    6. 'omod' → logprob: -18.75247573852539
    7. ' mod' → logprob: -18.75247573852539
    8. 'self' → logprob: -20.12747573852539
    9. '(mod' → logprob: -20.62747573852539
    10. '   ' → logprob: -21.00247573852539

Token 1169: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13284049928188324
    2. '
' → logprob: -2.507840394973755
    3. 'def' → logprob: -3.632840394973755
    4. ' def' → logprob: -4.757840633392334
    5. '    
' → logprob: -5.132840633392334
    6. '```' → logprob: -7.257840633392334
    7. '	def' → logprob: -7.757840633392334
    8. ' ' → logprob: -7.757840633392334
    9. '        
' → logprob: -9.007840156555176
    10. '  
' → logprob: -9.382840156555176

Token 1171: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5479543805122375
    2. '   ' → logprob: -1.0479543209075928
    3. '
' → logprob: -3.2979543209075928
    4. ' def' → logprob: -3.4229543209075928
    5. '    
' → logprob: -6.797954559326172
    6. ' ' → logprob: -8.172954559326172
    7. '	def' → logprob: -9.547954559326172
    8. '        
' → logprob: -10.672954559326172
    9. '```' → logprob: -10.672954559326172
    10. '#' → logprob: -11.047954559326172

Token 1172: ' _' (ID: 1175)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.3203211724758148
    2. '_fac' → logprob: -1.3203212022781372
    3. '_factor' → logprob: -5.195321083068848
    4. '_f' → logprob: -7.070321083068848
    5. '_fact' → logprob: -8.445321083068848
    6. ' _' → logprob: -9.320321083068848
    7. '__' → logprob: -9.945321083068848
    8. '_mul' → logprob: -10.195321083068848
    9. '_get' → logprob: -10.195321083068848
    10. '_prepare' → logprob: -10.320321083068848

Token 1173: 'make' (ID: 14172)
  Prédit: 'make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.000432695698691532
    2. '_make' → logprob: -7.75043249130249
    3. 'def' → logprob: -13.875432968139648
    4. 'factor' → logprob: -15.250432968139648
    5. '(make' → logprob: -15.375432968139648
    6. '_factor' → logprob: -15.875432968139648
    7. '	make' → logprob: -16.25043296813965
    8. 'pow' → logprob: -16.37543296813965
    9. 'init' → logprob: -16.62543296813965
    10. 'mak' → logprob: -16.87543296813965

Token 1174: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.08947841078042984
    2. 'factor' → logprob: -2.4644784927368164
    3. 'def' → logprob: -8.339478492736816
    4. '_fac' → logprob: -8.714478492736816
    5. 'self' → logprob: -10.089478492736816
    6. 'fac' → logprob: -10.214478492736816
    7. '   ' → logprob: -10.464478492736816
    8. 'fact' → logprob: -12.089478492736816
    9. 'f' → logprob: -12.339478492736816
    10. '_fact' → logprob: -12.714478492736816

Token 1175: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.002605975838378072
    2. 'als' → logprob: -7.00260591506958
    3. 'ial' → logprob: -7.00260591506958
    4. 't' → logprob: -9.127606391906738
    5. '```' → logprob: -9.377606391906738
    6. '_' → logprob: -9.502606391906738
    7. '_factor' → logprob: -9.502606391906738
    8. 'actor' → logprob: -9.752606391906738
    9. 'c' → logprob: -10.127606391906738
    10. 's' → logprob: -10.252606391906738

Token 1176: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011802274966612458
    2. 'def' → logprob: -7.251180171966553
    3. '(' → logprob: -8.126180648803711
    4. 'self' → logprob: -9.251180648803711
    5. '   ' → logprob: -9.626180648803711
    6. '(n' → logprob: -12.251180648803711
    7. '       ' → logprob: -12.751180648803711
    8. '(s' → logprob: -13.751180648803711
    9. ' ' → logprob: -13.876180648803711
    10. ' (' → logprob: -14.376180648803711

Token 1177: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008852534228935838
    2. 'def' → logprob: -7.500885486602783
    3. 'self' → logprob: -8.500885009765625
    4. '(n' → logprob: -9.125885009765625
    5. '   ' → logprob: -12.375885009765625
    6. '(' → logprob: -12.500885009765625
    7. 'n' → logprob: -12.875885009765625
    8. 's' → logprob: -13.000885009765625
    9. '```' → logprob: -13.500885009765625
    10. '(s' → logprob: -13.625885009765625

Token 1178: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026460643857717514
    2. 'n' → logprob: -3.651460647583008
    3. ' self' → logprob: -9.151460647583008
    4. '   ' → logprob: -10.276460647583008
    5. 'def' → logprob: -11.526460647583008
    6. ' n' → logprob: -12.651460647583008
    7. 's' → logprob: -13.401460647583008
    8. '(self' → logprob: -13.526460647583008
    9. ' ' → logprob: -13.901460647583008
    10. '       ' → logprob: -14.401460647583008

Token 1179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2761722803115845
    2. '_max' → logprob: -1.7761722803115845
    3. 'max' → logprob: -3.651172161102295
    4. '):' → logprob: -3.776172161102295
    5. '   ' → logprob: -4.151172161102295
    6. ':' → logprob: -5.526172161102295
    7. '       ' → logprob: -6.401172161102295
    8. '```' → logprob: -7.276172161102295
    9. '_MAX' → logprob: -8.401172637939453
    10. ':
' → logprob: -8.776172637939453

Token 1180: '       ' (ID: 309)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.07123379409313202
    2. '       ' → logprob: -2.8212337493896484
    3. '   ' → logprob: -5.446233749389648
    4. 'fact' → logprob: -5.571233749389648
    5. ' fac' → logprob: -7.321233749389648
    6. 'f' → logprob: -8.071233749389648
    7. 'factor' → logprob: -9.821233749389648
    8. '	f' → logprob: -10.571233749389648
    9. '_fac' → logprob: -11.071233749389648
    10. 'fc' → logprob: -11.446233749389648

Token 1181: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.00010437761375214905
    2. 'fact' → logprob: -9.750103950500488
    3. '       ' → logprob: -10.000103950500488
    4. 'f' → logprob: -15.250103950500488
    5. ' fac' → logprob: -15.375103950500488
    6. '_fac' → logprob: -16.875104904174805
    7. 'fab' → logprob: -16.875104904174805
    8. 'fc' → logprob: -17.000104904174805
    9. 'factor' → logprob: -17.125104904174805
    10. 'facet' → logprob: -17.750104904174805

Token 1182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03946797549724579
    2. ' =' → logprob: -3.2894680500030518
    3. '=[' → logprob: -7.039467811584473
    4. ',' → logprob: -7.664467811584473
    5. '   ' → logprob: -10.164467811584473
    6. '=[]
' → logprob: -11.414467811584473
    7. ',n' → logprob: -11.539467811584473
    8. 'def' → logprob: -11.914467811584473
    9. '=[]' → logprob: -11.914467811584473
    10. '=
' → logprob: -13.789467811584473

Token 1183: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009317061631008983
    2. ' [' → logprob: -7.125931739807129
    3. '[it' → logprob: -9.250931739807129
    4. 'list' → logprob: -11.000931739807129
    5. '[list' → logprob: -11.375931739807129
    6. '[n' → logprob: -13.625931739807129
    7. '   ' → logprob: -14.625931739807129
    8. '[a' → logprob: -14.875931739807129
    9. '[i' → logprob: -15.875931739807129
    10. '[name' → logprob: -16.250930786132812

Token 1184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -19.375
    4. '１' → logprob: -21.375
    5. '
' → logprob: -21.875
    6. '  ' → logprob: -22.375
    7. '```' → logprob: -22.625
    8. '{' → logprob: -23.0
    9. '[' → logprob: -23.125
    10. '    ' → logprob: -23.875

Token 1185: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.25182169675827026
    2. ']' → logprob: -1.626821756362915
    3. ']+' → logprob: -4.376821517944336
    4. ']
' → logprob: -4.876821517944336
    5. ']*' → logprob: -6.001821517944336
    6. '*(' → logprob: -6.126821517944336
    7. 'for' → logprob: -7.876821517944336
    8. ',' → logprob: -7.876821517944336
    9. '   ' → logprob: -8.001821517944336
    10. ' for' → logprob: -9.626821517944336

Token 1186: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '(n' → logprob: -15.375000953674316
    3. ' n' → logprob: -15.500000953674316
    4. '	n' → logprob: -16.5
    5. ')n' → logprob: -18.0
    6. '_n' → logprob: -18.5
    7. '[n' → logprob: -19.0
    8. '1' → logprob: -19.375
    9. '   ' → logprob: -20.125
    10. '(' → logprob: -20.375

Token 1187: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.36574100604048e-06
    2. ' +' → logprob: -13.500004768371582
    3. '+
' → logprob: -13.500004768371582
    4. '1' → logprob: -14.500004768371582
    5. '+n' → logprob: -15.125004768371582
    6. '-' → logprob: -15.250004768371582
    7. '0' → logprob: -15.375004768371582
    8. '```' → logprob: -16.125003814697266
    9. 'n' → logprob: -16.250003814697266
    10. '+[' → logprob: -17.000003814697266

Token 1188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -19.75
    3. '2' → logprob: -20.0
    4. '```' → logprob: -20.0
    5. '
' → logprob: -20.125
    6. ' ' → logprob: -20.625
    7. '(' → logprob: -21.75
    8. '{' → logprob: -21.875
    9. '+' → logprob: -22.125
    10. '100' → logprob: -22.375

Token 1189: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6327597498893738
    2. ')
' → logprob: -0.7577597498893738
    3. ')
' → logprob: -9.132760047912598
    4. '   ' → logprob: -11.632760047912598
    5. '```' → logprob: -11.757760047912598
    6. ')#' → logprob: -11.882760047912598
    7. '       ' → logprob: -12.007760047912598
    8. 'for' → logprob: -12.882760047912598
    9. ')`
' → logprob: -13.257760047912598
    10. '<|end|>' → logprob: -13.382760047912598

Token 1190: ' fin' (ID: 2131)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02746993862092495
    2. 'for' → logprob: -4.402470111846924
    3. 'fac' → logprob: -4.527470111846924
    4. '       ' → logprob: -6.652470111846924
    5. ' for' → logprob: -6.777470111846924
    6. ' fac' → logprob: -7.027470111846924
    7. '   ' → logprob: -8.402469635009766
    8. '	f' → logprob: -8.527469635009766
    9. ' f' → logprob: -9.152469635009766
    10. 'inv' → logprob: -10.027469635009766

Token 1191: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002649855799973011
    2. 'inv' → logprob: -6.502649784088135
    3. 'av' → logprob: -7.252649784088135
    4. 'ev' → logprob: -8.377650260925293
    5. 'cv' → logprob: -10.502650260925293
    6. 'vx' → logprob: -10.502650260925293
    7. 'vc' → logprob: -11.002650260925293
    8. '   ' → logprob: -11.127650260925293
    9. '```' → logprob: -11.127650260925293
    10. 'vs' → logprob: -11.252650260925293

Token 1192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006946010515093803
    2. ' =' → logprob: -5.006946086883545
    3. '=[' → logprob: -8.381945610046387
    4. '[' → logprob: -14.131945610046387
    5. ',' → logprob: -14.631945610046387
    6. ' =[' → logprob: -14.756945610046387
    7. '=[]' → logprob: -15.631945610046387
    8. '＝' → logprob: -17.631946563720703
    9. '=list' → logprob: -18.756946563720703
    10. ')' → logprob: -18.881946563720703

Token 1193: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. ' [' → logprob: -12.375004768371582
    3. '   ' → logprob: -18.375003814697266
    4. 'fac' → logprob: -18.375003814697266
    5. '1' → logprob: -18.750003814697266
    6. ' ' → logprob: -18.875003814697266
    7. '[n' → logprob: -19.250003814697266
    8. 'def' → logprob: -19.375003814697266
    9. '```' → logprob: -20.000003814697266
    10. '  ' → logprob: -20.125003814697266

Token 1194: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12704654037952423
    2. '1' → logprob: -2.127046585083008
    3. '0' → logprob: -9.127046585083008
    4. ' n' → logprob: -12.502046585083008
    5. '(n' → logprob: -12.877046585083008
    6. '(' → logprob: -13.252046585083008
    7. '[' → logprob: -14.752046585083008
    8. '```' → logprob: -14.877046585083008
    9. '[n' → logprob: -15.002046585083008
    10. 'None' → logprob: -15.377046585083008

Token 1195: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.057754743844270706
    2. '*(' → logprob: -2.9327547550201416
    3. ')*(' → logprob: -6.1827545166015625
    4. '(n' → logprob: -7.5577545166015625
    5. ']' → logprob: -9.432754516601562
    6. '](' → logprob: -9.557754516601562
    7. '```' → logprob: -9.807754516601562
    8. ']*' → logprob: -9.932754516601562
    9. '*' → logprob: -11.932754516601562
    10. '[n' → logprob: -12.432754516601562

Token 1196: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. ' n' → logprob: -13.12500286102295
    3. '(n' → logprob: -14.25000286102295
    4. '[n' → logprob: -17.750001907348633
    5. '	n' → logprob: -19.125001907348633
    6. ')n' → logprob: -19.500001907348633
    7. '_n' → logprob: -19.750001907348633
    8. '<|end|>' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. '(' → logprob: -19.875001907348633

Token 1197: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.73052782076411e-05
    2. 'n' → logprob: -9.875067710876465
    3. '1' → logprob: -11.500067710876465
    4. '```' → logprob: -12.750067710876465
    5. '+n' → logprob: -13.250067710876465
    6. '+
' → logprob: -14.750067710876465
    7. ' +' → logprob: -15.625067710876465
    8. '   ' → logprob: -16.62506675720215
    9. 'import' → logprob: -16.87506675720215
    10. '0' → logprob: -17.00006675720215

Token 1198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. 'n' → logprob: -10.375035285949707
    3. '```' → logprob: -12.875035285949707
    4. 'import' → logprob: -15.125035285949707
    5. ' ' → logprob: -15.125035285949707
    6. '<|end|>' → logprob: -15.625035285949707
    7. '+' → logprob: -16.12503433227539
    8. '<|end|>' → logprob: -16.12503433227539
    9. '0' → logprob: -16.87503433227539
    10. '...' → logprob: -17.25003433227539

Token 1199: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18213260173797607
    2. ')' → logprob: -1.807132601737976
    3. ')
' → logprob: -6.432132720947266
    4. ');' → logprob: -7.307132720947266
    5. ')`
' → logprob: -10.432132720947266
    6. '[' → logprob: -10.807132720947266
    7. ');
' → logprob: -11.432132720947266
    8. ')

' → logprob: -11.557132720947266
    9. ')#' → logprob: -12.057132720947266
    10. ')[' → logprob: -12.682132720947266

Token 1200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04448973014950752
    2. ' for' → logprob: -3.669489622116089
    3. 'for' → logprob: -4.044489860534668
    4. '   ' → logprob: -8.794489860534668
    5. '	' → logprob: -9.169489860534668
    6. '	for' → logprob: -9.419489860534668
    7. '
' → logprob: -9.919489860534668
    8. ',' → logprob: -10.044489860534668
    9. '```' → logprob: -10.169489860534668
    10. 'fac' → logprob: -11.544489860534668

Token 1201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005429040757007897
    2. '       ' → logprob: -7.750543117523193
    3. ' for' → logprob: -9.750542640686035
    4. '   ' → logprob: -9.875542640686035
    5. 'fac' → logprob: -13.750542640686035
    6. '	for' → logprob: -14.000542640686035
    7. 'i' → logprob: -15.375542640686035
    8. 'mod' → logprob: -16.12554359436035
    9. '```' → logprob: -16.12554359436035
    10. 'f' → logprob: -17.25054359436035

Token 1202: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.542423165636137e-05
    2. ' i' → logprob: -9.375085830688477
    3. '	i' → logprob: -15.250085830688477
    4. '   ' → logprob: -15.625085830688477
    5. '(i' → logprob: -16.750085830688477
    6. ' ' → logprob: -17.250085830688477
    7. '_i' → logprob: -17.375085830688477
    8. 'x' → logprob: -18.000085830688477
    9. '  ' → logprob: -18.750085830688477
    10. 'k' → logprob: -19.000085830688477

Token 1203: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6933056712150574
    2. ' in' → logprob: -0.6933056712150574
    3. '1' → logprob: -9.443305969238281
    4. ',' → logprob: -10.193305969238281
    5. '	in' → logprob: -11.318305969238281
    6. 'i' → logprob: -11.943305969238281
    7. ' ' → logprob: -11.943305969238281
    8. '   ' → logprob: -12.443305969238281
    9. '[' → logprob: -12.818305969238281
    10. '  ' → logprob: -13.068305969238281

Token 1204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -17.000045776367188
    4. ' ' → logprob: -18.750045776367188
    5. '   ' → logprob: -18.750045776367188
    6. '[' → logprob: -19.000045776367188
    7. '1' → logprob: -19.000045776367188
    8. '	range' → logprob: -19.125045776367188
    9. '2' → logprob: -19.875045776367188
    10. '  ' → logprob: -20.250045776367188

Token 1205: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033117449493147433
    2. '1' → logprob: -8.125330924987793
    3. '(' → logprob: -11.000330924987793
    4. ' ' → logprob: -11.000330924987793
    5. '   ' → logprob: -13.250330924987793
    6. '```' → logprob: -17.37533187866211
    7. '２' → logprob: -17.50033187866211
    8. '	' → logprob: -17.87533187866211
    9. '    ' → logprob: -18.12533187866211
    10. '
' → logprob: -18.37533187866211

Token 1206: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0485910028219223
    2. '1' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.673590660095215
    4. '   ' → logprob: -15.173590660095215
    5. '
' → logprob: -17.17359161376953
    6. '```' → logprob: -17.17359161376953
    7. '２' → logprob: -17.42359161376953
    8. '(' → logprob: -17.42359161376953
    9. '    ' → logprob: -18.79859161376953
    10. '3' → logprob: -18.92359161376953

Token 1207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10022003948688507
    2. ',n' → logprob: -2.350219964981079
    3. ' ,' → logprob: -11.3502197265625
    4. 'n' → logprob: -14.3502197265625
    5. ',
' → logprob: -14.8502197265625
    6. '   ' → logprob: -15.2252197265625
    7. ',int' → logprob: -15.9752197265625
    8. ',i' → logprob: -16.1002197265625
    9. ',len' → logprob: -16.7252197265625
    10. ',(' → logprob: -17.6002197265625

Token 1208: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.180258191714529e-06
    2. ' n' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.12500762939453
    4. '	n' → logprob: -16.25000762939453
    5. '1' → logprob: -18.75000762939453
    6. '(n' → logprob: -19.25000762939453
    7. '  ' → logprob: -19.25000762939453
    8. '    ' → logprob: -19.75000762939453
    9. '```' → logprob: -19.87500762939453
    10. '       ' → logprob: -20.37500762939453

Token 1209: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.774276774493046e-05
    2. '_max' → logprob: -10.750038146972656
    3. 'max' → logprob: -11.500038146972656
    4. ' +' → logprob: -13.250038146972656
    5. '):
' → logprob: -14.125038146972656
    6. '+
' → logprob: -14.250038146972656
    7. '```' → logprob: -14.500038146972656
    8. '+=' → logprob: -15.000038146972656
    9. ')+' → logprob: -15.250038146972656
    10. '   ' → logprob: -15.250038146972656

Token 1210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39455845952033997
    2. '+' → logprob: -1.6445584297180176
    3. 'n' → logprob: -2.0195584297180176
    4. 'i' → logprob: -9.644558906555176
    5. ' ' → logprob: -10.644558906555176
    6. 'int' → logprob: -10.769558906555176
    7. '[' → logprob: -10.894558906555176
    8. '```' → logprob: -10.894558906555176
    9. '(n' → logprob: -11.394558906555176
    10. ' +' → logprob: -11.394558906555176

Token 1211: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06883236765861511
    2. '):' → logprob: -2.9438323974609375
    3. ':' → logprob: -4.6938323974609375
    4. '       ' → logprob: -5.9438323974609375
    5. ':
' → logprob: -6.3188323974609375
    6. '   ' → logprob: -8.568832397460938
    7. ',' → logprob: -10.568832397460938
    8. '           ' → logprob: -11.193832397460938
    9. '	' → logprob: -11.318832397460938
    10. '):
' → logprob: -11.318832397460938

Token 1212: ' fac' (ID: 3513)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35486212372779846
    2. 'fac' → logprob: -1.354862093925476
    3. ' fac' → logprob: -3.2298622131347656
    4. '           ' → logprob: -7.729862213134766
    5. '_fac' → logprob: -8.354862213134766
    6. '   ' → logprob: -8.604862213134766
    7. '	' → logprob: -9.104862213134766
    8. '```' → logprob: -9.479862213134766
    9. '	   ' → logprob: -9.979862213134766
    10. '	       ' → logprob: -10.229862213134766

Token 1213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5094070477061905e-05
    2. '[' → logprob: -11.500015258789062
    3. '.append' → logprob: -13.500015258789062
    4. '=' → logprob: -13.875015258789062
    5. '   ' → logprob: -14.000015258789062
    6. 'i' → logprob: -14.125015258789062
    7. ' [' → logprob: -15.250015258789062
    8. '```' → logprob: -16.000015258789062
    9. '*=' → logprob: -16.000015258789062
    10. '\[' → logprob: -16.250015258789062

Token 1214: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011677675880491734
    2. ']=' → logprob: -5.5116777420043945
    3. '=i' → logprob: -5.5116777420043945
    4. ' =' → logprob: -5.7616777420043945
    5. ']' → logprob: -8.136677742004395
    6. '=f' → logprob: -9.636677742004395
    7. '*=' → logprob: -11.761677742004395
    8. '   ' → logprob: -12.261677742004395
    9. ')=' → logprob: -12.261677742004395
    10. '=
' → logprob: -12.511677742004395

Token 1215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036287005059421062
    2. '*=' → logprob: -5.753628730773926
    3. ' =' → logprob: -7.753628730773926
    4. '=f' → logprob: -11.128628730773926
    5. '=i' → logprob: -12.128628730773926
    6. '=
' → logprob: -14.878628730773926
    7. ' *=' → logprob: -15.128628730773926
    8. '=*' → logprob: -15.878628730773926
    9. '%=' → logprob: -16.50362777709961
    10. '   ' → logprob: -16.62862777709961

Token 1216: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0059801083989441395
    2. '(f' → logprob: -5.255980014801025
    3. ' fac' → logprob: -7.255980014801025
    4. 'fab' → logprob: -11.380980491638184
    5. 'fas' → logprob: -11.380980491638184
    6. '_fac' → logprob: -12.630980491638184
    7. ' (' → logprob: -13.130980491638184
    8. '.fac' → logprob: -13.130980491638184
    9. '(i' → logprob: -13.505980491638184
    10. 'Fac' → logprob: -13.755980491638184

Token 1217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.875
    3. '
' → logprob: -18.125
    4. '[' → logprob: -18.875
    5. '[
' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '   ' → logprob: -19.625
    8. '(i' → logprob: -20.25
    9. ' ' → logprob: -20.75
    10. '	i' → logprob: -21.0

Token 1218: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.166338137816638e-05
    2. '[i' → logprob: -10.750031471252441
    3. 'i' → logprob: -11.750031471252441
    4. ' -' → logprob: -13.250031471252441
    5. '   ' → logprob: -15.625031471252441
    6. '(i' → logprob: -16.000032424926758
    7. '1' → logprob: -16.125032424926758
    8. ']' → logprob: -17.000032424926758
    9. '```' → logprob: -17.375032424926758
    10. '-i' → logprob: -17.750032424926758

Token 1219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01608305238187313
    2. 'i' → logprob: -4.141083240509033
    3. ' ' → logprob: -11.141082763671875
    4. ' i' → logprob: -11.266082763671875
    5. '```' → logprob: -11.391082763671875
    6. ']' → logprob: -12.016082763671875
    7. '   ' → logprob: -13.266082763671875
    8. '0' → logprob: -13.766082763671875
    9. '*i' → logprob: -14.891082763671875
    10. '-' → logprob: -16.141082763671875

Token 1220: ']*' (ID: 18579)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.07241259515285492
    2. '*' → logprob: -2.8224124908447266
    3. ' *' → logprob: -4.572412490844727
    4. ']*' → logprob: -10.197412490844727
    5. '**' → logprob: -12.322412490844727
    6. '   ' → logprob: -12.572412490844727
    7. '*(' → logprob: -13.197412490844727
    8. ' ' → logprob: -13.447412490844727
    9. ')*' → logprob: -13.447412490844727
    10. ' ' → logprob: -13.572412490844727

Token 1221: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. 'import' → logprob: -17.87502098083496
    4. '	i' → logprob: -19.37502098083496
    5. '```' → logprob: -21.50002098083496
    6. '%i' → logprob: -21.75002098083496
    7. '*i' → logprob: -21.87502098083496
    8. '   ' → logprob: -22.00002098083496
    9. '
' → logprob: -22.50002098083496
    10. ' ' → logprob: -22.75002098083496

Token 1222: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3715966045856476
    2. '%i' → logprob: -1.3715965747833252
    3. ' %' → logprob: -2.871596574783325
    4. '%n' → logprob: -9.996596336364746
    5. '%d' → logprob: -12.871596336364746
    6. '%m' → logprob: -12.996596336364746
    7. '%c' → logprob: -12.996596336364746
    8. '[i' → logprob: -13.246596336364746
    9. '*i' → logprob: -14.246596336364746
    10. '%e' → logprob: -14.371596336364746

Token 1223: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '       ' → logprob: -17.00000762939453
    5. '
' → logprob: -17.62500762939453
    6. '           ' → logprob: -18.12500762939453
    7. '(self' → logprob: -18.12500762939453
    8. '[self' → logprob: -18.25000762939453
    9. 'mod' → logprob: -18.75000762939453
    10. '	self' → logprob: -18.75000762939453

Token 1224: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.38687971234321594
    2. 'mod' → logprob: -1.1368796825408936
    3. '	mod' → logprob: -12.136879920959473
    4. ' mod' → logprob: -13.011879920959473
    5. '```' → logprob: -15.136879920959473
    6. 'self' → logprob: -15.761879920959473
    7. ' мод' → logprob: -15.761879920959473
    8. '
' → logprob: -15.761879920959473
    9. '_mod' → logprob: -16.011878967285156
    10. 'MOD' → logprob: -16.636878967285156

Token 1225: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005342382006347179
    2. '
' → logprob: -5.380342483520508
    3. '        
' → logprob: -8.505342483520508
    4. ';' → logprob: -9.380342483520508
    5. '[' → logprob: -9.380342483520508
    6. 'fin' → logprob: -9.380342483520508
    7. '   ' → logprob: -10.005342483520508
    8. ' fin' → logprob: -10.130342483520508
    9. '```' → logprob: -10.130342483520508
    10. ' fac' → logprob: -10.505342483520508

Token 1226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01275602076202631
    2. ' for' → logprob: -4.762755870819092
    3. '[' → logprob: -6.887755870819092
    4. 'for' → logprob: -7.012755870819092
    5. '```' → logprob: -7.262755870819092
    6. '   ' → logprob: -7.762755870819092
    7. ' fin' → logprob: -7.887755870819092
    8. '
' → logprob: -8.26275634765625
    9. 'fin' → logprob: -8.51275634765625
    10. '<|end|>' → logprob: -9.76275634765625

Token 1227: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025990803260356188
    2. '       ' → logprob: -6.127599239349365
    3. ' for' → logprob: -8.252598762512207
    4. 'fin' → logprob: -8.877598762512207
    5. '   ' → logprob: -11.627598762512207
    6. '```' → logprob: -13.127598762512207
    7. 'f' → logprob: -13.877598762512207
    8. '	for' → logprob: -14.502598762512207
    9. 'def' → logprob: -15.002598762512207
    10. ' ' → logprob: -15.502598762512207

Token 1228: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4259644558478612e-05
    2. ' i' → logprob: -11.250014305114746
    3. 'j' → logprob: -13.750014305114746
    4. '	i' → logprob: -16.62501335144043
    5. '   ' → logprob: -17.50001335144043
    6. '```' → logprob: -18.87501335144043
    7. '
' → logprob: -19.12501335144043
    8. ' ' → logprob: -19.25001335144043
    9. '  ' → logprob: -19.37501335144043
    10. '(i' → logprob: -19.62501335144043

Token 1229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31342020630836487
    2. 'in' → logprob: -1.3134201765060425
    3. ',' → logprob: -9.563420295715332
    4. 'range' → logprob: -9.563420295715332
    5. '1' → logprob: -12.313420295715332
    6. '   ' → logprob: -12.813420295715332
    7. 'def' → logprob: -13.063420295715332
    8. 'import' → logprob: -13.313420295715332
    9. '2' → logprob: -13.563420295715332
    10. 'i' → logprob: -13.688420295715332

Token 1230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.60414821645827e-06
    2. 're' → logprob: -12.625004768371582
    3. ' range' → logprob: -14.250004768371582
    4. 'n' → logprob: -15.500004768371582
    5. '(range' → logprob: -15.500004768371582
    6. 'reverse' → logprob: -16.125003814697266
    7. '[' → logprob: -17.250003814697266
    8. '1' → logprob: -18.125003814697266
    9. '[n' → logprob: -18.250003814697266
    10. '2' → logprob: -20.000003814697266

Token 1231: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5664409399032593
    2. 'n' → logprob: -1.5664409399032593
    3. '1' → logprob: -2.191441059112549
    4. 'range' → logprob: -2.191441059112549
    5. ' range' → logprob: -9.81644058227539
    6. '(n' → logprob: -10.31644058227539
    7. '0' → logprob: -10.31644058227539
    8. ' n' → logprob: -11.44144058227539
    9. 'reverse' → logprob: -11.56644058227539
    10. '(' → logprob: -11.56644058227539

Token 1232: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3380158543586731
    2. '1' → logprob: -1.3380157947540283
    3. '2' → logprob: -3.7130157947540283
    4. '0' → logprob: -10.96301555633545
    5. '(' → logprob: -11.58801555633545
    6. '(n' → logprob: -11.58801555633545
    7. ' n' → logprob: -12.71301555633545
    8. 'range' → logprob: -12.96301555633545
    9. '-' → logprob: -14.21301555633545
    10. 'max' → logprob: -14.33801555633545

Token 1233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004338877333793789
    2. ',n' → logprob: -7.875433921813965
    3. 'n' → logprob: -9.875433921813965
    4. ' ,' → logprob: -14.250433921813965
    5. '(n' → logprob: -14.250433921813965
    6. '1' → logprob: -14.625433921813965
    7. '(' → logprob: -15.000433921813965
    8. '2' → logprob: -16.62543296813965
    9. 'import' → logprob: -16.75043296813965
    10. 'def' → logprob: -16.87543296813965

Token 1234: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06196959316730499
    2. ' n' → logprob: -2.811969518661499
    3. '   ' → logprob: -13.686969757080078
    4. ' ' → logprob: -14.811969757080078
    5. '	n' → logprob: -15.561969757080078
    6. '  ' → logprob: -16.186969757080078
    7. '    ' → logprob: -16.436969757080078
    8. '(n' → logprob: -17.186969757080078
    9. '```' → logprob: -17.561969757080078
    10. '1' → logprob: -17.686969757080078

Token 1235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011468871962279081
    2. 'n' → logprob: -7.3761467933654785
    3. '```' → logprob: -7.8761467933654785
    4. '1' → logprob: -9.751147270202637
    5. 'i' → logprob: -10.501147270202637
    6. ',' → logprob: -11.126147270202637
    7. ' +' → logprob: -11.376147270202637
    8. '``' → logprob: -11.626147270202637
    9. '+i' → logprob: -12.876147270202637
    10. '0' → logprob: -12.876147270202637

Token 1236: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007489496376365423
    2. '+' → logprob: -5.1324896812438965
    3. '1' → logprob: -6.5074896812438965
    4. 'i' → logprob: -10.257489204406738
    5. ' n' → logprob: -11.257489204406738
    6. '```' → logprob: -11.757489204406738
    7. '   ' → logprob: -12.007489204406738
    8. '``' → logprob: -13.007489204406738
    9. ')' → logprob: -14.507489204406738
    10. '       ' → logprob: -14.632489204406738

Token 1237: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2117476463317871
    2. '):' → logprob: -1.711747646331787
    3. '):
' → logprob: -4.961747646331787
    4. '   ' → logprob: -6.836747646331787
    5. ':
' → logprob: -6.836747646331787
    6. '       ' → logprob: -7.961747646331787
    7. ' :' → logprob: -7.961747646331787
    8. ',' → logprob: -9.211748123168945
    9. ' ):' → logprob: -9.461748123168945
    10. ':def' → logprob: -9.836748123168945

Token 1238: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.9353997707366943
    2. 'fin' → logprob: -1.3103997707366943
    3. '   ' → logprob: -1.9353997707366943
    4. '       ' → logprob: -2.6853997707366943
    5. 'f' → logprob: -2.9353997707366943
    6. '           ' → logprob: -3.0603997707366943
    7. ' fac' → logprob: -4.810400009155273
    8. '	f' → logprob: -4.810400009155273
    9. 'fac' → logprob: -5.560400009155273
    10. '    ' → logprob: -6.185400009155273

Token 1239: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.150962695479393
    2. 'inv' → logprob: -2.4009625911712646
    3. 'nv' → logprob: -3.0259625911712646
    4. 'av' → logprob: -8.525962829589844
    5. 'sv' → logprob: -8.650962829589844
    6. 'rv' → logprob: -8.650962829589844
    7. '[' → logprob: -9.025962829589844
    8. '```' → logprob: -9.775962829589844
    9. 'vn' → logprob: -10.775962829589844
    10. 'iv' → logprob: -10.900962829589844

Token 1240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.62501335144043
    3. '[-' → logprob: -13.00001335144043
    4. '   ' → logprob: -14.75001335144043
    5. '
' → logprob: -14.87501335144043
    6. '[n' → logprob: -15.25001335144043
    7. ' =' → logprob: -15.87501335144043
    8. '=' → logprob: -16.00001335144043
    9. ' [' → logprob: -16.37501335144043
    10. '[len' → logprob: -16.62501335144043

Token 1241: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00871952436864376
    2. ' =' → logprob: -5.008719444274902
    3. ']' → logprob: -6.258719444274902
    4. ']=' → logprob: -9.508719444274902
    5. '=i' → logprob: -11.508719444274902
    6. ')' → logprob: -13.133719444274902
    7. '   ' → logprob: -14.133719444274902
    8. '=f' → logprob: -14.508719444274902
    9. ' ' → logprob: -15.383719444274902
    10. '=int' → logprob: -16.13372039794922

Token 1242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804941102862358
    2. ' =' → logprob: -3.2880494594573975
    3. ']=' → logprob: -12.788049697875977
    4. '   ' → logprob: -13.538049697875977
    5. '*=' → logprob: -13.788049697875977
    6. ']' → logprob: -14.038049697875977
    7. '=i' → logprob: -14.413049697875977
    8. '=f' → logprob: -14.913049697875977
    9. ' ' → logprob: -15.288049697875977
    10. '[' → logprob: -15.913049697875977

Token 1243: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0001737431448418647
    2. '(fin' → logprob: -9.125173568725586
    3. ' fin' → logprob: -10.625173568725586
    4. 'self' → logprob: -10.625173568725586
    5. '(' → logprob: -12.000173568725586
    6. '(f' → logprob: -12.875173568725586
    7. 'finite' → logprob: -13.125173568725586
    8. 'fac' → logprob: -13.125173568725586
    9. 'f' → logprob: -13.875173568725586
    10. 'fen' → logprob: -14.375173568725586

Token 1244: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.688212614681106e-05
    2. 'inv' → logprob: -11.875017166137695
    3. '```' → logprob: -12.875017166137695
    4. '[' → logprob: -13.000017166137695
    5. 'vs' → logprob: -13.875017166137695
    6. '
' → logprob: -13.875017166137695
    7. '[v' → logprob: -15.000017166137695
    8. '-' → logprob: -15.250017166137695
    9. 'nv' → logprob: -15.250017166137695
    10. 'vx' → logprob: -15.250017166137695

Token 1245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[-' → logprob: -16.5
    5. '
' → logprob: -17.5
    6. '[
' → logprob: -18.375
    7. '[I' → logprob: -18.375
    8. '(i' → logprob: -18.625
    9. '```' → logprob: -19.125
    10. '[n' → logprob: -19.625

Token 1246: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026775920763611794
    2. '[i' → logprob: -3.77677583694458
    3. 'i' → logprob: -5.65177583694458
    4. '-i' → logprob: -11.526776313781738
    5. '(i' → logprob: -14.276776313781738
    6. ' -' → logprob: -14.526776313781738
    7. '```' → logprob: -14.776776313781738
    8. '   ' → logprob: -15.026776313781738
    9. '#' → logprob: -15.401776313781738
    10. ' i' → logprob: -15.776776313781738

Token 1247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. '-' → logprob: -12.375009536743164
    3. '0' → logprob: -13.750009536743164
    4. '```' → logprob: -13.750009536743164
    5. ' ' → logprob: -13.812509536743164
    6. '   ' → logprob: -14.812509536743164
    7. '
' → logprob: -15.062509536743164
    8. 'i' → logprob: -16.062509536743164
    9. 'prev' → logprob: -16.250009536743164
    10. '１' → logprob: -16.312509536743164

Token 1248: ']*' (ID: 18579)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.012816987000405788
    2. '*' → logprob: -4.762816905975342
    3. ' *' → logprob: -5.637816905975342
    4. '*(' → logprob: -7.512816905975342
    5. '*self' → logprob: -10.0128173828125
    6. '   ' → logprob: -11.3878173828125
    7. ']*' → logprob: -11.8878173828125
    8. '**' → logprob: -12.0128173828125
    9. '[i' → logprob: -12.5128173828125
    10. '*f' → logprob: -12.6378173828125

Token 1249: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.40440019965171814
    2. 'i' → logprob: -1.7794002294540405
    3. 'self' → logprob: -1.9044002294540405
    4. '(i' → logprob: -4.52940034866333
    5. '(' → logprob: -6.02940034866333
    6. '(mod' → logprob: -6.65440034866333
    7. '(self' → logprob: -8.529399871826172
    8. '((' → logprob: -9.529399871826172
    9. 'pow' → logprob: -9.904399871826172
    10. ' mod' → logprob: -10.154399871826172

Token 1250: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.008637851104140282
    2. 'i' → logprob: -4.75863790512085
    3. '(i' → logprob: -10.883637428283691
    4. '[i' → logprob: -13.258637428283691
    5. ' i' → logprob: -14.258637428283691
    6. 'pow' → logprob: -14.633637428283691
    7. '   ' → logprob: -14.883637428283691
    8. 'in' → logprob: -15.133637428283691
    9. ' inv' → logprob: -15.133637428283691
    10. '(inv' → logprob: -15.508637428283691

Token 1251: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.4272752852994017e-05
    2. 'i' → logprob: -10.87502384185791
    3. '(' → logprob: -12.62502384185791
    4. '[i' → logprob: -14.12502384185791
    5. '(f' → logprob: -14.75002384185791
    6. ' (' → logprob: -14.87502384185791
    7. '(
' → logprob: -15.87502384185791
    8. 'fac' → logprob: -15.87502384185791
    9. ' i' → logprob: -16.000024795532227
    10. '```' → logprob: -17.375024795532227

Token 1252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000667044660076499
    2. ',self' → logprob: -7.625667095184326
    3. ')' → logprob: -9.125666618347168
    4. '%' → logprob: -10.375666618347168
    5. '[self' → logprob: -11.250666618347168
    6. 'self' → logprob: -11.500666618347168
    7. ',i' → logprob: -12.500666618347168
    8. '%,' → logprob: -13.000666618347168
    9. ')%' → logprob: -13.000666618347168
    10. '       ' → logprob: -13.250666618347168

Token 1253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.935296834039036e-06
    2. ' self' → logprob: -13.25000286102295
    3. '       ' → logprob: -13.75000286102295
    4. '
' → logprob: -17.000003814697266
    5. '           ' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '(self' → logprob: -18.750003814697266
    8. '	self' → logprob: -19.000003814697266
    9. '=self' → logprob: -19.375003814697266
    10. '﻿' → logprob: -19.750003814697266

Token 1254: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.03068246878683567
    2. 'mod' → logprob: -3.9056825637817383
    3. 'self' → logprob: -4.905682563781738
    4. ')' → logprob: -6.030682563781738
    5. '
' → logprob: -8.655682563781738
    6. '.self' → logprob: -10.155682563781738
    7. '_mod' → logprob: -10.280682563781738
    8. '```' → logprob: -12.155682563781738
    9. ')
' → logprob: -12.280682563781738
    10. '   ' → logprob: -12.655682563781738

Token 1255: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6406024694442749
    2. ')%' → logprob: -0.7656024694442749
    3. '%' → logprob: -5.8906025886535645
    4. ' )' → logprob: -6.2656025886535645
    5. '[i' → logprob: -6.2656025886535645
    6. '       ' → logprob: -7.6406025886535645
    7. '%)' → logprob: -8.765602111816406
    8. '   ' → logprob: -8.890602111816406
    9. ')i' → logprob: -9.140602111816406
    10. ')
' → logprob: -9.390602111816406

Token 1256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -16.125
    3. '```' → logprob: -16.875
    4. '(self' → logprob: -17.125
    5. '
' → logprob: -17.5
    6. '[self' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '       ' → logprob: -18.25
    9. '{' → logprob: -19.25
    10. '=self' → logprob: -19.5

Token 1257: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005535095697268844
    2. '.mod' → logprob: -7.500553607940674
    3. '	mod' → logprob: -15.375553131103516
    4. ' mod' → logprob: -16.500553131103516
    5. '_mod' → logprob: -16.875553131103516
    6. '```' → logprob: -17.125553131103516
    7. '
' → logprob: -17.500553131103516
    8. ' ' → logprob: -18.125553131103516
    9. ')' → logprob: -18.250553131103516
    10. 'omod' → logprob: -18.500553131103516

Token 1258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07485315203666687
    2. '
' → logprob: -2.8248531818389893
    3. '	' → logprob: -5.44985294342041
    4. ' return' → logprob: -5.44985294342041
    5. 'return' → logprob: -6.19985294342041
    6. '   ' → logprob: -7.19985294342041
    7. '	return' → logprob: -7.32485294342041
    8. '[' → logprob: -7.94985294342041
    9. ' ' → logprob: -9.44985294342041
    10. '```' → logprob: -9.82485294342041

Token 1259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00471717631444335
    2. '	' → logprob: -5.3797173500061035
    3. '	return' → logprob: -10.379716873168945
    4. '<|end|>' → logprob: -10.879716873168945
    5. '[' → logprob: -11.254716873168945
    6. 'return' → logprob: -11.504716873168945
    7. ' return' → logprob: -11.754716873168945
    8. '   ' → logprob: -12.504716873168945
    9. '```' → logprob: -12.754716873168945
    10. '
' → logprob: -13.129716873168945

Token 1260: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33033809065818787
    2. 'return' (adapté à ' return') → logprob: -1.3303381204605103
    3. ' return' → logprob: -4.080338001251221
    4. '	return' → logprob: -11.455338478088379
    5. '   ' → logprob: -11.580338478088379
    6. '	' → logprob: -12.330338478088379
    7. '
' → logprob: -12.580338478088379
    8. ' ' → logprob: -14.580338478088379
    9. '```' → logprob: -14.830338478088379
    10. ' ' → logprob: -15.455338478088379

Token 1261: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0007537625497207046
    2. ' fac' → logprob: -7.250753879547119
    3. '(f' → logprob: -10.250753402709961
    4. 'fas' → logprob: -13.000753402709961
    5. 'facet' → logprob: -13.000753402709961
    6. ' (' → logprob: -14.250753402709961
    7. '_fac' → logprob: -14.375753402709961
    8. 'fact' → logprob: -14.500753402709961
    9. '   ' → logprob: -14.500753402709961
    10. 'fa' → logprob: -14.875753402709961

Token 1262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9981420336989686e-05
    2. ',f' → logprob: -11.500020027160645
    3. ' ,' → logprob: -11.875020027160645
    4. ',
' → logprob: -13.000020027160645
    5. ',[' → logprob: -15.375020027160645
    6. '[' → logprob: -15.625020027160645
    7. '[],' → logprob: -17.000019073486328
    8. '<|end|>' → logprob: -17.500019073486328
    9. ',None' → logprob: -17.750019073486328
    10. ',v' → logprob: -17.875019073486328

Token 1263: ' fin' (ID: 2131)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03378182277083397
    2. 'fin' → logprob: -3.4087817668914795
    3. 'fac' → logprob: -9.658782005310059
    4. ' fin' → logprob: -9.908782005310059
    5. '	f' → logprob: -11.908782005310059
    6. ' ' → logprob: -12.158782005310059
    7. '   ' → logprob: -13.408782005310059
    8. 'fav' → logprob: -13.658782005310059
    9. ' fac' → logprob: -14.033782005310059
    10. ' f' → logprob: -14.033782005310059

Token 1264: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.320199877838604e-07
    2. 'inv' → logprob: -15.125
    3. '_v' → logprob: -18.75
    4. '```' → logprob: -18.75
    5. 'vj' → logprob: -19.0
    6. 'в' → logprob: -19.125
    7. 'vx' → logprob: -19.25
    8. 'sv' → logprob: -19.5
    9. '	v' → logprob: -19.75
    10. 'av' → logprob: -19.75

Token 1265: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1266: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31686195731163025
    2. '<|end|>' → logprob: -1.5668619871139526
    3. '<|end|>' → logprob: -3.691861867904663
    4. '#' → logprob: -4.441862106323242
    5. ')' → logprob: -4.691862106323242
    6. 'def' → logprob: -4.941862106323242
    7. 'X' → logprob: -5.816862106323242
    8. '
' → logprob: -5.941862106323242
    9. 'main' → logprob: -6.316862106323242
    10. ' if' → logprob: -6.816862106323242

Token 1267: '================================================================================' (ID: 111845)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01026996225118637
    2. '#' → logprob: -4.760270118713379
    3. '<|end|>' → logprob: -7.135270118713379
    4. 'main' → logprob: -7.885270118713379
    5. ' if' → logprob: -8.635270118713379
    6. 'def' → logprob: -9.010270118713379
    7. '```' → logprob: -10.010270118713379
    8. '<|end|>' → logprob: -10.385270118713379
    9. '#if' → logprob: -11.010270118713379
    10. ')' → logprob: -11.135270118713379

Token 1268: '=
' (ID: 31206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04001583158969879
    2. '#' → logprob: -3.540015935897827
    3. '<|end|>' → logprob: -5.540015697479248
    4. '<|end|>' → logprob: -5.665015697479248
    5. 'def' → logprob: -6.665015697479248
    6. 'main' → logprob: -6.790015697479248
    7. ' if' → logprob: -8.665016174316406
    8. '```' → logprob: -9.415016174316406
    9. '__' → logprob: -10.415016174316406
    10. 'print' → logprob: -10.790016174316406

Token 1269: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1270: ' dfs' (ID: 51252)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07933223247528076
    2. 'solve' → logprob: -3.4543323516845703
    3. 'main' → logprob: -3.8293323516845703
    4. 'if' → logprob: -4.32933235168457
    5. '_' → logprob: -5.70433235168457
    6. 'factor' → logprob: -7.20433235168457
    7. 'sys' → logprob: -7.45433235168457
    8. '_main' → logprob: -7.45433235168457
    9. 'resolve' → logprob: -7.70433235168457
    10. '_b' → logprob: -7.70433235168457

Token 1271: '(graph' (ID: 51300)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.2354702204465866
    2. '(' → logprob: -1.860470175743103
    3. '(u' → logprob: -3.8604702949523926
    4. '(n' → logprob: -4.110470294952393
    5. '(v' → logprob: -4.985470294952393
    6. '(graph' → logprob: -5.235470294952393
    7. '(tree' → logprob: -6.860470294952393
    8. '(root' → logprob: -7.235470294952393
    9. '(x' → logprob: -7.610470294952393
    10. '(depth' → logprob: -7.860470294952393

Token 1272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ',node' → logprob: -9.500085830688477
    3. ',u' → logprob: -12.375085830688477
    4. ',v' → logprob: -12.500085830688477
    5. '(node' → logprob: -13.750085830688477
    6. ' ,' → logprob: -14.500085830688477
    7. ',n' → logprob: -14.750085830688477
    8. '(graph' → logprob: -15.000085830688477
    9. ',
' → logprob: -15.375085830688477
    10. 'u' → logprob: -15.750085830688477

Token 1273: ' parent' (ID: 5980)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.431877076625824
    2. 'v' → logprob: -1.1818771362304688
    3. 'node' → logprob: -3.1818771362304688
    4. 'u' → logprob: -6.681877136230469
    5. 's' → logprob: -7.931877136230469
    6. ' start' → logprob: -8.056877136230469
    7. ' v' → logprob: -8.306877136230469
    8. ' node' → logprob: -8.806877136230469
    9. 'current' → logprob: -9.806877136230469
    10. 'visited' → logprob: -10.056877136230469

Token 1274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.264322317088954e-05
    2. ',node' → logprob: -10.125052452087402
    3. ',u' → logprob: -12.250052452087402
    4. ',v' → logprob: -12.500052452087402
    5. ',n' → logprob: -13.625052452087402
    6. ' ,' → logprob: -13.750052452087402
    7. '):' → logprob: -14.000052452087402
    8. 'def' → logprob: -15.375052452087402
    9. ',current' → logprob: -16.37505340576172
    10. ',d' → logprob: -16.50005340576172

Token 1275: ' counter' (ID: 9446)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002223649062216282
    2. 'current' → logprob: -6.752223491668701
    3. 'v' → logprob: -8.00222396850586
    4. 'cur' → logprob: -8.00222396850586
    5. 'u' → logprob: -8.25222396850586
    6. 'vertex' → logprob: -10.12722396850586
    7. 'curr' → logprob: -10.25222396850586
    8. 'start' → logprob: -10.87722396850586
    9. ' node' → logprob: -11.12722396850586
    10. 'pos' → logprob: -11.50222396850586

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.421908958349377e-05
    2. ',node' → logprob: -10.25007438659668
    3. '):' → logprob: -10.50007438659668
    4. ' ,' → logprob: -11.87507438659668
    5. '   ' → logprob: -13.62507438659668
    6. '):
' → logprob: -13.87507438659668
    7. '(node' → logprob: -14.62507438659668
    8. '[node' → logprob: -15.12507438659668
    9. ',n' → logprob: -15.50007438659668
    10. 'def' → logprob: -15.50007438659668

Token 1277: ' edge' (ID: 11165)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.006892616394907236
    2. 'u' → logprob: -5.631892681121826
    3. 'current' → logprob: -7.006892681121826
    4. 'start' → logprob: -7.131892681121826
    5. ' node' → logprob: -7.256892681121826
    6. 'stack' → logprob: -7.881892681121826
    7. 'v' → logprob: -8.381892204284668
    8. 'cur' → logprob: -8.506892204284668
    9. 'vertex' → logprob: -10.381892204284668
    10. 'curr' → logprob: -11.006892204284668

Token 1278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29808926582336426
    2. ',' → logprob: -2.0480892658233643
    3. 's' → logprob: -2.4230892658233643
    4. '):
' → logprob: -3.5480892658233643
    5. '_list' → logprob: -4.923089027404785
    6. '_stack' → logprob: -6.923089027404785
    7. '=None' → logprob: -7.923089027404785
    8. 'list' → logprob: -8.423089027404785
    9. '_counts' → logprob: -8.423089027404785
    10. '=' → logprob: -8.423089027404785

Token 1279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062434691935777664
    2. ' node' → logprob: -3.937434673309326
    3. 'node' → logprob: -4.312434673309326
    4. ' stack' → logprob: -4.437434673309326
    5. 'stack' → logprob: -5.437434673309326
    6. ' for' → logprob: -5.687434673309326
    7. 'for' → logprob: -5.687434673309326
    8. ' if' → logprob: -6.062434673309326
    9. 'if' → logprob: -7.062434673309326
    10. 'v' → logprob: -7.812434673309326

Token 1280: ' from' (ID: 591)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.47714534401893616
    2. 'for' → logprob: -0.9771453142166138
    3. 'if' → logprob: -6.227145195007324
    4. '   ' → logprob: -7.977145195007324
    5. 'def' → logprob: -8.227145195007324
    6. ' stack' → logprob: -8.477145195007324
    7. 'visited' → logprob: -8.977145195007324
    8. ' for' → logprob: -9.727145195007324
    9. 'counter' → logprob: -10.102145195007324
    10. 'node' → logprob: -11.102145195007324

Token 1281: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0011206917697563767
    2. ' collections' → logprob: -7.251120567321777
    3. 'typing' → logprob: -9.001120567321777
    4. 'sys' → logprob: -9.626120567321777
    5. 'heap' → logprob: -9.626120567321777
    6. 'copy' → logprob: -9.876120567321777
    7. 'graph' → logprob: -10.126120567321777
    8. 'collection' → logprob: -10.626120567321777
    9. 'operator' → logprob: -11.126120567321777
    10. 'math' → logprob: -12.001120567321777

Token 1282: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0026880137156695127
    2. ' import' → logprob: -6.127687931060791
    3. '_import' → logprob: -8.37768840789795
    4. '<|end|>' → logprob: -9.12768840789795
    5. '	import' → logprob: -10.25268840789795
    6. 'from' → logprob: -10.87768840789795
    7. '```' → logprob: -10.87768840789795
    8. 'collections' → logprob: -11.12768840789795
    9. '(import' → logprob: -11.87768840789795
    10. '_counter' → logprob: -12.00268840789795

Token 1283: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.006749005056917667
    2. 'default' → logprob: -5.006749153137207
    3. ' deque' → logprob: -10.631749153137207
    4. ' defaultdict' → logprob: -11.756749153137207
    5. 'collections' → logprob: -13.881749153137207
    6. 'de' → logprob: -14.131749153137207
    7. 'counter' → logprob: -17.75674819946289
    8. 'stack' → logprob: -18.00674819946289
    9. 'queue' → logprob: -18.38174819946289
    10. 'Counter' → logprob: -18.88174819946289

Token 1284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032653018832206726
    2. ' queue' → logprob: -3.7826530933380127
    3. 'queue' → logprob: -5.907652854919434
    4. '
' → logprob: -6.157652854919434
    5. ' q' → logprob: -6.157652854919434
    6. 'q' → logprob: -6.907652854919434
    7. ' dq' → logprob: -7.907652854919434
    8. 'dq' → logprob: -8.532652854919434
    9. 'def' → logprob: -8.657652854919434
    10. 'deque' → logprob: -9.407652854919434

Token 1285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004811134655028582
    2. ' queue' → logprob: -5.5048112869262695
    3. ' stack' → logprob: -8.12981128692627
    4. 'queue' → logprob: -8.75481128692627
    5. 'stack' → logprob: -9.62981128692627
    6. ' q' → logprob: -9.87981128692627
    7. ' dq' → logprob: -10.00481128692627
    8. 'dq' → logprob: -10.37981128692627
    9. 'q' → logprob: -10.75481128692627
    10. ' deque' → logprob: -11.25481128692627

Token 1286: ' stk' (ID: 91725)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5276115536689758
    2. 'q' → logprob: -1.402611494064331
    3. 'queue' → logprob: -2.402611494064331
    4. 'dq' → logprob: -3.527611494064331
    5. '   ' → logprob: -4.02761173248291
    6. ' stack' → logprob: -4.65261173248291
    7. ' queue' → logprob: -5.02761173248291
    8. 'Q' → logprob: -5.40261173248291
    9. ' q' → logprob: -6.27761173248291
    10. 'que' → logprob: -6.77761173248291

Token 1287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007608635816723108
    2. '=' → logprob: -5.007608413696289
    3. '=[]' → logprob: -7.132608413696289
    4. '.append' → logprob: -10.382608413696289
    5. '=[]
' → logprob: -10.757608413696289
    6. '   ' → logprob: -10.882608413696289
    7. '=[' → logprob: -12.257608413696289
    8. 'u' → logprob: -12.257608413696289
    9. 'ue' → logprob: -12.632608413696289
    10. ' ' → logprob: -12.882608413696289

Token 1288: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00033045929740183055
    2. ' deque' → logprob: -8.750330924987793
    3. '[' → logprob: -9.000330924987793
    4. '[(' → logprob: -10.375330924987793
    5. 'dd' → logprob: -11.500330924987793
    6. 'de' → logprob: -12.625330924987793
    7. 'collections' → logprob: -13.125330924987793
    8. ' [' → logprob: -13.625330924987793
    9. '[d' → logprob: -15.125330924987793
    10. 'dq' → logprob: -15.625330924987793

Token 1289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43047991394996643
    2. '([(' → logprob: -1.680479884147644
    3. '(graph' → logprob: -2.5554800033569336
    4. '()
' → logprob: -2.8054800033569336
    5. '([' → logprob: -3.8054800033569336
    6. '(edge' → logprob: -5.930480003356934
    7. '()

' → logprob: -9.305480003356934
    8. '((' → logprob: -9.305480003356934
    9. '([]' → logprob: -10.305480003356934
    10. '([[' → logprob: -10.430480003356934

Token 1290: '   ' (ID: 271)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.2597765028476715
    2. '   ' → logprob: -2.1347765922546387
    3. '[' → logprob: -3.0097765922546387
    4. ' stk' → logprob: -3.1347765922546387
    5. 'graph' → logprob: -5.009776592254639
    6. '[(' → logprob: -5.759776592254639
    7. '['' → logprob: -6.634776592254639
    8. '('' → logprob: -7.134776592254639
    9. 'stack' → logprob: -7.259776592254639
    10. 'deque' → logprob: -7.384776592254639

Token 1291: ' [' (ID: 723)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.000909317925106734
    2. '   ' → logprob: -7.375909328460693
    3. ' stk' → logprob: -8.625908851623535
    4. 'for' → logprob: -10.500908851623535
    5. 'stack' → logprob: -10.500908851623535
    6. 'sts' → logprob: -10.625908851623535
    7. 'dfs' → logprob: -12.125908851623535
    8. 'dq' → logprob: -12.250908851623535
    9. 'stm' → logprob: -13.375908851623535
    10. 'st' → logprob: -13.375908851623535

Token 1292: 'stk' (ID: 131011)
  Prédit: 'stk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.011200960725545883
    2. '(' → logprob: -5.511200904846191
    3. '   ' → logprob: -5.761200904846191
    4. '(st' → logprob: -6.136200904846191
    5. '(h' → logprob: -8.261200904846191
    6. 'graph' → logprob: -8.261200904846191
    7. ' stk' → logprob: -8.386200904846191
    8. 'sts' → logprob: -8.636200904846191
    9. 'stack' → logprob: -8.886200904846191
    10. '(graph' → logprob: -9.386200904846191

Token 1293: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010449681576574221
    2. 'append' → logprob: -9.750104904174805
    3. '.p' → logprob: -11.000104904174805
    4. '.ap' → logprob: -12.125104904174805
    5. '.pop' → logprob: -12.125104904174805
    6. '.extend' → logprob: -12.250104904174805
    7. '.' → logprob: -12.875104904174805
    8. '.clear' → logprob: -13.000104904174805
    9. '.push' → logprob: -13.000104904174805
    10. '.put' → logprob: -13.375104904174805

Token 1294: '(edge' (ID: 84023)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7414653301239014
    2. '(edge' → logprob: -1.3664653301239014
    3. '(v' → logprob: -2.3664653301239014
    4. '(parent' → logprob: -2.6164653301239014
    5. '(' → logprob: -3.2414653301239014
    6. '(node' → logprob: -3.3664653301239014
    7. '(u' → logprob: -4.8664655685424805
    8. '(child' → logprob: -4.9914655685424805
    9. '(i' → logprob: -5.2414655685424805
    10. '(vertex' → logprob: -5.8664655685424805

Token 1295: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019602011889219284
    2. ')]' → logprob: -4.644601821899414
    3. ')
' → logprob: -5.394601821899414
    4. '[' → logprob: -5.394601821899414
    5. '(edge' → logprob: -8.894601821899414
    6. ' )' → logprob: -9.144601821899414
    7. '(' → logprob: -9.644601821899414
    8. ')]
' → logprob: -9.644601821899414
    9. ')],' → logprob: -10.019601821899414
    10. ')])' → logprob: -10.019601821899414

Token 1296: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5540967583656311
    2. '<|end|>' → logprob: -1.0540966987609863
    3. '   ' → logprob: -3.6790966987609863
    4. '<|end|>' → logprob: -4.054096698760986
    5. 'while' → logprob: -4.804096698760986
    6. '  
' → logprob: -5.304096698760986
    7. '    
' → logprob: -5.554096698760986
    8. 'def' → logprob: -5.679096698760986
    9. ')' → logprob: -5.929096698760986
    10. 'for' → logprob: -5.929096698760986

Token 1297: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6700432896614075
    2. '	while' → logprob: -1.7950432300567627
    3. ' while' → logprob: -1.9200432300567627
    4. '
' → logprob: -2.0450432300567627
    5. '   ' → logprob: -3.7950432300567627
    6. '<|end|>' → logprob: -5.170043468475342
    7. '    
' → logprob: -5.670043468475342
    8. ')' → logprob: -6.420043468475342
    9. '	
' → logprob: -6.545043468475342
    10. '```' → logprob: -6.545043468475342

Token 1298: ' stk' (ID: 91725)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.08096494525671005
    2. ' stk' → logprob: -2.580965042114258
    3. 'len' → logprob: -6.205965042114258
    4. ' len' → logprob: -9.955965042114258
    5. '   ' → logprob: -12.330965042114258
    6. ' ' → logprob: -13.830965042114258
    7. 'st' → logprob: -14.455965042114258
    8. 'stack' → logprob: -14.580965042114258
    9. '(st' → logprob: -15.080965042114258
    10. 'lst' → logprob: -15.080965042114258

Token 1299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003061491996049881
    2. '):' → logprob: -6.628061294555664
    3. '.pop' → logprob: -6.628061294555664
    4. ':
' → logprob: -8.503061294555664
    5. '>:' → logprob: -9.878061294555664
    6. '.append' → logprob: -10.378061294555664
    7. 'pop' → logprob: -10.753061294555664
    8. '():' → logprob: -11.128061294555664
    9. ':not' → logprob: -11.378061294555664
    10. '<|end|>' → logprob: -11.503061294555664

Token 1300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14163315296173096
    2. '   ' → logprob: -2.3916330337524414
    3. ' edge' → logprob: -3.8916330337524414
    4. 'edge' → logprob: -4.641633033752441
    5. ' stk' → logprob: -6.016633033752441
    6. 'e' → logprob: -6.141633033752441
    7. ' e' → logprob: -7.641633033752441
    8. '	' → logprob: -7.641633033752441
    9. 'stk' → logprob: -7.641633033752441
    10. '    ' → logprob: -7.766633033752441

Token 1301: ' p' (ID: 275)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.37574657797813416
    2. 'u' → logprob: -2.000746488571167
    3. 'cur' → logprob: -3.125746488571167
    4. 'v' → logprob: -3.500746488571167
    5. 'e' → logprob: -3.500746488571167
    6. 'node' → logprob: -3.750746488571167
    7. '   ' → logprob: -3.750746488571167
    8. ' edge' → logprob: -4.375746726989746
    9. ' u' → logprob: -5.375746726989746
    10. 'curr' → logprob: -5.500746726989746

Token 1302: ' =' (ID: 314)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6037546396255493
    2. ' =' → logprob: -1.6037546396255493
    3. '=' → logprob: -1.8537546396255493
    4. 'opleft' → logprob: -3.2287545204162598
    5. 'opped' → logprob: -3.3537545204162598
    6. '   ' → logprob: -4.60375452041626
    7. 'opper' → logprob: -5.97875452041626
    8. 'p' → logprob: -6.10375452041626
    9. 'r' → logprob: -6.60375452041626
    10. 'opping' → logprob: -7.22875452041626

Token 1303: ' stk' (ID: 91725)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.04859134554862976
    2. ' stk' → logprob: -3.048591375350952
    3. 'stack' → logprob: -12.798591613769531
    4. 'st' → logprob: -14.548591613769531
    5. '	st' → logprob: -15.423591613769531
    6. 'stm' → logprob: -16.29859161376953
    7. '   ' → logprob: -16.42359161376953
    8. 'sk' → logprob: -16.67359161376953
    9. ' ' → logprob: -16.79859161376953
    10. 'sta' → logprob: -17.04859161376953

Token 1304: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.6947322487831116
    2. '.pop' → logprob: -0.6947322487831116
    3. 'opleft' → logprob: -6.944732189178467
    4. '.' → logprob: -8.194732666015625
    5. 'pop' → logprob: -8.319732666015625
    6. '.append' → logprob: -9.944732666015625
    7. ' .' → logprob: -10.694732666015625
    8. '   ' → logprob: -11.319732666015625
    9. 'p' → logprob: -11.444732666015625
    10. '[-' → logprob: -13.194732666015625

Token 1305: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025133544113487005
    2. '()
' → logprob: -6.002513408660889
    3. '(' → logprob: -10.50251293182373
    4. '();' → logprob: -12.87751293182373
    5. '(p' → logprob: -13.50251293182373
    6. ')' → logprob: -13.50251293182373
    7. ' ()' → logprob: -13.75251293182373
    8. '()

' → logprob: -13.87751293182373
    9. '())' → logprob: -14.50251293182373
    10. '()
' → logprob: -14.50251293182373

Token 1306: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9006615281105042
    2. '       ' → logprob: -1.1506614685058594
    3. '
' → logprob: -2.4006614685058594
    4. '   ' → logprob: -2.6506614685058594
    5. ',' → logprob: -2.9006614685058594
    6. ' for' → logprob: -4.150661468505859
    7. '        
' → logprob: -4.400661468505859
    8. ' 
' → logprob: -5.025661468505859
    9. ',
' → logprob: -6.025661468505859
    10. 'if' → logprob: -6.025661468505859

Token 1307: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3479016125202179
    2. 'u' → logprob: -1.7229015827178955
    3. 'node' → logprob: -2.8479015827178955
    4. 'v' → logprob: -3.3479015827178955
    5. 'if' → logprob: -4.097901821136475
    6. 'p' → logprob: -6.472901821136475
    7. '   ' → logprob: -6.972901821136475
    8. 'parent' → logprob: -6.972901821136475
    9. 'cur' → logprob: -7.222901821136475
    10. ' for' → logprob: -7.597901821136475

Token 1308: ' (
' (ID: 4112)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12137334793806076
    2. 'stk' → logprob: -3.121373414993286
    3. '   ' → logprob: -3.371373414993286
    4. 'child' → logprob: -4.246373176574707
    5. 'if' → logprob: -5.371373176574707
    6. ' for' → logprob: -5.871373176574707
    7. 'children' → logprob: -6.121373176574707
    8. 'graph' → logprob: -6.496373176574707
    9. 'q' → logprob: -6.621373176574707
    10. 'neighbor' → logprob: -7.121373176574707

Token 1309: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6566998958587646
    2. 'v' → logprob: -2.0316998958587646
    3. 'stk' → logprob: -2.0316998958587646
    4. 'u' → logprob: -2.1566998958587646
    5. 'child' → logprob: -2.1566998958587646
    6. 'lambda' → logprob: -2.1566998958587646
    7. 'q' → logprob: -2.7816998958587646
    8. '   ' → logprob: -2.9066998958587646
    9. 'neighbor' → logprob: -3.6566998958587646
    10. 'graph' → logprob: -4.531700134277344

Token 1310: ' (
' (ID: 4112)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -1.2528340816497803
    2. 'u' → logprob: -1.6278340816497803
    3. 'neighbor' → logprob: -2.1278340816497803
    4. 'v' → logprob: -2.5028340816497803
    5. 'p' → logprob: -2.6278340816497803
    6. 'stk' → logprob: -2.8778340816497803
    7. 'nx' → logprob: -3.5028340816497803
    8. 'graph' → logprob: -3.8778340816497803
    9. 'q' → logprob: -3.8778340816497803
    10. 'c' → logprob: -3.8778340816497803

Token 1311: '               ' (ID: 506)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6073705554008484
    2. 'v' → logprob: -2.107370615005493
    3. 'u' → logprob: -2.482370615005493
    4. 'graph' → logprob: -2.732370615005493
    5. 'child' → logprob: -2.857370615005493
    6. 'c' → logprob: -3.607370615005493
    7. 'neighbor' → logprob: -3.732370615005493
    8. 'q' → logprob: -3.857370615005493
    9. 'node' → logprob: -4.732370376586914
    10. '           ' → logprob: -5.232370376586914

Token 1312: ' parent' (ID: 5980)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9891748428344727
    2. 'v' → logprob: -1.7391748428344727
    3. 'u' → logprob: -1.9891748428344727
    4. 'graph' → logprob: -2.4891748428344727
    5. 'child' → logprob: -2.6141748428344727
    6. 'neighbor' → logprob: -2.8641748428344727
    7. 'c' → logprob: -3.4891748428344727
    8. 'q' → logprob: -3.6141748428344727
    9. 'g' → logprob: -4.739174842834473
    10. 'node' → logprob: -4.864174842834473

Token 1313: '.setdefault' (ID: 113053)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2024739533662796
    2. '[p' → logprob: -2.2024738788604736
    3. ',p' → logprob: -3.0774738788604736
    4. '[' → logprob: -4.327474117279053
    5. ' ,' → logprob: -5.702474117279053
    6. '[v' → logprob: -6.077474117279053
    7. '),' → logprob: -6.577474117279053
    8. ',v' → logprob: -6.702474117279053
    9. '[node' → logprob: -6.952474117279053
    10. ',
' → logprob: -7.452474117279053

Token 1314: '(e' (ID: 3454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012063038302585483
    2. '(p' → logprob: -7.001206398010254
    3. ' p' → logprob: -8.376206398010254
    4. ')' → logprob: -10.626206398010254
    5. 'v' → logprob: -10.876206398010254
    6. ')p' → logprob: -12.126206398010254
    7. '[p' → logprob: -12.501206398010254
    8. '   ' → logprob: -13.251206398010254
    9. ',p' → logprob: -13.501206398010254
    10. ',' → logprob: -13.626206398010254

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13179326057434082
    2. 'p' → logprob: -2.381793260574341
    3. ',p' → logprob: -3.631793260574341
    4. '[p' → logprob: -6.256793022155762
    5. '),' → logprob: -6.881793022155762
    6. '[' → logprob: -7.381793022155762
    7. '(p' → logprob: -7.506793022155762
    8. ')' → logprob: -8.631793022155762
    9. '   ' → logprob: -9.631793022155762
    10. ')p' → logprob: -10.006793022155762

Token 1316: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.790129555156454e-05
    2. 'e' → logprob: -10.750067710876465
    3. ' p' → logprob: -11.125067710876465
    4. 'None' → logprob: -11.375067710876465
    5. '{}' → logprob: -12.375067710876465
    6. '   ' → logprob: -12.750067710876465
    7. '{' → logprob: -12.875067710876465
    8. '{})' → logprob: -13.125067710876465
    9. '[]' → logprob: -13.375067710876465
    10. '           ' → logprob: -14.375067710876465

Token 1317: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10193870216608047
    2. '),' → logprob: -2.4769387245178223
    3. '),
' → logprob: -4.976938724517822
    4. '))' → logprob: -5.601938724517822
    5. '[' → logprob: -6.851938724517822
    6. ')
' → logprob: -7.226938724517822
    7. ')))' → logprob: -9.351938247680664
    8. '   ' → logprob: -9.601938247680664
    9. ')),' → logprob: -9.851938247680664
    10. ' )' → logprob: -9.976938247680664

Token 1318: '               ' (ID: 506)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10407724976539612
    2. '               ' → logprob: -3.1040773391723633
    3. ')' → logprob: -3.8540773391723633
    4. ' e' → logprob: -4.104077339172363
    5. 'p' → logprob: -5.479077339172363
    6. '                   ' → logprob: -5.604077339172363
    7. '0' → logprob: -6.229077339172363
    8. '),' → logprob: -6.854077339172363
    9. '           ' → logprob: -6.854077339172363
    10. '                ' → logprob: -6.979077339172363

Token 1319: ' counter' (ID: 9446)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' → logprob: -0.008121723309159279
    2. 'counter' (adapté à ' counter') → logprob: -5.383121490478516
    3. '[' → logprob: -6.758121490478516
    4. 'parent' → logprob: -7.883121490478516
    5. '   ' → logprob: -7.883121490478516
    6. ' stk' → logprob: -8.008121490478516
    7. 'hq' → logprob: -8.008121490478516
    8. 'stack' → logprob: -8.883121490478516
    9. 'None' → logprob: -9.258121490478516
    10. 'st' → logprob: -9.508121490478516

Token 1320: '.setdefault' (ID: 113053)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.13647370040416718
    2. '[p' → logprob: -2.8864736557006836
    3. '.setdefault' → logprob: -3.2614736557006836
    4. '.get' → logprob: -3.8864736557006836
    5. '[' → logprob: -5.136473655700684
    6. '+' → logprob: -6.011473655700684
    7. '+=' → logprob: -6.511473655700684
    8. ',' → logprob: -7.261473655700684
    9. '[
' → logprob: -8.261473655700684
    10. ' +=' → logprob: -8.511473655700684

Token 1321: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.34865522384643555
    2. 'e' → logprob: -1.2236552238464355
    3. 'p' → logprob: -8.723655700683594
    4. '(p' → logprob: -10.598655700683594
    5. ' e' → logprob: -11.723655700683594
    6. '(
' → logprob: -12.473655700683594
    7. '[e' → logprob: -13.598655700683594
    8. ')e' → logprob: -13.598655700683594
    9. ')' → logprob: -13.723655700683594
    10. '(edge' → logprob: -13.848655700683594

Token 1322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000959700730163604
    2. ' ,' → logprob: -8.125959396362305
    3. ',e' → logprob: -8.375959396362305
    4. '),' → logprob: -8.875959396362305
    5. ')' → logprob: -9.000959396362305
    6. '<|end|>' → logprob: -9.375959396362305
    7. ',p' → logprob: -10.750959396362305
    8. '[' → logprob: -11.250959396362305
    9. ',
' → logprob: -12.375959396362305
    10. 'e' → logprob: -12.375959396362305

Token 1323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008263851515948772
    2. '1' → logprob: -5.008264064788818
    3. 'counter' → logprob: -7.133264064788818
    4. 'p' → logprob: -7.758264064788818
    5. ' ' → logprob: -8.38326358795166
    6. '(counter' → logprob: -11.13326358795166
    7. 'parent' → logprob: -11.38326358795166
    8. '(' → logprob: -11.75826358795166
    9. '   ' → logprob: -12.13326358795166
    10. '(p' → logprob: -12.13326358795166

Token 1324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1191675066947937
    2. '1' → logprob: -2.4941675662994385
    3. 'counter' → logprob: -3.7441675662994385
    4. 'parent' → logprob: -5.494167327880859
    5. 'p' → logprob: -6.494167327880859
    6. '(' → logprob: -9.24416732788086
    7. '(counter' → logprob: -9.36916732788086
    8. ' ' → logprob: -9.86916732788086
    9. '(parent' → logprob: -10.11916732788086
    10. '(p' → logprob: -10.24416732788086

Token 1325: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18786826729774475
    2. '),' → logprob: -2.437868356704712
    3. '),
' → logprob: -2.562868356704712
    4. ')
' → logprob: -5.937868118286133
    5. '))' → logprob: -6.312868118286133
    6. '               ' → logprob: -7.312868118286133
    7. ',' → logprob: -7.687868118286133
    8. '           ' → logprob: -8.187868118286133
    9. ')),' → logprob: -8.312868118286133
    10. '       ' → logprob: -8.937868118286133

Token 1326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22352717816829681
    2. ')' → logprob: -3.098527193069458
    3. 'e' → logprob: -3.098527193069458
    4. '                ' → logprob: -3.848527193069458
    5. ' True' → logprob: -4.098526954650879
    6. ' e' → logprob: -4.723526954650879
    7. '                   ' → logprob: -4.723526954650879
    8. ')
' → logprob: -4.848526954650879
    9. 'p' → logprob: -4.848526954650879
    10. 'True' → logprob: -4.973526954650879

Token 1327: ' counter' (ID: 9446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28620097041130066
    2. 'stk' → logprob: -2.286201000213623
    3. 'counter' (adapté à ' counter') → logprob: -2.661201000213623
    4. 'hq' → logprob: -3.536201000213623
    5. '           ' → logprob: -4.411201000213623
    6. ' stk' → logprob: -4.661201000213623
    7. 'stack' → logprob: -4.786201000213623
    8. '                   ' → logprob: -5.036201000213623
    9. 'h' → logprob: -6.036201000213623
    10. 'st' → logprob: -6.286201000213623

Token 1328: '.__' (ID: 10210)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.0005675682332366705
    2. '.get' → logprob: -8.125567436218262
    3. '[e' → logprob: -8.625567436218262
    4. '.' → logprob: -10.250567436218262
    5. '.set' → logprob: -10.875567436218262
    6. '[p' → logprob: -11.500567436218262
    7. '[' → logprob: -11.750567436218262
    8. 'set' → logprob: -12.375567436218262
    9. 'e' → logprob: -12.625567436218262
    10. '   ' → logprob: -12.750567436218262

Token 1329: 'set' (ID: 977)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2540489733219147
    2. 'set' → logprob: -1.5040489435195923
    3. 'getitem' → logprob: -6.504048824310303
    4. 'inc' → logprob: -7.754048824310303
    5. 'icont' → logprob: -10.129049301147461
    6. 'sets' → logprob: -10.379049301147461
    7. 'init' → logprob: -10.629049301147461
    8. 'contains' → logprob: -10.754049301147461
    9. '[i' → logprob: -10.754049301147461
    10. '```' → logprob: -12.004049301147461

Token 1330: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -4.723352049040841e-06
    2. 'getitem' → logprob: -13.375004768371582
    3. 'default' → logprob: -13.875004768371582
    4. 'p' → logprob: -14.375004768371582
    5. '(item' → logprob: -14.750004768371582
    6. '(p' → logprob: -15.000004768371582
    7. 'attr' → logprob: -15.000004768371582
    8. 'e' → logprob: -15.250004768371582
    9. ' item' → logprob: -16.000003814697266
    10. '```' → logprob: -16.625003814697266

Token 1331: '__(' (ID: 8241)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.8590300139039755e-05
    2. '           ' → logprob: -11.125048637390137
    3. '(' → logprob: -11.250048637390137
    4. '               ' → logprob: -11.500048637390137
    5. '(
' → logprob: -12.000048637390137
    6. ' (' → logprob: -13.250048637390137
    7. '(p' → logprob: -14.000048637390137
    8. '(edge' → logprob: -14.500048637390137
    9. '                   ' → logprob: -14.875048637390137
    10. ')(' → logprob: -15.125048637390137

Token 1332: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1128835380077362
    2. 'p' → logprob: -2.2378835678100586
    3. ' e' → logprob: -10.737883567810059
    4. '(e' → logprob: -11.237883567810059
    5. '(p' → logprob: -11.862883567810059
    6. ' p' → logprob: -12.237883567810059
    7. ')' → logprob: -12.362883567810059
    8. ')e' → logprob: -13.112883567810059
    9. 'parent' → logprob: -13.362883567810059
    10. '   ' → logprob: -13.737883567810059

Token 1333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028539160266518593
    2. ',e' → logprob: -3.7785391807556152
    3. ' ,' → logprob: -5.653539180755615
    4. 'e' → logprob: -7.403539180755615
    5. ',p' → logprob: -7.653539180755615
    6. '(e' → logprob: -7.903539180755615
    7. ' e' → logprob: -9.528538703918457
    8. '           ' → logprob: -9.903538703918457
    9. ',k' → logprob: -10.403538703918457
    10. ')' → logprob: -10.528538703918457

Token 1334: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -8.458980300929397e-05
    2. ' counter' → logprob: -9.62508487701416
    3. '               ' → logprob: -11.50008487701416
    4. '           ' → logprob: -12.62508487701416
    5. '                   ' → logprob: -14.00008487701416
    6. '(counter' → logprob: -14.00008487701416
    7. '   ' → logprob: -14.12508487701416
    8. '1' → logprob: -14.25008487701416
    9. '	counter' → logprob: -14.37508487701416
    10. 'c' → logprob: -15.50008487701416

Token 1335: '[e' (ID: 51414)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.030765121802687645
    2. 'p' → logprob: -4.030765056610107
    3. '[e' → logprob: -4.655765056610107
    4. '(p' → logprob: -6.030765056610107
    5. 'e' → logprob: -8.030765533447266
    6. '[' → logprob: -8.905765533447266
    7. '(e' → logprob: -10.280765533447266
    8. '[
' → logprob: -10.780765533447266
    9. '.get' → logprob: -10.905765533447266
    10. '[(' → logprob: -11.280765533447266

Token 1336: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02062387205660343
    2. ' +' → logprob: -3.8956239223480225
    3. ')+' → logprob: -10.270624160766602
    4. ')' → logprob: -11.020624160766602
    5. ']+' → logprob: -11.395624160766602
    6. '+p' → logprob: -12.020624160766602
    7. '()+' → logprob: -12.145624160766602
    8. ']' → logprob: -13.020624160766602
    9. '-' → logprob: -13.520624160766602
    10. '1' → logprob: -13.895624160766602

Token 1337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1797591745853424
    2. ' +' → logprob: -1.80475914478302
    3. ')+' → logprob: -12.55475902557373
    4. ')' → logprob: -12.67975902557373
    5. '+p' → logprob: -12.92975902557373
    6. '+
' → logprob: -13.55475902557373
    7. '+)' → logprob: -13.80475902557373
    8. '()+' → logprob: -14.92975902557373
    9. ' ' → logprob: -15.17975902557373
    10. '1' → logprob: -15.55475902557373

Token 1338: ' counter' (ID: 9446)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. ' ' → logprob: -10.625030517578125
    3. 'parent' → logprob: -12.375030517578125
    4. '   ' → logprob: -14.375030517578125
    5. '(' → logprob: -15.125030517578125
    6. '0' → logprob: -15.500030517578125
    7. 'p' → logprob: -15.625030517578125
    8. 'counter' → logprob: -16.187530517578125
    9. '+' → logprob: -16.250030517578125
    10. '[' → logprob: -16.625030517578125

Token 1339: '.get' (ID: 775)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0797027125954628
    2. '(p' → logprob: -3.204702615737915
    3. '[e' → logprob: -3.454702615737915
    4. '(e' → logprob: -6.829702854156494
    5. 'p' → logprob: -6.954702854156494
    6. '[' → logprob: -7.204702854156494
    7. ')' → logprob: -8.204702377319336
    8. '[
' → logprob: -8.829702377319336
    9. '```' → logprob: -8.829702377319336
    10. 'e' → logprob: -8.829702377319336

Token 1340: '(p' (ID: 2407)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.22750413417816162
    2. '(p' → logprob: -1.6025041341781616
    3. '(' → logprob: -6.477504253387451
    4. 'p' → logprob: -8.102503776550293
    5. '1' → logprob: -9.227503776550293
    6. ' (' → logprob: -9.727503776550293
    7. 'e' → logprob: -10.227503776550293
    8. '(
' → logprob: -10.977503776550293
    9. ' ' → logprob: -11.602503776550293
    10. '((' → logprob: -12.227503776550293

Token 1341: ',' (ID: 11)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.14583177864551544
    2. ',' → logprob: -2.145831823348999
    3. '[e' → logprob: -4.14583158493042
    4. '(p' → logprob: -6.89583158493042
    5. ',e' → logprob: -7.02083158493042
    6. 'e' → logprob: -8.145832061767578
    7. 'p' → logprob: -8.395832061767578
    8. '[p' → logprob: -9.020832061767578
    9. ',p' → logprob: -9.145832061767578
    10. '```' → logprob: -9.520832061767578

Token 1342: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024717416614294052
    2. '0' → logprob: -3.774717330932617
    3. ' ' → logprob: -6.524717330932617
    4. ')' → logprob: -13.524717330932617
    5. '   ' → logprob: -13.649717330932617
    6. '```' → logprob: -14.899717330932617
    7. '  ' → logprob: -15.149717330932617
    8. '-' → logprob: -15.649717330932617
    9. '))' → logprob: -16.649717330932617
    10. '+' → logprob: -16.712217330932617

Token 1343: ')),
' (ID: 13846)
  Prédit: '())),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())),
' → logprob: -0.7095859050750732
    2. '()' → logprob: -2.0845859050750732
    3. '()))' → logprob: -2.2095859050750732
    4. ')),
' → logprob: -2.4595859050750732
    5. '))' → logprob: -2.7095859050750732
    6. '()))
' → logprob: -3.4595859050750732
    7. ')' → logprob: -3.8345859050750732
    8. ')),' → logprob: -3.8345859050750732
    9. '())' → logprob: -3.9595859050750732
    10. '))
' → logprob: -4.709586143493652

Token 1344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7890497446060181
    2. '           ' → logprob: -1.664049744606018
    3. 'e' → logprob: -1.789049744606018
    4. '       ' → logprob: -2.7890496253967285
    5. '                   ' → logprob: -3.4140496253967285
    6. ')' → logprob: -3.5390496253967285
    7. ' e' → logprob: -3.6640496253967285
    8. '   ' → logprob: -4.7890496253967285
    9. ')
' → logprob: -5.2890496253967285
    10. '                ' → logprob: -5.6640496253967285

Token 1345: ' stk' (ID: 91725)
  Prédit: 'stk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stk' (adapté à ' stk') → logprob: -0.9494723081588745
    2. '           ' → logprob: -1.0744723081588745
    3. '               ' → logprob: -1.6994723081588745
    4. '[' → logprob: -3.824472427368164
    5. ' stk' → logprob: -3.949472427368164
    6. '   ' → logprob: -4.574472427368164
    7. '       ' → logprob: -4.699472427368164
    8. '                   ' → logprob: -4.699472427368164
    9. '             ' → logprob: -5.949472427368164
    10. '[s' → logprob: -6.199472427368164

Token 1346: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00022547018306795508
    2. '.extend' → logprob: -8.500225067138672
    3. 'append' → logprob: -11.125225067138672
    4. '.' → logprob: -11.875225067138672
    5. ' .' → logprob: -16.000225067138672
    6. '.push' → logprob: -16.250225067138672
    7. '.app' → logprob: -17.125225067138672
    8. '.ap' → logprob: -18.125225067138672
    9. '   ' → logprob: -18.500225067138672
    10. '_append' → logprob: -18.750225067138672

Token 1347: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00012594614236149937
    2. 'e' → logprob: -9.500125885009766
    3. '((' → logprob: -10.375125885009766
    4. '(' → logprob: -11.000125885009766
    5. '(
' → logprob: -13.625125885009766
    6. '(edge' → logprob: -14.000125885009766
    7. '(p' → logprob: -15.000125885009766
    8. 'left' → logprob: -15.875125885009766
    9. '(child' → logprob: -16.750125885009766
    10. '([' → logprob: -16.875125885009766

Token 1348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18203869462013245
    2. ')
' → logprob: -2.1820387840270996
    3. '           ' → logprob: -3.1820387840270996
    4. '               ' → logprob: -5.4320387840271
    5. '       ' → logprob: -5.5570387840271
    6. '))' → logprob: -5.6820387840271
    7. ')
' → logprob: -9.057038307189941
    8. '                   ' → logprob: -9.682038307189941
    9. '   ' → logprob: -9.682038307189941
    10. '))
' → logprob: -9.932038307189941

Token 1349: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4144896864891052
    2. '           ' → logprob: -1.28948974609375
    3. '               ' → logprob: -3.53948974609375
    4. ')
' → logprob: -3.91448974609375
    5. '       ' → logprob: -4.28948974609375
    6. '                   ' → logprob: -8.03948974609375
    7. '))' → logprob: -8.16448974609375
    8. '),' → logprob: -8.16448974609375
    9. '[' → logprob: -10.03948974609375
    10. '),
' → logprob: -10.16448974609375

Token 1350: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.11091448366641998
    2. '           ' → logprob: -2.735914468765259
    3. '       ' → logprob: -4.235914707183838
    4. '               ' → logprob: -4.235914707183838
    5. ')
' → logprob: -5.235914707183838
    6. 'for' → logprob: -6.110914707183838
    7. '))' → logprob: -6.110914707183838
    8. '                   ' → logprob: -7.360914707183838
    9. '                       ' → logprob: -8.98591423034668
    10. 'if' → logprob: -9.11091423034668

Token 1351: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8154565095901489
    2. ')' → logprob: -0.9404565095901489
    3. ' for' → logprob: -2.5654563903808594
    4. '           ' → logprob: -2.9404563903808594
    5. '       ' → logprob: -3.5654563903808594
    6. 'if' → logprob: -5.440456390380859
    7. ' if' → logprob: -6.440456390380859
    8. ' )' → logprob: -6.690456390380859
    9. '               ' → logprob: -7.315456390380859
    10. ')
' → logprob: -7.940456390380859

Token 1352: ' parent' (ID: 5980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06314649432897568
    2. 'parent' → logprob: -3.8131465911865234
    3. 'p' → logprob: -4.063146591186523
    4. '(e' → logprob: -4.438146591186523
    5. 'counter' → logprob: -5.688146591186523
    6. 'graph' → logprob: -6.063146591186523
    7. 'not' → logprob: -6.688146591186523
    8. '(not' → logprob: -7.563146591186523
    9. '(parent' → logprob: -7.688146591186523
    10. '(' → logprob: -7.813146591186523

Token 1353: '[p' (ID: 23234)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.012010134756565094
    2. '!=' → logprob: -5.387010097503662
    3. '[e' → logprob: -5.762010097503662
    4. '.setdefault' → logprob: -5.887010097503662
    5. '[p' → logprob: -7.137010097503662
    6. 'get' → logprob: -8.63701057434082
    7. 'e' → logprob: -8.88701057434082
    8. ' !=' → logprob: -9.01201057434082
    9. '.' → logprob: -9.76201057434082
    10. 'p' → logprob: -10.13701057434082

Token 1354: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0086082220077515
    2. '!=' → logprob: -1.0086082220077515
    3. ']!=' → logprob: -1.3836082220077515
    4. ' !=' → logprob: -4.758608341217041
    5. 'in' → logprob: -5.008608341217041
    6. ' in' → logprob: -6.508608341217041
    7. ']==' → logprob: -7.258608341217041
    8. '[' → logprob: -8.008607864379883
    9. 'not' → logprob: -8.133607864379883
    10. '==' → logprob: -8.133607864379883

Token 1355: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16059981286525726
    2. 'p' → logprob: -1.9105998277664185
    3. 'None' → logprob: -8.285599708557129
    4. ' e' → logprob: -9.785599708557129
    5. '-' → logprob: -11.410599708557129
    6. ' p' → logprob: -11.410599708557129
    7. '=' → logprob: -12.160599708557129
    8. '=e' → logprob: -12.410599708557129
    9. '0' → logprob: -12.535599708557129
    10. 'v' → logprob: -12.973099708557129

Token 1356: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.011406179517507553
    2. 'else' → logprob: -4.636405944824219
    3. ')' → logprob: -6.886405944824219
    4. '        ' → logprob: -8.386405944824219
    5. '       ' → logprob: -8.886405944824219
    6. ' )' → logprob: -9.261405944824219
    7. '           ' → logprob: -9.636405944824219
    8. '            ' → logprob: -10.761405944824219
    9. '    ' → logprob: -11.261405944824219
    10. '               ' → logprob: -11.386405944824219

Token 1357: ' None' (ID: 4662)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5088496804237366
    2. ' e' → logprob: -1.6338496208190918
    3. 'p' → logprob: -2.633849620819092
    4. ' p' → logprob: -3.508849620819092
    5. ')' → logprob: -3.758849620819092
    6. 'None' → logprob: -3.883849620819092
    7. 'False' → logprob: -4.133849620819092
    8. 'True' → logprob: -4.883849620819092
    9. '0' → logprob: -5.008849620819092
    10. ' None' → logprob: -5.383849620819092

Token 1358: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6104241609573364
    2. ')' → logprob: -0.8604241609573364
    3. '           ' → logprob: -4.610424041748047
    4. ' for' → logprob: -4.860424041748047
    5. ' )' → logprob: -4.985424041748047
    6. 'for' → logprob: -4.985424041748047
    7. '        ' → logprob: -6.860424041748047
    8. ')
' → logprob: -7.610424041748047
    9. '   ' → logprob: -8.110424041748047
    10. '               ' → logprob: -8.485424041748047

Token 1359: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2830202281475067
    2. '       ' → logprob: -2.033020257949829
    3. ' for' → logprob: -2.533020257949829
    4. 'for' → logprob: -4.40802001953125
    5. ' )' → logprob: -4.78302001953125
    6. '           ' → logprob: -4.78302001953125
    7. '               ' → logprob: -6.53302001953125
    8. ')
' → logprob: -6.53302001953125
    9. '        ' → logprob: -7.03302001953125
    10. '[' → logprob: -7.40802001953125

Token 1360: ' )' (ID: 1546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29227712750434875
    2. 'for' → logprob: -2.2922770977020264
    3. ')' (adapté à ' )') → logprob: -2.4172770977020264
    4. '       ' → logprob: -2.9172770977020264
    5. ' )' → logprob: -5.6672773361206055
    6. '        ' → logprob: -6.0422773361206055
    7. '           ' → logprob: -6.4172773361206055
    8. '               ' → logprob: -7.5422773361206055
    9. '[' → logprob: -8.042277336120605
    10. ')]' → logprob: -8.292277336120605

Token 1361: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.625328540802002
    2. '       ' → logprob: -1.000328540802002
    3. 'for' → logprob: -2.500328540802002
    4. '        ' → logprob: -4.625328540802002
    5. '           ' → logprob: -5.375328540802002
    6. '    ' → logprob: -8.750328063964844
    7. '               ' → logprob: -8.875328063964844
    8. '   ' → logprob: -8.875328063964844
    9. '	for' → logprob: -9.500328063964844
    10. '         ' → logprob: -10.500328063964844

Token 1362: ' e' (ID: 319)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02705070562660694
    2. 'e' → logprob: -4.027050495147705
    3. 'edge' → logprob: -5.527050495147705
    4. '(graph' → logprob: -6.027050495147705
    5. 'p' → logprob: -6.277050495147705
    6. ' graph' → logprob: -8.277050971984863
    7. 'g' → logprob: -9.402050971984863
    8. '(e' → logprob: -10.152050971984863
    9. 'v' → logprob: -10.402050971984863
    10. 'neighbor' → logprob: -10.527050971984863

Token 1363: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31329289078712463
    2. 'in' → logprob: -1.3132928609848022
    3. 'graph' → logprob: -11.688292503356934
    4. '	in' → logprob: -11.688292503356934
    5. ',' → logprob: -12.188292503356934
    6. ' ' → logprob: -13.063292503356934
    7. '   ' → logprob: -13.063292503356934
    8. '    ' → logprob: -13.563292503356934
    9. ' graph' → logprob: -13.813292503356934
    10. '  ' → logprob: -14.688292503356934

Token 1364: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0002678920282050967
    2. ' graph' → logprob: -8.25026798248291
    3. '(graph' → logprob: -12.75026798248291
    4. '	graph' → logprob: -12.87526798248291
    5. 'list' → logprob: -14.75026798248291
    6. 'sorted' → logprob: -15.75026798248291
    7. '[' → logprob: -15.87526798248291
    8. 'range' → logprob: -16.000267028808594
    9. '   ' → logprob: -16.625267028808594
    10. 'filter' → logprob: -16.750267028808594

Token 1365: '.get' (ID: 775)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.5332478142227046e-05
    2. 'p' → logprob: -12.000015258789062
    3. '[' → logprob: -12.875015258789062
    4. ',' → logprob: -13.000015258789062
    5. ',p' → logprob: -13.750015258789062
    6. '(p' → logprob: -13.875015258789062
    7. '[
' → logprob: -14.250015258789062
    8. ' [' → logprob: -14.250015258789062
    9. ' p' → logprob: -15.250015258789062
    10. '   ' → logprob: -15.375015258789062

Token 1366: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47531259059906006
    2. '(p' → logprob: -0.9753125905990601
    3. '(' → logprob: -7.47531270980835
    4. ' p' → logprob: -7.60031270980835
    5. ' (' → logprob: -9.225312232971191
    6. '(
' → logprob: -9.600312232971191
    7. '	p' → logprob: -15.100312232971191
    8. '[p' → logprob: -15.850312232971191
    9. ' ' → logprob: -16.100313186645508
    10. '   ' → logprob: -16.100313186645508

Token 1367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005698635242879391
    2. ')]' → logprob: -6.2556986808776855
    3. ')' → logprob: -6.5056986808776855
    4. ')])' → logprob: -7.1306986808776855
    5. '(p' → logprob: -8.255698204040527
    6. '(),' → logprob: -8.505698204040527
    7. ' ,' → logprob: -8.630698204040527
    8. ',p' → logprob: -8.630698204040527
    9. '])]' → logprob: -8.880698204040527
    10. 'p' → logprob: -9.005698204040527

Token 1368: '[])' (ID: 29874)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2559419870376587
    2. '[])' → logprob: -1.7559419870376587
    3. ')' → logprob: -3.755941867828369
    4. ' [])' → logprob: -4.255941867828369
    5. 'p' → logprob: -6.130941867828369
    6. ')]' → logprob: -6.255941867828369
    7. 'None' → logprob: -6.255941867828369
    8. ' []' → logprob: -6.505941867828369
    9. ' ' → logprob: -6.630941867828369
    10. '[]):' → logprob: -6.755941867828369

Token 1369: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012534727342426777
    2. '       ' → logprob: -4.7625346183776855
    3. ' ]' → logprob: -5.7625346183776855
    4. '   ' → logprob: -8.012535095214844
    5. '()]' → logprob: -8.762535095214844
    6. ']
' → logprob: -9.012535095214844
    7. '<|end|>' → logprob: -9.887535095214844
    8. ')]' → logprob: -10.137535095214844
    9. '])' → logprob: -11.637535095214844
    10. '      ' → logprob: -12.137535095214844

Token 1370: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1371: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22723670303821564
    2. '__' → logprob: -1.6022367477416992
    3. '_' → logprob: -6.477236747741699
    4. ' _' → logprob: -8.8522367477417
    5. '___' → logprob: -9.6022367477417
    6. ' ' → logprob: -10.1022367477417
    7. '<|end|>' → logprob: -11.6022367477417
    8. ' ___' → logprob: -12.1022367477417
    9. ' True' → logprob: -12.3522367477417
    10. '_name' → logprob: -12.8522367477417

Token 1372: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16442546248435974
    2. ' ==' → logprob: -2.5394253730773926
    3. ' __' → logprob: -2.6644253730773926
    4. '==' → logprob: -7.164425373077393
    5. ''' → logprob: -8.53942584991455
    6. 'name' → logprob: -8.78942584991455
    7. '<|end|>' → logprob: -9.03942584991455
    8. ' ' → logprob: -9.28942584991455
    9. ' ' → logprob: -9.28942584991455
    10. '"' → logprob: -9.35192584991455

Token 1373: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010432668030261993
    2. '==' → logprob: -4.635432720184326
    3. '=="' → logprob: -8.385432243347168
    4. ' ==' → logprob: -9.135432243347168
    5. '__('' → logprob: -9.635432243347168
    6. '=='' → logprob: -9.885432243347168
    7. '()==' → logprob: -10.385432243347168
    8. '__(
' → logprob: -10.635432243347168
    9. '_' → logprob: -10.885432243347168
    10. '=' → logprob: -11.010432243347168

Token 1374: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.489226371049881
    2. '==' → logprob: -1.6142263412475586
    3. '=="' → logprob: -1.9892263412475586
    4. '=='' → logprob: -3.3642263412475586
    5. '__' → logprob: -4.114226341247559
    6. '==
' → logprob: -9.364226341247559
    7. '"' → logprob: -11.739226341247559
    8. '=' → logprob: -12.114226341247559
    9. ' =="' → logprob: -12.489226341247559
    10. ''' → logprob: -12.989226341247559

Token 1375: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3132994472980499
    2. '"' → logprob: -1.3132994174957275
    3. '__' → logprob: -11.063299179077148
    4. ' '__' → logprob: -11.313299179077148
    5. ' "__' → logprob: -11.938299179077148
    6. ''post' → logprob: -14.188299179077148
    7. ''name' → logprob: -14.438299179077148
    8. '   ' → logprob: -14.813299179077148
    9. ''user' → logprob: -15.563299179077148
    10. ''s' → logprob: -15.938299179077148

Token 1376: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7070109248161316
    2. '"' → logprob: -1.4570109844207764
    3. ''' → logprob: -1.4570109844207764
    4. 'main' → logprob: -3.2070109844207764
    5. 'name' → logprob: -8.082011222839355
    6. ''name' → logprob: -9.332011222839355
    7. '==' → logprob: -10.332011222839355
    8. '"name' → logprob: -10.457011222839355
    9. '_main' → logprob: -11.082011222839355
    10. ''s' → logprob: -11.457011222839355

Token 1377: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4432058036327362
    2. '__' → logprob: -1.0682058334350586
    3. '():
' → logprob: -4.818205833435059
    4. '__':
' → logprob: -5.193205833435059
    5. '__:' → logprob: -7.318205833435059
    6. '__()
' → logprob: -10.568205833435059
    7. '():' → logprob: -10.818205833435059
    8. '__
' → logprob: -11.068205833435059
    9. ':' → logprob: -11.318205833435059
    10. ':
' → logprob: -11.943205833435059

Token 1378: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02834218367934227
    2. '	main' → logprob: -4.028342247009277
    3. ' main' → logprob: -5.278342247009277
    4. '   ' → logprob: -5.403342247009277
    5. '(main' → logprob: -8.153342247009277
    6. '    
' → logprob: -9.278342247009277
    7. ':
' → logprob: -9.778342247009277
    8. '_main' → logprob: -10.278342247009277
    9. ':' → logprob: -11.153342247009277
    10. '__' → logprob: -11.403342247009277

Token 1379: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.372294698550832e-06
    2. '   ' → logprob: -12.000009536743164
    3. ' main' → logprob: -13.250009536743164
    4. '	main' → logprob: -13.500009536743164
    5. '(main' → logprob: -19.250009536743164
    6. 'import' → logprob: -19.875009536743164
    7. '_main' → logprob: -20.000009536743164
    8. 'sys' → logprob: -21.250009536743164
    9. '  ' → logprob: -21.250009536743164
    10. ' ' → logprob: -22.125009536743164

Token 1380: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1378
Tokens correctement prédits (1ère position, stricte): 528
Tokens correctement prédits (1ère position, avec adaptation): 546
Tokens correctement prédits (top 10): 1089
Précision stricte (1ère position): 38.32%
Précision adaptée (1ère position): 39.62%
Précision (top 10): 79.03%
================================================================================
