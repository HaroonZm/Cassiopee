================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_U():
    return 2*10**5

def get_MOD():
    return 10**9+7

def init_array(size, value):
    return [value] * (size+1)

def compute_fact(U, MOD, fact):
    for i in range(1, U+1):
        fact[i] = (fact[i-1]*i) % MOD

def compute_two(U, MOD, two):
    for i in range(1, U+1):
        two[i] = (two[i-1]*2) % MOD

def compute_fact_inv_U(U, MOD, fact, fact_inv):
    fact_inv[U] = pow(fact[U], MOD-2, MOD)

def compute_two_inv_U(U, MOD, two, two_inv):
    two_inv[U] = pow(two[U], MOD-2, MOD)

def compute_fact_inv(U, fact_inv, MOD):
    for i in range(U, 0, -1):
        fact_inv[i-1] = (fact_inv[i]*i) % MOD

def compute_two_inv(U, two_inv, MOD):
    for i in range(U, 0, -1):
        two_inv[i-1] = (two_inv[i]*2) % MOD

def prepare_precomputation():
    U = get_U()
    MOD = get_MOD()
    fact = init_array(U, 1)
    fact_inv = init_array(U, 1)
    two = init_array(U, 1)
    two_inv = init_array(U, 1)
    compute_fact(U, MOD, fact)
    compute_two(U, MOD, two)
    compute_fact_inv_U(U, MOD, fact, fact_inv)
    compute_two_inv_U(U, MOD, two, two_inv)
    compute_fact_inv(U, fact_inv, MOD)
    compute_two_inv(U, two_inv, MOD)
    return fact, fact_inv, two, two_inv

def comb(n, k, fact, fact_inv, MOD):
    if k < 0 or k > n:
        return 0
    z = fact[n]
    z *= fact_inv[k]
    z %= MOD
    z *= fact_inv[n-k]
    z %= MOD
    return z

def get_input():
    return map(int, input().split())

def update_p(i, B, comb, fact, fact_inv, MOD, two_inv):
    return comb(i-1, B-1, fact, fact_inv, MOD) * two_inv[i] % MOD

def update_q(i, W, comb, fact, fact_inv, MOD, two_inv):
    return comb(i-1, W-1, fact, fact_inv, MOD) * two_inv[i] % MOD

def compute_ans(i, p, q, MOD, two_inv):
    ans = 1 - p + q
    ans %= MOD
    ans *= two_inv[1]
    ans %= MOD
    return ans

def problem_main():
    fact, fact_inv, two, two_inv = prepare_precomputation()
    MOD = get_MOD()
    B, W = get_input()
    p = 0
    q = 0
    for i in range(1, B+W+1):
        ans = compute_ans(i, p, q, MOD, two_inv)
        print(ans)
        p = (p + update_p(i, B, comb, fact, fact_inv, MOD, two_inv)) % MOD
        q = (q + update_q(i, W, comb, fact, fact_inv, MOD, two_inv)) % MOD

problem_main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_U' (ID: 13856)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.5005257725715637
    2. 'S' → logprob: -1.500525712966919
    3. 'C' → logprob: -3.500525712966919
    4. '_s' → logprob: -3.500525712966919
    5. '_ser' → logprob: -3.625525712966919
    6. 'Ser' → logprob: -4.125525951385498
    7. 'V' → logprob: -4.375525951385498
    8. '_' → logprob: -5.000525951385498
    9. 'SR' → logprob: -5.000525951385498
    10. '(n' → logprob: -5.000525951385498

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8802034258842468
    2. '\' → logprob: -2.1302034854888916
    3. '   ' → logprob: -2.1302034854888916
    4. ''' → logprob: -2.5052034854888916
    5. '(' → logprob: -2.8802034854888916
    6. '```' → logprob: -2.8802034854888916
    7. '    
' → logprob: -3.5052034854888916
    8. ':' → logprob: -3.5052034854888916
    9. ''\' → logprob: -3.6302034854888916
    10. ' 
' → logprob: -5.1302032470703125

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9467312693595886
    2. 'r' → logprob: -1.0717313289642334
    3. '```' → logprob: -2.8217313289642334
    4. ' ' → logprob: -3.1967313289642334
    5. 'return' (adapté à ' return') → logprob: -3.4467313289642334
    6. '(' → logprob: -3.6967313289642334
    7. '_' → logprob: -3.6967313289642334
    8. 'u' → logprob: -3.8217313289642334
    9. '`' → logprob: -4.071731090545654
    10. '    ' → logprob: -4.696731090545654

Token 6: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5787213444709778
    2. ' ' → logprob: -1.953721284866333
    3. ' []' → logprob: -2.453721284866333
    4. ''' → logprob: -2.703721284866333
    5. '_' → logprob: -2.953721284866333
    6. ' None' → logprob: -3.328721284866333
    7. ' "' → logprob: -4.203721523284912
    8. 'None' → logprob: -4.578721523284912
    9. ' _' → logprob: -4.828721523284912
    10. ' '' → logprob: -5.453721523284912

Token 7: '2' (ID: 17)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.3994794487953186
    2. ''U' → logprob: -1.5244793891906738
    3. '"' → logprob: -2.774479389190674
    4. '[' → logprob: -4.149479389190674
    5. '_U' → logprob: -4.524479389190674
    6. ' U' → logprob: -4.899479389190674
    7. '[]' → logprob: -5.524479389190674
    8. '0' → logprob: -5.524479389190674
    9. ''' → logprob: -5.649479389190674
    10. '1' → logprob: -7.524479389190674

Token 8: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10939665138721466
    2. '\' → logprob: -3.6093966960906982
    3. '0' → logprob: -3.7343966960906982
    4. '(' → logprob: -3.7343966960906982
    5. '+' → logprob: -4.859396457672119
    6. ')' → logprob: -5.484396457672119
    7. '\n' → logprob: -5.484396457672119
    8. '
' → logprob: -6.234396457672119
    9. '#' → logprob: -6.234396457672119
    10. '_' → logprob: -6.609396457672119

Token 9: '10' (ID: 702)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.47739481925964355
    2. 'x' → logprob: -1.1023948192596436
    3. ' U' → logprob: -4.477395057678223
    4. '3' → logprob: -4.602395057678223
    5. ' ' → logprob: -5.477395057678223
    6. ' x' → logprob: -5.727395057678223
    7. 'u' → logprob: -5.977395057678223
    8. ''U' → logprob: -6.352395057678223
    9. '(' → logprob: -6.602395057678223
    10. 'pi' → logprob: -6.852395057678223

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6085548400878906
    2. '^' → logprob: -1.7335548400878906
    3. '*' → logprob: -2.1085548400878906
    4. '**' → logprob: -2.4835548400878906
    5. '3' → logprob: -3.1085548400878906
    6. ' ' → logprob: -4.858554840087891
    7. '4' → logprob: -5.233554840087891
    8. '+' → logprob: -5.358554840087891
    9. '6' → logprob: -5.733554840087891
    10. '-' → logprob: -6.233554840087891

Token 11: '5' (ID: 20)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5916974544525146
    2. '3' → logprob: -0.9666974544525146
    3. '6' → logprob: -3.0916974544525146
    4. '4' → logprob: -4.966697692871094
    5. '5' → logprob: -5.091697692871094
    6. '2' → logprob: -5.341697692871094
    7. '9' → logprob: -6.591697692871094
    8. '7' → logprob: -6.966697692871094
    9. '1' → logprob: -8.591697692871094
    10. ' ' → logprob: -8.841697692871094

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23633790016174316
    2. '
' → logprob: -2.361337900161743
    3. '(
' → logprob: -3.361337900161743
    4. '*' → logprob: -3.861337900161743
    5. '\n' → logprob: -3.986337900161743
    6. ')' → logprob: -3.986337900161743
    7. '<|end|>' → logprob: -4.986337661743164
    8. '+' → logprob: -5.861337661743164
    9. '```' → logprob: -6.111337661743164
    10. '\' → logprob: -6.236337661743164

Token 13: 'def' (ID: 1314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9170259833335876
    2. '(' → logprob: -1.4170260429382324
    3. ')' → logprob: -2.4170260429382324
    4. '
' → logprob: -2.5420260429382324
    5. '.' → logprob: -3.2920260429382324
    6. '```' → logprob: -3.7920260429382324
    7. '\n' → logprob: -3.9170260429382324
    8. 'def' → logprob: -4.167026042938232
    9. '

' → logprob: -4.167026042938232
    10. '<|end|>' → logprob: -4.292026042938232

Token 14: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.012314200401306152
    2. ' space' → logprob: -5.137314319610596
    3. ' calculate' → logprob: -5.387314319610596
    4. ' compute' → logprob: -7.512314319610596
    5. '_' → logprob: -7.887314319610596
    6. ' g' → logprob: -8.137313842773438
    7. ' ' → logprob: -8.887313842773438
    8. ' f' → logprob: -9.637313842773438
    9. ' _' → logprob: -9.762313842773438
    10. ' main' → logprob: -9.762313842773438

Token 15: '_MOD' (ID: 45275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0992860272526741
    2. '_S' → logprob: -2.9742860794067383
    3. '_U' → logprob: -3.5992860794067383
    4. '_V' → logprob: -4.974286079406738
    5. ' _' → logprob: -5.599286079406738
    6. '(' → logprob: -6.849286079406738
    7. '_space' → logprob: -7.599286079406738
    8. '_P' → logprob: -7.724286079406738
    9. '_T' → logprob: -7.849286079406738
    10. ' ' → logprob: -8.099286079406738

Token 16: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3067281246185303
    2. '_' → logprob: -1.4317281246185303
    3. '():' → logprob: -4.681728363037109
    4. '(_' → logprob: -5.681728363037109
    5. '```' → logprob: -5.681728363037109
    6. '(_)' → logprob: -6.556728363037109
    7. '**' → logprob: -7.056728363037109
    8. '(a' → logprob: -7.181728363037109
    9. '<|end|>' → logprob: -7.431728363037109
    10. ' (' → logprob: -7.681728363037109

Token 17: '   ' (ID: 271)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.562766969203949
    2. '   ' → logprob: -1.3127670288085938
    3. '100' → logprob: -2.6877670288085938
    4. ' ' → logprob: -2.8127670288085938
    5. '40' → logprob: -4.812767028808594
    6. '    ' → logprob: -5.437767028808594
    7. '409' → logprob: -5.437767028808594
    8. '400' → logprob: -5.812767028808594
    9. '(' → logprob: -6.062767028808594
    10. '1' → logprob: -6.312767028808594

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017059724777936935
    2. '    ' → logprob: -5.142059803009033
    3. '10' → logprob: -5.392059803009033
    4. ' ' → logprob: -6.392059803009033
    5. '400' → logprob: -6.517059803009033
    6. '100' → logprob: -7.017059803009033
    7. '409' → logprob: -7.517059803009033
    8. '2' → logprob: -8.017059326171875
    9. '200' → logprob: -8.267059326171875
    10. '1' → logprob: -8.392059326171875

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006293495185673237
    2. '10' → logprob: -5.506293296813965
    3. '100' → logprob: -6.506293296813965
    4. '2' → logprob: -8.381293296813965
    5. ' (' → logprob: -8.881293296813965
    6. '1' → logprob: -8.881293296813965
    7. '(' → logprob: -9.131293296813965
    8. '200' → logprob: -10.506293296813965
    9. '0' → logprob: -10.756293296813965
    10. '409' → logprob: -11.506293296813965

Token 20: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27521809935569763
    2. '100' → logprob: -2.2752180099487305
    3. '2' → logprob: -2.7752180099487305
    4. '1' → logprob: -3.0252180099487305
    5. '(' → logprob: -4.0252180099487305
    6. ' ' → logprob: -5.5252180099487305
    7. '998' → logprob: -6.2752180099487305
    8. '(int' → logprob: -7.6502180099487305
    9. 'int' → logprob: -7.7752180099487305
    10. '0' → logprob: -7.9002180099487305

Token 21: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.744206964969635
    2. '0' → logprob: -1.4942069053649902
    3. '\' → logprob: -2.8692069053649902
    4. '```' → logprob: -3.2442069053649902
    5. '**' → logprob: -3.3692069053649902
    6. ')' → logprob: -3.3692069053649902
    7. '#' → logprob: -3.4942069053649902
    8. '<|end|>' → logprob: -3.6192069053649902
    9. '+' → logprob: -3.8692069053649902
    10. '\n' → logprob: -4.36920690536499

Token 22: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.3557529857498594e-05
    2. '6' → logprob: -11.87502384185791
    3. '7' → logprob: -12.12502384185791
    4. '8' → logprob: -12.37502384185791
    5. '4' → logprob: -13.62502384185791
    6. '10' → logprob: -13.75002384185791
    7. '```' → logprob: -14.12502384185791
    8. '5' → logprob: -14.37502384185791
    9. ' ' → logprob: -14.37502384185791
    10. '   ' → logprob: -14.50002384185791

Token 23: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.8497312895488e-05
    2. '7' → logprob: -10.125068664550781
    3. ' +' → logprob: -10.500068664550781
    4. '+
' → logprob: -14.375068664550781
    5. '+

' → logprob: -16.00006866455078
    6. '＋' → logprob: -16.87506866455078
    7. '```' → logprob: -17.37506866455078
    8. '6' → logprob: -17.75006866455078
    9. '+</' → logprob: -18.00006866455078
    10. ' plus' → logprob: -18.00006866455078

Token 24: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.75
    3. '9' → logprob: -16.5
    4. ' ' → logprob: -16.75
    5. '   ' → logprob: -18.125
    6. '```' → logprob: -18.875
    7. '07' → logprob: -19.375
    8. '37' → logprob: -19.75
    9. '3' → logprob: -19.9375
    10. '1' → logprob: -19.9375

Token 25: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06434280425310135
    2. 'd' → logprob: -3.439342737197876
    3. '
' → logprob: -4.564342975616455
    4. '

' → logprob: -4.564342975616455
    5. '#' → logprob: -5.314342975616455
    6. '```' → logprob: -6.189342975616455
    7. '\' → logprob: -7.064342975616455
    8. '<|end|>' → logprob: -7.564342975616455
    9. 'class' → logprob: -8.814342498779297
    10. 'a' → logprob: -8.939342498779297

Token 27: ' init' (ID: 6327)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.012044990435242653
    2. ' ' → logprob: -4.637044906616211
    3. '_' → logprob: -6.762044906616211
    4. ' _' → logprob: -7.637044906616211
    5. 'get' → logprob: -8.387044906616211
    6. '_get' → logprob: -9.512044906616211
    7. ' solve' → logprob: -9.637044906616211
    8. ' space' → logprob: -10.012044906616211
    9. ' factorial' → logprob: -10.012044906616211
    10. ' calculate' → logprob: -10.262044906616211

Token 28: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008497323840856552
    2. '(' → logprob: -5.75849723815918
    3. '_array' → logprob: -6.50849723815918
    4. ' _' → logprob: -6.63349723815918
    5. '(_' → logprob: -7.75849723815918
    6. '_U' → logprob: -8.63349723815918
    7. '_val' → logprob: -9.00849723815918
    8. '__' → logprob: -9.25849723815918
    9. '_params' → logprob: -9.25849723815918
    10. '_A' → logprob: -9.38349723815918

Token 29: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014660186134278774
    2. '_' → logprob: -4.889660358428955
    3. 's' → logprob: -5.764660358428955
    4. '("("' → logprob: -7.264660358428955
    5. ' (' → logprob: -7.389660358428955
    6. '_(' → logprob: -7.514660358428955
    7. '()' → logprob: -8.014659881591797
    8. '_array' → logprob: -8.389659881591797
    9. '('_' → logprob: -8.639659881591797
    10. '_s' → logprob: -8.639659881591797

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005299804266542196
    2. ')' → logprob: -5.5052995681762695
    3. ',' → logprob: -7.0052995681762695
    4. ' ):' → logprob: -8.38029956817627
    5. '_' → logprob: -9.88029956817627
    6. ':' → logprob: -11.88029956817627
    7. '=' → logprob: -12.00529956817627
    8. 's' → logprob: -12.00529956817627
    9. '):
' → logprob: -13.00529956817627
    10. ' ' → logprob: -13.13029956817627

Token 31: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.1735473871231079
    2. 'value' → logprob: -2.4235472679138184
    3. ' default' → logprob: -3.4235472679138184
    4. ' val' → logprob: -4.298547267913818
    5. ' ' → logprob: -4.923547267913818
    6. ' fill' → logprob: -5.423547267913818
    7. ' )' → logprob: -5.798547267913818
    8. 'default' → logprob: -5.923547267913818
    9. '  ' → logprob: -5.923547267913818
    10. ' None' → logprob: -7.048547267913818

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007535886950790882
    2. '=' → logprob: -5.132535934448242
    3. ')' → logprob: -6.757535934448242
    4. ' ):' → logprob: -7.757535934448242
    5. '_' → logprob: -12.382535934448242
    6. '):
' → logprob: -12.882535934448242
    7. ':' → logprob: -13.132535934448242
    8. ' ' → logprob: -13.257535934448242
    9. ' =' → logprob: -13.507535934448242
    10. '=None' → logprob: -14.132535934448242

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5847366452217102
    2. ':' → logprob: -0.8347366452217102
    3. ' :' → logprob: -6.3347368240356445
    4. '):' → logprob: -6.5847368240356445
    5. ' =' → logprob: -6.9597368240356445
    6. '[:]' → logprob: -7.4597368240356445
    7. '[' → logprob: -7.5847368240356445
    8. '[]' → logprob: -7.7097368240356445
    9. '=' → logprob: -7.8347368240356445
    10. '=[]' → logprob: -8.084736824035645

Token 34: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.062206536531448364
    2. ' return' → logprob: -2.937206506729126
    3. '[' → logprob: -5.812206745147705
    4. '   ' → logprob: -5.812206745147705
    5. '[array' → logprob: -7.687206745147705
    6. 'return' (adapté à ' return') → logprob: -8.187206268310547
    7. ' [
' → logprob: -8.562206268310547
    8. ' array' → logprob: -8.937206268310547
    9. ' ' → logprob: -9.312206268310547
    10. '    ' → logprob: -9.687206268310547

Token 35: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.05375319719314575
    2. '[' → logprob: -3.178753137588501
    3. '[value' → logprob: -4.55375337600708
    4. '[size' → logprob: -9.678752899169922
    5. '[int' → logprob: -10.428752899169922
    6. '[val' → logprob: -11.053752899169922
    7. '[array' → logprob: -11.428752899169922
    8. '[n' → logprob: -12.178752899169922
    9. '[num' → logprob: -12.303752899169922
    10. '[np' → logprob: -12.303752899169922

Token 36: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.003177952254191041
    2. ' value' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.128177642822266
    4. ')value' → logprob: -16.128177642822266
    5. '	value' → logprob: -17.378177642822266
    6. '0' → logprob: -17.753177642822266
    7. '"value' → logprob: -17.753177642822266
    8. ''value' → logprob: -18.128177642822266
    9. ' ' → logprob: -18.753177642822266
    10. '$value' → logprob: -18.878177642822266

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09029242396354675
    2. ' for' → logprob: -2.590292453765869
    3. ' ]' → logprob: -4.840292453765869
    4. ']*' → logprob: -5.715292453765869
    5. 'for' → logprob: -9.340291976928711
    6. ')' → logprob: -10.965291976928711
    7. '   ' → logprob: -11.465291976928711
    8. ' ' → logprob: -11.965291976928711
    9. '	for' → logprob: -12.215291976928711
    10. ']*(' → logprob: -12.840291976928711

Token 38: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09975751489400864
    2. ' for' → logprob: -2.849757432937622
    3. ' *' → logprob: -4.224757671356201
    4. ']*' → logprob: -4.224757671356201
    5. ']' → logprob: -5.849757671356201
    6. 'for' → logprob: -6.224757671356201
    7. '0' → logprob: -7.474757671356201
    8. '*[' → logprob: -7.599757671356201
    9. ')*' → logprob: -7.724757671356201
    10. ')' → logprob: -8.099757194519043

Token 39: ' (' (ID: 350)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.011055603623390198
    2. ' size' → logprob: -4.5110554695129395
    3. '(size' → logprob: -11.761055946350098
    4. 'siz' → logprob: -17.88605499267578
    5. '<size' → logprob: -18.01105499267578
    6. '	size' → logprob: -18.38605499267578
    7. '[size' → logprob: -18.51105499267578
    8. 's' → logprob: -18.76105499267578
    9. 'sizei' → logprob: -19.26105499267578
    10. 'int' → logprob: -19.51105499267578

Token 40: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -3.547789674485102e-05
    2. ' size' → logprob: -10.250035285949707
    3. 'siz' → logprob: -18.125036239624023
    4. '   ' → logprob: -18.500036239624023
    5. 'si' → logprob: -19.875036239624023
    6. '	size' → logprob: -19.875036239624023
    7. 's' → logprob: -20.125036239624023
    8. ' ' → logprob: -20.250036239624023
    9. ')' → logprob: -20.500036239624023
    10. '(size' → logprob: -21.125036239624023

Token 41: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.539801688631997e-05
    2. ' )' → logprob: -9.750065803527832
    3. '<|end|>' → logprob: -12.250065803527832
    4. ')
' → logprob: -14.625065803527832
    5. ')return' → logprob: -15.250065803527832
    6. '}' → logprob: -15.500065803527832
    7. '```' → logprob: -15.750065803527832
    8. '+' → logprob: -15.750065803527832
    9. '<|end|>' → logprob: -15.875065803527832
    10. '),' → logprob: -16.000064849853516

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. ')' → logprob: -17.375009536743164
    5. '0' → logprob: -18.500009536743164
    6. '```' → logprob: -18.500009536743164
    7. '  ' → logprob: -18.875009536743164
    8. 'def' → logprob: -19.000009536743164
    9. '+' → logprob: -19.375009536743164
    10. '2' → logprob: -19.625009536743164

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.12500286102295
    4. ')return' → logprob: -18.125001907348633
    5. '')' → logprob: -18.125001907348633
    6. '))' → logprob: -18.250001907348633
    7. '）' → logprob: -18.375001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.750001907348633

Token 44: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.14119136333465576
    2. 'def' → logprob: -2.3911914825439453
    3. '
' → logprob: -3.2661914825439453
    4. '<|end|>' → logprob: -7.141191482543945
    5. ' 

' → logprob: -8.266191482543945
    6. '\n' → logprob: -8.391191482543945
    7. '```' → logprob: -9.016191482543945
    8. ' def' → logprob: -9.266191482543945
    9. 'newline' → logprob: -9.391191482543945
    10. '[' → logprob: -9.516191482543945

Token 45: ' compute' (ID: 23864)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.05039796605706215
    2. ' calculate' → logprob: -4.300397872924805
    3. ' compute' → logprob: -4.300397872924805
    4. ' solve' → logprob: -4.675397872924805
    5. '_' → logprob: -5.800397872924805
    6. ' set' → logprob: -5.925397872924805
    7. ' main' → logprob: -5.925397872924805
    8. ' calc' → logprob: -7.550397872924805
    9. ' convert' → logprob: -7.675397872924805
    10. ' process' → logprob: -7.925397872924805

Token 46: '_fact' (ID: 111916)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43891721963882446
    2. '_sum' → logprob: -1.4389171600341797
    3. '_array' → logprob: -2.5639171600341797
    4. '_factor' → logprob: -3.9389171600341797
    5. '(' → logprob: -5.06391716003418
    6. '_value' → logprob: -5.31391716003418
    7. '_max' → logprob: -6.68891716003418
    8. '_result' → logprob: -6.93891716003418
    9. '_values' → logprob: -6.93891716003418
    10. '_U' → logprob: -7.68891716003418

Token 47: '(U' (ID: 27452)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.7967941164970398
    2. 'orial' → logprob: -1.0467941761016846
    3. '_' → logprob: -2.5467941761016846
    4. '_or' → logprob: -2.6717941761016846
    5. 's' → logprob: -4.0467939376831055
    6. 'oral' → logprob: -4.4217939376831055
    7. 'ory' → logprob: -5.0467939376831055
    8. 'oria' → logprob: -5.9217939376831055
    9. 'orical' → logprob: -6.1717939376831055
    10. '_factor' → logprob: -6.4217939376831055

Token 48: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023681452497839928
    2. ')' → logprob: -3.898681402206421
    3. '+' → logprob: -6.273681640625
    4. '):
' → logprob: -7.148681640625
    5. ' ):' → logprob: -9.148681640625
    6. ',' → logprob: -9.398681640625
    7. '),' → logprob: -9.398681640625
    8. '):
' → logprob: -10.273681640625
    9. '_' → logprob: -10.523681640625
    10. '):

' → logprob: -10.898681640625

Token 49: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.18903671205043793
    2. ' MOD' → logprob: -1.8140367269515991
    3. 'mod' → logprob: -5.064036846160889
    4. ' mod' → logprob: -6.939036846160889
    5. 'M' → logprob: -7.439036846160889
    6. ' ' → logprob: -8.31403636932373
    7. ' M' → logprob: -8.43903636932373
    8. '_MOD' → logprob: -8.43903636932373
    9. 'Mod' → logprob: -8.93903636932373
    10. ')' → logprob: -9.31403636932373

Token 50: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016438805032521486
    2. ',' → logprob: -6.501643657684326
    3. ')' → logprob: -9.126644134521484
    4. '):
' → logprob: -10.626644134521484
    5. ' ):' → logprob: -12.376644134521484
    6. '):
' → logprob: -13.001644134521484
    7. ':' → logprob: -14.251644134521484
    8. '),' → logprob: -15.501644134521484
    9. '   ' → logprob: -15.876644134521484
    10. ')：' → logprob: -16.126644134521484

Token 51: ' fact' (ID: 2840)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8204104900360107
    2. ' )' → logprob: -1.8204104900360107
    3. ' n' → logprob: -2.0704104900360107
    4. ' inv' → logprob: -2.1954104900360107
    5. '):' → logprob: -2.4454104900360107
    6. 'n' → logprob: -2.5704104900360107
    7. 'inv' → logprob: -2.6954104900360107
    8. ' ):' → logprob: -3.3204104900360107
    9. ' fact' → logprob: -3.4454104900360107
    10. ' inverse' → logprob: -3.8204104900360107

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25313693284988403
    2. ',' → logprob: -1.7531368732452393
    3. ')' → logprob: -3.7531368732452393
    4. 's' → logprob: -4.128137111663818
    5. '_,' → logprob: -5.628137111663818
    6. '_' → logprob: -5.628137111663818
    7. '[' → logprob: -7.128137111663818
    8. '_size' → logprob: -7.878137111663818
    9. ',_' → logprob: -7.878137111663818
    10. '_array' → logprob: -8.37813663482666

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40449321269989014
    2. ':' → logprob: -1.1544932126998901
    3. '[' → logprob: -4.90449333190918
    4. '):' → logprob: -5.27949333190918
    5. ' for' → logprob: -7.15449333190918
    6. ':
' → logprob: -7.65449333190918
    7. ',' → logprob: -7.77949333190918
    8. '    
' → logprob: -7.90449333190918
    9. '):
' → logprob: -8.02949333190918
    10. 'for' → logprob: -8.02949333190918

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.475341260433197
    2. '   ' → logprob: -1.1003413200378418
    3. 'for' (adapté à ' for') → logprob: -3.100341320037842
    4. ' fact' → logprob: -8.725340843200684
    5. 'fact' → logprob: -9.475340843200684
    6. '	for' → logprob: -9.600340843200684
    7. '```' → logprob: -9.725340843200684
    8. ' i' → logprob: -9.725340843200684
    9. '    
' → logprob: -10.600340843200684
    10. ' ' → logprob: -10.600340843200684

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11555888503789902
    2. ' ' → logprob: -2.2405588626861572
    3. ' _' → logprob: -6.990559101104736
    4. 'i' → logprob: -6.990559101104736
    5. '_' → logprob: -7.115559101104736
    6. ' range' → logprob: -9.740558624267578
    7. ' in' → logprob: -11.990558624267578
    8. ' ' → logprob: -12.740558624267578
    9. ' I' → logprob: -12.990558624267578
    10. '  ' → logprob: -13.240558624267578

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0111380098387599
    2. 'in' → logprob: -4.761137962341309
    3. ' ' → logprob: -6.011137962341309
    4. '	in' → logprob: -10.386137962341309
    5. '  ' → logprob: -11.261137962341309
    6. ' i' → logprob: -12.011137962341309
    7. '   ' → logprob: -12.136137962341309
    8. '1' → logprob: -13.261137962341309
    9. '_' → logprob: -13.261137962341309
    10. 'n' → logprob: -13.511137962341309

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038076501339673996
    2. 'range' → logprob: -3.288076400756836
    3. ' ' → logprob: -10.538076400756836
    4. '	range' → logprob: -12.788076400756836
    5. ' xrange' → logprob: -13.038076400756836
    6. '(range' → logprob: -13.163076400756836
    7. '1' → logprob: -14.538076400756836
    8. '  ' → logprob: -14.913076400756836
    9. '   ' → logprob: -14.913076400756836
    10. '_range' → logprob: -16.413076400756836

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012415809032972902
    2. '1' → logprob: -9.875123977661133
    3. ' ' → logprob: -10.125123977661133
    4. '2' → logprob: -11.000123977661133
    5. '   ' → logprob: -11.375123977661133
    6. ' (' → logprob: -12.375123977661133
    7. '(
' → logprob: -16.375123977661133
    8. '  ' → logprob: -17.625123977661133
    9. '	' → logprob: -17.875123977661133
    10. ')' → logprob: -18.125123977661133

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. '2' → logprob: -10.000052452087402
    3. ' ' → logprob: -12.000052452087402
    4. '   ' → logprob: -14.375052452087402
    5. ')' → logprob: -17.500051498413086
    6. '```' → logprob: -17.750051498413086
    7. '(' → logprob: -18.125051498413086
    8. '  ' → logprob: -18.750051498413086
    9. '
' → logprob: -19.375051498413086
    10. 'U' → logprob: -19.500051498413086

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3896949887275696
    2. ' ,' → logprob: -1.1396949291229248
    3. ' ' → logprob: -6.514695167541504
    4. ' U' → logprob: -7.014695167541504
    5. ' i' → logprob: -8.889695167541504
    6. ',U' → logprob: -8.889695167541504
    7. ',len' → logprob: -9.264695167541504
    8. ' in' → logprob: -11.264695167541504
    9. ' (' → logprob: -11.639695167541504
    10. ' len' → logprob: -11.764695167541504

Token 61: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.07889430224895477
    2. 'U' → logprob: -2.5788943767547607
    3. '	U' → logprob: -12.57889461517334
    4. 'len' → logprob: -14.82889461517334
    5. '<|end|>' → logprob: -15.57889461517334
    6. ' ' → logprob: -15.70389461517334
    7. ' len' → logprob: -16.203893661499023
    8. '<U' → logprob: -16.578893661499023
    9. ' ' → logprob: -16.703893661499023
    10. ')' → logprob: -17.453893661499023

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007606627885252237
    2. ' +' → logprob: -4.882606506347656
    3. '+
' → logprob: -16.257606506347656
    4. '):' → logprob: -16.382606506347656
    5. ')+' → logprob: -16.507606506347656
    6. ')' → logprob: -16.882606506347656
    7. '()+' → logprob: -17.507606506347656
    8. '   ' → logprob: -17.507606506347656
    9. '):
' → logprob: -17.507606506347656
    10. ' ' → logprob: -17.757606506347656

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -16.750019073486328
    4. '```' → logprob: -17.125019073486328
    5. '+' → logprob: -17.375019073486328
    6. '   ' → logprob: -17.750019073486328
    7. '۱' → logprob: -18.125019073486328
    8. '2' → logprob: -18.750019073486328
    9. '  ' → logprob: -19.375019073486328
    10. '-' → logprob: -19.500019073486328

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003794731106609106
    2. ':' → logprob: -5.7537946701049805
    3. ' ):' → logprob: -7.7537946701049805
    4. ')' → logprob: -8.75379467010498
    5. '):
' → logprob: -10.62879467010498
    6. ' :' → logprob: -13.37879467010498
    7. ',' → logprob: -13.62879467010498
    8. ' )' → logprob: -14.37879467010498
    9. ']:' → logprob: -14.75379467010498
    10. '   ' → logprob: -14.75379467010498

Token 65: '       ' (ID: 309)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.665672779083252
    2. ' fact' → logprob: -1.040672779083252
    3. '   ' → logprob: -2.915672779083252
    4. '_fact' → logprob: -3.540672779083252
    5. '<|end|>' → logprob: -4.165672779083252
    6. ' ' → logprob: -4.665672779083252
    7. '    ' → logprob: -4.790672779083252
    8. '    
' → logprob: -5.290672779083252
    9. '       ' → logprob: -5.540672779083252
    10. ' 
' → logprob: -6.165672779083252

Token 66: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.1837744265794754
    2. 'fact' (adapté à ' fact') → logprob: -1.808774471282959
    3. '_fact' → logprob: -6.683774471282959
    4. '   ' → logprob: -6.933774471282959
    5. ' i' → logprob: -7.308774471282959
    6. ' ' → logprob: -7.558774471282959
    7. '    ' → logprob: -8.1837739944458
    8. ' factorial' → logprob: -9.8087739944458
    9. ' Fact' → logprob: -10.5587739944458
    10. '    
' → logprob: -10.8087739944458

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.203409844194539e-05
    2. '[' → logprob: -10.125041961669922
    3. '[I' → logprob: -13.875041961669922
    4. ' [' → logprob: -15.000041961669922
    5. '```' → logprob: -15.250041961669922
    6. '\[' → logprob: -15.750041961669922
    7. '[idx' → logprob: -17.000041961669922
    8. '[in' → logprob: -17.750041961669922
    9. '[j' → logprob: -17.875041961669922
    10. '[:]' → logprob: -17.875041961669922

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014638332650065422
    2. ']=' → logprob: -4.389638423919678
    3. '=' → logprob: -6.389638423919678
    4. ' ]' → logprob: -7.889638423919678
    5. ' =' → logprob: -9.63963794708252
    6. ')' → logprob: -12.63963794708252
    7. ']=(' → logprob: -12.88963794708252
    8. ']+=' → logprob: -14.51463794708252
    9. ')=' → logprob: -14.88963794708252
    10. '[' → logprob: -15.38963794708252

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001366744691040367
    2. ' =' → logprob: -9.125136375427246
    3. '*=' → logprob: -10.875136375427246
    4. '=i' → logprob: -12.375136375427246
    5. '=f' → logprob: -13.625136375427246
    6. '=int' → logprob: -14.625136375427246
    7. '=

' → logprob: -14.750136375427246
    8. ']=' → logprob: -14.875136375427246
    9. '=(' → logprob: -15.500136375427246
    10. '=*' → logprob: -15.625136375427246

Token 70: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.15185758471488953
    2. 'fact' → logprob: -2.151857614517212
    3. ' (' → logprob: -3.776857614517212
    4. ' fact' → logprob: -6.526857376098633
    5. '   ' → logprob: -9.276857376098633
    6. '_fact' → logprob: -10.026857376098633
    7. '(i' → logprob: -10.276857376098633
    8. 'factor' → logprob: -10.401857376098633
    9. '(' → logprob: -11.401857376098633
    10. 'f' → logprob: -11.401857376098633

Token 71: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0011988013284280896
    2. ' fact' → logprob: -6.751198768615723
    3. 'i' → logprob: -11.251198768615723
    4. '_fact' → logprob: -12.251198768615723
    5. 'factor' → logprob: -12.501198768615723
    6. 'f' → logprob: -13.376198768615723
    7. 'facts' → logprob: -13.626198768615723
    8. '.fact' → logprob: -13.626198768615723
    9. '   ' → logprob: -14.001198768615723
    10. ' i' → logprob: -14.376198768615723

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.125
    3. '[' → logprob: -16.25
    4. ' [' → logprob: -17.5
    5. '(i' → logprob: -18.125
    6. ')[' → logprob: -18.875
    7. ')' → logprob: -19.0
    8. '[I' → logprob: -19.125
    9. '   ' → logprob: -19.75
    10. '
' → logprob: -20.0

Token 73: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003554847207851708
    2. ' -' → logprob: -8.00035572052002
    3. '[i' → logprob: -11.75035572052002
    4. ']' → logprob: -11.87535572052002
    5. '1' → logprob: -12.62535572052002
    6. 'i' → logprob: -14.37535572052002
    7. '[-' → logprob: -15.00035572052002
    8. '-i' → logprob: -15.00035572052002
    9. '   ' → logprob: -15.37535572052002
    10. '[' → logprob: -15.87535572052002

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0569465309381485
    2. ']' → logprob: -3.4319465160369873
    3. 'i' → logprob: -4.181946754455566
    4. ' ' → logprob: -5.806946754455566
    5. '   ' → logprob: -6.681946754455566
    6. '```' → logprob: -6.806946754455566
    7. ']*' → logprob: -7.306946754455566
    8. '])' → logprob: -8.056946754455566
    9. '<|end|>' → logprob: -8.181946754455566
    10. ')' → logprob: -8.181946754455566

Token 75: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.48043304681777954
    2. ' *' → logprob: -0.9804330468177795
    3. '*i' → logprob: -5.105432987213135
    4. ' ' → logprob: -8.480433464050293
    5. ' ' → logprob: -10.230433464050293
    6. '   ' → logprob: -11.730433464050293
    7. ')' → logprob: -12.230433464050293
    8. '```' → logprob: -12.730433464050293
    9. '**' → logprob: -13.105433464050293
    10. '	' → logprob: -13.230433464050293

Token 76: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002476135268807411
    2. ' i' → logprob: -6.002476215362549
    3. '<|end|>' → logprob: -15.12747573852539
    4. '	i' → logprob: -16.37747573852539
    5. ' ' → logprob: -17.00247573852539
    6. '   ' → logprob: -17.12747573852539
    7. '<|end|>' → logprob: -18.00247573852539
    8. '  ' → logprob: -18.12747573852539
    9. ' ' → logprob: -18.12747573852539
    10. ')i' → logprob: -18.50247573852539

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008265409851446748
    2. ')%' → logprob: -7.125826358795166
    3. ' )' → logprob: -10.750826835632324
    4. '%' → logprob: -14.250826835632324
    5. '   ' → logprob: -17.500825881958008
    6. '）' → logprob: -18.250825881958008
    7. '`)' → logprob: -18.750825881958008
    8. ')
' → logprob: -18.875825881958008
    9. '%)' → logprob: -18.875825881958008
    10. '),' → logprob: -18.875825881958008

Token 78: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3868793845176697
    2. '%' → logprob: -1.1368794441223145
    3. ')' → logprob: -12.511878967285156
    4. ')%' → logprob: -12.761878967285156
    5. ' ' → logprob: -15.011878967285156
    6. '%A' → logprob: -15.261878967285156
    7. '%D' → logprob: -15.261878967285156
    8. ' ' → logprob: -15.386878967285156
    9. ' %=' → logprob: -15.511878967285156
    10. '   ' → logprob: -15.636878967285156

Token 79: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.31327179074287415
    2. ' MOD' → logprob: -1.3132717609405518
    3. '_MOD' → logprob: -11.688271522521973
    4. '.MOD' → logprob: -13.938271522521973
    5. ' ' → logprob: -14.563271522521973
    6. ' ' → logprob: -15.188271522521973
    7. '(M' → logprob: -17.18827247619629
    8. 'MO' → logprob: -17.31327247619629
    9. 'mod' → logprob: -18.56327247619629
    10. 'M' → logprob: -18.68827247619629

Token 80: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5213630795478821
    2. '<|end|>' → logprob: -1.0213630199432373
    3. '\n' → logprob: -3.2713630199432373
    4. '   ' → logprob: -6.646363258361816
    5. '<|end|>' → logprob: -6.646363258361816
    6. '```' → logprob: -6.771363258361816
    7. 'newline' → logprob: -6.896363258361816
    8. '    
' → logprob: -7.396363258361816
    9. ' ' → logprob: -7.771363258361816
    10. ' 
' → logprob: -7.771363258361816

Token 81: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5987813472747803
    2. 'def' → logprob: -0.8487813472747803
    3. '<|end|>' → logprob: -4.098781585693359
    4. '

' → logprob: -5.848781585693359
    5. ' def' → logprob: -6.598781585693359
    6. '```' → logprob: -7.598781585693359
    7. '<|end|>' → logprob: -7.973781585693359
    8. '\n' → logprob: -8.09878158569336
    9. 'newline' → logprob: -8.84878158569336
    10. '   ' → logprob: -9.34878158569336

Token 82: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.4303261935710907
    2. 'compute' → logprob: -1.055326223373413
    3. '_compute' → logprob: -7.180325984954834
    4. 'init' → logprob: -8.555326461791992
    5. ' get' → logprob: -8.805326461791992
    6. 'get' → logprob: -9.180326461791992
    7. 'pow' → logprob: -9.305326461791992
    8. ' init' → logprob: -9.305326461791992
    9. 'calc' → logprob: -9.805326461791992
    10. 'factor' → logprob: -10.805326461791992

Token 83: '_two' (ID: 54305)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.002997196977958083
    2. '_' → logprob: -6.502997398376465
    3. '_inverse' → logprob: -7.002997398376465
    4. '_if' → logprob: -8.127997398376465
    5. '_fact' → logprob: -9.502997398376465
    6. '_comb' → logprob: -10.377997398376465
    7. '_rev' → logprob: -10.377997398376465
    8. '_pow' → logprob: -10.627997398376465
    9. '_INV' → logprob: -10.752997398376465
    10. '_fac' → logprob: -11.127997398376465

Token 84: '(U' (ID: 27452)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.4092770218849182
    2. '_p' → logprob: -1.5342769622802734
    3. '_power' → logprob: -2.6592769622802734
    4. 'pow' → logprob: -3.1592769622802734
    5. '_factor' → logprob: -5.909276962280273
    6. '_to' → logprob: -6.534276962280273
    7. '_exp' → logprob: -6.784276962280273
    8. '_inv' → logprob: -7.909276962280273
    9. 'exp' → logprob: -8.034276962280273
    10. '_ex' → logprob: -8.284276962280273

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037712305784225464
    2. '):' → logprob: -3.787712335586548
    3. '+' → logprob: -4.287712097167969
    4. ')' → logprob: -8.537712097167969
    5. ' ,' → logprob: -9.162712097167969
    6. '+,' → logprob: -9.162712097167969
    7. '   ' → logprob: -10.537712097167969
    8. '*' → logprob: -10.662712097167969
    9. '_,' → logprob: -10.787712097167969
    10. ',+' → logprob: -10.912712097167969

Token 86: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.28254765272140503
    2. ' MOD' → logprob: -1.4075477123260498
    3. ' two' → logprob: -7.907547473907471
    4. ' ' → logprob: -8.157547950744629
    5. 'two' → logprob: -8.407547950744629
    6. 'pow' → logprob: -9.282547950744629
    7. '2' → logprob: -9.657547950744629
    8. '   ' → logprob: -9.782547950744629
    9. 'fact' → logprob: -10.032547950744629
    10. '_MOD' → logprob: -10.157547950744629

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.281485836254433e-05
    2. '):' → logprob: -10.000092506408691
    3. ' ,' → logprob: -10.000092506408691
    4. '   ' → logprob: -14.375092506408691
    5. '):
' → logprob: -15.625092506408691
    6. ',f' → logprob: -15.625092506408691
    7. ')' → logprob: -15.750092506408691
    8. ',
' → logprob: -15.750092506408691
    9. 'def' → logprob: -16.375093460083008
    10. '_,' → logprob: -16.625093460083008

Token 88: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.12893806397914886
    2. ' two' → logprob: -2.1289379596710205
    3. 'pow' → logprob: -6.7539381980896
    4. 'tw' → logprob: -8.003937721252441
    5. ' pow' → logprob: -9.378937721252441
    6. 'power' → logprob: -9.503937721252441
    7. '   ' → logprob: -9.878937721252441
    8. ' power' → logprob: -10.378937721252441
    9. '```' → logprob: -10.503937721252441
    10. ' tw' → logprob: -10.503937721252441

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16125421226024628
    2. ',' → logprob: -1.9112541675567627
    3. ')' → logprob: -8.036253929138184
    4. '):
' → logprob: -8.286253929138184
    5. ' ):' → logprob: -8.661253929138184
    6. '   ' → logprob: -9.661253929138184
    7. '[]):' → logprob: -10.411253929138184
    8. ' ,' → logprob: -10.411253929138184
    9. '[' → logprob: -11.036253929138184
    10. ''):' → logprob: -11.411253929138184

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4680606424808502
    2. ':' → logprob: -1.0930606126785278
    3. ' for' → logprob: -3.5930607318878174
    4. ':
' → logprob: -5.468060493469238
    5. 'for' → logprob: -5.593060493469238
    6. '):' → logprob: -6.843060493469238
    7. ' ' → logprob: -7.843060493469238
    8. ',' → logprob: -7.843060493469238
    9. '):
' → logprob: -7.968060493469238
    10. 'def' → logprob: -8.093060493469238

Token 91: ' for' (ID: 395)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.008300254121422768
    2. ' two' → logprob: -5.133300304412842
    3. '   ' → logprob: -6.633300304412842
    4. 'for' (adapté à ' for') → logprob: -6.883300304412842
    5. ' for' → logprob: -11.508299827575684
    6. ' ' → logprob: -11.633299827575684
    7. 'def' → logprob: -12.508299827575684
    8. '0' → logprob: -13.758299827575684
    9. '(two' → logprob: -14.258299827575684
    10. '    
' → logprob: -14.508299827575684

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31329402327537537
    2. 'i' → logprob: -1.3132940530776978
    3. ' ' → logprob: -11.438294410705566
    4. '_' → logprob: -11.813294410705566
    5. '	i' → logprob: -12.563294410705566
    6. '(i' → logprob: -13.438294410705566
    7. '_i' → logprob: -13.563294410705566
    8. ' _' → logprob: -13.563294410705566
    9. 'range' → logprob: -13.938294410705566
    10. '   ' → logprob: -14.063294410705566

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02988828904926777
    2. 'in' → logprob: -3.529888391494751
    3. ' ' → logprob: -9.029888153076172
    4. '   ' → logprob: -12.029888153076172
    5. '  ' → logprob: -12.529888153076172
    6. '1' → logprob: -13.029888153076172
    7. '	in' → logprob: -14.029888153076172
    8. 'range' → logprob: -14.154888153076172
    9. 'n' → logprob: -14.279888153076172
    10. '    ' → logprob: -14.654888153076172

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1005292758345604
    2. ' range' → logprob: -2.350529193878174
    3. '(range' → logprob: -8.100529670715332
    4. '(' → logprob: -11.350529670715332
    5. ' ' → logprob: -12.350529670715332
    6. '	range' → logprob: -13.725529670715332
    7. '1' → logprob: -14.225529670715332
    8. '   ' → logprob: -15.100529670715332
    9. '  ' → logprob: -15.725529670715332
    10. ' in' → logprob: -15.850529670715332

Token 95: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012439649435691535
    2. '(U' → logprob: -9.000123977661133
    3. ' (' → logprob: -14.375123977661133
    4. ' ' → logprob: -16.875123977661133
    5. '1' → logprob: -16.875123977661133
    6. '(
' → logprob: -17.125123977661133
    7. '(i' → logprob: -17.125123977661133
    8. '((' → logprob: -17.250123977661133
    9. 'range' → logprob: -17.500123977661133
    10. '(range' → logprob: -17.625123977661133

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007013725582510233
    2. '0' → logprob: -5.63201379776001
    3. '2' → logprob: -6.25701379776001
    4. 'U' → logprob: -6.88201379776001
    5. ' ' → logprob: -7.88201379776001
    6. ' U' → logprob: -9.882013320922852
    7. '(' → logprob: -11.507013320922852
    8. '   ' → logprob: -11.757013320922852
    9. '(U' → logprob: -11.882013320922852
    10. 'i' → logprob: -12.882013320922852

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004260276327840984
    2. ',U' → logprob: -7.875425815582275
    3. ' ,' → logprob: -10.000426292419434
    4. ' U' → logprob: -15.000426292419434
    5. '(U' → logprob: -16.750425338745117
    6. ' ' → logprob: -17.375425338745117
    7. 'U' → logprob: -17.375425338745117
    8. '   ' → logprob: -18.875425338745117
    9. '	U' → logprob: -18.875425338745117
    10. ',
' → logprob: -18.875425338745117

Token 98: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.2519322335720062
    2. 'U' → logprob: -1.5019322633743286
    3. '	U' → logprob: -13.751932144165039
    4. ' ' → logprob: -13.876932144165039
    5. '   ' → logprob: -14.751932144165039
    6. ')' → logprob: -15.501932144165039
    7. '(U' → logprob: -16.00193214416504
    8. '2' → logprob: -16.25193214416504
    9. ',U' → logprob: -16.37693214416504
    10. ' ' → logprob: -17.37693214416504

Token 99: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8624639324116288e-06
    2. ' +' → logprob: -13.375001907348633
    3. ')+' → logprob: -16.125001907348633
    4. '()+' → logprob: -17.000001907348633
    5. '+
' → logprob: -17.125001907348633
    6. '+)' → logprob: -18.250001907348633
    7. '+i' → logprob: -19.125001907348633
    8. ')' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. '+=' → logprob: -20.000001907348633

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008624029345810413
    2. '+' → logprob: -4.758624076843262
    3. '2' → logprob: -12.758624076843262
    4. ')' → logprob: -13.008624076843262
    5. '```' → logprob: -13.383624076843262
    6. '6' → logprob: -14.383624076843262
    7. ' ' → logprob: -14.383624076843262
    8. ')+' → logprob: -14.883624076843262
    9. '):
' → logprob: -15.383624076843262
    10. '   ' → logprob: -15.383624076843262

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002025827532634139
    2. ':' → logprob: -6.502025604248047
    3. '):
' → logprob: -7.627025604248047
    4. ')' → logprob: -10.627025604248047
    5. ' ):' → logprob: -11.502025604248047
    6. '   ' → logprob: -13.752025604248047
    7. '):
' → logprob: -15.377025604248047
    8. ',' → logprob: -15.627025604248047
    9. '}:' → logprob: -15.877025604248047
    10. ']:' → logprob: -16.002025604248047

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27625328302383423
    2. ' two' → logprob: -1.9012532234191895
    3. '       ' → logprob: -2.6512532234191895
    4. ' ' → logprob: -4.9012532234191895
    5. 'two' → logprob: -5.1512532234191895
    6. '    
' → logprob: -6.1512532234191895
    7. '(two' → logprob: -6.2762532234191895
    8. '<|end|>' → logprob: -6.9012532234191895
    9. '):
' → logprob: -8.026253700256348
    10. ')' → logprob: -8.151253700256348

Token 103: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6948661804199219
    2. 'two' (adapté à ' two') → logprob: -0.6948661804199219
    3. '       ' → logprob: -6.819866180419922
    4. '   ' → logprob: -7.444866180419922
    5. ' ' → logprob: -10.694866180419922
    6. '(two' → logprob: -11.569866180419922
    7. '.two' → logprob: -12.319866180419922
    8. '_two' → logprob: -13.694866180419922
    9. '  ' → logprob: -14.194866180419922
    10. '2' → logprob: -14.319866180419922

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005906827282160521
    2. '[' → logprob: -7.625590801239014
    3. ' [' → logprob: -9.875590324401855
    4. ')[' → logprob: -11.625590324401855
    5. '```' → logprob: -11.750590324401855
    6. '[I' → logprob: -12.125590324401855
    7. '\[' → logprob: -12.375590324401855
    8. '   ' → logprob: -12.500590324401855
    9. '`' → logprob: -12.750590324401855
    10. '][' → logprob: -12.750590324401855

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012308525037951767
    2. ']=' → logprob: -9.375123023986816
    3. ' ]' → logprob: -10.250123023986816
    4. ')' → logprob: -13.750123023986816
    5. ']
' → logprob: -14.750123023986816
    6. '])' → logprob: -15.000123023986816
    7. '[i' → logprob: -15.125123023986816
    8. '[' → logprob: -15.250123023986816
    9. '=' → logprob: -15.875123023986816
    10. ')]' → logprob: -16.375123977661133

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '=

' → logprob: -17.548587799072266
    4. ')' → logprob: -18.173587799072266
    5. '*=' → logprob: -18.298587799072266
    6. '=
' → logprob: -18.423587799072266
    7. ']' → logprob: -18.423587799072266
    8. '+=' → logprob: -18.548587799072266
    9. ' ' → logprob: -18.923587799072266
    10. ' =
' → logprob: -19.173587799072266

Token 107: ' (' (ID: 350)
  Prédit: '(two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.5863455533981323
    2. ' (' → logprob: -1.0863455533981323
    3. '(' → logprob: -2.836345672607422
    4. '(t' → logprob: -3.086345672607422
    5. '2' → logprob: -6.711345672607422
    6. '   ' → logprob: -8.461345672607422
    7. 'two' → logprob: -8.836345672607422
    8. ' ' → logprob: -8.961345672607422
    9. ' two' → logprob: -9.586345672607422
    10. '(T' → logprob: -10.211345672607422

Token 108: 'two' (ID: 38397)
  Prédit: 'two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.1849697083234787
    2. ' two' → logprob: -1.9349696636199951
    3. '2' → logprob: -3.809969663619995
    4. ' ' → logprob: -6.934969902038574
    5. '(two' → logprob: -6.934969902038574
    6. '   ' → logprob: -8.809969902038574
    7. 'tw' → logprob: -8.934969902038574
    8. ' (' → logprob: -11.872469902038574
    9. '1' → logprob: -11.934969902038574
    10. '0' → logprob: -12.309969902038574

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.625001907348633
    3. '[' → logprob: -15.375001907348633
    4. '[I' → logprob: -16.250001907348633
    5. '[
' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. ' [' → logprob: -17.750001907348633
    8. ' i' → logprob: -18.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. '(i' → logprob: -19.375001907348633

Token 110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.8497312895488e-05
    2. ' -' → logprob: -9.750068664550781
    3. '[i' → logprob: -11.750068664550781
    4. '[' → logprob: -14.125068664550781
    5. 'i' → logprob: -14.125068664550781
    6. '[-' → logprob: -14.250068664550781
    7. ']' → logprob: -15.875068664550781
    8. '1' → logprob: -16.25006866455078
    9. ']-' → logprob: -17.12506866455078
    10. '-i' → logprob: -17.25006866455078

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004424667276907712
    2. ' ' → logprob: -7.8754425048828125
    3. '-' → logprob: -10.125442504882812
    4. '   ' → logprob: -11.875442504882812
    5. '```' → logprob: -12.500442504882812
    6. ']' → logprob: -12.750442504882812
    7. '])' → logprob: -13.500442504882812
    8. '0' → logprob: -13.625442504882812
    9. '<|end|>' → logprob: -13.750442504882812
    10. '  ' → logprob: -14.125442504882812

Token 112: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10976897925138474
    2. ' *' → logprob: -2.484768867492676
    3. ']' → logprob: -4.234768867492676
    4. ']*' → logprob: -5.109768867492676
    5. '2' → logprob: -10.109768867492676
    6. ']<<' → logprob: -11.109768867492676
    7. ' ' → logprob: -11.734768867492676
    8. '**' → logprob: -11.984768867492676
    9. '   ' → logprob: -12.609768867492676
    10. ')*' → logprob: -12.734768867492676

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013411965919658542
    2. ' ' → logprob: -6.626341342926025
    3. '   ' → logprob: -11.501340866088867
    4. '  ' → logprob: -12.751340866088867
    5. '    ' → logprob: -14.126340866088867
    6. '
' → logprob: -14.376340866088867
    7. '```' → logprob: -15.688840866088867
    8. '10' → logprob: -16.313840866088867
    9. '     ' → logprob: -16.313840866088867
    10. ' ' → logprob: -17.126340866088867

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004755943373311311
    2. ')%' → logprob: -8.000475883483887
    3. ' )' → logprob: -8.875475883483887
    4. '   ' → logprob: -15.625475883483887
    5. ')
' → logprob: -15.875475883483887
    6. ' ' → logprob: -17.25047492980957
    7. ')`' → logprob: -17.25047492980957
    8. '`)' → logprob: -17.50047492980957
    9. '1' → logprob: -17.62547492980957
    10. '))' → logprob: -18.37547492980957

Token 115: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0430237352848053
    2. '%' → logprob: -3.1680238246917725
    3. ' ' → logprob: -10.918024063110352
    4. ')' → logprob: -12.543024063110352
    5. ')%' → logprob: -13.668024063110352
    6. '   ' → logprob: -14.668024063110352
    7. ' %=' → logprob: -15.543024063110352
    8. '
' → logprob: -15.543024063110352
    9. ' ' → logprob: -15.543024063110352
    10. '  ' → logprob: -16.16802406311035

Token 116: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.6932030320167542
    2. 'MOD' → logprob: -0.6932030320167542
    3. '_MOD' → logprob: -10.56820297241211
    4. ' ' → logprob: -10.69320297241211
    5. '.MOD' → logprob: -12.44320297241211
    6. ' ' → logprob: -14.06820297241211
    7. '(M' → logprob: -14.81820297241211
    8. '   ' → logprob: -14.81820297241211
    9. 'MO' → logprob: -15.19320297241211
    10. '`' → logprob: -15.44320297241211

Token 117: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12589386105537415
    2. '<|end|>' → logprob: -2.7508938312530518
    3. 'def' → logprob: -3.6258938312530518
    4. '\n' → logprob: -4.000894069671631
    5. '```' → logprob: -5.875894069671631
    6. '#' → logprob: -6.625894069671631
    7. ' 
' → logprob: -6.750894069671631
    8. '

' → logprob: -7.000894069671631
    9. '\' → logprob: -7.250894069671631
    10. '' → logprob: -7.750894069671631

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14704453945159912
    2. '
' → logprob: -2.5220446586608887
    3. '<|end|>' → logprob: -3.6470446586608887
    4. '\' → logprob: -4.897044658660889
    5. '```' → logprob: -5.022044658660889
    6. '#' → logprob: -5.272044658660889
    7. '\n' → logprob: -5.522044658660889
    8. ' 
' → logprob: -6.522044658660889
    9. 'd' → logprob: -6.897044658660889
    10. ' ' → logprob: -7.022044658660889

Token 119: ' compute' (ID: 23864)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6158846020698547
    2. ' compute' → logprob: -0.8658846020698547
    3. ' main' → logprob: -5.240884780883789
    4. '_' → logprob: -5.240884780883789
    5. ' calculate' → logprob: -5.365884780883789
    6. ' _' → logprob: -5.365884780883789
    7. ' solve' → logprob: -5.490884780883789
    8. ' def' → logprob: -6.115884780883789
    9. ' calc' → logprob: -6.240884780883789
    10. ' combine' → logprob: -6.490884780883789

Token 120: '_fact' (ID: 111916)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.647660493850708
    2. '_inverse' → logprob: -1.147660493850708
    3. '_comb' → logprob: -3.022660493850708
    4. '_factor' → logprob: -3.272660493850708
    5. '_fact' → logprob: -3.897660493850708
    6. '_pow' → logprob: -4.397660255432129
    7. '_' → logprob: -4.522660255432129
    8. '_com' → logprob: -5.772660255432129
    9. '_fac' → logprob: -5.772660255432129
    10. '_power' → logprob: -6.147660255432129

Token 121: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.11801737546920776
    2. '_inverse' → logprob: -2.7430174350738525
    3. 'inv' → logprob: -3.1180174350738525
    4. 'inverse' → logprob: -7.118017196655273
    5. 'Inv' → logprob: -7.618017196655273
    6. 'INV' → logprob: -7.868017196655273
    7. '_INV' → logprob: -8.243017196655273
    8. '2' → logprob: -8.493017196655273
    9. 'Inverse' → logprob: -8.618017196655273
    10. '(inv' → logprob: -9.743017196655273

Token 122: '_U' (ID: 13856)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.0011746286181733012
    2. '(' → logprob: -6.751174449920654
    3. '```' → logprob: -14.126174926757812
    4. '_(' → logprob: -14.501174926757812
    5. '(_' → logprob: -14.501174926757812
    6. ' (' → logprob: -14.626174926757812
    7. '(User' → logprob: -14.876174926757812
    8. '(
' → logprob: -15.626174926757812
    9. '((' → logprob: -15.751174926757812
    10. '(`' → logprob: -15.751174926757812

Token 123: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.5859293341636658
    2. '(' → logprob: -0.8359293341636658
    3. '():' → logprob: -5.5859293937683105
    4. '_' → logprob: -5.5859293937683105
    5. '(_' → logprob: -6.8359293937683105
    6. '_(' → logprob: -7.4609293937683105
    7. '()' → logprob: -8.085928916931152
    8. '((' → logprob: -10.210928916931152
    9. '(_:' → logprob: -10.210928916931152
    10. '(_)' → logprob: -10.335928916931152

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.125019073486328
    3. '):' → logprob: -12.875019073486328
    4. '+' → logprob: -14.125019073486328
    5. '+,' → logprob: -14.750019073486328
    6. ',U' → logprob: -14.750019073486328
    7. ',
' → logprob: -15.375019073486328
    8. ')' → logprob: -16.875019073486328
    9. '‌,' → logprob: -16.875019073486328
    10. ' ' → logprob: -17.000019073486328

Token 125: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.07907848060131073
    2. 'MOD' → logprob: -2.579078435897827
    3. '_MOD' → logprob: -10.079078674316406
    4. 'fact' → logprob: -10.329078674316406
    5. ' fact' → logprob: -10.329078674316406
    6. '.MOD' → logprob: -10.454078674316406
    7. '<|end|>' → logprob: -10.829078674316406
    8. ')' → logprob: -11.079078674316406
    9. ' ' → logprob: -12.204078674316406
    10. 'def' → logprob: -12.704078674316406

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.500006675720215
    3. '):' → logprob: -13.000006675720215
    4. ',f' → logprob: -15.000006675720215
    5. '‌,' → logprob: -15.625006675720215
    6. ',
' → logprob: -15.875006675720215
    7. ')' → logprob: -16.00000762939453
    8. '_,' → logprob: -17.12500762939453
    9. ',

' → logprob: -17.50000762939453
    10. ',:' → logprob: -17.75000762939453

Token 127: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.42877650260925293
    2. 'fact' → logprob: -1.053776502609253
    3. ' fakt' → logprob: -10.678776741027832
    4. '_fact' → logprob: -10.928776741027832
    5. 'inv' → logprob: -11.303776741027832
    6. ' inv' → logprob: -12.303776741027832
    7. ')' → logprob: -12.553776741027832
    8. '.fact' → logprob: -12.803776741027832
    9. ' ' → logprob: -13.303776741027832
    10. 'factor' → logprob: -13.303776741027832

Token 128: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3897090554237366
    2. ',' → logprob: -1.1397089958190918
    3. '_' → logprob: -7.139708995819092
    4. '_inv' → logprob: -7.264708995819092
    5. ')' → logprob: -7.514708995819092
    6. '_,' → logprob: -7.889708995819092
    7. ' ):' → logprob: -9.01470947265625
    8. ' ,' → logprob: -9.26470947265625
    9. ',_' → logprob: -9.76470947265625
    10. '):
' → logprob: -10.26470947265625

Token 129: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.35023990273475647
    2. 'fact' → logprob: -1.225239872932434
    3. ' inv' → logprob: -6.7252397537231445
    4. 'inv' → logprob: -7.7252397537231445
    5. ' ' → logprob: -9.725239753723145
    6. '   ' → logprob: -10.725239753723145
    7. '_fact' → logprob: -10.850239753723145
    8. 'f' → logprob: -11.725239753723145
    9. ' fakt' → logprob: -12.100239753723145
    10. 'ifact' → logprob: -12.100239753723145

Token 130: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -5.526570384972729e-05
    2. '_' → logprob: -10.250055313110352
    3. 'inv' → logprob: -12.000055313110352
    4. '):' → logprob: -12.125055313110352
    5. '_in' → logprob: -13.000055313110352
    6. ')' → logprob: -13.000055313110352
    7. '_i' → logprob: -13.000055313110352
    8. '_INV' → logprob: -14.375055313110352
    9. ')_' → logprob: -15.125055313110352
    10. '_inverse' → logprob: -15.750055313110352

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009225384565070271
    2. ',' → logprob: -7.125922679901123
    3. ')' → logprob: -9.125922203063965
    4. '):
' → logprob: -12.250922203063965
    5. ' ):' → logprob: -13.125922203063965
    6. '_' → logprob: -13.875922203063965
    7. ':' → logprob: -14.750922203063965
    8. ']:' → logprob: -15.625922203063965
    9. '),' → logprob: -16.00092315673828
    10. '[]):' → logprob: -16.12592315673828

Token 132: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04619350656867027
    2. '   ' → logprob: -3.1711935997009277
    3. '():' → logprob: -6.421193599700928
    4. '):' → logprob: -7.046193599700928
    5. ':
' → logprob: -7.921193599700928
    6. ':def' → logprob: -8.92119312286377
    7. ',' → logprob: -9.29619312286377
    8. '):
' → logprob: -10.54619312286377
    9. '():
' → logprob: -10.92119312286377
    10. '(' → logprob: -11.17119312286377

Token 133: ' fact' (ID: 2840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6324703097343445
    2. 'fact' (adapté à ' fact') → logprob: -1.5074703693389893
    3. ' fact' → logprob: -1.5074703693389893
    4. ' for' → logprob: -4.25747013092041
    5. 'for' → logprob: -4.75747013092041
    6. 'def' → logprob: -6.13247013092041
    7. 'factor' → logprob: -8.88247013092041
    8. ' def' → logprob: -8.88247013092041
    9. '
' → logprob: -9.06997013092041
    10. 'import' → logprob: -9.81997013092041

Token 134: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.001163196051493287
    2. '[' → logprob: -7.626163005828857
    3. '_' → logprob: -7.626163005828857
    4. '_i' → logprob: -9.626163482666016
    5. '_in' → logprob: -9.751163482666016
    6. '_inverse' → logprob: -10.876163482666016
    7. '   ' → logprob: -11.251163482666016
    8. '[_' → logprob: -11.876163482666016
    9. '_INV' → logprob: -12.251163482666016
    10. '_inf' → logprob: -12.751163482666016

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.133198283147067e-05
    2. ' =' → logprob: -10.750051498413086
    3. '   ' → logprob: -11.625051498413086
    4. '=' → logprob: -11.875051498413086
    5. 'def' → logprob: -12.500051498413086
    6. '[-' → logprob: -12.625051498413086
    7. '[...]' → logprob: -13.625051498413086
    8. '```' → logprob: -13.750051498413086
    9. '[:]' → logprob: -13.875051498413086
    10. '=[' → logprob: -14.125051498413086

Token 136: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.025439618155360222
    2. '0' → logprob: -3.900439500808716
    3. '[' → logprob: -5.650439739227295
    4. '-' → logprob: -7.275439739227295
    5. ']' → logprob: -8.150439262390137
    6. '-U' → logprob: -8.650439262390137
    7. ' U' → logprob: -9.400439262390137
    8. ' ' → logprob: -10.025439262390137
    9. ')' → logprob: -10.525439262390137
    10. '	U' → logprob: -11.525439262390137

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033760786755010486
    2. ')' → logprob: -8.250337600708008
    3. ' ]' → logprob: -10.500337600708008
    4. '])' → logprob: -10.875337600708008
    5. ']=' → logprob: -11.000337600708008
    6. ')]' → logprob: -11.500337600708008
    7. ']
' → logprob: -13.125337600708008
    8. ' )' → logprob: -15.375337600708008
    9. '],' → logprob: -16.250337600708008
    10. ']

' → logprob: -16.250337600708008

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269347220659256
    2. ' =' → logprob: -2.126934766769409
    3. '[' → logprob: -13.376935005187988
    4. ']' → logprob: -14.501935005187988
    5. '=int' → logprob: -14.626935005187988
    6. '=}' → logprob: -15.001935005187988
    7. ')' → logprob: -15.126935005187988
    8. '=
' → logprob: -15.126935005187988
    9. ']=' → logprob: -15.251935005187988
    10. ' ' → logprob: -15.251935005187988

Token 139: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00438253628090024
    2. ' pow' → logprob: -5.504382610321045
    3. '(pow' → logprob: -8.629382133483887
    4. '1' → logprob: -9.004382133483887
    5. ' ' → logprob: -14.129382133483887
    6. '(' → logprob: -14.629382133483887
    7. '_pow' → logprob: -15.004382133483887
    8. '0' → logprob: -15.004382133483887
    9. '   ' → logprob: -15.629382133483887
    10. '.pow' → logprob: -16.879383087158203

Token 140: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47409430146217346
    2. '(f' → logprob: -0.9740942716598511
    3. '(
' → logprob: -11.47409439086914
    4. '(

' → logprob: -13.09909439086914
    5. ' (' → logprob: -13.72409439086914
    6. 'f' → logprob: -14.22409439086914
    7. '(`' → logprob: -14.34909439086914
    8. '(fid' → logprob: -14.97409439086914
    9. '((' → logprob: -15.34909439086914
    10. '(','' → logprob: -15.34909439086914

Token 141: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.001170460251159966
    2. '(act' → logprob: -7.001170635223389
    3. '(' → logprob: -8.75117015838623
    4. 'fact' → logprob: -9.75117015838623
    5. '[' → logprob: -11.12617015838623
    6. 'ac' → logprob: -11.87617015838623
    7. ')' → logprob: -12.12617015838623
    8. 'a' → logprob: -12.62617015838623
    9. '(f' → logprob: -13.37617015838623
    10. '(
' → logprob: -13.87617015838623

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.700132997939363e-05
    2. ',U' → logprob: -11.250017166137695
    3. '(U' → logprob: -14.250017166137695
    4. ',' → logprob: -14.375017166137695
    5. '[
' → logprob: -14.500017166137695
    6. '[-' → logprob: -14.500017166137695
    7. '```' → logprob: -14.500017166137695
    8. 'U' → logprob: -15.375017166137695
    9. ')' → logprob: -16.000017166137695
    10. '	U' → logprob: -16.125017166137695

Token 143: 'U' (ID: 52)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14290478825569153
    2. 'U' → logprob: -2.017904758453369
    3. '(U' → logprob: -8.642905235290527
    4. ',U' → logprob: -11.642905235290527
    5. '[-' → logprob: -11.767905235290527
    6. '	U' → logprob: -12.392905235290527
    7. '```' → logprob: -12.392905235290527
    8. ' U' → logprob: -12.392905235290527
    9. ']' → logprob: -12.517905235290527
    10. '-U' → logprob: -12.642905235290527

Token 144: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ' ,' → logprob: -10.250041007995605
    3. ')' → logprob: -13.250041007995605
    4. '),' → logprob: -13.500041007995605
    5. ',U' → logprob: -14.875041007995605
    6. '],' → logprob: -15.125041007995605
    7. ',
' → logprob: -15.625041007995605
    8. ' ' → logprob: -15.625041007995605
    9. ',

' → logprob: -15.750041007995605
    10. ',f' → logprob: -15.875041007995605

Token 145: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.26343899965286255
    2. ' MOD' → logprob: -1.5134389400482178
    3. '-' → logprob: -4.638439178466797
    4. '-M' → logprob: -6.638439178466797
    5. ' -' → logprob: -7.888439178466797
    6. '_MOD' → logprob: -10.013439178466797
    7. '   ' → logprob: -11.138439178466797
    8. '-mod' → logprob: -11.638439178466797
    9. '.MOD' → logprob: -11.888439178466797
    10. ' ' → logprob: -12.013439178466797

Token 146: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029601677670143545
    2. ' -' → logprob: -8.125295639038086
    3. '−' → logprob: -19.750295639038086
    4. '```' → logprob: -20.250295639038086
    5. '()-' → logprob: -20.750295639038086
    6. '-
' → logprob: -22.125295639038086
    7. ' ' → logprob: -22.500295639038086
    8. '–' → logprob: -22.750295639038086
    9. '"-' → logprob: -23.000295639038086
    10. ')-' → logprob: -23.375295639038086

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.125001907348633
    3. '
' → logprob: -14.750001907348633
    4. '-' → logprob: -14.750001907348633
    5. '```' → logprob: -15.250001907348633
    6. '

' → logprob: -16.937501907348633
    7. '' → logprob: -17.312501907348633
    8. '۲' → logprob: -17.375001907348633
    9. '２' → logprob: -18.562501907348633
    10. '
' → logprob: -18.625001907348633

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025183463003486395
    2. ')' → logprob: -6.377518177032471
    3. ' ,' → logprob: -7.127518177032471
    4. ' ' → logprob: -11.877518653869629
    5. ' )' → logprob: -13.252518653869629
    6. ',
' → logprob: -14.002518653869629
    7. '}' → logprob: -14.377518653869629
    8. '```' → logprob: -14.752518653869629
    9. '   ' → logprob: -15.002518653869629
    10. ',)' → logprob: -15.502518653869629

Token 149: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4288882315158844
    2. ' MOD' → logprob: -1.053888201713562
    3. '   ' → logprob: -9.303888320922852
    4. ')' → logprob: -9.428888320922852
    5. '_MOD' → logprob: -12.178888320922852
    6. ' ' → logprob: -12.553888320922852
    7. '.MOD' → logprob: -12.678888320922852
    8. ' )' → logprob: -13.553888320922852
    9. '```' → logprob: -13.678888320922852
    10. '    ' → logprob: -15.303888320922852

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -16.25000762939453
    4. ')

' → logprob: -17.50000762939453
    5. '}' → logprob: -17.87500762939453
    6. '),' → logprob: -18.25000762939453
    7. ')return' → logprob: -18.50000762939453
    8. '<|end|>' → logprob: -18.75000762939453
    9. ')}' → logprob: -18.87500762939453
    10. '))' → logprob: -18.87500762939453

Token 151: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03638941049575806
    2. ' for' → logprob: -3.6613893508911133
    3. 'for' → logprob: -4.786389350891113
    4. 'def' → logprob: -6.411389350891113
    5. ' def' → logprob: -10.661389350891113
    6. '	for' → logprob: -11.286389350891113
    7. ' ' → logprob: -11.911389350891113
    8. ')' → logprob: -12.661389350891113
    9. ',' → logprob: -13.536389350891113
    10. '.' → logprob: -13.661389350891113

Token 152: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21518266201019287
    2. ' compute' → logprob: -2.2151827812194824
    3. ' def' → logprob: -3.4651827812194824
    4. ' for' → logprob: -3.8401827812194824
    5. 'for' → logprob: -4.590182781219482
    6. 'def' → logprob: -4.715182781219482
    7. ' range' → logprob: -5.465182781219482
    8. '  ' → logprob: -6.465182781219482
    9. 'n' → logprob: -6.840182781219482
    10. 'compute' → logprob: -7.090182781219482

Token 153: '_two' (ID: 54305)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.0088838841766119
    2. '_factor' → logprob: -4.883883953094482
    3. '_f' → logprob: -7.633883953094482
    4. '_' → logprob: -8.383883476257324
    5. 'fact' → logprob: -8.633883476257324
    6. '_fac' → logprob: -8.758883476257324
    7. '_inv' → logprob: -9.383883476257324
    8. '_inverse' → logprob: -10.758883476257324
    9. '_rest' → logprob: -11.258883476257324
    10. '```' → logprob: -12.008883476257324

Token 154: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.1217360645532608
    2. '_inverse' → logprob: -2.4967360496520996
    3. '(U' → logprob: -3.7467360496520996
    4. '_U' → logprob: -5.3717360496521
    5. '_' → logprob: -6.2467360496521
    6. '_INV' → logprob: -6.7467360496521
    7. '(' → logprob: -8.246736526489258
    8. '(_' → logprob: -8.496736526489258
    9. '_in' → logprob: -9.121736526489258
    10. '```' → logprob: -9.371736526489258

Token 155: '_U' (ID: 13856)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.00044401636114344
    2. '(' → logprob: -7.750443935394287
    3. '(_' → logprob: -12.875444412231445
    4. '_U' → logprob: -12.875444412231445
    5. '```' → logprob: -13.125444412231445
    6. '_(' → logprob: -13.500444412231445
    7. ' (' → logprob: -13.625444412231445
    8. '_' → logprob: -13.750444412231445
    9. '()' → logprob: -15.250444412231445
    10. 'def' → logprob: -15.250444412231445

Token 156: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.0024762547109276056
    2. '(' → logprob: -6.002476215362549
    3. '(UI' → logprob: -16.37747573852539
    4. '(
' → logprob: -16.50247573852539
    5. '\(' → logprob: -16.62747573852539
    6. '(User' → logprob: -16.75247573852539
    7. '((' → logprob: -16.87747573852539
    8. ' (' → logprob: -16.87747573852539
    9. '(u' → logprob: -16.87747573852539
    10. '```' → logprob: -16.87747573852539

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.750004768371582
    3. 'def' → logprob: -14.000004768371582
    4. ')' → logprob: -14.500004768371582
    5. '‌,' → logprob: -14.750004768371582
    6. ',U' → logprob: -16.0000057220459
    7. ',
' → logprob: -16.1250057220459
    8. '<|end|>' → logprob: -16.3750057220459
    9. '‍,' → logprob: -17.0000057220459
    10. '_,' → logprob: -17.2500057220459

Token 158: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5759425163269043
    2. ' MOD' → logprob: -0.8259425163269043
    3. '_MOD' → logprob: -13.325942993164062
    4. '.MOD' → logprob: -13.700942993164062
    5. 'def' → logprob: -16.325942993164062
    6. 'M' → logprob: -17.200942993164062
    7. ' ' → logprob: -17.200942993164062
    8. 'mod' → logprob: -17.325942993164062
    9. ')' → logprob: -17.700942993164062
    10. '...' → logprob: -17.825942993164062

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',
' → logprob: -14.25000286102295
    4. ',f' → logprob: -15.75000286102295
    5. '   ' → logprob: -15.87500286102295
    6. ')' → logprob: -16.500003814697266
    7. 'def' → logprob: -16.875003814697266
    8. '‌,' → logprob: -16.875003814697266
    9. '`,' → logprob: -17.250003814697266
    10. ',t' → logprob: -17.750003814697266

Token 160: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.5759756565093994
    2. 'two' → logprob: -0.8259756565093994
    3. ' ' → logprob: -10.57597541809082
    4. '   ' → logprob: -12.20097541809082
    5. '(two' → logprob: -13.45097541809082
    6. 'tw' → logprob: -13.82597541809082
    7. '2' → logprob: -14.20097541809082
    8. '```' → logprob: -14.95097541809082
    9. '  ' → logprob: -15.20097541809082
    10. 'def' → logprob: -15.20097541809082

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001673061487963423
    2. ' ,' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.750166893005371
    4. '):' → logprob: -13.375166893005371
    5. ' ' → logprob: -13.875166893005371
    6. ',f' → logprob: -14.000166893005371
    7. ')' → logprob: -14.125166893005371
    8. ',int' → logprob: -15.375166893005371
    9. ',
' → logprob: -15.750166893005371
    10. ',t' → logprob: -15.750166893005371

Token 162: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.4742814004421234
    2. 'two' → logprob: -0.9742814302444458
    3. ' ' → logprob: -8.849281311035156
    4. '   ' → logprob: -9.974281311035156
    5. '2' → logprob: -13.224281311035156
    6. '(two' → logprob: -13.224281311035156
    7. ')' → logprob: -13.599281311035156
    8. '  ' → logprob: -13.599281311035156
    9. 'Two' → logprob: -13.849281311035156
    10. 'tw' → logprob: -13.849281311035156

Token 163: '_inv' (ID: 53427)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13415509462356567
    2. ')' → logprob: -2.384155035018921
    3. ']' → logprob: -4.3841552734375
    4. '[' → logprob: -5.2591552734375
    5. ' ,' → logprob: -5.5091552734375
    6. '])' → logprob: -5.6341552734375
    7. '_inv' → logprob: -5.6341552734375
    8. '],' → logprob: -7.2591552734375
    9. ',
' → logprob: -7.3841552734375
    10. '_,' → logprob: -7.7591552734375

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004182793782092631
    2. ')' → logprob: -8.500418663024902
    3. '):
' → logprob: -8.500418663024902
    4. ',' → logprob: -11.875418663024902
    5. '):

' → logprob: -13.500418663024902
    6. ' ):' → logprob: -13.625418663024902
    7. ':' → logprob: -14.750418663024902
    8. '):
' → logprob: -14.875418663024902
    9. ''):' → logprob: -14.875418663024902
    10. '   ' → logprob: -15.125418663024902

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005240872036665678
    2. ' two' → logprob: -5.6302409172058105
    3. 'two' → logprob: -6.8802409172058105
    4. ' for' → logprob: -8.505240440368652
    5. '	t' → logprob: -8.880240440368652
    6. ' ' → logprob: -8.880240440368652
    7. 'for' → logprob: -9.755240440368652
    8. '	for' → logprob: -10.880240440368652
    9. '(two' → logprob: -11.130240440368652
    10. '  ' → logprob: -11.505240440368652

Token 166: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' (adapté à ' two') → logprob: -0.07594460248947144
    2. ' two' → logprob: -2.700944662094116
    3. '   ' → logprob: -5.200944423675537
    4. ' ' → logprob: -7.825944423675537
    5. 'for' → logprob: -9.700944900512695
    6. ' for' → logprob: -12.075944900512695
    7. 'def' → logprob: -12.700944900512695
    8. '  ' → logprob: -13.075944900512695
    9. '(two' → logprob: -13.200944900512695
    10. '
' → logprob: -13.950944900512695

Token 167: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.003195185214281082
    2. '[' → logprob: -6.128195285797119
    3. '[_' → logprob: -7.253195285797119
    4. '[i' → logprob: -9.878194808959961
    5. '```' → logprob: -10.128194808959961
    6. '_INV' → logprob: -10.503194808959961
    7. '_i' → logprob: -10.753194808959961
    8. '\' → logprob: -10.878194808959961
    9. '   ' → logprob: -11.253194808959961
    10. '`' → logprob: -11.253194808959961

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002120038407156244
    2. '=' → logprob: -9.125211715698242
    3. '   ' → logprob: -10.125211715698242
    4. ' =' → logprob: -10.500211715698242
    5. '=[' → logprob: -11.625211715698242
    6. '```' → logprob: -12.250211715698242
    7. 'def' → logprob: -12.750211715698242
    8. ' [' → logprob: -12.750211715698242
    9. ' ' → logprob: -13.375211715698242
    10. ']' → logprob: -13.500211715698242

Token 169: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -6.253713218029588e-05
    2. '[' → logprob: -10.500062942504883
    3. ']' → logprob: -10.875062942504883
    4. ' U' → logprob: -11.625062942504883
    5. '   ' → logprob: -13.625062942504883
    6. ' ' → logprob: -13.625062942504883
    7. '0' → logprob: -14.000062942504883
    8. '-U' → logprob: -14.000062942504883
    9. '	U' → logprob: -14.125062942504883
    10. ')' → logprob: -14.625062942504883

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004909569397568703
    2. ' ]' → logprob: -8.25049114227295
    3. ')' → logprob: -8.87549114227295
    4. ']=' → logprob: -9.75049114227295
    5. '=' → logprob: -10.50049114227295
    6. '])' → logprob: -13.50049114227295
    7. ' =' → logprob: -13.87549114227295
    8. ')]' → logprob: -13.87549114227295
    9. ' )' → logprob: -14.50049114227295
    10. ' ' → logprob: -16.375490188598633

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. ' ' → logprob: -16.16022491455078
    4. ')' → logprob: -16.16022491455078
    5. '=}' → logprob: -16.91022491455078
    6. ')=' → logprob: -17.16022491455078
    7. '=

' → logprob: -17.28522491455078
    8. ' =
' → logprob: -17.53522491455078
    9. '＝' → logprob: -17.53522491455078
    10. ' =)' → logprob: -17.53522491455078

Token 172: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0019505366217345
    2. ' pow' → logprob: -6.251950740814209
    3. '(pow' → logprob: -10.75195026397705
    4. '1' → logprob: -15.12695026397705
    5. '.pow' → logprob: -16.501951217651367
    6. ' ' → logprob: -17.001951217651367
    7. '   ' → logprob: -17.126951217651367
    8. 'p' → logprob: -17.251951217651367
    9. 'pw' → logprob: -17.626951217651367
    10. '2' → logprob: -17.626951217651367

Token 173: '(two' (ID: 186841)
  Prédit: '(two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.0002334568416699767
    2. '(' → logprob: -8.37523365020752
    3. '(
' → logprob: -13.37523365020752
    4. 'two' → logprob: -13.87523365020752
    5. '(t' → logprob: -15.25023365020752
    6. '(the' → logprob: -16.875232696533203
    7. '(one' → logprob: -17.125232696533203
    8. '(

' → logprob: -18.000232696533203
    9. '_two' → logprob: -18.125232696533203
    10. '```' → logprob: -18.875232696533203

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4272752852994017e-05
    2. '[-' → logprob: -12.37502384185791
    3. 'two' → logprob: -12.50002384185791
    4. '[i' → logprob: -13.12502384185791
    5. '```' → logprob: -13.25002384185791
    6. '(U' → logprob: -13.50002384185791
    7. ' [' → logprob: -13.62502384185791
    8. '[I' → logprob: -13.75002384185791
    9. '[t' → logprob: -13.87502384185791
    10. '   ' → logprob: -13.87502384185791

Token 175: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0005294414004310966
    2. '-' → logprob: -8.250529289245605
    3. '[' → logprob: -8.500529289245605
    4. '-U' → logprob: -9.875529289245605
    5. ' U' → logprob: -12.500529289245605
    6. ' ' → logprob: -12.875529289245605
    7. ' -' → logprob: -13.125529289245605
    8. '_U' → logprob: -13.750529289245605
    9. ']' → logprob: -13.750529289245605
    10. '])' → logprob: -14.500529289245605

Token 176: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.2471589798224159e-05
    2. ']' → logprob: -11.750012397766113
    3. ' ],' → logprob: -12.375012397766113
    4. ',' → logprob: -15.875012397766113
    5. ''],' → logprob: -16.12501335144043
    6. ' ' → logprob: -16.62501335144043
    7. '],
' → logprob: -16.75001335144043
    8. '-' → logprob: -17.00001335144043
    9. '   ' → logprob: -18.12501335144043
    10. '},' → logprob: -19.12501335144043

Token 177: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.38692009449005127
    2. 'MOD' → logprob: -1.1369200944900513
    3. '   ' → logprob: -10.511919975280762
    4. ' ' → logprob: -11.511919975280762
    5. '.MOD' → logprob: -12.386919975280762
    6. '_MOD' → logprob: -12.511919975280762
    7. '  ' → logprob: -14.011919975280762
    8. ' -' → logprob: -14.261919975280762
    9. '-' → logprob: -14.636919975280762
    10. '-M' → logprob: -14.886919975280762

Token 178: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1517960956552997e-05
    2. ' -' → logprob: -11.375011444091797
    3. '()-' → logprob: -18.125011444091797
    4. ''-' → logprob: -19.500011444091797
    5. '```' → logprob: -19.875011444091797
    6. '}-' → logprob: -20.125011444091797
    7. ')-' → logprob: -20.125011444091797
    8. '-
' → logprob: -20.750011444091797
    9. '−' → logprob: -20.750011444091797
    10. '"-' → logprob: -20.875011444091797

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -11.625020027160645
    3. '-' → logprob: -12.062520027160645
    4. '

' → logprob: -14.187520027160645
    5. '```' → logprob: -14.187520027160645
    6. '
' → logprob: -14.500020027160645
    7. '7' → logprob: -14.562520027160645
    8. '   ' → logprob: -15.437520027160645
    9. '۲' → logprob: -15.437520027160645
    10. '' → logprob: -15.625020027160645

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. ' ,' → logprob: -10.750029563903809
    3. ')' → logprob: -11.875029563903809
    4. '   ' → logprob: -14.375029563903809
    5. ',
' → logprob: -15.875029563903809
    6. ' ' → logprob: -16.500028610229492
    7. '),' → logprob: -17.250028610229492
    8. '```' → logprob: -17.250028610229492
    9. '',' → logprob: -17.375028610229492
    10. '<|end|>' → logprob: -17.625028610229492

Token 181: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10020678490400314
    2. ' MOD' → logprob: -2.3502068519592285
    3. '_MOD' → logprob: -16.22520637512207
    4. ')' → logprob: -17.35020637512207
    5. '.MOD' → logprob: -17.85020637512207
    6. 'MO' → logprob: -19.22520637512207
    7. ' ' → logprob: -19.47520637512207
    8. 'mod' → logprob: -20.10020637512207
    9. 'M' → logprob: -20.35020637512207
    10. 'Mod' → logprob: -20.60020637512207

Token 182: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.25001335144043
    3. ')return' → logprob: -16.50001335144043
    4. ')

' → logprob: -16.62501335144043
    5. ' )' → logprob: -16.75001335144043
    6. '<|end|>' → logprob: -17.75001335144043
    7. '))' → logprob: -18.37501335144043
    8. '}' → logprob: -18.50001335144043
    9. ')#' → logprob: -18.50001335144043
    10. '   ' → logprob: -18.87501335144043

Token 183: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0838661938905716
    2. '   ' → logprob: -3.0838661193847656
    3. '\n' → logprob: -4.833866119384766
    4. ' 
' → logprob: -5.208866119384766
    5. '    
' → logprob: -5.333866119384766
    6. '  
' → logprob: -5.458866119384766
    7. '<|end|>' → logprob: -5.583866119384766
    8. 'def' → logprob: -5.583866119384766
    9. '\' → logprob: -6.208866119384766
    10. ' for' → logprob: -7.333866119384766

Token 184: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.007021303754299879
    2. ' main' → logprob: -6.507021427154541
    3. ' init' → logprob: -6.507021427154541
    4. 'compute' → logprob: -6.882021427154541
    5. ' initialize' → logprob: -7.507021427154541
    6. ' get' → logprob: -7.882021427154541
    7. ' ' → logprob: -8.132020950317383
    8. ' pre' → logprob: -8.257020950317383
    9. ' fill' → logprob: -8.257020950317383
    10. ' calculate' → logprob: -8.632020950317383

Token 185: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.018439870327711105
    2. '_factor' → logprob: -4.393439769744873
    3. '_two' → logprob: -5.768439769744873
    4. '_' → logprob: -7.018439769744873
    5. '_fac' → logprob: -7.768439769744873
    6. '_f' → logprob: -8.143440246582031
    7. '_inv' → logprob: -8.268440246582031
    8. '_array' → logprob: -9.268440246582031
    9. ''_' → logprob: -9.268440246582031
    10. '_diff' → logprob: -9.393440246582031

Token 186: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.000399925687815994
    2. '_inverse' → logprob: -8.000399589538574
    3. '_' → logprob: -10.375399589538574
    4. '_INV' → logprob: -11.125399589538574
    5. '_factor' → logprob: -12.750399589538574
    6. '_in' → logprob: -12.875399589538574
    7. '##_' → logprob: -13.375399589538574
    8. '_fact' → logprob: -13.375399589538574
    9. '_i' → logprob: -13.625399589538574
    10. '_rev' → logprob: -13.875399589538574

Token 187: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.003541740123182535
    2. '(' → logprob: -6.003541946411133
    3. '_' → logprob: -7.253541946411133
    4. '_(' → logprob: -8.628541946411133
    5. '(size' → logprob: -9.503541946411133
    6. '(f' → logprob: -10.753541946411133
    7. '(i' → logprob: -10.753541946411133
    8. '```' → logprob: -11.003541946411133
    9. '_U' → logprob: -11.753541946411133
    10. '():' → logprob: -12.503541946411133

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. ' ,' → logprob: -10.750045776367188
    3. ',U' → logprob: -11.250045776367188
    4. '):' → logprob: -13.000045776367188
    5. '+' → logprob: -13.375045776367188
    6. '‌,' → logprob: -13.500045776367188
    7. ',
' → logprob: -13.625045776367188
    8. '   ' → logprob: -14.000045776367188
    9. ',size' → logprob: -14.000045776367188
    10. '_,' → logprob: -14.250045776367188

Token 189: ' fact' (ID: 2840)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.5768946409225464
    2. 'MOD' → logprob: -0.8268946409225464
    3. 'fact' → logprob: -8.201894760131836
    4. '   ' → logprob: -8.326894760131836
    5. ' fact' → logprob: -8.451894760131836
    6. ' ' → logprob: -8.701894760131836
    7. 'def' → logprob: -10.451894760131836
    8. '_MOD' → logprob: -11.701894760131836
    9. '  ' → logprob: -12.701894760131836
    10. ' def' → logprob: -12.826894760131836

Token 190: '_inv' (ID: 53427)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015055041760206223
    2. '):' → logprob: -4.390055179595947
    3. '):
' → logprob: -6.140055179595947
    4. ',
' → logprob: -8.640054702758789
    5. '   ' → logprob: -9.765054702758789
    6. '_inv' → logprob: -10.640054702758789
    7. ',_' → logprob: -10.640054702758789
    8. ',i' → logprob: -10.765054702758789
    9. ')' → logprob: -11.140054702758789
    10. ':' → logprob: -11.390054702758789

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002826038980856538
    2. '):' → logprob: -5.87782621383667
    3. '):
' → logprob: -11.127825736999512
    4. ' ,' → logprob: -13.252825736999512
    5. '   ' → logprob: -13.252825736999512
    6. ')' → logprob: -14.127825736999512
    7. ',
' → logprob: -14.127825736999512
    8. 'def' → logprob: -15.252825736999512
    9. ' ):' → logprob: -15.252825736999512
    10. '):
' → logprob: -15.377825736999512

Token 192: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.027072172611951828
    2. ' MOD' → logprob: -3.6520721912384033
    3. 'fact' → logprob: -7.652071952819824
    4. '   ' → logprob: -8.652071952819824
    5. ')' → logprob: -10.027071952819824
    6. 'def' → logprob: -10.652071952819824
    7. ' fact' → logprob: -10.902071952819824
    8. ' ' → logprob: -11.277071952819824
    9. '_MOD' → logprob: -12.527071952819824
    10. 'mod' → logprob: -12.527071952819824

Token 193: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43193697929382324
    2. '):' → logprob: -1.0569369792938232
    3. '):
' → logprob: -5.806937217712402
    4. '   ' → logprob: -8.681937217712402
    5. ')' → logprob: -10.806937217712402
    6. '):
' → logprob: -11.181937217712402
    7. ' ):' → logprob: -12.181937217712402
    8. ',
' → logprob: -12.431937217712402
    9. ',i' → logprob: -13.056937217712402
    10. ' ,' → logprob: -13.306937217712402

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05791698023676872
    2. ' for' → logprob: -3.0579168796539307
    3. 'for' → logprob: -4.68291711807251
    4. '	for' → logprob: -10.682916641235352
    5. ')' → logprob: -12.307916641235352
    6. ',' → logprob: -12.682916641235352
    7. ':' → logprob: -13.682916641235352
    8. '```' → logprob: -14.182916641235352
    9. '):
' → logprob: -14.432916641235352
    10. 'def' → logprob: -14.557916641235352

Token 195: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.040481872856616974
    2. '   ' → logprob: -3.5404818058013916
    3. ' for' → logprob: -4.540482044219971
    4. '	for' → logprob: -12.290481567382812
    5. '```' → logprob: -14.040481567382812
    6. ' ' → logprob: -16.290481567382812
    7. '``' → logprob: -16.915481567382812
    8. 'def' → logprob: -17.165481567382812
    9. '  ' → logprob: -17.665481567382812
    10. ')' → logprob: -18.290481567382812

Token 196: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11295881122350693
    2. 'i' → logprob: -2.2379589080810547
    3. '   ' → logprob: -9.237958908081055
    4. ' ' → logprob: -10.987958908081055
    5. '	i' → logprob: -11.487958908081055
    6. '  ' → logprob: -12.862958908081055
    7. 'range' → logprob: -13.237958908081055
    8. '    ' → logprob: -13.487958908081055
    9. '`' → logprob: -13.862958908081055
    10. '(i' → logprob: -13.862958908081055

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03377662971615791
    2. 'in' → logprob: -3.4087765216827393
    3. '   ' → logprob: -9.53377628326416
    4. ' ' → logprob: -10.15877628326416
    5. '	in' → logprob: -12.03377628326416
    6. '```' → logprob: -12.90877628326416
    7. '  ' → logprob: -13.15877628326416
    8. 'U' → logprob: -13.40877628326416
    9. 'range' → logprob: -13.53377628326416
    10. 'In' → logprob: -14.03377628326416

Token 198: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31362366676330566
    2. 'range' → logprob: -1.3136236667633057
    3. ' reversed' → logprob: -8.438623428344727
    4. '   ' → logprob: -9.438623428344727
    5. ' ' → logprob: -10.688623428344727
    6. '(range' → logprob: -11.188623428344727
    7. ' U' → logprob: -11.563623428344727
    8. 'U' → logprob: -12.313623428344727
    9. '	range' → logprob: -12.313623428344727
    10. 're' → logprob: -12.688623428344727

Token 199: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.87501335144043
    3. 'U' → logprob: -13.12501335144043
    4. ' U' → logprob: -13.25001335144043
    5. '   ' → logprob: -13.37501335144043
    6. '	U' → logprob: -14.50001335144043
    7. ',U' → logprob: -15.37501335144043
    8. '=' → logprob: -16.00001335144043
    9. ',' → logprob: -16.00001335144043
    10. ' (' → logprob: -16.00001335144043

Token 200: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001379402237944305
    2. ',' → logprob: -7.126379489898682
    3. ' -' → logprob: -7.501379489898682
    4. ' ,' → logprob: -10.876379013061523
    5. ',-' → logprob: -13.251379013061523
    6. '   ' → logprob: -13.751379013061523
    7. ' ' → logprob: -14.376379013061523
    8. '-,' → logprob: -15.751379013061523
    9. '	' → logprob: -17.251379013061523
    10. '  ' → logprob: -17.626379013061523

Token 201: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6114763617515564
    2. '0' → logprob: -0.9864763617515564
    3. '-' → logprob: -3.111476421356201
    4. ' -' → logprob: -3.236476421356201
    5. '   ' → logprob: -8.111475944519043
    6. '  ' → logprob: -8.611475944519043
    7. '1' → logprob: -9.236475944519043
    8. '    ' → logprob: -9.986475944519043
    9. ' U' → logprob: -10.111475944519043
    10. ' i' → logprob: -11.861475944519043

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03866616636514664
    2. '-' → logprob: -3.288666248321533
    3. ' ' → logprob: -8.038665771484375
    4. ' -' → logprob: -8.288665771484375
    5. '1' → logprob: -9.913665771484375
    6. '
' → logprob: -14.788665771484375
    7. '   ' → logprob: -15.538665771484375
    8. 'def' → logprob: -15.913665771484375
    9. ')' → logprob: -16.788665771484375
    10. '  ' → logprob: -17.038665771484375

Token 203: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018585331737995148
    2. ' -' → logprob: -4.643585205078125
    3. ',' → logprob: -5.018585205078125
    4. ',-' → logprob: -6.143585205078125
    5. '   ' → logprob: -11.268585205078125
    6. ' ,-' → logprob: -11.893585205078125
    7. ' ,' → logprob: -12.268585205078125
    8. '):
' → logprob: -12.643585205078125
    9. '-,' → logprob: -14.643585205078125
    10. '```' → logprob: -14.768585205078125

Token 204: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10028398036956787
    2. ' -' → logprob: -2.3502840995788574
    3. '   ' → logprob: -9.6002836227417
    4. '  ' → logprob: -12.1002836227417
    5. ' ' → logprob: -12.7252836227417
    6. '-i' → logprob: -14.7252836227417
    7. '	' → logprob: -14.9752836227417
    8. '    ' → logprob: -15.7252836227417
    9. '```' → logprob: -16.975284576416016
    10. ',-' → logprob: -17.100284576416016

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00341903162188828
    2. '-' → logprob: -6.003418922424316
    3. ' -' → logprob: -7.003418922424316
    4. ' ' → logprob: -10.378418922424316
    5. '   ' → logprob: -13.253418922424316
    6. '  ' → logprob: -14.753418922424316
    7. '):
' → logprob: -15.003418922424316
    8. ')' → logprob: -15.503418922424316
    9. '```' → logprob: -15.878418922424316
    10. ',' → logprob: -17.253419876098633

Token 206: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04479023814201355
    2. '):' → logprob: -3.669790267944336
    3. '):
' → logprob: -4.294790267944336
    4. ' -' → logprob: -5.919790267944336
    5. ',-' → logprob: -6.669790267944336
    6. ',' → logprob: -7.794790267944336
    7. '   ' → logprob: -8.669790267944336
    8. '):-' → logprob: -9.669790267944336
    9. '):
' → logprob: -10.669790267944336
    10. ':' → logprob: -11.044790267944336

Token 207: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11023994535207748
    2. '-' → logprob: -2.6102399826049805
    3. ':' → logprob: -3.8602399826049805
    4. ' -' → logprob: -5.3602399826049805
    5. ' :' → logprob: -6.3602399826049805
    6. ' ' → logprob: -6.9852399826049805
    7. ' i' → logprob: -7.3602399826049805
    8. '    ' → logprob: -7.6102399826049805
    9. '       ' → logprob: -7.8602399826049805
    10. '):' → logprob: -8.86023998260498

Token 208: ' fact' (ID: 2840)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18526917695999146
    2. ' fact' → logprob: -2.0602691173553467
    3. 'fact' (adapté à ' fact') → logprob: -3.8102691173553467
    4. '   ' → logprob: -4.310269355773926
    5. 'i' → logprob: -5.185269355773926
    6. '       ' → logprob: -8.310269355773926
    7. '[i' → logprob: -9.435269355773926
    8. '(i' → logprob: -9.935269355773926
    9. '	i' → logprob: -11.060269355773926
    10. '    ' → logprob: -11.060269355773926

Token 209: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0006913475226610899
    2. '_i' → logprob: -8.000691413879395
    3. '[_' → logprob: -8.750691413879395
    4. '[i' → logprob: -9.500691413879395
    5. '   ' → logprob: -10.250691413879395
    6. '_in' → logprob: -10.625691413879395
    7. '```' → logprob: -11.375691413879395
    8. '_inverse' → logprob: -12.000691413879395
    9. '[' → logprob: -12.125691413879395
    10. '_INV' → logprob: -12.500691413879395

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.625011444091797
    3. '   ' → logprob: -14.250011444091797
    4. '\[' → logprob: -14.875011444091797
    5. '[I' → logprob: -15.000011444091797
    6. '
' → logprob: -15.500011444091797
    7. 'i' → logprob: -15.625011444091797
    8. 'def' → logprob: -15.875011444091797
    9. '[
' → logprob: -16.000011444091797
    10. ' [' → logprob: -16.125011444091797

Token 211: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002831864869222045
    2. ' -' → logprob: -5.877831935882568
    3. ']' → logprob: -11.12783145904541
    4. ')' → logprob: -11.62783145904541
    5. '-)' → logprob: -13.50283145904541
    6. '[' → logprob: -14.75283145904541
    7. '   ' → logprob: -15.00283145904541
    8. '[i' → logprob: -15.62783145904541
    9. '-=' → logprob: -15.62783145904541
    10. ']=' → logprob: -15.62783145904541

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.875001907348633
    3. ']' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. '
' → logprob: -16.375001907348633
    6. '```' → logprob: -17.312501907348633
    7. '2' → logprob: -17.625001907348633
    8. ']=' → logprob: -17.687501907348633
    9. '   ' → logprob: -17.750001907348633
    10. ')' → logprob: -17.875001907348633

Token 213: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3302786350250244
    2. ']' → logprob: -1.3302786350250244
    3. ' )' → logprob: -5.080278396606445
    4. ')=' → logprob: -5.080278396606445
    5. ']=' → logprob: -5.830278396606445
    6. '=' → logprob: -6.955278396606445
    7. ' ]' → logprob: -7.955278396606445
    8. ' =' → logprob: -9.705278396606445
    9. '])' → logprob: -9.705278396606445
    10. '   ' → logprob: -10.455278396606445

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812337875366211
    2. ' =' → logprob: -1.406233787536621
    3. ')=' → logprob: -11.406233787536621
    4. '*=' → logprob: -11.406233787536621
    5. ' *=' → logprob: -11.531233787536621
    6. '[' → logprob: -11.531233787536621
    7. ']=' → logprob: -12.031233787536621
    8. ')' → logprob: -12.281233787536621
    9. ']' → logprob: -12.281233787536621
    10. '"' → logprob: -12.781233787536621

Token 215: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22589024901390076
    2. '(f' → logprob: -1.6008902788162231
    3. '(' → logprob: -7.725890159606934
    4. 'fact' → logprob: -11.100890159606934
    5. '(int' → logprob: -12.225890159606934
    6. ' fact' → logprob: -12.475890159606934
    7. '(ans' → logprob: -12.725890159606934
    8. '(fid' → logprob: -13.475890159606934
    9. '(fun' → logprob: -13.600890159606934
    10. ' ' → logprob: -13.850890159606934

Token 216: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00023357603640761226
    2. ' fact' → logprob: -8.37523365020752
    3. '_fact' → logprob: -13.87523365020752
    4. 'factor' → logprob: -14.00023365020752
    5. '   ' → logprob: -14.50023365020752
    6. '.fact' → logprob: -14.62523365020752
    7. 'facts' → logprob: -15.87523365020752
    8. 'fac' → logprob: -16.750232696533203
    9. ' ' → logprob: -17.750232696533203
    10. 'Fact' → logprob: -17.750232696533203

Token 217: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.002376723103225231
    2. '[i' → logprob: -6.127376556396484
    3. 'inv' → logprob: -8.877376556396484
    4. 'i' → logprob: -11.502376556396484
    5. '_inf' → logprob: -11.877376556396484
    6. '_i' → logprob: -12.002376556396484
    7. '[' → logprob: -12.002376556396484
    8. '_INV' → logprob: -12.127376556396484
    9. '   ' → logprob: -12.627376556396484
    10. 'Inv' → logprob: -12.877376556396484

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.75001335144043
    3. 'i' → logprob: -12.37501335144043
    4. '[
' → logprob: -14.50001335144043
    5. ' i' → logprob: -16.50001335144043
    6. '
' → logprob: -16.87501335144043
    7. ' [' → logprob: -17.25001335144043
    8. '```' → logprob: -17.50001335144043
    9. '[I' → logprob: -17.50001335144043
    10. '   ' → logprob: -18.00001335144043

Token 219: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6624323129653931
    2. ']' → logprob: -0.7874323129653931
    3. '*' → logprob: -3.9124321937561035
    4. '[' → logprob: -5.6624321937561035
    5. '[i' → logprob: -5.7874321937561035
    6. '*i' → logprob: -6.2874321937561035
    7. ' *' → logprob: -7.4124321937561035
    8. ')*' → logprob: -9.662432670593262
    9. '   ' → logprob: -10.037432670593262
    10. ' ' → logprob: -10.287432670593262

Token 220: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004338877333793789
    2. ' i' → logprob: -7.750433921813965
    3. ')i' → logprob: -14.375433921813965
    4. '   ' → logprob: -14.500433921813965
    5. '	i' → logprob: -14.750433921813965
    6. '
' → logprob: -14.750433921813965
    7. '<|end|>' → logprob: -15.000433921813965
    8. ',i' → logprob: -15.375433921813965
    9. '(i' → logprob: -15.500433921813965
    10. ' ' → logprob: -16.12543296813965

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011677479778882116
    2. ' )' → logprob: -9.375116348266602
    3. ')%' → logprob: -10.375116348266602
    4. ')
' → logprob: -15.125116348266602
    5. '   ' → logprob: -15.375116348266602
    6. '	' → logprob: -16.8751163482666
    7. '%' → logprob: -17.5001163482666
    8. ')

' → logprob: -17.5001163482666
    9. ']' → logprob: -17.7501163482666
    10. ')//' → logprob: -18.1251163482666

Token 222: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1602327525615692
    2. ' %' → logprob: -1.9102327823638916
    3. ')' → logprob: -12.660232543945312
    4. '
' → logprob: -13.535232543945312
    5. ')%' → logprob: -13.910232543945312
    6. '%
' → logprob: -14.410232543945312
    7. ' %=' → logprob: -14.785232543945312
    8. '%x' → logprob: -15.285232543945312
    9. '%i' → logprob: -15.285232543945312
    10. '%=' → logprob: -15.410232543945312

Token 223: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2519405782222748
    2. ' MOD' → logprob: -1.5019406080245972
    3. '_MOD' → logprob: -11.501940727233887
    4. '.MOD' → logprob: -14.126940727233887
    5. ' ' → logprob: -15.376940727233887
    6. ' ' → logprob: -15.626940727233887
    7. '```' → logprob: -17.50193977355957
    8. '
' → logprob: -17.62693977355957
    9. ' (' → logprob: -17.75193977355957
    10. '(M' → logprob: -17.87693977355957

Token 224: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1367514431476593
    2. '<|end|>' → logprob: -2.636751413345337
    3. '
' → logprob: -3.261751413345337
    4. ')' → logprob: -4.636751651763916
    5. '```' → logprob: -6.261751651763916
    6. ' def' → logprob: -6.636751651763916
    7. '\' → logprob: -6.761751651763916
    8. '\n' → logprob: -6.761751651763916
    9. '[' → logprob: -7.386751651763916
    10. ' ' → logprob: -7.761751651763916

Token 226: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.0579725503921509
    2. 'main' → logprob: -1.3079725503921509
    3. 'comb' → logprob: -2.3079724311828613
    4. 'def' → logprob: -2.3079724311828613
    5. 'get' → logprob: -2.9329724311828613
    6. 'n' → logprob: -3.9329724311828613
    7. 'bin' → logprob: -3.9329724311828613
    8. 'pow' → logprob: -4.182972431182861
    9. 'mod' → logprob: -4.182972431182861
    10. 'combine' → logprob: -4.432972431182861

Token 227: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.27471691370010376
    2. '_factor' → logprob: -1.774716854095459
    3. '_fact' → logprob: -3.649716854095459
    4. '_comb' → logprob: -4.274716854095459
    5. '_' → logprob: -4.399716854095459
    6. '_inverse' → logprob: -5.899716854095459
    7. '_com' → logprob: -6.149716854095459
    8. '_pow' → logprob: -6.274716854095459
    9. '_fac' → logprob: -7.024716854095459
    10. '_double' → logprob: -7.149716854095459

Token 228: '_inv' (ID: 53427)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.05932042747735977
    2. '_inv' → logprob: -2.9343204498291016
    3. '(' → logprob: -6.059320449829102
    4. '_inverse' → logprob: -6.684320449829102
    5. '(_' → logprob: -7.934320449829102
    6. '_INV' → logprob: -8.559320449829102
    7. '_' → logprob: -9.059320449829102
    8. 'inv' → logprob: -9.934320449829102
    9. '```' → logprob: -10.559320449829102
    10. '_U' → logprob: -10.934320449829102

Token 229: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -4.537180211627856e-05
    2. '(' → logprob: -10.375045776367188
    3. '_U' → logprob: -11.625045776367188
    4. '(_' → logprob: -13.125045776367188
    5. '```' → logprob: -13.750045776367188
    6. ' (' → logprob: -14.250045776367188
    7. '_(' → logprob: -14.625045776367188
    8. '(V' → logprob: -15.875045776367188
    9. 'def' → logprob: -16.000045776367188
    10. '(T' → logprob: -16.250045776367188

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ',t' → logprob: -10.87502384185791
    3. ' ,' → logprob: -12.25002384185791
    4. 'two' → logprob: -16.250024795532227
    5. ',
' → logprob: -16.375024795532227
    6. '   ' → logprob: -17.875024795532227
    7. ' two' → logprob: -18.125024795532227
    8. '-' → logprob: -18.750024795532227
    9. ',T' → logprob: -18.750024795532227
    10. '(two' → logprob: -18.750024795532227

Token 231: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.4740920662879944
    2. 'two' → logprob: -0.9740920662879944
    3. '   ' → logprob: -11.474092483520508
    4. ' ' → logprob: -12.974092483520508
    5. '(two' → logprob: -13.724092483520508
    6. '2' → logprob: -15.099092483520508
    7. '  ' → logprob: -15.474092483520508
    8. 'def' → logprob: -15.724092483520508
    9. 'Two' → logprob: -16.474092483520508
    10. '
' → logprob: -16.599092483520508

Token 232: '_inv' (ID: 53427)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030139204114675522
    2. '_inv' → logprob: -3.530139207839966
    3. ' ,' → logprob: -8.655138969421387
    4. '   ' → logprob: -9.405138969421387
    5. '_,' → logprob: -10.030138969421387
    6. ',
' → logprob: -10.905138969421387
    7. 'inv' → logprob: -11.405138969421387
    8. ',int' → logprob: -11.780138969421387
    9. ',_' → logprob: -11.905138969421387
    10. 'def' → logprob: -12.030138969421387

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ',t' → logprob: -12.500017166137695
    4. 'def' → logprob: -13.625017166137695
    5. '   ' → logprob: -15.000017166137695
    6. ',
' → logprob: -15.250017166137695
    7. ',f' → logprob: -16.375017166137695
    8. 'two' → logprob: -17.125017166137695
    9. ' def' → logprob: -17.375017166137695
    10. '):' → logprob: -17.500017166137695

Token 234: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10051234811544418
    2. ' MOD' → logprob: -2.3505122661590576
    3. '   ' → logprob: -9.100512504577637
    4. ' ' → logprob: -9.475512504577637
    5. ' two' → logprob: -10.100512504577637
    6. '0' → logprob: -11.100512504577637
    7. 'fact' → logprob: -11.475512504577637
    8. ' range' → logprob: -11.725512504577637
    9. ' fact' → logprob: -11.725512504577637
    10. '1' → logprob: -12.225512504577637

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47414854168891907
    2. '):
' → logprob: -0.9741485118865967
    3. '):
' → logprob: -10.099148750305176
    4. '   ' → logprob: -11.099148750305176
    5. ',' → logprob: -12.224148750305176
    6. ')' → logprob: -12.474148750305176
    7. ':' → logprob: -12.849148750305176
    8. 'def' → logprob: -13.224148750305176
    9. '):

' → logprob: -13.849148750305176
    10. ' ):' → logprob: -14.724148750305176

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6210752725601196
    2. 'for' → logprob: -0.8710752725601196
    3. ' for' → logprob: -3.12107515335083
    4. '	for' → logprob: -10.746075630187988
    5. 'def' → logprob: -13.871075630187988
    6. '```' → logprob: -16.496074676513672
    7. '   ' → logprob: -18.246074676513672
    8. ' ' → logprob: -18.246074676513672
    9. '  ' → logprob: -18.996074676513672
    10. '       ' → logprob: -19.121074676513672

Token 237: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.848420551046729e-05
    2. ' for' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.6250581741333
    4. ' ' → logprob: -19.250059127807617
    5. '	for' → logprob: -21.125059127807617
    6. 'def' → logprob: -22.000059127807617
    7. '
' → logprob: -22.750059127807617
    8. '```' → logprob: -23.750059127807617
    9. '  ' → logprob: -24.000059127807617
    10. '`' → logprob: -25.250059127807617

Token 238: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014244645833969
    2. 'i' → logprob: -1.701424479484558
    3. '   ' → logprob: -13.076424598693848
    4. ' ' → logprob: -13.451424598693848
    5. '	i' → logprob: -13.451424598693848
    6. 'I' → logprob: -13.576424598693848
    7. 'range' → logprob: -14.201424598693848
    8. '(i' → logprob: -14.326424598693848
    9. 'in' → logprob: -14.701424598693848
    10. '  ' → logprob: -14.701424598693848

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08899280428886414
    2. 'in' → logprob: -2.4639928340911865
    3. '   ' → logprob: -10.713993072509766
    4. ' ' → logprob: -11.838993072509766
    5. '=' → logprob: -11.963993072509766
    6. 'n' → logprob: -11.963993072509766
    7. 'range' → logprob: -13.338993072509766
    8. ',' → logprob: -13.463993072509766
    9. '	in' → logprob: -13.463993072509766
    10. '  ' → logprob: -13.963993072509766

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20163309574127197
    2. ' range' → logprob: -1.701633095741272
    3. '(range' → logprob: -8.45163345336914
    4. '(U' → logprob: -12.07663345336914
    5. 'U' → logprob: -16.07663345336914
    6. ' ' → logprob: -16.32663345336914
    7. ' in' → logprob: -16.70163345336914
    8. '(' → logprob: -16.95163345336914
    9. 'Range' → logprob: -17.07663345336914
    10. 'in' → logprob: -17.07663345336914

Token 241: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.00014096579980105162
    2. '(' → logprob: -8.875141143798828
    3. 'U' → logprob: -14.125141143798828
    4. '(two' → logprob: -16.625141143798828
    5. '(u' → logprob: -16.750141143798828
    6. ',U' → logprob: -17.250141143798828
    7. '((' → logprob: -17.875141143798828
    8. '	U' → logprob: -17.875141143798828
    9. '1' → logprob: -18.250141143798828
    10. '(T' → logprob: -18.250141143798828

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47432073950767517
    2. '-' → logprob: -0.9743207693099976
    3. ' -' → logprob: -8.724320411682129
    4. ' ,' → logprob: -9.474320411682129
    5. '-,' → logprob: -13.349320411682129
    6. '   ' → logprob: -13.974320411682129
    7. ',-' → logprob: -14.224320411682129
    8. ' ' → logprob: -14.474320411682129
    9. '1' → logprob: -15.224320411682129
    10. '0' → logprob: -16.224321365356445

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023402128368616104
    2. ' ' → logprob: -3.773402214050293
    3. '1' → logprob: -8.773402214050293
    4. '   ' → logprob: -13.648402214050293
    5. '  ' → logprob: -16.398401260375977
    6. '    
' → logprob: -16.460901260375977
    7. '
' → logprob: -16.648401260375977
    8. ' -' → logprob: -16.960901260375977
    9. '    ' → logprob: -16.960901260375977
    10. ',' → logprob: -17.085901260375977

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -14.000017166137695
    4. '   ' → logprob: -17.125017166137695
    5. '
' → logprob: -17.875017166137695
    6. '-' → logprob: -18.937517166137695
    7. '```' → logprob: -19.062517166137695
    8. '  ' → logprob: -19.375017166137695
    9. '۰' → logprob: -19.625017166137695
    10. ',' → logprob: -19.812517166137695

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017433916218578815
    2. '-' → logprob: -8.750174522399902
    3. ',-' → logprob: -11.750174522399902
    4. ' ,' → logprob: -12.000174522399902
    5. '   ' → logprob: -14.250174522399902
    6. ' -' → logprob: -14.500174522399902
    7. '-,' → logprob: -14.625174522399902
    8. ',
' → logprob: -15.375174522399902
    9. ' ,-' → logprob: -17.000173568725586
    10. ',i' → logprob: -17.875173568725586

Token 246: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12991660833358765
    2. ' -' → logprob: -2.1299166679382324
    3. 'i' → logprob: -6.504916667938232
    4. '   ' → logprob: -6.629916667938232
    5. '-i' → logprob: -10.004916191101074
    6. ' i' → logprob: -10.129916191101074
    7. '  ' → logprob: -10.129916191101074
    8. ' ' → logprob: -11.004916191101074
    9. '0' → logprob: -11.629916191101074
    10. '    ' → logprob: -11.754916191101074

Token 247: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003675133048091084
    2. '1' → logprob: -8.500367164611816
    3. ' -' → logprob: -8.750367164611816
    4. '   ' → logprob: -12.625367164611816
    5. '
' → logprob: -14.375367164611816
    6. ')' → logprob: -14.625367164611816
    7. '```' → logprob: -14.750367164611816
    8. ' ' → logprob: -15.250367164611816
    9. '  ' → logprob: -15.750367164611816
    10. '-
' → logprob: -16.000368118286133

Token 248: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9425197839736938
    2. ',' → logprob: -1.3175197839736938
    3. '):
' → logprob: -1.8175197839736938
    4. '):' → logprob: -1.9425197839736938
    5. ':' → logprob: -3.5675196647644043
    6. '   ' → logprob: -5.317519664764404
    7. ':
' → logprob: -6.567519664764404
    8. ' -' → logprob: -7.317519664764404
    9. ',
' → logprob: -7.817519664764404
    10. ',-' → logprob: -7.817519664764404

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2528437077999115
    2. ' two' → logprob: -2.0028436183929443
    3. 'two' → logprob: -2.6278436183929443
    4. '   ' → logprob: -4.127843856811523
    5. '(two' → logprob: -9.627843856811523
    6. ' ' → logprob: -11.627843856811523
    7. '.two' → logprob: -11.877843856811523
    8. '	   ' → logprob: -12.752843856811523
    9. '    ' → logprob: -12.877843856811523
    10. '
' → logprob: -13.002843856811523

Token 250: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.47470906376838684
    2. 'two' (adapté à ' two') → logprob: -0.9747090339660645
    3. '   ' → logprob: -7.4747090339660645
    4. '       ' → logprob: -10.349709510803223
    5. '(two' → logprob: -11.099709510803223
    6. ' ' → logprob: -11.849709510803223
    7. '.two' → logprob: -12.724709510803223
    8. '_two' → logprob: -13.224709510803223
    9. '  ' → logprob: -13.224709510803223
    10. '
' → logprob: -13.849709510803223

Token 251: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0007193420315161347
    2. '[i' → logprob: -7.6257195472717285
    3. '_i' → logprob: -9.00071907043457
    4. 'inv' → logprob: -10.37571907043457
    5. '_in' → logprob: -10.50071907043457
    6. '[_' → logprob: -10.75071907043457
    7. '```' → logprob: -12.00071907043457
    8. 'i' → logprob: -12.25071907043457
    9. '[' → logprob: -12.87571907043457
    10. '   ' → logprob: -13.50071907043457

Token 252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[I' → logprob: -12.625006675720215
    3. '[' → logprob: -13.000006675720215
    4. '
' → logprob: -15.000006675720215
    5. ' [' → logprob: -15.125006675720215
    6. '   ' → logprob: -15.250006675720215
    7. '```' → logprob: -16.37500762939453
    8. '[
' → logprob: -16.37500762939453
    9. '[int' → logprob: -16.75000762939453
    10. 'i' → logprob: -16.87500762939453

Token 253: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022034284193068743
    2. '[i' → logprob: -6.502203464508057
    3. '[' → logprob: -7.377203464508057
    4. ' -' → logprob: -9.877202987670898
    5. ']' → logprob: -11.877202987670898
    6. '[-' → logprob: -12.377202987670898
    7. '-=' → logprob: -12.752202987670898
    8. ']-' → logprob: -13.252202987670898
    9. 'i' → logprob: -13.252202987670898
    10. '-i' → logprob: -13.377202987670898

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '```' → logprob: -15.750001907348633
    4. ']' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '0' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '{' → logprob: -17.562501907348633
    9. '-' → logprob: -17.812501907348633
    10. '１' → logprob: -18.062501907348633

Token 255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9125900268554688
    2. '=' → logprob: -1.1625900268554688
    3. ')' → logprob: -1.2875900268554688
    4. ' =' → logprob: -4.912590026855469
    5. ']=' → logprob: -6.412590026855469
    6. ')=' → logprob: -7.037590026855469
    7. ']=(' → logprob: -11.912590026855469
    8. ' )' → logprob: -12.037590026855469
    9. ')]' → logprob: -12.162590026855469
    10. '   ' → logprob: -12.162590026855469

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476016292348504
    2. ' =' → logprob: -6.002476215362549
    3. ')=' → logprob: -15.62747573852539
    4. ')' → logprob: -15.75247573852539
    5. '=
' → logprob: -16.50247573852539
    6. '=

' → logprob: -17.37747573852539
    7. '=(' → logprob: -17.62747573852539
    8. ']=' → logprob: -17.75247573852539
    9. ']' → logprob: -18.12747573852539
    10. '＝' → logprob: -19.50247573852539

Token 257: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22097766399383545
    2. '(two' → logprob: -1.7209776639938354
    3. '(t' → logprob: -3.970977783203125
    4. '(' → logprob: -7.595977783203125
    5. '(one' → logprob: -12.095977783203125
    6. ' ' → logprob: -12.095977783203125
    7. '(the' → logprob: -13.595977783203125
    8. '(T' → logprob: -14.095977783203125
    9. '(int' → logprob: -14.220977783203125
    10. '(to' → logprob: -14.345977783203125

Token 258: 'two' (ID: 38397)
  Prédit: 'two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.008050885051488876
    2. '(two' → logprob: -5.008050918579102
    3. ' two' → logprob: -6.633050918579102
    4. '   ' → logprob: -12.508050918579102
    5. 'tw' → logprob: -12.633050918579102
    6. '2' → logprob: -12.633050918579102
    7. '(t' → logprob: -12.758050918579102
    8. '(' → logprob: -12.758050918579102
    9. '  ' → logprob: -14.758050918579102
    10. '.two' → logprob: -14.883050918579102

Token 259: '_inv' (ID: 53427)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.070343516767025
    2. '_inv' → logprob: -2.695343494415283
    3. 'inv' → logprob: -8.820343971252441
    4. 'Inv' → logprob: -9.695343971252441
    5. 'i' → logprob: -10.070343971252441
    6. '
' → logprob: -10.195343971252441
    7. '[' → logprob: -10.320343971252441
    8. '[
' → logprob: -10.320343971252441
    9. ']' → logprob: -10.945343971252441
    10. '_i' → logprob: -11.820343971252441

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.03521392197581e-05
    2. '[' → logprob: -10.875030517578125
    3. 'i' → logprob: -11.625030517578125
    4. '[
' → logprob: -13.875030517578125
    5. ']' → logprob: -14.875030517578125
    6. '
' → logprob: -15.000030517578125
    7. '```' → logprob: -15.000030517578125
    8. '   ' → logprob: -15.875030517578125
    9. ' [' → logprob: -16.375030517578125
    10. '[I' → logprob: -16.875030517578125

Token 261: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001935065840370953
    2. '*i' → logprob: -6.251935005187988
    3. ' *' → logprob: -12.626935005187988
    4. '*object' → logprob: -14.126935005187988
    5. '**' → logprob: -14.376935005187988
    6. ']*' → logprob: -14.876935005187988
    7. '*np' → logprob: -15.126935005187988
    8. '*
' → logprob: -15.626935005187988
    9. '*self' → logprob: -15.626935005187988
    10. '*pi' → logprob: -16.001935958862305

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. 'i' → logprob: -16.625017166137695
    5. '
' → logprob: -16.750017166137695
    6. '(' → logprob: -17.875017166137695
    7. '1' → logprob: -17.875017166137695
    8. '  ' → logprob: -18.500017166137695
    9. '    ' → logprob: -19.375017166137695
    10. '\
' → logprob: -19.812517166137695

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. ')%' → logprob: -11.000032424926758
    3. ' )' → logprob: -11.125032424926758
    4. '   ' → logprob: -15.000032424926758
    5. ')
' → logprob: -15.000032424926758
    6. '%' → logprob: -16.875032424926758
    7. ')

' → logprob: -17.125032424926758
    8. ')`' → logprob: -17.250032424926758
    9. '       ' → logprob: -17.875032424926758
    10. '`)' → logprob: -18.125032424926758

Token 264: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31331032514572144
    2. ' %' → logprob: -1.3133103847503662
    3. ' ' → logprob: -10.563310623168945
    4. ')' → logprob: -11.688310623168945
    5. ')%' → logprob: -12.188310623168945
    6. '%i' → logprob: -13.063310623168945
    7. ' ' → logprob: -13.563310623168945
    8. '`' → logprob: -14.313310623168945
    9. '%c' → logprob: -14.313310623168945
    10. '
' → logprob: -14.438310623168945

Token 265: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007104054093360901
    2. ' MOD' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.750710487365723
    4. '_MOD' → logprob: -15.875710487365723
    5. '.MOD' → logprob: -16.500709533691406
    6. ' ' → logprob: -17.750709533691406
    7. '
' → logprob: -18.750709533691406
    8. '(' → logprob: -19.125709533691406
    9. '  ' → logprob: -19.250709533691406
    10. 'MO' → logprob: -19.500709533691406

Token 266: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1548386812210083
    2. 'def' → logprob: -1.5298386812210083
    3. '<|end|>' → logprob: -1.5298386812210083
    4. '\n' → logprob: -1.9048386812210083
    5. '```' → logprob: -2.7798385620117188
    6. '\' → logprob: -3.9048385620117188
    7. '#' → logprob: -5.279838562011719
    8. ')' → logprob: -5.779838562011719
    9. '

' → logprob: -6.404838562011719
    10. '' → logprob: -6.404838562011719

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16142404079437256
    2. ')' → logprob: -2.161424160003662
    3. '#' → logprob: -3.911424160003662
    4. '```' → logprob: -5.036424160003662
    5. '(' → logprob: -6.036424160003662
    6. '<|end|>' → logprob: -6.786424160003662
    7. '   ' → logprob: -7.661424160003662
    8. ':' → logprob: -7.786424160003662
    9. 'n' → logprob: -8.036423683166504
    10. 'U' → logprob: -8.036423683166504

Token 268: ' prepare' (ID: 13708)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6788501739501953
    2. ' main' → logprob: -0.9288501739501953
    3. 'pre' → logprob: -3.4288501739501953
    4. ' pre' → logprob: -3.6788501739501953
    5. 'prepare' → logprob: -4.303850173950195
    6. 'initialize' → logprob: -4.803850173950195
    7. ' prepare' → logprob: -5.428850173950195
    8. ' initialize' → logprob: -6.053850173950195
    9. 'init' → logprob: -6.428850173950195
    10. 'calculate' → logprob: -6.428850173950195

Token 269: '_pre' (ID: 18599)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8065813779830933
    2. '_arrays' → logprob: -0.8065813779830933
    3. '()' → logprob: -2.681581497192383
    4. '_(' → logprob: -3.931581497192383
    5. '_array' → logprob: -4.681581497192383
    6. '(' → logprob: -6.556581497192383
    7. '_data' → logprob: -6.556581497192383
    8. '(U' → logprob: -7.056581497192383
    9. '_values' → logprob: -7.056581497192383
    10. '_U' → logprob: -7.556581497192383

Token 270: 'com' (ID: 639)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.1137353777885437
    2. 'fix' → logprob: -2.7387354373931885
    3. 'comput' → logprob: -4.488735198974609
    4. 'f' → logprob: -4.613735198974609
    5. 'pare' → logprob: -4.738735198974609
    6. 'd' → logprob: -5.613735198974609
    7. 'computed' → logprob: -6.238735198974609
    8. 'c' → logprob: -6.363735198974609
    9. 'process' → logprob: -6.613735198974609
    10. 'com' → logprob: -6.613735198974609

Token 271: 'putation' (ID: 47913)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.043240223079919815
    2. 'are' → logprob: -4.668240070343018
    3. 'putation' → logprob: -4.668240070343018
    4. 'put' → logprob: -5.293240070343018
    5. 'alculate' → logprob: -6.043240070343018
    6. 'al' → logprob: -6.293240070343018
    7. '```' → logprob: -6.418240070343018
    8. 'ute' → logprob: -6.543240070343018
    9. 'compute' → logprob: -6.543240070343018
    10. 'c' → logprob: -7.043240070343018

Token 272: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0023173687513917685
    2. '(U' → logprob: -6.127317428588867
    3. '(' → logprob: -9.627317428588867
    4. '():
' → logprob: -10.127317428588867
    5. ' ():' → logprob: -10.752317428588867
    6. '()' → logprob: -13.252317428588867
    7. '_' → logprob: -14.127317428588867
    8. '(size' → logprob: -14.502317428588867
    9. '(:' → logprob: -14.627317428588867
    10. '(_' → logprob: -15.252317428588867

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.967624019831419e-05
    2. '(' → logprob: -11.125060081481934
    3. '```' → logprob: -11.625060081481934
    4. '
' → logprob: -12.000060081481934
    5. '()' → logprob: -12.000060081481934
    6. '    
' → logprob: -12.125060081481934
    7. '(U' → logprob: -12.375060081481934
    8. '	U' → logprob: -12.625060081481934
    9. ':' → logprob: -13.125060081481934
    10. '(
' → logprob: -13.500060081481934

Token 274: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' (adapté à ' U') → logprob: -0.5131638646125793
    2. ' U' → logprob: -1.0131638050079346
    3. '   ' → logprob: -3.2631638050079346
    4. '	U' → logprob: -10.013163566589355
    5. ' ' → logprob: -11.138163566589355
    6. '_U' → logprob: -13.263163566589355
    7. '
' → logprob: -13.513163566589355
    8. '  ' → logprob: -13.763163566589355
    9. '```' → logprob: -14.138163566589355
    10. '    ' → logprob: -15.013163566589355

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01822427660226822
    2. '=' → logprob: -4.018224239349365
    3. ',' → logprob: -9.518224716186523
    4. '   ' → logprob: -14.393224716186523
    5. '()' → logprob: -15.393224716186523
    6. ' ,' → logprob: -16.768224716186523
    7. ':' → logprob: -17.768224716186523
    8. '  ' → logprob: -17.893224716186523
    9. ' ' → logprob: -17.893224716186523
    10. '＝' → logprob: -18.018224716186523

Token 276: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0009115827269852161
    2. ' get' → logprob: -7.000911712646484
    3. '2' → logprob: -16.250911712646484
    4. '(get' → logprob: -19.250911712646484
    5. '10' → logprob: -20.000911712646484
    6. '100' → logprob: -20.125911712646484
    7. '   ' → logprob: -20.125911712646484
    8. '	get' → logprob: -20.625911712646484
    9. ' ' → logprob: -21.250911712646484
    10. '20' → logprob: -21.250911712646484

Token 277: '_U' (ID: 13856)
  Prédit: '_U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -2.868328920158092e-05
    2. '_UN' → logprob: -11.500028610229492
    3. '_' → logprob: -11.625028610229492
    4. '_UID' → logprob: -12.875028610229492
    5. '_UL' → logprob: -13.000028610229492
    6. '_UP' → logprob: -13.500028610229492
    7. ' _' → logprob: -14.125028610229492
    8. '_US' → logprob: -14.125028610229492
    9. '"_' → logprob: -15.250028610229492
    10. '_UI' → logprob: -15.500028610229492

Token 278: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27278536558151245
    2. '
' → logprob: -1.6477854251861572
    3. '()' → logprob: -3.5227854251861572
    4. '()
' → logprob: -4.647785186767578
    5. '    
' → logprob: -5.147785186767578
    6. ',' → logprob: -8.272785186767578
    7. '```' → logprob: -8.522785186767578
    8. '
' → logprob: -8.772785186767578
    9. ' 
' → logprob: -8.897785186767578
    10. '  
' → logprob: -9.272785186767578

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032818098552525043
    2. 'MOD' → logprob: -5.753281593322754
    3. ' MOD' → logprob: -9.378281593322754
    4. '_MOD' → logprob: -12.503281593322754
    5. '```' → logprob: -12.628281593322754
    6. '    
' → logprob: -12.628281593322754
    7. '  ' → logprob: -13.003281593322754
    8. '    ' → logprob: -13.378281593322754
    9. ' ' → logprob: -13.503281593322754
    10. '	M' → logprob: -13.878281593322754

Token 280: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' (adapté à ' MOD') → logprob: -7.584239938296378e-06
    2. '   ' → logprob: -12.375007629394531
    3. ' MOD' → logprob: -12.625007629394531
    4. ' ' → logprob: -18.00000762939453
    5. '
' → logprob: -18.75000762939453
    6. 'MO' → logprob: -19.00000762939453
    7. '.MOD' → logprob: -19.62500762939453
    8. '_MOD' → logprob: -19.87500762939453
    9. '    
' → logprob: -19.87500762939453
    10. 'MODE' → logprob: -20.00000762939453

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141859352588654
    2. '=' → logprob: -1.7014186382293701
    3. ',' → logprob: -12.95141887664795
    4. '   ' → logprob: -13.70141887664795
    5. '()' → logprob: -14.07641887664795
    6. ' =
' → logprob: -15.45141887664795
    7. '_' → logprob: -15.45141887664795
    8. ')' → logprob: -15.45141887664795
    9. '(' → logprob: -15.95141887664795
    10. '	' → logprob: -16.701417922973633

Token 282: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3134649097919464
    2. 'get' → logprob: -1.313464879989624
    3. '10' → logprob: -8.563465118408203
    4. ' ' → logprob: -11.313465118408203
    5. '	get' → logprob: -17.938465118408203
    6. '(get' → logprob: -18.063465118408203
    7. '=get' → logprob: -18.313465118408203
    8. '_get' → logprob: -19.313465118408203
    9. '.get' → logprob: -20.063465118408203
    10. '   ' → logprob: -20.563465118408203

Token 283: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -4.320199877838604e-07
    2. 'MOD' → logprob: -15.5
    3. '_MODE' → logprob: -16.875
    4. '_Mod' → logprob: -17.625
    5. '_mod' → logprob: -18.125
    6. '.MOD' → logprob: -18.25
    7. '"_' → logprob: -18.375
    8. ' _' → logprob: -18.5
    9. ''_' → logprob: -18.875
    10. '._' → logprob: -19.125

Token 284: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6552972197532654
    2. '   ' → logprob: -0.7802972197532654
    3. 'fact' → logprob: -3.90529727935791
    4. '    
' → logprob: -6.65529727935791
    5. ' fact' → logprob: -7.53029727935791
    6. '```' → logprob: -8.15529727935791
    7. '
' → logprob: -9.15529727935791
    8. '

' → logprob: -10.65529727935791
    9. '  
' → logprob: -11.15529727935791
    10. '   
' → logprob: -11.65529727935791

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009313058108091354
    2. 'fact' → logprob: -4.759313106536865
    3. ' fact' → logprob: -7.634313106536865
    4. '
' → logprob: -9.009312629699707
    5. '    
' → logprob: -10.009312629699707
    6. '```' → logprob: -10.259312629699707
    7. '_fact' → logprob: -12.634312629699707
    8. '   ' → logprob: -12.759312629699707
    9. 'facts' → logprob: -14.134312629699707
    10. '	f' → logprob: -14.259312629699707

Token 286: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -1.6240566083070007e-06
    2. ' fact' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.125001907348633
    4. 'facts' → logprob: -18.125001907348633
    5. '
' → logprob: -18.250001907348633
    6. '_fact' → logprob: -19.625001907348633
    7. '```' → logprob: -19.750001907348633
    8. '    
' → logprob: -20.000001907348633
    9. 'size' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.750001907348633

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003667294979095459
    2. '=' → logprob: -5.75366735458374
    3. ',' → logprob: -7.62866735458374
    4. '   ' → logprob: -13.753666877746582
    5. ' ' → logprob: -14.253666877746582
    6. ' =[' → logprob: -14.628666877746582
    7. ' ,' → logprob: -14.753666877746582
    8. '[' → logprob: -16.1286678314209
    9. '	' → logprob: -16.1286678314209
    10. '_' → logprob: -16.5036678314209

Token 288: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.029484542086720467
    2. ' init' → logprob: -4.029484748840332
    3. '[' → logprob: -4.529484748840332
    4. ' [' → logprob: -7.654484748840332
    5. '   ' → logprob: -11.904484748840332
    6. '_init' → logprob: -13.529484748840332
    7. '	init' → logprob: -13.654484748840332
    8. '.init' → logprob: -15.404484748840332
    9. '(init' → logprob: -15.404484748840332
    10. ' ' → logprob: -15.779484748840332

Token 289: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.1398757123970427e-05
    2. '_' → logprob: -12.750011444091797
    3. '_arrays' → logprob: -13.250011444091797
    4. 'array' → logprob: -13.375011444091797
    5. '_arr' → logprob: -13.875011444091797
    6. '[' → logprob: -13.875011444091797
    7. '(' → logprob: -14.375011444091797
    8. '(_' → logprob: -14.500011444091797
    9. '_ARRAY' → logprob: -15.000011444091797
    10. '(f' → logprob: -15.000011444091797

Token 290: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -2.4391956685576588e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -16.750024795532227
    4. '(
' → logprob: -17.875024795532227
    5. '((' → logprob: -18.750024795532227
    6. ',U' → logprob: -19.625024795532227
    7. 'U' → logprob: -19.875024795532227
    8. ')(' → logprob: -20.000024795532227
    9. '(UI' → logprob: -20.125024795532227
    10. '	U' → logprob: -20.500024795532227

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013350016670301557
    2. '(' → logprob: -7.376335144042969
    3. '(),' → logprob: -8.376335144042969
    4. ',U' → logprob: -8.376335144042969
    5. '(U' → logprob: -9.376335144042969
    6. ' ,' → logprob: -9.501335144042969
    7. ')' → logprob: -10.001335144042969
    8. '),' → logprob: -11.501335144042969
    9. ',)' → logprob: -12.001335144042969
    10. ',
' → logprob: -12.626335144042969

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -16.125003814697266
    4. ')' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '
' → logprob: -18.500003814697266
    7. '  ' → logprob: -19.000003814697266
    8. '```' → logprob: -19.312503814697266
    9. '    ' → logprob: -19.687503814697266
    10. '`' → logprob: -19.875003814697266

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -15.625
    4. ')' → logprob: -17.5
    5. '```' → logprob: -18.8125
    6. '   ' → logprob: -19.0
    7. '
' → logprob: -19.6875
    8. '[' → logprob: -19.75
    9. '

' → logprob: -20.0
    10. '(' → logprob: -20.0625

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005562512087635696
    2. ')
' → logprob: -7.500556468963623
    3. ' )' → logprob: -12.875555992126465
    4. ')
' → logprob: -14.750555992126465
    5. ')

' → logprob: -15.625555992126465
    6. '),' → logprob: -18.00055694580078
    7. ' ' → logprob: -18.37555694580078
    8. '   ' → logprob: -18.50055694580078
    9. ' )
' → logprob: -18.50055694580078
    10. ')#' → logprob: -18.75055694580078

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01628151163458824
    2. ' two' → logprob: -4.891281604766846
    3. 'fact' → logprob: -5.391281604766846
    4. 'two' → logprob: -5.766281604766846
    5. ' fact' → logprob: -7.016281604766846
    6. '	t' → logprob: -11.016281127929688
    7. 'compute' → logprob: -11.266281127929688
    8. '   ' → logprob: -12.016281127929688
    9. '
' → logprob: -12.891281127929688
    10. ' compute' → logprob: -13.016281127929688

Token 296: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.06676363199949265
    2. 'two' → logprob: -2.8167636394500732
    3. ' fact' → logprob: -5.816763401031494
    4. ' two' → logprob: -6.316763401031494
    5. '   ' → logprob: -14.066763877868652
    6. 'factor' → logprob: -15.191763877868652
    7. 'facts' → logprob: -15.691763877868652
    8. 'compute' → logprob: -16.191762924194336
    9. '_fact' → logprob: -16.566762924194336
    10. 'f' → logprob: -16.691762924194336

Token 297: '_inv' (ID: 53427)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05973195657134056
    2. '_inv' → logprob: -3.059731960296631
    3. '_' → logprob: -5.309731960296631
    4. '=' → logprob: -6.184731960296631
    5. '[]' → logprob: -6.434731960296631
    6. '[:]' → logprob: -7.309731960296631
    7. ' =' → logprob: -7.434731960296631
    8. '.append' → logprob: -8.809731483459473
    9. '.' → logprob: -8.934731483459473
    10. ',' → logprob: -8.934731483459473

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542239770293236
    2. '=' → logprob: -3.8955421447753906
    3. '[' → logprob: -15.52054214477539
    4. ',' → logprob: -16.64554214477539
    5. ' ' → logprob: -16.89554214477539
    6. ')' → logprob: -17.64554214477539
    7. '```' → logprob: -18.02054214477539
    8. '=[]' → logprob: -18.27054214477539
    9. ']' → logprob: -18.52054214477539
    10. '＝' → logprob: -18.64554214477539

Token 299: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07940897345542908
    2. '[' → logprob: -2.579408884048462
    3. ' init' → logprob: -7.954409122467041
    4. ' [' → logprob: -8.704408645629883
    5. '_init' → logprob: -14.204408645629883
    6. '   ' → logprob: -14.454408645629883
    7. '.init' → logprob: -15.454408645629883
    8. ' ' → logprob: -15.704408645629883
    9. '	init' → logprob: -15.704408645629883
    10. '  ' → logprob: -16.454408645629883

Token 300: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0280383548888494e-06
    2. 'array' → logprob: -14.250000953674316
    3. '_arrays' → logprob: -15.500000953674316
    4. 'Array' → logprob: -16.625001907348633
    5. '_ARRAY' → logprob: -16.875001907348633
    6. '_' → logprob: -18.125001907348633
    7. '_Array' → logprob: -18.750001907348633
    8. '[' → logprob: -19.000001907348633
    9. '_arr' → logprob: -19.750001907348633
    10. '`' → logprob: -20.375001907348633

Token 301: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. ' (' → logprob: -18.0
    4. '```' → logprob: -19.625
    5. 'U' → logprob: -19.875
    6. '<U' → logprob: -20.375
    7. '	U' → logprob: -20.5
    8. ',U' → logprob: -20.75
    9. ' U' → logprob: -21.125
    10. 'def' → logprob: -21.625

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ')' → logprob: -13.75004768371582
    4. '0' → logprob: -15.12504768371582
    5. ' ' → logprob: -15.50004768371582
    6. ',
' → logprob: -15.75004768371582
    7. '(' → logprob: -15.87504768371582
    8. '1' → logprob: -16.25004768371582
    9. '),' → logprob: -17.37504768371582
    10. '   ' → logprob: -17.62504768371582

Token 303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006545200943946838
    2. ' ' → logprob: -5.506545066833496
    3. '0' → logprob: -6.006545066833496
    4. '   ' → logprob: -15.194045066833496
    5. '```' → logprob: -15.694045066833496
    6. 'None' → logprob: -15.944045066833496
    7. '  ' → logprob: -16.381546020507812
    8. ')' → logprob: -16.506546020507812
    9. '-' → logprob: -16.819046020507812
    10. 'def' → logprob: -16.944046020507812

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024382755509577692
    2. '0' → logprob: -8.750244140625
    3. ' ' → logprob: -9.375244140625
    4. '```' → logprob: -15.500244140625
    5. '-' → logprob: -16.125244140625
    6. 'None' → logprob: -17.250244140625
    7. ')' → logprob: -17.687744140625
    8. '   ' → logprob: -17.687744140625
    9. '[' → logprob: -17.937744140625
    10. '(' → logprob: -18.062744140625

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038074489566497505
    2. ')
' → logprob: -7.875380516052246
    3. ')
' → logprob: -15.250380516052246
    4. ' )' → logprob: -15.625380516052246
    5. ')

' → logprob: -16.000381469726562
    6. '   ' → logprob: -16.500381469726562
    7. '),' → logprob: -18.000381469726562
    8. ')`' → logprob: -19.625381469726562
    9. ' ' → logprob: -19.875381469726562
    10. ').' → logprob: -20.000381469726562

Token 306: '   ' (ID: 271)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6041414737701416
    2. 'two' → logprob: -1.1041414737701416
    3. '   ' → logprob: -2.1041414737701416
    4. '(two' → logprob: -12.604141235351562
    5. '	t' → logprob: -12.979141235351562
    6. ' ' → logprob: -13.479141235351562
    7. '_two' → logprob: -13.479141235351562
    8. '  ' → logprob: -13.854141235351562
    9. 'Two' → logprob: -14.354141235351562
    10. '.two' → logprob: -15.354141235351562

Token 307: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' (adapté à ' two') → logprob: -0.10642214864492416
    2. ' two' → logprob: -2.606422185897827
    3. '   ' → logprob: -3.606422185897827
    4. ' ' → logprob: -12.731422424316406
    5. '	t' → logprob: -13.106422424316406
    6. '(two' → logprob: -13.606422424316406
    7. '  ' → logprob: -14.231422424316406
    8. 'tw' → logprob: -15.356422424316406
    9. '_two' → logprob: -15.481422424316406
    10. '.two' → logprob: -15.856422424316406

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048594411462545395
    2. '=' → logprob: -3.0485944747924805
    3. '_' → logprob: -12.54859447479248
    4. '   ' → logprob: -14.17359447479248
    5. ' ' → logprob: -14.42359447479248
    6. '	' → logprob: -14.54859447479248
    7. '[' → logprob: -15.29859447479248
    8. ',' → logprob: -15.67359447479248
    9. '  ' → logprob: -15.67359447479248
    10. 's' → logprob: -16.173593521118164

Token 309: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.048621658235788345
    2. ' init' → logprob: -3.048621654510498
    3. '[' → logprob: -10.423622131347656
    4. ' [' → logprob: -13.673622131347656
    5. ' ' → logprob: -13.798622131347656
    6. '   ' → logprob: -13.923622131347656
    7. '_init' → logprob: -14.673622131347656
    8. '(init' → logprob: -15.048622131347656
    9. '	init' → logprob: -15.423622131347656
    10. '  ' → logprob: -15.423622131347656

Token 310: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -3.6789137084269896e-05
    2. 'array' → logprob: -10.25003719329834
    3. 'Array' → logprob: -13.62503719329834
    4. '(U' → logprob: -16.125036239624023
    5. '_arrays' → logprob: -17.000036239624023
    6. '_ARRAY' → logprob: -17.250036239624023
    7. '_code' → logprob: -18.125036239624023
    8. 'def' → logprob: -19.000036239624023
    9. '_' → logprob: -19.250036239624023
    10. 'rray' → logprob: -19.500036239624023

Token 311: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. 'U' → logprob: -15.250000953674316
    4. ' (' → logprob: -19.125001907348633
    5. ' U' → logprob: -19.250001907348633
    6. ',U' → logprob: -20.125001907348633
    7. '```' → logprob: -20.250001907348633
    8. '(Q' → logprob: -20.375001907348633
    9. '\(' → logprob: -20.750001907348633
    10. '<U' → logprob: -20.875001907348633

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -15.375085830688477
    4. '   ' → logprob: -16.125085830688477
    5. ')' → logprob: -16.250085830688477
    6. 'def' → logprob: -17.000085830688477
    7. ' ' → logprob: -17.125085830688477
    8. '0' → logprob: -17.500085830688477
    9. '2' → logprob: -18.750085830688477
    10. '‌,' → logprob: -18.750085830688477

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005937448237091303
    2. ' ' → logprob: -5.130937576293945
    3. '0' → logprob: -12.130937576293945
    4. '   ' → logprob: -13.005937576293945
    5. '  ' → logprob: -14.755937576293945
    6. '2' → logprob: -14.880937576293945
    7. '    ' → logprob: -16.693437576293945
    8. '(' → logprob: -17.068437576293945
    9. '[' → logprob: -17.255937576293945
    10. '```' → logprob: -17.568437576293945

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.339776832144707e-05
    2. ' ' → logprob: -9.875082969665527
    3. '0' → logprob: -10.375082969665527
    4. '2' → logprob: -14.750082969665527
    5. '   ' → logprob: -15.625082969665527
    6. '  ' → logprob: -17.312583923339844
    7. '```' → logprob: -17.375083923339844
    8. '`' → logprob: -18.687583923339844
    9. '(' → logprob: -18.750083923339844
    10. '-' → logprob: -18.875083923339844

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38714399933815
    2. ')
' → logprob: -1.1371439695358276
    3. '   ' → logprob: -8.262144088745117
    4. ')
' → logprob: -11.262144088745117
    5. ' )
' → logprob: -14.387144088745117
    6. ')

' → logprob: -14.637144088745117
    7. ' )' → logprob: -15.512144088745117
    8. ' ' → logprob: -15.512144088745117
    9. 'def' → logprob: -16.137144088745117
    10. ')t' → logprob: -16.762144088745117

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4559056758880615
    2. 'two' → logprob: -1.5809056758880615
    3. ' two' → logprob: -1.8309056758880615
    4. ' ' → logprob: -10.58090591430664
    5. '(two' → logprob: -10.95590591430664
    6. '  ' → logprob: -12.33090591430664
    7. '```' → logprob: -12.58090591430664
    8. 'tw' → logprob: -12.95590591430664
    9. '   ' → logprob: -13.08090591430664
    10. '	t' → logprob: -13.33090591430664

Token 317: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' (adapté à ' two') → logprob: -0.10549682378768921
    2. ' two' → logprob: -2.730496883392334
    3. '   ' → logprob: -3.355496883392334
    4. ' ' → logprob: -10.355496406555176
    5. '  ' → logprob: -12.105496406555176
    6. '(two' → logprob: -13.605496406555176
    7. '```' → logprob: -13.855496406555176
    8. '    
' → logprob: -13.855496406555176
    9. '
' → logprob: -13.980496406555176
    10. 'tw' → logprob: -14.855496406555176

Token 318: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.027413927018642426
    2. '=' → logprob: -3.902413845062256
    3. ' =' → logprob: -5.152413845062256
    4. '[' → logprob: -7.652413845062256
    5. 'inv' → logprob: -8.027414321899414
    6. '=_' → logprob: -9.152414321899414
    7. '[:]' → logprob: -10.152414321899414
    8. '   ' → logprob: -11.027414321899414
    9. '=[' → logprob: -11.277414321899414
    10. '[_' → logprob: -11.652414321899414

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. '[' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.876928329467773
    5. ')' → logprob: -17.626928329467773
    6. '	' → logprob: -18.501928329467773
    7. '   ' → logprob: -18.501928329467773
    8. '＝' → logprob: -19.751928329467773
    9. ',' → logprob: -19.876928329467773
    10. ']' → logprob: -20.001928329467773

Token 320: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.5759479999542236
    2. 'init' → logprob: -0.8259479999542236
    3. '[' → logprob: -12.200947761535645
    4. ' [' → logprob: -13.575947761535645
    5. '(init' → logprob: -13.825947761535645
    6. '_init' → logprob: -14.075947761535645
    7. '	init' → logprob: -15.325947761535645
    8. ' ' → logprob: -16.20094871520996
    9. '.init' → logprob: -16.32594871520996
    10. '   ' → logprob: -17.45094871520996

Token 321: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0004154185007791966
    2. 'array' → logprob: -7.875415325164795
    3. 'Array' → logprob: -10.750415802001953
    4. '(U' → logprob: -11.250415802001953
    5. '_arrays' → logprob: -15.000415802001953
    6. '_ARRAY' → logprob: -16.000415802001953
    7. 'arrays' → logprob: -16.500415802001953
    8. '[' → logprob: -16.750415802001953
    9. 'arr' → logprob: -17.125415802001953
    10. '(' → logprob: -17.125415802001953

Token 322: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. 'U' → logprob: -20.0
    4. ' (' → logprob: -20.625
    5. '```' → logprob: -20.625
    6. '(Q' → logprob: -21.5
    7. 'def' → logprob: -21.75
    8. '	U' → logprob: -21.75
    9. '<U' → logprob: -21.875
    10. '(
' → logprob: -22.5

Token 323: ',' (ID: 11)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.45419424772262573
    2. ',' → logprob: -1.0791943073272705
    3. ',U' → logprob: -4.329194068908691
    4. 'U' → logprob: -4.579194068908691
    5. '   ' → logprob: -7.079194068908691
    6. ' ,' → logprob: -7.954194068908691
    7. '[' → logprob: -8.954194068908691
    8. ')' → logprob: -9.079194068908691
    9. '	U' → logprob: -9.079194068908691
    10. '(' → logprob: -9.579194068908691

Token 324: ' ' (ID: 220)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0005660186288878322
    2. ' U' → logprob: -7.500566005706787
    3. '(U' → logprob: -11.375566482543945
    4. '   ' → logprob: -14.375566482543945
    5. '	U' → logprob: -15.000566482543945
    6. ' ' → logprob: -15.375566482543945
    7. '(' → logprob: -15.875566482543945
    8. '[' → logprob: -16.000566482543945
    9. '2' → logprob: -17.000566482543945
    10. '<U' → logprob: -17.125566482543945

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03542910888791084
    2. 'U' → logprob: -4.410429000854492
    3. '(U' → logprob: -5.035429000854492
    4. ' ' → logprob: -5.035429000854492
    5. '(' → logprob: -5.160429000854492
    6. '2' → logprob: -6.785429000854492
    7. '[' → logprob: -7.160429000854492
    8. '0' → logprob: -7.410429000854492
    9. '5' → logprob: -7.785429000854492
    10. ')' → logprob: -8.285429000854492

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002477502857800573
    2. ')
' → logprob: -8.375247955322266
    3. '   ' → logprob: -11.000247955322266
    4. ')
' → logprob: -15.875247955322266
    5. ' )' → logprob: -15.875247955322266
    6. ')

' → logprob: -16.750247955322266
    7. ')`' → logprob: -17.375247955322266
    8. 'def' → logprob: -17.750247955322266
    9. ')\' → logprob: -18.000247955322266
    10. '),' → logprob: -18.000247955322266

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0048682112246751785
    2. 'compute' → logprob: -5.504868030548096
    3. ' compute' → logprob: -7.379868030548096
    4. '
' → logprob: -8.754868507385254
    5. 'def' → logprob: -12.379868507385254
    6. '    
' → logprob: -12.754868507385254
    7. '
' → logprob: -15.004868507385254
    8. ' def' → logprob: -16.129867553710938
    9. '.compute' → logprob: -16.254867553710938
    10. '```' → logprob: -16.254867553710938

Token 328: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.0007280402351170778
    2. ' compute' → logprob: -7.375728130340576
    3. '   ' → logprob: -9.500727653503418
    4. 'fact' → logprob: -10.875727653503418
    5. '
' → logprob: -11.875727653503418
    6. ' ' → logprob: -15.750727653503418
    7. '

' → logprob: -16.000728607177734
    8. '
' → logprob: -16.250728607177734
    9. '    
' → logprob: -16.250728607177734
    10. '.compute' → logprob: -16.875728607177734

Token 329: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.0007100477814674377
    2. 'fact' → logprob: -7.2507100105285645
    3. '_fac' → logprob: -16.375709533691406
    4. '_factor' → logprob: -17.625709533691406
    5. ' fact' → logprob: -18.000709533691406
    6. '_FACT' → logprob: -18.625709533691406
    7. 'Fact' → logprob: -18.750709533691406
    8. '_f' → logprob: -19.250709533691406
    9. '_two' → logprob: -19.250709533691406
    10. '_' → logprob: -19.750709533691406

Token 330: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. ' (' → logprob: -18.125036239624023
    4. '(
' → logprob: -19.125036239624023
    5. '(F' → logprob: -19.250036239624023
    6. '((' → logprob: -20.250036239624023
    7. '(T' → logprob: -20.750036239624023
    8. '(User' → logprob: -20.875036239624023
    9. '(

' → logprob: -20.875036239624023
    10. '(I' → logprob: -21.000036239624023

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',f' → logprob: -14.875012397766113
    4. ',
' → logprob: -15.250012397766113
    5. ')' → logprob: -16.375011444091797
    6. ',

' → logprob: -17.500011444091797
    7. '   ' → logprob: -17.875011444091797
    8. ',)' → logprob: -18.000011444091797
    9. ',U' → logprob: -18.750011444091797
    10. '),' → logprob: -18.875011444091797

Token 332: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.47408369183540344
    2. ' MOD' → logprob: -0.974083662033081
    3. '_MOD' → logprob: -12.72408390045166
    4. '.MOD' → logprob: -13.09908390045166
    5. ')' → logprob: -13.97408390045166
    6. ' ' → logprob: -14.47408390045166
    7. '   ' → logprob: -15.72408390045166
    8. '```' → logprob: -16.849082946777344
    9. 'mod' → logprob: -17.724082946777344
    10. '0' → logprob: -17.849082946777344

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.375031471252441
    3. ',f' → logprob: -15.250031471252441
    4. ',
' → logprob: -18.125032424926758
    5. '   ' → logprob: -18.250032424926758
    6. ')' → logprob: -19.750032424926758
    7. '‌,' → logprob: -20.000032424926758
    8. ' fact' → logprob: -20.125032424926758
    9. ' ' → logprob: -20.250032424926758
    10. '`,' → logprob: -20.500032424926758

Token 334: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029751643538475037
    2. ' fact' → logprob: -3.5297515392303467
    3. '_fact' → logprob: -14.779751777648926
    4. 'facts' → logprob: -15.529751777648926
    5. ')' → logprob: -15.779751777648926
    6. 'Fact' → logprob: -16.02975082397461
    7. '.fact' → logprob: -16.27975082397461
    8. '
' → logprob: -16.52975082397461
    9. 'f' → logprob: -16.90475082397461
    10. ' ' → logprob: -17.02975082397461

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193992257118225
    2. ')
' → logprob: -1.5019398927688599
    3. ')
' → logprob: -12.00193977355957
    4. '   ' → logprob: -12.75193977355957
    5. ')

' → logprob: -14.00193977355957
    6. ' )' → logprob: -15.37693977355957
    7. ' )
' → logprob: -15.37693977355957
    8. '),' → logprob: -15.87693977355957
    9. ')#' → logprob: -16.25193977355957
    10. ',' → logprob: -17.12693977355957

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003764535649679601
    2. 'compute' → logprob: -8.00037670135498
    3. ' compute' → logprob: -10.12537670135498
    4. '
' → logprob: -14.00037670135498
    5. '	com' → logprob: -16.250375747680664
    6. '```' → logprob: -16.750375747680664
    7. '    
' → logprob: -17.250375747680664
    8. '(com' → logprob: -17.375375747680664
    9. '   ' → logprob: -17.625375747680664
    10. '_compute' → logprob: -18.875375747680664

Token 337: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -2.176947600673884e-05
    2. ' compute' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.000021934509277
    4. '
' → logprob: -18.62502098083496
    5. '.compute' → logprob: -19.25002098083496
    6. ' ' → logprob: -20.62502098083496
    7. '_compute' → logprob: -21.75002098083496
    8. '```' → logprob: -21.75002098083496
    9. 'computer' → logprob: -21.87502098083496
    10. 'calculate' → logprob: -22.12502098083496

Token 338: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.004017495550215244
    2. 'two' → logprob: -5.754017353057861
    3. '_fact' → logprob: -7.129017353057861
    4. 'fact' → logprob: -10.25401782989502
    5. '_tw' → logprob: -14.00401782989502
    6. '_' → logprob: -14.50401782989502
    7. ' two' → logprob: -14.87901782989502
    8. 'Two' → logprob: -15.00401782989502
    9. '_factor' → logprob: -15.12901782989502
    10. '(two' → logprob: -16.129016876220703

Token 339: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -17.375001907348633
    4. '(User' → logprob: -20.250001907348633
    5. '(
' → logprob: -20.500001907348633
    6. 'U' → logprob: -20.625001907348633
    7. ' U' → logprob: -21.375001907348633
    8. ' ' → logprob: -21.500001907348633
    9. '```' → logprob: -21.500001907348633
    10. '	U' → logprob: -22.000001907348633

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ')' → logprob: -13.87504768371582
    4. '(M' → logprob: -15.00004768371582
    5. '(' → logprob: -15.25004768371582
    6. ',
' → logprob: -16.12504768371582
    7. ',M' → logprob: -16.50004768371582
    8. '   ' → logprob: -16.75004768371582
    9. 'MOD' → logprob: -16.87504768371582
    10. '),' → logprob: -17.12504768371582

Token 341: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.029750604182481766
    2. ' MOD' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. '.MOD' → logprob: -17.27975082397461
    5. '_MOD' → logprob: -17.52975082397461
    6. '   ' → logprob: -17.65475082397461
    7. 'MO' → logprob: -19.02975082397461
    8. 'M' → logprob: -19.40475082397461
    9. '0' → logprob: -20.02975082397461
    10. '  ' → logprob: -20.77975082397461

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.166338137816638e-05
    2. ' ,' → logprob: -10.500031471252441
    3. ',t' → logprob: -12.500031471252441
    4. 'two' → logprob: -15.875031471252441
    5. '   ' → logprob: -16.625032424926758
    6. ' two' → logprob: -16.750032424926758
    7. ')' → logprob: -17.500032424926758
    8. ',
' → logprob: -18.125032424926758
    9. ' ' → logprob: -18.875032424926758
    10. '(' → logprob: -19.125032424926758

Token 343: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.20141343772411346
    2. ' two' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.826414108276367
    4. '   ' → logprob: -17.076414108276367
    5. '(two' → logprob: -17.326414108276367
    6. 'tw' → logprob: -18.201414108276367
    7. 'Two' → logprob: -18.826414108276367
    8. 't' → logprob: -20.576414108276367
    9. '
' → logprob: -20.701414108276367
    10. '_two' → logprob: -20.951414108276367

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6940041184425354
    2. ')
' → logprob: -0.6940041184425354
    3. '   ' → logprob: -7.069004058837891
    4. ')
' → logprob: -12.44400405883789
    5. ')

' → logprob: -14.56900405883789
    6. ' )
' → logprob: -15.19400405883789
    7. ',' → logprob: -15.56900405883789
    8. ' )' → logprob: -15.81900405883789
    9. '),' → logprob: -16.06900405883789
    10. '
' → logprob: -16.31900405883789

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029186380561441183
    2. 'compute' → logprob: -5.877918720245361
    3. ' compute' → logprob: -9.377918243408203
    4. '```' → logprob: -11.002918243408203
    5. '
' → logprob: -11.377918243408203
    6. '    
' → logprob: -14.377918243408203
    7. '`' → logprob: -15.252918243408203
    8. '``' → logprob: -16.002918243408203
    9. '(com' → logprob: -16.502918243408203
    10. '_compute' → logprob: -17.252918243408203

Token 346: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.008634069003164768
    2. '   ' → logprob: -5.008634090423584
    3. ' compute' → logprob: -6.258634090423584
    4. '
' → logprob: -13.508633613586426
    5. '```' → logprob: -13.883633613586426
    6. '.compute' → logprob: -15.008633613586426
    7. ' ' → logprob: -15.883633613586426
    8. '_compute' → logprob: -16.133634567260742
    9. '  ' → logprob: -17.508634567260742
    10. '    
' → logprob: -17.883634567260742

Token 347: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -9.639096970204264e-05
    2. 'fact' → logprob: -9.250096321105957
    3. '_two' → logprob: -15.750096321105957
    4. '_fac' → logprob: -16.375097274780273
    5. '_factor' → logprob: -17.000097274780273
    6. '_' → logprob: -19.375097274780273
    7. '```' → logprob: -19.500097274780273
    8. '_FACT' → logprob: -19.500097274780273
    9. 'Fact' → logprob: -19.875097274780273
    10. '_f' → logprob: -19.875097274780273

Token 348: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -4.36574100604048e-06
    2. '_inverse' → logprob: -13.375004768371582
    3. '_in' → logprob: -14.125004768371582
    4. '_' → logprob: -14.250004768371582
    5. '_INV' → logprob: -14.375004768371582
    6. '```' → logprob: -15.625004768371582
    7. ')_' → logprob: -15.750004768371582
    8. '\' → logprob: -16.750003814697266
    9. '_int' → logprob: -16.750003814697266
    10. '##_' → logprob: -16.875003814697266

Token 349: '_U' (ID: 13856)
  Prédit: '_U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.0019341122824698687
    2. '(U' → logprob: -6.251934051513672
    3. '```' → logprob: -12.751934051513672
    4. 'U' → logprob: -13.751934051513672
    5. '(' → logprob: -14.001934051513672
    6. '_' → logprob: -15.001934051513672
    7. '	U' → logprob: -16.251934051513672
    8. '\' → logprob: -16.501934051513672
    9. '_(' → logprob: -17.001934051513672
    10. '`' → logprob: -17.751934051513672

Token 350: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -4.251091377227567e-05
    2. '(' → logprob: -10.125042915344238
    3. ' (' → logprob: -13.125042915344238
    4. 'U' → logprob: -16.000041961669922
    5. '(
' → logprob: -16.500041961669922
    6. '```' → logprob: -16.625041961669922
    7. ' ' → logprob: -16.875041961669922
    8. '(User' → logprob: -18.500041961669922
    9. '((' → logprob: -18.500041961669922
    10. '(u' → logprob: -18.625041961669922

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.672236824873835e-05
    2. ' ,' → logprob: -9.750076293945312
    3. ',U' → logprob: -11.375076293945312
    4. ',
' → logprob: -12.875076293945312
    5. ')' → logprob: -13.750076293945312
    6. ',

' → logprob: -14.125076293945312
    7. '   ' → logprob: -14.375076293945312
    8. '(' → logprob: -14.625076293945312
    9. ',)' → logprob: -14.750076293945312
    10. '```' → logprob: -15.625076293945312

Token 352: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006716317031532526
    2. ' MOD' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.88171672821045
    4. '_MOD' → logprob: -15.00671672821045
    5. '   ' → logprob: -15.88171672821045
    6. '.MOD' → logprob: -16.256715774536133
    7. 'MO' → logprob: -17.131715774536133
    8. ')' → logprob: -17.631715774536133
    9. 'M' → logprob: -18.256715774536133
    10. '0' → logprob: -18.381715774536133

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',f' → logprob: -14.875006675720215
    4. ',
' → logprob: -17.5000057220459
    5. '   ' → logprob: -18.6250057220459
    6. ',U' → logprob: -18.8750057220459
    7. ')' → logprob: -19.0000057220459
    8. 'fact' → logprob: -19.8750057220459
    9. '(),' → logprob: -19.8750057220459
    10. ',

' → logprob: -19.8750057220459

Token 354: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.014163863845169544
    2. ' fact' → logprob: -4.264163970947266
    3. '_fact' → logprob: -16.264163970947266
    4. '   ' → logprob: -16.514163970947266
    5. '.fact' → logprob: -17.139163970947266
    6. 'Fact' → logprob: -17.264163970947266
    7. 'facts' → logprob: -17.514163970947266
    8. ' ' → logprob: -17.764163970947266
    9. ' fakt' → logprob: -18.139163970947266
    10. 'factor' → logprob: -18.389163970947266

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.057743949990254e-05
    2. ' ,' → logprob: -11.750020980834961
    3. ',
' → logprob: -12.000020980834961
    4. ',

' → logprob: -12.750020980834961
    5. ',f' → logprob: -13.625020980834961
    6. ')' → logprob: -13.750020980834961
    7. '   ' → logprob: -14.500020980834961
    8. ',)' → logprob: -15.625020980834961
    9. '[' → logprob: -16.25002098083496
    10. ',int' → logprob: -16.75002098083496

Token 356: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.5759397745132446
    2. 'fact' → logprob: -0.8259397745132446
    3. '_fact' → logprob: -15.700940132141113
    4. 'Fact' → logprob: -17.325939178466797
    5. '.fact' → logprob: -17.325939178466797
    6. ' ' → logprob: -17.825939178466797
    7. ' fakt' → logprob: -18.075939178466797
    8. '   ' → logprob: -18.200939178466797
    9. 'facts' → logprob: -18.700939178466797
    10. 'f' → logprob: -19.200939178466797

Token 357: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0013370281085371971
    2. ')' → logprob: -6.626337051391602
    3. ')_' → logprob: -12.751337051391602
    4. 'inv' → logprob: -12.876337051391602
    5. ',' → logprob: -13.126337051391602
    6. ')
' → logprob: -13.751337051391602
    7. '_inf' → logprob: -14.376337051391602
    8. '_)' → logprob: -14.626337051391602
    9. '_INV' → logprob: -14.751337051391602
    10. '_in' → logprob: -15.751337051391602

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018245233222842216
    2. ')
' → logprob: -4.018245220184326
    3. '   ' → logprob: -9.268245697021484
    4. ')
' → logprob: -14.268245697021484
    5. ' )' → logprob: -15.643245697021484
    6. ')

' → logprob: -15.893245697021484
    7. '),' → logprob: -17.268245697021484
    8. '
' → logprob: -17.393245697021484
    9. ' ' → logprob: -18.143245697021484
    10. ')\' → logprob: -18.143245697021484

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016158436483237892
    2. 'compute' → logprob: -8.875161170959473
    3. '
' → logprob: -11.000161170959473
    4. ' compute' → logprob: -12.375161170959473
    5. '    
' → logprob: -15.250161170959473
    6. '```' → logprob: -15.625161170959473
    7. '(com' → logprob: -16.25016212463379
    8. '       ' → logprob: -16.50016212463379
    9. '	com' → logprob: -16.75016212463379
    10. 'def' → logprob: -18.12516212463379

Token 360: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.39438962936401367
    2. '   ' → logprob: -1.1443896293640137
    3. ' compute' → logprob: -4.894389629364014
    4. '
' → logprob: -14.269390106201172
    5. ' ' → logprob: -14.644390106201172
    6. '```' → logprob: -15.144390106201172
    7. '.compute' → logprob: -15.269390106201172
    8. '  ' → logprob: -15.519390106201172
    9. '_compute' → logprob: -16.269390106201172
    10. '	com' → logprob: -16.894390106201172

Token 361: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0008189192740246654
    2. 'two' → logprob: -7.500818729400635
    3. '_fact' → logprob: -8.250819206237793
    4. 'fact' → logprob: -12.375819206237793
    5. '_factor' → logprob: -15.375819206237793
    6. '_tw' → logprob: -15.750819206237793
    7. ' two' → logprob: -16.375818252563477
    8. '(two' → logprob: -16.625818252563477
    9. '_four' → logprob: -16.750818252563477
    10. '_three' → logprob: -16.875818252563477

Token 362: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00010890735575230792
    2. '_U' → logprob: -9.62510871887207
    3. '(U' → logprob: -11.25010871887207
    4. '_INV' → logprob: -11.37510871887207
    5. '_inverse' → logprob: -11.50010871887207
    6. '_in' → logprob: -12.87510871887207
    7. '_' → logprob: -13.37510871887207
    8. '_int' → logprob: -13.87510871887207
    9. 'inv' → logprob: -14.37510871887207
    10. '```' → logprob: -14.62510871887207

Token 363: '_U' (ID: 13856)
  Prédit: '_U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.00012821101699955761
    2. '(U' → logprob: -9.000127792358398
    3. 'U' → logprob: -12.500127792358398
    4. '```' → logprob: -14.125127792358398
    5. '	U' → logprob: -15.500127792358398
    6. '(' → logprob: -16.5001277923584
    7. '_' → logprob: -17.1251277923584
    8. ' U' → logprob: -18.2501277923584
    9. '_UL' → logprob: -18.2501277923584
    10. '\' → logprob: -18.6251277923584

Token 364: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.375036239624023
    4. '(
' → logprob: -15.375036239624023
    5. 'U' → logprob: -16.000036239624023
    6. ')' → logprob: -19.375036239624023
    7. '(UI' → logprob: -19.375036239624023
    8. ' U' → logprob: -19.375036239624023
    9. '(User' → logprob: -19.500036239624023
    10. '```' → logprob: -20.125036239624023

Token 365: ',' (ID: 11)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.00312852137722075
    2. ',' → logprob: -5.878128528594971
    3. ',U' → logprob: -8.378128051757812
    4. '(' → logprob: -9.878128051757812
    5. 'U' → logprob: -11.128128051757812
    6. ' (' → logprob: -11.628128051757812
    7. ')' → logprob: -11.753128051757812
    8. ' U' → logprob: -12.378128051757812
    9. '(
' → logprob: -13.253128051757812
    10. ')(' → logprob: -13.378128051757812

Token 366: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10563217848539352
    2. 'U' → logprob: -2.3556320667266846
    3. ' MOD' → logprob: -5.855632305145264
    4. ' U' → logprob: -5.980632305145264
    5. ' ' → logprob: -11.605631828308105
    6. '_MOD' → logprob: -12.605631828308105
    7. '   ' → logprob: -12.855631828308105
    8. '.MOD' → logprob: -14.230631828308105
    9. 'UM' → logprob: -14.355631828308105
    10. ')' → logprob: -14.480631828308105

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000181372175575234
    2. ' ,' → logprob: -9.250181198120117
    3. ',t' → logprob: -9.500181198120117
    4. ' two' → logprob: -12.500181198120117
    5. 'two' → logprob: -12.625181198120117
    6. '   ' → logprob: -13.875181198120117
    7. ',
' → logprob: -13.875181198120117
    8. ')' → logprob: -14.250181198120117
    9. '(two' → logprob: -15.000181198120117
    10. '(' → logprob: -16.500181198120117

Token 368: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.029750484973192215
    2. ' two' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.15475082397461
    4. ' ' → logprob: -17.90475082397461
    5. '(two' → logprob: -18.15475082397461
    6. 'tw' → logprob: -18.52975082397461
    7. 'Two' → logprob: -18.90475082397461
    8. 't' → logprob: -20.65475082397461
    9. '_two' → logprob: -20.90475082397461
    10. '  ' → logprob: -21.15475082397461

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ',t' → logprob: -10.250041007995605
    3. ' ,' → logprob: -12.750041007995605
    4. ',
' → logprob: -13.500041007995605
    5. ')' → logprob: -14.500041007995605
    6. '   ' → logprob: -15.500041007995605
    7. 'two' → logprob: -15.500041007995605
    8. ',

' → logprob: -15.875041007995605
    9. ' two' → logprob: -17.62504005432129
    10. '‌,' → logprob: -17.62504005432129

Token 370: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.014163628220558167
    2. ' two' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.014163970947266
    4. 'tw' → logprob: -17.264163970947266
    5. '   ' → logprob: -17.639163970947266
    6. '(two' → logprob: -17.889163970947266
    7. 'Two' → logprob: -19.639163970947266
    8. 't' → logprob: -20.264163970947266
    9. '  ' → logprob: -20.639163970947266
    10. '```' → logprob: -20.764163970947266

Token 371: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0018271461594849825
    2. ')' → logprob: -6.376827239990234
    3. 'inv' → logprob: -9.126827239990234
    4. ')_' → logprob: -11.626827239990234
    5. ')
' → logprob: -13.376827239990234
    6. '_INV' → logprob: -14.001827239990234
    7. '_)' → logprob: -14.251827239990234
    8. 'Inv' → logprob: -14.376827239990234
    9. '_in' → logprob: -14.376827239990234
    10. '_int' → logprob: -14.501827239990234

Token 372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018307620659470558
    2. ')
' → logprob: -4.018307685852051
    3. '   ' → logprob: -8.76830768585205
    4. ')

' → logprob: -14.51830768585205
    5. ' )' → logprob: -15.01830768585205
    6. ')
' → logprob: -15.14330768585205
    7. ')\
' → logprob: -15.14330768585205
    8. ')\' → logprob: -15.26830768585205
    9. ')`' → logprob: -15.76830768585205
    10. '
' → logprob: -16.393306732177734

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033879990223795176
    2. 'compute' → logprob: -8.125338554382324
    3. ' compute' → logprob: -10.125338554382324
    4. 'def' → logprob: -13.625338554382324
    5. '```' → logprob: -13.750338554382324
    6. '
' → logprob: -15.125338554382324
    7. '    
' → logprob: -16.12533950805664
    8. '       ' → logprob: -17.62533950805664
    9. ' def' → logprob: -17.62533950805664
    10. '`' → logprob: -17.75033950805664

Token 374: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.2062750607728958
    2. '   ' → logprob: -1.7062751054763794
    3. ' compute' → logprob: -5.33127498626709
    4. '```' → logprob: -11.70627498626709
    5. '
' → logprob: -13.58127498626709
    6. ' ' → logprob: -14.08127498626709
    7. '  ' → logprob: -14.45627498626709
    8. '.compute' → logprob: -14.95627498626709
    9. 'def' → logprob: -15.33127498626709
    10. '``' → logprob: -15.58127498626709

Token 375: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -9.686778503237292e-05
    2. 'fact' → logprob: -9.250097274780273
    3. '_fac' → logprob: -14.500097274780273
    4. '_' → logprob: -16.000097274780273
    5. '_factor' → logprob: -16.000097274780273
    6. '_f' → logprob: -17.625097274780273
    7. '```' → logprob: -18.250097274780273
    8. '_two' → logprob: -18.500097274780273
    9. ')_' → logprob: -18.875097274780273
    10. '_FACT' → logprob: -19.125097274780273

Token 376: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.5690089639974758e-05
    2. '(U' → logprob: -11.750015258789062
    3. '_inverse' → logprob: -12.625015258789062
    4. '_fact' → logprob: -13.125015258789062
    5. 'inv' → logprob: -13.375015258789062
    6. '_INV' → logprob: -15.000015258789062
    7. '_' → logprob: -15.375015258789062
    8. '(inv' → logprob: -15.500015258789062
    9. '```' → logprob: -16.375015258789062
    10. 'fact' → logprob: -16.875015258789062

Token 377: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -16.375009536743164
    4. 'U' → logprob: -18.375009536743164
    5. '```' → logprob: -18.500009536743164
    6. '(User' → logprob: -19.125009536743164
    7. '(
' → logprob: -19.375009536743164
    8. '\(' → logprob: -19.750009536743164
    9. '_U' → logprob: -20.625009536743164
    10. ' ' → logprob: -20.750009536743164

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',f' → logprob: -13.500006675720215
    4. ',
' → logprob: -14.875006675720215
    5. 'fact' → logprob: -17.1250057220459
    6. ')' → logprob: -17.5000057220459
    7. ',

' → logprob: -18.0000057220459
    8. '‌,' → logprob: -18.1250057220459
    9. ' fact' → logprob: -18.3750057220459
    10. ',)' → logprob: -19.3750057220459

Token 379: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029753267765045166
    2. ' fact' → logprob: -3.5297532081604004
    3. '_fact' → logprob: -14.029753684997559
    4. 'facts' → logprob: -14.529753684997559
    5. 'Fact' → logprob: -14.654753684997559
    6. '.fact' → logprob: -15.279753684997559
    7. 'factor' → logprob: -15.404753684997559
    8. ' fakt' → logprob: -15.404753684997559
    9. ' ' → logprob: -16.029752731323242
    10. ')' → logprob: -16.779752731323242

Token 380: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.007676079869270325
    2. ',' → logprob: -4.882676124572754
    3. 'inv' → logprob: -10.007676124572754
    4. '   ' → logprob: -11.757676124572754
    5. '_,' → logprob: -12.382676124572754
    6. '_INV' → logprob: -12.757676124572754
    7. ' ,' → logprob: -12.882676124572754
    8. '```' → logprob: -13.507676124572754
    9. ',
' → logprob: -13.632676124572754
    10. 'Inv' → logprob: -14.132676124572754

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.375007629394531
    4. ',
' → logprob: -15.000007629394531
    5. '```' → logprob: -17.25000762939453
    6. '`,' → logprob: -18.25000762939453
    7. ',

' → logprob: -18.25000762939453
    8. '(),' → logprob: -18.50000762939453
    9. ')' → logprob: -18.75000762939453
    10. '_,' → logprob: -18.87500762939453

Token 382: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02975187823176384
    2. ' MOD' → logprob: -3.529751777648926
    3. '.MOD' → logprob: -14.279751777648926
    4. '_MOD' → logprob: -14.779751777648926
    5. '   ' → logprob: -15.654751777648926
    6. ' ' → logprob: -16.654752731323242
    7. 'MO' → logprob: -16.779752731323242
    8. ')' → logprob: -17.029752731323242
    9. '0' → logprob: -17.779752731323242
    10. '10' → logprob: -18.154752731323242

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06378800421953201
    2. ')
' → logprob: -2.8137879371643066
    3. '   ' → logprob: -6.313787937164307
    4. ')
' → logprob: -12.688788414001465
    5. ',' → logprob: -12.813788414001465
    6. ' )' → logprob: -14.688788414001465
    7. ')

' → logprob: -14.813788414001465
    8. '),' → logprob: -15.313788414001465
    9. ' )
' → logprob: -15.688788414001465
    10. ' ' → logprob: -15.688788414001465

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003078142472077161
    2. 'compute' → logprob: -8.1253080368042
    3. ' compute' → logprob: -11.3753080368042
    4. '(com' → logprob: -16.000307083129883
    5. '	com' → logprob: -16.500307083129883
    6. 'def' → logprob: -16.500307083129883
    7. '```' → logprob: -17.125307083129883
    8. '   ' → logprob: -17.625307083129883
    9. '
' → logprob: -18.375307083129883
    10. '       ' → logprob: -18.500307083129883

Token 385: ' compute' (ID: 23864)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02403484843671322
    2. 'compute' (adapté à ' compute') → logprob: -3.7740347385406494
    3. ' compute' → logprob: -7.1490349769592285
    4. '```' → logprob: -13.02403450012207
    5. '   ' → logprob: -15.02403450012207
    6. ' ' → logprob: -15.27403450012207
    7. '  ' → logprob: -15.77403450012207
    8. 'def' → logprob: -15.89903450012207
    9. '.compute' → logprob: -16.39903450012207
    10. '_compute' → logprob: -16.52403450012207

Token 386: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -2.7610454708337784e-05
    2. 'two' → logprob: -10.500027656555176
    3. '_tw' → logprob: -18.75002670288086
    4. '_three' → logprob: -18.75002670288086
    5. ' two' → logprob: -18.87502670288086
    6. '(two' → logprob: -19.12502670288086
    7. 'Two' → logprob: -19.75002670288086
    8. '_TWO' → logprob: -20.37502670288086
    9. '```' → logprob: -21.25002670288086
    10. '_t' → logprob: -21.75002670288086

Token 387: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.011074470356106758
    2. '(U' → logprob: -4.511074542999268
    3. '_' → logprob: -11.13607406616211
    4. '(' → logprob: -12.38607406616211
    5. 'inv' → logprob: -13.01107406616211
    6. '_inverse' → logprob: -13.01107406616211
    7. '_INV' → logprob: -13.26107406616211
    8. '(_' → logprob: -14.38607406616211
    9. '_in' → logprob: -15.26107406616211
    10. '```' → logprob: -15.38607406616211

Token 388: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.0005020392127335072
    2. '_U' → logprob: -8.12550163269043
    3. '(' → logprob: -8.50050163269043
    4. '_(' → logprob: -14.00050163269043
    5. '_' → logprob: -14.25050163269043
    6. '```' → logprob: -14.87550163269043
    7. ' (' → logprob: -15.50050163269043
    8. 'U' → logprob: -15.62550163269043
    9. '	U' → logprob: -16.37550163269043
    10. '(_' → logprob: -16.62550163269043

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004458044422790408
    2. ',U' → logprob: -7.75044584274292
    3. ' ,' → logprob: -11.250445365905762
    4. ',
' → logprob: -14.000445365905762
    5. '(U' → logprob: -14.875445365905762
    6. 'U' → logprob: -14.875445365905762
    7. '<|end|>' → logprob: -15.750445365905762
    8. ')' → logprob: -16.000446319580078
    9. '(' → logprob: -16.125446319580078
    10. ' U' → logprob: -17.000446319580078

Token 390: ' two' (ID: 1920)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.08414535224437714
    2. 'two' → logprob: -3.0841453075408936
    3. ' U' → logprob: -3.5841453075408936
    4. ' two' → logprob: -4.959145545959473
    5. ' ' → logprob: -9.084145545959473
    6. '   ' → logprob: -11.459145545959473
    7. 'MOD' → logprob: -11.834145545959473
    8. ')' → logprob: -12.084145545959473
    9. '(U' → logprob: -12.584145545959473
    10. '(two' → logprob: -12.959145545959473

Token 391: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0005045388825237751
    2. ',' → logprob: -7.750504493713379
    3. 'inv' → logprob: -9.625504493713379
    4. ',_' → logprob: -13.125504493713379
    5. 'Inv' → logprob: -13.500504493713379
    6. '_,' → logprob: -13.625504493713379
    7. '_INV' → logprob: -14.125504493713379
    8. ',
' → logprob: -14.375504493713379
    9. '_in' → logprob: -14.625504493713379
    10. '   ' → logprob: -15.375504493713379

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. ',U' → logprob: -9.500106811523438
    3. ' ,' → logprob: -10.375106811523438
    4. ')' → logprob: -14.875106811523438
    5. 'U' → logprob: -15.125106811523438
    6. ',
' → logprob: -15.625106811523438
    7. '(U' → logprob: -16.250106811523438
    8. '(' → logprob: -17.375106811523438
    9. ' U' → logprob: -17.500106811523438
    10. '`,' → logprob: -17.625106811523438

Token 393: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033558503491804004
    2. ' MOD' → logprob: -8.000335693359375
    3. '_MOD' → logprob: -16.875335693359375
    4. ' ' → logprob: -17.375335693359375
    5. 'MO' → logprob: -17.375335693359375
    6. '.MOD' → logprob: -17.500335693359375
    7. '   ' → logprob: -18.500335693359375
    8. 'M' → logprob: -18.500335693359375
    9. 'MODE' → logprob: -19.500335693359375
    10. 'MD' → logprob: -20.250335693359375

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007158888038247824
    2. ')
' → logprob: -7.250715732574463
    3. '   ' → logprob: -12.375716209411621
    4. ')return' → logprob: -14.125716209411621
    5. ' )' → logprob: -14.875716209411621
    6. ')

' → logprob: -15.125716209411621
    7. ')
' → logprob: -15.625716209411621
    8. ')#' → logprob: -16.625715255737305
    9. ')`' → logprob: -17.125715255737305
    10. '))' → logprob: -17.125715255737305

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001673061487963423
    2. ' return' → logprob: -9.750166893005371
    3. '
' → logprob: -10.125166893005371
    4. '    
' → logprob: -10.375166893005371
    5. 'return' → logprob: -10.750166893005371
    6. '<|end|>' → logprob: -11.625166893005371
    7. '	return' → logprob: -12.875166893005371
    8. ')' → logprob: -13.375166893005371
    9. '```' → logprob: -13.625166893005371
    10. '<|end|>' → logprob: -15.375166893005371

Token 396: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03012971766293049
    2. 'return' (adapté à ' return') → logprob: -3.5301296710968018
    3. ' return' → logprob: -7.905129909515381
    4. '	return' → logprob: -11.655129432678223
    5. '```' → logprob: -14.655129432678223
    6. '    
' → logprob: -14.905129432678223
    7. '{return' → logprob: -15.655129432678223
    8. '       ' → logprob: -16.15513038635254
    9. ' ' → logprob: -16.28013038635254
    10. '
' → logprob: -16.53013038635254

Token 397: ' fact' (ID: 2840)
  Prédit: ' U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.9779633283615112
    2. ' fact' → logprob: -0.9779633283615112
    3. 'U' → logprob: -1.8529633283615112
    4. 'fact' → logprob: -2.477963447570801
    5. '(U' → logprob: -5.602963447570801
    6. ' (' → logprob: -6.227963447570801
    7. ' ' → logprob: -7.102963447570801
    8. '(' → logprob: -8.3529634475708
    9. '  ' → logprob: -10.0404634475708
    10. 'Fact' → logprob: -10.1029634475708

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00761218648403883
    2. '<|end|>' → logprob: -5.132612228393555
    3. '_,' → logprob: -7.257612228393555
    4. ',f' → logprob: -8.007612228393555
    5. '_fact' → logprob: -8.382612228393555
    6. ',
' → logprob: -8.507612228393555
    7. 'fact' → logprob: -9.757612228393555
    8. ',_' → logprob: -10.382612228393555
    9. '[' → logprob: -10.507612228393555
    10. '_' → logprob: -10.507612228393555

Token 399: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00861468818038702
    2. ' fact' → logprob: -4.758614540100098
    3. '_fact' → logprob: -16.633615493774414
    4. 'Fact' → logprob: -18.508615493774414
    5. 'facts' → logprob: -18.508615493774414
    6. '.fact' → logprob: -19.258615493774414
    7. 'factor' → logprob: -20.008615493774414
    8. 'f' → logprob: -20.133615493774414
    9. ' fakt' → logprob: -20.508615493774414
    10. ' ' → logprob: -20.758615493774414

Token 400: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0007176732178777456
    2. 'inv' → logprob: -7.250717639923096
    3. ',' → logprob: -12.250718116760254
    4. '_fact' → logprob: -13.750718116760254
    5. 'fact' → logprob: -14.625718116760254
    6. '_in' → logprob: -15.250718116760254
    7. '_,' → logprob: -15.625718116760254
    8. '_inf' → logprob: -15.750718116760254
    9. '
' → logprob: -16.000717163085938
    10. '_' → logprob: -16.250717163085938

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004985823179595172
    2. ' ,' → logprob: -8.50049877166748
    3. ' two' → logprob: -8.87549877166748
    4. '   ' → logprob: -9.62549877166748
    5. ',
' → logprob: -9.87549877166748
    6. 'two' → logprob: -10.62549877166748
    7. ',t' → logprob: -12.00049877166748
    8. '[' → logprob: -12.62549877166748
    9. '(two' → logprob: -13.50049877166748
    10. ')' → logprob: -15.00049877166748

Token 402: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.01815006136894226
    2. ' two' → logprob: -4.0181498527526855
    3. '   ' → logprob: -15.893150329589844
    4. ' ' → logprob: -17.143150329589844
    5. '(two' → logprob: -18.143150329589844
    6. 'Two' → logprob: -18.518150329589844
    7. '
' → logprob: -19.893150329589844
    8. '2' → logprob: -20.018150329589844
    9. 'tw' → logprob: -20.018150329589844
    10. '_two' → logprob: -20.143150329589844

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017982252757064998
    2. ',t' → logprob: -9.1251802444458
    3. ',
' → logprob: -10.6251802444458
    4. '_,' → logprob: -10.7501802444458
    5. ' ,' → logprob: -11.3751802444458
    6. ',_' → logprob: -12.5001802444458
    7. 'two' → logprob: -12.6251802444458
    8. ' two' → logprob: -13.6251802444458
    9. '   ' → logprob: -14.5001802444458
    10. '_' → logprob: -14.6251802444458

Token 404: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.061967913061380386
    2. ' two' → logprob: -2.8119678497314453
    3. '(two' → logprob: -16.061967849731445
    4. ' ' → logprob: -16.311967849731445
    5. '   ' → logprob: -17.436967849731445
    6. '_two' → logprob: -17.936967849731445
    7. 'Two' → logprob: -19.436967849731445
    8. 'tw' → logprob: -19.561967849731445
    9. '.two' → logprob: -19.936967849731445
    10. '2' → logprob: -19.936967849731445

Token 405: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.24206474423408508
    2. '_' → logprob: -1.8670647144317627
    3. '<|end|>' → logprob: -3.4920647144317627
    4. '[' → logprob: -4.367064952850342
    5. ']' → logprob: -6.242064952850342
    6. ')' → logprob: -6.492064952850342
    7. '```' → logprob: -6.617064952850342
    8. 'n' → logprob: -6.742064952850342
    9. 'w' → logprob: -6.742064952850342
    10. ',' → logprob: -6.867064952850342

Token 406: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7010061740875244
    2. '<|end|>' → logprob: -0.8260061740875244
    3. '
' → logprob: -3.9510061740875244
    4. ')' → logprob: -4.326005935668945
    5. '#' → logprob: -4.451005935668945
    6. '```' → logprob: -4.576005935668945
    7. '[' → logprob: -4.951005935668945
    8. '(' → logprob: -6.701005935668945
    9. '<|end|>' → logprob: -7.076005935668945
    10. ' def' → logprob: -7.701005935668945

Token 408: ' comb' (ID: 4134)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -1.007506012916565
    2. ' combine' → logprob: -1.757506012916565
    3. ' n' → logprob: -2.0075058937072754
    4. ' comb' → logprob: -2.3825058937072754
    5. ' factorial' → logprob: -3.2575058937072754
    6. '_bin' → logprob: -3.3825058937072754
    7. '_comb' → logprob: -3.5075058937072754
    8. ' compute' → logprob: -3.6325058937072754
    9. ' get' → logprob: -3.8825058937072754
    10. ' combination' → logprob: -4.007505893707275

Token 409: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0026263119652867317
    2. 'ination' → logprob: -6.002626419067383
    3. '(N' → logprob: -9.377626419067383
    4. '(i' → logprob: -10.502626419067383
    5. '(' → logprob: -11.627626419067383
    6. 'INATION' → logprob: -12.377626419067383
    7. 'in' → logprob: -12.502626419067383
    8. '(int' → logprob: -12.627626419067383
    9. 'n' → logprob: -12.752626419067383
    10. '(in' → logprob: -13.127626419067383

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ',k' → logprob: -10.125065803527832
    3. ',n' → logprob: -10.875065803527832
    4. ' ,' → logprob: -12.750065803527832
    5. ',r' → logprob: -13.500065803527832
    6. '_,' → logprob: -14.125065803527832
    7. ',m' → logprob: -14.500065803527832
    8. ',
' → logprob: -14.750065803527832
    9. ',N' → logprob: -16.00006675720215
    10. 'm' → logprob: -16.37506675720215

Token 411: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3869476318359375
    2. 'r' → logprob: -1.1369476318359375
    3. ' r' → logprob: -10.636947631835938
    4. '
' → logprob: -10.886947631835938
    5. ' k' → logprob: -11.136947631835938
    6. '   ' → logprob: -11.511947631835938
    7. '
' → logprob: -12.761947631835938
    8. '```' → logprob: -13.011947631835938
    9. ' ' → logprob: -14.011947631835938
    10. ')' → logprob: -14.136947631835938

Token 412: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5780027508735657
    2. ',' → logprob: -0.8280027508735657
    3. '):
' → logprob: -6.2030029296875
    4. ')' → logprob: -10.8280029296875
    5. '):
' → logprob: -12.2030029296875
    6. '   ' → logprob: -12.4530029296875
    7. ':' → logprob: -12.9530029296875
    8. ' ,' → logprob: -13.2030029296875
    9. ' ):' → logprob: -13.8280029296875
    10. 'def' → logprob: -13.9530029296875

Token 413: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1002117469906807
    2. ' fact' → logprob: -2.3502118587493896
    3. '   ' → logprob: -12.725212097167969
    4. ' ' → logprob: -13.475212097167969
    5. '_fact' → logprob: -15.350212097167969
    6. ')' → logprob: -15.850212097167969
    7. 'f' → logprob: -16.35021209716797
    8. ' fakt' → logprob: -16.60021209716797
    9. 'facts' → logprob: -16.72521209716797
    10. '  ' → logprob: -16.85021209716797

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -10.875022888183594
    3. '_,' → logprob: -13.500022888183594
    4. ',
' → logprob: -14.500022888183594
    5. ',f' → logprob: -14.625022888183594
    6. 's' → logprob: -15.375022888183594
    7. '):' → logprob: -15.875022888183594
    8. '   ' → logprob: -16.625022888183594
    9. ',,' → logprob: -16.625022888183594
    10. '),' → logprob: -16.750022888183594

Token 415: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06996233761310577
    2. ' fact' → logprob: -2.6949622631073
    3. '   ' → logprob: -12.069962501525879
    4. ' ' → logprob: -12.194962501525879
    5. '_fact' → logprob: -12.694962501525879
    6. 'two' → logprob: -13.069962501525879
    7. 'k' → logprob: -13.194962501525879
    8. ')' → logprob: -13.319962501525879
    9. 'mod' → logprob: -13.694962501525879
    10. 'Fact' → logprob: -13.944962501525879

Token 416: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.1888679839321412e-05
    2. ',' → logprob: -11.250021934509277
    3. 'inv' → logprob: -12.125021934509277
    4. '_,' → logprob: -14.000021934509277
    5. '):' → logprob: -14.125021934509277
    6. ')' → logprob: -14.625021934509277
    7. '_INV' → logprob: -15.250021934509277
    8. '_int' → logprob: -15.500021934509277
    9. '_' → logprob: -15.750021934509277
    10. '):
' → logprob: -15.875021934509277

Token 417: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10418874770402908
    2. ',' → logprob: -2.4791886806488037
    3. '):
' → logprob: -4.229188919067383
    4. ')' → logprob: -8.229188919067383
    5. ' ):' → logprob: -8.229188919067383
    6. ' ,' → logprob: -11.104188919067383
    7. '):

' → logprob: -11.479188919067383
    8. '):
' → logprob: -12.479188919067383
    9. '   ' → logprob: -13.354188919067383
    10. ',
' → logprob: -13.854188919067383

Token 418: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.15708182752132416
    2. ' MOD' → logprob: -2.1570818424224854
    3. ' two' → logprob: -4.157081604003906
    4. 'two' → logprob: -4.282081604003906
    5. ' ' → logprob: -9.157081604003906
    6. '   ' → logprob: -9.282081604003906
    7. 'mod' → logprob: -11.032081604003906
    8. '_MOD' → logprob: -11.907081604003906
    9. ')' → logprob: -12.032081604003906
    10. '    ' → logprob: -13.657081604003906

Token 419: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20150865614414215
    2. '):
' → logprob: -1.701508641242981
    3. '):
' → logprob: -9.326508522033691
    4. ')' → logprob: -12.576508522033691
    5. '):

' → logprob: -13.576508522033691
    6. '   ' → logprob: -13.576508522033691
    7. ' ):' → logprob: -15.326508522033691
    8. ' ' → logprob: -17.326509475708008
    9. ':' → logprob: -17.576509475708008
    10. ' ):
' → logprob: -17.826509475708008

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016666119918227196
    2. ' if' → logprob: -4.266665935516357
    3. ' 
' → logprob: -7.141665935516357
    4. ' return' → logprob: -7.516665935516357
    5. '    
' → logprob: -7.641665935516357
    6. '[' → logprob: -8.891666412353516
    7. '(n' → logprob: -9.016666412353516
    8. '(' → logprob: -9.391666412353516
    9. '    ' → logprob: -10.141666412353516
    10. '```' → logprob: -10.141666412353516

Token 421: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5551310181617737
    2. ' if' → logprob: -1.055130958557129
    3. 'if' (adapté à ' if') → logprob: -2.555130958557129
    4. ' return' → logprob: -10.055130958557129
    5. '    ' → logprob: -10.180130958557129
    6. '	if' → logprob: -10.555130958557129
    7. '```' → logprob: -11.055130958557129
    8. 'return' → logprob: -11.180130958557129
    9. '    
' → logprob: -11.305130958557129
    10. ' ' → logprob: -11.805130958557129

Token 422: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.12716685235500336
    2. 'k' → logprob: -2.127166748046875
    3. ' n' → logprob: -8.377166748046875
    4. 'n' → logprob: -12.002166748046875
    5. ' not' → logprob: -13.752166748046875
    6. '(k' → logprob: -14.502166748046875
    7. '   ' → logprob: -14.877166748046875
    8. ' (' → logprob: -15.502166748046875
    9. '	k' → logprob: -15.502166748046875
    10. ' ' → logprob: -15.752166748046875

Token 423: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2620556056499481
    2. '>' → logprob: -1.5120556354522705
    3. ' <' → logprob: -5.137055397033691
    4. '<' → logprob: -5.512055397033691
    5. ' ' → logprob: -9.762055397033691
    6. ' ==' → logprob: -10.887055397033691
    7. '<n' → logprob: -10.887055397033691
    8. '">' → logprob: -11.137055397033691
    9. '==' → logprob: -11.887055397033691
    10. '   ' → logprob: -11.887055397033691

Token 424: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001478796184528619
    2. '=' → logprob: -9.000147819519043
    3. ' ' → logprob: -10.625147819519043
    4. 'or' → logprob: -17.25014877319336
    5. '۰' → logprob: -17.50014877319336
    6. '```' → logprob: -17.62514877319336
    7. ' =' → logprob: -17.75014877319336
    8. '1' → logprob: -19.50014877319336
    9. '>' → logprob: -20.00014877319336
    10. '==' → logprob: -20.00014877319336

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5954712075181305e-05
    2. '=' → logprob: -10.250036239624023
    3. ' ' → logprob: -14.625036239624023
    4. 'or' → logprob: -16.625036239624023
    5. ' =' → logprob: -18.500036239624023
    6. '۰' → logprob: -18.875036239624023
    7. '```' → logprob: -19.000036239624023
    8. '1' → logprob: -19.125036239624023
    9. ' or' → logprob: -19.750036239624023
    10. '2' → logprob: -21.562536239624023

Token 426: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00038264848990365863
    2. 'or' → logprob: -7.875382423400879
    3. ' ' → logprob: -13.625382423400879
    4. '	or' → logprob: -13.750382423400879
    5. '<|end|>' → logprob: -16.250383377075195
    6. ')' → logprob: -17.000383377075195
    7. ' ' → logprob: -17.375383377075195
    8. '   ' → logprob: -17.750383377075195
    9. 'n' → logprob: -18.000383377075195
    10. ' или' → logprob: -18.125383377075195

Token 427: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004919105558656156
    2. ' k' → logprob: -7.625492095947266
    3. 'n' → logprob: -12.625492095947266
    4. '   ' → logprob: -14.625492095947266
    5. ' n' → logprob: -16.500492095947266
    6. '	k' → logprob: -16.750492095947266
    7. '>' → logprob: -18.250492095947266
    8. '  ' → logprob: -18.500492095947266
    9. '```' → logprob: -18.500492095947266
    10. ' ' → logprob: -18.750492095947266

Token 428: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07890003174543381
    2. ' >' → logprob: -2.578900098800659
    3. ' or' → logprob: -12.578900337219238
    4. '">' → logprob: -13.203900337219238
    5. '<|end|>' → logprob: -14.078900337219238
    6. 'n' → logprob: -14.578900337219238
    7. '()>' → logprob: -14.703900337219238
    8. 'or' → logprob: -14.953900337219238
    9. ' n' → logprob: -15.453900337219238
    10. ' ' → logprob: -15.453900337219238

Token 429: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868717551231384
    2. ' n' → logprob: -1.1368718147277832
    3. '	n' → logprob: -14.636871337890625
    4. ' ' → logprob: -15.511871337890625
    5. ')n' → logprob: -16.011871337890625
    6. '<|end|>' → logprob: -17.136871337890625
    7. '(n' → logprob: -18.136871337890625
    8. '_n' → logprob: -18.511871337890625
    9. ' н' → logprob: -19.386871337890625
    10. '=n' → logprob: -19.511871337890625

Token 430: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0207653995603323
    2. ':
' → logprob: -4.14576530456543
    3. ':return' → logprob: -5.52076530456543
    4. ' or' → logprob: -7.64576530456543
    5. '   ' → logprob: -8.39576530456543
    6. ' :' → logprob: -12.14576530456543
    7. '       ' → logprob: -13.64576530456543
    8. ' return' → logprob: -13.89576530456543
    9. ' :
' → logprob: -14.27076530456543
    10. 'return' → logprob: -14.27076530456543

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02408163994550705
    2. '   ' → logprob: -3.7740817070007324
    3. ' return' → logprob: -8.024081230163574
    4. 'return' → logprob: -8.524081230163574
    5. '
' → logprob: -8.774081230163574
    6. ':return' → logprob: -10.399081230163574
    7. ':' → logprob: -10.774081230163574
    8. '```' → logprob: -10.899081230163574
    9. ':
' → logprob: -11.149081230163574
    10. ' 
' → logprob: -11.399081230163574

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05485113710165024
    2. ' return' → logprob: -3.3048510551452637
    3. '   ' → logprob: -4.929851055145264
    4. '
' → logprob: -5.179851055145264
    5. '       ' → logprob: -5.679851055145264
    6. ' 
' → logprob: -8.804851531982422
    7. '    ' → logprob: -9.304851531982422
    8. '0' → logprob: -9.679851531982422
    9. '    
' → logprob: -10.554851531982422
    10. ':return' → logprob: -10.679851531982422

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.40475082397461
    4. '   ' → logprob: -19.15475082397461
    5. ' 
' → logprob: -20.65475082397461
    6. '
' → logprob: -20.77975082397461
    7. '  ' → logprob: -21.15475082397461
    8. '۰' → logprob: -21.65475082397461
    9. '  
' → logprob: -22.27975082397461
    10. '    
' → logprob: -22.65475082397461

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -22.25
    4. '000' → logprob: -22.25
    5. '00' → logprob: -22.5
    6. '```' → logprob: -22.625
    7. '۰' → logprob: -23.0
    8. '
' → logprob: -23.5
    9. '０' → logprob: -24.5
    10. 'return' → logprob: -25.125

Token 435: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016757793724536896
    2. '
' → logprob: -4.391757965087891
    3. '    
' → logprob: -5.641757965087891
    4. '  
' → logprob: -8.01675796508789
    5. '<|end|>' → logprob: -8.64175796508789
    6. ' 
' → logprob: -9.64175796508789
    7. '   
' → logprob: -9.64175796508789
    8. ')' → logprob: -11.26675796508789
    9. '\n' → logprob: -11.76675796508789
    10. ' return' → logprob: -12.14175796508789

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000868944451212883
    2. '    
' → logprob: -7.250868797302246
    3. '
' → logprob: -9.125868797302246
    4. ' return' → logprob: -11.000868797302246
    5. '  
' → logprob: -11.250868797302246
    6. ' 
' → logprob: -12.125868797302246
    7. '	return' → logprob: -12.750868797302246
    8. '   
' → logprob: -12.875868797302246
    9. '```' → logprob: -13.125868797302246
    10. '<|end|>' → logprob: -13.125868797302246

Token 437: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6073242425918579
    2. 'return' → logprob: -0.8573242425918579
    3. ' return' → logprob: -3.4823241233825684
    4. '	return' → logprob: -9.607324600219727
    5. '    
' → logprob: -10.357324600219727
    6. 'res' → logprob: -10.982324600219727
    7. 'ret' → logprob: -11.857324600219727
    8. '    ' → logprob: -11.982324600219727
    9. '
' → logprob: -11.982324600219727
    10. 'result' → logprob: -12.357324600219727

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04122377187013626
    2. ' =' → logprob: -3.2912237644195557
    3. '   ' → logprob: -6.541224002838135
    4. '=(' → logprob: -7.916224002838135
    5. '=
' → logprob: -8.166223526000977
    6. 'return' → logprob: -8.291223526000977
    7. '=n' → logprob: -8.291223526000977
    8. '=z' → logprob: -9.291223526000977
    9. '=res' → logprob: -9.291223526000977
    10. '=result' → logprob: -9.666223526000977

Token 439: ' fact' (ID: 2840)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.22014372050762177
    2. 'fact' → logprob: -1.7201436758041382
    3. ' (' → logprob: -4.595143795013428
    4. ' fact' → logprob: -4.845143795013428
    5. '(' → logprob: -8.22014331817627
    6. '((' → logprob: -8.59514331817627
    7. 'f' → logprob: -10.59514331817627
    8. '
' → logprob: -10.97014331817627
    9. 'facts' → logprob: -11.47014331817627
    10. 'factor' → logprob: -11.72014331817627

Token 440: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.011373155459296e-05
    2. 'n' → logprob: -11.000030517578125
    3. '[z' → logprob: -11.875030517578125
    4. '[k' → logprob: -12.750030517578125
    5. '[' → logprob: -12.875030517578125
    6. '   ' → logprob: -15.625030517578125
    7. '(n' → logprob: -15.750030517578125
    8. ' [' → logprob: -16.000030517578125
    9. '```' → logprob: -16.000030517578125
    10. '[i' → logprob: -16.875030517578125

Token 441: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01478998176753521
    2. ']*' → logprob: -4.264790058135986
    3. '-k' → logprob: -7.764790058135986
    4. ']
' → logprob: -8.889789581298828
    5. ' -' → logprob: -10.639789581298828
    6. '-' → logprob: -11.139789581298828
    7. '   ' → logprob: -11.764789581298828
    8. ' ]' → logprob: -12.014789581298828
    9. ']*(' → logprob: -12.264789581298828
    10. ']%' → logprob: -13.514789581298828

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6072738170623779
    2. ' *' → logprob: -1.107273817062378
    3. '*' → logprob: -2.482273817062378
    4. ')' → logprob: -4.482274055480957
    5. '*z' → logprob: -4.982274055480957
    6. 'def' → logprob: -5.357274055480957
    7. '
' → logprob: -5.857274055480957
    8. 'fact' → logprob: -6.232274055480957
    9. ' ' → logprob: -6.357274055480957
    10. '*(' → logprob: -6.482274055480957

Token 443: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4522591829299927
    2. 'z' (adapté à ' z') → logprob: -1.5772591829299927
    3. ' z' → logprob: -2.577259063720703
    4. 'return' → logprob: -3.452259063720703
    5. '*z' → logprob: -4.077259063720703
    6. ' return' → logprob: -4.827259063720703
    7. '*' → logprob: -5.327259063720703
    8. 'res' → logprob: -5.577259063720703
    9. 'result' → logprob: -5.702259063720703
    10. ' /' → logprob: -6.327259063720703

Token 444: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05661889538168907
    2. ' =' → logprob: -3.3066189289093018
    3. '*=' → logprob: -4.056618690490723
    4. ' *=' → logprob: -7.556618690490723
    5. '=z' → logprob: -7.806618690490723
    6. '=(' → logprob: -9.556618690490723
    7. '*' → logprob: -10.056618690490723
    8. '   ' → logprob: -11.056618690490723
    9. '*z' → logprob: -11.431618690490723
    10. '//=' → logprob: -11.556618690490723

Token 445: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0008065330912359059
    2. ' fact' → logprob: -7.1258063316345215
    3. '_fact' → logprob: -13.75080680847168
    4. '(' → logprob: -15.12580680847168
    5. 'factor' → logprob: -15.37580680847168
    6. '.fact' → logprob: -15.62580680847168
    7. 'Fact' → logprob: -15.87580680847168
    8. '(f' → logprob: -16.37580680847168
    9. '   ' → logprob: -17.12580680847168
    10. 'facts' → logprob: -17.12580680847168

Token 446: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00016396844875998795
    2. '[k' → logprob: -8.750164031982422
    3. '[n' → logprob: -12.500164031982422
    4. 'inv' → logprob: -13.625164031982422
    5. '_inf' → logprob: -15.750164031982422
    6. '_INV' → logprob: -16.125164031982422
    7. '[' → logprob: -16.500164031982422
    8. '[f' → logprob: -17.000164031982422
    9. 'Inv' → logprob: -17.750164031982422
    10. 'k' → logprob: -18.125164031982422

Token 447: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.729906196298543e-06
    2. 'k' → logprob: -11.750009536743164
    3. '[n' → logprob: -13.750009536743164
    4. '[z' → logprob: -14.875009536743164
    5. '
' → logprob: -16.375009536743164
    6. '[' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '(k' → logprob: -17.125009536743164
    9. '```' → logprob: -17.625009536743164
    10. ' [' → logprob: -18.000009536743164

Token 448: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003627865808084607
    2. ']
' → logprob: -5.628627777099609
    3. ']%' → logprob: -11.62862777709961
    4. ']*' → logprob: -11.75362777709961
    5. ']

' → logprob: -12.62862777709961
    6. ']
' → logprob: -12.75362777709961
    7. ' ]' → logprob: -13.25362777709961
    8. '];' → logprob: -13.87862777709961
    9. '[n' → logprob: -14.12862777709961
    10. '[' → logprob: -14.25362777709961

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.332453966140747
    2. ' z' → logprob: -1.332453966140747
    3. ' 
' → logprob: -1.957453966140747
    4. 'z' → logprob: -2.082453966140747
    5. '
' → logprob: -2.707453966140747
    6. '*z' → logprob: -2.832453966140747
    7. '<|end|>' → logprob: -3.582453966140747
    8. '    
' → logprob: -3.707453966140747
    9. '	z' → logprob: -5.082453727722168
    10. '  
' → logprob: -5.207453727722168

Token 450: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -1.0106077194213867
    2. '   ' → logprob: -1.2606077194213867
    3. 'z' (adapté à ' z') → logprob: -1.7606077194213867
    4. ' 
' → logprob: -2.5106077194213867
    5. '    
' → logprob: -3.2606077194213867
    6. '
' → logprob: -3.3856077194213867
    7. '*z' → logprob: -4.260607719421387
    8. '	z' → logprob: -5.385607719421387
    9. ' ' → logprob: -6.010607719421387
    10. '  
' → logprob: -6.385607719421387

Token 451: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4066014289855957
    2. '*=' → logprob: -1.1566014289855957
    3. ' %=' → logprob: -4.406601428985596
    4. ' *=' → logprob: -5.031601428985596
    5. '%' → logprob: -7.781601428985596
    6. '=' → logprob: -8.531600952148438
    7. '   ' → logprob: -9.281600952148438
    8. '```' → logprob: -9.781600952148438
    9. ')' → logprob: -11.156600952148438
    10. '	' → logprob: -11.656600952148438

Token 452: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.16022422909736633
    2. ' MOD' → logprob: -1.910224199295044
    3. '_MOD' → logprob: -17.28522491455078
    4. '.MOD' → logprob: -18.03522491455078
    5. ' ' → logprob: -18.53522491455078
    6. '   ' → logprob: -19.53522491455078
    7. 'MO' → logprob: -20.28522491455078
    8. '(M' → logprob: -20.28522491455078
    9. '```' → logprob: -21.41022491455078
    10. ' ' → logprob: -21.66022491455078

Token 453: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019107189029455185
    2. 'z' → logprob: -5.019107341766357
    3. '
' → logprob: -5.019107341766357
    4. ' z' → logprob: -5.644107341766357
    5. ' 
' → logprob: -6.894107341766357
    6. '    
' → logprob: -7.144107341766357
    7. ' ' → logprob: -8.8941068649292
    8. '  
' → logprob: -9.3941068649292
    9. '```' → logprob: -10.5191068649292
    10. '   
' → logprob: -10.6441068649292

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15272855758666992
    2. 'z' → logprob: -2.27772855758667
    3. ' z' → logprob: -3.27772855758667
    4. '
' → logprob: -7.27772855758667
    5. ' ' → logprob: -8.027729034423828
    6. '	z' → logprob: -8.777729034423828
    7. '    
' → logprob: -9.652729034423828
    8. ' 
' → logprob: -9.777729034423828
    9. '    ' → logprob: -10.527729034423828
    10. '*z' → logprob: -10.902729034423828

Token 455: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.7064250111579895
    2. ' z' → logprob: -1.2064249515533447
    3. '   ' → logprob: -1.5814249515533447
    4. '	z' → logprob: -7.081425189971924
    5. ' ' → logprob: -7.831425189971924
    6. ' 
' → logprob: -8.956424713134766
    7. '
' → logprob: -8.956424713134766
    8. '*z' → logprob: -10.206424713134766
    9. ',z' → logprob: -10.956424713134766
    10. '    ' → logprob: -11.081424713134766

Token 456: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.03036346100270748
    2. ' *=' → logprob: -3.9053635597229004
    3. '   ' → logprob: -5.1553635597229
    4. '*' → logprob: -5.5303635597229
    5. '  ' → logprob: -11.405363082885742
    6. '*
' → logprob: -12.030363082885742
    7. ' ' → logprob: -12.405363082885742
    8. '	' → logprob: -12.405363082885742
    9. ' ' → logprob: -12.530363082885742
    10. '    
' → logprob: -12.655363082885742

Token 457: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0031793788075447083
    2. ' fact' → logprob: -5.753179550170898
    3. 'factor' → logprob: -14.378179550170898
    4. '   ' → logprob: -14.878179550170898
    5. '_fact' → logprob: -15.128179550170898
    6. 'facts' → logprob: -15.378179550170898
    7. '.fact' → logprob: -15.878179550170898
    8. 'Fact' → logprob: -16.7531795501709
    9. 'fac' → logprob: -17.0031795501709
    10. '(f' → logprob: -17.8781795501709

Token 458: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -6.027225754223764e-05
    2. '[n' → logprob: -9.875060081481934
    3. 'inv' → logprob: -11.750060081481934
    4. '_INV' → logprob: -15.000060081481934
    5. 'n' → logprob: -15.750060081481934
    6. '```' → logprob: -15.750060081481934
    7. '
' → logprob: -16.75006103515625
    8. 'Inv' → logprob: -16.87506103515625
    9. '   ' → logprob: -17.00006103515625
    10. '[' → logprob: -17.37506103515625

Token 459: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.088346359931165e-07
    2. '[k' → logprob: -14.500000953674316
    3. 'n' → logprob: -15.375000953674316
    4. '[' → logprob: -15.500000953674316
    5. '[
' → logprob: -18.75
    6. '(n' → logprob: -18.875
    7. ' [' → logprob: -19.125
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -20.625
    10. '[next' → logprob: -21.375

Token 460: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.03404248133301735
    2. ' -' → logprob: -3.7840425968170166
    3. '-' → logprob: -4.5340423583984375
    4. '-
' → logprob: -13.784042358398438
    5. '[k' → logprob: -15.784042358398438
    6. '-K' → logprob: -16.284042358398438
    7. '-kn' → logprob: -16.409042358398438
    8. 'k' → logprob: -16.534042358398438
    9. ' ' → logprob: -17.034042358398438
    10. '   ' → logprob: -17.284042358398438

Token 461: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036098056007176638
    2. ']
' → logprob: -5.628609657287598
    3. ']
' → logprob: -12.503609657287598
    4. ']

' → logprob: -12.628609657287598
    5. ']%' → logprob: -13.878609657287598
    6. ' ]' → logprob: -14.003609657287598
    7. '']' → logprob: -14.253609657287598
    8. '   ' → logprob: -16.003610610961914
    9. '"]' → logprob: -17.003610610961914
    10. '}' → logprob: -17.753610610961914

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7675790786743164
    2. '%' → logprob: -1.0175790786743164
    3. '
' → logprob: -2.3925790786743164
    4. '    
' → logprob: -3.8925790786743164
    5. ' 
' → logprob: -4.017579078674316
    6. '<|end|>' → logprob: -4.017579078674316
    7. '  
' → logprob: -4.892579078674316
    8. '%
' → logprob: -5.517579078674316
    9. ' z' → logprob: -5.767579078674316
    10. '   
' → logprob: -5.892579078674316

Token 463: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.8972882628440857
    2. '%' → logprob: -1.1472883224487305
    3. 'z' (adapté à ' z') → logprob: -2.2722883224487305
    4. ' %=' → logprob: -2.2722883224487305
    5. ' %' → logprob: -2.8972883224487305
    6. '   ' → logprob: -4.8972883224487305
    7. '%=' → logprob: -6.1472883224487305
    8. ' ' → logprob: -6.8972883224487305
    9. '%
' → logprob: -6.8972883224487305
    10. ' %
' → logprob: -8.39728832244873

Token 464: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.1974986493587494
    2. ' %=' → logprob: -2.1974985599517822
    3. '%' → logprob: -2.6974985599517822
    4. ' %' → logprob: -7.572498798370361
    5. '=' → logprob: -9.697498321533203
    6. '	' → logprob: -9.822498321533203
    7. '```' → logprob: -10.197498321533203
    8. '   ' → logprob: -10.572498321533203
    9. '%
' → logprob: -10.697498321533203
    10. ')%' → logprob: -10.822498321533203

Token 465: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804149478673935
    2. ' MOD' → logprob: -3.288041591644287
    3. '_MOD' → logprob: -16.663042068481445
    4. '.MOD' → logprob: -18.538042068481445
    5. ' ' → logprob: -18.663042068481445
    6. 'MO' → logprob: -20.163042068481445
    7. '   ' → logprob: -20.163042068481445
    8. 'MODE' → logprob: -21.288042068481445
    9. 'M' → logprob: -21.538042068481445
    10. '```' → logprob: -21.788042068481445

Token 466: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009614814771339297
    2. '
' → logprob: -7.6259613037109375
    3. 'return' → logprob: -8.125961303710938
    4. '    
' → logprob: -9.375961303710938
    5. ' return' → logprob: -9.875961303710938
    6. '	return' → logprob: -10.250961303710938
    7. '  
' → logprob: -13.000961303710938
    8. '       ' → logprob: -14.125961303710938
    9. '   
' → logprob: -14.250961303710938
    10. ':return' → logprob: -14.750961303710938

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003819332632701844
    2. 'return' → logprob: -8.000381469726562
    3. ' return' → logprob: -10.500381469726562
    4. '
' → logprob: -11.875381469726562
    5. '	return' → logprob: -11.875381469726562
    6. '    
' → logprob: -12.250381469726562
    7. 'def' → logprob: -17.000381469726562
    8. ':return' → logprob: -17.000381469726562
    9. '       ' → logprob: -17.125381469726562
    10. '  
' → logprob: -17.375381469726562

Token 468: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005392124294303358
    2. '   ' → logprob: -8.00053882598877
    3. ' return' → logprob: -8.50053882598877
    4. '	return' → logprob: -15.37553882598877
    5. '
' → logprob: -16.750539779663086
    6. 'eturn' → logprob: -17.875539779663086
    7. '    
' → logprob: -18.000539779663086
    8. '```' → logprob: -18.000539779663086
    9. ' ' → logprob: -18.750539779663086
    10. ':return' → logprob: -18.875539779663086

Token 469: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2519315779209137
    2. ' z' → logprob: -1.5019315481185913
    3. 'int' → logprob: -14.126931190490723
    4. '	z' → logprob: -14.501931190490723
    5. '(z' → logprob: -14.501931190490723
    6. ' ' → logprob: -14.626931190490723
    7. ' ' → logprob: -15.501931190490723
    8. ' int' → logprob: -16.37693214416504
    9. '   ' → logprob: -16.62693214416504
    10. '
' → logprob: -17.25193214416504

Token 470: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4272910952568054
    2. '<|end|>' → logprob: -1.5522911548614502
    3. '
' → logprob: -2.55229115486145
    4. '#' → logprob: -3.92729115486145
    5. ')' → logprob: -3.92729115486145
    6. '(' → logprob: -5.677290916442871
    7. '\' → logprob: -5.927290916442871
    8. '```' → logprob: -6.052290916442871
    9. ':' → logprob: -6.177290916442871
    10. '\n' → logprob: -6.427290916442871

Token 472: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12792342901229858
    2. 'main' → logprob: -2.5029234886169434
    3. ' solve' → logprob: -4.002923488616943
    4. ' count' → logprob: -4.627923488616943
    5. 'solve' → logprob: -5.627923488616943
    6. 'count' → logprob: -5.877923488616943
    7. ' factorial' → logprob: -6.877923488616943
    8. 'pow' → logprob: -7.752923488616943
    9. ' pow' → logprob: -7.752923488616943
    10. ' calculate' → logprob: -8.002923011779785

Token 473: '_input' (ID: 12507)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_comb' → logprob: -1.7584885358810425
    2. '_' → logprob: -1.8834885358810425
    3. '_sum' → logprob: -2.508488655090332
    4. '_n' → logprob: -2.633488655090332
    5. '_factor' → logprob: -2.883488655090332
    6. '_MOD' → logprob: -2.883488655090332
    7. '_MAX' → logprob: -2.883488655090332
    8. '_fact' → logprob: -3.258488655090332
    9. '_answer' → logprob: -3.633488655090332
    10. '_max' → logprob: -3.758488655090332

Token 474: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013163878582417965
    2. '()' → logprob: -4.638164043426514
    3. '():
' → logprob: -5.888164043426514
    4. '_line' → logprob: -8.388163566589355
    5. '_' → logprob: -8.888163566589355
    6. '().' → logprob: -10.138163566589355
    7. 's' → logprob: -10.388163566589355
    8. ' ():' → logprob: -10.513163566589355
    9. '()>' → logprob: -10.638163566589355
    10. '():

' → logprob: -11.263163566589355

Token 475: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8081072568893433
    2. ' return' → logprob: -1.0581072568893433
    3. '   ' → logprob: -2.058107376098633
    4. ' ()' → logprob: -3.183107376098633
    5. 'return' → logprob: -4.308107376098633
    6. ' ' → logprob: -4.683107376098633
    7. '    
' → logprob: -5.808107376098633
    8. ' n' → logprob: -6.183107376098633
    9. ' =' → logprob: -6.308107376098633
    10. '    ' → logprob: -6.433107376098633

Token 476: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03863324597477913
    2. ' return' → logprob: -3.288633346557617
    3. 'n' → logprob: -7.663633346557617
    4. 'int' → logprob: -10.288633346557617
    5. 'import' → logprob: -10.413633346557617
    6. '   ' → logprob: -10.663633346557617
    7. ' n' → logprob: -10.913633346557617
    8. 's' → logprob: -11.538633346557617
    9. 'input' → logprob: -13.413633346557617
    10. 'ret' → logprob: -13.788633346557617

Token 477: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25859013199806213
    2. ' int' → logprob: -1.8835901021957397
    3. 'list' → logprob: -3.5085902214050293
    4. ' list' → logprob: -4.133590221405029
    5. 'input' → logprob: -4.258590221405029
    6. 'map' → logprob: -5.508590221405029
    7. ' input' → logprob: -5.508590221405029
    8. '[int' → logprob: -5.633590221405029
    9. ' map' → logprob: -5.883590221405029
    10. '[]' → logprob: -7.133590221405029

Token 478: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022241568192839622
    2. '(' → logprob: -3.8972415924072266
    3. '(input' → logprob: -6.522241592407227
    4. 'int' → logprob: -9.397241592407227
    5. '(list' → logprob: -10.272241592407227
    6. '(str' → logprob: -10.397241592407227
    7. 'input' → logprob: -10.397241592407227
    8. '(
' → logprob: -10.897241592407227
    9. 'list' → logprob: -10.897241592407227
    10. '<int' → logprob: -12.897241592407227

Token 479: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.055829159915447235
    2. ',' → logprob: -3.3058290481567383
    3. '(input' → logprob: -4.680829048156738
    4. 'input' → logprob: -4.805829048156738
    5. ')' → logprob: -9.680829048156738
    6. '(' → logprob: -10.055829048156738
    7. '(),' → logprob: -10.180829048156738
    8. ' input' → logprob: -10.805829048156738
    9. ',(' → logprob: -12.930829048156738
    10. '   ' → logprob: -13.055829048156738

Token 480: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031804447062313557
    2. ' input' → logprob: -5.753180503845215
    3. 'open' → logprob: -13.503180503845215
    4. ')' → logprob: -13.878180503845215
    5. '   ' → logprob: -15.378180503845215
    6. ' ' → logprob: -16.2531795501709
    7. '(input' → logprob: -16.7531795501709
    8. ',input' → logprob: -17.1281795501709
    9. '=input' → logprob: -17.7531795501709
    10. '	input' → logprob: -18.1281795501709

Token 481: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.967624019831419e-05
    2. '()' → logprob: -9.750060081481934
    3. '())' → logprob: -14.375060081481934
    4. ' ().' → logprob: -14.625060081481934
    5. '(' → logprob: -15.250060081481934
    6. ')' → logprob: -17.625059127807617
    7. '()
' → logprob: -17.625059127807617
    8. '().'' → logprob: -18.625059127807617
    9. '('').' → logprob: -19.500059127807617
    10. ' ()' → logprob: -19.625059127807617

Token 482: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002622894535306841
    2. 'strip' → logprob: -8.250262260437012
    3. ' split' → logprob: -14.125262260437012
    4. '().' → logprob: -16.250263214111328
    5. 'spl' → logprob: -16.625263214111328
    6. 'rstrip' → logprob: -16.750263214111328
    7. '(split' → logprob: -17.625263214111328
    8. 'read' → logprob: -17.625263214111328
    9. '_split' → logprob: -18.875263214111328
    10. ' strip' → logprob: -19.625263214111328

Token 483: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.024724630638957024
    2. ')' → logprob: -3.7747247219085693
    3. '()' → logprob: -6.52472448348999
    4. '(' → logprob: -12.649724960327148
    5. '()))' → logprob: -12.649724960327148
    6. '))' → logprob: -12.774724960327148
    7. ' ())' → logprob: -13.899724960327148
    8. '())
' → logprob: -14.524724960327148
    9. '();)' → logprob: -15.649724960327148
    10. '()]' → logprob: -16.27472496032715

Token 484: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28679656982421875
    2. '<|end|>' → logprob: -1.4117965698242188
    3. '```' → logprob: -6.036796569824219
    4. '<|end|>' → logprob: -6.536796569824219
    5. '
' → logprob: -7.411796569824219
    6. '[' → logprob: -7.911796569824219
    7. '#' → logprob: -8.161796569824219
    8. '\' → logprob: -8.411796569824219
    9. ')' → logprob: -10.036796569824219
    10. '

' → logprob: -10.036796569824219

Token 485: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0033281452488154173
    2. ' solve' → logprob: -6.003328323364258
    3. ' def' → logprob: -7.628328323364258
    4. 'main' → logprob: -8.128328323364258
    5. ' process' → logprob: -9.753328323364258
    6. 'solve' → logprob: -12.003328323364258
    7. 'def' → logprob: -12.503328323364258
    8. ' resolve' → logprob: -14.253328323364258
    9. ' run' → logprob: -15.003328323364258
    10. ' solution' → logprob: -15.128328323364258

Token 486: '_p' (ID: 1359)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24511249363422394
    2. '(_' → logprob: -2.370112419128418
    3. '_' → logprob: -2.995112419128418
    4. '_array' → logprob: -4.870112419128418
    5. '_values' → logprob: -4.995112419128418
    6. '_(' → logprob: -5.120112419128418
    7. '_value' → logprob: -5.245112419128418
    8. '(_)' → logprob: -5.495112419128418
    9. '_state' → logprob: -5.620112419128418
    10. '(n' → logprob: -5.745112419128418

Token 487: '(i' (ID: 3649)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.18276114761829376
    2. 'aram' → logprob: -2.9327611923217773
    3. '(p' → logprob: -3.3077611923217773
    4. 'osition' → logprob: -4.182761192321777
    5. 'ar' → logprob: -4.807761192321777
    6. 'ro' → logprob: -4.932761192321777
    7. '(os' → logprob: -4.932761192321777
    8. '(arr' → logprob: -5.057761192321777
    9. 'refix' → logprob: -5.682761192321777
    10. 'r' → logprob: -5.807761192321777

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019984779879450798
    2. '):' → logprob: -4.519984722137451
    3. ',p' → logprob: -5.394984722137451
    4. ' ,' → logprob: -6.269984722137451
    5. ')' → logprob: -6.519984722137451
    6. 'ro' → logprob: -8.51998519897461
    7. 'p' → logprob: -8.64498519897461
    8. '_,' → logprob: -9.64498519897461
    9. '):
' → logprob: -9.76998519897461
    10. '+' → logprob: -10.26998519897461

Token 489: ' B' (ID: 418)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1865394413471222
    2. ' p' → logprob: -2.4365394115448
    3. 'dp' → logprob: -4.811539649963379
    4. 'n' → logprob: -4.811539649963379
    5. 'P' → logprob: -5.061539649963379
    6. 'x' → logprob: -5.061539649963379
    7. 'k' → logprob: -5.436539649963379
    8. 'MOD' → logprob: -5.436539649963379
    9. 'prev' → logprob: -5.561539649963379
    10. 'val' → logprob: -5.686539649963379

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5084799528121948
    2. '):' → logprob: -1.0084799528121948
    3. '):
' → logprob: -4.633480072021484
    4. ',p' → logprob: -4.758480072021484
    5. ',i' → logprob: -5.508480072021484
    6. 'rev' → logprob: -6.133480072021484
    7. 'p' → logprob: -6.383480072021484
    8. ')' → logprob: -6.633480072021484
    9. ' ,' → logprob: -7.008480072021484
    10. '_p' → logprob: -7.133480072021484

Token 491: ' comb' (ID: 4134)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7295504808425903
    2. ' p' → logprob: -2.229550361633301
    3. 'k' → logprob: -3.104550361633301
    4. 'A' → logprob: -3.479550361633301
    5. 'b' → logprob: -3.479550361633301
    6. 'P' → logprob: -3.604550361633301
    7. 'B' → logprob: -3.854550361633301
    8. 'n' → logprob: -3.854550361633301
    9. 'x' → logprob: -3.854550361633301
    10. 'dp' → logprob: -4.104550361633301

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09820731729269028
    2. '):' → logprob: -3.2232072353363037
    3. '(i' → logprob: -3.7232072353363037
    4. ',i' → logprob: -3.9732072353363037
    5. ')' → logprob: -5.598207473754883
    6. '(' → logprob: -6.098207473754883
    7. '):
' → logprob: -6.473207473754883
    8. '(n' → logprob: -7.348207473754883
    9. ',n' → logprob: -7.348207473754883
    10. ',p' → logprob: -8.098207473754883

Token 493: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.2758102416992188
    2. 'n' → logprob: -1.5258102416992188
    3. ' fact' → logprob: -1.7758102416992188
    4. ' n' → logprob: -2.0258102416992188
    5. 'N' → logprob: -3.0258102416992188
    6. 'i' → logprob: -4.025810241699219
    7. 'p' → logprob: -4.025810241699219
    8. ' p' → logprob: -4.150810241699219
    9. ' N' → logprob: -4.150810241699219
    10. ')' → logprob: -4.525810241699219

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04184599965810776
    2. '):' → logprob: -3.2918460369110107
    3. ',n' → logprob: -7.166845798492432
    4. ' ,' → logprob: -7.291845798492432
    5. '_inv' → logprob: -8.16684627532959
    6. 's' → logprob: -8.29184627532959
    7. ')' → logprob: -8.29184627532959
    8. '(n' → logprob: -8.79184627532959
    9. ',p' → logprob: -8.79184627532959
    10. ',i' → logprob: -8.79184627532959

Token 495: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.056267157196998596
    2. ' fact' → logprob: -2.931267261505127
    3. ' two' → logprob: -7.681267261505127
    4. 'two' → logprob: -7.681267261505127
    5. 'factor' → logprob: -9.181266784667969
    6. 'k' → logprob: -9.181266784667969
    7. 'MOD' → logprob: -9.681266784667969
    8. '   ' → logprob: -10.431266784667969
    9. ' k' → logprob: -10.431266784667969
    10. ' ' → logprob: -10.556266784667969

Token 496: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.007162876892834902
    2. ',' → logprob: -5.007163047790527
    3. 'inv' → logprob: -8.382163047790527
    4. '_,' → logprob: -9.382163047790527
    5. ',_' → logprob: -10.007163047790527
    6. '   ' → logprob: -10.632163047790527
    7. ' ,' → logprob: -11.632163047790527
    8. ',i' → logprob: -11.632163047790527
    9. 'Inv' → logprob: -12.007163047790527
    10. '_INV' → logprob: -12.257163047790527

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ' ,' → logprob: -10.75003433227539
    3. ',
' → logprob: -12.50003433227539
    4. '):' → logprob: -12.87503433227539
    5. 'def' → logprob: -13.62503433227539
    6. '):
' → logprob: -13.75003433227539
    7. '   ' → logprob: -13.75003433227539
    8. '_,' → logprob: -14.87503433227539
    9. ')' → logprob: -15.00003433227539
    10. ',

' → logprob: -15.62503433227539

Token 498: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.026343030855059624
    2. ' MOD' → logprob: -3.6513431072235107
    3. 'two' → logprob: -11.02634334564209
    4. ' two' → logprob: -11.40134334564209
    5. '_MOD' → logprob: -12.77634334564209
    6. ' ' → logprob: -13.02634334564209
    7. ')' → logprob: -13.40134334564209
    8. '   ' → logprob: -13.52634334564209
    9. ',' → logprob: -13.77634334564209
    10. 'mod' → logprob: -13.77634334564209

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6632810235023499
    2. '):' → logprob: -1.038280963897705
    3. '):
' → logprob: -2.038280963897705
    4. '):
' → logprob: -8.413281440734863
    5. '   ' → logprob: -8.913281440734863
    6. ')' → logprob: -9.288281440734863
    7. '):

' → logprob: -10.663281440734863
    8. ' ' → logprob: -11.538281440734863
    9. ' ,' → logprob: -11.538281440734863
    10. ' ):' → logprob: -11.788281440734863

Token 500: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.9300110936164856
    2. ' two' → logprob: -1.1800110340118408
    3. 'p' → logprob: -2.305011034011841
    4. ' p' → logprob: -3.055011034011841
    5. 'n' → logprob: -3.680011034011841
    6. 'fact' → logprob: -3.930011034011841
    7. ' n' → logprob: -4.43001127243042
    8. 'A' → logprob: -4.55501127243042
    9. 'U' → logprob: -4.68001127243042
    10. ')' → logprob: -4.80501127243042

Token 501: '_inv' (ID: 53427)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5574632287025452
    2. '):' → logprob: -1.3074631690979004
    3. '):
' → logprob: -1.9324631690979004
    4. '   ' → logprob: -5.4324631690979
    5. ',i' → logprob: -6.1824631690979
    6. ' ,' → logprob: -6.5574631690979
    7. ')' → logprob: -7.3074631690979
    8. '):
' → logprob: -7.3074631690979
    9. ' ):' → logprob: -7.5574631690979
    10. '[i' → logprob: -7.6824631690979

Token 502: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6602573990821838
    2. ',' → logprob: -0.9102573990821838
    3. '):
' → logprob: -2.535257339477539
    4. '):
' → logprob: -7.785257339477539
    5. ')' → logprob: -8.410257339477539
    6. ',i' → logprob: -8.535257339477539
    7. ' ):' → logprob: -8.785257339477539
    8. '):

' → logprob: -8.910257339477539
    9. ' ,' → logprob: -9.160257339477539
    10. '   ' → logprob: -9.160257339477539

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009696951135993004
    2. ',' → logprob: -5.634696960449219
    3. '[' → logprob: -6.009696960449219
    4. '(p' → logprob: -6.759696960449219
    5. ':' → logprob: -7.384696960449219
    6. '(' → logprob: -8.134696960449219
    7. '```' → logprob: -8.509696960449219
    8. '    
' → logprob: -8.634696960449219
    9. '[i' → logprob: -8.634696960449219
    10. '(i' → logprob: -8.634696960449219

Token 504: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0740346908569336
    2. ' p' → logprob: -1.3240346908569336
    3. 'p' → logprob: -1.8240346908569336
    4. ' res' → logprob: -1.8240346908569336
    5. ' if' → logprob: -3.9490346908569336
    6. 'res' → logprob: -4.074034690856934
    7. ' z' → logprob: -4.949034690856934
    8. ' val' → logprob: -5.324034690856934
    9. 'if' → logprob: -5.574034690856934
    10. ' s' → logprob: -5.824034690856934

Token 505: ' comb' (ID: 4134)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.2600007653236389
    2. 'B' → logprob: -2.385000705718994
    3. ' B' → logprob: -2.760000705718994
    4. ' (' → logprob: -2.885000705718994
    5. ' comb' → logprob: -4.635000705718994
    6. '(' → logprob: -5.510000705718994
    7. '((' → logprob: -6.885000705718994
    8. '(com' → logprob: -6.885000705718994
    9. 'comb' → logprob: -7.510000705718994
    10. '   ' → logprob: -8.510001182556152

Token 506: '(i' (ID: 3649)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03959311172366142
    2. '(i' → logprob: -3.41459321975708
    3. '(' → logprob: -5.16459321975708
    4. '(
' → logprob: -9.414592742919922
    5. '(n' → logprob: -9.914592742919922
    6. '[i' → logprob: -10.789592742919922
    7. '(len' → logprob: -10.789592742919922
    8. '((' → logprob: -11.664592742919922
    9. '[B' → logprob: -11.664592742919922
    10. '(I' → logprob: -11.664592742919922

Token 507: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00561447674408555
    2. '-' → logprob: -5.755614280700684
    3. ' ,' → logprob: -6.255614280700684
    4. ' -' → logprob: -9.130614280700684
    5. ',B' → logprob: -9.630614280700684
    6. ')' → logprob: -9.755614280700684
    7. ',i' → logprob: -9.755614280700684
    8. '   ' → logprob: -10.005614280700684
    9. ',k' → logprob: -10.630614280700684
    10. ',
' → logprob: -10.755614280700684

Token 508: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0570637509226799
    2. '2' → logprob: -3.4320638179779053
    3. '1' → logprob: -3.9320638179779053
    4. 'i' → logprob: -6.807063579559326
    5. ' B' → logprob: -7.057063579559326
    6. ',' → logprob: -7.807063579559326
    7. 'len' → logprob: -7.932063579559326
    8. '(B' → logprob: -8.557064056396484
    9. '   ' → logprob: -8.682064056396484
    10. ' ' → logprob: -9.182064056396484

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009624350932426751
    2. ',B' → logprob: -7.500962257385254
    3. ' ,' → logprob: -8.125962257385254
    4. 'B' → logprob: -10.125962257385254
    5. ',i' → logprob: -10.500962257385254
    6. ')' → logprob: -11.125962257385254
    7. ',k' → logprob: -11.375962257385254
    8. '   ' → logprob: -12.000962257385254
    9. ',b' → logprob: -12.250962257385254
    10. ' ' → logprob: -13.750962257385254

Token 510: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.015856869518756866
    2. 'i' → logprob: -4.265856742858887
    3. ' B' → logprob: -6.765856742858887
    4. '   ' → logprob: -8.265856742858887
    5. '2' → logprob: -8.765856742858887
    6. ' i' → logprob: -10.390856742858887
    7. ' ' → logprob: -10.640856742858887
    8. 'len' → logprob: -11.140856742858887
    9. '(i' → logprob: -11.390856742858887
    10. '(B' → logprob: -11.390856742858887

Token 511: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20018836855888367
    2. '-' → logprob: -1.950188398361206
    3. ',' → logprob: -3.325188398361206
    4. ' -' → logprob: -6.700188159942627
    5. '),' → logprob: -7.200188159942627
    6. ' ,' → logprob: -8.075188636779785
    7. '+' → logprob: -8.325188636779785
    8. ' )' → logprob: -8.575188636779785
    9. '-i' → logprob: -9.325188636779785
    10. '-)' → logprob: -9.700188636779785

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013088352046906948
    2. 'i' → logprob: -4.513088226318359
    3. '2' → logprob: -6.263088226318359
    4. '0' → logprob: -10.26308822631836
    5. ')' → logprob: -10.51308822631836
    6. '(i' → logprob: -11.38808822631836
    7. '3' → logprob: -11.51308822631836
    8. '   ' → logprob: -11.76308822631836
    9. 'p' → logprob: -11.88808822631836
    10. ' ' → logprob: -12.01308822631836

Token 513: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.525806725025177
    2. ',' → logprob: -0.900806725025177
    3. ')*' → logprob: -6.400806903839111
    4. ' ,' → logprob: -7.525806903839111
    5. '   ' → logprob: -8.400806427001953
    6. ' )' → logprob: -8.525806427001953
    7. ')
' → logprob: -11.150806427001953
    8. ' ' → logprob: -11.900806427001953
    9. '*,' → logprob: -12.400806427001953
    10. '  ' → logprob: -12.650806427001953

Token 514: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.000553151941858232
    2. ' fact' → logprob: -7.500553131103516
    3. 'facts' → logprob: -16.750553131103516
    4. '_fact' → logprob: -17.125553131103516
    5. '   ' → logprob: -17.375553131103516
    6. 'factor' → logprob: -17.500553131103516
    7. 'Fact' → logprob: -18.250553131103516
    8. '.fact' → logprob: -18.250553131103516
    9. ' ' → logprob: -18.750553131103516
    10. 'f' → logprob: -19.125553131103516

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004282851587049663
    2. ' ,' → logprob: -7.875428199768066
    3. ')' → logprob: -10.750428199768066
    4. ',
' → logprob: -11.375428199768066
    5. '   ' → logprob: -12.375428199768066
    6. '),' → logprob: -12.625428199768066
    7. ',)' → logprob: -13.500428199768066
    8. ',k' → logprob: -13.875428199768066
    9. ',f' → logprob: -13.875428199768066
    10. '‌,' → logprob: -14.375428199768066

Token 516: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0067154900170862675
    2. ' fact' → logprob: -5.006715297698975
    3. '_fact' → logprob: -16.881715774536133
    4. '
' → logprob: -17.506715774536133
    5. 'Fact' → logprob: -17.756715774536133
    6. '.fact' → logprob: -18.131715774536133
    7. 'factor' → logprob: -18.631715774536133
    8. 'facts' → logprob: -18.881715774536133
    9. ' ' → logprob: -20.131715774536133
    10. 'two' → logprob: -20.881715774536133

Token 517: '_inv' (ID: 53427)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.4766489863395691
    2. '_inv' → logprob: -0.9766489863395691
    3. ',' → logprob: -5.976648807525635
    4. 'Inv' → logprob: -11.476649284362793
    5. ',i' → logprob: -12.226649284362793
    6. 'i' → logprob: -12.351649284362793
    7. '_INV' → logprob: -13.101649284362793
    8. ' ,' → logprob: -13.601649284362793
    9. ' inv' → logprob: -13.601649284362793
    10. '   ' → logprob: -13.726649284362793

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ' ,' → logprob: -10.125043869018555
    3. ')' → logprob: -13.375043869018555
    4. ',
' → logprob: -13.750043869018555
    5. '),' → logprob: -15.375043869018555
    6. '   ' → logprob: -15.500043869018555
    7. ',t' → logprob: -16.500043869018555
    8. ',

' → logprob: -16.875043869018555
    9. '‌,' → logprob: -17.125043869018555
    10. ' ' → logprob: -17.500043869018555

Token 519: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.872261317563243e-05
    2. ' MOD' → logprob: -9.750059127807617
    3. 'MO' → logprob: -15.250059127807617
    4. '_MOD' → logprob: -17.250059127807617
    5. 'two' → logprob: -17.625059127807617
    6. 'MODE' → logprob: -18.250059127807617
    7. '
' → logprob: -18.375059127807617
    8. ' ' → logprob: -18.625059127807617
    9. '   ' → logprob: -18.750059127807617
    10. 'MD' → logprob: -18.750059127807617

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008188001229427755
    2. ')*' → logprob: -7.125818729400635
    3. ' )' → logprob: -11.875819206237793
    4. ')
' → logprob: -12.875819206237793
    5. '   ' → logprob: -12.875819206237793
    6. ',' → logprob: -13.625819206237793
    7. ')*(' → logprob: -15.375819206237793
    8. '),' → logprob: -15.750819206237793
    9. ')+' → logprob: -15.875819206237793
    10. ' ' → logprob: -16.375818252563477

Token 521: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6549593806266785
    2. ' *' → logprob: -0.7799593806266785
    3. ')' → logprob: -4.654959201812744
    4. '<|end|>' → logprob: -4.904959201812744
    5. 'def' → logprob: -6.654959201812744
    6. '   ' → logprob: -6.779959201812744
    7. '*(' → logprob: -7.529959201812744
    8. ' ' → logprob: -7.529959201812744
    9. ')*' → logprob: -7.904959201812744
    10. ' if' → logprob: -8.029959678649902

Token 522: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.20144228637218475
    2. ' two' → logprob: -1.7014422416687012
    3. '(two' → logprob: -10.57644271850586
    4. '   ' → logprob: -13.32644271850586
    5. ' ' → logprob: -14.07644271850586
    6. '2' → logprob: -15.45144271850586
    7. '
' → logprob: -15.45144271850586
    8. '  ' → logprob: -16.07644271850586
    9. ' ' → logprob: -16.07644271850586
    10. 'pow' → logprob: -16.57644271850586

Token 523: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.000838576874230057
    2. '[i' → logprob: -7.500838756561279
    3. '[' → logprob: -8.750838279724121
    4. '[_' → logprob: -9.625838279724121
    5. 'inv' → logprob: -10.000838279724121
    6. '```' → logprob: -13.125838279724121
    7. '   ' → logprob: -13.250838279724121
    8. '_INV' → logprob: -13.375838279724121
    9. '[-' → logprob: -13.500838279724121
    10. '_i' → logprob: -13.500838279724121

Token 524: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1037125214934349
    2. '[' → logprob: -2.353712558746338
    3. '[B' → logprob: -5.853712558746338
    4. ' [' → logprob: -8.35371208190918
    5. '[
' → logprob: -9.35371208190918
    6. '[I' → logprob: -9.47871208190918
    7. '[n' → logprob: -10.10371208190918
    8. '```' → logprob: -10.10371208190918
    9. '   ' → logprob: -11.10371208190918
    10. '[b' → logprob: -11.22871208190918

Token 525: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37891310453414917
    2. '-' → logprob: -1.378913164138794
    3. '[' → logprob: -2.878913164138794
    4. '[i' → logprob: -5.003912925720215
    5. ' -' → logprob: -8.378912925720215
    6. '[
' → logprob: -9.128912925720215
    7. ' ]' → logprob: -9.503912925720215
    8. '[-' → logprob: -9.628912925720215
    9. '   ' → logprob: -10.253912925720215
    10. '1' → logprob: -10.878912925720215

Token 526: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.270012766122818
    2. '<|end|>' → logprob: -1.7700127363204956
    3. ' %' → logprob: -3.145012855529785
    4. '[i' → logprob: -4.645012855529785
    5. ')' → logprob: -5.020012855529785
    6. ' ' → logprob: -6.020012855529785
    7. '[' → logprob: -6.520012855529785
    8. '
' → logprob: -6.770012855529785
    9. '<|end|>' → logprob: -7.395012855529785
    10. '   ' → logprob: -8.895012855529785

Token 527: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0012261815136298537
    2. '(' → logprob: -6.87622594833374
    3. ' MOD' → logprob: -9.501226425170898
    4. '10' → logprob: -9.751226425170898
    5. '_MOD' → logprob: -10.751226425170898
    6. '100' → logprob: -11.501226425170898
    7. '
' → logprob: -12.001226425170898
    8. '.MOD' → logprob: -12.376226425170898
    9. '(M' → logprob: -12.501226425170898
    10. 'mod' → logprob: -12.626226425170898

Token 528: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04833956062793732
    2. ' update' → logprob: -3.923339605331421
    3. 'main' → logprob: -4.048339366912842
    4. ' solve' → logprob: -5.673339366912842
    5. ' def' → logprob: -6.798339366912842
    6. 'update' → logprob: -6.798339366912842
    7. ' process' → logprob: -7.048339366912842
    8. ' compute' → logprob: -7.173339366912842
    9. ' get' → logprob: -7.298339366912842
    10. 'solve' → logprob: -7.298339366912842

Token 531: '_q' (ID: 19384)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.003962516784667969
    2. 'p' → logprob: -6.003962516784668
    3. '(' → logprob: -7.378962516784668
    4. '_' → logprob: -8.753962516784668
    5. '_q' → logprob: -9.253962516784668
    6. '(i' → logprob: -9.503962516784668
    7. '_i' → logprob: -9.628962516784668
    8. 'P' → logprob: -9.753962516784668
    9. '_n' → logprob: -9.878962516784668
    10. '_s' → logprob: -10.128962516784668

Token 532: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.030237983912229538
    2. '(' → logprob: -3.530237913131714
    3. '(n' → logprob: -8.405238151550293
    4. '(_' → logprob: -9.280238151550293
    5. '(I' → logprob: -9.780238151550293
    6. 'def' → logprob: -10.280238151550293
    7. '_' → logprob: -11.280238151550293
    8. '(N' → logprob: -11.655238151550293
    9. '(ii' → logprob: -11.780238151550293
    10. '((' → logprob: -12.280238151550293

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.841743303695694e-05
    2. ',B' → logprob: -9.87509822845459
    3. ' ,' → logprob: -10.00009822845459
    4. '   ' → logprob: -14.37509822845459
    5. '_,' → logprob: -15.75009822845459
    6. ',
' → logprob: -16.125099182128906
    7. ',b' → logprob: -16.375099182128906
    8. ' ' → logprob: -16.625099182128906
    9. 'B' → logprob: -16.750099182128906
    10. 'def' → logprob: -17.000099182128906

Token 534: ' W' (ID: 486)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09613865613937378
    2. ' B' → logprob: -2.4711387157440186
    3. 'A' → logprob: -5.2211384773254395
    4. 'i' → logprob: -7.3461384773254395
    5. ' A' → logprob: -7.5961384773254395
    6. ' i' → logprob: -8.846138954162598
    7. ' ' → logprob: -9.721138954162598
    8. '2' → logprob: -9.721138954162598
    9. ')' → logprob: -9.971138954162598
    10. '   ' → logprob: -10.346138954162598

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004744023026432842
    2. ' ,' → logprob: -7.875474452972412
    3. ',B' → logprob: -9.625473976135254
    4. ',W' → logprob: -10.875473976135254
    5. '   ' → logprob: -12.125473976135254
    6. ',
' → logprob: -14.375473976135254
    7. ',b' → logprob: -14.625473976135254
    8. ',i' → logprob: -15.000473976135254
    9. ' ' → logprob: -15.000473976135254
    10. ',w' → logprob: -15.125473976135254

Token 536: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3858669698238373
    2. 'comb' → logprob: -1.3858669996261597
    3. 'B' → logprob: -3.38586688041687
    4. ' B' → logprob: -4.635867118835449
    5. 'W' → logprob: -4.635867118835449
    6. 'fact' → logprob: -5.135867118835449
    7. ' W' → logprob: -5.260867118835449
    8. ' i' → logprob: -6.760867118835449
    9. '   ' → logprob: -7.135867118835449
    10. ' two' → logprob: -7.135867118835449

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10898859798908234
    2. '(i' → logprob: -2.4839885234832764
    3. '(' → logprob: -4.2339887619018555
    4. ',i' → logprob: -5.9839887619018555
    5. ')' → logprob: -6.3589887619018555
    6. ' ,' → logprob: -7.2339887619018555
    7. ' (' → logprob: -9.108988761901855
    8. '(n' → logprob: -9.233988761901855
    9. '   ' → logprob: -9.733988761901855
    10. ',(' → logprob: -10.483988761901855

Token 538: ' fact' (ID: 2840)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -1.2299675941467285
    2. ' i' → logprob: -1.3549675941467285
    3. 'W' → logprob: -1.6049675941467285
    4. 'i' → logprob: -1.6049675941467285
    5. 'fact' → logprob: -3.6049675941467285
    6. ' fact' → logprob: -4.2299675941467285
    7. ' ' → logprob: -6.8549675941467285
    8. '   ' → logprob: -6.8549675941467285
    9. '(i' → logprob: -7.2299675941467285
    10. ' B' → logprob: -7.4799675941467285

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000543261703569442
    2. ' ,' → logprob: -8.000543594360352
    3. ',i' → logprob: -9.500543594360352
    4. '   ' → logprob: -9.625543594360352
    5. ',n' → logprob: -11.125543594360352
    6. ',W' → logprob: -11.625543594360352
    7. ',q' → logprob: -11.750543594360352
    8. ',
' → logprob: -11.875543594360352
    9. ')' → logprob: -12.250543594360352
    10. ',w' → logprob: -12.500543594360352

Token 540: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.17983625829219818
    2. ' fact' → logprob: -1.8048362731933594
    3. 'W' → logprob: -9.92983627319336
    4. ' ' → logprob: -11.80483627319336
    5. '   ' → logprob: -12.17983627319336
    6. 'factor' → logprob: -12.30483627319336
    7. ' W' → logprob: -12.67983627319336
    8. '_fact' → logprob: -12.80483627319336
    9. '
' → logprob: -13.17983627319336
    10. 'Fact' → logprob: -13.17983627319336

Token 541: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.3012827932834625
    2. ',' → logprob: -1.4262827634811401
    3. 'inv' → logprob: -4.17628288269043
    4. ',i' → logprob: -6.67628288269043
    5. ',int' → logprob: -6.67628288269043
    6. ',
' → logprob: -7.92628288269043
    7. '   ' → logprob: -8.05128288269043
    8. ' ,' → logprob: -8.42628288269043
    9. ',f' → logprob: -9.17628288269043
    10. ',q' → logprob: -9.30128288269043

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',i' → logprob: -15.00001049041748
    4. ',int' → logprob: -15.75001049041748
    5. '   ' → logprob: -15.87501049041748
    6. ',W' → logprob: -15.87501049041748
    7. ',w' → logprob: -16.750009536743164
    8. '‌,' → logprob: -16.875009536743164
    9. ',
' → logprob: -17.000009536743164
    10. ')' → logprob: -17.125009536743164

Token 543: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07022885233163834
    2. ' MOD' → logprob: -2.6952288150787354
    3. ' two' → logprob: -8.570228576660156
    4. 'two' → logprob: -9.820228576660156
    5. '_MOD' → logprob: -11.695228576660156
    6. ' ' → logprob: -11.820228576660156
    7. 'W' → logprob: -11.945228576660156
    8. '   ' → logprob: -12.070228576660156
    9. '
' → logprob: -12.570228576660156
    10. ' W' → logprob: -12.570228576660156

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.102680633077398e-05
    2. '):' → logprob: -10.250090599060059
    3. ')' → logprob: -11.000090599060059
    4. '   ' → logprob: -11.125090599060059
    5. ' ,' → logprob: -11.250090599060059
    6. '):
' → logprob: -12.375090599060059
    7. ',
' → logprob: -12.750090599060059
    8. ',i' → logprob: -13.500090599060059
    9. ',W' → logprob: -14.125090599060059
    10. ',n' → logprob: -14.250090599060059

Token 545: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.47409483790397644
    2. ' two' → logprob: -0.9740948677062988
    3. '   ' → logprob: -11.84909439086914
    4. ' ' → logprob: -12.47409439086914
    5. '(two' → logprob: -13.09909439086914
    6. 'W' → logprob: -13.22409439086914
    7. 'tw' → logprob: -14.09909439086914
    8. ' W' → logprob: -14.84909439086914
    9. ')' → logprob: -14.84909439086914
    10. 'Two' → logprob: -15.09909439086914

Token 546: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00138892384711653
    2. 'inv' → logprob: -6.751389026641846
    3. ',' → logprob: -8.751388549804688
    4. ')' → logprob: -11.626388549804688
    5. '   ' → logprob: -11.751388549804688
    6. '_i' → logprob: -11.876388549804688
    7. '[i' → logprob: -12.001388549804688
    8. ',i' → logprob: -12.126388549804688
    9. '[' → logprob: -12.251388549804688
    10. 'i' → logprob: -13.001388549804688

Token 547: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5814690589904785
    2. '):' → logprob: -0.8314690589904785
    3. ')' → logprob: -5.3314690589904785
    4. '   ' → logprob: -7.7064690589904785
    5. '):
' → logprob: -9.45646858215332
    6. '):

' → logprob: -9.45646858215332
    7. ',' → logprob: -9.83146858215332
    8. ')
' → logprob: -11.45646858215332
    9. ' ' → logprob: -13.08146858215332
    10. ' ):' → logprob: -13.33146858215332

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03930523619055748
    2. 'return' → logprob: -3.5393052101135254
    3. ' return' → logprob: -4.664305210113525
    4. 'if' → logprob: -10.039305686950684
    5. ' if' → logprob: -10.539305686950684
    6. '	return' → logprob: -11.914305686950684
    7. '```' → logprob: -12.789305686950684
    8. ' ' → logprob: -12.914305686950684
    9. '  ' → logprob: -14.789305686950684
    10. '    ' → logprob: -15.289305686950684

Token 549: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012902775779366493
    2. 'if' → logprob: -4.512902736663818
    3. ' return' → logprob: -6.387902736663818
    4. '   ' → logprob: -8.887903213500977
    5. ' if' → logprob: -10.387903213500977
    6. '```' → logprob: -13.637903213500977
    7. '	return' → logprob: -15.387903213500977
    8. ' ' → logprob: -15.637903213500977
    9. '
' → logprob: -15.762903213500977
    10. '       ' → logprob: -15.887903213500977

Token 550: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.03150457888841629
    2. ' comb' → logprob: -3.7815046310424805
    3. '(com' → logprob: -4.9065046310424805
    4. '(' → logprob: -8.15650463104248
    5. 'com' → logprob: -8.40650463104248
    6. '0' → logprob: -8.40650463104248
    7. ' (' → logprob: -10.53150463104248
    8. '((' → logprob: -11.28150463104248
    9. '(i' → logprob: -11.65650463104248
    10. ' ' → logprob: -12.40650463104248

Token 551: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018226739019155502
    2. '(W' → logprob: -4.018226623535156
    3. '(' → logprob: -9.768226623535156
    4. '(I' → logprob: -11.518226623535156
    5. '(n' → logprob: -12.018226623535156
    6. '(N' → logprob: -13.643226623535156
    7. 'W' → logprob: -14.643226623535156
    8. 'i' → logprob: -14.768226623535156
    9. '(Q' → logprob: -14.893226623535156
    10. ' (' → logprob: -15.518226623535156

Token 552: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002028251619776711
    2. ',' → logprob: -9.250203132629395
    3. ' -' → logprob: -9.625203132629395
    4. '(' → logprob: -10.750203132629395
    5. '   ' → logprob: -12.000203132629395
    6. ',W' → logprob: -12.500203132629395
    7. '(i' → logprob: -12.625203132629395
    8. '1' → logprob: -13.500203132629395
    9. '(W' → logprob: -14.000203132629395
    10. 'W' → logprob: -14.250203132629395

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024930182844400406
    2. '-' → logprob: -6.502492904663086
    3. 'W' → logprob: -7.127492904663086
    4. '(' → logprob: -9.377492904663086
    5. ' ' → logprob: -10.502492904663086
    6. '2' → logprob: -10.627492904663086
    7. '0' → logprob: -10.752492904663086
    8. '
' → logprob: -11.627492904663086
    9. '(W' → logprob: -12.127492904663086
    10. '   ' → logprob: -12.627492904663086

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011333089787513018
    2. ',W' → logprob: -6.876133441925049
    3. ' ,' → logprob: -9.37613296508789
    4. ',
' → logprob: -12.25113296508789
    5. '(' → logprob: -12.87613296508789
    6. 'W' → logprob: -13.12613296508789
    7. ')' → logprob: -13.37613296508789
    8. '   ' → logprob: -13.87613296508789
    9. '(W' → logprob: -14.00113296508789
    10. ' ' → logprob: -14.62613296508789

Token 555: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00045164540642872453
    2. ' W' → logprob: -7.750451564788818
    3. '   ' → logprob: -11.375452041625977
    4. 'i' → logprob: -12.250452041625977
    5. 'B' → logprob: -12.750452041625977
    6. ' ' → logprob: -14.250452041625977
    7. '	W' → logprob: -14.750452041625977
    8. '
' → logprob: -15.250452041625977
    9. '  ' → logprob: -15.875452041625977
    10. '
' → logprob: -16.875452041625977

Token 556: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012489237124100327
    2. ',' → logprob: -6.751248836517334
    3. ' -' → logprob: -9.626249313354492
    4. ' ,' → logprob: -11.751249313354492
    5. '   ' → logprob: -13.126249313354492
    6. ')' → logprob: -14.001249313354492
    7. '1' → logprob: -14.626249313354492
    8. ',k' → logprob: -14.876249313354492
    9. '-,' → logprob: -15.251249313354492
    10. ' ' → logprob: -15.376249313354492

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '-' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.500004768371582
    5. ',' → logprob: -15.875004768371582
    6. '```' → logprob: -16.3750057220459
    7. '
' → logprob: -16.6250057220459
    8. ')' → logprob: -16.7500057220459
    9. '(' → logprob: -17.5000057220459
    10. '2' → logprob: -17.8125057220459

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',
' → logprob: -13.625015258789062
    4. ')' → logprob: -15.250015258789062
    5. ',f' → logprob: -16.000015258789062
    6. 'fact' → logprob: -16.500015258789062
    7. '   ' → logprob: -17.375015258789062
    8. '<|end|>' → logprob: -17.750015258789062
    9. ',\
' → logprob: -18.250015258789062
    10. 'def' → logprob: -18.375015258789062

Token 559: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.01821960136294365
    2. ' fact' → logprob: -4.018219470977783
    3. 'two' → logprob: -9.893219947814941
    4. ' two' → logprob: -10.893219947814941
    5. 'facts' → logprob: -15.018219947814941
    6. '_fact' → logprob: -16.268218994140625
    7. 'f' → logprob: -16.893218994140625
    8. 'fac' → logprob: -17.018218994140625
    9. 'factor' → logprob: -17.393218994140625
    10. 'Fact' → logprob: -17.393218994140625

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. ' ,' → logprob: -8.87514591217041
    3. ')' → logprob: -12.87514591217041
    4. '   ' → logprob: -13.37514591217041
    5. ',
' → logprob: -13.37514591217041
    6. ',f' → logprob: -15.87514591217041
    7. '),' → logprob: -16.125146865844727
    8. '
' → logprob: -16.875146865844727
    9. ' ' → logprob: -16.875146865844727
    10. '```' → logprob: -17.000146865844727

Token 561: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.01856110617518425
    2. 'two' → logprob: -4.018560886383057
    3. ' two' → logprob: -8.518561363220215
    4. ' fact' → logprob: -8.518561363220215
    5. 'factor' → logprob: -11.518561363220215
    6. 'comb' → logprob: -14.018561363220215
    7. '
' → logprob: -15.393561363220215
    8. 'tw' → logprob: -15.643561363220215
    9. '(two' → logprob: -16.3935604095459
    10. ' ' → logprob: -16.6435604095459

Token 562: '_inv' (ID: 53427)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06448286026716232
    2. '_inv' → logprob: -2.8144829273223877
    3. 'inv' → logprob: -7.439482688903809
    4. '   ' → logprob: -7.439482688903809
    5. ' ,' → logprob: -8.189482688903809
    6. ',i' → logprob: -8.189482688903809
    7. '%' → logprob: -9.439482688903809
    8. '[i' → logprob: -9.439482688903809
    9. 'i' → logprob: -9.689482688903809
    10. ')' → logprob: -9.814482688903809

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',
' → logprob: -13.875015258789062
    4. ')' → logprob: -14.375015258789062
    5. '   ' → logprob: -14.625015258789062
    6. '),' → logprob: -16.375015258789062
    7. ' ' → logprob: -17.750015258789062
    8. '`,' → logprob: -18.125015258789062
    9. '',' → logprob: -18.250015258789062
    10. '‌,' → logprob: -18.500015258789062

Token 564: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005944675765931606
    2. ' MOD' → logprob: -5.255944728851318
    3. ' two' → logprob: -7.380944728851318
    4. 'two' → logprob: -9.38094425201416
    5. ' ' → logprob: -12.88094425201416
    6. '_MOD' → logprob: -15.13094425201416
    7. '
' → logprob: -15.63094425201416
    8. '   ' → logprob: -16.005945205688477
    9. '10' → logprob: -17.005945205688477
    10. 'MO' → logprob: -17.380945205688477

Token 565: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5770532488822937
    2. ',' → logprob: -0.8270532488822937
    3. '   ' → logprob: -7.327053070068359
    4. ')*' → logprob: -7.952053070068359
    5. ')
' → logprob: -10.45205307006836
    6. '),' → logprob: -10.57705307006836
    7. ' ,' → logprob: -10.95205307006836
    8. ' ' → logprob: -12.32705307006836
    9. ' )' → logprob: -12.32705307006836
    10. ',)' → logprob: -12.45205307006836

Token 566: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19732262194156647
    2. '<|end|>' → logprob: -2.6973226070404053
    3. '*' → logprob: -2.9473226070404053
    4. '%' → logprob: -3.3223226070404053
    5. ' %' → logprob: -4.072322845458984
    6. ')' → logprob: -5.822322845458984
    7. ' ' → logprob: -6.697322845458984
    8. 'def' → logprob: -7.322322845458984
    9. '   ' → logprob: -7.697322845458984
    10. '
' → logprob: -8.322322845458984

Token 567: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.10021066665649414
    2. ' two' → logprob: -2.350210666656494
    3. '(two' → logprob: -12.475210189819336
    4. ' ' → logprob: -17.350210189819336
    5. '2' → logprob: -17.850210189819336
    6. '   ' → logprob: -18.225210189819336
    7. '_two' → logprob: -18.475210189819336
    8. ' ' → logprob: -18.475210189819336
    9. '
' → logprob: -18.600210189819336
    10. '.two' → logprob: -18.850210189819336

Token 568: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.2200749754119897e-06
    2. 'inv' → logprob: -13.500001907348633
    3. '_in' → logprob: -15.250001907348633
    4. '_i' → logprob: -16.125001907348633
    5. '_INV' → logprob: -16.125001907348633
    6. '[' → logprob: -16.250001907348633
    7. '_int' → logprob: -17.250001907348633
    8. '[i' → logprob: -17.250001907348633
    9. '_inf' → logprob: -17.250001907348633
    10. '_inverse' → logprob: -17.375001907348633

Token 569: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.875003814697266
    3. '```' → logprob: -15.375003814697266
    4. '[
' → logprob: -16.125003814697266
    5. 'i' → logprob: -16.250003814697266
    6. ' [' → logprob: -16.250003814697266
    7. '[I' → logprob: -16.375003814697266
    8. '(i' → logprob: -17.500003814697266
    9. '[(' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.375003814697266

Token 570: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6327921152114868
    2. ')' → logprob: -0.7577921152114868
    3. ' ]' → logprob: -9.882792472839355
    4. ']%' → logprob: -10.132792472839355
    5. ' )' → logprob: -10.507792472839355
    6. '}' → logprob: -10.757792472839355
    7. ')%' → logprob: -11.257792472839355
    8. '])' → logprob: -11.882792472839355
    9. '%' → logprob: -11.882792472839355
    10. '[i' → logprob: -12.007792472839355

Token 571: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6326718926429749
    2. ' %' → logprob: -0.7576718926429749
    3. '[i' → logprob: -10.507672309875488
    4. '[' → logprob: -11.257672309875488
    5. ' ' → logprob: -12.007672309875488
    6. '%
' → logprob: -12.757672309875488
    7. '
' → logprob: -12.757672309875488
    8. ' %
' → logprob: -12.757672309875488
    9. 'import' → logprob: -12.882672309875488
    10. ')' → logprob: -12.882672309875488

Token 572: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.31335756182670593
    2. ' MOD' → logprob: -1.3133575916290283
    3. '_MOD' → logprob: -10.31335735321045
    4. '(' → logprob: -10.43835735321045
    5. '(M' → logprob: -11.31335735321045
    6. '.MOD' → logprob: -12.56335735321045
    7. '
' → logprob: -12.68835735321045
    8. ' ' → logprob: -12.68835735321045
    9. ' (' → logprob: -12.68835735321045
    10. '```' → logprob: -13.56335735321045

Token 573: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2295985072851181
    2. '<|end|>' → logprob: -1.6045985221862793
    3. '
' → logprob: -5.604598522186279
    4. ')' → logprob: -9.354598045349121
    5. '#' → logprob: -9.354598045349121
    6. '[' → logprob: -9.729598045349121
    7. '```' → logprob: -9.854598045349121
    8. '

' → logprob: -9.979598045349121
    9. '<|end|>' → logprob: -10.104598045349121
    10. '\n' → logprob: -10.729598045349121

Token 574: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3557529857498594e-05
    2. '<|end|>' → logprob: -11.25002384185791
    3. '```' → logprob: -12.00002384185791
    4. '
' → logprob: -12.87502384185791
    5. '#' → logprob: -14.62502384185791
    6. '\' → logprob: -14.87502384185791
    7. ' def' → logprob: -15.25002384185791
    8. 'for' → logprob: -15.75002384185791
    9. '

' → logprob: -16.500022888183594
    10. 'from' → logprob: -16.500022888183594

Token 575: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.13708899915218353
    2. ' main' → logprob: -2.1370890140533447
    3. 'solve' → logprob: -4.762088775634766
    4. ' solve' → logprob: -7.387088775634766
    5. 'process' → logprob: -7.512088775634766
    6. 'calculate' → logprob: -8.387088775634766
    7. 'compute' → logprob: -10.012088775634766
    8. 'update' → logprob: -10.387088775634766
    9. ' process' → logprob: -10.887088775634766
    10. 'solution' → logprob: -10.887088775634766

Token 576: '_ans' (ID: 146254)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.5178472399711609
    2. '_sum' → logprob: -2.3928472995758057
    3. '_answer' → logprob: -2.7678472995758057
    4. '_max' → logprob: -2.7678472995758057
    5. '_final' → logprob: -3.2678472995758057
    6. '_diff' → logprob: -3.8928472995758057
    7. '_S' → logprob: -4.642847061157227
    8. '_A' → logprob: -4.642847061157227
    9. '_prob' → logprob: -4.767847061157227
    10. '_total' → logprob: -4.892847061157227

Token 577: '(i' (ID: 3649)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.8802047967910767
    2. '(n' → logprob: -1.5052047967910767
    3. '(' → logprob: -2.130204677581787
    4. '(B' → logprob: -2.380204677581787
    5. '():' → logprob: -2.880204677581787
    6. '(A' → logprob: -3.880204677581787
    7. '(U' → logprob: -3.880204677581787
    8. '(L' → logprob: -4.130204677581787
    9. '(i' → logprob: -4.255204677581787
    10. '(s' → logprob: -5.505204677581787

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.553032628493384e-05
    2. ',W' → logprob: -10.000075340270996
    3. ',n' → logprob: -11.500075340270996
    4. ',B' → logprob: -11.875075340270996
    5. ',N' → logprob: -12.000075340270996
    6. ' ,' → logprob: -12.500075340270996
    7. '   ' → logprob: -14.250075340270996
    8. ',
' → logprob: -15.000075340270996
    9. ',i' → logprob: -15.250075340270996
    10. 'W' → logprob: -15.750075340270996

Token 579: ' p' (ID: 275)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06985484063625336
    2. ' B' → logprob: -2.944854736328125
    3. 'A' → logprob: -5.194854736328125
    4. 'W' → logprob: -6.194854736328125
    5. 'i' → logprob: -6.569854736328125
    6. 'N' → logprob: -6.694854736328125
    7. 'n' → logprob: -7.319854736328125
    8. ' A' → logprob: -7.819854736328125
    9. 'fact' → logprob: -7.944854736328125
    10. 'U' → logprob: -8.444854736328125

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046165118692442775
    2. ' ,' → logprob: -8.62546157836914
    3. ',W' → logprob: -8.75046157836914
    4. 'def' → logprob: -10.50046157836914
    5. '   ' → logprob: -10.62546157836914
    6. '_,' → logprob: -10.87546157836914
    7. 'W' → logprob: -11.62546157836914
    8. ',B' → logprob: -12.25046157836914
    9. ',Q' → logprob: -12.50046157836914
    10. 'w' → logprob: -12.62546157836914

Token 581: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5967572331428528
    2. 'B' → logprob: -1.471757173538208
    3. 'W' → logprob: -1.721757173538208
    4. ' q' → logprob: -4.096757411956787
    5. ' B' → logprob: -5.096757411956787
    6. ' W' → logprob: -5.471757411956787
    7. 'w' → logprob: -5.721757411956787
    8. 'p' → logprob: -6.596757411956787
    9. 'Q' → logprob: -6.721757411956787
    10. 'j' → logprob: -6.846757411956787

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017163509037345648
    2. '):' → logprob: -6.626716136932373
    3. '):
' → logprob: -8.626716613769531
    4. ' ,' → logprob: -9.001716613769531
    5. '   ' → logprob: -10.001716613769531
    6. ',
' → logprob: -12.126716613769531
    7. ',W' → logprob: -12.126716613769531
    8. 'def' → logprob: -12.251716613769531
    9. ',i' → logprob: -12.251716613769531
    10. ',p' → logprob: -12.626716613769531

Token 583: ' MOD' (ID: 32868)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5915788412094116
    2. ' B' → logprob: -1.9665788412094116
    3. 'W' → logprob: -2.216578960418701
    4. ' W' → logprob: -3.466578960418701
    5. 'fact' → logprob: -3.591578960418701
    6. 'p' → logprob: -3.716578960418701
    7. 'n' → logprob: -4.091578960418701
    8. ' p' → logprob: -4.466578960418701
    9. 'N' → logprob: -4.466578960418701
    10. ' fact' → logprob: -4.591578960418701

Token 584: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28201353549957275
    2. ',' → logprob: -1.4070135354995728
    3. '):
' → logprob: -7.157013416290283
    4. '   ' → logprob: -9.782013893127441
    5. ')' → logprob: -11.907013893127441
    6. ' ):' → logprob: -12.157013893127441
    7. ' ,' → logprob: -12.282013893127441
    8. ',p' → logprob: -12.407013893127441
    9. '):
' → logprob: -13.532013893127441
    10. ':' → logprob: -13.782013893127441

Token 585: ' two' (ID: 1920)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9675123691558838
    2. 'W' → logprob: -1.9675123691558838
    3. ')' → logprob: -2.342512369155884
    4. ' fact' → logprob: -2.592512369155884
    5. ' W' → logprob: -2.967512369155884
    6. ' p' → logprob: -3.467512369155884
    7. ' two' → logprob: -3.592512369155884
    8. 'B' → logprob: -3.717512369155884
    9. 'p' → logprob: -3.842512369155884
    10. 'two' → logprob: -3.967512369155884

Token 586: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.03378942236304283
    2. ',' → logprob: -3.7837893962860107
    3. ')' → logprob: -5.53378963470459
    4. '):
' → logprob: -5.65878963470459
    5. '   ' → logprob: -6.90878963470459
    6. ',_' → logprob: -7.53378963470459
    7. ')_' → logprob: -8.53378963470459
    8. '_INV' → logprob: -8.53378963470459
    9. '):

' → logprob: -8.65878963470459
    10. '[' → logprob: -8.65878963470459

Token 587: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24149394035339355
    2. ',' → logprob: -1.7414939403533936
    3. '):
' → logprob: -3.2414939403533936
    4. '   ' → logprob: -9.741494178771973
    5. '):
' → logprob: -9.991494178771973
    6. '):

' → logprob: -10.616494178771973
    7. ' ):' → logprob: -10.741494178771973
    8. ' ,' → logprob: -11.616494178771973
    9. ')' → logprob: -12.366494178771973
    10. ',p' → logprob: -12.741494178771973

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005577972042374313
    2. ' return' → logprob: -8.500557899475098
    3. 'return' → logprob: -9.000557899475098
    4. ' ans' → logprob: -9.625557899475098
    5. ':' → logprob: -10.125557899475098
    6. '    
' → logprob: -10.625557899475098
    7. 'ans' → logprob: -10.750557899475098
    8. '```' → logprob: -11.000557899475098
    9. '   ' → logprob: -11.625557899475098
    10. 'result' → logprob: -11.625557899475098

Token 589: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0937657356262207
    2. 'res' → logprob: -2.9687657356262207
    3. 'ans' (adapté à ' ans') → logprob: -4.343765735626221
    4. 'if' → logprob: -4.718765735626221
    5. '   ' → logprob: -5.343765735626221
    6. ' return' → logprob: -6.093765735626221
    7. 'tmp' → logprob: -6.218765735626221
    8. 's' → logprob: -6.468765735626221
    9. 'temp' → logprob: -6.718765735626221
    10. 'ret' → logprob: -6.968765735626221

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.143051415681839
    2. ' =' → logprob: -2.0180513858795166
    3. '   ' → logprob: -8.893051147460938
    4. '+=' → logprob: -9.643051147460938
    5. '[' → logprob: -9.768051147460938
    6. ' +=' → logprob: -10.018051147460938
    7. '[i' → logprob: -10.518051147460938
    8. ',' → logprob: -12.018051147460938
    9. '_' → logprob: -12.143051147460938
    10. '```' → logprob: -12.518051147460938

Token 591: ' ' (ID: 220)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.16228801012039185
    2. '(' → logprob: -2.912287950515747
    3. '0' → logprob: -3.287287950515747
    4. 'p' → logprob: -3.537287950515747
    5. '((' → logprob: -4.537288188934326
    6. '(i' → logprob: -5.287288188934326
    7. '(q' → logprob: -5.537288188934326
    8. ' (' → logprob: -5.662288188934326
    9. '1' → logprob: -6.412288188934326
    10. ' p' → logprob: -6.537288188934326

Token 592: '1' (ID: 16)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06410915404558182
    2. '((' → logprob: -3.9391090869903564
    3. '(' → logprob: -4.0641093254089355
    4. 'p' → logprob: -4.1891093254089355
    5. '(i' → logprob: -5.4391093254089355
    6. '(q' → logprob: -5.8141093254089355
    7. '(ans' → logprob: -7.0641093254089355
    8. '0' → logprob: -7.1891093254089355
    9. '1' → logprob: -7.5641093254089355
    10. 'q' → logprob: -8.564108848571777

Token 593: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25500017404556274
    2. '   ' → logprob: -1.755000114440918
    3. '<|end|>' → logprob: -3.880000114440918
    4. ' ' → logprob: -5.255000114440918
    5. 'def' → logprob: -5.255000114440918
    6. ' +' → logprob: -5.505000114440918
    7. '+' → logprob: -6.005000114440918
    8. ' for' → logprob: -6.130000114440918
    9. 'for' → logprob: -6.255000114440918
    10. ')' → logprob: -6.255000114440918

Token 594: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4506252706050873
    2. '(p' → logprob: -1.0756253004074097
    3. '((' → logprob: -4.825625419616699
    4. ' p' → logprob: -5.200625419616699
    5. '(' → logprob: -6.075625419616699
    6. 'q' → logprob: -6.200625419616699
    7. '(q' → logprob: -6.325625419616699
    8. ' (' → logprob: -7.075625419616699
    9. '2' → logprob: -7.575625419616699
    10. '(i' → logprob: -7.950625419616699

Token 595: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0045953188091516495
    2. '[' → logprob: -5.8795952796936035
    3. ' *' → logprob: -8.004595756530762
    4. '*' → logprob: -8.504595756530762
    5. '[q' → logprob: -8.504595756530762
    6. ' +' → logprob: -8.754595756530762
    7. 'q' → logprob: -9.004595756530762
    8. '
' → logprob: -9.004595756530762
    9. '%' → logprob: -9.129595756530762
    10. '+' → logprob: -9.254595756530762

Token 596: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03367394208908081
    2. ' q' → logprob: -3.4086740016937256
    3. 'MOD' → logprob: -11.408674240112305
    4. '
' → logprob: -12.658674240112305
    5. '(q' → logprob: -12.908674240112305
    6. '1' → logprob: -12.908674240112305
    7. '(' → logprob: -13.283674240112305
    8. ' (' → logprob: -13.408674240112305
    9. ' MOD' → logprob: -13.533674240112305
    10. '2' → logprob: -13.533674240112305

Token 597: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006716079078614712
    2. ' %' → logprob: -6.131716251373291
    3. ' 
' → logprob: -6.256716251373291
    4. '%' → logprob: -6.756716251373291
    5. ')' → logprob: -7.631716251373291
    6. '   ' → logprob: -8.131715774536133
    7. ')%' → logprob: -8.631715774536133
    8. '
' → logprob: -8.881715774536133
    9. '  
' → logprob: -9.381715774536133
    10. '    
' → logprob: -9.881715774536133

Token 598: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08417537808418274
    2. ' ans' → logprob: -3.7091753482818604
    3. '   ' → logprob: -3.9591753482818604
    4. '%' → logprob: -4.2091755867004395
    5. 'ans' → logprob: -4.9591755867004395
    6. ' %' → logprob: -5.2091755867004395
    7. '    
' → logprob: -5.9591755867004395
    8. ')' → logprob: -6.2091755867004395
    9. '```' → logprob: -7.2091755867004395
    10. ' 
' → logprob: -7.4591755867004395

Token 599: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4790399968624115
    2. 'ans' (adapté à ' ans') → logprob: -0.9790400266647339
    3. '
' → logprob: -5.979040145874023
    4. ' if' → logprob: -6.854040145874023
    5. '\n' → logprob: -8.354040145874023
    6. '(ans' → logprob: -8.604040145874023
    7. 'if' → logprob: -8.604040145874023
    8. '```' → logprob: -8.979040145874023
    9. '	ans' → logprob: -9.229040145874023
    10. '%' → logprob: -9.229040145874023

Token 600: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.37054505944252014
    2. '%' → logprob: -1.7455450296401978
    3. '%=' → logprob: -2.1205451488494873
    4. ' %' → logprob: -4.870544910430908
    5. ')' → logprob: -5.620544910430908
    6. ')%' → logprob: -5.745544910430908
    7. '
' → logprob: -8.370545387268066
    8. '   ' → logprob: -8.870545387268066
    9. '=' → logprob: -8.995545387268066
    10. '%
' → logprob: -9.870545387268066

Token 601: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019286326132714748
    2. ' MOD' → logprob: -6.251928806304932
    3. 'MO' → logprob: -17.876928329467773
    4. '_MOD' → logprob: -18.251928329467773
    5. '.MOD' → logprob: -19.751928329467773
    6. ' ' → logprob: -20.876928329467773
    7. 'MD' → logprob: -20.876928329467773
    8. 'MODE' → logprob: -21.501928329467773
    9. '   ' → logprob: -21.751928329467773
    10. 'M' → logprob: -21.751928329467773

Token 602: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23591437935829163
    2. '
' → logprob: -1.6109143495559692
    3. '    
' → logprob: -5.48591423034668
    4. 'return' → logprob: -5.73591423034668
    5. '  
' → logprob: -7.23591423034668
    6. ' return' → logprob: -7.48591423034668
    7. '<|end|>' → logprob: -7.86091423034668
    8. ' ' → logprob: -8.23591423034668
    9. ' 
' → logprob: -8.36091423034668
    10. '\n' → logprob: -8.73591423034668

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04470953345298767
    2. '
' → logprob: -3.7947094440460205
    3. 'return' → logprob: -4.4197096824646
    4. ' return' → logprob: -5.4197096824646
    5. '```' → logprob: -6.1697096824646
    6. '    
' → logprob: -7.1697096824646
    7. 'ans' → logprob: -7.4197096824646
    8. ' ans' → logprob: -8.419709205627441
    9. ' ' → logprob: -8.419709205627441
    10. '\n' → logprob: -9.044709205627441

Token 604: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.14963065087795258
    2. 'return' → logprob: -2.149630546569824
    3. 'if' → logprob: -4.024630546569824
    4. ' ans' → logprob: -6.524630546569824
    5. 'for' → logprob: -6.649630546569824
    6. '   ' → logprob: -7.274630546569824
    7. ' return' → logprob: -7.274630546569824
    8. ' if' → logprob: -9.149630546569824
    9. 'two' → logprob: -9.399630546569824
    10. 'answer' → logprob: -10.149630546569824

Token 605: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.3442131578922272
    2. '*=' → logprob: -1.7192131280899048
    3. '=' → logprob: -2.9692132472991943
    4. '*' → logprob: -4.344213008880615
    5. '%=' → logprob: -4.719213008880615
    6. ' %=' → logprob: -4.969213008880615
    7. '   ' → logprob: -5.219213008880615
    8. 'return' → logprob: -5.219213008880615
    9. ' =' → logprob: -5.219213008880615
    10. '%' → logprob: -5.719213008880615

Token 606: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.007613374851644039
    2. ' two' → logprob: -4.882613182067871
    3. '2' → logprob: -12.757613182067871
    4. '(two' → logprob: -12.882613182067871
    5. ' ' → logprob: -14.257613182067871
    6. '   ' → logprob: -14.382613182067871
    7. '_two' → logprob: -15.882613182067871
    8. 'tw' → logprob: -16.007614135742188
    9. 'pow' → logprob: -16.632614135742188
    10. '.two' → logprob: -16.757614135742188

Token 607: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.6166903151315637e-05
    2. 'inv' → logprob: -11.875016212463379
    3. '[i' → logprob: -12.125016212463379
    4. '_INV' → logprob: -13.875016212463379
    5. '[_' → logprob: -14.125016212463379
    6. '[' → logprob: -14.750016212463379
    7. '_i' → logprob: -15.000016212463379
    8. '```' → logprob: -15.125016212463379
    9. '_inverse' → logprob: -15.375016212463379
    10. '   ' → logprob: -15.625016212463379

Token 608: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.302704761968926e-05
    2. '[' → logprob: -9.625073432922363
    3. 'i' → logprob: -12.125073432922363
    4. '[
' → logprob: -14.500073432922363
    5. ' [' → logprob: -15.000073432922363
    6. '(i' → logprob: -15.750073432922363
    7. '```' → logprob: -15.875073432922363
    8. '
' → logprob: -16.250072479248047
    9. '   ' → logprob: -16.250072479248047
    10. '\[' → logprob: -16.375072479248047

Token 609: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2530801296234131
    2. 'i' → logprob: -1.503080129623413
    3. '[' → logprob: -6.878080368041992
    4. '1' → logprob: -9.253080368041992
    5. ' i' → logprob: -11.878080368041992
    6. '{i' → logprob: -12.378080368041992
    7. '2' → logprob: -12.503080368041992
    8. '   ' → logprob: -13.253080368041992
    9. '[
' → logprob: -13.378080368041992
    10. '
' → logprob: -13.628080368041992

Token 610: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20191028714179993
    2. '[i' → logprob: -1.7019102573394775
    3. 'i' → logprob: -8.326910018920898
    4. ']
' → logprob: -8.826910018920898
    5. '[' → logprob: -9.701910018920898
    6. '[
' → logprob: -11.701910018920898
    7. '*i' → logprob: -11.701910018920898
    8. ' i' → logprob: -11.951910018920898
    9. '(i' → logprob: -11.951910018920898
    10. '   ' → logprob: -12.451910018920898

Token 611: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8035637140274048
    2. '   ' → logprob: -1.8035637140274048
    3. '%' → logprob: -2.1785635948181152
    4. '<|end|>' → logprob: -2.3035635948181152
    5. 'ans' → logprob: -3.0535635948181152
    6. '    
' → logprob: -3.1785635948181152
    7. '(ans' → logprob: -4.178563594818115
    8. ' ans' → logprob: -4.303563594818115
    9. 'return' → logprob: -4.553563594818115
    10. '\n' → logprob: -4.553563594818115

Token 612: ' ans' (ID: 3345)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07490967214107513
    2. 'ans' (adapté à ' ans') → logprob: -2.8249096870422363
    3. '[i' → logprob: -4.699909687042236
    4. ' %=' → logprob: -6.699909687042236
    5. ' ans' → logprob: -7.699909687042236
    6. '(ans' → logprob: -7.824909687042236
    7. '%i' → logprob: -7.824909687042236
    8. '%=' → logprob: -8.199909210205078
    9. ' %' → logprob: -8.199909210205078
    10. '[' → logprob: -8.449909210205078

Token 613: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4201958477497101
    2. '%' → logprob: -1.1701958179473877
    3. ' %=' → logprob: -3.4201958179473877
    4. ' %' → logprob: -10.670195579528809
    5. ')%' → logprob: -11.420195579528809
    6. '%
' → logprob: -11.670195579528809
    7. '```' → logprob: -11.795195579528809
    8. '()%' → logprob: -12.295195579528809
    9. ' ' → logprob: -13.045195579528809
    10. '=' → logprob: -13.170195579528809

Token 614: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0040785204619169235
    2. ' MOD' → logprob: -5.504078388214111
    3. '_MOD' → logprob: -16.754077911376953
    4. '.MOD' → logprob: -17.629077911376953
    5. 'MO' → logprob: -18.504077911376953
    6. '(M' → logprob: -19.754077911376953
    7. 'MODE' → logprob: -20.254077911376953
    8. ' ' → logprob: -20.254077911376953
    9. 'MD' → logprob: -20.629077911376953
    10. '(Mod' → logprob: -21.254077911376953

Token 615: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01591658592224121
    2. 'return' → logprob: -4.76591682434082
    3. ' return' → logprob: -5.26591682434082
    4. '
' → logprob: -6.64091682434082
    5. '	return' → logprob: -7.51591682434082
    6. '    
' → logprob: -8.89091682434082
    7. '<|end|>' → logprob: -9.64091682434082
    8. ' ' → logprob: -11.64091682434082
    9. ':return' → logprob: -11.64091682434082
    10. '\n' → logprob: -11.76591682434082

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014185652835294604
    2. 'return' → logprob: -6.751418590545654
    3. ' return' → logprob: -8.626418113708496
    4. '	return' → logprob: -9.876418113708496
    5. '<|end|>' → logprob: -11.751418113708496
    6. '    
' → logprob: -12.376418113708496
    7. ':return' → logprob: -13.501418113708496
    8. '```' → logprob: -14.001418113708496
    9. ',' → logprob: -14.126418113708496
    10. '
' → logprob: -14.751418113708496

Token 617: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011349715292453766
    2. ' return' → logprob: -4.511349678039551
    3. '   ' → logprob: -8.13634967803955
    4. '	return' → logprob: -12.63634967803955
    5. '
' → logprob: -12.76134967803955
    6. '    
' → logprob: -14.13634967803955
    7. ':return' → logprob: -14.26134967803955
    8. ' ' → logprob: -14.63634967803955
    9. 'eturn' → logprob: -14.63634967803955
    10. '```' → logprob: -15.38634967803955

Token 618: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00020389800192788243
    2. ' ans' → logprob: -8.500204086303711
    3. '(ans' → logprob: -15.000204086303711
    4. '	ans' → logprob: -17.62520408630371
    5. '
' → logprob: -20.25020408630371
    6. 'answer' → logprob: -21.00020408630371
    7. '_ans' → logprob: -21.12520408630371
    8. '   ' → logprob: -21.62520408630371
    9. 'abs' → logprob: -22.12520408630371
    10. 'Ans' → logprob: -22.12520408630371

Token 619: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013628240674734116
    2. '<|end|>' → logprob: -4.638628005981445
    3. '
' → logprob: -6.638628005981445
    4. '#' → logprob: -6.638628005981445
    5. '[' → logprob: -8.013628005981445
    6. '```' → logprob: -8.388628005981445
    7. 'n' → logprob: -8.513628005981445
    8. ')' → logprob: -8.888628005981445
    9. '\' → logprob: -9.388628005981445
    10. '[
' → logprob: -10.138628005981445

Token 620: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041875618626363575
    2. '<|end|>' → logprob: -8.625418663024902
    3. '```' → logprob: -8.750418663024902
    4. '#' → logprob: -9.500418663024902
    5. 'for' → logprob: -13.250418663024902
    6. 'print' → logprob: -14.000418663024902
    7. ' def' → logprob: -14.250418663024902
    8. '[' → logprob: -14.250418663024902
    9. 'if' → logprob: -15.000418663024902
    10. '<|end|>' → logprob: -15.000418663024902

Token 621: ' problem' (ID: 4792)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009739940869621933
    2. 'main' → logprob: -7.125974178314209
    3. ' solve' → logprob: -8.75097370147705
    4. ' process' → logprob: -12.12597370147705
    5. ' compute' → logprob: -13.00097370147705
    6. 'solve' → logprob: -13.75097370147705
    7. ' run' → logprob: -14.25097370147705
    8. ' solution' → logprob: -14.62597370147705
    9. ' calculate' → logprob: -14.87597370147705
    10. '	main' → logprob: -15.37597370147705

Token 622: '_main' (ID: 23076)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.017731819301843643
    2. '_' → logprob: -5.142731666564941
    3. '():
' → logprob: -5.142731666564941
    4. '_solver' → logprob: -6.017731666564941
    5. '(' → logprob: -6.642731666564941
    6. '(i' → logprob: -7.892731666564941
    7. 'def' → logprob: -8.017731666564941
    8. '_solution' → logprob: -8.142731666564941
    9. '()' → logprob: -8.517731666564941
    10. '_s' → logprob: -9.142731666564941

Token 623: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00024251631111837924
    2. '_' → logprob: -8.875242233276367
    3. ' ():' → logprob: -10.250242233276367
    4. '():
' → logprob: -10.500242233276367
    5. '(' → logprob: -10.875242233276367
    6. '()' → logprob: -11.625242233276367
    7. '(args' → logprob: -13.875242233276367
    8. '_:' → logprob: -14.000242233276367
    9. '_def' → logprob: -14.125242233276367
    10. '()>' → logprob: -14.125242233276367

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003208037815056741
    2. ' MOD' → logprob: -9.750320434570312
    3. ' U' → logprob: -10.000320434570312
    4. 'MOD' → logprob: -10.000320434570312
    5. '(U' → logprob: -10.125320434570312
    6. ' fact' → logprob: -10.625320434570312
    7. '()' → logprob: -10.750320434570312
    8. '():' → logprob: -10.875320434570312
    9. 'fact' → logprob: -11.125320434570312
    10. 'U' → logprob: -11.125320434570312

Token 625: ' fact' (ID: 2840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38599035143852234
    2. 'fact' (adapté à ' fact') → logprob: -1.2609903812408447
    3. ' fact' → logprob: -4.385990142822266
    4. 'U' → logprob: -4.635990142822266
    5. 'n' → logprob: -5.135990142822266
    6. 'MOD' → logprob: -5.635990142822266
    7. ' U' → logprob: -6.635990142822266
    8. 'N' → logprob: -6.885990142822266
    9. ' n' → logprob: -7.510990142822266
    10. 'def' → logprob: -7.760990142822266

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ',U' → logprob: -11.375020980834961
    3. ' ,' → logprob: -13.375020980834961
    4. '=' → logprob: -13.625020980834961
    5. ',W' → logprob: -14.125020980834961
    6. '   ' → logprob: -14.250020980834961
    7. ',
' → logprob: -14.500020980834961
    8. ' =' → logprob: -14.750020980834961
    9. ',n' → logprob: -14.875020980834961
    10. ',p' → logprob: -15.000020980834961

Token 627: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07889463007450104
    2. ' fact' → logprob: -2.57889461517334
    3. '_fact' → logprob: -12.32889461517334
    4. '.fact' → logprob: -14.82889461517334
    5. 'Fact' → logprob: -17.453895568847656
    6. 'facts' → logprob: -17.828895568847656
    7. ' fakt' → logprob: -17.953895568847656
    8. 'factor' → logprob: -18.578895568847656
    9. '<|end|>' → logprob: -18.953895568847656
    10. ' facts' → logprob: -20.453895568847656

Token 628: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.0921942703134846e-05
    2. ',' → logprob: -11.62501049041748
    3. 'inv' → logprob: -13.62501049041748
    4. ',_' → logprob: -15.37501049041748
    5. '_in' → logprob: -15.62501049041748
    6. '_INV' → logprob: -15.62501049041748
    7. '_inf' → logprob: -16.750011444091797
    8. '_int' → logprob: -17.125011444091797
    9. '_,' → logprob: -17.125011444091797
    10. '   ' → logprob: -17.375011444091797

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',t' → logprob: -13.000003814697266
    3. ' ,' → logprob: -13.500003814697266
    4. '=' → logprob: -14.750003814697266
    5. ' =' → logprob: -17.125003814697266
    6. 'two' → logprob: -17.500003814697266
    7. ' two' → logprob: -19.125003814697266
    8. '‌,' → logprob: -19.125003814697266
    9. ',
' → logprob: -19.375003814697266
    10. '   ' → logprob: -19.750003814697266

Token 630: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.3132631778717041
    2. ' two' → logprob: -1.313263177871704
    3. '(two' → logprob: -13.688262939453125
    4. ' ' → logprob: -15.438262939453125
    5. '   ' → logprob: -16.313262939453125
    6. '
' → logprob: -17.188262939453125
    7. '_two' → logprob: -18.313262939453125
    8. 'Two' → logprob: -18.438262939453125
    9. '```' → logprob: -18.438262939453125
    10. '.two' → logprob: -18.563262939453125

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06038819998502731
    2. '_inv' → logprob: -2.9353880882263184
    3. ',_' → logprob: -5.310388088226318
    4. ' ,' → logprob: -8.435388565063477
    5. '_,' → logprob: -8.560388565063477
    6. '   ' → logprob: -9.310388565063477
    7. '_' → logprob: -11.685388565063477
    8. '_in' → logprob: -12.060388565063477
    9. '_inverse' → logprob: -12.185388565063477
    10. '```' → logprob: -12.310388565063477

Token 632: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.005234002135694027
    2. ' two' → logprob: -5.2552337646484375
    3. '(two' → logprob: -15.505233764648438
    4. '   ' → logprob: -16.880233764648438
    5. '.two' → logprob: -18.755233764648438
    6. 'Two' → logprob: -18.755233764648438
    7. ' ' → logprob: -18.880233764648438
    8. 'tw' → logprob: -19.005233764648438
    9. '_two' → logprob: -19.005233764648438
    10. '
' → logprob: -20.005233764648438

Token 633: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.4378848391061183e-05
    2. 'inv' → logprob: -11.625014305114746
    3. '_in' → logprob: -13.500014305114746
    4. '_int' → logprob: -14.000014305114746
    5. '_' → logprob: -14.125014305114746
    6. ' _' → logprob: -14.750014305114746
    7. '_INV' → logprob: -15.250014305114746
    8. '_i' → logprob: -15.375014305114746
    9. '_inf' → logprob: -15.875014305114746
    10. '=_' → logprob: -16.000015258789062

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760774612426758
    2. '=' → logprob: -0.8260774612426758
    3. '   ' → logprob: -8.951077461242676
    4. ',' → logprob: -11.826077461242676
    5. ' ' → logprob: -14.701077461242676
    6. '  ' → logprob: -15.076077461242676
    7. '	' → logprob: -15.951077461242676
    8. '    ' → logprob: -15.951077461242676
    9. '=get' → logprob: -16.07607650756836
    10. 'def' → logprob: -17.82607650756836

Token 635: ' prepare' (ID: 13708)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.006715370807796717
    2. ' prepare' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.381715774536133
    4. ' ' → logprob: -20.381715774536133
    5. '_prepare' → logprob: -20.381715774536133
    6. '.prepare' → logprob: -20.631715774536133
    7. '  ' → logprob: -22.006715774536133
    8. 'Prepare' → logprob: -23.256715774536133
    9. 'prep' → logprob: -23.506715774536133
    10. '    ' → logprob: -23.881715774536133

Token 636: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.0011852304451167583
    2. 'pre' → logprob: -6.751185417175293
    3. '_com' → logprob: -12.001185417175293
    4. '(pre' → logprob: -12.626185417175293
    5. '_p' → logprob: -13.626185417175293
    6. '_prec' → logprob: -13.751185417175293
    7. '_' → logprob: -14.501185417175293
    8. 'def' → logprob: -14.876185417175293
    9. 'Pre' → logprob: -15.126185417175293
    10. 'fact' → logprob: -15.126185417175293

Token 637: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -8.65707261255011e-06
    2. 'comp' → logprob: -11.750008583068848
    3. '(com' → logprob: -15.625008583068848
    4. 'compute' → logprob: -16.250009536743164
    5. 'composition' → logprob: -16.250009536743164
    6. 'paration' → logprob: -16.375009536743164
    7. ' computation' → logprob: -16.500009536743164
    8. 'c' → logprob: -16.625009536743164
    9. '_com' → logprob: -17.125009536743164
    10. ' com' → logprob: -17.375009536743164

Token 638: 'putation' (ID: 47913)
  Prédit: 'putation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'putation' → logprob: -7.076218025758862e-05
    2. 'put' → logprob: -9.625070571899414
    3. 'utation' → logprob: -12.875070571899414
    4. 'pute' → logprob: -13.500070571899414
    5. 'pt' → logprob: -14.375070571899414
    6. 'puta' → logprob: -17.375070571899414
    7. 'ption' → logprob: -17.625070571899414
    8. 'putate' → logprob: -17.750070571899414
    9. 'PUT' → logprob: -18.250070571899414
    10. 't' → logprob: -18.375070571899414

Token 639: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5543394684791565
    2. '()' → logprob: -1.9293394088745117
    3. '   ' → logprob: -1.9293394088745117
    4. '()
' → logprob: -2.0543394088745117
    5. '<|end|>' → logprob: -5.679339408874512
    6. '    
' → logprob: -6.679339408874512
    7. '```' → logprob: -7.554339408874512
    8. '  
' → logprob: -8.179339408874512
    9. ',' → logprob: -8.679339408874512
    10. '(
' → logprob: -8.804339408874512

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004800464957952499
    2. '
' → logprob: -5.879800319671631
    3. '    
' → logprob: -7.129800319671631
    4. '```' → logprob: -7.754800319671631
    5. 'def' → logprob: -8.504800796508789
    6. 'B' → logprob: -9.254800796508789
    7. 'n' → logprob: -9.754800796508789
    8. '<|end|>' → logprob: -10.129800796508789
    9. ' n' → logprob: -10.254800796508789
    10. '[' → logprob: -10.629800796508789

Token 641: ' MOD' (ID: 32868)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.26369142532348633
    2. '   ' → logprob: -2.1386914253234863
    3. 'N' → logprob: -2.6386914253234863
    4. 'n' → logprob: -4.013691425323486
    5. ' B' → logprob: -4.388691425323486
    6. 'T' → logprob: -5.388691425323486
    7. 'A' → logprob: -5.513691425323486
    8. 'MOD' (adapté à ' MOD') → logprob: -6.763691425323486
    9. 'W' → logprob: -7.763691425323486
    10. ' n' → logprob: -8.138690948486328

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033741019666194916
    2. '=' → logprob: -3.408740997314453
    3. ',' → logprob: -9.283740997314453
    4. ' =
' → logprob: -13.658740997314453
    5. ' ' → logprob: -14.783740997314453
    6. ' =
' → logprob: -15.408740997314453
    7. ' ,' → logprob: -15.658740997314453
    8. '	' → logprob: -15.783740997314453
    9. '   ' → logprob: -16.283740997314453
    10. '  ' → logprob: -16.783740997314453

Token 643: ' get' (ID: 717)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23876258730888367
    2. ' get' → logprob: -2.488762617111206
    3. ' ' → logprob: -2.738762617111206
    4. 'get' → logprob: -2.738762617111206
    5. '100' → logprob: -9.488762855529785
    6. '1' → logprob: -12.863762855529785
    7. '   ' → logprob: -13.238762855529785
    8. 'fact' → logprob: -13.238762855529785
    9. '(get' → logprob: -13.988762855529785
    10. '(' → logprob: -14.738762855529785

Token 644: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -4.60414821645827e-06
    2. '_Mod' → logprob: -12.500004768371582
    3. '_mod' → logprob: -14.375004768371582
    4. '_' → logprob: -15.875004768371582
    5. 'MOD' → logprob: -16.875003814697266
    6. '_MODE' → logprob: -17.000003814697266
    7. '_MD' → logprob: -17.750003814697266
    8. '"_' → logprob: -18.375003814697266
    9. '##_' → logprob: -18.625003814697266
    10. ''_' → logprob: -18.750003814697266

Token 645: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27587267756462097
    2. '   ' → logprob: -1.5258727073669434
    3. '    
' → logprob: -4.650872707366943
    4. '<|end|>' → logprob: -5.150872707366943
    5. '```' → logprob: -6.275872707366943
    6. '	
' → logprob: -6.525872707366943
    7. 'n' → logprob: -7.025872707366943
    8. ',' → logprob: -7.650872707366943
    9. 'B' → logprob: -7.650872707366943
    10. '  
' → logprob: -7.775872707366943

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26649200916290283
    2. 'B' → logprob: -2.5164918899536133
    3. 'A' → logprob: -3.1414918899536133
    4. ' B' → logprob: -3.3914918899536133
    5. 'N' → logprob: -3.5164918899536133
    6. 'n' → logprob: -3.7664918899536133
    7. ' A' → logprob: -4.766491889953613
    8. ' N' → logprob: -5.641491889953613
    9. ' n' → logprob: -5.891491889953613
    10. 'W' → logprob: -6.141491889953613

Token 647: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.03152652457356453
    2. 'A' → logprob: -4.031526565551758
    3. 'N' → logprob: -5.531526565551758
    4. 'T' → logprob: -5.531526565551758
    5. 'W' → logprob: -6.156526565551758
    6. 'i' → logprob: -6.906526565551758
    7. 'p' → logprob: -7.156526565551758
    8. 'n' → logprob: -7.781526565551758
    9. 'H' → logprob: -8.531526565551758
    10. '   ' → logprob: -8.531526565551758

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031977968756109476
    2. ',W' → logprob: -5.75319766998291
    3. ' ,' → logprob: -11.12819766998291
    4. 'W' → logprob: -13.00319766998291
    5. ',Q' → logprob: -13.62819766998291
    6. ',\
' → logprob: -14.37819766998291
    7. ',
' → logprob: -15.00319766998291
    8. ',B' → logprob: -15.12819766998291
    9. '   ' → logprob: -16.003198623657227
    10. ',w' → logprob: -16.128198623657227

Token 649: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02325514331459999
    2. ' W' → logprob: -3.7732551097869873
    3. ' ' → logprob: -12.023255348205566
    4. ' =' → logprob: -14.023255348205566
    5. '=' → logprob: -14.148255348205566
    6. '  ' → logprob: -14.398255348205566
    7. '=W' → logprob: -14.648255348205566
    8. '	W' → logprob: -15.148255348205566
    9. '   ' → logprob: -15.648255348205566
    10. ' ' → logprob: -15.648255348205566

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14398744702339172
    2. ' =' → logprob: -2.0189874172210693
    3. ',' → logprob: -6.643987655639648
    4. '=input' → logprob: -12.518987655639648
    5. '=int' → logprob: -13.393987655639648
    6. '=B' → logprob: -13.518987655639648
    7. '   ' → logprob: -14.268987655639648
    8. '<|end|>' → logprob: -14.893987655639648
    9. ')' → logprob: -15.518987655639648
    10. ' ' → logprob: -15.643987655639648

Token 651: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.07542494684457779
    2. ' get' → logprob: -2.700424909591675
    3. 'map' → logprob: -5.325425148010254
    4. ' map' → logprob: -7.575425148010254
    5. '=get' → logprob: -9.950425148010254
    6. '0' → logprob: -11.450425148010254
    7. '	get' → logprob: -11.825425148010254
    8. ' ' → logprob: -11.950425148010254
    9. '[get' → logprob: -12.575425148010254
    10. 'list' → logprob: -13.075425148010254

Token 652: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.08130240440368652
    2. '()' → logprob: -2.5813024044036865
    3. 'input' → logprob: -6.206302642822266
    4. '(' → logprob: -9.081302642822266
    5. '_map' → logprob: -9.206302642822266
    6. '()
' → logprob: -10.456302642822266
    7. '(),' → logprob: -10.456302642822266
    8. 'map' → logprob: -10.956302642822266
    9. 'Input' → logprob: -11.206302642822266
    10. '().' → logprob: -11.206302642822266

Token 653: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02326073683798313
    2. '()
' → logprob: -3.7732608318328857
    3. '()
' → logprob: -11.523261070251465
    4. '   ' → logprob: -13.273261070251465
    5. '();' → logprob: -13.898261070251465
    6. ' ()' → logprob: -14.023261070251465
    7. '()\' → logprob: -14.523261070251465
    8. '()

' → logprob: -14.648261070251465
    9. '()`' → logprob: -15.398261070251465
    10. '(' → logprob: -15.398261070251465

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005242652725428343
    2. '
' → logprob: -5.755242824554443
    3. '```' → logprob: -7.130242824554443
    4. '    
' → logprob: -7.255242824554443
    5. 'for' → logprob: -8.005242347717285
    6. ' for' → logprob: -9.005242347717285
    7. 'n' → logprob: -10.755242347717285
    8. 'result' → logprob: -11.380242347717285
    9. 'def' → logprob: -11.380242347717285
    10. 'p' → logprob: -11.380242347717285

Token 655: ' p' (ID: 275)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.616826057434082
    2. 'p' (adapté à ' p') → logprob: -1.366826057434082
    3. 'result' → logprob: -2.491826057434082
    4. 'res' → logprob: -3.241826057434082
    5. 'for' → logprob: -3.241826057434082
    6. 'answer' → logprob: -4.491826057434082
    7. 'max' → logprob: -4.616826057434082
    8. 'total' → logprob: -4.991826057434082
    9. '   ' → logprob: -5.741826057434082
    10. 'n' → logprob: -5.741826057434082

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31379812955856323
    2. '=' → logprob: -1.313798189163208
    3. ',' → logprob: -7.563797950744629
    4. 'p' → logprob: -11.938797950744629
    5. ' ' → logprob: -12.188797950744629
    6. ' p' → logprob: -13.438797950744629
    7. '_' → logprob: -13.938797950744629
    8. '=p' → logprob: -14.188797950744629
    9. '  ' → logprob: -14.563797950744629
    10. '   ' → logprob: -14.813797950744629

Token 657: ' ' (ID: 220)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.044441159814596176
    2. '0' → logprob: -3.6694412231445312
    3. ' update' → logprob: -4.169441223144531
    4. '[' → logprob: -6.919441223144531
    5. '(update' → logprob: -7.044441223144531
    6. '1' → logprob: -8.169441223144531
    7. ' ' → logprob: -8.544441223144531
    8. '[]' → logprob: -9.544441223144531
    9. ' [' → logprob: -10.044441223144531
    10. '(' → logprob: -10.669441223144531

Token 658: '0' (ID: 15)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.00473022973164916
    2. '0' → logprob: -5.754730224609375
    3. '(update' → logprob: -7.379730224609375
    4. '1' → logprob: -7.629730224609375
    5. ' update' → logprob: -8.504730224609375
    6. '[' → logprob: -8.754730224609375
    7. '(' → logprob: -10.879730224609375
    8. 'B' → logprob: -11.129730224609375
    9. '[B' → logprob: -11.504730224609375
    10. '[]' → logprob: -11.629730224609375

Token 659: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19170039892196655
    2. '<|end|>' → logprob: -1.8167004585266113
    3. '   ' → logprob: -5.191700458526611
    4. '<|end|>' → logprob: -6.066700458526611
    5. 'for' → logprob: -6.941700458526611
    6. '    
' → logprob: -7.066700458526611
    7. '  
' → logprob: -7.441700458526611
    8. ' for' → logprob: -7.816700458526611
    9. ' 
' → logprob: -8.566699981689453
    10. ',' → logprob: -8.566699981689453

Token 660: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.14345066249370575
    2. ' for' → logprob: -2.7684507369995117
    3. 'for' → logprob: -3.0184507369995117
    4. ' q' → logprob: -4.018450736999512
    5. 'W' → logprob: -6.018450736999512
    6. '   ' → logprob: -7.393450736999512
    7. 'i' → logprob: -8.643450736999512
    8. ' two' → logprob: -8.643450736999512
    9. ' W' → logprob: -8.643450736999512
    10. ' ' → logprob: -8.893450736999512

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193271040916443
    2. ' =' → logprob: -1.5019327402114868
    3. ',' → logprob: -13.251933097839355
    4. '   ' → logprob: -14.501933097839355
    5. ' +=' → logprob: -15.126933097839355
    6. '<|end|>' → logprob: -15.626933097839355
    7. '=
' → logprob: -15.626933097839355
    8. ' ' → logprob: -15.751933097839355
    9. '+=' → logprob: -16.00193214416504
    10. '0' → logprob: -16.75193214416504

Token 663: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324652671813965
    2. ' ' → logprob: -3.7732465267181396
    3. '   ' → logprob: -14.398246765136719
    4. '=' → logprob: -15.273246765136719
    5. '1' → logprob: -16.52324676513672
    6. '2' → logprob: -16.77324676513672
    7. ' =' → logprob: -16.89824676513672
    8. '  ' → logprob: -17.27324676513672
    9. '<|end|>' → logprob: -17.27324676513672
    10. '۰' → logprob: -17.46074676513672

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '1' → logprob: -14.875032424926758
    4. '(' → logprob: -16.250032424926758
    5. 'p' → logprob: -16.375032424926758
    6. '   ' → logprob: -16.437532424926758
    7. '=' → logprob: -16.875032424926758
    8. 'B' → logprob: -17.000032424926758
    9. '۰' → logprob: -17.562532424926758
    10. '2' → logprob: -18.000032424926758

Token 665: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6812543272972107
    2. '
' → logprob: -1.4312543869018555
    3. ' for' → logprob: -2.1812543869018555
    4. '<|end|>' → logprob: -2.1812543869018555
    5. 'for' → logprob: -3.8062543869018555
    6. '	for' → logprob: -5.9312543869018555
    7. '<|end|>' → logprob: -6.3062543869018555
    8. '    
' → logprob: -6.9312543869018555
    9. ',' → logprob: -8.056254386901855
    10. '  
' → logprob: -8.556254386901855

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029879838228225708
    2. ' for' → logprob: -3.6548798084259033
    3. 'for' → logprob: -5.654880046844482
    4. '<|end|>' → logprob: -10.279879570007324
    5. '	for' → logprob: -10.904879570007324
    6. 'i' → logprob: -12.404879570007324
    7. ' i' → logprob: -12.529879570007324
    8. '
' → logprob: -12.779879570007324
    9. ',' → logprob: -13.279879570007324
    10. '```' → logprob: -13.279879570007324

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0027178567834198475
    2. '   ' → logprob: -6.502717971801758
    3. ' for' → logprob: -6.752717971801758
    4. 'i' → logprob: -10.127717971801758
    5. '
' → logprob: -12.877717971801758
    6. 'n' → logprob: -13.002717971801758
    7. '	for' → logprob: -13.752717971801758
    8. '```' → logprob: -13.877717971801758
    9. 'while' → logprob: -16.502717971801758
    10. ' ' → logprob: -16.627717971801758

Token 668: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6326190829277039
    2. ' i' → logprob: -0.7576190829277039
    3. ' ' → logprob: -12.13261890411377
    4. '_i' → logprob: -12.25761890411377
    5. '_' → logprob: -13.00761890411377
    6. '   ' → logprob: -13.25761890411377
    7. '	i' → logprob: -13.50761890411377
    8. ' range' → logprob: -14.13261890411377
    9. ' _' → logprob: -14.13261890411377
    10. 'range' → logprob: -14.75761890411377

Token 669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012562740594148636
    2. 'in' → logprob: -4.3875627517700195
    3. '(' → logprob: -10.88756275177002
    4. ' ' → logprob: -11.51256275177002
    5. '	in' → logprob: -12.13756275177002
    6. '1' → logprob: -12.26256275177002
    7. 'range' → logprob: -12.76256275177002
    8. '   ' → logprob: -13.13756275177002
    9. ',' → logprob: -13.13756275177002
    10. '_' → logprob: -13.88756275177002

Token 670: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020520923135336488
    2. ' range' → logprob: -8.500205039978027
    3. '(range' → logprob: -13.500205039978027
    4. '   ' → logprob: -16.375205993652344
    5. 'B' → logprob: -16.750205993652344
    6. ' ' → logprob: -16.875205993652344
    7. '1' → logprob: -17.750205993652344
    8. '  ' → logprob: -18.000205993652344
    9. 'in' → logprob: -18.000205993652344
    10. '	range' → logprob: -19.125205993652344

Token 671: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038302887231111526
    2. '(B' → logprob: -3.2883028984069824
    3. '(W' → logprob: -8.288302421569824
    4. '(max' → logprob: -12.163302421569824
    5. '1' → logprob: -13.913302421569824
    6. '((' → logprob: -14.288302421569824
    7. '(min' → logprob: -14.288302421569824
    8. '(
' → logprob: -14.413302421569824
    9. ' (' → logprob: -14.538302421569824
    10. '(L' → logprob: -15.038302421569824

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30710557103157043
    2. 'B' → logprob: -1.432105541229248
    3. 'max' → logprob: -4.182105541229248
    4. '2' → logprob: -4.682105541229248
    5. 'W' → logprob: -7.432105541229248
    6. '(B' → logprob: -8.682106018066406
    7. '(' → logprob: -9.307106018066406
    8. 'min' → logprob: -9.682106018066406
    9. '(max' → logprob: -10.182106018066406
    10. ' B' → logprob: -10.307106018066406

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004636961035430431
    2. ',B' → logprob: -5.504636764526367
    3. '(B' → logprob: -8.129636764526367
    4. ' ,' → logprob: -8.629636764526367
    5. '(' → logprob: -10.129636764526367
    6. ',W' → logprob: -10.504636764526367
    7. '   ' → logprob: -12.129636764526367
    8. '(),' → logprob: -12.879636764526367
    9. ',(' → logprob: -13.004636764526367
    10. ',
' → logprob: -13.254636764526367

Token 674: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05754532292485237
    2. 'get' → logprob: -3.4325454235076904
    3. '2' → logprob: -4.682545185089111
    4. 'max' → logprob: -4.807545185089111
    5. ' B' → logprob: -6.057545185089111
    6. ' get' → logprob: -6.557545185089111
    7. '100' → logprob: -6.807545185089111
    8. '10' → logprob: -7.682545185089111
    9. ' ' → logprob: -8.55754566192627
    10. ' max' → logprob: -9.30754566192627

Token 675: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005983781535178423
    2. ' +' → logprob: -6.005983829498291
    3. '):
' → logprob: -6.380983829498291
    4. ',' → logprob: -7.255983829498291
    5. '):' → logprob: -7.505983829498291
    6. '+B' → logprob: -7.880983829498291
    7. '   ' → logprob: -9.505983352661133
    8. '```' → logprob: -10.505983352661133
    9. '-' → logprob: -10.755983352661133
    10. '()+' → logprob: -11.755983352661133

Token 676: 'W' (ID: 54)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026801101863384247
    2. 'W' → logprob: -3.651801109313965
    3. '2' → logprob: -8.526801109313965
    4. ' ' → logprob: -8.776801109313965
    5. ' W' → logprob: -9.026801109313965
    6. '+' → logprob: -11.276801109313965
    7. 'B' → logprob: -12.276801109313965
    8. '   ' → logprob: -12.401801109313965
    9. '```' → logprob: -13.026801109313965
    10. 'i' → logprob: -14.401801109313965

Token 677: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07179601490497589
    2. '):
' → logprob: -3.32179594039917
    3. '):' → logprob: -3.44679594039917
    4. ' +' → logprob: -7.44679594039917
    5. '()+' → logprob: -7.94679594039917
    6. ',' → logprob: -9.696796417236328
    7. '   ' → logprob: -10.196796417236328
    8. '```' → logprob: -10.196796417236328
    9. ')+' → logprob: -10.321796417236328
    10. '():
' → logprob: -10.321796417236328

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000418875424657017
    2. '2' → logprob: -7.875418663024902
    3. ' ' → logprob: -10.250418663024902
    4. '3' → logprob: -13.375418663024902
    5. '   ' → logprob: -14.625418663024902
    6. ')' → logprob: -14.875418663024902
    7. '```' → logprob: -14.875418663024902
    8. '+' → logprob: -15.375418663024902
    9. 'i' → logprob: -16.87541961669922
    10. '  ' → logprob: -17.25041961669922

Token 679: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15871718525886536
    2. '):
' → logprob: -2.033717155456543
    3. ':' → logprob: -4.158717155456543
    4. '   ' → logprob: -8.783717155456543
    5. '):
' → logprob: -10.158717155456543
    6. ',' → logprob: -10.533717155456543
    7. ')' → logprob: -10.658717155456543
    8. '+' → logprob: -10.908717155456543
    9. ':
' → logprob: -11.783717155456543
    10. '():' → logprob: -12.533717155456543

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09254999458789825
    2. '   ' → logprob: -2.967550039291382
    3. '<|end|>' → logprob: -3.717550039291382
    4. '```' → logprob: -5.092549800872803
    5. '    ' → logprob: -6.717549800872803
    6. ' ' → logprob: -6.717549800872803
    7. ' p' → logprob: -7.467549800872803
    8. '[' → logprob: -8.092550277709961
    9. '(p' → logprob: -8.092550277709961
    10. '        
' → logprob: -8.342550277709961

Token 681: ' ans' (ID: 3345)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.457962304353714
    2. ' p' → logprob: -1.2079622745513916
    3. '       ' → logprob: -3.7079622745513916
    4. '<|end|>' → logprob: -4.457962512969971
    5. 'if' → logprob: -4.707962512969971
    6. '```' → logprob: -4.832962512969971
    7. ' if' → logprob: -5.082962512969971
    8. '   ' → logprob: -5.332962512969971
    9. ' ' → logprob: -6.707962512969971
    10. '	p' → logprob: -6.832962512969971

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22568728029727936
    2. ' =' → logprob: -1.6006872653961182
    3. '   ' → logprob: -9.475687026977539
    4. ',' → logprob: -9.725687026977539
    5. '+=' → logprob: -10.225687026977539
    6. ' +=' → logprob: -10.225687026977539
    7. ' ' → logprob: -10.975687026977539
    8. ')' → logprob: -11.600687026977539
    9. '<|end|>' → logprob: -11.850687026977539
    10. '=i' → logprob: -12.225687026977539

Token 683: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.006140426266938448
    2. '(com' → logprob: -5.756140232086182
    3. ' compute' → logprob: -5.881140232086182
    4. '(' → logprob: -10.00614070892334
    5. 'update' → logprob: -10.00614070892334
    6. ' (' → logprob: -10.63114070892334
    7. '(i' → logprob: -11.00614070892334
    8. '1' → logprob: -11.50614070892334
    9. '(update' → logprob: -11.50614070892334
    10. '0' → logprob: -12.25614070892334

Token 684: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.0219828002154827e-05
    2. 'ans' → logprob: -11.125020027160645
    3. '(ans' → logprob: -12.750020027160645
    4. '_answer' → logprob: -13.375020027160645
    5. '	ans' → logprob: -15.625020027160645
    6. '_' → logprob: -16.00002098083496
    7. '```' → logprob: -16.12502098083496
    8. '_an' → logprob: -16.62502098083496
    9. '_answers' → logprob: -16.75002098083496
    10. '(_' → logprob: -16.75002098083496

Token 685: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.000340461730957
    3. '(
' → logprob: -12.625340461730957
    4. 'i' → logprob: -14.250340461730957
    5. ' (' → logprob: -14.625340461730957
    6. '```' → logprob: -17.00033950805664
    7. '   ' → logprob: -17.75033950805664
    8. '((' → logprob: -18.75033950805664
    9. '(
' → logprob: -18.87533950805664
    10. '(I' → logprob: -19.25033950805664

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011982683092355728
    2. ',p' → logprob: -4.7619829177856445
    3. 'p' → logprob: -6.2619829177856445
    4. ' ,' → logprob: -7.2619829177856445
    5. '(p' → logprob: -7.8869829177856445
    6. '(' → logprob: -8.136982917785645
    7. '   ' → logprob: -10.136982917785645
    8. ' p' → logprob: -11.511982917785645
    9. '       ' → logprob: -11.636982917785645
    10. ',
' → logprob: -11.886982917785645

Token 687: ' p' (ID: 275)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5413464307785034
    2. 'p' → logprob: -0.9163464307785034
    3. ' update' → logprob: -4.541346549987793
    4. ' p' → logprob: -5.166346549987793
    5. '0' → logprob: -6.916346549987793
    6. '(update' → logprob: -7.541346549987793
    7. '   ' → logprob: -10.041346549987793
    8. '(' → logprob: -10.916346549987793
    9. '(p' → logprob: -11.041346549987793
    10. '    
' → logprob: -11.166346549987793

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',q' → logprob: -11.000039100646973
    3. ' ,' → logprob: -11.500039100646973
    4. ',
' → logprob: -12.000039100646973
    5. '+' → logprob: -13.375039100646973
    6. ',p' → logprob: -13.750039100646973
    7. '   ' → logprob: -13.750039100646973
    8. ')' → logprob: -14.500039100646973
    9. ',

' → logprob: -15.250039100646973
    10. '+,' → logprob: -15.375039100646973

Token 689: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00014036978245712817
    2. ' q' → logprob: -8.875140190124512
    3. 'update' → logprob: -14.875140190124512
    4. ' ' → logprob: -16.875141143798828
    5. '1' → logprob: -17.375141143798828
    6. '	q' → logprob: -17.500141143798828
    7. '   ' → logprob: -17.625141143798828
    8. '(' → logprob: -17.750141143798828
    9. 'compute' → logprob: -17.750141143798828
    10. '0' → logprob: -18.125141143798828

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024239711638074368
    2. '   ' → logprob: -8.500242233276367
    3. '       ' → logprob: -10.875242233276367
    4. ')' → logprob: -11.375242233276367
    5. ' ,' → logprob: -12.000242233276367
    6. ',
' → logprob: -13.750242233276367
    7. ')
' → logprob: -15.375242233276367
    8. '```' → logprob: -15.625242233276367
    9. '  ' → logprob: -15.750242233276367
    10. '           ' → logprob: -16.000242233276367

Token 691: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.06976735591888428
    2. ' MOD' → logprob: -3.444767475128174
    3. 'two' → logprob: -3.444767475128174
    4. ' two' → logprob: -5.694767475128174
    5. ' ' → logprob: -10.069766998291016
    6. '_MOD' → logprob: -10.194766998291016
    7. 'mod' → logprob: -10.694766998291016
    8. '10' → logprob: -10.819766998291016
    9. 'Mod' → logprob: -10.944766998291016
    10. 'get' → logprob: -10.944766998291016

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16624154150485992
    2. ')' → logprob: -1.9162415266036987
    3. '   ' → logprob: -5.416241645812988
    4. ')
' → logprob: -6.666241645812988
    5. '       ' → logprob: -8.541241645812988
    6. '<|end|>' → logprob: -10.791241645812988
    7. '```' → logprob: -11.041241645812988
    8. ',
' → logprob: -11.541241645812988
    9. '),' → logprob: -11.916241645812988
    10. ',i' → logprob: -12.541241645812988

Token 693: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.00861456897109747
    2. ' two' → logprob: -4.758614540100098
    3. '(two' → logprob: -18.258615493774414
    4. '_two' → logprob: -19.883615493774414
    5. 'Two' → logprob: -20.383615493774414
    6. '.two' → logprob: -20.508615493774414
    7. '   ' → logprob: -21.133615493774414
    8. '
' → logprob: -21.258615493774414
    9. 'tw' → logprob: -21.508615493774414
    10. ' ' → logprob: -21.633615493774414

Token 694: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0006065295310690999
    2. 'inv' → logprob: -7.500606536865234
    3. ')' → logprob: -10.375606536865234
    4. '_inverse' → logprob: -11.250606536865234
    5. '[' → logprob: -13.125606536865234
    6. '_in' → logprob: -13.750606536865234
    7. '[i' → logprob: -13.875606536865234
    8. '```' → logprob: -14.125606536865234
    9. ',' → logprob: -14.250606536865234
    10. '_INV' → logprob: -14.375606536865234

Token 695: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007345817284658551
    2. ')
' → logprob: -7.250734806060791
    3. '   ' → logprob: -10.750734329223633
    4. '       ' → logprob: -14.250734329223633
    5. ')i' → logprob: -14.625734329223633
    6. '[i' → logprob: -14.875734329223633
    7. ')`' → logprob: -15.250734329223633
    8. ')

' → logprob: -15.500734329223633
    9. ' )' → logprob: -15.750734329223633
    10. ')
' → logprob: -15.750734329223633

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46403563022613525
    2. '<|end|>' → logprob: -1.5890356302261353
    3. '   ' → logprob: -1.9640356302261353
    4. '```' → logprob: -4.214035511016846
    5. 'p' → logprob: -5.839035511016846
    6. '    ' → logprob: -6.464035511016846
    7. ',' → logprob: -6.964035511016846
    8. '	p' → logprob: -6.964035511016846
    9. '\t' → logprob: -7.589035511016846
    10. ' p' → logprob: -7.839035511016846

Token 697: ' print' (ID: 2123)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.027627665549516678
    2. '   ' → logprob: -4.277627468109131
    3. 'if' → logprob: -4.777627468109131
    4. 'print' (adapté à ' print') → logprob: -5.652627468109131
    5. ' if' → logprob: -7.152627468109131
    6. ' p' → logprob: -7.527627468109131
    7. '       ' → logprob: -10.027627944946289
    8. '```' → logprob: -10.527627944946289
    9. 'i' → logprob: -11.152627944946289
    10. '	p' → logprob: -11.277627944946289

Token 698: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. 'ans' → logprob: -15.375
    3. '(' → logprob: -16.5
    4. '(f' → logprob: -18.875
    5. '(
' → logprob: -19.75
    6. '(answer' → logprob: -19.875
    7. '(abs' → logprob: -20.25
    8. '((' → logprob: -21.0
    9. '	ans' → logprob: -21.0
    10. ' (' → logprob: -21.25

Token 699: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.75001335144043
    3. '   ' → logprob: -13.37501335144043
    4. ' )' → logprob: -13.50001335144043
    5. ',' → logprob: -13.87501335144043
    6. ')`' → logprob: -14.37501335144043
    7. '))' → logprob: -15.37501335144043
    8. ',)' → logprob: -16.12501335144043
    9. '`)' → logprob: -16.25001335144043
    10. '       ' → logprob: -16.25001335144043

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39547497034072876
    2. '   ' → logprob: -1.145474910736084
    3. 'p' → logprob: -5.395474910736084
    4. '<|end|>' → logprob: -6.520474910736084
    5. '```' → logprob: -7.520474910736084
    6. '\' → logprob: -8.020475387573242
    7. '	' → logprob: -8.395475387573242
    8. 'B' → logprob: -8.395475387573242
    9. ' ' → logprob: -8.770475387573242
    10. 'i' → logprob: -8.770475387573242

Token 701: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.6515960693359375
    2. '   ' → logprob: -1.6515960693359375
    3. ' if' → logprob: -2.0265960693359375
    4. 'if' → logprob: -2.1515960693359375
    5. ' p' → logprob: -3.6515960693359375
    6. '       ' → logprob: -4.4015960693359375
    7. '	p' → logprob: -8.401596069335938
    8. ' ' → logprob: -8.651596069335938
    9. '	if' → logprob: -9.276596069335938
    10. '```' → logprob: -9.651596069335938

Token 702: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.45444604754447937
    2. ' +=' → logprob: -1.3294460773468018
    3. '=' → logprob: -2.3294460773468018
    4. ' =' → logprob: -5.954445838928223
    5. ',' → logprob: -7.454445838928223
    6. ',p' → logprob: -10.829445838928223
    7. '+' → logprob: -11.454445838928223
    8. '=p' → logprob: -11.704445838928223
    9. ']+=' → logprob: -12.704445838928223
    10. ' ,' → logprob: -13.204445838928223

Token 703: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7327213883399963
    2. '(update' → logprob: -0.8577213883399963
    3. 'update' → logprob: -2.4827213287353516
    4. '(p' → logprob: -4.607721328735352
    5. '(i' → logprob: -7.232721328735352
    6. 'ans' → logprob: -7.732721328735352
    7. '(' → logprob: -7.982721328735352
    8. '(q' → logprob: -8.857721328735352
    9. ' (' → logprob: -10.232721328735352
    10. ' update' → logprob: -10.732721328735352

Token 704: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009768485091626644
    2. '(p' → logprob: -4.634768486022949
    3. 'update' → logprob: -11.75976848602295
    4. ' p' → logprob: -13.13476848602295
    5. '[p' → logprob: -14.25976848602295
    6. '(' → logprob: -14.50976848602295
    7. 'ans' → logprob: -15.00976848602295
    8. '(update' → logprob: -15.50976848602295
    9. ' (' → logprob: -15.88476848602295
    10. '   ' → logprob: -16.134767532348633

Token 705: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.025668667629361153
    2. ' +' → logprob: -3.7756686210632324
    3. '+p' → logprob: -6.025668621063232
    4. '+
' → logprob: -13.02566909790039
    5. '+i' → logprob: -14.02566909790039
    6. '*' → logprob: -14.77566909790039
    7. '*p' → logprob: -15.40066909790039
    8. '+n' → logprob: -16.15066909790039
    9. '+(' → logprob: -16.40066909790039
    10. '+c' → logprob: -16.65066909790039

Token 706: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0010348338400945067
    2. ' update' → logprob: -6.876034736633301
    3. '(update' → logprob: -13.5010347366333
    4. '   ' → logprob: -14.8760347366333
    5. '	update' → logprob: -15.2510347366333
    6. '.update' → logprob: -17.376035690307617
    7. ' ' → logprob: -18.001035690307617
    8. '`' → logprob: -18.501035690307617
    9. '  ' → logprob: -18.626035690307617
    10. '_update' → logprob: -18.751035690307617

Token 707: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.6978880763053894
    2. '(i' → logprob: -0.6978880763053894
    3. 'p' → logprob: -5.697887897491455
    4. '(' → logprob: -6.947887897491455
    5. '_q' → logprob: -8.697888374328613
    6. '_i' → logprob: -8.947888374328613
    7. ')' → logprob: -10.947888374328613
    8. ' (' → logprob: -10.947888374328613
    9. '```' → logprob: -10.947888374328613
    10. ')(' → logprob: -11.072888374328613

Token 708: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005953280488029122
    2. '(' → logprob: -7.5005950927734375
    3. ')' → logprob: -11.125595092773438
    4. ')(' → logprob: -11.250595092773438
    5. '(
' → logprob: -11.625595092773438
    6. 'i' → logprob: -12.750595092773438
    7. ' (' → logprob: -13.375595092773438
    8. ')i' → logprob: -15.000595092773438
    9. '(I' → logprob: -15.125595092773438
    10. ')(
' → logprob: -15.375595092773438

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003665871685370803
    2. '(i' → logprob: -5.878665924072266
    3. ',B' → logprob: -8.253665924072266
    4. ' ,' → logprob: -8.503665924072266
    5. '(' → logprob: -8.628665924072266
    6. ',i' → logprob: -8.753665924072266
    7. '+' → logprob: -10.503665924072266
    8. '   ' → logprob: -11.128665924072266
    9. '+,' → logprob: -12.503665924072266
    10. '```' → logprob: -13.253665924072266

Token 710: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021855919621884823
    2. ' B' → logprob: -6.127185821533203
    3. 'i' → logprob: -15.252185821533203
    4. 'W' → logprob: -16.252185821533203
    5. '	B' → logprob: -16.502185821533203
    6. '   ' → logprob: -17.377185821533203
    7. 'b' → logprob: -17.377185821533203
    8. ')' → logprob: -17.627185821533203
    9. ' ' → logprob: -17.627185821533203
    10. ' i' → logprob: -17.752185821533203

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.553032628493384e-05
    2. ' ,' → logprob: -9.750075340270996
    3. '-' → logprob: -12.000075340270996
    4. '   ' → logprob: -12.375075340270996
    5. '+' → logprob: -12.625075340270996
    6. ',i' → logprob: -13.750075340270996
    7. ',p' → logprob: -14.750075340270996
    8. '‌,' → logprob: -15.000075340270996
    9. '```' → logprob: -15.000075340270996
    10. ',
' → logprob: -15.625075340270996

Token 712: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.06235203519463539
    2. ' comb' → logprob: -2.812351942062378
    3. 'fact' → logprob: -8.687352180480957
    4. 'B' → logprob: -9.062352180480957
    5. 'com' → logprob: -9.562352180480957
    6. ' fact' → logprob: -11.312352180480957
    7. ' B' → logprob: -12.937352180480957
    8. '```' → logprob: -12.937352180480957
    9. 'combo' → logprob: -13.312352180480957
    10. 'b' → logprob: -13.312352180480957

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.500052452087402
    3. ',p' → logprob: -10.875052452087402
    4. ',f' → logprob: -13.375052452087402
    5. '   ' → logprob: -13.500052452087402
    6. ',i' → logprob: -14.250052452087402
    7. ',
' → logprob: -14.375052452087402
    8. '<|end|>' → logprob: -14.875052452087402
    9. '‌,' → logprob: -15.500052452087402
    10. 'p' → logprob: -15.750052452087402

Token 714: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0052373106591403484
    2. ' fact' → logprob: -5.255237102508545
    3. 'W' → logprob: -13.130237579345703
    4. 'factor' → logprob: -15.005237579345703
    5. ' W' → logprob: -15.380237579345703
    6. 'i' → logprob: -15.630237579345703
    7. 'facts' → logprob: -15.755237579345703
    8. 'f' → logprob: -16.005237579345703
    9. ' ' → logprob: -16.255237579345703
    10. '_fact' → logprob: -16.380237579345703

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001637300301808864
    2. ' ,' → logprob: -9.375164031982422
    3. ',
' → logprob: -10.625164031982422
    4. ',q' → logprob: -11.125164031982422
    5. ',p' → logprob: -11.375164031982422
    6. ',f' → logprob: -11.375164031982422
    7. '   ' → logprob: -11.750164031982422
    8. ',

' → logprob: -13.000164031982422
    9. '<|end|>' → logprob: -13.750164031982422
    10. ')' → logprob: -14.250164031982422

Token 716: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00033999193692579865
    2. ' fact' → logprob: -8.000340461730957
    3. 'factor' → logprob: -13.125340461730957
    4. 'i' → logprob: -14.000340461730957
    5. '   ' → logprob: -15.000340461730957
    6. 'B' → logprob: -15.250340461730957
    7. 'W' → logprob: -15.500340461730957
    8. '_fact' → logprob: -15.750340461730957
    9. ' ' → logprob: -16.00033950805664
    10. 'k' → logprob: -16.00033950805664

Token 717: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00263404194265604
    2. ',' → logprob: -6.127634048461914
    3. 'inv' → logprob: -7.877634048461914
    4. '   ' → logprob: -11.127634048461914
    5. ',i' → logprob: -11.127634048461914
    6. '_fact' → logprob: -11.252634048461914
    7. '_,' → logprob: -12.627634048461914
    8. 'fact' → logprob: -12.627634048461914
    9. ',p' → logprob: -12.877634048461914
    10. ',f' → logprob: -13.377634048461914

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.146429223008454e-05
    2. ' ,' → logprob: -9.75006103515625
    3. '   ' → logprob: -12.87506103515625
    4. ',
' → logprob: -14.75006103515625
    5. '```' → logprob: -17.25006103515625
    6. '       ' → logprob: -17.62506103515625
    7. ',

' → logprob: -17.87506103515625
    8. '  ' → logprob: -18.25006103515625
    9. ' ' → logprob: -18.37506103515625
    10. '‌,' → logprob: -19.00006103515625

Token 719: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019450569525361061
    2. ' MOD' → logprob: -6.2519450187683105
    3. 'W' → logprob: -11.376945495605469
    4. 'i' → logprob: -13.626945495605469
    5. 'two' → logprob: -14.126945495605469
    6. ' ' → logprob: -14.126945495605469
    7. '   ' → logprob: -14.376945495605469
    8. ' two' → logprob: -15.126945495605469
    9. '_MOD' → logprob: -15.376945495605469
    10. '0' → logprob: -15.501945495605469

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013417120499070734
    2. ' ,' → logprob: -9.250134468078613
    3. ',t' → logprob: -10.250134468078613
    4. ' two' → logprob: -14.000134468078613
    5. 'two' → logprob: -14.125134468078613
    6. '   ' → logprob: -14.250134468078613
    7. ',
' → logprob: -15.375134468078613
    8. '       ' → logprob: -16.750133514404297
    9. ',p' → logprob: -16.875133514404297
    10. ',i' → logprob: -17.625133514404297

Token 721: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.10020763427019119
    2. ' two' → logprob: -2.350207567214966
    3. '(two' → logprob: -14.225207328796387
    4. ')' → logprob: -16.475208282470703
    5. ' ' → logprob: -16.725208282470703
    6. '.two' → logprob: -16.975208282470703
    7. '```' → logprob: -17.100208282470703
    8. 'tw' → logprob: -17.600208282470703
    9. '   ' → logprob: -17.725208282470703
    10. '_two' → logprob: -18.975208282470703

Token 722: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00043567578541114926
    2. 'inv' → logprob: -7.750435829162598
    3. ',' → logprob: -14.125435829162598
    4. '```' → logprob: -14.250435829162598
    5. 'Inv' → logprob: -14.375435829162598
    6. '_i' → logprob: -14.500435829162598
    7. '[i' → logprob: -14.750435829162598
    8. '_in' → logprob: -14.750435829162598
    9. ')' → logprob: -15.500435829162598
    10. '_int' → logprob: -15.625435829162598

Token 723: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01422803197056055
    2. '))' → logprob: -4.264227867126465
    3. ' )' → logprob: -10.764227867126465
    4. '   ' → logprob: -10.764227867126465
    5. ')`' → logprob: -11.639227867126465
    6. ')))' → logprob: -13.014227867126465
    7. '       ' → logprob: -13.139227867126465
    8. ')}' → logprob: -13.389227867126465
    9. ')
' → logprob: -13.389227867126465
    10. ',' → logprob: -13.889227867126465

Token 724: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 725: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.804671233519912e-05
    2. '10' → logprob: -9.75008773803711
    3. ' MOD' → logprob: -10.62508773803711
    4. '_MOD' → logprob: -13.00008773803711
    5. ' ' → logprob: -14.12508773803711
    6. '.MOD' → logprob: -14.12508773803711
    7. '100' → logprob: -14.62508773803711
    8. 'MD' → logprob: -15.37508773803711
    9. '```' → logprob: -15.37508773803711
    10. 'Mod' → logprob: -15.62508773803711

Token 726: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6457114815711975
    2. '<|end|>' → logprob: -1.5207114219665527
    3. '   ' → logprob: -2.2707114219665527
    4. '
' → logprob: -2.7707114219665527
    5. '	q' → logprob: -3.7707114219665527
    6. '  
' → logprob: -4.520711421966553
    7. '\t' → logprob: -4.770711421966553
    8. '	' → logprob: -4.770711421966553
    9. '```' → logprob: -4.770711421966553
    10. '    
' → logprob: -4.770711421966553

Token 727: '       ' (ID: 309)
  Prédit: '	q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	q' → logprob: -0.002300131833180785
    2. '   ' → logprob: -7.127300262451172
    3. 'q' → logprob: -7.252300262451172
    4. '       ' → logprob: -8.377300262451172
    5. '```' → logprob: -8.752300262451172
    6. ' q' → logprob: -9.752300262451172
    7. '	' → logprob: -9.877300262451172
    8. '	Q' → logprob: -10.002300262451172
    9. '	w' → logprob: -10.127300262451172
    10. '	W' → logprob: -10.627300262451172

Token 728: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.08614269644021988
    2. ' q' → logprob: -2.9611427783966064
    3. '	q' → logprob: -4.086142539978027
    4. '       ' → logprob: -4.461142539978027
    5. '   ' → logprob: -6.336142539978027
    6. '```' → logprob: -8.586142539978027
    7. '    ' → logprob: -8.836142539978027
    8. '           ' → logprob: -9.586142539978027
    9. '	' → logprob: -9.711142539978027
    10. ' ' → logprob: -9.961142539978027

Token 729: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804241120815277
    2. ' =' → logprob: -3.2880423069000244
    3. '+=' → logprob: -14.288042068481445
    4. ' +=' → logprob: -15.038042068481445
    5. '＝' → logprob: -18.288042068481445
    6. '.=' → logprob: -18.288042068481445
    7. '   ' → logprob: -18.413042068481445
    8. '```' → logprob: -19.038042068481445
    9. '=
' → logprob: -19.163042068481445
    10. '<|end|>' → logprob: -19.288042068481445

Token 730: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.20146965980529785
    2. ' (' → logprob: -1.7014696598052979
    3. '(' → logprob: -10.326469421386719
    4. '(p' → logprob: -10.951469421386719
    5. '(Q' → logprob: -13.076469421386719
    6. '(update' → logprob: -13.826469421386719
    7. '   ' → logprob: -13.951469421386719
    8. '(query' → logprob: -14.576469421386719
    9. ' ' → logprob: -15.326469421386719
    10. '(ans' → logprob: -15.451469421386719

Token 731: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.20206758379936218
    2. '(q' → logprob: -1.7020676136016846
    3. ' q' → logprob: -7.8270673751831055
    4. ' (' → logprob: -8.327067375183105
    5. '(' → logprob: -12.452067375183105
    6. '   ' → logprob: -13.077067375183105
    7. '[q' → logprob: -13.452067375183105
    8. '0' → logprob: -13.827067375183105
    9. ''q' → logprob: -13.952067375183105
    10. '	q' → logprob: -13.952067375183105

Token 732: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5231997966766357
    2. '+' → logprob: -0.8981997966766357
    3. '=' → logprob: -10.773200035095215
    4. '(q' → logprob: -11.398200035095215
    5. ' (' → logprob: -11.523200035095215
    6. ' ' → logprob: -11.648200035095215
    7. '(' → logprob: -12.273200035095215
    8. ' q' → logprob: -12.273200035095215
    9. ' +=' → logprob: -12.773200035095215
    10. ' plus' → logprob: -13.273200035095215

Token 733: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.03805985301733017
    2. ' update' → logprob: -3.288059949874878
    3. '(update' → logprob: -10.913060188293457
    4. '   ' → logprob: -17.03805923461914
    5. '	update' → logprob: -17.28805923461914
    6. ' ' → logprob: -18.66305923461914
    7. '.update' → logprob: -18.78805923461914
    8. '  ' → logprob: -18.91305923461914
    9. '       ' → logprob: -19.28805923461914
    10. '(' → logprob: -19.41305923461914

Token 734: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.010776733979582787
    2. '(i' → logprob: -5.135776519775391
    3. '_p' → logprob: -6.010776519775391
    4. 'q' → logprob: -6.135776519775391
    5. '_i' → logprob: -8.88577651977539
    6. 'i' → logprob: -10.13577651977539
    7. '   ' → logprob: -11.26077651977539
    8. '_r' → logprob: -12.26077651977539
    9. '```' → logprob: -12.26077651977539
    10. '_' → logprob: -12.38577651977539

Token 735: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00019603055261541158
    2. 'i' → logprob: -8.75019645690918
    3. '(' → logprob: -10.25019645690918
    4. '```' → logprob: -14.00019645690918
    5. '(
' → logprob: -14.87519645690918
    6. ' (' → logprob: -15.12519645690918
    7. ' i' → logprob: -15.12519645690918
    8. ')' → logprob: -15.25019645690918
    9. ')i' → logprob: -16.25019645690918
    10. '   ' → logprob: -17.25019645690918

Token 736: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.034461796283721924
    2. ',' → logprob: -3.409461736679077
    3. '(' → logprob: -7.909461975097656
    4. 'i' → logprob: -8.659461975097656
    5. ',i' → logprob: -9.159461975097656
    6. ' (' → logprob: -9.409461975097656
    7. ' ,' → logprob: -10.284461975097656
    8. ')' → logprob: -11.034461975097656
    9. '```' → logprob: -11.284461975097656
    10. ')(' → logprob: -11.659461975097656

Token 737: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.006464059930294752
    2. ' W' → logprob: -5.256464004516602
    3. 'i' → logprob: -6.756464004516602
    4. 'B' → logprob: -10.756464004516602
    5. ' i' → logprob: -10.881464004516602
    6. '   ' → logprob: -10.881464004516602
    7. ' ' → logprob: -12.381464004516602
    8. '(i' → logprob: -13.881464004516602
    9. '  ' → logprob: -14.381464004516602
    10. '(W' → logprob: -14.381464004516602

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007304243044927716
    2. ',i' → logprob: -7.875730514526367
    3. ' ,' → logprob: -8.375730514526367
    4. '(i' → logprob: -9.125730514526367
    5. '   ' → logprob: -12.500730514526367
    6. ')' → logprob: -13.125730514526367
    7. '       ' → logprob: -13.125730514526367
    8. '```' → logprob: -14.000730514526367
    9. ' i' → logprob: -15.125730514526367
    10. ' ' → logprob: -15.375730514526367

Token 739: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2028321772813797
    2. ' comb' → logprob: -1.7028322219848633
    3. 'i' → logprob: -6.702832221984863
    4. ' i' → logprob: -8.702832221984863
    5. '   ' → logprob: -11.827832221984863
    6. '(com' → logprob: -11.952832221984863
    7. 'com' → logprob: -12.452832221984863
    8. ' ' → logprob: -13.202832221984863
    9. '```' → logprob: -14.577832221984863
    10. 'combo' → logprob: -14.702832221984863

Token 740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002481078845448792
    2. ',i' → logprob: -8.875247955322266
    3. ' ,' → logprob: -9.625247955322266
    4. '(i' → logprob: -10.125247955322266
    5. '       ' → logprob: -15.125247955322266
    6. ')' → logprob: -15.125247955322266
    7. '   ' → logprob: -15.125247955322266
    8. ',
' → logprob: -15.250247955322266
    9. '           ' → logprob: -15.750247955322266
    10. '```' → logprob: -15.875247955322266

Token 741: ' fact' (ID: 2840)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002507643774151802
    2. ' i' → logprob: -6.12750768661499
    3. 'B' → logprob: -8.127507209777832
    4. '(i' → logprob: -11.377507209777832
    5. 'W' → logprob: -11.877507209777832
    6. ' B' → logprob: -12.877507209777832
    7. 'fact' → logprob: -12.877507209777832
    8. ' ' → logprob: -13.877507209777832
    9. ')' → logprob: -14.127507209777832
    10. '   ' → logprob: -14.502507209777832

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013762809976469725
    2. ',f' → logprob: -9.000137329101562
    3. ' ,' → logprob: -11.875137329101562
    4. 'fact' → logprob: -13.125137329101562
    5. ',p' → logprob: -13.875137329101562
    6. '```' → logprob: -14.125137329101562
    7. '   ' → logprob: -14.250137329101562
    8. ',q' → logprob: -14.375137329101562
    9. ',
' → logprob: -14.875137329101562
    10. ')' → logprob: -15.625137329101562

Token 743: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0028915368020534515
    2. ' fact' → logprob: -5.877891540527344
    3. 'MOD' → logprob: -9.627891540527344
    4. 'comb' → logprob: -11.377891540527344
    5. ' MOD' → logprob: -12.752891540527344
    6. '   ' → logprob: -13.127891540527344
    7. ' ' → logprob: -13.877891540527344
    8. 'factor' → logprob: -13.877891540527344
    9. 'two' → logprob: -14.377891540527344
    10. 'facts' → logprob: -14.502891540527344

Token 744: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.006448080763220787
    2. 'inv' → logprob: -5.256448268890381
    3. ',' → logprob: -6.756448268890381
    4. '           ' → logprob: -11.381447792053223
    5. '   ' → logprob: -11.506447792053223
    6. 'Inv' → logprob: -13.006447792053223
    7. 'i' → logprob: -13.006447792053223
    8. '_INV' → logprob: -13.006447792053223
    9. '```' → logprob: -13.256447792053223
    10. ',i' → logprob: -13.381447792053223

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '```' → logprob: -15.750066757202148
    4. ',
' → logprob: -16.37506675720215
    5. '   ' → logprob: -16.50006675720215
    6. ')' → logprob: -16.75006675720215
    7. ',M' → logprob: -16.75006675720215
    8. ',t' → logprob: -17.00006675720215
    9. ',module' → logprob: -17.00006675720215
    10. 'MOD' → logprob: -17.50006675720215

Token 746: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011864188127219677
    2. ' MOD' → logprob: -6.751186370849609
    3. ' two' → logprob: -11.50118637084961
    4. 'two' → logprob: -12.25118637084961
    5. '_MOD' → logprob: -14.25118637084961
    6. ' ' → logprob: -14.87618637084961
    7. 'Mod' → logprob: -16.50118637084961
    8. '   ' → logprob: -17.12618637084961
    9. 'MO' → logprob: -17.62618637084961
    10. '
' → logprob: -18.12618637084961

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021605310030281544
    2. ' ,' → logprob: -8.500216484069824
    3. ',t' → logprob: -11.625216484069824
    4. '   ' → logprob: -13.875216484069824
    5. '       ' → logprob: -14.000216484069824
    6. ',
' → logprob: -14.375216484069824
    7. '))' → logprob: -15.125216484069824
    8. '```' → logprob: -15.250216484069824
    9. ',p' → logprob: -16.000215530395508
    10. ')' → logprob: -16.125215530395508

Token 748: ' two' (ID: 1920)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10158716142177582
    2. 'two' → logprob: -3.1015870571136475
    3. ' two' → logprob: -3.3515870571136475
    4. ' MOD' → logprob: -4.101587295532227
    5. ' ' → logprob: -10.476587295532227
    6. '_MOD' → logprob: -11.726587295532227
    7. 'Mod' → logprob: -12.976587295532227
    8. '   ' → logprob: -13.226587295532227
    9. 'mod' → logprob: -14.476587295532227
    10. '(two' → logprob: -14.726587295532227

Token 749: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0003951648832298815
    2. 'inv' → logprob: -7.87539529800415
    3. '_i' → logprob: -12.000394821166992
    4. ',' → logprob: -13.125394821166992
    5. '[' → logprob: -13.375394821166992
    6. '[i' → logprob: -13.625394821166992
    7. '_in' → logprob: -14.125394821166992
    8. ')' → logprob: -14.250394821166992
    9. '2' → logprob: -14.625394821166992
    10. '```' → logprob: -15.000394821166992

Token 750: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16028007864952087
    2. ')' → logprob: -1.9102801084518433
    3. '   ' → logprob: -10.160280227661133
    4. ')))' → logprob: -11.785280227661133
    5. ' ))' → logprob: -12.410280227661133
    6. '       ' → logprob: -13.410280227661133
    7. ' )' → logprob: -13.535280227661133
    8. ')
' → logprob: -14.410280227661133
    9. ')`' → logprob: -14.535280227661133
    10. ',' → logprob: -14.660280227661133

Token 751: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47410181164741516
    2. ' %' → logprob: -0.9741017818450928
    3. ')' → logprob: -11.349102020263672
    4. ')%' → logprob: -11.724102020263672
    5. ' ' → logprob: -13.724102020263672
    6. '```' → logprob: -14.224102020263672
    7. '()%' → logprob: -14.474102020263672
    8. '       ' → logprob: -14.849102020263672
    9. ' ' → logprob: -14.849102020263672
    10. ' %=' → logprob: -14.974102020263672

Token 752: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.054500666621607e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -16.375003814697266
    4. '.MOD' → logprob: -19.500003814697266
    5. 'MODE' → logprob: -20.375003814697266
    6. '
' → logprob: -20.625003814697266
    7. '(Mod' → logprob: -20.750003814697266
    8. '(M' → logprob: -21.000003814697266
    9. 'MO' → logprob: -21.000003814697266
    10. 'MD' → logprob: -21.000003814697266

Token 753: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 754: 'problem' (ID: 63922)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4743756949901581
    2. 'problem' → logprob: -0.9743757247924805
    3. '#' → logprob: -8.34937572479248
    4. '```' → logprob: -10.47437572479248
    5. ' if' → logprob: -10.97437572479248
    6. '(problem' → logprob: -11.97437572479248
    7. ' problem' → logprob: -12.84937572479248
    8. '\' → logprob: -13.22437572479248
    9. 'print' → logprob: -13.59937572479248
    10. 'for' → logprob: -13.72437572479248

Token 755: '_main' (ID: 23076)
  Prédit: '_main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_main' → logprob: -1.3306015716807451e-05
    2. '_Main' → logprob: -11.87501335144043
    3. '_' → logprob: -12.25001335144043
    4. '_MAIN' → logprob: -13.87501335144043
    5. ' _' → logprob: -15.62501335144043
    6. '```' → logprob: -15.75001335144043
    7. 'Main' → logprob: -16.37501335144043
    8. '__' → logprob: -17.12501335144043
    9. '._' → logprob: -17.37501335144043
    10. ')_' → logprob: -17.50001335144043

Token 756: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.468806654214859
    2. '<|end|>' → logprob: -1.3438066244125366
    3. '#' → logprob: -2.718806743621826
    4. '```' → logprob: -3.343806743621826
    5. '
' → logprob: -4.593806743621826
    6. '<|end|>' → logprob: -7.093806743621826
    7. '[' → logprob: -7.968806743621826
    8. ':' → logprob: -8.468806266784668
    9. '%' → logprob: -9.843806266784668
    10. '...' → logprob: -9.968806266784668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 754
Tokens correctement prédits (1ère position, stricte): 376
Tokens correctement prédits (1ère position, avec adaptation): 402
Tokens correctement prédits (top 10): 697
Précision stricte (1ère position): 49.87%
Précision adaptée (1ère position): 53.32%
Précision (top 10): 92.44%
================================================================================
