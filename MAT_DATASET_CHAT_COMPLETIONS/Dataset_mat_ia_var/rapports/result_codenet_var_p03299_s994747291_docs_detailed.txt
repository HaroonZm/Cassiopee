================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque, Counter
from heapq import heappush, heappop, heapify
import math
import bisect
import random
from itertools import permutations, accumulate, combinations, product
import sys
import string
from bisect import bisect_left, bisect_right
from math import factorial, ceil, floor
from operator import mul
from functools import reduce

# Augmente la limite de récursion pour les cas où la profondeur d'appel est très élevée
sys.setrecursionlimit(2147483647)

# Définition d'une valeur d'infini utilisée pour les grands entiers
INF = 10 ** 13

def LI():
    """
    Lit une ligne de l'entrée standard et la convertit en une liste d'entiers.
    
    Returns:
        list: Liste des entiers lus.
    """
    return list(map(int, sys.stdin.readline().split()))

def I():
    """
    Lit une ligne de l'entrée standard et la convertit en entier.
    
    Returns:
        int: Entier lu.
    """
    return int(sys.stdin.readline())

def LS():
    """
    Lit une ligne de l'entrée standard, la nettoie et la découpe en une liste de chaînes.
    
    Returns:
        list: Liste des chaînes lues.
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()

def S():
    """
    Lit une ligne de l'entrée standard et la retourne sous forme de chaîne.
    
    Returns:
        str: Chaîne lue.
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8')

def IR(n):
    """
    Lit n entiers (un par ligne) à partir de l'entrée standard.
    
    Args:
        n (int): Nombre de lignes à lire.

    Returns:
        list: Liste des entiers lus.
    """
    return [I() for i in range(n)]

def LIR(n):
    """
    Lit n lignes à partir de l'entrée standard.
    Chaque ligne est convertie en une liste d'entiers.
    
    Args:
        n (int): Nombre de lignes à lire.
    
    Returns:
        list: Liste de listes d'entiers.
    """
    return [LI() for i in range(n)]

def SR(n):
    """
    Lit n chaînes (une par ligne) à partir de l'entrée standard.
    
    Args:
        n (int): Nombre de lignes à lire.
    
    Returns:
        list: Liste de chaînes lues.
    """
    return [S() for i in range(n)]

def LSR(n):
    """
    Lit n lignes depuis l'entrée standard et les découpe en listes de chaînes.
    
    Args:
        n (int): Nombre de lignes à lire.
    
    Returns:
        list: Liste de listes de chaînes.
    """
    return [LS() for i in range(n)]

def SRL(n):
    """
    Lit n lignes à partir de l'entrée standard, convertit chaque ligne en une liste de caractères.
    
    Args:
        n (int): Nombre de lignes à lire.
    
    Returns:
        list: Liste de listes de caractères.
    """
    return [list(S()) for i in range(n)]

def MSRL(n):
    """
    Lit n lignes à partir de l'entrée standard, chaque ligne représentant des chiffres.
    Convertit chaque ligne en une liste d'entiers.
    
    Args:
        n (int): Nombre de lignes à lire.
    
    Returns:
        list: Liste de listes d'entiers.
    """
    return [[int(j) for j in list(S())] for i in range(n)]

# Modulo utilisé pour éviter les débordements numériques
mod = 10 ** 9 + 7

# Lecture du nombre d'éléments
n = I()    # Nombre d'éléments, lu depuis l'entrée

# Lecture des valeurs H, ajoute une valeur '1' à la fin
H = LI() + [1]   # Liste des hauteurs/valeurs, à laquelle on ajoute '1' à la fin pour la gestion en bordure

# Initialisation du tableau dp (programmation dynamique), tous les états à 1
dp = [1] * (n + 1)  # dp[i] correspond au nombre de façons d'atteindre l'état i à l'étape courante

# Boucle sur chaque étape k, modification dynamique du dp selon H
for k in range(n):
    # Crée une nouvelle liste pour les nouveaux états à cette étape
    new_dp = [0] * (n + 1)  # Mise à zéro avant mise à jour

    # Boucle sur chaque état possible à cette étape
    for i in range(n + 1):

        # Si la valeur courante H[i] est strictement supérieure à H[k]
        if H[i] > H[k]:
            # Double les façons j'atteins le nouvel état en partant de dp[k]
            new_dp[i] = dp[k] * 2

        # Si la valeur précédente est inférieure ou égale à H[i]
        elif H[k - 1] <= H[i]:
            # Prends le dp[i], multiplie par 2*2^{différence des hauteurs}, gestion modulaire
            new_dp[i] = dp[i] * 2 * pow(2, H[k] - H[i], mod)
        
        # Si la valeur précédente est strictement supérieure à la courante
        elif H[k - 1] > H[k]:
            # Mise à jour basée sur la différence du chemin précédent
            new_dp[i] = dp[i] - dp[k] + dp[k] * 2
        
        # Cas général restant pour gestion de transitions complexes
        else:
            new_dp[i] = (dp[i] - dp[k - 1] + dp[k - 1] * 2) * pow(2, H[k] - H[k - 1], mod)
        
        # Prend le reste modulaire pour éviter les débordements négatifs/positifs
        new_dp[i] %= mod

    # Transférer la référence du tableau nouvellement calculé
    dp = new_dp

# Affiche la valeur finale du dp au dernier état
print(dp[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007137189619243145
    2. '(
' → logprob: -5.632137298583984
    3. '\' → logprob: -7.132137298583984
    4. '\(' → logprob: -7.382137298583984
    5. '```' → logprob: -7.882137298583984
    6. 'newline' → logprob: -8.007137298583984
    7. '\n' → logprob: -8.382137298583984
    8. '[' → logprob: -8.507137298583984
    9. '
' → logprob: -9.132137298583984
    10. 'def' → logprob: -9.257137298583984

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.43963268399238586
    2. 'Counter' → logprob: -1.3146326541900635
    3. ' deque' → logprob: -3.1896326541900635
    4. 'deque' → logprob: -3.3146326541900635
    5. ' Ordered' → logprob: -5.064632892608643
    6. 'Ordered' → logprob: -5.939632892608643
    7. ' abc' → logprob: -8.439632415771484
    8. ' named' → logprob: -8.439632415771484
    9. 'named' → logprob: -9.064632415771484
    10. 'abc' → logprob: -9.689632415771484

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00587890250608325
    2. '(
' → logprob: -5.880878925323486
    3. '\n' → logprob: -7.005878925323486
    4. '\' → logprob: -7.130878925323486
    5. '
' → logprob: -8.130878448486328
    6. '\(' → logprob: -8.505878448486328
    7. '' → logprob: -8.755878448486328
    8. ',' → logprob: -8.880878448486328
    9. '

' → logprob: -9.005878448486328
    10. ' (' → logprob: -9.505878448486328

Token 7: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.6070810556411743
    2. 'Counter' → logprob: -1.1070810556411743
    3. ' Ordered' → logprob: -2.8570809364318848
    4. 'Ordered' → logprob: -2.9820809364318848
    5. ' named' → logprob: -4.482080936431885
    6. 'named' → logprob: -6.232080936431885
    7. ' Chain' → logprob: -6.357080936431885
    8. 'Chain' → logprob: -7.107080936431885
    9. ' defaultdict' → logprob: -7.732080936431885
    10. ' counter' → logprob: -9.982081413269043

Token 8: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9774131178855896
    2. '\n' → logprob: -1.8524131774902344
    3. '.' → logprob: -1.9774131774902344
    4. '(' → logprob: -1.9774131774902344
    5. '```' → logprob: -2.8524131774902344
    6. '<|end|>' → logprob: -3.3524131774902344
    7. ',' → logprob: -3.4774131774902344
    8. '
' → logprob: -3.8524131774902344
    9. 'import' → logprob: -4.602413177490234
    10. '' → logprob: -4.977413177490234

Token 9: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5832005739212036
    2. '\n' → logprob: -2.333200454711914
    3. '```' → logprob: -2.708200454711914
    4. '
' → logprob: -2.708200454711914
    5. '(
' → logprob: -3.083200454711914
    6. '\' → logprob: -3.083200454711914
    7. '.' → logprob: -3.333200454711914
    8. '' → logprob: -3.708200454711914
    9. ',' → logprob: -3.833200454711914
    10. '`' → logprob: -4.708200454711914

Token 10: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0849207192659378
    2. ' typing' → logprob: -2.709920644760132
    3. ' heap' → logprob: -4.584920883178711
    4. ' collections' → logprob: -6.709920883178711
    5. ' sys' → logprob: -7.084920883178711
    6. ' math' → logprob: -7.459920883178711
    7. ' functools' → logprob: -7.459920883178711
    8. ' queue' → logprob: -7.959920883178711
    9. 'typing' → logprob: -7.959920883178711
    10. ' os' → logprob: -8.334920883178711

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.125
    3. 'import' → logprob: -17.25
    4. ' queue' → logprob: -19.375
    5. 'space' → logprob: -19.875
    6. 'dict' → logprob: -20.25
    7. 's' → logprob: -20.375
    8. ' q' → logprob: -20.75
    9. 'ify' → logprob: -21.125
    10. 'i' → logprob: -21.375

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04867400601506233
    2. 'import' → logprob: -3.0486741065979004
    3. ' ' → logprob: -9.673673629760742
    4. '	import' → logprob: -11.423673629760742
    5. '_import' → logprob: -12.173673629760742
    6. '.import' → logprob: -13.173673629760742
    7. '.' → logprob: -14.048673629760742
    8. 'space' → logprob: -14.298673629760742
    9. ' space' → logprob: -14.548673629760742
    10. '-import' → logprob: -14.548673629760742

Token 13: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.12951558828353882
    2. 'he' → logprob: -2.1295156478881836
    3. 'heap' → logprob: -6.879515647888184
    4. ' n' → logprob: -7.504515647888184
    5. ' heap' → logprob: -7.754515647888184
    6. ' ' → logprob: -8.254515647888184
    7. 'import' → logprob: -9.004515647888184
    8. 'nl' → logprob: -9.754515647888184
    9. 'n' → logprob: -10.004515647888184
    10. ' import' → logprob: -10.254515647888184

Token 14: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006718452088534832
    2. 'ap' → logprob: -5.006718635559082
    3. 'a' → logprob: -12.881718635559082
    4. 'appen' → logprob: -15.881718635559082
    5. 'q' → logprob: -16.256717681884766
    6. 'aps' → logprob: -16.631717681884766
    7. 'aq' → logprob: -16.756717681884766
    8. 'ап' → logprob: -17.381717681884766
    9. '[' → logprob: -17.881717681884766
    10. 'apl' → logprob: -17.881717681884766

Token 15: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.008619066327810287
    2. 'op' → logprob: -4.7586188316345215
    3. 'us' → logprob: -12.50861930847168
    4. 'u' → logprob: -14.50861930847168
    5. 'o' → logprob: -15.50861930847168
    6. 'opleft' → logprob: -16.88361930847168
    7. '```' → logprob: -17.00861930847168
    8. 'osh' → logprob: -17.75861930847168
    9. '[' → logprob: -17.75861930847168
    10. 'ut' → logprob: -18.25861930847168

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48263558745384216
    2. 'he' → logprob: -1.2326356172561646
    3. ',' → logprob: -2.482635498046875
    4. '(heap' → logprob: -5.857635498046875
    5. ' he' → logprob: -7.107635498046875
    6. '(
' → logprob: -7.107635498046875
    7. ')' → logprob: -7.107635498046875
    8. ' ' → logprob: -7.857635498046875
    9. ' (' → logprob: -8.107635498046875
    10. '_he' → logprob: -8.232635498046875

Token 17: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.6326479911804199
    2. 'he' → logprob: -0.7576479911804199
    3. 'heap' → logprob: -10.632648468017578
    4. '.he' → logprob: -11.132648468017578
    5. ' ' → logprob: -12.507648468017578
    6. ' heap' → logprob: -13.382648468017578
    7. '```' → logprob: -13.507648468017578
    8. '_he' → logprob: -13.632648468017578
    9. 'h' → logprob: -14.882648468017578
    10. '-he' → logprob: -15.007648468017578

Token 18: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.7610454708337784e-05
    2. 'ap' → logprob: -10.500027656555176
    3. 'q' → logprob: -17.37502670288086
    4. 'appen' → logprob: -18.37502670288086
    5. 'a' → logprob: -19.00002670288086
    6. 'pp' → logprob: -19.50002670288086
    7. 'aph' → logprob: -20.00002670288086
    8. ' app' → logprob: -20.37502670288086
    9. 'APP' → logprob: -20.87502670288086
    10. 'apps' → logprob: -20.87502670288086

Token 19: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00179203599691391
    2. 'ush' → logprob: -6.376791954040527
    3. 'o' → logprob: -9.501791954040527
    4. 'p' → logprob: -11.376791954040527
    5. 'opp' → logprob: -13.626791954040527
    6. 'opleft' → logprob: -14.501791954040527
    7. 'app' → logprob: -14.626791954040527
    8. 'sh' → logprob: -15.376791954040527
    9. '   ' → logprob: -15.751791954040527
    10. '```' → logprob: -16.001792907714844

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24267667531967163
    2. 'def' → logprob: -2.9926767349243164
    3. '

' → logprob: -3.4926767349243164
    4. '(' → logprob: -3.7426767349243164
    5. '' → logprob: -3.7426767349243164
    6. '\' → logprob: -3.7426767349243164
    7. '(
' → logprob: -4.367676734924316
    8. '\n' → logprob: -4.367676734924316
    9. '
' → logprob: -4.867676734924316
    10. '```' → logprob: -4.992676734924316

Token 21: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4228290915489197
    2. 'heap' → logprob: -1.1728291511535645
    3. ' he' → logprob: -3.9228291511535645
    4. 'he' → logprob: -4.1728291511535645
    5. ' n' → logprob: -10.172828674316406
    6. '.heap' → logprob: -10.297828674316406
    7. 'n' → logprob: -11.172828674316406
    8. 'nl' → logprob: -11.672828674316406
    9. '```' → logprob: -11.797828674316406
    10. '(heap' → logprob: -11.797828674316406

Token 22: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.07809098809957504
    2. 'q' → logprob: -2.7030909061431885
    3. 'replace' → logprob: -5.578091144561768
    4. 's' → logprob: -6.203091144561768
    5. '[' → logprob: -7.828091144561768
    6. 'lify' → logprob: -8.07809066772461
    7. 'push' → logprob: -8.20309066772461
    8. 'sort' → logprob: -8.45309066772461
    9. 'queue' → logprob: -8.57809066772461
    10. '=' → logprob: -8.95309066772461

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.427884578704834
    2. '

' → logprob: -1.677884578704834
    3. '' → logprob: -3.302884578704834
    4. 'def' → logprob: -3.927884578704834
    5. '(' → logprob: -4.177884578704834
    6. '\n' → logprob: -4.177884578704834
    7. '\' → logprob: -4.302884578704834
    8. '#' → logprob: -4.427884578704834
    9. '(
' → logprob: -4.427884578704834
    10. '```' → logprob: -4.802884578704834

Token 24: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.670745849609375
    2. 'def' → logprob: -1.045745849609375
    3. 'd' → logprob: -3.170745849609375
    4. '\' → logprob: -3.545745849609375
    5. '' → logprob: -3.920745849609375
    6. '

' → logprob: -4.295745849609375
    7. '```' → logprob: -4.420745849609375
    8. 'class' → logprob: -5.920745849609375
    9. 'import' → logprob: -5.920745849609375
    10. '#' → logprob: -6.045745849609375

Token 25: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.0210304260253906
    2. ' ' → logprob: -1.1460304260253906
    3. ' math' → logprob: -1.8960304260253906
    4. ' itertools' → logprob: -2.1460304260253906
    5. ' collections' → logprob: -3.2710304260253906
    6. ' sys' → logprob: -5.271030426025391
    7. ' re' → logprob: -5.646030426025391
    8. ' random' → logprob: -6.521030426025391
    9. ' space' → logprob: -6.521030426025391
    10. ' ' → logprob: -6.646030426025391

Token 26: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7924861907958984
    2. '
' → logprob: -0.9174861907958984
    3. 'def' → logprob: -2.9174861907958984
    4. 'd' → logprob: -3.5424861907958984
    5. '

' → logprob: -3.7924861907958984
    6. '\n' → logprob: -4.042486190795898
    7. '```' → logprob: -5.167486190795898
    8. '' → logprob: -5.292486190795898
    9. 'n' → logprob: -5.417486190795898
    10. '#' → logprob: -5.542486190795898

Token 27: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2730896472930908
    2. 'def' → logprob: -1.2730896472930908
    3. '\' → logprob: -1.3980896472930908
    4. 'd' → logprob: -2.023089647293091
    5. '' → logprob: -4.148089408874512
    6. '```' → logprob: -4.398089408874512
    7. '

' → logprob: -4.523089408874512
    8. '\n' → logprob: -5.023089408874512
    9. '#' → logprob: -5.648089408874512
    10. 'n' → logprob: -5.898089408874512

Token 28: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10679258406162262
    2. ' itertools' → logprob: -2.606792688369751
    3. ' os' → logprob: -4.481792449951172
    4. ' random' → logprob: -4.856792449951172
    5. ' collections' → logprob: -6.231792449951172
    6. ' ' → logprob: -6.231792449951172
    7. ' functools' → logprob: -6.606792449951172
    8. ' ' → logprob: -6.856792449951172
    9. ' operator' → logprob: -7.106792449951172
    10. ' bis' → logprob: -7.731792449951172

Token 29: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.006755155511200428
    2. 't' → logprob: -5.006755352020264
    3. 'e' → logprob: -10.256754875183105
    4. 'ected' → logprob: -13.256754875183105
    5. 'ec' → logprob: -13.256754875183105
    6. 'ectl' → logprob: -15.131754875183105
    7. 'ection' → logprob: -15.381754875183105
    8. '>' → logprob: -15.506754875183105
    9. '```' → logprob: -15.881754875183105
    10. 'et' → logprob: -17.006755828857422

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3951509892940521
    2. '

' → logprob: -1.6451510190963745
    3. 'def' → logprob: -3.020150899887085
    4. '\' → logprob: -3.645150899887085
    5. '' → logprob: -4.270151138305664
    6. '\n' → logprob: -4.395151138305664
    7. '#' → logprob: -4.645151138305664
    8. '```' → logprob: -5.270151138305664
    9. '.' → logprob: -5.645151138305664
    10. ' 

' → logprob: -5.770151138305664

Token 31: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5448319315910339
    2. '

' → logprob: -1.1698319911956787
    3. 'def' → logprob: -2.7948319911956787
    4. '' → logprob: -4.1698317527771
    5. '#' → logprob: -4.6698317527771
    6. '\' → logprob: -5.1698317527771
    7. 'd' → logprob: -5.4198317527771
    8. '```' → logprob: -5.5448317527771
    9. '\n' → logprob: -5.9198317527771
    10. 'class' → logprob: -6.2948317527771

Token 32: ' random' (ID: 7526)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5451695919036865
    2. ' itertools' → logprob: -0.9201695919036865
    3. ' random' → logprob: -4.420169830322266
    4. 'sys' → logprob: -5.795169830322266
    5. ' heap' → logprob: -6.170169830322266
    6. 'random' → logprob: -6.420169830322266
    7. ' functools' → logprob: -6.920169830322266
    8. ' collections' → logprob: -7.545169830322266
    9. ' os' → logprob: -8.170169830322266
    10. 'it' → logprob: -8.670169830322266

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30726292729377747
    2. '

' → logprob: -2.182262897491455
    3. '\' → logprob: -2.682262897491455
    4. '\n' → logprob: -3.807262897491455
    5. '' → logprob: -3.932262897491455
    6. '#' → logprob: -4.057262897491455
    7. 'def' → logprob: -4.932262897491455
    8. '```' → logprob: -5.307262897491455
    9. 'n' → logprob: -6.182262897491455
    10. 'd' → logprob: -6.182262897491455

Token 34: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7485268712043762
    2. '#' → logprob: -1.2485268115997314
    3. '\' → logprob: -1.9985268115997314
    4. 'def' → logprob: -3.3735268115997314
    5. '
' → logprob: -3.9985268115997314
    6. '' → logprob: -3.9985268115997314
    7. '\n' → logprob: -4.2485270500183105
    8. '```' → logprob: -4.7485270500183105
    9. '`' → logprob: -5.1235270500183105
    10. '

' → logprob: -6.9985270500183105

Token 35: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.12142243981361389
    2. ' collections' → logprob: -2.746422529220581
    3. ' typing' → logprob: -3.871422529220581
    4. ' ' → logprob: -4.246422290802002
    5. ' functools' → logprob: -5.121422290802002
    6. ' statistics' → logprob: -5.996422290802002
    7. ' sys' → logprob: -6.121422290802002
    8. ' datetime' → logprob: -6.121422290802002
    9. ' copy' → logprob: -7.121422290802002
    10. 'collections' → logprob: -7.996422290802002

Token 36: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08214323222637177
    2. '.' → logprob: -2.7071433067321777
    3. 'import' → logprob: -4.707143306732178
    4. ' ' → logprob: -6.457143306732178
    5. ' .' → logprob: -6.832143306732178
    6. '<|end|>' → logprob: -8.83214282989502
    7. '.import' → logprob: -9.20714282989502
    8. '	import' → logprob: -9.58214282989502
    9. '.im' → logprob: -10.08214282989502
    10. ' itertools' → logprob: -10.58214282989502

Token 37: ' permutations' (ID: 174595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6479471325874329
    2. ' permutations' → logprob: -2.397947072982788
    3. ' accumulate' → logprob: -2.397947072982788
    4. ' chain' → logprob: -2.522947072982788
    5. ' combinations' → logprob: -2.772947072982788
    6. 'com' → logprob: -3.147947072982788
    7. ' product' → logprob: -3.397947072982788
    8. ' group' → logprob: -3.522947072982788
    9. ' cycle' → logprob: -3.647947072982788
    10. ' count' → logprob: -4.522947311401367

Token 38: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0182815790176392
    2. 'def' → logprob: -1.6432815790176392
    3. '\n' → logprob: -1.8932815790176392
    4. '\' → logprob: -2.7682814598083496
    5. '

' → logprob: -2.8932814598083496
    6. '<|end|>' → logprob: -3.0182814598083496
    7. 'n' → logprob: -3.6432814598083496
    8. ',' → logprob: -3.8932814598083496
    9. '#' → logprob: -4.01828145980835
    10. '' → logprob: -4.26828145980835

Token 39: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.12254539132118225
    2. ' combinations' → logprob: -2.4975454807281494
    3. 'product' → logprob: -3.8725454807281494
    4. ' product' → logprob: -4.49754524230957
    5. '	com' → logprob: -7.74754524230957
    6. 'chain' → logprob: -8.49754524230957
    7. ' chain' → logprob: -9.24754524230957
    8. ' group' → logprob: -9.87254524230957
    9. 'group' → logprob: -9.87254524230957
    10. ' accumulate' → logprob: -10.12254524230957

Token 40: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.545056939125061
    2. 'def' → logprob: -2.1700568199157715
    3. '

' → logprob: -2.4200568199157715
    4. '\n' → logprob: -2.4200568199157715
    5. '#' → logprob: -3.5450568199157715
    6. '\' → logprob: -3.6700568199157715
    7. '' → logprob: -3.7950568199157715
    8. 'import' → logprob: -4.2950568199157715
    9. 'n' → logprob: -4.4200568199157715
    10. ',' → logprob: -4.9200568199157715

Token 41: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7862058877944946
    2. 'product' → logprob: -0.7862058877944946
    3. 'group' → logprob: -3.036205768585205
    4. ' product' → logprob: -3.661205768585205
    5. 'chain' → logprob: -5.286205768585205
    6. ' group' → logprob: -5.411205768585205
    7. 'cycle' → logprob: -5.911205768585205
    8. ' combinations' → logprob: -6.286205768585205
    9. ' chain' → logprob: -7.661205768585205
    10. 'compress' → logprob: -9.036206245422363

Token 42: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9100289344787598
    2. ',' → logprob: -1.1600289344787598
    3. '\n' → logprob: -2.5350289344787598
    4. '<|end|>' → logprob: -2.9100289344787598
    5. '#' → logprob: -3.2850289344787598
    6. '

' → logprob: -3.6600289344787598
    7. '\' → logprob: -4.28502893447876
    8. 'import' → logprob: -4.41002893447876
    9. '' → logprob: -4.66002893447876
    10. 'def' → logprob: -4.78502893447876

Token 43: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.3069995045661926
    2. 'product' → logprob: -1.4319994449615479
    3. ' group' → logprob: -4.431999683380127
    4. 'com' → logprob: -5.181999683380127
    5. 'group' → logprob: -5.681999683380127
    6. ' chain' → logprob: -5.681999683380127
    7. 'chain' → logprob: -7.806999683380127
    8. 'cycle' → logprob: -8.431999206542969
    9. ' combinations' → logprob: -8.556999206542969
    10. ' cycle' → logprob: -8.681999206542969

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3420764207839966
    2. '

' → logprob: -2.092076301574707
    3. '\n' → logprob: -2.217076301574707
    4. '\' → logprob: -3.967076301574707
    5. '<|end|>' → logprob: -4.842076301574707
    6. '#' → logprob: -4.967076301574707
    7. '' → logprob: -5.092076301574707
    8. 'def' → logprob: -5.842076301574707
    9. 'n' → logprob: -6.217076301574707
    10. ',' → logprob: -6.217076301574707

Token 45: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2966211438179016
    2. 'def' → logprob: -2.296621084213257
    3. '
' → logprob: -2.421621084213257
    4. '#' → logprob: -3.171621084213257
    5. '\' → logprob: -4.671621322631836
    6. '\n' → logprob: -5.296621322631836
    7. '' → logprob: -5.546621322631836
    8. '

' → logprob: -6.296621322631836
    9. '```' → logprob: -6.796621322631836
    10. 'n' → logprob: -6.796621322631836

Token 46: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05043764039874077
    2. 'sys' → logprob: -3.3004376888275146
    3. ' os' → logprob: -4.9254374504089355
    4. ' functools' → logprob: -6.0504374504089355
    5. ' operator' → logprob: -6.3004374504089355
    6. 'operator' → logprob: -8.175437927246094
    7. ' re' → logprob: -8.425437927246094
    8. 'os' → logprob: -8.550437927246094
    9. 're' → logprob: -9.675437927246094
    10. ' numpy' → logprob: -10.300437927246094

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4094275236129761
    2. '

' → logprob: -1.159427523612976
    3. '\n' → logprob: -4.034427642822266
    4. '\' → logprob: -6.409427642822266
    5. '' → logprob: -6.659427642822266
    6. '
' → logprob: -7.784427642822266
    7. 'def' → logprob: -7.784427642822266
    8. 'import' → logprob: -8.409427642822266
    9. '```' → logprob: -8.409427642822266
    10. '


' → logprob: -9.659427642822266

Token 48: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.564574658870697
    2. '\n' → logprob: -1.1895747184753418
    3. '

' → logprob: -2.314574718475342
    4. 'def' → logprob: -4.189574718475342
    5. 'import' → logprob: -5.564574718475342
    6. 'sys' → logprob: -5.939574718475342
    7. '\' → logprob: -6.314574718475342
    8. '```' → logprob: -6.814574718475342
    9. '' → logprob: -7.064574718475342
    10. '
' → logprob: -7.564574718475342

Token 49: ' string' (ID: 1621)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0009433844243176281
    2. ' io' → logprob: -7.750943183898926
    3. ' threading' → logprob: -7.750943183898926
    4. 'os' → logprob: -10.125943183898926
    5. ' functools' → logprob: -11.000943183898926
    6. ' operator' → logprob: -11.250943183898926
    7. ' time' → logprob: -12.750943183898926
    8. '"os' → logprob: -12.875943183898926
    9. '	os' → logprob: -13.250943183898926
    10. '_os' → logprob: -13.750943183898926

Token 50: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3516378700733185
    2. '
' → logprob: -1.226637840270996
    3. '\n' → logprob: -6.226637840270996
    4. '<|end|>' → logprob: -8.351637840270996
    5. '' → logprob: -8.601637840270996
    6. '


' → logprob: -8.851637840270996
    7. '\' → logprob: -8.851637840270996
    8. '
' → logprob: -9.101637840270996
    9. '```' → logprob: -9.226637840270996
    10. '#' → logprob: -9.351637840270996

Token 51: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.19448336958885193
    2. '
' → logprob: -1.9444833993911743
    3. '\n' → logprob: -3.5694832801818848
    4. '' → logprob: -6.569483280181885
    5. 'def' → logprob: -7.194483280181885
    6. '```' → logprob: -7.194483280181885
    7. '
' → logprob: -7.944483280181885
    8. '#' → logprob: -8.069483757019043
    9. 'class' → logprob: -8.319483757019043
    10. 'import' → logprob: -8.319483757019043

Token 52: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5981594920158386
    2. ' typing' → logprob: -1.7231595516204834
    3. ' functools' → logprob: -2.7231595516204834
    4. ' io' → logprob: -2.8481595516204834
    5. ' math' → logprob: -2.8481595516204834
    6. ' os' → logprob: -3.0981595516204834
    7. ' operator' → logprob: -4.598159313201904
    8. 'collections' → logprob: -4.598159313201904
    9. ' itertools' → logprob: -4.723159313201904
    10. 'os' → logprob: -5.973159313201904

Token 53: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.129266067640856e-05
    2. 'ct' → logprob: -11.500020980834961
    3. 'ects' → logprob: -12.125020980834961
    4. 'sect' → logprob: -13.500020980834961
    5. 'ec' → logprob: -13.625020980834961
    6. 'ected' → logprob: -14.500020980834961
    7. 'ext' → logprob: -14.625020980834961
    8. 'e' → logprob: -14.750020980834961
    9. 'ort' → logprob: -15.000020980834961
    10. 'ict' → logprob: -15.250020980834961

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18147382140159607
    2. 'import' → logprob: -1.9314738512039185
    3. '.' → logprob: -4.056473731994629
    4. '_' → logprob: -6.181473731994629
    5. '_import' → logprob: -7.556473731994629
    6. ' ' → logprob: -7.681473731994629
    7. '<|end|>' → logprob: -8.431473731994629
    8. ' .' → logprob: -8.556473731994629
    9. '.import' → logprob: -8.931473731994629
    10. '	import' → logprob: -10.306473731994629

Token 55: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.592405378818512
    2. 'bis' → logprob: -0.842405378818512
    3. 'ins' → logprob: -4.342405319213867
    4. ' ins' → logprob: -5.717405319213867
    5. ' ' → logprob: -10.967405319213867
    6. '_ins' → logprob: -11.592405319213867
    7. '```' → logprob: -12.967405319213867
    8. '	b' → logprob: -13.092405319213867
    9. 'bl' → logprob: -13.217405319213867
    10. 'b' → logprob: -13.842405319213867

Token 56: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.2723104848410003e-05
    2. 'e' → logprob: -10.875022888183594
    3. 'ectl' → logprob: -13.625022888183594
    4. 'ected' → logprob: -14.000022888183594
    5. 'ec' → logprob: -14.750022888183594
    6. 'ecta' → logprob: -15.000022888183594
    7. 'ects' → logprob: -15.125022888183594
    8. 'sect' → logprob: -15.500022888183594
    9. 'ection' → logprob: -15.875022888183594
    10. '```' → logprob: -16.125022888183594

Token 57: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.294941782951355
    2. '_' → logprob: -1.544941782951355
    3. '_right' → logprob: -3.1699419021606445
    4. '_

' → logprob: -10.419941902160645
    5. '_LEFT' → logprob: -11.169941902160645
    6. '_ins' → logprob: -11.419941902160645
    7. '_RIGHT' → logprob: -12.419941902160645
    8. '_Left' → logprob: -12.419941902160645
    9. 'left' → logprob: -12.669941902160645
    10. 'Left' → logprob: -12.669941902160645

Token 58: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13732926547527313
    2. '

' → logprob: -2.137329339981079
    3. ',' → logprob: -5.8873291015625
    4. '\n' → logprob: -6.1373291015625
    5. '' → logprob: -6.3873291015625
    6. 'def' → logprob: -7.2623291015625
    7. '
' → logprob: -7.3873291015625
    8. '


' → logprob: -7.5123291015625
    9. '\' → logprob: -8.1373291015625
    10. '<|end|>' → logprob: -8.2623291015625

Token 59: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6326563358306885
    2. ' bis' → logprob: -0.7576563358306885
    3. 'b' → logprob: -10.63265609741211
    4. 'ins' → logprob: -10.75765609741211
    5. '```' → logprob: -12.25765609741211
    6. '	b' → logprob: -13.13265609741211
    7. ' ins' → logprob: -13.50765609741211
    8. ' ' → logprob: -14.25765609741211
    9. 'bs' → logprob: -15.07015609741211
    10. 'ber' → logprob: -15.32015609741211

Token 60: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.0028998551424592733
    2. 'ect' → logprob: -6.502899646759033
    3. 's' → logprob: -7.002899646759033
    4. '```' → logprob: -8.752900123596191
    5. 'ser' → logprob: -10.127900123596191
    6. 'ct' → logprob: -10.252900123596191
    7. 'n' → logprob: -10.377900123596191
    8. 'с' → logprob: -10.502900123596191
    9. 'section' → logprob: -10.627900123596191
    10. '<' → logprob: -11.002900123596191

Token 61: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0007603150443173945
    2. '_' → logprob: -7.875760078430176
    3. 'ight' → logprob: -8.375760078430176
    4. 'right' → logprob: -9.250760078430176
    5. '_r' → logprob: -11.250760078430176
    6. 'ght' → logprob: -11.375760078430176
    7. '<|end|>' → logprob: -11.375760078430176
    8. '_RIGHT' → logprob: -12.250760078430176
    9. '_Right' → logprob: -12.875760078430176
    10. 'Right' → logprob: -13.500760078430176

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3165074288845062
    2. '

' → logprob: -1.3165074586868286
    3. '
' → logprob: -6.816507339477539
    4. '' → logprob: -7.691507339477539
    5. 'def' → logprob: -7.691507339477539
    6. '\n' → logprob: -7.941507339477539
    7. '


' → logprob: -8.191507339477539
    8. '#' → logprob: -9.066507339477539
    9. '```' → logprob: -9.566507339477539
    10. 'n' → logprob: -9.691507339477539

Token 63: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18314185738563538
    2. '

' → logprob: -2.0581419467926025
    3. 'd' → logprob: -3.9331419467926025
    4. 'def' → logprob: -4.808141708374023
    5. '' → logprob: -5.058141708374023
    6. '#' → logprob: -6.308141708374023
    7. '```' → logprob: -7.058141708374023
    8. '\n' → logprob: -7.558141708374023
    9. '\' → logprob: -7.683141708374023
    10. '
' → logprob: -7.683141708374023

Token 64: ' math' (ID: 13324)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.6204262971878052
    2. ' functools' → logprob: -2.2454261779785156
    3. ' collections' → logprob: -2.8704261779785156
    4. ' typing' → logprob: -2.9954261779785156
    5. 'os' → logprob: -3.1204261779785156
    6. 'math' → logprob: -3.1204261779785156
    7. 'operator' → logprob: -3.2454261779785156
    8. 'typing' → logprob: -3.4954261779785156
    9. 'io' → logprob: -3.7454261779785156
    10. ' operator' → logprob: -4.120426177978516

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0774177759885788
    2. 'import' → logprob: -3.0774178504943848
    3. ' ' → logprob: -3.8274178504943848
    4. '<|end|>' → logprob: -5.327417850494385
    5. '.' → logprob: -7.202417850494385
    6. '_' → logprob: -8.077417373657227
    7. '<|end|>' → logprob: -8.452417373657227
    8. '_import' → logprob: -8.702417373657227
    9. '	import' → logprob: -9.077417373657227
    10. '```' → logprob: -9.452417373657227

Token 66: ' factorial' (ID: 111204)
  Prédit: ' inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inf' → logprob: -1.0124245882034302
    2. ' ceil' → logprob: -1.7624245882034302
    3. ' gcd' → logprob: -1.8874245882034302
    4. ' sqrt' → logprob: -2.0124244689941406
    5. 'sqrt' → logprob: -2.5124244689941406
    6. 'ceil' → logprob: -2.8874244689941406
    7. ' factorial' → logprob: -3.8874244689941406
    8. 'inf' → logprob: -4.887424468994141
    9. ' comb' → logprob: -5.262424468994141
    10. 'log' → logprob: -6.387424468994141

Token 67: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6400850415229797
    2. '
' → logprob: -0.7650850415229797
    3. 'def' → logprob: -5.640085220336914
    4. '' → logprob: -7.015085220336914
    5. '


' → logprob: -7.140085220336914
    6. '
' → logprob: -7.390085220336914
    7. '\n' → logprob: -7.890085220336914
    8. '#' → logprob: -8.890085220336914
    9. ' 

' → logprob: -8.890085220336914
    10. '\' → logprob: -8.890085220336914

Token 68: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.30793920159339905
    2. 'ceil' → logprob: -2.432939291000366
    3. 'g' → logprob: -2.682939291000366
    4. 'log' → logprob: -3.307939291000366
    5. 'comb' → logprob: -3.307939291000366
    6. 'is' → logprob: -4.057939052581787
    7. 'pow' → logprob: -5.557939052581787
    8. ' comb' → logprob: -5.932939052581787
    9. 'inf' → logprob: -6.057939052581787
    10. '```' → logprob: -6.057939052581787

Token 69: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6151549220085144
    2. '
' → logprob: -0.8651549220085144
    3. ',' → logprob: -3.990154981613159
    4. 'def' → logprob: -4.49015474319458
    5. ',
' → logprob: -6.36515474319458
    6. '<|end|>' → logprob: -6.61515474319458
    7. '


' → logprob: -6.74015474319458
    8. '\n' → logprob: -7.36515474319458
    9. ',

' → logprob: -7.36515474319458
    10. '
' → logprob: -7.49015474319458

Token 70: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.1567162126302719
    2. ' floor' → logprob: -2.1567161083221436
    3. 'sqrt' → logprob: -3.9067161083221436
    4. 'log' → logprob: -5.156716346740723
    5. ' sqrt' → logprob: -6.531716346740723
    6. 'inf' → logprob: -6.656716346740723
    7. 'fabs' → logprob: -8.531716346740723
    8. ' inf' → logprob: -8.781716346740723
    9. ' log' → logprob: -9.281716346740723
    10. 'pow' → logprob: -9.406716346740723

Token 71: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2540423274040222
    2. '
' → logprob: -1.504042387008667
    3. 'def' → logprob: -6.879042148590088
    4. '


' → logprob: -7.879042148590088
    5. '
' → logprob: -8.754042625427246
    6. '#' → logprob: -9.129042625427246
    7. '\n' → logprob: -9.254042625427246
    8. '' → logprob: -9.379042625427246
    9. '```' → logprob: -10.504042625427246
    10. 'import' → logprob: -10.629042625427246

Token 72: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24825604259967804
    2. '

' → logprob: -1.8732560873031616
    3. 'def' → logprob: -3.123255968093872
    4. '\n' → logprob: -4.998256206512451
    5. 'import' → logprob: -5.248256206512451
    6. '
' → logprob: -6.248256206512451
    7. 'class' → logprob: -6.623256206512451
    8. '#' → logprob: -6.748256206512451
    9. '\' → logprob: -6.998256206512451
    10. 'n' → logprob: -7.373256206512451

Token 73: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5753716230392456
    2. ' fractions' → logprob: -1.8253716230392456
    3. ' functools' → logprob: -2.575371742248535
    4. ' decimal' → logprob: -2.700371742248535
    5. ' statistics' → logprob: -2.825371742248535
    6. ' typing' → logprob: -3.450371742248535
    7. 'operator' → logprob: -4.575371742248535
    8. ' os' → logprob: -4.950371742248535
    9. ' collections' → logprob: -5.200371742248535
    10. ' itertools' → logprob: -5.825371742248535

Token 74: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015808522701263428
    2. 'import' → logprob: -4.265808582305908
    3. '<|end|>' → logprob: -6.515808582305908
    4. ' ' → logprob: -9.39080810546875
    5. '	import' → logprob: -10.14080810546875
    6. '<|end|>' → logprob: -11.64080810546875
    7. ' as' → logprob: -11.89080810546875
    8. '_import' → logprob: -12.14080810546875
    9. '.' → logprob: -12.14080810546875
    10. ',' → logprob: -12.51580810546875

Token 75: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.10290894657373428
    2. 'item' → logprob: -2.3529088497161865
    3. ' mul' → logprob: -6.977909088134766
    4. ' attr' → logprob: -7.727909088134766
    5. ' ' → logprob: -8.102909088134766
    6. 'mul' → logprob: -8.602909088134766
    7. '	item' → logprob: -8.727909088134766
    8. 'getitem' → logprob: -8.977909088134766
    9. 'attr' → logprob: -9.102909088134766
    10. ' method' → logprob: -9.352909088134766

Token 76: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03970367833971977
    2. ',
' → logprob: -3.414703607559204
    3. 'import' → logprob: -6.289703845977783
    4. '\' → logprob: -7.164703845977783
    5. ' ,' → logprob: -7.289703845977783
    6. '
' → logprob: -7.414703845977783
    7. '\n' → logprob: -7.789703845977783
    8. '<|end|>' → logprob: -7.789703845977783
    9. 'from' → logprob: -8.164703369140625
    10. '' → logprob: -8.289703369140625

Token 77: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5840358734130859
    2. '_' → logprob: -1.709035873413086
    3. 'def' → logprob: -1.709035873413086
    4. '
' → logprob: -3.834035873413086
    5. '\' → logprob: -4.584035873413086
    6. ',
' → logprob: -4.709035873413086
    7. '\n' → logprob: -5.209035873413086
    8. '#' → logprob: -5.334035873413086
    9. 'import' → logprob: -5.459035873413086
    10. '<|end|>' → logprob: -5.459035873413086

Token 78: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.14394007623195648
    2. 'fun' → logprob: -2.018939971923828
    3. ' itertools' → logprob: -7.518939971923828
    4. '_fun' → logprob: -8.143939971923828
    5. '_' → logprob: -8.893939971923828
    6. 'operator' → logprob: -9.018939971923828
    7. 'it' → logprob: -10.518939971923828
    8. 'os' → logprob: -10.768939971923828
    9. 'math' → logprob: -11.143939971923828
    10. '```' → logprob: -11.268939971923828

Token 79: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08607422560453415
    2. 'import' → logprob: -2.711074113845825
    3. '_' → logprob: -4.711074352264404
    4. '_import' → logprob: -5.586074352264404
    5. '.' → logprob: -6.711074352264404
    6. ' ' → logprob: -6.836074352264404
    7. '<|end|>' → logprob: -7.461074352264404
    8. ' _' → logprob: -8.836073875427246
    9. '	import' → logprob: -9.836073875427246
    10. '<|end|>' → logprob: -10.211073875427246

Token 80: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.10945383459329605
    2. 'reduce' → logprob: -2.3594539165496826
    3. ' l' → logprob: -4.7344536781311035
    4. ' partial' → logprob: -8.859454154968262
    5. 'l' → logprob: -8.984454154968262
    6. ' wraps' → logprob: -10.359454154968262
    7. ' cache' → logprob: -10.484454154968262
    8. 'partial' → logprob: -10.609454154968262
    9. '_reduce' → logprob: -11.109454154968262
    10. ' cmp' → logprob: -11.734454154968262

Token 81: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5889251232147217
    2. '

' → logprob: -0.8389251232147217
    3. 'def' → logprob: -4.463925361633301
    4. '
' → logprob: -7.838925361633301
    5. '\n' → logprob: -8.7139253616333
    6. 'import' → logprob: -8.8389253616333
    7. '


' → logprob: -8.9639253616333
    8. '#' → logprob: -9.2139253616333
    9. 'class' → logprob: -9.4639253616333
    10. 'n' → logprob: -9.5889253616333

Token 82: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013408087193965912
    2. 'def' → logprob: -4.388408184051514
    3. '#' → logprob: -7.888408184051514
    4. '\' → logprob: -8.388407707214355
    5. '
' → logprob: -9.013407707214355
    6. 'n' → logprob: -9.513407707214355
    7. 'class' → logprob: -10.013407707214355
    8. 'de' → logprob: -11.138407707214355
    9. ' 
' → logprob: -11.513407707214355
    10. 'a' → logprob: -11.638407707214355

Token 83: ' Aug' (ID: 6025)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4394935369491577
    2. ' def' → logprob: -1.5644935369491577
    3. 'd' → logprob: -2.1894936561584473
    4. ' d' → logprob: -4.689493656158447
    5. ' ' → logprob: -4.939493656158447
    6. ' class' → logprob: -5.189493656158447
    7. ' de' → logprob: -5.689493656158447
    8. 'class' → logprob: -5.939493656158447
    9. 'de' → logprob: -6.439493656158447
    10. 'import' → logprob: -7.064493656158447

Token 84: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.5257213115692139
    2. 'mented' → logprob: -0.9007213115692139
    3. 'mentation' → logprob: -6.525721549987793
    4. 'm' → logprob: -7.275721549987793
    5. 'mentor' → logprob: -9.275721549987793
    6. 'men' → logprob: -9.525721549987793
    7. '#' → logprob: -10.025721549987793
    8. '_' → logprob: -10.025721549987793
    9. 'ments' → logprob: -10.275721549987793
    10. 'me' → logprob: -10.400721549987793

Token 85: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.240481914370321e-05
    2. 'def' → logprob: -10.000052452087402
    3. 'nt' → logprob: -12.000052452087402
    4. 'r' → logprob: -14.625052452087402
    5. ' d' → logprob: -16.000051498413086
    6. 's' → logprob: -16.500051498413086
    7. 'ed' → logprob: -17.625051498413086
    8. 'm' → logprob: -17.750051498413086
    9. 'class' → logprob: -17.750051498413086
    10. 'n' → logprob: -18.125051498413086

Token 86: ' limite' (ID: 48939)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.1233952045440674
    2. 't' → logprob: -1.3733952045440674
    3. 'performance' → logprob: -1.4983952045440674
    4. 'r' → logprob: -2.7483952045440674
    5. 'fonction' → logprob: -4.373394966125488
    6. 'v' → logprob: -4.373394966125488
    7. ' taille' → logprob: -4.498394966125488
    8. 'tion' → logprob: -4.623394966125488
    9. 'ction' → logprob: -5.123394966125488
    10. 'perform' → logprob: -5.248394966125488

Token 87: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04636058956384659
    2. 's' → logprob: -3.171360492706299
    3. ' de' → logprob: -7.671360492706299
    4. 'd' → logprob: -7.796360492706299
    5. ' d' → logprob: -8.171360969543457
    6. '_de' → logprob: -8.296360969543457
    7. '_s' → logprob: -8.421360969543457
    8. '_sys' → logprob: -8.421360969543457
    9. ' _' → logprob: -8.796360969543457
    10. 'ur' → logprob: -9.296360969543457

Token 88: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.033038072288036346
    2. '_rec' → logprob: -4.033038139343262
    3. ' recursion' → logprob: -4.533038139343262
    4. 'la' → logprob: -6.533038139343262
    5. ' la' → logprob: -7.283038139343262
    6. 'l' → logprob: -7.408038139343262
    7. 're' → logprob: -7.533038139343262
    8. ' réc' → logprob: -8.408038139343262
    9. 'r' → logprob: -8.908038139343262
    10. 'le' → logprob: -9.408038139343262

Token 89: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.01157870702445507
    2. 'urs' → logprob: -4.886578559875488
    3. 'ur' → logprob: -5.761578559875488
    4. 'ursive' → logprob: -7.261578559875488
    5. 'urse' → logprob: -9.761578559875488
    6. 'u' → logprob: -10.761578559875488
    7. '```' → logprob: -11.386578559875488
    8. 'urrence' → logprob: -11.511578559875488
    9. 'usion' → logprob: -12.386578559875488
    10. '**' → logprob: -13.636578559875488

Token 90: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11431557685136795
    2. ' ' → logprob: -3.3643155097961426
    3. ' _' → logprob: -3.6143155097961426
    4. 'sys' → logprob: -4.489315509796143
    5. ' sys' → logprob: -5.239315509796143
    6. 'import' → logprob: -5.614315509796143
    7. 's' → logprob: -5.864315509796143
    8. '  ' → logprob: -5.989315509796143
    9. '__' → logprob: -5.989315509796143
    10. '\' → logprob: -6.489315509796143

Token 91: ' les' (ID: 1341)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08233001083135605
    2. ' ' → logprob: -3.5823299884796143
    3. '100' → logprob: -4.082330226898193
    4. ' recursion' → logprob: -4.207330226898193
    5. ' l' → logprob: -4.582330226898193
    6. ' int' → logprob: -5.707330226898193
    7. 'sys' → logprob: -7.082330226898193
    8. ' ' → logprob: -7.332330226898193
    9. '10' → logprob: -7.582330226898193
    10. ' def' → logprob: -7.582330226898193

Token 92: ' cas' (ID: 2108)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -1.1105622053146362
    2. ' sys' → logprob: -1.9855622053146362
    3. ' code' → logprob: -2.235562324523926
    4. ' réc' → logprob: -2.485562324523926
    5. ' système' → logprob: -2.860562324523926
    6. 'sys' → logprob: -3.110562324523926
    7. ' programme' → logprob: -3.735562324523926
    8. ' Python' → logprob: -3.985562324523926
    9. ' tests' → logprob: -4.110562324523926
    10. 'r' → logprob: -4.360562324523926

Token 93: ' où' (ID: 15113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31714048981666565
    2. ' d' → logprob: -2.067140579223633
    3. ' de' → logprob: -2.942140579223633
    4. ' ' → logprob: -3.442140579223633
    5. 'import' → logprob: -4.442140579223633
    6. '\' → logprob: -5.067140579223633
    7. 'd' → logprob: -5.067140579223633
    8. ' _' → logprob: -5.567140579223633
    9. '_de' → logprob: -5.817140579223633
    10. '<|end|>' → logprob: -6.192140579223633

Token 94: ' la' (ID: 557)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5683971047401428
    2. ' l' → logprob: -2.568397045135498
    3. ' des' → logprob: -2.693397045135498
    4. ' ' → logprob: -2.818397045135498
    5. ' ' → logprob: -3.443397045135498
    6. ' code' → logprob: -3.568397045135498
    7. '_' → logprob: -3.693397045135498
    8. ' system' → logprob: -3.943397045135498
    9. ' le' → logprob: -4.068397045135498
    10. '  ' → logprob: -4.068397045135498

Token 95: ' profondeur' (ID: 128210)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.2933320999145508
    2. 'r' → logprob: -1.5433320999145508
    3. 'code' → logprob: -1.7933320999145508
    4. ' profondeur' → logprob: -3.043332099914551
    5. 'nombre' → logprob: -3.418332099914551
    6. 's' → logprob: -3.418332099914551
    7. 're' → logprob: -3.793332099914551
    8. ' recursion' → logprob: -3.918332099914551
    9. 'rec' → logprob: -4.168332099914551
    10. 'd' → logprob: -4.168332099914551

Token 96: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05283081531524658
    2. ' ' → logprob: -3.302830696105957
    3. ' d' → logprob: -5.052830696105957
    4. ' _' → logprob: -6.427830696105957
    5. '_de' → logprob: -6.552830696105957
    6. ' de' → logprob: -6.677830696105957
    7. '_d' → logprob: -6.802830696105957
    8. '_s' → logprob: -7.427830696105957
    9. 'd' → logprob: -8.177830696105957
    10. '  ' → logprob: -8.677830696105957

Token 97: ''appel' (ID: 172839)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8012651205062866
    2. ''appel' → logprob: -0.9262651205062866
    3. ''app' → logprob: -3.176265239715576
    4. 'e' → logprob: -3.301265239715576
    5. ''ex' → logprob: -3.551265239715576
    6. ''application' → logprob: -4.551265239715576
    7. 'a' → logprob: -5.426265239715576
    8. ''analyse' → logprob: -5.801265239715576
    9. ''import' → logprob: -5.926265239715576
    10. ''utilisateur' → logprob: -6.051265239715576

Token 98: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14142589271068573
    2. 'sys' → logprob: -3.141425848007202
    3. 'import' → logprob: -3.516425848007202
    4. '_sys' → logprob: -3.641425848007202
    5. '_s' → logprob: -4.391426086425781
    6. '(sys' → logprob: -5.891426086425781
    7. '_rec' → logprob: -5.891426086425781
    8. ' sys' → logprob: -6.016426086425781
    9. ' _' → logprob: -6.516426086425781
    10. '(' → logprob: -6.641426086425781

Token 99: ' très' (ID: 9412)
  Prédit: ' élevée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -0.76768559217453
    2. ' ' → logprob: -1.0176856517791748
    3. ' très' → logprob: -2.892685651779175
    4. ' nécessaire' → logprob: -3.017685651779175
    5. '  ' → logprob: -3.392685651779175
    6. ' ' → logprob: -4.642685413360596
    7. '   ' → logprob: -6.017685413360596
    8. 's' → logprob: -6.142685413360596
    9. ' importante' → logprob: -6.267685413360596
    10. ' augment' → logprob: -6.267685413360596

Token 100: ' élevée' (ID: 150678)
  Prédit: ' élevée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -0.755857527256012
    2. ' importante' → logprob: -1.2558574676513672
    3. 'import' → logprob: -2.005857467651367
    4. 'é' → logprob: -2.380857467651367
    5. ' ' → logprob: -4.880857467651367
    6. ' import' → logprob: -5.380857467651367
    7. ' grande' → logprob: -6.505857467651367
    8. ' important' → logprob: -7.255857467651367
    9. ' élevé' → logprob: -7.505857467651367
    10. '```' → logprob: -7.505857467651367

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06328491866588593
    2. 'sys' → logprob: -2.8132848739624023
    3. 'import' → logprob: -7.563284873962402
    4. '
' → logprob: -7.688284873962402
    5. '  
' → logprob: -9.063284873962402
    6. ' sys' → logprob: -9.938284873962402
    7. '

' → logprob: -10.188284873962402
    8. '```' → logprob: -10.188284873962402
    9. '\' → logprob: -10.563284873962402
    10. '(sys' → logprob: -10.688284873962402

Token 102: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008108120411634445
    2. '
' → logprob: -5.008108139038086
    3. 'import' → logprob: -6.633108139038086
    4. ' sys' → logprob: -10.008108139038086
    5. '\n' → logprob: -11.508108139038086
    6. '\' → logprob: -12.383108139038086
    7. '```' → logprob: -12.383108139038086
    8. '(sys' → logprob: -12.883108139038086
    9. '  
' → logprob: -12.883108139038086
    10. '
' → logprob: -13.008108139038086

Token 103: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.059451520442962646
    2. '.setdefault' → logprob: -3.3094515800476074
    3. '.' → logprob: -3.9344515800476074
    4. '.stdout' → logprob: -7.184451580047607
    5. '.stdin' → logprob: -7.934451580047607
    6. '.argv' → logprob: -8.43445110321045
    7. '.stderr' → logprob: -8.80945110321045
    8. ' .' → logprob: -9.93445110321045
    9. '.exit' → logprob: -10.55945110321045
    10. '.get' → logprob: -12.05945110321045

Token 104: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.024998487904667854
    2. '_rec' → logprob: -3.774998426437378
    3. 'ursion' → logprob: -6.774998664855957
    4. '_' → logprob: -8.149998664855957
    5. ' recursion' → logprob: -8.899998664855957
    6. '_limit' → logprob: -10.274998664855957
    7. '_max' → logprob: -10.774998664855957
    8. 'limit' → logprob: -10.899998664855957
    9. '_recursive' → logprob: -11.024998664855957
    10. 'ection' → logprob: -11.274998664855957

Token 105: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -6.630610641877865e-06
    2. 'ur' → logprob: -13.000006675720215
    3. 'urs' → logprob: -13.125006675720215
    4. 'ursive' → logprob: -13.625006675720215
    5. 'limit' → logprob: -14.625006675720215
    6. '_limit' → logprob: -14.750006675720215
    7. 'usion' → logprob: -15.750006675720215
    8. 'ursor' → logprob: -16.7500057220459
    9. '_' → logprob: -17.3750057220459
    10. 'urse' → logprob: -17.6250057220459

Token 106: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2520524859428406
    2. '_limit' → logprob: -1.5020525455474854
    3. 'lim' → logprob: -9.252052307128906
    4. '_depth' → logprob: -11.002052307128906
    5. '_lim' → logprob: -12.627052307128906
    6. '_' → logprob: -12.752052307128906
    7. ' limit' → logprob: -13.002052307128906
    8. 'depth' → logprob: -14.002052307128906
    9. '_LIMIT' → logprob: -14.627052307128906
    10. '_li' → logprob: -14.752052307128906

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.491498531133402e-06
    2. '(
' → logprob: -11.750009536743164
    3. '(

' → logprob: -13.875009536743164
    4. ' (' → logprob: -15.000009536743164
    5. '((' → logprob: -15.500009536743164
    6. '()' → logprob: -16.625009536743164
    7. '(int' → logprob: -17.125009536743164
    8. '(
' → logprob: -18.125009536743164
    9. '```' → logprob: -18.500009536743164
    10. '(sys' → logprob: -19.250009536743164

Token 108: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031815171241760254
    2. '100' → logprob: -5.753181457519531
    3. ' ' → logprob: -12.878181457519531
    4. '200' → logprob: -14.753181457519531
    5. '300' → logprob: -14.878181457519531
    6. '500' → logprob: -15.003181457519531
    7. '400' → logprob: -16.62818145751953
    8. '250' → logprob: -16.87818145751953
    9. 'int' → logprob: -17.62818145751953
    10. '1' → logprob: -18.25318145751953

Token 109: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.0003096023283433169
    2. '700' → logprob: -8.875309944152832
    3. '7' → logprob: -9.250309944152832
    4. '743' → logprob: -10.500309944152832
    5. '747' → logprob: -10.625309944152832
    6. '738' → logprob: -11.250309944152832
    7. '74' → logprob: -13.000309944152832
    8. '783' → logprob: -13.625309944152832
    9. '746' → logprob: -14.000309944152832
    10. '000' → logprob: -14.250309944152832

Token 110: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -9.162282367469743e-05
    2. '363' → logprob: -9.375091552734375
    3. '362' → logprob: -12.625091552734375
    4. '3' → logprob: -13.250091552734375
    5. '360' → logprob: -13.875091552734375
    6. '36' → logprob: -14.875091552734375
    7. '359' → logprob: -16.500091552734375
    8. '361' → logprob: -16.500091552734375
    9. '    
' → logprob: -17.000091552734375
    10. '300' → logprob: -17.250091552734375

Token 111: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.696889623621246e-06
    2. '6' → logprob: -12.87500286102295
    3. ')' → logprob: -17.625001907348633
    4. '0' → logprob: -19.125001907348633
    5. '```' → logprob: -19.625001907348633
    6. '۷' → logprob: -19.875001907348633
    7. '8' → logprob: -21.000001907348633
    8. '5' → logprob: -21.125001907348633
    9. '７' → logprob: -21.250001907348633
    10. '٧' → logprob: -21.250001907348633

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -16.0
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -19.125
    6. '),' → logprob: -19.375
    7. '}' → logprob: -20.625
    8. ')

' → logprob: -20.625
    9. ')
' → logprob: -20.75
    10. ')}' → logprob: -20.875

Token 113: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29972508549690247
    2. '

' → logprob: -1.67472505569458
    3. 'def' → logprob: -2.79972505569458
    4. '#' → logprob: -5.92472505569458
    5. 'd' → logprob: -6.29972505569458
    6. '\' → logprob: -6.42472505569458
    7. 'class' → logprob: -6.42472505569458
    8. '\n' → logprob: -6.67472505569458
    9. 'n' → logprob: -7.17472505569458
    10. '


' → logprob: -7.79972505569458

Token 114: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5340967774391174
    2. 'input' → logprob: -1.0340967178344727
    3. ' input' → logprob: -3.4090967178344727
    4. 'MOD' → logprob: -4.284096717834473
    5. '#' → logprob: -5.534096717834473
    6. 'class' → logprob: -5.784096717834473
    7. ' def' → logprob: -6.534096717834473
    8. 'INF' → logprob: -6.659096717834473
    9. ' MOD' → logprob: -7.909096717834473
    10. 'mod' → logprob: -8.159096717834473

Token 115: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0020972066558897495
    2. 'fin' → logprob: -6.252097129821777
    3. '#' → logprob: -8.752097129821777
    4. 'fi' → logprob: -12.502097129821777
    5. '
' → logprob: -12.627097129821777
    6. 'def' → logprob: -14.127097129821777
    7. 'fen' → logprob: -14.252097129821777
    8. 'ff' → logprob: -14.502097129821777
    9. 'finite' → logprob: -15.002097129821777
    10. 'fine' → logprob: -15.002097129821777

Token 116: 'ition' (ID: 868)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.3606230616569519
    2. 'ition' → logprob: -1.7356231212615967
    3. 'class' → logprob: -2.4856231212615967
    4. '#' → logprob: -4.110622882843018
    5. 'inition' → logprob: -4.485622882843018
    6. 'i' → logprob: -4.735622882843018
    7. 'def' → logprob: -6.735622882843018
    8. 'ine' → logprob: -6.860622882843018
    9. 'er' → logprob: -7.110622882843018
    10. 'e' → logprob: -7.610622882843018

Token 117: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48794665932655334
    2. ' class' → logprob: -1.612946629524231
    3. ' de' → logprob: -2.1129467487335205
    4. ' d' → logprob: -3.1129467487335205
    5. 'class' → logprob: -4.362946510314941
    6. ' of' → logprob: -5.612946510314941
    7. 'def' → logprob: -6.362946510314941
    8. ' des' → logprob: -6.612946510314941
    9. ' def' → logprob: -6.987946510314941
    10. ' ' → logprob: -8.112946510314941

Token 118: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05222024768590927
    2. ''une' → logprob: -3.802220344543457
    3. ' ' → logprob: -5.052220344543457
    4. ' e' → logprob: -5.302220344543457
    5. 'u' → logprob: -5.552220344543457
    6. ''' → logprob: -6.052220344543457
    7. 'ef' → logprob: -6.177220344543457
    8. 'es' → logprob: -6.427220344543457
    9. ''un' → logprob: -6.552220344543457
    10. 'a' → logprob: -7.052220344543457

Token 119: ' valeur' (ID: 41664)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -1.312316656112671
    2. 'classe' → logprob: -1.312316656112671
    3. ' classe' → logprob: -1.437316656112671
    4. 'class' → logprob: -2.062316656112671
    5. ' fonction' → logprob: -2.937316656112671
    6. 'fonction' → logprob: -3.437316656112671
    7. ' function' → logprob: -5.31231689453125
    8. ' ' → logprob: -6.31231689453125
    9. ' ' → logprob: -7.18731689453125
    10. 'f' → logprob: -7.56231689453125

Token 120: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5141568183898926
    2. '_' → logprob: -1.5141568183898926
    3. '=' → logprob: -2.3891568183898926
    4. 'max' → logprob: -3.2641568183898926
    5. '_max' → logprob: -3.5141568183898926
    6. 'initial' → logprob: -5.514156818389893
    7. '_initial' → logprob: -5.889156818389893
    8. '_MAX' → logprob: -6.389156818389893
    9. 's' → logprob: -6.764156818389893
    10. 'de' → logprob: -6.889156818389893

Token 121: ''in' (ID: 17942)
  Prédit: 'éf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.44180533289909363
    2. 'ef' → logprob: -1.066805362701416
    3. 'e' → logprob: -4.566805362701416
    4. 'é' → logprob: -6.816805362701416
    5. 'ep' → logprob: -8.066804885864258
    6. ''entrée' → logprob: -8.816804885864258
    7. 'ép' → logprob: -9.316804885864258
    8. '_inf' → logprob: -9.316804885864258
    9. '```' → logprob: -9.566804885864258
    10. 'f' → logprob: -9.941804885864258

Token 122: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030956225469708443
    2. 't' → logprob: -3.530956268310547
    3. 'finity' → logprob: -7.155956268310547
    4. 'té' → logprob: -8.655956268310547
    5. 'it' → logprob: -9.780956268310547
    6. 'fty' → logprob: -10.405956268310547
    7. 'finite' → logprob: -10.530956268310547
    8. 'fin' → logprob: -10.655956268310547
    9. 'fi' → logprob: -11.280956268310547
    10. 'if' → logprob: -11.530956268310547

Token 123: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.02794789709150791
    2. 'inity' → logprob: -4.402947902679443
    3. 'ity' → logprob: -4.527947902679443
    4. 'i' → logprob: -6.277947902679443
    5. 'init' → logprob: -7.402947902679443
    6. 'iny' → logprob: -7.777947902679443
    7. 'inite' → logprob: -8.152947425842285
    8. 'inty' → logprob: -8.152947425842285
    9. 'inie' → logprob: -8.277947425842285
    10. 'float' → logprob: -8.527947425842285

Token 124: ' utilisée' (ID: 106548)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17794914543628693
    2. '_inf' → logprob: -2.0529491901397705
    3. '_INF' → logprob: -4.302948951721191
    4. '_' → logprob: -4.927948951721191
    5. 'inf' → logprob: -5.177948951721191
    6. 'INF' → logprob: -5.302948951721191
    7. '=' → logprob: -6.302948951721191
    8. ' ' → logprob: -7.927948951721191
    9. '_INFINITY' → logprob: -8.052948951721191
    10. ' INF' → logprob: -8.802948951721191

Token 125: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01485599484294653
    2. '=' → logprob: -4.389855861663818
    3. ' ' → logprob: -7.389855861663818
    4. ' dans' → logprob: -7.514855861663818
    5. '_' → logprob: -7.889855861663818
    6. 'dans' → logprob: -8.514856338500977
    7. ' pour' → logprob: -9.139856338500977
    8. ' =
' → logprob: -9.264856338500977
    9. 'pour' → logprob: -9.889856338500977
    10. ',' → logprob: -9.889856338500977

Token 126: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6830461621284485
    2. 'initial' → logprob: -1.4330461025238037
    3. ' représ' → logprob: -2.5580461025238037
    4. ' l' → logprob: -2.5580461025238037
    5. ' initial' → logprob: -3.5580461025238037
    6. 'la' → logprob: -3.6830461025238037
    7. ' la' → logprob: -4.308046340942383
    8. 'repr' → logprob: -4.933046340942383
    9. 'represent' → logprob: -5.308046340942383
    10. 'init' → logprob: -5.558046340942383

Token 127: ' grands' (ID: 43085)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.27133822441101074
    2. 'compar' → logprob: -3.1463382244110107
    3. ' calcul' → logprob: -3.5213382244110107
    4. ' initial' → logprob: -3.6463382244110107
    5. ' comparisons' → logprob: -3.7713382244110107
    6. '_' → logprob: -3.8963382244110107
    7. ' compar' → logprob: -4.27133846282959
    8. 'initial' → logprob: -4.64633846282959
    9. ' alg' → logprob: -4.77133846282959
    10. ' graph' → logprob: -4.89633846282959

Token 128: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.0910075232386589
    2. 'ent' → logprob: -3.2160074710845947
    3. 'nombre' → logprob: -3.3410074710845947
    4. ' ent' → logprob: -5.716007709503174
    5. 'numbers' → logprob: -6.341007709503174
    6. ' distances' → logprob: -6.591007709503174
    7. 'n' → logprob: -7.341007709503174
    8. ' nombre' → logprob: -7.341007709503174
    9. '<|end|>' → logprob: -7.341007709503174
    10. 'ints' → logprob: -7.966007709503174

Token 129: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.008211465552449226
    2. 'ier' → logprob: -5.008211612701416
    3. 'er' → logprob: -7.133211612701416
    4. 'ers' → logprob: -7.508211612701416
    5. 'gers' → logprob: -9.383211135864258
    6. 'i' → logprob: -11.008211135864258
    7. 'ières' → logprob: -11.758211135864258
    8. 'g' → logprob: -12.133211135864258
    9. 'e' → logprob: -12.633211135864258
    10. '#' → logprob: -12.633211135864258

Token 130: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.36065390706062317
    2. 'inf' → logprob: -1.8606538772583008
    3. '_inf' → logprob: -2.110653877258301
    4. '_INF' → logprob: -3.735653877258301
    5. '_' → logprob: -7.860653877258301
    6. ' =' → logprob: -7.860653877258301
    7. ' INF' → logprob: -7.985653877258301
    8. '_INFINITY' → logprob: -8.3606538772583
    9. '
' → logprob: -8.6106538772583
    10. 'in' → logprob: -8.8606538772583

Token 131: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.04904943332076073
    2. 'inf' → logprob: -3.0490493774414062
    3. 'IN' → logprob: -8.424049377441406
    4. ' INF' → logprob: -9.674049377441406
    5. '_INF' → logprob: -9.674049377441406
    6. 'MAX' → logprob: -10.424049377441406
    7. '_inf' → logprob: -10.674049377441406
    8. 'in' → logprob: -11.549049377441406
    9. 'INT' → logprob: -11.674049377441406
    10. 'BIG' → logprob: -11.799049377441406

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701493501663208
    2. '=' → logprob: -2.1270148754119873
    3. '_' → logprob: -9.627015113830566
    4. '=int' → logprob: -11.502015113830566
    5. ' =
' → logprob: -12.752015113830566
    6. ',' → logprob: -13.127015113830566
    7. ' ' → logprob: -13.502015113830566
    8. '＝' → logprob: -13.627015113830566
    9. ' ' → logprob: -13.752015113830566
    10. '=float' → logprob: -14.752015113830566

Token 133: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.17431576550006866
    2. 'float' → logprob: -1.9243158102035522
    3. ' ' → logprob: -4.549315929412842
    4. ' float' → logprob: -5.799315929412842
    5. '1' → logprob: -8.924315452575684
    6. 'int' → logprob: -9.049315452575684
    7. '214' → logprob: -9.424315452575684
    8. 'math' → logprob: -10.549315452575684
    9. '2' → logprob: -11.799315452575684
    10. '100' → logprob: -12.174315452575684

Token 134: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03393843397498131
    2. 'float' → logprob: -3.408938407897949
    3. 'int' → logprob: -8.90893840789795
    4. '1' → logprob: -9.65893840789795
    5. '214' → logprob: -9.65893840789795
    6. 'math' → logprob: -11.28393840789795
    7. '2' → logprob: -12.28393840789795
    8. '922' → logprob: -12.28393840789795
    9. '999' → logprob: -13.40893840789795
    10. '100' → logprob: -13.53393840789795

Token 135: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.19530485570430756
    2. '9' → logprob: -1.9453048706054688
    3. '**' → logprob: -4.070304870605469
    4. '10' → logprob: -4.445304870605469
    5. '15' → logprob: -5.695304870605469
    6. '12' → logprob: -6.695304870605469
    7. '20' → logprob: -7.820304870605469
    8. '19' → logprob: -8.195304870605469
    9. '16' → logprob: -8.695304870605469
    10. '17' → logprob: -9.320304870605469

Token 136: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.04832638055086136
    2. '15' → logprob: -3.2983264923095703
    3. '20' → logprob: -5.17332649230957
    4. '9' → logprob: -5.54832649230957
    5. '10' → logprob: -8.04832649230957
    6. '19' → logprob: -8.67332649230957
    7. '16' → logprob: -9.04832649230957
    8. '12' → logprob: -10.17332649230957
    9. '14' → logprob: -11.42332649230957
    10. '17' → logprob: -11.67332649230957

Token 137: '13' (ID: 1311)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.08487352728843689
    2. '15' → logprob: -2.5848734378814697
    3. '20' → logprob: -5.584873676300049
    4. '9' → logprob: -6.459873676300049
    5. '16' → logprob: -8.33487319946289
    6. '10' → logprob: -8.58487319946289
    7. '19' → logprob: -8.70987319946289
    8. '12' → logprob: -10.70987319946289
    9. '14' → logprob: -10.83487319946289
    10. '17' → logprob: -11.58487319946289

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01263690460473299
    2. '

' → logprob: -5.387637138366699
    3. '
' → logprob: -5.887637138366699
    4. '' → logprob: -6.637637138366699
    5. '\n' → logprob: -6.637637138366699
    6. '#' → logprob: -7.137637138366699
    7. '<|end|>' → logprob: -7.387637138366699
    8. '0' → logprob: -7.512637138366699
    9. 'newline' → logprob: -9.5126371383667
    10. ' 
' → logprob: -9.6376371383667

Token 139: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15466126799583435
    2. '#' → logprob: -2.529661178588867
    3. '

' → logprob: -3.654661178588867
    4. 'def' → logprob: -3.654661178588867
    5. 'class' → logprob: -5.154661178588867
    6. '' → logprob: -6.529661178588867
    7. 'n' → logprob: -6.779661178588867
    8. '\' → logprob: -7.029661178588867
    9. '
' → logprob: -7.154661178588867
    10. '\n' → logprob: -7.404661178588867

Token 140: ' LI' (ID: 14875)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.37879738211631775
    2. ' main' → logprob: -1.8787974119186401
    3. ' dfs' → logprob: -2.5037972927093506
    4. ' factorial' → logprob: -3.5037972927093506
    5. ' binary' → logprob: -4.37879753112793
    6. ' max' → logprob: -4.87879753112793
    7. ' ' → logprob: -5.37879753112793
    8. ' calculate' → logprob: -5.50379753112793
    9. ' factor' → logprob: -5.50379753112793
    10. ' bfs' → logprob: -6.00379753112793

Token 141: '():
' (ID: 8595)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.9971451163291931
    2. 'ST' → logprob: -0.9971451163291931
    3. '():' → logprob: -1.872145175933838
    4. '()' → logprob: -3.247145175933838
    5. 'N' → logprob: -3.372145175933838
    6. '():
' → logprob: -4.622145175933838
    7. 'ne' → logprob: -4.747145175933838
    8. 'NE' → logprob: -4.872145175933838
    9. 'n' → logprob: -5.497145175933838
    10. 'nit' → logprob: -6.997145175933838

Token 142: '   ' (ID: 271)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6823046803474426
    2. 'n' → logprob: -1.5573046207427979
    3. 'return' → logprob: -1.8073046207427979
    4. 'map' → logprob: -3.557304620742798
    5. 'eturn' → logprob: -4.057304859161377
    6. 'list' → logprob: -4.557304859161377
    7. 'nt' → logprob: -4.557304859161377
    8. ' return' → logprob: -4.557304859161377
    9. 'ist' → logprob: -4.682304859161377
    10. 't' → logprob: -5.057304859161377

Token 143: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02459658868610859
    2. 'list' → logprob: -4.149596691131592
    3. 'map' → logprob: -5.524596691131592
    4. ' return' → logprob: -5.524596691131592
    5. ' list' → logprob: -7.649596691131592
    6. ' map' → logprob: -9.774596214294434
    7. 'ret' → logprob: -12.399596214294434
    8. '   ' → logprob: -12.524596214294434
    9. 'eturn' → logprob: -12.774596214294434
    10. ' ' → logprob: -12.774596214294434

Token 144: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02426968142390251
    2. ' return' → logprob: -4.1492695808410645
    3. 'eturn' → logprob: -5.3992695808410645
    4. '   ' → logprob: -5.6492695808410645
    5. 'n' → logprob: -10.399270057678223
    6. 'ret' → logprob: -10.524270057678223
    7. '	return' → logprob: -10.649270057678223
    8. ' ' → logprob: -10.899270057678223
    9. 'list' → logprob: -11.524270057678223
    10. '  ' → logprob: -11.524270057678223

Token 145: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001576640410348773
    2. ' return' → logprob: -6.7515764236450195
    3. 'r' → logprob: -8.62657642364502
    4. 'ret' → logprob: -9.00157642364502
    5. '   ' → logprob: -9.37657642364502
    6. 'eturn' → logprob: -11.75157642364502
    7. 're' → logprob: -12.62657642364502
    8. 'Return' → logprob: -13.62657642364502
    9. '"""' → logprob: -13.62657642364502
    10. ':return' → logprob: -14.00157642364502

Token 146: ' une' (ID: 2463)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.4085659682750702
    2. '()' → logprob: -1.7835659980773926
    3. 'n' → logprob: -2.1585659980773926
    4. 'nt' → logprob: -3.0335659980773926
    5. 'st' → logprob: -6.783565998077393
    6. 'ine' → logprob: -7.158565998077393
    7. 't' → logprob: -7.783565998077393
    8. '():' → logprob: -8.783565521240234
    9. ' une' → logprob: -9.033565521240234
    10. 'nte' → logprob: -9.158565521240234

Token 147: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.578735888004303
    2. 'ligne' → logprob: -1.2037358283996582
    3. 'igne' → logprob: -3.703735828399658
    4. 'int' → logprob: -3.828735828399658
    5. 'ine' → logprob: -3.953735828399658
    6. 'n' → logprob: -4.203735828399658
    7. 'liste' → logprob: -4.953735828399658
    8. ' ' → logprob: -5.078735828399658
    9. ' liste' → logprob: -5.203735828399658
    10. 'l' → logprob: -5.328735828399658

Token 148: ' de' (ID: 334)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05529926344752312
    2. '()' → logprob: -2.9302992820739746
    3. '.strip' → logprob: -8.055298805236816
    4. '.' → logprob: -10.180298805236816
    5. ')' → logprob: -11.680298805236816
    6. '())' → logprob: -12.055298805236816
    7. '()
' → logprob: -12.180298805236816
    8. '.split' → logprob: -12.305298805236816
    9. '()[' → logprob: -12.680298805236816
    10. ',' → logprob: -12.680298805236816

Token 149: ' l' (ID: 305)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.3832080364227295
    2. 'entrée' → logprob: -1.7582080364227295
    3. 'stdin' → logprob: -1.7582080364227295
    4. 'input' → logprob: -1.8832080364227295
    5. 'int' → logprob: -2.1332080364227295
    6. 'l' → logprob: -3.0082080364227295
    7. 'code' → logprob: -3.1332080364227295
    8. 'ints' → logprob: -4.508208274841309
    9. ' input' → logprob: -5.008208274841309
    10. ' code' → logprob: -5.508208274841309

Token 150: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33142733573913574
    2. ''entrée' → logprob: -1.7064273357391357
    3. 'stdin' → logprob: -3.7064273357391357
    4. ' input' → logprob: -4.206427574157715
    5. 'entrée' → logprob: -4.331427574157715
    6. 'es' → logprob: -4.331427574157715
    7. ''' → logprob: -4.456427574157715
    8. 'e' → logprob: -4.831427574157715
    9. 'sys' → logprob: -5.456427574157715
    10. 'a' → logprob: -5.581427574157715

Token 151: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22718989849090576
    2. '()' → logprob: -1.6021898984909058
    3. '.strip' → logprob: -7.227190017700195
    4. '.' → logprob: -8.227190017700195
    5. ')' → logprob: -8.727190017700195
    6. 'strip' → logprob: -9.727190017700195
    7. 'input' → logprob: -9.727190017700195
    8. '())' → logprob: -9.977190017700195
    9. ',' → logprob: -10.227190017700195
    10. '"""' → logprob: -10.227190017700195

Token 152: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008077846840023994
    2. '()' → logprob: -5.008077621459961
    3. ',' → logprob: -7.508077621459961
    4. '.strip' → logprob: -8.008077621459961
    5. '.split' → logprob: -8.883077621459961
    6. '()
' → logprob: -9.633077621459961
    7. '.' → logprob: -9.758077621459961
    8. 'return' → logprob: -9.883077621459961
    9. ')' → logprob: -10.508077621459961
    10. 'split' → logprob: -10.508077621459961

Token 153: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5464137196540833
    2. 'return' → logprob: -1.5464136600494385
    3. ' retourne' → logprob: -2.2964136600494385
    4. ' la' → logprob: -3.0464136600494385
    5. '   ' → logprob: -3.1714136600494385
    6. 'la' → logprob: -4.921413898468018
    7. ' ren' → logprob: -5.171413898468018
    8. 'ren' → logprob: -5.671413898468018
    9. 'ret' → logprob: -7.546413898468018
    10. ' retour' → logprob: -7.671413898468018

Token 154: ' convert' (ID: 8452)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.8386875987052917
    2. ' map' → logprob: -1.9636876583099365
    3. ' retourne' → logprob: -1.9636876583099365
    4. ' split' → logprob: -2.4636876583099365
    5. 'map' → logprob: -2.7136876583099365
    6. 'return' → logprob: -2.9636876583099365
    7. ' return' → logprob: -3.8386876583099365
    8. ' transforme' → logprob: -4.088687419891357
    9. 'convert' → logprob: -4.213687419891357
    10. ' convert' → logprob: -4.838687419891357

Token 155: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0002631238894537091
    2. ' it' → logprob: -8.500263214111328
    3. 'i' → logprob: -10.500263214111328
    4. '   ' → logprob: -10.750263214111328
    5. 't' → logprob: -12.375263214111328
    6. '_it' → logprob: -13.500263214111328
    7. 'ie' → logprob: -14.125263214111328
    8. 'ît' → logprob: -14.500263214111328
    9. ' ' → logprob: -14.500263214111328
    10. 'is' → logprob: -14.625263214111328

Token 156: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4287668764591217
    2. 'en' → logprob: -1.0537668466567993
    3. ' list' → logprob: -10.428767204284668
    4. 'list' → logprob: -11.428767204284668
    5. 'e' → logprob: -11.803767204284668
    6. ' ' → logprob: -12.428767204284668
    7. '()' → logprob: -13.053767204284668
    8. '   ' → logprob: -13.303767204284668
    9. '_en' → logprob: -13.303767204284668
    10. '	en' → logprob: -13.553767204284668

Token 157: ' une' (ID: 2463)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4801192879676819
    2. ' une' → logprob: -1.480119228363037
    3. ' liste' → logprob: -2.480119228363037
    4. 'list' → logprob: -2.980119228363037
    5. 'une' → logprob: -4.605119228363037
    6. 'liste' → logprob: -4.855119228363037
    7. ' la' → logprob: -7.605119228363037
    8. ' des' → logprob: -8.730119705200195
    9. '   ' → logprob: -8.855119705200195
    10. ' un' → logprob: -8.980119705200195

Token 158: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.08337288349866867
    2. ' liste' → logprob: -2.7083728313446045
    3. 'list' → logprob: -4.333373069763184
    4. ' list' → logprob: -8.958373069763184
    5. 'Liste' → logprob: -9.958373069763184
    6. 'lst' → logprob: -11.708373069763184
    7. 'lista' → logprob: -11.708373069763184
    8. '[' → logprob: -11.833373069763184
    9. 'int' → logprob: -12.208373069763184
    10. 'lis' → logprob: -12.208373069763184

Token 159: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9398882985115051
    2. '()' → logprob: -1.1898882389068604
    3. '[' → logprob: -2.0648882389068604
    4. '[int' → logprob: -2.0648882389068604
    5. 'de' → logprob: -4.3148884773254395
    6. ' de' → logprob: -4.6898884773254395
    7. '[]' → logprob: -5.0648884773254395
    8. '(map' → logprob: -5.3148884773254395
    9. ' of' → logprob: -5.4398884773254395
    10. ')' → logprob: -6.1898884773254395

Token 160: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31097114086151123
    2. 'ent' → logprob: -1.4359711408615112
    3. 'ints' → logprob: -4.810971260070801
    4. ''ent' → logprob: -4.935971260070801
    5. ' ent' → logprob: -5.060971260070801
    6. ' int' → logprob: -6.060971260070801
    7. ' integers' → logprob: -6.560971260070801
    8. 'n' → logprob: -7.310971260070801
    9. 'inte' → logprob: -7.435971260070801
    10. '_ent' → logprob: -7.560971260070801

Token 161: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013393973000347614
    2. 't' → logprob: -5.263393878936768
    3. 'ières' → logprob: -5.263393878936768
    4. 'i' → logprob: -5.888393878936768
    5. 'ti' → logprob: -9.638394355773926
    6. 'ié' → logprob: -10.888394355773926
    7. 'ers' → logprob: -11.138394355773926
    8. 'ités' → logprob: -11.388394355773926
    9. 'e' → logprob: -11.388394355773926
    10. 'eg' → logprob: -11.513394355773926

Token 162: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10292678326368332
    2. '():' → logprob: -2.352926731109619
    3. ':' → logprob: -7.102926731109619
    4. ')' → logprob: -7.352926731109619
    5. '().' → logprob: -7.602926731109619
    6. '.' → logprob: -8.352927207946777
    7. '()
' → logprob: -9.102927207946777
    8. '():
' → logprob: -9.102927207946777
    9. ' ()' → logprob: -9.227927207946777
    10. '())' → logprob: -9.977927207946777

Token 163: '    
' (ID: 1944)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30078408122062683
    2. '   ' → logprob: -1.6757841110229492
    3. ' return' → logprob: -3.550784111022949
    4. '()' → logprob: -4.175784111022949
    5. ')' → logprob: -5.050784111022949
    6. '"""' → logprob: -5.050784111022949
    7. '    
' → logprob: -5.175784111022949
    8. ':return' → logprob: -5.925784111022949
    9. '():' → logprob: -6.550784111022949
    10. '\n' → logprob: -7.175784111022949

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34660205245018005
    2. 'return' → logprob: -1.4716020822525024
    3. ' return' → logprob: -2.846601963043213
    4. '"""' → logprob: -5.346601963043213
    5. ')' → logprob: -8.096602439880371
    6. ' """' → logprob: -9.721602439880371
    7. ' ' → logprob: -10.096602439880371
    8. ':return' → logprob: -10.596602439880371
    9. '""' → logprob: -11.221602439880371
    10. '```' → logprob: -11.346602439880371

Token 165: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0004966750275343657
    2. ' return' → logprob: -7.625496864318848
    3. '   ' → logprob: -11.750496864318848
    4. ':return' → logprob: -15.250496864318848
    5. 'ret' → logprob: -15.625496864318848
    6. '"""' → logprob: -16.12549591064453
    7. '```' → logprob: -16.87549591064453
    8. 'r' → logprob: -17.37549591064453
    9. '	return' → logprob: -17.62549591064453
    10. 'n' → logprob: -17.75049591064453

Token 166: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8449191451072693
    2. '():' → logprob: -1.219919204711914
    3. '[]' → logprob: -1.594919204711914
    4. ':' → logprob: -3.219919204711914
    5. ' []' → logprob: -4.219919204711914
    6. ':list' → logprob: -5.469919204711914
    7. ' list' → logprob: -5.719919204711914
    8. '[:]' → logprob: -6.094919204711914
    9. ' ()' → logprob: -6.344919204711914
    10. ' =' → logprob: -6.344919204711914

Token 167: '       ' (ID: 309)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.014622355811297894
    2. 'list' → logprob: -4.389622211456299
    3. '   ' → logprob: -6.264622211456299
    4. ' map' → logprob: -8.889622688293457
    5. 'List' → logprob: -10.764622688293457
    6. ' List' → logprob: -10.764622688293457
    7. ' [' → logprob: -11.389622688293457
    8. 'map' → logprob: -12.139622688293457
    9. ' []' → logprob: -12.764622688293457
    10. '[list' → logprob: -13.014622688293457

Token 168: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.030537601560354233
    2. 'List' → logprob: -3.5305376052856445
    3. ' list' → logprob: -7.1555376052856445
    4. ' List' → logprob: -12.280537605285645
    5. '   ' → logprob: -14.405537605285645
    6. '[list' → logprob: -14.780537605285645
    7. '[List' → logprob: -15.405537605285645
    8. 'liste' → logprob: -16.030536651611328
    9. '_list' → logprob: -16.405536651611328
    10. ':list' → logprob: -16.655536651611328

Token 169: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07196664065122604
    2. '(map' → logprob: -2.6969666481018066
    3. '(int' → logprob: -6.571966648101807
    4. '(' → logprob: -7.821966648101807
    5. '[' → logprob: -9.196966171264648
    6. '<int' → logprob: -9.696966171264648
    7. 'int' → logprob: -10.446966171264648
    8. 'map' → logprob: -10.696966171264648
    9. '()' → logprob: -12.946966171264648
    10. ':' → logprob: -13.071966171264648

Token 170: ' Liste' (ID: 61030)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5226408243179321
    2. '[int' → logprob: -1.2726408243179321
    3. ' list' → logprob: -2.7726407051086426
    4. 'map' → logprob: -3.2726407051086426
    5. 'int' → logprob: -4.522640705108643
    6. '   ' → logprob: -4.647640705108643
    7. 'list' → logprob: -5.397640705108643
    8. ' int' → logprob: -8.1476411819458
    9. '(map' → logprob: -9.0226411819458
    10. ' [' → logprob: -9.1476411819458

Token 171: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.02429690584540367
    2. '<|end|>' → logprob: -4.024296760559082
    3. '[' → logprob: -5.399296760559082
    4. '<int' → logprob: -7.399296760559082
    5. '(map' → logprob: -8.774296760559082
    6. '[]' → logprob: -8.774296760559082
    7. '(int' → logprob: -9.024296760559082
    8. '(' → logprob: -9.399296760559082
    9. '[Int' → logprob: -10.024296760559082
    10. '[str' → logprob: -10.024296760559082

Token 172: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.9685956239700317
    2. 'int' → logprob: -1.0935956239700317
    3. ' ent' → logprob: -1.4685956239700317
    4. ' int' → logprob: -2.968595504760742
    5. 'ints' → logprob: -6.468595504760742
    6. ' integers' → logprob: -6.468595504760742
    7. ' nombres' → logprob: -8.343595504760742
    8. 'inte' → logprob: -8.843595504760742
    9. ' entier' → logprob: -9.843595504760742
    10. ' ints' → logprob: -9.968595504760742

Token 173: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00011832444579340518
    2. 't' → logprob: -9.375118255615234
    3. 'ières' → logprob: -11.000118255615234
    4. 'i' → logprob: -11.500118255615234
    5. 'ti' → logprob: -13.000118255615234
    6. 'ers' → logprob: -14.000118255615234
    7. 'ier' → logprob: -14.000118255615234
    8. 'gers' → logprob: -14.500118255615234
    9. 'tiers' → logprob: -14.875118255615234
    10. 'I' → logprob: -15.000118255615234

Token 174: ' lus' (ID: 54762)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6133119463920593
    2. '<|end|>' → logprob: -0.8633119463920593
    3. ' des' → logprob: -4.988311767578125
    4. '[]' → logprob: -5.238311767578125
    5. '(int' → logprob: -5.738311767578125
    6. '()' → logprob: -5.738311767578125
    7. ']' → logprob: -5.863311767578125
    8. '[' → logprob: -5.988311767578125
    9. ')' → logprob: -6.113311767578125
    10. ' de' → logprob: -6.488311767578125

Token 175: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0403214693069458
    2. '()
' → logprob: -3.2903213500976562
    3. 'def' → logprob: -7.415321350097656
    4. '():' → logprob: -7.915321350097656
    5. '():
' → logprob: -7.915321350097656
    6. '[]' → logprob: -8.915321350097656
    7. '   ' → logprob: -9.040321350097656
    8. ' =' → logprob: -9.040321350097656
    9. '[int' → logprob: -9.040321350097656
    10. '()`' → logprob: -9.665321350097656

Token 176: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.643592894077301
    2. ')' → logprob: -1.8935928344726562
    3. '"""' → logprob: -2.1435928344726562
    4. '   ' → logprob: -2.5185928344726562
    5. '()
' → logprob: -2.8935928344726562
    6. '\n' → logprob: -3.7685928344726562
    7. 'return' → logprob: -4.393592834472656
    8. 'def' → logprob: -4.768592834472656
    9. ' return' → logprob: -4.893592834472656
    10. '"""
' → logprob: -5.268592834472656

Token 177: ' """
' (ID: 7037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8304604291915894
    2. '"""' → logprob: -1.9554604291915894
    3. '   ' → logprob: -2.455460548400879
    4. 'return' → logprob: -2.580460548400879
    5. ' return' → logprob: -2.705460548400879
    6. '()
' → logprob: -2.955460548400879
    7. '"""
' (adapté à ' """
') → logprob: -3.205460548400879
    8. ')' → logprob: -3.205460548400879
    9. '\n' → logprob: -3.455460548400879
    10. '
' → logprob: -5.205460548400879

Token 178: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2555410861968994
    2. '   ' → logprob: -1.5055410861968994
    3. ' return' → logprob: -5.63054084777832
    4. 'ret' → logprob: -12.13054084777832
    5. '	return' → logprob: -12.50554084777832
    6. '    
' → logprob: -12.88054084777832
    7. '   ' → logprob: -13.25554084777832
    8. ' ' → logprob: -14.25554084777832
    9. 'n' → logprob: -14.38054084777832
    10. 'data' → logprob: -14.50554084777832

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.5716304410016164e-05
    2. ' return' → logprob: -10.250035285949707
    3. 'list' → logprob: -15.375035285949707
    4. '   ' → logprob: -16.000036239624023
    5. 'ret' → logprob: -19.750036239624023
    6. 'map' → logprob: -20.250036239624023
    7. '	return' → logprob: -20.750036239624023
    8. 'import' → logprob: -22.625036239624023
    9. ':return' → logprob: -23.125036239624023
    10. 'int' → logprob: -23.375036239624023

Token 180: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00671809446066618
    2. ' list' → logprob: -5.006718158721924
    3. 'map' → logprob: -12.881717681884766
    4. '[list' → logprob: -17.131717681884766
    5. '   ' → logprob: -17.881717681884766
    6. '	list' → logprob: -18.131717681884766
    7. '[' → logprob: -19.131717681884766
    8. ' ' → logprob: -19.756717681884766
    9. '(list' → logprob: -20.131717681884766
    10. '  ' → logprob: -20.506717681884766

Token 181: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00026383911608718336
    2. '(' → logprob: -8.250264167785645
    3. 'map' → logprob: -13.000264167785645
    4. '(
' → logprob: -15.375264167785645
    5. '(int' → logprob: -17.375263214111328
    6. '(m' → logprob: -17.750263214111328
    7. '	map' → logprob: -17.875263214111328
    8. ' map' → logprob: -18.000263214111328
    9. '()' → logprob: -18.125263214111328
    10. '.map' → logprob: -19.000263214111328

Token 182: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.694766489090398e-05
    2. 'int' → logprob: -10.125066757202148
    3. '(' → logprob: -10.625066757202148
    4. '<int' → logprob: -13.750066757202148
    5. ',int' → logprob: -14.875066757202148
    6. '[int' → logprob: -14.875066757202148
    7. ' int' → logprob: -15.375066757202148
    8. '=int' → logprob: -15.500066757202148
    9. '(
' → logprob: -16.12506675720215
    10. ')' → logprob: -16.12506675720215

Token 183: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.25184550881385803
    2. ',' → logprob: -2.126845598220825
    3. 'sys' → logprob: -3.376845598220825
    4. ',input' → logprob: -3.501845598220825
    5. '(input' → logprob: -3.626845598220825
    6. 'input' → logprob: -4.501845359802246
    7. '(' → logprob: -7.126845359802246
    8. ' sys' → logprob: -8.001845359802246
    9. ' (' → logprob: -9.501845359802246
    10. ' input' → logprob: -9.501845359802246

Token 184: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4412306249141693
    2. 'input' → logprob: -1.1912306547164917
    3. ' sys' → logprob: -3.191230535507202
    4. ' input' → logprob: -4.441230773925781
    5. '(sys' → logprob: -13.066230773925781
    6. 'stdin' → logprob: -13.191230773925781
    7. '=sys' → logprob: -14.191230773925781
    8. '	sys' → logprob: -14.691230773925781
    9. '   ' → logprob: -14.941230773925781
    10. ' ' → logprob: -15.691230773925781

Token 185: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -12.125012397766113
    3. '.readline' → logprob: -12.250012397766113
    4. '.argv' → logprob: -13.875012397766113
    5. '.stdout' → logprob: -14.125012397766113
    6. '.std' → logprob: -15.125012397766113
    7. '.input' → logprob: -15.250012397766113
    8. 'stdin' → logprob: -15.500012397766113
    9. '(stdin' → logprob: -17.37501335144043
    10. ' .' → logprob: -18.50001335144043

Token 186: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.968312951968983e-06
    2. '.read' → logprob: -12.000009536743164
    3. '.' → logprob: -12.625009536743164
    4. '.readlines' → logprob: -15.125009536743164
    5. '.stdin' → logprob: -16.250009536743164
    6. ').' → logprob: -16.250009536743164
    7. ')' → logprob: -18.250009536743164
    8. '().' → logprob: -18.250009536743164
    9. ' readline' → logprob: -18.375009536743164
    10. '.buffer' → logprob: -18.625009536743164

Token 187: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.60414821645827e-06
    2. '()' → logprob: -12.375004768371582
    3. '()))' → logprob: -15.500004768371582
    4. ' ().' → logprob: -16.625003814697266
    5. '(' → logprob: -18.250003814697266
    6. '())' → logprob: -20.000003814697266
    7. '.readline' → logprob: -20.125003814697266
    8. '()
' → logprob: -20.500003814697266
    9. '.strip' → logprob: -20.625003814697266
    10. '())))' → logprob: -20.625003814697266

Token 188: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008690915070474148
    2. 'rstrip' → logprob: -4.75869083404541
    3. 'split' → logprob: -9.75869083404541
    4. ' strip' → logprob: -11.25869083404541
    5. 'read' → logprob: -12.25869083404541
    6. ')' → logprob: -14.50869083404541
    7. 'decode' → logprob: -15.63369083404541
    8. '(strip' → logprob: -16.008691787719727
    9. '_strip' → logprob: -17.133691787719727
    10. '().' → logprob: -17.258691787719727

Token 189: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012149929068982601
    2. '()' → logprob: -4.512149810791016
    3. '))' → logprob: -7.012149810791016
    4. '())' → logprob: -8.887149810791016
    5. '()))
' → logprob: -10.387149810791016
    6. '(' → logprob: -10.512149810791016
    7. '()));' → logprob: -13.387149810791016
    8. '())))' → logprob: -13.887149810791016
    9. '(),' → logprob: -14.512149810791016
    10. '()))

' → logprob: -14.762149810791016

Token 190: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023666786029934883
    2. '
' → logprob: -4.273666858673096
    3. '#' → logprob: -4.773666858673096
    4. '\' → logprob: -8.273666381835938
    5. '\n' → logprob: -8.398666381835938
    6. '<|end|>' → logprob: -9.148666381835938
    7. ' 
' → logprob: -9.648666381835938
    8. '  
' → logprob: -10.023666381835938
    9. '

' → logprob: -10.023666381835938
    10. '    
' → logprob: -10.398666381835938

Token 191: ' I' (ID: 357)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.674286425113678
    2. 'I' → logprob: -1.9242863655090332
    3. ' main' → logprob: -2.174286365509033
    4. ' S' → logprob: -2.549286365509033
    5. 'LS' → logprob: -2.674286365509033
    6. 'SI' → logprob: -3.299286365509033
    7. 'L' → logprob: -4.674286365509033
    8. 'main' → logprob: -4.799286365509033
    9. ' SI' → logprob: -5.174286365509033
    10. ' LS' → logprob: -6.049286365509033

Token 192: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7884300947189331
    2. 'n' → logprob: -0.9134300947189331
    3. 'nt' → logprob: -2.2884302139282227
    4. 'N' → logprob: -3.7884302139282227
    5. '():' → logprob: -4.038430213928223
    6. 'nit' → logprob: -6.788430213928223
    7. '():
' → logprob: -7.163430213928223
    8. 'NT' → logprob: -8.163430213928223
    9. 'np' → logprob: -9.288430213928223
    10. 'D' → logprob: -10.038430213928223

Token 193: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006417401600629091
    2. '():
' → logprob: -5.506417274475098
    3. '()' → logprob: -6.256417274475098
    4. ':' → logprob: -8.006417274475098
    5. ' ():' → logprob: -9.756417274475098
    6. '):' → logprob: -11.506417274475098
    7. 'return' → logprob: -11.881417274475098
    8. ':
' → logprob: -12.756417274475098
    9. '():
' → logprob: -13.506417274475098
    10. ' ()' → logprob: -13.506417274475098

Token 194: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013441142626106739
    2. ' return' → logprob: -4.63844108581543
    3. '   ' → logprob: -5.63844108581543
    4. '
' → logprob: -10.26344108581543
    5. ')' → logprob: -10.76344108581543
    6. 'eturn' → logprob: -11.26344108581543
    7. ':return' → logprob: -11.76344108581543
    8. '    
' → logprob: -11.88844108581543
    9. '	return' → logprob: -12.26344108581543
    10. '"""' → logprob: -12.51344108581543

Token 195: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07424595952033997
    2. 'return' → logprob: -2.9492459297180176
    3. '):' → logprob: -4.574245929718018
    4. '   ' → logprob: -5.199245929718018
    5. ' return' → logprob: -6.949245929718018
    6. '()' → logprob: -7.824245929718018
    7. ':' → logprob: -8.324246406555176
    8. 'sys' → logprob: -8.324246406555176
    9. '")' → logprob: -8.574246406555176
    10. '  ' → logprob: -8.574246406555176

Token 196: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011715330183506012
    2. ' return' → logprob: -7.876171588897705
    3. 'def' → logprob: -7.876171588897705
    4. 'Lit' (adapté à ' Lit') → logprob: -8.751171112060547
    5. 'Lire' → logprob: -8.876171112060547
    6. '"""' → logprob: -10.251171112060547
    7. 'Retour' → logprob: -10.876171112060547
    8. '   ' → logprob: -11.251171112060547
    9. 'Return' → logprob: -11.376171112060547
    10. 'Reads' → logprob: -11.626171112060547

Token 197: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010961651569232345
    2. 'int' → logprob: -6.876096248626709
    3. ' ()' → logprob: -10.50109577178955
    4. 'a' → logprob: -11.75109577178955
    5. 'n' → logprob: -11.87609577178955
    6. 'nt' → logprob: -12.00109577178955
    7. '()
' → logprob: -13.12609577178955
    8. '().' → logprob: -13.12609577178955
    9. 'une' → logprob: -13.37609577178955
    10. '()

' → logprob: -13.62609577178955

Token 198: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.13982103765010834
    2. '()' → logprob: -2.6398210525512695
    3. 'l' → logprob: -3.6398210525512695
    4. 'int' → logprob: -4.2648210525512695
    5. ' ligne' → logprob: -4.5148210525512695
    6. 'line' → logprob: -5.3898210525512695
    7. 'ent' → logprob: -6.3898210525512695
    8. 'n' → logprob: -7.6398210525512695
    9. ' ()' → logprob: -9.01482105255127
    10. 'se' → logprob: -9.01482105255127

Token 199: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00935286283493042
    2. '().' → logprob: -5.259352684020996
    3. 'de' → logprob: -5.634352684020996
    4. ' de' → logprob: -8.009352684020996
    5. ')' → logprob: -10.009352684020996
    6. '()
' → logprob: -10.134352684020996
    7. 'def' → logprob: -10.509352684020996
    8. '())' → logprob: -10.509352684020996
    9. ' ()' → logprob: -11.134352684020996
    10. '()`' → logprob: -11.634352684020996

Token 200: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012805687263607979
    2. ' l' → logprob: -4.762805461883545
    3. 'sys' → logprob: -5.512805461883545
    4. ' sys' → logprob: -10.262805938720703
    5. 'input' → logprob: -10.387805938720703
    6. '(sys' → logprob: -10.512805938720703
    7. 'entrée' → logprob: -10.887805938720703
    8. 'code' → logprob: -11.762805938720703
    9. '=sys' → logprob: -12.512805938720703
    10. 's' → logprob: -12.762805938720703

Token 201: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.02400260791182518
    2. 'entrée' → logprob: -3.7740025520324707
    3. 'input' → logprob: -8.524003028869629
    4. 'stdin' → logprob: -9.024003028869629
    5. '’entrée' → logprob: -9.024003028869629
    6. '(stdin' → logprob: -9.399003028869629
    7. '_input' → logprob: -9.524003028869629
    8. ''ent' → logprob: -10.024003028869629
    9. '()' → logprob: -10.524003028869629
    10. ''' → logprob: -11.149003028869629

Token 202: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2590833604335785
    2. 'de' → logprob: -2.0090832710266113
    3. 'standard' → logprob: -2.7590832710266113
    4. ' standard' → logprob: -4.384083271026611
    5. ' de' → logprob: -4.884083271026611
    6. 'def' → logprob: -5.259083271026611
    7. '()
' → logprob: -6.009083271026611
    8. '().' → logprob: -6.259083271026611
    9. '   ' → logprob: -7.384083271026611
    10. ')' → logprob: -9.00908374786377

Token 203: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13802172243595123
    2. ')' → logprob: -2.76302170753479
    3. '().' → logprob: -2.76302170753479
    4. '()
' → logprob: -6.763021945953369
    5. 'def' → logprob: -7.138021945953369
    6. '   ' → logprob: -8.763021469116211
    7. '())' → logprob: -9.388021469116211
    8. '.' → logprob: -9.638021469116211
    9. ',' → logprob: -9.763021469116211
    10. '=' → logprob: -10.013021469116211

Token 204: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18664884567260742
    2. ' return' → logprob: -1.8116488456726074
    3. ' retourne' → logprob: -5.311648845672607
    4. 'ret' → logprob: -6.561648845672607
    5. 'ren' → logprob: -8.186649322509766
    6. ' ren' → logprob: -9.936649322509766
    7. '   ' → logprob: -10.061649322509766
    8. 'eturn' → logprob: -10.311649322509766
    9. ' retour' → logprob: -10.436649322509766
    10. '_return' → logprob: -10.686649322509766

Token 205: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.039749618619680405
    2. 'ret' → logprob: -3.6647496223449707
    3. 'convert' → logprob: -4.414749622344971
    4. 'int' → logprob: -7.414749622344971
    5. 'ren' → logprob: -7.789749622344971
    6. ' return' → logprob: -8.914749145507812
    7. ' retourne' → logprob: -9.414749145507812
    8. 'Retour' → logprob: -11.914749145507812
    9. 'conv' → logprob: -12.164749145507812
    10. 'eturn' → logprob: -12.414749145507812

Token 206: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.768316388130188
    2. 't' → logprob: -1.268316388130188
    3. 'ert' → logprob: -2.2683162689208984
    4. 'ite' → logprob: -2.7683162689208984
    5. 'e' → logprob: -3.1433162689208984
    6. 'return' → logprob: -4.268316268920898
    7. 'er' → logprob: -4.893316268920898
    8. 'rt' → logprob: -5.893316268920898
    9. 'ise' → logprob: -6.268316268920898
    10. 'te' → logprob: -6.518316268920898

Token 207: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031848405487835407
    2. ' en' → logprob: -6.128184795379639
    3. 'en' → logprob: -7.628184795379639
    4. 'int' → logprob: -8.128185272216797
    5. ' ()' → logprob: -8.753185272216797
    6. '().' → logprob: -10.878185272216797
    7. '()`' → logprob: -11.753185272216797
    8. 'into' → logprob: -12.253185272216797
    9. '())' → logprob: -12.253185272216797
    10. '`()' → logprob: -12.878185272216797

Token 208: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000158842682139948
    2. ' int' → logprob: -9.00015926361084
    3. 'ent' → logprob: -10.87515926361084
    4. 'un' → logprob: -11.37515926361084
    5. ' un' → logprob: -12.37515926361084
    6. ' entier' → logprob: -14.37515926361084
    7. '(int' → logprob: -16.500158309936523
    8. 'n' → logprob: -16.750158309936523
    9. 'integer' → logprob: -16.875158309936523
    10. '<int' → logprob: -17.250158309936523

Token 209: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.191489642835222e-05
    2. '().' → logprob: -10.375041961669922
    3. '()
' → logprob: -11.875041961669922
    4. ' ()' → logprob: -13.500041961669922
    5. 'def' → logprob: -14.750041961669922
    6. '()`' → logprob: -14.750041961669922
    7. ')' → logprob: -14.875041961669922
    8. '(' → logprob: -15.250041961669922
    9. '.' → logprob: -15.250041961669922
    10. '();' → logprob: -15.750041961669922

Token 210: '    
' (ID: 1944)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24811048805713654
    2. '()' → logprob: -2.12311053276062
    3. '():
' → logprob: -2.74811053276062
    4. '   ' → logprob: -4.123110294342041
    5. 'def' → logprob: -4.373110294342041
    6. '()
' → logprob: -4.998110294342041
    7. '):' → logprob: -8.9981107711792
    8. 'return' → logprob: -9.2481107711792
    9. '):
' → logprob: -10.1231107711792
    10. ')' → logprob: -10.1231107711792

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003412251826375723
    2. 'def' → logprob: -6.128412246704102
    3. '()' → logprob: -6.878412246704102
    4. 'return' → logprob: -9.003412246704102
    5. ' return' → logprob: -10.628412246704102
    6. '():' → logprob: -11.128412246704102
    7. '()
' → logprob: -11.253412246704102
    8. ')' → logprob: -12.128412246704102
    9. ' ' → logprob: -12.253412246704102
    10. ' def' → logprob: -13.128412246704102

Token 212: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008215418201871216
    2. '   ' → logprob: -7.750821590423584
    3. ' return' → logprob: -8.375821113586426
    4. 'Returns' (adapté à ' Returns') → logprob: -10.000821113586426
    5. '"""' → logprob: -10.125821113586426
    6. 'def' → logprob: -10.250821113586426
    7. '"""
' → logprob: -10.750821113586426
    8. 'Return' → logprob: -11.500821113586426
    9. '```' → logprob: -12.375821113586426
    10. 'Retour' → logprob: -13.625821113586426

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09763173758983612
    2. '():' → logprob: -2.4726316928863525
    3. '   ' → logprob: -5.222631931304932
    4. ':
' → logprob: -6.347631931304932
    5. ' :' → logprob: -8.472631454467773
    6. '):' → logprob: -8.597631454467773
    7. '(int' → logprob: -8.722631454467773
    8. '()' → logprob: -8.722631454467773
    9. 'int' → logprob: -9.097631454467773
    10. '():
' → logprob: -9.097631454467773

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04498171806335449
    2. 'int' → logprob: -3.1699817180633545
    3. ' int' → logprob: -6.294981956481934
    4. ':int' → logprob: -10.669981956481934
    5. '  ' → logprob: -10.794981956481934
    6. ':' → logprob: -10.794981956481934
    7. '       ' → logprob: -10.919981956481934
    8. '    ' → logprob: -10.919981956481934
    9. '[int' → logprob: -11.544981956481934
    10. '(int' → logprob: -12.044981956481934

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. 'return' → logprob: -17.25002098083496
    4. '   ' → logprob: -17.37502098083496
    5. '
' → logprob: -20.00002098083496
    6. '(int' → logprob: -20.12502098083496
    7. ':int' → logprob: -21.25002098083496
    8. '[int' → logprob: -21.25002098083496
    9. '=int' → logprob: -21.37502098083496
    10. '  ' → logprob: -22.00002098083496

Token 216: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002137294039130211
    2. ':
' → logprob: -6.252137184143066
    3. '):' → logprob: -9.002137184143066
    4. '():' → logprob: -10.252137184143066
    5. ':return' → logprob: -11.002137184143066
    6. '   ' → logprob: -11.752137184143066
    7. ')' → logprob: -11.877137184143066
    8. ' :' → logprob: -12.002137184143066
    9. '<|end|>' → logprob: -12.752137184143066
    10. '```' → logprob: -13.502137184143066

Token 217: ' Ent' (ID: 6815)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022422909736633
    2. ' int' → logprob: -1.910224199295044
    3. '(int' → logprob: -16.41022491455078
    4. '   ' → logprob: -17.03522491455078
    5. ' ' → logprob: -17.91022491455078
    6. 'ints' → logprob: -18.78522491455078
    7. '<int' → logprob: -18.78522491455078
    8. 'in' → logprob: -18.78522491455078
    9. '=int' → logprob: -18.78522491455078
    10. 'Int' → logprob: -19.16022491455078

Token 218: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.03586934879422188
    2. 'eger' → logprob: -4.285869121551514
    3. '   ' → logprob: -4.785869121551514
    4. 'e' → logprob: -4.910869121551514
    5. 'iere' → logprob: -6.660869121551514
    6. 'eg' → logprob: -6.785869121551514
    7. 'iers' → logprob: -6.785869121551514
    8. '```' → logprob: -7.535869121551514
    9. 'iert' → logprob: -8.535869598388672
    10. ':' → logprob: -8.660869598388672

Token 219: ' lu' (ID: 8620)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3685617744922638
    2. '<|end|>' → logprob: -1.6185617446899414
    3. '   ' → logprob: -3.9935617446899414
    4. ':' → logprob: -4.118561744689941
    5. '```' → logprob: -4.118561744689941
    6. ')' → logprob: -4.243561744689941
    7. ' =' → logprob: -4.868561744689941
    8. '(
' → logprob: -4.993561744689941
    9. '=' → logprob: -5.118561744689941
    10. '<|end|>' → logprob: -5.993561744689941

Token 220: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021154018118977547
    2. '():' → logprob: -3.8961539268493652
    3. '().' → logprob: -7.771153926849365
    4. '()
' → logprob: -9.521154403686523
    5. '():
' → logprob: -9.896154403686523
    6. ' ()' → logprob: -10.021154403686523
    7. '())' → logprob: -11.896154403686523
    8. '()`' → logprob: -12.021154403686523
    9. '()\' → logprob: -13.271154403686523
    10. ')' → logprob: -13.521154403686523

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012707763351500034
    2. '()' → logprob: -5.262707710266113
    3. '():' → logprob: -6.012707710266113
    4. '()
' → logprob: -6.762707710266113
    5. ')' → logprob: -7.137707710266113
    6. '():
' → logprob: -7.262707710266113
    7. 'def' → logprob: -7.387707710266113
    8. '
' → logprob: -7.637707710266113
    9. 'return' → logprob: -7.887707710266113
    10. ' return' → logprob: -8.262707710266113

Token 222: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00147557957097888
    2. ')' → logprob: -6.876475811004639
    3. 'return' → logprob: -8.87647533416748
    4. 'def' → logprob: -8.87647533416748
    5. '"""' → logprob: -10.00147533416748
    6. '
' → logprob: -10.12647533416748
    7. ' return' → logprob: -10.37647533416748
    8. '"""
' (adapté à ' """
') → logprob: -10.75147533416748
    9. ')
' → logprob: -11.62647533416748
    10. '       ' → logprob: -13.00147533416748

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014303706586360931
    2. 'return' → logprob: -4.264303684234619
    3. ' return' → logprob: -8.889304161071777
    4. '	return' → logprob: -13.514304161071777
    5. '   ' → logprob: -15.264304161071777
    6. 'def' → logprob: -16.01430320739746
    7. '  ' → logprob: -16.13930320739746
    8. ' ' → logprob: -16.13930320739746
    9. '    ' → logprob: -16.13930320739746
    10. '
' → logprob: -16.26430320739746

Token 224: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.5597102396423e-05
    2. ' return' → logprob: -10.250035285949707
    3. 'int' → logprob: -16.625036239624023
    4. '   ' → logprob: -20.125036239624023
    5. '
' → logprob: -20.500036239624023
    6. 'try' → logprob: -20.750036239624023
    7. 'Return' → logprob: -21.750036239624023
    8. 'def' → logprob: -21.750036239624023
    9. '{return' → logprob: -21.875036239624023
    10. 'eturn' → logprob: -22.375036239624023

Token 225: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750484973192215
    2. ' int' → logprob: -3.5297505855560303
    3. '(int' → logprob: -17.65475082397461
    4. ' ' → logprob: -18.52975082397461
    5. '	int' → logprob: -18.77975082397461
    6. '   ' → logprob: -19.40475082397461
    7. 'in' → logprob: -20.02975082397461
    8. '  ' → logprob: -20.02975082397461
    9. '<int' → logprob: -20.15475082397461
    10. '=int' → logprob: -20.52975082397461

Token 226: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0001242772996192798
    2. '(' → logprob: -9.000123977661133
    3. 'sys' → logprob: -14.125123977661133
    4. '(Sys' → logprob: -16.500123977661133
    5. '=sys' → logprob: -17.625123977661133
    6. '(system' → logprob: -17.750123977661133
    7. '(input' → logprob: -18.500123977661133
    8. ' (' → logprob: -18.625123977661133
    9. ' sys' → logprob: -18.875123977661133
    10. '(
' → logprob: -19.250123977661133

Token 227: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.6166903151315637e-05
    2. '.stdout' → logprob: -11.875016212463379
    3. '.' → logprob: -12.375016212463379
    4. 'stdin' → logprob: -13.000016212463379
    5. '.readline' → logprob: -13.125016212463379
    6. '(stdin' → logprob: -15.125016212463379
    7. ' stdin' → logprob: -16.000015258789062
    8. '.argv' → logprob: -16.125015258789062
    9. '.std' → logprob: -16.500015258789062
    10. ' .' → logprob: -16.500015258789062

Token 228: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5266380906105042
    2. '.stdin' → logprob: -0.9016380906105042
    3. '.' → logprob: -5.776638031005859
    4. '().' → logprob: -8.77663803100586
    5. '(stdin' → logprob: -9.15163803100586
    6. 'stdin' → logprob: -9.77663803100586
    7. '.stdout' → logprob: -10.40163803100586
    8. '.std' → logprob: -10.52663803100586
    9. ' .' → logprob: -11.02663803100586
    10. ').' → logprob: -12.15163803100586

Token 229: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07906097918748856
    2. '())' → logprob: -2.5790610313415527
    3. '()' → logprob: -8.704060554504395
    4. '.readline' → logprob: -12.704060554504395
    5. ')' → logprob: -14.079060554504395
    6. ' ())' → logprob: -14.079060554504395
    7. '();)' → logprob: -16.07906150817871
    8. '(' → logprob: -16.07906150817871
    9. '()[' → logprob: -16.32906150817871
    10. '()))' → logprob: -16.57906150817871

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001777960715116933
    2. '
' → logprob: -9.375177383422852
    3. '#' → logprob: -9.750177383422852
    4. '\' → logprob: -10.875177383422852
    5. '\n' → logprob: -12.375177383422852
    6. '

' → logprob: -12.375177383422852
    7. 'd' → logprob: -13.125177383422852
    8. 'de' → logprob: -13.375177383422852
    9. 'n' → logprob: -14.875177383422852
    10. 'class' → logprob: -14.875177383422852

Token 231: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07135379314422607
    2. '()' → logprob: -3.5713539123535156
    3. 's' → logprob: -4.321353912353516
    4. 'LS' → logprob: -4.571353912353516
    5. 'L' → logprob: -6.071353912353516
    6. 'D' → logprob: -6.321353912353516
    7. ' S' → logprob: -6.571353912353516
    8. 'main' → logprob: -6.696353912353516
    9. 'M' → logprob: -6.946353912353516
    10. '():' → logprob: -7.071353912353516

Token 232: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01693291775882244
    2. '()' → logprob: -4.516932964324951
    3. '():
' → logprob: -5.141932964324951
    4. '()>' → logprob: -11.891932487487793
    5. '():

' → logprob: -12.266932487487793
    6. ' ():' → logprob: -12.391932487487793
    7. ' ()' → logprob: -13.141932487487793
    8. '():
' → logprob: -13.641932487487793
    9. '().' → logprob: -14.016932487487793
    10. '()[' → logprob: -14.641932487487793

Token 233: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00026300468016415834
    2. '():
' → logprob: -8.250263214111328
    3. ' ():' → logprob: -13.750263214111328
    4. '()' → logprob: -14.500263214111328
    5. '():
' → logprob: -16.125263214111328
    6. 'def' → logprob: -17.000263214111328
    7. '():

' → logprob: -17.875263214111328
    8. ':' → logprob: -19.000263214111328
    9. '):' → logprob: -19.875263214111328
    10. '(' → logprob: -21.250263214111328

Token 234: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10055148601531982
    2. '():
' → logprob: -2.6005516052246094
    3. '()' → logprob: -3.8505516052246094
    4. 'def' → logprob: -9.10055160522461
    5. 'return' → logprob: -11.10055160522461
    6. '   ' → logprob: -11.60055160522461
    7. '()
' → logprob: -12.10055160522461
    8. '):' → logprob: -12.35055160522461
    9. '):
' → logprob: -12.72555160522461
    10. '():

' → logprob: -12.97555160522461

Token 235: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.19239352643489838
    2. 'def' → logprob: -2.4423935413360596
    3. '   ' → logprob: -2.9423935413360596
    4. '"""' → logprob: -3.8173935413360596
    5. '()' → logprob: -5.9423933029174805
    6. 'return' → logprob: -6.0673933029174805
    7. '()
' → logprob: -6.1923933029174805
    8. '"' → logprob: -6.3173933029174805
    9. '""' → logprob: -6.5673933029174805
    10. '")' → logprob: -6.9423933029174805

Token 236: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008881403133273125
    2. '"""
' → logprob: -5.133881568908691
    3. '   ' → logprob: -6.508881568908691
    4. '"""' → logprob: -6.883881568908691
    5. ' def' → logprob: -8.258881568908691
    6. 'return' → logprob: -9.633881568908691
    7. 'Lit' (adapté à ' Lit') → logprob: -9.883881568908691
    8. '()' → logprob: -10.633881568908691
    9. '
' → logprob: -12.008881568908691
    10. '""' → logprob: -12.633881568908691

Token 237: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4774729311466217
    2. 'une' → logprob: -1.2274729013442993
    3. ' une' → logprob: -2.477473020553589
    4. '().' → logprob: -6.22747278213501
    5. 'a' → logprob: -8.227473258972168
    6. ' ()' → logprob: -9.227473258972168
    7. 'un' → logprob: -9.602473258972168
    8. ' un' → logprob: -10.102473258972168
    9. 'sys' → logprob: -10.227473258972168
    10. 'una' → logprob: -10.852473258972168

Token 238: ' ligne' (ID: 19583)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.09602072834968567
    2. 'sys' → logprob: -3.0960206985473633
    3. 'line' → logprob: -4.596020698547363
    4. 'n' → logprob: -4.971020698547363
    5. '()' → logprob: -5.096020698547363
    6. '().' → logprob: -5.346020698547363
    7. 'ist' → logprob: -5.846020698547363
    8. 'strip' → logprob: -5.971020698547363
    9. 'ligne' → logprob: -6.346020698547363
    10. 'ne' → logprob: -6.346020698547363

Token 239: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2520279586315155
    2. '().' → logprob: -1.502027988433838
    3. 'de' → logprob: -10.50202751159668
    4. '()
' → logprob: -10.62702751159668
    5. '()

' → logprob: -11.62702751159668
    6. '())' → logprob: -12.00202751159668
    7. '()\' → logprob: -12.00202751159668
    8. '()[' → logprob: -12.25202751159668
    9. 'def' → logprob: -12.37702751159668
    10. '()`' → logprob: -12.75202751159668

Token 240: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.026974603533744812
    2. ' l' → logprob: -4.276974678039551
    3. 'sys' → logprob: -4.526974678039551
    4. '(sys' → logprob: -7.151974678039551
    5. 'la' → logprob: -7.901974678039551
    6. '()' → logprob: -8.40197467803955
    7. 'input' → logprob: -8.52697467803955
    8. ' sys' → logprob: -8.65197467803955
    9. '=sys' → logprob: -10.15197467803955
    10. 's' → logprob: -10.90197467803955

Token 241: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.036888282746076584
    2. 'entrée' → logprob: -4.036888122558594
    3. 'input' → logprob: -4.536888122558594
    4. 'stdin' → logprob: -6.036888122558594
    5. 'e' → logprob: -6.661888122558594
    6. 'sys' → logprob: -7.036888122558594
    7. '=sys' → logprob: -7.036888122558594
    8. 'es' → logprob: -7.536888122558594
    9. '’entrée' → logprob: -7.786888122558594
    10. '_input' → logprob: -7.911888122558594

Token 242: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7658578157424927
    2. 'standard' → logprob: -0.8908578157424927
    3. 'de' → logprob: -2.890857696533203
    4. 'def' → logprob: -3.515857696533203
    5. '_standard' → logprob: -4.640857696533203
    6. '_std' → logprob: -5.015857696533203
    7. '_' → logprob: -5.515857696533203
    8. ' standard' → logprob: -5.515857696533203
    9. 'from' → logprob: -6.390857696533203
    10. 'e' → logprob: -6.765857696533203

Token 243: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22714665532112122
    2. '()' → logprob: -1.6021466255187988
    3. 'def' → logprob: -7.102146625518799
    4. ')' → logprob: -7.227146625518799
    5. '()
' → logprob: -9.102147102355957
    6. '())' → logprob: -11.352147102355957
    7. '   ' → logprob: -11.352147102355957
    8. 'et' → logprob: -11.602147102355957
    9. 'return' → logprob: -11.602147102355957
    10. ').' → logprob: -11.852147102355957

Token 244: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45723405480384827
    2. 'strip' → logprob: -1.9572340250015259
    3. ' strip' → logprob: -2.7072341442108154
    4. 'def' → logprob: -2.8322341442108154
    5. '.strip' → logprob: -3.5822341442108154
    6. 'return' → logprob: -3.7072341442108154
    7. ' def' → logprob: -3.9572341442108154
    8. '   ' → logprob: -4.582233905792236
    9. ' retourne' → logprob: -4.582233905792236
    10. 'rstrip' → logprob: -5.832233905792236

Token 245: ' netto' (ID: 49223)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.007650522515177727
    2. 'rstrip' → logprob: -5.507650375366211
    3. ' strip' → logprob: -5.882650375366211
    4. 'split' → logprob: -7.257650375366211
    5. '.strip' → logprob: -10.132650375366211
    6. 'replace' → logprob: -10.632650375366211
    7. ' split' → logprob: -12.882650375366211
    8. 'str' → logprob: -13.257650375366211
    9. 'return' → logprob: -13.257650375366211
    10. 'def' → logprob: -13.757650375366211

Token 246: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0943635031580925
    2. 'ye' → logprob: -3.2193634510040283
    3. 'yage' → logprob: -3.9693634510040283
    4. 'yer' → logprob: -4.469363689422607
    5. 'ya' → logprob: -5.094363689422607
    6. 'uye' → logprob: -5.719363689422607
    7. 'ant' → logprob: -6.469363689422607
    8. 'ie' → logprob: -6.719363689422607
    9. 'a' → logprob: -6.844363689422607
    10. 'e' → logprob: -6.969363689422607

Token 247: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.020682260394096375
    2. '()' → logprob: -3.8956823348999023
    3. ',' → logprob: -9.645682334899902
    4. '(),' → logprob: -10.270682334899902
    5. ')' → logprob: -10.895682334899902
    6. '()
' → logprob: -12.020682334899902
    7. '.' → logprob: -12.145682334899902
    8. ').' → logprob: -12.770682334899902
    9. '   ' → logprob: -12.770682334899902
    10. '(' → logprob: -13.395682334899902

Token 248: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6025266647338867
    2. ' la' → logprob: -0.9775266647338867
    3. 'split' → logprob: -2.8525266647338867
    4. 'return' → logprob: -4.727526664733887
    5. 'spl' → logprob: -5.602526664733887
    6. ' retourne' → logprob: -6.102526664733887
    7. ' split' → logprob: -6.352526664733887
    8. ' return' → logprob: -7.102526664733887
    9. 'ren' → logprob: -7.977526664733887
    10. '.split' → logprob: -8.352526664733887

Token 249: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31457504630088806
    2. 'strip' → logprob: -1.3145750761032104
    3. 'rstrip' → logprob: -7.1895751953125
    4. ' split' → logprob: -8.1895751953125
    5. 'return' → logprob: -8.5645751953125
    6. ' strip' → logprob: -9.6895751953125
    7. '.strip' → logprob: -10.9395751953125
    8. '.split' → logprob: -12.0645751953125
    9. ' return' → logprob: -12.5645751953125
    10. 'list' → logprob: -15.5645751953125

Token 250: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0022601638920605183
    2. 'p' → logprob: -6.377260208129883
    3. 'pte' → logprob: -8.377260208129883
    4. 'page' → logprob: -8.627260208129883
    5. 'per' → logprob: -9.752260208129883
    6. 'ppe' → logprob: -10.627260208129883
    7. 'pa' → logprob: -10.752260208129883
    8. 'ple' → logprob: -11.377260208129883
    9. '```' → logprob: -11.502260208129883
    10. 'пе' → logprob: -12.627260208129883

Token 251: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014551045373082161
    2. '().' → logprob: -4.264551162719727
    3. '()
' → logprob: -8.014551162719727
    4. '.' → logprob: -11.264551162719727
    5. ' ()' → logprob: -11.639551162719727
    6. '()[' → logprob: -11.639551162719727
    7. '(' → logprob: -12.014551162719727
    8. '()`' → logprob: -12.264551162719727
    9. 'def' → logprob: -12.764551162719727
    10. ')' → logprob: -12.889551162719727

Token 252: ' une' (ID: 2463)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.28076043725013733
    2. 'liste' → logprob: -2.6557605266571045
    3. ' mots' → logprob: -3.0307605266571045
    4. ' list' → logprob: -3.1557605266571045
    5. 'list' → logprob: -3.1557605266571045
    6. ' listes' → logprob: -4.030760288238525
    7. 'tokens' → logprob: -4.530760288238525
    8. ' tokens' → logprob: -4.655760288238525
    9. ' une' → logprob: -6.905760288238525
    10. ' chaînes' → logprob: -7.655760288238525

Token 253: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5584293603897095
    2. ' liste' → logprob: -1.0584293603897095
    3. 'list' → logprob: -2.55842924118042
    4. ' list' → logprob: -5.68342924118042
    5. 'Liste' → logprob: -10.683429718017578
    6. 'lst' → logprob: -11.183429718017578
    7. 'lista' → logprob: -11.808429718017578
    8. 'str' → logprob: -12.183429718017578
    9. 'l' → logprob: -12.808429718017578
    10. 's' → logprob: -12.933429718017578

Token 254: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019697926472872496
    2. '().' → logprob: -7.126969814300537
    3. '[str' → logprob: -7.501969814300537
    4. 'de' → logprob: -9.001969337463379
    5. '()
' → logprob: -9.251969337463379
    6. 'str' → logprob: -9.251969337463379
    7. '(str' → logprob: -10.001969337463379
    8. '()[' → logprob: -10.251969337463379
    9. '   ' → logprob: -10.376969337463379
    10. 'def' → logprob: -10.501969337463379

Token 255: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.592179536819458
    2. 'str' → logprob: -1.717179536819458
    3. 'strings' → logprob: -2.092179536819458
    4. 'cha' → logprob: -2.592179536819458
    5. 'chain' → logprob: -3.217179536819458
    6. ' mots' → logprob: -4.592179298400879
    7. 'm' → logprob: -4.842179298400879
    8. ' chain' → logprob: -5.592179298400879
    9. 'string' → logprob: -5.842179298400879
    10. 'chaine' → logprob: -6.467179298400879

Token 256: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21012577414512634
    2. 'de' → logprob: -1.8351258039474487
    3. ' de' → logprob: -4.710125923156738
    4. '().' → logprob: -4.960125923156738
    5. '(str' → logprob: -5.585125923156738
    6. '[str' → logprob: -6.335125923156738
    7. 'str' → logprob: -6.585125923156738
    8. '.' → logprob: -6.710125923156738
    9. '(strings' → logprob: -6.960125923156738
    10. 'tokens' → logprob: -7.710125923156738

Token 257: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0080860061571002
    2. 'def' → logprob: -5.383086204528809
    3. 'return' → logprob: -6.508086204528809
    4. '    
' → logprob: -7.758086204528809
    5. '()
' → logprob: -7.758086204528809
    6. ' return' → logprob: -8.008086204528809
    7. '```' → logprob: -8.383086204528809
    8. '  
' → logprob: -8.883086204528809
    9. '
' → logprob: -9.008086204528809
    10. '()' → logprob: -9.008086204528809

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006901851389557123
    2. 'return' → logprob: -5.131901741027832
    3. 'def' → logprob: -7.256901741027832
    4. ' return' → logprob: -8.506901741027832
    5. '```' → logprob: -10.631901741027832
    6. '    
' → logprob: -10.881901741027832
    7. ' ' → logprob: -12.381901741027832
    8. '  ' → logprob: -12.631901741027832
    9. '	return' → logprob: -13.006901741027832
    10. '[]' → logprob: -13.131901741027832

Token 259: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0224741343408823
    2. ' return' → logprob: -4.39747428894043
    3. '   ' → logprob: -4.89747428894043
    4. 'def' → logprob: -6.02247428894043
    5. '```' → logprob: -11.02247428894043
    6. '"""
' → logprob: -12.77247428894043
    7. '	return' → logprob: -12.89747428894043
    8. ' ' → logprob: -13.14747428894043
    9. ':return' → logprob: -14.77247428894043
    10. '``' → logprob: -15.02247428894043

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07630914449691772
    2. '():' → logprob: -3.0763092041015625
    3. ':
' → logprob: -4.2013092041015625
    4. '()' → logprob: -5.3263092041015625
    5. '   ' → logprob: -5.7013092041015625
    6. '():
' → logprob: -5.8263092041015625
    7. ':list' → logprob: -7.8263092041015625
    8. '=' → logprob: -8.576309204101562
    9. ' =' → logprob: -9.076309204101562
    10. ':return' → logprob: -9.451309204101562

Token 261: '       ' (ID: 309)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6287394762039185
    2. ' list' → logprob: -0.8787394762039185
    3. '   ' → logprob: -3.003739356994629
    4. 'str' → logprob: -6.503739356994629
    5. ' str' → logprob: -8.878739356994629
    6. 'string' → logprob: -9.253739356994629
    7. 'List' → logprob: -9.628739356994629
    8. '[str' → logprob: -11.503739356994629
    9. '[string' → logprob: -13.003739356994629
    10. '       ' → logprob: -13.253739356994629

Token 262: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.003105345880612731
    2. ' list' → logprob: -5.878105163574219
    3. 'str' → logprob: -8.128105163574219
    4. 'List' → logprob: -12.753105163574219
    5. ' str' → logprob: -14.003105163574219
    6. 'string' → logprob: -14.253105163574219
    7. '[str' → logprob: -15.003105163574219
    8. '   ' → logprob: -15.128105163574219
    9. '[list' → logprob: -15.628105163574219
    10. 'strings' → logprob: -16.75310516357422

Token 263: ':' (ID: 25)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.46525830030441284
    2. '(str' → logprob: -1.0902583599090576
    3. ':' → logprob: -3.4652583599090576
    4. '(' → logprob: -6.8402581214904785
    5. '()' → logprob: -7.2152581214904785
    6. '=str' → logprob: -7.2152581214904785
    7. '   ' → logprob: -7.5902581214904785
    8. ':str' → logprob: -8.215258598327637
    9. ' =' → logprob: -8.340258598327637
    10. 'str' → logprob: -8.590258598327637

Token 264: ' Liste' (ID: 61030)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.11293540149927139
    2. ' sys' → logprob: -2.7379353046417236
    3. 'str' → logprob: -3.2379353046417236
    4. ' str' → logprob: -6.237935543060303
    5. 'string' → logprob: -7.987935543060303
    6. 'list' → logprob: -8.362935066223145
    7. '[str' → logprob: -8.862935066223145
    8. '(sys' → logprob: -9.862935066223145
    9. ' list' → logprob: -9.987935066223145
    10. 'strings' → logprob: -10.237935066223145

Token 265: ' des' (ID: 731)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.6280650496482849
    2. '<|end|>' → logprob: -1.7530651092529297
    3. '(str' → logprob: -1.8780651092529297
    4. ' of' → logprob: -3.1280651092529297
    5. '(' → logprob: -3.2530651092529297
    6. '()' → logprob: -4.50306510925293
    7. '(sys' → logprob: -4.50306510925293
    8. 'de' → logprob: -5.25306510925293
    9. '(strings' → logprob: -5.25306510925293
    10. ' de' → logprob: -5.50306510925293

Token 266: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.19747762382030487
    2. 'strings' → logprob: -1.9474775791168213
    3. 'string' → logprob: -3.9474775791168213
    4. ' chaînes' → logprob: -4.8224778175354
    5. ' strings' → logprob: -5.1974778175354
    6. ' str' → logprob: -5.9474778175354
    7. ' string' → logprob: -8.197477340698242
    8. 'chain' → logprob: -8.197477340698242
    9. 'chaine' → logprob: -8.322477340698242
    10. ' chain' → logprob: -8.947477340698242

Token 267: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10017712414264679
    2. '().' → logprob: -2.600177049636841
    3. 'str' → logprob: -4.85017728805542
    4. '(str' → logprob: -4.97517728805542
    5. '.strip' → logprob: -6.35017728805542
    6. '[str' → logprob: -6.47517728805542
    7. '.split' → logprob: -7.60017728805542
    8. '```' → logprob: -7.97517728805542
    9. '<|end|>' → logprob: -8.100176811218262
    10. '   ' → logprob: -8.475176811218262

Token 268: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.005735029000788927
    2. 'ue' → logprob: -5.380734920501709
    3. 'isées' → logprob: -7.255734920501709
    4. 'ecture' → logprob: -8.630735397338867
    5. 'u' → logprob: -9.630735397338867
    6. 'ist' → logprob: -10.380735397338867
    7. '```' → logprob: -10.630735397338867
    8. 'is' → logprob: -10.755735397338867
    9. 'ect' → logprob: -11.505735397338867
    10. 'istes' → logprob: -11.755735397338867

Token 269: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02335985004901886
    2. '().' → logprob: -4.273359775543213
    3. '()
' → logprob: -5.273359775543213
    4. '   ' → logprob: -6.148359775543213
    5. '.' → logprob: -6.523359775543213
    6. ')' → logprob: -8.398360252380371
    7. 'def' → logprob: -11.023360252380371
    8. '[]' → logprob: -11.148360252380371
    9. '()

' → logprob: -11.273360252380371
    10. '()`' → logprob: -11.398360252380371

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03538215905427933
    2. '()' → logprob: -3.9103822708129883
    3. '()
' → logprob: -4.410382270812988
    4. 'def' → logprob: -7.160382270812988
    5. '[]' → logprob: -8.035382270812988
    6. '```' → logprob: -8.285382270812988
    7. ')' → logprob: -8.410382270812988
    8. '[]
' → logprob: -8.535382270812988
    9. '<|end|>' → logprob: -8.660382270812988
    10. '"""
' → logprob: -8.785382270812988

Token 271: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002883913984987885
    2. 'return' → logprob: -8.875288009643555
    3. ' return' → logprob: -9.500288009643555
    4. '```' → logprob: -10.875288009643555
    5. 'def' → logprob: -11.000288009643555
    6. '
' → logprob: -11.375288009643555
    7. '"""' → logprob: -11.625288009643555
    8. '"""
' (adapté à ' """
') → logprob: -12.250288009643555
    9. ' ' → logprob: -12.500288009643555
    10. '  ' → logprob: -12.625288009643555

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005862074438482523
    2. 'return' → logprob: -5.255862236022949
    3. ' return' → logprob: -7.380862236022949
    4. '	return' → logprob: -12.63086223602295
    5. '```' → logprob: -14.00586223602295
    6. ' ' → logprob: -14.88086223602295
    7. '  ' → logprob: -15.38086223602295
    8. 'def' → logprob: -15.63086223602295
    9. '   ' → logprob: -15.75586223602295
    10. '    ' → logprob: -16.630861282348633

Token 273: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.73183855926618e-05
    2. ' return' → logprob: -9.750077247619629
    3. '   ' → logprob: -10.875077247619629
    4. '```' → logprob: -17.500078201293945
    5. '	return' → logprob: -17.875078201293945
    6. '
' → logprob: -18.750078201293945
    7. 'ret' → logprob: -19.875078201293945
    8. '    
' → logprob: -20.125078201293945
    9. 'eturn' → logprob: -20.250078201293945
    10. ' ' → logprob: -20.625078201293945

Token 274: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0013123786775395274
    2. ' sys' → logprob: -6.751312255859375
    3. 'list' → logprob: -8.876312255859375
    4. 'input' → logprob: -13.751312255859375
    5. ' list' → logprob: -14.126312255859375
    6. '(sys' → logprob: -14.501312255859375
    7. '[' → logprob: -15.751312255859375
    8. 'string' → logprob: -17.251312255859375
    9. '=sys' → logprob: -17.751312255859375
    10. '	sys' → logprob: -18.126312255859375

Token 275: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.613945101387799e-05
    2. '.stdout' → logprob: -9.375085830688477
    3. '.argv' → logprob: -14.625085830688477
    4. 'stdin' → logprob: -14.625085830688477
    5. '.' → logprob: -15.625085830688477
    6. '.std' → logprob: -16.000085830688477
    7. '.readline' → logprob: -17.750085830688477
    8. '.stderr' → logprob: -17.750085830688477
    9. '(stdin' → logprob: -17.750085830688477
    10. ' stdin' → logprob: -18.875085830688477

Token 276: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.62500286102295
    3. '.stdin' → logprob: -13.75000286102295
    4. '.read' → logprob: -16.000001907348633
    5. '().' → logprob: -16.000001907348633
    6. '.readlines' → logprob: -16.750001907348633
    7. '.stdout' → logprob: -17.500001907348633
    8. ' readline' → logprob: -18.750001907348633
    9. '.rstrip' → logprob: -18.875001907348633
    10. ' .' → logprob: -19.125001907348633

Token 277: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00010306637705070898
    2. '.read' → logprob: -9.250102996826172
    3. '.readlines' → logprob: -12.625102996826172
    4. '.decode' → logprob: -13.500102996826172
    5. '.rstrip' → logprob: -13.750102996826172
    6. '.raw' → logprob: -14.125102996826172
    7. ' readline' → logprob: -15.000102996826172
    8. '.' → logprob: -17.500102996826172
    9. '.peek' → logprob: -17.500102996826172
    10. 'read' → logprob: -19.125102996826172

Token 278: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009125363430939615
    2. '()' → logprob: -7.000912666320801
    3. '(' → logprob: -15.1259126663208
    4. '().__' → logprob: -16.000911712646484
    5. '()-' → logprob: -16.125911712646484
    6. '()).' → logprob: -16.125911712646484
    7. '.rstrip' → logprob: -16.125911712646484
    8. ' ().' → logprob: -16.375911712646484
    9. '()
' → logprob: -17.125911712646484
    10. '().'' → logprob: -17.625911712646484

Token 279: 'rstrip' (ID: 180429)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.40761980414390564
    2. 'rstrip' → logprob: -1.407619833946228
    3. 'strip' → logprob: -2.4076197147369385
    4. 'split' → logprob: -11.28261947631836
    5. ' decode' → logprob: -14.53261947631836
    6. 'raw' → logprob: -15.15761947631836
    7. '.rstrip' → logprob: -15.53261947631836
    8. '.decode' → logprob: -16.40761947631836
    9. ' strip' → logprob: -16.53261947631836
    10. 'replace' → logprob: -16.90761947631836

Token 280: '().' (ID: 1454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.46780237555503845
    2. '(b' → logprob: -1.0928024053573608
    3. '().' → logprob: -3.4678022861480713
    4. '()' → logprob: -4.96780252456665
    5. '(' → logprob: -9.342802047729492
    6. ' b' → logprob: -10.342802047729492
    7. '()\' → logprob: -10.467802047729492
    8. '())' → logprob: -11.717802047729492
    9. '```' → logprob: -12.217802047729492
    10. '	b' → logprob: -12.217802047729492

Token 281: 'decode' (ID: 44196)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008615872822701931
    2. 'decode' → logprob: -4.758615970611572
    3. ' split' → logprob: -14.508615493774414
    4. '(split' → logprob: -15.133615493774414
    5. '.split' → logprob: -15.258615493774414
    6. '_split' → logprob: -16.133615493774414
    7. 'rstrip' → logprob: -16.383615493774414
    8. 'spl' → logprob: -16.633615493774414
    9. 'strip' → logprob: -16.883615493774414
    10. '.decode' → logprob: -17.258615493774414

Token 282: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007723033428192139
    2. '().' → logprob: -5.257722854614258
    3. '('' → logprob: -6.132722854614258
    4. '(' → logprob: -8.632722854614258
    5. '("' → logprob: -10.007722854614258
    6. '()[' → logprob: -10.632722854614258
    7. '();' → logprob: -10.882722854614258
    8. '()='' → logprob: -11.382722854614258
    9. '().'' → logprob: -11.757722854614258
    10. '(),' → logprob: -12.382722854614258

Token 283: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.00043102685594931245
    2. 'ascii' → logprob: -7.750431060791016
    3. ' utf' → logprob: -15.625431060791016
    4. 'UTF' → logprob: -15.750431060791016
    5. 'unicode' → logprob: -16.500431060791016
    6. '_utf' → logprob: -18.875431060791016
    7. 'Utf' → logprob: -19.125431060791016
    8. ' ascii' → logprob: -19.250431060791016
    9. 'latin' → logprob: -19.250431060791016
    10. 'uft' → logprob: -20.250431060791016

Token 284: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014163747429847717
    2. '8' → logprob: -4.264163970947266
    3. 'utf' → logprob: -16.014163970947266
    4. '‑' → logprob: -17.139163970947266
    5. '```' → logprob: -17.389163970947266
    6. '=utf' → logprob: -18.389163970947266
    7. ''-' → logprob: -18.389163970947266
    8. '_' → logprob: -18.639163970947266
    9. '')' → logprob: -19.014163970947266
    10. '-
' → logprob: -19.514163970947266

Token 285: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.3140260577201843
    2. '8' → logprob: -1.314026117324829
    3. 'ascii' → logprob: -7.31402587890625
    4. 'UTF' → logprob: -10.06402587890625
    5. ' utf' → logprob: -10.31402587890625
    6. 'Utf' → logprob: -11.93902587890625
    7. '')' → logprob: -12.31402587890625
    8. '_utf' → logprob: -12.93902587890625
    9. '```' → logprob: -13.06402587890625
    10. 'encoding' → logprob: -13.56402587890625

Token 286: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.1441994607448578
    2. ').' → logprob: -2.1441993713378906
    3. ')' → logprob: -4.644199371337891
    4. '()).' → logprob: -5.394199371337891
    5. '')' → logprob: -6.394199371337891
    6. '()' → logprob: -7.394199371337891
    7. '").' → logprob: -7.644199371337891
    8. '())' → logprob: -9.51919937133789
    9. '().' → logprob: -10.01919937133789
    10. ')').' → logprob: -10.51919937133789

Token 287: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000575432030018419
    2. 'strip' → logprob: -7.500575542449951
    3. 'decode' → logprob: -11.250575065612793
    4. 'rstrip' → logprob: -11.625575065612793
    5. 'spl' → logprob: -15.375575065612793
    6. ' split' → logprob: -15.500575065612793
    7. '(split' → logprob: -17.37557601928711
    8. '.split' → logprob: -19.50057601928711
    9. 'replace' → logprob: -19.50057601928711
    10. '_split' → logprob: -20.00057601928711

Token 288: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000374546303646639
    2. '(' → logprob: -8.125374794006348
    3. '('' → logprob: -9.500374794006348
    4. '()]' → logprob: -13.375374794006348
    5. '())' → logprob: -14.375374794006348
    6. '("' → logprob: -14.875374794006348
    7. '()
' → logprob: -15.375374794006348
    8. '()"' → logprob: -15.750374794006348
    9. ' ()' → logprob: -15.875374794006348
    10. '('.')' → logprob: -16.25037384033203

Token 289: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002243154216557741
    2. '
' → logprob: -6.6272430419921875
    3. '<|end|>' → logprob: -7.2522430419921875
    4. '#' → logprob: -9.377243041992188
    5. '

' → logprob: -10.252243041992188
    6. '\n' → logprob: -10.752243041992188
    7. '<|end|>' → logprob: -11.377243041992188
    8. '```' → logprob: -11.502243041992188
    9. 'newline' → logprob: -11.752243041992188
    10. ')' → logprob: -11.752243041992188

Token 290: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02963927760720253
    2. 'I' → logprob: -5.02963924407959
    3. 'SS' → logprob: -5.02963924407959
    4. 'L' → logprob: -5.52963924407959
    5. 's' → logprob: -6.15463924407959
    6. '()' → logprob: -6.27963924407959
    7. 'input' → logprob: -6.65463924407959
    8. 'string' → logprob: -6.77963924407959
    9. 'LS' → logprob: -6.77963924407959
    10. 'A' → logprob: -6.90463924407959

Token 291: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005121642025187612
    2. '()' → logprob: -8.12551212310791
    3. '():
' → logprob: -8.50051212310791
    4. ' ():' → logprob: -11.37551212310791
    5. '():

' → logprob: -15.00051212310791
    6. ' ()' → logprob: -15.25051212310791
    7. '()>' → logprob: -15.25051212310791
    8. '():
' → logprob: -15.75051212310791
    9. '().' → logprob: -16.500513076782227
    10. '(' → logprob: -17.375513076782227

Token 292: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004596268758177757
    2. '():
' → logprob: -5.75459623336792
    3. '()' → logprob: -6.87959623336792
    4. '):' → logprob: -8.629596710205078
    5. ':' → logprob: -9.129596710205078
    6. '   ' → logprob: -10.129596710205078
    7. '(' → logprob: -10.379596710205078
    8. ' ():' → logprob: -12.004596710205078
    9. '():

' → logprob: -12.629596710205078
    10. ')' → logprob: -12.879596710205078

Token 293: ' """
' (ID: 7037)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1286250352859497
    2. 'return' → logprob: -1.2536250352859497
    3. '()' → logprob: -1.6286250352859497
    4. '   ' → logprob: -2.12862491607666
    5. '():' → logprob: -4.37862491607666
    6. '=sys' → logprob: -4.75362491607666
    7. 'def' → logprob: -5.00362491607666
    8. '"""
' (adapté à ' """
') → logprob: -5.12862491607666
    9. ' =' → logprob: -5.12862491607666
    10. '
' → logprob: -5.25362491607666

Token 294: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.8196531534194946
    2. '   ' → logprob: -0.9446531534194946
    3. 'return' → logprob: -2.194653034210205
    4. 'sys' → logprob: -3.069653034210205
    5. '"""' → logprob: -5.319653034210205
    6. '""' → logprob: -5.694653034210205
    7. ')' → logprob: -6.694653034210205
    8. 'def' → logprob: -6.944653034210205
    9. '):
' → logprob: -7.069653034210205
    10. ' return' → logprob: -7.944653034210205

Token 295: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11739379167556763
    2. 'def' → logprob: -2.742393732070923
    3. 'sys' → logprob: -3.242393732070923
    4. '"""
' → logprob: -5.742393970489502
    5. '"""' → logprob: -5.992393970489502
    6. ' return' → logprob: -7.867393970489502
    7. '```' → logprob: -7.867393970489502
    8. 's' → logprob: -8.367393493652344
    9. '()' → logprob: -8.867393493652344
    10. '   ' → logprob: -8.867393493652344

Token 296: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06482580304145813
    2. ' une' → logprob: -3.1898257732391357
    3. 'une' → logprob: -4.189826011657715
    4. 'a' → logprob: -5.689826011657715
    5. '<|end|>' → logprob: -7.189826011657715
    6. ' a' → logprob: -7.564826011657715
    7. '():' → logprob: -8.064826011657715
    8. ' ()' → logprob: -8.439826011657715
    9. '().' → logprob: -8.939826011657715
    10. '```' → logprob: -9.064826011657715

Token 297: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.04275982454419136
    2. ' ligne' → logprob: -3.792759895324707
    3. 'line' → logprob: -4.542759895324707
    4. '()' → logprob: -4.917759895324707
    5. 'l' → logprob: -6.917759895324707
    6. 'chaine' → logprob: -8.917759895324707
    7. 'string' → logprob: -9.792759895324707
    8. ' line' → logprob: -10.542759895324707
    9. 'lin' → logprob: -11.042759895324707
    10. 'sys' → logprob: -11.167759895324707

Token 298: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016430921852588654
    2. '().' → logprob: -4.141430854797363
    3. '()
' → logprob: -9.141430854797363
    4. '<|end|>' → logprob: -9.391430854797363
    5. '()[' → logprob: -9.891430854797363
    6. 'def' → logprob: -10.516430854797363
    7. '(' → logprob: -11.141430854797363
    8. ')' → logprob: -11.391430854797363
    9. '()

' → logprob: -11.641430854797363
    10. '   ' → logprob: -11.766430854797363

Token 299: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0647987648844719
    2. 'sys' → logprob: -2.8147988319396973
    3. ' l' → logprob: -6.189798831939697
    4. ' sys' → logprob: -7.689798831939697
    5. 'input' → logprob: -9.064798355102539
    6. '(sys' → logprob: -9.064798355102539
    7. 'la' → logprob: -10.564798355102539
    8. 'chaine' → logprob: -10.814798355102539
    9. 'entrée' → logprob: -11.064798355102539
    10. '=sys' → logprob: -11.939798355102539

Token 300: ''entrée' (ID: 115820)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008564318413846195
    2. 'entrée' → logprob: -7.375856399536133
    3. ''entrée' → logprob: -9.250856399536133
    4. 'input' → logprob: -9.875856399536133
    5. 'stdin' → logprob: -10.250856399536133
    6. 'entrada' → logprob: -11.875856399536133
    7. 'put' → logprob: -12.125856399536133
    8. 'ent' → logprob: -12.125856399536133
    9. 'in' → logprob: -12.250856399536133
    10. '_n' → logprob: -12.250856399536133

Token 301: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011460528476163745
    2. '()
' → logprob: -7.376145839691162
    3. '().' → logprob: -7.876145839691162
    4. 'def' → logprob: -10.50114631652832
    5. ')' → logprob: -10.87614631652832
    6. ' ()' → logprob: -11.12614631652832
    7. '()\' → logprob: -11.12614631652832
    8. '():' → logprob: -11.25114631652832
    9. '   ' → logprob: -12.00114631652832
    10. '()[' → logprob: -12.37614631652832

Token 302: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18069782853126526
    2. '()' → logprob: -1.8056977987289429
    3. ')' → logprob: -7.680697917938232
    4. 'def' → logprob: -8.805697441101074
    5. '()
' → logprob: -9.430697441101074
    6. '.readline' → logprob: -9.680697441101074
    7. 'rstrip' → logprob: -10.430697441101074
    8. '.' → logprob: -10.555697441101074
    9. '<|end|>' → logprob: -10.805697441101074
    10. '.rstrip' → logprob: -10.805697441101074

Token 303: ' la' (ID: 557)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.047442641109228134
    2. 'return' → logprob: -3.297442674636841
    3. ' return' → logprob: -5.547442436218262
    4. 'strip' → logprob: -5.672442436218262
    5. '.rstrip' → logprob: -6.672442436218262
    6. ' returns' → logprob: -8.672442436218262
    7. 'sys' → logprob: -8.672442436218262
    8. ' strip' → logprob: -9.297442436218262
    9. 'returns' → logprob: -9.547442436218262
    10. '.strip' → logprob: -9.922442436218262

Token 304: ' retourne' (ID: 178818)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5765047669410706
    2. 'rstrip' → logprob: -0.8265047669410706
    3. 'return' → logprob: -7.576504707336426
    4. '.rstrip' → logprob: -10.326504707336426
    5. '.strip' → logprob: -11.826504707336426
    6. 'decode' → logprob: -11.951504707336426
    7. ' strip' → logprob: -12.576504707336426
    8. '_strip' → logprob: -13.951504707336426
    9. '(strip' → logprob: -14.451504707336426
    10. 'str' → logprob: -14.701504707336426

Token 305: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008714438416063786
    2. '().' → logprob: -4.75871467590332
    3. '()
' → logprob: -10.00871467590332
    4. ' ()' → logprob: -11.50871467590332
    5. '.strip' → logprob: -11.75871467590332
    6. '.' → logprob: -12.13371467590332
    7. '.readline' → logprob: -12.38371467590332
    8. '(' → logprob: -12.50871467590332
    9. '())' → logprob: -12.75871467590332
    10. ')' → logprob: -12.88371467590332

Token 306: ' forme' (ID: 27450)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7119971513748169
    2. 'forme' → logprob: -1.086997151374817
    3. 'chaine' → logprob: -2.2119970321655273
    4. 'sa' → logprob: -4.211997032165527
    5. 'form' → logprob: -4.336997032165527
    6. 'ent' → logprob: -4.586997032165527
    7. 'string' → logprob: -5.086997032165527
    8. ' forme' → logprob: -5.211997032165527
    9. 'la' → logprob: -5.461997032165527
    10. 'rstrip' → logprob: -6.461997032165527

Token 307: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28361207246780396
    2. 'd' → logprob: -2.033612012863159
    3. ' de' → logprob: -2.408612012863159
    4. 'de' → logprob: -4.408612251281738
    5. '<|end|>' → logprob: -5.408612251281738
    6. 's' → logprob: -5.783612251281738
    7. 'str' → logprob: -5.908612251281738
    8. 'def' → logprob: -6.908612251281738
    9. 'string' → logprob: -7.033612251281738
    10. ')' → logprob: -7.908612251281738

Token 308: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6821035742759705
    2. 'str' → logprob: -1.1821036338806152
    3. 'string' → logprob: -1.6821036338806152
    4. 'cha' → logprob: -6.432103633880615
    5. ' chaîne' → logprob: -8.557103157043457
    6. ' chaine' → logprob: -11.182103157043457
    7. ' string' → logprob: -12.057103157043457
    8. 'texte' → logprob: -12.557103157043457
    9. 'stri' → logprob: -12.807103157043457
    10. 'chain' → logprob: -12.932103157043457

Token 309: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003188405418768525
    2. '()
' → logprob: -6.003188610076904
    3. '()\' → logprob: -7.753188610076904
    4. '().' → logprob: -9.253188133239746
    5. ' ()' → logprob: -9.253188133239746
    6. '()`' → logprob: -11.128188133239746
    7. '():
' → logprob: -11.253188133239746
    8. '   ' → logprob: -11.628188133239746
    9. '())' → logprob: -11.753188133239746
    10. '`()' → logprob: -11.753188133239746

Token 310: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00929581094533205
    2. 'def' → logprob: -5.13429594039917
    3. '()' → logprob: -5.88429594039917
    4. '()
' → logprob: -9.009295463562012
    5. '    
' → logprob: -9.509295463562012
    6. '(' → logprob: -9.759295463562012
    7. 'return' → logprob: -9.884295463562012
    8. '():' → logprob: -9.884295463562012
    9. ' return' → logprob: -10.384295463562012
    10. ')' → logprob: -10.509295463562012

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.91732100979425e-05
    2. 'def' → logprob: -10.375039100646973
    3. '    
' → logprob: -13.250039100646973
    4. '    ' → logprob: -13.625039100646973
    5. 'return' → logprob: -13.750039100646973
    6. '```' → logprob: -13.875039100646973
    7. ')' → logprob: -14.250039100646973
    8. '   ' → logprob: -14.375039100646973
    9. ' return' → logprob: -14.625039100646973
    10. '       ' → logprob: -15.500039100646973

Token 312: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011233855038881302
    2. 'def' → logprob: -5.136233806610107
    3. 'return' → logprob: -5.636233806610107
    4. ' return' → logprob: -6.386233806610107
    5. ' def' → logprob: -11.136234283447266
    6. '```' → logprob: -11.636234283447266
    7. ' ' → logprob: -12.136234283447266
    8. '    ' → logprob: -12.261234283447266
    9. '  ' → logprob: -13.386234283447266
    10. '    
' → logprob: -13.511234283447266

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27412018179893494
    2. '   ' → logprob: -1.5241202116012573
    3. ':
' → logprob: -4.399120330810547
    4. '():' → logprob: -5.524120330810547
    5. ' :' → logprob: -5.899120330810547
    6. '()' → logprob: -8.024120330810547
    7. '<|end|>' → logprob: -8.024120330810547
    8. '    ' → logprob: -8.149120330810547
    9. '  ' → logprob: -8.149120330810547
    10. ' =' → logprob: -8.399120330810547

Token 314: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005873450427316129
    2. ':' → logprob: -8.250587463378906
    3. 'def' → logprob: -8.625587463378906
    4. '()' → logprob: -10.000587463378906
    5. '    ' → logprob: -10.125587463378906
    6. '    
' → logprob: -11.125587463378906
    7. '(' → logprob: -11.625587463378906
    8. '```' → logprob: -12.000587463378906
    9. ':
' → logprob: -12.125587463378906
    10. '  ' → logprob: -12.125587463378906

Token 315: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.00010413920972496271
    2. ' str' → logprob: -9.250103950500488
    3. 'string' → logprob: -11.750103950500488
    4. '   ' → logprob: -16.875104904174805
    5. 'sys' → logprob: -17.375104904174805
    6. 'return' → logprob: -17.500104904174805
    7. '[str' → logprob: -18.125104904174805
    8. '(str' → logprob: -18.750104904174805
    9. '```' → logprob: -18.750104904174805
    10. 'stri' → logprob: -19.375104904174805

Token 316: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39343926310539246
    2. ':' → logprob: -2.143439292907715
    3. '()' → logprob: -2.268439292907715
    4. '   ' → logprob: -2.893439292907715
    5. '():
' → logprob: -3.143439292907715
    6. '):' → logprob: -6.143439292907715
    7. ':
' → logprob: -6.393439292907715
    8. ')' → logprob: -7.893439292907715
    9. '().' → logprob: -7.893439292907715
    10. '):
' → logprob: -8.143439292907715

Token 317: ' Cha' (ID: 37219)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06196846812963486
    2. ' sys' → logprob: -2.8119685649871826
    3. '(sys' → logprob: -15.311968803405762
    4. 's' → logprob: -15.936968803405762
    5. '=sys' → logprob: -16.436967849731445
    6. 'str' → logprob: -16.561967849731445
    7. 'Sys' → logprob: -16.686967849731445
    8. 'string' → logprob: -16.936967849731445
    9. 'return' → logprob: -16.936967849731445
    10. '   ' → logprob: -16.936967849731445

Token 318: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.04001915082335472
    2. 'ine' → logprob: -3.2900190353393555
    3. 'ïne' → logprob: -7.2900190353393555
    4. 'ne' → logprob: -8.040019035339355
    5. '
' → logprob: -8.290019035339355
    6. '```' → logprob: -8.415019035339355
    7. '   ' → logprob: -8.915019035339355
    8. '\' → logprob: -8.915019035339355
    9. 'î' → logprob: -9.665019035339355
    10. '  ' → logprob: -10.540019035339355

Token 319: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032358209136873484
    2. '()
' → logprob: -6.503235816955566
    3. '().' → logprob: -6.753235816955566
    4. '   ' → logprob: -8.503235816955566
    5. '()\' → logprob: -8.628235816955566
    6. '("")' → logprob: -10.253235816955566
    7. '()`' → logprob: -10.753235816955566
    8. '.readline' → logprob: -10.878235816955566
    9. ')' → logprob: -11.128235816955566
    10. '(' → logprob: -11.253235816955566

Token 320: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0014046367723494768
    2. 'u' → logprob: -6.876404762268066
    3. 'e' → logprob: -9.376404762268066
    4. 'uée' → logprob: -9.501404762268066
    5. 'ecture' → logprob: -10.001404762268066
    6. 'ignée' → logprob: -10.376404762268066
    7. 'lu' → logprob: -10.501404762268066
    8. 'ire' → logprob: -11.001404762268066
    9. 'ise' → logprob: -11.126404762268066
    10. 'ues' → logprob: -11.126404762268066

Token 321: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004996309522539377
    2. '()
' → logprob: -6.129996299743652
    3. '   ' → logprob: -6.629996299743652
    4. '():
' → logprob: -7.004996299743652
    5. '():' → logprob: -7.754996299743652
    6. ')' → logprob: -9.754996299743652
    7. '().' → logprob: -9.754996299743652
    8. '.' → logprob: -11.754996299743652
    9. '())' → logprob: -12.379996299743652
    10. '()`' → logprob: -12.879996299743652

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.458980300929397e-05
    2. '
' → logprob: -10.25008487701416
    3. '    
' → logprob: -10.75008487701416
    4. 'def' → logprob: -11.75008487701416
    5. 'return' → logprob: -11.87508487701416
    6. '```' → logprob: -11.87508487701416
    7. '    ' → logprob: -13.75008487701416
    8. ' return' → logprob: -13.87508487701416
    9. ' ' → logprob: -14.25008487701416
    10. '  ' → logprob: -14.62508487701416

Token 323: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004470589570701122
    2. '"""' → logprob: -5.5044708251953125
    3. '"""
' (adapté à ' """
') → logprob: -8.629470825195312
    4. '```' → logprob: -9.879470825195312
    5. '    
' → logprob: -10.379470825195312
    6. '
' → logprob: -10.504470825195312
    7. 'return' → logprob: -10.754470825195312
    8. ')' → logprob: -11.004470825195312
    9. ' """' → logprob: -11.254470825195312
    10. '    ' → logprob: -11.254470825195312

Token 324: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1313408464193344
    2. '   ' → logprob: -2.381340742111206
    3. ' return' → logprob: -3.506340742111206
    4. 'def' → logprob: -7.381340980529785
    5. '```' → logprob: -10.881340980529785
    6. 'sys' → logprob: -12.756340980529785
    7. 's' → logprob: -14.256340980529785
    8. '	return' → logprob: -14.256340980529785
    9. ' ' → logprob: -14.256340980529785
    10. '  ' → logprob: -15.506340980529785

Token 325: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01895163767039776
    2. 'sys' → logprob: -4.018951416015625
    3. ' return' → logprob: -7.143951416015625
    4. ' sys' → logprob: -11.518951416015625
    5. '   ' → logprob: -13.768951416015625
    6. 'def' → logprob: -15.018951416015625
    7. '```' → logprob: -15.393951416015625
    8. 's' → logprob: -15.768951416015625
    9. 'import' → logprob: -17.768951416015625
    10. '
' → logprob: -18.018951416015625

Token 326: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011062555946409702
    2. ' sys' → logprob: -4.5110626220703125
    3. 'input' → logprob: -11.136062622070312
    4. ' input' → logprob: -15.886062622070312
    5. '(sys' → logprob: -17.136062622070312
    6. '	sys' → logprob: -18.011062622070312
    7. '=sys' → logprob: -18.636062622070312
    8. 'Sys' → logprob: -19.136062622070312
    9. 'str' → logprob: -19.511062622070312
    10. ' ' → logprob: -19.636062622070312

Token 327: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.214019307051785e-05
    2. 'stdin' → logprob: -10.750032424926758
    3. '.stdout' → logprob: -11.625032424926758
    4. '.std' → logprob: -14.125032424926758
    5. '.readline' → logprob: -14.250032424926758
    6. '(stdin' → logprob: -16.500032424926758
    7. '.' → logprob: -16.750032424926758
    8. '.argv' → logprob: -16.750032424926758
    9. ' stdin' → logprob: -17.625032424926758
    10. '.stderr' → logprob: -18.875032424926758

Token 328: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.9153885558771435e-06
    2. '.' → logprob: -12.250005722045898
    3. '.stdin' → logprob: -14.125005722045898
    4. '.buffer' → logprob: -16.5000057220459
    5. '().' → logprob: -16.7500057220459
    6. '.stdout' → logprob: -16.8750057220459
    7. 'buffer' → logprob: -18.2500057220459
    8. '.read' → logprob: -18.3750057220459
    9. 'stdin' → logprob: -18.6250057220459
    10. ' readline' → logprob: -18.7500057220459

Token 329: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. ' readline' → logprob: -15.250000953674316
    3. '.read' → logprob: -15.500000953674316
    4. 'read' → logprob: -16.0
    5. '.readlines' → logprob: -17.75
    6. '.' → logprob: -19.375
    7. 'rstrip' → logprob: -21.875
    8. 'getline' → logprob: -22.25
    9. '.rstrip' → logprob: -22.375
    10. '_read' → logprob: -22.5

Token 330: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013302408624440432
    2. '()' → logprob: -6.626330375671387
    3. '().'' → logprob: -14.501330375671387
    4. '.rstrip' → logprob: -14.501330375671387
    5. 'rstrip' → logprob: -14.626330375671387
    6. '.readline' → logprob: -14.751330375671387
    7. ')' → logprob: -14.876330375671387
    8. '().__' → logprob: -14.876330375671387
    9. '()[' → logprob: -15.126330375671387
    10. '>().' → logprob: -15.376330375671387

Token 331: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0024781543761491776
    2. 'decode' → logprob: -6.002478122711182
    3. 'strip' → logprob: -13.12747859954834
    4. 'read' → logprob: -14.50247859954834
    5. 'raw' → logprob: -17.502477645874023
    6. '.rstrip' → logprob: -17.627477645874023
    7. 'rst' → logprob: -18.002477645874023
    8. 'r' → logprob: -18.252477645874023
    9. 'rcode' → logprob: -19.752477645874023
    10. 'rtype' → logprob: -20.127477645874023

Token 332: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014287383295595646
    2. '().' → logprob: -4.26428747177124
    3. '()\' → logprob: -9.889286994934082
    4. '(' → logprob: -10.639286994934082
    5. ' ()' → logprob: -11.139286994934082
    6. '())' → logprob: -11.764286994934082
    7. '(),' → logprob: -12.389286994934082
    8. '()
' → logprob: -12.639286994934082
    9. '()<' → logprob: -13.014286994934082
    10. '()==' → logprob: -13.264286994934082

Token 333: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -6.704273118884885e-07
    2. 'rstrip' → logprob: -14.750000953674316
    3. ' decode' → logprob: -16.0
    4. '.decode' → logprob: -16.125
    5. 'raw' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. 'dec' → logprob: -19.75
    8. 'de' → logprob: -20.625
    9. 'strip' → logprob: -20.625
    10. 'read' → logprob: -21.625

Token 334: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015859126579016447
    2. '(' → logprob: -6.751585960388184
    3. '('_' → logprob: -8.001585960388184
    4. '()' → logprob: -10.251585960388184
    5. '_' → logprob: -10.501585960388184
    6. '("' → logprob: -11.626585960388184
    7. '('__' → logprob: -12.376585960388184
    8. '__('' → logprob: -13.876585960388184
    9. '(\'' → logprob: -14.126585960388184
    10. ''' → logprob: -14.376585960388184

Token 335: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -1.5451681974809617e-05
    2. ''' → logprob: -11.375015258789062
    3. ' utf' → logprob: -13.250015258789062
    4. 'ascii' → logprob: -14.375015258789062
    5. '_utf' → logprob: -14.375015258789062
    6. '=utf' → logprob: -14.750015258789062
    7. 'sys' → logprob: -15.250015258789062
    8. 'UTF' → logprob: -15.625015258789062
    9. ''u' → logprob: -16.875015258789062
    10. ''s' → logprob: -17.250015258789062

Token 336: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015040287980809808
    2. '8' → logprob: -6.501503944396973
    3. '')' → logprob: -13.876503944396973
    4. ''-' → logprob: -14.626503944396973
    5. ''' → logprob: -16.00150489807129
    6. '=utf' → logprob: -17.00150489807129
    7. 'utf' → logprob: -17.50150489807129
    8. '_' → logprob: -17.50150489807129
    9. '```' → logprob: -17.87650489807129
    10. '-'' → logprob: -19.00150489807129

Token 337: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -3.881560041918419e-05
    2. '8' → logprob: -10.250039100646973
    3. 'ascii' → logprob: -12.875039100646973
    4. 'uft' → logprob: -15.250039100646973
    5. ' utf' → logprob: -15.250039100646973
    6. ''' → logprob: -15.625039100646973
    7. '')' → logprob: -15.750039100646973
    8. 's' → logprob: -17.625038146972656
    9. 'uf' → logprob: -18.000038146972656
    10. 'us' → logprob: -18.125038146972656

Token 338: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12665528059005737
    2. '()' → logprob: -3.001655340194702
    3. '())' → logprob: -3.251655340194702
    4. '')' → logprob: -3.501655340194702
    5. ' )' → logprob: -8.251655578613281
    6. '")' → logprob: -9.126655578613281
    7. ' ())' → logprob: -12.001655578613281
    8. ' ()' → logprob: -12.376655578613281
    9. '`)' → logprob: -12.876655578613281
    10. '('' → logprob: -12.876655578613281

Token 339: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02259010635316372
    2. '<|end|>' → logprob: -4.647590160369873
    3. '
' → logprob: -5.022590160369873
    4. '#' → logprob: -5.772590160369873
    5. '\n' → logprob: -6.647590160369873
    6. '\' → logprob: -6.897590160369873
    7. '<|end|>' → logprob: -8.772589683532715
    8. '

' → logprob: -9.147589683532715
    9. 'newline' → logprob: -9.147589683532715
    10. ' 
' → logprob: -9.897589683532715

Token 340: ' IR' (ID: 23712)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6031650304794312
    2. 'print' → logprob: -1.4781650304794312
    3. ' main' → logprob: -2.8531651496887207
    4. 'input' → logprob: -3.6031651496887207
    5. 'T' → logprob: -3.8531651496887207
    6. ' print' → logprob: -4.353165149688721
    7. 'D' → logprob: -4.478165149688721
    8. 'P' → logprob: -4.603165149688721
    9. 'E' → logprob: -4.728165149688721
    10. 'YES' → logprob: -4.728165149688721

Token 341: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14692915976047516
    2. '()' → logprob: -2.8969292640686035
    3. 'ange' → logprob: -3.2719292640686035
    4. 'ANGE' → logprob: -3.5219292640686035
    5. '():
' → logprob: -4.3969292640686035
    6. '():
' → logprob: -7.2719292640686035
    7. 'aw' → logprob: -8.521928787231445
    8. ' ():' → logprob: -9.271928787231445
    9. 'E' → logprob: -9.396928787231445
    10. 'AW' → logprob: -9.646928787231445

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018247460946440697
    2. '):
' → logprob: -4.018247604370117
    3. ')' → logprob: -9.393247604370117
    4. '):
' → logprob: -11.393247604370117
    5. ' ):' → logprob: -13.018247604370117
    6. ':' → logprob: -15.018247604370117
    7. '=' → logprob: -16.768247604370117
    8. '):

' → logprob: -16.768247604370117
    9. ')：' → logprob: -17.143247604370117
    10. '   ' → logprob: -17.518247604370117

Token 343: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03199838101863861
    2. '(' → logprob: -4.406998157501221
    3. '   ' → logprob: -5.156998157501221
    4. ':' → logprob: -5.156998157501221
    5. '(
' → logprob: -5.781998157501221
    6. '():' → logprob: -6.281998157501221
    7. ':
' → logprob: -6.781998157501221
    8. 'return' → logprob: -7.531998157501221
    9. '():
' → logprob: -8.531998634338379
    10. 'n' → logprob: -8.531998634338379

Token 344: ' """
' (ID: 7037)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12442441284656525
    2. 'return' → logprob: -2.624424457550049
    3. '[
' → logprob: -3.374424457550049
    4. '   ' → logprob: -5.124424457550049
    5. 'def' → logprob: -6.499424457550049
    6. ' return' → logprob: -6.999424457550049
    7. '[int' → logprob: -7.249424457550049
    8. '[r' → logprob: -8.12442398071289
    9. ' [' → logprob: -8.24942398071289
    10. '[i' → logprob: -8.99942398071289

Token 345: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9811556339263916
    2. ':
' → logprob: -1.6061556339263916
    3. '   ' → logprob: -2.1061556339263916
    4. ' return' → logprob: -2.7311556339263916
    5. 'return' → logprob: -2.7311556339263916
    6. ':' → logprob: -3.4811556339263916
    7. '[
' → logprob: -3.7311556339263916
    8. ' def' → logprob: -3.8561556339263916
    9. ' range' → logprob: -3.9811556339263916
    10. '[' → logprob: -3.9811556339263916

Token 346: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.809518039226532
    2. ':
' → logprob: -1.4345180988311768
    3. 'return' → logprob: -1.6845180988311768
    4. ' return' → logprob: -2.3095180988311768
    5. ':' → logprob: -4.059517860412598
    6. ' def' → logprob: -5.934517860412598
    7. ':return' → logprob: -6.059517860412598
    8. 'for' → logprob: -6.684517860412598
    9. '[' → logprob: -6.809517860412598
    10. ' :
' → logprob: -6.934517860412598

Token 347: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1353023648262024
    2. 'n' → logprob: -2.7603023052215576
    3. '[n' → logprob: -3.3853023052215576
    4. 'range' → logprob: -4.135302543640137
    5. ' n' → logprob: -5.385302543640137
    6. '[
' → logprob: -5.635302543640137
    7. '[' → logprob: -6.385302543640137
    8. ' range' → logprob: -6.635302543640137
    9. '(
' → logprob: -7.010302543640137
    10. '(' → logprob: -7.885302543640137

Token 348: ' ent' (ID: 1121)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2449846714735031
    2. '(
' → logprob: -2.3699846267700195
    3. 'ange' → logprob: -2.9949846267700195
    4. 'anges' → logprob: -3.9949846267700195
    5. '(' → logprob: -4.3699846267700195
    6. '()' → logprob: -4.6199846267700195
    7. ' lines' → logprob: -4.6199846267700195
    8. ' (' → logprob: -5.2449846267700195
    9. '():
' → logprob: -5.2449846267700195
    10. ' ' → logprob: -6.1199846267700195

Token 349: 'iers' (ID: 11012)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.15421272814273834
    2. 'iers' → logprob: -2.029212713241577
    3. 'ieres' → logprob: -5.029212951660156
    4. 'i' → logprob: -5.404212951660156
    5. 'ires' → logprob: -8.654212951660156
    6. 'ière' → logprob: -9.779212951660156
    7. 'ier' → logprob: -10.029212951660156
    8. 'r' → logprob: -10.154212951660156
    9. 'rees' → logprob: -10.654212951660156
    10. 'ié' → logprob: -11.029212951660156

Token 350: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16672144830226898
    2. '():' → logprob: -2.4167213439941406
    3. '():
' → logprob: -3.1667213439941406
    4. '(' → logprob: -4.666721343994141
    5. '()' → logprob: -5.791721343994141
    6. 's' → logprob: -5.791721343994141
    7. '(
' → logprob: -6.416721343994141
    8. ' (' → logprob: -6.541721343994141
    9. '(size' → logprob: -7.166721343994141
    10. '(lines' → logprob: -7.291721343994141

Token 351: 'un' (ID: 373)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.265849232673645
    2. ')' → logprob: -1.890849232673645
    3. '):' → logprob: -2.5158491134643555
    4. '(n' → logprob: -7.7658491134643555
    5. '):
' → logprob: -8.140849113464355
    6. '   ' → logprob: -8.265849113464355
    7. 'n' → logprob: -8.390849113464355
    8. ')n' → logprob: -8.515849113464355
    9. '
' → logprob: -8.640849113464355
    10. ' n' → logprob: -10.140849113464355

Token 352: ' par' (ID: 686)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8119722604751587
    2. 'for' → logprob: -2.311972141265869
    3. '[]' → logprob: -2.436972141265869
    4. ' for' → logprob: -2.686972141265869
    5. '
' → logprob: -2.936972141265869
    6. ' par' → logprob: -3.061972141265869
    7. 'range' → logprob: -3.061972141265869
    8. ' =' → logprob: -3.186972141265869
    9. 'e' → logprob: -3.311972141265869
    10. '=' → logprob: -3.311972141265869

Token 353: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5123458504676819
    2. ' ligne' → logprob: -1.262345790863037
    3. 'e' → logprob: -3.137345790863037
    4. 'l' → logprob: -4.262345790863037
    5. ' line' → logprob: -4.262345790863037
    6. ' ' → logprob: -4.387345790863037
    7. 'n' → logprob: -5.012345790863037
    8. 'line' → logprob: -5.637345790863037
    9. 'ent' → logprob: -6.012345790863037
    10. '_' → logprob: -6.012345790863037

Token 354: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031069941818714142
    2. '):' → logprob: -3.5310699939727783
    3. '):
' → logprob: -6.781069755554199
    4. ').' → logprob: -9.7810697555542
    5. 'def' → logprob: -10.0310697555542
    6. ')
' → logprob: -10.5310697555542
    7. ')n' → logprob: -10.7810697555542
    8. '(n' → logprob: -11.1560697555542
    9. ' )' → logprob: -12.4060697555542
    10. '   ' → logprob: -12.5310697555542

Token 355: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8958324193954468
    2. 'def' → logprob: -1.6458324193954468
    3. '   ' → logprob: -1.7708324193954468
    4. ' for' → logprob: -2.2708325386047363
    5. ' :' → logprob: -3.0208325386047363
    6. 'for' → logprob: -3.1458325386047363
    7. ':
' → logprob: -4.645832538604736
    8. '):' → logprob: -4.770832538604736
    9. '(n' → logprob: -5.395832538604736
    10. ' def' → logprob: -5.895832538604736

Token 356: ' partir' (ID: 12100)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4931706190109253
    2. 'return' → logprob: -2.868170738220215
    3. 'n' → logprob: -2.993170738220215
    4. '[
' → logprob: -2.993170738220215
    5. 'range' → logprob: -3.118170738220215
    6. '[]' → logprob: -3.368170738220215
    7. 'list' → logprob: -3.993170738220215
    8. 'a' → logprob: -4.368170738220215
    9. '[user' → logprob: -4.618170738220215
    10. '   ' → logprob: -4.743170738220215

Token 357: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6000945568084717
    2. 'def' → logprob: -1.2250945568084717
    3. '   ' → logprob: -2.7250945568084717
    4. '(
' → logprob: -3.1000945568084717
    5. '(' → logprob: -4.225094795227051
    6. ' de' → logprob: -4.850094795227051
    7. ' (' → logprob: -4.975094795227051
    8. ' def' → logprob: -5.100094795227051
    9. 'de' → logprob: -5.475094795227051
    10. ' des' → logprob: -5.725094795227051

Token 358: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011464511044323444
    2. ' sys' → logprob: -4.511464595794678
    3. 'stdin' → logprob: -8.88646411895752
    4. 'l' → logprob: -9.51146411895752
    5. 'la' → logprob: -9.63646411895752
    6. ' la' → logprob: -9.88646411895752
    7. '=sys' → logprob: -10.63646411895752
    8. 'range' → logprob: -10.76146411895752
    9. '(sys' → logprob: -12.01146411895752
    10. '   ' → logprob: -12.13646411895752

Token 359: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.03589281439781189
    2. 'sys' → logprob: -4.910892963409424
    3. '=sys' → logprob: -4.910892963409424
    4. 'input' → logprob: -5.285892963409424
    5. 'e' → logprob: -5.410892963409424
    6. 'stdin' → logprob: -5.660892963409424
    7. 'entrée' → logprob: -6.785892963409424
    8. 'a' → logprob: -7.160892963409424
    9. ''' → logprob: -7.160892963409424
    10. ''utilisateur' → logprob: -7.285892963409424

Token 360: ' standard' (ID: 7024)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6016054749488831
    2. ' standard' → logprob: -2.1016054153442383
    3. '()' → logprob: -2.1016054153442383
    4. 'def' → logprob: -2.4766054153442383
    5. ')' → logprob: -3.8516054153442383
    6. 'standard' → logprob: -4.226605415344238
    7. 'n' → logprob: -4.351605415344238
    8. '(' → logprob: -4.476605415344238
    9. '(
' → logprob: -4.476605415344238
    10. ' (' → logprob: -4.726605415344238

Token 361: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34706735610961914
    2. 'def' → logprob: -1.5970673561096191
    3. '(n' → logprob: -2.847067356109619
    4. ':' → logprob: -4.847067356109619
    5. ',' → logprob: -4.972067356109619
    6. ':
' → logprob: -5.347067356109619
    7. '(' → logprob: -5.722067356109619
    8. '    
' → logprob: -6.472067356109619
    9. ' def' → logprob: -6.597067356109619
    10. ' for' → logprob: -6.722067356109619

Token 362: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011035565286874771
    2. 'def' → logprob: -5.136035442352295
    3. '(n' → logprob: -5.886035442352295
    4. ':' → logprob: -7.261035442352295
    5. ':
' → logprob: -7.761035442352295
    6. ' def' → logprob: -8.011035919189453
    7. '    
' → logprob: -8.136035919189453
    8. '(' → logprob: -8.761035919189453
    9. ' for' → logprob: -9.511035919189453
    10. 'n' → logprob: -9.886035919189453

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2465081363916397
    2. ' return' → logprob: -2.3715081214904785
    3. 'def' → logprob: -2.3715081214904785
    4. 'return' → logprob: -3.4965081214904785
    5. ' def' → logprob: -7.8715081214904785
    6. '[
' → logprob: -7.9965081214904785
    7. '[]' → logprob: -8.246508598327637
    8. '	return' → logprob: -8.746508598327637
    9. '```' → logprob: -9.746508598327637
    10. '[]
' → logprob: -9.871508598327637

Token 364: ' Args' (ID: 39185)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8941066265106201
    2. ' return' → logprob: -1.0191066265106201
    3. 'def' → logprob: -1.7691066265106201
    4. ' lines' → logprob: -3.64410662651062
    5. '   ' → logprob: -3.89410662651062
    6. ' def' → logprob: -5.769106864929199
    7. 'data' → logprob: -5.769106864929199
    8. '"""
' → logprob: -6.644106864929199
    9. 'lines' → logprob: -6.644106864929199
    10. 'r' → logprob: -7.269106864929199

Token 365: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03491845354437828
    2. '   ' → logprob: -3.6599185466766357
    3. ' (' → logprob: -5.659918308258057
    4. ':' → logprob: -5.784918308258057
    5. 'n' → logprob: -7.284918308258057
    6. ':
' → logprob: -8.159918785095215
    7. '):
' → logprob: -8.409918785095215
    8. 'def' → logprob: -8.409918785095215
    9. ',' → logprob: -8.534918785095215
    10. '[n' → logprob: -9.409918785095215

Token 366: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3268355131149292
    2. '   ' → logprob: -1.3268355131149292
    3. ' n' → logprob: -4.826835632324219
    4. '(n' → logprob: -5.326835632324219
    5. '	n' → logprob: -7.701835632324219
    6. '       ' → logprob: -10.326835632324219
    7. '
' → logprob: -10.451835632324219
    8. '    
' → logprob: -10.701835632324219
    9. '  ' → logprob: -11.451835632324219
    10. '    ' → logprob: -11.576835632324219

Token 367: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00018327576981391758
    2. ' n' → logprob: -8.62518310546875
    3. '   ' → logprob: -13.00018310546875
    4. '	n' → logprob: -13.87518310546875
    5. '
' → logprob: -15.75018310546875
    6. 'self' → logprob: -16.37518310546875
    7. '`' → logprob: -17.00018310546875
    8. ')n' → logprob: -17.50018310546875
    9. ' ' → logprob: -17.87518310546875
    10. ''n' → logprob: -18.00018310546875

Token 368: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12720757722854614
    2. ':' → logprob: -2.2522075176239014
    3. '):
' → logprob: -4.7522077560424805
    4. ')' → logprob: -5.2522077560424805
    5. ':int' → logprob: -8.00220775604248
    6. ',' → logprob: -11.12720775604248
    7. ':
' → logprob: -11.37720775604248
    8. ' :' → logprob: -11.37720775604248
    9. '):
' → logprob: -12.12720775604248
    10. '(int' → logprob: -12.25220775604248

Token 369: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07133480906486511
    2. '):' → logprob: -2.9463348388671875
    3. ')' → logprob: -4.6963348388671875
    4. 'n' → logprob: -5.1963348388671875
    5. '):
' → logprob: -7.4463348388671875
    6. ':int' → logprob: -8.071334838867188
    7. ' int' → logprob: -8.696334838867188
    8. ')n' → logprob: -8.696334838867188
    9. '(n' → logprob: -9.321334838867188
    10. '(int' → logprob: -9.571334838867188

Token 370: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026823852211236954
    2. ')' → logprob: -3.7768237590789795
    3. '):
' → logprob: -5.651823997497559
    4. ':' → logprob: -10.276823997497559
    5. ' ):' → logprob: -11.276823997497559
    6. '   ' → logprob: -12.276823997497559
    7. '):
' → logprob: -12.776823997497559
    8. '):

' → logprob: -13.276823997497559
    9. ' )' → logprob: -14.651823997497559
    10. ',' → logprob: -14.776823997497559

Token 371: ' Nombre' (ID: 70208)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5913817286491394
    2. 'n' → logprob: -1.8413817882537842
    3. ' int' → logprob: -1.9663817882537842
    4. ' number' → logprob: -2.591381788253784
    5. ' nombre' → logprob: -4.091381549835205
    6. ')' → logprob: -4.341381549835205
    7. 'int' → logprob: -4.341381549835205
    8. ' Nombre' → logprob: -4.591381549835205
    9. ' Number' → logprob: -5.091381549835205
    10. 'Nombre' → logprob: -5.466381549835205

Token 372: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15830476582050323
    2. ' de' → logprob: -2.7833046913146973
    3. ')' → logprob: -3.4083046913146973
    4. '=n' → logprob: -4.658304691314697
    5. ' of' → logprob: -4.783304691314697
    6. 'def' → logprob: -5.033304691314697
    7. 'de' → logprob: -5.283304691314697
    8. ' =' → logprob: -5.408304691314697
    9. ' n' → logprob: -6.283304691314697
    10. ':' → logprob: -6.408304691314697

Token 373: ' lignes' (ID: 81687)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0372705459594727
    2. 'l' → logprob: -1.2872705459594727
    3. ' lignes' → logprob: -1.5372705459594727
    4. 'lines' → logprob: -2.6622705459594727
    5. ' ent' → logprob: -3.5372705459594727
    6. ' lines' → logprob: -3.6622705459594727
    7. ')' → logprob: -4.162270545959473
    8. 'n' → logprob: -5.162270545959473
    9. 'int' → logprob: -6.412270545959473
    10. 'élé' → logprob: -6.662270545959473

Token 374: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5932968258857727
    2. '):' → logprob: -1.343296766281128
    3. '):
' → logprob: -2.093296766281128
    4. ':' → logprob: -4.093297004699707
    5. ' à' → logprob: -4.093297004699707
    6. 'à' → logprob: -4.843297004699707
    7. '
' → logprob: -5.343297004699707
    8. '<|end|>' → logprob: -5.593297004699707
    9. '   ' → logprob: -5.968297004699707
    10. '=' → logprob: -6.343297004699707

Token 375: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.021113988012075424
    2. 'l' → logprob: -4.396113872528076
    3. 'read' → logprob: -5.146113872528076
    4. ' read' → logprob: -6.646113872528076
    5. 'lit' → logprob: -7.146113872528076
    6. 'Lire' → logprob: -8.521114349365234
    7. 'lect' → logprob: -9.271114349365234
    8. 'r' → logprob: -9.521114349365234
    9. ' readline' → logprob: -9.521114349365234
    10. 'lé' → logprob: -10.896114349365234

Token 376: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21894223988056183
    2. '):' → logprob: -2.093942165374756
    3. ')' → logprob: -2.843942165374756
    4. '   ' → logprob: -4.343942165374756
    5. '):
' → logprob: -7.093942165374756
    6. '(n' → logprob: -8.093942642211914
    7. '```' → logprob: -8.093942642211914
    8. ':' → logprob: -8.468942642211914
    9. 'def' → logprob: -8.968942642211914
    10. '
' → logprob: -9.218942642211914

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7235700488090515
    2. 'def' → logprob: -1.4735701084136963
    3. '```' → logprob: -2.0985701084136963
    4. ')' → logprob: -3.0985701084136963
    5. '):
' → logprob: -3.7235701084136963
    6. '
' → logprob: -3.8485701084136963
    7. '"""
' → logprob: -3.9735701084136963
    8. ':
' → logprob: -4.348569869995117
    9. ':' → logprob: -4.348569869995117
    10. '):' → logprob: -4.598569869995117

Token 378: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03164688125252724
    2. '
' → logprob: -4.531646728515625
    3. '```' → logprob: -4.781646728515625
    4. '    
' → logprob: -6.156646728515625
    5. ' lines' → logprob: -6.156646728515625
    6. 'def' → logprob: -6.406646728515625
    7. '"""
' → logprob: -6.656646728515625
    8. 'result' → logprob: -7.031646728515625
    9. '``' → logprob: -7.406646728515625
    10. 'return' → logprob: -7.781646728515625

Token 379: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30067533254623413
    2. '[
' → logprob: -2.675675392150879
    3. ' list' → logprob: -2.800675392150879
    4. ' [
' → logprob: -3.050675392150879
    5. '[list' → logprob: -3.925675392150879
    6. ':list' → logprob: -4.300675392150879
    7. '[' → logprob: -4.425675392150879
    8. '[List' → logprob: -4.425675392150879
    9. ' [' → logprob: -4.675675392150879
    10. ':' → logprob: -5.425675392150879

Token 380: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9445494413375854
    2. '   ' → logprob: -1.1945494413375854
    3. '[' → logprob: -1.8195494413375854
    4. '[list' → logprob: -2.569549560546875
    5. ' list' → logprob: -3.319549560546875
    6. '[
' → logprob: -3.944549560546875
    7. ' [
' → logprob: -4.694549560546875
    8. 'list' → logprob: -6.694549560546875
    9. '[List' → logprob: -7.069549560546875
    10. '[n' → logprob: -7.194549560546875

Token 381: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0002525184245314449
    2. 'List' → logprob: -8.625252723693848
    3. 'generator' → logprob: -9.625252723693848
    4. ' list' → logprob: -12.500252723693848
    5. 'Generator' → logprob: -13.250252723693848
    6. '[list' → logprob: -14.000252723693848
    7. '   ' → logprob: -15.000252723693848
    8. 'iterator' → logprob: -15.625252723693848
    9. 'Iterator' → logprob: -17.50025177001953
    10. ' generator' → logprob: -17.75025177001953

Token 382: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5010013580322266
    2. ':' → logprob: -1.0010013580322266
    3. '[list' → logprob: -4.376001358032227
    4. '[List' → logprob: -5.376001358032227
    5. '   ' → logprob: -5.751001358032227
    6. ':list' → logprob: -6.251001358032227
    7. '[' → logprob: -6.501001358032227
    8. ':
' → logprob: -6.626001358032227
    9. ' of' → logprob: -7.251001358032227
    10. ' :' → logprob: -8.626001358032227

Token 383: ' Liste' (ID: 61030)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.05424507334828377
    2. ' [' → logprob: -3.3042449951171875
    3. '[' → logprob: -4.3042449951171875
    4. '[List' → logprob: -6.8042449951171875
    5. '[int' → logprob: -7.1792449951171875
    6. '   ' → logprob: -7.9292449951171875
    7. ' list' → logprob: -8.554244995117188
    8. 'list' → logprob: -9.679244995117188
    9. '[n' → logprob: -10.429244995117188
    10. '[line' → logprob: -11.054244995117188

Token 384: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03494470193982124
    2. ' of' → logprob: -3.534944772720337
    3. '[' → logprob: -6.909944534301758
    4. '   ' → logprob: -7.034944534301758
    5. '(map' → logprob: -7.159944534301758
    6. 'of' → logprob: -7.284944534301758
    7. '
' → logprob: -7.534944534301758
    8. '[
' → logprob: -8.284944534301758
    9. '[Int' → logprob: -8.284944534301758
    10. '(range' → logprob: -8.784944534301758

Token 385: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02498452365398407
    2. 'ent' → logprob: -4.399984359741211
    3. '[int' → logprob: -4.524984359741211
    4. 'ints' → logprob: -6.649984359741211
    5. 'inte' → logprob: -9.149984359741211
    6. ' int' → logprob: -9.524984359741211
    7. 'ents' → logprob: -10.274984359741211
    8. ' ent' → logprob: -11.024984359741211
    9. '<int' → logprob: -11.399984359741211
    10. 'n' → logprob: -11.399984359741211

Token 386: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.055058643221855164
    2. 'ints' → logprob: -3.305058717727661
    3. 'iers' → logprob: -4.555058479309082
    4. 'tiers' → logprob: -6.555058479309082
    5. 'ti' → logprob: -6.680058479309082
    6. '_t' → logprob: -7.055058479309082
    7. 'ents' → logprob: -7.180058479309082
    8. 'ts' → logprob: -8.055058479309082
    9. 'nts' → logprob: -8.180058479309082
    10. 'teurs' → logprob: -8.430058479309082

Token 387: ' lus' (ID: 54762)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.05492008849978447
    2. '(int' → logprob: -4.179920196533203
    3. '[n' → logprob: -5.179920196533203
    4. '(n' → logprob: -5.304920196533203
    5. '   ' → logprob: -5.429920196533203
    6. '
' → logprob: -5.554920196533203
    7. 's' → logprob: -5.929920196533203
    8. '[' → logprob: -6.054920196533203
    9. '```' → logprob: -6.179920196533203
    10. '([' → logprob: -6.304920196533203

Token 388: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.676777958869934
    2. ']' → logprob: -1.801777958869934
    3. '   ' → logprob: -1.801777958869934
    4. ',' → logprob: -1.926777958869934
    5. '[' → logprob: -2.6767778396606445
    6. '[n' → logprob: -2.8017778396606445
    7. ')' → logprob: -3.3017778396606445
    8. ':' → logprob: -3.4267778396606445
    9. '```' → logprob: -3.6767778396606445
    10. '(' → logprob: -3.9267778396606445

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44665834307670593
    2. ':
' → logprob: -2.4466583728790283
    3. '[n' → logprob: -2.4466583728790283
    4. '[' → logprob: -2.9466583728790283
    5. '[
' → logprob: -3.3216583728790283
    6. '(n' → logprob: -3.9466583728790283
    7. '
' → logprob: -3.9466583728790283
    8. '```' → logprob: -4.321658134460449
    9. 'def' → logprob: -4.571658134460449
    10. '[]
' → logprob: -4.946658134460449

Token 390: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17158986628055573
    2. ':
' → logprob: -2.1715898513793945
    3. '
' → logprob: -3.9215898513793945
    4. '```' → logprob: -5.2965898513793945
    5. ' return' → logprob: -5.4215898513793945
    6. 'def' → logprob: -5.5465898513793945
    7. '"""
' (adapté à ' """
') → logprob: -6.1715898513793945
    8. '    
' → logprob: -6.5465898513793945
    9. '):
' → logprob: -6.7965898513793945
    10. 'return' → logprob: -6.9215898513793945

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0194920115172863
    2. 'return' → logprob: -4.019492149353027
    3. ' return' → logprob: -6.644492149353027
    4. '	return' → logprob: -11.019492149353027
    5. '
' → logprob: -11.519492149353027
    6. '[
' → logprob: -13.144492149353027
    7. 'ret' → logprob: -13.269492149353027
    8. 'result' → logprob: -13.519492149353027
    9. '    
' → logprob: -13.644492149353027
    10. '    ' → logprob: -13.894492149353027

Token 392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011674613691866398
    2. '   ' → logprob: -4.511674404144287
    3. ' return' → logprob: -7.386674404144287
    4. '[' → logprob: -13.011674880981445
    5. '	return' → logprob: -13.136674880981445
    6. '
' → logprob: -13.761674880981445
    7. '[
' → logprob: -14.136674880981445
    8. '{return' → logprob: -15.136674880981445
    9. '```' → logprob: -15.886674880981445
    10. ':return' → logprob: -15.886674880981445

Token 393: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.1614687591791153
    2. '[' → logprob: -2.161468744277954
    3. '[int' → logprob: -3.411468744277954
    4. '[List' → logprob: -7.411468982696533
    5. '[I' → logprob: -8.786468505859375
    6. '[Int' → logprob: -8.911468505859375
    7. '[input' → logprob: -11.286468505859375
    8. '[n' → logprob: -11.661468505859375
    9. '[L' → logprob: -12.161468505859375
    10. '[l' → logprob: -12.161468505859375

Token 394: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740777611732483
    2. 'I' → logprob: -0.9740777611732483
    3. 'Int' → logprob: -15.224078178405762
    4. ' int' → logprob: -15.599078178405762
    5. ' I' → logprob: -16.599077224731445
    6. 'i' → logprob: -16.599077224731445
    7. '(int' → logprob: -16.849077224731445
    8. 'INT' → logprob: -16.849077224731445
    9. 'ints' → logprob: -17.099077224731445
    10. '[int' → logprob: -17.349077224731445

Token 395: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()]' → logprob: -13.875001907348633
    3. ' ()' → logprob: -14.875001907348633
    4. '()
' → logprob: -16.500001907348633
    5. '(' → logprob: -18.125001907348633
    6. '（）' → logprob: -19.000001907348633
    7. '()]
' → logprob: -20.500001907348633
    8. '()`' → logprob: -20.625001907348633
    9. '()\' → logprob: -20.625001907348633
    10. ']()' → logprob: -20.875001907348633

Token 396: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001294030516874045
    2. 'for' → logprob: -9.000129699707031
    3. ' for' → logprob: -12.375129699707031
    4. ' ()' → logprob: -13.625129699707031
    5. '(' → logprob: -14.625129699707031
    6. '()
' → logprob: -17.00012969970703
    7. ')' → logprob: -17.50012969970703
    8. '_' → logprob: -18.12512969970703
    9. '()]' → logprob: -18.12512969970703
    10. '(n' → logprob: -18.25012969970703

Token 397: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020545506849884987
    2. ' _' → logprob: -3.895545482635498
    3. ' ' → logprob: -13.145545959472656
    4. '_i' → logprob: -14.895545959472656
    5. 'n' → logprob: -15.520545959472656
    6. ' ' → logprob: -15.645545959472656
    7. '_n' → logprob: -15.895545959472656
    8. '	' → logprob: -16.020545959472656
    9. '_in' → logprob: -16.770545959472656
    10. ' in' → logprob: -16.770545959472656

Token 398: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17423094809055328
    2. ' in' → logprob: -2.0492310523986816
    3. '_' → logprob: -4.049231052398682
    4. 'n' → logprob: -4.424231052398682
    5. '(n' → logprob: -7.424231052398682
    6. ' n' → logprob: -7.674231052398682
    7. ' ' → logprob: -8.674230575561523
    8. '(' → logprob: -9.049230575561523
    9. ' _' → logprob: -9.174230575561523
    10. '_in' → logprob: -9.424230575561523

Token 399: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975199744105339
    2. ' range' → logprob: -3.529752016067505
    3. 'rang' → logprob: -14.404751777648926
    4. '_' → logprob: -15.154751777648926
    5. '	range' → logprob: -15.154751777648926
    6. ' ' → logprob: -16.029752731323242
    7. '_range' → logprob: -16.279752731323242
    8. '(range' → logprob: -16.654752731323242
    9. 'ran' → logprob: -16.654752731323242
    10. 'ra' → logprob: -16.654752731323242

Token 400: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0053070466965436935
    2. '(' → logprob: -5.255307197570801
    3. 'n' → logprob: -10.0053071975708
    4. ' n' → logprob: -10.7553071975708
    5. '(
' → logprob: -12.5053071975708
    6. ' (' → logprob: -12.7553071975708
    7. '	n' → logprob: -15.8803071975708
    8. ')n' → logprob: -16.755306243896484
    9. '(nt' → logprob: -18.880306243896484
    10. '(

' → logprob: -19.255306243896484

Token 401: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.246537173457909e-06
    2. ')' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.125003814697266
    4. ')]
' → logprob: -15.125003814697266
    5. ']' → logprob: -15.875003814697266
    6. '(' → logprob: -16.125003814697266
    7. ')])' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.375003814697266
    9. '):' → logprob: -16.375003814697266
    10. ')],' → logprob: -17.375003814697266

Token 402: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020043322816491127
    2. 'def' → logprob: -4.27004337310791
    3. '

' → logprob: -5.64504337310791
    4. '
' → logprob: -7.27004337310791
    5. '<|end|>' → logprob: -7.77004337310791
    6. '(' → logprob: -8.64504337310791
    7. '' → logprob: -8.89504337310791
    8. ' 
' → logprob: -8.89504337310791
    9. '```' → logprob: -9.27004337310791
    10. '#' → logprob: -9.52004337310791

Token 403: ' L' (ID: 451)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.44578519463539124
    2. 'IR' → logprob: -1.1957851648330688
    3. 'L' → logprob: -3.3207852840423584
    4. 'LI' → logprob: -4.695785045623779
    5. 'LS' → logprob: -5.445785045623779
    6. 'SR' → logprob: -5.695785045623779
    7. 'IRS' → logprob: -6.195785045623779
    8. 'DR' → logprob: -7.195785045623779
    9. 'MR' → logprob: -8.070785522460938
    10. 'ISR' → logprob: -8.195785522460938

Token 404: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.02228377014398575
    2. '()' → logprob: -4.522283554077148
    3. 'IR' → logprob: -5.147283554077148
    4. 'R' → logprob: -5.897283554077148
    5. '=[]' → logprob: -7.272283554077148
    6. 'ist' → logprob: -7.647283554077148
    7. '[]' → logprob: -8.147283554077148
    8. 'ambda' → logprob: -8.272283554077148
    9. '(' → logprob: -9.147283554077148
    10. 'IST' → logprob: -9.272283554077148

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.661626634420827e-05
    2. 'ange' → logprob: -9.875086784362793
    3. '(' → logprob: -10.500086784362793
    4. ' (' → logprob: -12.375086784362793
    5. 'e' → logprob: -13.375086784362793
    6. '(N' → logprob: -14.250086784362793
    7. 'anged' → logprob: -15.375086784362793
    8. 'ANGE' → logprob: -15.625086784362793
    9. '(e' → logprob: -16.125085830688477
    10. 'n' → logprob: -16.125085830688477

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036979394499212503
    2. '):
' → logprob: -5.753697872161865
    3. ')' → logprob: -8.003698348999023
    4. '(n' → logprob: -8.628698348999023
    5. ' ):' → logprob: -12.628698348999023
    6. '):
' → logprob: -13.003698348999023
    7. '):

' → logprob: -14.378698348999023
    8. 'def' → logprob: -15.753698348999023
    9. 'n' → logprob: -15.753698348999023
    10. ')n' → logprob: -15.878698348999023

Token 407: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.875033378601074
    3. 'def' → logprob: -11.375033378601074
    4. '(
' → logprob: -12.750033378601074
    5. ' def' → logprob: -15.625033378601074
    6. 'n' → logprob: -15.875033378601074
    7. '   ' → logprob: -15.875033378601074
    8. ' (' → logprob: -17.50003433227539
    9. '(def' → logprob: -17.62503433227539
    10. '(N' → logprob: -18.87503433227539

Token 408: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.055778879672288895
    2. 'def' → logprob: -3.305778980255127
    3. '(
' → logprob: -4.930778980255127
    4. 'n' → logprob: -5.055778980255127
    5. '   ' → logprob: -5.680778980255127
    6. '(' → logprob: -8.430778503417969
    7. ':
' → logprob: -8.930778503417969
    8. ' def' → logprob: -9.555778503417969
    9. ' n' → logprob: -9.680778503417969
    10. ':' → logprob: -10.055778503417969

Token 409: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8487622141838074
    2. 'n' → logprob: -0.9737622141838074
    3. 'def' → logprob: -1.7237622737884521
    4. '   ' → logprob: -4.223762035369873
    5. '"""
' → logprob: -7.598762035369873
    6. '(
' → logprob: -8.223762512207031
    7. ' def' → logprob: -8.848762512207031
    8. '
' → logprob: -9.098762512207031
    9. ' n' → logprob: -9.848762512207031
    10. '[
' → logprob: -9.973762512207031

Token 410: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005039963871240616
    2. '"""
' → logprob: -6.005040168762207
    3. '(n' → logprob: -6.755040168762207
    4. ' def' → logprob: -7.505040168762207
    5. '   ' → logprob: -7.880040168762207
    6. '
' → logprob: -8.130040168762207
    7. '(
' → logprob: -9.630040168762207
    8. 'return' → logprob: -10.255040168762207
    9. 'n' → logprob: -11.255040168762207
    10. '"""' → logprob: -11.630040168762207

Token 411: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030838796868920326
    2. 'n' → logprob: -3.65583872795105
    3. ' n' → logprob: -5.405838966369629
    4. ' (' → logprob: -10.530838966369629
    5. '	n' → logprob: -12.280838966369629
    6. 'def' → logprob: -13.655838966369629
    7. '[n' → logprob: -13.780838966369629
    8. 'int' → logprob: -13.905838966369629
    9. '
' → logprob: -14.155838966369629
    10. '(' → logprob: -14.780838966369629

Token 412: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0609712228178978
    2. '(' → logprob: -2.935971260070801
    3. ' (' → logprob: -5.685971260070801
    4. ' lines' → logprob: -6.560971260070801
    5. '_lines' → logprob: -7.685971260070801
    6. ' lignes' → logprob: -7.935971260070801
    7. 'lines' → logprob: -9.1859712600708
    8. '(lines' → logprob: -9.1859712600708
    9. '(
' → logprob: -9.1859712600708
    10. '(N' → logprob: -10.8109712600708

Token 413: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0025714985094964504
    2. ' (' → logprob: -7.0025715827941895
    3. '(' → logprob: -7.3775715827941895
    4. 'de' → logprob: -7.8775715827941895
    5. '()' → logprob: -8.627571105957031
    6. 'def' → logprob: -9.127571105957031
    7. '   ' → logprob: -9.377571105957031
    8. ' de' → logprob: -9.502571105957031
    9. '(
' → logprob: -10.377571105957031
    10. '```' → logprob: -10.627571105957031

Token 414: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3098523616790771
    2. 'n' → logprob: -1.9348523616790771
    3. 'la' → logprob: -2.059852361679077
    4. 'list' → logprob: -2.559852361679077
    5. '()' → logprob: -2.684852361679077
    6. 'part' → logprob: -2.934852361679077
    7. ' partir' → logprob: -3.059852361679077
    8. 'range' → logprob: -4.059852600097656
    9. 'contin' → logprob: -4.184852600097656
    10. '```' → logprob: -4.184852600097656

Token 415: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0077789947390556335
    2. 'def' → logprob: -5.757779121398926
    3. 'de' → logprob: -6.007779121398926
    4. ' de' → logprob: -6.757779121398926
    5. '(' → logprob: -7.632779121398926
    6. ' (' → logprob: -8.507779121398926
    7. 'n' → logprob: -9.007779121398926
    8. '   ' → logprob: -9.507779121398926
    9. ' des' → logprob: -10.632779121398926
    10. 'des' → logprob: -11.007779121398926

Token 416: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.15022426843643188
    2. 'l' → logprob: -2.025224208831787
    3. '(sys' → logprob: -5.650224208831787
    4. 'n' → logprob: -6.525224208831787
    5. ' sys' → logprob: -6.525224208831787
    6. '   ' → logprob: -8.275224685668945
    7. '=sys' → logprob: -8.400224685668945
    8. 'la' → logprob: -8.650224685668945
    9. ' l' → logprob: -9.025224685668945
    10. '(n' → logprob: -9.775224685668945

Token 417: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.008008789271116257
    2. 'e' → logprob: -6.50800895690918
    3. 'input' → logprob: -6.63300895690918
    4. '=sys' → logprob: -6.75800895690918
    5. 'stdin' → logprob: -6.88300895690918
    6. '(stdin' → logprob: -7.38300895690918
    7. 'entrée' → logprob: -7.38300895690918
    8. '(sys' → logprob: -7.88300895690918
    9. 'range' → logprob: -8.00800895690918
    10. ''' → logprob: -8.38300895690918

Token 418: ' standard' (ID: 7024)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07636690884828568
    2. 'def' → logprob: -3.201366901397705
    3. 'standard' → logprob: -4.701366901397705
    4. '()' → logprob: -4.826366901397705
    5. ' standard' → logprob: -5.451366901397705
    6. 'n' → logprob: -5.576366901397705
    7. '```' → logprob: -5.576366901397705
    8. '[n' → logprob: -7.576366901397705
    9. 'for' → logprob: -7.701366901397705
    10. '   ' → logprob: -7.826366901397705

Token 419: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012755196541547775
    2. 'def' → logprob: -4.512755393981934
    3. '   ' → logprob: -7.012755393981934
    4. ',' → logprob: -7.512755393981934
    5. ' (' → logprob: -9.262755393981934
    6. '(' → logprob: -10.262755393981934
    7. ' def' → logprob: -10.387755393981934
    8. '
' → logprob: -11.637755393981934
    9. 's' → logprob: -11.762755393981934
    10. '[n' → logprob: -12.012755393981934

Token 420: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005621942691504955
    2. ' (' → logprob: -6.255621910095215
    3. 'def' → logprob: -6.380621910095215
    4. '   ' → logprob: -6.880621910095215
    5. '(' → logprob: -7.255621910095215
    6. '(
' → logprob: -8.880621910095215
    7. ' def' → logprob: -9.505621910095215
    8. 'n' → logprob: -11.130621910095215
    9. '```' → logprob: -11.255621910095215
    10. ',' → logprob: -12.630621910095215

Token 421: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5087451934814453
    2. 'def' → logprob: -1.1337451934814453
    3. '(n' → logprob: -2.8837451934814453
    4. '    
' → logprob: -4.633745193481445
    5. ' def' → logprob: -5.383745193481445
    6. '
' → logprob: -5.383745193481445
    7. '(' → logprob: -7.133745193481445
    8. '  
' → logprob: -8.133745193481445
    9. '    ' → logprob: -8.383745193481445
    10. ' 
' → logprob: -8.508745193481445

Token 422: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7802481055259705
    2. 'ligne' → logprob: -1.4052481651306152
    3. ' line' → logprob: -1.6552481651306152
    4. '_' → logprob: -3.1552481651306152
    5. '()' → logprob: -3.5302481651306152
    6. 'line' → logprob: -4.405248165130615
    7. 'n' → logprob: -5.280248165130615
    8. ' ' → logprob: -5.530248165130615
    9. '_line' → logprob: -5.905248165130615
    10. 'l' → logprob: -6.280248165130615

Token 423: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4911479651927948
    2. ' =' → logprob: -1.2411479949951172
    3. 'est' → logprob: -3.241147994995117
    4. '   ' → logprob: -3.866147994995117
    5. '=' → logprob: -4.366147994995117
    6. ':' → logprob: -4.616147994995117
    7. ' contient' → logprob: -5.116147994995117
    8. ' de' → logprob: -6.366147994995117
    9. '()' → logprob: -6.616147994995117
    10. ' return' → logprob: -6.741147994995117

Token 424: ' convert' (ID: 8452)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.7172990441322327
    2. ' LI' → logprob: -0.7172990441322327
    3. '   ' → logprob: -4.467298984527588
    4. 'list' → logprob: -5.217298984527588
    5. ' list' → logprob: -6.717298984527588
    6. 'L' → logprob: -6.967298984527588
    7. 'li' → logprob: -6.967298984527588
    8. 'une' → logprob: -7.467298984527588
    9. 'split' → logprob: -7.592298984527588
    10. 'parsed' → logprob: -7.592298984527588

Token 425: 'ie' (ID: 396)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.40469473600387573
    2. 'ie' → logprob: -1.2796947956085205
    3. 'i' → logprob: -3.2796947956085205
    4. 'is' → logprob: -4.404694557189941
    5. '   ' → logprob: -6.154694557189941
    6. 'e' → logprob: -6.779694557189941
    7. 'it' → logprob: -7.404694557189941
    8. '```' → logprob: -8.279694557189941
    9. 'en' → logprob: -9.154694557189941
    10. 'ir' → logprob: -9.404694557189941

Token 426: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.47447434067726135
    2. 'en' → logprob: -0.974474310874939
    3. '()' → logprob: -8.34947395324707
    4. '   ' → logprob: -9.59947395324707
    5. '(en' → logprob: -10.09947395324707
    6. 'def' → logprob: -11.72447395324707
    7. 'in' → logprob: -11.97447395324707
    8. 'list' → logprob: -11.97447395324707
    9. '_en' → logprob: -12.22447395324707
    10. '```' → logprob: -12.34947395324707

Token 427: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.060290899127721786
    2. ' list' → logprob: -3.060290813446045
    3. 'liste' → logprob: -4.810290813446045
    4. ' liste' → logprob: -6.060290813446045
    5. 'une' → logprob: -7.935290813446045
    6. 'LI' → logprob: -8.185291290283203
    7. ' LI' → logprob: -8.560291290283203
    8. ' une' → logprob: -8.685291290283203
    9. '   ' → logprob: -9.310291290283203
    10. 'li' → logprob: -10.810291290283203

Token 428: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9818989634513855
    2. 'list' → logprob: -1.2318990230560303
    3. ' liste' → logprob: -1.3568990230560303
    4. ' list' → logprob: -2.6068990230560303
    5. '   ' → logprob: -6.231898784637451
    6. '```' → logprob: -8.60689926147461
    7. 'l' → logprob: -9.85689926147461
    8. 'Liste' → logprob: -10.10689926147461
    9. 's' → logprob: -10.85689926147461
    10. '[]' → logprob: -10.98189926147461

Token 429: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6892861723899841
    2. 'of' → logprob: -1.314286231994629
    3. ' of' → logprob: -1.689286231994629
    4. '(map' → logprob: -3.814286231994629
    5. '   ' → logprob: -5.314286231994629
    6. '[' → logprob: -5.564286231994629
    7. '(int' → logprob: -5.564286231994629
    8. '<int' → logprob: -6.314286231994629
    9. '[list' → logprob: -6.314286231994629
    10. '(list' → logprob: -6.814286231994629

Token 430: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1858108043670654
    2. ''ent' → logprob: -1.1858108043670654
    3. 'int' → logprob: -1.3108108043670654
    4. '[int' → logprob: -2.6858108043670654
    5. '(int' → logprob: -3.5608108043670654
    6. 'ints' → logprob: -4.3108110427856445
    7. 'inte' → logprob: -5.5608110427856445
    8. ''int' → logprob: -5.6858110427856445
    9. '<int' → logprob: -7.3108110427856445
    10. ']int' → logprob: -7.8108110427856445

Token 431: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0035691845696419477
    2. 'ières' → logprob: -6.62856912612915
    3. 't' → logprob: -6.75356912612915
    4. 'ents' → logprob: -7.87856912612915
    5. 'er' → logprob: -8.753569602966309
    6. 'ints' → logprob: -9.253569602966309
    7. 'e' → logprob: -9.753569602966309
    8. 'ier' → logprob: -9.753569602966309
    9. ' ints' → logprob: -10.003569602966309
    10. 'ent' → logprob: -10.128569602966309

Token 432: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5989992618560791
    2. '(n' → logprob: -1.598999261856079
    3. '   ' → logprob: -2.348999261856079
    4. 'for' → logprob: -2.848999261856079
    5. 'def' → logprob: -3.848999261856079
    6. '()
' → logprob: -4.0989990234375
    7. '().' → logprob: -4.5989990234375
    8. '()[' → logprob: -4.5989990234375
    9. '[n' → logprob: -4.9739990234375
    10. ']' → logprob: -5.2239990234375

Token 433: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27156057953834534
    2. '   ' → logprob: -2.1465606689453125
    3. '(n' → logprob: -2.1465606689453125
    4. '
' → logprob: -6.3965606689453125
    5. ' def' → logprob: -6.8965606689453125
    6. '    
' → logprob: -7.0215606689453125
    7. '```' → logprob: -8.646560668945312
    8. '(' → logprob: -9.396560668945312
    9. '(
' → logprob: -10.021560668945312
    10. '"""
' → logprob: -10.271560668945312

Token 434: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004059163853526115
    2. ' def' → logprob: -6.254059314727783
    3. '(n' → logprob: -6.379059314727783
    4. '   ' → logprob: -8.004058837890625
    5. '
' → logprob: -9.379058837890625
    6. '```' → logprob: -12.254058837890625
    7. 'n' → logprob: -12.504058837890625
    8. '    
' → logprob: -13.879058837890625
    9. ' (' → logprob: -14.379058837890625
    10. '"""
' → logprob: -14.504058837890625

Token 435: ' Args' (ID: 39185)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3944950997829437
    2. 'def' → logprob: -1.1444951295852661
    3. '"""
' → logprob: -6.019495010375977
    4. '```' → logprob: -6.269495010375977
    5. 'Returns' → logprob: -6.644495010375977
    6. ' return' → logprob: -7.144495010375977
    7. 'Return' → logprob: -7.769495010375977
    8. ':return' → logprob: -8.519495010375977
    9. '   ' → logprob: -8.769495010375977
    10. '"""' → logprob: -8.894495010375977

Token 436: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003955274820327759
    2. 'def' → logprob: -5.878955364227295
    3. '   ' → logprob: -7.628955364227295
    4. ' (' → logprob: -8.128954887390137
    5. ':' → logprob: -8.503954887390137
    6. 'n' → logprob: -9.878954887390137
    7. ':
' → logprob: -10.253954887390137
    8. ' def' → logprob: -11.003954887390137
    9. '):
' → logprob: -11.003954887390137
    10. '(' → logprob: -11.753954887390137

Token 437: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030088894069194794
    2. 'n' → logprob: -3.5300889015197754
    3. ' n' → logprob: -8.780088424682617
    4. '       ' → logprob: -9.405088424682617
    5. '
' → logprob: -10.155088424682617
    6. '(n' → logprob: -10.780088424682617
    7. '  ' → logprob: -11.530088424682617
    8. ' ' → logprob: -11.655088424682617
    9. '	n' → logprob: -11.655088424682617
    10. '    ' → logprob: -11.780088424682617

Token 438: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.5941604690160602e-05
    2. ' n' → logprob: -10.750025749206543
    3. '   ' → logprob: -12.375025749206543
    4. '
' → logprob: -15.875025749206543
    5. '	n' → logprob: -16.37502670288086
    6. '       ' → logprob: -17.62502670288086
    7. '(n' → logprob: -18.37502670288086
    8. 'def' → logprob: -19.00002670288086
    9. '    
' → logprob: -19.50002670288086
    10. '```' → logprob: -19.62502670288086

Token 439: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01844911463558674
    2. '(n' → logprob: -4.893449306488037
    3. ':' → logprob: -5.268449306488037
    4. '(int' → logprob: -6.268449306488037
    5. ')' → logprob: -6.393449306488037
    6. '):
' → logprob: -6.643449306488037
    7. ':int' → logprob: -8.018448829650879
    8. '):' → logprob: -8.893448829650879
    9. '   ' → logprob: -8.893448829650879
    10. '(' → logprob: -10.643448829650879

Token 440: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012821101699955761
    2. ' int' → logprob: -9.000127792358398
    3. ')' → logprob: -12.750127792358398
    4. '   ' → logprob: -14.000127792358398
    5. 'n' → logprob: -14.250127792358398
    6. '=int' → logprob: -15.500127792358398
    7. ':int' → logprob: -16.3751277923584
    8. '):' → logprob: -17.0001277923584
    9. '(int' → logprob: -17.1251277923584
    10. '
' → logprob: -17.2501277923584

Token 441: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012838881462812424
    2. '):
' → logprob: -4.762838840484619
    3. ')' → logprob: -5.512838840484619
    4. ':' → logprob: -8.887839317321777
    5. '   ' → logprob: -11.137839317321777
    6. ' ):' → logprob: -11.262839317321777
    7. '):

' → logprob: -11.512839317321777
    8. '):
' → logprob: -12.762839317321777
    9. '**' → logprob: -14.637839317321777
    10. '```' → logprob: -14.887839317321777

Token 442: ' Nombre' (ID: 70208)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5364289283752441
    2. 'int' → logprob: -1.9114289283752441
    3. '   ' → logprob: -1.9114289283752441
    4. ' n' → logprob: -2.286428928375244
    5. ' int' → logprob: -4.286428928375244
    6. ')' → logprob: -7.036428928375244
    7. ' ' → logprob: -7.411428928375244
    8. 'Nombre' → logprob: -7.786428928375244
    9. '(n' → logprob: -8.161428451538086
    10. '    ' → logprob: -8.536428451538086

Token 443: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6499830484390259
    2. ' de' → logprob: -1.0249830484390259
    3. 'de' → logprob: -3.1499829292297363
    4. ' des' → logprob: -3.6499829292297363
    5. ')' → logprob: -3.8999829292297363
    6. '   ' → logprob: -4.524982929229736
    7. 'des' → logprob: -5.274982929229736
    8. 'def' → logprob: -5.524982929229736
    9. 'n' → logprob: -6.149982929229736
    10. ' d' → logprob: -6.399982929229736

Token 444: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.019091762602329254
    2. 'lines' → logprob: -4.019091606140137
    3. ' lignes' → logprob: -7.394091606140137
    4. ' lines' → logprob: -8.394091606140137
    5. 'n' → logprob: -10.019091606140137
    6. 'ligne' → logprob: -11.019091606140137
    7. 'range' → logprob: -11.394091606140137
    8. ')' → logprob: -12.019091606140137
    9. ' ' → logprob: -12.394091606140137
    10. '```' → logprob: -12.519091606140137

Token 445: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7883629202842712
    2. ')' → logprob: -1.413362979888916
    3. '):
' → logprob: -1.663362979888916
    4. '   ' → logprob: -2.288362979888916
    5. ':' → logprob: -5.788362979888916
    6. '=' → logprob: -6.288362979888916
    7. ' à' → logprob: -6.413362979888916
    8. ',' → logprob: -6.788362979888916
    9. '(n' → logprob: -7.163362979888916
    10. 'à' → logprob: -7.538362979888916

Token 446: ' lire' (ID: 46082)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2551209032535553
    2. 'range' → logprob: -2.7551209926605225
    3. 'read' → logprob: -2.7551209926605225
    4. 'n' → logprob: -3.3801209926605225
    5. ' range' → logprob: -3.7551209926605225
    6. ' read' → logprob: -4.505120754241943
    7. 'for' → logprob: -4.880120754241943
    8. ' reads' → logprob: -5.505120754241943
    9. ' lire' → logprob: -5.880120754241943
    10. '1' → logprob: -6.255120754241943

Token 447: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.043008092790842056
    2. '):' → logprob: -4.043008327484131
    3. ')' → logprob: -4.293008327484131
    4. '   ' → logprob: -4.543008327484131
    5. '):
' → logprob: -9.293007850646973
    6. '(n' → logprob: -9.793007850646973
    7. 'def' → logprob: -10.293007850646973
    8. ')
' → logprob: -10.918007850646973
    9. '):

' → logprob: -11.043007850646973
    10. '
' → logprob: -11.793007850646973

Token 448: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01582365855574608
    2. ')' → logprob: -4.765823841094971
    3. '):
' → logprob: -5.265823841094971
    4. '    
' → logprob: -7.390823841094971
    5. '
' → logprob: -7.640823841094971
    6. '):' → logprob: -8.140823364257812
    7. '"""
' → logprob: -8.390823364257812
    8. ')
' → logprob: -8.890823364257812
    9. '```' → logprob: -9.515823364257812
    10. ' ' → logprob: -9.640823364257812

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032670763321220875
    2. ')' → logprob: -5.878267288208008
    3. ')
' → logprob: -9.003267288208008
    4. 'Returns' → logprob: -9.378267288208008
    5. '
' → logprob: -9.503267288208008
    6. '):
' → logprob: -10.128267288208008
    7. 'def' → logprob: -10.378267288208008
    8. '"""
' → logprob: -10.503267288208008
    9. '    
' → logprob: -10.628267288208008
    10. '       ' → logprob: -11.503267288208008

Token 450: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.035292405635118484
    2. '"""
' → logprob: -4.035292625427246
    3. '   ' → logprob: -4.910292625427246
    4. '```' → logprob: -4.910292625427246
    5. 'returns' → logprob: -6.785292625427246
    6. 'return' → logprob: -7.410292625427246
    7. '"""' → logprob: -8.410292625427246
    8. '``' → logprob: -8.535292625427246
    9. '
' → logprob: -10.035292625427246
    10. ' Returns' → logprob: -11.035292625427246

Token 451: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3299369215965271
    2. ' list' → logprob: -2.579936981201172
    3. 'def' → logprob: -3.329936981201172
    4. '[List' → logprob: -3.454936981201172
    5. ':
' → logprob: -3.829936981201172
    6. '[list' → logprob: -4.079936981201172
    7. '[' → logprob: -4.204936981201172
    8. '[n' → logprob: -4.204936981201172
    9. ':' → logprob: -4.204936981201172
    10. ':list' → logprob: -4.329936981201172

Token 452: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0945289134979248
    2. ' [' → logprob: -2.969528913497925
    3. '[list' → logprob: -3.719528913497925
    4. '[' → logprob: -4.594529151916504
    5. '[List' → logprob: -5.844529151916504
    6. '[line' → logprob: -7.969529151916504
    7. '[L' → logprob: -8.469529151916504
    8. '[
' → logprob: -8.594529151916504
    9. '[int' → logprob: -8.719529151916504
    10. '[n' → logprob: -8.844529151916504

Token 453: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0556270033121109
    2. '[List' → logprob: -3.3056271076202393
    3. 'list' (adapté à ' list') → logprob: -4.05562686920166
    4. 'List' → logprob: -9.30562686920166
    5. ' list' → logprob: -11.93062686920166
    6. '[' → logprob: -11.93062686920166
    7. '[line' → logprob: -13.43062686920166
    8. '[
' → logprob: -14.55562686920166
    9. ' [' → logprob: -14.80562686920166
    10. '[type' → logprob: -15.68062686920166

Token 454: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04308871179819107
    2. '[List' → logprob: -4.543088912963867
    3. '[' → logprob: -4.668088912963867
    4. ':
' → logprob: -4.918088912963867
    5. '   ' → logprob: -5.543088912963867
    6. '[
' → logprob: -5.668088912963867
    7. '[list' → logprob: -5.668088912963867
    8. ':list' → logprob: -6.918088912963867
    9. ' of' → logprob: -7.418088912963867
    10. ':[
' → logprob: -7.668088912963867

Token 455: ' Liste' (ID: 61030)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.04907677695155144
    2. '[List' → logprob: -3.549076795578003
    3. '[' → logprob: -4.049076557159424
    4. ' [' → logprob: -6.549076557159424
    5. '[L' → logprob: -8.549077033996582
    6. '[line' → logprob: -10.549077033996582
    7. '   ' → logprob: -10.799077033996582
    8. '[result' → logprob: -11.924077033996582
    9. '[array' → logprob: -12.424077033996582
    10. '[int' → logprob: -13.049077033996582

Token 456: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.464537650346756
    2. '[List' → logprob: -2.0895376205444336
    3. '[
' → logprob: -2.5895376205444336
    4. ' of' → logprob: -2.8395376205444336
    5. '[list' → logprob: -2.9645376205444336
    6. '(' → logprob: -4.214537620544434
    7. 'of' → logprob: -4.214537620544434
    8. '(
' → logprob: -4.964537620544434
    9. '   ' → logprob: -5.589537620544434
    10. '([
' → logprob: -5.714537620544434

Token 457: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01860920712351799
    2. 'lists' → logprob: -4.018609046936035
    3. '[list' → logprob: -7.893609046936035
    4. ' listes' → logprob: -10.393609046936035
    5. 'liste' → logprob: -10.768609046936035
    6. ' lists' → logprob: -11.518609046936035
    7. '(list' → logprob: -11.768609046936035
    8. ' list' → logprob: -11.768609046936035
    9. 'listas' → logprob: -13.018609046936035
    10. '   ' → logprob: -13.143609046936035

Token 458: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.019773025065660477
    2. '[list' → logprob: -4.269773006439209
    3. 'of' → logprob: -6.269773006439209
    4. '[List' → logprob: -6.394773006439209
    5. ' of' → logprob: -6.644773006439209
    6. '[' → logprob: -8.769773483276367
    7. '(int' → logprob: -8.769773483276367
    8. '   ' → logprob: -9.144773483276367
    9. '<int' → logprob: -9.769773483276367
    10. '(map' → logprob: -9.894773483276367

Token 459: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7895194888114929
    2. 'list' → logprob: -0.7895194888114929
    3. 'lists' → logprob: -2.7895195484161377
    4. '[int' → logprob: -3.6645195484161377
    5. 'ints' → logprob: -6.164519309997559
    6. 'liste' → logprob: -6.539519309997559
    7. 'inte' → logprob: -7.914519309997559
    8. 'ent' → logprob: -8.039519309997559
    9. '[list' → logprob: -8.664519309997559
    10. '(int' → logprob: -9.289519309997559

Token 460: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00038384052459150553
    2. 'ières' → logprob: -8.625383377075195
    3. 'ier' → logprob: -9.125383377075195
    4. 'i' → logprob: -9.750383377075195
    5. 'ieres' → logprob: -12.125383377075195
    6. 'ieurs' → logprob: -12.250383377075195
    7. 't' → logprob: -12.250383377075195
    8. 'ents' → logprob: -12.500383377075195
    9. 'I' → logprob: -12.625383377075195
    10. 'ires' → logprob: -12.750383377075195

Token 461: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5873127579689026
    2. ']' → logprob: -0.9623127579689026
    3. '   ' → logprob: -3.962312698364258
    4. '(' → logprob: -4.337312698364258
    5. '[n' → logprob: -5.212312698364258
    6. ')' → logprob: -5.462312698364258
    7. '[' → logprob: -6.087312698364258
    8. '([' → logprob: -6.212312698364258
    9. '(range' → logprob: -6.212312698364258
    10. '([(' → logprob: -6.212312698364258

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029427599161863327
    2. '(n' → logprob: -3.6544275283813477
    3. ']' → logprob: -7.279427528381348
    4. '
' → logprob: -7.529427528381348
    5. 'def' → logprob: -7.779427528381348
    6. '([' → logprob: -7.904427528381348
    7. '[n' → logprob: -8.529427528381348
    8. '[' → logprob: -8.779427528381348
    9. 'return' → logprob: -8.904427528381348
    10. '(' → logprob: -9.529427528381348

Token 463: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005763856461271644
    2. '```' → logprob: -8.62557601928711
    3. ']' → logprob: -9.25057601928711
    4. ')' → logprob: -9.37557601928711
    5. '"""
' (adapté à ' """
') → logprob: -9.62557601928711
    6. ' return' → logprob: -10.00057601928711
    7. 'return' → logprob: -10.25057601928711
    8. 'def' → logprob: -11.50057601928711
    9. '"""' → logprob: -11.75057601928711
    10. '    
' → logprob: -11.87557601928711

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004347279202193022
    2. 'return' → logprob: -5.504347324371338
    3. ' return' → logprob: -8.25434684753418
    4. '	return' → logprob: -12.12934684753418
    5. 'def' → logprob: -12.87934684753418
    6. '```' → logprob: -14.62934684753418
    7. '
' → logprob: -16.37934684753418
    8. ' ' → logprob: -16.62934684753418
    9. '{return' → logprob: -16.75434684753418
    10. '  ' → logprob: -17.00434684753418

Token 465: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.049356069415807724
    2. '   ' → logprob: -3.049355983734131
    3. ' return' → logprob: -7.174355983734131
    4. '	return' → logprob: -13.549356460571289
    5. '
' → logprob: -14.549356460571289
    6. 'def' → logprob: -15.299356460571289
    7. '```' → logprob: -15.674356460571289
    8. '{return' → logprob: -16.67435646057129
    9. ' ' → logprob: -17.54935646057129
    10. 'Return' → logprob: -17.79935646057129

Token 466: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011307948443572968
    2. '[L' → logprob: -9.500113487243652
    3. '[list' → logprob: -10.375113487243652
    4. ' [' → logprob: -12.750113487243652
    5. '[List' → logprob: -12.875113487243652
    6. '   ' → logprob: -14.000113487243652
    7. '[I' → logprob: -14.750113487243652
    8. '[line' → logprob: -15.750113487243652
    9. '[int' → logprob: -17.500112533569336
    10. '[np' → logprob: -17.625112533569336

Token 467: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -5.512236498361744e-07
    2. ' LI' → logprob: -15.625000953674316
    3. '   ' → logprob: -16.125
    4. 'list' → logprob: -16.125
    5. '
' → logprob: -17.125
    6. 'li' → logprob: -18.625
    7. 'L' → logprob: -19.625
    8. ' ' → logprob: -20.375
    9. '  ' → logprob: -20.5
    10. '```' → logprob: -20.875

Token 468: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03920023888349533
    2. '()' → logprob: -3.2892003059387207
    3. '(' → logprob: -6.914200305938721
    4. '(i' → logprob: -8.914199829101562
    5. '(sys' → logprob: -11.164199829101562
    6. 'for' → logprob: -12.414199829101562
    7. ' (' → logprob: -12.664199829101562
    8. '(int' → logprob: -13.039199829101562
    9. ' ()' → logprob: -13.414199829101562
    10. '(I' → logprob: -13.414199829101562

Token 469: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0016211456386372447
    2. 'for' → logprob: -6.501621246337891
    3. '(' → logprob: -9.62662124633789
    4. ' for' → logprob: -10.00162124633789
    5. ' (' → logprob: -12.50162124633789
    6. '(i' → logprob: -12.75162124633789
    7. 'n' → logprob: -15.12662124633789
    8. '()' → logprob: -15.25162124633789
    9. '(for' → logprob: -15.25162124633789
    10. ')' → logprob: -16.50162124633789

Token 470: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040655411779880524
    2. 'i' → logprob: -3.2906553745269775
    3. ' i' → logprob: -6.540655612945557
    4. ' _' → logprob: -6.915655612945557
    5. '_i' → logprob: -8.665655136108398
    6. ' ' → logprob: -13.915655136108398
    7. ' in' → logprob: -15.040655136108398
    8. '   ' → logprob: -15.290655136108398
    9. '_=' → logprob: -15.415655136108398
    10. '	i' → logprob: -15.790655136108398

Token 471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10032550245523453
    2. 'in' → logprob: -2.350325584411621
    3. 'n' → logprob: -10.100325584411621
    4. '(' → logprob: -10.475325584411621
    5. 'range' → logprob: -10.850325584411621
    6. '(n' → logprob: -11.975325584411621
    7. ' i' → logprob: -11.975325584411621
    8. ' ' → logprob: -12.350325584411621
    9. '_' → logprob: -12.850325584411621
    10. 'i' → logprob: -13.225325584411621

Token 472: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040785204619169235
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -16.004077911376953
    4. 'rang' → logprob: -18.379077911376953
    5. '	range' → logprob: -18.629077911376953
    6. ' ' → logprob: -20.004077911376953
    7. '_range' → logprob: -20.879077911376953
    8. 'r' → logprob: -21.254077911376953
    9. '   ' → logprob: -21.379077911376953
    10. 'ran' → logprob: -21.504077911376953

Token 473: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25201988220214844
    2. 'n' → logprob: -1.5020198822021484
    3. ' n' → logprob: -9.502019882202148
    4. '(' → logprob: -11.252019882202148
    5. ' (' → logprob: -13.127019882202148
    6. ')n' → logprob: -14.752019882202148
    7. '	n' → logprob: -14.752019882202148
    8. '(
' → logprob: -15.502019882202148
    9. ',n' → logprob: -16.87701988220215
    10. '<n' → logprob: -17.75201988220215

Token 474: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1003742441534996
    2. ')]' → logprob: -2.350374221801758
    3. '()]' → logprob: -8.850374221801758
    4. ' ]' → logprob: -11.225374221801758
    5. ')' → logprob: -11.725374221801758
    6. ']
' → logprob: -13.975374221801758
    7. '])' → logprob: -14.350374221801758
    8. '>]' → logprob: -15.475374221801758
    9. '`]' → logprob: -15.600374221801758
    10. ']]' → logprob: -15.725374221801758

Token 475: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002509687910787761
    2. '
' → logprob: -8.375250816345215
    3. '<|end|>' → logprob: -11.625250816345215
    4. '#' → logprob: -12.000250816345215
    5. '

' → logprob: -13.250250816345215
    6. 'class' → logprob: -13.875250816345215
    7. '```' → logprob: -14.250250816345215
    8. '\' → logprob: -14.875250816345215
    9. 'import' → logprob: -15.125250816345215
    10. '<|end|>' → logprob: -15.125250816345215

Token 476: ' SR' (ID: 30704)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.817961573600769
    2. 'LR' → logprob: -1.317961573600769
    3. 'IR' → logprob: -1.692961573600769
    4. 'SR' → logprob: -3.9429616928100586
    5. 'RS' → logprob: -4.192961692810059
    6. 'L' → logprob: -4.192961692810059
    7. 'main' → logprob: -4.317961692810059
    8. 'WR' → logprob: -4.317961692810059
    9. 'WS' → logprob: -5.192961692810059
    10. 'DR' → logprob: -5.317961692810059

Token 477: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00041113083716481924
    2. '()' → logprob: -8.000411033630371
    3. '():
' → logprob: -10.250411033630371
    4. '():' → logprob: -10.500411033630371
    5. '(' → logprob: -12.250411033630371
    6. 'n' → logprob: -12.500411033630371
    7. '(N' → logprob: -14.375411033630371
    8. 'def' → logprob: -14.750411033630371
    9. '()]' → logprob: -15.000411033630371
    10. '(size' → logprob: -15.500411033630371

Token 478: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0685446634888649
    2. '(n' → logprob: -3.193544626235962
    3. '):
' → logprob: -3.693544626235962
    4. ')' → logprob: -8.193544387817383
    5. '):
' → logprob: -11.193544387817383
    6. ':' → logprob: -11.568544387817383
    7. ' ):' → logprob: -11.568544387817383
    8. 'n' → logprob: -11.943544387817383
    9. 'def' → logprob: -12.193544387817383
    10. '(' → logprob: -12.443544387817383

Token 479: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06212060898542404
    2. 'def' → logprob: -2.8121206760406494
    3. '(s' → logprob: -9.56212043762207
    4. 'n' → logprob: -10.68712043762207
    5. '(def' → logprob: -10.93712043762207
    6. '(
' → logprob: -11.31212043762207
    7. ' def' → logprob: -11.31212043762207
    8. '(' → logprob: -12.43712043762207
    9. '(S' → logprob: -12.56212043762207
    10. '(defun' → logprob: -13.18712043762207

Token 480: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036003058776259422
    2. '(n' → logprob: -6.128600120544434
    3. 's' → logprob: -7.503600120544434
    4. 'n' → logprob: -7.878600120544434
    5. ' def' → logprob: -8.378600120544434
    6. '   ' → logprob: -10.003600120544434
    7. '(s' → logprob: -10.128600120544434
    8. '"""
' (adapté à ' """
') → logprob: -10.253600120544434
    9. '(
' → logprob: -10.628600120544434
    10. '
' → logprob: -11.003600120544434

Token 481: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.135517880320549
    2. 'def' → logprob: -2.1355178356170654
    3. '   ' → logprob: -4.8855180740356445
    4. '(n' → logprob: -7.3855180740356445
    5. '"""
' → logprob: -8.635518074035645
    6. ' n' → logprob: -9.385518074035645
    7. ' def' → logprob: -9.385518074035645
    8. '
' → logprob: -10.635518074035645
    9. '	n' → logprob: -12.510518074035645
    10. '  ' → logprob: -13.885518074035645

Token 482: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49782946705818176
    2. 'return' → logprob: -1.3728294372558594
    3. '"""
' → logprob: -1.9978294372558594
    4. '
' → logprob: -6.747829437255859
    5. '[
' → logprob: -7.497829437255859
    6. '"""' → logprob: -7.997829437255859
    7. '[' → logprob: -8.24782943725586
    8. ' return' → logprob: -8.37282943725586
    9. ''''
' → logprob: -8.99782943725586
    10. '   ' → logprob: -8.99782943725586

Token 483: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024579374585300684
    2. ' n' → logprob: -6.252458095550537
    3. '(n' → logprob: -7.627458095550537
    4. '[n' → logprob: -10.127457618713379
    5. '[' → logprob: -13.377457618713379
    6. '	n' → logprob: -15.627457618713379
    7. 's' → logprob: -15.752457618713379
    8. 'def' → logprob: -16.252458572387695
    9. ' [' → logprob: -16.502458572387695
    10. ',n' → logprob: -16.752458572387695

Token 484: ' chaînes' (ID: 179904)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.1062055826187134
    2. '(n' → logprob: -1.4812055826187134
    3. ' lines' → logprob: -1.8562055826187134
    4. 'strings' → logprob: -2.356205463409424
    5. ' strings' → logprob: -2.606205463409424
    6. ' lignes' → logprob: -3.356205463409424
    7. 'string' → logprob: -3.606205463409424
    8. 's' → logprob: -3.856205463409424
    9. ' string' → logprob: -4.856205463409424
    10. 'n' → logprob: -5.106205463409424

Token 485: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008369080605916679
    2. '(' → logprob: -7.6258368492126465
    3. 'def' → logprob: -8.375837326049805
    4. '(
' → logprob: -10.375837326049805
    5. ' (' → logprob: -10.375837326049805
    6. '(lines' → logprob: -10.750837326049805
    7. '_lines' → logprob: -12.625837326049805
    8. 'n' → logprob: -12.750837326049805
    9. '(int' → logprob: -12.750837326049805
    10. '```' → logprob: -13.125837326049805

Token 486: 'une' (ID: 2561)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.39468914270401
    2. 'n' → logprob: -1.6446890830993652
    3. ')' → logprob: -2.6446890830993652
    4. 'def' → logprob: -3.3946890830993652
    5. 'for' → logprob: -4.394689083099365
    6. '
' → logprob: -5.144689083099365
    7. 's' → logprob: -5.394689083099365
    8. '[n' → logprob: -6.644689083099365
    9. 'lines' → logprob: -7.019689083099365
    10. '```' → logprob: -7.144689083099365

Token 487: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.23156267404556274
    2. 'par' → logprob: -1.606562614440918
    3. ')' → logprob: -5.981562614440918
    4. '   ' → logprob: -7.106562614440918
    5. '
' → logprob: -7.606562614440918
    6. ' =' → logprob: -7.731562614440918
    7. '=' → logprob: -8.231562614440918
    8. 'for' → logprob: -8.231562614440918
    9. '_par' → logprob: -8.481562614440918
    10. ' for' → logprob: -8.731562614440918

Token 488: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.09070970118045807
    2. 'line' → logprob: -3.090709686279297
    3. ' ligne' → logprob: -3.215709686279297
    4. ' line' → logprob: -7.965709686279297
    5. 'n' → logprob: -8.215709686279297
    6. 'l' → logprob: -8.215709686279297
    7. 'range' → logprob: -9.215709686279297
    8. 'lin' → logprob: -10.340709686279297
    9. '
' → logprob: -11.465709686279297
    10. '<|end|>' → logprob: -11.590709686279297

Token 489: ')' (ID: 8)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5254215002059937
    2. ')' → logprob: -0.9004215002059937
    3. 'for' → logprob: -6.650421619415283
    4. 'n' → logprob: -8.400421142578125
    5. '   ' → logprob: -8.525421142578125
    6. 'def' → logprob: -8.775421142578125
    7. '):
' → logprob: -8.775421142578125
    8. ')n' → logprob: -9.275421142578125
    9. '):' → logprob: -10.150421142578125
    10. '(' → logprob: -10.400421142578125

Token 490: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16032151877880096
    2. 'def' → logprob: -1.9103214740753174
    3. '
' → logprob: -9.785321235656738
    4. '(
' → logprob: -11.160321235656738
    5. '   ' → logprob: -12.035321235656738
    6. '(' → logprob: -12.410321235656738
    7. '(def' → logprob: -12.660321235656738
    8. ':
' → logprob: -12.910321235656738
    9. ' def' → logprob: -13.160321235656738
    10. 'n' → logprob: -13.660321235656738

Token 491: ' partir' (ID: 12100)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005552951246500015
    2. ' range' → logprob: -5.755552768707275
    3. 'return' → logprob: -6.130552768707275
    4. 'list' → logprob: -8.755553245544434
    5. 'line' → logprob: -11.130553245544434
    6. '_range' → logprob: -12.130553245544434
    7. ' return' → logprob: -12.255553245544434
    8. 'read' → logprob: -12.630553245544434
    9. '(range' → logprob: -13.130553245544434
    10. 'for' → logprob: -13.130553245544434

Token 492: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05656629800796509
    2. 'n' → logprob: -2.9315662384033203
    3. ' n' → logprob: -6.93156623840332
    4. '(' → logprob: -8.05656623840332
    5. '   ' → logprob: -8.68156623840332
    6. 'def' → logprob: -9.68156623840332
    7. '(
' → logprob: -10.05656623840332
    8. 'de' → logprob: -10.30656623840332
    9. ' de' → logprob: -10.43156623840332
    10. ' (' → logprob: -11.18156623840332

Token 493: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038070641458034515
    2. ' range' → logprob: -3.2880706787109375
    3. 'sys' → logprob: -10.913070678710938
    4. '(range' → logprob: -11.913070678710938
    5. ' sys' → logprob: -13.413070678710938
    6. 'n' → logprob: -13.913070678710938
    7. 'S' → logprob: -14.538070678710938
    8. 's' → logprob: -15.288070678710938
    9. 'input' → logprob: -15.413070678710938
    10. '	range' → logprob: -15.663070678710938

Token 494: ''entrée' (ID: 115820)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.29409554600715637
    2. ' range' → logprob: -1.669095516204834
    3. '(range' → logprob: -3.169095516204834
    4. '(n' → logprob: -4.294095516204834
    5. '(' → logprob: -5.669095516204834
    6. '(
' → logprob: -6.919095516204834
    7. '_range' → logprob: -6.919095516204834
    8. 'l' → logprob: -6.919095516204834
    9. 'n' → logprob: -7.294095516204834
    10. 'def' → logprob: -7.544095516204834

Token 495: ' standard' (ID: 7024)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010669894982129335
    2. 'def' → logprob: -7.126067161560059
    3. '(' → logprob: -8.751067161560059
    4. '(
' → logprob: -9.501067161560059
    5. 'n' → logprob: -11.376067161560059
    6. ' (' → logprob: -12.501067161560059
    7. 'standard' → logprob: -12.626067161560059
    8. '```' → logprob: -13.126067161560059
    9. '   ' → logprob: -13.251067161560059
    10. '):
' → logprob: -13.626067161560059

Token 496: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.69402015209198
    2. '(n' → logprob: -0.69402015209198
    3. ':
' → logprob: -8.69402027130127
    4. '
' → logprob: -8.69402027130127
    5. '(
' → logprob: -8.94402027130127
    6. '.
' → logprob: -8.94402027130127
    7. '   ' → logprob: -9.06902027130127
    8. '(def' → logprob: -9.81902027130127
    9. '(' → logprob: -10.19402027130127
    10. ' def' → logprob: -10.19402027130127

Token 497: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03294603154063225
    2. '(n' → logprob: -3.5329461097717285
    3. '   ' → logprob: -6.0329461097717285
    4. '(' → logprob: -8.03294563293457
    5. ' def' → logprob: -8.03294563293457
    6. '(def' → logprob: -9.28294563293457
    7. '
' → logprob: -10.90794563293457
    8. '```' → logprob: -11.03294563293457
    9. '(
' → logprob: -11.90794563293457
    10. '    
' → logprob: -12.90794563293457

Token 498: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013694037916138768
    2. '(n' → logprob: -6.751369476318359
    3. '```' → logprob: -9.12636947631836
    4. '   ' → logprob: -10.00136947631836
    5. ' def' → logprob: -10.25136947631836
    6. '
' → logprob: -12.25136947631836
    7. '``' → logprob: -12.75136947631836
    8. '(def' → logprob: -14.37636947631836
    9. '(
' → logprob: -14.50136947631836
    10. '"""
' → logprob: -14.62636947631836

Token 499: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000995295005850494
    2. '"""
' → logprob: -7.12599515914917
    3. 'Args' (adapté à ' Args') → logprob: -9.250995635986328
    4. ' def' → logprob: -10.375995635986328
    5. '```' → logprob: -10.375995635986328
    6. '   ' → logprob: -11.125995635986328
    7. '
' → logprob: -11.500995635986328
    8. '``' → logprob: -12.500995635986328
    9. ''''
' → logprob: -13.125995635986328
    10. 'Def' → logprob: -14.125995635986328

Token 500: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16616137325763702
    2. '   ' → logprob: -2.291161298751831
    3. 'def' → logprob: -3.041161298751831
    4. ':' → logprob: -6.79116153717041
    5. '(
' → logprob: -7.04116153717041
    6. 'n' → logprob: -7.41616153717041
    7. ' (' → logprob: -7.66616153717041
    8. ':
' → logprob: -7.79116153717041
    9. ' def' → logprob: -8.04116153717041
    10. '(' → logprob: -9.54116153717041

Token 501: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48701491951942444
    2. '   ' → logprob: -0.987014889717102
    3. 'def' → logprob: -4.6120147705078125
    4. '(n' → logprob: -6.3620147705078125
    5. '       ' → logprob: -7.3620147705078125
    6. ' n' → logprob: -7.9870147705078125
    7. '
' → logprob: -9.112014770507812
    8. '	n' → logprob: -9.362014770507812
    9. '    ' → logprob: -12.487014770507812
    10. '    
' → logprob: -12.737014770507812

Token 502: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.375
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -18.625
    5. 'self' → logprob: -19.0
    6. '```' → logprob: -19.625
    7. '(n' → logprob: -20.75
    8. '	n' → logprob: -21.125
    9. 'def' → logprob: -21.75
    10. '       ' → logprob: -22.375

Token 503: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9098660945892334
    2. ')' → logprob: -1.4098660945892334
    3. '(n' → logprob: -1.9098660945892334
    4. '):
' → logprob: -2.5348660945892334
    5. ' (' → logprob: -2.6598660945892334
    6. '):' → logprob: -3.4098660945892334
    7. 'def' → logprob: -4.2848663330078125
    8. '(int' → logprob: -5.6598663330078125
    9. '(' → logprob: -6.0348663330078125
    10. '   ' → logprob: -6.7848663330078125

Token 504: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.375
    3. 'n' → logprob: -16.875
    4. ':int' → logprob: -16.875
    5. '(int' → logprob: -17.75
    6. ')' → logprob: -17.875
    7. '=int' → logprob: -19.25
    8. '[int' → logprob: -19.75
    9. '):' → logprob: -21.0
    10. '   ' → logprob: -21.25

Token 505: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5272963643074036
    2. '):
' → logprob: -0.9022963643074036
    3. ':' → logprob: -6.402296543121338
    4. '(n' → logprob: -6.777296543121338
    5. ')' → logprob: -7.027296543121338
    6. '):
' → logprob: -8.40229606628418
    7. '):

' → logprob: -8.52729606628418
    8. '   ' → logprob: -10.90229606628418
    9. 'def' → logprob: -11.15229606628418
    10. '=None' → logprob: -12.40229606628418

Token 506: ' Nombre' (ID: 70208)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03103342466056347
    2. 'int' → logprob: -3.781033515930176
    3. ' n' → logprob: -4.906033515930176
    4. '   ' → logprob: -8.906033515930176
    5. '(n' → logprob: -9.156033515930176
    6. ' int' → logprob: -9.656033515930176
    7. 'def' → logprob: -11.031033515930176
    8. 'S' → logprob: -11.531033515930176
    9. '
' → logprob: -11.656033515930176
    10. '(int' → logprob: -13.031033515930176

Token 507: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31683722138404846
    2. '):
' → logprob: -2.0668373107910156
    3. ')' → logprob: -3.0668373107910156
    4. '=' → logprob: -3.3168373107910156
    5. 'def' → logprob: -4.191837310791016
    6. '=n' → logprob: -4.441837310791016
    7. ')n' → logprob: -4.566837310791016
    8. '   ' → logprob: -4.941837310791016
    9. '):' → logprob: -5.066837310791016
    10. ':' → logprob: -5.691837310791016

Token 508: ' lignes' (ID: 81687)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033378712832927704
    2. 'n' → logprob: -4.033378601074219
    3. 'range' → logprob: -4.908378601074219
    4. 'lines' → logprob: -5.533378601074219
    5. '(int' → logprob: -7.033378601074219
    6. '
' → logprob: -8.158378601074219
    7. 's' → logprob: -8.158378601074219
    8. ' int' → logprob: -8.408378601074219
    9. '(n' → logprob: -8.408378601074219
    10. 'S' → logprob: -8.533378601074219

Token 509: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.11859130859375
    2. '):' → logprob: -1.11859130859375
    3. '):
' → logprob: -1.74359130859375
    4. ')' → logprob: -2.24359130859375
    5. '   ' → logprob: -3.49359130859375
    6. '=' → logprob: -3.49359130859375
    7. 'def' → logprob: -6.36859130859375
    8. '):
' → logprob: -7.49359130859375
    9. 'à' → logprob: -8.11859130859375
    10. ' to' → logprob: -8.24359130859375

Token 510: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025173919275403023
    2. ' range' → logprob: -3.7751739025115967
    3. 'int' → logprob: -6.400174140930176
    4. 'n' → logprob: -8.900174140930176
    5. 'read' → logprob: -9.400174140930176
    6. '
' → logprob: -11.525174140930176
    7. '   ' → logprob: -11.775174140930176
    8. ' int' → logprob: -12.025174140930176
    9. ' n' → logprob: -12.525174140930176
    10. ' ' → logprob: -12.775174140930176

Token 511: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08363530039787292
    2. '):' → logprob: -2.5836353302001953
    3. ')' → logprob: -5.833635330200195
    4. '   ' → logprob: -6.583635330200195
    5. '):
' → logprob: -7.958635330200195
    6. ':' → logprob: -10.583635330200195
    7. 'def' → logprob: -10.833635330200195
    8. 'n' → logprob: -11.333635330200195
    9. ')
' → logprob: -12.083635330200195
    10. ':
' → logprob: -12.708635330200195

Token 512: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020652047533076257
    2. '	return' → logprob: -8.87520694732666
    3. 'return' → logprob: -10.50020694732666
    4. '
' → logprob: -11.00020694732666
    5. ' return' → logprob: -11.75020694732666
    6. ')' → logprob: -12.62520694732666
    7. 'def' → logprob: -13.00020694732666
    8. '  ' → logprob: -13.37520694732666
    9. '    
' → logprob: -13.50020694732666
    10. '    ' → logprob: -13.75020694732666

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005691165570169687
    2. 'return' → logprob: -5.255691051483154
    3. 'def' → logprob: -7.755691051483154
    4. '
' → logprob: -11.005691528320312
    5. '	return' → logprob: -11.880691528320312
    6. ' return' → logprob: -13.630691528320312
    7. '```' → logprob: -13.630691528320312
    8. 'Returns' → logprob: -13.755691528320312
    9. 'Return' → logprob: -14.505691528320312
    10. '"""
' → logprob: -15.130691528320312

Token 514: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00030721822986379266
    2. '   ' → logprob: -8.750307083129883
    3. 'Returns' (adapté à ' Returns') → logprob: -9.000307083129883
    4. ' return' → logprob: -11.500307083129883
    5. 'def' → logprob: -12.250307083129883
    6. 'Return' → logprob: -12.375307083129883
    7. '"""
' → logprob: -13.250307083129883
    8. '
' → logprob: -13.375307083129883
    9. '```' → logprob: -14.000307083129883
    10. 'returns' → logprob: -14.375307083129883

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26841112971305847
    2. '   ' → logprob: -1.7684111595153809
    3. ':
' → logprob: -2.768411159515381
    4. 'def' → logprob: -7.643411159515381
    5. '):
' → logprob: -8.143410682678223
    6. ')' → logprob: -8.268410682678223
    7. '=' → logprob: -8.393410682678223
    8. ':return' → logprob: -8.518410682678223
    9. '[' → logprob: -9.268410682678223
    10. ' :
' → logprob: -9.393410682678223

Token 516: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005616117268800735
    2. 'return' → logprob: -7.500561714172363
    3. ' return' → logprob: -11.875561714172363
    4. '
' → logprob: -13.500561714172363
    5. '	return' → logprob: -16.125560760498047
    6. '```' → logprob: -16.375560760498047
    7. 'def' → logprob: -16.500560760498047
    8. '  ' → logprob: -17.500560760498047
    9. '    ' → logprob: -18.000560760498047
    10. '   ' → logprob: -18.250560760498047

Token 517: ' list' (ID: 1562)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00036655968870036304
    2. ' return' → logprob: -8.6253662109375
    3. '   ' → logprob: -9.0003662109375
    4. '
' → logprob: -10.6253662109375
    5. 'def' → logprob: -11.3753662109375
    6. 'S' → logprob: -11.6253662109375
    7. '```' → logprob: -12.0003662109375
    8. '"""
' → logprob: -12.6253662109375
    9. '[' → logprob: -13.1253662109375
    10. 'SR' → logprob: -13.3753662109375

Token 518: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7768351435661316
    2. ':' → logprob: -0.9018351435661316
    3. '(S' → logprob: -3.4018352031707764
    4. '   ' → logprob: -3.4018352031707764
    5. '(' → logprob: -3.6518352031707764
    6. '[' → logprob: -3.9018352031707764
    7. ')' → logprob: -5.526834964752197
    8. '(n' → logprob: -5.651834964752197
    9. ' of' → logprob: -5.901834964752197
    10. '=' → logprob: -6.151834964752197

Token 519: ' Liste' (ID: 61030)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.13071754574775696
    2. '[' → logprob: -2.3807175159454346
    3. ' [' → logprob: -4.380717754364014
    4. '[String' → logprob: -4.755717754364014
    5. '[str' → logprob: -5.255717754364014
    6. '[s' → logprob: -6.630717754364014
    7. '[]' → logprob: -6.755717754364014
    8. '[string' → logprob: -7.130717754364014
    9. 'S' → logprob: -9.755717277526855
    10. '[n' → logprob: -10.255717277526855

Token 520: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.03730388358235359
    2. '(S' → logprob: -4.537303924560547
    3. ' of' → logprob: -4.662303924560547
    4. '[' → logprob: -5.037303924560547
    5. 'of' → logprob: -5.412303924560547
    6. 'des' → logprob: -6.912303924560547
    7. '[String' → logprob: -6.912303924560547
    8. '[S' → logprob: -7.037303924560547
    9. '   ' → logprob: -7.662303924560547
    10. '<|end|>' → logprob: -7.787303924560547

Token 521: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.09571918100118637
    2. 'S' → logprob: -3.3457190990448
    3. 'strings' → logprob: -3.4707190990448
    4. '[str' → logprob: -3.7207190990448
    5. 's' → logprob: -8.220719337463379
    6. ' str' → logprob: -9.095719337463379
    7. 'SR' → logprob: -9.220719337463379
    8. 'string' → logprob: -9.970719337463379
    9. ' strings' → logprob: -10.095719337463379
    10. 'chains' → logprob: -10.595719337463379

Token 522: ' l' (ID: 305)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7684547901153564
    2. '()' → logprob: -1.3934547901153564
    3. '<|end|>' → logprob: -2.3934547901153564
    4. 'for' → logprob: -2.7684547901153564
    5. '[' → logprob: -3.6434547901153564
    6. ')' → logprob: -4.018454551696777
    7. '[str' → logprob: -4.143454551696777
    8. '   ' → logprob: -4.393454551696777
    9. '(n' → logprob: -4.893454551696777
    10. '(' → logprob: -5.018454551696777

Token 523: 'ues' (ID: 1406)
  Prédit: 'ines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.6520751118659973
    2. 'ignes' → logprob: -1.7770750522613525
    3. 'es' → logprob: -2.2770750522613525
    4. 'ist' → logprob: -2.5270750522613525
    5. 'is' → logprob: -3.4020750522613525
    6. '```' → logprob: -3.9020750522613525
    7. '   ' → logprob: -4.527075290679932
    8. 'istes' → logprob: -4.652075290679932
    9. 'ues' → logprob: -4.902075290679932
    10. 'ists' → logprob: -5.152075290679932

Token 524: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3986939489841461
    2. '()' → logprob: -1.8986939191818237
    3. '(n' → logprob: -2.3986940383911133
    4. '()]' → logprob: -3.0236940383911133
    5. 'def' → logprob: -4.523694038391113
    6. '   ' → logprob: -4.648694038391113
    7. 'for' → logprob: -5.023694038391113
    8. ' for' → logprob: -5.398694038391113
    9. '<|end|>' → logprob: -5.898694038391113
    10. '[n' → logprob: -6.898694038391113

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043519894825294614
    2. 'return' → logprob: -7.7504353523254395
    3. ' return' → logprob: -12.500434875488281
    4. '	return' → logprob: -14.875434875488281
    5. '```' → logprob: -15.250434875488281
    6. 'def' → logprob: -16.25043487548828
    7. '{return' → logprob: -17.12543487548828
    8. '   ' → logprob: -17.75043487548828
    9. '"""
' → logprob: -17.87543487548828
    10. 'SR' → logprob: -17.87543487548828

Token 526: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023456504568457603
    2. 'return' → logprob: -3.773456573486328
    3. ' return' → logprob: -8.648456573486328
    4. '	return' → logprob: -10.898456573486328
    5. '```' → logprob: -11.773456573486328
    6. 'def' → logprob: -12.898456573486328
    7. '"""
' (adapté à ' """
') → logprob: -13.273456573486328
    8. '
' → logprob: -14.148456573486328
    9. 'Return' → logprob: -14.273456573486328
    10. '{return' → logprob: -14.523456573486328

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16093580424785614
    2. 'def' → logprob: -1.9109357595443726
    3. 'return' → logprob: -7.285935878753662
    4. ' return' → logprob: -11.410935401916504
    5. '
' → logprob: -11.785935401916504
    6. '	return' → logprob: -12.660935401916504
    7. '```' → logprob: -12.910935401916504
    8. ' def' → logprob: -13.910935401916504
    9. '  ' → logprob: -15.035935401916504
    10. ' ' → logprob: -15.910935401916504

Token 528: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.2246291337069124e-05
    2. ' return' → logprob: -11.000021934509277
    3. '   ' → logprob: -12.125021934509277
    4. '
' → logprob: -19.000022888183594
    5. '	return' → logprob: -19.125022888183594
    6. '{return' → logprob: -19.250022888183594
    7. 'def' → logprob: -19.250022888183594
    8. '```' → logprob: -19.750022888183594
    9. '[' → logprob: -19.875022888183594
    10. 'Return' → logprob: -20.125022888183594

Token 529: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.3883402943611145
    2. '[' → logprob: -1.1383402347564697
    3. ' [' → logprob: -7.013340473175049
    4. '[L' → logprob: -8.26333999633789
    5. '[s' → logprob: -8.38833999633789
    6. '[str' → logprob: -10.26333999633789
    7. '[String' → logprob: -10.63833999633789
    8. '[I' → logprob: -12.13833999633789
    9. 'LS' → logprob: -13.13833999633789
    10. 'S' → logprob: -13.13833999633789

Token 530: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.128163257315464e-07
    2. ' S' → logprob: -16.0
    3. 'sys' → logprob: -16.5
    4. 's' → logprob: -18.5
    5. 'input' → logprob: -18.625
    6. 'str' → logprob: -19.5
    7. '   ' → logprob: -19.5
    8. 'Ｓ' → logprob: -20.875
    9. '	S' → logprob: -21.25
    10. '_S' → logprob: -21.375

Token 531: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.810037742368877e-05
    2. '()]' → logprob: -10.250038146972656
    3. ' ()' → logprob: -13.875038146972656
    4. '(' → logprob: -14.250038146972656
    5. '(n' → logprob: -14.875038146972656
    6. 'for' → logprob: -15.125038146972656
    7. '()
' → logprob: -15.375038146972656
    8. '().' → logprob: -16.125038146972656
    9. '()]
' → logprob: -17.625038146972656
    10. '()[' → logprob: -17.625038146972656

Token 532: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05087948590517044
    2. 'for' → logprob: -3.05087947845459
    3. '(n' → logprob: -6.55087947845459
    4. ' for' → logprob: -7.55087947845459
    5. '(' → logprob: -8.05087947845459
    6. '(i' → logprob: -11.55087947845459
    7. ' ()' → logprob: -12.67587947845459
    8. '	for' → logprob: -14.05087947845459
    9. '()]' → logprob: -14.30087947845459
    10. '(for' → logprob: -14.55087947845459

Token 533: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14791269600391388
    2. 'i' → logprob: -2.1479127407073975
    3. ' i' → logprob: -4.272912502288818
    4. ' _' → logprob: -5.147912502288818
    5. '_i' → logprob: -6.897912502288818
    6. '	i' → logprob: -13.772912979125977
    7. ' ' → logprob: -14.147912979125977
    8. ' in' → logprob: -14.897912979125977
    9. '_=' → logprob: -15.397912979125977
    10. '
' → logprob: -15.772912979125977

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0383254736661911
    2. 'in' → logprob: -3.288325548171997
    3. ' i' → logprob: -8.413325309753418
    4. 'n' → logprob: -10.538325309753418
    5. 'i' → logprob: -10.788325309753418
    6. '_' → logprob: -12.913325309753418
    7. ' ' → logprob: -12.913325309753418
    8. 'import' → logprob: -13.163325309753418
    9. '	in' → logprob: -13.663325309753418
    10. 'range' → logprob: -13.788325309753418

Token 535: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150178715586662
    2. ' range' → logprob: -4.018150329589844
    3. 'in' → logprob: -16.018150329589844
    4. '_' → logprob: -16.893150329589844
    5. 'i' → logprob: -17.268150329589844
    6. '_range' → logprob: -17.268150329589844
    7. ' in' → logprob: -18.268150329589844
    8. '	range' → logprob: -18.268150329589844
    9. '(range' → logprob: -18.518150329589844
    10. ' ' → logprob: -20.643150329589844

Token 536: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0233012642711401
    2. ' range' → logprob: -3.773301362991333
    3. '(range' → logprob: -9.898301124572754
    4. '	range' → logprob: -13.148301124572754
    5. '(n' → logprob: -13.398301124572754
    6. 'n' → logprob: -13.898301124572754
    7. '(' → logprob: -14.148301124572754
    8. 'rang' → logprob: -16.02330207824707
    9. 'in' → logprob: -16.39830207824707
    10. '
' → logprob: -17.02330207824707

Token 537: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.015970202162861824
    2. ')' → logprob: -4.640970230102539
    3. '(n' → logprob: -6.015970230102539
    4. 'n' → logprob: -6.140970230102539
    5. ']' → logprob: -6.765970230102539
    6. 'range' → logprob: -8.265970230102539
    7. '()]' → logprob: -9.890970230102539
    8. '(' → logprob: -10.015970230102539
    9. 'in' → logprob: -10.390970230102539
    10. ')],' → logprob: -11.140970230102539

Token 538: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013440960901789367
    2. '#' → logprob: -9.250134468078613
    3. '
' → logprob: -10.875134468078613
    4. 'class' → logprob: -11.500134468078613
    5. '<|end|>' → logprob: -12.750134468078613
    6. '\' → logprob: -13.500134468078613
    7. 'from' → logprob: -13.625134468078613
    8. '```' → logprob: -13.875134468078613
    9. 'import' → logprob: -14.000134468078613
    10. 'de' → logprob: -15.125134468078613

Token 539: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3522732257843018
    2. 'WS' → logprob: -1.3522732257843018
    3. 'WR' → logprob: -2.4772732257843018
    4. 'DR' → logprob: -2.7272732257843018
    5. 'print' → logprob: -3.1022732257843018
    6. 'input' → logprob: -3.2272732257843018
    7. 'MS' → logprob: -3.4772732257843018
    8. 'LS' → logprob: -3.4772732257843018
    9. 'IR' → logprob: -4.477272987365723
    10. 'D' → logprob: -4.477272987365723

Token 540: 'SR' (ID: 22892)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.12456061691045761
    2. 'S' → logprob: -2.249560594558716
    3. 'IR' → logprob: -5.124560832977295
    4. 'R' → logprob: -5.499560832977295
    5. 'SR' → logprob: -8.124560356140137
    6. 'IS' → logprob: -8.624560356140137
    7. 'SI' → logprob: -8.624560356140137
    8. '=[]' → logprob: -8.624560356140137
    9. 'L' → logprob: -8.999560356140137
    10. 'def' → logprob: -9.374560356140137

Token 541: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.125048637390137
    3. 'def' → logprob: -11.875048637390137
    4. ' (' → logprob: -14.250048637390137
    5. '(N' → logprob: -16.00004768371582
    6. '(
' → logprob: -16.75004768371582
    7. ' def' → logprob: -17.12504768371582
    8. 'n' → logprob: -17.12504768371582
    9. '(def' → logprob: -17.62504768371582
    10. '(num' → logprob: -18.00004768371582

Token 542: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01626954972743988
    2. '):' → logprob: -4.141269683837891
    3. '):
' → logprob: -8.89126968383789
    4. '(' → logprob: -10.01626968383789
    5. 'def' → logprob: -10.26626968383789
    6. ')' → logprob: -11.51626968383789
    7. '():' → logprob: -12.39126968383789
    8. 'n' → logprob: -13.76626968383789
    9. ' ):' → logprob: -14.39126968383789
    10. ':' → logprob: -14.76626968383789

Token 543: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017064384883269668
    2. '(' → logprob: -8.750170707702637
    3. 'def' → logprob: -11.875170707702637
    4. ':' → logprob: -12.875170707702637
    5. '(
' → logprob: -13.250170707702637
    6. 'n' → logprob: -14.375170707702637
    7. ' (' → logprob: -16.50016975402832
    8. '(def' → logprob: -16.50016975402832
    9. ':
' → logprob: -16.87516975402832
    10. ' def' → logprob: -17.12516975402832

Token 544: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21082593500614166
    2. '(n' → logprob: -1.7108259201049805
    3. 'n' → logprob: -5.2108259201049805
    4. '   ' → logprob: -6.3358259201049805
    5. ' def' → logprob: -6.4608259201049805
    6. '[
' → logprob: -8.96082592010498
    7. '(
' → logprob: -8.96082592010498
    8. '[n' → logprob: -9.21082592010498
    9. '(' → logprob: -9.71082592010498
    10. '(def' → logprob: -10.08582592010498

Token 545: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3861420154571533
    2. 'n' → logprob: -1.3861420154571533
    3. '(n' → logprob: -2.8861420154571533
    4. '   ' → logprob: -4.261141777038574
    5. '
' → logprob: -8.386141777038574
    6. ' def' → logprob: -9.011141777038574
    7. ' n' → logprob: -11.761141777038574
    8. '	n' → logprob: -11.761141777038574
    9. '"""
' → logprob: -12.386141777038574
    10. '```' → logprob: -12.511141777038574

Token 546: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010260174050927162
    2. '"""
' → logprob: -4.635260105133057
    3. ' def' → logprob: -8.385260581970215
    4. '   ' → logprob: -8.510260581970215
    5. '
' → logprob: -10.760260581970215
    6. '"""' → logprob: -10.885260581970215
    7. ''''
' → logprob: -11.260260581970215
    8. '(n' → logprob: -11.635260581970215
    9. '(
' → logprob: -12.510260581970215
    10. '[
' → logprob: -13.385260581970215

Token 547: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006930981762707233
    2. ' n' → logprob: -5.256930828094482
    3. '(n' → logprob: -6.381930828094482
    4. '	n' → logprob: -13.00693130493164
    5. '[n' → logprob: -14.13193130493164
    6. '   ' → logprob: -15.13193130493164
    7. 'def' → logprob: -15.25693130493164
    8. '```' → logprob: -16.13193130493164
    9. 'int' → logprob: -16.63193130493164
    10. ')n' → logprob: -17.50693130493164

Token 548: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0075940839014947414
    2. '(' → logprob: -5.257594108581543
    3. '_lines' → logprob: -7.632594108581543
    4. ' lines' → logprob: -7.757594108581543
    5. 'lines' → logprob: -7.882594108581543
    6. 'def' → logprob: -8.257594108581543
    7. 'n' → logprob: -8.382594108581543
    8. ' lignes' → logprob: -9.132594108581543
    9. 'Lines' → logprob: -9.757594108581543
    10. ' n' → logprob: -9.882594108581543

Token 549: ' depuis' (ID: 16277)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09462998807430267
    2. 'def' → logprob: -2.469630002975464
    3. '   ' → logprob: -5.469629764556885
    4. 'à' → logprob: -7.344629764556885
    5. ' à' → logprob: -7.594629764556885
    6. 'n' → logprob: -9.094630241394043
    7. ',' → logprob: -9.969630241394043
    8. ' (' → logprob: -10.094630241394043
    9. '```' → logprob: -10.594630241394043
    10. ' def' → logprob: -10.719630241394043

Token 550: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0038851078134030104
    2. 'l' → logprob: -6.378885269165039
    3. 'la' → logprob: -7.128885269165039
    4. ' sys' → logprob: -7.628885269165039
    5. 'n' → logprob: -8.378885269165039
    6. 'ls' → logprob: -8.753885269165039
    7. 'LS' → logprob: -9.003885269165039
    8. 'le' → logprob: -9.378885269165039
    9. '(sys' → logprob: -9.628885269165039
    10. 'range' → logprob: -10.003885269165039

Token 551: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.35245078802108765
    2. 'e' → logprob: -1.9774508476257324
    3. 'sys' → logprob: -2.7274508476257324
    4. 'a' → logprob: -3.2274508476257324
    5. '=sys' → logprob: -3.6024508476257324
    6. 'es' → logprob: -4.352450847625732
    7. ''' → logprob: -5.352450847625732
    8. ''ent' → logprob: -6.602450847625732
    9. 'entrée' → logprob: -6.977450847625732
    10. 'input' → logprob: -7.102450847625732

Token 552: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.09774168580770493
    2. '()' → logprob: -3.5977416038513184
    3. '(n' → logprob: -3.8477416038513184
    4. ' standard' → logprob: -3.8477416038513184
    5. '   ' → logprob: -4.222741603851318
    6. '()
' → logprob: -5.847741603851318
    7. '_standard' → logprob: -6.347741603851318
    8. 'def' → logprob: -6.972741603851318
    9. '```' → logprob: -6.972741603851318
    10. 'std' → logprob: -7.972741603851318

Token 553: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02842538431286812
    2. 'def' → logprob: -3.778425455093384
    3. '   ' → logprob: -5.778425216674805
    4. '(
' → logprob: -7.028425216674805
    5. '(' → logprob: -7.278425216674805
    6. ',' → logprob: -8.403425216674805
    7. 'n' → logprob: -9.028425216674805
    8. '.' → logprob: -10.278425216674805
    9. ')' → logprob: -10.403425216674805
    10. '```' → logprob: -11.403425216674805

Token 554: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21971260011196136
    2. 'return' → logprob: -2.219712495803833
    3. ' retourne' → logprob: -2.844712495803833
    4. 'ret' → logprob: -3.969712495803833
    5. 'ren' → logprob: -5.469712734222412
    6. '
' → logprob: -5.469712734222412
    7. ' return' → logprob: -6.844712734222412
    8. 'returns' → logprob: -7.344712734222412
    9. ' ren' → logprob: -8.344712257385254
    10. 'def' → logprob: -8.469712257385254

Token 555: ' décou' (ID: 68302)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09926120191812515
    2. 'ret' → logprob: -3.4742612838745117
    3. ' retourne' → logprob: -3.5992612838745117
    4. 'split' → logprob: -4.224261283874512
    5. 'd' → logprob: -5.599261283874512
    6. ' return' → logprob: -5.724261283874512
    7. 'spl' → logprob: -5.849261283874512
    8. '[' → logprob: -5.974261283874512
    9. 'returns' → logprob: -6.224261283874512
    10. 'div' → logprob: -6.724261283874512

Token 556: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.004265608265995979
    2. 'page' → logprob: -5.504265785217285
    3. 'p' → logprob: -9.129265785217285
    4. 'pa' → logprob: -10.504265785217285
    5. '```' → logprob: -11.004265785217285
    6. 'per' → logprob: -11.504265785217285
    7. '
' → logprob: -12.254265785217285
    8. 'pie' → logprob: -12.504265785217285
    9. 'pte' → logprob: -12.504265785217285
    10. 'le' → logprob: -13.379265785217285

Token 557: ' en' (ID: 469)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16018380224704742
    2. 'en' → logprob: -2.410183906555176
    3. ' en' → logprob: -2.910183906555176
    4. '(' → logprob: -6.035183906555176
    5. '()' → logprob: -7.410183906555176
    6. '(en' → logprob: -7.785183906555176
    7. 'def' → logprob: -9.535183906555176
    8. '```' → logprob: -9.785183906555176
    9. '(
' → logprob: -10.160183906555176
    10. ' (' → logprob: -10.160183906555176

Token 558: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09325655549764633
    2. 'lists' → logprob: -3.5932564735412598
    3. '[' → logprob: -4.09325647354126
    4. ' list' → logprob: -4.21825647354126
    5. 'liste' → logprob: -4.34325647354126
    6. ' listes' → logprob: -5.09325647354126
    7. '[str' → logprob: -5.84325647354126
    8. ' lists' → logprob: -6.71825647354126
    9. ' liste' → logprob: -6.71825647354126
    10. ' [' → logprob: -6.84325647354126

Token 559: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31449219584465027
    2. '(' → logprob: -2.9394922256469727
    3. 'def' → logprob: -2.9394922256469727
    4. 'of' → logprob: -2.9394922256469727
    5. '[' → logprob: -3.1894922256469727
    6. '(n' → logprob: -3.9394922256469727
    7. '[str' → logprob: -4.189492225646973
    8. ' of' → logprob: -5.064492225646973
    9. '()[' → logprob: -5.564492225646973
    10. 's' → logprob: -5.689492225646973

Token 560: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.48436442017555237
    2. ' chaînes' → logprob: -1.48436439037323
    3. 'strings' → logprob: -2.2343645095825195
    4. 'string' → logprob: -3.8593645095825195
    5. 'cha' → logprob: -3.9843645095825195
    6. 'chain' → logprob: -4.7343645095825195
    7. 'chaine' → logprob: -7.1093645095825195
    8. 'chains' → logprob: -7.7343645095825195
    9. ' strings' → logprob: -8.60936450958252
    10. ' chain' → logprob: -8.85936450958252

Token 561: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004732483997941017
    2. 'def' → logprob: -5.379732608795166
    3. '(' → logprob: -10.129732131958008
    4. '.' → logprob: -10.504732131958008
    5. '   ' → logprob: -10.629732131958008
    6. 'for' → logprob: -12.254732131958008
    7. '```' → logprob: -12.254732131958008
    8. '(
' → logprob: -12.879732131958008
    9. ' (' → logprob: -13.254732131958008
    10. 'n' → logprob: -13.254732131958008

Token 562: '    
' (ID: 1944)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08750045299530029
    2. 'def' → logprob: -2.71250057220459
    3. '   ' → logprob: -4.08750057220459
    4. '
' → logprob: -8.46250057220459
    5. ' def' → logprob: -8.83750057220459
    6. '(' → logprob: -9.21250057220459
    7. '    
' → logprob: -9.83750057220459
    8. '```' → logprob: -9.96250057220459
    9. '(
' → logprob: -10.58750057220459
    10. '[n' → logprob: -11.83750057220459

Token 563: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03792179003357887
    2. '(n' → logprob: -3.662921905517578
    3. '   ' → logprob: -4.537921905517578
    4. ' def' → logprob: -7.162921905517578
    5. '(' → logprob: -10.037921905517578
    6. 'n' → logprob: -11.662921905517578
    7. '(
' → logprob: -11.912921905517578
    8. '
' → logprob: -12.037921905517578
    9. '  ' → logprob: -12.912921905517578
    10. '```' → logprob: -12.912921905517578

Token 564: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011190117336809635
    2. 'Args' (adapté à ' Args') → logprob: -4.761189937591553
    3. 'return' → logprob: -6.636189937591553
    4. '   ' → logprob: -6.886189937591553
    5. ' def' → logprob: -8.886190414428711
    6. '```' → logprob: -9.636190414428711
    7. '
' → logprob: -11.386190414428711
    8. 'Def' → logprob: -12.261190414428711
    9. ' Args' → logprob: -12.386190414428711
    10. ' return' → logprob: -12.511190414428711

Token 565: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0281448345631361
    2. '   ' → logprob: -4.153144836425781
    3. 'def' → logprob: -4.653144836425781
    4. ':' → logprob: -7.028144836425781
    5. '(' → logprob: -8.153144836425781
    6. '):
' → logprob: -8.153144836425781
    7. '(
' → logprob: -8.278144836425781
    8. '=' → logprob: -8.278144836425781
    9. '):' → logprob: -9.653144836425781
    10. ':
' → logprob: -9.653144836425781

Token 566: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5179093480110168
    2. '       ' → logprob: -1.142909288406372
    3. 'n' → logprob: -2.517909288406372
    4. '(n' → logprob: -5.642909526824951
    5. '    ' → logprob: -8.142909049987793
    6. '	n' → logprob: -8.267909049987793
    7. ' n' → logprob: -8.642909049987793
    8. '     ' → logprob: -9.017909049987793
    9. '      ' → logprob: -9.517909049987793
    10. ' ' → logprob: -10.267909049987793

Token 567: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -17.0
    3. '   ' → logprob: -17.125
    4. '```' → logprob: -19.375
    5. 'self' → logprob: -19.5
    6. '
' → logprob: -20.0
    7. 'def' → logprob: -20.125
    8. '	n' → logprob: -20.25
    9. '(n' → logprob: -21.0
    10. '`' → logprob: -21.875

Token 568: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.025035226717591286
    2. '(n' → logprob: -3.7750351428985596
    3. ':' → logprob: -7.400035381317139
    4. ')' → logprob: -7.900035381317139
    5. '):
' → logprob: -8.40003490447998
    6. '(int' → logprob: -8.77503490447998
    7. '   ' → logprob: -9.02503490447998
    8. 'def' → logprob: -9.15003490447998
    9. '(' → logprob: -9.27503490447998
    10. 'n' → logprob: -11.15003490447998

Token 569: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1472419600977446e-06
    2. ' int' → logprob: -14.500000953674316
    3. 'n' → logprob: -14.875000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '
' → logprob: -17.500001907348633
    6. '(int' → logprob: -17.625001907348633
    7. ')' → logprob: -18.625001907348633
    8. ':int' → logprob: -18.625001907348633
    9. '=int' → logprob: -18.750001907348633
    10. '```' → logprob: -19.875001907348633

Token 570: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08999275416135788
    2. '):
' → logprob: -2.4649927616119385
    3. ')' → logprob: -7.589992523193359
    4. '(n' → logprob: -8.33999252319336
    5. '   ' → logprob: -8.46499252319336
    6. ':' → logprob: -10.33999252319336
    7. '):
' → logprob: -10.58999252319336
    8. '):

' → logprob: -11.33999252319336
    9. 'n' → logprob: -11.46499252319336
    10. 'def' → logprob: -12.33999252319336

Token 571: ' Nombre' (ID: 70208)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3341851234436035
    2. 'n' → logprob: -1.4591851234436035
    3. 'int' → logprob: -3.4591851234436035
    4. ' int' → logprob: -3.9591851234436035
    5. '(n' → logprob: -7.0841851234436035
    6. 'def' → logprob: -9.459184646606445
    7. '   ' → logprob: -9.709184646606445
    8. ' def' → logprob: -9.959184646606445
    9. ' ' → logprob: -10.334184646606445
    10. '    ' → logprob: -10.959184646606445

Token 572: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1615912914276123
    2. 'def' → logprob: -2.9115912914276123
    3. '=' → logprob: -3.1615912914276123
    4. ' de' → logprob: -3.9115912914276123
    5. '=n' → logprob: -4.286591529846191
    6. 'de' → logprob: -4.661591529846191
    7. 'd' → logprob: -6.661591529846191
    8. ')n' → logprob: -7.036591529846191
    9. 's' → logprob: -7.286591529846191
    10. '(lines' → logprob: -7.286591529846191

Token 573: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07010982930660248
    2. 'lines' → logprob: -3.1951098442077637
    3. ' lignes' → logprob: -3.6951098442077637
    4. ' lines' → logprob: -6.320109844207764
    5. 'ligne' → logprob: -9.945109367370605
    6. '```' → logprob: -11.695109367370605
    7. 'n' → logprob: -11.820109367370605
    8. 'lin' → logprob: -11.945109367370605
    9. 'line' → logprob: -12.195109367370605
    10. '(lines' → logprob: -12.195109367370605

Token 574: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8328116536140442
    2. '):
' → logprob: -0.8328116536140442
    3. '=' → logprob: -2.5828115940093994
    4. '):' → logprob: -4.0828118324279785
    5. ')' → logprob: -4.4578118324279785
    6. ',' → logprob: -4.5828118324279785
    7. ':' → logprob: -4.9578118324279785
    8. '(n' → logprob: -6.4578118324279785
    9. 'def' → logprob: -6.5828118324279785
    10. '=None' → logprob: -6.9578118324279785

Token 575: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0623691082000732
    2. ' range' → logprob: -1.3123691082000732
    3. 'read' → logprob: -1.5623691082000732
    4. ' read' → logprob: -1.8123691082000732
    5. ' lire' → logprob: -4.437369346618652
    6. ' readline' → logprob: -8.062369346618652
    7. ' reading' → logprob: -11.187369346618652
    8. ' return' → logprob: -11.562369346618652
    9. '読む' → logprob: -11.562369346618652
    10. 'Lire' → logprob: -11.562369346618652

Token 576: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3432188630104065
    2. '   ' → logprob: -2.0932188034057617
    3. '):' → logprob: -2.3432188034057617
    4. ')' → logprob: -2.7182188034057617
    5. '(n' → logprob: -5.843218803405762
    6. 'def' → logprob: -7.093218803405762
    7. 'n' → logprob: -7.468218803405762
    8. '):
' → logprob: -7.718218803405762
    9. ')
' → logprob: -8.343218803405762
    10. ')n' → logprob: -9.593218803405762

Token 577: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005949704209342599
    2. '    
' → logprob: -7.5005950927734375
    3. 'def' → logprob: -11.250595092773438
    4. 'return' → logprob: -11.750595092773438
    5. '```' → logprob: -12.000595092773438
    6. '):
' → logprob: -12.500595092773438
    7. ')' → logprob: -12.500595092773438
    8. '       ' → logprob: -13.125595092773438
    9. '
' → logprob: -13.250595092773438
    10. ':' → logprob: -14.250595092773438

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001243920880369842
    2. 'def' → logprob: -6.751244068145752
    3. '       ' → logprob: -11.001243591308594
    4. 'returns' → logprob: -11.251243591308594
    5. 'return' → logprob: -11.376243591308594
    6. '
' → logprob: -11.876243591308594
    7. ')' → logprob: -12.126243591308594
    8. '```' → logprob: -12.126243591308594
    9. '    ' → logprob: -12.501243591308594
    10. '  ' → logprob: -12.501243591308594

Token 579: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5352881550788879
    2. 'Returns' (adapté à ' Returns') → logprob: -1.2852880954742432
    3. '   ' → logprob: -2.160288095474243
    4. 'returns' → logprob: -3.910288095474243
    5. 'def' → logprob: -6.535288333892822
    6. ' return' → logprob: -7.660288333892822
    7. 'Return' → logprob: -8.785287857055664
    8. '
' → logprob: -8.910287857055664
    9. '```' → logprob: -9.535287857055664
    10. '"""
' → logprob: -9.785287857055664

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7061154842376709
    2. '(n' → logprob: -1.331115484237671
    3. '   ' → logprob: -1.956115484237671
    4. 'def' → logprob: -2.956115484237671
    5. ':
' → logprob: -3.206115484237671
    6. '=' → logprob: -5.83111572265625
    7. '):' → logprob: -6.45611572265625
    8. ')' → logprob: -6.70611572265625
    9. '):
' → logprob: -7.20611572265625
    10. '       ' → logprob: -8.58111572265625

Token 581: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001222370658069849
    2. '[' → logprob: -7.126222133636475
    3. '[n' → logprob: -8.501222610473633
    4. 'def' → logprob: -8.876222610473633
    5. '       ' → logprob: -11.001222610473633
    6. '    ' → logprob: -11.001222610473633
    7. '[
' → logprob: -11.876222610473633
    8. '```' → logprob: -11.876222610473633
    9. '[List' → logprob: -12.001222610473633
    10. 'return' → logprob: -12.376222610473633

Token 582: ' list' (ID: 1562)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012029916048049927
    2. '   ' → logprob: -4.762030124664307
    3. ' return' → logprob: -6.512030124664307
    4. 'list' (adapté à ' list') → logprob: -6.512030124664307
    5. '[list' → logprob: -8.012029647827148
    6. '[List' → logprob: -10.262029647827148
    7. '[' → logprob: -10.512029647827148
    8. 'List' → logprob: -10.762029647827148
    9. '```' → logprob: -12.262029647827148
    10. '[
' → logprob: -13.012029647827148

Token 583: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5580078363418579
    2. '[' → logprob: -1.058007836341858
    3. '   ' → logprob: -3.6830077171325684
    4. 'def' → logprob: -3.9330077171325684
    5. '=' → logprob: -4.808007717132568
    6. '[List' → logprob: -5.558007717132568
    7. ' of' → logprob: -5.933007717132568
    8. '[
' → logprob: -6.183007717132568
    9. 'for' → logprob: -6.308007717132568
    10. '```' → logprob: -6.433007717132568

Token 584: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0053679910488426685
    2. ' [' → logprob: -5.755367755889893
    3. '   ' → logprob: -6.880367755889893
    4. 'return' → logprob: -7.755367755889893
    5. '[S' → logprob: -8.25536823272705
    6. '[List' → logprob: -8.88036823272705
    7. '[String' → logprob: -9.38036823272705
    8. '[L' → logprob: -9.75536823272705
    9. '[string' → logprob: -10.25536823272705
    10. '[[' → logprob: -10.63036823272705

Token 585: ' de' (ID: 334)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.9413127303123474
    2. '[List' → logprob: -1.3163127899169922
    3. '   ' → logprob: -2.441312789916992
    4. '[' → logprob: -2.816312789916992
    5. 'des' → logprob: -3.191312789916992
    6. '[
' → logprob: -3.191312789916992
    7. 'of' → logprob: -3.816312789916992
    8. 'de' → logprob: -3.941312789916992
    9. ' des' → logprob: -3.941312789916992
    10. '[str' → logprob: -4.191312789916992

Token 586: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.43122366070747375
    2. 'lists' → logprob: -1.1812236309051514
    3. 'LS' → logprob: -3.3062236309051514
    4. '[list' → logprob: -5.8062238693237305
    5. '[str' → logprob: -6.4312238693237305
    6. ' lists' → logprob: -6.6812238693237305
    7. '[' → logprob: -8.18122386932373
    8. ' list' → logprob: -9.55622386932373
    9. '[List' → logprob: -9.55622386932373
    10. 'listas' → logprob: -9.55622386932373

Token 587: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.10145942121744156
    2. '[list' → logprob: -2.726459503173828
    3. 'de' → logprob: -4.851459503173828
    4. '[List' → logprob: -4.976459503173828
    5. 'of' → logprob: -5.351459503173828
    6. 'des' → logprob: -5.351459503173828
    7. '   ' → logprob: -6.101459503173828
    8. '[' → logprob: -6.101459503173828
    9. ' de' → logprob: -7.226459503173828
    10. ']' → logprob: -7.601459503173828

Token 588: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.007824990898370743
    2. 'strings' → logprob: -5.257824897766113
    3. 'string' → logprob: -6.007824897766113
    4. ' str' → logprob: -9.882824897766113
    5. '[str' → logprob: -10.257824897766113
    6. ' chaînes' → logprob: -11.007824897766113
    7. '(str' → logprob: -11.882824897766113
    8. ' strings' → logprob: -12.257824897766113
    9. 'chaine' → logprob: -12.382824897766113
    10. 'chain' → logprob: -13.132824897766113

Token 589: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.146165132522583
    2. ']' → logprob: -2.021165132522583
    3. '[n' → logprob: -6.521164894104004
    4. '   ' → logprob: -7.896164894104004
    5. ']
' → logprob: -8.146164894104004
    6. 'for' → logprob: -8.271164894104004
    7. 'def' → logprob: -8.521164894104004
    8. '.' → logprob: -8.896164894104004
    9. '```' → logprob: -9.146164894104004
    10. '[(' → logprob: -9.646164894104004

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20775240659713745
    2. '(n' → logprob: -1.7077524662017822
    3. 'def' → logprob: -5.332752227783203
    4. '```' → logprob: -7.457752227783203
    5. '(' → logprob: -8.082752227783203
    6. ']' → logprob: -8.957752227783203
    7. ')' → logprob: -9.207752227783203
    8. '(
' → logprob: -9.457752227783203
    9. '
' → logprob: -9.582752227783203
    10. '[n' → logprob: -10.457752227783203

Token 591: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005833406466990709
    2. '"""
' (adapté à ' """
') → logprob: -5.505833625793457
    3. ']' → logprob: -7.505833625793457
    4. 'return' → logprob: -7.880833625793457
    5. '```' → logprob: -7.880833625793457
    6. '"""' → logprob: -8.380833625793457
    7. 'def' → logprob: -8.880833625793457
    8. ']
' → logprob: -10.880833625793457
    9. ')' → logprob: -11.005833625793457
    10. '=' → logprob: -11.880833625793457

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012630375567823648
    2. 'return' → logprob: -9.000125885009766
    3. 'def' → logprob: -13.125125885009766
    4. ' return' → logprob: -14.000125885009766
    5. '	return' → logprob: -16.375125885009766
    6. '```' → logprob: -17.500125885009766
    7. '
' → logprob: -19.000125885009766
    8. '   ' → logprob: -19.250125885009766
    9. '       ' → logprob: -20.000125885009766
    10. '{return' → logprob: -20.625125885009766

Token 593: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.9266199160483666e-05
    2. ' return' → logprob: -11.250019073486328
    3. '   ' → logprob: -12.000019073486328
    4. 'def' → logprob: -16.500019073486328
    5. '
' → logprob: -17.125019073486328
    6. '```' → logprob: -19.625019073486328
    7. '	return' → logprob: -19.875019073486328
    8. 'LS' → logprob: -20.625019073486328
    9. '[' → logprob: -21.750019073486328
    10. 'eturn' → logprob: -22.250019073486328

Token 594: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.167648876318708e-05
    2. '[S' → logprob: -10.625041961669922
    3. ' [' → logprob: -11.125041961669922
    4. '[L' → logprob: -13.125041961669922
    5. '[List' → logprob: -15.250041961669922
    6. '[String' → logprob: -16.375041961669922
    7. '[list' → logprob: -16.875041961669922
    8. 'LS' → logprob: -17.000041961669922
    9. '[str' → logprob: -17.500041961669922
    10. '   ' → logprob: -17.500041961669922

Token 595: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -3.292907877039397e-06
    2. ' LS' → logprob: -13.00000286102295
    3. 'S' → logprob: -14.00000286102295
    4. 'ls' → logprob: -16.500003814697266
    5. 'sys' → logprob: -17.750003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '(' → logprob: -19.500003814697266
    8. 'L' → logprob: -19.875003814697266
    9. 'list' → logprob: -20.000003814697266
    10. '  ' → logprob: -20.000003814697266

Token 596: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.514650183613412e-05
    2. ' (' → logprob: -10.250055313110352
    3. '(' → logprob: -11.000055313110352
    4. 'for' → logprob: -13.875055313110352
    5. ')(' → logprob: -14.250055313110352
    6. '](' → logprob: -14.500055313110352
    7. ']' → logprob: -15.625055313110352
    8. '(i' → logprob: -16.00005531311035
    9. ')' → logprob: -16.12505531311035
    10. '((' → logprob: -16.12505531311035

Token 597: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.159660890465602e-05
    2. 'for' → logprob: -10.00007152557373
    3. '(' → logprob: -11.00007152557373
    4. ' (' → logprob: -12.50007152557373
    5. '(i' → logprob: -12.62507152557373
    6. ' for' → logprob: -13.00007152557373
    7. 'n' → logprob: -16.500072479248047
    8. '(for' → logprob: -17.500072479248047
    9. '((' → logprob: -18.000072479248047
    10. ')' → logprob: -18.875072479248047

Token 598: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013035668234806508
    2. ' i' → logprob: -9.000130653381348
    3. 'n' → logprob: -12.000130653381348
    4. 'range' → logprob: -15.125130653381348
    5. 'int' → logprob: -15.750130653381348
    6. '_i' → logprob: -16.00012969970703
    7. '(i' → logprob: -16.37512969970703
    8. '_' → logprob: -16.87512969970703
    9. 'in' → logprob: -18.50012969970703
    10. ' in' → logprob: -18.87512969970703

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760101079940796
    2. 'in' → logprob: -0.8260101079940796
    3. 'range' → logprob: -10.576009750366211
    4. 'n' → logprob: -11.326009750366211
    5. '(' → logprob: -11.326009750366211
    6. 'i' → logprob: -11.951009750366211
    7. 'import' → logprob: -12.701009750366211
    8. '(n' → logprob: -12.701009750366211
    9. '(i' → logprob: -13.826009750366211
    10. '(in' → logprob: -13.951009750366211

Token 600: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502598519437015
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -15.501502990722656
    4. 'in' → logprob: -19.126502990722656
    5. '	range' → logprob: -20.626502990722656
    6. ' ' → logprob: -21.126502990722656
    7. '   ' → logprob: -21.376502990722656
    8. ' in' → logprob: -21.751502990722656
    9. '  ' → logprob: -22.751502990722656
    10. '_range' → logprob: -23.126502990722656

Token 601: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04921524226665497
    2. '(n' → logprob: -3.049215316772461
    3. '(range' → logprob: -8.049215316772461
    4. 'n' → logprob: -8.549215316772461
    5. ' range' → logprob: -9.174215316772461
    6. '(' → logprob: -11.549215316772461
    7. 'in' → logprob: -13.799215316772461
    8. '(i' → logprob: -16.29921531677246
    9. 'i' → logprob: -16.79921531677246
    10. '_range' → logprob: -17.67421531677246

Token 602: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.28177496790885925
    2. '(n' → logprob: -1.4067749977111816
    3. 'n' → logprob: -7.531774997711182
    4. ']' → logprob: -10.406774520874023
    5. '(' → logprob: -11.281774520874023
    6. '   ' → logprob: -11.531774520874023
    7. ')' → logprob: -11.781774520874023
    8. ' n' → logprob: -11.906774520874023
    9. ')n' → logprob: -12.281774520874023
    10. ')]
' → logprob: -13.031774520874023

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007439089938998222
    2. '
' → logprob: -5.507439136505127
    3. 'class' → logprob: -5.882439136505127
    4. '\' → logprob: -8.632438659667969
    5. '#' → logprob: -9.007438659667969
    6. '\n' → logprob: -9.382438659667969
    7. '

' → logprob: -9.507438659667969
    8. '<|end|>' → logprob: -10.507438659667969
    9. '```' → logprob: -10.757438659667969
    10. '    
' → logprob: -11.007438659667969

Token 604: ' SR' (ID: 30704)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012442545033991337
    2. ' main' → logprob: -5.762442588806152
    3. 'copy' → logprob: -6.762442588806152
    4. 'M' → logprob: -6.887442588806152
    5. 'default' → logprob: -7.137442588806152
    6. 'print' → logprob: -7.387442588806152
    7. 'WR' → logprob: -7.512442588806152
    8. 'input' → logprob: -7.637442588806152
    9. 'max' → logprob: -7.637442588806152
    10. 'G' → logprob: -7.887442588806152

Token 605: 'L' (ID: 43)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7128415107727051
    2. '(n' → logprob: -0.8378415107727051
    3. 'R' → logprob: -2.587841510772705
    4. '()' → logprob: -6.837841510772705
    5. 'def' → logprob: -8.837841033935547
    6. 'S' → logprob: -9.087841033935547
    7. '```' → logprob: -9.337841033935547
    8. 's' → logprob: -9.712841033935547
    9. 'r' → logprob: -10.212841033935547
    10. ' (' → logprob: -10.212841033935547

Token 606: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005590294953435659
    2. '(' → logprob: -5.255590438842773
    3. 'n' → logprob: -9.005590438842773
    4. ' (' → logprob: -9.380590438842773
    5. 'def' → logprob: -9.630590438842773
    6. '()' → logprob: -9.880590438842773
    7. 's' → logprob: -11.755590438842773
    8. '()(' → logprob: -12.005590438842773
    9. '(N' → logprob: -12.755590438842773
    10. '((' → logprob: -13.255590438842773

Token 607: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03565574809908867
    2. '):
' → logprob: -3.5356557369232178
    3. '(n' → logprob: -5.160655975341797
    4. ')' → logprob: -8.910655975341797
    5. 'def' → logprob: -12.535655975341797
    6. 'n' → logprob: -12.660655975341797
    7. ' ):' → logprob: -12.910655975341797
    8. '):
' → logprob: -13.035655975341797
    9. '):

' → logprob: -14.285655975341797
    10. ':' → logprob: -14.285655975341797

Token 608: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.5954712075181305e-05
    2. 'def' → logprob: -10.625036239624023
    3. '(' → logprob: -12.000036239624023
    4. '(
' → logprob: -12.500036239624023
    5. 'n' → logprob: -13.750036239624023
    6. ':' → logprob: -15.125036239624023
    7. '(def' → logprob: -16.125036239624023
    8. ' def' → logprob: -17.000036239624023
    9. '   ' → logprob: -17.125036239624023
    10. ' (' → logprob: -17.500036239624023

Token 609: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.044529180973768234
    2. 'def' → logprob: -3.2945291996002197
    3. '(
' → logprob: -5.169528961181641
    4. 'n' → logprob: -7.919528961181641
    5. '(' → logprob: -8.41952896118164
    6. '   ' → logprob: -9.16952896118164
    7. ' def' → logprob: -10.04452896118164
    8. '(S' → logprob: -11.66952896118164
    9. '(def' → logprob: -11.79452896118164
    10. ':' → logprob: -12.04452896118164

Token 610: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1353825330734253
    2. 'n' → logprob: -2.760382652282715
    3. '(n' → logprob: -3.135382652282715
    4. '"""
' → logprob: -4.510382652282715
    5. '   ' → logprob: -4.760382652282715
    6. ' def' → logprob: -8.885382652282715
    7. '(
' → logprob: -9.885382652282715
    8. '"""' → logprob: -10.760382652282715
    9. 'SR' → logprob: -10.885382652282715
    10. '
' → logprob: -11.135382652282715

Token 611: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036047372967004776
    2. '"""
' → logprob: -3.6610474586486816
    3. 'return' → logprob: -5.536047458648682
    4. '   ' → logprob: -5.911047458648682
    5. '(n' → logprob: -6.786047458648682
    6. 'SR' → logprob: -7.161047458648682
    7. '"""' → logprob: -7.661047458648682
    8. 'n' → logprob: -8.286046981811523
    9. ' def' → logprob: -9.161046981811523
    10. ''''
' → logprob: -9.786046981811523

Token 612: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1805526167154312
    2. '(n' → logprob: -1.80555260181427
    3. ' n' → logprob: -7.1805524826049805
    4. '[n' → logprob: -10.43055248260498
    5. '	n' → logprob: -12.55555248260498
    6. 'int' → logprob: -12.55555248260498
    7. 'def' → logprob: -12.55555248260498
    8. 's' → logprob: -13.18055248260498
    9. ' (' → logprob: -13.68055248260498
    10. '(' → logprob: -14.80555248260498

Token 613: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08092755824327469
    2. '(' → logprob: -2.955927610397339
    3. ' lines' → logprob: -4.70592737197876
    4. '_lines' → logprob: -5.08092737197876
    5. 'lines' → logprob: -5.58092737197876
    6. 's' → logprob: -6.45592737197876
    7. 'Lines' → logprob: -6.58092737197876
    8. ' lignes' → logprob: -7.20592737197876
    9. 'n' → logprob: -7.45592737197876
    10. '(lines' → logprob: -7.45592737197876

Token 614: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13008177280426025
    2. 'def' → logprob: -2.2550816535949707
    3. '(
' → logprob: -4.505081653594971
    4. '(' → logprob: -5.505081653594971
    5. '   ' → logprob: -7.880081653594971
    6. '(lambda' → logprob: -8.505082130432129
    7. '```' → logprob: -8.880082130432129
    8. '_' → logprob: -8.880082130432129
    9. '()' → logprob: -9.005082130432129
    10. 'from' → logprob: -9.130082130432129

Token 615: ' partir' (ID: 12100)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5589198470115662
    2. 'sys' → logprob: -1.808919906616211
    3. '[' → logprob: -2.308919906616211
    4. 'def' → logprob: -3.308919906616211
    5. '[
' → logprob: -3.558919906616211
    6. 'S' → logprob: -3.933919906616211
    7. 'return' → logprob: -4.308919906616211
    8. 'from' → logprob: -4.308919906616211
    9. ' range' → logprob: -4.558919906616211
    10. ' sys' → logprob: -4.808919906616211

Token 616: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4306926429271698
    2. '(n' → logprob: -1.1806926727294922
    3. 'def' → logprob: -3.305692672729492
    4. '(
' → logprob: -6.055692672729492
    5. ' de' → logprob: -6.555692672729492
    6. '   ' → logprob: -7.180692672729492
    7. ')' → logprob: -7.680692672729492
    8. 'de' → logprob: -8.055692672729492
    9. ' (' → logprob: -8.680692672729492
    10. ' des' → logprob: -9.055692672729492

Token 617: ' l' (ID: 305)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8154953122138977
    2. 'def' → logprob: -1.065495252609253
    3. 'LS' → logprob: -2.065495252609253
    4. 'sys' → logprob: -3.065495252609253
    5. 'n' → logprob: -4.315495491027832
    6. '(S' → logprob: -5.065495491027832
    7. 'range' → logprob: -5.065495491027832
    8. '(n' → logprob: -5.315495491027832
    9. 'SR' → logprob: -5.690495491027832
    10. ' def' → logprob: -6.315495491027832

Token 618: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4832900762557983
    2. ''entrée' → logprob: -1.6082900762557983
    3. '_' → logprob: -2.108290195465088
    4. ''' → logprob: -2.858290195465088
    5. 'def' → logprob: -3.233290195465088
    6. '_std' → logprob: -3.483290195465088
    7. 'es' → logprob: -3.483290195465088
    8. '__' → logprob: -3.733290195465088
    9. ''s' → logprob: -3.733290195465088
    10. 'u' → logprob: -3.858290195465088

Token 619: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43258917331695557
    2. '   ' → logprob: -2.432589054107666
    3. '():
' → logprob: -2.432589054107666
    4. '():' → logprob: -2.682589054107666
    5. ':' → logprob: -2.932589054107666
    6. '(n' → logprob: -3.807589054107666
    7. '()' → logprob: -4.307589054107666
    8. ':
' → logprob: -5.557589054107666
    9. '```' → logprob: -5.557589054107666
    10. '(
' → logprob: -6.182589054107666

Token 620: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08815392851829529
    2. 'def' → logprob: -2.713153839111328
    3. '(' → logprob: -5.088153839111328
    4. '(
' → logprob: -5.338153839111328
    5. '   ' → logprob: -5.963153839111328
    6. '():
' → logprob: -6.088153839111328
    7. '()' → logprob: -7.588153839111328
    8. 'for' → logprob: -8.088153839111328
    9. ':
' → logprob: -8.338153839111328
    10. ' def' → logprob: -8.588153839111328

Token 621: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4974203109741211
    2. ' def' → logprob: -1.247420310974121
    3. '   ' → logprob: -3.747420310974121
    4. '
' → logprob: -3.997420310974121
    5. 's' → logprob: -4.372420310974121
    6. ' return' → logprob: -4.622420310974121
    7. ' each' → logprob: -5.247420310974121
    8. ' 
' → logprob: -5.372420310974121
    9. '    
' → logprob: -5.497420310974121
    10. 'n' → logprob: -5.997420310974121

Token 622: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.29034683108329773
    2. 'ies' → logprob: -1.9153468608856201
    3. 'issant' → logprob: -2.54034686088562
    4. 'i' → logprob: -4.415346622467041
    5. 'is' → logprob: -5.540346622467041
    6. '```' → logprob: -5.540346622467041
    7. '   ' → logprob: -6.540346622467041
    8. 'issent' → logprob: -6.540346622467041
    9. 'ie' → logprob: -7.165346622467041
    10. 'def' → logprob: -7.915346622467041

Token 623: ' chaque' (ID: 21194)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1571163684129715
    2. 'en' → logprob: -2.532116413116455
    3. 'n' → logprob: -3.032116413116455
    4. 'def' → logprob: -5.032116413116455
    5. '   ' → logprob: -5.782116413116455
    6. '```' → logprob: -5.907116413116455
    7. '[n' → logprob: -6.157116413116455
    8. 'les' → logprob: -6.782116413116455
    9. '(' → logprob: -7.282116413116455
    10. ' en' → logprob: -7.907116413116455

Token 624: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7247419357299805
    2. 'en' → logprob: -1.2247419357299805
    3. ' en' → logprob: -1.8497419357299805
    4. 'ligne' → logprob: -3.2247419357299805
    5. '   ' → logprob: -4.7247419357299805
    6. '```' → logprob: -5.0997419357299805
    7. 'def' → logprob: -5.4747419357299805
    8. '_' → logprob: -6.7247419357299805
    9. 'l' → logprob: -7.0997419357299805
    10. 'chaine' → logprob: -7.4747419357299805

Token 625: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.20769824087619781
    2. 'def' → logprob: -1.8326982259750366
    3. '   ' → logprob: -4.332698345184326
    4. 's' → logprob: -5.332698345184326
    5. '()' → logprob: -6.082698345184326
    6. '(' → logprob: -6.332698345184326
    7. 'en' → logprob: -6.707698345184326
    8. '(n' → logprob: -7.082698345184326
    9. ' into' → logprob: -7.707698345184326
    10. 'into' → logprob: -8.332697868347168

Token 626: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25674864649772644
    2. ' list' → logprob: -2.006748676300049
    3. 'S' → logprob: -3.006748676300049
    4. 'str' → logprob: -4.256748676300049
    5. 'liste' → logprob: -4.756748676300049
    6. ' S' → logprob: -5.131748676300049
    7. ' une' → logprob: -5.256748676300049
    8. 'une' → logprob: -5.756748676300049
    9. ' liste' → logprob: -6.381748676300049
    10. 'LS' → logprob: -6.756748676300049

Token 627: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11809280514717102
    2. ' list' → logprob: -2.3680927753448486
    3. 'liste' → logprob: -4.118093013763428
    4. ' liste' → logprob: -6.618093013763428
    5. '[list' → logprob: -10.74309253692627
    6. 'string' → logprob: -11.11809253692627
    7. '```' → logprob: -11.11809253692627
    8. '   ' → logprob: -11.24309253692627
    9. 's' → logprob: -11.61809253692627
    10. '[]' → logprob: -12.36809253692627

Token 628: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.4849071204662323
    2. '[int' → logprob: -1.8599071502685547
    3. '[' → logprob: -2.6099071502685547
    4. 'd' → logprob: -2.8599071502685547
    5. 'de' → logprob: -3.7349071502685547
    6. 'def' → logprob: -3.9849071502685547
    7. 's' → logprob: -4.484907150268555
    8. ' of' → logprob: -4.859907150268555
    9. 'des' → logprob: -4.859907150268555
    10. 'of' → logprob: -5.109907150268555

Token 629: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5405247807502747
    2. 'int' → logprob: -0.9155247807502747
    3. 'ints' → logprob: -4.790524959564209
    4. 'list' → logprob: -5.790524959564209
    5. 'strings' → logprob: -5.915524959564209
    6. 'ent' → logprob: -5.915524959564209
    7. ' chaînes' → logprob: -9.16552448272705
    8. 'string' → logprob: -9.41552448272705
    9. 'chain' → logprob: -10.04052448272705
    10. 'liste' → logprob: -10.29052448272705

Token 630: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45100435614585876
    2. '   ' → logprob: -1.5760043859481812
    3. '(n' → logprob: -2.3260042667388916
    4. ' def' → logprob: -4.076004505157471
    5. ',' → logprob: -4.951004505157471
    6. ':
' → logprob: -5.076004505157471
    7. 's' → logprob: -5.451004505157471
    8. '(
' → logprob: -5.451004505157471
    9. '.
' → logprob: -5.826004505157471
    10. '():
' → logprob: -6.201004505157471

Token 631: '    
' (ID: 1944)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03881971538066864
    2. '(' → logprob: -3.5388197898864746
    3. ':' → logprob: -5.038819789886475
    4. 'def' → logprob: -6.663819789886475
    5. '   ' → logprob: -7.038819789886475
    6. '(
' → logprob: -9.163819313049316
    7. ' (' → logprob: -10.038819313049316
    8. '():' → logprob: -10.163819313049316
    9. '(S' → logprob: -10.663819313049316
    10. 's' → logprob: -10.663819313049316

Token 632: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01104440726339817
    2. '(n' → logprob: -4.886044502258301
    3. '   ' → logprob: -5.761044502258301
    4. ' def' → logprob: -8.2610445022583
    5. '```' → logprob: -11.2610445022583
    6. '(
' → logprob: -12.1360445022583
    7. 'n' → logprob: -13.1360445022583
    8. '
' → logprob: -13.6360445022583
    9. '(' → logprob: -13.6360445022583
    10. '{
' → logprob: -14.5110445022583

Token 633: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034994613379240036
    2. '"""
' → logprob: -6.878499507904053
    3. ' def' → logprob: -7.003499507904053
    4. '```' → logprob: -7.003499507904053
    5. '   ' → logprob: -7.628499507904053
    6. 'return' → logprob: -9.753499031066895
    7. '``' → logprob: -10.003499031066895
    8. ''''
' → logprob: -10.628499031066895
    9. '(n' → logprob: -11.503499031066895
    10. '"""' → logprob: -12.128499031066895

Token 634: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5479992628097534
    2. 'def' → logprob: -0.9229992628097534
    3. '   ' → logprob: -3.797999382019043
    4. ' def' → logprob: -6.797999382019043
    5. '```' → logprob: -8.172999382019043
    6. '(' → logprob: -8.672999382019043
    7. '(
' → logprob: -8.922999382019043
    8. ':' → logprob: -9.297999382019043
    9. ' (' → logprob: -9.422999382019043
    10. '):
' → logprob: -9.672999382019043

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1372540295124054
    2. '   ' → logprob: -2.262253999710083
    3. 'n' → logprob: -4.137254238128662
    4. 'def' → logprob: -5.012254238128662
    5. '(n' → logprob: -6.887254238128662
    6. '    ' → logprob: -8.512253761291504
    7. '     ' → logprob: -9.262253761291504
    8. '      ' → logprob: -10.012253761291504
    9. ' n' → logprob: -10.387253761291504
    10. '	n' → logprob: -10.637253761291504

Token 636: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -8.876193169271573e-05
    2. '   ' → logprob: -9.500088691711426
    3. ' n' → logprob: -11.250088691711426
    4. '	n' → logprob: -14.250088691711426
    5. 'def' → logprob: -16.375089645385742
    6. '```' → logprob: -16.500089645385742
    7. '(n' → logprob: -18.125089645385742
    8. '       ' → logprob: -18.250089645385742
    9. 'self' → logprob: -19.125089645385742
    10. '
' → logprob: -19.250089645385742

Token 637: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.229576587677002
    2. '):' → logprob: -1.229576587677002
    3. ':' → logprob: -1.979576587677002
    4. ' (' → logprob: -1.979576587677002
    5. ')' → logprob: -2.729576587677002
    6. '):
' → logprob: -2.854576587677002
    7. '(int' → logprob: -5.104576587677002
    8. '   ' → logprob: -5.229576587677002
    9. '(' → logprob: -6.354576587677002
    10. ':int' → logprob: -7.354576587677002

Token 638: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.75
    3. 'n' → logprob: -16.875
    4. '   ' → logprob: -16.875
    5. '[int' → logprob: -17.375
    6. '(int' → logprob: -18.125
    7. '```' → logprob: -18.375
    8. ')' → logprob: -19.375
    9. '=int' → logprob: -19.5
    10. ':int' → logprob: -19.625

Token 639: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004639572463929653
    2. '):
' → logprob: -6.004639625549316
    3. '   ' → logprob: -6.754639625549316
    4. ')' → logprob: -7.379639625549316
    5. ':' → logprob: -8.004639625549316
    6. ''):' → logprob: -11.629639625549316
    7. 'def' → logprob: -12.004639625549316
    8. ' ):' → logprob: -12.504639625549316
    9. '**' → logprob: -12.629639625549316
    10. ',' → logprob: -12.629639625549316

Token 640: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07471742480993271
    2. ' int' → logprob: -3.1997175216674805
    3. '   ' → logprob: -3.5747175216674805
    4. 'n' → logprob: -6.3247175216674805
    5. '(int' → logprob: -7.1997175216674805
    6. ' n' → logprob: -8.07471752166748
    7. 'def' → logprob: -9.44971752166748
    8. '    ' → logprob: -9.82471752166748
    9. ' ' → logprob: -10.07471752166748
    10. '[int' → logprob: -10.44971752166748

Token 641: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5791120529174805
    2. '   ' → logprob: -1.8291120529174805
    3. 'def' → logprob: -2.3291120529174805
    4. ':' → logprob: -2.7041120529174805
    5. ')' → logprob: -3.0791120529174805
    6. '=' → logprob: -4.0791120529174805
    7. ' de' → logprob: -4.3291120529174805
    8. '):
' → logprob: -5.0791120529174805
    9. ' (' → logprob: -5.3291120529174805
    10. '):' → logprob: -5.5791120529174805

Token 642: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0983009934425354
    2. ' lignes' → logprob: -2.4733009338378906
    3. 'lines' → logprob: -4.848300933837891
    4. ' lines' → logprob: -7.223300933837891
    5. 'ligne' → logprob: -7.348300933837891
    6. '```' → logprob: -10.09830093383789
    7. 'car' → logprob: -11.22330093383789
    8. ' ligne' → logprob: -11.97330093383789
    9. 'range' → logprob: -12.47330093383789
    10. 'line' → logprob: -12.47330093383789

Token 643: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6223021745681763
    2. '):' → logprob: -1.3723021745681763
    3. '   ' → logprob: -2.1223020553588867
    4. '):
' → logprob: -3.1223020553588867
    5. ')' → logprob: -3.7473020553588867
    6. 'def' → logprob: -4.247302055358887
    7. '=' → logprob: -5.872302055358887
    8. ':
' → logprob: -6.622302055358887
    9. ',' → logprob: -7.122302055358887
    10. '<|end|>' → logprob: -7.872302055358887

Token 644: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7419481873512268
    2. 'read' → logprob: -1.116948127746582
    3. 'range' → logprob: -1.866948127746582
    4. 'lit' → logprob: -3.491948127746582
    5. ' lire' → logprob: -4.616948127746582
    6. 'lu' → logprob: -7.991948127746582
    7. 'Lire' → logprob: -8.366948127746582
    8. 'lect' → logprob: -9.116948127746582
    9. 'la' → logprob: -9.366948127746582
    10. 'return' → logprob: -9.366948127746582

Token 645: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8817391991615295
    2. '):
' → logprob: -1.2567391395568848
    3. '(n' → logprob: -1.6317391395568848
    4. ')' → logprob: -3.0067391395568848
    5. '):' → logprob: -3.3817391395568848
    6. 'def' → logprob: -4.506739139556885
    7. '
' → logprob: -5.131739139556885
    8. 'n' → logprob: -6.131739139556885
    9. ':' → logprob: -7.506739139556885
    10. '```' → logprob: -7.506739139556885

Token 646: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004648696631193161
    2. '```' → logprob: -8.37546443939209
    3. 'def' → logprob: -9.12546443939209
    4. 'return' → logprob: -10.37546443939209
    5. ')' → logprob: -11.00046443939209
    6. '"""
' → logprob: -11.12546443939209
    7. '``' → logprob: -11.25046443939209
    8. '
' → logprob: -11.50046443939209
    9. '    
' → logprob: -11.50046443939209
    10. '    ' → logprob: -12.37546443939209

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.221884101862088e-05
    2. 'def' → logprob: -10.250092506408691
    3. '```' → logprob: -10.375092506408691
    4. 'return' → logprob: -11.500092506408691
    5. '
' → logprob: -11.750092506408691
    6. '  ' → logprob: -13.500092506408691
    7. '``' → logprob: -13.625092506408691
    8. '       ' → logprob: -13.875092506408691
    9. '"""
' → logprob: -14.125092506408691
    10. '   ' → logprob: -14.500092506408691

Token 648: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12776732444763184
    2. '   ' → logprob: -2.127767324447632
    3. '
' → logprob: -8.252767562866211
    4. '```' → logprob: -8.502767562866211
    5. 'Returns' (adapté à ' Returns') → logprob: -8.877767562866211
    6. ' return' → logprob: -8.877767562866211
    7. 'returns' → logprob: -10.627767562866211
    8. '	return' → logprob: -10.877767562866211
    9. 'Return' → logprob: -11.002767562866211
    10. 'def' → logprob: -11.377767562866211

Token 649: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29888758063316345
    2. 'def' → logprob: -1.5488876104354858
    3. '(n' → logprob: -4.298887729644775
    4. ':
' → logprob: -4.298887729644775
    5. ':' → logprob: -5.173887729644775
    6. '[
' → logprob: -5.173887729644775
    7. '[' → logprob: -5.798887729644775
    8. '[n' → logprob: -7.173887729644775
    9. '(
' → logprob: -7.548887729644775
    10. '):
' → logprob: -7.548887729644775

Token 650: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009327789884991944
    2. 'def' → logprob: -7.625932693481445
    3. 'return' → logprob: -8.000932693481445
    4. ' return' → logprob: -10.250932693481445
    5. '```' → logprob: -10.625932693481445
    6. '    ' → logprob: -10.750932693481445
    7. '[' → logprob: -11.500932693481445
    8. '  ' → logprob: -11.750932693481445
    9. ' def' → logprob: -12.875932693481445
    10. ' ' → logprob: -13.000932693481445

Token 651: ' list' (ID: 1562)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.8380071520805359
    2. 'list' (adapté à ' list') → logprob: -1.7130072116851807
    3. '[list' → logprob: -1.7130072116851807
    4. '[n' → logprob: -2.2130072116851807
    5. 'return' → logprob: -3.3380072116851807
    6. '[' → logprob: -3.8380072116851807
    7. '[L' → logprob: -4.713006973266602
    8. '[s' → logprob: -4.963006973266602
    9. '[List' → logprob: -5.213006973266602
    10. '[str' → logprob: -5.463006973266602

Token 652: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.847599983215332
    2. '[List' → logprob: -1.097599983215332
    3. '[
' → logprob: -2.847599983215332
    4. ':' → logprob: -2.847599983215332
    5. '[str' → logprob: -2.972599983215332
    6. '   ' → logprob: -3.722599983215332
    7. '[int' → logprob: -4.097599983215332
    8. '[list' → logprob: -4.847599983215332
    9. ':
' → logprob: -5.222599983215332
    10. 'def' → logprob: -5.722599983215332

Token 653: ' Liste' (ID: 61030)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.46745356917381287
    2. '[list' → logprob: -1.5924535989761353
    3. '[S' → logprob: -3.0924534797668457
    4. ' [' → logprob: -3.0924534797668457
    5. '[' → logprob: -3.2174534797668457
    6. '[str' → logprob: -4.217453479766846
    7. '[s' → logprob: -4.967453479766846
    8. ' list' → logprob: -5.217453479766846
    9. '   ' → logprob: -5.717453479766846
    10. '[
' → logprob: -6.217453479766846

Token 654: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5002261400222778
    2. '[
' → logprob: -1.8752261400222778
    3. '[str' → logprob: -2.6252260208129883
    4. ' of' → logprob: -2.7502260208129883
    5. '(' → logprob: -3.7502260208129883
    6. '[List' → logprob: -3.8752260208129883
    7. '   ' → logprob: -4.000226020812988
    8. '[list' → logprob: -4.375226020812988
    9. 'of' → logprob: -4.875226020812988
    10. '(
' → logprob: -5.000226020812988

Token 655: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03823644667863846
    2. 'lists' → logprob: -3.288236379623413
    3. ' list' → logprob: -9.788236618041992
    4. 'str' → logprob: -9.788236618041992
    5. '[list' → logprob: -10.163236618041992
    6. ' lists' → logprob: -10.913236618041992
    7. '[str' → logprob: -11.413236618041992
    8. 'liste' → logprob: -11.413236618041992
    9. 'listas' → logprob: -13.163236618041992
    10. 'strings' → logprob: -14.038236618041992

Token 656: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.31107839941978455
    2. '[' → logprob: -1.811078429222107
    3. '[list' → logprob: -2.9360783100128174
    4. ' of' → logprob: -4.8110785484313965
    5. '[List' → logprob: -4.9360785484313965
    6. '(list' → logprob: -5.0610785484313965
    7. '   ' → logprob: -5.3110785484313965
    8. '[
' → logprob: -5.4360785484313965
    9. 'of' → logprob: -5.6860785484313965
    10. 'de' → logprob: -5.8110785484313965

Token 657: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.10001663118600845
    2. 'chars' → logprob: -2.4750165939331055
    3. 'char' → logprob: -5.2250165939331055
    4. 'car' → logprob: -6.1000165939331055
    5. 'list' → logprob: -6.4750165939331055
    6. 'chr' → logprob: -7.6000165939331055
    7. ' str' → logprob: -7.6000165939331055
    8. 'characters' → logprob: -7.8500165939331055
    9. '[str' → logprob: -8.350016593933105
    10. 'strings' → logprob: -9.100016593933105

Token 658: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.387197345495224
    2. '   ' → logprob: -2.012197256088257
    3. ']' → logprob: -2.262197256088257
    4. '(' → logprob: -3.262197256088257
    5. '(
' → logprob: -4.762197494506836
    6. 'for' → logprob: -5.137197494506836
    7. '.' → logprob: -5.262197494506836
    8. ')' → logprob: -5.512197494506836
    9. 'def' → logprob: -5.512197494506836
    10. '(S' → logprob: -5.637197494506836

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009935104753822088
    2. 'def' → logprob: -7.250993728637695
    3. '```' → logprob: -8.375993728637695
    4. '"""
' → logprob: -10.750993728637695
    5. '()' → logprob: -11.750993728637695
    6. '(' → logprob: -12.500993728637695
    7. ')' → logprob: -12.750993728637695
    8. '(
' → logprob: -13.000993728637695
    9. ' def' → logprob: -13.000993728637695
    10. '``' → logprob: -13.375993728637695

Token 660: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009576742304489017
    2. 'def' → logprob: -7.125957489013672
    3. '```' → logprob: -9.875957489013672
    4. ']' → logprob: -10.375957489013672
    5. '"""
' (adapté à ' """
') → logprob: -11.125957489013672
    6. ')' → logprob: -11.250957489013672
    7. '"""' → logprob: -11.500957489013672
    8. '
' → logprob: -11.875957489013672
    9. '    ' → logprob: -12.000957489013672
    10. '  ' → logprob: -12.250957489013672

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8789383830153383e-05
    2. 'return' → logprob: -11.500019073486328
    3. 'def' → logprob: -11.750019073486328
    4. ' return' → logprob: -15.000019073486328
    5. '	return' → logprob: -15.250019073486328
    6. '   ' → logprob: -16.625019073486328
    7. '[' → logprob: -17.375019073486328
    8. '
' → logprob: -17.750019073486328
    9. '       ' → logprob: -17.875019073486328
    10. 'SR' → logprob: -18.375019073486328

Token 662: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00025776340044103563
    2. ' return' → logprob: -8.62525749206543
    3. '   ' → logprob: -9.62525749206543
    4. '[S' → logprob: -12.12525749206543
    5. '[' → logprob: -12.37525749206543
    6. 'def' → logprob: -13.37525749206543
    7. '```' → logprob: -14.75025749206543
    8. '[
' → logprob: -15.50025749206543
    9. '[[' → logprob: -16.87525749206543
    10. '	return' → logprob: -16.87525749206543

Token 663: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0790584459900856
    2. '[S' → logprob: -2.5790584087371826
    3. ' [' → logprob: -9.454058647155762
    4. '[list' → logprob: -10.329058647155762
    5. '[[' → logprob: -10.704058647155762
    6. '[List' → logprob: -10.829058647155762
    7. '[L' → logprob: -11.954058647155762
    8. 'S' → logprob: -13.204058647155762
    9. 'LS' → logprob: -13.329058647155762
    10. '[s' → logprob: -13.329058647155762

Token 664: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.226628895296017e-06
    2. 'S' → logprob: -12.250007629394531
    3. '[list' → logprob: -13.125007629394531
    4. '(list' → logprob: -15.500007629394531
    5. 'sys' → logprob: -16.25000762939453
    6. ' list' → logprob: -16.25000762939453
    7. '[S' → logprob: -17.12500762939453
    8. '[' → logprob: -18.62500762939453
    9. '=list' → logprob: -20.25000762939453
    10. 'List' → logprob: -20.62500762939453

Token 665: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.3425219549390022e-05
    2. 'S' → logprob: -12.00001335144043
    3. '(' → logprob: -12.37501335144043
    4. '(s' → logprob: -12.87501335144043
    5. '()' → logprob: -15.62501335144043
    6. 's' → logprob: -17.37501335144043
    7. '(sys' → logprob: -17.37501335144043
    8. '(range' → logprob: -17.37501335144043
    9. 'for' → logprob: -18.00001335144043
    10. '(str' → logprob: -18.25001335144043

Token 666: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02987394668161869
    2. '()' → logprob: -3.529873847961426
    3. '(n' → logprob: -10.404873847961426
    4. '()]' → logprob: -10.779873847961426
    5. ' ())' → logprob: -11.279873847961426
    6. '().' → logprob: -11.529873847961426
    7. '()[' → logprob: -11.529873847961426
    8. '(' → logprob: -12.154873847961426
    9. '(),' → logprob: -12.279873847961426
    10. '())
' → logprob: -12.279873847961426

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3905366063117981
    2. '(n' → logprob: -1.3905365467071533
    3. ' for' → logprob: -2.6405365467071533
    4. '(' → logprob: -6.265536785125732
    5. '()' → logprob: -7.515536785125732
    6. '   ' → logprob: -8.765536308288574
    7. '(i' → logprob: -8.890536308288574
    8. ' (' → logprob: -9.265536308288574
    9. '(for' → logprob: -9.265536308288574
    10. ')' → logprob: -9.390536308288574

Token 668: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005280950106680393
    2. '_' → logprob: -5.2552809715271
    3. '_i' → logprob: -10.130280494689941
    4. 'range' → logprob: -12.130280494689941
    5. ' i' → logprob: -13.505280494689941
    6. '_range' → logprob: -15.505280494689941
    7. 'in' → logprob: -15.755280494689941
    8. ' range' → logprob: -16.630281448364258
    9. ' _' → logprob: -17.005281448364258
    10. '
' → logprob: -17.630281448364258

Token 669: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42957258224487305
    2. ' in' → logprob: -1.054572582244873
    3. '(' → logprob: -7.554572582244873
    4. '(n' → logprob: -9.179573059082031
    5. 'range' → logprob: -9.429573059082031
    6. ' (' → logprob: -9.679573059082031
    7. '(in' → logprob: -10.054573059082031
    8. '(i' → logprob: -11.554573059082031
    9. '(range' → logprob: -11.804573059082031
    10. 'n' → logprob: -11.804573059082031

Token 670: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -17.750123977661133
    4. 'in' → logprob: -20.750123977661133
    5. '	range' → logprob: -20.750123977661133
    6. ' ' → logprob: -23.000123977661133
    7. '
' → logprob: -23.375123977661133
    8. '   ' → logprob: -23.500123977661133
    9. 'rang' → logprob: -23.875123977661133
    10. '  ' → logprob: -24.000123977661133

Token 671: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01875346153974533
    2. '(n' → logprob: -4.018753528594971
    3. '(range' → logprob: -7.768753528594971
    4. ' range' → logprob: -9.018753051757812
    5. 'n' → logprob: -9.768753051757812
    6. '(' → logprob: -13.143753051757812
    7. 'in' → logprob: -14.893753051757812
    8. '	range' → logprob: -17.643753051757812
    9. '_range' → logprob: -17.768753051757812
    10. 'Range' → logprob: -18.018753051757812

Token 672: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022928470571059734
    2. ')' → logprob: -8.500228881835938
    3. ']' → logprob: -10.625228881835938
    4. '   ' → logprob: -14.375228881835938
    5. ' )' → logprob: -15.375228881835938
    6. ')]
' → logprob: -15.500228881835938
    7. ')],' → logprob: -16.250228881835938
    8. '')]' → logprob: -16.250228881835938
    9. ')])' → logprob: -17.000228881835938
    10. '):' → logprob: -17.250228881835938

Token 673: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017278953455388546
    2. '#' → logprob: -6.751728057861328
    3. '
' → logprob: -7.876728057861328
    4. '<|end|>' → logprob: -9.626728057861328
    5. '\' → logprob: -10.251728057861328
    6. 'class' → logprob: -10.501728057861328
    7. 'd' → logprob: -11.251728057861328
    8. '\n' → logprob: -11.751728057861328
    9. 'ndef' → logprob: -12.251728057861328
    10. '```' → logprob: -12.626728057861328

Token 674: ' MS' (ID: 15861)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08739745616912842
    2. 'WR' → logprob: -3.712397575378418
    3. 'print' → logprob: -3.962397575378418
    4. 'DR' → logprob: -4.087397575378418
    5. 'WS' → logprob: -5.587397575378418
    6. 'D' → logprob: -6.087397575378418
    7. 'G' → logprob: -6.712397575378418
    8. 'DS' → logprob: -6.712397575378418
    9. 'PR' → logprob: -6.837397575378418
    10. 'MS' → logprob: -6.837397575378418

Token 675: 'RL' (ID: 40408)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7503032088279724
    2. '():' → logprob: -0.8753032088279724
    3. '():
' → logprob: -3.375303268432617
    4. 'A' → logprob: -3.875303268432617
    5. 'E' → logprob: -3.875303268432617
    6. 'R' → logprob: -4.750303268432617
    7. '(' → logprob: -5.250303268432617
    8. '(n' → logprob: -5.375303268432617
    9. '()>' → logprob: -5.500303268432617
    10. '(M' → logprob: -6.000303268432617

Token 676: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.084206375409849e-05
    2. '(' → logprob: -10.750041007995605
    3. 'def' → logprob: -11.125041007995605
    4. ' (' → logprob: -12.500041007995605
    5. 'n' → logprob: -14.625041007995605
    6. ' def' → logprob: -15.500041007995605
    7. '(
' → logprob: -16.00004005432129
    8. '():' → logprob: -16.37504005432129
    9. '(N' → logprob: -17.25004005432129
    10. '():
' → logprob: -18.12504005432129

Token 677: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3540651202201843
    2. '):' → logprob: -1.854065179824829
    3. '(n' → logprob: -1.979065179824829
    4. ')' → logprob: -5.85406494140625
    5. 'n' → logprob: -8.47906494140625
    6. 'def' → logprob: -8.85406494140625
    7. '):
' → logprob: -9.72906494140625
    8. ')(' → logprob: -9.72906494140625
    9. '):

' → logprob: -11.60406494140625
    10. ')
' → logprob: -12.10406494140625

Token 678: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00180024653673172
    2. 'def' → logprob: -6.376800060272217
    3. '(' → logprob: -9.751800537109375
    4. '(
' → logprob: -10.876800537109375
    5. ':' → logprob: -11.501800537109375
    6. '   ' → logprob: -12.626800537109375
    7. ' def' → logprob: -12.876800537109375
    8. ':
' → logprob: -14.001800537109375
    9. '(def' → logprob: -14.126800537109375
    10. 'n' → logprob: -14.376800537109375

Token 679: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04406537488102913
    2. '"""
' (adapté à ' """
') → logprob: -4.044065475463867
    3. '   ' → logprob: -4.294065475463867
    4. 'return' → logprob: -4.669065475463867
    5. '[' → logprob: -7.419065475463867
    6. '[
' → logprob: -7.419065475463867
    7. ''''
' → logprob: -8.169065475463867
    8. 'MS' → logprob: -8.544065475463867
    9. ' def' → logprob: -8.544065475463867
    10. '
' → logprob: -8.544065475463867

Token 680: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5857622623443604
    2. 'return' → logprob: -0.8357622623443604
    3. '   ' → logprob: -5.085762023925781
    4. ' return' → logprob: -5.835762023925781
    5. 'MS' → logprob: -8.335762023925781
    6. '"""
' → logprob: -8.460762023925781
    7. ' def' → logprob: -9.335762023925781
    8. '[
' → logprob: -9.835762023925781
    9. ':return' → logprob: -10.585762023925781
    10. '[' → logprob: -10.835762023925781

Token 681: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.8067464828491211
    2. 'return' → logprob: -1.306746482849121
    3. 'def' → logprob: -1.306746482849121
    4. '   ' → logprob: -4.681746482849121
    5. ' return' → logprob: -7.056746482849121
    6. ''''
' → logprob: -7.306746482849121
    7. '
' → logprob: -7.556746482849121
    8. 'Returns' → logprob: -8.681746482849121
    9. 'Reads' → logprob: -8.681746482849121
    10. '"""' → logprob: -8.931746482849121

Token 682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013670346699655056
    2. '(n' → logprob: -5.263670444488525
    3. ' n' → logprob: -5.388670444488525
    4. '[n' → logprob: -5.638670444488525
    5. '[' → logprob: -9.263669967651367
    6. 'MS' → logprob: -9.888669967651367
    7. 'LS' → logprob: -10.138669967651367
    8. ' [' → logprob: -10.638669967651367
    9. 'SR' → logprob: -11.513669967651367
    10. ' MS' → logprob: -11.638669967651367

Token 683: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8046555519104004
    2. '(S' → logprob: -1.6796555519104004
    3. ' lines' → logprob: -2.6796555519104004
    4. '(n' → logprob: -2.8046555519104004
    5. ' lignes' → logprob: -3.3046555519104004
    6. 'MS' → logprob: -3.4296555519104004
    7. 'SR' → logprob: -4.1796555519104
    8. 'def' → logprob: -4.1796555519104
    9. '(' → logprob: -4.3046555519104
    10. '(lines' → logprob: -4.3046555519104

Token 684: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02302742376923561
    2. '   ' → logprob: -4.398027420043945
    3. 'def' → logprob: -4.898027420043945
    4. '(' → logprob: -7.523027420043945
    5. ' (' → logprob: -7.773027420043945
    6. ',' → logprob: -8.273027420043945
    7. '(
' → logprob: -8.523027420043945
    8. '```' → logprob: -8.648027420043945
    9. '(S' → logprob: -8.648027420043945
    10. ')' → logprob: -8.898027420043945

Token 685: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.045788682997226715
    2. ' partir' → logprob: -3.1707887649536133
    3. 'MS' → logprob: -6.795788764953613
    4. 'list' → logprob: -7.795788764953613
    5. 'la' → logprob: -8.420788764953613
    6. 'l' → logprob: -8.670788764953613
    7. 'str' → logprob: -9.170788764953613
    8. 'p' → logprob: -9.295788764953613
    9. 'sup' → logprob: -10.045788764953613
    10. 'prendre' → logprob: -10.045788764953613

Token 686: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19706511497497559
    2. '(n' → logprob: -2.1970651149749756
    3. '(' → logprob: -3.5720651149749756
    4. '=' → logprob: -4.697065353393555
    5. '   ' → logprob: -4.822065353393555
    6. 'de' → logprob: -4.822065353393555
    7. 'of' → logprob: -4.947065353393555
    8. 'n' → logprob: -6.197065353393555
    9. '(S' → logprob: -6.572065353393555
    10. '[' → logprob: -6.697065353393555

Token 687: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0826641395688057
    2. 'l' → logprob: -2.9576642513275146
    3. 'LS' → logprob: -3.7076642513275146
    4. '
' → logprob: -7.3326640129089355
    5. 'S' → logprob: -8.082664489746094
    6. '(sys' → logprob: -8.082664489746094
    7. 'ls' → logprob: -8.332664489746094
    8. ' sys' → logprob: -8.457664489746094
    9. 'stdin' → logprob: -8.582664489746094
    10. 'def' → logprob: -8.582664489746094

Token 688: ''entrée' (ID: 115820)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007896083407104015
    2. '(S' → logprob: -6.0078959465026855
    3. 'n' → logprob: -6.2578959465026855
    4. ' range' → logprob: -6.8828959465026855
    5. 'def' → logprob: -7.1328959465026855
    6. '(range' → logprob: -7.1328959465026855
    7. 'return' → logprob: -8.382896423339844
    8. 'SR' → logprob: -8.507896423339844
    9. '(int' → logprob: -9.382896423339844
    10. '(' → logprob: -9.882896423339844

Token 689: ' standard' (ID: 7024)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9322243928909302
    2. 'def' → logprob: -1.4322243928909302
    3. '(sys' → logprob: -1.5572243928909302
    4. '   ' → logprob: -3.3072242736816406
    5. 'sys' → logprob: -3.5572242736816406
    6. '(
' → logprob: -3.6822242736816406
    7. ' (' → logprob: -4.182224273681641
    8. 'standard' → logprob: -4.557224273681641
    9. '(S' → logprob: -5.057224273681641
    10. '(' → logprob: -5.057224273681641

Token 690: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.24001923203468323
    2. '   ' → logprob: -2.6150193214416504
    3. 'def' → logprob: -2.6150193214416504
    4. 'for' → logprob: -2.8650193214416504
    5. ' for' → logprob: -5.36501932144165
    6. 'return' → logprob: -6.11501932144165
    7. ',' → logprob: -7.24001932144165
    8. '
' → logprob: -7.74001932144165
    9. '(' → logprob: -8.115018844604492
    10. '(def' → logprob: -8.365018844604492

Token 691: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2505198121070862
    2. '   ' → logprob: -1.8755197525024414
    3. ' def' → logprob: -2.7505197525024414
    4. 'return' → logprob: -6.375519752502441
    5. '
' → logprob: -6.500519752502441
    6. ' return' → logprob: -7.000519752502441
    7. 'returns' → logprob: -10.000519752502441
    8. '    ' → logprob: -10.125519752502441
    9. ' returns' → logprob: -10.125519752502441
    10. '	def' → logprob: -10.125519752502441

Token 692: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.225228950381279
    2. 'ligne' → logprob: -2.225229024887085
    3. ' line' → logprob: -2.725229024887085
    4. 'line' → logprob: -4.100228786468506
    5. '_' → logprob: -5.350228786468506
    6. ' ' → logprob: -6.475228786468506
    7. '   ' → logprob: -6.475228786468506
    8. 'l' → logprob: -6.725228786468506
    9. ' lignes' → logprob: -7.475228786468506
    10. ' ' → logprob: -7.850228786468506

Token 693: ' représentant' (ID: 136122)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1189434677362442
    2. ' =' → logprob: -2.493943452835083
    3. ' est' → logprob: -4.868943691253662
    4. 'for' → logprob: -5.368943691253662
    5. '   ' → logprob: -5.493943691253662
    6. 'est' → logprob: -5.493943691253662
    7. ')' → logprob: -5.618943691253662
    8. 'def' → logprob: -6.493943691253662
    9. 's' → logprob: -7.118943691253662
    10. ' étant' → logprob: -7.493943691253662

Token 694: ' des' (ID: 731)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.388403981924057
    2. 'une' → logprob: -1.7634040117263794
    3. 'a' → logprob: -2.88840389251709
    4. 'un' → logprob: -3.51340389251709
    5. ' une' → logprob: -3.51340389251709
    6. '[list' → logprob: -4.13840389251709
    7. '   ' → logprob: -5.01340389251709
    8. '[' → logprob: -5.51340389251709
    9. ' list' → logprob: -6.63840389251709
    10. '=list' → logprob: -6.76340389251709

Token 695: ' chiffres' (ID: 105565)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12841975688934326
    2. ' list' → logprob: -3.003419876098633
    3. 'strings' → logprob: -4.378419876098633
    4. 'matrix' → logprob: -4.628419876098633
    5. 'm' → logprob: -5.503419876098633
    6. ' matrices' → logprob: -5.503419876098633
    7. 'int' → logprob: -5.753419876098633
    8. ' lists' → logprob: -5.753419876098633
    9. ' listes' → logprob: -5.753419876098633
    10. 'lists' → logprob: -6.003419876098633

Token 696: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04297921061515808
    2. 'for' → logprob: -3.9179792404174805
    3. '[i' → logprob: -5.1679792404174805
    4. '().' → logprob: -5.9179792404174805
    5. '()]' → logprob: -6.1679792404174805
    6. ']' → logprob: -6.7929792404174805
    7. '(),' → logprob: -6.7929792404174805
    8. '   ' → logprob: -6.9179792404174805
    9. '()[' → logprob: -6.9179792404174805
    10. '=' → logprob: -6.9179792404174805

Token 697: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3917297124862671
    2. 'def' → logprob: -1.141729712486267
    3. ' def' → logprob: -6.141729831695557
    4. '
' → logprob: -6.391729831695557
    5. 'return' → logprob: -7.516729831695557
    6. '(n' → logprob: -8.641729354858398
    7. ' return' → logprob: -9.891729354858398
    8. '=' → logprob: -10.391729354858398
    9. '    
' → logprob: -10.391729354858398
    10. '```' → logprob: -10.516729354858398

Token 698: ' Convert' (ID: 15629)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26307931542396545
    2. 'def' → logprob: -1.513079285621643
    3. '
' → logprob: -5.2630791664123535
    4. 'return' → logprob: -5.6380791664123535
    5. ' def' → logprob: -6.8880791664123535
    6. '    
' → logprob: -7.3880791664123535
    7. ' return' → logprob: -7.6380791664123535
    8. '	return' → logprob: -10.138079643249512
    9. '"""
' → logprob: -10.263079643249512
    10. 'Return' → logprob: -10.513079643249512

Token 699: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -4.906711546937004e-05
    2. ' it' → logprob: -10.750048637390137
    3. 'i' → logprob: -11.625048637390137
    4. '_it' → logprob: -11.875048637390137
    5. '   ' → logprob: -12.000048637390137
    6. '[it' → logprob: -13.875048637390137
    7. '```' → logprob: -14.125048637390137
    8. 'It' → logprob: -14.250048637390137
    9. '
' → logprob: -14.375048637390137
    10. '(it' → logprob: -14.875048637390137

Token 700: ' chaque' (ID: 21194)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.12965936958789825
    2. '   ' → logprob: -2.504659414291382
    3. '[int' → logprob: -4.004659175872803
    4. ' [' → logprob: -5.004659175872803
    5. '[' → logprob: -5.504659175872803
    6. '[i' → logprob: -5.754659175872803
    7. 'list' → logprob: -6.004659175872803
    8. '[str' → logprob: -6.504659175872803
    9. '[line' → logprob: -6.879659175872803
    10. '(list' → logprob: -7.129659175872803

Token 701: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4948790669441223
    2. ' ligne' → logprob: -1.8698790073394775
    3. '   ' → logprob: -2.1198790073394775
    4. 'line' → logprob: -3.4948790073394775
    5. ' ' → logprob: -3.4948790073394775
    6. 'ch' → logprob: -3.9948790073394775
    7. 'c' → logprob: -5.244879245758057
    8. 'l' → logprob: -5.494879245758057
    9. 's' → logprob: -5.869879245758057
    10. 'digit' → logprob: -5.994879245758057

Token 702: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7088160514831543
    2. '()[' → logprob: -1.3338160514831543
    3. '[i' → logprob: -2.5838160514831543
    4. '   ' → logprob: -2.5838160514831543
    5. '().' → logprob: -3.4588160514831543
    6. '(n' → logprob: -4.708816051483154
    7. '[n' → logprob: -4.833816051483154
    8. '[:]' → logprob: -5.083816051483154
    9. '```' → logprob: -5.208816051483154
    10. '[' → logprob: -5.333816051483154

Token 703: ' une' (ID: 2463)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.012406513094902039
    2. 'list' → logprob: -4.762406349182129
    3. '[[' → logprob: -5.887406349182129
    4. '[List' → logprob: -7.637406349182129
    5. ' list' → logprob: -8.387406349182129
    6. ' [' → logprob: -8.512406349182129
    7. '[' → logprob: -10.012406349182129
    8. '[str' → logprob: -11.512406349182129
    9. ' [[' → logprob: -11.762406349182129
    10. '[int' → logprob: -11.762406349182129

Token 704: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33265039324760437
    2. '[list' → logprob: -1.4576504230499268
    3. ' list' → logprob: -3.4576504230499268
    4. '[
' → logprob: -4.707650184631348
    5. '[' → logprob: -5.582650184631348
    6. '[[' → logprob: -5.832650184631348
    7. '[int' → logprob: -6.957650184631348
    8. '[str' → logprob: -7.332650184631348
    9. '[List' → logprob: -7.832650184631348
    10. ' [' → logprob: -8.332650184631348

Token 705: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07495059072971344
    2. '[list' → logprob: -3.574950695037842
    3. 'of' → logprob: -4.324950695037842
    4. '[' → logprob: -4.449950695037842
    5. '   ' → logprob: -4.949950695037842
    6. 'd' → logprob: -5.824950695037842
    7. ' of' → logprob: -6.699950695037842
    8. 's' → logprob: -6.699950695037842
    9. '```' → logprob: -6.824950695037842
    10. '[
' → logprob: -6.949950695037842

Token 706: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03916872292757034
    2. 'int' → logprob: -3.6641688346862793
    3. 'ints' → logprob: -5.039168834686279
    4. '(int' → logprob: -5.914168834686279
    5. 'ent' → logprob: -7.039168834686279
    6. 'igits' → logprob: -7.039168834686279
    7. '[' → logprob: -7.539168834686279
    8. 'e' → logprob: -8.039168357849121
    9. 'ents' → logprob: -8.664168357849121
    10. 'inte' → logprob: -8.789168357849121

Token 707: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00021593389101326466
    2. 'i' → logprob: -9.375215530395508
    3. 'ier' → logprob: -9.750215530395508
    4. 'ières' → logprob: -10.375215530395508
    5. 'ers' → logprob: -11.000215530395508
    6. 't' → logprob: -12.000215530395508
    7. '```' → logprob: -12.375215530395508
    8. '[' → logprob: -12.750215530395508
    9. 'I' → logprob: -13.250215530395508
    10. 'e' → logprob: -13.750215530395508

Token 708: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0140926837921143
    2. 'for' → logprob: -1.5140926837921143
    3. '(' → logprob: -1.6390926837921143
    4. '[i' → logprob: -3.1390926837921143
    5. '([' → logprob: -3.2640926837921143
    6. '(i' → logprob: -3.7640926837921143
    7. '(n' → logprob: -3.7640926837921143
    8. '   ' → logprob: -4.014092445373535
    9. ',' → logprob: -4.389092445373535
    10. '[' → logprob: -4.514092445373535

Token 709: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6833992004394531
    2. 'def' → logprob: -0.8083992004394531
    3. '(n' → logprob: -3.058399200439453
    4. ' def' → logprob: -6.808399200439453
    5. '```' → logprob: -7.433399200439453
    6. '
' → logprob: -7.558399200439453
    7. '    
' → logprob: -9.183399200439453
    8. '(' → logprob: -9.558399200439453
    9. '"""
' → logprob: -9.933399200439453
    10. '[n' → logprob: -10.558399200439453

Token 710: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2539181411266327
    2. '(n' → logprob: -1.628918170928955
    3. '   ' → logprob: -3.628918170928955
    4. '```' → logprob: -6.878918170928955
    5. ' def' → logprob: -7.878918170928955
    6. '"""
' → logprob: -10.253917694091797
    7. '
' → logprob: -10.753917694091797
    8. ''''
' → logprob: -11.253917694091797
    9. '(' → logprob: -11.378917694091797
    10. 'n' → logprob: -11.503917694091797

Token 711: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06108606234192848
    2. '   ' → logprob: -3.3110861778259277
    3. 'return' → logprob: -3.8110861778259277
    4. '```' → logprob: -7.936086177825928
    5. 'Returns' → logprob: -9.06108570098877
    6. ' def' → logprob: -9.93608570098877
    7. ' return' → logprob: -9.93608570098877
    8. 'Return' → logprob: -10.56108570098877
    9. '"""
' → logprob: -11.18608570098877
    10. '@return' → logprob: -11.43608570098877

Token 712: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.025603124871850014
    2. 'def' → logprob: -3.9006030559539795
    3. '   ' → logprob: -5.525603294372559
    4. '```' → logprob: -8.525603294372559
    5. ' def' → logprob: -9.025603294372559
    6. '(' → logprob: -9.025603294372559
    7. ':' → logprob: -9.275603294372559
    8. '(
' → logprob: -9.275603294372559
    9. ':
' → logprob: -9.275603294372559
    10. ' (' → logprob: -9.400603294372559

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060637395828962326
    2. 'n' → logprob: -3.3106374740600586
    3. '   ' → logprob: -3.8106374740600586
    4. '(n' → logprob: -9.435637474060059
    5. ' n' → logprob: -9.935637474060059
    6. 'def' → logprob: -10.435637474060059
    7. '     ' → logprob: -11.560637474060059
    8. '	n' → logprob: -11.810637474060059
    9. '```' → logprob: -12.435637474060059
    10. '[n' → logprob: -12.560637474060059

Token 714: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.9888433093437925e-05
    2. '   ' → logprob: -10.250040054321289
    3. '       ' → logprob: -12.875040054321289
    4. ' n' → logprob: -13.250040054321289
    5. '	n' → logprob: -16.25004005432129
    6. '```' → logprob: -17.62504005432129
    7. 'def' → logprob: -18.00004005432129
    8. '  ' → logprob: -19.75004005432129
    9. '(n' → logprob: -20.50004005432129
    10. '    ' → logprob: -20.62504005432129

Token 715: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00941084511578083
    2. '(n' → logprob: -4.884410858154297
    3. '(int' → logprob: -7.134410858154297
    4. ':' → logprob: -7.384410858154297
    5. ':int' → logprob: -8.884410858154297
    6. ')' → logprob: -9.884410858154297
    7. '=int' → logprob: -10.009410858154297
    8. '=' → logprob: -10.509410858154297
    9. '```' → logprob: -10.634410858154297
    10. '(' → logprob: -10.759410858154297

Token 716: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7729658540920354e-05
    2. ' int' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.750028610229492
    4. '=int' → logprob: -16.750028610229492
    5. ':int' → logprob: -17.625028610229492
    6. '(int' → logprob: -18.375028610229492
    7. '[int' → logprob: -19.250028610229492
    8. 'n' → logprob: -19.750028610229492
    9. ')' → logprob: -20.000028610229492
    10. '  ' → logprob: -20.250028610229492

Token 717: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007518723141402006
    2. '):
' → logprob: -5.132518768310547
    3. ':' → logprob: -6.632518768310547
    4. ')' → logprob: -8.632518768310547
    5. '   ' → logprob: -10.757518768310547
    6. ' ):' → logprob: -11.007518768310547
    7. ':int' → logprob: -11.007518768310547
    8. '(n' → logprob: -11.507518768310547
    9. '):
' → logprob: -11.757518768310547
    10. '):

' → logprob: -12.257518768310547

Token 718: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001236656797118485
    2. ' int' → logprob: -6.751236438751221
    3. '   ' → logprob: -10.126236915588379
    4. '[int' → logprob: -11.126236915588379
    5. '(int' → logprob: -12.251236915588379
    6. 'n' → logprob: -13.251236915588379
    7. 'Number' → logprob: -13.251236915588379
    8. '    ' → logprob: -14.126236915588379
    9. ':int' → logprob: -14.501236915588379
    10. ' ' → logprob: -14.876236915588379

Token 719: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18795128166675568
    2. 'def' → logprob: -2.0629513263702393
    3. 'of' → logprob: -4.56295108795166
    4. 'de' → logprob: -4.81295108795166
    5. ' de' → logprob: -5.31295108795166
    6. ')' → logprob: -5.81295108795166
    7. 'for' → logprob: -5.93795108795166
    8. '   ' → logprob: -5.93795108795166
    9. 's' → logprob: -6.18795108795166
    10. 'n' → logprob: -6.68795108795166

Token 720: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2187533676624298
    2. 'l' → logprob: -1.9687533378601074
    3. ' lignes' → logprob: -3.4687533378601074
    4. ' lines' → logprob: -4.218753337860107
    5. 'int' → logprob: -6.343753337860107
    6. ')' → logprob: -6.343753337860107
    7. 'ligne' → logprob: -6.718753337860107
    8. '(lines' → logprob: -6.718753337860107
    9. 'digits' → logprob: -6.718753337860107
    10. '_lines' → logprob: -6.968753337860107

Token 721: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17741090059280396
    2. '):' → logprob: -2.552410840988159
    3. '):
' → logprob: -2.677410840988159
    4. ')' → logprob: -4.677411079406738
    5. 'def' → logprob: -6.427411079406738
    6. '=' → logprob: -6.927411079406738
    7. '    ' → logprob: -7.177411079406738
    8. '  ' → logprob: -7.927411079406738
    9. '*' → logprob: -8.052411079406738
    10. ',' → logprob: -8.052411079406738

Token 722: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43479683995246887
    2. 'read' → logprob: -1.8097968101501465
    3. ' lire' → logprob: -1.9347968101501465
    4. ' range' → logprob: -3.1847968101501465
    5. 'Lire' → logprob: -6.5597968101501465
    6. ' read' → logprob: -6.6847968101501465
    7. 'l' → logprob: -9.184797286987305
    8. 'lecture' → logprob: -9.809797286987305
    9. '```' → logprob: -10.184797286987305
    10. '   ' → logprob: -10.309797286987305

Token 723: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3608694076538086
    2. '):
' → logprob: -1.6108694076538086
    3. ')' → logprob: -2.3608694076538086
    4. '):' → logprob: -5.110869407653809
    5. '
' → logprob: -6.485869407653809
    6. 'def' → logprob: -7.110869407653809
    7. '(n' → logprob: -8.360869407653809
    8. ')
' → logprob: -9.735869407653809
    9. '    
' → logprob: -9.985869407653809
    10. '):
' → logprob: -10.110869407653809

Token 724: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004438186064362526
    2. 'def' → logprob: -5.504438400268555
    3. ')' → logprob: -8.754438400268555
    4. '):
' → logprob: -9.254438400268555
    5. '
' → logprob: -9.754438400268555
    6. '```' → logprob: -10.879438400268555
    7. '"""
' → logprob: -11.629438400268555
    8. '    
' → logprob: -11.754438400268555
    9. ' def' → logprob: -13.379438400268555
    10. 'return' → logprob: -13.754438400268555

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.3451433409936726e-05
    2. '```' → logprob: -10.750033378601074
    3. '
' → logprob: -12.500033378601074
    4. '"""
' → logprob: -12.750033378601074
    5. 'def' → logprob: -13.125033378601074
    6. 'return' → logprob: -13.500033378601074
    7. '"""' → logprob: -14.500033378601074
    8. '       ' → logprob: -14.875033378601074
    9. '    
' → logprob: -15.250033378601074
    10. '``' → logprob: -15.250033378601074

Token 726: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.706924319267273
    2. 'Returns' (adapté à ' Returns') → logprob: -0.706924319267273
    3. 'returns' → logprob: -4.5819244384765625
    4. 'return' → logprob: -6.4569244384765625
    5. '```' → logprob: -6.5819244384765625
    6. '
' → logprob: -8.081924438476562
    7. '"""
' → logprob: -9.956924438476562
    8. '``' → logprob: -10.581924438476562
    9. '@return' → logprob: -10.706924438476562
    10. '    
' → logprob: -10.956924438476562

Token 727: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035916268825531006
    2. ':
' → logprob: -3.910916328430176
    3. ':' → logprob: -4.410916328430176
    4. 'def' → logprob: -5.910916328430176
    5. '
' → logprob: -9.160916328430176
    6. '[' → logprob: -9.285916328430176
    7. '=' → logprob: -10.660916328430176
    8. '[
' → logprob: -10.660916328430176
    9. 'return' → logprob: -10.785916328430176
    10. '):
' → logprob: -11.160916328430176

Token 728: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010986098641296849
    2. 'return' → logprob: -10.125109672546387
    3. '```' → logprob: -10.250109672546387
    4. '       ' → logprob: -11.125109672546387
    5. 'def' → logprob: -12.125109672546387
    6. '   ' → logprob: -12.750109672546387
    7. ')' → logprob: -12.875109672546387
    8. 'list' → logprob: -12.875109672546387
    9. '    ' → logprob: -13.625109672546387
    10. '  ' → logprob: -13.875109672546387

Token 729: ' list' (ID: 1562)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.5170809626579285
    2. '[List' → logprob: -1.0170810222625732
    3. '[' → logprob: -3.5170810222625732
    4. '[list' → logprob: -4.767080783843994
    5. ' [' → logprob: -5.767080783843994
    6. '[[' → logprob: -8.017081260681152
    7. '[int' → logprob: -8.892081260681152
    8. '[m' → logprob: -9.517081260681152
    9. '[M' → logprob: -9.892081260681152
    10. '[np' → logprob: -10.642081260681152

Token 730: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012590413680300117
    2. '   ' → logprob: -7.001258850097656
    3. ':
' → logprob: -9.376258850097656
    4. '=' → logprob: -9.376258850097656
    5. '[int' → logprob: -10.126258850097656
    6. 'def' → logprob: -10.501258850097656
    7. '[' → logprob: -10.626258850097656
    8. ' =' → logprob: -10.626258850097656
    9. 'return' → logprob: -11.001258850097656
    10. 'of' → logprob: -12.001258850097656

Token 731: ' Liste' (ID: 61030)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.37526604533195496
    2. '[List' → logprob: -1.8752660751342773
    3. '[' → logprob: -2.2502660751342773
    4. ' [' → logprob: -3.3752660751342773
    5. '[[' → logprob: -4.500266075134277
    6. '[list' → logprob: -5.250266075134277
    7. '   ' → logprob: -6.375266075134277
    8. '[M' → logprob: -7.500266075134277
    9. '[m' → logprob: -7.750266075134277
    10. '[int' → logprob: -8.250266075134277

Token 732: ' de' (ID: 334)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.8263700604438782
    2. 'of' → logprob: -0.9513700604438782
    3. ' of' → logprob: -2.9513700008392334
    4. '   ' → logprob: -3.0763700008392334
    5. '[int' → logprob: -3.2013700008392334
    6. '[List' → logprob: -4.5763702392578125
    7. '[[' → logprob: -5.2013702392578125
    8. '(list' → logprob: -5.2013702392578125
    9. '[
' → logprob: -5.7013702392578125
    10. '[' → logprob: -5.7013702392578125

Token 733: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.058700449764728546
    2. 'lists' → logprob: -3.0587005615234375
    3. '[list' → logprob: -4.6837005615234375
    4. '[int' → logprob: -7.6837005615234375
    5. '[List' → logprob: -8.558700561523438
    6. 'liste' → logprob: -9.058700561523438
    7. '[
' → logprob: -11.308700561523438
    8. 'listas' → logprob: -11.808700561523438
    9. 'List' → logprob: -12.308700561523438
    10. '[' → logprob: -12.433700561523438

Token 734: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.031441282480955124
    2. '[List' → logprob: -4.2814412117004395
    3. '[list' → logprob: -4.9064412117004395
    4. 'des' → logprob: -5.5314412117004395
    5. 'd' → logprob: -6.2814412117004395
    6. 'of' → logprob: -6.2814412117004395
    7. '[' → logprob: -7.0314412117004395
    8. '(list' → logprob: -8.781441688537598
    9. '
' → logprob: -8.781441688537598
    10. '(int' → logprob: -8.906441688537598

Token 735: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.23973816633224487
    2. 'ent' → logprob: -1.9897382259368896
    3. '[' → logprob: -3.8647382259368896
    4. ''ent' → logprob: -3.9897382259368896
    5. '_ent' → logprob: -4.4897379875183105
    6. 'ents' → logprob: -4.6147379875183105
    7. 'int' → logprob: -5.3647379875183105
    8. '(int' → logprob: -5.6147379875183105
    9. 'ints' → logprob: -5.7397379875183105
    10. '(ent' → logprob: -6.7397379875183105

Token 736: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.010036430321633816
    2. 't' → logprob: -4.760036468505859
    3. 'ières' → logprob: -7.510036468505859
    4. 'i' → logprob: -8.01003646850586
    5. 'ts' → logprob: -9.13503646850586
    6. 'tes' → logprob: -9.76003646850586
    7. ' ints' → logprob: -9.76003646850586
    8. 'ieurs' → logprob: -10.26003646850586
    9. '```' → logprob: -10.38503646850586
    10. 'ints' → logprob: -10.51003646850586

Token 737: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37132230401039124
    2. '(n' → logprob: -1.3713222742080688
    3. ' for' → logprob: -3.9963223934173584
    4. '   ' → logprob: -4.496322154998779
    5. '([' → logprob: -4.871322154998779
    6. '(S' → logprob: -5.121322154998779
    7. '[' → logprob: -5.371322154998779
    8. '(' → logprob: -6.496322154998779
    9. '[n' → logprob: -6.746322154998779
    10. '(for' → logprob: -6.871322154998779

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007416110602207482
    2. 'def' → logprob: -8.125741958618164
    3. '"""
' → logprob: -8.500741958618164
    4. '```' → logprob: -9.250741958618164
    5. '=' → logprob: -10.000741958618164
    6. '(
' → logprob: -10.625741958618164
    7. '()' → logprob: -11.000741958618164
    8. '()
' → logprob: -11.500741958618164
    9. '=
' → logprob: -11.875741958618164
    10. '
' → logprob: -12.125741958618164

Token 739: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00673218397423625
    2. '"""
' (adapté à ' """
') → logprob: -5.381731986999512
    3. 'def' → logprob: -7.131731986999512
    4. '```' → logprob: -7.881731986999512
    5. '()' → logprob: -8.631731986999512
    6. '"""' → logprob: -8.756731986999512
    7. ']' → logprob: -9.006731986999512
    8. '(n' → logprob: -9.631731986999512
    9. ')' → logprob: -9.631731986999512
    10. 'return' → logprob: -9.631731986999512

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002991160727106035
    2. 'return' → logprob: -8.125299453735352
    3. ' return' → logprob: -13.125299453735352
    4. 'def' → logprob: -14.250299453735352
    5. '	return' → logprob: -15.250299453735352
    6. '
' → logprob: -15.875299453735352
    7. 'MS' → logprob: -16.00029945373535
    8. '```' → logprob: -17.25029945373535
    9. '   ' → logprob: -17.50029945373535
    10. '{return' → logprob: -17.50029945373535

Token 741: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.203409844194539e-05
    2. '   ' → logprob: -10.500041961669922
    3. 'def' → logprob: -11.500041961669922
    4. ' return' → logprob: -12.375041961669922
    5. '
' → logprob: -16.125041961669922
    6. '	return' → logprob: -17.125041961669922
    7. '```' → logprob: -19.125041961669922
    8. '{return' → logprob: -19.500041961669922
    9. '[' → logprob: -19.875041961669922
    10. 'MS' → logprob: -20.000041961669922

Token 742: ' [[' (ID: 9237)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.034847766160964966
    2. '[' → logprob: -3.7848477363586426
    3. '[[' → logprob: -4.784847736358643
    4. '[list' → logprob: -6.284847736358643
    5. '[List' → logprob: -6.909847736358643
    6. '[M' → logprob: -8.7848482131958
    7. '[int' → logprob: -9.4098482131958
    8. ' [' → logprob: -9.9098482131958
    9. '[S' → logprob: -11.7848482131958
    10. 'LS' → logprob: -12.5348482131958

Token 743: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.690834273584187e-05
    2. '*' → logprob: -10.25003719329834
    3. 'c' → logprob: -14.37503719329834
    4. 'ord' → logprob: -15.12503719329834
    5. ' int' → logprob: -15.87503719329834
    6. '(int' → logprob: -15.87503719329834
    7. '[int' → logprob: -16.375036239624023
    8. 'e' → logprob: -17.125036239624023
    9. 'x' → logprob: -17.125036239624023
    10. '   ' → logprob: -17.375036239624023

Token 744: '(j' (ID: 4997)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.07355953007936478
    2. '(ch' → logprob: -2.823559522628784
    3. '(x' → logprob: -4.573559761047363
    4. '(d' → logprob: -7.198559761047363
    5. '(char' → logprob: -8.198559761047363
    6. '(j' → logprob: -9.573559761047363
    7. '(i' → logprob: -10.573559761047363
    8. '(a' → logprob: -10.698559761047363
    9. 'c' → logprob: -11.198559761047363
    10. '(k' → logprob: -11.198559761047363

Token 745: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5891212821006775
    2. '(j' → logprob: -1.4641213417053223
    3. '(ch' → logprob: -1.7141213417053223
    4. '(char' → logprob: -4.464121341705322
    5. '()' → logprob: -4.839121341705322
    6. 'for' → logprob: -4.964121341705322
    7. ')' → logprob: -6.464121341705322
    8. '(k' → logprob: -6.714121341705322
    9. '(' → logprob: -6.839121341705322
    10. '(x' → logprob: -7.214121341705322

Token 746: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005421462003141642
    2. ' for' → logprob: -5.2554216384887695
    3. '(' → logprob: -9.75542163848877
    4. 'in' → logprob: -9.75542163848877
    5. '(j' → logprob: -10.63042163848877
    6. '()' → logprob: -11.00542163848877
    7. ')' → logprob: -11.13042163848877
    8. 'char' → logprob: -12.75542163848877
    9. '(char' → logprob: -13.00542163848877
    10. '(int' → logprob: -13.13042163848877

Token 747: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005234832875430584
    2. ' j' → logprob: -5.255234718322754
    3. '	j' → logprob: -14.255234718322754
    4. ' ' → logprob: -15.130234718322754
    5. ' ' → logprob: -16.38023567199707
    6. '
' → logprob: -17.50523567199707
    7. '$j' → logprob: -18.50523567199707
    8. '  ' → logprob: -18.75523567199707
    9. '   ' → logprob: -18.88023567199707
    10. '`' → logprob: -19.31773567199707

Token 748: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0160356592386961
    2. ' in' → logprob: -4.141035556793213
    3. 'j' → logprob: -14.391036033630371
    4. ' ' → logprob: -15.516036033630371
    5. ' j' → logprob: -15.766036033630371
    6. '	in' → logprob: -15.766036033630371
    7. 's' → logprob: -16.141035079956055
    8. '
' → logprob: -16.891035079956055
    9. 'i' → logprob: -16.891035079956055
    10. 'int' → logprob: -17.266035079956055

Token 749: ' list' (ID: 1562)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01870175078511238
    2. 'list' → logprob: -4.018701553344727
    3. ' S' → logprob: -8.268701553344727
    4. 's' → logprob: -9.143701553344727
    5. 'sys' → logprob: -9.393701553344727
    6. ' list' → logprob: -10.268701553344727
    7. 'c' → logprob: -10.268701553344727
    8. 'range' → logprob: -11.268701553344727
    9. 'j' → logprob: -12.268701553344727
    10. 'line' → logprob: -12.518701553344727

Token 750: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0001387009397149086
    2. '(str' → logprob: -9.750138282775879
    3. '(s' → logprob: -10.250138282775879
    4. 'S' → logprob: -10.625138282775879
    5. '(sys' → logprob: -11.625138282775879
    6. '(' → logprob: -12.125138282775879
    7. '(line' → logprob: -12.875138282775879
    8. '(L' → logprob: -13.875138282775879
    9. '((' → logprob: -14.000138282775879
    10. '(x' → logprob: -14.875138282775879

Token 751: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19967778027057648
    2. '())' → logprob: -2.4496777057647705
    3. '().' → logprob: -2.8246777057647705
    4. '(n' → logprob: -4.07467794418335
    5. '()[' → logprob: -4.32467794418335
    6. '(i' → logprob: -5.82467794418335
    7. '(' → logprob: -6.44967794418335
    8. '()
' → logprob: -8.699677467346191
    9. '()]' → logprob: -9.074677467346191
    10. '().__' → logprob: -9.949677467346191

Token 752: ']' (ID: 60)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7398873567581177
    2. '(i' → logprob: -0.9898873567581177
    3. ']' → logprob: -1.9898873567581177
    4. '()]' → logprob: -4.614887237548828
    5. 'for' → logprob: -5.489887237548828
    6. '()' → logprob: -8.364887237548828
    7. '   ' → logprob: -9.364887237548828
    8. '[i' → logprob: -9.989887237548828
    9. ' for' → logprob: -11.114887237548828
    10. 'in' → logprob: -11.114887237548828

Token 753: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20227229595184326
    2. ' for' → logprob: -1.7022722959518433
    3. ']' → logprob: -7.452272415161133
    4. '(n' → logprob: -8.952272415161133
    5. '(i' → logprob: -9.452272415161133
    6. '   ' → logprob: -10.452272415161133
    7. '()' → logprob: -11.077272415161133
    8. '	for' → logprob: -11.702272415161133
    9. '       ' → logprob: -12.702272415161133
    10. '           ' → logprob: -13.077272415161133

Token 754: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.063895583152771
    2. '_' → logprob: -2.8138957023620605
    3. 'range' → logprob: -6.4388957023620605
    4. '_i' → logprob: -8.938895225524902
    5. ' i' → logprob: -8.938895225524902
    6. ' range' → logprob: -9.813895225524902
    7. 'in' → logprob: -12.313895225524902
    8. ' _' → logprob: -12.563895225524902
    9. '_range' → logprob: -13.563895225524902
    10. ' in' → logprob: -13.688895225524902

Token 755: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931567788124084
    2. ' in' → logprob: -0.6931567788124084
    3. 'range' → logprob: -12.943157196044922
    4. '(' → logprob: -13.193157196044922
    5. '	in' → logprob: -13.568157196044922
    6. ' ' → logprob: -14.568157196044922
    7. '(in' → logprob: -14.693157196044922
    8. 'import' → logprob: -14.818157196044922
    9. '_' → logprob: -14.943157196044922
    10. ')' → logprob: -15.068157196044922

Token 756: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -18.37507438659668
    4. '	range' → logprob: -20.12507438659668
    5. 'rang' → logprob: -21.50007438659668
    6. '
' → logprob: -21.50007438659668
    7. 'rank' → logprob: -22.62507438659668
    8. 'ran' → logprob: -22.87507438659668
    9. '   ' → logprob: -23.12507438659668
    10. 'ra' → logprob: -23.37507438659668

Token 757: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868766129016876
    2. '(n' → logprob: -1.1368765830993652
    3. ' n' → logprob: -12.261877059936523
    4. '(' → logprob: -14.886877059936523
    5. ' (' → logprob: -15.136877059936523
    6. '	n' → logprob: -16.011877059936523
    7. ')n' → logprob: -16.636877059936523
    8. 'range' → logprob: -17.261877059936523
    9. '(
' → logprob: -17.761877059936523
    10. '
' → logprob: -17.761877059936523

Token 758: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.968312951968983e-06
    2. ']' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. ')]
' → logprob: -15.125009536743164
    5. ')' → logprob: -16.125009536743164
    6. ' )' → logprob: -16.375009536743164
    7. '])]' → logprob: -16.375009536743164
    8. ' ]' → logprob: -16.750009536743164
    9. ']]' → logprob: -17.375009536743164
    10. '])' → logprob: -17.625009536743164

Token 759: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019662656995933503
    2. '#' → logprob: -9.00019645690918
    3. 'class' → logprob: -9.87519645690918
    4. 'n' → logprob: -11.25019645690918
    5. 'import' → logprob: -12.75019645690918
    6. ' def' → logprob: -14.00019645690918
    7. 'de' → logprob: -14.25019645690918
    8. 'ndef' → logprob: -14.37519645690918
    9. 'if' → logprob: -14.50019645690918
    10. 'a' → logprob: -14.50019645690918

Token 761: 'ulo' (ID: 5953)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.2499987632036209
    2. 'def' → logprob: -1.6249988079071045
    3. 'ules' → logprob: -4.624998569488525
    4. 'if' → logprob: -5.499998569488525
    5. '#' → logprob: -5.874998569488525
    6. 'èle' → logprob: -5.874998569488525
    7. '```' → logprob: -7.249998569488525
    8. ' =' → logprob: -7.374998569488525
    9. 'e' → logprob: -7.374998569488525
    10. 'er' → logprob: -7.874998569488525

Token 762: ' utilisé' (ID: 53138)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03184666112065315
    2. '=' → logprob: -4.281846523284912
    3. ' =' → logprob: -4.531846523284912
    4. 'M' → logprob: -5.906846523284912
    5. '_' → logprob: -6.406846523284912
    6. 'mod' → logprob: -6.531846523284912
    7. '_MOD' → logprob: -7.656846523284912
    8. ' MOD' → logprob: -8.90684700012207
    9. '_mod' → logprob: -9.40684700012207
    10. '
' → logprob: -9.78184700012207

Token 763: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3606404662132263
    2. '=' → logprob: -1.360640525817871
    3. 'MOD' → logprob: -3.110640525817871
    4. 'mod' → logprob: -6.735640525817871
    5. ' MOD' → logprob: -8.235640525817871
    6. '_MOD' → logprob: -9.485640525817871
    7. '_mod' → logprob: -9.985640525817871
    8. '_' → logprob: -10.110640525817871
    9. 'M' → logprob: -10.735640525817871
    10. ',' → logprob: -11.360640525817871

Token 764: ' éviter' (ID: 64013)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01217748410999775
    2. '10' → logprob: -5.512177467346191
    3. '998' → logprob: -5.637177467346191
    4. 'mod' → logprob: -5.637177467346191
    5. '#' → logprob: -7.512177467346191
    6. ' MOD' → logprob: -9.137177467346191
    7. '_MOD' → logprob: -9.387177467346191
    8. '_mod' → logprob: -9.387177467346191
    9. 'Mod' → logprob: -10.262177467346191
    10. 'DEFAULT' → logprob: -10.887177467346191

Token 765: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.292013555765152
    2. 'MOD' → logprob: -1.4170135259628296
    3. ' MOD' → logprob: -5.292013645172119
    4. '998' → logprob: -5.917013645172119
    5. '_' → logprob: -7.167013645172119
    6. 'mod' → logprob: -7.167013645172119
    7. '100' → logprob: -8.042013168334961
    8. ' ' → logprob: -8.792013168334961
    9. '_mod' → logprob: -9.042013168334961
    10. '```' → logprob: -9.167013168334961

Token 766: ' déb' (ID: 37874)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01016955729573965
    2. 'MOD' → logprob: -5.010169506072998
    3. '998' → logprob: -6.760169506072998
    4. 'mod' → logprob: -7.010169506072998
    5. '_' → logprob: -8.385169982910156
    6. '(' → logprob: -8.635169982910156
    7. '```' → logprob: -8.885169982910156
    8. 'int' → logprob: -9.010169982910156
    9. '100' → logprob: -9.135169982910156
    10. '_mod' → logprob: -9.135169982910156

Token 767: 'ord' (ID: 604)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4542003273963928
    2. 'ug' → logprob: -1.954200267791748
    3. '```' → logprob: -2.454200267791748
    4. 'MOD' → logprob: -3.454200267791748
    5. 'u' → logprob: -3.579200267791748
    6. ' MOD' → logprob: -3.829200267791748
    7. 'ugs' → logprob: -4.704200267791748
    8. '``' → logprob: -5.079200267791748
    9. '
' → logprob: -5.704200267791748
    10. '_mod' → logprob: -6.454200267791748

Token 768: 'ements' (ID: 4507)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.15954679250717163
    2. 'ule' → logprob: -2.2845468521118164
    3. 'er' → logprob: -3.7845468521118164
    4. 'e' → logprob: -5.784546852111816
    5. 'it' → logprob: -6.034546852111816
    6. 'ut' → logprob: -6.409546852111816
    7. 'uler' → logprob: -6.409546852111816
    8. '=' → logprob: -6.784546852111816
    9. ')' → logprob: -6.909546852111816
    10. 'ulaire' → logprob: -6.909546852111816

Token 769: ' numériques' (ID: 153198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.000990891712717712
    2. 'mod' → logprob: -7.250990867614746
    3. ' =' → logprob: -9.500990867614746
    4. 'M' → logprob: -9.625990867614746
    5. '
' → logprob: -9.750990867614746
    6. '=' → logprob: -10.500990867614746
    7. ' MOD' → logprob: -10.875990867614746
    8. '_MOD' → logprob: -11.250990867614746
    9. 'MD' → logprob: -11.750990867614746
    10. '_mod' → logprob: -12.000990867614746

Token 770: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00031174797913990915
    2. 'mod' → logprob: -8.500311851501465
    3. '
' → logprob: -9.500311851501465
    4. 'MD' → logprob: -11.375311851501465
    5. ' MOD' → logprob: -11.625311851501465
    6. 'M' → logprob: -12.250311851501465
    7. '=' → logprob: -12.625311851501465
    8. ' =' → logprob: -13.625311851501465
    9. 'MO' → logprob: -13.750311851501465
    10. 'Mod' → logprob: -14.500311851501465

Token 771: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0017614520620554686
    2. 'mod' → logprob: -6.376761436462402
    3. 'MD' → logprob: -10.376761436462402
    4. 'M' → logprob: -10.876761436462402
    5. '
' → logprob: -13.001761436462402
    6. 'MO' → logprob: -13.001761436462402
    7. '```' → logprob: -13.626761436462402
    8. 'Mod' → logprob: -13.876761436462402
    9. ' MOD' → logprob: -14.501761436462402
    10. 'md' → logprob: -14.626761436462402

Token 772: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410061955451965
    2. '=' → logprob: -0.9741005897521973
    3. ',' → logprob: -12.099101066589355
    4. '_' → logprob: -12.224101066589355
    5. ' =
' → logprob: -12.849101066589355
    6. ' ' → logprob: -13.349101066589355
    7. '<|end|>' → logprob: -13.349101066589355
    8. '.' → logprob: -14.099101066589355
    9. ')' → logprob: -14.349101066589355
    10. '=int' → logprob: -14.349101066589355

Token 773: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004483762197196484
    2. '998' → logprob: -5.504483699798584
    3. '100' → logprob: -7.879483699798584
    4. ' ' → logprob: -10.879484176635742
    5. '1' → logprob: -12.504484176635742
    6. 'int' → logprob: -12.504484176635742
    7. '(' → logprob: -15.129484176635742
    8. '999' → logprob: -15.879484176635742
    9. '   ' → logprob: -17.129484176635742
    10. '123' → logprob: -17.379484176635742

Token 774: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010314335115253925
    2. '998' → logprob: -4.760314464569092
    3. '100' → logprob: -6.385314464569092
    4. 'int' → logprob: -11.635313987731934
    5. '1' → logprob: -13.260313987731934
    6. '(' → logprob: -13.635313987731934
    7. ' ' → logprob: -15.885313987731934
    8. '１０' → logprob: -17.13531494140625
    9. '999' → logprob: -17.38531494140625
    10. '```' → logprob: -17.51031494140625

Token 775: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.47425368428230286
    2. '**' → logprob: -0.9742536544799805
    3. '09' → logprob: -8.84925365447998
    4. '+' → logprob: -10.97425365447998
    5. ' ' → logprob: -12.22425365447998
    6. '```' → logprob: -12.84925365447998
    7. '=' → logprob: -13.09925365447998
    8. ' **' → logprob: -13.09925365447998
    9. '*' → logprob: -13.72425365447998
    10. '​' → logprob: -13.97425365447998

Token 776: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -16.875
    3. '```' → logprob: -21.5
    4. '+' → logprob: -22.75
    5. ' ' → logprob: -23.25
    6. '
' → logprob: -23.375
    7. '９' → logprob: -23.75
    8. '10' → logprob: -24.875
    9. '``' → logprob: -25.375
    10. '99' → logprob: -25.5

Token 777: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '```' → logprob: -21.25
    4. '
' → logprob: -21.625
    5. '+' → logprob: -21.75
    6. '９' → logprob: -22.75
    7. ' ' → logprob: -23.625
    8. '10' → logprob: -23.75
    9. '99' → logprob: -24.125
    10. '``' → logprob: -24.25

Token 778: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.876193169271573e-05
    2. ' +' → logprob: -9.375088691711426
    3. '7' → logprob: -12.625088691711426
    4. '+
' → logprob: -15.000088691711426
    5. 'plus' → logprob: -16.000089645385742
    6. '＋' → logprob: -16.750089645385742
    7. ' plus' → logprob: -18.000089645385742
    8. '```' → logprob: -18.375089645385742
    9. '9' → logprob: -18.625089645385742
    10. '
' → logprob: -19.750089645385742

Token 779: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -21.375
    3. '9' → logprob: -21.625
    4. '+' → logprob: -21.875
    5. '07' → logprob: -22.0
    6. '```' → logprob: -22.375
    7. '
' → logprob: -23.625
    8. '   ' → logprob: -24.0
    9. '

' → logprob: -24.875
    10. '' → logprob: -25.375

Token 780: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -24.25
    3. '７' → logprob: -25.0
    4. '```' → logprob: -25.25
    5. ' ' → logprob: -25.75
    6. '
' → logprob: -26.0
    7. '   ' → logprob: -26.375
    8. '9' → logprob: -26.375
    9. '+' → logprob: -26.75
    10. '

' → logprob: -26.75

Token 781: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06642725318670273
    2. '

' → logprob: -3.066427230834961
    3. '<|end|>' → logprob: -4.316427230834961
    4. 'def' → logprob: -5.691427230834961
    5. '<|end|>' → logprob: -8.316427230834961
    6. '
' → logprob: -8.566427230834961
    7. '\n' → logprob: -8.816427230834961
    8. '#' → logprob: -9.191427230834961
    9. '```' → logprob: -9.566427230834961
    10. 'newline' → logprob: -10.191427230834961

Token 782: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012054058723151684
    2. '
' → logprob: -4.512053966522217
    3. '\n' → logprob: -7.637053966522217
    4. '\' → logprob: -8.762054443359375
    5. '

' → logprob: -8.762054443359375
    6. 'class' → logprob: -9.262054443359375
    7. '#' → logprob: -9.762054443359375
    8. 'n' → logprob: -11.262054443359375
    9. ' 
' → logprob: -11.762054443359375
    10. '  
' → logprob: -11.887054443359375

Token 783: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.269565634895116e-05
    2. 'class' → logprob: -9.375092506408691
    3. '#' → logprob: -12.250092506408691
    4. 'from' → logprob: -12.875092506408691
    5. 'import' → logprob: -15.750092506408691
    6. '@' → logprob: -16.500093460083008
    7. 'de' → logprob: -17.125093460083008
    8. 'd' → logprob: -17.250093460083008
    9. 'n' → logprob: -17.500093460083008
    10. ' def' → logprob: -17.750093460083008

Token 784: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11993808299303055
    2. 'n' → logprob: -2.6199381351470947
    3. '(' → logprob: -3.7449381351470947
    4. '=' → logprob: -5.494937896728516
    5. '(n' → logprob: -5.744937896728516
    6. ' =' → logprob: -5.869937896728516
    7. 'def' → logprob: -6.244937896728516
    8. '_' → logprob: -6.744937896728516
    9. '()
' → logprob: -7.119937896728516
    10. '(
' → logprob: -7.369937896728516

Token 785: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002638556994497776
    2. 't' → logprob: -6.252638339996338
    3. 'def' → logprob: -7.377638339996338
    4. 'input' → logprob: -10.752638816833496
    5. 'T' → logprob: -10.877638816833496
    6. 'N' → logprob: -11.127638816833496
    7. ' n' → logprob: -12.252638816833496
    8. '#' → logprob: -12.377638816833496
    9. '
' → logprob: -12.627638816833496
    10. 'q' → logprob: -12.627638816833496

Token 786: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9340860247612
    2. ' =' → logprob: -1.8090860843658447
    3. '=' → logprob: -2.0590860843658447
    4. '()' → logprob: -2.0590860843658447
    5. 't' → logprob: -2.8090860843658447
    6. 'de' → logprob: -3.0590860843658447
    7. 'd' → logprob: -3.8090860843658447
    8. '_n' → logprob: -4.434085845947266
    9. 'des' → logprob: -4.684085845947266
    10. 'of' → logprob: -4.934085845947266

Token 787: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7847614288330078
    2. '_cases' → logprob: -2.159761428833008
    3. '_tests' → logprob: -2.159761428833008
    4. 'test' → logprob: -2.284761428833008
    5. 't' → logprob: -2.909761428833008
    6. '_test' → logprob: -3.409761428833008
    7. '_queries' → logprob: -3.784761428833008
    8. ' test' → logprob: -3.909761428833008
    9. 's' → logprob: -4.034761428833008
    10. 'cases' → logprob: -4.159761428833008

Token 788: 'élé' (ID: 15228)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.5193738341331482
    2. 't' → logprob: -1.019373893737793
    3. 'tests' → logprob: -3.394373893737793
    4. 'cases' → logprob: -5.019373893737793
    5. 'queries' → logprob: -6.894373893737793
    6. ' test' → logprob: -7.144373893737793
    7. 'def' → logprob: -8.019373893737793
    8. ' t' → logprob: -8.019373893737793
    9. 's' → logprob: -8.519373893737793
    10. '_' → logprob: -8.894373893737793

Token 789: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0003554847207851708
    2. 'éments' → logprob: -8.75035572052002
    3. 'ements' → logprob: -8.75035572052002
    4. 'ment' → logprob: -10.50035572052002
    5. 'm' → logprob: -11.87535572052002
    6. 'phants' → logprob: -13.50035572052002
    7. 'MENTS' → logprob: -14.75035572052002
    8. 'ents' → logprob: -14.87535572052002
    9. '```' → logprob: -15.00035572052002
    10. 'iments' → logprob: -15.37535572052002

Token 790: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008066141046583652
    2. '()' → logprob: -4.883066177368164
    3. 'N' → logprob: -8.383066177368164
    4. '()
' → logprob: -9.383066177368164
    5. ' =' → logprob: -9.883066177368164
    6. '=' → logprob: -10.508066177368164
    7. '(n' → logprob: -10.883066177368164
    8. ' n' → logprob: -11.383066177368164
    9. '_n' → logprob: -11.383066177368164
    10. '(' → logprob: -11.758066177368164

Token 791: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170460251159966
    2. 'N' → logprob: -6.751170635223389
    3. ' n' → logprob: -16.501171112060547
    4. '_n' → logprob: -17.001171112060547
    5. '
' → logprob: -17.126171112060547
    6. 't' → logprob: -17.751171112060547
    7. 'x' → logprob: -18.876171112060547
    8. 'a' → logprob: -19.126171112060547
    9. '#' → logprob: -19.251171112060547
    10. 'def' → logprob: -19.251171112060547

Token 792: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062021348625421524
    2. ' =' → logprob: -2.812021255493164
    3. ',' → logprob: -10.562021255493164
    4. '()' → logprob: -10.687021255493164
    5. '=int' → logprob: -12.937021255493164
    6. '(' → logprob: -13.937021255493164
    7. ')' → logprob: -14.062021255493164
    8. '=n' → logprob: -14.562021255493164
    9. ',n' → logprob: -15.687021255493164
    10. '   ' → logprob: -16.687021255493164

Token 793: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.02326202020049095
    2. ' I' → logprob: -3.7732620239257812
    3. 'int' → logprob: -11.023262023925781
    4. ' int' → logprob: -15.648262023925781
    5. 'LI' → logprob: -16.27326202392578
    6. ' ' → logprob: -16.89826202392578
    7. '	I' → logprob: -19.14826202392578
    8. '_I' → logprob: -19.64826202392578
    9. '(I' → logprob: -20.14826202392578
    10. '10' → logprob: -20.52326202392578

Token 794: '()' (ID: 416)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08470256626605988
    2. '
' → logprob: -2.959702491760254
    3. 'd' → logprob: -5.584702491760254
    4. 'arr' → logprob: -5.709702491760254
    5. 'x' → logprob: -5.709702491760254
    6. 'data' → logprob: -5.834702491760254
    7. ')' → logprob: -6.084702491760254
    8. 'n' → logprob: -6.084702491760254
    9. 's' → logprob: -6.584702491760254
    10. 'lst' → logprob: -6.584702491760254

Token 795: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028563030064105988
    2. 'arr' → logprob: -3.7785630226135254
    3. 'A' → logprob: -6.028563022613525
    4. 'data' → logprob: -6.903563022613525
    5. 'lst' → logprob: -6.903563022613525
    6. 'v' → logprob: -8.903563499450684
    7. 'values' → logprob: -9.153563499450684
    8. 'numbers' → logprob: -9.278563499450684
    9. 'elements' → logprob: -9.528563499450684
    10. '
' → logprob: -9.653563499450684

Token 796: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1036829799413681
    2. 'arr' → logprob: -2.6036829948425293
    3. 'data' → logprob: -5.103682994842529
    4. 'lst' → logprob: -5.228682994842529
    5. 'A' → logprob: -5.478682994842529
    6. '
' → logprob: -5.853682994842529
    7. 'n' → logprob: -6.728682994842529
    8. '#' (adapté à ' #') → logprob: -6.853682994842529
    9. 'v' → logprob: -7.353682994842529
    10. ')' → logprob: -7.603682994842529

Token 797: ' Nombre' (ID: 70208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12981997430324554
    2. 'arr' → logprob: -2.129819869995117
    3. 'lst' → logprob: -6.504819869995117
    4. 'data' → logprob: -7.254819869995117
    5. 'A' → logprob: -7.504819869995117
    6. 'v' → logprob: -10.754819869995117
    7. '#' → logprob: -10.879819869995117
    8. 'l' → logprob: -11.004819869995117
    9. 'values' → logprob: -11.379819869995117
    10. 'elements' → logprob: -11.504819869995117

Token 798: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025466004386544228
    2. ' =' → logprob: -3.900465965270996
    3. 's' → logprob: -5.650465965270996
    4. '=
' → logprob: -7.650465965270996
    5. '=n' → logprob: -8.150465965270996
    6. 'n' → logprob: -9.150465965270996
    7. '
' → logprob: -10.025465965270996
    8. ',' → logprob: -10.150465965270996
    9. '_elements' → logprob: -10.150465965270996
    10. ')' → logprob: -10.150465965270996

Token 799: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0786888599395752
    2. 'elements' → logprob: -1.8286888599395752
    3. '_elements' → logprob: -1.9536888599395752
    4. '=' → logprob: -2.703688859939575
    5. ')' → logprob: -2.703688859939575
    6. 'n' → logprob: -2.953688859939575
    7. '<|end|>' → logprob: -3.078688859939575
    8. ' =' → logprob: -3.328688859939575
    9. 'élé' → logprob: -3.828688859939575
    10. 's' → logprob: -3.953688859939575

Token 800: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.006494500674307346
    2. 'elements' → logprob: -5.381494522094727
    3. 'é' → logprob: -6.881494522094727
    4. 'él' → logprob: -7.631494522094727
    5. ' éléments' → logprob: -9.256494522094727
    6. 'ent' → logprob: -9.756494522094727
    7. 'n' → logprob: -10.256494522094727
    8. ''' → logprob: -10.631494522094727
    9. 'el' → logprob: -11.256494522094727
    10. 'elem' → logprob: -11.381494522094727

Token 801: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0005352786974981427
    2. 'ment' → logprob: -8.375535011291504
    3. 'nts' → logprob: -8.750535011291504
    4. 'm' → logprob: -9.250535011291504
    5. 'ts' → logprob: -10.250535011291504
    6. 'ents' → logprob: -11.875535011291504
    7. 'me' → logprob: -13.500535011291504
    8. 's' → logprob: -13.750535011291504
    9. '```' → logprob: -14.250535011291504
    10. 'mets' → logprob: -14.500535011291504

Token 802: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0361623540520668
    2. 'arr' → logprob: -3.6611623764038086
    3. 'lst' → logprob: -5.786162376403809
    4. 'A' → logprob: -6.036162376403809
    5. 'data' → logprob: -6.161162376403809
    6. 'elements' → logprob: -7.036162376403809
    7. '
' → logprob: -7.536162376403809
    8. 'v' → logprob: -8.536162376403809
    9. 'values' → logprob: -8.786162376403809
    10. 'numbers' → logprob: -9.536162376403809

Token 803: ' lu' (ID: 8620)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2063070684671402
    2. 'arr' → logprob: -1.706307053565979
    3. 'lst' → logprob: -5.7063069343566895
    4. 'data' → logprob: -7.3313069343566895
    5. ' a' → logprob: -7.8313069343566895
    6. ' arr' → logprob: -8.956307411193848
    7. 'A' → logprob: -8.956307411193848
    8. 'l' → logprob: -9.581307411193848
    9. 'li' → logprob: -10.706307411193848
    10. 'v' → logprob: -10.706307411193848

Token 804: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2620291709899902
    2. '<|end|>' → logprob: -1.3870291709899902
    3. ')' → logprob: -1.5120291709899902
    4. '
' → logprob: -2.8870291709899902
    5. '(n' → logprob: -2.8870291709899902
    6. '#' → logprob: -2.8870291709899902
    7. '=' → logprob: -3.5120291709899902
    8. '()' → logprob: -4.26202917098999
    9. '<|end|>' → logprob: -5.01202917098999
    10. 'for' → logprob: -5.13702917098999

Token 805: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002126233885064721
    2. 'sys' → logprob: -7.377126216888428
    3. 'input' → logprob: -7.502126216888428
    4. 'la' → logprob: -7.627126216888428
    5. 'stdin' → logprob: -9.002126693725586
    6. 'une' → logprob: -9.502126693725586
    7. 'l' → logprob: -9.502126693725586
    8. '()
' → logprob: -9.877126693725586
    9. 'n' → logprob: -11.002126693725586
    10. '#' → logprob: -11.002126693725586

Token 806: ''entrée' (ID: 115820)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.5979964733123779
    2. 'sys' → logprob: -1.472996473312378
    3. '(sys' → logprob: -2.597996473312378
    4. 'e' → logprob: -3.222996473312378
    5. '()' → logprob: -3.222996473312378
    6. 'stdin' → logprob: -4.347996711730957
    7. 'put' → logprob: -4.597996711730957
    8. 'n' → logprob: -4.722996711730957
    9. 'input' → logprob: -4.847996711730957
    10. '()
' → logprob: -5.597996711730957

Token 807: '

' (ID: 279)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04296904802322388
    2. '
' → logprob: -4.542969226837158
    3. 'arr' → logprob: -4.667969226837158
    4. 'elements' → logprob: -4.667969226837158
    5. 'data' → logprob: -5.292969226837158
    6. 'A' → logprob: -6.417969226837158
    7. 'lst' → logprob: -6.667969226837158
    8. 'd' → logprob: -6.792969226837158
    9. 'values' → logprob: -7.042969226837158
    10. 'n' → logprob: -7.792969226837158

Token 808: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2066914588212967
    2. 'arr' → logprob: -1.7066915035247803
    3. 'A' → logprob: -5.581691265106201
    4. 'data' → logprob: -6.956691265106201
    5. 'lst' → logprob: -7.706691265106201
    6. 'l' → logprob: -10.95669174194336
    7. '#' → logprob: -11.08169174194336
    8. 'elements' → logprob: -11.33169174194336
    9. 'numbers' → logprob: -11.58169174194336
    10. 'nums' → logprob: -11.83169174194336

Token 809: ' Lecture' (ID: 106534)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3201223909854889
    2. 'a' → logprob: -1.3201223611831665
    3. 'A' → logprob: -5.445122241973877
    4. 'data' → logprob: -6.445122241973877
    5. 'lst' → logprob: -7.195122241973877
    6. 'values' → logprob: -9.695122718811035
    7. 'nums' → logprob: -10.820122718811035
    8. 'vals' → logprob: -10.820122718811035
    9. 'L' → logprob: -11.195122718811035
    10. 'numbers' → logprob: -11.195122718811035

Token 810: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.842307984828949
    2. '()' → logprob: -1.9673080444335938
    3. '_' → logprob: -2.7173080444335938
    4. '(' → logprob: -2.9673080444335938
    5. 'a' → logprob: -3.2173080444335938
    6. 's' → logprob: -3.2173080444335938
    7. '_list' → logprob: -3.3423080444335938
    8. ' =' → logprob: -3.3423080444335938
    9. 'arr' → logprob: -3.3423080444335938
    10. 'data' → logprob: -3.4673080444335938

Token 811: ' valeurs' (ID: 73668)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.011628073640167713
    2. 'arr' → logprob: -5.136628150939941
    3. 'L' → logprob: -6.511628150939941
    4. 'a' → logprob: -6.636628150939941
    5. 'array' → logprob: -7.511628150939941
    6. 'li' → logprob: -7.636628150939941
    7. 'lst' → logprob: -7.886628150939941
    8. 'A' → logprob: -8.136628150939941
    9. 'numbers' → logprob: -8.136628150939941
    10. ' LI' → logprob: -8.511628150939941

Token 812: ' H' (ID: 487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5004969835281372
    2. 'a' → logprob: -1.3754969835281372
    3. ' =' → logprob: -3.3754968643188477
    4. 'arr' → logprob: -3.3754968643188477
    5. 'vals' → logprob: -3.3754968643188477
    6. 'v' → logprob: -4.250496864318848
    7. 'values' → logprob: -4.875496864318848
    8. 'A' → logprob: -5.000496864318848
    9. 'val' → logprob: -5.625496864318848
    10. 's' → logprob: -6.875496864318848

Token 813: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33575910329818726
    2. '=' → logprob: -1.460759162902832
    3. '()' → logprob: -3.335759162902832
    4. 's' → logprob: -4.460759162902832
    5. 'H' → logprob: -5.460759162902832
    6. '_' → logprob: -7.210759162902832
    7. ' ' → logprob: -8.710759162902832
    8. '_values' → logprob: -8.710759162902832
    9. 'A' → logprob: -9.210759162902832
    10. '   ' → logprob: -9.335759162902832

Token 814: ' ajoute' (ID: 91611)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00549769913777709
    2. 'h' → logprob: -5.255497932434082
    3. ' H' → logprob: -8.755497932434082
    4. 'a' → logprob: -10.005497932434082
    5. ' =' → logprob: -10.630497932434082
    6. 'hs' → logprob: -11.505497932434082
    7. '=' → logprob: -12.005497932434082
    8. 'A' → logprob: -13.255497932434082
    9. '
' → logprob: -13.255497932434082
    10. 'arr' → logprob: -13.505497932434082

Token 815: ' une' (ID: 2463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32235977053642273
    2. '=' → logprob: -1.3223598003387451
    3. 's' → logprob: -5.072359561920166
    4. '_' → logprob: -6.947359561920166
    5. ' ' → logprob: -7.822359561920166
    6. '()' → logprob: -8.072360038757324
    7. '   ' → logprob: -8.697360038757324
    8. 'es' → logprob: -8.822360038757324
    9. '=[]' → logprob: -8.822360038757324
    10. 'H' → logprob: -9.072360038757324

Token 816: ' valeur' (ID: 41664)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.196783185005188
    2. ' LI' → logprob: -3.8217830657958984
    3. '[' → logprob: -4.071783065795898
    4. 'li' → logprob: -4.196783065795898
    5. 'n' → logprob: -4.196783065795898
    6. '()' → logprob: -4.321783065795898
    7. ')' → logprob: -4.446783065795898
    8. 'L' → logprob: -5.071783065795898
    9. ' ' → logprob: -5.196783065795898
    10. ']' → logprob: -5.196783065795898

Token 817: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1347283124923706
    2. '=' → logprob: -1.2597283124923706
    3. '.append' → logprob: -1.6347283124923706
    4. ' =' → logprob: -2.25972843170166
    5. '(H' → logprob: -2.50972843170166
    6. '().' → logprob: -5.25972843170166
    7. 'H' → logprob: -6.88472843170166
    8. 'n' → logprob: -7.00972843170166
    9. '.' → logprob: -7.00972843170166
    10. 'append' → logprob: -7.13472843170166

Token 818: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08913139253854752
    2. ' ' → logprob: -3.0891313552856445
    3. 'INF' → logprob: -3.8391313552856445
    4. ' INF' → logprob: -4.9641313552856445
    5. '(' → logprob: -5.3391313552856445
    6. '[' → logprob: -5.9641313552856445
    7. ' [' → logprob: -6.5891313552856445
    8. '=' → logprob: -7.9641313552856445
    9. ' =' → logprob: -8.089131355285645
    10. 'inf' → logprob: -8.464131355285645

Token 819: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5210156440734863
    2. '(' → logprob: -1.6460156440734863
    3. '=' → logprob: -1.8960156440734863
    4. ',' → logprob: -2.1460156440734863
    5. '0' → logprob: -2.7710156440734863
    6. ' =' → logprob: -2.8960156440734863
    7. '+' → logprob: -3.0210156440734863
    8. 'H' → logprob: -4.021015644073486
    9. 's' → logprob: -4.146015644073486
    10. '(H' → logprob: -4.146015644073486

Token 820: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7529267072677612
    2. ' =' → logprob: -0.8779267072677612
    3. '()' → logprob: -2.377926826477051
    4. 'H' → logprob: -5.002926826477051
    5. '()
' → logprob: -5.377926826477051
    6. '(H' → logprob: -5.752926826477051
    7. 's' → logprob: -6.377926826477051
    8. '().' → logprob: -7.377926826477051
    9. '(' → logprob: -7.752926826477051
    10. '=[' → logprob: -7.752926826477051

Token 821: ' la' (ID: 557)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.9803318977355957
    2. 'H' → logprob: -1.2303318977355957
    3. '[' → logprob: -1.2303318977355957
    4. ' [' → logprob: -3.3553318977355957
    5. '0' → logprob: -6.730331897735596
    6. 'h' → logprob: -7.230331897735596
    7. 'a' → logprob: -7.355331897735596
    8. ' ' → logprob: -7.605331897735596
    9. '1' → logprob: -7.730331897735596
    10. ' at' → logprob: -8.605331420898438

Token 822: ' fin' (ID: 2131)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5290582776069641
    2. '[' → logprob: -1.5290582180023193
    3. ' H' → logprob: -2.6540582180023193
    4. ' end' → logprob: -3.7790582180023193
    5. ']' → logprob: -4.154058456420898
    6. '
' → logprob: -4.279058456420898
    7. '0' → logprob: -4.654058456420898
    8. 'LI' → logprob: -4.654058456420898
    9. ' [' → logprob: -4.904058456420898
    10. 'end' → logprob: -5.279058456420898

Token 823: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0191083624958992
    2. ' =' → logprob: -4.519108295440674
    3. '
' → logprob: -5.269108295440674
    4. '()
' → logprob: -6.769108295440674
    5. '=' → logprob: -7.144108295440674
    6. 'h' → logprob: -8.019108772277832
    7. '(H' → logprob: -8.144108772277832
    8. ',' → logprob: -8.894108772277832
    9. ' H' → logprob: -9.269108772277832
    10. '()' → logprob: -10.644108772277832

Token 824: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.008608425967395306
    2. '=' → logprob: -5.383608341217041
    3. ' =' → logprob: -5.633608341217041
    4. '
' → logprob: -8.0086088180542
    5. ' H' → logprob: -9.8836088180542
    6. 'h' → logprob: -11.7586088180542
    7. ':' → logprob: -13.2586088180542
    8. '

' → logprob: -13.2586088180542
    9. '#' → logprob: -13.3836088180542
    10. 'Hs' → logprob: -14.2586088180542

Token 825: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196874141693115
    2. ' =' → logprob: -1.5019687414169312
    3. '()' → logprob: -11.001968383789062
    4. ',' → logprob: -11.251968383789062
    5. 's' → logprob: -12.626968383789062
    6. '(' → logprob: -12.751968383789062
    7. ' ' → logprob: -13.751968383789062
    8. '   ' → logprob: -14.376968383789062
    9. '=[]' → logprob: -14.751968383789062
    10. '_' → logprob: -15.251968383789062

Token 826: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.011301631107926369
    2. 'IR' → logprob: -4.761301517486572
    3. '(IR' → logprob: -7.136301517486572
    4. 'L' → logprob: -7.511301517486572
    5. '(L' → logprob: -7.636301517486572
    6. 'LS' → logprob: -7.761301517486572
    7. 'LR' → logprob: -8.26130199432373
    8. 'SR' → logprob: -8.88630199432373
    9. '[' → logprob: -11.51130199432373
    10. ' LI' → logprob: -11.88630199432373

Token 827: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09067584574222565
    2. '()
' → logprob: -2.5906758308410645
    3. '()+' → logprob: -4.4656758308410645
    4. '().' → logprob: -9.840676307678223
    5. ' ()' → logprob: -9.840676307678223
    6. '+' → logprob: -10.465676307678223
    7. '()[' → logprob: -10.840676307678223
    8. '()
' → logprob: -10.840676307678223
    9. '();' → logprob: -11.215676307678223
    10. '(' → logprob: -12.215676307678223

Token 828: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10375238955020905
    2. ' +' → logprob: -2.978752374649048
    3. '
' → logprob: -3.353752374649048
    4. '+[' → logprob: -5.353752613067627
    5. ';' → logprob: -5.728752613067627
    6. '+
' → logprob: -5.978752613067627
    7. '.append' → logprob: -7.228752613067627
    8. 'H' → logprob: -7.603752613067627
    9. ' H' → logprob: -7.728752613067627
    10. '[:]' → logprob: -9.353752136230469

Token 829: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002613358374219388
    2. ' [' → logprob: -8.250261306762695
    3. '1' → logprob: -19.250261306762695
    4. ' ' → logprob: -20.125261306762695
    5. ' ' → logprob: -20.375261306762695
    6. '   ' → logprob: -20.625261306762695
    7. '([' → logprob: -21.375261306762695
    8. '[i' → logprob: -21.625261306762695
    9. '\[' → logprob: -21.625261306762695
    10. '{' → logprob: -22.000261306762695

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '
' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '```' → logprob: -20.625001907348633
    6. '`' → logprob: -20.875001907348633
    7. '' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.000001907348633
    9. '１' → logprob: -21.000001907348633
    10. ']' → logprob: -21.125001907348633

Token 831: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5570885807392187e-05
    2. ' ]' → logprob: -11.125015258789062
    3. '()]' → logprob: -15.125015258789062
    4. ']
' → logprob: -16.000015258789062
    5. '])' → logprob: -16.125015258789062
    6. ')' → logprob: -16.125015258789062
    7. ')]' → logprob: -16.375015258789062
    8. ']

' → logprob: -17.000015258789062
    9. ',' → logprob: -17.125015258789062
    10. ']()' → logprob: -17.375015258789062

Token 832: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006752071436494589
    2. '

' → logprob: -6.881752014160156
    3. 'dp' → logprob: -7.006752014160156
    4. '#' → logprob: -7.131752014160156
    5. '
' → logprob: -7.256752014160156
    6. 'for' → logprob: -7.631752014160156
    7. 'd' → logprob: -7.756752014160156
    8. 'max' → logprob: -7.756752014160156
    9. '<|end|>' → logprob: -7.756752014160156
    10. 'def' → logprob: -8.256752014160156

Token 833: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03325211629271507
    2. 'max' → logprob: -4.533252239227295
    3. '#' (adapté à ' #') → logprob: -4.908252239227295
    4. '

' → logprob: -5.783252239227295
    5. 'dp' → logprob: -6.033252239227295
    6. 'd' → logprob: -6.158252239227295
    7. 'for' → logprob: -6.783252239227295
    8. '<|end|>' → logprob: -7.158252239227295
    9. 'n' → logprob: -7.283252239227295
    10. 'ans' → logprob: -7.533252239227295

Token 834: ' Liste' (ID: 61030)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019253721460700035
    2. '

' → logprob: -5.269253730773926
    3. 'dp' → logprob: -5.269253730773926
    4. '
' → logprob: -5.519253730773926
    5. '#' → logprob: -6.894253730773926
    6. 'for' → logprob: -7.269253730773926
    7. 'd' → logprob: -7.269253730773926
    8. 'n' → logprob: -7.519253730773926
    9. 'max' → logprob: -8.269253730773926
    10. 'ans' → logprob: -8.269253730773926

Token 835: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 836: ' haute' (ID: 49646)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.323513150215149
    2. 'ent' → logprob: -1.323513150215149
    3. 'ha' → logprob: -1.573513150215149
    4. 'val' → logprob: -2.0735130310058594
    5. 'int' → logprob: -2.4485130310058594
    6. 'Ha' → logprob: -3.8235130310058594
    7. 'he' → logprob: -4.448513031005859
    8. 'élé' → logprob: -5.073513031005859
    9. 'inte' → logprob: -5.698513031005859
    10. 'é' → logprob: -7.198513031005859

Token 837: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.004578699823468924
    2. 's' → logprob: -5.629578590393066
    3. 'teurs' → logprob: -8.129578590393066
    4. 'ur' → logprob: -8.379578590393066
    5. 'eurs' → logprob: -9.004578590393066
    6. '_' → logprob: -9.504578590393066
    7. 'rs' → logprob: -10.004578590393066
    8. '   ' → logprob: -10.129578590393066
    9. 'r' → logprob: -10.254578590393066
    10. ']' → logprob: -11.254578590393066

Token 838: '/' (ID: 14)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06936658918857574
    2. 'd' → logprob: -3.944366693496704
    3. 'dp' → logprob: -3.944366693496704
    4. '<|end|>' → logprob: -4.694366455078125
    5. '#' → logprob: -5.069366455078125
    6. 'D' → logprob: -6.319366455078125
    7. 'max' → logprob: -6.569366455078125
    8. 'for' → logprob: -7.444366455078125
    9. 'height' → logprob: -7.444366455078125
    10. 'DP' → logprob: -7.444366455078125

Token 839: 'val' (ID: 1105)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.0005686411168426275
    2. 'ues' → logprob: -8.000568389892578
    3. 'eur' → logprob: -8.750568389892578
    4. 'ue' → logprob: -10.250568389892578
    5. 'e' → logprob: -10.625568389892578
    6. '()' → logprob: -12.125568389892578
    7. '```' → logprob: -12.875568389892578
    8. '[' → logprob: -13.000568389892578
    9. '#' → logprob: -13.250568389892578
    10. '(' → logprob: -14.500568389892578

Token 841: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05166918784379959
    2. '#' → logprob: -3.676669120788574
    3. '<|end|>' → logprob: -4.301669120788574
    4. ')' → logprob: -5.926669120788574
    5. 'max' → logprob: -6.301669120788574
    6. 'dp' → logprob: -7.051669120788574
    7. 'for' → logprob: -7.176669120788574
    8. 'n' → logprob: -7.426669120788574
    9. 'd' → logprob: -7.551669120788574
    10. 'H' → logprob: -7.926669120788574

Token 842: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.014960527420044
    2. '#' → logprob: -1.139960527420044
    3. ' ' → logprob: -2.639960527420044
    4. '0' → logprob: -2.889960527420044
    5. ' 
' → logprob: -3.139960527420044
    6. '<|end|>' → logprob: -3.139960527420044
    7. 'n' → logprob: -3.639960527420044
    8. ')' → logprob: -4.264960289001465
    9. ']' → logprob: -5.014960289001465
    10. '[' → logprob: -5.389960289001465

Token 843: ' laquelle' (ID: 47998)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.8536369800567627
    2. 'la' → logprob: -1.9786369800567627
    3. 'contin' → logprob: -2.3536369800567627
    4. '.append' → logprob: -2.7286369800567627
    5. 'H' → logprob: -2.9786369800567627
    6. '```' → logprob: -3.4786369800567627
    7. '+' → logprob: -3.6036369800567627
    8. 'aj' → logprob: -3.8536369800567627
    9. 'continue' → logprob: -3.9786369800567627
    10. 'com' → logprob: -4.353636741638184

Token 844: ' on' (ID: 402)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.641603946685791
    2. 'append' → logprob: -1.016603946685791
    3. '1' → logprob: -2.891603946685791
    4. '.append' → logprob: -3.266603946685791
    5. ' ' → logprob: -4.516603946685791
    6. '_append' → logprob: -5.266603946685791
    7. '[' → logprob: -7.016603946685791
    8. 's' → logprob: -8.391603469848633
    9. ' appended' → logprob: -8.516603469848633
    10. '	append' → logprob: -9.391603469848633

Token 845: ' ajoute' (ID: 91611)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.20543019473552704
    2. 'append' → logprob: -2.080430269241333
    3. '.append' → logprob: -3.580430269241333
    4. 'app' → logprob: -3.705430269241333
    5. ' ajoute' → logprob: -4.955430030822754
    6. 'ap' → logprob: -7.955430030822754
    7. '+' → logprob: -8.330430030822754
    8. ' append' → logprob: -8.455430030822754
    9. '   ' → logprob: -8.580430030822754
    10. '_append' → logprob: -9.330430030822754

Token 846: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0701320469379425
    2. '1' → logprob: -2.69513201713562
    3. ' ' → logprob: -9.5701322555542
    4. ' (' → logprob: -9.5701322555542
    5. '(
' → logprob: -10.9451322555542
    6. '<|end|>' → logprob: -11.1951322555542
    7. '[' → logprob: -11.5701322555542
    8. ')' → logprob: -12.1951322555542
    9. ']' → logprob: -13.1951322555542
    10. '```' → logprob: -13.1951322555542

Token 847: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000912774819880724
    2. ' ' → logprob: -7.000912666320801
    3. ')' → logprob: -14.3759126663208
    4. ']' → logprob: -15.1259126663208
    5. '')' → logprob: -17.000913619995117
    6. '```' → logprob: -17.000913619995117
    7. '   ' → logprob: -17.125913619995117
    8. ' ]' → logprob: -17.500913619995117
    9. '0' → logprob: -17.500913619995117
    10. '  ' → logprob: -17.750913619995117

Token 848: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008622690802440047
    2. ' ]' → logprob: -7.500862121582031
    3. ')' → logprob: -9.000862121582031
    4. '[' → logprob: -9.250862121582031
    5. ',' → logprob: -10.500862121582031
    6. '()]' → logprob: -10.500862121582031
    7. ']
' → logprob: -11.250862121582031
    8. '])' → logprob: -12.625862121582031
    9. '#' → logprob: -12.625862121582031
    10. '   ' → logprob: -13.000862121582031

Token 849: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2965984642505646
    2. 'dp' → logprob: -1.5465984344482422
    3. 'max' → logprob: -5.171598434448242
    4. 'd' → logprob: -5.171598434448242
    5. 'res' → logprob: -5.296598434448242
    6. 'stack' → logprob: -5.546598434448242
    7. '#' → logprob: -5.671598434448242
    8. 'for' → logprob: -5.796598434448242
    9. 'h' → logprob: -5.921598434448242
    10. '
' → logprob: -6.046598434448242

Token 850: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.16754651069641113
    2. ' la' → logprob: -2.042546510696411
    3. ']' → logprob: -3.917546510696411
    4. '1' → logprob: -6.792546272277832
    5. 'len' → logprob: -7.167546272277832
    6. 'the' → logprob: -7.917546272277832
    7. '[' → logprob: -8.292546272277832
    8. 'fin' → logprob: -8.292546272277832
    9. ')' → logprob: -8.417546272277832
    10. '```' → logprob: -8.417546272277832

Token 851: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.14923201501369476
    2. ']' → logprob: -2.7742319107055664
    3. 'end' → logprob: -3.3992319107055664
    4. ')' → logprob: -4.024231910705566
    5. ' fin' → logprob: -5.024231910705566
    6. ' end' → logprob: -5.649231910705566
    7. 'tail' → logprob: -6.274231910705566
    8. 'final' → logprob: -6.399231910705566
    9. '```' → logprob: -6.524231910705566
    10. '])' → logprob: -6.524231910705566

Token 852: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22826556861400604
    2. '
' → logprob: -2.6032655239105225
    3. '#' → logprob: -3.4782655239105225
    4. 'stack' → logprob: -3.9782655239105225
    5. 'max' → logprob: -4.478265762329102
    6. 'd' → logprob: -4.478265762329102
    7. 'res' → logprob: -4.603265762329102
    8. 'ans' → logprob: -5.228265762329102
    9. 'DP' → logprob: -5.228265762329102
    10. 'for' → logprob: -5.353265762329102

Token 853: ' la' (ID: 557)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0917283296585083
    2. ' faciliter' → logprob: -2.9667282104492188
    3. '```' → logprob: -4.591728210449219
    4. 'simpl' → logprob: -5.466728210449219
    5. ')' → logprob: -5.591728210449219
    6. 'g' → logprob: -5.716728210449219
    7. ' gérer' → logprob: -5.966728210449219
    8. ' garantir' → logprob: -6.341728210449219
    9. 'év' → logprob: -6.341728210449219
    10. ' assurer' → logprob: -6.591728210449219

Token 854: ' gestion' (ID: 29607)
  Prédit: 'sent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.5565215349197388
    2. 'raison' → logprob: -1.6815215349197388
    3. 'fac' → logprob: -2.556521415710449
    4. 'trait' → logprob: -2.806521415710449
    5. 'dé' → logprob: -4.181521415710449
    6. 'fin' → logprob: -4.431521415710449
    7. 'gestion' → logprob: -4.431521415710449
    8. 's' → logprob: -4.681521415710449
    9. '#' → logprob: -4.681521415710449
    10. '```' → logprob: -5.306521415710449

Token 855: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9433043003082275
    2. ')' → logprob: -2.1933043003082275
    3. 'of' → logprob: -2.1933043003082275
    4. '
' → logprob: -2.1933043003082275
    5. '#' → logprob: -2.4433043003082275
    6. ' of' → logprob: -2.6933043003082275
    7. ']' → logprob: -3.1933043003082275
    8. 'de' → logprob: -3.8183043003082275
    9. 'def' → logprob: -5.443304061889648
    10. ')
' → logprob: -5.443304061889648

Token 856: ' bord' (ID: 26431)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.00483024213463068
    2. 'stack' → logprob: -5.504830360412598
    3. 'p' → logprob: -7.629830360412598
    4. ' pile' → logprob: -9.504830360412598
    5. 'pil' → logprob: -9.754830360412598
    6. '#' → logprob: -10.254830360412598
    7. 'H' → logprob: -11.004830360412598
    8. 'suite' → logprob: -11.254830360412598
    9. 'PILE' → logprob: -11.254830360412598
    10. 'plus' → logprob: -11.754830360412598

Token 857: 'ure' (ID: 627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5745176076889038
    2. 'ure' → logprob: -1.6995176076889038
    3. ')' → logprob: -1.8245176076889038
    4. 'ere' → logprob: -3.3245177268981934
    5. ']' → logprob: -3.8245177268981934
    6. ')
' → logprob: -5.074517726898193
    7. 'es' → logprob: -5.199517726898193
    8. '=' → logprob: -5.699517726898193
    9. '+' → logprob: -5.699517726898193
    10. '   ' → logprob: -5.949517726898193

Token 858: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45434123277664185
    2. 'stack' → logprob: -1.204341173171997
    3. '#' → logprob: -3.954341173171997
    4. '
' → logprob: -4.704341411590576
    5. 'ans' → logprob: -4.954341411590576
    6. 'res' → logprob: -5.079341411590576
    7. 'max' → logprob: -5.204341411590576
    8. 'h' → logprob: -6.079341411590576
    9. 'd' → logprob: -6.329341411590576
    10. 'answer' → logprob: -6.579341411590576

Token 859: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5099269151687622
    2. 'stack' → logprob: -1.1349269151687622
    3. 'ans' → logprob: -3.2599267959594727
    4. 'res' → logprob: -4.884926795959473
    5. 'stk' → logprob: -5.134926795959473
    6. 'left' → logprob: -5.509926795959473
    7. 'L' → logprob: -5.634926795959473
    8. 'st' → logprob: -5.884926795959473
    9. 'l' → logprob: -6.634926795959473
    10. 'answer' → logprob: -6.634926795959473

Token 860: ' Initial' (ID: 9209)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.29765358567237854
    2. 'dp' → logprob: -1.4226535558700562
    3. 'ans' → logprob: -5.047653675079346
    4. 'stk' → logprob: -5.547653675079346
    5. 'st' → logprob: -6.422653675079346
    6. '#' → logprob: -6.547653675079346
    7. 'res' → logprob: -7.672653675079346
    8. 'left' → logprob: -7.797653675079346
    9. 'answer' → logprob: -8.547653198242188
    10. 'L' → logprob: -8.672653198242188

Token 861: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -1.1390458345413208
    2. 'ization' → logprob: -1.6390458345413208
    3. 'stack' → logprob: -2.2640457153320312
    4. 'i' → logprob: -2.3890457153320312
    5. '#' → logprob: -2.8890457153320312
    6. 'ize' → logprob: -3.5140457153320312
    7. 's' → logprob: -3.7640457153320312
    8. 'ze' → logprob: -3.8890457153320312
    9. 'max' → logprob: -3.8890457153320312
    10. 'z' → logprob: -4.014045715332031

Token 862: ' du' (ID: 1462)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.35686787962913513
    2. 'dp' → logprob: -1.2318679094314575
    3. 'stk' → logprob: -5.606867790222168
    4. 'st' → logprob: -6.356867790222168
    5. 'H' → logprob: -7.731867790222168
    6. 'ans' → logprob: -7.981867790222168
    7. 'h' → logprob: -8.106867790222168
    8. 'max' → logprob: -8.231867790222168
    9. 'd' → logprob: -8.606867790222168
    10. 'i' → logprob: -8.731867790222168

Token 863: ' tableau' (ID: 67053)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07049417495727539
    2. 'dp' → logprob: -2.8204941749572754
    3. 'stk' → logprob: -5.070494174957275
    4. 'st' → logprob: -6.445494174957275
    5. 'ans' → logprob: -8.695493698120117
    6. 'res' → logprob: -8.820493698120117
    7. 'dq' → logprob: -10.195493698120117
    8. 'left' → logprob: -10.320493698120117
    9. 'L' → logprob: -10.820493698120117
    10. 'pos' → logprob: -10.945493698120117

Token 864: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05078963190317154
    2. ' =' → logprob: -3.4257895946502686
    3. '=' → logprob: -4.800789833068848
    4. 'DP' → logprob: -5.175789833068848
    5. 'stack' → logprob: -7.800789833068848
    6. '_dp' → logprob: -8.050789833068848
    7. 'max' → logprob: -8.175789833068848
    8. 'D' → logprob: -8.175789833068848
    9. 'H' → logprob: -8.550789833068848
    10. 'F' → logprob: -8.675789833068848

Token 865: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17986133694648743
    2. '=' → logprob: -1.804861307144165
    3. '=[' → logprob: -9.429861068725586
    4. 'dp' → logprob: -11.054861068725586
    5. '[' → logprob: -12.179861068725586
    6. ' ' → logprob: -12.429861068725586
    7. '_' → logprob: -12.804861068725586
    8. ' =[' → logprob: -13.304861068725586
    9. '=[]' → logprob: -13.304861068725586
    10. '0' → logprob: -13.554861068725586

Token 866: 'programm' (ID: 85820)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008972975425422192
    2. '[n' → logprob: -4.758973121643066
    3. '[-' → logprob: -9.133973121643066
    4. ' [' → logprob: -9.258973121643066
    5. 'dp' → logprob: -9.383973121643066
    6. '[len' → logprob: -10.383973121643066
    7. 'H' → logprob: -11.633973121643066
    8. ')' → logprob: -12.008973121643066
    9. '[N' → logprob: -12.258973121643066
    10. '[I' → logprob: -12.383973121643066

Token 867: 'ation' (ID: 387)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6713484525680542
    2. '[' → logprob: -1.7963484525680542
    3. '   ' → logprob: -2.2963485717773438
    4. 'dp' → logprob: -2.5463485717773438
    5. 'ation' → logprob: -2.7963485717773438
    6. '[]' → logprob: -4.046348571777344
    7. '=' → logprob: -4.171348571777344
    8. '[
' → logprob: -5.546348571777344
    9. 'ée' → logprob: -5.796348571777344
    10. '['' → logprob: -5.921348571777344

Token 868: ' dynamique' (ID: 98708)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6704753041267395
    2. ' =' → logprob: -1.0454752445220947
    3. '_' → logprob: -2.1704752445220947
    4. '[' → logprob: -4.420475482940674
    5. '[]' → logprob: -5.920475482940674
    6. ')' → logprob: -6.545475482940674
    7. '_=' → logprob: -6.545475482940674
    8. '=[]' → logprob: -6.920475482940674
    9. '```' → logprob: -7.045475482940674
    10. '=[' → logprob: -7.420475482940674

Token 869: '),' (ID: 936)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04554487019777298
    2. '=' → logprob: -3.1705448627471924
    3. ']' → logprob: -6.6705451011657715
    4. '=[' → logprob: -8.045544624328613
    5. '_' → logprob: -8.170544624328613
    6. 'dp' → logprob: -8.170544624328613
    7. ')' → logprob: -8.545544624328613
    8. '[' → logprob: -9.795544624328613
    9. ',' → logprob: -10.545544624328613
    10. ' ' → logprob: -10.920544624328613

Token 870: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018477557227015495
    2. '[' → logprob: -4.018477439880371
    3. '[-' → logprob: -8.643477439880371
    4. ' dp' → logprob: -9.518477439880371
    5. '[n' → logprob: -10.018477439880371
    6. ' [' → logprob: -10.893477439880371
    7. 'H' → logprob: -12.143477439880371
    8. '[N' → logprob: -13.518477439880371
    9. '0' → logprob: -13.893477439880371
    10. ' =' → logprob: -14.018477439880371

Token 871: ' les' (ID: 1341)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -1.153584361076355
    2. '=' → logprob: -1.278584361076355
    3. '[' → logprob: -2.0285844802856445
    4. ' =' → logprob: -2.1535844802856445
    5. '=[' → logprob: -2.2785844802856445
    6. '_' → logprob: -3.4035844802856445
    7. 'dp' → logprob: -5.4035844802856445
    8. 'de' → logprob: -5.9035844802856445
    9. ' de' → logprob: -6.0285844802856445
    10. '(' → logprob: -6.4035844802856445

Token 872: ' états' (ID: 184259)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2483217865228653
    2. 'INF' → logprob: -1.623321771621704
    3. '[' → logprob: -3.998321771621704
    4. '=' → logprob: -6.498322010040283
    5. '1' → logprob: -6.998322010040283
    6. ' INF' → logprob: -7.498322010040283
    7. ']' → logprob: -7.873322010040283
    8. 'inf' → logprob: -7.873322010040283
    9. ' ' → logprob: -9.123321533203125
    10. '_' → logprob: -9.373321533203125

Token 873: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6026286482810974
    2. '=' → logprob: -0.8526286482810974
    3. 'dp' → logprob: -3.852628707885742
    4. '[' → logprob: -6.227628707885742
    5. '=[' → logprob: -6.852628707885742
    6. '=False' → logprob: -7.852628707885742
    7. 'False' → logprob: -8.102628707885742
    8. 's' → logprob: -8.727628707885742
    9. 'de' → logprob: -9.227628707885742
    10. ']' → logprob: -9.352628707885742

Token 874: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17372657358646393
    2. 'INF' → logprob: -1.9237265586853027
    3. '0' → logprob: -4.423726558685303
    4. '[-' → logprob: -7.798726558685303
    5. '-INF' → logprob: -8.173727035522461
    6. '-' → logprob: -8.673727035522461
    7. 'False' → logprob: -8.798727035522461
    8. 'inf' → logprob: -8.923727035522461
    9. ' [' → logprob: -9.548727035522461
    10. '-inf' → logprob: -10.048727035522461

Token 875: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10486875474452972
    2. 'INF' → logprob: -2.7298686504364014
    3. '0' → logprob: -3.6048686504364014
    4. '-' → logprob: -5.8548688888549805
    5. '[-' → logprob: -6.2298688888549805
    6. '-inf' → logprob: -7.6048688888549805
    7. '[n' → logprob: -7.7298688888549805
    8. '-INF' → logprob: -7.9798688888549805
    9. 'inf' → logprob: -8.22986888885498
    10. ' [' → logprob: -8.35486888885498

Token 876: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6077299118041992
    2. '=' → logprob: -1.1077299118041992
    3. 'dp' → logprob: -2.107729911804199
    4. '_dp' → logprob: -5.982729911804199
    5. '
' → logprob: -7.982729911804199
    6. ',' → logprob: -8.6077299118042
    7. '=[' → logprob: -8.8577299118042
    8. ' dp' → logprob: -9.6077299118042
    9. '_' → logprob: -9.9827299118042
    10. 'DP' → logprob: -9.9827299118042

Token 877: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.416665640543215e-05
    2. ' dp' → logprob: -11.12503433227539
    3. '
' → logprob: -11.87503433227539
    4. '[' → logprob: -12.37503433227539
    5. ' =' → logprob: -12.62503433227539
    6. 'd' → logprob: -13.25003433227539
    7. 'DP' → logprob: -13.37503433227539
    8. '_dp' → logprob: -13.87503433227539
    9. '=' → logprob: -14.75003433227539
    10. '	dp' → logprob: -17.25003433227539

Token 878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789058730006218
    2. ' =' → logprob: -2.5789058208465576
    3. '=[' → logprob: -11.578906059265137
    4. '[' → logprob: -12.203906059265137
    5. ' =[' → logprob: -14.078906059265137
    6. ')' → logprob: -15.578906059265137
    7. '=[]' → logprob: -15.828906059265137
    8. ',' → logprob: -16.20390510559082
    9. ']' → logprob: -16.32890510559082
    10. '[:]' → logprob: -16.45390510559082

Token 879: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015764019917696714
    2. '[n' → logprob: -6.5015764236450195
    3. '[len' → logprob: -9.62657642364502
    4. '[I' → logprob: -13.00157642364502
    5. ' [' → logprob: -13.12657642364502
    6. '[length' → logprob: -14.62657642364502
    7. '[-' → logprob: -14.75157642364502
    8. '[int' → logprob: -15.00157642364502
    9. '[i' → logprob: -15.37657642364502
    10. '[N' → logprob: -15.37657642364502

Token 880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.500000953674316
    3. '[' → logprob: -15.375000953674316
    4. ']' → logprob: -15.375000953674316
    5. '(' → logprob: -16.375001907348633
    6. ' ' → logprob: -16.750001907348633
    7. 'INF' → logprob: -17.875001907348633
    8. '
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.875001907348633
    10. '[n' → logprob: -19.000001907348633

Token 881: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019927989691495895
    2. ' for' → logprob: -4.269927978515625
    3. ']*' → logprob: -5.644927978515625
    4. ']*(' → logprob: -6.769927978515625
    5. 'for' → logprob: -7.019927978515625
    6. ']+' → logprob: -9.269927978515625
    7. ' ]' → logprob: -9.644927978515625
    8. ' ' → logprob: -12.769927978515625
    9. '   ' → logprob: -12.894927978515625
    10. ')' → logprob: -13.019927978515625

Token 882: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28194475173950195
    2. 'for' → logprob: -1.906944751739502
    3. ']' → logprob: -2.531944751739502
    4. ']+' → logprob: -5.406944751739502
    5. '+' → logprob: -5.531944751739502
    6. ']*' → logprob: -5.656944751739502
    7. '*' → logprob: -6.156944751739502
    8. ')' → logprob: -6.781944751739502
    9. ' *' → logprob: -7.406944751739502
    10. '
' → logprob: -7.906944751739502

Token 883: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01461624912917614
    2. '(' → logprob: -4.639616012573242
    3. '(len' → logprob: -5.389616012573242
    4. '(max' → logprob: -9.014616012573242
    5. ' (' → logprob: -10.264616012573242
    6. 'len' → logprob: -10.514616012573242
    7. '
' → logprob: -10.639616012573242
    8. 'n' → logprob: -10.639616012573242
    9. '((' → logprob: -11.889616012573242
    10. '100' → logprob: -12.389616012573242

Token 884: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2635561525821686
    2. '(n' → logprob: -1.5135561227798462
    3. 'len' → logprob: -4.513556003570557
    4. '(len' → logprob: -7.513556003570557
    5. '(' → logprob: -10.263556480407715
    6. ' (' → logprob: -11.763556480407715
    7. ' n' → logprob: -12.638556480407715
    8. '
' → logprob: -13.013556480407715
    9. '[n' → logprob: -13.638556480407715
    10. 'max' → logprob: -14.138556480407715

Token 885: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038658222183585167
    2. ' +' → logprob: -7.875386714935303
    3. '+
' → logprob: -12.000386238098145
    4. '
' → logprob: -15.125386238098145
    5. '＋' → logprob: -17.62538719177246
    6. ' +
' → logprob: -18.00038719177246
    7. ')' → logprob: -18.25038719177246
    8. '1' → logprob: -18.50038719177246
    9. '()+' → logprob: -18.50038719177246
    10. ' plus' → logprob: -18.62538719177246

Token 886: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4741264283657074
    2. '1' → logprob: -0.9741264581680298
    3. ' ' → logprob: -9.974126815795898
    4. '   ' → logprob: -13.974126815795898
    5. '10' → logprob: -14.974126815795898
    6. '11' → logprob: -15.224126815795898
    7. '```' → logprob: -15.349126815795898
    8. '3' → logprob: -15.474126815795898
    9. '5' → logprob: -15.661626815795898
    10. '
' → logprob: -15.974126815795898

Token 887: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.523138165473938
    2. '2' → logprob: -0.898138165473938
    3. '3' → logprob: -11.648138046264648
    4. '10' → logprob: -13.148138046264648
    5. '5' → logprob: -13.398138046264648
    6. '11' → logprob: -14.023138046264648
    7. '12' → logprob: -15.460638046264648
    8. '
' → logprob: -15.585638046264648
    9. '4' → logprob: -15.648138046264648
    10. '```' → logprob: -16.08563804626465

Token 888: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.875012397766113
    4. ')`' → logprob: -15.500012397766113
    5. ')
' → logprob: -16.25001335144043
    6. ')

' → logprob: -16.37501335144043
    7. ')#' → logprob: -16.62501335144043
    8. ']' → logprob: -17.00001335144043
    9. '))' → logprob: -17.00001335144043
    10. ')]' → logprob: -17.62501335144043

Token 889: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18369099497795105
    2. 'for' → logprob: -1.8086910247802734
    3. '
' → logprob: -5.933691024780273
    4. ' for' → logprob: -7.308691024780273
    5. '' → logprob: -8.558691024780273
    6. '\n' → logprob: -9.183691024780273
    7. '

' → logprob: -9.183691024780273
    8. '  
' → logprob: -9.558691024780273
    9. ' 
' → logprob: -9.558691024780273
    10. 'dp' → logprob: -10.308691024780273

Token 890: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018650617450475693
    2. 'for' → logprob: -4.143650531768799
    3. '
' → logprob: -6.143650531768799
    4. '\n' → logprob: -9.018651008605957
    5. ' for' → logprob: -9.143651008605957
    6. '

' → logprob: -9.268651008605957
    7. '' → logprob: -9.768651008605957
    8. '  
' → logprob: -10.518651008605957
    9. ' 
' → logprob: -10.518651008605957
    10. 'dp' → logprob: -11.018651008605957

Token 891: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43784987926483154
    2. '
' → logprob: -1.0628498792648315
    3. ' for' → logprob: -5.312849998474121
    4. '
' → logprob: -5.687849998474121
    5. '\n' → logprob: -8.437849998474121
    6. '

' → logprob: -8.562849998474121
    7. '' → logprob: -8.812849998474121
    8. 'dp' → logprob: -10.312849998474121
    9. ')' → logprob: -10.437849998474121
    10. ' 
' → logprob: -10.562849998474121

Token 892: '[i' (ID: 1768)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005637581925839186
    2. ')' → logprob: -5.8806376457214355
    3. ' ]' → logprob: -6.8806376457214355
    4. '])' → logprob: -7.2556376457214355
    5. '+' → logprob: -8.005637168884277
    6. '-' → logprob: -9.130637168884277
    7. '[' → logprob: -9.130637168884277
    8. '=' → logprob: -9.255637168884277
    9. ')]' → logprob: -9.255637168884277
    10. ' =' → logprob: -9.755637168884277

Token 894: ' correspond' (ID: 11095)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 895: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4348389804363251
    2. ' aux' → logprob: -1.6848390102386475
    3. 'à' → logprob: -3.0598390102386475
    4. ' au' → logprob: -3.4348390102386475
    5. 'aux' → logprob: -3.4348390102386475
    6. 'au' → logprob: -3.9348390102386475
    7. '[i' → logprob: -4.559838771820068
    8. '=' → logprob: -5.184838771820068
    9. ' =' → logprob: -5.184838771820068
    10. ')' → logprob: -5.934838771820068

Token 896: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024458738043904305
    2. ' i' → logprob: -4.274458885192871
    3. 'nombre' → logprob: -6.024458885192871
    4. 'dp' → logprob: -6.274458885192871
    5. ']' → logprob: -6.524458885192871
    6. 'position' → logprob: -7.649458885192871
    7. '(i' → logprob: -7.649458885192871
    8. '1' → logprob: -7.899458885192871
    9. 'max' → logprob: -8.149458885192871
    10. '0' → logprob: -8.274458885192871

Token 897: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4939706027507782
    2. '[i' → logprob: -1.6189706325531006
    3. '[' → logprob: -3.2439706325531006
    4. ']' → logprob: -3.8689706325531006
    5. 's' → logprob: -4.2439703941345215
    6. ')' → logprob: -4.2439703941345215
    7. ' de' → logprob: -4.2439703941345215
    8. 'dp' → logprob: -4.6189703941345215
    9. '_dp' → logprob: -4.7439703941345215
    10. '   ' → logprob: -4.8689703941345215

Token 898: ' façons' (ID: 165958)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.898176372051239
    2. 'fa' → logprob: -1.2731764316558838
    3. 'ways' → logprob: -1.8981764316558838
    4. '0' → logprob: -2.523176431655884
    5. '1' → logprob: -3.523176431655884
    6. ' façons' → logprob: -3.773176431655884
    7. 'dp' → logprob: -4.648176193237305
    8. 'che' → logprob: -5.148176193237305
    9. 'i' → logprob: -5.273176193237305
    10. 's' → logprob: -6.898176193237305

Token 899: ' d' (ID: 272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0467485189437866
    2. ')' → logprob: -1.2967485189437866
    3. '_' → logprob: -1.5467485189437866
    4. '[' → logprob: -3.671748638153076
    5. 'de' → logprob: -3.796748638153076
    6. 'dp' → logprob: -3.921748638153076
    7. 'def' → logprob: -4.421748638153076
    8. ' de' → logprob: -4.546748638153076
    9. '   ' → logprob: -4.546748638153076
    10. '_dp' → logprob: -4.546748638153076

Token 900: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5336437821388245
    2. '_' → logprob: -1.9086437225341797
    3. 'i' → logprob: -2.2836437225341797
    4. '[i' → logprob: -3.0336437225341797
    5. ''' → logprob: -4.03364372253418
    6. ''utiliser' → logprob: -4.03364372253418
    7. ''arr' → logprob: -4.53364372253418
    8. ''être' → logprob: -4.65864372253418
    9. ''obtenir' → logprob: -4.90864372253418
    10. ' i' → logprob: -5.03364372253418

Token 901: 'atte' (ID: 23975)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.8056268692016602
    2. 'arr' → logprob: -1.3056268692016602
    3. 'i' → logprob: -1.9306268692016602
    4. 'former' → logprob: -3.93062686920166
    5. 'penser' → logprob: -4.30562686920166
    6. 'atte' → logprob: -4.43062686920166
    7. 'coder' → logprob: -4.43062686920166
    8. 'con' → logprob: -4.55562686920166
    9. 'placer' → logprob: -4.55562686920166
    10. 'tr' → logprob: -4.68062686920166

Token 902: 'indre' (ID: 28945)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.787824809551239
    2. 'indre' → logprob: -1.4128248691558838
    3. 'endre' → logprob: -1.7878248691558838
    4. '   ' → logprob: -2.787824869155884
    5. '[i' → logprob: -3.287824869155884
    6. 'inder' → logprob: -4.662824630737305
    7. 'ind' → logprob: -4.912824630737305
    8. 'index' → logprob: -5.912824630737305
    9. 'iner' → logprob: -6.037824630737305
    10. 'nd' → logprob: -6.287824630737305

Token 903: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013267049565911293
    2. '(i' → logprob: -5.1382670402526855
    3. ' i' → logprob: -5.7632670402526855
    4. '(n' → logprob: -6.7632670402526855
    5. ']' → logprob: -6.8882670402526855
    6. ')' → logprob: -7.5132670402526855
    7. 'n' → logprob: -7.6382670402526855
    8. ' (' → logprob: -8.013267517089844
    9. '[i' → logprob: -8.638267517089844
    10. 'dp' → logprob: -9.263267517089844

Token 904: ''état' (ID: 116357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5147824287414551
    2. '[i' → logprob: -1.014782428741455
    3. ']' → logprob: -3.889782428741455
    4. '+' → logprob: -4.264782428741455
    5. '(i' → logprob: -6.514782428741455
    6. '_i' → logprob: -7.014782428741455
    7. '[' → logprob: -7.264782428741455
    8. ' i' → logprob: -7.514782428741455
    9. 'n' → logprob: -8.264781951904297
    10. '[n' → logprob: -8.514781951904297

Token 905: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06080106645822525
    2. '(i' → logprob: -3.1858010292053223
    3. '[i' → logprob: -4.560801029205322
    4. ' i' → logprob: -5.560801029205322
    5. ')' → logprob: -6.685801029205322
    6. ']' → logprob: -7.685801029205322
    7. '(' → logprob: -7.935801029205322
    8. '_i' → logprob: -8.68580150604248
    9. 's' → logprob: -8.68580150604248
    10. '
' → logprob: -9.18580150604248

Token 906: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050581347197294235
    2. 'for' → logprob: -3.175581455230713
    3. '
' → logprob: -5.550581455230713
    4. ' for' → logprob: -5.800581455230713
    5. '\n' → logprob: -8.550580978393555
    6. ' 
' → logprob: -8.550580978393555
    7. '  
' → logprob: -9.550580978393555
    8. '

' → logprob: -9.800580978393555
    9. ')' → logprob: -10.425580978393555
    10. '' → logprob: -10.675580978393555

Token 907: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03320956230163574
    2. ')' → logprob: -4.533209800720215
    3. 'l' → logprob: -5.908209800720215
    4. '+' → logprob: -6.033209800720215
    5. 'index' → logprob: -6.158209800720215
    6. '1' → logprob: -6.158209800720215
    7. 'n' → logprob: -6.283209800720215
    8. '[i' → logprob: -6.533209800720215
    9. ' i' → logprob: -6.533209800720215
    10. '```' → logprob: -6.783209800720215

Token 908: ''ét' (ID: 23771)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9043595790863037
    2. 'i' → logprob: -0.9043595790863037
    3. 'n' → logprob: -2.0293595790863037
    4. ']' → logprob: -3.9043595790863037
    5. '1' → logprob: -4.654359817504883
    6. '```' → logprob: -5.529359817504883
    7. '`' → logprob: -5.654359817504883
    8. ' i' → logprob: -5.654359817504883
    9. ')' → logprob: -5.779359817504883
    10. 'a' → logprob: -6.654359817504883

Token 909: 'ape' (ID: 2480)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.619358479976654
    2. 'me' → logprob: -2.119358539581299
    3. 'm' → logprob: -2.369358539581299
    4. 'nd' → logprob: -2.869358539581299
    5. 'ime' → logprob: -3.369358539581299
    6. ']' → logprob: -3.369358539581299
    7. 'i' → logprob: -3.619358539581299
    8. 'q' → logprob: -3.619358539581299
    9. '[' → logprob: -4.369358539581299
    10. 'tat' → logprob: -4.619358539581299

Token 910: ' cour' (ID: 2871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9655002355575562
    2. '+' → logprob: -1.5905002355575562
    3. '1' → logprob: -2.2155003547668457
    4. 'i' → logprob: -2.5905003547668457
    5. '=' → logprob: -2.8405003547668457
    6. '```' → logprob: -3.3405003547668457
    7. '_' → logprob: -3.4655003547668457
    8. '
' → logprob: -3.9655003547668457
    9. '(i' → logprob: -4.090500354766846
    10. '(' → logprob: -4.090500354766846

Token 911: 'ante' (ID: 2116)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.5463073253631592
    2. 'ant' → logprob: -1.7963073253631592
    3. 'ante' → logprob: -2.171307325363159
    4. 'r' → logprob: -3.046307325363159
    5. 'e' → logprob: -3.171307325363159
    6. 'rant' → logprob: -4.546307563781738
    7. 'rent' → logprob: -4.671307563781738
    8. 'nt' → logprob: -4.921307563781738
    9. '```' → logprob: -5.671307563781738
    10. '[' → logprob: -5.921307563781738

Token 912: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43607625365257263
    2. 'for' → logprob: -1.061076283454895
    3. '
' → logprob: -5.3110761642456055
    4. ' for' → logprob: -6.6860761642456055
    5. '

' → logprob: -7.6860761642456055
    6. '\n' → logprob: -8.936076164245605
    7. 'dp' → logprob: -9.061076164245605
    8. ')' → logprob: -9.061076164245605
    9. '' → logprob: -9.811076164245605
    10. '  
' → logprob: -9.936076164245605

Token 913: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011010414455085993
    2. 'stack' → logprob: -7.751101016998291
    3. 'dp' → logprob: -7.751101016998291
    4. '
' → logprob: -9.50110149383545
    5. ' for' → logprob: -10.12610149383545
    6. '```' → logprob: -10.37610149383545
    7. 'i' → logprob: -10.62610149383545
    8. 'from' → logprob: -11.50110149383545
    9. 'he' → logprob: -12.00110149383545
    10. 'prev' → logprob: -12.00110149383545

Token 914: ' Bou' (ID: 33816)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.03981136530637741
    2. 'for' → logprob: -3.664811372756958
    3. 'stk' → logprob: -5.164811134338379
    4. 'st' → logprob: -5.414811134338379
    5. 'from' → logprob: -6.039811134338379
    6. 'prev' → logprob: -9.164811134338379
    7. '#' → logprob: -9.289811134338379
    8. 'de' → logprob: -9.414811134338379
    9. 'last' → logprob: -9.664811134338379
    10. 's' → logprob: -9.789811134338379

Token 915: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.19345223903656006
    2. 'c' → logprob: -1.81845223903656
    3. 'r' → logprob: -4.56845235824585
    4. 'for' → logprob: -6.94345235824585
    5. 'n' → logprob: -7.44345235824585
    6. 'cl' → logprob: -7.56845235824585
    7. 'f' → logprob: -7.69345235824585
    8. 'clé' → logprob: -8.693451881408691
    9. 'cles' → logprob: -8.693451881408691
    10. 't' → logprob: -8.943451881408691

Token 916: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002228406025096774
    2. '_' → logprob: -6.502228260040283
    3. 'i' → logprob: -7.627228260040283
    4. ' for' → logprob: -8.377228736877441
    5. '
' → logprob: -12.252228736877441
    6. '_for' → logprob: -13.002228736877441
    7. '_
' → logprob: -14.252228736877441
    8. '_i' → logprob: -15.002228736877441
    9. ' _' → logprob: -15.252228736877441
    10. '_=' → logprob: -15.752228736877441

Token 917: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11374898999929428
    2. 'i' → logprob: -2.2387490272521973
    3. ' range' → logprob: -7.363749027252197
    4. '_' → logprob: -8.488748550415039
    5. 'n' → logprob: -10.363748550415039
    6. ' i' → logprob: -10.863748550415039
    7. 'r' → logprob: -11.363748550415039
    8. '_range' → logprob: -11.738748550415039
    9. '_i' → logprob: -11.863748550415039
    10. 'rang' → logprob: -11.988748550415039

Token 918: ' étape' (ID: 83661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22742152214050293
    2. ' i' → logprob: -1.602421522140503
    3. '_' → logprob: -6.477421760559082
    4. ' range' → logprob: -8.477421760559082
    5. ' _' → logprob: -9.352421760559082
    6. ' in' → logprob: -9.602421760559082
    7. 'range' → logprob: -9.727421760559082
    8. '_i' → logprob: -10.477421760559082
    9. ' ' → logprob: -12.602421760559082
    10. 'in' → logprob: -12.727421760559082

Token 919: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001158211671281606
    2. 'i' → logprob: -9.750115394592285
    3. ' for' → logprob: -10.250115394592285
    4. '_' → logprob: -11.000115394592285
    5. ':' → logprob: -13.125115394592285
    6. 'in' → logprob: -13.625115394592285
    7. '_for' → logprob: -14.125115394592285
    8. 'range' → logprob: -14.250115394592285
    9. '
' → logprob: -14.875115394592285
    10. '_range' → logprob: -16.0001163482666

Token 920: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.034490469843149185
    2. ' in' → logprob: -3.6594905853271484
    3. 'for' → logprob: -4.909490585327148
    4. 'k' → logprob: -7.534490585327148
    5. ',' → logprob: -9.159490585327148
    6. '_in' → logprob: -9.909490585327148
    7. ' for' → logprob: -10.284490585327148
    8. '_' → logprob: -10.659490585327148
    9. 'range' → logprob: -11.534490585327148
    10. 'i' → logprob: -11.659490585327148

Token 921: ' modification' (ID: 29847)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07288261502981186
    2. 'for' → logprob: -2.947882652282715
    3. 'range' → logprob: -4.947882652282715
    4. ' k' → logprob: -5.197882652282715
    5. ' for' → logprob: -6.197882652282715
    6. '1' → logprob: -6.697882652282715
    7. 'n' → logprob: -7.447882652282715
    8. 'i' → logprob: -7.822882652282715
    9. ' range' → logprob: -7.947882652282715
    10. '_' → logprob: -8.447882652282715

Token 922: ' dynamique' (ID: 98708)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3971218168735504
    2. ' in' → logprob: -1.272121787071228
    3. 'for' → logprob: -3.3971219062805176
    4. 'k' → logprob: -5.147121906280518
    5. '(k' → logprob: -6.147121906280518
    6. '(' → logprob: -6.647121906280518
    7. ' for' → logprob: -6.897121906280518
    8. ' en' → logprob: -7.272121906280518
    9. ',' → logprob: -7.397121906280518
    10. ' k' → logprob: -7.897121906280518

Token 923: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03628042712807655
    2. 'in' → logprob: -4.036280632019043
    3. ' for' → logprob: -4.286280632019043
    4. ' in' → logprob: -6.036280632019043
    5. ':' → logprob: -7.036280632019043
    6. 'range' → logprob: -7.911280632019043
    7. 'k' → logprob: -8.661280632019043
    8. ',' → logprob: -9.536280632019043
    9. '
' → logprob: -9.786280632019043
    10. '_' → logprob: -10.536280632019043

Token 924: ' dp' (ID: 21546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033277131617069244
    2. 'k' → logprob: -3.6582770347595215
    3. 'i' → logprob: -6.0332770347595215
    4. 'H' → logprob: -6.1582770347595215
    5. ' range' → logprob: -6.4082770347595215
    6. 'dp' → logprob: -7.7832770347595215
    7. 'n' → logprob: -8.40827751159668
    8. '_' → logprob: -10.03327751159668
    9. 'r' → logprob: -10.40827751159668
    10. 'rang' → logprob: -10.90827751159668

Token 925: ' selon' (ID: 27571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00945501308888197
    2. ' for' → logprob: -5.25945520401001
    3. ':' → logprob: -5.75945520401001
    4. '
' → logprob: -8.384454727172852
    5. ',' → logprob: -8.509454727172852
    6. 'k' → logprob: -8.634454727172852
    7. '_' → logprob: -8.884454727172852
    8. 'in' → logprob: -9.509454727172852
    9. ':
' → logprob: -9.634454727172852
    10. '_for' → logprob: -9.759454727172852

Token 926: ' H' (ID: 487)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003554339287802577
    2. ' range' → logprob: -5.753554344177246
    3. 'k' → logprob: -8.128554344177246
    4. 'H' → logprob: -10.003554344177246
    5. 'n' → logprob: -11.003554344177246
    6. 'i' → logprob: -12.003554344177246
    7. ' H' → logprob: -12.503554344177246
    8. '_' → logprob: -12.878554344177246
    9. ' k' → logprob: -13.253554344177246
    10. '   ' → logprob: -13.628554344177246

Token 927: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016382889589294791
    2. '
' → logprob: -6.501638412475586
    3. ' for' → logprob: -9.126638412475586
    4. 'k' → logprob: -11.126638412475586
    5. '\n' → logprob: -11.876638412475586
    6. '
' → logprob: -13.876638412475586
    7. '_for' → logprob: -13.876638412475586
    8. ':
' → logprob: -14.001638412475586
    9. '_k' → logprob: -14.751638412475586
    10. 'range' → logprob: -14.751638412475586

Token 928: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009275413467548788
    2. '
' → logprob: -7.125927448272705
    3. ' for' → logprob: -9.125927925109863
    4. 'k' → logprob: -11.375927925109863
    5. '_' → logprob: -14.750927925109863
    6. '
' → logprob: -14.875927925109863
    7. '_for' → logprob: -15.000927925109863
    8. '\n' → logprob: -15.125927925109863
    9. '0' → logprob: -15.125927925109863
    10. '```' → logprob: -15.250927925109863

Token 929: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.35193535685539246
    2. 'k' → logprob: -1.2269353866577148
    3. ' i' → logprob: -6.726935386657715
    4. '_' → logprob: -7.226935386657715
    5. 'i' → logprob: -7.351935386657715
    6. ' _' → logprob: -7.351935386657715
    7. '_k' → logprob: -8.476935386657715
    8. '(k' → logprob: -11.101935386657715
    9. '	k' → logprob: -11.851935386657715
    10. ' ' → logprob: -11.851935386657715

Token 930: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08898723870515823
    2. 'in' → logprob: -2.463987350463867
    3. ' ' → logprob: -10.963987350463867
    4. '	in' → logprob: -11.088987350463867
    5. ',' → logprob: -13.088987350463867
    6. '   ' → logprob: -13.338987350463867
    7. '1' → logprob: -13.338987350463867
    8. '0' → logprob: -13.838987350463867
    9. 'import' → logprob: -13.963987350463867
    10. 'k' → logprob: -14.213987350463867

Token 931: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.751928329467773
    4. '   ' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '	range' → logprob: -18.001928329467773
    7. 'rang' → logprob: -18.251928329467773
    8. '  ' → logprob: -18.501928329467773
    9. 'r' → logprob: -19.501928329467773
    10. 'ran' → logprob: -20.001928329467773

Token 932: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16023224592208862
    2. '(' → logprob: -1.9102323055267334
    3. '(
' → logprob: -12.285232543945312
    4. '1' → logprob: -12.660232543945312
    5. '(k' → logprob: -16.160232543945312
    6. '(len' → logprob: -16.160232543945312
    7. 'n' → logprob: -16.410232543945312
    8. ' (' → logprob: -17.410232543945312
    9. '((' → logprob: -17.785232543945312
    10. '(

' → logprob: -18.785232543945312

Token 933: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2701548933982849
    2. '+' → logprob: -1.5201549530029297
    3. '):
' → logprob: -4.52015495300293
    4. ' +' → logprob: -5.14515495300293
    5. ')' → logprob: -7.02015495300293
    6. '-' → logprob: -8.39515495300293
    7. ' ):' → logprob: -9.27015495300293
    8. '1' → logprob: -9.64515495300293
    9. ' -' → logprob: -10.27015495300293
    10. '   ' → logprob: -11.39515495300293

Token 934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02652263641357422
    2. 'dp' → logprob: -4.651522636413574
    3. 'if' → logprob: -4.901522636413574
    4. 'for' → logprob: -5.401522636413574
    5. ' if' → logprob: -5.776522636413574
    6. ' for' → logprob: -7.026522636413574
    7. ' dp' → logprob: -8.026522636413574
    8. '    
' → logprob: -9.526522636413574
    9. '    ' → logprob: -9.651522636413574
    10. 'j' → logprob: -10.151522636413574

Token 935: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3012153208255768
    2. 'for' → logprob: -2.426215410232544
    3. 'nd' → logprob: -2.926215410232544
    4. 'if' → logprob: -3.301215410232544
    5. 'next' → logprob: -3.551215410232544
    6. 'new' → logprob: -3.676215410232544
    7. 'tmp' → logprob: -4.301215171813965
    8. 'temp' → logprob: -4.926215171813965
    9. 'j' → logprob: -6.301215171813965
    10. '   ' → logprob: -6.926215171813965

Token 936: ' Cr' (ID: 5790)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6437150835990906
    2. 'dp' → logprob: -1.3937151432037354
    3. 'new' → logprob: -2.1437151432037354
    4. 'next' → logprob: -3.0187151432037354
    5. 'tmp' → logprob: -3.8937151432037354
    6. 'for' → logprob: -4.518714904785156
    7. 'if' → logprob: -5.018714904785156
    8. 'temp' → logprob: -5.143714904785156
    9. 'n' → logprob: -5.393714904785156
    10. 'stack' → logprob: -5.518714904785156

Token 937: 'ée' (ID: 2894)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.40319758653640747
    2. 'urent' → logprob: -1.6531975269317627
    3. 'e' → logprob: -2.9031975269317627
    4. 'urr' → logprob: -3.5281975269317627
    5. 'ur' → logprob: -3.5281975269317627
    6. 'ont' → logprob: -5.153197765350342
    7. 'for' → logprob: -5.528197765350342
    8. 'ounter' → logprob: -5.653197765350342
    9. '#' → logprob: -5.903197765350342
    10. 'ount' → logprob: -6.278197765350342

Token 938: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2220250368118286
    2. '   ' → logprob: -1.3470250368118286
    3. ' new' → logprob: -1.9720250368118286
    4. 'new' → logprob: -2.597024917602539
    5. ' dp' → logprob: -2.847024917602539
    6. 'tmp' → logprob: -3.097024917602539
    7. 'temp' → logprob: -3.972024917602539
    8. 'e' → logprob: -3.972024917602539
    9. '=' → logprob: -4.222024917602539
    10. ' =' → logprob: -4.347024917602539

Token 939: ' nouvelle' (ID: 24562)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.624582827091217
    2. 'default' → logprob: -0.999582827091217
    3. 'tmp' → logprob: -2.4995827674865723
    4. 'nd' → logprob: -4.749582767486572
    5. 'temp' → logprob: -6.249582767486572
    6. 'nou' → logprob: -6.499582767486572
    7. 'deque' → logprob: -6.749582767486572
    8. 'dp' → logprob: -7.874582767486572
    9. 'next' → logprob: -7.874582767486572
    10. 'n' → logprob: -8.62458324432373

Token 940: ' liste' (ID: 31719)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.354847252368927
    2. 'dp' → logprob: -1.2298471927642822
    3. '[' → logprob: -5.604847431182861
    4. '_' → logprob: -6.479847431182861
    5. ' dp' → logprob: -6.979847431182861
    6. '[]' → logprob: -9.604846954345703
    7. '	dp' → logprob: -10.104846954345703
    8. ' =' → logprob: -10.604846954345703
    9. 'tmp' → logprob: -10.979846954345703
    10. 'Dp' → logprob: -11.229846954345703

Token 941: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1237303838133812
    2. ' dp' → logprob: -2.873730421066284
    3. '   ' → logprob: -3.373730421066284
    4. 'tmp' → logprob: -4.873730182647705
    5. '(dp' → logprob: -5.123730182647705
    6. 'new' → logprob: -5.498730182647705
    7. ' new' → logprob: -6.373730182647705
    8. '_dp' → logprob: -6.498730182647705
    9. 'next' → logprob: -6.998730182647705
    10. '	dp' → logprob: -7.373730182647705

Token 942: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028173226863145828
    2. '[' → logprob: -3.6531732082366943
    3. ' dp' → logprob: -7.653173446655273
    4. '[n' → logprob: -7.778173446655273
    5. '_dp' → logprob: -8.653173446655273
    6. 'range' → logprob: -8.903173446655273
    7. '[k' → logprob: -8.903173446655273
    8. 'new' → logprob: -8.903173446655273
    9. '[i' → logprob: -9.403173446655273
    10. '_[' → logprob: -9.653173446655273

Token 943: ' nouveaux' (ID: 43964)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001416069339029491
    2. 'new' → logprob: -7.626416206359863
    3. 'tmp' → logprob: -8.501416206359863
    4. '_dp' → logprob: -8.626416206359863
    5. 'next' → logprob: -8.876416206359863
    6. '[' → logprob: -8.876416206359863
    7. '(dp' → logprob: -10.001416206359863
    8. ' dp' → logprob: -10.001416206359863
    9. 'range' → logprob: -10.751416206359863
    10. '[n' → logprob: -10.751416206359863

Token 944: ' états' (ID: 184259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20279568433761597
    2. '_dp' → logprob: -1.7027957439422607
    3. 'states' → logprob: -7.577795505523682
    4. '_' → logprob: -8.82779598236084
    5. '_states' → logprob: -9.20279598236084
    6. 'val' → logprob: -9.20279598236084
    7. 'DP' → logprob: -9.32779598236084
    8. ' dp' → logprob: -9.70279598236084
    9. '	dp' → logprob: -9.95279598236084
    10. ' états' → logprob: -10.07779598236084

Token 945: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05401266738772392
    2. 'dp' → logprob: -3.1790127754211426
    3. ' dp' → logprob: -4.679012775421143
    4. 'new' → logprob: -7.054012775421143
    5. ' new' → logprob: -7.804012775421143
    6. 'next' → logprob: -9.179012298583984
    7. ' next' → logprob: -9.554012298583984
    8. 'n' → logprob: -9.804012298583984
    9. '(dp' → logprob: -10.304012298583984
    10. '
' → logprob: -10.554012298583984

Token 946: ' cette' (ID: 7696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1364952176809311
    2. '[n' → logprob: -2.6364951133728027
    3. '[k' → logprob: -3.8864951133728027
    4. 'n' → logprob: -4.261495113372803
    5. 'dp' → logprob: -4.761495113372803
    6. '[i' → logprob: -5.136495113372803
    7. '1' → logprob: -6.011495113372803
    8. '(n' → logprob: -6.136495113372803
    9. 'k' → logprob: -7.636495113372803
    10. '
' → logprob: -7.636495113372803

Token 947: ' étape' (ID: 83661)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1261649876832962
    2. 'range' → logprob: -3.7511649131774902
    3. ' k' → logprob: -4.25116491317749
    4. ' étape' → logprob: -4.37616491317749
    5. '(k' → logprob: -4.50116491317749
    6. 'step' → logprob: -4.62616491317749
    7. 'ét' → logprob: -4.87616491317749
    8. '_' → logprob: -5.00116491317749
    9. '`' → logprob: -5.62616491317749
    10. '_k' → logprob: -5.75116491317749

Token 948: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16406303644180298
    2. ' dp' → logprob: -2.289062976837158
    3. '   ' → logprob: -3.164062976837158
    4. 'new' → logprob: -5.664062976837158
    5. ' new' → logprob: -6.289062976837158
    6. '(dp' → logprob: -7.664062976837158
    7. '_dp' → logprob: -7.789062976837158
    8. ' =' → logprob: -7.914062976837158
    9. 'next' → logprob: -8.664063453674316
    10. '=' → logprob: -8.664063453674316

Token 949: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019160760566592216
    2. 'dp' → logprob: -4.394160747528076
    3. ' dp' → logprob: -5.519160747528076
    4. ' new' → logprob: -6.894160747528076
    5. 'new' → logprob: -7.644160747528076
    6. '    ' → logprob: -8.269161224365234
    7. '    
' → logprob: -8.394161224365234
    8. '```' → logprob: -9.019161224365234
    9. ' next' → logprob: -9.144161224365234
    10. '[' → logprob: -9.144161224365234

Token 950: ' new' (ID: 620)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.8822071552276611
    2. 'dp' → logprob: -1.2572071552276611
    3. 'new' (adapté à ' new') → logprob: -1.5072071552276611
    4. 'next' → logprob: -2.882207155227661
    5. 'n' → logprob: -4.757206916809082
    6. 'tmp' → logprob: -4.757206916809082
    7. 'nx' → logprob: -6.007206916809082
    8. 'temp' → logprob: -6.882206916809082
    9. 'cur' → logprob: -7.132206916809082
    10. 'd' → logprob: -7.632206916809082

Token 951: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0023231988307088614
    2. 'dp' → logprob: -6.627323150634766
    3. '_' → logprob: -7.002323150634766
    4. ' =' → logprob: -9.627323150634766
    5. '=' → logprob: -11.877323150634766
    6. '_d' → logprob: -12.752323150634766
    7. ' dp' → logprob: -13.127323150634766
    8. ' _' → logprob: -13.377323150634766
    9. 'DP' → logprob: -13.752323150634766
    10. '	dp' → logprob: -13.877323150634766

Token 952: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759430527687073
    2. ' =' → logprob: -0.8259430527687073
    3. '=[' → logprob: -13.575942993164062
    4. '[' → logprob: -13.950942993164062
    5. ' =[' → logprob: -14.450942993164062
    6. '=[]' → logprob: -14.575942993164062
    7. '   ' → logprob: -15.450942993164062
    8. ',' → logprob: -16.200942993164062
    9. ' ' → logprob: -17.075942993164062
    10. '＝' → logprob: -17.450942993164062

Token 953: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005272957496345043
    2. ' [' → logprob: -7.625527381896973
    3. '[n' → logprob: -10.375527381896973
    4. 'dp' → logprob: -12.750527381896973
    5. '[]' → logprob: -13.875527381896973
    6. '[k' → logprob: -14.125527381896973
    7. '[p' → logprob: -15.125527381896973
    8. '[m' → logprob: -15.125527381896973
    9. '[len' → logprob: -15.250527381896973
    10. '[new' → logprob: -15.375527381896973

Token 954: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000170882252859883
    2. '1' → logprob: -9.125170707702637
    3. 'INF' → logprob: -10.625170707702637
    4. '(' → logprob: -11.500170707702637
    5. 'mod' → logprob: -11.875170707702637
    6. ']' → logprob: -12.250170707702637
    7. 'dp' → logprob: -12.375170707702637
    8. '(mod' → logprob: -13.812670707702637
    9. '[' → logprob: -13.875170707702637
    10. ' ' → logprob: -13.937670707702637

Token 955: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13771481812000275
    2. ' for' → logprob: -2.2627148628234863
    3. 'for' → logprob: -4.262714862823486
    4. ')' → logprob: -5.137714862823486
    5. ']*' → logprob: -6.262714862823486
    6. ']*(' → logprob: -6.262714862823486
    7. ' ]' → logprob: -7.637714862823486
    8. '*' → logprob: -8.512714385986328
    9. ' *' → logprob: -10.512714385986328
    10. ']+' → logprob: -10.762714385986328

Token 956: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -1.0867340564727783
    2. ' *' → logprob: -1.7117340564727783
    3. ' for' → logprob: -1.8367340564727783
    4. 'for' → logprob: -2.0867340564727783
    5. '(n' → logprob: -2.2117340564727783
    6. '*' → logprob: -2.9617340564727783
    7. ' (' → logprob: -4.086733818054199
    8. ']*(' → logprob: -5.336733818054199
    9. ')' → logprob: -5.711733818054199
    10. '
' → logprob: -5.836733818054199

Token 957: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0017206385964527726
    2. ' (' → logprob: -7.001720428466797
    3. '(len' → logprob: -7.376720428466797
    4. '(' → logprob: -9.126720428466797
    5. '(k' → logprob: -10.001720428466797
    6. '(max' → logprob: -11.626720428466797
    7. '(H' → logprob: -12.626720428466797
    8. '   ' → logprob: -12.626720428466797
    9. '((' → logprob: -12.876720428466797
    10. 'len' → logprob: -13.001720428466797

Token 958: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03807706758379936
    2. '(n' → logprob: -3.2880771160125732
    3. ' n' → logprob: -10.788077354431152
    4. ' (' → logprob: -11.788077354431152
    5. 'len' → logprob: -12.163077354431152
    6. '(' → logprob: -14.288077354431152
    7. '
' → logprob: -14.538077354431152
    8. '(len' → logprob: -14.663077354431152
    9. '   ' → logprob: -14.788077354431152
    10. '[n' → logprob: -16.913076400756836

Token 959: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616108447313309
    2. ' +' → logprob: -4.758615970611572
    3. '+
' → logprob: -14.13361644744873
    4. '+k' → logprob: -14.75861644744873
    5. ')' → logprob: -16.008615493774414
    6. ' plus' → logprob: -16.258615493774414
    7. '+n' → logprob: -16.883615493774414
    8. ' +
' → logprob: -16.883615493774414
    9. '＋' → logprob: -17.008615493774414
    10. '<|end|>' → logprob: -17.133615493774414

Token 960: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326075792312622
    2. '2' → logprob: -0.7576075792312622
    3. ' ' → logprob: -12.632607460021973
    4. '3' → logprob: -13.695107460021973
    5. '
' → logprob: -13.757607460021973
    6. '   ' → logprob: -14.007607460021973
    7. '(' → logprob: -15.195107460021973
    8. '12' → logprob: -15.382607460021973
    9. '7' → logprob: -15.445107460021973
    10. '```' → logprob: -15.507607460021973

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. '2' → logprob: -9.12510871887207
    3. '(' → logprob: -17.56260871887207
    4. '{' → logprob: -17.87510871887207
    5. '```' → logprob: -17.87510871887207
    6. '１' → logprob: -18.12510871887207
    7. ' ' → logprob: -18.43760871887207
    8. '
' → logprob: -18.62510871887207
    9. '``' → logprob: -18.68760871887207
    10. '`' → logprob: -18.75010871887207

Token 962: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013202552509028465
    2. ')
' → logprob: -9.250131607055664
    3. '   ' → logprob: -10.375131607055664
    4. ' )' → logprob: -12.500131607055664
    5. ')
' → logprob: -15.125131607055664
    6. ']' → logprob: -15.375131607055664
    7. ')

' → logprob: -16.625131607055664
    8. ')`' → logprob: -16.875131607055664
    9. '),' → logprob: -17.250131607055664
    10. ' ' → logprob: -17.250131607055664

Token 963: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029493574053049088
    2. 'for' → logprob: -4.404493808746338
    3. '    
' → logprob: -5.029493808746338
    4. '
' → logprob: -5.404493808746338
    5. ' for' → logprob: -5.779493808746338
    6. '<|end|>' → logprob: -6.779493808746338
    7. '	for' → logprob: -7.654493808746338
    8. ' 
' → logprob: -8.40449333190918
    9. '	
' → logprob: -8.40449333190918
    10. '   
' → logprob: -8.77949333190918

Token 964: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4796154499053955
    2. '   ' → logprob: -1.1046154499053955
    3. ' for' → logprob: -3.6046154499053955
    4. '
' → logprob: -4.854615211486816
    5. '	for' → logprob: -4.979615211486816
    6. '    
' → logprob: -5.604615211486816
    7. 'new' → logprob: -6.479615211486816
    8. 'dp' → logprob: -7.604615211486816
    9. '   
' → logprob: -7.729615211486816
    10. '	
' → logprob: -7.979615211486816

Token 965: ' Mise' (ID: 157932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17503781616687775
    2. ' for' → logprob: -2.3000378608703613
    3. '   ' → logprob: -3.0500378608703613
    4. 'j' → logprob: -5.050037860870361
    5. 'i' → logprob: -5.675037860870361
    6. 'dp' → logprob: -7.175037860870361
    7. ' j' → logprob: -7.675037860870361
    8. ' ind' → logprob: -7.800037860870361
    9. ' i' → logprob: -7.800037860870361
    10. '  ' → logprob: -8.800037384033203

Token 966: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.818397045135498
    2. 'à' → logprob: -1.443397045135498
    3. 'new' → logprob: -2.443397045135498
    4. '[' → logprob: -2.693397045135498
    5. '   ' → logprob: -3.068397045135498
    6. '[]' → logprob: -3.568397045135498
    7. ')' → logprob: -4.693397045135498
    8. '[:]' → logprob: -4.818397045135498
    9. '[new' → logprob: -4.818397045135498
    10. '    ' → logprob: -4.943397045135498

Token 967: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1908654123544693
    2. '[' → logprob: -2.1908655166625977
    3. 'new' → logprob: -3.6908655166625977
    4. 'k' → logprob: -4.690865516662598
    5. 'place' → logprob: -4.940865516662598
    6. '[k' → logprob: -5.440865516662598
    7. 'n' → logprob: -5.690865516662598
    8. 'len' → logprob: -5.815865516662598
    9. 'jour' → logprob: -5.940865516662598
    10. '[new' → logprob: -6.065865516662598

Token 968: ' avant' (ID: 13339)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 969: ' mise' (ID: 25868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35585451126098633
    2. '(n' → logprob: -1.7308545112609863
    3. 'for' → logprob: -3.3558545112609863
    4. 'n' → logprob: -3.8558545112609863
    5. ' (' → logprob: -3.9808545112609863
    6. ')' → logprob: -4.355854511260986
    7. '(' → logprob: -4.480854511260986
    8. ' for' → logprob: -4.730854511260986
    9. '    
' → logprob: -5.730854511260986
    10. ' n' → logprob: -5.855854511260986

Token 970: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0025203691329807043
    2. ' à' → logprob: -6.252520561218262
    3. 'À' → logprob: -7.877520561218262
    4. '-à' → logprob: -9.127520561218262
    5. ''à' → logprob: -9.752520561218262
    6. 'au' → logprob: -11.377520561218262
    7. '’à' → logprob: -12.377520561218262
    8. 'new' → logprob: -12.377520561218262
    9. '[' → logprob: -12.502520561218262
    10. '```' → logprob: -12.752520561218262

Token 971: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.004756326321512461
    2. '1' → logprob: -5.629756450653076
    3. 'jours' → logprob: -7.879756450653076
    4. 'jou' → logprob: -8.004755973815918
    5. '```' → logprob: -8.754755973815918
    6. '[j' → logprob: -10.004755973815918
    7. 'l' → logprob: -10.254755973815918
    8. '[' → logprob: -10.379755973815918
    9. 'day' → logprob: -10.504755973815918
    10. 'j' → logprob: -10.504755973815918

Token 972: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7978998422622681
    2. ' for' → logprob: -1.297899842262268
    3. 'for' → logprob: -1.672899842262268
    4. '<|end|>' → logprob: -3.1728997230529785
    5. '
' → logprob: -3.7978997230529785
    6. '    
' → logprob: -4.6728997230529785
    7. ' 
' → logprob: -5.5478997230529785
    8. '	for' → logprob: -5.7978997230529785
    9. '  
' → logprob: -6.4228997230529785
    10. '[' → logprob: -6.7978997230529785

Token 973: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045593149960041046
    2. 'for' → logprob: -3.42059326171875
    3. ' for' → logprob: -4.79559326171875
    4. '	for' → logprob: -5.67059326171875
    5. '    
' → logprob: -9.79559326171875
    6. 'j' → logprob: -10.92059326171875
    7. 'dp' → logprob: -10.92059326171875
    8. '   ' → logprob: -12.04559326171875
    9. '       ' → logprob: -12.17059326171875
    10. '	j' → logprob: -12.29559326171875

Token 974: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09465113282203674
    2. 'stack' → logprob: -2.844651222229004
    3. 'j' → logprob: -4.344651222229004
    4. 'idx' → logprob: -6.344651222229004
    5. 'min' → logprob: -6.344651222229004
    6. 'm' → logprob: -6.344651222229004
    7. 'pos' → logprob: -6.469651222229004
    8. '#' (adapté à ' #') → logprob: -6.594651222229004
    9. 'i' → logprob: -6.844651222229004
    10. '   ' → logprob: -7.219651222229004

Token 975: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021285662427544594
    2. 'j' → logprob: -4.396285533905029
    3. 'i' → logprob: -5.646285533905029
    4. '   ' → logprob: -6.896285533905029
    5. 'stack' → logprob: -6.896285533905029
    6. 'h' → logprob: -7.396285533905029
    7. 'idx' → logprob: -8.021286010742188
    8. 'if' → logprob: -8.021286010742188
    9. 'pos' → logprob: -8.146286010742188
    10. 'x' → logprob: -8.521286010742188

Token 976: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9261283278465271
    2. 'cle' → logprob: -0.9261283278465271
    3. 'cl' → logprob: -2.301128387451172
    4. 'k' → logprob: -2.676128387451172
    5. 'r' → logprob: -4.301128387451172
    6. 'c' → logprob: -4.301128387451172
    7. 'range' → logprob: -6.176128387451172
    8. 'cles' → logprob: -6.301128387451172
    9. 'clé' → logprob: -6.301128387451172
    10. '   ' → logprob: -6.301128387451172

Token 977: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6635022759437561
    2. ' for' → logprob: -1.0385022163391113
    3. 'for' → logprob: -2.6635022163391113
    4. ' j' → logprob: -3.9135022163391113
    5. 'j' → logprob: -4.288502216339111
    6. ' in' → logprob: -4.413502216339111
    7. '    ' → logprob: -5.913502216339111
    8. ' i' → logprob: -6.038502216339111
    9. 'in' → logprob: -6.163502216339111
    10. 'i' → logprob: -6.663502216339111

Token 978: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00047595196519978344
    2. 'i' → logprob: -8.250475883483887
    3. ' range' → logprob: -8.625475883483887
    4. 'k' → logprob: -11.125475883483887
    5. 'j' → logprob: -12.375475883483887
    6. 'H' → logprob: -12.750475883483887
    7. 'new' → logprob: -12.875475883483887
    8. 'n' → logprob: -12.875475883483887
    9. 'dp' → logprob: -13.125475883483887
    10. 'enumer' → logprob: -13.750475883483887

Token 979: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3739352226257324
    2. 'i' → logprob: -1.7489352226257324
    3. ' j' → logprob: -2.2489352226257324
    4. ' i' → logprob: -3.7489352226257324
    5. 'h' → logprob: -5.998935222625732
    6. 'state' → logprob: -6.498935222625732
    7. 'value' → logprob: -7.498935222625732
    8. 'val' → logprob: -7.748935222625732
    9. 'v' → logprob: -7.873935222625732
    10. 'pos' → logprob: -7.873935222625732

Token 980: ' possible' (ID: 4149)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3020971715450287
    2. 'i' → logprob: -1.552097201347351
    3. ' in' → logprob: -4.052097320556641
    4. ' for' → logprob: -4.177097320556641
    5. '   ' → logprob: -5.177097320556641
    6. ' j' → logprob: -5.552097320556641
    7. 'for' → logprob: -5.802097320556641
    8. 'j' → logprob: -6.302097320556641
    9. 'in' → logprob: -8.05209732055664
    10. 'dp' → logprob: -8.05209732055664

Token 981: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13185720145702362
    2. ' for' → logprob: -2.38185715675354
    3. 'for' → logprob: -3.75685715675354
    4. ' in' → logprob: -5.506857395172119
    5. ' i' → logprob: -6.506857395172119
    6. ' j' → logprob: -7.631857395172119
    7. 'in' → logprob: -8.131856918334961
    8. 'i' → logprob: -8.131856918334961
    9. 'dp' → logprob: -8.506856918334961
    10. ' (' → logprob: -8.756856918334961

Token 982: ' cette' (ID: 7696)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024108869954943657
    2. 'k' → logprob: -3.89910888671875
    3. 'n' → logprob: -6.89910888671875
    4. ' range' → logprob: -7.02410888671875
    5. 'i' → logprob: -7.52410888671875
    6. 'for' → logprob: -8.27410888671875
    7. 'j' → logprob: -8.52410888671875
    8. 'step' → logprob: -8.64910888671875
    9. 'l' → logprob: -9.39910888671875
    10. 'index' → logprob: -9.64910888671875

Token 983: ' étape' (ID: 83661)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026491645723581314
    2. 'for' → logprob: -4.401491641998291
    3. ' range' → logprob: -5.026491641998291
    4. 'k' → logprob: -5.401491641998291
    5. 'i' → logprob: -7.401491641998291
    6. 'in' → logprob: -8.52649211883545
    7. ' for' → logprob: -8.65149211883545
    8. 'point' → logprob: -8.77649211883545
    9. ')' → logprob: -8.77649211883545
    10. '
' → logprob: -8.90149211883545

Token 984: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06372469663619995
    2. ' for' → logprob: -3.1887247562408447
    3. 'for' → logprob: -4.188724517822266
    4. '	for' → logprob: -6.813724517822266
    5. '    
' → logprob: -6.938724517822266
    6. ':' → logprob: -6.938724517822266
    7. '    ' → logprob: -7.563724517822266
    8. '  ' → logprob: -7.938724517822266
    9. ',' → logprob: -8.063724517822266
    10. ' ' → logprob: -8.313724517822266

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21296566724777222
    2. ' for' → logprob: -2.087965726852417
    3. 'for' → logprob: -2.712965726852417
    4. '	for' → logprob: -6.712965488433838
    5. '    ' → logprob: -9.712965965270996
    6. '    
' → logprob: -9.837965965270996
    7. '       ' → logprob: -10.087965965270996
    8. ' ' → logprob: -10.462965965270996
    9. ':' → logprob: -10.462965965270996
    10. '  ' → logprob: -10.712965965270996

Token 986: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025288143660873175
    2. 'j' → logprob: -6.252528667449951
    3. ' for' → logprob: -8.37752914428711
    4. '   ' → logprob: -8.50252914428711
    5. 'i' → logprob: -8.75252914428711
    6. 'state' → logprob: -13.37752914428711
    7. ' j' → logprob: -14.00252914428711
    8. 'pos' → logprob: -14.00252914428711
    9. 'dp' → logprob: -14.12752914428711
    10. 'x' → logprob: -14.25252914428711

Token 987: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21339544653892517
    2. 'j' → logprob: -1.7133954763412476
    3. 'x' → logprob: -5.588395595550537
    4. ' i' → logprob: -5.963395595550537
    5. 'v' → logprob: -6.588395595550537
    6. ' j' → logprob: -6.838395595550537
    7. 'h' → logprob: -7.338395595550537
    8. 's' → logprob: -7.338395595550537
    9. 'l' → logprob: -7.963395595550537
    10. 'state' → logprob: -8.463395118713379

Token 988: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34880802035331726
    2. 'in' → logprob: -1.2238080501556396
    3. '	in' → logprob: -8.723808288574219
    4. '   ' → logprob: -9.473808288574219
    5. '+' → logprob: -10.473808288574219
    6. ')' → logprob: -10.723808288574219
    7. '[' → logprob: -11.473808288574219
    8. ' ' → logprob: -11.598808288574219
    9. ',' → logprob: -11.723808288574219
    10. 'In' → logprob: -11.973808288574219

Token 989: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024844540748745203
    2. ' range' → logprob: -6.002484321594238
    3. '(range' → logprob: -12.627484321594238
    4. '   ' → logprob: -13.002484321594238
    5. ' ' → logprob: -14.002484321594238
    6. 'rang' → logprob: -14.627484321594238
    7. ')' → logprob: -15.127484321594238
    8. '	range' → logprob: -15.377484321594238
    9. 'ran' → logprob: -15.502484321594238
    10. '  ' → logprob: -15.627484321594238

Token 990: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022834802512079477
    2. '(k' → logprob: -6.377283573150635
    3. '(H' → logprob: -8.252283096313477
    4. '(' → logprob: -9.127283096313477
    5. 'n' → logprob: -9.127283096313477
    6. '(len' → logprob: -9.752283096313477
    7. '(max' → logprob: -10.877283096313477
    8. '(i' → logprob: -11.627283096313477
    9. '(min' → logprob: -12.252283096313477
    10. '(
' → logprob: -12.627283096313477

Token 991: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048674117773771286
    2. ' +' → logprob: -3.0486741065979004
    3. '):
' → logprob: -9.673674583435059
    4. '   ' → logprob: -11.298674583435059
    5. '):' → logprob: -12.423674583435059
    6. ')' → logprob: -12.923674583435059
    7. '-' → logprob: -13.423674583435059
    8. '+
' → logprob: -13.548674583435059
    9. ' -' → logprob: -14.798674583435059
    10. ',' → logprob: -14.798674583435059

Token 992: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019458913011476398
    2. '2' → logprob: -6.251945972442627
    3. ' ' → logprob: -11.126945495605469
    4. 'k' → logprob: -14.001945495605469
    5. '   ' → logprob: -14.939445495605469
    6. 'n' → logprob: -15.064445495605469
    7. '0' → logprob: -15.251945495605469
    8. '
' → logprob: -15.501945495605469
    9. 'i' → logprob: -16.68944549560547
    10. '+' → logprob: -16.87694549560547

Token 993: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043376852408982813
    2. '2' → logprob: -7.750433921813965
    3. 'k' → logprob: -14.125433921813965
    4. ' ' → logprob: -14.125433921813965
    5. '
' → logprob: -14.375433921813965
    6. '+' → logprob: -15.125433921813965
    7. 'i' → logprob: -16.00043296813965
    8. '   ' → logprob: -16.12543296813965
    9. 'n' → logprob: -16.25043296813965
    10. '0' → logprob: -16.31293296813965

Token 994: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47508957982063293
    2. '):
' → logprob: -0.9750895500183105
    3. '   ' → logprob: -7.1000895500183105
    4. ')' → logprob: -9.725090026855469
    5. '+' → logprob: -9.850090026855469
    6. '):
' → logprob: -10.350090026855469
    7. '       ' → logprob: -11.100090026855469
    8. ':' → logprob: -11.600090026855469
    9. ' ):' → logprob: -12.100090026855469
    10. ',' → logprob: -12.600090026855469

Token 995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016125775873661041
    2. '    ' → logprob: -7.751612663269043
    3. '	' → logprob: -8.376612663269043
    4. ' if' → logprob: -8.626612663269043
    5. '   ' → logprob: -8.751612663269043
    6. ' ' → logprob: -9.001612663269043
    7. '        ' → logprob: -9.376612663269043
    8. '<|end|>' → logprob: -9.626612663269043
    9. '        
' → logprob: -9.876612663269043
    10. ',' → logprob: -9.876612663269043

Token 996: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00949870329350233
    2. ' if' → logprob: -5.634498596191406
    3. '       ' → logprob: -5.759498596191406
    4. 'for' → logprob: -6.134498596191406
    5. 'new' → logprob: -8.634498596191406
    6. 'j' → logprob: -8.759498596191406
    7. '   ' → logprob: -8.759498596191406
    8. '#' (adapté à ' #') → logprob: -10.634498596191406
    9. ' for' → logprob: -11.634498596191406
    10. 'val' → logprob: -11.759498596191406

Token 997: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2562808096408844
    2. 'for' → logprob: -1.506280779838562
    3. 'j' → logprob: -6.506280899047852
    4. 'h' → logprob: -7.131280899047852
    5. 'val' → logprob: -7.256280899047852
    6. '#' → logprob: -7.256280899047852
    7. 'height' → logprob: -9.381280899047852
    8. 'cur' → logprob: -9.506280899047852
    9. 'current' → logprob: -9.631280899047852
    10. 'max' → logprob: -9.756280899047852

Token 998: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.735576331615448
    2. 'dp' → logprob: -0.860576331615448
    3. ' H' → logprob: -3.1105763912200928
    4. ' dp' → logprob: -3.6105763912200928
    5. 'i' → logprob: -3.9855763912200928
    6. ' i' → logprob: -5.235576152801514
    7. 'new' → logprob: -6.610576152801514
    8. ' new' → logprob: -7.610576152801514
    9. '   ' → logprob: -8.735576629638672
    10. 'k' → logprob: -8.860576629638672

Token 999: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011782010551542044
    2. ' dp' → logprob: -7.25117826461792
    3. 'i' → logprob: -7.75117826461792
    4. 'H' → logprob: -11.251177787780762
    5. 'new' → logprob: -11.501177787780762
    6. ' i' → logprob: -12.876177787780762
    7. 'k' → logprob: -13.251177787780762
    8. '(dp' → logprob: -13.501177787780762
    9. 'j' → logprob: -13.626177787780762
    10. '	dp' → logprob: -13.626177787780762

Token 1000: ' cour' (ID: 2871)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.09962403774261475
    2. 'if' → logprob: -3.4746241569519043
    3. '[i' → logprob: -4.474624156951904
    4. '==' → logprob: -4.599624156951904
    5. 'dp' → logprob: -4.849624156951904
    6. '(H' → logprob: -5.224624156951904
    7. '[' → logprob: -5.349624156951904
    8. ' H' → logprob: -6.099624156951904
    9. 'i' → logprob: -6.099624156951904
    10. '   ' → logprob: -6.099624156951904

Token 1001: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.14462755620479584
    2. 'ente' → logprob: -2.019627571105957
    3. 'ant' → logprob: -7.269627571105957
    4. 'r' → logprob: -7.894627571105957
    5. 'ent' → logprob: -8.019627571105957
    6. '[i' → logprob: -9.019627571105957
    7. '   ' → logprob: -9.394627571105957
    8. 'inte' → logprob: -10.019627571105957
    9. '__' → logprob: -10.394627571105957
    10. '#' → logprob: -10.519627571105957

Token 1002: ' H' (ID: 487)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17827646434307098
    2. '==' → logprob: -2.803276538848877
    3. ' ==' → logprob: -2.803276538848877
    4. ' dp' → logprob: -3.928276538848877
    5. 'H' → logprob: -5.553276538848877
    6. 'if' → logprob: -6.178276538848877
    7. '   ' → logprob: -6.178276538848877
    8. '<=' → logprob: -6.553276538848877
    9. '!=' → logprob: -6.553276538848877
    10. ' !=' → logprob: -6.678276538848877

Token 1003: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04895862191915512
    2. '[k' → logprob: -3.0489585399627686
    3. '[' → logprob: -7.923958778381348
    4. ' [' → logprob: -12.923958778381348
    5. '[j' → logprob: -13.298958778381348
    6. 'k' → logprob: -13.548958778381348
    7. 'i' → logprob: -13.673958778381348
    8. '[
' → logprob: -14.548958778381348
    9. '   ' → logprob: -15.048958778381348
    10. '[I' → logprob: -15.173958778381348

Token 1004: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006421190220862627
    2. ']==' → logprob: -5.631421089172363
    3. ']>=' → logprob: -6.881421089172363
    4. ']>' → logprob: -7.631421089172363
    5. ']<=' → logprob: -7.756421089172363
    6. '[' → logprob: -7.881421089172363
    7. ']<' → logprob: -8.506421089172363
    8. '[i' → logprob: -9.506421089172363
    9. ' ]' → logprob: -9.506421089172363
    10. ']!=' → logprob: -10.506421089172363

Token 1005: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.525559663772583
    2. '<=' → logprob: -1.400559663772583
    3. '==' → logprob: -2.400559663772583
    4. '>' → logprob: -3.150559663772583
    5. '<' → logprob: -4.150559425354004
    6. ' >=' → logprob: -5.400559425354004
    7. '!=' → logprob: -5.900559425354004
    8. ' ==' → logprob: -6.275559425354004
    9. ' <=' → logprob: -6.275559425354004
    10. '+' → logprob: -7.400559425354004

Token 1006: ' strict' (ID: 12035)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7258362770080566
    2. '<=' → logprob: -1.6008362770080566
    3. '<' → logprob: -1.7258362770080566
    4. '>' → logprob: -2.1008362770080566
    5. ' >=' → logprob: -5.100836277008057
    6. ' <=' → logprob: -5.975836277008057
    7. 'new' → logprob: -6.475836277008057
    8. '==' → logprob: -6.725836277008057
    9. ' >' → logprob: -7.350836277008057
    10. ' <' → logprob: -7.725836277008057

Token 1007: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.21994473040103912
    2. '<' → logprob: -2.219944715499878
    3. '>' → logprob: -3.094944715499878
    4. 'ly' → logprob: -3.469944715499878
    5. 'e' → logprob: -5.219944953918457
    6. ' <' → logprob: -5.344944953918457
    7. '   ' → logprob: -7.344944953918457
    8. '<=' → logprob: -7.719944953918457
    9. ' >' → logprob: -7.969944953918457
    10. '<
' → logprob: -8.469944953918457

Token 1008: ' supérieure' (ID: 106336)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5184183120727539
    2. '<' → logprob: -1.518418312072754
    3. 'greater' → logprob: -1.768418312072754
    4. 'less' → logprob: -5.018418312072754
    5. 'sup' → logprob: -5.518418312072754
    6. 'inf' → logprob: -6.393418312072754
    7. 'moins' → logprob: -7.643418312072754
    8. 'super' → logprob: -7.768418312072754
    9. ' supérieure' → logprob: -8.268418312072754
    10. 'plus' → logprob: -9.143418312072754

Token 1009: ' à' (ID: 1221)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.204522967338562
    2. 'and' → logprob: -1.454522967338562
    3. '>' → logprob: -1.829522967338562
    4. '       ' → logprob: -2.8295230865478516
    5. '           ' → logprob: -2.9545230865478516
    6. ' >' → logprob: -2.9545230865478516
    7. ' à' → logprob: -3.3295230865478516
    8. ' to' → logprob: -3.3295230865478516
    9. ',' → logprob: -4.579523086547852
    10. '=' → logprob: -4.704523086547852

Token 1010: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00040242893737740815
    2. ' H' → logprob: -8.250402450561523
    3. '0' → logprob: -9.500402450561523
    4. 'new' → logprob: -10.625402450561523
    5. 'k' → logprob: -10.875402450561523
    6. '1' → logprob: -11.000402450561523
    7. '=' → logprob: -13.125402450561523
    8. '   ' → logprob: -13.875402450561523
    9. '#' → logprob: -14.625402450561523
    10. 'i' → logprob: -14.750402450561523

Token 1011: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013840126805007458
    2. '[k' → logprob: -4.638840198516846
    3. '[' → logprob: -5.763840198516846
    4. ' [' → logprob: -8.638839721679688
    5. 'i' → logprob: -8.763839721679688
    6. ' i' → logprob: -9.013839721679688
    7. '[j' → logprob: -9.013839721679688
    8. '(i' → logprob: -9.263839721679688
    9. '   ' → logprob: -9.263839721679688
    10. '[
' → logprob: -9.763839721679688

Token 1012: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07695440202951431
    2. ']:' → logprob: -3.2019543647766113
    3. '],' → logprob: -4.951954364776611
    4. '])' → logprob: -4.951954364776611
    5. ']:
' → logprob: -4.951954364776611
    6. ']):' → logprob: -5.576954364776611
    7. '[k' → logprob: -6.076954364776611
    8. '+' → logprob: -6.576954364776611
    9. ']):
' → logprob: -7.201954364776611
    10. '[i' → logprob: -7.451954364776611

Token 1013: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6488275527954102
    2. ':' → logprob: -1.2738275527954102
    3. '       ' → logprob: -2.39882755279541
    4. 'and' → logprob: -3.14882755279541
    5. '           ' → logprob: -3.52382755279541
    6. ' if' → logprob: -4.02382755279541
    7. 'if' → logprob: -4.52382755279541
    8. ',' → logprob: -6.39882755279541
    9. ' :' → logprob: -6.77382755279541
    10. ':
' → logprob: -7.02382755279541

Token 1014: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2562635540962219
    2. 'if' (adapté à ' if') → logprob: -2.131263494491577
    3. ' if' → logprob: -2.381263494491577
    4. '           ' → logprob: -4.256263732910156
    5. '   ' → logprob: -8.631263732910156
    6. '	if' → logprob: -8.756263732910156
    7. '	' → logprob: -8.881263732910156
    8. ' ' → logprob: -9.256263732910156
    9. '               ' → logprob: -10.506263732910156
    10. '    ' → logprob: -10.631263732910156

Token 1015: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.008639270439743996
    2. ' H' → logprob: -4.758639335632324
    3. '   ' → logprob: -10.883639335632324
    4. '	H' → logprob: -12.383639335632324
    5. '(H' → logprob: -14.133639335632324
    6. ' ' → logprob: -15.008639335632324
    7. ' ' → logprob: -15.008639335632324
    8. '    ' → logprob: -16.008638381958008
    9. '_H' → logprob: -16.633638381958008
    10. '  ' → logprob: -16.883638381958008

Token 1016: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011095807887613773
    2. '[k' → logprob: -4.511096000671387
    3. '[' → logprob: -10.136096000671387
    4. ' [' → logprob: -13.011096000671387
    5. 'i' → logprob: -13.761096000671387
    6. '   ' → logprob: -13.886096000671387
    7. '[j' → logprob: -14.011096000671387
    8. '[I' → logprob: -14.386096000671387
    9. '][' → logprob: -14.511096000671387
    10. ']' → logprob: -14.511096000671387

Token 1017: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05426325649023056
    2. ']>' → logprob: -3.1792633533477783
    3. '>' → logprob: -4.929263114929199
    4. '[' → logprob: -6.679263114929199
    5. ' ]' → logprob: -6.929263114929199
    6. ' >' → logprob: -7.304263114929199
    7. '[k' → logprob: -7.679263114929199
    8. '[i' → logprob: -8.5542631149292
    9. '   ' → logprob: -8.8042631149292
    10. ']
' → logprob: -9.9292631149292

Token 1018: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18055810034275055
    2. '>' → logprob: -1.8055580854415894
    3. ' <' → logprob: -7.430558204650879
    4. ' >
' → logprob: -9.305558204650879
    5. '[' → logprob: -9.930558204650879
    6. '<' → logprob: -10.430558204650879
    7. '   ' → logprob: -11.305558204650879
    8. '>
' → logprob: -11.555558204650879
    9. ' ' → logprob: -12.055558204650879
    10. '[i' → logprob: -12.555558204650879

Token 1019: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0013265528250485659
    2. ' H' → logprob: -6.626326560974121
    3. '   ' → logprob: -14.876326560974121
    4. '	H' → logprob: -15.376326560974121
    5. ' ' → logprob: -17.376325607299805
    6. '       ' → logprob: -18.001325607299805
    7. '  ' → logprob: -18.751325607299805
    8. '           ' → logprob: -18.876325607299805
    9. '_H' → logprob: -19.251325607299805
    10. '    ' → logprob: -19.626325607299805

Token 1020: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0003993296413682401
    2. 'k' → logprob: -7.875399112701416
    3. '[' → logprob: -11.125399589538574
    4. '(k' → logprob: -13.250399589538574
    5. ' [' → logprob: -13.250399589538574
    6. ' k' → logprob: -15.750399589538574
    7. 'H' → logprob: -15.875399589538574
    8. '
' → logprob: -16.000398635864258
    9. '[
' → logprob: -16.125398635864258
    10. '   ' → logprob: -16.625398635864258

Token 1021: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4453625977039337
    2. ']:
' → logprob: -1.0703625679016113
    3. ']' → logprob: -4.695362567901611
    4. '       ' → logprob: -5.820362567901611
    5. ']:
' → logprob: -6.070362567901611
    6. ':' → logprob: -7.195362567901611
    7. '):
' → logprob: -7.945362567901611
    8. '           ' → logprob: -8.44536304473877
    9. '):' → logprob: -8.69536304473877
    10. ' and' → logprob: -9.19536304473877

Token 1022: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10886222124099731
    2. '               ' → logprob: -2.6088621616363525
    3. ':' → logprob: -3.7338621616363525
    4. '       ' → logprob: -6.358862400054932
    5. ' new' → logprob: -6.608862400054932
    6. 'new' → logprob: -7.858862400054932
    7. ',' → logprob: -8.108861923217773
    8. ' :' → logprob: -8.108861923217773
    9. '<|end|>' → logprob: -8.358861923217773
    10. '                       ' → logprob: -8.608861923217773

Token 1023: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06645982712507248
    2. '               ' → logprob: -3.441459894180298
    3. '           ' → logprob: -3.691459894180298
    4. ' new' → logprob: -5.191459655761719
    5. 'continue' → logprob: -6.691459655761719
    6. 'for' → logprob: -8.691459655761719
    7. '```' → logprob: -9.316459655761719
    8. '                   ' → logprob: -9.441459655761719
    9. 'if' → logprob: -9.816459655761719
    10. '                       ' → logprob: -10.941459655761719

Token 1024: ' Double' (ID: 11646)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0017925129504874349
    2. 'for' → logprob: -6.6267924308776855
    3. 'continue' → logprob: -8.376792907714844
    4. ' new' → logprob: -9.251792907714844
    5. 'he' → logprob: -10.251792907714844
    6. '   ' → logprob: -10.626792907714844
    7. 'if' → logprob: -10.751792907714844
    8. 'dp' → logprob: -11.126792907714844
    9. '           ' → logprob: -11.876792907714844
    10. 'add' → logprob: -12.376792907714844

Token 1025: ' les' (ID: 1341)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.31372904777526855
    2. 'new' → logprob: -1.4387290477752686
    3. 'dp' → logprob: -3.9387290477752686
    4. ' new' → logprob: -4.938729286193848
    5. '_new' → logprob: -5.563729286193848
    6. 'd' → logprob: -8.063729286193848
    7. '   ' → logprob: -8.313729286193848
    8. '[new' → logprob: -9.188729286193848
    9. '_' → logprob: -9.313729286193848
    10. ' dp' → logprob: -9.563729286193848

Token 1026: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14942903816699982
    2. 'new' → logprob: -2.0244290828704834
    3. ' new' → logprob: -5.149428844451904
    4. ' dp' → logprob: -7.024428844451904
    5. '_dp' → logprob: -10.774429321289062
    6. '   ' → logprob: -12.399429321289062
    7. 'for' → logprob: -12.899429321289062
    8. '(dp' → logprob: -13.149429321289062
    9. '	dp' → logprob: -13.149429321289062
    10. '_new' → logprob: -13.399429321289062

Token 1027: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.786536693572998
    2. '[new' → logprob: -1.411536693572998
    3. 'new' → logprob: -2.411536693572998
    4. '               ' → logprob: -2.536536693572998
    5. '[' → logprob: -2.661536693572998
    6. ' new' → logprob: -2.911536693572998
    7. '[i' → logprob: -6.036536693572998
    8. '*' → logprob: -6.786536693572998
    9. ' of' → logprob: -7.286536693572998
    10. '                   ' → logprob: -8.036537170410156

Token 1028: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3261982202529907
    2. '=' → logprob: -2.576198101043701
    3. 'for' → logprob: -2.701198101043701
    4. 'umps' → logprob: -3.201198101043701
    5. '[new' → logprob: -3.701198101043701
    6. 'ump' → logprob: -4.576198101043701
    7. '[j' → logprob: -4.701198101043701
    8. 'u' → logprob: -4.701198101043701
    9. '[' → logprob: -4.826198101043701
    10. 'dp' → logprob: -5.076198101043701

Token 1029: 'atte' (ID: 23975)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5843527317047119
    2. '+=' → logprob: -1.709352731704712
    3. 'for' → logprob: -2.209352731704712
    4. '[i' → logprob: -3.584352731704712
    5. ']' → logprob: -4.084352493286133
    6. '+' → logprob: -4.209352493286133
    7. '*' → logprob: -4.334352493286133
    8. 'i' → logprob: -4.584352493286133
    9. ' =' → logprob: -4.584352493286133
    10. 'umps' → logprob: -4.834352493286133

Token 1030: 'ins' (ID: 1564)
  Prédit: 'indre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.0866599828004837
    2. 'ind' → logprob: -3.5866599082946777
    3. 'int' → logprob: -3.9616599082946777
    4. 'nd' → logprob: -4.336659908294678
    5. 'ints' → logprob: -4.711659908294678
    6. 'inte' → logprob: -5.336659908294678
    7. 'i' → logprob: -5.836659908294678
    8. 'n' → logprob: -6.586659908294678
    9. 'intes' → logprob: -6.586659908294678
    10. 'in' → logprob: -7.336659908294678

Token 1031: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.35114479064941406
    2. 'new' → logprob: -1.476144790649414
    3. ' new' → logprob: -3.101144790649414
    4. '[new' → logprob: -4.726144790649414
    5. '   ' → logprob: -5.226144790649414
    6. '[j' → logprob: -6.476144790649414
    7. 'e' → logprob: -6.601144790649414
    8. 'nt' → logprob: -6.851144790649414
    9. '[r' → logprob: -6.851144790649414
    10. '[i' → logprob: -7.226144790649414

Token 1032: ' nouvel' (ID: 76298)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03571729734539986
    2. 'new' → logprob: -4.410717487335205
    3. 'k' → logprob: -4.785717487335205
    4. 'state' → logprob: -5.160717487335205
    5. 'current' → logprob: -6.285717487335205
    6. 's' → logprob: -6.410717487335205
    7. 'dp' → logprob: -6.785717487335205
    8. '[i' → logprob: -6.910717487335205
    9. 'n' → logprob: -8.160717010498047
    10. '+' → logprob: -8.160717010498047

Token 1033: ' état' (ID: 59181)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.056667786091566086
    2. 'dp' → logprob: -3.6816678047180176
    3. 'state' → logprob: -5.056667804718018
    4. ' état' → logprob: -6.181667804718018
    5. '   ' → logprob: -6.431667804718018
    6. 'i' → logprob: -6.556667804718018
    7. '_' → logprob: -6.556667804718018
    8. '_state' → logprob: -6.681667804718018
    9. '_et' → logprob: -6.681667804718018
    10. '`' → logprob: -6.681667804718018

Token 1034: ' en' (ID: 469)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.559592604637146
    2. '           ' → logprob: -1.559592604637146
    3. '[new' → logprob: -2.6845927238464355
    4. ' new' → logprob: -2.9345927238464355
    5. '   ' → logprob: -3.9345927238464355
    6. '               ' → logprob: -4.0595927238464355
    7. '[' → logprob: -4.5595927238464355
    8. '[i' → logprob: -4.8095927238464355
    9. '[j' → logprob: -4.8095927238464355
    10. '[k' → logprob: -5.0595927238464355

Token 1035: ' part' (ID: 997)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.21505142748355865
    2. ' new' → logprob: -2.3400514125823975
    3. 'dp' → logprob: -3.2150514125823975
    4. 'multip' → logprob: -4.465051651000977
    5. '   ' → logprob: -5.215051651000977
    6. 'i' → logprob: -5.465051651000977
    7. 'addition' → logprob: -5.465051651000977
    8. 'plus' → logprob: -5.465051651000977
    9. ' ajout' → logprob: -5.715051651000977
    10. 'add' → logprob: -6.215051651000977

Token 1036: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.928892195224762
    2. 'enant' → logprob: -1.1788921356201172
    3. 'ie' → logprob: -1.6788921356201172
    4. 'i' → logprob: -3.053892135620117
    5. 'out' → logprob: -3.678892135620117
    6. '#' → logprob: -5.428892135620117
    7. 'ante' → logprob: -5.678892135620117
    8. 'it' → logprob: -5.678892135620117
    9. 'em' → logprob: -5.803892135620117
    10. 'icipant' → logprob: -5.803892135620117

Token 1037: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07864276319742203
    2. ' de' → logprob: -3.0786428451538086
    3. '           ' → logprob: -3.9536428451538086
    4. 'from' → logprob: -4.953642845153809
    5. '               ' → logprob: -6.453642845153809
    6. '                   ' → logprob: -7.578642845153809
    7. '   ' → logprob: -8.328642845153809
    8. '            ' → logprob: -8.828642845153809
    9. 'du' → logprob: -8.953642845153809
    10. 'new' → logprob: -9.203642845153809

Token 1038: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2893001437187195
    2. 'i' → logprob: -1.4143002033233643
    3. 'k' → logprob: -5.414299964904785
    4. ' dp' → logprob: -6.914299964904785
    5. '   ' → logprob: -7.414299964904785
    6. 'new' → logprob: -7.414299964904785
    7. 'j' → logprob: -7.664299964904785
    8. ' i' → logprob: -7.789299964904785
    9. 'l' → logprob: -9.289299964904785
    10. '`' → logprob: -9.539299964904785

Token 1039: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012785913422703743
    2. '[k' → logprob: -4.512785911560059
    3. '[j' → logprob: -6.762785911560059
    4. '[' → logprob: -8.137785911560059
    5. '   ' → logprob: -9.637785911560059
    6. '[new' → logprob: -9.887785911560059
    7. ' [' → logprob: -10.012785911560059
    8. 'new' → logprob: -10.262785911560059
    9. '][' → logprob: -11.012785911560059
    10. 'i' → logprob: -11.137785911560059

Token 1040: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027839502319693565
    2. ']:' → logprob: -4.277839660644531
    3. '])' → logprob: -5.277839660644531
    4. '][' → logprob: -5.652839660644531
    5. ']+' → logprob: -6.152839660644531
    6. ']*' → logprob: -7.027839660644531
    7. '[i' → logprob: -7.152839660644531
    8. ']):' → logprob: -8.152839660644531
    9. ']]' → logprob: -9.027839660644531
    10. '[' → logprob: -9.152839660644531

Token 1041: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17143982648849487
    2. '           ' → logprob: -2.0464398860931396
    3. '[new' → logprob: -5.0464396476745605
    4. ':' → logprob: -5.1714396476745605
    5. ' and' → logprob: -5.2964396476745605
    6. '=' → logprob: -6.0464396476745605
    7. ':
' → logprob: -6.2964396476745605
    8. 'new' → logprob: -6.2964396476745605
    9. ' =' → logprob: -6.7964396476745605
    10. '[' → logprob: -7.1714396476745605

Token 1042: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.002162752440199256
    2. ' new' → logprob: -6.502162933349609
    3. '           ' → logprob: -7.752162933349609
    4. '               ' → logprob: -9.12716293334961
    5. '   ' → logprob: -9.87716293334961
    6. '                   ' → logprob: -10.37716293334961
    7. 'if' → logprob: -11.25216293334961
    8. 'he' → logprob: -11.87716293334961
    9. '       ' → logprob: -12.25216293334961
    10. '                       ' → logprob: -13.12716293334961

Token 1043: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -13.750005722045898
    3. '_d' → logprob: -13.750005722045898
    4. '_df' → logprob: -14.500005722045898
    5. '_dc' → logprob: -14.750005722045898
    6. '_dt' → logprob: -15.000005722045898
    7. '   ' → logprob: -15.000005722045898
    8. '_DP' → logprob: -15.750005722045898
    9. 'dp' → logprob: -15.875005722045898
    10. ' _' → logprob: -16.0000057220459

Token 1044: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21873517334461212
    2. '[k' → logprob: -1.8437352180480957
    3. '[' → logprob: -3.3437352180480957
    4. '[j' → logprob: -6.093735218048096
    5. '[h' → logprob: -8.968734741210938
    6. '[new' → logprob: -9.218734741210938
    7. '[m' → logprob: -10.093734741210938
    8. ' [' → logprob: -10.218734741210938
    9. '[n' → logprob: -10.343734741210938
    10. '[s' → logprob: -10.468734741210938

Token 1045: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009856429882347584
    2. ']+=' → logprob: -4.634856224060059
    3. ' ]' → logprob: -10.009856224060059
    4. ']=' → logprob: -10.509856224060059
    5. ']+' → logprob: -10.884856224060059
    6. '   ' → logprob: -12.509856224060059
    7. '+=' → logprob: -13.259856224060059
    8. '+' → logprob: -13.759856224060059
    9. ']
' → logprob: -14.134856224060059
    10. '[' → logprob: -14.509856224060059

Token 1046: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05413678660988808
    2. '=' → logprob: -3.1791367530822754
    3. ' +=' → logprob: -4.554136753082275
    4. ' =' → logprob: -7.679136753082275
    5. '+' → logprob: -9.429137229919434
    6. ']+=' → logprob: -12.179137229919434
    7. '+=(' → logprob: -13.429137229919434
    8. '   ' → logprob: -14.304137229919434
    9. '|' → logprob: -14.304137229919434
    10. ' ' → logprob: -14.929137229919434

Token 1047: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8086405992507935
    2. '(dp' → logprob: -0.8086405992507935
    3. 'new' → logprob: -2.808640480041504
    4. '(new' → logprob: -3.058640480041504
    5. '(' → logprob: -7.433640480041504
    6. ' (' → logprob: -7.683640480041504
    7. ' dp' → logprob: -7.933640480041504
    8. '(max' → logprob: -8.933640480041504
    9. 'max' → logprob: -9.183640480041504
    10. '2' → logprob: -10.058640480041504

Token 1048: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.009777102619409561
    2. 'k' → logprob: -4.634777069091797
    3. '[' → logprob: -11.509777069091797
    4. '[i' → logprob: -11.759777069091797
    5. '(k' → logprob: -14.134777069091797
    6. ' [' → logprob: -14.759777069091797
    7. '{k' → logprob: -15.009777069091797
    8. '
' → logprob: -15.134777069091797
    9. '	k' → logprob: -15.134777069091797
    10. '[
' → logprob: -15.384777069091797

Token 1049: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030355898197740316
    2. ']*' → logprob: -5.878035545349121
    3. ']%' → logprob: -9.128035545349121
    4. ']<<' → logprob: -10.253035545349121
    5. '*' → logprob: -10.378035545349121
    6. ']+' → logprob: -10.753035545349121
    7. ' ]' → logprob: -11.128035545349121
    8. '])' → logprob: -11.753035545349121
    9. ' *' → logprob: -12.253035545349121
    10. '%' → logprob: -13.628035545349121

Token 1050: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18425023555755615
    2. '%' → logprob: -2.1842503547668457
    3. '<|end|>' → logprob: -3.1842503547668457
    4. ' +' → logprob: -5.309250354766846
    5. '*' → logprob: -5.434250354766846
    6. '
' → logprob: -5.809250354766846
    7. ' %' → logprob: -7.559250354766846
    8. ' ' → logprob: -8.434249877929688
    9. '<|end|>' → logprob: -8.434249877929688
    10. ')' → logprob: -8.559249877929688

Token 1051: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004108924185857177
    2. '(' → logprob: -8.625411033630371
    3. ' ' → logprob: -9.875411033630371
    4. '(H' → logprob: -10.000411033630371
    5. '1' → logprob: -10.250411033630371
    6. 'dp' → logprob: -10.375411033630371
    7. '3' → logprob: -11.000411033630371
    8. 'H' → logprob: -11.125411033630371
    9. 'pow' → logprob: -11.125411033630371
    10. 'mod' → logprob: -12.000411033630371

Token 1052: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0048820809461176395
    2. '(H' → logprob: -5.879881858825684
    3. 'H' → logprob: -6.629881858825684
    4. '(' → logprob: -7.629881858825684
    5. 'dp' → logprob: -9.254881858825684
    6. 'pow' → logprob: -10.004881858825684
    7. '1' → logprob: -10.504881858825684
    8. '3' → logprob: -10.504881858825684
    9. ' ' → logprob: -11.004881858825684
    10. 'max' → logprob: -11.379881858825684

Token 1053: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1054: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1055: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1056: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11673189699649811
    2. 'elif' → logprob: -2.491731882095337
    3. ' else' → logprob: -4.116732120513916
    4. '   ' → logprob: -4.616732120513916
    5. '       ' → logprob: -7.741732120513916
    6. ' elif' → logprob: -8.241731643676758
    7. 'new' → logprob: -8.866731643676758
    8. '	else' → logprob: -8.866731643676758
    9. '```' → logprob: -9.741731643676758
    10. '	elif' → logprob: -9.991731643676758

Token 1057: ' la' (ID: 557)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.46889594197273254
    2. 'H' → logprob: -1.3438959121704102
    3. ' i' → logprob: -2.59389591217041
    4. ' dp' → logprob: -4.09389591217041
    5. 'i' → logprob: -4.71889591217041
    6. 'dp' → logprob: -4.96889591217041
    7. ' new' → logprob: -5.71889591217041
    8. ' not' → logprob: -6.84389591217041
    9. ' ' → logprob: -6.96889591217041
    10. 'new' → logprob: -8.46889591217041

Token 1058: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6911630630493164
    2. 'i' → logprob: -1.1911630630493164
    3. ' i' → logprob: -2.5661630630493164
    4. ' H' → logprob: -3.5661630630493164
    5. '[i' → logprob: -3.9411630630493164
    6. 'dp' → logprob: -3.9411630630493164
    7. 'new' → logprob: -4.441163063049316
    8. 'else' → logprob: -4.566163063049316
    9. ' new' → logprob: -4.691163063049316
    10. 'elif' → logprob: -5.441163063049316

Token 1059: ' précédente' (ID: 177319)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025263307616114616
    2. '[k' → logprob: -3.7752633094787598
    3. '[' → logprob: -6.40026330947876
    4. '[j' → logprob: -9.275262832641602
    5. '==' → logprob: -9.650262832641602
    6. ' [' → logprob: -10.025262832641602
    7. ' ==' → logprob: -10.275262832641602
    8. 'i' → logprob: -10.650262832641602
    9. 'elif' → logprob: -11.025262832641602
    10. ' i' → logprob: -11.150262832641602

Token 1060: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025059174746274948
    2. ' ==' → logprob: -5.150059223175049
    3. '[' → logprob: -5.400059223175049
    4. '==' → logprob: -5.400059223175049
    5. 'i' → logprob: -5.525059223175049
    6. '>' → logprob: -6.775059223175049
    7. '_' → logprob: -6.900059223175049
    8. ' i' → logprob: -7.275059223175049
    9. '   ' → logprob: -7.400059223175049
    10. '[j' → logprob: -7.775059223175049

Token 1061: ' inf' (ID: 5603)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6982312202453613
    2. '>' → logprob: -2.3232312202453613
    3. ' not' → logprob: -2.3232312202453613
    4. 'H' → logprob: -2.4482312202453613
    5. 'not' → logprob: -3.0732312202453613
    6. '<' → logprob: -3.3232312202453613
    7. ' ==' → logprob: -3.6982312202453613
    8. ' H' → logprob: -3.9482312202453613
    9. '<=' → logprob: -4.323231220245361
    10. '=' → logprob: -4.823231220245361

Token 1062: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.013033048249781132
    2. 'érieur' → logprob: -4.513032913208008
    3. 'i' → logprob: -7.763032913208008
    4. 'er' → logprob: -8.013032913208008
    5. '<' → logprob: -8.263032913208008
    6. 'érieures' → logprob: -8.763032913208008
    7. 'érée' → logprob: -9.138032913208008
    8. '>' → logprob: -9.263032913208008
    9. 'é' → logprob: -9.513032913208008
    10. 'érie' → logprob: -9.513032913208008

Token 1063: ' ou' (ID: 2031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2082362174987793
    2. 'and' → logprob: -1.7082362174987793
    3. '[i' → logprob: -6.708236217498779
    4. ' <' → logprob: -7.333236217498779
    5. ' or' → logprob: -7.333236217498779
    6. ' et' → logprob: -7.583236217498779
    7. '(i' → logprob: -7.708236217498779
    8. 'et' → logprob: -8.083236694335938
    9. ' ' → logprob: -8.208236694335938
    10. '_' → logprob: -8.208236694335938

Token 1064: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.767300546169281
    2. 'ég' → logprob: -0.892300546169281
    3. '=' → logprob: -3.142300605773926
    4. 'eg' → logprob: -3.267300605773926
    5. 'strict' → logprob: -4.267300605773926
    6. 'égal' → logprob: -4.517300605773926
    7. '==' → logprob: -4.892300605773926
    8. 'equal' → logprob: -5.392300605773926
    9. ' eg' → logprob: -6.142300605773926
    10. 'Eg' → logprob: -6.642300605773926

Token 1065: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0007323168683797121
    2. 'al' → logprob: -7.750732421875
    3. '```' → logprob: -9.125732421875
    4. 'a' → logprob: -10.000732421875
    5. 'le' → logprob: -10.625732421875
    6. 'aled' → logprob: -11.750732421875
    7. 'ales' → logprob: -11.750732421875
    8. '`' → logprob: -11.875732421875
    9. 'à' → logprob: -11.875732421875
    10. 'H' → logprob: -11.875732421875

Token 1066: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.03461754322052
    2. ' à' → logprob: -1.40961754322052
    3. '(H' → logprob: -1.65961754322052
    4. 'H' → logprob: -2.6596174240112305
    5. 'to' → logprob: -2.6596174240112305
    6. ')' → logprob: -4.4096174240112305
    7. '   ' → logprob: -4.5346174240112305
    8. ' to' → logprob: -4.5346174240112305
    9. ' ' → logprob: -5.6596174240112305
    10. '#' → logprob: -5.7846174240112305

Token 1067: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014189359731972218
    2. ' H' → logprob: -4.26418924331665
    3. ' ' → logprob: -11.139189720153809
    4. ' ' → logprob: -13.014189720153809
    5. 'k' → logprob: -13.264189720153809
    6. '`' → logprob: -14.014189720153809
    7. '   ' → logprob: -14.139189720153809
    8. '	H' → logprob: -14.139189720153809
    9. '(H' → logprob: -14.264189720153809
    10. ',' → logprob: -14.264189720153809

Token 1068: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5761353373527527
    2. '[i' → logprob: -0.8261353373527527
    3. '[j' → logprob: -9.451135635375977
    4. '[' → logprob: -9.576135635375977
    5. 'i' → logprob: -11.076135635375977
    6. 'k' → logprob: -11.576135635375977
    7. '   ' → logprob: -12.326135635375977
    8. '```' → logprob: -12.576135635375977
    9. '(k' → logprob: -12.701135635375977
    10. '[n' → logprob: -13.701135635375977

Token 1069: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17865701019763947
    2. ']:' → logprob: -2.553657054901123
    3. ':' → logprob: -3.803657054901123
    4. ' and' → logprob: -3.928657054901123
    5. '       ' → logprob: -4.303657054901123
    6. '<|end|>' → logprob: -4.678657054901123
    7. ']:
' → logprob: -5.053657054901123
    8. ')' → logprob: -5.678657054901123
    9. '):' → logprob: -5.928657054901123
    10. 'and' → logprob: -6.178657054901123

Token 1070: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10713043063879013
    2. ' and' → logprob: -2.357130527496338
    3. ' or' → logprob: -5.982130527496338
    4. 'and' → logprob: -6.607130527496338
    5. ',' → logprob: -7.357130527496338
    6. '<|end|>' → logprob: -7.607130527496338
    7. '      ' → logprob: -7.732130527496338
    8. ' elif' → logprob: -8.23213005065918
    9. '        ' → logprob: -8.60713005065918
    10. '           ' → logprob: -8.73213005065918

Token 1071: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0572383739054203
    2. ' and' → logprob: -3.3072383403778076
    3. ' elif' → logprob: -4.682238578796387
    4. 'elif' (adapté à ' elif') → logprob: -5.682238578796387
    5. '<|end|>' → logprob: -6.182238578796387
    6. 'and' → logprob: -6.932238578796387
    7. ' or' → logprob: -6.932238578796387
    8. ' if' → logprob: -7.432238578796387
    9. '	' → logprob: -7.932238578796387
    10. '   ' → logprob: -8.432238578796387

Token 1072: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.15855921804904938
    2. 'i' → logprob: -2.2835593223571777
    3. ' H' → logprob: -3.4085593223571777
    4. ' i' → logprob: -4.908559322357178
    5. 'k' → logprob: -6.283559322357178
    6. 'dp' → logprob: -6.533559322357178
    7. '   ' → logprob: -8.03355884552002
    8. 'new' → logprob: -9.28355884552002
    9. ' k' → logprob: -9.40855884552002
    10. '0' → logprob: -9.40855884552002

Token 1073: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12802474200725555
    2. '[k' → logprob: -2.1280248165130615
    3. '[' → logprob: -7.878024578094482
    4. '[j' → logprob: -8.00302505493164
    5. 'i' → logprob: -8.50302505493164
    6. 'k' → logprob: -9.00302505493164
    7. ' [' → logprob: -11.00302505493164
    8. '   ' → logprob: -11.75302505493164
    9. '[
' → logprob: -12.37802505493164
    10. '```' → logprob: -12.69052505493164

Token 1074: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07509855926036835
    2. '[i' → logprob: -3.2000985145568848
    3. ']<=' → logprob: -4.450098514556885
    4. '<=' → logprob: -4.950098514556885
    5. ']>=' → logprob: -5.075098514556885
    6. ' ]' → logprob: -6.325098514556885
    7. ' <=' → logprob: -6.450098514556885
    8. '[' → logprob: -6.950098514556885
    9. '>=' → logprob: -7.450098514556885
    10. ']>' → logprob: -7.950098514556885

Token 1075: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003978992172051221
    2. ' ' → logprob: -8.125397682189941
    3. ']' → logprob: -9.250397682189941
    4. 'k' → logprob: -13.750397682189941
    5. 'i' → logprob: -13.875397682189941
    6. '0' → logprob: -14.125397682189941
    7. ']
' → logprob: -15.000397682189941
    8. '][' → logprob: -15.187897682189941
    9. ']>' → logprob: -15.187897682189941
    10. '   ' → logprob: -15.500397682189941

Token 1076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.314625690924004e-05
    2. ' ' → logprob: -10.125073432922363
    3. ']' → logprob: -11.625073432922363
    4. 'k' → logprob: -11.625073432922363
    5. '0' → logprob: -12.437573432922363
    6. 'i' → logprob: -12.750073432922363
    7. '   ' → logprob: -14.062573432922363
    8. '```' → logprob: -14.062573432922363
    9. '`' → logprob: -14.125073432922363
    10. '2' → logprob: -14.250073432922363

Token 1077: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007767393719404936
    2. ']<=' → logprob: -5.132767200469971
    3. ']>=' → logprob: -7.132767200469971
    4. ' ]' → logprob: -7.382767200469971
    5. '<=' → logprob: -8.632767677307129
    6. ' <=' → logprob: -8.882767677307129
    7. ']>' → logprob: -10.132767677307129
    8. ']==' → logprob: -11.507767677307129
    9. ')' → logprob: -11.632767677307129
    10. ']<' → logprob: -11.632767677307129

Token 1078: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25271788239479065
    2. '<=' → logprob: -1.5027178525924683
    3. ' >=' → logprob: -7.877717971801758
    4. '>=' → logprob: -8.127717971801758
    5. ' <' → logprob: -11.002717971801758
    6. ']<=' → logprob: -11.002717971801758
    7. '>' → logprob: -11.252717971801758
    8. '<' → logprob: -11.252717971801758
    9. ' ' → logprob: -11.752717971801758
    10. ')<=' → logprob: -11.877717971801758

Token 1079: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22542136907577515
    2. ' H' → logprob: -1.60042142868042
    3. ' ' → logprob: -12.600420951843262
    4. ' ' → logprob: -13.350420951843262
    5. '	H' → logprob: -13.350420951843262
    6. '   ' → logprob: -13.975420951843262
    7. '_H' → logprob: -15.600420951843262
    8. 'h' → logprob: -15.975420951843262
    9. '    ' → logprob: -16.100421905517578
    10. '1' → logprob: -16.350421905517578

Token 1080: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000712670327629894
    2. '[k' → logprob: -7.375712871551514
    3. ']' → logprob: -10.000712394714355
    4. '[' → logprob: -10.625712394714355
    5. 'i' → logprob: -12.125712394714355
    6. ' [' → logprob: -12.125712394714355
    7. '][' → logprob: -12.750712394714355
    8. '(i' → logprob: -14.500712394714355
    9. '[j' → logprob: -14.750712394714355
    10. ' i' → logprob: -14.875712394714355

Token 1081: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0646112710237503
    2. ']:' → logprob: -2.8146111965179443
    3. ']' → logprob: -6.939611434936523
    4. ':' → logprob: -7.314611434936523
    5. ':
' → logprob: -7.564611434936523
    6. ']:
' → logprob: -8.189611434936523
    7. '       ' → logprob: -9.439611434936523
    8. '):
' → logprob: -10.064611434936523
    9. ']:

' → logprob: -10.939611434936523
    10. '           ' → logprob: -11.439611434936523

Token 1082: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061177682131528854
    2. ':
' → logprob: -3.1861777305603027
    3. '           ' → logprob: -4.186177730560303
    4. '       ' → logprob: -6.936177730560303
    5. '               ' → logprob: -7.811177730560303
    6. ' new' → logprob: -7.811177730560303
    7. ' and' → logprob: -8.311177253723145
    8. 'new' → logprob: -8.311177253723145
    9. '=' → logprob: -9.061177253723145
    10. ' :' → logprob: -9.436177253723145

Token 1083: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3075079619884491
    2. 'new' → logprob: -1.6825079917907715
    3. '               ' → logprob: -2.6825079917907715
    4. '           ' → logprob: -4.6825079917907715
    5. '	new' → logprob: -7.8075079917907715
    6. '[new' → logprob: -8.682507514953613
    7. ':' → logprob: -8.807507514953613
    8. '                       ' → logprob: -9.557507514953613
    9. ':
' → logprob: -9.682507514953613
    10. '                   ' → logprob: -9.682507514953613

Token 1084: ' Pr' (ID: 2284)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02775915525853634
    2. ' new' → logprob: -3.652759075164795
    3. '           ' → logprob: -6.652759075164795
    4. '               ' → logprob: -9.402759552001953
    5. '       ' → logprob: -10.902759552001953
    6. 'if' → logprob: -11.152759552001953
    7. '```' → logprob: -11.152759552001953
    8. '	new' → logprob: -11.402759552001953
    9. '   ' → logprob: -11.777759552001953
    10. '        ' → logprob: -12.902759552001953

Token 1085: 'ends' (ID: 1847)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.09306605160236359
    2. 'e' → logprob: -4.093066215515137
    3. 'é' → logprob: -4.343066215515137
    4. 'int' → logprob: -4.468066215515137
    5. 'ec' → logprob: -4.468066215515137
    6. 'ef' → logprob: -5.468066215515137
    7. 'op' → logprob: -5.468066215515137
    8. 'ed' → logprob: -5.468066215515137
    9. 'em' → logprob: -5.843066215515137
    10. 'ev' → logprob: -5.843066215515137

Token 1086: ' le' (ID: 505)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.1114174127578735
    2. 'dp' → logprob: -1.1114174127578735
    3. 'new' → logprob: -1.2364174127578735
    4. ' dp' → logprob: -2.986417293548584
    5. 'max' → logprob: -7.986417293548584
    6. '   ' → logprob: -8.486417770385742
    7. '
' → logprob: -9.111417770385742
    8. ' max' → logprob: -9.361417770385742
    9. '	dp' → logprob: -9.736417770385742
    10. '	new' → logprob: -11.236417770385742

Token 1087: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13662926852703094
    2. 'new' → logprob: -2.511629343032837
    3. 'max' → logprob: -3.136629343032837
    4. ' dp' → logprob: -6.511629104614258
    5. ' new' → logprob: -6.886629104614258
    6. ' max' → logprob: -7.511629104614258
    7. 'min' → logprob: -11.511629104614258
    8. '0' → logprob: -11.636629104614258
    9. '(dp' → logprob: -11.761629104614258
    10. 'old' → logprob: -11.761629104614258

Token 1088: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.24044618010520935
    2. '[k' → logprob: -1.6154462099075317
    3. 'i' → logprob: -5.365446090698242
    4. 'new' → logprob: -5.490446090698242
    5. 'k' → logprob: -5.865446090698242
    6. '[new' → logprob: -6.240446090698242
    7. '[' → logprob: -6.865446090698242
    8. '[j' → logprob: -8.990446090698242
    9. 'dp' → logprob: -10.240446090698242
    10. ' [' → logprob: -10.490446090698242

Token 1089: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053915842436254025
    2. '[i' → logprob: -5.880391597747803
    3. ']+' → logprob: -6.880391597747803
    4. ' ]' → logprob: -7.505391597747803
    5. '-' → logprob: -8.505391120910645
    6. ']*' → logprob: -8.880391120910645
    7. ']:
' → logprob: -8.880391120910645
    8. '])' → logprob: -9.005391120910645
    9. ']
' → logprob: -9.130391120910645
    10. '[k' → logprob: -9.880391120910645

Token 1090: ' multipl' (ID: 44269)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.095760777592659
    2. 'new' → logprob: -2.4707608222961426
    3. '           ' → logprob: -5.345760822296143
    4. '               ' → logprob: -6.720760822296143
    5. ' ' → logprob: -9.095760345458984
    6. '
' → logprob: -9.470760345458984
    7. ' 
' → logprob: -9.595760345458984
    8. '```' → logprob: -9.595760345458984
    9. ' +=' → logprob: -9.845760345458984
    10. '                   ' → logprob: -9.970760345458984

Token 1091: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.01448807492852211
    2. 'lié' → logprob: -5.639488220214844
    3. 'ier' → logprob: -5.764488220214844
    4. 'ié' → logprob: -6.139488220214844
    5. 'ies' → logprob: -6.514488220214844
    6. 'ipl' → logprob: -6.514488220214844
    7. 'ied' → logprob: -7.014488220214844
    8. 'ip' → logprob: -7.389488220214844
    9. 'i' → logprob: -8.389488220214844
    10. 'iez' → logprob: -8.514488220214844

Token 1092: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7280076742172241
    2. 'dp' → logprob: -1.2280076742172241
    3. '(dp' → logprob: -1.9780076742172241
    4. ' par' → logprob: -2.8530077934265137
    5. ' dp' → logprob: -4.228007793426514
    6. 'new' → logprob: -5.228007793426514
    7. 'by' → logprob: -5.978007793426514
    8. '   ' → logprob: -6.103007793426514
    9. '(' → logprob: -7.728007793426514
    10. ' by' → logprob: -7.853007793426514

Token 1093: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.034400057047605515
    2. 'dp' → logprob: -3.65939998626709
    3. ' ' → logprob: -5.65939998626709
    4. ' dp' → logprob: -6.15939998626709
    5. 'new' → logprob: -7.15939998626709
    6. '   ' → logprob: -7.40939998626709
    7. '1' → logprob: -7.53439998626709
    8. ' new' → logprob: -8.90939998626709
    9. '3' → logprob: -9.28439998626709
    10. '(dp' → logprob: -9.53439998626709

Token 1094: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023288801312446594
    2. 'dp' → logprob: -3.8982887268066406
    3. '1' → logprob: -7.273288726806641
    4. ' ' → logprob: -7.398288726806641
    5. 'k' → logprob: -8.39828872680664
    6. 'new' → logprob: -8.64828872680664
    7. '3' → logprob: -8.64828872680664
    8. '(' → logprob: -9.02328872680664
    9. '   ' → logprob: -9.02328872680664
    10. '
' → logprob: -9.39828872680664

Token 1095: '*' (ID: 9)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34355324506759644
    2. '*' → logprob: -2.093553304672241
    3. ' *' → logprob: -2.718553304672241
    4. ',' → logprob: -3.468553304672241
    5. 'new' → logprob: -3.843553304672241
    6. ' and' → logprob: -4.218553066253662
    7. ' new' → logprob: -4.593553066253662
    8. '               ' → logprob: -4.843553066253662
    9. '   ' → logprob: -5.343553066253662
    10. '       ' → logprob: -6.218553066253662

Token 1096: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.037014659494161606
    2. ' dp' → logprob: -3.9120147228240967
    3. '2' → logprob: -4.537014484405518
    4. 'new' → logprob: -5.662014484405518
    5. 'k' → logprob: -7.537014484405518
    6. '(dp' → logprob: -7.912014484405518
    7. ' new' → logprob: -8.037014961242676
    8. 'i' → logprob: -8.412014961242676
    9. '
' → logprob: -8.662014961242676
    10. '(' → logprob: -9.162014961242676

Token 1097: '^{' (ID: 42923)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1098: 'diff' (ID: 31460)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18242457509040833
    2. 'k' → logprob: -2.557424545288086
    3. '(dp' → logprob: -2.932424545288086
    4. '(k' → logprob: -4.432424545288086
    5. '(i' → logprob: -4.682424545288086
    6. '(n' → logprob: -5.682424545288086
    7. 'i' → logprob: -5.932424545288086
    8. 'n' → logprob: -6.057424545288086
    9. ' dp' → logprob: -6.557424545288086
    10. '(H' → logprob: -6.807424545288086

Token 1099: 'érence' (ID: 65256)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9465963840484619
    2. '-' → logprob: -1.321596384048462
    3. ']' → logprob: -2.321596384048462
    4. '(k' → logprob: -2.821596384048462
    5. '[k' → logprob: -3.821596384048462
    6. '(' → logprob: -3.946596384048462
    7. '(H' → logprob: -4.196596145629883
    8. '**' → logprob: -4.446596145629883
    9. '   ' → logprob: -4.571596145629883
    10. ' +' → logprob: -4.696596145629883

Token 1100: ' des' (ID: 731)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.768625020980835
    2. '**' → logprob: -2.143625020980835
    3. '(k' → logprob: -2.393625020980835
    4. '-' → logprob: -2.518625020980835
    5. '(' → logprob: -3.143625020980835
    6. ',' → logprob: -3.268625020980835
    7. ' (' → logprob: -3.268625020980835
    8. ')' → logprob: -3.893625020980835
    9. ' -' → logprob: -4.268625259399414
    10. '   ' → logprob: -4.393625259399414

Token 1101: ' haute' (ID: 49646)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4252353012561798
    2. '(H' → logprob: -1.3002352714538574
    3. 'k' → logprob: -2.8002352714538574
    4. ' H' → logprob: -5.925235271453857
    5. '(k' → logprob: -5.925235271453857
    6. 'abs' → logprob: -6.175235271453857
    7. 'i' → logprob: -6.300235271453857
    8. ' (' → logprob: -6.675235271453857
    9. '(abs' → logprob: -7.550235271453857
    10. 'n' → logprob: -7.675235271453857

Token 1102: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.8195502161979675
    2. 'ts' → logprob: -1.3195502758026123
    3. 's' → logprob: -1.4445502758026123
    4. 't' → logprob: -3.9445502758026123
    5. 'ur' → logprob: -4.444550037384033
    6. 'uts' → logprob: -4.694550037384033
    7. '(H' → logprob: -6.319550037384033
    8. '1' → logprob: -6.444550037384033
    9. 'ints' → logprob: -6.569550037384033
    10. '```' → logprob: -6.944550037384033

Token 1103: '},' (ID: 4180)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8484694957733154
    2. ')' → logprob: -1.7234694957733154
    3. ']' → logprob: -2.7234694957733154
    4. '-' → logprob: -2.8484694957733154
    5. ' -' → logprob: -2.8484694957733154
    6. ',' → logprob: -3.2234694957733154
    7. ' **' → logprob: -3.4734694957733154
    8. '   ' → logprob: -4.2234697341918945
    9. ' *' → logprob: -4.2234697341918945
    10. ' ' → logprob: -4.7234697341918945

Token 1104: ' gestion' (ID: 29607)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6017477512359619
    2. 'new' → logprob: -0.8517477512359619
    3. '           ' → logprob: -4.226747512817383
    4. 'dp' → logprob: -5.976747512817383
    5. '                   ' → logprob: -6.226747512817383
    6. ' dp' → logprob: -6.351747512817383
    7. '               ' → logprob: -6.476747512817383
    8. '2' → logprob: -7.226747512817383
    9. '                       ' → logprob: -7.476747512817383
    10. '   ' → logprob: -7.976747512817383

Token 1105: ' mod' (ID: 1812)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6054759621620178
    2. ' de' → logprob: -2.230475902557373
    3. '[i' → logprob: -2.355475902557373
    4. '   ' → logprob: -2.980475902557373
    5. '```' → logprob: -3.230475902557373
    6. 'des' → logprob: -3.355475902557373
    7. '[' → logprob: -3.605475902557373
    8. '=' → logprob: -3.855475902557373
    9. ' +=' → logprob: -4.355475902557373
    10. 'de' → logprob: -4.480475902557373

Token 1106: 'ulaire' (ID: 48584)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.21341316401958466
    2. '(mod' → logprob: -2.5884132385253906
    3. ' mod' → logprob: -3.3384132385253906
    4. '=' → logprob: -3.8384132385253906
    5. 'ulo' → logprob: -4.463413238525391
    6. '%' → logprob: -4.713413238525391
    7. ')' → logprob: -5.463413238525391
    8. ' =' → logprob: -5.588413238525391
    9. '`' → logprob: -5.838413238525391
    10. '%
' → logprob: -5.963413238525391

Token 1107: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5957379937171936
    2. ' new' → logprob: -1.5957379341125488
    3. '           ' → logprob: -2.095737934112549
    4. ',' → logprob: -3.595737934112549
    5. '=' → logprob: -3.970737934112549
    6. ' =' → logprob: -4.095737934112549
    7. '*' → logprob: -4.095737934112549
    8. '(new' → logprob: -4.845737934112549
    9. ' *' → logprob: -4.970737934112549
    10. '   ' → logprob: -5.220737934112549

Token 1108: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6159265041351318
    2. '=' → logprob: -0.8659265041351318
    3. ' new' → logprob: -4.115926742553711
    4. 'new' → logprob: -4.615926742553711
    5. ')' → logprob: -5.990926742553711
    6. '[new' → logprob: -6.365926742553711
    7. ',' → logprob: -6.490926742553711
    8. '[i' → logprob: -6.865926742553711
    9. '   ' → logprob: -6.865926742553711
    10. ' and' → logprob: -7.240926742553711

Token 1109: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.01636606827378273
    2. ' new' → logprob: -4.141366004943848
    3. '           ' → logprob: -8.391366004943848
    4. '   ' → logprob: -9.891366004943848
    5. 'mod' → logprob: -10.516366004943848
    6. '(new' → logprob: -11.891366004943848
    7. '               ' → logprob: -12.016366004943848
    8. '```' → logprob: -12.516366004943848
    9. '       ' → logprob: -12.641366004943848
    10. '                   ' → logprob: -13.516366004943848

Token 1110: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.008129963040119e-06
    2. 'dp' → logprob: -13.000003814697266
    3. '_d' → logprob: -14.625003814697266
    4. '_' → logprob: -15.125003814697266
    5. '```' → logprob: -16.125003814697266
    6. '	dp' → logprob: -16.500003814697266
    7. '_dc' → logprob: -16.625003814697266
    8. '_df' → logprob: -16.750003814697266
    9. '   ' → logprob: -16.875003814697266
    10. '_ds' → logprob: -17.000003814697266

Token 1111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -16.500001907348633
    4. 'i' → logprob: -16.500001907348633
    5. '(i' → logprob: -16.625001907348633
    6. '```' → logprob: -17.250001907348633
    7. '
' → logprob: -17.250001907348633
    8. '=' → logprob: -17.375001907348633
    9. '[j' → logprob: -17.500001907348633
    10. '=i' → logprob: -17.625001907348633

Token 1112: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038114238530397415
    2. ' =' → logprob: -3.288114309310913
    3. '+=' → logprob: -10.538114547729492
    4. '=(' → logprob: -10.913114547729492
    5. ']' → logprob: -11.538114547729492
    6. '   ' → logprob: -12.163114547729492
    7. ']=' → logprob: -12.288114547729492
    8. '%=' → logprob: -12.788114547729492
    9. ' +=' → logprob: -13.413114547729492
    10. '*=' → logprob: -13.913114547729492

Token 1113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006785589735955
    2. ' =' → logprob: -5.0067853927612305
    3. '+=' → logprob: -9.75678539276123
    4. '=(' → logprob: -11.75678539276123
    5. '%=' → logprob: -13.13178539276123
    6. ' +=' → logprob: -14.13178539276123
    7. '*=' → logprob: -14.25678539276123
    8. '=
' → logprob: -14.88178539276123
    9. '   ' → logprob: -15.38178539276123
    10. '=((' → logprob: -15.38178539276123

Token 1114: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.34869590401649475
    2. 'dp' → logprob: -1.2236958742141724
    3. ' dp' → logprob: -8.598695755004883
    4. ' (' → logprob: -10.598695755004883
    5. '(' → logprob: -11.223695755004883
    6. '   ' → logprob: -11.348695755004883
    7. '	dp' → logprob: -12.223695755004883
    8. 'new' → logprob: -12.723695755004883
    9. '(d' → logprob: -13.098695755004883
    10. '((' → logprob: -13.223695755004883

Token 1115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001052815350703895
    2. '[k' → logprob: -7.5010528564453125
    3. '[' → logprob: -7.7510528564453125
    4. 'i' → logprob: -9.876052856445312
    5. ' [' → logprob: -12.751052856445312
    6. '[
' → logprob: -12.751052856445312
    7. ' i' → logprob: -12.876052856445312
    8. '(i' → logprob: -13.251052856445312
    9. '[n' → logprob: -13.626052856445312
    10. 'k' → logprob: -14.001052856445312

Token 1116: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47708380222320557
    2. '*' → logprob: -0.9770838022232056
    3. ']' → logprob: -5.852083683013916
    4. '*(' → logprob: -10.352084159851074
    5. ']*' → logprob: -10.602084159851074
    6. ')' → logprob: -10.977084159851074
    7. '   ' → logprob: -11.102084159851074
    8. '
' → logprob: -11.727084159851074
    9. '**' → logprob: -12.102084159851074
    10. ' ' → logprob: -12.227084159851074

Token 1117: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47500112652778625
    2. '*' → logprob: -0.9750010967254639
    3. '*(' → logprob: -7.350001335144043
    4. '%' → logprob: -8.975001335144043
    5. '
' → logprob: -10.100001335144043
    6. 'pow' → logprob: -10.850001335144043
    7. ' %' → logprob: -11.100001335144043
    8. '   ' → logprob: -11.725001335144043
    9. '(' → logprob: -11.850001335144043
    10. '**' → logprob: -11.850001335144043

Token 1118: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.21056734025478363
    2. '(' → logprob: -1.8355673551559448
    3. '(pow' → logprob: -3.7105672359466553
    4. '4' → logprob: -5.835567474365234
    5. '2' → logprob: -6.210567474365234
    6. '((' → logprob: -7.335567474365234
    7. ' pow' → logprob: -9.460567474365234
    8. '(mod' → logprob: -9.460567474365234
    9. 'mod' → logprob: -9.710567474365234
    10. '   ' → logprob: -11.460567474365234

Token 1119: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.08364056795835495
    2. '(' → logprob: -2.7086405754089355
    3. '(pow' → logprob: -4.5836405754089355
    4. '2' → logprob: -6.3336405754089355
    5. '4' → logprob: -6.5836405754089355
    6. '((' → logprob: -9.083640098571777
    7. ' pow' → logprob: -10.208640098571777
    8. 'mod' → logprob: -10.458640098571777
    9. '(mod' → logprob: -11.208640098571777
    10. '16' → logprob: -11.708640098571777

Token 1120: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1121: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0002537104592192918
    2. '(pow' → logprob: -8.750253677368164
    3. 'mod' → logprob: -9.750253677368164
    4. '2' → logprob: -11.125253677368164
    5. '(' → logprob: -11.375253677368164
    6. ' pow' → logprob: -11.875253677368164
    7. '((' → logprob: -12.875253677368164
    8. '(mod' → logprob: -14.750253677368164
    9. '4' → logprob: -15.375253677368164
    10. '   ' → logprob: -16.500253677368164

Token 1122: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000961362209636718
    2. '2' → logprob: -7.0009613037109375
    3. '(
' → logprob: -10.000961303710938
    4. ' (' → logprob: -12.750961303710938
    5. '(
' → logprob: -14.250961303710938
    6. '```' → logprob: -14.875961303710938
    7. '   ' → logprob: -15.625961303710938
    8. 'mod' → logprob: -15.875961303710938
    9. '(pow' → logprob: -16.375961303710938
    10. '  ' → logprob: -16.375961303710938

Token 1123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016376927960664034
    2. '(' → logprob: -6.5016374588012695
    3. 'mod' → logprob: -9.37663745880127
    4. '   ' → logprob: -10.37663745880127
    5. ' ' → logprob: -11.87663745880127
    6. '       ' → logprob: -13.25163745880127
    7. '           ' → logprob: -13.62663745880127
    8. '(
' → logprob: -13.62663745880127
    9. '```' → logprob: -13.87663745880127
    10. '(mod' → logprob: -13.87663745880127

Token 1124: ',' (ID: 11)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005763588473200798
    2. '(' → logprob: -6.255763530731201
    3. ' (' → logprob: -6.255763530731201
    4. '[' → logprob: -7.005763530731201
    5. ',' → logprob: -8.00576400756836
    6. '((' → logprob: -8.13076400756836
    7. '(
' → logprob: -8.38076400756836
    8. ')' → logprob: -10.25576400756836
    9. '(abs' → logprob: -10.25576400756836
    10. 'H' → logprob: -10.75576400756836

Token 1125: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.48377665877342224
    2. '(H' → logprob: -0.9837766885757446
    3. 'abs' → logprob: -5.108776569366455
    4. '(abs' → logprob: -6.233776569366455
    5. 'max' → logprob: -6.983776569366455
    6. '(max' → logprob: -8.358777046203613
    7. ' H' → logprob: -8.608777046203613
    8. ' (' → logprob: -9.608777046203613
    9. '((' → logprob: -9.608777046203613
    10. '(' → logprob: -9.858777046203613

Token 1126: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.115781769156456
    2. '[k' → logprob: -2.240781784057617
    3. '[' → logprob: -5.865781784057617
    4. 'H' → logprob: -9.740781784057617
    5. '[
' → logprob: -10.865781784057617
    6. ' [' → logprob: -11.365781784057617
    7. 'k' → logprob: -11.615781784057617
    8. 'i' → logprob: -12.615781784057617
    9. ' H' → logprob: -12.865781784057617
    10. '(i' → logprob: -12.865781784057617

Token 1127: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01638530008494854
    2. '[i' → logprob: -4.141385078430176
    3. 'k' → logprob: -8.391385078430176
    4. '[' → logprob: -9.641385078430176
    5. ']' → logprob: -10.766385078430176
    6. 'i' → logprob: -11.641385078430176
    7. '```' → logprob: -11.766385078430176
    8. '][' → logprob: -12.516385078430176
    9. '-k' → logprob: -13.016385078430176
    10. ')' → logprob: -13.016385078430176

Token 1128: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13078321516513824
    2. '[k' → logprob: -2.1307833194732666
    3. '[' → logprob: -6.1307830810546875
    4. '-' → logprob: -6.7557830810546875
    5. '[-' → logprob: -8.505783081054688
    6. '-k' → logprob: -8.880783081054688
    7. ' -' → logprob: -9.630783081054688
    8. '```' → logprob: -10.380783081054688
    9. '[
' → logprob: -11.255783081054688
    10. 'k' → logprob: -11.255783081054688

Token 1129: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0015422382857650518
    2. 'i' → logprob: -6.501542091369629
    3. ' H' → logprob: -10.626542091369629
    4. '1' → logprob: -11.876542091369629
    5. '   ' → logprob: -12.376542091369629
    6. '[i' → logprob: -13.501542091369629
    7. 'k' → logprob: -14.251542091369629
    8. ' i' → logprob: -14.376542091369629
    9. '(i' → logprob: -14.876542091369629
    10. ' ' → logprob: -15.251542091369629

Token 1130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007507824921049178
    2. 'i' → logprob: -7.50075101852417
    3. '[k' → logprob: -8.625750541687012
    4. 'k' → logprob: -11.875750541687012
    5. '[' → logprob: -12.375750541687012
    6. '```' → logprob: -12.875750541687012
    7. '[
' → logprob: -13.250750541687012
    8. '(i' → logprob: -14.375750541687012
    9. 'H' → logprob: -14.750750541687012
    10. '[j' → logprob: -15.500750541687012

Token 1131: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5904912352561951
    2. ')' → logprob: -0.8404912352561951
    3. '-' → logprob: -4.71549129486084
    4. ' ,' → logprob: -5.84049129486084
    5. '])' → logprob: -7.09049129486084
    6. '+' → logprob: -7.46549129486084
    7. ' -' → logprob: -8.21549129486084
    8. ' )' → logprob: -8.71549129486084
    9. '),' → logprob: -8.96549129486084
    10. ']' → logprob: -9.21549129486084

Token 1132: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.107425062713446e-06
    2. ' mod' → logprob: -11.875006675720215
    3. '	mod' → logprob: -17.75000762939453
    4. '   ' → logprob: -18.12500762939453
    5. '
' → logprob: -18.75000762939453
    6. '(mod' → logprob: -20.25000762939453
    7. '           ' → logprob: -21.12500762939453
    8. 'MOD' → logprob: -21.12500762939453
    9. '```' → logprob: -21.37500762939453
    10. '_mod' → logprob: -21.37500762939453

Token 1133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003079334564972669
    2. ')%' → logprob: -8.8753080368042
    3. ',' → logprob: -9.2503080368042
    4. ')
' → logprob: -9.7503080368042
    5. ' )' → logprob: -11.8753080368042
    6. '   ' → logprob: -13.7503080368042
    7. ')new' → logprob: -13.7503080368042
    8. '),' → logprob: -14.6253080368042
    9. '```' → logprob: -14.6253080368042
    10. ')#' → logprob: -14.7503080368042

Token 1134: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1135: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7860743999481201
    2. ' else' → logprob: -1.5360743999481201
    3. 'else' → logprob: -1.7860743999481201
    4. ' %' → logprob: -2.53607439994812
    5. '   ' → logprob: -2.91107439994812
    6. '       ' → logprob: -4.786074638366699
    7. ')' → logprob: -4.786074638366699
    8. '<|end|>' → logprob: -6.411074638366699
    9. 'new' → logprob: -6.536074638366699
    10. ' new' → logprob: -6.911074638366699

Token 1136: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9698083996772766
    2. '%' → logprob: -1.4698083400726318
    3. ' else' → logprob: -1.7198083400726318
    4. '       ' → logprob: -2.219808340072632
    5. '   ' → logprob: -2.594808340072632
    6. ' %' → logprob: -4.469808578491211
    7. ')' → logprob: -5.094808578491211
    8. 'new' → logprob: -5.969808578491211
    9. 'mod' → logprob: -6.469808578491211
    10. 'continue' → logprob: -6.719808578491211

Token 1137: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008934929035604
    2. ' else' → logprob: -5.38393497467041
    3. 'new' → logprob: -6.50893497467041
    4. 'continue' → logprob: -6.63393497467041
    5. 'elif' → logprob: -7.13393497467041
    6. 'dp' → logprob: -7.75893497467041
    7. 'if' → logprob: -9.00893497467041
    8. '   ' → logprob: -10.00893497467041
    9. '       ' → logprob: -10.00893497467041
    10. 'mod' → logprob: -10.50893497467041

Token 1138: ' la' (ID: 557)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.7251603007316589
    2. 'H' → logprob: -0.8501603007316589
    3. ' new' → logprob: -2.9751603603363037
    4. 'new' → logprob: -4.350160121917725
    5. ' k' → logprob: -4.725160121917725
    6. ' not' → logprob: -5.225160121917725
    7. 'k' → logprob: -5.850160121917725
    8. ' i' → logprob: -6.350160121917725
    9. 'False' → logprob: -6.475160121917725
    10. '   ' → logprob: -7.100160121917725

Token 1139: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5886549949645996
    2. 'H' → logprob: -1.2136549949645996
    3. 'i' → logprob: -2.4636549949645996
    4. 'new' → logprob: -4.2136549949646
    5. ' k' → logprob: -4.3386549949646
    6. ' H' → logprob: -4.4636549949646
    7. ' new' → logprob: -4.7136549949646
    8. 'else' → logprob: -5.2136549949646
    9. ' i' → logprob: -5.5886549949646
    10. 'elif' → logprob: -6.2136549949646

Token 1140: ' précédente' (ID: 177319)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2324447631835938
    2. '[k' → logprob: -1.3574447631835938
    3. ' ==' → logprob: -1.8574447631835938
    4. 'else' → logprob: -2.1074447631835938
    5. '[' → logprob: -2.7324447631835938
    6. '==' → logprob: -2.8574447631835938
    7. 'k' → logprob: -4.357444763183594
    8. ' else' → logprob: -4.732444763183594
    9. '   ' → logprob: -5.607444763183594
    10. 'i' → logprob: -5.732444763183594

Token 1141: ' est' (ID: 893)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.094903826713562
    2. '[k' → logprob: -1.469903826713562
    3. ' else' → logprob: -2.2199039459228516
    4. '[i' → logprob: -2.3449039459228516
    5. ' ==' → logprob: -2.5949039459228516
    6. '   ' → logprob: -3.2199039459228516
    7. 'elif' → logprob: -3.9699039459228516
    8. ' <' → logprob: -3.9699039459228516
    9. '==' → logprob: -4.219903945922852
    10. ' >' → logprob: -4.219903945922852

Token 1142: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.533655047416687
    2. ' >' → logprob: -1.533655047416687
    3. '<' → logprob: -2.2836551666259766
    4. ' <' → logprob: -3.4086551666259766
    5. ' H' → logprob: -3.6586551666259766
    6. 'H' → logprob: -3.6586551666259766
    7. 'strict' → logprob: -5.908655166625977
    8. '<H' → logprob: -6.158655166625977
    9. '[' → logprob: -6.783655166625977
    10. '<=' → logprob: -7.283655166625977

Token 1143: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.002799771726131439
    2. 'e' → logprob: -6.627799987792969
    3. 'ly' → logprob: -6.877799987792969
    4. 'elif' → logprob: -8.627799987792969
    5. 'ely' → logprob: -8.752799987792969
    6. 'if' → logprob: -11.002799987792969
    7. 'ément' → logprob: -11.252799987792969
    8. 'ment' → logprob: -11.502799987792969
    9. '>' → logprob: -11.752799987792969
    10. '<=' → logprob: -11.877799987792969

Token 1144: ' supérieure' (ID: 106336)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1788627803325653
    2. '>' → logprob: -1.9288628101348877
    3. 'inf' → logprob: -4.303862571716309
    4. ' <' → logprob: -6.428862571716309
    5. 'infer' → logprob: -6.678862571716309
    6. 'sup' → logprob: -7.678862571716309
    7. ' >' → logprob: -7.803862571716309
    8. '<
' → logprob: -8.303862571716309
    9. '<H' → logprob: -8.553862571716309
    10. ' inférieur' → logprob: -8.928862571716309

Token 1145: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0741404294967651
    2. ' à' → logprob: -1.6991404294967651
    3. '[k' → logprob: -1.8241404294967651
    4. ' >' → logprob: -2.1991405487060547
    5. '>' → logprob: -2.8241405487060547
    6. '           ' → logprob: -2.9491405487060547
    7. 'else' → logprob: -4.699140548706055
    8. 'à' → logprob: -4.824140548706055
    9. ' et' → logprob: -5.074140548706055
    10. '   ' → logprob: -5.074140548706055

Token 1146: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.007610293570905924
    2. ' H' → logprob: -4.882610321044922
    3. 'new' → logprob: -13.507610321044922
    4. '   ' → logprob: -14.632610321044922
    5. ' ' → logprob: -15.007610321044922
    6. '```' → logprob: -15.007610321044922
    7. '`' → logprob: -15.132610321044922
    8. ' new' → logprob: -15.382610321044922
    9. ' ' → logprob: -15.632610321044922
    10. '(H' → logprob: -16.007610321044922

Token 1147: ' cour' (ID: 2871)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05882960185408592
    2. 'k' → logprob: -3.0588295459747314
    3. 'i' → logprob: -5.4338297843933105
    4. '[k' → logprob: -5.6838297843933105
    5. '[i' → logprob: -6.3088297843933105
    6. '```' → logprob: -8.183829307556152
    7. ' H' → logprob: -8.433829307556152
    8. 'h' → logprob: -10.433829307556152
    9. '
' → logprob: -11.308829307556152
    10. '[
' → logprob: -11.308829307556152

Token 1148: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.12006325274705887
    2. '[i' → logprob: -3.370063304901123
    3. 'ant' → logprob: -3.495063304901123
    4. '[k' → logprob: -3.620063304901123
    5. 'i' → logprob: -5.120063304901123
    6. 'H' → logprob: -5.120063304901123
    7. '```' → logprob: -5.495063304901123
    8. 'k' → logprob: -5.745063304901123
    9. 'r' → logprob: -7.620063304901123
    10. '[
' → logprob: -8.120062828063965

Token 1149: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4414733052253723
    2. 'elif' → logprob: -1.8164732456207275
    3. ' and' → logprob: -2.5664732456207275
    4. ' else' → logprob: -3.5664732456207275
    5. '       ' → logprob: -3.6914732456207275
    6. ':
' → logprob: -3.9414732456207275
    7. 'and' → logprob: -4.441473484039307
    8. ':' → logprob: -4.566473484039307
    9. ' elif' → logprob: -4.691473484039307
    10. '   ' → logprob: -4.691473484039307

Token 1150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2842157185077667
    2. 'else' → logprob: -2.5342156887054443
    3. ' else' → logprob: -3.0342156887054443
    4. 'elif' → logprob: -3.0342156887054443
    5. ' elif' → logprob: -3.6592156887054443
    6. '           ' → logprob: -4.034215927124023
    7. ':' → logprob: -4.034215927124023
    8. ' and' → logprob: -5.659215927124023
    9. ':
' → logprob: -6.284215927124023
    10. '   ' → logprob: -6.409215927124023

Token 1151: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4290841519832611
    2. ' else' → logprob: -1.8040841817855835
    3. 'elif' (adapté à ' elif') → logprob: -1.9290841817855835
    4. ' elif' → logprob: -3.429084062576294
    5. '       ' → logprob: -5.429084300994873
    6. '   ' → logprob: -6.304084300994873
    7. ':
' → logprob: -9.054083824157715
    8. 'el' → logprob: -9.929083824157715
    9. ':' → logprob: -10.054083824157715
    10. ' :' → logprob: -10.554083824157715

Token 1152: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07892581075429916
    2. ' H' → logprob: -2.578925848007202
    3. '   ' → logprob: -10.703926086425781
    4. 'k' → logprob: -12.578926086425781
    5. ' ' → logprob: -12.953926086425781
    6. '	H' → logprob: -13.078926086425781
    7. '(H' → logprob: -13.578926086425781
    8. ' k' → logprob: -14.078926086425781
    9. ' ' → logprob: -14.203926086425781
    10. 'new' → logprob: -14.328926086425781

Token 1153: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0028527823742479086
    2. '[i' → logprob: -5.877852916717529
    3. '[' → logprob: -10.502852439880371
    4. 'k' → logprob: -11.627852439880371
    5. ' [' → logprob: -12.252852439880371
    6. '(k' → logprob: -13.252852439880371
    7. '```' → logprob: -13.377852439880371
    8. '   ' → logprob: -13.877852439880371
    9. '[
' → logprob: -14.377852439880371
    10. 'i' → logprob: -14.752852439880371

Token 1154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07625336945056915
    2. ' -' → logprob: -2.8262534141540527
    3. ']' → logprob: -4.326253414154053
    4. '   ' → logprob: -7.701253414154053
    5. '[i' → logprob: -8.951252937316895
    6. ' ]' → logprob: -9.326252937316895
    7. ']>' → logprob: -9.326252937316895
    8. '[' → logprob: -10.076252937316895
    9. ' ' → logprob: -10.451252937316895
    10. '[-' → logprob: -10.576252937316895

Token 1155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003552463313098997
    2. ' ' → logprob: -8.00035572052002
    3. 'i' → logprob: -11.50035572052002
    4. '   ' → logprob: -13.31285572052002
    5. '```' → logprob: -13.37535572052002
    6. '2' → logprob: -13.43785572052002
    7. '0' → logprob: -14.06285572052002
    8. ']' → logprob: -14.06285572052002
    9. '>' → logprob: -14.50035572052002
    10. ' i' → logprob: -14.81285572052002

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.12504768371582
    3. '```' → logprob: -13.31254768371582
    4. 'i' → logprob: -13.50004768371582
    5. '2' → logprob: -13.62504768371582
    6. '   ' → logprob: -14.31254768371582
    7. '0' → logprob: -14.62504768371582
    8. ']' → logprob: -15.06254768371582
    9. '`' → logprob: -15.37504768371582
    10. '3' → logprob: -15.50004768371582

Token 1157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11333780735731125
    2. '>' → logprob: -2.863337755203247
    3. ' >' → logprob: -3.738337755203247
    4. ']>' → logprob: -3.738337755203247
    5. ' ]' → logprob: -6.113337993621826
    6. '[' → logprob: -9.363337516784668
    7. ']>
' → logprob: -10.113337516784668
    8. '   ' → logprob: -10.113337516784668
    9. '>]' → logprob: -10.363337516784668
    10. ' ' → logprob: -11.613337516784668

Token 1158: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28134885430336
    2. ' >' → logprob: -1.4063488245010376
    3. ' <' → logprob: -10.156349182128906
    4. '<' → logprob: -10.406349182128906
    5. ' ' → logprob: -10.531349182128906
    6. ']' → logprob: -10.656349182128906
    7. ' >
' → logprob: -10.656349182128906
    8. '>
' → logprob: -10.656349182128906
    9. '[' → logprob: -11.906349182128906
    10. ']>' → logprob: -12.281349182128906

Token 1159: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012515183538198471
    2. ' H' → logprob: -4.387515068054199
    3. '   ' → logprob: -13.2625150680542
    4. ' ' → logprob: -14.0125150680542
    5. '	H' → logprob: -14.5125150680542
    6. 'k' → logprob: -15.0125150680542
    7. ')' → logprob: -15.2625150680542
    8. 'i' → logprob: -15.3875150680542
    9. ' ' → logprob: -15.6375150680542
    10. '```' → logprob: -15.7625150680542

Token 1160: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2017696052789688
    2. '[k' → logprob: -1.7017695903778076
    3. '[' → logprob: -8.451769828796387
    4. 'i' → logprob: -10.076769828796387
    5. 'k' → logprob: -10.451769828796387
    6. ']' → logprob: -10.576769828796387
    7. '][' → logprob: -10.951769828796387
    8. '```' → logprob: -11.201769828796387
    9. '   ' → logprob: -11.826769828796387
    10. ' [' → logprob: -13.701769828796387

Token 1161: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05957091599702835
    2. ']' → logprob: -3.4345710277557373
    3. ']:' → logprob: -3.6845710277557373
    4. ']:
' → logprob: -8.559571266174316
    5. '[i' → logprob: -8.934571266174316
    6. '       ' → logprob: -10.559571266174316
    7. ']:

' → logprob: -10.684571266174316
    8. '   ' → logprob: -10.809571266174316
    9. '):
' → logprob: -11.184571266174316
    10. ']+' → logprob: -11.684571266174316

Token 1162: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5248057842254639
    2. ':
' → logprob: -1.8998057842254639
    3. '           ' → logprob: -2.274805784225464
    4. ' new' → logprob: -3.149805784225464
    5. 'new' → logprob: -3.399805784225464
    6. '       ' → logprob: -3.774805784225464
    7. '=' → logprob: -3.899805784225464
    8. ' and' → logprob: -4.399806022644043
    9. '[new' → logprob: -4.649806022644043
    10. '[' → logprob: -5.274806022644043

Token 1163: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.003239624435082078
    2. ' new' → logprob: -6.128239631652832
    3. '           ' → logprob: -6.878239631652832
    4. '               ' → logprob: -11.753239631652832
    5. '```' → logprob: -12.128239631652832
    6. 'continue' → logprob: -12.253239631652832
    7. 'for' → logprob: -13.753239631652832
    8. '[new' → logprob: -13.878239631652832
    9. '	new' → logprob: -14.003239631652832
    10. '       ' → logprob: -14.128239631652832

Token 1164: ' Mise' (ID: 157932)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.022208813577890396
    2. ' new' → logprob: -3.8972089290618896
    3. 'break' → logprob: -7.3972086906433105
    4. 'continue' → logprob: -8.272209167480469
    5. '           ' → logprob: -8.522209167480469
    6. '```' → logprob: -8.647209167480469
    7. 'for' → logprob: -8.772209167480469
    8. 'dp' → logprob: -9.397209167480469
    9. '   ' → logprob: -9.897209167480469
    10. 'if' → logprob: -10.022209167480469

Token 1165: ' à' (ID: 1221)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.6483219861984253
    2. 'à' → logprob: -1.7733219861984253
    3. '```' → logprob: -2.023322105407715
    4. '+=' → logprob: -2.148322105407715
    5. '_new' → logprob: -2.398322105407715
    6. '   ' → logprob: -2.523322105407715
    7. '[k' → logprob: -2.773322105407715
    8. '=' → logprob: -3.148322105407715
    9. '_dp' → logprob: -3.523322105407715
    10. ' +=' → logprob: -4.273322105407715

Token 1166: ' jour' (ID: 8379)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08704981952905655
    2. 'new' → logprob: -3.212049722671509
    3. 'jour' → logprob: -3.837049722671509
    4. 'day' → logprob: -4.462049961090088
    5. 'zero' → logprob: -5.962049961090088
    6. 'dp' → logprob: -6.212049961090088
    7. ' jour' → logprob: -6.212049961090088
    8. 'k' → logprob: -6.337049961090088
    9. '```' → logprob: -7.212049961090088
    10. 'j' → logprob: -8.46204948425293

Token 1167: ' basée' (ID: 153941)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0880608558654785
    2. 'new' → logprob: -1.4630608558654785
    3. '[new' → logprob: -1.7130608558654785
    4. ' new' → logprob: -1.8380608558654785
    5. '[' → logprob: -3.0880608558654785
    6. '```' → logprob: -4.0880608558654785
    7. '[k' → logprob: -4.5880608558654785
    8. '           ' → logprob: -5.2130608558654785
    9. 'dp' → logprob: -5.3380608558654785
    10. '=' → logprob: -5.4630608558654785

Token 1168: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16034486889839172
    2. '+=' → logprob: -2.5353448390960693
    3. 'sur' → logprob: -3.2853448390960693
    4. '[' → logprob: -5.160345077514648
    5. ' =' → logprob: -5.660345077514648
    6. '           ' → logprob: -5.785345077514648
    7. '```' → logprob: -6.035345077514648
    8. ' +=' → logprob: -6.160345077514648
    9. ' on' → logprob: -6.410345077514648
    10. 'else' → logprob: -6.535345077514648

Token 1169: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04876949265599251
    2. 'new' → logprob: -3.173769474029541
    3. ' dp' → logprob: -5.798769474029541
    4. 'pow' → logprob: -6.798769474029541
    5. ' new' → logprob: -7.173769474029541
    6. 'H' → logprob: -8.5487699508667
    7. '2' → logprob: -8.9237699508667
    8. '   ' → logprob: -9.4237699508667
    9. '0' → logprob: -9.4237699508667
    10. 'mod' → logprob: -9.5487699508667

Token 1170: ' différence' (ID: 79196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09239459037780762
    2. 'new' → logprob: -3.5923945903778076
    3. 'pow' → logprob: -3.8423945903778076
    4. 'H' → logprob: -4.717394828796387
    5. '(dp' → logprob: -4.842394828796387
    6. 'k' → logprob: -5.092394828796387
    7. 'mod' → logprob: -5.592394828796387
    8. 'i' → logprob: -5.967394828796387
    9. ' dp' → logprob: -5.967394828796387
    10. 'diff' → logprob: -6.342394828796387

Token 1171: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0742294788360596
    2. '[k' → logprob: -1.1992294788360596
    3. 'new' → logprob: -2.0742294788360596
    4. '[' → logprob: -2.9492294788360596
    5. '=' → logprob: -3.0742294788360596
    6. '   ' → logprob: -3.1992294788360596
    7. '[new' → logprob: -4.0742292404174805
    8. '```' → logprob: -4.0742292404174805
    9. ' new' → logprob: -4.6992292404174805
    10. '`' → logprob: -5.0742292404174805

Token 1172: ' chemin' (ID: 45035)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08800798654556274
    2. 'k' → logprob: -2.588007926940918
    3. 'dp' → logprob: -5.588007926940918
    4. 'mod' → logprob: -5.838007926940918
    5. 'new' → logprob: -7.338007926940918
    6. 'pow' → logprob: -7.713007926940918
    7. ' H' → logprob: -8.338007926940918
    8. 'diff' → logprob: -8.463007926940918
    9. '`' → logprob: -8.838007926940918
    10. '```' → logprob: -8.963007926940918

Token 1173: ' précédent' (ID: 128462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5220023989677429
    2. '   ' → logprob: -1.7720024585723877
    3. '[' → logprob: -1.8970024585723877
    4. '[k' → logprob: -2.8970024585723877
    5. '```' → logprob: -4.647002220153809
    6. ':' → logprob: -4.772002220153809
    7. '[new' → logprob: -6.147002220153809
    8. '       ' → logprob: -6.397002220153809
    9. '=' → logprob: -7.022002220153809
    10. '[
' → logprob: -7.022002220153809

Token 1174: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5420790314674377
    2. '[new' → logprob: -1.917078971862793
    3. 'new' → logprob: -2.042078971862793
    4. ' new' → logprob: -3.042078971862793
    5. ':' → logprob: -3.667078971862793
    6. '[' → logprob: -3.917078971862793
    7. '   ' → logprob: -4.542078971862793
    8. '=' → logprob: -4.792078971862793
    9. '[k' → logprob: -5.042078971862793
    10. 'i' → logprob: -5.542078971862793

Token 1175: '           ' (ID: 352)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40002983808517456
    2. '[' → logprob: -2.0250298976898193
    3. '[new' → logprob: -2.2750298976898193
    4. ':' → logprob: -3.6500298976898193
    5. '   ' → logprob: -3.9000298976898193
    6. '           ' → logprob: -4.52502965927124
    7. '=' → logprob: -4.77502965927124
    8. '       ' → logprob: -4.90002965927124
    9. ' =' → logprob: -5.15002965927124
    10. '               ' → logprob: -5.90002965927124

Token 1176: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.08831708133220673
    2. ' new' → logprob: -3.0883171558380127
    3. 'dp' → logprob: -3.3383171558380127
    4. '           ' → logprob: -6.338316917419434
    5. ' dp' → logprob: -7.838316917419434
    6. '   ' → logprob: -8.213316917419434
    7. '       ' → logprob: -8.338316917419434
    8. '               ' → logprob: -8.463316917419434
    9. 'continue' → logprob: -8.963316917419434
    10. '```' → logprob: -9.213316917419434

Token 1177: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.7432603272027336e-06
    2. 'dp' → logprob: -13.750001907348633
    3. '_dt' → logprob: -15.625001907348633
    4. '_dc' → logprob: -16.375001907348633
    5. '_df' → logprob: -16.500001907348633
    6. '_dx' → logprob: -17.375001907348633
    7. '_pd' → logprob: -17.625001907348633
    8. '_ds' → logprob: -17.875001907348633
    9. '	dp' → logprob: -18.000001907348633
    10. '_d' → logprob: -18.250001907348633

Token 1178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031461842358112335
    2. '[k' → logprob: -3.5314619541168213
    3. '=' → logprob: -7.031461715698242
    4. '[' → logprob: -7.406461715698242
    5. ' =' → logprob: -8.781461715698242
    6. '=[' → logprob: -11.406461715698242
    7. '=i' → logprob: -12.031461715698242
    8. '[:]' → logprob: -12.281461715698242
    9. '=k' → logprob: -12.531461715698242
    10. ' [' → logprob: -12.531461715698242

Token 1179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01930108852684498
    2. ']=' → logprob: -4.894300937652588
    3. '=' → logprob: -5.019300937652588
    4. ']+=' → logprob: -5.519300937652588
    5. '+=' → logprob: -8.019301414489746
    6. ' =' → logprob: -8.269301414489746
    7. ' +=' → logprob: -9.019301414489746
    8. '[i' → logprob: -9.269301414489746
    9. '   ' → logprob: -9.519301414489746
    10. ' ]' → logprob: -9.894301414489746

Token 1180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0038817848544567823
    2. ' =' → logprob: -5.878881931304932
    3. '+=' → logprob: -6.878881931304932
    4. ' +=' → logprob: -10.503881454467773
    5. '*=' → logprob: -11.878881454467773
    6. '[' → logprob: -12.878881454467773
    7. '   ' → logprob: -13.503881454467773
    8. '=int' → logprob: -13.503881454467773
    9. '=
' → logprob: -13.628881454467773
    10. ']=' → logprob: -14.003881454467773

Token 1181: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11403823643922806
    2. 'new' → logprob: -2.8640382289886475
    3. '(dp' → logprob: -3.1140382289886475
    4. '(new' → logprob: -6.114038467407227
    5. ' dp' → logprob: -6.489038467407227
    6. '(' → logprob: -7.114038467407227
    7. '0' → logprob: -7.239038467407227
    8. ' (' → logprob: -8.489038467407227
    9. 'pow' → logprob: -8.614038467407227
    10. ' new' → logprob: -9.114038467407227

Token 1182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13214917480945587
    2. '[k' → logprob: -2.1321492195129395
    3. 'i' → logprob: -5.8821492195129395
    4. 'k' → logprob: -6.2571492195129395
    5. '[' → logprob: -8.132148742675781
    6. '[n' → logprob: -10.382148742675781
    7. '[j' → logprob: -10.882148742675781
    8. '   ' → logprob: -10.882148742675781
    9. '[
' → logprob: -11.257148742675781
    10. '```' → logprob: -11.257148742675781

Token 1183: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9241957068443298
    2. ' *' → logprob: -1.4241957664489746
    3. '+' → logprob: -1.6741957664489746
    4. ' +' → logprob: -2.4241957664489746
    5. ' -' → logprob: -2.9241957664489746
    6. '-' → logprob: -3.5491957664489746
    7. ']' → logprob: -6.424195766448975
    8. ')' → logprob: -7.174195766448975
    9. '   ' → logprob: -7.549195766448975
    10. ' ' → logprob: -8.424195289611816

Token 1184: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.248740315437317
    2. '<|end|>' → logprob: -1.248740315437317
    3. '       ' → logprob: -1.873740315437317
    4. '[' → logprob: -2.3737401962280273
    5. '%' → logprob: -2.8737401962280273
    6. '   ' → logprob: -3.9987401962280273
    7. ' +' → logprob: -4.123740196228027
    8. '[i' → logprob: -4.123740196228027
    9. '        ' → logprob: -4.373740196228027
    10. ')' → logprob: -4.748740196228027

Token 1185: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37838366627693176
    2. 'new' → logprob: -1.7533836364746094
    3. '1' → logprob: -2.0033836364746094
    4. '(dp' → logprob: -6.128383636474609
    5. 'pow' → logprob: -6.128383636474609
    6. '(' → logprob: -7.003383636474609
    7. '(new' → logprob: -7.503383636474609
    8. '((' → logprob: -7.753383636474609
    9. '2' → logprob: -9.12838363647461
    10. '(H' → logprob: -9.37838363647461

Token 1186: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.37699928879737854
    2. '[i' → logprob: -1.7519992589950562
    3. 'k' → logprob: -2.0019993782043457
    4. 'i' → logprob: -5.251999378204346
    5. '[' → logprob: -8.626998901367188
    6. '[
' → logprob: -10.251998901367188
    7. '(k' → logprob: -10.501998901367188
    8. '[n' → logprob: -11.251998901367188
    9. '[j' → logprob: -11.501998901367188
    10. '[(' → logprob: -11.501998901367188

Token 1187: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06900772452354431
    2. ']' → logprob: -3.069007635116577
    3. '][' → logprob: -4.569007873535156
    4. '[k' → logprob: -5.069007873535156
    5. '[' → logprob: -5.819007873535156
    6. 'i' → logprob: -8.694007873535156
    7. '[j' → logprob: -9.319007873535156
    8. '+' → logprob: -9.944007873535156
    9. '   ' → logprob: -10.069007873535156
    10. '-' → logprob: -10.069007873535156

Token 1188: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1189: ' dp' (ID: 21546)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0029742566403001547
    2. 'new' → logprob: -7.002974033355713
    3. 'dp' → logprob: -7.377974033355713
    4. '(mod' → logprob: -7.377974033355713
    5. '1' → logprob: -7.627974033355713
    6. '0' → logprob: -8.502974510192871
    7. ' mod' → logprob: -10.127974510192871
    8. '(' → logprob: -10.627974510192871
    9. 'pow' → logprob: -10.877974510192871
    10. '(dp' → logprob: -11.377974510192871

Token 1190: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02670477144420147
    2. '[k' → logprob: -3.651704788208008
    3. 'i' → logprob: -8.151704788208008
    4. 'k' → logprob: -9.276704788208008
    5. '[' → logprob: -11.401704788208008
    6. '```' → logprob: -12.026704788208008
    7. '[j' → logprob: -13.151704788208008
    8. '(i' → logprob: -14.026704788208008
    9. '[I' → logprob: -14.276704788208008
    10. 'new' → logprob: -14.901704788208008

Token 1191: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.27014270424842834
    2. ']' → logprob: -1.895142674446106
    3. '-' → logprob: -2.6451427936553955
    4. 'i' → logprob: -4.770142555236816
    5. '[k' → logprob: -6.145142555236816
    6. '][' → logprob: -6.270142555236816
    7. '(i' → logprob: -7.520142555236816
    8. '[' → logprob: -7.645142555236816
    9. '```' → logprob: -8.020142555236816
    10. '+' → logprob: -8.270142555236816

Token 1192: ' *' (ID: 425)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06983860582113266
    2. '[' → logprob: -3.194838523864746
    3. '[k' → logprob: -3.944838523864746
    4. '<|end|>' → logprob: -6.069838523864746
    5. '%' → logprob: -6.319838523864746
    6. '```' → logprob: -7.069838523864746
    7. '[new' → logprob: -7.569838523864746
    8. '[
' → logprob: -8.194838523864746
    9. '*' → logprob: -8.444838523864746
    10. ')' → logprob: -8.694838523864746

Token 1193: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.10302808880805969
    2. '2' → logprob: -2.3530280590057373
    3. '(' → logprob: -6.478028297424316
    4. '(pow' → logprob: -7.103028297424316
    5. '4' → logprob: -8.103028297424316
    6. ' pow' → logprob: -9.228028297424316
    7. '1' → logprob: -11.353028297424316
    8. '0' → logprob: -11.478028297424316
    9. '```' → logprob: -11.978028297424316
    10. '3' → logprob: -11.978028297424316

Token 1194: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.055798713117837906
    2. '2' → logprob: -2.9307987689971924
    3. '(' → logprob: -7.930798530578613
    4. '(pow' → logprob: -8.055798530578613
    5. '4' → logprob: -9.055798530578613
    6. '3' → logprob: -10.055798530578613
    7. ' pow' → logprob: -11.305798530578613
    8. 'mod' → logprob: -11.680798530578613
    9. '((' → logprob: -11.680798530578613
    10. 'max' → logprob: -11.805798530578613

Token 1195: '
        
' (ID: 20417)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.340638130903244
    2. ' **' → logprob: -1.4656381607055664
    3. ' *' → logprob: -3.4656381607055664
    4. '*' → logprob: -4.715638160705566
    5. '[' → logprob: -5.715638160705566
    6. '*(' → logprob: -5.715638160705566
    7. ' ' → logprob: -5.965638160705566
    8. '[k' → logprob: -6.215638160705566
    9. '(' → logprob: -6.590638160705566
    10. ' (' → logprob: -6.590638160705566

Token 1196: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5342364311218262
    2. ' %' → logprob: -0.9092364311218262
    3. '```' → logprob: -5.534236431121826
    4. ')' → logprob: -5.659236431121826
    5. ')%' → logprob: -6.534236431121826
    6. ' mod' → logprob: -7.159236431121826
    7. 'mod' → logprob: -8.159236907958984
    8. '``' → logprob: -8.409236907958984
    9. '`' → logprob: -8.534236907958984
    10. '%n' → logprob: -9.284236907958984

Token 1197: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4817293882369995
    2. 'else' → logprob: -1.4817293882369995
    3. '   ' → logprob: -3.106729507446289
    4. ' else' → logprob: -3.606729507446289
    5. '[' → logprob: -4.356729507446289
    6. ' %' → logprob: -4.481729507446289
    7. '       ' → logprob: -4.731729507446289
    8. '[i' → logprob: -4.731729507446289
    9. '```' → logprob: -4.981729507446289
    10. ' ' → logprob: -5.231729507446289

Token 1198: ' Cas' (ID: 8066)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9646345973014832
    2. 'else' → logprob: -1.089634656906128
    3. 'continue' → logprob: -1.839634656906128
    4. '       ' → logprob: -3.089634656906128
    5. ' else' → logprob: -3.714634656906128
    6. '```' → logprob: -4.214634418487549
    7. ' continue' → logprob: -4.589634418487549
    8. 'elif' → logprob: -5.464634418487549
    9. '<|end|>' → logprob: -5.589634418487549
    10. 'return' → logprob: -5.714634418487549

Token 1199: ' général' (ID: 30475)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.660845935344696
    2. ' else' → logprob: -1.1608459949493408
    3. ':' → logprob: -1.7858459949493408
    4. ' :' → logprob: -6.410845756530762
    5. '_else' → logprob: -7.535845756530762
    6. '   ' → logprob: -8.410845756530762
    7. '	else' → logprob: -9.535845756530762
    8. '[' → logprob: -9.910845756530762
    9. ':
' → logprob: -10.160845756530762
    10. '_' → logprob: -10.285845756530762

Token 1200: ' restant' (ID: 172358)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05562824383378029
    2. ' else' → logprob: -3.3056282997131348
    3. '       ' → logprob: -4.055628299713135
    4. '   ' → logprob: -9.930627822875977
    5. ':
' → logprob: -11.180627822875977
    6. '	else' → logprob: -11.305627822875977
    7. 'elif' → logprob: -11.430627822875977
    8. ':' → logprob: -11.555627822875977
    9. '_else' → logprob: -12.180627822875977
    10. '```' → logprob: -13.305627822875977

Token 1201: ' pour' (ID: 1930)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4368874430656433
    2. ' else' → logprob: -1.686887502670288
    3. ':' → logprob: -1.811887502670288
    4. ':
' → logprob: -5.686887264251709
    5. '       ' → logprob: -6.311887264251709
    6. '           ' → logprob: -9.686887741088867
    7. ' :' → logprob: -9.811887741088867
    8. '   ' → logprob: -9.811887741088867
    9. '[' → logprob: -10.311887741088867
    10. '```' → logprob: -10.561887741088867

Token 1202: ' gestion' (ID: 29607)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22828510403633118
    2. 'i' → logprob: -1.8532850742340088
    3. ' else' → logprob: -3.228285074234009
    4. ' i' → logprob: -5.103285312652588
    5. 'new' → logprob: -7.478285312652588
    6. '   ' → logprob: -7.978285312652588
    7. ' new' → logprob: -8.60328483581543
    8. '```' → logprob: -8.60328483581543
    9. 'elif' → logprob: -8.97828483581543
    10. '_' → logprob: -9.85328483581543

Token 1203: ' de' (ID: 334)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11485113203525543
    2. ' else' → logprob: -2.239851236343384
    3. ':' → logprob: -6.989850997924805
    4. '[' → logprob: -7.864850997924805
    5. '   ' → logprob: -8.489850997924805
    6. '[i' → logprob: -8.739850997924805
    7. '       ' → logprob: -9.114850997924805
    8. '_else' → logprob: -9.239850997924805
    9. 'elif' → logprob: -9.989850997924805
    10. ':
' → logprob: -10.239850997924805

Token 1204: ' transitions' (ID: 59824)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3141016662120819
    2. 'i' → logprob: -2.1891016960144043
    3. ' else' → logprob: -2.3141016960144043
    4. 'l' → logprob: -4.189101696014404
    5. '```' → logprob: -4.314101696014404
    6. ' i' → logprob: -4.814101696014404
    7. ' l' → logprob: -5.189101696014404
    8. ' la' → logprob: -5.814101696014404
    9. ' H' → logprob: -6.064101696014404
    10. '`' → logprob: -6.314101696014404

Token 1205: ' complexes' (ID: 76136)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1584361046552658
    2. ' else' → logprob: -2.1584360599517822
    3. ':' → logprob: -3.5334360599517822
    4. ':
' → logprob: -7.033436298370361
    5. '   ' → logprob: -8.158435821533203
    6. '=' → logprob: -9.158435821533203
    7. '[' → logprob: -9.158435821533203
    8. ' :' → logprob: -9.533435821533203
    9. ' =' → logprob: -9.658435821533203
    10. 'elif' → logprob: -9.658435821533203

Token 1206: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24700438976287842
    2. ' else' → logprob: -1.7470043897628784
    3. ':' → logprob: -3.747004508972168
    4. '       ' → logprob: -4.247004508972168
    5. '           ' → logprob: -5.622004508972168
    6. ':
' → logprob: -6.497004508972168
    7. 'elif' → logprob: -7.372004508972168
    8. '```' → logprob: -8.497004508972168
    9. ' :' → logprob: -8.747004508972168
    10. '   ' → logprob: -9.247004508972168

Token 1207: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.453506737947464
    2. ' else' → logprob: -1.5785067081451416
    3. ':' → logprob: -2.5785067081451416
    4. '       ' → logprob: -2.9535067081451416
    5. 'elif' → logprob: -4.078506946563721
    6. '```' → logprob: -4.953506946563721
    7. ':
' → logprob: -6.328506946563721
    8. '           ' → logprob: -6.578506946563721
    9. ' elif' → logprob: -6.703506946563721
    10. '   ' → logprob: -6.953506946563721

Token 1208: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21590721607208252
    2. ' else' → logprob: -1.8409072160720825
    3. '       ' → logprob: -3.965907096862793
    4. 'elif' → logprob: -4.215907096862793
    5. ' elif' → logprob: -7.090907096862793
    6. '   ' → logprob: -7.340907096862793
    7. 'if' → logprob: -9.340907096862793
    8. '           ' → logprob: -9.590907096862793
    9. ' if' → logprob: -9.965907096862793
    10. '```' → logprob: -10.215907096862793

Token 1209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010098742321133614
    2. ':
' → logprob: -4.635098934173584
    3. '[' → logprob: -8.260098457336426
    4. '[i' → logprob: -10.385098457336426
    5. ' :' → logprob: -11.510098457336426
    6. '           ' → logprob: -11.760098457336426
    7. 'new' → logprob: -11.885098457336426
    8. '=' → logprob: -12.010098457336426
    9. '[new' → logprob: -12.010098457336426
    10. '   ' → logprob: -12.135098457336426

Token 1210: '           ' (ID: 352)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5905811190605164
    2. '           ' → logprob: -1.2155811786651611
    3. ' new' → logprob: -2.090581178665161
    4. '       ' → logprob: -4.090580940246582
    5. '```' → logprob: -5.465580940246582
    6. '               ' → logprob: -6.590580940246582
    7. '   ' → logprob: -7.215580940246582
    8. '[' → logprob: -7.590580940246582
    9. 'if' → logprob: -7.840580940246582
    10. '[new' → logprob: -7.965580940246582

Token 1211: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.14193087816238403
    2. ' new' → logprob: -2.1419308185577393
    3. 'dp' → logprob: -4.266931056976318
    4. '0' → logprob: -7.766931056976318
    5. ' dp' → logprob: -8.01693058013916
    6. '   ' → logprob: -9.51693058013916
    7. '           ' → logprob: -10.51693058013916
    8. '       ' → logprob: -12.89193058013916
    9. '               ' → logprob: -13.14193058013916
    10. 'pass' → logprob: -13.14193058013916

Token 1212: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -14.000003814697266
    3. '_dt' → logprob: -14.625003814697266
    4. '_d' → logprob: -15.000003814697266
    5. '_df' → logprob: -15.250003814697266
    6. '_p' → logprob: -15.625003814697266
    7. '_DP' → logprob: -15.750003814697266
    8. '_dc' → logprob: -15.875003814697266
    9. '_pd' → logprob: -15.875003814697266
    10. '\' → logprob: -15.875003814697266

Token 1213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00039051592466421425
    2. '[' → logprob: -7.875390529632568
    3. '=' → logprob: -12.50039005279541
    4. '```' → logprob: -12.75039005279541
    5. '=i' → logprob: -14.12539005279541
    6. '[:]' → logprob: -14.37539005279541
    7. 'i' → logprob: -14.62539005279541
    8. '[I' → logprob: -14.75039005279541
    9. ' [' → logprob: -15.00039005279541
    10. '(i' → logprob: -15.12539005279541

Token 1214: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019099250435829163
    2. '=' → logprob: -4.019099235534668
    3. '[' → logprob: -7.144099235534668
    4. ']' → logprob: -9.269099235534668
    5. '=i' → logprob: -10.394099235534668
    6. ']=' → logprob: -11.144099235534668
    7. '+=' → logprob: -12.269099235534668
    8. '```' → logprob: -12.394099235534668
    9. 'i' → logprob: -12.894099235534668
    10. '   ' → logprob: -13.144099235534668

Token 1215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00039373442996293306
    2. '[i' → logprob: -8.875393867492676
    3. '+=' → logprob: -9.125393867492676
    4. '[' → logprob: -9.500393867492676
    5. ' =' → logprob: -9.625393867492676
    6. ']=' → logprob: -14.125393867492676
    7. '=i' → logprob: -14.250393867492676
    8. '*=' → logprob: -14.500393867492676
    9. '```' → logprob: -14.500393867492676
    10. '=[' → logprob: -15.250393867492676

Token 1216: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.051348306238651276
    2. '0' → logprob: -3.0513482093811035
    3. 'new' → logprob: -5.9263482093811035
    4. ' dp' → logprob: -9.551348686218262
    5. '(dp' → logprob: -12.176348686218262
    6. '1' → logprob: -12.551348686218262
    7. '   ' → logprob: -13.301348686218262
    8. ' ' → logprob: -13.676348686218262
    9. '	dp' → logprob: -13.926348686218262
    10. '(' → logprob: -14.051348686218262

Token 1217: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04893513023853302
    2. 'new' → logprob: -3.0489351749420166
    3. '(dp' → logprob: -8.173934936523438
    4. '(' → logprob: -10.798934936523438
    5. '0' → logprob: -10.923934936523438
    6. '(new' → logprob: -11.173934936523438
    7. '2' → logprob: -12.423934936523438
    8. ' dp' → logprob: -12.673934936523438
    9. '1' → logprob: -13.923934936523438
    10. '   ' → logprob: -14.673934936523438

Token 1218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003322473494336009
    2. '[' → logprob: -8.25033187866211
    3. 'i' → logprob: -10.75033187866211
    4. ')' → logprob: -11.25033187866211
    5. '[k' → logprob: -11.87533187866211
    6. 'new' → logprob: -11.87533187866211
    7. '[
' → logprob: -12.37533187866211
    8. '[new' → logprob: -12.37533187866211
    9. '+' → logprob: -12.62533187866211
    10. '*' → logprob: -13.00033187866211

Token 1219: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4957439601421356
    2. '+' → logprob: -0.995743989944458
    3. '[i' → logprob: -4.370743751525879
    4. ' *' → logprob: -5.745743751525879
    5. ')' → logprob: -5.870743751525879
    6. '*' → logprob: -6.120743751525879
    7. ']' → logprob: -8.745743751525879
    8. '[' → logprob: -9.495743751525879
    9. '+i' → logprob: -9.620743751525879
    10. '-' → logprob: -9.995743751525879

Token 1220: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8355728983879089
    2. ' +' → logprob: -0.8355728983879089
    3. '*' → logprob: -2.5855729579925537
    4. ' *' → logprob: -3.0855729579925537
    5. '[i' → logprob: -5.585572719573975
    6. ')' → logprob: -5.710572719573975
    7. '-' → logprob: -6.710572719573975
    8. ' -' → logprob: -6.835572719573975
    9. '[' → logprob: -7.585572719573975
    10. '```' → logprob: -7.710572719573975

Token 1221: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003464289184194058
    2. ' dp' → logprob: -8.375346183776855
    3. 'new' → logprob: -9.125346183776855
    4. '1' → logprob: -12.625346183776855
    5. '(dp' → logprob: -13.250346183776855
    6. 'pow' → logprob: -14.625346183776855
    7. ' new' → logprob: -14.750346183776855
    8. '	dp' → logprob: -15.250346183776855
    9. '2' → logprob: -16.000347137451172
    10. '```' → logprob: -16.250347137451172

Token 1222: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.17985308170318604
    2. '[i' → logprob: -1.804853081703186
    3. '[' → logprob: -9.679853439331055
    4. '[j' → logprob: -11.304853439331055
    5. 'k' → logprob: -11.304853439331055
    6. '```' → logprob: -11.429853439331055
    7. 'i' → logprob: -13.304853439331055
    8. ''[' → logprob: -13.429853439331055
    9. '`' → logprob: -13.679853439331055
    10. '[n' → logprob: -13.929853439331055

Token 1223: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047890692949295044
    2. ')' → logprob: -3.7978906631469727
    3. '])' → logprob: -3.7978906631469727
    4. ']+' → logprob: -6.922890663146973
    5. '+' → logprob: -7.547890663146973
    6. '[i' → logprob: -8.047890663146973
    7. ']
' → logprob: -11.547890663146973
    8. ')]' → logprob: -11.672890663146973
    9. ')+' → logprob: -11.797890663146973
    10. '])+' → logprob: -11.797890663146973

Token 1224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ']' → logprob: -14.375001907348633
    3. '```' → logprob: -14.375001907348633
    4. ' ' → logprob: -15.312501907348633
    5. '   ' → logprob: -16.500001907348633
    6. '`' → logprob: -16.562501907348633
    7. '
' → logprob: -16.812501907348633
    8. '-' → logprob: -17.062501907348633
    9. 'i' → logprob: -17.125001907348633
    10. '2' → logprob: -17.250001907348633

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ']' → logprob: -12.500006675720215
    3. '```' → logprob: -13.875006675720215
    4. ' ' → logprob: -14.625006675720215
    5. '])' → logprob: -15.375006675720215
    6. '`' → logprob: -15.875006675720215
    7. 'i' → logprob: -15.937506675720215
    8. '-' → logprob: -16.3125057220459
    9. '   ' → logprob: -16.8750057220459
    10. '2' → logprob: -16.8750057220459

Token 1226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08045876771211624
    2. '])' → logprob: -2.580458879470825
    3. '[i' → logprob: -6.580458641052246
    4. ']+' → logprob: -9.455458641052246
    5. ')' → logprob: -9.705458641052246
    6. '][' → logprob: -10.580458641052246
    7. '```' → logprob: -12.830458641052246
    8. ']*' → logprob: -12.955458641052246
    9. ']
' → logprob: -13.455458641052246
    10. '])
' → logprob: -13.830458641052246

Token 1227: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2765301764011383
    2. '+' → logprob: -1.901530146598816
    3. ' +' → logprob: -2.4015302658081055
    4. ')+' → logprob: -8.026530265808105
    5. ' *' → logprob: -8.526530265808105
    6. '*' → logprob: -8.526530265808105
    7. ']' → logprob: -8.651530265808105
    8. '[' → logprob: -8.776530265808105
    9. '[i' → logprob: -9.026530265808105
    10. '<|end|>' → logprob: -9.401530265808105

Token 1228: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1977670043706894
    2. ' dp' → logprob: -2.5727670192718506
    3. 'mod' → logprob: -2.6977670192718506
    4. 'new' → logprob: -3.9477670192718506
    5. '1' → logprob: -4.6977667808532715
    6. ' new' → logprob: -5.3227667808532715
    7. ' mod' → logprob: -6.9477667808532715
    8. '0' → logprob: -7.5727667808532715
    9. '2' → logprob: -7.8227667808532715
    10. 'pow' → logprob: -8.07276725769043

Token 1229: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3872387111186981
    2. '[k' → logprob: -1.1372387409210205
    3. '[' → logprob: -8.012238502502441
    4. '```' → logprob: -11.137238502502441
    5. 'k' → logprob: -12.387238502502441
    6. '   ' → logprob: -12.637238502502441
    7. '[j' → logprob: -13.137238502502441
    8. '[
' → logprob: -13.512238502502441
    9. '[(' → logprob: -13.637238502502441
    10. 'i' → logprob: -13.762238502502441

Token 1230: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0718189924955368
    2. '][' → logprob: -3.6968190670013428
    3. '-' → logprob: -3.9468190670013428
    4. '[k' → logprob: -4.821818828582764
    5. ']' → logprob: -5.071818828582764
    6. '])' → logprob: -5.196818828582764
    7. '[' → logprob: -5.571818828582764
    8. '[j' → logprob: -8.071819305419922
    9. '[-' → logprob: -8.196819305419922
    10. '```' → logprob: -8.196819305419922

Token 1231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. '0' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.375016212463379
    4. '```' → logprob: -13.750016212463379
    5. '   ' → logprob: -14.750016212463379
    6. 'i' → logprob: -15.875016212463379
    7. ']' → logprob: -16.000015258789062
    8. '`' → logprob: -17.000015258789062
    9. '2' → logprob: -17.125015258789062
    10. '           ' → logprob: -17.375015258789062

Token 1232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015644963132217526
    2. '0' → logprob: -6.6265645027160645
    3. ' ' → logprob: -8.751564025878906
    4. '2' → logprob: -10.876564025878906
    5. '(i' → logprob: -10.876564025878906
    6. 'i' → logprob: -10.876564025878906
    7. '   ' → logprob: -12.001564025878906
    8. '```' → logprob: -12.501564025878906
    9. 'new' → logprob: -12.626564025878906
    10. '[i' → logprob: -13.126564025878906

Token 1233: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7556887865066528
    2. ')' → logprob: -1.3806887865066528
    3. ']' → logprob: -1.6306887865066528
    4. '])' → logprob: -2.5056886672973633
    5. '][' → logprob: -7.880688667297363
    6. ']*' → logprob: -8.130688667297363
    7. '   ' → logprob: -8.630688667297363
    8. ')*' → logprob: -8.755688667297363
    9. ')]' → logprob: -9.005688667297363
    10. '[' → logprob: -9.880688667297363

Token 1234: ' *' (ID: 425)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5288509130477905
    2. '*' → logprob: -1.6538509130477905
    3. ' *' → logprob: -2.02885103225708
    4. ')' → logprob: -2.65385103225708
    5. '[' → logprob: -4.40385103225708
    6. '```' → logprob: -6.65385103225708
    7. '   ' → logprob: -7.15385103225708
    8. '       ' → logprob: -7.52885103225708
    9. ')*' → logprob: -7.77885103225708
    10. '+' → logprob: -8.028850555419922

Token 1235: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026855177711695433
    2. '3' → logprob: -6.877685546875
    3. '4' → logprob: -7.252685546875
    4. ' ' → logprob: -7.502685546875
    5. 'pow' → logprob: -8.877685546875
    6. '(' → logprob: -9.127685546875
    7. '1' → logprob: -9.377685546875
    8. 'new' → logprob: -10.877685546875
    9. 'H' → logprob: -11.877685546875
    10. '0' → logprob: -12.002685546875

Token 1236: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011772520840168
    2. '3' → logprob: -5.386772632598877
    3. '4' → logprob: -5.511772632598877
    4. 'pow' → logprob: -6.261772632598877
    5. ' ' → logprob: -7.511772632598877
    6. '1' → logprob: -8.386772155761719
    7. '(' → logprob: -8.511772155761719
    8. '0' → logprob: -10.261772155761719
    9. '5' → logprob: -10.386772155761719
    10. 'new' → logprob: -10.886772155761719

Token 1237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001480697887018323
    2. '[i' → logprob: -7.001480579376221
    3. ' )' → logprob: -9.376481056213379
    4. '+' → logprob: -9.376481056213379
    5. ')
' → logprob: -9.376481056213379
    6. '[' → logprob: -9.626481056213379
    7. '   ' → logprob: -9.876481056213379
    8. ')%' → logprob: -10.001481056213379
    9. '       ' → logprob: -10.626481056213379
    10. ' +' → logprob: -10.876481056213379

Token 1238: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1239: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.030100924894213676
    2. '2' → logprob: -3.6551008224487305
    3. ' pow' → logprob: -6.1551008224487305
    4. '(pow' → logprob: -7.6551008224487305
    5. '0' → logprob: -8.03010082244873
    6. '(' → logprob: -8.03010082244873
    7. '1' → logprob: -8.53010082244873
    8. '3' → logprob: -9.53010082244873
    9. 'mod' → logprob: -9.65510082244873
    10. 'dp' → logprob: -9.78010082244873

Token 1240: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.000763510703109e-05
    2. '2' → logprob: -10.250040054321289
    3. ' (' → logprob: -13.000040054321289
    4. '(
' → logprob: -13.125040054321289
    5. '(pow' → logprob: -15.500040054321289
    6. '```' → logprob: -17.25004005432129
    7. '((' → logprob: -17.62504005432129
    8. '()' → logprob: -17.87504005432129
    9. '(
' → logprob: -18.12504005432129
    10. '(two' → logprob: -18.25004005432129

Token 1241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04858884960412979
    2. '(' → logprob: -3.048588752746582
    3. '(
' → logprob: -14.048588752746582
    4. '```' → logprob: -14.798588752746582
    5. ' ' → logprob: -15.798588752746582
    6. ' (' → logprob: -16.6735897064209
    7. '(pow' → logprob: -17.1735897064209
    8. 'pow' → logprob: -17.2985897064209
    9. ')' → logprob: -18.4235897064209
    10. '   ' → logprob: -18.4235897064209

Token 1242: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03348466753959656
    2. ',' → logprob: -3.658484697341919
    3. ' (' → logprob: -5.28348445892334
    4. '(-' → logprob: -7.28348445892334
    5. '(
' → logprob: -7.65848445892334
    6. '(H' → logprob: -8.28348445892334
    7. '((' → logprob: -8.78348445892334
    8. '('' → logprob: -8.78348445892334
    9. ')' → logprob: -9.53348445892334
    10. '(pow' → logprob: -9.53348445892334

Token 1243: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2629789710044861
    2. 'H' → logprob: -1.5129790306091309
    3. '-H' → logprob: -4.887979030609131
    4. '-(' → logprob: -6.762979030609131
    5. '(-' → logprob: -7.387979030609131
    6. '-' → logprob: -8.387978553771973
    7. '(max' → logprob: -8.387978553771973
    8. '(-(' → logprob: -8.637978553771973
    9. 'max' → logprob: -8.887978553771973
    10. '(' → logprob: -9.012978553771973

Token 1244: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.023938601836562157
    2. '[i' → logprob: -3.7739386558532715
    3. '```' → logprob: -8.148938179016113
    4. '[' → logprob: -8.273938179016113
    5. 'k' → logprob: -9.773938179016113
    6. '(k' → logprob: -10.148938179016113
    7. '[-' → logprob: -11.648938179016113
    8. ' [' → logprob: -11.773938179016113
    9. '[n' → logprob: -12.023938179016113
    10. '`' → logprob: -12.148938179016113

Token 1245: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05005694553256035
    2. ']' → logprob: -3.0500569343566895
    3. '][' → logprob: -7.6750569343566895
    4. '-' → logprob: -7.8000569343566895
    5. '[' → logprob: -8.800057411193848
    6. '[k' → logprob: -9.175057411193848
    7. ']-' → logprob: -9.300057411193848
    8. 'i' → logprob: -9.425057411193848
    9. '```' → logprob: -10.050057411193848
    10. '   ' → logprob: -10.300057411193848

Token 1246: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014534836634993553
    2. '-' → logprob: -4.514534950256348
    3. '[k' → logprob: -6.889534950256348
    4. ' -' → logprob: -6.889534950256348
    5. '[' → logprob: -7.639534950256348
    6. '-i' → logprob: -7.889534950256348
    7. '[-' → logprob: -8.139534950256348
    8. '-k' → logprob: -8.389534950256348
    9. '```' → logprob: -10.264534950256348
    10. '[
' → logprob: -12.264534950256348

Token 1247: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011370349675416946
    2. 'i' → logprob: -4.5113701820373535
    3. ' H' → logprob: -8.261370658874512
    4. '   ' → logprob: -10.386370658874512
    5. ' i' → logprob: -10.761370658874512
    6. 'k' → logprob: -11.886370658874512
    7. '```' → logprob: -13.511370658874512
    8. '[i' → logprob: -14.386370658874512
    9. '(i' → logprob: -14.886370658874512
    10. '1' → logprob: -14.886370658874512

Token 1248: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019591135787777603
    2. 'i' → logprob: -9.250195503234863
    3. ']' → logprob: -9.750195503234863
    4. '[k' → logprob: -10.750195503234863
    5. '[' → logprob: -12.250195503234863
    6. '(i' → logprob: -12.375195503234863
    7. '[
' → logprob: -12.750195503234863
    8. '```' → logprob: -13.000195503234863
    9. '[j' → logprob: -13.375195503234863
    10. '][' → logprob: -14.000195503234863

Token 1249: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03712918609380722
    2. ']' → logprob: -3.4121291637420654
    3. '[i' → logprob: -6.1621294021606445
    4. ' -' → logprob: -7.2871294021606445
    5. 'i' → logprob: -7.9121294021606445
    6. '],' → logprob: -9.537129402160645
    7. ']-' → logprob: -9.912129402160645
    8. '[' → logprob: -10.162129402160645
    9. '-i' → logprob: -10.412129402160645
    10. '   ' → logprob: -10.787129402160645

Token 1250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010521204239921644
    2. '2' → logprob: -9.375104904174805
    3. 'i' → logprob: -11.625104904174805
    4. ' ' → logprob: -13.000104904174805
    5. '```' → logprob: -13.125104904174805
    6. '   ' → logprob: -13.875104904174805
    7. 'k' → logprob: -13.875104904174805
    8. ')' → logprob: -14.187604904174805
    9. ']' → logprob: -14.875104904174805
    10. '[' → logprob: -14.937604904174805

Token 1251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021307668066583574
    2. '2' → logprob: -8.750212669372559
    3. ']' → logprob: -11.000212669372559
    4. 'i' → logprob: -11.250212669372559
    5. '```' → logprob: -11.875212669372559
    6. ' ' → logprob: -12.187712669372559
    7. '0' → logprob: -13.562712669372559
    8. '   ' → logprob: -13.562712669372559
    9. '-' → logprob: -13.875212669372559
    10. ')' → logprob: -13.937712669372559

Token 1252: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.008081632666289806
    2. ',' → logprob: -5.258081436157227
    3. ']' → logprob: -6.383081436157227
    4. '])' → logprob: -7.008081436157227
    5. '),' → logprob: -9.258081436157227
    6. '   ' → logprob: -10.258081436157227
    7. '[k' → logprob: -10.508081436157227
    8. ']+' → logprob: -11.258081436157227
    9. '[i' → logprob: -11.383081436157227
    10. '-' → logprob: -11.508081436157227

Token 1253: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015023599844425917
    2. ' mod' → logprob: -6.501502513885498
    3. '(mod' → logprob: -17.626502990722656
    4. '	mod' → logprob: -17.751502990722656
    5. ')' → logprob: -19.626502990722656
    6. '```' → logprob: -19.876502990722656
    7. 'MOD' → logprob: -20.126502990722656
    8. '10' → logprob: -21.001502990722656
    9. '_mod' → logprob: -21.126502990722656
    10. ' мод' → logprob: -21.376502990722656

Token 1254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43128761649131775
    2. ',' → logprob: -1.0562876462936401
    3. ']' → logprob: -6.93128776550293
    4. ')%' → logprob: -7.30628776550293
    5. ',
' → logprob: -8.68128776550293
    6. '   ' → logprob: -8.68128776550293
    7. '])' → logprob: -8.80628776550293
    8. ')
' → logprob: -8.80628776550293
    9. ']%' → logprob: -9.68128776550293
    10. ' )' → logprob: -9.80628776550293

Token 1255: '        
' (ID: 3564)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11197586357593536
    2. '<|end|>' → logprob: -3.111975908279419
    3. '
' → logprob: -4.23697566986084
    4. '\n' → logprob: -4.61197566986084
    5. ' %' → logprob: -4.73697566986084
    6. '   ' → logprob: -5.23697566986084
    7. '[' → logprob: -5.36197566986084
    8. ')' → logprob: -5.36197566986084
    9. '[new' → logprob: -6.11197566986084
    10. '%n' → logprob: -6.11197566986084

Token 1256: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15395306050777435
    2. 'new' → logprob: -2.6539530754089355
    3. 'dp' → logprob: -3.4039530754089355
    4. ' new' → logprob: -3.7789530754089355
    5. 'mod' → logprob: -5.1539530754089355
    6. ')' → logprob: -5.7789530754089355
    7. '%' → logprob: -5.9039530754089355
    8. ' dp' → logprob: -6.4039530754089355
    9. '    
' → logprob: -7.0289530754089355
    10. '[new' → logprob: -8.028952598571777

Token 1257: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7784357070922852
    2. ' new' → logprob: -1.1534357070922852
    3. '%' → logprob: -2.403435707092285
    4. ' %' → logprob: -2.903435707092285
    5. '       ' → logprob: -3.528435707092285
    6. '   ' → logprob: -4.153435707092285
    7. '[new' → logprob: -4.278435707092285
    8. '\n' → logprob: -5.403435707092285
    9. '    
' → logprob: -5.778435707092285
    10. ' %=' → logprob: -5.903435707092285

Token 1258: ' Pr' (ID: 2284)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0008083211723715067
    2. ' new' → logprob: -7.125808238983154
    3. '```' → logprob: -13.500808715820312
    4. '       ' → logprob: -14.250808715820312
    5. '   ' → logprob: -14.500808715820312
    6. 'if' → logprob: -14.750808715820312
    7. '[new' → logprob: -15.500808715820312
    8. '_new' → logprob: -16.000808715820312
    9. '
' → logprob: -16.375808715820312
    10. 'for' → logprob: -16.500808715820312

Token 1259: 'end' (ID: 419)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1082150787115097
    2. 'od' → logprob: -3.608215093612671
    3. 'oc' → logprob: -3.733215093612671
    4. 'ef' → logprob: -3.858215093612671
    5. 'em' → logprob: -5.358214855194092
    6. 'new' → logprob: -5.983214855194092
    7. '[int' → logprob: -6.108214855194092
    8. 'ec' → logprob: -6.233214855194092
    9. 'ob' → logprob: -6.358214855194092
    10. 'o' → logprob: -6.358214855194092

Token 1260: ' le' (ID: 505)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.41944432258605957
    2. 'new' → logprob: -1.1694443225860596
    3. '_new' → logprob: -3.7944443225860596
    4. '[new' → logprob: -4.9194440841674805
    5. '_' → logprob: -8.04444408416748
    6. '[' → logprob: -8.04444408416748
    7. '=' → logprob: -8.04444408416748
    8. '```' → logprob: -8.41944408416748
    9. 'w' → logprob: -8.79444408416748
    10. ' =' → logprob: -8.79444408416748

Token 1261: ' reste' (ID: 26769)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.22718921303749084
    2. ' new' → logprob: -1.6021891832351685
    3. '`' → logprob: -7.852189064025879
    4. '_new' → logprob: -7.852189064025879
    5. '%' → logprob: -8.352189064025879
    6. 'next' → logprob: -8.602189064025879
    7. '[new' → logprob: -8.727189064025879
    8. 'mod' → logprob: -8.852189064025879
    9. '```' → logprob: -9.852189064025879
    10. ' next' → logprob: -9.852189064025879

Token 1262: ' mod' (ID: 1812)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7692567706108093
    2. ' new' → logprob: -1.269256830215454
    3. '[new' → logprob: -1.769256830215454
    4. '%' → logprob: -3.019256830215454
    5. ' %' → logprob: -4.269256591796875
    6. '_new' → logprob: -5.644256591796875
    7. '   ' → logprob: -5.644256591796875
    8. ')' → logprob: -5.769256591796875
    9. '(new' → logprob: -5.769256591796875
    10. '=' → logprob: -6.394256591796875

Token 1263: 'ulaire' (ID: 48584)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.10929182916879654
    2. 'new' → logprob: -3.6092917919158936
    3. 'ulo' → logprob: -3.8592917919158936
    4. ' mod' → logprob: -3.9842917919158936
    5. 'mod' → logprob: -4.484292030334473
    6. '_new' → logprob: -5.734292030334473
    7. ' ' → logprob: -5.859292030334473
    8. ')' → logprob: -5.859292030334473
    9. ' %' → logprob: -6.109292030334473
    10. ' =' → logprob: -6.234292030334473

Token 1264: ' pour' (ID: 1930)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -1.0172278881072998
    2. 'new' → logprob: -1.3922278881072998
    3. ' new' → logprob: -1.8922278881072998
    4. ' %' → logprob: -2.0172278881073
    5. '%' → logprob: -2.6422278881073
    6. '
' → logprob: -4.017228126525879
    7. '   ' → logprob: -5.017228126525879
    8. ')' → logprob: -5.892228126525879
    9. ' %=' → logprob: -5.892228126525879
    10. ' =' → logprob: -7.142228126525879

Token 1265: ' éviter' (ID: 64013)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16203440725803375
    2. ' new' → logprob: -2.037034511566162
    3. 'mod' → logprob: -4.287034511566162
    4. '```' → logprob: -5.662034511566162
    5. '%' → logprob: -6.662034511566162
    6. '`' → logprob: -8.412034034729004
    7. ' %=' → logprob: -8.912034034729004
    8. ' mod' → logprob: -9.912034034729004
    9. '[new' → logprob: -10.287034034729004
    10. '   ' → logprob: -10.537034034729004

Token 1266: ' les' (ID: 1341)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06674858182668686
    2. '%' → logprob: -3.44174861907959
    3. ' mod' → logprob: -3.94174861907959
    4. 'new' → logprob: -4.81674861907959
    5. ' %' → logprob: -6.19174861907959
    6. ' new' → logprob: -6.44174861907959
    7. '(mod' → logprob: -7.69174861907959
    8. '`' → logprob: -8.31674861907959
    9. '```' → logprob: -8.31674861907959
    10. ' %=' → logprob: -8.56674861907959

Token 1267: ' déb' (ID: 37874)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07118794322013855
    2. ' mod' → logprob: -3.196187973022461
    3. '_mod' → logprob: -4.446187973022461
    4. '%' → logprob: -4.946187973022461
    5. '```' → logprob: -5.571187973022461
    6. '`' → logprob: -6.571187973022461
    7. ']' → logprob: -7.321187973022461
    8. '=' → logprob: -7.821187973022461
    9. ' %' → logprob: -7.946187973022461
    10. '
' → logprob: -7.946187973022461

Token 1268: 'ord' (ID: 604)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005161058623343706
    2. '%' → logprob: -6.505161285400391
    3. 'dp' → logprob: -7.130161285400391
    4. '_mod' → logprob: -7.505161285400391
    5. 'pow' → logprob: -8.13016128540039
    6. '(mod' → logprob: -8.13016128540039
    7. ' mod' → logprob: -8.38016128540039
    8. '```' → logprob: -8.38016128540039
    9. 'v' → logprob: -8.50516128540039
    10. ']' → logprob: -8.63016128540039

Token 1269: 'ements' (ID: 4507)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7286964654922485
    2. 'mod' → logprob: -1.2286964654922485
    3. ' mod' → logprob: -2.603696346282959
    4. 'new' → logprob: -2.853696346282959
    5. '_mod' → logprob: -3.603696346282959
    6. '(mod' → logprob: -3.853696346282959
    7. 'ulo' → logprob: -4.478696346282959
    8. '_new' → logprob: -5.228696346282959
    9. '=' → logprob: -5.353696346282959
    10. 'ular' → logprob: -5.603696346282959

Token 1270: ' nég' (ID: 55805)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0808478444814682
    2. '[new' → logprob: -2.95584774017334
    3. 'new' → logprob: -4.58084774017334
    4. ' =' → logprob: -5.20584774017334
    5. ' new' → logprob: -5.33084774017334
    6. '   ' → logprob: -5.83084774017334
    7. '
' → logprob: -7.45584774017334
    8. '[' → logprob: -7.58084774017334
    9. '       ' → logprob: -8.33084774017334
    10. '=' → logprob: -8.45584774017334

Token 1271: 'atifs' (ID: 66205)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5171634554862976
    2. ' %' → logprob: -1.7671635150909424
    3. 'mod' → logprob: -2.2671635150909424
    4. '%' → logprob: -2.3921635150909424
    5. ' new' → logprob: -3.8921635150909424
    6. ')' → logprob: -5.017163276672363
    7. ' modulo' → logprob: -5.767163276672363
    8. 'ulo' → logprob: -6.517163276672363
    9. ' %=' → logprob: -6.767163276672363
    10. '(mod' → logprob: -7.267163276672363

Token 1272: '/' (ID: 14)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16978423297405243
    2. '[new' → logprob: -2.2947843074798584
    3. 'new' → logprob: -3.2947843074798584
    4. ' new' → logprob: -4.919784069061279
    5. ' =' → logprob: -5.419784069061279
    6. '   ' → logprob: -5.919784069061279
    7. '
' → logprob: -6.544784069061279
    8. '[' → logprob: -7.169784069061279
    9. '```' → logprob: -7.294784069061279
    10. '=' → logprob: -8.544784545898438

Token 1273: 'posit' (ID: 2904)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023560021072626114
    2. ' mod' → logprob: -3.773560047149658
    3. '%' → logprob: -8.8985595703125
    4. '(mod' → logprob: -9.0235595703125
    5. '```' → logprob: -11.0235595703125
    6. ')' → logprob: -11.1485595703125
    7. '`' → logprob: -11.6485595703125
    8. '=' → logprob: -13.0235595703125
    9. '_mod' → logprob: -13.2735595703125
    10. '
' → logprob: -13.2735595703125

Token 1274: 'ifs' (ID: 14119)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.472601979970932
    2. '%' → logprob: -1.3476020097732544
    3. ')' → logprob: -3.597601890563965
    4. '`' → logprob: -3.722601890563965
    5. 'mod' → logprob: -3.847601890563965
    6. ' mod' → logprob: -4.347601890563965
    7. 'ular' → logprob: -5.472601890563965
    8. '=' → logprob: -5.597601890563965
    9. 'er' → logprob: -5.722601890563965
    10. 'e' → logprob: -5.847601890563965

Token 1275: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03580758720636368
    2. 'new' → logprob: -3.9108076095581055
    3. '[new' → logprob: -5.0358076095581055
    4. ' new' → logprob: -5.1608076095581055
    5. ' =' → logprob: -7.1608076095581055
    6. '   ' → logprob: -7.2858076095581055
    7. '[' → logprob: -7.5358076095581055
    8. '=' → logprob: -8.035807609558105
    9. '```' → logprob: -8.660807609558105
    10. '`' → logprob: -9.035807609558105

Token 1276: '       ' (ID: 309)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.7827077507972717
    2. '[i' → logprob: -1.532707691192627
    3. 'new' → logprob: -1.907707691192627
    4. ' new' → logprob: -2.657707691192627
    5. ' =' → logprob: -2.907707691192627
    6. '```' → logprob: -3.907707691192627
    7. '=' → logprob: -4.282707691192627
    8. '   ' → logprob: -5.032707691192627
    9. '[' → logprob: -5.657707691192627
    10. '`' → logprob: -5.782707691192627

Token 1277: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.20370976626873016
    2. ' new' → logprob: -1.7037097215652466
    3. '[new' → logprob: -7.078709602355957
    4. '```' → logprob: -7.203709602355957
    5. '[' → logprob: -8.953709602355957
    6. '`' → logprob: -9.203709602355957
    7. '`
' → logprob: -9.203709602355957
    8. '``' → logprob: -9.453709602355957
    9. '   ' → logprob: -9.453709602355957
    10. '(new' → logprob: -9.828709602355957

Token 1278: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.8624639324116288e-06
    2. '_dt' → logprob: -14.750001907348633
    3. '\' → logprob: -15.000001907348633
    4. '_d' → logprob: -15.125001907348633
    5. '_dc' → logprob: -15.625001907348633
    6. '_df' → logprob: -15.750001907348633
    7. 'dp' → logprob: -16.125001907348633
    8. '_dx' → logprob: -16.875001907348633
    9. '_' → logprob: -17.000001907348633
    10. '_ds' → logprob: -17.250001907348633

Token 1279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5491004129871726e-05
    2. '[' → logprob: -10.125045776367188
    3. '[new' → logprob: -13.000045776367188
    4. '[I' → logprob: -13.875045776367188
    5. '```' → logprob: -14.000045776367188
    6. '\[' → logprob: -14.875045776367188
    7. ' [' → logprob: -15.625045776367188
    8. '   ' → logprob: -16.000045776367188
    9. 'new' → logprob: -16.125045776367188
    10. 'i' → logprob: -16.250045776367188

Token 1280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03736061602830887
    2. '[i' → logprob: -3.412360668182373
    3. ')' → logprob: -6.412360668182373
    4. ']%' → logprob: -7.037360668182373
    5. ']=' → logprob: -7.912360668182373
    6. '[new' → logprob: -8.412360191345215
    7. '%=' → logprob: -8.537360191345215
    8. ' %=' → logprob: -9.037360191345215
    9. '=' → logprob: -9.662360191345215
    10. '[' → logprob: -9.912360191345215

Token 1281: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.10453423112630844
    2. ' %=' → logprob: -2.479534149169922
    3. '=' → logprob: -4.354534149169922
    4. '%' → logprob: -6.229534149169922
    5. 'new' → logprob: -8.479534149169922
    6. '   ' → logprob: -8.729534149169922
    7. ' =' → logprob: -8.729534149169922
    8. ')' → logprob: -10.229534149169922
    9. '```' → logprob: -10.229534149169922
    10. ' %' → logprob: -11.604534149169922

Token 1282: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -18.75
    3. '(mod' → logprob: -20.875
    4. '	mod' → logprob: -23.625
    5. '_mod' → logprob: -24.5
    6. 'MOD' → logprob: -25.875
    7. 'moder' → logprob: -26.125
    8. 'module' → logprob: -27.625
    9. ' мод' → logprob: -27.625
    10. '
' → logprob: -27.75

Token 1283: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1284: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1285: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37818643450737
    2. '   ' → logprob: -1.7531864643096924
    3. '<|end|>' → logprob: -2.0031864643096924
    4. '	dp' → logprob: -6.753186225891113
    5. '```' → logprob: -7.003186225891113
    6. '    
' → logprob: -7.253186225891113
    7. ' ' → logprob: -7.378186225891113
    8. ')' → logprob: -7.378186225891113
    9. 'for' → logprob: -7.878186225891113
    10. ' dp' → logprob: -8.128186225891113

Token 1286: ' Trans' (ID: 5515)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.5
    3. ' dp' → logprob: -18.0
    4. '	dp' → logprob: -22.125
    5. '    
' → logprob: -23.875
    6. '#' → logprob: -24.375
    7. '(dp' → logprob: -24.875
    8. '
' → logprob: -25.125
    9. '```' → logprob: -25.125
    10. 'dc' → logprob: -25.25

Token 1287: 'fér' (ID: 21958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43049946427345276
    2. 'p' → logprob: -1.1804994344711304
    3. '_dp' → logprob: -3.18049955368042
    4. '   ' → logprob: -7.43049955368042
    5. 'Dp' → logprob: -8.055499076843262
    6. '	dp' → logprob: -9.680499076843262
    7. ' dp' → logprob: -10.180499076843262
    8. '(dp' → logprob: -10.680499076843262
    9. '       ' → logprob: -10.805499076843262
    10. '_p' → logprob: -11.305499076843262

Token 1288: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.24918700754642487
    2. 'new' → logprob: -1.7491869926452637
    3. '=' → logprob: -4.124186992645264
    4. '   ' → logprob: -4.874186992645264
    5. 'fer' → logprob: -5.374186992645264
    6. 'r' → logprob: -5.624186992645264
    7. 'rer' → logprob: -5.749186992645264
    8. 'e' → logprob: -5.874186992645264
    9. 'dp' → logprob: -5.874186992645264
    10. 're' → logprob: -6.249186992645264

Token 1289: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006147435633465648
    2. ' dp' → logprob: -7.500614643096924
    3. '   ' → logprob: -10.000615119934082
    4. 'new' → logprob: -11.250615119934082
    5. '	dp' → logprob: -13.875615119934082
    6. '_dp' → logprob: -14.000615119934082
    7. '
' → logprob: -14.250615119934082
    8. '(dp' → logprob: -14.875615119934082
    9. ' new' → logprob: -15.625615119934082
    10. '    
' → logprob: -16.000614166259766

Token 1290: ' référence' (ID: 76252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005593468667939305
    2. 'new' → logprob: -7.500559329986572
    3. ' dp' → logprob: -12.00055980682373
    4. ' new' → logprob: -15.75055980682373
    5. '_dp' → logprob: -18.000558853149414
    6. '	dp' → logprob: -18.375558853149414
    7. 'old' → logprob: -19.750558853149414
    8. '   ' → logprob: -19.750558853149414
    9. 'd' → logprob: -19.875558853149414
    10. 'dpi' → logprob: -20.000558853149414

Token 1291: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01160157285630703
    2. 'dp' → logprob: -4.511601448059082
    3. ' =' → logprob: -7.511601448059082
    4. ' dp' → logprob: -13.011601448059082
    5. '=
' → logprob: -13.136601448059082
    6. '_dp' → logprob: -13.636601448059082
    7. '   ' → logprob: -14.261601448059082
    8. ',' → logprob: -15.386601448059082
    9. '[' → logprob: -15.761601448059082
    10. '(dp' → logprob: -16.0116024017334

Token 1292: ' tableau' (ID: 67053)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6931775212287903
    2. 'dp' → logprob: -0.6931775212287903
    3. ' new' → logprob: -10.568177223205566
    4. ' dp' → logprob: -12.693177223205566
    5. '_dp' → logprob: -15.068177223205566
    6. 'nou' → logprob: -15.693177223205566
    7. '[new' → logprob: -15.693177223205566
    8. 'DP' → logprob: -16.193178176879883
    9. '`' → logprob: -16.193178176879883
    10. '	dp' → logprob: -16.568178176879883

Token 1293: ' nouvel' (ID: 76298)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10086148232221603
    2. '=' → logprob: -2.3508615493774414
    3. ' =' → logprob: -7.600861549377441
    4. ' dp' → logprob: -9.100861549377441
    5. '   ' → logprob: -10.850861549377441
    6. '_dp' → logprob: -11.475861549377441
    7. ',' → logprob: -12.350861549377441
    8. '(dp' → logprob: -12.600861549377441
    9. '```' → logprob: -12.975861549377441
    10. '	dp' → logprob: -13.725861549377441

Token 1294: 'lement' (ID: 1254)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.754368223482743e-05
    2. 'e' → logprob: -10.250067710876465
    3. '   ' → logprob: -11.000067710876465
    4. '_dt' → logprob: -12.125067710876465
    5. '_' → logprob: -12.500067710876465
    6. '_DP' → logprob: -13.875067710876465
    7. '```' → logprob: -14.500067710876465
    8. '_df' → logprob: -14.500067710876465
    9. '_d' → logprob: -14.875067710876465
    10. 'dp' → logprob: -14.875067710876465

Token 1295: ' calcul' (ID: 7559)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39413687586784363
    2. '_dp' → logprob: -2.019136905670166
    3. 'cré' → logprob: -3.019136905670166
    4. 'assign' → logprob: -3.144136905670166
    5. 'calcul' → logprob: -3.144136905670166
    6. 'created' → logprob: -3.644136905670166
    7. 'new' → logprob: -4.144136905670166
    8. 'cre' → logprob: -5.769136905670166
    9. 'computed' → logprob: -6.019136905670166
    10. ' créé' → logprob: -6.019136905670166

Token 1296: 'é' (ID: 377)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8154508471488953
    2. '=' → logprob: -1.31545090675354
    3. '   ' → logprob: -1.44045090675354
    4. '_dp' → logprob: -3.44045090675354
    5. ' =' → logprob: -4.315450668334961
    6. 'e' → logprob: -6.065450668334961
    7. 'new' → logprob: -6.065450668334961
    8. ' dp' → logprob: -6.565450668334961
    9. '(dp' → logprob: -8.440450668334961
    10. 'ion' → logprob: -8.565450668334961

Token 1297: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00021712594025302678
    2. ' dp' → logprob: -8.50021743774414
    3. '   ' → logprob: -11.25021743774414
    4. '	dp' → logprob: -15.00021743774414
    5. '_dp' → logprob: -15.62521743774414
    6. '
' → logprob: -17.12521743774414
    7. '(dp' → logprob: -17.25021743774414
    8. '    
' → logprob: -18.00021743774414
    9. '```' → logprob: -18.25021743774414
    10. '.dp' → logprob: -19.12521743774414

Token 1298: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003525121370330453
    2. '=' → logprob: -5.753525257110596
    3. ' dp' → logprob: -8.378524780273438
    4. '   ' → logprob: -9.253524780273438
    5. '(dp' → logprob: -11.753524780273438
    6. ' =' → logprob: -12.503524780273438
    7. '	dp' → logprob: -12.503524780273438
    8. '_dp' → logprob: -12.503524780273438
    9. ',' → logprob: -13.628524780273438
    10. '```' → logprob: -13.878524780273438

Token 1299: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.45848218582978e-06
    2. ' dp' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '	dp' → logprob: -18.750001907348633
    5. '_dp' → logprob: -20.625001907348633
    6. 'new' → logprob: -21.375001907348633
    7. '(dp' → logprob: -21.500001907348633
    8. '```' → logprob: -22.000001907348633
    9. 'dpi' → logprob: -22.875001907348633
    10. '.dp' → logprob: -23.375001907348633

Token 1300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023255961015820503
    2. ' =' → logprob: -3.7732560634613037
    3. ',' → logprob: -12.273256301879883
    4. '[:]' → logprob: -12.648256301879883
    5. '[' → logprob: -13.898256301879883
    6. '=new' → logprob: -14.523256301879883
    7. '=
' → logprob: -14.773256301879883
    8. '   ' → logprob: -15.523256301879883
    9. '＝' → logprob: -15.898256301879883
    10. 'dp' → logprob: -16.523256301879883

Token 1301: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.7697225252486533e-06
    2. ' new' → logprob: -12.500003814697266
    3. 'dp' → logprob: -21.000003814697266
    4. '[new' → logprob: -21.125003814697266
    5. '`' → logprob: -22.250003814697266
    6. '_new' → logprob: -22.625003814697266
    7. 'New' → logprob: -22.750003814697266
    8. '   ' → logprob: -23.000003814697266
    9. '	new' → logprob: -23.000003814697266
    10. '```' → logprob: -23.000003814697266

Token 1302: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.8624639324116288e-06
    2. 'dp' → logprob: -13.250001907348633
    3. '_dt' → logprob: -18.500001907348633
    4. '	dp' → logprob: -19.125001907348633
    5. 'p' → logprob: -19.500001907348633
    6. '_dc' → logprob: -19.875001907348633
    7. '_df' → logprob: -19.875001907348633
    8. '_' → logprob: -20.250001907348633
    9. 'new' → logprob: -20.625001907348633
    10. '\' → logprob: -20.625001907348633

Token 1303: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1304: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32103580236434937
    2. '<|end|>' → logprob: -1.8210358619689941
    3. 'result' → logprob: -2.821035861968994
    4. '#' → logprob: -4.446035861968994
    5. '```' → logprob: -4.571035861968994
    6. 'continue' → logprob: -4.696035861968994
    7. 'for' → logprob: -5.696035861968994
    8. 'return' → logprob: -5.696035861968994
    9. 'pass' → logprob: -5.946035861968994
    10. 'answer' → logprob: -5.946035861968994

Token 1305: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4034345187828876e-05
    2. 'result' → logprob: -10.75002384185791
    3. 'answer' → logprob: -13.62502384185791
    4. 'ans' → logprob: -14.12502384185791
    5. 'res' → logprob: -15.00002384185791
    6. '```' → logprob: -15.75002384185791
    7. 'pr' → logprob: -16.750024795532227
    8. 'r' → logprob: -18.125024795532227
    9. 'prin' → logprob: -18.125024795532227
    10. 'for' → logprob: -18.250024795532227

Token 1306: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.8906728029251099
    2. 'iche' → logprob: -1.0156728029251099
    3. 'f' → logprob: -2.3906726837158203
    4. 'ichage' → logprob: -3.0156726837158203
    5. '#' → logprob: -3.1406726837158203
    6. 'ich' → logprob: -3.3906726837158203
    7. 'fic' → logprob: -6.14067268371582
    8. 'print' → logprob: -7.01567268371582
    9. '%' → logprob: -7.26567268371582
    10. '```' → logprob: -7.39067268371582

Token 1307: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11218027025461197
    2. 'sum' → logprob: -3.112180233001709
    3. '(sum' → logprob: -3.237180233001709
    4. '(dp' → logprob: -4.237180233001709
    5. '(print' → logprob: -5.237180233001709
    6. 'dp' → logprob: -5.987180233001709
    7. 'r' → logprob: -10.487180709838867
    8. '   ' → logprob: -12.112180709838867
    9. ' print' → logprob: -12.612180709838867
    10. '(pr' → logprob: -12.612180709838867

Token 1308: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5018532276153564
    2. 'sum' → logprob: -1.7518532276153564
    3. 'print' → logprob: -1.7518532276153564
    4. '(dp' → logprob: -3.7518532276153564
    5. 'r' → logprob: -4.001852989196777
    6. '(sum' → logprob: -6.751852989196777
    7. 'm' → logprob: -7.001852989196777
    8. 's' → logprob: -7.376852989196777
    9. 'p' → logprob: -7.376852989196777
    10. 'result' → logprob: -7.501852989196777

Token 1309: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.050391387194395065
    2. '(dp' → logprob: -3.425391435623169
    3. '(print' → logprob: -4.55039119720459
    4. '(sum' → logprob: -5.80039119720459
    5. 'dp' → logprob: -6.30039119720459
    6. 'sum' → logprob: -6.92539119720459
    7. '```' → logprob: -9.55039119720459
    8. '(
' → logprob: -10.42539119720459
    9. '(' → logprob: -10.42539119720459
    10. '
' → logprob: -11.30039119720459

Token 1310: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00040958117460832
    2. '(print' → logprob: -8.500409126281738
    3. '```' → logprob: -9.125409126281738
    4. '(dp' → logprob: -10.125409126281738
    5. 'dp' → logprob: -10.250409126281738
    6. '(sum' → logprob: -12.375409126281738
    7. '``' → logprob: -12.375409126281738
    8. 'sum' → logprob: -12.750409126281738
    9. '   ' → logprob: -13.375409126281738
    10. '
' → logprob: -13.375409126281738

Token 1311: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16035066545009613
    2. 'print' → logprob: -1.9103506803512573
    3. '(dp' → logprob: -9.285350799560547
    4. 'result' → logprob: -11.035350799560547
    5. 'max' → logprob: -11.160350799560547
    6. 'sum' → logprob: -13.535350799560547
    7. 'answer' → logprob: -14.035350799560547
    8. ' dp' → logprob: -14.035350799560547
    9. 'ans' → logprob: -16.410350799560547
    10. '(max' → logprob: -16.535350799560547

Token 1312: ' au' (ID: 2791)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.371605948312208e-05
    2. '```' → logprob: -9.875053405761719
    3. '(print' → logprob: -13.625053405761719
    4. '``' → logprob: -14.125053405761719
    5. ' print' → logprob: -16.12505340576172
    6. '
' → logprob: -16.37505340576172
    7. '`' → logprob: -16.75005340576172
    8. 'for' → logprob: -17.00005340576172
    9. '(' → logprob: -17.50005340576172
    10. '[' → logprob: -17.75005340576172

Token 1313: ' dernier' (ID: 27982)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00019853383128065616
    2. 'print' → logprob: -9.500198364257812
    3. '-' → logprob: -10.000198364257812
    4. '(n' → logprob: -10.500198364257812
    5. '[n' → logprob: -11.000198364257812
    6. '1' → logprob: -11.750198364257812
    7. '-n' → logprob: -12.000198364257812
    8. ' n' → logprob: -12.125198364257812
    9. '0' → logprob: -12.375198364257812
    10. 'index' → logprob: -12.500198364257812

Token 1314: ' état' (ID: 59181)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46227434277534485
    2. '(n' → logprob: -1.2122743129730225
    3. 'index' → logprob: -3.3372743129730225
    4. 'indice' → logprob: -3.8372743129730225
    5. '[n' → logprob: -5.212274551391602
    6. 'k' → logprob: -5.712274551391602
    7. ']' → logprob: -6.212274551391602
    8. '```' → logprob: -6.712274551391602
    9. '`' → logprob: -7.087274551391602
    10. 'print' → logprob: -7.212274551391602

Token 1315: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.688212614681106e-05
    2. '```' → logprob: -11.000017166137695
    3. '``' → logprob: -15.625017166137695
    4. ' print' → logprob: -18.375017166137695
    5. '
' → logprob: -19.500017166137695
    6. '(print' → logprob: -20.375017166137695
    7. '#print' → logprob: -20.500017166137695
    8. '[' → logprob: -21.500017166137695
    9. 'for' → logprob: -22.000017166137695
    10. '`' → logprob: -22.000017166137695

Token 1316: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.688212614681106e-05
    2. '```' → logprob: -11.000017166137695
    3. '``' → logprob: -16.125017166137695
    4. ' print' → logprob: -19.000017166137695
    5. '
' → logprob: -19.750017166137695
    6. '    
' → logprob: -23.000017166137695
    7. '#print' → logprob: -23.125017166137695
    8. '`' → logprob: -23.250017166137695
    9. '(print' → logprob: -23.500017166137695
    10. 'println' → logprob: -24.125017166137695

Token 1317: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0024855269584804773
    2. 'dp' → logprob: -6.002485752105713
    3. '(' → logprob: -11.752485275268555
    4. ' dp' → logprob: -13.627485275268555
    5. ' (' → logprob: -15.377485275268555
    6. '	dp' → logprob: -15.627485275268555
    7. '((' → logprob: -16.002485275268555
    8. '()' → logprob: -16.627485275268555
    9. '(
' → logprob: -16.752485275268555
    10. '(sum' → logprob: -17.002485275268555

Token 1318: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00070230319397524
    2. 'n' → logprob: -7.375702381134033
    3. '[-' → logprob: -9.625701904296875
    4. '(n' → logprob: -12.000701904296875
    5. '[' → logprob: -12.750701904296875
    6. ' n' → logprob: -15.750701904296875
    7. ' [' → logprob: -16.250701904296875
    8. '	n' → logprob: -16.500701904296875
    9. '][' → logprob: -16.625701904296875
    10. ')n' → logprob: -16.625701904296875

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.75
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -20.0
    6. '2' → logprob: -20.125
    7. '
' → logprob: -20.625
    8. '１' → logprob: -21.375
    9. '``' → logprob: -21.75
    10. '`' → logprob: -22.5

Token 1320: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005244668107479811
    2. '])' → logprob: -5.255244731903076
    3. '})' → logprob: -12.255244255065918
    4. '))' → logprob: -13.380244255065918
    5. '`)' → logprob: -13.630244255065918
    6. ']' → logprob: -14.380244255065918
    7. ')])' → logprob: -14.380244255065918
    8. '%)' → logprob: -14.505244255065918
    9. ' )' → logprob: -15.005244255065918
    10. '）' → logprob: -15.005244255065918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1318
Tokens correctement prédits (1ère position, stricte): 301
Tokens correctement prédits (1ère position, avec adaptation): 331
Tokens correctement prédits (top 10): 794
Précision stricte (1ère position): 22.84%
Précision adaptée (1ère position): 25.11%
Précision (top 10): 60.24%
================================================================================
