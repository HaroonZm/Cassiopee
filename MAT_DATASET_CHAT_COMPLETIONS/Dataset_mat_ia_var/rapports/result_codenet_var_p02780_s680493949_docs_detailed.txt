================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def max_expected_value_subarray(n, k, p):
    """
    Calcule la valeur d'espérance maximale parmi toutes les sous-listes de longueur k de la liste p,
    en supposant que chaque élément p_i représente la valeur maximale possible lors du lancer d'un dé
    à p_i faces, donc l'espérance pour ce dé est (p_i + 1)/2. La somme maximale trouvée est convertie
    en valeur d'espérance globale.

    Args:
        n (int): Taille de la liste p.
        k (int): Longueur des sous-listes considérées.
        p (list of int): Liste des valeurs maximales possibles pour chaque élément.

    Returns:
        float: La valeur d'espérance maximale calculée parmi toutes les sous-listes de taille k.
    """

    # Initialisation pour la somme de la première fenêtre de longueur k
    before_pi = p[0]  # Premier élément de la fenêtre courante
    before_sum = sum(p[0:k]) + 0.0  # Somme initiale de la première sous-liste de longueur k, conversion explicite en float
    suml = [sum(p[0:k])]  # Liste pour stocker la somme de chaque sous-liste de taille k

    # Parcourt toutes les sous-listes consécutives de taille k en mettant à jour efficacement la somme
    for i in range(1, n - k + 1):
        # Met à jour la somme courante en retirant l'élément sortant et en ajoutant le nouvel élément entrant dans la fenêtre
        before_sum = before_sum - before_pi + p[i + k - 1]
        suml.append(before_sum)  # Ajoute la somme de la fenêtre courante à la liste
        before_pi = p[i]         # Met à jour l'élément sortant pour la prochaine itération

    # Calcule l'espérance maximale : (somme maximale des sous-listes + k) / 2.0
    # (Chaque élément p_i correspond à une valeur d'attente de (p_i + 1)/2, donc la formule globale s'applique)
    return (max(suml) + k) / 2.0


def main():
    """
    Fonction principale pour lire les entrées utilisateur, calculer l'espérance maximale et afficher le résultat.
    """
    # Lecture de deux entiers n et k à partir de l'entrée standard, séparés par un espace
    n, k = map(int, input().split())

    # Lecture de la liste entière p à partir de l'entrée standard
    p = list(map(int, input().split()))

    # Calcul de l'espérance maximale via l'appel de la fonction dédiée
    result = max_expected_value_subarray(n, k, p)

    # Affichage du résultat calculé
    print(result)


# Si ce fichier est exécuté en tant que script principal, lance la fonction main()
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' max' (ID: 2999)
  → Token d'amorce (pas de prédiction)

Token 2: '_expected' (ID: 79906)
  → Token d'amorce (pas de prédiction)

Token 3: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12634466588497162
    2. '_value' → logprob: -2.376344680786133
    3. '_score' → logprob: -4.376344680786133
    4. '_return' → logprob: -5.251344680786133
    5. '_probability' → logprob: -6.501344680786133
    6. '_output' → logprob: -7.251344680786133
    7. '_space' → logprob: -7.251344680786133
    8. ' _' → logprob: -7.376344680786133
    9. '_entropy' → logprob: -7.376344680786133
    10. '_profit' → logprob: -7.501344680786133

Token 4: '_sub' (ID: 11572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09006672352552414
    2. '_' → logprob: -2.46506667137146
    3. '(_' → logprob: -7.965066909790039
    4. '(_:' → logprob: -7.965066909790039
    5. '_:' → logprob: -8.715066909790039
    6. '```' → logprob: -9.340066909790039
    7. '_(' → logprob: -10.090066909790039
    8. '(:' → logprob: -10.340066909790039
    9. '():' → logprob: -10.715066909790039
    10. '(_)' → logprob: -11.465066909790039

Token 5: 'array' (ID: 3361)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.08158820867538452
    2. 'string' → logprob: -2.7065882682800293
    3. 'set' → logprob: -5.581588268280029
    4. 'tree' → logprob: -5.831588268280029
    5. 'array' → logprob: -6.331588268280029
    6. '_sequence' → logprob: -6.831588268280029
    7. 'seq' → logprob: -7.456588268280029
    8. 'script' → logprob: -7.956588268280029
    9. 'graph' → logprob: -7.956588268280029
    10. 'problem' → logprob: -9.081587791442871

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1714690625667572
    2. '_' → logprob: -2.04646897315979
    3. '(_' → logprob: -4.671469211578369
    4. '(_:' → logprob: -4.796469211578369
    5. '_:' → logprob: -5.171469211578369
    6. '```' → logprob: -6.046469211578369
    7. '(:' → logprob: -7.421469211578369
    8. '():' → logprob: -7.421469211578369
    9. '_(' → logprob: -8.546468734741211
    10. '(s' → logprob: -9.046468734741211

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17861832678318024
    2. '):' → logprob: -2.3036184310913086
    3. ')' → logprob: -2.8036184310913086
    4. '_' → logprob: -6.553618431091309
    5. '<|end|>' → logprob: -8.053618431091309
    6. '_,' → logprob: -8.303618431091309
    7. '```' → logprob: -8.678618431091309
    8. 's' → logprob: -8.678618431091309
    9. '[' → logprob: -9.053618431091309
    10. ':' → logprob: -9.678618431091309

Token 8: ' k' (ID: 372)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.445594847202301
    2. ' arr' → logprob: -1.1955947875976562
    3. ' sequence' → logprob: -4.195594787597656
    4. ' lst' → logprob: -4.445594787597656
    5. ' a' → logprob: -4.570594787597656
    6. ' k' → logprob: -5.445594787597656
    7. 'array' → logprob: -5.945594787597656
    8. 'arr' → logprob: -6.195594787597656
    9. ' m' → logprob: -6.320594787597656
    10. ' x' → logprob: -6.695594787597656

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01548707950860262
    2. ')' → logprob: -4.890487194061279
    3. ',' → logprob: -4.890487194061279
    4. ':' → logprob: -8.640486717224121
    5. '```' → logprob: -9.765486717224121
    6. ''):' → logprob: -10.390486717224121
    7. '):
' → logprob: -10.515486717224121
    8. '**' → logprob: -12.265486717224121
    9. '_' → logprob: -12.390486717224121
    10. '),' → logprob: -12.640486717224121

Token 10: ' p' (ID: 275)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3599146604537964
    2. ' array' → logprob: -1.9849146604537964
    3. 'arr' → logprob: -2.484914779663086
    4. ' lst' → logprob: -3.859914779663086
    5. 'a' → logprob: -3.984914779663086
    6. ' a' → logprob: -4.109914779663086
    7. 'array' → logprob: -4.609914779663086
    8. ' sequence' → logprob: -5.734914779663086
    9. ' nums' → logprob: -5.734914779663086
    10. ' numbers' → logprob: -6.484914779663086

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00436532124876976
    2. ')' → logprob: -5.87936544418335
    3. ',' → logprob: -7.00436544418335
    4. ':' → logprob: -7.50436544418335
    5. '):
' → logprob: -10.504364967346191
    6. ''):' → logprob: -10.754364967346191
    7. '```' → logprob: -10.754364967346191
    8. '**' → logprob: -12.129364967346191
    9. '_' → logprob: -12.629364967346191
    10. ')：' → logprob: -12.879364967346191

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006441561505198479
    2. '```' → logprob: -5.506441593170166
    3. '_:' → logprob: -7.506441593170166
    4. '   ' → logprob: -8.006441116333008
    5. '():' → logprob: -8.256441116333008
    6. '_' → logprob: -8.256441116333008
    7. '(:' → logprob: -8.381441116333008
    8. ':
' → logprob: -9.006441116333008
    9. '(' → logprob: -9.006441116333008
    10. '':' → logprob: -9.131441116333008

Token 13: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20314531028270721
    2. '```' → logprob: -1.9531452655792236
    3. '`' → logprob: -4.453145503997803
    4. 'max' → logprob: -4.828145503997803
    5. '``' → logprob: -5.328145503997803
    6. '_' → logprob: -6.078145503997803
    7. ''' → logprob: -6.203145503997803
    8. '       ' → logprob: -6.703145503997803
    9. '    
' → logprob: -6.703145503997803
    10. '\' → logprob: -6.703145503997803

Token 14: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6283321380615234
    2. '   ' → logprob: -2.5033321380615234
    3. ' """' → logprob: -2.7533321380615234
    4. 'i' → logprob: -2.8783321380615234
    5. '"""' → logprob: -3.0033321380615234
    6. ')' → logprob: -3.3783321380615234
    7. 'r' → logprob: -3.8783321380615234
    8. 'max' → logprob: -4.003332138061523
    9. '#' → logprob: -4.253332138061523
    10. '```' → logprob: -4.253332138061523

Token 15: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.09551994502544403
    2. 'Calculate' → logprob: -3.72052001953125
    3. ' """' → logprob: -3.84552001953125
    4. ''''' → logprob: -4.59552001953125
    5. 'Find' → logprob: -4.97052001953125
    6. '   ' → logprob: -4.97052001953125
    7. '"""
' → logprob: -5.59552001953125
    8. 'Returns' → logprob: -5.84552001953125
    9. 'Calcul' → logprob: -6.34552001953125
    10. ' Calculates' → logprob: -6.47052001953125

Token 16: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4749138653278351
    2. 'culate' → logprob: -0.9749138355255127
    3. 'cul' → logprob: -7.724914073944092
    4. 'cula' → logprob: -8.724913597106934
    5. 'culator' → logprob: -9.474913597106934
    6. 'culated' → logprob: -10.224913597106934
    7. '
' → logprob: -11.099913597106934
    8. 'cu' → logprob: -11.224913597106934
    9. 'cular' → logprob: -11.224913597106934
    10. '"""
' → logprob: -11.474913597106934

Token 17: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000850009499117732
    2. 's' → logprob: -7.625850200653076
    3. 'z' → logprob: -9.625849723815918
    4. 'te' → logprob: -10.125849723815918
    5. 'u' → logprob: -10.250849723815918
    6. 'm' → logprob: -10.250849723815918
    7. 'rate' → logprob: -10.375849723815918
    8. '```' → logprob: -10.375849723815918
    9. '_' → logprob: -10.625849723815918
    10. 'd' → logprob: -11.000849723815918

Token 18: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021621469408273697
    2. '   ' → logprob: -4.8966217041015625
    3. '  ' → logprob: -5.0216217041015625
    4. ' valeur' → logprob: -5.5216217041015625
    5. 's' → logprob: -6.7716217041015625
    6. ' meilleure' → logprob: -7.2716217041015625
    7. ' moyenne' → logprob: -7.7716217041015625
    8. ' meilleur' → logprob: -8.146621704101562
    9. 'r' → logprob: -8.896621704101562
    10. ' space' → logprob: -9.209121704101562

Token 19: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4184589385986328
    2. '_' → logprob: -1.1684589385986328
    3. ' maximale' → logprob: -4.293458938598633
    4. '  ' → logprob: -5.668458938598633
    5. '_max' → logprob: -5.793458938598633
    6. '   ' → logprob: -6.043458938598633
    7. 's' → logprob: -6.293458938598633
    8. ''' → logprob: -6.418458938598633
    9. ' max' → logprob: -7.168458938598633
    10. 'r' → logprob: -7.418458938598633

Token 20: ''esp' (ID: 73244)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3323628902435303
    2. ''' → logprob: -1.3323628902435303
    3. '_' → logprob: -4.207363128662109
    4. ''esp' → logprob: -6.957363128662109
    5. ''espace' → logprob: -7.207363128662109
    6. '_e' → logprob: -7.957363128662109
    7. ''é' → logprob: -8.08236312866211
    8. 'u' → logprob: -8.33236312866211
    9. 'es' → logprob: -8.33236312866211
    10. 'a' → logprob: -8.33236312866211

Token 21: 'érance' (ID: 122504)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.288115918636322
    2. 'érance' → logprob: -1.5381159782409668
    3. 'érée' → logprob: -3.538115978240967
    4. 'ér' → logprob: -6.163115978240967
    5. 'e' → logprob: -7.163115978240967
    6. '_' → logprob: -7.288115978240967
    7. 'éré' → logprob: -7.913115978240967
    8. 'ée' → logprob: -8.038115501403809
    9. 'érence' → logprob: -8.038115501403809
    10. '   ' → logprob: -8.288115501403809

Token 22: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5355296730995178
    2. ' de' → logprob: -1.410529613494873
    3. ' d' → logprob: -2.660529613494873
    4. '  ' → logprob: -3.410529613494873
    5. ''' → logprob: -4.160529613494873
    6. ' _' → logprob: -4.660529613494873
    7. ' maximale' → logprob: -4.785529613494873
    8. 'de' → logprob: -5.035529613494873
    9. ')' → logprob: -5.035529613494873
    10. '   ' → logprob: -5.535529613494873

Token 23: ' parmi' (ID: 51713)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4664768874645233
    2. ' de' → logprob: -1.5914769172668457
    3. ' d' → logprob: -2.3414769172668457
    4. '   ' → logprob: -3.4664769172668457
    5. '_' → logprob: -4.216476917266846
    6. '  ' → logprob: -4.716476917266846
    7. '    ' → logprob: -5.341476917266846
    8. 'de' → logprob: -5.716476917266846
    9. 'd' → logprob: -6.216476917266846
    10. ')' → logprob: -6.466476917266846

Token 24: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07814335823059082
    2. 'les' → logprob: -3.078143358230591
    3. '   ' → logprob: -4.953143119812012
    4. ' toutes' → logprob: -4.953143119812012
    5. '```' → logprob: -5.203143119812012
    6. ' tous' → logprob: -5.703143119812012
    7. '    ' → logprob: -5.953143119812012
    8. 's' → logprob: -6.953143119812012
    9. ' ' → logprob: -7.703143119812012
    10. ' ' → logprob: -8.203143119812012

Token 25: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3393946886062622
    2. '_' → logprob: -2.5893945693969727
    3. 'les' → logprob: -2.7143945693969727
    4. '(' → logprob: -2.7143945693969727
    5. '   ' → logprob: -3.2143945693969727
    6. ' ' → logprob: -4.214394569396973
    7. 's' → logprob: -4.964394569396973
    8. '<|end|>' → logprob: -5.339394569396973
    9. '```' → logprob: -5.589394569396973
    10. ')' → logprob: -6.839394569396973

Token 26: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33675235509872437
    2. ' sous' → logprob: -1.4617524147033691
    3. '   ' → logprob: -3.461752414703369
    4. ' ' → logprob: -4.711752414703369
    5. '_s' → logprob: -4.836752414703369
    6. ' s' → logprob: -6.336752414703369
    7. '    ' → logprob: -6.961752414703369
    8. '  ' → logprob: -7.586752414703369
    9. ' ' → logprob: -7.586752414703369
    10. '	s' → logprob: -8.086751937866211

Token 27: '-list' (ID: 18463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6044530272483826
    2. '_' → logprob: -0.9794530272483826
    3. '-' → logprob: -3.4794530868530273
    4. '_list' → logprob: -3.7294530868530273
    5. '_s' → logprob: -4.979453086853027
    6. '_sequences' → logprob: -5.354453086853027
    7. 's' → logprob: -6.104453086853027
    8. '_chain' → logprob: -6.354453086853027
    9. '\' → logprob: -6.604453086853027
    10. 'chain' → logprob: -6.854453086853027

Token 28: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10015092045068741
    2. 'istes' → logprob: -2.9751508235931396
    3. 'tes' → logprob: -4.225151062011719
    4. 'ices' → logprob: -4.600151062011719
    5. 'ces' → logprob: -5.350151062011719
    6. 'ques' → logprob: -6.225151062011719
    7. 'ettes' → logprob: -6.475151062011719
    8. 'ections' → logprob: -6.725151062011719
    9. '```' → logprob: -6.850151062011719
    10. 'e' → logprob: -7.100151062011719

Token 29: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3555488884449005
    2. ' ' → logprob: -2.355548858642578
    3. ' d' → logprob: -2.730548858642578
    4. '   ' → logprob: -2.855548858642578
    5. 'de' → logprob: -4.230548858642578
    6. '_' → logprob: -4.480548858642578
    7. '```' → logprob: -4.855548858642578
    8. ' des' → logprob: -5.230548858642578
    9. 'd' → logprob: -5.230548858642578
    10. ' (' → logprob: -5.480548858642578

Token 30: ' longueur' (ID: 104613)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.40865060687065125
    2. ' n' → logprob: -1.9086506366729736
    3. 'n' → logprob: -3.4086506366729736
    4. ' p' → logprob: -3.5336506366729736
    5. ' longueur' → logprob: -3.5336506366729736
    6. '```' → logprob: -4.0336503982543945
    7. 'l' → logprob: -4.4086503982543945
    8. 's' → logprob: -4.9086503982543945
    9. ' longue' → logprob: -5.2836503982543945
    10. 'p' → logprob: -5.5336503982543945

Token 31: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.24808630347251892
    2. ' p' → logprob: -2.9980862140655518
    3. ' <=' → logprob: -3.2480862140655518
    4. ' _' → logprob: -3.6230862140655518
    5. ' n' → logprob: -3.9980862140655518
    6. ' ' → logprob: -4.248086452484131
    7. ' au' → logprob: -4.373086452484131
    8. '_' → logprob: -4.498086452484131
    9. 'au' → logprob: -5.123086452484131
    10. ' `' → logprob: -5.123086452484131

Token 32: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8168240785598755
    2. ' ' → logprob: -1.1918240785598755
    3. '```' → logprob: -3.191823959350586
    4. ',' → logprob: -3.441823959350586
    5. ' ,' → logprob: -3.441823959350586
    6. '_' → logprob: -3.816823959350586
    7. ' de' → logprob: -4.066823959350586
    8. '.' → logprob: -4.191823959350586
    9. 's' → logprob: -4.691823959350586
    10. 'u' → logprob: -4.816823959350586

Token 33: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17859239876270294
    2. ' n' → logprob: -1.9285924434661865
    3. 'n' → logprob: -4.428592205047607
    4. ' l' → logprob: -6.303592205047607
    5. ' `' → logprob: -7.178592205047607
    6. ' ' → logprob: -7.178592205047607
    7. 'la' → logprob: -7.178592205047607
    8. 'l' → logprob: -7.428592205047607
    9. ' ' → logprob: -7.678592205047607
    10. ' code' → logprob: -8.303592681884766

Token 34: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6273470520973206
    2. ' n' → logprob: -1.6273469924926758
    3. ' liste' → logprob: -2.377346992492676
    4. 'n' → logprob: -2.502346992492676
    5. ' tableau' → logprob: -3.627346992492676
    6. ' input' → logprob: -3.752346992492676
    7. 'liste' → logprob: -5.252346992492676
    8. ' ' → logprob: -5.377346992492676
    9. ' table' → logprob: -5.502346992492676
    10. ' list' → logprob: -5.627346992492676

Token 35: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8765871524810791
    2. ' d' → logprob: -1.751587152481079
    3. ' de' → logprob: -1.876587152481079
    4. ' `' → logprob: -2.751587152481079
    5. ' s' → logprob: -2.876587152481079
    6. '   ' → logprob: -3.251587152481079
    7. ' suivante' → logprob: -4.5015869140625
    8. ' _' → logprob: -4.8765869140625
    9. ' ```' → logprob: -4.8765869140625
    10. '```' → logprob: -5.0015869140625

Token 36: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29753273725509644
    2. ':' → logprob: -2.047532796859741
    3. ')' → logprob: -3.422532796859741
    4. ' :' → logprob: -3.672532796859741
    5. '.' → logprob: -3.797532796859741
    6. '):' → logprob: -3.797532796859741
    7. ' ' → logprob: -4.797532558441162
    8. ',' → logprob: -5.172532558441162
    9. ':
' → logprob: -6.547532558441162
    10. '):
' → logprob: -6.547532558441162

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2937999963760376
    2. ',' → logprob: -1.5437999963760376
    3. '.' → logprob: -1.6687999963760376
    4. ':' → logprob: -2.168799877166748
    5. ' :' → logprob: -2.543799877166748
    6. ' ,' → logprob: -3.168799877166748
    7. ' ' → logprob: -4.168799877166748
    8. ')' → logprob: -4.668799877166748
    9. ''' → logprob: -4.668799877166748
    10. ' en' → logprob: -4.793799877166748

Token 38: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2851828336715698
    2. '.' → logprob: -1.7851828336715698
    3. '   ' → logprob: -1.9101828336715698
    4. ' en' → logprob: -2.4101829528808594
    5. ',' → logprob: -2.6601829528808594
    6. ' ,' → logprob: -2.7851829528808594
    7. ' :' → logprob: -3.1601829528808594
    8. ':' → logprob: -3.2851829528808594
    9. ''' → logprob: -3.5351829528808594
    10. ' .' → logprob: -4.410182952880859

Token 39: ' suppos' (ID: 167611)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.5512253046035767
    2. 'util' → logprob: -2.176225185394287
    3. 'consider' → logprob: -2.301225185394287
    4. ' prenant' → logprob: -2.926225185394287
    5. ' considér' → logprob: -3.551225185394287
    6. ' retourn' → logprob: -4.051225185394287
    7. 'return' → logprob: -4.176225185394287
    8. 's' → logprob: -4.426225185394287
    9. ' chois' → logprob: -4.926225185394287
    10. ' return' → logprob: -4.926225185394287

Token 40: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0019413690315559506
    2. 'é' → logprob: -6.501941204071045
    3. 'er' → logprob: -9.001941680908203
    4. 'ée' → logprob: -9.001941680908203
    5. 'ent' → logprob: -10.126941680908203
    6. 'e' → logprob: -10.126941680908203
    7. '#' → logprob: -10.876941680908203
    8. '```' → logprob: -11.751941680908203
    9. 'Ant' → logprob: -11.751941680908203
    10. 'ément' → logprob: -11.751941680908203

Token 41: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.02977016009390354
    2. '   ' → logprob: -5.029770374298096
    3. ' that' → logprob: -5.279770374298096
    4. ' qu' → logprob: -5.654770374298096
    5. ' un' → logprob: -5.779770374298096
    6. ' ' → logprob: -6.279770374298096
    7. ' des' → logprob: -6.529770374298096
    8. ',' → logprob: -6.779770374298096
    9. ' la' → logprob: -6.779770374298096
    10. ' une' → logprob: -6.904770374298096

Token 42: ' chaque' (ID: 21194)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.13103869557380676
    2. 'p' → logprob: -3.6310386657714844
    3. ' la' → logprob: -3.7560386657714844
    4. ' chaque' → logprob: -4.381038665771484
    5. '    ' → logprob: -4.631038665771484
    6. ' les' → logprob: -4.756038665771484
    7. ' toutes' → logprob: -4.881038665771484
    8. ' ' → logprob: -5.006038665771484
    9. ' l' → logprob: -5.881038665771484
    10. '<|end|>' → logprob: -6.006038665771484

Token 43: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.5734919309616089
    2. 'élé' → logprob: -1.1984919309616089
    3. ' valeur' → logprob: -2.3234920501708984
    4. ' element' → logprob: -3.9484920501708984
    5. ' sous' → logprob: -4.823492050170898
    6. ' p' → logprob: -5.948492050170898
    7. 'element' → logprob: -6.573492050170898
    8. 's' → logprob: -7.073492050170898
    9. ' ' → logprob: -7.323492050170898
    10. 'val' → logprob: -7.823492050170898

Token 44: ' p' (ID: 275)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07571619004011154
    2. ' a' → logprob: -3.575716257095337
    3. ' ' → logprob: -4.325716018676758
    4. ' est' → logprob: -4.450716018676758
    5. ' p' → logprob: -4.450716018676758
    6. 'de' → logprob: -6.575716018676758
    7. '<|end|>' → logprob: -7.200716018676758
    8. ' ' → logprob: -7.325716018676758
    9. 'a' → logprob: -7.575716018676758
    10. 's' → logprob: -7.575716018676758

Token 45: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.244903326034546
    2. ' a' → logprob: -1.369903326034546
    3. ' est' → logprob: -1.494903326034546
    4. 'est' → logprob: -2.619903326034546
    5. '   ' → logprob: -3.869903326034546
    6. ' de' → logprob: -4.119903564453125
    7. '```' → logprob: -4.119903564453125
    8. '[' → logprob: -4.619903564453125
    9. '_' → logprob: -4.744903564453125
    10. 'a' → logprob: -5.119903564453125

Token 46: ' représente' (ID: 88912)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0958738625049591
    2. ' a' → logprob: -3.3458738327026367
    3. 'est' → logprob: -3.4708738327026367
    4. ' représente' → logprob: -5.220873832702637
    5. '_' → logprob: -5.595873832702637
    6. 'a' → logprob: -5.720873832702637
    7. ' de' → logprob: -5.845873832702637
    8. ' vaut' → logprob: -6.220873832702637
    9. ' is' → logprob: -6.970873832702637
    10. ' ' → logprob: -7.595873832702637

Token 47: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3581947386264801
    2. ' la' → logprob: -1.3581947088241577
    3. ' ' → logprob: -3.8581948280334473
    4. 'la' → logprob: -4.858194828033447
    5. 'une' → logprob: -4.983194828033447
    6. ' un' → logprob: -5.983194828033447
    7. 'prob' → logprob: -6.358194828033447
    8. ' l' → logprob: -6.983194828033447
    9. 'l' → logprob: -7.608194828033447
    10. ' probabil' → logprob: -7.733194828033447

Token 48: ' valeur' (ID: 41664)
  Prédit: ' prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.30449244379997253
    2. ' valeur' → logprob: -1.804492473602295
    3. 'prob' → logprob: -2.429492473602295
    4. ' probabil' → logprob: -5.304492473602295
    5. 'val' → logprob: -6.679492473602295
    6. ' esp' → logprob: -7.554492473602295
    7. 'pro' → logprob: -7.804492473602295
    8. ' pro' → logprob: -7.804492473602295
    9. ' moyenne' → logprob: -7.804492473602295
    10. 's' → logprob: -8.179491996765137

Token 49: ' maximale' (ID: 76380)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0848970413208008
    2. ' de' → logprob: -1.8348970413208008
    3. ' attend' → logprob: -2.709897041320801
    4. '_' → logprob: -2.959897041320801
    5. ' maximale' → logprob: -3.209897041320801
    6. 's' → logprob: -3.209897041320801
    7. '_expected' → logprob: -3.209897041320801
    8. ' attendu' → logprob: -3.209897041320801
    9. ' expected' → logprob: -3.459897041320801
    10. ' moyenne' → logprob: -3.709897041320801

Token 50: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5418387651443481
    2. '_' → logprob: -2.2918386459350586
    3. ' _' → logprob: -2.5418386459350586
    4. ' d' → logprob: -3.0418386459350586
    5. ' ' → logprob: -3.1668386459350586
    6. ' des' → logprob: -3.7918386459350586
    7. ' possible' → logprob: -3.9168386459350586
    8. '_max' → logprob: -4.291838645935059
    9. '_possible' → logprob: -4.416838645935059
    10. ' maximale' → logprob: -4.541838645935059

Token 51: ' lors' (ID: 15456)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45848822593688965
    2. '.' → logprob: -2.8334882259368896
    3. ' d' → logprob: -3.2084882259368896
    4. ' ' → logprob: -3.2084882259368896
    5. ',' → logprob: -3.3334882259368896
    6. ' ,' → logprob: -3.3334882259368896
    7. ' possible' → logprob: -3.9584882259368896
    8. '<|end|>' → logprob: -4.333488464355469
    9. ')' → logprob: -4.458488464355469
    10. 'possible' → logprob: -4.458488464355469

Token 52: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04049652814865112
    2. ' de' → logprob: -3.790496587753296
    3. '<|end|>' → logprob: -5.165496349334717
    4. ' des' → logprob: -5.415496349334717
    5. ' ' → logprob: -5.790496349334717
    6. ' du' → logprob: -5.915496349334717
    7. 'd' → logprob: -7.790496349334717
    8. '    ' → logprob: -8.040496826171875
    9. '_' → logprob: -9.415496826171875
    10. '   ' → logprob: -9.790496826171875

Token 53: ' lancer' (ID: 82697)
  Prédit: ' tir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tir' → logprob: -0.2877480685710907
    2. ' lancement' → logprob: -1.662748098373413
    3. ' test' → logprob: -4.037747859954834
    4. 'tir' → logprob: -4.412747859954834
    5. ' prochain' → logprob: -5.162747859954834
    6. ' prél' → logprob: -5.162747859954834
    7. ' lancer' → logprob: -5.412747859954834
    8. ' jeu' → logprob: -5.537747859954834
    9. ' choix' → logprob: -6.412747859954834
    10. ' passage' → logprob: -6.662747859954834

Token 54: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6579113602638245
    2. ' de' → logprob: -0.7829113602638245
    3. ' du' → logprob: -5.15791130065918
    4. '_' → logprob: -5.15791130065918
    5. ' ' → logprob: -5.28291130065918
    6. 's' → logprob: -5.28291130065918
    7. ' des' → logprob: -6.90791130065918
    8. 'd' → logprob: -7.40791130065918
    9. ',' → logprob: -8.03291130065918
    10. '(s' → logprob: -8.15791130065918

Token 55: ''un' (ID: 9788)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4160842001438141
    2. ' un' → logprob: -1.2910841703414917
    3. ''un' → logprob: -3.2910842895507812
    4. ''' → logprob: -4.541084289550781
    5. 'u' → logprob: -5.791084289550781
    6. ' u' → logprob: -6.416084289550781
    7. ' '' → logprob: -6.541084289550781
    8. 'un' → logprob: -6.541084289550781
    9. 's' → logprob: -6.666084289550781
    10. 'e' → logprob: -6.791084289550781

Token 56: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -1.494725227355957
    2. ' d' → logprob: -1.744725227355957
    3. ' dés' → logprob: -1.869725227355957
    4. 'dé' → logprob: -1.994725227355957
    5. ' ' → logprob: -2.244725227355957
    6. 'd' → logprob: -2.244725227355957
    7. 'dés' → logprob: -3.619725227355957
    8. ' die' → logprob: -4.119725227355957
    9. ' jet' → logprob: -4.119725227355957
    10. ' de' → logprob: -5.244725227355957

Token 57: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8783215880393982
    2. '.' → logprob: -1.253321647644043
    3. ',' → logprob: -2.253321647644043
    4. ' :' → logprob: -2.878321647644043
    5. '\n' → logprob: -3.503321647644043
    6. '\' → logprob: -3.628321647644043
    7. 's' → logprob: -4.003321647644043
    8. '_' → logprob: -4.503321647644043
    9. ' ' → logprob: -4.878321647644043
    10. ' ,' → logprob: -5.003321647644043

Token 58: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7005820870399475
    2. ',' → logprob: -1.7005820274353027
    3. '.' → logprob: -2.3255820274353027
    4. '):' → logprob: -2.8255820274353027
    5. ' )' → logprob: -3.3255820274353027
    6. ' de' → logprob: -3.4505820274353027
    7. ' ' → logprob: -4.075582027435303
    8. 's' → logprob: -4.325582027435303
    9. ':' → logprob: -4.325582027435303
    10. ' ):' → logprob: -4.575582027435303

Token 59: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.326426386833191
    2. ',' → logprob: -1.576426386833191
    3. '   ' → logprob: -1.951426386833191
    4. ' de' → logprob: -2.2014265060424805
    5. ' à' → logprob: -2.5764265060424805
    6. ')' → logprob: -3.7014265060424805
    7. 's' → logprob: -3.8264265060424805
    8. ' ' → logprob: -3.9514265060424805
    9. ' ,' → logprob: -4.0764265060424805
    10. '```' → logprob: -4.2014265060424805

Token 60: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06990107893943787
    2. '6' → logprob: -3.6949009895324707
    3. ' six' → logprob: -4.069900989532471
    4. ' faces' → logprob: -4.694900989532471
    5. 'n' → logprob: -5.569900989532471
    6. ' n' → logprob: -5.694900989532471
    7. 'faces' → logprob: -6.194900989532471
    8. '  ' → logprob: -6.319900989532471
    9. ' k' → logprob: -6.444900989532471
    10. '   ' → logprob: -7.319900989532471

Token 61: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7423652410507202
    2. '_i' → logprob: -0.7423652410507202
    3. 'i' → logprob: -4.11736536026001
    4. ' _' → logprob: -4.61736536026001
    5. ' i' → logprob: -4.86736536026001
    6. ' ' → logprob: -5.11736536026001
    7. '_k' → logprob: -6.36736536026001
    8. '_faces' → logprob: -6.61736536026001
    9. ' k' → logprob: -7.11736536026001
    10. '[i' → logprob: -7.61736536026001

Token 62: ' faces' (ID: 22060)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5168443918228149
    2. ':' → logprob: -1.641844391822815
    3. ':
' → logprob: -2.5168442726135254
    4. ')' → logprob: -3.8918442726135254
    5. '
' → logprob: -3.8918442726135254
    6. '):' → logprob: -4.266844272613525
    7. ' ' → logprob: -4.266844272613525
    8. '):
' → logprob: -4.641844272613525
    9. '.' → logprob: -4.766844272613525
    10. ',' → logprob: -5.016844272613525

Token 63: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21834753453731537
    2. ':' → logprob: -1.9683475494384766
    3. ':
' → logprob: -4.593347549438477
    4. ')' → logprob: -4.718347549438477
    5. '
' → logprob: -4.843347549438477
    6. '\n' → logprob: -4.843347549438477
    7. '):' → logprob: -5.093347549438477
    8. '\' → logprob: -6.093347549438477
    9. '```' → logprob: -6.093347549438477
    10. '"' → logprob: -6.718347549438477

Token 64: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.646912157535553
    2. ')' → logprob: -2.271912097930908
    3. ' ' → logprob: -2.271912097930908
    4. ',' → logprob: -2.646912097930908
    5. '):' → logprob: -3.021912097930908
    6. ' :' → logprob: -3.396912097930908
    7. ':' → logprob: -3.396912097930908
    8. ' )' → logprob: -4.271912097930908
    9. ' ,' → logprob: -4.521912097930908
    10. '    ' → logprob: -4.646912097930908

Token 65: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9126443862915039
    2. ' que' → logprob: -1.787644386291504
    3. ' chaque' → logprob: -2.162644386291504
    4. ' on' → logprob: -2.287644386291504
    5. '   ' → logprob: -2.787644386291504
    6. ' le' → logprob: -3.787644386291504
    7. ' l' → logprob: -3.787644386291504
    8. ' ' → logprob: -4.162644386291504
    9. ' ' → logprob: -4.287644386291504
    10. ' une' → logprob: -4.537644386291504

Token 66: ''esp' (ID: 73244)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04784693941473961
    2. ''' → logprob: -4.047846794128418
    3. ''esp' → logprob: -4.672846794128418
    4. 'e' → logprob: -5.422846794128418
    5. ' a' → logprob: -5.422846794128418
    6. ''ensemble' → logprob: -6.047846794128418
    7. ''a' → logprob: -6.047846794128418
    8. ''espace' → logprob: -7.047846794128418
    9. '   ' → logprob: -7.297846794128418
    10. ''ap' → logprob: -7.547846794128418

Token 67: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.023522768169641495
    2. 'érence' → logprob: -4.898522853851318
    3. 'ér' → logprob: -5.273522853851318
    4. 'é' → logprob: -5.898522853851318
    5. 'èce' → logprob: -6.148522853851318
    6. 'érer' → logprob: -6.773522853851318
    7. 'érience' → logprob: -7.023522853851318
    8. 'érant' → logprob: -7.148522853851318
    9. 'ace' → logprob: -7.523522853851318
    10. 'ère' → logprob: -7.898522853851318

Token 68: ' pour' (ID: 1930)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0305055379867554
    2. ' de' → logprob: -1.2805055379867554
    3. ' maximale' → logprob: -1.5305055379867554
    4. ' =' → logprob: -2.405505657196045
    5. ' d' → logprob: -3.530505657196045
    6. ' vaut' → logprob: -4.905505657196045
    7. ' max' → logprob: -5.655505657196045
    8. ' du' → logprob: -5.780505657196045
    9. '=' → logprob: -5.780505657196045
    10. ' is' → logprob: -6.030505657196045

Token 69: ' ce' (ID: 2357)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.38572564721107483
    2. ' chaque' → logprob: -1.6357256174087524
    3. ' ' → logprob: -2.885725736618042
    4. ' une' → logprob: -3.010725736618042
    5. ' ce' → logprob: -4.760725498199463
    6. 'un' → logprob: -5.260725498199463
    7. ' le' → logprob: -6.885725498199463
    8. 'une' → logprob: -6.885725498199463
    9. ' la' → logprob: -7.760725498199463
    10. ' ' → logprob: -7.885725498199463

Token 70: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -1.058490514755249
    2. ' p' → logprob: -1.933490514755249
    3. ' lancer' → logprob: -1.933490514755249
    4. 'dé' → logprob: -2.933490514755249
    5. ' d' → logprob: -3.308490514755249
    6. ' lancement' → logprob: -3.308490514755249
    7. ' élément' → logprob: -3.433490514755249
    8. ' dés' → logprob: -3.808490514755249
    9. ' dice' → logprob: -3.933490514755249
    10. ' ' → logprob: -4.058490753173828

Token 71: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11831120401620865
    2. ' de' → logprob: -3.7433111667633057
    3. ' ' → logprob: -3.8683111667633057
    4. '   ' → logprob: -4.118311405181885
    5. ' =' → logprob: -4.118311405181885
    6. 's' → logprob: -4.743311405181885
    7. ' d' → logprob: -5.118311405181885
    8. ' vaut' → logprob: -5.868311405181885
    9. 'est' → logprob: -6.368311405181885
    10. ' "' → logprob: -6.618311405181885

Token 72: ' (' (ID: 350)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.62447190284729
    2. ' (' → logprob: -1.24947190284729
    3. ' ' → logprob: -1.74947190284729
    4. '(p' → logprob: -6.749471664428711
    5. ' `' → logprob: -7.124471664428711
    6. 'p' → logprob: -7.874471664428711
    7. ' ```' → logprob: -8.749471664428711
    8. '(' → logprob: -8.999471664428711
    9. ' n' → logprob: -9.249471664428711
    10. ' `(' → logprob: -9.249471664428711

Token 73: 'p' (ID: 79)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5765926241874695
    2. 'p' → logprob: -0.9515926241874695
    3. ' (' → logprob: -3.4515926837921143
    4. '(p' → logprob: -3.9515926837921143
    5. '1' → logprob: -7.701592445373535
    6. ' ' → logprob: -8.076592445373535
    7. '(' → logprob: -8.326592445373535
    8. 'sum' → logprob: -10.201592445373535
    9. '0' → logprob: -10.451592445373535
    10. ' sum' → logprob: -10.576592445373535

Token 74: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.01101398654282093
    2. '[i' → logprob: -4.636013984680176
    3. '_' → logprob: -7.511013984680176
    4. 'i' → logprob: -8.511013984680176
    5. ' _' → logprob: -8.511013984680176
    6. '[_' → logprob: -9.886013984680176
    7. '   ' → logprob: -10.136013984680176
    8. ' +' → logprob: -10.386013984680176
    9. '_j' → logprob: -10.886013984680176
    10. '"_' → logprob: -10.886013984680176

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18001051247119904
    2. '+' → logprob: -1.8050105571746826
    3. ' -' → logprob: -9.180010795593262
    4. '   ' → logprob: -10.055010795593262
    5. ' ' → logprob: -11.055010795593262
    6. 's' → logprob: -11.305010795593262
    7. '1' → logprob: -11.555010795593262
    8. '-' → logprob: -11.555010795593262
    9. '_' → logprob: -11.805010795593262
    10. ' plus' → logprob: -11.805010795593262

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3868976831436157
    2. ' ' → logprob: -1.1368976831436157
    3. ' ' → logprob: -10.886898040771484
    4. '  ' → logprob: -12.761898040771484
    5. '   ' → logprob: -13.636898040771484
    6. '```' → logprob: -13.636898040771484
    7. ' p' → logprob: -14.136898040771484
    8. 'p' → logprob: -14.886898040771484
    9. ' ' → logprob: -15.199398040771484
    10. '0' → logprob: -15.261898040771484

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007115975022315979
    2. ' ' → logprob: -7.250711441040039
    3. ' ' → logprob: -14.500711441040039
    4. '   ' → logprob: -15.000711441040039
    5. '  ' → logprob: -15.125711441040039
    6. '```' → logprob: -15.125711441040039
    7. 'p' → logprob: -16.75071144104004
    8. '0' → logprob: -17.37571144104004
    9. '

' → logprob: -17.62571144104004
    10. '2' → logprob: -17.93821144104004

Token 78: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015165306394919753
    2. ')//' → logprob: -7.376516342163086
    3. ')/' → logprob: -7.626516342163086
    4. ' )' → logprob: -7.876516342163086
    5. '")' → logprob: -11.751516342163086
    6. '）' → logprob: -12.751516342163086
    7. '//' → logprob: -13.001516342163086
    8. ' ' → logprob: -13.126516342163086
    9. '')' → logprob: -13.376516342163086
    10. ' //' → logprob: -13.626516342163086

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005930813029408455
    2. ' ' → logprob: -5.1309309005737305
    3. '```' → logprob: -14.00593090057373
    4. '6' → logprob: -14.38093090057373
    5. '   ' → logprob: -15.25593090057373
    6. ' ' → logprob: -16.068429946899414
    7. '1' → logprob: -16.380929946899414
    8. '  ' → logprob: -16.568429946899414
    9. '3' → logprob: -16.880929946899414
    10. '`' → logprob: -16.943429946899414

Token 80: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.098581463098526
    2. '   ' → logprob: -2.598581552505493
    3. '):' → logprob: -4.973581314086914
    4. ' )' → logprob: -5.473581314086914
    5. ')
' → logprob: -6.098581314086914
    6. '
' → logprob: -6.348581314086914
    7. ' ' → logprob: -6.473581314086914
    8. '):
' → logprob: -7.098581314086914
    9. '*' → logprob: -8.348581314086914
    10. ' 
' → logprob: -8.598581314086914

Token 81: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06523006409406662
    2. '\n' → logprob: -3.815230131149292
    3. '
' → logprob: -3.940230131149292
    4. '    
' → logprob: -4.690229892730713
    5. '\' → logprob: -4.940229892730713
    6. '"' → logprob: -6.940229892730713
    7. 'n' → logprob: -7.065229892730713
    8. '"""' → logprob: -7.690229892730713
    9. ')' → logprob: -7.815229892730713
    10. '```' → logprob: -7.940229892730713

Token 82: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29008394479751587
    2. '_' → logprob: -1.415083885192871
    3. ' _' → logprob: -6.290083885192871
    4. 'e' → logprob: -6.540083885192871
    5. 'r' → logprob: -7.040083885192871
    6. '  ' → logprob: -7.040083885192871
    7. 's' → logprob: -7.165083885192871
    8. 'n' → logprob: -7.790083885192871
    9. '   ' → logprob: -8.040083885192871
    10. ')' → logprob: -8.290083885192871

Token 83: ' maximale' (ID: 76380)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2564502954483032
    2. '_' → logprob: -2.3814501762390137
    3. ' de' → logprob: -2.5064501762390137
    4. ' maximale' → logprob: -3.7564501762390137
    5. ' ' → logprob: -5.006450176239014
    6. ' _' → logprob: -5.756450176239014
    7. ' )' → logprob: -6.256450176239014
    8. ' s' → logprob: -6.381450176239014
    9. ')' → logprob: -6.506450176239014
    10. 's' → logprob: -6.506450176239014

Token 84: ' trouv' (ID: 40254)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03207273408770561
    2. ' de' → logprob: -4.4070725440979
    3. '_' → logprob: -5.0320725440979
    4. ' _' → logprob: -5.7820725440979
    5. '_des' → logprob: -5.9070725440979
    6. ' maximale' → logprob: -6.2820725440979
    7. ' possible' → logprob: -6.9070725440979
    8. '_possible' → logprob: -7.4070725440979
    9. ' continue' → logprob: -7.9070725440979
    10. ' d' → logprob: -8.282073020935059

Token 85: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.17380301654338837
    2. 'e' → logprob: -2.4238030910491943
    3. 'é' → logprob: -2.6738030910491943
    4. '_' → logprob: -6.423802852630615
    5. 'ées' → logprob: -9.673803329467773
    6. '   ' → logprob: -9.798803329467773
    7. 'és' → logprob: -9.923803329467773
    8. '_e' → logprob: -10.173803329467773
    9. 'a' → logprob: -10.548803329467773
    10. '__' → logprob: -11.048803329467773

Token 86: ' est' (ID: 893)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.42547059059143066
    2. ' ' → logprob: -1.9254705905914307
    3. ' de' → logprob: -2.5504705905914307
    4. ' est' → logprob: -3.4254705905914307
    5. '<|end|>' → logprob: -3.5504705905914307
    6. ' s' → logprob: -4.925470352172852
    7. ',' → logprob: -5.050470352172852
    8. ' d' → logprob: -5.050470352172852
    9. ' entre' → logprob: -5.675470352172852
    10. ' =' → logprob: -5.675470352172852

Token 87: ' convert' (ID: 8452)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.094874382019043
    2. ' ég' → logprob: -1.719874382019043
    3. ' calcul' → logprob: -2.219874382019043
    4. ' retourn' → logprob: -2.344874382019043
    5. ' la' → logprob: -3.094874382019043
    6. '<|end|>' → logprob: -3.969874382019043
    7. ' =' → logprob: -4.219874382019043
    8. ' "' → logprob: -4.469874382019043
    9. ' obten' → logprob: -4.594874382019043
    10. ' alors' → logprob: -4.844874382019043

Token 88: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.28000426292419434
    2. 'é' → logprob: -1.5300042629241943
    3. 'e' → logprob: -3.6550042629241943
    4. 'rée' → logprob: -7.780004501342773
    5. 'u' → logprob: -8.155004501342773
    6. ' é' → logprob: -8.530004501342773
    7. '   ' → logprob: -8.530004501342773
    8. 'r' → logprob: -9.280004501342773
    9. '_' → logprob: -9.780004501342773
    10. 'ue' → logprob: -9.905004501342773

Token 89: '
' (ID: 198)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0022410124074667692
    2. 'en' → logprob: -6.377241134643555
    3. ' into' → logprob: -9.127241134643555
    4. '_' → logprob: -9.627241134643555
    5. '_en' → logprob: -9.627241134643555
    6. ' ' → logprob: -10.252241134643555
    7. ' à' → logprob: -10.252241134643555
    8. ' _' → logprob: -10.502241134643555
    9. '_return' → logprob: -10.627241134643555
    10. '   ' → logprob: -10.877241134643555

Token 90: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0031036846339702606
    2. 'en' → logprob: -6.628103733062744
    3. '   ' → logprob: -7.003103733062744
    4. ' ' → logprob: -8.378103256225586
    5. '_en' → logprob: -9.128103256225586
    6. 'e' → logprob: -9.628103256225586
    7. ')' → logprob: -9.878103256225586
    8. '```' → logprob: -10.003103256225586
    9. '_' → logprob: -10.253103256225586
    10. ',' → logprob: -10.253103256225586

Token 91: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0011593853123486042
    2. 'en' (adapté à ' en') → logprob: -7.376159191131592
    3. ' de' → logprob: -9.25115966796875
    4. '   ' → logprob: -9.62615966796875
    5. ' par' → logprob: -9.75115966796875
    6. ' d' → logprob: -10.00115966796875
    7. ' ' → logprob: -10.00115966796875
    8. ' à' → logprob: -10.37615966796875
    9. ' au' → logprob: -10.87615966796875
    10. ' du' → logprob: -11.00115966796875

Token 92: ' valeur' (ID: 41664)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22750508785247803
    2. ' un' → logprob: -2.6025052070617676
    3. ' valeur' → logprob: -2.6025052070617676
    4. 'une' → logprob: -3.8525052070617676
    5. ' la' → logprob: -4.602505207061768
    6. ' esp' → logprob: -5.477505207061768
    7. ' ' → logprob: -5.602505207061768
    8. ' l' → logprob: -6.227505207061768
    9. ' float' → logprob: -6.602505207061768
    10. 'val' → logprob: -6.727505207061768

Token 93: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14735206961631775
    2. ' _' → logprob: -2.0223519802093506
    3. ' attend' → logprob: -6.52235221862793
    4. ' de' → logprob: -7.77235221862793
    5. ' ' → logprob: -8.02235221862793
    6. ' attendu' → logprob: -8.14735221862793
    7. ' d' → logprob: -8.27235221862793
    8. '_m' → logprob: -9.02235221862793
    9. '_float' → logprob: -9.27235221862793
    10. ' esp' → logprob: -9.27235221862793

Token 94: ''esp' (ID: 73244)
  Prédit: ''esp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.0771072655916214
    2. ''' → logprob: -2.8271071910858154
    3. ''ex' → logprob: -4.7021074295043945
    4. 'esp' → logprob: -6.2021074295043945
    5. ''att' → logprob: -6.7021074295043945
    6. ''espace' → logprob: -7.2021074295043945
    7. ''es' → logprob: -7.7021074295043945
    8. ''é' → logprob: -7.9521074295043945
    9. ''une' → logprob: -8.827107429504395
    10. ''énergie' → logprob: -8.952107429504395

Token 95: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.00325661594979465
    2. 'érence' → logprob: -5.878256797790527
    3. 'ér' → logprob: -8.503256797790527
    4. 'er' → logprob: -9.128256797790527
    5. 'érience' → logprob: -10.253256797790527
    6. 'é' → logprob: -10.753256797790527
    7. 'rance' → logprob: -10.753256797790527
    8. 'érer' → logprob: -11.378256797790527
    9. 'érant' → logprob: -11.628256797790527
    10. 'èce' → logprob: -11.753256797790527

Token 96: ' globale' (ID: 87991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11503700166940689
    2. '\n' → logprob: -2.740036964416504
    3. '
' → logprob: -3.865036964416504
    4. ')' → logprob: -4.865036964416504
    5. ':' → logprob: -5.865036964416504
    6. '    
' → logprob: -5.990036964416504
    7. '\' → logprob: -6.115036964416504
    8. '  
' → logprob: -6.990036964416504
    9. ' 
' → logprob: -7.365036964416504
    10. '   
' → logprob: -7.490036964416504

Token 97: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17465989291667938
    2. ':' → logprob: -2.4246599674224854
    3. ')' → logprob: -3.5496599674224854
    4. '\n' → logprob: -4.049659729003906
    5. '):' → logprob: -4.674659729003906
    6. ':
' → logprob: -5.674659729003906
    7. '
' → logprob: -5.924659729003906
    8. ' :' → logprob: -5.924659729003906
    9. '):
' → logprob: -7.049659729003906
    10. '"""' → logprob: -7.299659729003906

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015678156167268753
    2. ')' → logprob: -4.3906779289245605
    3. '"""' → logprob: -7.5156779289245605
    4. '"' → logprob: -7.6406779289245605
    5. '    
' → logprob: -8.015678405761719
    6. '):' → logprob: -8.015678405761719
    7. '```' → logprob: -8.140678405761719
    8. 'n' → logprob: -8.765678405761719
    9. '
' → logprob: -8.765678405761719
    10. '\n' → logprob: -9.140678405761719

Token 99: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002169532235711813
    2. 'n' → logprob: -7.252169609069824
    3. '
' → logprob: -7.502169609069824
    4. 'max' → logprob: -9.002169609069824
    5. '    
' → logprob: -9.002169609069824
    6. '"""' → logprob: -9.127169609069824
    7. '```' → logprob: -9.377169609069824
    8. '    ' → logprob: -9.502169609069824
    9. ')' → logprob: -10.127169609069824
    10. ' """
' → logprob: -10.127169609069824

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2960635721683502
    2. ',' → logprob: -1.9210635423660278
    3. '   ' → logprob: -2.7960636615753174
    4. ' :' → logprob: -3.4210636615753174
    5. '):' → logprob: -5.171063423156738
    6. '(n' → logprob: -5.546063423156738
    7. '=' → logprob: -6.796063423156738
    8. ')' → logprob: -6.921063423156738
    9. ' (' → logprob: -7.546063423156738
    10. '(' → logprob: -7.546063423156738

Token 101: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0636488199234009
    2. '   ' → logprob: -1.0636488199234009
    3. ' n' → logprob: -1.1886488199234009
    4. '    ' → logprob: -5.688648700714111
    5. ' ' → logprob: -7.438648700714111
    6. ')' → logprob: -8.06364917755127
    7. '(n' → logprob: -8.68864917755127
    8. '  ' → logprob: -9.18864917755127
    9. ' )' → logprob: -9.56364917755127
    10. ' 
' → logprob: -9.68864917755127

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5368396639823914
    2. ' n' → logprob: -1.0368397235870361
    3. '   ' → logprob: -3.161839723587036
    4. ' p' → logprob: -4.536839485168457
    5. 'p' → logprob: -4.911839485168457
    6. 'self' → logprob: -9.036839485168457
    7. ' self' → logprob: -9.411839485168457
    8. '    ' → logprob: -10.161839485168457
    9. '	n' → logprob: -10.286839485168457
    10. ' ' → logprob: -10.911839485168457

Token 103: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03508950397372246
    2. ':' → logprob: -4.535089492797852
    3. ' ,' → logprob: -5.035089492797852
    4. '):' → logprob: -5.285089492797852
    5. '   ' → logprob: -5.660089492797852
    6. '<|end|>' → logprob: -5.910089492797852
    7. ')' → logprob: -6.535089492797852
    8. ' (' → logprob: -6.910089492797852
    9. '):
' → logprob: -7.035089492797852
    10. ',int' → logprob: -7.785089492797852

Token 104: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1178479716181755
    2. ' int' → logprob: -2.2428479194641113
    3. ',' → logprob: -5.617847919464111
    4. '   ' → logprob: -7.117847919464111
    5. ')' → logprob: -8.61784839630127
    6. ',int' → logprob: -8.61784839630127
    7. ':int' → logprob: -9.86784839630127
    8. '=int' → logprob: -9.86784839630127
    9. ' n' → logprob: -10.49284839630127
    10. 'n' → logprob: -10.61784839630127

Token 105: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3338231146335602
    2. ',' → logprob: -1.9588230848312378
    3. '):' → logprob: -1.9588230848312378
    4. '),' → logprob: -6.708823204040527
    5. '   ' → logprob: -8.083823204040527
    6. '):
' → logprob: -9.708823204040527
    7. ')n' → logprob: -10.333823204040527
    8. ' )' → logprob: -10.833823204040527
    9. ' ):' → logprob: -11.083823204040527
    10. ',int' → logprob: -11.208823204040527

Token 106: ' Taille' (ID: 174124)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' La' → logprob: -1.2487223148345947
    2. ' Le' → logprob: -1.4987223148345947
    3. ' Nombre' → logprob: -1.6237223148345947
    4. ' n' → logprob: -2.2487223148345947
    5. ' The' → logprob: -3.1237223148345947
    6. ' Number' → logprob: -3.4987223148345947
    7. 'Nombre' → logprob: -3.4987223148345947
    8. ' nombre' → logprob: -3.7487223148345947
    9. ' int' → logprob: -3.8737223148345947
    10. 'La' → logprob: -4.623722076416016

Token 107: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.008529587648808956
    2. ')' → logprob: -5.7585296630859375
    3. ' )' → logprob: -6.1335296630859375
    4. ' du' → logprob: -6.5085296630859375
    5. '   ' → logprob: -7.7585296630859375
    6. ' n' → logprob: -8.258529663085938
    7. ' of' → logprob: -8.383529663085938
    8. ' ' → logprob: -9.008529663085938
    9. 'de' → logprob: -9.133529663085938
    10. ' maximale' → logprob: -9.133529663085938

Token 108: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25464963912963867
    2. ' p' → logprob: -1.6296496391296387
    3. 'p' → logprob: -3.8796496391296387
    4. 'la' → logprob: -5.004649639129639
    5. ' l' → logprob: -7.004649639129639
    6. 'l' → logprob: -8.254650115966797
    7. ' n' → logprob: -8.504650115966797
    8. ' ' → logprob: -10.254650115966797
    9. 'n' → logprob: -10.754650115966797
    10. ' the' → logprob: -11.754650115966797

Token 109: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.39267638325691223
    2. ' liste' → logprob: -1.2676763534545898
    3. 'p' → logprob: -3.51767635345459
    4. ' p' → logprob: -5.26767635345459
    5. 'list' → logprob: -5.64267635345459
    6. 's' → logprob: -5.64267635345459
    7. ' list' → logprob: -8.01767635345459
    8. 'sé' → logprob: -8.26767635345459
    9. 'lista' → logprob: -9.01767635345459
    10. 'Liste' → logprob: -9.39267635345459

Token 110: ' p' (ID: 275)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.207442045211792
    2. '   ' → logprob: -2.207442045211792
    3. '```' → logprob: -2.957442045211792
    4. 'p' → logprob: -5.082442283630371
    5. ',
' → logprob: -5.082442283630371
    6. ')' → logprob: -5.582442283630371
    7. ' p' → logprob: -5.707442283630371
    8. ' ,' → logprob: -6.332442283630371
    9. 'n' → logprob: -6.582442283630371
    10. ',p' → logprob: -7.332442283630371

Token 111: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889551669359207
    2. '   ' → logprob: -2.8288955688476562
    3. ',' → logprob: -5.078895568847656
    4. '<|end|>' → logprob: -5.328895568847656
    5. '):' → logprob: -6.078895568847656
    6. '```' → logprob: -6.453895568847656
    7. '),' → logprob: -7.328895568847656
    8. '<|end|>' → logprob: -7.953895568847656
    9. '):
' → logprob: -8.078895568847656
    10. ':' → logprob: -9.828895568847656

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09003502130508423
    2. '```' → logprob: -2.5900349617004395
    3. '       ' → logprob: -4.7150349617004395
    4. ',' → logprob: -6.7150349617004395
    5. '    ' → logprob: -8.215035438537598
    6. '    
' → logprob: -8.715035438537598
    7. '``' → logprob: -9.715035438537598
    8. '  ' → logprob: -9.715035438537598
    9. ' ' → logprob: -10.090035438537598
    10. ')' → logprob: -10.090035438537598

Token 113: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.12250826507806778
    2. ' k' → logprob: -2.3725082874298096
    3. 'p' → logprob: -4.7475080490112305
    4. ' p' → logprob: -4.7475080490112305
    5. '   ' → logprob: -5.3725080490112305
    6. '```' → logprob: -10.12250804901123
    7. '
' → logprob: -11.62250804901123
    8. '       ' → logprob: -11.99750804901123
    9. ' ' → logprob: -12.99750804901123
    10. '    ' → logprob: -12.99750804901123

Token 114: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.246819257736206
    2. ':int' → logprob: -1.246819257736206
    3. ':' → logprob: -1.371819257736206
    4. ' (' → logprob: -2.371819257736206
    5. '(int' → logprob: -3.746819257736206
    6. ' :' → logprob: -4.121819496154785
    7. ')' → logprob: -4.246819496154785
    8. '=int' → logprob: -4.621819496154785
    9. ' ):' → logprob: -5.746819496154785
    10. '<int' → logprob: -5.996819496154785

Token 115: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012115450808778405
    2. ' int' → logprob: -6.751211643218994
    3. ')' → logprob: -10.251211166381836
    4. '):' → logprob: -13.126211166381836
    5. '=int' → logprob: -13.876211166381836
    6. ':int' → logprob: -14.501211166381836
    7. ' )' → logprob: -14.626211166381836
    8. '[int' → logprob: -14.751211166381836
    9. '(int' → logprob: -14.876211166381836
    10. '   ' → logprob: -15.001211166381836

Token 116: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019984507525805384
    2. ' ):' → logprob: -9.125200271606445
    3. ')' → logprob: -10.125200271606445
    4. ':' → logprob: -10.250200271606445
    5. '):
' → logprob: -11.250200271606445
    6. '   ' → logprob: -14.875200271606445
    7. '):

' → logprob: -14.875200271606445
    8. ']:' → logprob: -15.125200271606445
    9. ',' → logprob: -15.250200271606445
    10. ':int' → logprob: -15.250200271606445

Token 117: ' Long' (ID: 7790)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.6340599060058594
    2. ' Long' → logprob: -1.2590599060058594
    3. ' la' → logprob: -3.0090599060058594
    4. ' longueur' → logprob: -3.0090599060058594
    5. ' Taille' → logprob: -3.3840599060058594
    6. ' int' → logprob: -4.384059906005859
    7. 'La' → logprob: -4.759059906005859
    8. ' Nombre' → logprob: -5.009059906005859
    9. ' ' → logprob: -5.634059906005859
    10. ' Length' → logprob: -5.884059906005859

Token 118: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.08683475852012634
    2. ' def' → logprob: -3.836834669113159
    3. ':' → logprob: -4.086834907531738
    4. '):' → logprob: -4.711834907531738
    5. '   ' → logprob: -4.961834907531738
    6. ' =' → logprob: -5.086834907531738
    7. 'ue' → logprob: -5.586834907531738
    8. 'u' → logprob: -5.961834907531738
    9. 'umer' → logprob: -6.086834907531738
    10. '):
' → logprob: -6.336834907531738

Token 119: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11507152765989304
    2. '   ' → logprob: -2.7400715351104736
    3. ' du' → logprob: -3.4900715351104736
    4. ' des' → logprob: -5.9900712966918945
    5. ' of' → logprob: -6.2400712966918945
    6. ' maximale' → logprob: -6.2400712966918945
    7. ' d' → logprob: -6.3650712966918945
    8. ' )' → logprob: -7.1150712966918945
    9. ' à' → logprob: -7.1150712966918945
    10. '    ' → logprob: -7.1150712966918945

Token 120: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1559823453426361
    2. ' sous' → logprob: -2.030982255935669
    3. 'sub' → logprob: -5.030982494354248
    4. ' sub' → logprob: -5.530982494354248
    5. ' )' → logprob: -7.780982494354248
    6. ' subse' → logprob: -7.905982494354248
    7. ' p' → logprob: -8.15598201751709
    8. ' s' → logprob: -8.28098201751709
    9. 'p' → logprob: -8.28098201751709
    10. 'ss' → logprob: -8.53098201751709

Token 121: '-list' (ID: 18463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4692692756652832
    2. '_list' → logprob: -1.3442692756652832
    3. '_l' → logprob: -2.969269275665283
    4. ' _' → logprob: -3.594269275665283
    5. '-' → logprob: -3.969269275665283
    6. '   ' → logprob: -5.719269275665283
    7. '_array' → logprob: -6.219269275665283
    8. ' -' → logprob: -6.469269275665283
    9. '_lst' → logprob: -6.469269275665283
    10. '_lists' → logprob: -6.594269275665283

Token 122: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5275185108184814
    2. 'istes' → logprob: -1.0275185108184814
    3. 'tes' → logprob: -3.9025185108184814
    4. 'ces' → logprob: -5.027518272399902
    5. 'e' → logprob: -5.277518272399902
    6. 'ist' → logprob: -5.652518272399902
    7. 'ines' → logprob: -5.777518272399902
    8. 'iste' → logprob: -6.027518272399902
    9. 'etes' → logprob: -6.027518272399902
    10. 'ettes' → logprob: -6.402518272399902

Token 123: ' considér' (ID: 68502)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24417436122894287
    2. ',' → logprob: -2.4941744804382324
    3. '   ' → logprob: -2.9941744804382324
    4. '):
' → logprob: -2.9941744804382324
    5. ')' → logprob: -3.4941744804382324
    6. '<|end|>' → logprob: -6.619174480438232
    7. ':' → logprob: -6.994174480438232
    8. ' ,' → logprob: -8.369174003601074
    9. '),' → logprob: -8.494174003601074
    10. ' ):' → logprob: -8.744174003601074

Token 124: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.0215086936950684
    2. 'ées' → logprob: -1.2715086936950684
    3. ')' → logprob: -2.2715086936950684
    4. 'é' → logprob: -2.3965086936950684
    5. 'és' → logprob: -2.8965086936950684
    6. 'e' → logprob: -3.2715086936950684
    7. 'u' → logprob: -3.7715086936950684
    8. 'def' → logprob: -4.771508693695068
    9. '   ' → logprob: -4.771508693695068
    10. ' ' → logprob: -5.271508693695068

Token 125: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5534606575965881
    2. '):' → logprob: -1.4284605979919434
    3. '):
' → logprob: -1.8034605979919434
    4. ',' → logprob: -4.678460597991943
    5. ')' → logprob: -4.803460597991943
    6. '```' → logprob: -6.053460597991943
    7. ',
' → logprob: -8.553461074829102
    8. ':' → logprob: -8.678461074829102
    9. '):
' → logprob: -9.553461074829102
    10. '):

' → logprob: -9.928461074829102

Token 126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05172080919146538
    2. '```' → logprob: -3.3017208576202393
    3. '       ' → logprob: -5.42672061920166
    4. ')' → logprob: -5.92672061920166
    5. '
' → logprob: -6.17672061920166
    6. '    
' → logprob: -6.30172061920166
    7. '``' → logprob: -7.30172061920166
    8. ')
' → logprob: -8.05172061920166
    9. '):
' → logprob: -8.42672061920166
    10. '"""
' → logprob: -8.67672061920166

Token 127: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.024571336805820465
    2. ' p' → logprob: -3.774571418762207
    3. '   ' → logprob: -6.649571418762207
    4. '
' → logprob: -10.899571418762207
    5. '```' → logprob: -11.774571418762207
    6. '       ' → logprob: -13.399571418762207
    7. '``' → logprob: -15.024571418762207
    8. ' ' → logprob: -15.149571418762207
    9. '    ' → logprob: -15.399571418762207
    10. '"""
' → logprob: -15.399571418762207

Token 128: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23052392899990082
    2. '):' → logprob: -1.730523943901062
    3. ' :' → logprob: -4.480524063110352
    4. ' (' → logprob: -4.980524063110352
    5. '):
' → logprob: -5.355524063110352
    6. ')' → logprob: -5.480524063110352
    7. ' ' → logprob: -7.730524063110352
    8. '   ' → logprob: -7.730524063110352
    9. ' ):' → logprob: -7.730524063110352
    10. ',' → logprob: -10.105524063110352

Token 129: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4055302143096924
    2. '):' → logprob: -1.1555302143096924
    3. ':' → logprob: -5.030529975891113
    4. '[int' → logprob: -5.530529975891113
    5. 'List' → logprob: -5.780529975891113
    6. 'list' → logprob: -6.655529975891113
    7. 'int' → logprob: -7.030529975891113
    8. '):
' → logprob: -7.530529975891113
    9. '[' → logprob: -7.905529975891113
    10. '_list' → logprob: -8.155529975891113

Token 130: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2084174007177353
    2. '):' → logprob: -1.7084174156188965
    3. '):
' → logprob: -5.0834174156188965
    4. ')' → logprob: -7.9584174156188965
    5. '<int' → logprob: -8.583416938781738
    6. ':' → logprob: -9.208416938781738
    7. '[' → logprob: -9.958416938781738
    8. ' ):' → logprob: -10.458416938781738
    9. '```' → logprob: -11.458416938781738
    10. '):

' → logprob: -11.708416938781738

Token 131: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00039492646465077996
    2. ' int' → logprob: -7.875394821166992
    3. 'ints' → logprob: -11.375394821166992
    4. '[int' → logprob: -13.000394821166992
    5. 'float' → logprob: -14.875394821166992
    6. ')' → logprob: -15.375394821166992
    7. '(int' → logprob: -15.500394821166992
    8. 'inte' → logprob: -16.500394821166992
    9. '<int' → logprob: -16.625394821166992
    10. ' ints' → logprob: -16.625394821166992

Token 132: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05693100392818451
    2. ']):' → logprob: -3.4319310188293457
    3. ')' → logprob: -3.9319310188293457
    4. ' ):' → logprob: -6.556931018829346
    5. '>):' → logprob: -6.806931018829346
    6. '[int' → logprob: -8.431930541992188
    7. '):
' → logprob: -8.556930541992188
    8. '])' → logprob: -9.181930541992188
    9. ']' → logprob: -9.931930541992188
    10. ' ' → logprob: -10.056930541992188

Token 133: ' Liste' (ID: 61030)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.0069952011108398
    2. ' List' → logprob: -1.2569952011108398
    3. ' list' → logprob: -1.3819952011108398
    4. 'list' → logprob: -3.00699520111084
    5. 'La' → logprob: -4.38199520111084
    6. ' La' → logprob: -4.75699520111084
    7. ' la' → logprob: -5.00699520111084
    8. '   ' → logprob: -5.13199520111084
    9. '[int' → logprob: -5.25699520111084
    10. ')' → logprob: -6.25699520111084

Token 134: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5723546743392944
    2. '[int' → logprob: -1.4473546743392944
    3. '):' → logprob: -2.322354793548584
    4. ' de' → logprob: -2.947354793548584
    5. '):
' → logprob: -3.947354793548584
    6. ':' → logprob: -4.947354793548584
    7. '   ' → logprob: -5.072354793548584
    8. ')' → logprob: -5.197354793548584
    9. ' of' → logprob: -5.447354793548584
    10. ',' → logprob: -6.322354793548584

Token 135: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0095304250717163
    2. 'faces' → logprob: -1.3845304250717163
    3. ' nombres' → logprob: -2.384530544281006
    4. ' p' → logprob: -2.884530544281006
    5. 'p' → logprob: -2.884530544281006
    6. 'ent' → logprob: -3.134530544281006
    7. 'nombre' → logprob: -3.259530544281006
    8. 'd' → logprob: -4.384530544281006
    9. 'dé' → logprob: -4.384530544281006
    10. 'dés' → logprob: -4.384530544281006

Token 136: ' maxim' (ID: 29045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9367572069168091
    2. '   ' → logprob: -1.436757206916809
    3. '_' → logprob: -2.8117570877075195
    4. ' )' → logprob: -2.8117570877075195
    5. '):
' → logprob: -3.1867570877075195
    6. '_des' → logprob: -3.3117570877075195
    7. ' des' → logprob: -3.4367570877075195
    8. 'des' → logprob: -3.6867570877075195
    9. ' de' → logprob: -4.0617570877075195
    10. ',' → logprob: -4.1867570877075195

Token 137: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.009407185949385166
    2. 'aux' → logprob: -5.134407043457031
    3. 'um' → logprob: -6.009407043457031
    4. 'ale' → logprob: -7.134407043457031
    5. '   ' → logprob: -8.634407043457031
    6. '```' → logprob: -10.759407043457031
    7. 'ums' → logprob: -12.259407043457031
    8. 'es' → logprob: -12.384407043457031
    9. 'al' → logprob: -12.384407043457031
    10. '       ' → logprob: -13.759407043457031

Token 138: ' possibles' (ID: 97753)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2401046752929688
    2. ' des' → logprob: -1.3651046752929688
    3. ' )' → logprob: -1.6151046752929688
    4. '   ' → logprob: -1.7401046752929688
    5. ' possibles' → logprob: -3.9901046752929688
    6. ' ' → logprob: -4.740104675292969
    7. 'des' → logprob: -4.740104675292969
    8. ' de' → logprob: -4.865104675292969
    9. ',' → logprob: -5.115104675292969
    10. ' possible' → logprob: -5.365104675292969

Token 139: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7439651489257812
    2. ' des' → logprob: -1.3689651489257812
    3. ')' → logprob: -2.1189651489257812
    4. ' )' → logprob: -2.6189651489257812
    5. '):' → logprob: -4.243965148925781
    6. ' pour' → logprob: -4.493965148925781
    7. ',' → logprob: -4.493965148925781
    8. '):
' → logprob: -5.118965148925781
    9. 'des' → logprob: -5.368965148925781
    10. ')
' → logprob: -5.368965148925781

Token 140: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1380569189786911
    2. ' les' → logprob: -2.263056993484497
    3. 'les' → logprob: -4.888056755065918
    4. ' un' → logprob: -4.888056755065918
    5. ' le' → logprob: -5.638056755065918
    6. 'cha' → logprob: -5.888056755065918
    7. ' each' → logprob: -6.888056755065918
    8. 'le' → logprob: -7.263056755065918
    9. ' ' → logprob: -7.513056755065918
    10. '   ' → logprob: -8.013056755065918

Token 141: ' élément' (ID: 99627)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.19072750210762024
    2. ' dé' → logprob: -2.690727472305298
    3. 'élé' → logprob: -3.190727472305298
    4. 'd' → logprob: -3.440727472305298
    5. 'dés' → logprob: -4.440727710723877
    6. ' élément' → logprob: -4.565727710723877
    7. ' p' → logprob: -6.315727710723877
    8. 'face' → logprob: -6.440727710723877
    9. ' d' → logprob: -6.690727710723877
    10. ' face' → logprob: -6.815727710723877

Token 142: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7614006996154785
    2. '):' → logprob: -1.2614006996154785
    3. '):
' → logprob: -1.6364006996154785
    4. ')' → logprob: -4.1364006996154785
    5. ' de' → logprob: -4.2614006996154785
    6. ' ):' → logprob: -4.6364006996154785
    7. ' ):
' → logprob: -4.8864006996154785
    8. ' )' → logprob: -6.0114006996154785
    9. 's' → logprob: -6.8864006996154785
    10. ',' → logprob: -7.5114006996154785

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03260928764939308
    2. ')' → logprob: -4.282609462738037
    3. '"""' → logprob: -4.657609462738037
    4. '"""
' → logprob: -5.032609462738037
    5. ')
' → logprob: -7.032609462738037
    6. '):
' → logprob: -7.907609462738037
    7. '):' → logprob: -8.032608985900879
    8. '
' → logprob: -8.157608985900879
    9. ' """
' → logprob: -8.782608985900879
    10. '```' → logprob: -9.782608985900879

Token 144: ' Returns' (ID: 9609)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6828409433364868
    2. '   ' → logprob: -0.8078409433364868
    3. ' """
' → logprob: -3.9328408241271973
    4. '"""' → logprob: -4.057840824127197
    5. ')
' → logprob: -5.557840824127197
    6. '```' → logprob: -6.307840824127197
    7. ')' → logprob: -6.432840824127197
    8. '
' → logprob: -6.557840824127197
    9. '"' → logprob: -6.807840824127197
    10. '""' → logprob: -7.307840824127197

Token 145: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5789332389831543
    2. ':' → logprob: -0.8289332389831543
    3. '   ' → logprob: -7.078933238983154
    4. 'int' → logprob: -7.828933238983154
    5. ' int' → logprob: -7.828933238983154
    6. ' =' → logprob: -8.078933715820312
    7. ':int' → logprob: -8.078933715820312
    8. '  ' → logprob: -8.953933715820312
    9. '```' → logprob: -9.203933715820312
    10. '    ' → logprob: -9.328933715820312

Token 146: '       ' (ID: 309)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0009159822366200387
    2. 'float' → logprob: -7.250916004180908
    3. '   ' → logprob: -8.87591552734375
    4. ' int' → logprob: -10.00091552734375
    5. '    ' → logprob: -12.00091552734375
    6. '(float' → logprob: -12.12591552734375
    7. ' (' → logprob: -13.37591552734375
    8. '"' → logprob: -13.50091552734375
    9. ' Optional' → logprob: -13.62591552734375
    10. ' max' → logprob: -14.00091552734375

Token 147: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -0.4741250276565552
    2. ' float' → logprob: -0.9741250276565552
    3. '   ' → logprob: -10.349124908447266
    4. 'int' → logprob: -11.474124908447266
    5. '(float' → logprob: -12.974124908447266
    6. ' int' → logprob: -13.974124908447266
    7. '
' → logprob: -15.099124908447266
    8. '	float' → logprob: -15.474124908447266
    9. '```' → logprob: -15.474124908447266
    10. '  ' → logprob: -15.599124908447266

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029187381267547607
    2. ' :' → logprob: -3.6541874408721924
    3. '   ' → logprob: -6.404187202453613
    4. ')' → logprob: -8.029187202453613
    5. ',' → logprob: -8.529187202453613
    6. '):' → logprob: -8.529187202453613
    7. ':return' → logprob: -9.029187202453613
    8. '```' → logprob: -9.404187202453613
    9. ' =' → logprob: -9.529187202453613
    10. ':
' → logprob: -10.404187202453613

Token 149: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.2631177008152008
    2. ' L' → logprob: -1.6381176710128784
    3. ' la' → logprob: -4.138117790222168
    4. 'La' → logprob: -4.388117790222168
    5. ' l' → logprob: -5.888117790222168
    6. '   ' → logprob: -6.013117790222168
    7. ' max' → logprob: -6.888117790222168
    8. ' Vale' → logprob: -7.388117790222168
    9. ' val' → logprob: -7.763117790222168
    10. 'L' → logprob: -7.763117790222168

Token 150: ' valeur' (ID: 41664)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.43532872200012207
    2. ' valeur' → logprob: -1.560328722000122
    3. ' esp' → logprob: -2.935328722000122
    4. 'val' → logprob: -3.435328722000122
    5. ' max' → logprob: -4.310328483581543
    6. ' maximum' → logprob: -4.310328483581543
    7. ' meilleure' → logprob: -4.810328483581543
    8. ' val' → logprob: -4.810328483581543
    9. ' maximal' → logprob: -5.560328483581543
    10. ' maximale' → logprob: -5.560328483581543

Token 151: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1107003316283226
    2. '_' → logprob: -2.9857003688812256
    3. ' maximale' → logprob: -3.6107003688812256
    4. ' _' → logprob: -4.2357001304626465
    5. '_d' → logprob: -5.6107001304626465
    6. 'd' → logprob: -5.6107001304626465
    7. ' esp' → logprob: -6.3607001304626465
    8. ' de' → logprob: -6.4857001304626465
    9. '_max' → logprob: -7.7357001304626465
    10. '   ' → logprob: -7.7357001304626465

Token 152: ''esp' (ID: 73244)
  Prédit: ''esp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.0009680375806055963
    2. ''' → logprob: -8.125967979431152
    3. 'esp' → logprob: -8.375967979431152
    4. ''espace' → logprob: -8.625967979431152
    5. '_' → logprob: -8.875967979431152
    6. '’esp' → logprob: -10.500967979431152
    7. ''ex' → logprob: -10.750967979431152
    8. ''espère' → logprob: -11.500967979431152
    9. ''exp' → logprob: -11.500967979431152
    10. ' esp' → logprob: -12.000967979431152

Token 153: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.0006091519608162344
    2. 'érence' → logprob: -7.500608921051025
    3. 'ér' → logprob: -10.625609397888184
    4. 'érience' → logprob: -11.500609397888184
    5. 'é' → logprob: -12.125609397888184
    6. 'érée' → logprob: -12.250609397888184
    7. 'er' → logprob: -13.125609397888184
    8. '"""' → logprob: -14.125609397888184
    9. 'rance' → logprob: -14.250609397888184
    10. 'érant' → logprob: -14.375609397888184

Token 154: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.12008154392242432
    2. ' max' → logprob: -2.9950814247131348
    3. '   ' → logprob: -3.6200814247131348
    4. ' maximal' → logprob: -3.9950814247131348
    5. '_max' → logprob: -4.745081424713135
    6. ' _' → logprob: -5.620081424713135
    7. ' maximum' → logprob: -5.745081424713135
    8. 'max' → logprob: -7.120081424713135
    9. ' maxim' → logprob: -7.370081424713135
    10. ' ' → logprob: -7.870081424713135

Token 155: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1495002955198288
    2. ')' → logprob: -3.2745003700256348
    3. '.' → logprob: -3.5245003700256348
    4. ' possible' → logprob: -4.524500370025635
    5. ',' → logprob: -4.774500370025635
    6. ' de' → logprob: -4.899500370025635
    7. '    
' → logprob: -5.024500370025635
    8. '"""' → logprob: -5.149500370025635
    9. ':' → logprob: -5.399500370025635
    10. '_possible' → logprob: -5.524500370025635

Token 156: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00015836587408557534
    2. 'é' → logprob: -9.375158309936523
    3. 'ee' → logprob: -9.625158309936523
    4. 'e' → logprob: -12.750158309936523
    5. '   ' → logprob: -13.500158309936523
    6. ' é' → logprob: -14.000158309936523
    7. '```' → logprob: -14.375158309936523
    8. 'uée' → logprob: -15.375158309936523
    9. 'rée' → logprob: -15.500158309936523
    10. 'ées' → logprob: -15.625158309936523

Token 157: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4134976863861084
    2. ':' → logprob: -1.2884976863861084
    3. ':
' → logprob: -3.1634976863861084
    4. '):' → logprob: -4.7884979248046875
    5. '):
' → logprob: -5.6634979248046875
    6. ')' → logprob: -5.7884979248046875
    7. '.' → logprob: -6.5384979248046875
    8. ' :' → logprob: -6.7884979248046875
    9. ' :
' → logprob: -6.7884979248046875
    10. '    ' → logprob: -7.0384979248046875

Token 158: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.6592122912406921
    2. ' les' → logprob: -0.7842122912406921
    3. '   ' → logprob: -4.409212112426758
    4. 'les' → logprob: -5.159212112426758
    5. ' tous' → logprob: -6.034212112426758
    6. ' la' → logprob: -6.159212112426758
    7. ' all' → logprob: -6.784212112426758
    8. 't' → logprob: -7.159212112426758
    9. '    ' → logprob: -7.534212112426758
    10. ' l' → logprob: -7.909212112426758

Token 159: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.04251856356859207
    2. ' des' → logprob: -3.6675186157226562
    3. 'les' → logprob: -4.417518615722656
    4. '_' → logprob: -6.792518615722656
    5. '   ' → logprob: -7.167518615722656
    6. 'des' → logprob: -7.542518615722656
    7. ' ' → logprob: -7.667518615722656
    8. '_des' → logprob: -7.917518615722656
    9. '    ' → logprob: -8.917518615722656
    10. '```' → logprob: -9.042518615722656

Token 160: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.09088028967380524
    2. 's' → logprob: -2.5908803939819336
    3. ' k' → logprob: -4.590880393981934
    4. 'k' → logprob: -7.215880393981934
    5. '   ' → logprob: -8.090880393981934
    6. ' sub' → logprob: -9.090880393981934
    7. '_s' → logprob: -9.465880393981934
    8. 'sub' → logprob: -9.465880393981934
    9. ' under' → logprob: -9.840880393981934
    10. ' s' → logprob: -9.840880393981934

Token 161: '-list' (ID: 18463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.551264762878418
    2. '_list' → logprob: -0.926264762878418
    3. '_s' → logprob: -4.801264762878418
    4. '-list' → logprob: -5.301264762878418
    5. '_lists' → logprob: -5.676264762878418
    6. 's' → logprob: -5.926264762878418
    7. '_' → logprob: -6.426264762878418
    8. '       ' → logprob: -6.426264762878418
    9. '-' → logprob: -6.426264762878418
    10. 'list' → logprob: -7.176264762878418

Token 162: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.001166056958027184
    2. 'ées' → logprob: -7.376165866851807
    3. '   ' → logprob: -8.251166343688965
    4. 's' → logprob: -9.251166343688965
    5. 'és' → logprob: -9.626166343688965
    6. ']' → logprob: -9.876166343688965
    7. 'ees' → logprob: -11.126166343688965
    8. 'tes' → logprob: -11.751166343688965
    9. 'istes' → logprob: -11.876166343688965
    10. 'e' → logprob: -12.126166343688965

Token 163: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23974408209323883
    2. ':' → logprob: -1.9897440671920776
    3. '):' → logprob: -3.114744186401367
    4. '.' → logprob: -3.989744186401367
    5. ':
' → logprob: -5.239744186401367
    6. ')' → logprob: -5.364744186401367
    7. '):
' → logprob: -6.239744186401367
    8. ' :' → logprob: -8.489744186401367
    9. '```' → logprob: -8.614744186401367
    10. 'def' → logprob: -8.739744186401367

Token 164: ' taille' (ID: 41644)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1841251105070114
    2. ' longueur' → logprob: -2.0591251850128174
    3. 'length' → logprob: -3.8091251850128174
    4. ' long' → logprob: -5.059124946594238
    5. 'k' → logprob: -5.684124946594238
    6. ' length' → logprob: -6.434124946594238
    7. 'tail' → logprob: -6.559124946594238
    8. ' taille' → logprob: -6.684124946594238
    9. 'float' → logprob: -7.184124946594238
    10. 'p' → logprob: -7.184124946594238

Token 165: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2811923623085022
    2. 'k' → logprob: -1.4061923027038574
    3. ' ' → logprob: -10.906192779541016
    4. '_k' → logprob: -11.031192779541016
    5. '   ' → logprob: -12.531192779541016
    6. '	k' → logprob: -13.531192779541016
    7. '```' → logprob: -14.281192779541016
    8. '=k' → logprob: -15.156192779541016
    9. '1' → logprob: -15.406192779541016
    10. ' ' → logprob: -15.656192779541016

Token 166: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3677748143672943
    2. '   ' → logprob: -1.6177748441696167
    3. '):' → logprob: -2.367774724960327
    4. ':
' → logprob: -5.117774963378906
    5. ':' → logprob: -5.617774963378906
    6. ')' → logprob: -5.617774963378906
    7. '.' → logprob: -6.992774963378906
    8. '):
' → logprob: -7.117774963378906
    9. '```' → logprob: -8.242774963378906
    10. '
' → logprob: -9.117774963378906

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04943016916513443
    2. '\n' → logprob: -4.2994303703308105
    3. '
' → logprob: -4.5494303703308105
    4. '```' → logprob: -4.7994303703308105
    5. '"""' → logprob: -5.2994303703308105
    6. '"""
' → logprob: -5.9244303703308105
    7. '    
' → logprob: -6.0494303703308105
    8. '):
' → logprob: -6.6744303703308105
    9. ')' → logprob: -6.7994303703308105
    10. '""' → logprob: -7.4244303703308105

Token 168: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005343686323612928
    2. '
' → logprob: -6.380343914031982
    3. '"""' → logprob: -6.380343914031982
    4. '    
' → logprob: -7.130343914031982
    5. ')' → logprob: -7.630343914031982
    6. '\n' → logprob: -8.130343437194824
    7. '```' → logprob: -8.755343437194824
    8. '"""
' → logprob: -10.005343437194824
    9. ':' → logprob: -10.505343437194824
    10. '"' → logprob: -10.505343437194824

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007356545538641512
    2. ' prefix' → logprob: -8.37573528289795
    3. 'prefix' → logprob: -9.00073528289795
    4. ' max' → logprob: -9.12573528289795
    5. 'max' → logprob: -9.62573528289795
    6. ' current' → logprob: -10.75073528289795
    7. ' result' → logprob: -10.75073528289795
    8. ' start' → logprob: -10.75073528289795
    9. '    
' → logprob: -11.12573528289795
    10. 'sum' → logprob: -11.50073528289795

Token 170: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.26366332173347473
    2. 'expected' → logprob: -2.0136632919311523
    3. 'max' → logprob: -2.7636632919311523
    4. 'esp' → logprob: -4.763663291931152
    5. 'window' → logprob: -4.888663291931152
    6. 'current' → logprob: -5.513663291931152
    7. 'dp' → logprob: -5.513663291931152
    8. 'expect' → logprob: -5.638663291931152
    9. '#' (adapté à ' #') → logprob: -5.763663291931152
    10. 'esper' → logprob: -6.763663291931152

Token 171: ' Initial' (ID: 9209)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7787411212921143
    2. 'expected' → logprob: -1.1537411212921143
    3. 'max' → logprob: -2.2787411212921143
    4. 'window' → logprob: -3.5287411212921143
    5. 'dp' → logprob: -4.153740882873535
    6. ' prefix' → logprob: -4.153740882873535
    7. '   ' → logprob: -4.653740882873535
    8. ' expected' → logprob: -4.778740882873535
    9. 'esp' → logprob: -4.903740882873535
    10. 'expect' → logprob: -4.903740882873535

Token 172: 'isation' (ID: 6993)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.0548533201217651
    2. '_sum' → logprob: -1.0548533201217651
    3. 'max' → logprob: -1.8048533201217651
    4. 'ize' → logprob: -3.3048534393310547
    5. ' max' → logprob: -3.3048534393310547
    6. 'sum' → logprob: -3.4298534393310547
    7. '   ' → logprob: -4.804853439331055
    8. '_' → logprob: -5.304853439331055
    9. ' sum' → logprob: -5.554853439331055
    10. 'ized' → logprob: -5.679853439331055

Token 173: ' pour' (ID: 1930)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4298992156982422
    2. 'max' → logprob: -1.5548992156982422
    3. '   ' → logprob: -2.054899215698242
    4. ' current' → logprob: -5.554899215698242
    5. 'current' → logprob: -5.929899215698242
    6. 'sum' → logprob: -6.554899215698242
    7. ' sum' → logprob: -7.429899215698242
    8. 'expected' → logprob: -7.554899215698242
    9. ' expected' → logprob: -8.179899215698242
    10. 'result' → logprob: -8.804899215698242

Token 174: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7515113353729248
    2. ' la' → logprob: -1.8765113353729248
    3. ' max' → logprob: -2.126511335372925
    4. 'i' → logprob: -2.126511335372925
    5. ' i' → logprob: -2.876511335372925
    6. 'la' → logprob: -3.751511335372925
    7. 's' → logprob: -4.126511573791504
    8. 'sum' → logprob: -4.251511573791504
    9. 'current' → logprob: -5.126511573791504
    10. ' current' → logprob: -5.376511573791504

Token 175: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.690194308757782
    2. 'max' → logprob: -1.1901943683624268
    3. 'val' → logprob: -3.3151943683624268
    4. 'me' → logprob: -3.4401943683624268
    5. 'window' → logprob: -3.4401943683624268
    6. 'fen' → logprob: -3.4401943683624268
    7. 'prem' → logprob: -3.5651943683624268
    8. 'ma' → logprob: -5.190194129943848
    9. 'current' → logprob: -5.440194129943848
    10. 'prefix' → logprob: -5.815194129943848

Token 176: ' de' (ID: 334)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.1383560448884964
    2. 'cour' → logprob: -3.1383559703826904
    3. '_act' → logprob: -3.8883559703826904
    4. '_' → logprob: -4.0133562088012695
    5. '_current' → logprob: -4.1383562088012695
    6. ' =' → logprob: -4.7633562088012695
    7. '_max' → logprob: -5.3883562088012695
    8. ' cour' → logprob: -5.8883562088012695
    9. ' actuelle' → logprob: -6.1383562088012695
    10. 'max' → logprob: -6.2633562088012695

Token 177: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.44275417923927307
    2. 'i' → logprob: -1.5677541494369507
    3. 'esp' → logprob: -3.3177542686462402
    4. 'p' → logprob: -3.9427542686462402
    5. 'les' → logprob: -4.06775426864624
    6. ' la' → logprob: -4.19275426864624
    7. 'window' → logprob: -4.31775426864624
    8. 'esper' → logprob: -4.44275426864624
    9. 'l' → logprob: -4.56775426864624
    10. 'es' → logprob: -4.94275426864624

Token 178: ' première' (ID: 23423)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5789801478385925
    2. 's' → logprob: -2.2039802074432373
    3. 'sum' → logprob: -2.3289802074432373
    4. 'window' → logprob: -2.7039802074432373
    5. ' p' → logprob: -3.4539802074432373
    6. 'current' → logprob: -3.4539802074432373
    7. 'prem' → logprob: -3.4539802074432373
    8. 'val' → logprob: -3.7039802074432373
    9. 'fen' → logprob: -4.453979969024658
    10. 'max' → logprob: -5.328979969024658

Token 179: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.14097446203231812
    2. 'window' → logprob: -2.390974521636963
    3. 's' → logprob: -3.890974521636963
    4. 'k' → logprob: -4.765974521636963
    5. ' fenêtre' → logprob: -4.765974521636963
    6. 'f' → logprob: -6.890974521636963
    7. 'val' → logprob: -7.765974521636963
    8. ' fen' → logprob: -8.015974044799805
    9. ' window' → logprob: -8.765974044799805
    10. 'sub' → logprob: -8.890974044799805

Token 180: ' de' (ID: 334)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.757047176361084
    2. ' current' → logprob: -1.257047176361084
    3. 'window' → logprob: -2.382047176361084
    4. ' window' → logprob: -2.632047176361084
    5. '   ' → logprob: -3.132047176361084
    6. 'sum' → logprob: -4.007047176361084
    7. 'curr' → logprob: -5.007047176361084
    8. ' sum' → logprob: -6.007047176361084
    9. 'cur' → logprob: -6.007047176361084
    10. 's' → logprob: -6.382047176361084

Token 181: ' longueur' (ID: 104613)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19924293458461761
    2. 'k' → logprob: -2.0742428302764893
    3. ' p' → logprob: -4.074243068695068
    4. 'val' → logprob: -4.074243068695068
    5. 'i' → logprob: -4.449243068695068
    6. 'la' → logprob: -6.074243068695068
    7. ' k' → logprob: -6.199243068695068
    8. 'range' → logprob: -6.199243068695068
    9. ' i' → logprob: -7.824243068695068
    10. 'esp' → logprob: -8.32424259185791

Token 182: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10022587329149246
    2. ' k' → logprob: -2.3502259254455566
    3. '   ' → logprob: -10.975225448608398
    4. ' ' → logprob: -14.350225448608398
    5. '	k' → logprob: -15.100225448608398
    6. '_k' → logprob: -15.100225448608398
    7. '`' → logprob: -15.350225448608398
    8. '    ' → logprob: -15.725225448608398
    9. '=k' → logprob: -15.725225448608398
    10. '```' → logprob: -16.1002254486084

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44978466629981995
    2. 'sum' → logprob: -1.6997846364974976
    3. 'current' → logprob: -2.574784755706787
    4. ' current' → logprob: -3.449784755706787
    5. ' sum' → logprob: -3.949784755706787
    6. 'window' → logprob: -4.449784755706787
    7. 'expected' → logprob: -4.949784755706787
    8. ' window' → logprob: -4.949784755706787
    9. 's' → logprob: -5.199784755706787
    10. 'total' → logprob: -5.324784755706787

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18463516235351562
    2. ' current' → logprob: -2.8096351623535156
    3. ' sum' → logprob: -3.0596351623535156
    4. 'sum' → logprob: -3.5596351623535156
    5. 'current' → logprob: -4.059635162353516
    6. ' window' → logprob: -5.684635162353516
    7. ' expected' → logprob: -5.684635162353516
    8. 'expected' → logprob: -6.184635162353516
    9. '    
' → logprob: -6.434635162353516
    10. ' s' → logprob: -6.559635162353516

Token 185: ' before' (ID: 2254)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2993667423725128
    2. 'window' → logprob: -1.6743667125701904
    3. ' current' → logprob: -3.0493667125701904
    4. ' window' → logprob: -4.4243669509887695
    5. 'sum' → logprob: -5.0493669509887695
    6. 'curr' → logprob: -6.0493669509887695
    7. 'expected' → logprob: -6.4243669509887695
    8. 's' → logprob: -7.7993669509887695
    9. 'total' → logprob: -7.9243669509887695
    10. ' curr' → logprob: -8.42436695098877

Token 186: '_pi' (ID: 122020)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0032422395888715982
    2. '_window' → logprob: -6.378242015838623
    3. '_s' → logprob: -6.628242015838623
    4. '_' → logprob: -9.003242492675781
    5. ' =' → logprob: -9.753242492675781
    6. '_val' → logprob: -11.878242492675781
    7. 'sum' → logprob: -12.628242492675781
    8. '_w' → logprob: -12.753242492675781
    9. '=' → logprob: -12.753242492675781
    10. '_max' → logprob: -13.003242492675781

Token 187: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.008834847249090672
    2. ' =' → logprob: -5.2588348388671875
    3. '_s' → logprob: -6.1338348388671875
    4. '_' → logprob: -7.7588348388671875
    5. '_val' → logprob: -8.258834838867188
    6. 'sum' → logprob: -8.508834838867188
    7. 'r' → logprob: -9.133834838867188
    8. 's' → logprob: -9.508834838867188
    9. '_value' → logprob: -10.008834838867188
    10. '=' → logprob: -10.008834838867188

Token 188: ' p' (ID: 275)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14154230058193207
    2. ' sum' → logprob: -2.1415421962738037
    3. '0' → logprob: -4.266542434692383
    4. '   ' → logprob: -8.891542434692383
    5. '(sum' → logprob: -9.141542434692383
    6. ' ' → logprob: -9.641542434692383
    7. 'p' → logprob: -9.766542434692383
    8. ' p' → logprob: -10.766542434692383
    9. 's' → logprob: -11.141542434692383
    10. ' (' → logprob: -11.641542434692383

Token 189: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.08910349011421204
    2. '[' → logprob: -2.4641034603118896
    3. '0' → logprob: -9.214103698730469
    4. ':' → logprob: -10.464103698730469
    5. ' [:' → logprob: -10.964103698730469
    6. '
' → logprob: -12.464103698730469
    7. 'def' → logprob: -12.964103698730469
    8. '[i' → logprob: -13.089103698730469
    9. 's' → logprob: -13.339103698730469
    10. '[
' → logprob: -13.464103698730469

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003268831642344594
    2. ':' → logprob: -8.625327110290527
    3. ' ' → logprob: -9.750327110290527
    4. 'k' → logprob: -10.125327110290527
    5. ' :' → logprob: -10.250327110290527
    6. 'i' → logprob: -11.500327110290527
    7. ':k' → logprob: -13.875327110290527
    8. '   ' → logprob: -14.250327110290527
    9. ' k' → logprob: -14.687827110290527
    10. 'n' → logprob: -15.250327110290527

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006386957131326199
    2. ']
' → logprob: -5.506386756896973
    3. ']+' → logprob: -7.256386756896973
    4. ' ]' → logprob: -7.756386756896973
    5. ':' → logprob: -7.881386756896973
    6. '])' → logprob: -8.506386756896973
    7. '0' → logprob: -8.881386756896973
    8. ']
' → logprob: -9.381386756896973
    9. ':p' → logprob: -9.631386756896973
    10. '[' → logprob: -10.006386756896973

Token 192: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35911473631858826
    2. '
' → logprob: -1.7341147661209106
    3. ' +' → logprob: -2.734114646911621
    4. 'for' → logprob: -3.859114646911621
    5. 's' → logprob: -4.984114646911621
    6. ')' → logprob: -5.359114646911621
    7. ':' → logprob: -5.484114646911621
    8. ' (' → logprob: -6.234114646911621
    9. 'def' → logprob: -6.234114646911621
    10. '+(' → logprob: -6.484114646911621

Token 193: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.892758846282959
    2. '+' → logprob: -1.017758846282959
    3. ' +' → logprob: -2.642758846282959
    4. 'sum' → logprob: -2.767758846282959
    5. '_sum' → logprob: -3.392758846282959
    6. 'for' → logprob: -3.767758846282959
    7. '   ' → logprob: -4.267758846282959
    8. 's' → logprob: -4.767758846282959
    9. ')' → logprob: -5.892758846282959
    10. '+s' → logprob: -6.767758846282959

Token 194: ' Premier' (ID: 27686)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09513132274150848
    2. ' sum' → logprob: -3.3451313972473145
    3. 'current' → logprob: -4.3451313972473145
    4. '+' → logprob: -4.8451313972473145
    5. 'for' → logprob: -5.2201313972473145
    6. 's' → logprob: -5.4701313972473145
    7. ' current' → logprob: -5.5951313972473145
    8. ' p' → logprob: -6.0951313972473145
    9. 'before' → logprob: -6.0951313972473145
    10. ' for' → logprob: -6.0951313972473145

Token 195: ' élément' (ID: 99627)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.2300174236297607
    2. 'token' → logprob: -1.3550174236297607
    3. '_token' → logprob: -1.8550174236297607
    4. '+' → logprob: -2.6050174236297607
    5. '_' → logprob: -2.6050174236297607
    6. '_sum' → logprob: -3.7300174236297607
    7. ']' → logprob: -4.23001766204834
    8. 'sum' → logprob: -4.35501766204834
    9. '_val' → logprob: -4.35501766204834
    10. ' +' → logprob: -4.35501766204834

Token 196: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026070591062307358
    2. ' p' → logprob: -3.7760705947875977
    3. 'la' → logprob: -6.401070594787598
    4. ' la' → logprob: -6.901070594787598
    5. 'l' → logprob: -9.151070594787598
    6. '(p' → logprob: -11.901070594787598
    7. ' l' → logprob: -12.276070594787598
    8. '   ' → logprob: -12.588570594787598
    9. ' ' → logprob: -12.588570594787598
    10. 'the' → logprob: -12.651070594787598

Token 198: ' fenêtre' (ID: 109648)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10200146585702896
    2. ' p' → logprob: -2.477001428604126
    3. ')' → logprob: -6.102001667022705
    4. ' list' → logprob: -6.477001667022705
    5. ']' → logprob: -6.727001667022705
    6. 'list' → logprob: -6.977001667022705
    7. 's' → logprob: -7.102001667022705
    8. 'def' → logprob: -7.477001667022705
    9. 'liste' → logprob: -7.477001667022705
    10. '[' → logprob: -7.602001667022705

Token 199: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058069292455911636
    2. '
' → logprob: -3.5580692291259766
    3. 'sum' → logprob: -5.183069229125977
    4. 's' → logprob: -5.683069229125977
    5. ',' → logprob: -5.683069229125977
    6. '<|end|>' → logprob: -5.933069229125977
    7. '+' → logprob: -6.058069229125977
    8. ' +' → logprob: -6.308069229125977
    9. '    
' → logprob: -6.683069229125977
    10. '_sum' → logprob: -6.683069229125977

Token 200: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.007307257503271103
    2. 'ant' → logprob: -5.632307052612305
    3. 'r' → logprob: -6.132307052612305
    4. 'te' → logprob: -7.632307052612305
    5. '   ' → logprob: -8.382307052612305
    6. 'p' → logprob: -9.132307052612305
    7. 'u' → logprob: -9.382307052612305
    8. '[' → logprob: -9.382307052612305
    9. 'ente' → logprob: -9.382307052612305
    10. 'ue' → logprob: -9.757307052612305

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5621445178985596
    2. '+' → logprob: -1.4371445178985596
    3. ' +' → logprob: -2.8121445178985596
    4. 'sum' → logprob: -2.8121445178985596
    5. '
' → logprob: -3.6871445178985596
    6. ' sum' → logprob: -4.6871442794799805
    7. '<|end|>' → logprob: -4.9371442794799805
    8. 's' → logprob: -5.3121442794799805
    9. ' for' → logprob: -5.5621442794799805
    10. ')' → logprob: -5.6871442794799805

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48326098918914795
    2. '
' → logprob: -1.483260989189148
    3. ' for' → logprob: -2.8582611083984375
    4. 'sum' → logprob: -3.6082611083984375
    5. ' sum' → logprob: -4.3582611083984375
    6. 'for' → logprob: -4.4832611083984375
    7. 'total' → logprob: -4.7332611083984375
    8. ' total' → logprob: -4.7332611083984375
    9. 'current' → logprob: -5.6082611083984375
    10. ' 
' → logprob: -5.8582611083984375

Token 203: ' before' (ID: 2254)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.468156337738037
    2. '   ' → logprob: -1.843156337738037
    3. 'current' → logprob: -1.968156337738037
    4. ' current' → logprob: -1.968156337738037
    5. ' sum' → logprob: -2.468156337738037
    6. ' for' → logprob: -2.593156337738037
    7. 'for' → logprob: -2.843156337738037
    8. 'total' → logprob: -3.718156337738037
    9. ' window' → logprob: -3.843156337738037
    10. ' total' → logprob: -3.843156337738037

Token 204: '_sum' (ID: 29859)
  Prédit: '_pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pi' → logprob: -0.24496805667877197
    2. '_sum' → logprob: -1.619968056678772
    3. '_' → logprob: -4.744967937469482
    4. '_p' → logprob: -5.494967937469482
    5. '_i' → logprob: -5.994967937469482
    6. '_val' → logprob: -7.119967937469482
    7. '_s' → logprob: -7.369967937469482
    8. 'sum' → logprob: -7.494967937469482
    9. '_idx' → logprob: -8.11996841430664
    10. '_value' → logprob: -8.11996841430664

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23246945440769196
    2. '=' → logprob: -1.6074694395065308
    3. '_' → logprob: -4.98246955871582
    4. '_p' → logprob: -9.85746955871582
    5. 'e' → logprob: -10.23246955871582
    6. '_=' → logprob: -10.23246955871582
    7. ' ' → logprob: -11.60746955871582
    8. 's' → logprob: -12.23246955871582
    9. '   ' → logprob: -12.23246955871582
    10. 'a' → logprob: -12.35746955871582

Token 206: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4875735938549042
    2. 'sum' → logprob: -1.3625736236572266
    3. '0' → logprob: -2.2375736236572266
    4. ' ' → logprob: -4.612573623657227
    5. ' p' → logprob: -5.487573623657227
    6. ' (' → logprob: -5.737573623657227
    7. '(sum' → logprob: -6.112573623657227
    8. 'p' → logprob: -6.487573623657227
    9. '(p' → logprob: -7.112573623657227
    10. ' before' → logprob: -7.612573623657227

Token 207: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006604883354157209
    2. '((' → logprob: -5.5066046714782715
    3. '(' → logprob: -6.1316046714782715
    4. '([' → logprob: -8.75660514831543
    5. ' (' → logprob: -9.13160514831543
    6. 'p' → logprob: -10.38160514831543
    7. '(
' → logprob: -10.50660514831543
    8. '([(' → logprob: -11.38160514831543
    9. ' p' → logprob: -13.63160514831543
    10. '   ' → logprob: -13.75660514831543

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.474571168422699
    2. '[:' → logprob: -0.974571168422699
    3. '[i' → logprob: -7.724571228027344
    4. ')' → logprob: -10.599571228027344
    5. '   ' → logprob: -11.849571228027344
    6. ' [:' → logprob: -11.849571228027344
    7. '[
' → logprob: -12.224571228027344
    8. '[:]' → logprob: -13.349571228027344
    9. '[p' → logprob: -13.474571228027344
    10. '0' → logprob: -13.724571228027344

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1912965327501297
    2. ':' → logprob: -1.8162965774536133
    3. '[:' → logprob: -5.816296577453613
    4. ' :' → logprob: -5.941296577453613
    5. ':i' → logprob: -5.941296577453613
    6. '   ' → logprob: -6.691296577453613
    7. 'i' → logprob: -7.816296577453613
    8. ' ' → logprob: -7.941296577453613
    9. ':p' → logprob: -8.566296577453613
    10. '1' → logprob: -8.691296577453613

Token 210: ':k' (ID: 69335)
  Prédit: ':k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.009061932563781738
    2. ':' → logprob: -4.759061813354492
    3. ' :' → logprob: -8.009061813354492
    4. ':i' → logprob: -10.259061813354492
    5. ':p' → logprob: -10.634061813354492
    6. 'k' → logprob: -10.759061813354492
    7. '   ' → logprob: -11.134061813354492
    8. '0' → logprob: -12.759061813354492
    9. ':j' → logprob: -12.759061813354492
    10. ':def' → logprob: -12.884061813354492

Token 211: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0016349549405276775
    2. ' ])' → logprob: -6.5016350746154785
    3. '])
' → logprob: -9.25163459777832
    4. ')' → logprob: -11.25163459777832
    5. ']' → logprob: -11.62663459777832
    6. ' ' → logprob: -12.87663459777832
    7. ')])' → logprob: -13.62663459777832
    8. '   ' → logprob: -13.62663459777832
    9. '])/' → logprob: -13.75163459777832
    10. ' )' → logprob: -14.00163459777832

Token 212: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5986188054084778
    2. '   ' → logprob: -0.8486188054084778
    3. '    
' → logprob: -3.973618745803833
    4. '  
' → logprob: -6.223618984222412
    5. '   
' → logprob: -7.098618984222412
    6. ' 
' → logprob: -8.473618507385254
    7. '
' → logprob: -8.598618507385254
    8. '\n' → logprob: -9.098618507385254
    9. '+' → logprob: -9.973618507385254
    10. ' for' → logprob: -10.598618507385254

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030871855095028877
    2. ' ' → logprob: -4.530871868133545
    3. 'k' → logprob: -4.780871868133545
    4. 'p' → logprob: -5.530871868133545
    5. ' p' → logprob: -5.780871868133545
    6. '1' → logprob: -6.530871868133545
    7. ' k' → logprob: -6.530871868133545
    8. 'before' → logprob: -8.030871391296387
    9. ' (' → logprob: -8.405871391296387
    10. ' before' → logprob: -8.530871391296387

Token 214: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5869331359863281
    2. '0' → logprob: -0.9619331359863281
    3. '1' → logprob: -3.461933135986328
    4. '(k' → logprob: -3.961933135986328
    5. 'p' → logprob: -5.586933135986328
    6. '(' → logprob: -6.211933135986328
    7. ' k' → logprob: -6.211933135986328
    8. '(p' → logprob: -6.961933135986328
    9. ' ' → logprob: -7.211933135986328
    10. 'before' → logprob: -7.336933135986328

Token 215: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10761161148548126
    2. '1' → logprob: -3.107611656188965
    3. '
' → logprob: -3.357611656188965
    4. '0' → logprob: -4.982611656188965
    5. '#' → logprob: -5.357611656188965
    6. 'def' → logprob: -5.982611656188965
    7. ' ' → logprob: -6.232611656188965
    8. 'if' → logprob: -7.232611656188965
    9. ')' → logprob: -7.357611656188965
    10. ' #' → logprob: -7.482611656188965

Token 216: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.14613021910190582
    2. '0' → logprob: -2.021130323410034
    3. '1' → logprob: -6.146130084991455
    4. '6' → logprob: -7.146130084991455
    5. '000' → logprob: -8.021130561828613
    6. '999' → logprob: -9.146130561828613
    7. '-' → logprob: -10.896130561828613
    8. '499' → logprob: -11.396130561828613
    9. '4' → logprob: -11.958630561828613
    10. '9' → logprob: -11.958630561828613

Token 217: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17629176378250122
    2. '   ' → logprob: -1.9262917041778564
    3. '    
' → logprob: -4.5512919425964355
    4. ' for' → logprob: -5.6762919425964355
    5. 'for' → logprob: -7.5512919425964355
    6. '  
' → logprob: -7.6762919425964355
    7. ' 
' → logprob: -7.9262919425964355
    8. '\n' → logprob: -8.676291465759277
    9. '   
' → logprob: -9.176291465759277
    10. '
' → logprob: -9.426291465759277

Token 218: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22094430029392242
    2. '
' → logprob: -1.7209442853927612
    3. '    
' → logprob: -4.470944404602051
    4. ' for' → logprob: -5.095944404602051
    5. 'for' → logprob: -7.220944404602051
    6. '  
' → logprob: -7.470944404602051
    7. '   
' → logprob: -8.84594440460205
    8. ' 
' → logprob: -8.84594440460205
    9. '\n' → logprob: -10.59594440460205
    10. '  ' → logprob: -10.84594440460205

Token 219: ' Som' (ID: 12116)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2073017358779907
    2. 'max' → logprob: -1.5823017358779907
    3. ' current' → logprob: -1.9573017358779907
    4. 'result' → logprob: -2.582301616668701
    5. ' max' → logprob: -2.832301616668701
    6. 'sum' → logprob: -3.082301616668701
    7. ' result' → logprob: -3.832301616668701
    8. 'total' → logprob: -3.832301616668701
    9. '   ' → logprob: -3.957301616668701
    10. '
' → logprob: -4.082301616668701

Token 220: 'me' (ID: 1047)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6689908504486084
    2. 'ma' → logprob: -1.6689908504486084
    3. '   ' → logprob: -1.9189908504486084
    4. 'a' → logprob: -3.0439908504486084
    5. 'd' → logprob: -3.6689908504486084
    6. ')' → logprob: -3.7939908504486084
    7. 'me' → logprob: -4.5439910888671875
    8. 'p' → logprob: -4.6689910888671875
    9. 'de' → logprob: -5.0439910888671875
    10. '.' → logprob: -5.0439910888671875

Token 221: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5224804878234863
    2. '(p' → logprob: -1.8974804878234863
    3. 'e' → logprob: -2.8974804878234863
    4. '   ' → logprob: -3.0224804878234863
    5. '<|end|>' → logprob: -3.6474804878234863
    6. ' ' → logprob: -3.7724804878234863
    7. '()' → logprob: -3.8974804878234863
    8. ' (' → logprob: -4.022480487823486
    9. ' p' → logprob: -5.022480487823486
    10. '<|end|>' → logprob: -5.022480487823486

Token 223: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04122331365942955
    2. 'max' → logprob: -3.7912232875823975
    3. 'current' → logprob: -4.416223526000977
    4. ' current' → logprob: -6.416223526000977
    5. ' max' → logprob: -6.791223526000977
    6. 'sum' → logprob: -7.666223526000977
    7. 'best' → logprob: -7.791223526000977
    8. '
' → logprob: -7.916223526000977
    9. 'cur' → logprob: -7.916223526000977
    10. 'window' → logprob: -8.666223526000977

Token 224: ' la' (ID: 557)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.238009974360466
    2. 'p' → logprob: -1.6130099296569824
    3. ' before' → logprob: -5.238009929656982
    4. 'before' → logprob: -5.488009929656982
    5. ' the' → logprob: -6.863009929656982
    6. '(p' → logprob: -7.363009929656982
    7. 'k' → logprob: -8.23801040649414
    8. ' k' → logprob: -8.48801040649414
    9. 'the' → logprob: -8.86301040649414
    10. ' ' → logprob: -8.98801040649414

Token 225: ' première' (ID: 23423)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8326565623283386
    2. 'p' → logprob: -1.8326566219329834
    3. 'window' → logprob: -2.0826566219329834
    4. 'before' → logprob: -2.2076566219329834
    5. ' p' → logprob: -2.5826566219329834
    6. ' k' → logprob: -3.4576566219329834
    7. ' before' → logprob: -3.8326566219329834
    8. 'fen' → logprob: -4.082656383514404
    9. ' window' → logprob: -4.082656383514404
    10. 'sum' → logprob: -6.707656383514404

Token 226: ' sous' (ID: 14487)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.6608887314796448
    2. 'window' → logprob: -1.285888671875
    3. ' fenêtre' → logprob: -2.285888671875
    4. ' window' → logprob: -2.910888671875
    5. ' fen' → logprob: -3.285888671875
    6. 'f' → logprob: -6.035888671875
    7. 's' → logprob: -6.160888671875
    8. 'token' → logprob: -6.285888671875
    9. '_window' → logprob: -6.285888671875
    10. '_f' → logprob: -7.160888671875

Token 227: '-l' (ID: 2887)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6027887463569641
    2. '_' → logprob: -1.3527886867523193
    3. '[' → logprob: -2.2277886867523193
    4. 'array' → logprob: -3.2277886867523193
    5. '_array' → logprob: -4.477788925170898
    6. '   ' → logprob: -4.852788925170898
    7. 'list' → logprob: -5.102788925170898
    8. '_l' → logprob: -5.102788925170898
    9. '_lst' → logprob: -5.602788925170898
    10. ' _' → logprob: -6.102788925170898

Token 228: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.007451629266142845
    2. 'ist' → logprob: -5.75745153427124
    3. 'liste' → logprob: -6.75745153427124
    4. '[' → logprob: -8.132452011108398
    5. 'igne' → logprob: -8.194952011108398
    6. 'is' → logprob: -8.257452011108398
    7. 'istes' → logprob: -8.319952011108398
    8. 'ste' → logprob: -8.319952011108398
    9. 'n' → logprob: -8.632452011108398
    10. '   ' → logprob: -9.132452011108398

Token 229: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10538890212774277
    2. 'max' → logprob: -2.980388879776001
    3. ' for' → logprob: -3.980388879776001
    4. 'for' → logprob: -4.10538911819458
    5. 'current' → logprob: -5.35538911819458
    6. ' max' → logprob: -5.35538911819458
    7. '
' → logprob: -6.35538911819458
    8. ' current' → logprob: -7.35538911819458
    9. 'result' → logprob: -7.35538911819458
    10. 'sum' → logprob: -8.230388641357422

Token 230: ' longueur' (ID: 104613)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13105061650276184
    2. 'k' → logprob: -2.1310505867004395
    3. ' p' → logprob: -6.5060505867004395
    4. 'length' → logprob: -6.8810505867004395
    5. 'tail' → logprob: -7.5060505867004395
    6. 'long' → logprob: -7.5060505867004395
    7. 'range' → logprob: -8.506051063537598
    8. ' k' → logprob: -9.131051063537598
    9. 'la' → logprob: -9.881051063537598
    10. 'val' → logprob: -10.381051063537598

Token 231: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.474077433347702
    2. ' k' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.599077224731445
    4. '	k' → logprob: -16.099077224731445
    5. ' ' → logprob: -16.599077224731445
    6. '```' → logprob: -17.474077224731445
    7. '_k' → logprob: -17.724077224731445
    8. ' к' → logprob: -17.849077224731445
    9. '{k' → logprob: -18.599077224731445
    10. '=k' → logprob: -18.849077224731445

Token 232: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00937033910304308
    2. '
' → logprob: -5.63437032699585
    3. ' for' → logprob: -6.38437032699585
    4. 'max' → logprob: -6.75937032699585
    5. 'for' → logprob: -7.00937032699585
    6. 'current' → logprob: -7.25937032699585
    7. '    
' → logprob: -7.88437032699585
    8. ' max' → logprob: -8.509370803833008
    9. 'result' → logprob: -8.884370803833008
    10. ',' → logprob: -9.009370803833008

Token 233: ' conversion' (ID: 22165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16646382212638855
    2. '
' → logprob: -3.166463851928711
    3. 'max' → logprob: -3.541463851928711
    4. ' i' → logprob: -4.416463851928711
    5. ' max' → logprob: -4.416463851928711
    6. 'result' → logprob: -4.916463851928711
    7. '    
' → logprob: -4.916463851928711
    8. 'i' → logprob: -5.166463851928711
    9. 'current' → logprob: -5.291463851928711
    10. ' 
' → logprob: -5.416463851928711

Token 234: ' explic' (ID: 20781)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.09949175268411636
    2. 'en' → logprob: -2.474491834640503
    3. ' explic' → logprob: -4.849491596221924
    4. 'float' → logprob: -7.349491596221924
    5. ' float' → logprob: -7.474491596221924
    6. '   ' → logprob: -8.474492073059082
    7. '=float' → logprob: -8.599492073059082
    8. ' explicit' → logprob: -8.974492073059082
    9. '=' → logprob: -9.224492073059082
    10. 'explicit' → logprob: -9.349492073059082

Token 235: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0018399908440187573
    2. 'it' → logprob: -6.376840114593506
    3. 'ate' → logprob: -10.001839637756348
    4. 't' → logprob: -10.251839637756348
    5. ' ite' → logprob: -10.626839637756348
    6. 'te' → logprob: -11.876839637756348
    7. 'itte' → logprob: -12.376839637756348
    8. 'iter' → logprob: -12.626839637756348
    9. ' ' → logprob: -12.751839637756348
    10. 'ement' → logprob: -13.126839637756348

Token 236: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8116878867149353
    2. ' to' → logprob: -1.06168794631958
    3. ' de' → logprob: -3.06168794631958
    4. ')' → logprob: -3.56168794631958
    5. ' à' → logprob: -3.81168794631958
    6. ' en' → logprob: -4.06168794631958
    7. 'to' → logprob: -4.18668794631958
    8. 'def' → logprob: -4.31168794631958
    9. '
' → logprob: -4.81168794631958
    10. ' ' → logprob: -5.18668794631958

Token 237: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2519342601299286
    2. ' float' → logprob: -1.501934289932251
    3. ' ' → logprob: -13.126934051513672
    4. 'fl' → logprob: -13.626934051513672
    5. ' flott' → logprob: -14.626934051513672
    6. 'floating' → logprob: -14.751934051513672
    7. ' floating' → logprob: -14.876934051513672
    8. 'flo' → logprob: -15.626934051513672
    9. ' ' → logprob: -15.876934051513672
    10. '_float' → logprob: -16.001934051513672

Token 238: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011914008297026157
    2. '
' → logprob: -5.136913776397705
    3. ' for' → logprob: -5.886913776397705
    4. '    
' → logprob: -7.136913776397705
    5. '<|end|>' → logprob: -7.761913776397705
    6. 'for' → logprob: -7.886913776397705
    7. 'current' → logprob: -8.011914253234863
    8. 'result' → logprob: -8.386914253234863
    9. '  
' → logprob: -9.136914253234863
    10. ')' → logprob: -9.261914253234863

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007248214911669493
    2. '
' → logprob: -5.382248401641846
    3. ' for' → logprob: -6.382248401641846
    4. '    
' → logprob: -7.632248401641846
    5. 'for' → logprob: -9.507247924804688
    6. '```' → logprob: -9.757247924804688
    7. '  
' → logprob: -9.882247924804688
    8. ' max' → logprob: -10.007247924804688
    9. '\n' → logprob: -10.507247924804688
    10. ',' → logprob: -10.632247924804688

Token 240: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.015913300216197968
    2. 'best' → logprob: -5.265913486480713
    3. 'for' → logprob: -5.390913486480713
    4. '   ' → logprob: -5.515913486480713
    5. 'res' → logprob: -7.390913486480713
    6. 'result' → logprob: -7.515913486480713
    7. 'current' → logprob: -8.015913009643555
    8. ' max' → logprob: -8.265913009643555
    9. 'expected' → logprob: -8.890913009643555
    10. 'before' → logprob: -9.890913009643555

Token 241: 'l' (ID: 75)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25046488642692566
    2. '_max' → logprob: -1.875464916229248
    3. '_p' → logprob: -3.625464916229248
    4. '_val' → logprob: -3.875464916229248
    5. '_current' → logprob: -5.500464916229248
    6. '_before' → logprob: -5.625464916229248
    7. '_value' → logprob: -5.875464916229248
    8. '_pi' → logprob: -6.250464916229248
    9. '_k' → logprob: -6.500464916229248
    10. 'max' → logprob: -7.125464916229248

Token 242: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023498890921473503
    2. '=' → logprob: -5.273499011993408
    3. 'y' → logprob: -5.273499011993408
    4. ' =' → logprob: -5.523499011993408
    5. '_p' → logprob: -5.523499011993408
    6. '_val' → logprob: -6.523499011993408
    7. '_before' → logprob: -6.523499011993408
    8. '_=' → logprob: -7.523499011993408
    9. 's' → logprob: -8.02349853515625
    10. 'a' → logprob: -8.89849853515625

Token 243: ' [' (ID: 723)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.058279503136873245
    2. ' before' → logprob: -3.183279514312744
    3. '0' → logprob: -4.933279514312744
    4. 'max' → logprob: -5.183279514312744
    5. ' max' → logprob: -7.808279514312744
    6. 'float' → logprob: -7.808279514312744
    7. 'p' → logprob: -8.058279037475586
    8. 'sum' → logprob: -8.183279037475586
    9. ' ' → logprob: -8.433279037475586
    10. '   ' → logprob: -8.558279037475586

Token 244: 'sum' (ID: 12298)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.005819887388497591
    2. '0' → logprob: -6.380819797515869
    3. ' before' → logprob: -6.505819797515869
    4. 'p' → logprob: -6.505819797515869
    5. '(before' → logprob: -7.630819797515869
    6. '(p' → logprob: -8.755820274353027
    7. ']' → logprob: -8.880820274353027
    8. '(' → logprob: -9.005820274353027
    9. ' p' → logprob: -10.505820274353027
    10. 'sum' → logprob: -10.505820274353027

Token 245: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2982097566127777
    2. '(' → logprob: -1.6732097864151
    3. '(before' → logprob: -3.1732096672058105
    4. '([' → logprob: -4.5482096672058105
    5. '_before' → logprob: -5.6732096672058105
    6. 'p' → logprob: -5.6732096672058105
    7. 'before' → logprob: -5.7982096672058105
    8. '_p' → logprob: -6.7982096672058105
    9. '[' → logprob: -6.7982096672058105
    10. '(sum' → logprob: -7.0482096672058105

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2730206549167633
    2. '0' → logprob: -1.523020625114441
    3. '(' → logprob: -4.2730207443237305
    4. '[i' → logprob: -6.0230207443237305
    5. '[:' → logprob: -6.2730207443237305
    6. ')' → logprob: -7.3980207443237305
    7. 'i' → logprob: -7.5230207443237305
    8. '   ' → logprob: -7.5230207443237305
    9. '[k' → logprob: -8.14802074432373
    10. ']' → logprob: -9.39802074432373

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0215772558003664
    2. 'i' → logprob: -3.8965773582458496
    3. ':' → logprob: -8.146576881408691
    4. 'k' → logprob: -8.646576881408691
    5. '1' → logprob: -9.271576881408691
    6. 'x' → logprob: -9.646576881408691
    7. ':i' → logprob: -9.646576881408691
    8. ' ' → logprob: -9.896576881408691
    9. '(' → logprob: -10.021576881408691
    10. ']' → logprob: -10.146576881408691

Token 248: ':k' (ID: 69335)
  Prédit: ':k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.004009661264717579
    2. 'k' → logprob: -5.75400972366333
    3. ':' → logprob: -8.254009246826172
    4. ' :' → logprob: -8.504009246826172
    5. '0' → logprob: -8.879009246826172
    6. '1' → logprob: -9.254009246826172
    7. '   ' → logprob: -9.879009246826172
    8. ':i' → logprob: -11.129009246826172
    9. ';k' → logprob: -11.379009246826172
    10. ' ' → logprob: -11.504009246826172

Token 249: '])]' (ID: 178925)
  Prédit: '])]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.005063333082944155
    2. '])' → logprob: -5.380063533782959
    3. ')]' → logprob: -8.8800630569458
    4. ':' → logprob: -9.6300630569458
    5. '])+' → logprob: -9.8800630569458
    6. ')])' → logprob: -10.0050630569458
    7. '])]
' → logprob: -10.1300630569458
    8. ')' → logprob: -10.3800630569458
    9. ']' → logprob: -10.5050630569458
    10. '+' → logprob: -11.2550630569458

Token 250: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2718176543712616
    2. '
' → logprob: -2.146817684173584
    3. '<|end|>' → logprob: -2.396817684173584
    4. '    
' → logprob: -5.021817684173584
    5. ')' → logprob: -5.271817684173584
    6. ' 
' → logprob: -5.646817684173584
    7. '  
' → logprob: -5.771817684173584
    8. ' ' → logprob: -5.896817684173584
    9. ' for' → logprob: -6.271817684173584
    10. '<|end|>' → logprob: -6.271817684173584

Token 251: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3174359202384949
    2. 'for' → logprob: -2.4424359798431396
    3. '   ' → logprob: -2.4424359798431396
    4. ' for' → logprob: -2.8174359798431396
    5. ' 
' → logprob: -4.4424357414245605
    6. '  
' → logprob: -5.1924357414245605
    7. '<|end|>' → logprob: -5.5674357414245605
    8. '    
' → logprob: -5.5674357414245605
    9. ')' → logprob: -5.6924357414245605
    10. '\n' → logprob: -6.0674357414245605

Token 252: ' Liste' (ID: 61030)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3755773901939392
    2. 'for' → logprob: -2.375577449798584
    3. ']' → logprob: -2.500577449798584
    4. 'p' → logprob: -3.125577449798584
    5. ')' → logprob: -4.125577449798584
    6. '<|end|>' → logprob: -4.500577449798584
    7. 'float' → logprob: -4.625577449798584
    8. '0' → logprob: -4.750577449798584
    9. 'before' → logprob: -4.875577449798584
    10. '[' → logprob: -5.125577449798584

Token 253: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' stock' (ID: 6546)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.07727797329425812
    2. ' stock' → logprob: -3.577277898788452
    3. 'store' → logprob: -4.202278137207031
    4. 'st' → logprob: -4.952278137207031
    5. 'acc' → logprob: -4.952278137207031
    6. 'su' → logprob: -5.077278137207031
    7. 'sum' → logprob: -5.577278137207031
    8. 's' → logprob: -6.327278137207031
    9. 'max' → logprob: -6.452278137207031
    10. 'append' → logprob: -7.952278137207031

Token 255: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006483370088972151
    2. '[' → logprob: -8.125648498535156
    3. '   ' → logprob: -8.625648498535156
    4. 'iner' → logprob: -9.125648498535156
    5. 'érer' → logprob: -10.625648498535156
    6. 'e' → logprob: -12.625648498535156
    7. '[i' → logprob: -12.625648498535156
    8. 'erer' → logprob: -12.625648498535156
    9. '[max' → logprob: -12.875648498535156
    10. ']' → logprob: -13.000648498535156

Token 256: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7976382374763489
    2. ' p' → logprob: -1.297638177871704
    3. ' la' → logprob: -2.547638177871704
    4. 'sum' → logprob: -2.797638177871704
    5. 'les' → logprob: -3.672638177871704
    6. ' des' → logprob: -3.797638177871704
    7. 'the' → logprob: -4.047638416290283
    8. 's' → logprob: -4.297638416290283
    9. ' the' → logprob: -4.297638416290283
    10. 'p' → logprob: -4.547638416290283

Token 257: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8396598696708679
    2. 'max' → logprob: -1.5896599292755127
    3. 's' → logprob: -1.9646599292755127
    4. 'before' → logprob: -2.3396599292755127
    5. 'k' → logprob: -2.5896599292755127
    6. 'p' → logprob: -4.089659690856934
    7. ' before' → logprob: -4.839659690856934
    8. ' p' → logprob: -5.089659690856934
    9. ' sum' → logprob: -5.339659690856934
    10. ' k' → logprob: -5.464659690856934

Token 258: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029818419367074966
    2. 'des' → logprob: -3.654818534851074
    3. '_des' → logprob: -7.154818534851074
    4. ' des' → logprob: -7.529818534851074
    5. 'es' → logprob: -7.654818534851074
    6. '[' → logprob: -8.029818534851074
    7. 'max' → logprob: -8.029818534851074
    8. '(s' → logprob: -8.404818534851074
    9. '   ' → logprob: -9.154818534851074
    10. '(p' → logprob: -9.404818534851074

Token 259: ' chaque' (ID: 21194)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8312730193138123
    2. 'les' → logprob: -1.831273078918457
    3. '[p' → logprob: -1.956273078918457
    4. ' p' → logprob: -2.081273078918457
    5. '[' → logprob: -2.831273078918457
    6. 's' → logprob: -4.206273078918457
    7. 'la' → logprob: -4.456273078918457
    8. ' les' → logprob: -4.581273078918457
    9. ' toutes' → logprob: -5.081273078918457
    10. 't' → logprob: -5.331273078918457

Token 260: ' sous' (ID: 14487)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1438668817281723
    2. ' p' → logprob: -2.268866777420044
    3. 's' → logprob: -5.018867015838623
    4. '[' → logprob: -5.018867015838623
    5. '(p' → logprob: -5.018867015838623
    6. 'sub' → logprob: -6.018867015838623
    7. '[p' → logprob: -6.393867015838623
    8. ' [' → logprob: -6.768867015838623
    9. '_' → logprob: -6.893867015838623
    10. '(' → logprob: -7.643867015838623

Token 261: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.18656247854232788
    2. 'liste' → logprob: -2.9365625381469727
    3. '-list' → logprob: -3.0615625381469727
    4. '_l' → logprob: -3.6865625381469727
    5. '_list' → logprob: -3.8115625381469727
    6. 'list' → logprob: -4.686562538146973
    7. '-' → logprob: -5.186562538146973
    8. 'l' → logprob: -5.686562538146973
    9. '_lists' → logprob: -6.186562538146973
    10. '[' → logprob: -7.436562538146973

Token 262: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.03636929392814636
    2. 'ist' → logprob: -4.161369323730469
    3. 'istes' → logprob: -4.286369323730469
    4. 'ists' → logprob: -6.411369323730469
    5. '[' → logprob: -7.411369323730469
    6. 'liste' → logprob: -7.661369323730469
    7. '```' → logprob: -8.161369323730469
    8. 'isted' → logprob: -8.286369323730469
    9. '   ' → logprob: -8.723869323730469
    10. 'ista' → logprob: -8.786369323730469

Token 263: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' taille' (ID: 41644)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8344931602478027
    2. 'long' → logprob: -1.4594931602478027
    3. 'length' → logprob: -2.0844931602478027
    4. 'k' → logprob: -2.5844931602478027
    5. 'val' → logprob: -3.2094931602478027
    6. ' p' → logprob: -3.3344931602478027
    7. 'tail' → logprob: -4.459493160247803
    8. ' longueur' → logprob: -4.459493160247803
    9. 'range' → logprob: -4.584493160247803
    10. 'len' → logprob: -4.959493160247803

Token 265: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07891149073839188
    2. ' k' → logprob: -2.578911542892456
    3. '```' → logprob: -12.203911781311035
    4. '_k' → logprob: -12.703911781311035
    5. ' ' → logprob: -13.078911781311035
    6. ' ' → logprob: -13.203911781311035
    7. '1' → logprob: -13.328911781311035
    8. '   ' → logprob: -13.328911781311035
    9. '
' → logprob: -13.953911781311035
    10. '	k' → logprob: -14.078911781311035

Token 266: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9684077501296997
    2. '<|end|>' → logprob: -1.4684077501296997
    3. ')' → logprob: -2.34340763092041
    4. '[' → logprob: -2.59340763092041
    5. ' ' → logprob: -2.59340763092041
    6. '
' → logprob: -3.09340763092041
    7. ']' → logprob: -3.84340763092041
    8. ',' → logprob: -4.34340763092041
    9. '.' → logprob: -4.34340763092041
    10. '    
' → logprob: -4.84340763092041

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6869622468948364
    2. ' for' → logprob: -1.4369622468948364
    3. '
' → logprob: -2.561962127685547
    4. 'for' → logprob: -2.561962127685547
    5. ' 
' → logprob: -3.561962127685547
    6. '    
' → logprob: -3.686962127685547
    7. '\n' → logprob: -3.936962127685547
    8. '  
' → logprob: -4.061962127685547
    9. '   
' → logprob: -6.061962127685547
    10. ')' → logprob: -6.061962127685547

Token 268: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6257375478744507
    2. ' for' → logprob: -1.1257375478744507
    3. '   ' → logprob: -2.0007376670837402
    4. '
' → logprob: -6.00073766708374
    5. 'i' → logprob: -7.25073766708374
    6. '	for' → logprob: -7.62573766708374
    7. '    
' → logprob: -7.62573766708374
    8. ' i' → logprob: -7.87573766708374
    9. '\n' → logprob: -8.375737190246582
    10. ' 
' → logprob: -9.125737190246582

Token 269: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024751186720095575
    2. ' for' → logprob: -8.500247955322266
    3. 'current' → logprob: -10.875247955322266
    4. '   ' → logprob: -12.000247955322266
    5. 'i' → logprob: -12.500247955322266
    6. 'start' → logprob: -12.750247955322266
    7. '
' → logprob: -12.875247955322266
    8. '#' → logprob: -13.125247955322266
    9. 'from' → logprob: -13.875247955322266
    10. 'prev' → logprob: -13.875247955322266

Token 270: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.08372488617897034
    2. 'ours' → logprob: -2.5837249755859375
    3. 'ourt' → logprob: -5.8337249755859375
    4. 'or' → logprob: -6.8337249755859375
    5. 'o' → logprob: -8.708724975585938
    6. '   ' → logprob: -9.208724975585938
    7. 'ou' → logprob: -9.583724975585938
    8. '```' → logprob: -9.708724975585938
    9. '#' → logprob: -9.833724975585938
    10. '_' → logprob: -10.083724975585938

Token 271: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38847339153289795
    2. 'e' → logprob: -2.0134735107421875
    3. '_' → logprob: -2.7634735107421875
    4. ' ' → logprob: -3.3884735107421875
    5. ' range' → logprob: -3.8884735107421875
    6. 'er' → logprob: -4.6384735107421875
    7. '(' → logprob: -4.6384735107421875
    8. ' for' → logprob: -5.1384735107421875
    9. ' e' → logprob: -5.1384735107421875
    10. 'r' → logprob: -5.1384735107421875

Token 272: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9276269674301147
    2. 'range' → logprob: -1.0526269674301147
    3. ' la' → logprob: -2.1776270866394043
    4. ' les' → logprob: -2.9276270866394043
    5. ' i' → logprob: -3.0526270866394043
    6. 'la' → logprob: -4.302627086639404
    7. 'i' → logprob: -4.552627086639404
    8. 'les' → logprob: -5.427627086639404
    9. ' p' → logprob: -5.427627086639404
    10. ' ' → logprob: -5.552627086639404

Token 273: ' sous' (ID: 14487)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7078599333763123
    2. ' i' → logprob: -1.582859992980957
    3. 'range' → logprob: -1.832859992980957
    4. ' range' → logprob: -2.207859992980957
    5. 'ranges' → logprob: -4.457859992980957
    6. ' positions' → logprob: -5.707859992980957
    7. ' p' → logprob: -5.957859992980957
    8. 'positions' → logprob: -6.082859992980957
    9. 'indices' → logprob: -6.582859992980957
    10. ' indices' → logprob: -6.582859992980957

Token 274: '-list' (ID: 18463)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.051841478794813156
    2. '_lists' → logprob: -3.8018414974212646
    3. '   ' → logprob: -4.1768412590026855
    4. '_l' → logprob: -5.4268412590026855
    5. '-list' → logprob: -5.9268412590026855
    6. 'list' → logprob: -6.8018412590026855
    7. '-' → logprob: -6.9268412590026855
    8. '_lst' → logprob: -7.0518412590026855
    9. '_len' → logprob: -7.5518412590026855
    10. '-l' → logprob: -7.6768412590026855

Token 275: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.06697794049978256
    2. 'stes' → logprob: -3.4419779777526855
    3. 'es' → logprob: -3.8169779777526855
    4. 'tes' → logprob: -5.3169779777526855
    5. 'ist' → logprob: -6.9419779777526855
    6. 'st' → logprob: -7.0669779777526855
    7. 'ites' → logprob: -7.6919779777526855
    8. 'iste' → logprob: -7.6919779777526855
    9. 'ettes' → logprob: -7.6919779777526855
    10. 'ists' → logprob: -7.9419779777526855

Token 276: ' cons' (ID: 1473)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27480918169021606
    2. 'range' → logprob: -2.2748091220855713
    3. ' range' → logprob: -2.7748091220855713
    4. 'de' → logprob: -3.0248091220855713
    5. '   ' → logprob: -5.02480936050415
    6. ' for' → logprob: -5.27480936050415
    7. ' i' → logprob: -5.64980936050415
    8. 'for' → logprob: -6.02480936050415
    9. ' p' → logprob: -6.39980936050415
    10. '[i' → logprob: -6.52480936050415

Token 277: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0821547657251358
    2. 'id' → logprob: -2.5821547508239746
    3. 'ecut' → logprob: -7.082154750823975
    4. 'ider' → logprob: -7.582154750823975
    5. 'idé' → logprob: -7.832154750823975
    6. 'équ' → logprob: -7.832154750823975
    7. 'é' → logprob: -8.082155227661133
    8. 'cut' → logprob: -8.957155227661133
    9. 'éc' → logprob: -9.082155227661133
    10. 'ér' → logprob: -9.457155227661133

Token 278: 'ives' (ID: 2264)
  Prédit: 'ives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ives' → logprob: -0.0009604159276932478
    2. 'ut' → logprob: -8.250960350036621
    3. 't' → logprob: -9.375960350036621
    4. 'ive' → logprob: -9.500960350036621
    5. '[' → logprob: -9.625960350036621
    6. 'ves' → logprob: -9.875960350036621
    7. '#' → logprob: -10.250960350036621
    8. 'iv' → logprob: -10.250960350036621
    9. 'if' → logprob: -10.375960350036621
    10. 'uves' → logprob: -10.500960350036621

Token 279: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6151114106178284
    2. ' range' → logprob: -1.9901113510131836
    3. 'range' → logprob: -2.1151113510131836
    4. ' for' → logprob: -2.3651113510131836
    5. 'for' → logprob: -3.2401113510131836
    6. '   ' → logprob: -3.6151113510131836
    7. 'de' → logprob: -3.8651113510131836
    8. ' p' → logprob: -5.365111351013184
    9. ' i' → logprob: -5.490111351013184
    10. ' of' → logprob: -6.365111351013184

Token 280: ' taille' (ID: 41644)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18149957060813904
    2. 'range' → logprob: -2.431499481201172
    3. ' p' → logprob: -3.681499481201172
    4. 'tail' → logprob: -4.056499481201172
    5. 'k' → logprob: -4.306499481201172
    6. 'length' → logprob: -4.306499481201172
    7. 'long' → logprob: -5.556499481201172
    8. ' range' → logprob: -6.556499481201172
    9. 'la' → logprob: -7.431499481201172
    10. 'len' → logprob: -7.556499481201172

Token 281: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07901272922754288
    2. ' k' → logprob: -2.579012632369995
    3. '1' → logprob: -9.204012870788574
    4. '   ' → logprob: -11.204012870788574
    5. ' ' → logprob: -12.329012870788574
    6. '	k' → logprob: -13.079012870788574
    7. '```' → logprob: -14.204012870788574
    8. '_k' → logprob: -14.704012870788574
    9. ' ' → logprob: -15.204012870788574
    10. '
' → logprob: -16.204011917114258

Token 282: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05038243904709816
    2. ' for' → logprob: -3.550382375717163
    3. 'for' → logprob: -4.050382614135742
    4. '
' → logprob: -6.050382614135742
    5. '    
' → logprob: -8.675382614135742
    6. ',' → logprob: -8.925382614135742
    7. '	for' → logprob: -9.425382614135742
    8. ' pour' → logprob: -9.675382614135742
    9. ' ' → logprob: -10.050382614135742
    10. ':' → logprob: -10.550382614135742

Token 283: ' mettant' (ID: 139614)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028661144897341728
    2. ' range' → logprob: -3.6536612510681152
    3. 'for' → logprob: -6.153661251068115
    4. 'p' → logprob: -9.403660774230957
    5. '   ' → logprob: -10.403660774230957
    6. ' for' → logprob: -10.903660774230957
    7. '(range' → logprob: -11.028660774230957
    8. '```' → logprob: -11.278660774230957
    9. 'python' → logprob: -11.528660774230957
    10. '	range' → logprob: -11.778660774230957

Token 284: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4777848720550537
    2. ' à' → logprob: -0.9777848720550537
    3. '_' → logprob: -7.227785110473633
    4. ' ' → logprob: -7.227785110473633
    5. '_j' → logprob: -7.352785110473633
    6. '```' → logprob: -7.477785110473633
    7. 'jour' → logprob: -8.102785110473633
    8. 'aj' → logprob: -8.477785110473633
    9. ' jour' → logprob: -8.852785110473633
    10. '   ' → logprob: -8.852785110473633

Token 285: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0008041490218602121
    2. ' jour' → logprob: -7.2508039474487305
    3. 'jours' → logprob: -10.00080394744873
    4. '```' → logprob: -10.50080394744873
    5. ' ' → logprob: -12.25080394744873
    6. 'Jour' → logprob: -12.50080394744873
    7. 'jou' → logprob: -12.62580394744873
    8. 'l' → logprob: -13.25080394744873
    9. '1' → logprob: -13.62580394744873
    10. '   ' → logprob: -13.75080394744873

Token 286: ' efficacement' (ID: 155449)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.6385684609413147
    2. ' la' → logprob: -1.88856840133667
    3. ' before' → logprob: -1.88856840133667
    4. '   ' → logprob: -2.38856840133667
    5. 'sum' → logprob: -3.76356840133667
    6. 'la' → logprob: -4.01356840133667
    7. 'for' → logprob: -4.26356840133667
    8. ' sum' → logprob: -5.13856840133667
    9. ' for' → logprob: -5.76356840133667
    10. ' le' → logprob: -6.01356840133667

Token 287: ' la' (ID: 557)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.24624276161193848
    2. 'for' → logprob: -2.7462427616119385
    3. '   ' → logprob: -2.9962427616119385
    4. ' before' → logprob: -2.9962427616119385
    5. ' la' → logprob: -4.121242523193359
    6. 'sum' → logprob: -4.246242523193359
    7. 'la' → logprob: -4.371242523193359
    8. ' for' → logprob: -5.121242523193359
    9. 'i' → logprob: -6.496242523193359
    10. 'l' → logprob: -7.371242523193359

Token 288: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13762569427490234
    2. 'sum' → logprob: -2.7626256942749023
    3. 's' → logprob: -3.2626256942749023
    4. 'current' → logprob: -4.637625694274902
    5. 'window' → logprob: -4.637625694274902
    6. ' for' → logprob: -6.012625694274902
    7. 'i' → logprob: -6.762625694274902
    8. 'fen' → logprob: -7.137625694274902
    9. '   ' → logprob: -7.262625694274902
    10. ' somme' → logprob: -7.387625694274902

Token 289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1425735354423523
    2. 'for' → logprob: -2.392573595046997
    3. ' for' → logprob: -3.267573595046997
    4. ',' → logprob: -6.767573356628418
    5. ' pour' → logprob: -7.767573356628418
    6. '	for' → logprob: -8.017573356628418
    7. 'pour' → logprob: -8.142573356628418
    8. '    ' → logprob: -8.142573356628418
    9. '  ' → logprob: -8.892573356628418
    10. ' ' → logprob: -9.267573356628418

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032525863498449326
    2. ' for' → logprob: -3.6575257778167725
    3. 'for' → logprob: -5.157526016235352
    4. ',' → logprob: -8.907526016235352
    5. '	for' → logprob: -9.032526016235352
    6. '    
' → logprob: -9.907526016235352
    7. ' pour' → logprob: -10.532526016235352
    8. '.' → logprob: -11.282526016235352
    9. '```' → logprob: -11.532526016235352
    10. ' i' → logprob: -11.657526016235352

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5900371074676514
    2. ' for' → logprob: -1.0900371074676514
    3. '   ' → logprob: -2.2150371074676514
    4. '
' → logprob: -8.96503734588623
    5. '	for' → logprob: -9.34003734588623
    6. ' i' → logprob: -10.09003734588623
    7. '    
' → logprob: -10.46503734588623
    8. 'i' → logprob: -10.46503734588623
    9. '```' → logprob: -12.34003734588623
    10. ' ' → logprob: -12.46503734588623

Token 292: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005435931961983442
    2. 'i' → logprob: -5.255435943603516
    3. ' ' → logprob: -9.005435943603516
    4. ' _' → logprob: -10.130435943603516
    5. ' idx' → logprob: -10.880435943603516
    6. '	i' → logprob: -12.005435943603516
    7. '_i' → logprob: -12.505435943603516
    8. '_' → logprob: -12.630435943603516
    9. ' index' → logprob: -13.380435943603516
    10. ' ' → logprob: -13.630435943603516

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052618607878685
    2. 'in' → logprob: -5.2552618980407715
    3. ' ' → logprob: -11.255261421203613
    4. '1' → logprob: -12.130261421203613
    5. ' i' → logprob: -12.505261421203613
    6. '	in' → logprob: -13.255261421203613
    7. '   ' → logprob: -15.005261421203613
    8. '_in' → logprob: -15.067761421203613
    9. 'd' → logprob: -15.192761421203613
    10. 's' → logprob: -15.192761421203613

Token 294: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4287210702896118
    2. ' range' → logprob: -1.0537210702896118
    3. ' ' → logprob: -12.05372142791748
    4. '   ' → logprob: -12.30372142791748
    5. '1' → logprob: -12.42872142791748
    6. '(range' → logprob: -13.42872142791748
    7. '	range' → logprob: -13.55372142791748
    8. 'k' → logprob: -13.80372142791748
    9. ' xrange' → logprob: -14.30372142791748
    10. '  ' → logprob: -14.30372142791748

Token 295: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02057669311761856
    2. '(k' → logprob: -3.8955767154693604
    3. ' (' → logprob: -11.395576477050781
    4. '1' → logprob: -11.520576477050781
    5. 'k' → logprob: -11.645576477050781
    6. ' k' → logprob: -13.270576477050781
    7. '   ' → logprob: -13.395576477050781
    8. '(n' → logprob: -14.270576477050781
    9. ',' → logprob: -15.270576477050781
    10. ',k' → logprob: -15.645576477050781

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14371004700660706
    2. 'k' → logprob: -2.018710136413574
    3. ' ' → logprob: -7.768710136413574
    4. ' k' → logprob: -8.018710136413574
    5. '   ' → logprob: -8.518710136413574
    6. 'n' → logprob: -9.768710136413574
    7. '    ' → logprob: -11.768710136413574
    8. '0' → logprob: -12.393710136413574
    9. '(' → logprob: -12.893710136413574
    10. '       ' → logprob: -13.018710136413574

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013642854755744338
    2. ',n' → logprob: -7.126364231109619
    3. ' ,' → logprob: -7.501364231109619
    4. ',k' → logprob: -12.626364707946777
    5. '(n' → logprob: -12.751364707946777
    6. '   ' → logprob: -14.626364707946777
    7. 'n' → logprob: -15.001364707946777
    8. ' n' → logprob: -16.00136375427246
    9. 'k' → logprob: -16.37636375427246
    10. ',len' → logprob: -16.50136375427246

Token 298: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10029325634241104
    2. ' n' → logprob: -2.3502931594848633
    3. '   ' → logprob: -9.600293159484863
    4. '	n' → logprob: -11.725293159484863
    5. 'len' → logprob: -12.225293159484863
    6. '(n' → logprob: -12.850293159484863
    7. ' ' → logprob: -13.100293159484863
    8. ' len' → logprob: -15.350293159484863
    9. '
' → logprob: -15.850293159484863
    10. '  ' → logprob: -15.850293159484863

Token 299: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13943764567375183
    2. '-k' → logprob: -2.139437675476074
    3. '-' → logprob: -4.389437675476074
    4. '):
' → logprob: -11.389437675476074
    5. ' ' → logprob: -12.389437675476074
    6. '   ' → logprob: -12.764437675476074
    7. ')' → logprob: -13.264437675476074
    8. 'k' → logprob: -13.764437675476074
    9. '-K' → logprob: -13.889437675476074
    10. '):' → logprob: -14.389437675476074

Token 300: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010332842357456684
    2. ' k' → logprob: -6.876033306121826
    3. '(k' → logprob: -14.751032829284668
    4. '	k' → logprob: -16.876033782958984
    5. '-k' → logprob: -17.126033782958984
    6. ' (' → logprob: -18.001033782958984
    7. '{k' → logprob: -18.001033782958984
    8. ' ' → logprob: -18.126033782958984
    9. '   ' → logprob: -18.751033782958984
    10. '_k' → logprob: -18.876033782958984

Token 301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142406225204468
    2. ' +' → logprob: -1.7014241218566895
    3. '   ' → logprob: -12.451423645019531
    4. ' ' → logprob: -13.326423645019531
    5. '1' → logprob: -13.951423645019531
    6. ')' → logprob: -14.201423645019531
    7. '
' → logprob: -14.201423645019531
    8. '```' → logprob: -14.451423645019531
    9. ')+' → logprob: -14.826423645019531
    10. '):
' → logprob: -15.076423645019531

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014191943046171218
    2. ' ' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.750142097473145
    4. ')' → logprob: -15.437642097473145
    5. '```' → logprob: -15.750142097473145
    6. '2' → logprob: -16.500141143798828
    7. '  ' → logprob: -16.562641143798828
    8. '    ' → logprob: -17.312641143798828
    9. '１' → logprob: -17.937641143798828
    10. '`' → logprob: -17.937641143798828

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.812517166137695
    4. '```' → logprob: -16.125017166137695
    5. '2' → logprob: -16.500017166137695
    6. ')' → logprob: -16.937517166137695
    7. '
' → logprob: -17.812517166137695
    8. '۱' → logprob: -17.937517166137695
    9. '  ' → logprob: -18.250017166137695
    10. '' → logprob: -18.250017166137695

Token 304: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012631602585315704
    2. '):
' → logprob: -4.387631416320801
    3. ' ):' → logprob: -10.1376314163208
    4. '   ' → logprob: -10.2626314163208
    5. ':' → logprob: -10.5126314163208
    6. ')' → logprob: -11.0126314163208
    7. '):
' → logprob: -12.8876314163208
    8. ' ):
' → logprob: -14.2626314163208
    9. '):

' → logprob: -15.5126314163208
    10. '       ' → logprob: -16.637632369995117

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0482548289000988
    2. '   ' → logprob: -3.7982547283172607
    3. 'sum' → logprob: -4.67325496673584
    4. ' sum' → logprob: -5.17325496673584
    5. ' before' → logprob: -5.79825496673584
    6. ' current' → logprob: -6.29825496673584
    7. 'before' → logprob: -6.54825496673584
    8. '    ' → logprob: -7.04825496673584
    9. 'current' → logprob: -7.29825496673584
    10. '```' → logprob: -8.17325496673584

Token 306: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7191411256790161
    2. 'before' → logprob: -1.4691411256790161
    3. 'curr' → logprob: -2.2191410064697266
    4. '   ' → logprob: -2.7191410064697266
    5. 'cur' → logprob: -2.8441410064697266
    6. 'sum' → logprob: -4.094141006469727
    7. '       ' → logprob: -4.469141006469727
    8. 'new' → logprob: -4.969141006469727
    9. 'window' → logprob: -5.094141006469727
    10. 's' → logprob: -5.219141006469727

Token 307: ' Met' (ID: 7227)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.7932148575782776
    2. 'current' → logprob: -0.9182148575782776
    3. 'curr' → logprob: -2.793214797973633
    4. 'sum' → logprob: -3.043214797973633
    5. 'window' → logprob: -4.168214797973633
    6. 'new' → logprob: -5.043214797973633
    7. 'cur' → logprob: -5.043214797973633
    8. '   ' → logprob: -5.668214797973633
    9. ' before' → logprob: -6.293214797973633
    10. ' current' → logprob: -6.418214797973633

Token 308: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.372191458940506
    2. 'sum' → logprob: -1.4971914291381836
    3. '   ' → logprob: -2.8721914291381836
    4. '=sum' → logprob: -4.872191429138184
    5. '=' → logprob: -5.372191429138184
    6. '_sum' → logprob: -5.622191429138184
    7. '        ' → logprob: -6.497191429138184
    8. '           ' → logprob: -6.497191429138184
    9. '    ' → logprob: -6.872191429138184
    10. '	sum' → logprob: -6.872191429138184

Token 309: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0005119257839396596
    2. ' jour' → logprob: -8.00051212310791
    3. '```' → logprob: -9.12551212310791
    4. 'jours' → logprob: -10.75051212310791
    5. 'j' → logprob: -11.37551212310791
    6. 'jou' → logprob: -11.50051212310791
    7. 'point' → logprob: -12.75051212310791
    8. 'jourd' → logprob: -12.87551212310791
    9. '[j' → logprob: -13.00051212310791
    10. '``' → logprob: -13.00051212310791

Token 310: ' la' (ID: 557)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.013560871593654156
    2. ' before' → logprob: -5.013560771942139
    3. '   ' → logprob: -5.638560771942139
    4. 'sum' → logprob: -5.888560771942139
    5. 'current' → logprob: -8.638561248779297
    6. 's' → logprob: -9.638561248779297
    7. 'bef' → logprob: -9.888561248779297
    8. ' sum' → logprob: -10.138561248779297
    9. 'the' → logprob: -10.513561248779297
    10. '       ' → logprob: -10.888561248779297

Token 311: ' somme' (ID: 64484)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.6920273303985596
    2. 'sum' → logprob: -0.8170273303985596
    3. '_sum' → logprob: -3.5670273303985596
    4. ' before' → logprob: -4.0670270919799805
    5. ' sum' → logprob: -4.6920270919799805
    6. 's' → logprob: -6.3170270919799805
    7. 'current' → logprob: -8.06702709197998
    8. '_before' → logprob: -8.56702709197998
    9. '   ' → logprob: -8.69202709197998
    10. 'after' → logprob: -9.19202709197998

Token 312: ' cour' (ID: 2871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9536380767822266
    2. 'sum' → logprob: -1.2036380767822266
    3. ' =' → logprob: -1.4536380767822266
    4. '=sum' → logprob: -3.8286380767822266
    5. '   ' → logprob: -4.078638076782227
    6. '       ' → logprob: -4.078638076782227
    7. '_sum' → logprob: -4.953638076782227
    8. 's' → logprob: -4.953638076782227
    9. 'before' → logprob: -5.453638076782227
    10. ' sum' → logprob: -5.703638076782227

Token 313: 'ante' (ID: 2116)
  Prédit: 'ente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.15177176892757416
    2. '       ' → logprob: -2.5267717838287354
    3. 'ante' → logprob: -4.151771545410156
    4. 'p' → logprob: -4.651771545410156
    5. 'l' → logprob: -5.151771545410156
    6. 'ute' → logprob: -5.401771545410156
    7. '   ' → logprob: -5.401771545410156
    8. '        ' → logprob: -5.901771545410156
    9. 'r' → logprob: -6.276771545410156
    10. 'ur' → logprob: -6.276771545410156

Token 314: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1703715324401855
    2. 'before' → logprob: -1.6703715324401855
    3. 'sum' → logprob: -1.9203715324401855
    4. '       ' → logprob: -2.0453715324401855
    5. ' =' → logprob: -2.1703715324401855
    6. '   ' → logprob: -2.5453715324401855
    7. ' before' → logprob: -4.4203715324401855
    8. ' sum' → logprob: -5.1703715324401855
    9. '=sum' → logprob: -5.7953715324401855
    10. '_sum' → logprob: -5.9203715324401855

Token 315: ' retir' (ID: 35638)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04029261693358421
    2. ' sum' → logprob: -3.290292501449585
    3. 's' → logprob: -6.540292739868164
    4. 'p' → logprob: -8.290292739868164
    5. ' somme' → logprob: -8.665292739868164
    6. ' p' → logprob: -9.540292739868164
    7. 'subtract' → logprob: -9.790292739868164
    8. '(sum' → logprob: -10.040292739868164
    9. '   ' → logprob: -10.415292739868164
    10. '=sum' → logprob: -10.415292739868164

Token 316: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.1422102451324463
    2. 'sum' → logprob: -1.8922102451324463
    3. 'p' → logprob: -2.0172102451324463
    4. '   ' → logprob: -2.7672102451324463
    5. '       ' → logprob: -3.1422102451324463
    6. 'uant' → logprob: -3.2672102451324463
    7. ' p' → logprob: -3.3922102451324463
    8. '(p' → logprob: -3.3922102451324463
    9. 'our' → logprob: -3.3922102451324463
    10. '_p' → logprob: -3.6422102451324463

Token 317: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06610706448554993
    2. ' p' → logprob: -2.8161070346832275
    3. 'before' → logprob: -5.691107273101807
    4. ' before' → logprob: -7.566107273101807
    5. '   ' → logprob: -8.566106796264648
    6. '       ' → logprob: -11.191106796264648
    7. '    ' → logprob: -12.441106796264648
    8. ' ' → logprob: -12.816106796264648
    9. '           ' → logprob: -12.816106796264648
    10. ' the' → logprob: -12.816106796264648

Token 318: ''' (ID: 6)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1172989085316658
    2. ' p' → logprob: -2.2422988414764404
    3. 'before' → logprob: -6.3672990798950195
    4. '   ' → logprob: -6.8672990798950195
    5. ' before' → logprob: -7.8672990798950195
    6. 'a' → logprob: -8.11729907989502
    7. 'e' → logprob: -8.24229907989502
    8. '_before' → logprob: -8.99229907989502
    9. '_p' → logprob: -9.36729907989502
    10. ')' → logprob: -9.49229907989502

Token 319: 'élé' (ID: 15228)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006800275295972824
    2. ' p' → logprob: -5.006800174713135
    3. '   ' → logprob: -9.506800651550293
    4. '       ' → logprob: -12.631800651550293
    5. ')' → logprob: -13.756800651550293
    6. '           ' → logprob: -13.881800651550293
    7. '    ' → logprob: -14.006800651550293
    8. ')p' → logprob: -14.006800651550293
    9. '```' → logprob: -14.256800651550293
    10. ' ' → logprob: -15.006800651550293

Token 320: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.3161035180091858
    2. 'ément' → logprob: -1.941103458404541
    3. 'em' → logprob: -2.816103458404541
    4. 'ement' → logprob: -2.941103458404541
    5. 'ém' → logprob: -5.316103458404541
    6. '   ' → logprob: -5.816103458404541
    7. 'p' → logprob: -6.316103458404541
    8. 'emt' → logprob: -6.816103458404541
    9. '       ' → logprob: -6.941103458404541
    10. ' p' → logprob: -7.816103458404541

Token 321: ' sort' (ID: 4506)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01301574520766735
    2. ' p' → logprob: -4.3880157470703125
    3. '   ' → logprob: -7.7630157470703125
    4. ')' → logprob: -11.263015747070312
    5. '       ' → logprob: -11.263015747070312
    6. '```' → logprob: -11.888015747070312
    7. '=' → logprob: -12.013015747070312
    8. '    ' → logprob: -12.013015747070312
    9. '[' → logprob: -12.388015747070312
    10. ' ' → logprob: -12.763015747070312

Token 322: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0025139504577964544
    2. 'i' → logprob: -6.002513885498047
    3. 'tant' → logprob: -11.002513885498047
    4. 'ing' → logprob: -12.627513885498047
    5. 'ante' → logprob: -12.752513885498047
    6. '   ' → logprob: -13.002513885498047
    7. 'u' → logprob: -13.002513885498047
    8. 'ir' → logprob: -13.127513885498047
    9. '-ant' → logprob: -13.502513885498047
    10. 'ants' → logprob: -13.627513885498047

Token 323: ' et' (ID: 859)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.782447099685669
    2. '       ' → logprob: -1.532447099685669
    3. '(p' → logprob: -2.282447099685669
    4. '   ' → logprob: -2.532447099685669
    5. ' p' → logprob: -2.907447099685669
    6. ' and' → logprob: -3.657447099685669
    7. ',' → logprob: -4.03244686126709
    8. ')' → logprob: -5.03244686126709
    9. '```' → logprob: -5.28244686126709
    10. '*p' → logprob: -5.78244686126709

Token 324: ' en' (ID: 469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9285297989845276
    2. 'aj' → logprob: -1.1785297393798828
    3. ' ajout' → logprob: -1.6785297393798828
    4. '        ' → logprob: -3.553529739379883
    5. ' +' → logprob: -3.803529739379883
    6. '       ' → logprob: -4.053529739379883
    7. 'p' → logprob: -4.428529739379883
    8. ' aj' → logprob: -5.303529739379883
    9. '+p' → logprob: -5.428529739379883
    10. '   ' → logprob: -5.428529739379883

Token 325: ' ajout' (ID: 64605)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.04882535710930824
    2. ' ajout' → logprob: -3.298825263977051
    3. '+' → logprob: -5.548825263977051
    4. 'p' → logprob: -6.173825263977051
    5. 'add' → logprob: -6.423825263977051
    6. 'adding' → logprob: -7.548825263977051
    7. '     ' → logprob: -7.798825263977051
    8. ' ' → logprob: -7.923825263977051
    9. '   ' → logprob: -8.04882526397705
    10. ' aj' → logprob: -8.29882526397705

Token 326: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.40382134914398193
    2. 'out' → logprob: -2.2788214683532715
    3. 'ent' → logprob: -2.2788214683532715
    4. 'uant' → logprob: -3.2788214683532715
    5. '   ' → logprob: -3.4038214683532715
    6. 'u' → logprob: -4.1538214683532715
    7. 'p' → logprob: -4.7788214683532715
    8. 'ut' → logprob: -5.2788214683532715
    9. 't' → logprob: -5.5288214683532715
    10. 'd' → logprob: -5.5288214683532715

Token 327: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2519785761833191
    2. 'p' → logprob: -1.5019786357879639
    3. '(p' → logprob: -10.626978874206543
    4. '   ' → logprob: -11.376978874206543
    5. ' ' → logprob: -12.751978874206543
    6. '    ' → logprob: -12.876978874206543
    7. '	p' → logprob: -13.126978874206543
    8. ' (' → logprob: -13.626978874206543
    9. ' ' → logprob: -13.876978874206543
    10. '(' → logprob: -14.126978874206543

Token 328: ' nouvel' (ID: 76298)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03376948833465576
    2. ' p' → logprob: -3.4087696075439453
    3. '   ' → logprob: -9.783769607543945
    4. ' ' → logprob: -12.033769607543945
    5. '    ' → logprob: -12.283769607543945
    6. 'element' → logprob: -12.408769607543945
    7. '+p' → logprob: -12.658769607543945
    8. 'new' → logprob: -12.783769607543945
    9. '```' → logprob: -12.846269607543945
    10. '_p' → logprob: -12.846269607543945

Token 329: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.4328793287277222
    2. ' élément' → logprob: -1.5578793287277222
    3. ' p' → logprob: -1.6828793287277222
    4. 'element' → logprob: -2.5578794479370117
    5. ' element' → logprob: -2.6828794479370117
    6. '_' → logprob: -2.9328794479370117
    7. '_p' → logprob: -3.1828794479370117
    8. 'p' → logprob: -3.1828794479370117
    9. '_element' → logprob: -3.4328794479370117
    10. ' _' → logprob: -3.9328794479370117

Token 330: ' entrant' (ID: 181784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.692050576210022
    2. 'p' → logprob: -2.1920504570007324
    3. '   ' → logprob: -2.3170504570007324
    4. ' p' → logprob: -2.3170504570007324
    5. 'sum' → logprob: -2.6920504570007324
    6. ' =' → logprob: -3.3170504570007324
    7. '=' → logprob: -3.4420504570007324
    8. 's' → logprob: -4.192050457000732
    9. '(p' → logprob: -4.317050457000732
    10. ' sum' → logprob: -5.442050457000732

Token 331: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6787329316139221
    2. '   ' → logprob: -0.8037329316139221
    3. 'sum' → logprob: -3.4287328720092773
    4. ' sum' → logprob: -5.303732872009277
    5. ' before' → logprob: -5.928732872009277
    6. 'before' → logprob: -5.928732872009277
    7. '
' → logprob: -7.178732872009277
    8. ',' → logprob: -7.678732872009277
    9. '        
' → logprob: -9.053732872009277
    10. '    
' → logprob: -9.053732872009277

Token 332: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.614241898059845
    2. 'p' → logprob: -1.3642418384552002
    3. ' sum' → logprob: -1.8642418384552002
    4. ' p' → logprob: -3.3642418384552
    5. ' the' → logprob: -5.239242076873779
    6. 'the' → logprob: -5.864242076873779
    7. ' la' → logprob: -6.239242076873779
    8. '   ' → logprob: -6.364242076873779
    9. 's' → logprob: -7.489242076873779
    10. 'la' → logprob: -7.864242076873779

Token 333: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.17296437919139862
    2. 'window' → logprob: -2.047964334487915
    3. ' fenêtre' → logprob: -3.922964334487915
    4. 's' → logprob: -5.172964572906494
    5. 'sum' → logprob: -6.797964572906494
    6. ' window' → logprob: -7.047964572906494
    7. 'f' → logprob: -7.047964572906494
    8. ' fen' → logprob: -7.547964572906494
    9. 'sub' → logprob: -8.172964096069336
    10. '   ' → logprob: -8.547964096069336

Token 334: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2073310613632202
    2. '       ' → logprob: -1.3323310613632202
    3. 'sum' → logprob: -1.4573310613632202
    4. ' sum' → logprob: -2.2073311805725098
    5. ' before' → logprob: -2.9573311805725098
    6. 'before' → logprob: -3.4573311805725098
    7. '
' → logprob: -5.70733118057251
    8. ',' → logprob: -6.20733118057251
    9. '_sum' → logprob: -7.08233118057251
    10. '=' → logprob: -7.20733118057251

Token 335: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.791170597076416
    2. ' sum' → logprob: -0.791170597076416
    3. 'sum' → logprob: -2.666170597076416
    4. ' before' → logprob: -4.041170597076416
    5. 'before' → logprob: -6.166170597076416
    6. '       ' → logprob: -6.666170597076416
    7. ' p' → logprob: -7.291170597076416
    8. ' current' → logprob: -7.416170597076416
    9. '    ' → logprob: -7.666170597076416
    10. ' s' → logprob: -9.041170120239258

Token 336: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' (adapté à ' before') → logprob: -0.12910676002502441
    2. ' before' → logprob: -2.6291067600250244
    3. '   ' → logprob: -3.7541067600250244
    4. 'current' → logprob: -4.254106521606445
    5. 'sum' → logprob: -5.379106521606445
    6. ' current' → logprob: -5.379106521606445
    7. ' sum' → logprob: -7.129106521606445
    8. 'curr' → logprob: -7.504106521606445
    9. '       ' → logprob: -8.254106521606445
    10. 'cur' → logprob: -8.754106521606445

Token 337: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.570319702499546e-05
    2. '_pi' → logprob: -10.750025749206543
    3. '_' → logprob: -13.125025749206543
    4. 'sum' → logprob: -13.375025749206543
    5. '_s' → logprob: -15.500025749206543
    6. '__' → logprob: -16.750024795532227
    7. 'Sum' → logprob: -17.000024795532227
    8. '_p' → logprob: -17.125024795532227
    9. ' _' → logprob: -17.375024795532227
    10. '\' → logprob: -17.500024795532227

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04097779467701912
    2. ' =' → logprob: -3.540977716445923
    3. '-=' → logprob: -4.915977954864502
    4. ' -=' → logprob: -5.790977954864502
    5. '+=' → logprob: -7.290977954864502
    6. ' +=' → logprob: -9.290977478027344
    7. '-' → logprob: -12.790977478027344
    8. ' ' → logprob: -13.415977478027344
    9. '   ' → logprob: -14.165977478027344
    10. '=
' → logprob: -14.165977478027344

Token 339: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.4749275743961334
    2. 'before' → logprob: -0.974927544593811
    3. '   ' → logprob: -7.7249274253845215
    4. '       ' → logprob: -9.34992790222168
    5. '(before' → logprob: -9.34992790222168
    6. ' ' → logprob: -9.59992790222168
    7. '	before' → logprob: -9.72492790222168
    8. '  ' → logprob: -10.84992790222168
    9. ' sum' → logprob: -10.97492790222168
    10. 'sum' → logprob: -11.09992790222168

Token 340: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.226628895296017e-06
    2. 'sum' → logprob: -12.000007629394531
    3. '_' → logprob: -14.375007629394531
    4. ' sum' → logprob: -16.00000762939453
    5. '_s' → logprob: -17.12500762939453
    6. '[' → logprob: -17.37500762939453
    7. '_sub' → logprob: -17.50000762939453
    8. 'Sum' → logprob: -17.50000762939453
    9. '_pi' → logprob: -17.62500762939453
    10. '\' → logprob: -17.75000762939453

Token 341: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47409868240356445
    2. '-' → logprob: -0.9740986824035645
    3. '+' → logprob: -10.974098205566406
    4. ' +' → logprob: -12.599098205566406
    5. ' ' → logprob: -14.349098205566406
    6. '-p' → logprob: -14.974098205566406
    7. '   ' → logprob: -16.349098205566406
    8. '−' → logprob: -17.724098205566406
    9. '–' → logprob: -17.974098205566406
    10. ' ' → logprob: -17.974098205566406

Token 342: ' before' (ID: 2254)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026393884792923927
    2. ' p' → logprob: -3.6513938903808594
    3. 'float' → logprob: -10.40139389038086
    4. '(p' → logprob: -11.02639389038086
    5. '   ' → logprob: -11.15139389038086
    6. 'before' → logprob: -11.52639389038086
    7. '	p' → logprob: -12.27639389038086
    8. ' ' → logprob: -12.65139389038086
    9. ' (' → logprob: -12.77639389038086
    10. ' float' → logprob: -13.46389389038086

Token 343: '_pi' (ID: 122020)
  Prédit: '_pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pi' → logprob: -0.00018077615823131055
    2. 'pi' → logprob: -8.625181198120117
    3. 'Pi' → logprob: -14.750181198120117
    4. '_p' → logprob: -15.000181198120117
    5. 'π' → logprob: -15.500181198120117
    6. 'p' → logprob: -16.125181198120117
    7. '_PI' → logprob: -16.625181198120117
    8. '*pi' → logprob: -17.375181198120117
    9. '(pi' → logprob: -17.500181198120117
    10. '[' → logprob: -17.500181198120117

Token 344: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39046499133110046
    2. '+' → logprob: -1.1404650211334229
    3. '+p' → logprob: -5.640464782714844
    4. '+k' → logprob: -11.640464782714844
    5. ' ' → logprob: -12.390464782714844
    6. 'p' → logprob: -12.390464782714844
    7. '
' → logprob: -12.390464782714844
    8. '+
' → logprob: -12.890464782714844
    9. ' p' → logprob: -13.265464782714844
    10. '+i' → logprob: -13.390464782714844

Token 345: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004090866539627314
    2. ' p' → logprob: -5.504090785980225
    3. '   ' → logprob: -11.629091262817383
    4. 'float' → logprob: -13.879091262817383
    5. '+p' → logprob: -14.629091262817383
    6. '	p' → logprob: -14.754091262817383
    7. ' ' → logprob: -15.004091262817383
    8. '+' → logprob: -15.129091262817383
    9. '  ' → logprob: -15.379091262817383
    10. '    ' → logprob: -15.504091262817383

Token 346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3663626305060461e-05
    2. 'i' → logprob: -11.37501335144043
    3. '[' → logprob: -13.25001335144043
    4. '[k' → logprob: -15.87501335144043
    5. '   ' → logprob: -16.50001335144043
    6. '```' → logprob: -16.50001335144043
    7. '{i' → logprob: -16.75001335144043
    8. '[
' → logprob: -17.75001335144043
    9. '\[' → logprob: -18.37501335144043
    10. 'k' → logprob: -18.62501335144043

Token 347: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.31345027685165405
    2. ' +' → logprob: -1.9384503364562988
    3. '+i' → logprob: -2.438450336456299
    4. '+' → logprob: -3.438450336456299
    5. 'i' → logprob: -5.938450336456299
    6. 'k' → logprob: -6.938450336456299
    7. '[i' → logprob: -6.938450336456299
    8. '   ' → logprob: -7.063450336456299
    9. '```' → logprob: -9.31344985961914
    10. '[' → logprob: -9.93844985961914

Token 348: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0280383548888494e-06
    2. ' k' → logprob: -14.125000953674316
    3. '(k' → logprob: -15.125000953674316
    4. '{k' → logprob: -18.625001907348633
    5. '	k' → logprob: -19.750001907348633
    6. '[k' → logprob: -21.375001907348633
    7. '   ' → logprob: -21.500001907348633
    8. '(' → logprob: -22.125001907348633
    9. '_k' → logprob: -22.750001907348633
    10. '
' → logprob: -23.125001907348633

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023254211992025375
    2. ' -' → logprob: -3.773254156112671
    3. '   ' → logprob: -12.52325439453125
    4. ' ' → logprob: -13.02325439453125
    5. '1' → logprob: -13.14825439453125
    6. '```' → logprob: -15.27325439453125
    7. '  ' → logprob: -15.52325439453125
    8. ']' → logprob: -16.39825439453125
    9. '−' → logprob: -16.52325439453125
    10. '0' → logprob: -16.64825439453125

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '2' → logprob: -18.25000762939453
    5. '```' → logprob: -18.93750762939453
    6. '  ' → logprob: -19.56250762939453
    7. '<|end|>' → logprob: -20.00000762939453
    8. '0' → logprob: -20.25000762939453
    9. '۱' → logprob: -20.31250762939453
    10. '１' → logprob: -21.00000762939453

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.0
    4. '2' → logprob: -17.8125
    5. '  ' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. '۱' → logprob: -18.4375
    8. '0' → logprob: -18.5625
    9. '11' → logprob: -19.625
    10. ']' → logprob: -19.75

Token 352: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42933186888694763
    2. ']
' → logprob: -1.05433189868927
    3. ']
' → logprob: -8.30433177947998
    4. ' ]' → logprob: -8.92933177947998
    5. ' ]
' → logprob: -9.17933177947998
    6. '       ' → logprob: -9.30433177947998
    7. ']

' → logprob: -10.80433177947998
    8. '   ' → logprob: -10.92933177947998
    9. ')' → logprob: -11.55433177947998
    10. ')
' → logprob: -12.55433177947998

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04804351553320885
    2. '   ' → logprob: -3.9230434894561768
    3. ' before' → logprob: -4.173043727874756
    4. 'before' → logprob: -4.548043727874756
    5. '	before' → logprob: -7.423043727874756
    6. '        
' → logprob: -9.173043251037598
    7. '
' → logprob: -9.423043251037598
    8. '      ' → logprob: -9.798043251037598
    9. ' ' → logprob: -10.298043251037598
    10. '  
' → logprob: -10.423043251037598

Token 354: ' sum' (ID: 4215)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.08917577564716339
    2. ' before' → logprob: -3.2141757011413574
    3. '       ' → logprob: -3.3391757011413574
    4. '   ' → logprob: -4.714175701141357
    5. '	before' → logprob: -7.339175701141357
    6. ' ' → logprob: -11.714176177978516
    7. '      ' → logprob: -12.089176177978516
    8. '  ' → logprob: -12.214176177978516
    9. '    ' → logprob: -12.589176177978516
    10. '
' → logprob: -12.714176177978516

Token 355: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0002661039761733264
    2. '.append' → logprob: -8.250266075134277
    3. '.' → logprob: -13.250266075134277
    4. '_l' → logprob: -14.250266075134277
    5. 'append' → logprob: -15.000266075134277
    6. '.l' → logprob: -15.000266075134277
    7. 's' → logprob: -15.250266075134277
    8. 'i' → logprob: -15.375266075134277
    9. '.insert' → logprob: -15.875266075134277
    10. '1' → logprob: -16.125267028808594

Token 356: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005625653429888189
    2. '.' → logprob: -7.50056266784668
    3. '.app' → logprob: -11.87556266784668
    4. '.ap' → logprob: -13.62556266784668
    5. ' .' → logprob: -13.75056266784668
    6. '.push' → logprob: -16.50056266784668
    7. '.Append' → logprob: -16.75056266784668
    8. '.add' → logprob: -16.87556266784668
    9. '.insert' → logprob: -17.00056266784668
    10. '.extend' → logprob: -17.50056266784668

Token 357: '(before' (ID: 176050)
  Prédit: '(before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(before' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'before' → logprob: -16.0
    4. '(after' → logprob: -19.625
    5. '(b' → logprob: -19.75
    6. '(previous' → logprob: -19.75
    7. '(best' → logprob: -20.125
    8. '(be' → logprob: -20.25
    9. '(with' → logprob: -20.5
    10. '(begin' → logprob: -20.625

Token 358: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003017385315615684
    2. '_pi' → logprob: -9.000301361083984
    3. 'sum' → logprob: -9.250301361083984
    4. '_p' → logprob: -9.750301361083984
    5. 'p' → logprob: -11.000301361083984
    6. 'pi' → logprob: -13.125301361083984
    7. '_s' → logprob: -13.375301361083984
    8. 'Sum' → logprob: -14.125301361083984
    9. 's' → logprob: -14.375301361083984
    10. '   ' → logprob: -15.250301361083984

Token 359: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14762826263904572
    2. ')' → logprob: -2.1476283073425293
    3. '       ' → logprob: -3.8976283073425293
    4. ' )
' → logprob: -9.022627830505371
    5. ')
' → logprob: -10.522627830505371
    6. '   ' → logprob: -10.772627830505371
    7. ' )' → logprob: -11.022627830505371
    8. '
' → logprob: -11.772627830505371
    9. '        
' → logprob: -14.397627830505371
    10. ')`
' → logprob: -14.522627830505371

Token 360: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07960803806781769
    2. 'before' → logprob: -2.8296079635620117
    3. ' before' → logprob: -4.704607963562012
    4. '   ' → logprob: -4.829607963562012
    5. '	before' → logprob: -7.829607963562012
    6. '(before' → logprob: -11.454607963562012
    7. '
' → logprob: -12.204607963562012
    8. '      ' → logprob: -12.204607963562012
    9. ' ' → logprob: -12.329607963562012
    10. '	' → logprob: -12.829607963562012

Token 361: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8653110265731812
    2. 'before' → logprob: -0.8653110265731812
    3. '   ' → logprob: -1.9903110265731812
    4. ' before' → logprob: -3.8653111457824707
    5. '
' → logprob: -8.615310668945312
    6. '	before' → logprob: -8.990310668945312
    7. '    
' → logprob: -9.865310668945312
    8. '        
' → logprob: -10.240310668945312
    9. ' ' → logprob: -10.365310668945312
    10. '(before' → logprob: -10.365310668945312

Token 362: ' Aj' (ID: 28294)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.015657616779208183
    2. ' before' → logprob: -4.265657424926758
    3. '   ' → logprob: -6.640657424926758
    4. '       ' → logprob: -8.765657424926758
    5. '	before' → logprob: -10.640657424926758
    6. '
' → logprob: -12.390657424926758
    7. '  ' → logprob: -13.515657424926758
    8. ' ' → logprob: -15.390657424926758
    9. '           ' → logprob: -15.390657424926758
    10. '(before' → logprob: -15.515657424926758

Token 363: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.09813913702964783
    2. 'out' → logprob: -3.0981390476226807
    3. 'outer' → logprob: -3.7231390476226807
    4. 'outez' → logprob: -3.7231390476226807
    5. 'ust' → logprob: -11.348138809204102
    6. 'outes' → logprob: -12.473138809204102
    7. 'x' → logprob: -12.973138809204102
    8. 'uste' → logprob: -13.473138809204102
    9. '#' → logprob: -13.598138809204102
    10. '```' → logprob: -13.598138809204102

Token 364: ' la' (ID: 557)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.4362372159957886
    2. '(before' → logprob: -1.0612372159957886
    3. '(p' → logprob: -5.686237335205078
    4. ' before' → logprob: -5.936237335205078
    5. '(sum' → logprob: -7.186237335205078
    6. '(' → logprob: -7.811237335205078
    7. 'sum' → logprob: -9.061237335205078
    8. '(after' → logprob: -9.936237335205078
    9. '	before' → logprob: -10.061237335205078
    10. '(
' → logprob: -10.686237335205078

Token 365: ' somme' (ID: 64484)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.13131596148014069
    2. 'sum' → logprob: -2.5063159465789795
    3. ' before' → logprob: -3.7563159465789795
    4. ' p' → logprob: -4.881316184997559
    5. ' sum' → logprob: -5.256316184997559
    6. 'p' → logprob: -5.631316184997559
    7. ')' → logprob: -7.131316184997559
    8. ' )' → logprob: -8.756316184997559
    9. '```' → logprob: -9.006316184997559
    10. ')
' → logprob: -9.381316184997559

Token 366: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26177918910980225
    2. '   ' → logprob: -2.511779308319092
    3. '<|end|>' → logprob: -2.511779308319092
    4. 'before' → logprob: -3.636779308319092
    5. ' before' → logprob: -4.636779308319092
    6. '<|end|>' → logprob: -5.261779308319092
    7. '(p' → logprob: -5.386779308319092
    8. '[' → logprob: -5.386779308319092
    9. '=' → logprob: -5.511779308319092
    10. '[p' → logprob: -5.886779308319092

Token 367: ' la' (ID: 557)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.15792687237262726
    2. 'p' → logprob: -2.2829267978668213
    3. ' p' → logprob: -3.4079267978668213
    4. ' before' → logprob: -4.5329270362854
    5. '   ' → logprob: -9.157926559448242
    6. '(p' → logprob: -10.157926559448242
    7. 'sum' → logprob: -11.032926559448242
    8. 'the' → logprob: -11.532926559448242
    9. '(before' → logprob: -11.532926559448242
    10. '_before' → logprob: -11.657926559448242

Token 368: ' fenêtre' (ID: 109648)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.6812728643417358
    2. 'p' → logprob: -0.9312728643417358
    3. ' p' → logprob: -2.5562729835510254
    4. ' before' → logprob: -3.9312729835510254
    5. 'sum' → logprob: -7.181272983551025
    6. '```' → logprob: -7.681272983551025
    7. 'i' → logprob: -8.306272506713867
    8. 'new' → logprob: -8.681272506713867
    9. '[p' → logprob: -8.931272506713867
    10. ' ' → logprob: -9.181272506713867

Token 369: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10900815576314926
    2. '   ' → logprob: -2.3590080738067627
    3. '
' → logprob: -6.109008312225342
    4. 'before' → logprob: -6.234008312225342
    5. '=' → logprob: -7.234008312225342
    6. 'def' → logprob: -7.484008312225342
    7. ' before' → logprob: -7.484008312225342
    8. '[' → logprob: -7.734008312225342
    9. 'p' → logprob: -8.109007835388184
    10. ' ' → logprob: -8.484007835388184

Token 370: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0006402421277016401
    2. 'r' → logprob: -7.500640392303467
    3. 'ente' → logprob: -9.375639915466309
    4. '   ' → logprob: -14.625639915466309
    5. '#' → logprob: -14.750639915466309
    6. 'rent' → logprob: -15.625639915466309
    7. 'nte' → logprob: -15.625639915466309
    8. '
' → logprob: -15.750639915466309
    9. 's' → logprob: -16.000640869140625
    10. 'nante' → logprob: -16.125640869140625

Token 371: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40753334760665894
    2. 'before' → logprob: -1.6575334072113037
    3. '   ' → logprob: -2.0325334072113037
    4. ' before' → logprob: -4.532533168792725
    5. '        
' → logprob: -7.407533168792725
    6. '    
' → logprob: -7.657533168792725
    7. '
' → logprob: -7.657533168792725
    8. '	before' → logprob: -8.407533645629883
    9. 'p' → logprob: -9.282533645629883
    10. ' p' → logprob: -9.532533645629883

Token 372: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009311283938586712
    2. 'before' → logprob: -4.759311199188232
    3. ' sum' → logprob: -8.00931167602539
    4. 's' → logprob: -8.13431167602539
    5. ' before' → logprob: -9.88431167602539
    6. 'summ' → logprob: -11.75931167602539
    7. 'the' → logprob: -12.75931167602539
    8. '_sum' → logprob: -13.88431167602539
    9. 'p' → logprob: -14.00931167602539
    10. '[' → logprob: -14.13431167602539

Token 373: ' liste' (ID: 31719)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02740313857793808
    2. 's' → logprob: -3.6524031162261963
    3. 'before' → logprob: -8.152402877807617
    4. ' sum' → logprob: -8.152402877807617
    5. 'list' → logprob: -8.777402877807617
    6. '[' → logprob: -9.402402877807617
    7. 'liste' → logprob: -9.402402877807617
    8. 'summ' → logprob: -9.902402877807617
    9. ')' → logprob: -10.027402877807617
    10. '```' → logprob: -10.527402877807617

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12654908001422882
    2. 'before' → logprob: -2.251549005508423
    3. ' before' → logprob: -5.001549243927002
    4. '   ' → logprob: -5.001549243927002
    5. '	before' → logprob: -9.376548767089844
    6. '(before' → logprob: -10.126548767089844
    7. '
' → logprob: -11.126548767089844
    8. '	' → logprob: -12.001548767089844
    9. '           ' → logprob: -12.376548767089844
    10. ' ' → logprob: -12.501548767089844

Token 375: '       ' (ID: 309)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.7317398190498352
    2. '       ' → logprob: -0.8567398190498352
    3. ' before' → logprob: -2.8567397594451904
    4. '	before' → logprob: -3.4817397594451904
    5. '   ' → logprob: -5.3567399978637695
    6. '	' → logprob: -7.2317399978637695
    7. '	   ' → logprob: -8.73173999786377
    8. ' ' → logprob: -9.60673999786377
    9. '_before' → logprob: -9.60673999786377
    10. '(before' → logprob: -10.23173999786377

Token 376: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' (adapté à ' before') → logprob: -0.015804650261998177
    2. ' before' → logprob: -4.640804767608643
    3. '   ' → logprob: -5.140804767608643
    4. '	before' → logprob: -9.140804290771484
    5. '       ' → logprob: -9.640804290771484
    6. ' ' → logprob: -13.140804290771484
    7. '  ' → logprob: -13.640804290771484
    8. '_before' → logprob: -14.140804290771484
    9. '(before' → logprob: -14.765804290771484
    10. '    ' → logprob: -15.515804290771484

Token 377: '_pi' (ID: 122020)
  Prédit: '_pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pi' → logprob: -2.7610454708337784e-05
    2. 'pi' → logprob: -10.500027656555176
    3. 'Pi' → logprob: -17.75002670288086
    4. '*pi' → logprob: -17.87502670288086
    5. '_p' → logprob: -18.12502670288086
    6. 'π' → logprob: -18.12502670288086
    7. '=' → logprob: -19.00002670288086
    8. '_pe' → logprob: -19.00002670288086
    9. '_pid' → logprob: -19.25002670288086
    10. '_sum' → logprob: -19.50002670288086

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313264936208725
    2. ' =' → logprob: -1.3132649660110474
    3. '=p' → logprob: -12.688264846801758
    4. ' ' → logprob: -16.938264846801758
    5. '.=' → logprob: -17.313264846801758
    6. 'p' → logprob: -17.688264846801758
    7. '＝' → logprob: -17.938264846801758
    8. '   ' → logprob: -18.813264846801758
    9. '	' → logprob: -19.188264846801758
    10. ',' → logprob: -19.438264846801758

Token 379: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.688212614681106e-05
    2. ' p' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '	p' → logprob: -18.250017166137695
    5. '       ' → logprob: -20.125017166137695
    6. '<p' → logprob: -20.750017166137695
    7. '_p' → logprob: -21.250017166137695
    8. '$p' → logprob: -21.750017166137695
    9. '+p' → logprob: -22.250017166137695
    10. '=p' → logprob: -22.750017166137695

Token 380: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.500001907348633
    3. '[' → logprob: -15.625001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.750001907348633
    6. '[
' → logprob: -19.500001907348633
    7. '[I' → logprob: -19.625001907348633
    8. '{i' → logprob: -19.875001907348633
    9. '(i' → logprob: -20.125001907348633
    10. ' i' → logprob: -20.375001907348633

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022419660817831755
    2. ' ]' → logprob: -6.252242088317871
    3. '<|end|>' → logprob: -8.377242088317871
    4. '+' → logprob: -10.502242088317871
    5. '[' → logprob: -11.002242088317871
    6. '+i' → logprob: -12.002242088317871
    7. ' +' → logprob: -12.252242088317871
    8. ']+' → logprob: -12.377242088317871
    9. '])' → logprob: -12.502242088317871
    10. '[i' → logprob: -12.627242088317871

Token 382: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020915186032652855
    2. '<|end|>' → logprob: -4.1459150314331055
    3. ')' → logprob: -5.5209150314331055
    4. '	return' → logprob: -8.770915031433105
    5. ' return' → logprob: -8.895915031433105
    6. '       ' → logprob: -9.020915031433105
    7. '    
' → logprob: -9.145915031433105
    8. '<|end|>' → logprob: -9.270915031433105
    9. 'return' → logprob: -9.520915031433105
    10. '
' → logprob: -10.270915031433105

Token 383: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' Met' (ID: 7227)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4656132459640503
    2. ' à' → logprob: -1.2156132459640503
    3. 'before' → logprob: -2.71561336517334
    4. ' before' → logprob: -5.21561336517334
    5. '=' → logprob: -6.96561336517334
    6. 'avant' → logprob: -7.09061336517334
    7. '   ' → logprob: -7.59061336517334
    8. 'À' → logprob: -7.84061336517334
    9. '_before' → logprob: -8.21561336517334
    10. '-à' → logprob: -8.59061336517334

Token 386: ' jour' (ID: 8379)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.090760431718081e-05
    2. ' p' → logprob: -9.375090599060059
    3. '[p' → logprob: -13.375090599060059
    4. 'before' → logprob: -13.500090599060059
    5. '<p' → logprob: -14.500090599060059
    6. '<|end|>' → logprob: -14.750090599060059
    7. 'jour' → logprob: -14.875090599060059
    8. '=p' → logprob: -15.000090599060059
    9. ')p' → logprob: -15.000090599060059
    10. '```' → logprob: -15.125090599060059

Token 387: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008170120418071747
    2. ' p' → logprob: -7.125816822052002
    3. '<|end|>' → logprob: -12.12581729888916
    4. 'before' → logprob: -12.25081729888916
    5. '	p' → logprob: -14.25081729888916
    6. ' ' → logprob: -15.00081729888916
    7. ' before' → logprob: -15.12581729888916
    8. '(p' → logprob: -15.62581729888916
    9. ')p' → logprob: -15.75081729888916
    10. ')' → logprob: -16.125816345214844

Token 388: ''' (ID: 6)
  Prédit: '_pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pi' → logprob: -0.7559145092964172
    2. '_' → logprob: -1.1309144496917725
    3. '_p' → logprob: -2.7559144496917725
    4. 'e' → logprob: -3.1309144496917725
    5. 'p' → logprob: -4.005914688110352
    6. '[' → logprob: -4.755914688110352
    7. '_i' → logprob: -5.005914688110352
    8. 'élé' → logprob: -5.005914688110352
    9. 'pi' → logprob: -5.130914688110352
    10. '[i' → logprob: -5.130914688110352

Token 389: 'élé' (ID: 15228)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.20736056566238403
    2. 'p' → logprob: -2.3323605060577393
    3. 'pi' → logprob: -2.7073605060577393
    4. ' before' → logprob: -4.082360744476318
    5. ' p' → logprob: -5.082360744476318
    6. '_pi' → logprob: -9.58236026763916
    7. '_before' → logprob: -10.08236026763916
    8. '```' → logprob: -10.20736026763916
    9. ' pi' → logprob: -10.33236026763916
    10. 'preced' → logprob: -10.33236026763916

Token 390: 'ment' (ID: 508)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.650814950466156
    2. '[i' → logprob: -1.4008150100708008
    3. '_' → logprob: -3.025815010070801
    4. '_pi' → logprob: -3.025815010070801
    5. '_i' → logprob: -3.525815010070801
    6. '   ' → logprob: -3.650815010070801
    7. ']' → logprob: -3.775815010070801
    8. 'pi' → logprob: -4.525815010070801
    9. 'à' → logprob: -4.650815010070801
    10. 'p' → logprob: -5.275815010070801

Token 391: ' sort' (ID: 4506)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16964027285575867
    2. 'sort' → logprob: -2.669640302658081
    3. ' p' → logprob: -3.044640302658081
    4. '[p' → logprob: -4.419640064239502
    5. '[i' → logprob: -4.544640064239502
    6. '```' → logprob: -5.419640064239502
    7. '[' → logprob: -5.669640064239502
    8. ' sort' → logprob: -6.044640064239502
    9. 'out' → logprob: -7.044640064239502
    10. 'entr' → logprob: -7.044640064239502

Token 392: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.011723392643034458
    2. 'ent' → logprob: -5.136723518371582
    3. 'ante' → logprob: -6.511723518371582
    4. '           ' → logprob: -7.261723518371582
    5. '       ' → logprob: -7.261723518371582
    6. '[i' → logprob: -7.511723518371582
    7. 'entrant' → logprob: -7.761723518371582
    8. 'sort' → logprob: -8.386723518371582
    9. 'ants' → logprob: -8.386723518371582
    10. 'out' → logprob: -8.761723518371582

Token 393: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0032257253769785166
    2. ' p' → logprob: -5.753225803375244
    3. '<|end|>' → logprob: -10.753225326538086
    4. 'before' → logprob: -11.753225326538086
    5. '```' → logprob: -13.003225326538086
    6. ')p' → logprob: -13.003225326538086
    7. ')' → logprob: -13.003225326538086
    8. '[p' → logprob: -13.128225326538086
    9. '	p' → logprob: -13.253225326538086
    10. '   ' → logprob: -13.253225326538086

Token 395: ' prochaine' (ID: 78876)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009193053469061852
    2. ' p' → logprob: -4.884192943572998
    3. 'i' → logprob: -6.759192943572998
    4. 'next' → logprob: -8.134193420410156
    5. ' next' → logprob: -10.134193420410156
    6. '[i' → logprob: -10.634193420410156
    7. '[p' → logprob: -11.134193420410156
    8. ')' → logprob: -11.759193420410156
    9. '[' → logprob: -11.759193420410156
    10. ' i' → logprob: -12.009193420410156

Token 396: ' it' (ID: 480)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.522454559803009
    2. 'it' → logprob: -1.2724545001983643
    3. ' it' → logprob: -2.2724545001983643
    4. ' iteration' → logprob: -4.272454738616943
    5. 'iter' → logprob: -5.897454738616943
    6. '_iteration' → logprob: -6.522454738616943
    7. ' boucle' → logprob: -6.897454738616943
    8. 'i' → logprob: -7.147454738616943
    9. ' iter' → logprob: -7.397454738616943
    10. 'itera' → logprob: -7.522454738616943

Token 397: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.010442228056490421
    2. 'er' → logprob: -4.88544225692749
    3. 'ration' → logprob: -6.76044225692749
    4. 'ation' → logprob: -7.63544225692749
    5. 'ère' → logprob: -8.135441780090332
    6. '   ' → logprob: -9.010441780090332
    7. ']' → logprob: -9.260441780090332
    8. 'érer' → logprob: -9.260441780090332
    9. 'r' → logprob: -9.510441780090332
    10. 'éré' → logprob: -9.635441780090332

Token 398: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5291295051574707
    2. '<|end|>' → logprob: -0.9041295051574707
    3. ')' → logprob: -5.904129505157471
    4. '
' → logprob: -7.029129505157471
    5. '<|end|>' → logprob: -7.154129505157471
    6. '    
' → logprob: -7.529129505157471
    7. 'return' → logprob: -8.154129028320312
    8. ' return' → logprob: -8.404129028320312
    9. '```' → logprob: -9.529129028320312
    10. '	return' → logprob: -9.654129028320312

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013273291289806366
    2. 'return' → logprob: -4.388273239135742
    3. 'max' → logprob: -7.513273239135742
    4. '    
' → logprob: -9.388273239135742
    5. 'result' → logprob: -9.888273239135742
    6. ' return' → logprob: -10.138273239135742
    7. '
' → logprob: -10.513273239135742
    8. '```' → logprob: -12.388273239135742
    9. 'sum' → logprob: -12.638273239135742
    10. ' max' → logprob: -13.513273239135742

Token 400: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2217978984117508
    2. 'max' → logprob: -1.9717979431152344
    3. '   ' → logprob: -2.8467979431152344
    4. 'result' → logprob: -7.846797943115234
    5. 'best' → logprob: -7.971797943115234
    6. ' return' → logprob: -8.221797943115234
    7. 'expected' → logprob: -8.471797943115234
    8. '#' (adapté à ' #') → logprob: -9.471797943115234
    9. 'm' → logprob: -9.471797943115234
    10. '```' → logprob: -9.471797943115234

Token 401: ' Cal' (ID: 4453)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.058654822409152985
    2. 'return' → logprob: -3.18365478515625
    3. 'expected' → logprob: -4.93365478515625
    4. 'result' → logprob: -5.93365478515625
    5. 'best' → logprob: -6.30865478515625
    6. '#' → logprob: -7.05865478515625
    7. 'res' → logprob: -7.18365478515625
    8. 'val' → logprob: -7.55865478515625
    9. 'expect' → logprob: -8.05865478515625
    10. 'maximum' → logprob: -8.30865478515625

Token 402: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.496248722076416
    2. 'cul' → logprob: -0.996248722076416
    3. 'c' → logprob: -4.871248722076416
    4. 'culate' → logprob: -5.246248722076416
    5. '_max' → logprob: -5.371248722076416
    6. 'culated' → logprob: -6.871248722076416
    7. 'max' → logprob: -7.496248722076416
    8. '_c' → logprob: -7.496248722076416
    9. '_' → logprob: -7.621248722076416
    10. 'cu' → logprob: -8.496248245239258

Token 403: ' l' (ID: 305)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3299492299556732
    2. 'max' → logprob: -1.3299492597579956
    3. '   ' → logprob: -4.829949378967285
    4. ' la' → logprob: -4.954949378967285
    5. ' result' → logprob: -8.079949378967285
    6. 'result' → logprob: -8.954949378967285
    7. 'la' → logprob: -8.954949378967285
    8. ' maximal' → logprob: -8.954949378967285
    9. ' maximale' → logprob: -9.079949378967285
    10. ' maximum' → logprob: -9.204949378967285

Token 404: ''esp' (ID: 73244)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00834435410797596
    2. 'a' → logprob: -5.5083441734313965
    3. '_max' → logprob: -6.5083441734313965
    4. 'expected' → logprob: -7.2583441734313965
    5. 'maximum' → logprob: -7.3833441734313965
    6. 'e' → logprob: -7.7583441734313965
    7. '#' → logprob: -8.633344650268555
    8. ' max' → logprob: -8.633344650268555
    9. ''esp' → logprob: -9.133344650268555
    10. ' maximale' → logprob: -9.883344650268555

Token 405: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.01550163235515356
    2. '_max' → logprob: -5.265501499176025
    3. 'érience' → logprob: -6.140501499176025
    4. 'ect' → logprob: -6.140501499176025
    5. 'érence' → logprob: -6.265501499176025
    6. 'er' → logprob: -6.890501499176025
    7. 'é' → logprob: -7.265501499176025
    8. 'ér' → logprob: -7.765501499176025
    9. '_' → logprob: -8.265501976013184
    10. 'ected' → logprob: -8.265501976013184

Token 406: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23942239582538605
    2. '   ' → logprob: -1.6144224405288696
    3. 'return' → logprob: -5.36442232131958
    4. ' =' → logprob: -5.48942232131958
    5. '_max' → logprob: -5.86442232131958
    6. '=' → logprob: -6.86442232131958
    7. 'result' → logprob: -7.48942232131958
    8. ' maximale' → logprob: -9.114422798156738
    9. 'maximum' → logprob: -9.239422798156738
    10. '=max' → logprob: -9.239422798156738

Token 407: ' :' (ID: 712)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24173575639724731
    2. '   ' → logprob: -1.7417356967926025
    3. 'return' → logprob: -3.3667356967926025
    4. 'result' → logprob: -5.491735935211182
    5. 'expected' → logprob: -8.241735458374023
    6. ' max' → logprob: -8.491735458374023
    7. 'res' → logprob: -8.741735458374023
    8. '```' → logprob: -9.491735458374023
    9. 'ret' → logprob: -9.866735458374023
    10. 'maximum' → logprob: -10.491735458374023

Token 408: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4028763473033905
    2. 'return' → logprob: -1.152876377105713
    3. ' max' → logprob: -5.152876377105713
    4. '   ' → logprob: -5.152876377105713
    5. ' return' → logprob: -5.777876377105713
    6. 'expected' → logprob: -7.652876377105713
    7. 'result' → logprob: -7.777876377105713
    8. '```' → logprob: -9.277875900268555
    9. 'best' → logprob: -9.527875900268555
    10. 'maximum' → logprob: -9.777875900268555

Token 409: 's' (ID: 82)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.017717061564326286
    2. '(max' → logprob: -4.267716884613037
    3. ' max' → logprob: -5.642716884613037
    4. '[max' → logprob: -13.642717361450195
    5. 'float' → logprob: -13.767717361450195
    6. ' (' → logprob: -14.767717361450195
    7. '   ' → logprob: -15.142717361450195
    8. '1' → logprob: -15.642717361450195
    9. '	max' → logprob: -15.767717361450195
    10. 'min' → logprob: -15.892717361450195

Token 410: 'omme' (ID: 30420)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.033391740173101425
    2. 'um' → logprob: -4.408391952514648
    3. '(max' → logprob: -4.908391952514648
    4. '_max' → logprob: -5.283391952514648
    5. '=max' → logprob: -5.908391952514648
    6. '   ' → logprob: -6.158391952514648
    7. ' =' → logprob: -6.908391952514648
    8. '=' → logprob: -7.283391952514648
    9. 'ax' → logprob: -7.408391952514648
    10. ' max' → logprob: -8.033391952514648

Token 411: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.025026971474289894
    2. '_max' → logprob: -4.025026798248291
    3. '(max' → logprob: -5.150026798248291
    4. '+' → logprob: -7.775026798248291
    5. 'plus' → logprob: -8.52502727508545
    6. ' +' → logprob: -8.90002727508545
    7. ' max' → logprob: -9.27502727508545
    8. ' maximale' → logprob: -9.40002727508545
    9. '   ' → logprob: -11.02502727508545
    10. '=max' → logprob: -11.15002727508545

Token 412: ' des' (ID: 731)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7728996276855469
    2. 'max' → logprob: -1.1478996276855469
    3. '+' → logprob: -2.022899627685547
    4. '(max' → logprob: -2.647899627685547
    5. '(sum' → logprob: -4.897899627685547
    6. '(s' → logprob: -6.022899627685547
    7. '_max' → logprob: -6.147899627685547
    8. 'sum' → logprob: -6.397899627685547
    9. 'plus' → logprob: -7.522899627685547
    10. '   ' → logprob: -7.647899627685547

Token 413: ' sous' (ID: 14487)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8523826599121094
    2. 'max' → logprob: -0.9773826599121094
    3. ' sum' → logprob: -1.9773826599121094
    4. ' max' → logprob: -3.2273826599121094
    5. 'p' → logprob: -4.977382659912109
    6. ' p' → logprob: -5.352382659912109
    7. 'sub' → logprob: -6.352382659912109
    8. 's' → logprob: -6.477382659912109
    9. ')' → logprob: -6.727382659912109
    10. '[max' → logprob: -7.477382659912109

Token 414: '-list' (ID: 18463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5977648496627808
    2. 'max' → logprob: -1.0977648496627808
    3. '(max' → logprob: -3.3477649688720703
    4. '_max' → logprob: -3.7227649688720703
    5. '(p' → logprob: -3.9727649688720703
    6. '_l' → logprob: -4.22276496887207
    7. '_sum' → logprob: -4.84776496887207
    8. '(l' → logprob: -5.72276496887207
    9. 'sum' → logprob: -5.84776496887207
    10. '(' → logprob: -6.09776496887207

Token 415: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00749115040525794
    2. 'tes' → logprob: -5.257491111755371
    3. 'istes' → logprob: -6.257491111755371
    4. 'ues' → logprob: -8.882491111755371
    5. 's' → logprob: -10.382491111755371
    6. 'les' → logprob: -11.132491111755371
    7. 'ettes' → logprob: -11.257491111755371
    8. 'ist' → logprob: -11.382491111755371
    9. 'ses' → logprob: -11.382491111755371
    10. 'e' → logprob: -11.382491111755371

Token 416: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44804903864860535
    2. '+' → logprob: -1.4480490684509277
    3. 'max' → logprob: -2.4480490684509277
    4. ' /' → logprob: -4.573049068450928
    5. 'de' → logprob: -4.948049068450928
    6. ')' → logprob: -5.198049068450928
    7. '   ' → logprob: -5.823049068450928
    8. 'plus' → logprob: -5.823049068450928
    9. ' ' → logprob: -6.448049068450928
    10. 'des' → logprob: -6.823049068450928

Token 417: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05675226449966431
    2. ' k' → logprob: -2.9317522048950195
    3. 'len' → logprob: -6.4317522048950195
    4. ' len' → logprob: -8.55675220489502
    5. 'sum' → logprob: -10.30675220489502
    6. ' sum' → logprob: -11.43175220489502
    7. '1' → logprob: -11.43175220489502
    8. ' ' → logprob: -12.68175220489502
    9. '(k' → logprob: -13.55675220489502
    10. 'max' → logprob: -13.55675220489502

Token 418: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011225479654967785
    2. ' )' → logprob: -4.511225700378418
    3. ')/' → logprob: -8.886225700378418
    4. '+' → logprob: -11.886225700378418
    5. '   ' → logprob: -12.011225700378418
    6. ' +' → logprob: -12.136225700378418
    7. '*' → logprob: -12.511225700378418
    8. ')
' → logprob: -12.511225700378418
    9. '）' → logprob: -12.761225700378418
    10. '`)' → logprob: -13.261225700378418

Token 419: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23005275428295135
    2. ' /' → logprob: -2.2300527095794678
    3. '   ' → logprob: -3.3550527095794678
    4. 'max' → logprob: -3.3550527095794678
    5. ')/' → logprob: -4.480052947998047
    6. '/' → logprob: -4.730052947998047
    7. ')/(' → logprob: -5.730052947998047
    8. ' )' → logprob: -6.230052947998047
    9. '
' → logprob: -6.730052947998047
    10. ' max' → logprob: -7.730052947998047

Token 420: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09834325313568115
    2. '2' → logprob: -2.8483433723449707
    3. ' (' → logprob: -3.3483433723449707
    4. '   ' → logprob: -8.598342895507812
    5. ' ' → logprob: -8.723342895507812
    6. '(float' → logprob: -8.973342895507812
    7. 'float' → logprob: -9.723342895507812
    8. '(k' → logprob: -11.098342895507812
    9. ' float' → logprob: -11.473342895507812
    10. '```' → logprob: -12.348342895507812

Token 421: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14753960072994232
    2. '2' → logprob: -2.0225396156311035
    3. ' (' → logprob: -5.3975396156311035
    4. ' ' → logprob: -9.147539138793945
    5. '(float' → logprob: -9.397539138793945
    6. 'float' → logprob: -9.897539138793945
    7. '   ' → logprob: -10.147539138793945
    8. '(k' → logprob: -10.647539138793945
    9. '```' → logprob: -12.397539138793945
    10. 'k' → logprob: -12.647539138793945

Token 422: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31384003162384033
    2. 'return' → logprob: -1.3138400316238403
    3. 'max' → logprob: -8.06383991241455
    4. ' return' → logprob: -8.43883991241455
    5. '
' → logprob: -10.93883991241455
    6. '```' → logprob: -11.43883991241455
    7. 'result' → logprob: -11.56383991241455
    8. 'ret' → logprob: -11.93883991241455
    9. '	return' → logprob: -14.56383991241455
    10. '    
' → logprob: -14.68883991241455

Token 423: '0' (ID: 15)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531714916229248
    2. 'return' → logprob: -0.906714916229248
    3. ' return' → logprob: -5.406714916229248
    4. 'max' → logprob: -5.656714916229248
    5. '```' → logprob: -8.156715393066406
    6. '
' → logprob: -8.531715393066406
    7. 'result' → logprob: -9.906715393066406
    8. ' max' → logprob: -11.156715393066406
    9. '    
' → logprob: -11.656715393066406
    10. 'ret' → logprob: -12.281715393066406

Token 424: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2566085755825043
    2. 'return' → logprob: -1.5066086053848267
    3. 'max' → logprob: -5.631608486175537
    4. ' return' → logprob: -6.881608486175537
    5. 'result' → logprob: -10.506608963012695
    6. '
' → logprob: -11.381608963012695
    7. '```' → logprob: -11.756608963012695
    8. ' max' → logprob: -11.881608963012695
    9. 'ret' → logprob: -13.256608963012695
    10. '    
' → logprob: -13.756608963012695

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2552928030490875
    2. 'return' → logprob: -1.5052927732467651
    3. 'max' → logprob: -5.755292892456055
    4. ' return' → logprob: -9.255292892456055
    5. '```' → logprob: -10.005292892456055
    6. 'result' → logprob: -10.755292892456055
    7. 'ret' → logprob: -10.880292892456055
    8. '
' → logprob: -12.130292892456055
    9. '    
' → logprob: -13.505292892456055
    10. 'res' → logprob: -13.630292892456055

Token 426: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007099550683051348
    2. 'max' → logprob: -5.132099628448486
    3. '   ' → logprob: -7.132099628448486
    4. 'expected' → logprob: -8.632099151611328
    5. ' return' → logprob: -9.007099151611328
    6. 'result' → logprob: -9.882099151611328
    7. '```' → logprob: -12.132099151611328
    8. 'ret' → logprob: -12.382099151611328
    9. 'expect' → logprob: -12.882099151611328
    10. 'res' → logprob: -13.257099151611328

Token 427: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03763572871685028
    2. 'max' → logprob: -3.5376358032226562
    3. '   ' → logprob: -5.162635803222656
    4. 'expected' → logprob: -7.037635803222656
    5. 'result' → logprob: -7.412635803222656
    6. ' return' → logprob: -7.662635803222656
    7. 'ret' → logprob: -9.912635803222656
    8. 'expect' → logprob: -10.537635803222656
    9. 'res' → logprob: -10.662635803222656
    10. ' max' → logprob: -11.162635803222656

Token 428: 'Chaque' (ID: 151671)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21213871240615845
    2. ' max' → logprob: -2.4621386528015137
    3. '(max' → logprob: -2.7121386528015137
    4. 'return' → logprob: -3.5871386528015137
    5. ' return' → logprob: -5.462138652801514
    6. ')' → logprob: -5.712138652801514
    7. ' (' → logprob: -5.712138652801514
    8. '   ' → logprob: -7.712138652801514
    9. 'sum' → logprob: -8.962139129638672
    10. '(' → logprob: -9.212139129638672

Token 429: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7128471732139587
    2. ' )' → logprob: -1.8378472328186035
    3. '_' → logprob: -2.4628472328186035
    4. ' p' → logprob: -2.8378472328186035
    5. ' élément' → logprob: -2.9628472328186035
    6. ' _' → logprob: -3.0878472328186035
    7. ' element' → logprob: -3.7128472328186035
    8. 'élé' → logprob: -3.9628472328186035
    9. 'element' → logprob: -4.9628472328186035
    10. '+' → logprob: -5.0878472328186035

Token 430: ' p' (ID: 275)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6062875986099243
    2. ')' → logprob: -2.3562874794006348
    3. ' +' → logprob: -2.6062874794006348
    4. ' de' → logprob: -2.9812874794006348
    5. 'p' → logprob: -3.6062874794006348
    6. 'dans' → logprob: -3.6062874794006348
    7. ' dans' → logprob: -3.8562874794006348
    8. 's' → logprob: -3.9812874794006348
    9. ' est' → logprob: -4.231287479400635
    10. ' p' → logprob: -4.356287479400635

Token 431: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.42697346210479736
    2. '_max' → logprob: -2.301973342895508
    3. '[i' → logprob: -2.926973342895508
    4. '_' → logprob: -3.301973342895508
    5. ')_' → logprob: -3.301973342895508
    6. ')' → logprob: -3.676973342895508
    7. '_l' → logprob: -4.176973342895508
    8. '[' → logprob: -4.426973342895508
    9. 'max' → logprob: -4.676973342895508
    10. ']_' → logprob: -4.676973342895508

Token 432: ' correspond' (ID: 11095)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3052840828895569
    2. ')' → logprob: -2.305284023284912
    3. 'max' → logprob: -3.180284023284912
    4. '_max' → logprob: -3.180284023284912
    5. ' +' → logprob: -3.555284023284912
    6. ']' → logprob: -4.430284023284912
    7. '```' → logprob: -4.555284023284912
    8. ')+' → logprob: -5.555284023284912
    9. '_plus' → logprob: -5.555284023284912
    10. '[' → logprob: -5.805284023284912

Token 433: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6658816337585449
    2. '+' → logprob: -1.415881633758545
    3. ' à' → logprob: -1.790881633758545
    4. ' +' → logprob: -2.665881633758545
    5. 'à' → logprob: -6.290881633758545
    6. ' au' → logprob: -6.415881633758545
    7. ' )' → logprob: -6.665881633758545
    8. 'au' → logprob: -8.040882110595703
    9. '=' → logprob: -8.290882110595703
    10. '+)' → logprob: -8.290882110595703

Token 434: ' une' (ID: 2463)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.42448127269744873
    2. ' la' → logprob: -2.6744813919067383
    3. 'une' → logprob: -2.6744813919067383
    4. ' (' → logprob: -2.7994813919067383
    5. ' une' → logprob: -3.5494813919067383
    6. ' un' → logprob: -3.5494813919067383
    7. 'la' → logprob: -3.6744813919067383
    8. 'p' → logprob: -3.9244813919067383
    9. ' p' → logprob: -4.424481391906738
    10. 'un' → logprob: -4.549481391906738

Token 435: ' valeur' (ID: 41664)
  Prédit: ' face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.8144122958183289
    2. ' valeur' → logprob: -1.1894123554229736
    3. ' faces' → logprob: -2.8144123554229736
    4. 'dé' → logprob: -3.3144123554229736
    5. ' dé' → logprob: -3.5644123554229736
    6. 'face' → logprob: -3.5644123554229736
    7. '_faces' → logprob: -4.3144121170043945
    8. ' die' → logprob: -4.4394121170043945
    9. ' )' → logprob: -4.8144121170043945
    10. 'faces' → logprob: -4.8144121170043945

Token 436: ' d' (ID: 272)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5368688702583313
    2. ' maximale' → logprob: -1.0368688106536865
    3. '_max' → logprob: -3.0368688106536865
    4. ' max' → logprob: -5.286869049072266
    5. ' des' → logprob: -6.536869049072266
    6. '   ' → logprob: -6.536869049072266
    7. ' maximal' → logprob: -7.161869049072266
    8. ' maxim' → logprob: -7.661869049072266
    9. 'possible' → logprob: -8.036869049072266
    10. '
' → logprob: -8.036869049072266

Token 437: ''att' (ID: 50189)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8021772503852844
    2. 'max' → logprob: -2.0521771907806396
    3. '_expected' → logprob: -2.1771771907806396
    4. 'esp' → logprob: -2.3021771907806396
    5. '_' → logprob: -3.1771771907806396
    6. 'esper' → logprob: -3.6771771907806396
    7. 'att' → logprob: -4.052177429199219
    8. ' maximale' → logprob: -4.052177429199219
    9. '_i' → logprob: -4.177177429199219
    10. ''esp' → logprob: -4.427177429199219

Token 438: 'ente' (ID: 1576)
  Prédit: 'endue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endue' → logprob: -0.398731529712677
    2. 'ente' → logprob: -1.1487314701080322
    3. 'endu' → logprob: -5.773731708526611
    4. 'entes' → logprob: -6.023731708526611
    5. 'expected' → logprob: -6.023731708526611
    6. 'esp' → logprob: -7.398731708526611
    7. 'es' → logprob: -8.023731231689453
    8. 'expect' → logprob: -8.148731231689453
    9. '_expected' → logprob: -8.148731231689453
    10. 'e' → logprob: -8.398731231689453

Token 439: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5344113707542419
    2. ' +' → logprob: -1.5344114303588867
    3. '+' → logprob: -2.1594114303588867
    4. 'max' → logprob: -2.9094114303588867
    5. ' )' → logprob: -4.409411430358887
    6. '   ' → logprob: -4.909411430358887
    7. '_max' → logprob: -5.909411430358887
    8. ' ' → logprob: -7.284411430358887
    9. ' plus' → logprob: -7.284411430358887
    10. 'plus' → logprob: -7.284411430358887

Token 440: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.17794954776763916
    2. ' (' → logprob: -2.5529494285583496
    3. ' ' → logprob: -3.3029494285583496
    4. '1' → logprob: -3.8029494285583496
    5. ')' → logprob: -4.92794942855835
    6. '(' → logprob: -5.30294942855835
    7. 'p' → logprob: -6.17794942855835
    8. ' p' → logprob: -6.17794942855835
    9. ' )' → logprob: -6.42794942855835
    10. '0' → logprob: -6.67794942855835

Token 441: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3168943524360657
    2. ' p' → logprob: -1.941894292831421
    3. 'max' → logprob: -3.566894292831421
    4. 'sum' → logprob: -3.566894292831421
    5. '(p' → logprob: -4.31689453125
    6. ' max' → logprob: -4.69189453125
    7. ' (' → logprob: -4.81689453125
    8. 'x' → logprob: -4.81689453125
    9. ' sum' → logprob: -4.81689453125
    10. ')' → logprob: -4.81689453125

Token 442: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.000351670227246359
    2. '[i' → logprob: -8.125351905822754
    3. '[_' → logprob: -10.500351905822754
    4. '_' → logprob: -11.500351905822754
    5. '   ' → logprob: -12.750351905822754
    6. '_l' → logprob: -13.000351905822754
    7. ' _' → logprob: -13.000351905822754
    8. 'i' → logprob: -13.250351905822754
    9. ')_' → logprob: -13.250351905822754
    10. '[' → logprob: -13.375351905822754

Token 443: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2267371118068695
    2. ' +' → logprob: -1.601737141609192
    3. 'max' → logprob: -6.976737022399902
    4. '_max' → logprob: -8.976737022399902
    5. 's' → logprob: -9.976737022399902
    6. '[' → logprob: -10.226737022399902
    7. '_plus' → logprob: -10.476737022399902
    8. ' ' → logprob: -10.476737022399902
    9. ' plus' → logprob: -10.726737022399902
    10. 'plus' → logprob: -10.851737022399902

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020958632230759
    2. ' ' → logprob: -2.3502094745635986
    3. '   ' → logprob: -14.10020923614502
    4. '```' → logprob: -14.22520923614502
    5. ' ' → logprob: -14.60020923614502
    6. '  ' → logprob: -14.72520923614502
    7. ')' → logprob: -15.72520923614502
    8. '+' → logprob: -16.100210189819336
    9. '=' → logprob: -16.225210189819336
    10. '2' → logprob: -16.475210189819336

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002979240380227566
    2. ' ' → logprob: -8.125297546386719
    3. '```' → logprob: -13.625297546386719
    4. '   ' → logprob: -14.875297546386719
    5. '
' → logprob: -15.875297546386719
    6. '  ' → logprob: -17.12529754638672
    7. '`' → logprob: -17.31279754638672
    8. ' ' → logprob: -17.37529754638672
    9. '+' → logprob: -17.43779754638672
    10. ')' → logprob: -17.62529754638672

Token 446: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06208229809999466
    2. ')/' → logprob: -2.812082290649414
    3. '))' → logprob: -10.437082290649414
    4. ' )' → logprob: -10.687082290649414
    5. '）' → logprob: -11.187082290649414
    6. '))/' → logprob: -11.437082290649414
    7. '")' → logprob: -11.687082290649414
    8. '   ' → logprob: -12.062082290649414
    9. '`)' → logprob: -12.687082290649414
    10. '```' → logprob: -12.812082290649414

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01347148697823286
    2. ' ' → logprob: -4.388471603393555
    3. ')' → logprob: -7.138471603393555
    4. '/' → logprob: -9.263471603393555
    5. 'k' → logprob: -11.263471603393555
    6. ')/' → logprob: -11.263471603393555
    7. '   ' → logprob: -11.388471603393555
    8. ' )' → logprob: -11.888471603393555
    9. '```' → logprob: -11.888471603393555
    10. ' /' → logprob: -12.138471603393555

Token 448: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001265825005248189
    2. '   ' → logprob: -7.376266002655029
    3. ' )' → logprob: -8.001265525817871
    4. ')
' → logprob: -8.251265525817871
    5. '+' → logprob: -11.501265525817871
    6. ' +' → logprob: -12.251265525817871
    7. ']' → logprob: -12.251265525817871
    8. 'return' → logprob: -12.376265525817871
    9. ' ' → logprob: -12.876265525817871
    10. '.' → logprob: -13.126265525817871

Token 449: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4792362153530121
    2. ')' → logprob: -0.9792362451553345
    3. 'return' → logprob: -5.604236125946045
    4. ')
' → logprob: -6.729236125946045
    5. 'max' → logprob: -9.104236602783203
    6. ' return' → logprob: -9.604236602783203
    7. ' )' → logprob: -10.479236602783203
    8. '  ' → logprob: -11.729236602783203
    9. 'result' → logprob: -11.979236602783203
    10. ')/' → logprob: -11.979236602783203

Token 450: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26590052247047424
    2. 'max' → logprob: -1.7659004926681519
    3. ' return' → logprob: -3.3909006118774414
    4. 'result' → logprob: -4.015900611877441
    5. '   ' → logprob: -5.015900611877441
    6. ' max' → logprob: -6.265900611877441
    7. 'res' → logprob: -7.515900611877441
    8. ')' → logprob: -7.640900611877441
    9. 'val' → logprob: -8.015900611877441
    10. ' result' → logprob: -8.515900611877441

Token 451: ' formule' (ID: 84316)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1818053424358368
    2. ')' → logprob: -2.431805372238159
    3. ' max' → logprob: -3.931805372238159
    4. 'val' → logprob: -4.30680513381958
    5. ' maximal' → logprob: -4.43180513381958
    6. ' somme' → logprob: -5.30680513381958
    7. 'maximum' → logprob: -5.30680513381958
    8. ' )' → logprob: -5.43180513381958
    9. ' maximale' → logprob: -5.80680513381958
    10. 's' → logprob: -6.05680513381958

Token 452: ' globale' (ID: 87991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056989431381225586
    2. 'return' → logprob: -3.8069894313812256
    3. 'max' → logprob: -4.431989669799805
    4. '   ' → logprob: -4.931989669799805
    5. 'final' → logprob: -5.056989669799805
    6. '=' → logprob: -6.056989669799805
    7. ' =' → logprob: -6.556989669799805
    8. ' return' → logprob: -7.056989669799805
    9. 'result' → logprob: -7.806989669799805
    10. ' )' → logprob: -7.806989669799805

Token 453: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009218233171850443
    2. ' )' → logprob: -8.125922203063965
    3. '+' → logprob: -8.750922203063965
    4. '   ' → logprob: -8.750922203063965
    5. ' +' → logprob: -9.250922203063965
    6. ')**' → logprob: -9.750922203063965
    7. ')
' → logprob: -10.250922203063965
    8. 'return' → logprob: -10.500922203063965
    9. 'max' → logprob: -10.875922203063965
    10. ')/' → logprob: -11.000922203063965

Token 454: ''ap' (ID: 31362)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.284132719039917
    2. ' =' → logprob: -2.034132719039917
    3. 'return' → logprob: -3.159132719039917
    4. '=(' → logprob: -4.034132957458496
    5. 'um' → logprob: -4.159132957458496
    6. ')' → logprob: -4.284132957458496
    7. '=max' → logprob: -5.534132957458496
    8. 'ur' → logprob: -5.659132957458496
    9. '=sum' → logprob: -6.159132957458496
    10. ']' → logprob: -6.284132957458496

Token 455: 'plique' (ID: 71193)
  Prédit: 'plique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plique' → logprob: -0.15071213245391846
    2. 'pl' → logprob: -2.275712013244629
    3. 'pli' → logprob: -4.525712013244629
    4. 'ply' → logprob: -4.775712013244629
    5. 'plies' → logprob: -5.150712013244629
    6. 'p' → logprob: -6.025712013244629
    7. 'plt' → logprob: -6.525712013244629
    8. 'pro' → logprob: -6.650712013244629
    9. 'pu' → logprob: -6.900712013244629
    10. 'pr' → logprob: -6.900712013244629

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03192783519625664
    2. ')
' → logprob: -4.031928062438965
    3. '   ' → logprob: -4.406928062438965
    4. ' /' → logprob: -7.906928062438965
    5. '/' → logprob: -8.406928062438965
    6. '+' → logprob: -8.781928062438965
    7. ')/' → logprob: -8.906928062438965
    8. ' )' → logprob: -9.031928062438965
    9. 'max' → logprob: -9.281928062438965
    10. ' +' → logprob: -9.656928062438965

Token 457: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4779060482978821
    2. '   ' → logprob: -0.9779060482978821
    3. 'max' → logprob: -6.102906227111816
    4. ' return' → logprob: -6.727906227111816
    5. '```' → logprob: -8.227906227111816
    6. 'result' → logprob: -9.227906227111816
    7. 'ret' → logprob: -11.602906227111816
    8. '
' → logprob: -11.977906227111816
    9. '    
' → logprob: -13.477906227111816
    10. 'res' → logprob: -13.727906227111816

Token 458: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16317111253738403
    2. 'max' → logprob: -2.2881710529327393
    3. '   ' → logprob: -3.0381710529327393
    4. 'result' → logprob: -7.538171291351318
    5. ' return' → logprob: -7.788171291351318
    6. 'expected' → logprob: -9.91317081451416
    7. ' max' → logprob: -10.03817081451416
    8. '```' → logprob: -10.03817081451416
    9. 'best' → logprob: -10.53817081451416
    10. 'res' → logprob: -10.91317081451416

Token 459: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5853407979011536
    2. '(max' → logprob: -0.8353407979011536
    3. ' max' → logprob: -4.835340976715088
    4. 'max' → logprob: -6.585340976715088
    5. '   ' → logprob: -11.08534049987793
    6. '(float' → logprob: -11.83534049987793
    7. '(s' → logprob: -12.71034049987793
    8. ' ' → logprob: -12.96034049987793
    9. '(m' → logprob: -13.33534049987793
    10. '(round' → logprob: -14.71034049987793

Token 460: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.723352049040841e-06
    2. ' max' → logprob: -12.375004768371582
    3. '(max' → logprob: -14.875004768371582
    4. 'float' → logprob: -15.750004768371582
    5. '   ' → logprob: -19.000003814697266
    6. '	max' → logprob: -19.250003814697266
    7. '[max' → logprob: -19.375003814697266
    8. '_max' → logprob: -21.125003814697266
    9. 'maximum' → logprob: -21.375003814697266
    10. ',max' → logprob: -21.375003814697266

Token 461: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.1049325168132782
    2. '(s' → logprob: -2.3549325466156006
    3. 'sum' → logprob: -5.4799323081970215
    4. ' sum' → logprob: -8.60493278503418
    5. '(' → logprob: -9.10493278503418
    6. '_sum' → logprob: -9.60493278503418
    7. '(max' → logprob: -10.10493278503418
    8. '=sum' → logprob: -10.22993278503418
    9. 's' → logprob: -10.35493278503418
    10. ' (' → logprob: -10.72993278503418

Token 462: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.9153885558771435e-06
    2. '(sum' → logprob: -12.125005722045898
    3. '(s' → logprob: -15.000005722045898
    4. 'sum' → logprob: -16.7500057220459
    5. 'ls' → logprob: -16.8750057220459
    6. 's' → logprob: -18.0000057220459
    7. ')' → logprob: -18.1250057220459
    8. 'L' → logprob: -18.1250057220459
    9. '(max' → logprob: -18.1250057220459
    10. '(l' → logprob: -19.2500057220459

Token 463: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741109013557434
    2. ' +' → logprob: -0.9741109013557434
    3. ')' → logprob: -10.47411060333252
    4. ')+' → logprob: -12.59911060333252
    5. ' ' → logprob: -14.34911060333252
    6. '   ' → logprob: -14.47411060333252
    7. '+k' → logprob: -14.59911060333252
    8. '
' → logprob: -15.59911060333252
    9. ' plus' → logprob: -15.97411060333252
    10. '+
' → logprob: -16.474111557006836

Token 464: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022950410842896
    2. '+' → logprob: -1.9102294445037842
    3. '+k' → logprob: -12.285229682922363
    4. '   ' → logprob: -15.160229682922363
    5. ' plus' → logprob: -15.910229682922363
    6. ' ' → logprob: -16.660228729248047
    7. ' ' → logprob: -16.660228729248047
    8. '+
' → logprob: -17.285228729248047
    9. ' +
' → logprob: -17.410228729248047
    10. '```' → logprob: -17.660228729248047

Token 465: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02324547804892063
    2. ' k' → logprob: -3.7732455730438232
    3. '   ' → logprob: -19.523244857788086
    4. ' ' → logprob: -19.898244857788086
    5. '	k' → logprob: -20.398244857788086
    6. '(k' → logprob: -21.648244857788086
    7. '    ' → logprob: -22.898244857788086
    8. '_k' → logprob: -23.023244857788086
    9. '  ' → logprob: -23.148244857788086
    10. '{k' → logprob: -23.148244857788086

Token 466: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011284107313258573
    2. ' )' → logprob: -9.125112533569336
    3. ')/' → logprob: -12.500112533569336
    4. '   ' → logprob: -17.375112533569336
    5. '）' → logprob: -17.375112533569336
    6. '")' → logprob: -19.125112533569336
    7. ')
' → logprob: -19.375112533569336
    8. '`)' → logprob: -19.750112533569336
    9. '```' → logprob: -19.750112533569336
    10. ']' → logprob: -20.125112533569336

Token 467: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.22548986971378326
    2. '/' → logprob: -1.600489854812622
    3. ')' → logprob: -9.850489616394043
    4. '   ' → logprob: -11.725489616394043
    5. ' ' → logprob: -12.350489616394043
    6. ' ' → logprob: -12.725489616394043
    7. '```' → logprob: -12.850489616394043
    8. '*' → logprob: -13.225489616394043
    9. ')/' → logprob: -13.225489616394043
    10. '
' → logprob: -14.100489616394043

Token 468: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07888978719711304
    2. ' ' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.578889846801758
    4. ' ' → logprob: -19.828889846801758
    5. '```' → logprob: -19.828889846801758
    6. '
' → logprob: -19.953889846801758
    7. '0' → logprob: -21.078889846801758
    8. '  ' → logprob: -21.578889846801758
    9. '.' → logprob: -21.953889846801758
    10. '20' → logprob: -22.203889846801758

Token 469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -21.000009536743164
    4. '   ' → logprob: -21.125009536743164
    5. '
' → logprob: -21.375009536743164
    6. '２' → logprob: -23.500009536743164
    7. 'float' → logprob: -23.875009536743164
    8. '۲' → logprob: -24.000009536743164
    9. '  ' → logprob: -24.125009536743164
    10. ' ' → logprob: -24.375009536743164

Token 470: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: '


' (ID: 2499)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5339988470077515
    2. '<|end|>' → logprob: -0.9089988470077515
    3. '#' → logprob: -5.908998966217041
    4. '[' → logprob: -6.158998966217041
    5. '```' → logprob: -6.158998966217041
    6. ':' → logprob: -7.033998966217041
    7. '<|end|>' → logprob: -7.283998966217041
    8. ',' → logprob: -7.783998966217041
    9. '\' → logprob: -8.158998489379883
    10. '
' → logprob: -8.533998489379883

Token 473: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' main' (ID: 2758)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.18347114324569702
    2. ' expected' → logprob: -2.433471202850342
    3. 'max' → logprob: -3.433471202850342
    4. ' main' → logprob: -3.933471202850342
    5. 'expected' → logprob: -5.058471202850342
    6. ' best' → logprob: -5.058471202850342
    7. ' find' → logprob: -5.808471202850342
    8. ' min' → logprob: -6.058471202850342
    9. ' optimal' → logprob: -6.433471202850342
    10. ' sum' → logprob: -6.808471202850342

Token 475: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004981054808013141
    2. '_' → logprob: -8.125497817993164
    3. '():
' → logprob: -8.875497817993164
    4. ' ():' → logprob: -10.125497817993164
    5. '()>' → logprob: -12.250497817993164
    6. '(' → logprob: -12.500497817993164
    7. '()' → logprob: -12.500497817993164
    8. '_:' → logprob: -13.125497817993164
    9. '():
' → logprob: -13.375497817993164
    10. 'def' → logprob: -13.625497817993164

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12359607219696045
    2. ' n' → logprob: -2.37359619140625
    3. 'n' → logprob: -3.87359619140625
    4. '(n' → logprob: -6.87359619140625
    5. '```' → logprob: -7.49859619140625
    6. ' import' → logprob: -8.49859619140625
    7. 'def' → logprob: -8.74859619140625
    8. 'import' → logprob: -9.24859619140625
    9. ' def' → logprob: -9.49859619140625
    10. ' if' → logprob: -9.62359619140625

Token 477: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5259804725646973
    2. '   ' → logprob: -1.1509804725646973
    3. 'n' → logprob: -2.4009804725646973
    4. 'import' → logprob: -6.900980472564697
    5. ' import' → logprob: -7.025980472564697
    6. 't' → logprob: -10.275979995727539
    7. '```' → logprob: -10.525979995727539
    8. '	n' → logprob: -10.775979995727539
    9. ' t' → logprob: -11.275979995727539
    10. ' input' → logprob: -11.275979995727539

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3351611793041229
    2. 'n' → logprob: -1.3351612091064453
    3. ' n' → logprob: -3.8351612091064453
    4. '```' → logprob: -9.960161209106445
    5. ' ' → logprob: -11.835161209106445
    6. 't' → logprob: -13.210161209106445
    7. '	n' → logprob: -13.210161209106445
    8. '  ' → logprob: -13.335161209106445
    9. '#' → logprob: -14.460161209106445
    10. '(n' → logprob: -14.960161209106445

Token 479: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003958597779273987
    2. ' n' → logprob: -6.378958702087402
    3. 'n' → logprob: -7.128958702087402
    4. '#' → logprob: -7.503958702087402
    5. 'def' → logprob: -7.878958702087402
    6. ' test' → logprob: -9.378958702087402
    7. 'import' → logprob: -9.378958702087402
    8. ' #' → logprob: -10.003958702087402
    9. ' ' → logprob: -10.253958702087402
    10. ' def' → logprob: -10.253958702087402

Token 480: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18714161217212677
    2. 'def' → logprob: -2.1871416568756104
    3. ' de' → logprob: -4.062141418457031
    4. ' principale' → logprob: -4.062141418457031
    5. ' test' → logprob: -4.437141418457031
    6. ' def' → logprob: -5.437141418457031
    7. ' main' → logprob: -5.812141418457031
    8. 'de' → logprob: -6.312141418457031
    9. '()' → logprob: -7.937141418457031
    10. '  ' → logprob: -8.187141418457031

Token 481: ' pour' (ID: 1930)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5369319915771484
    2. '():' → logprob: -1.5369319915771484
    3. '   ' → logprob: -1.6619319915771484
    4. 'def' → logprob: -4.786931991577148
    5. '()' → logprob: -6.911931991577148
    6. ':' → logprob: -7.036931991577148
    7. ':
' → logprob: -8.661931991577148
    8. '```' → logprob: -9.286931991577148
    9. '
' → logprob: -10.661931991577148
    10. '):
' → logprob: -10.911931991577148

Token 482: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.7243998646736145
    2. ' tester' → logprob: -1.4743998050689697
    3. '   ' → logprob: -1.8493998050689697
    4. ' lancer' → logprob: -3.9743998050689697
    5. ' gérer' → logprob: -4.224400043487549
    6. ' calcul' → logprob: -4.224400043487549
    7. ' la' → logprob: -4.474400043487549
    8. ' ex' → logprob: -4.599400043487549
    9. ' recevoir' → logprob: -4.974400043487549
    10. 'def' → logprob: -5.224400043487549

Token 483: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25827279686927795
    2. ' les' → logprob: -2.133272886276245
    3. ' la' → logprob: -2.758272886276245
    4. '()' → logprob: -3.883272886276245
    5. '```' → logprob: -4.883272647857666
    6. 'import' → logprob: -5.383272647857666
    7. ' l' → logprob: -5.508272647857666
    8. ' des' → logprob: -6.133272647857666
    9. 'n' → logprob: -6.258272647857666
    10. ' n' → logprob: -6.383272647857666

Token 484: ' entr' (ID: 7072)
  Prédit: ' entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entr' → logprob: -0.858146071434021
    2. ' inputs' → logprob: -1.108146071434021
    3. ' données' → logprob: -1.858146071434021
    4. 'd' → logprob: -3.7331461906433105
    5. 'inputs' → logprob: -3.9831461906433105
    6. ' input' → logprob: -4.3581461906433105
    7. 'entr' → logprob: -4.4831461906433105
    8. 'entrée' → logprob: -5.1081461906433105
    9. 'n' → logprob: -5.4831461906433105
    10. '   ' → logprob: -5.8581461906433105

Token 485: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.011088147759437561
    2. 'ees' → logprob: -4.5110883712768555
    3. 'es' → logprob: -11.636088371276855
    4. '```' → logprob: -11.886088371276855
    5. 'ies' → logprob: -12.011088371276855
    6. 'ée' → logprob: -12.511088371276855
    7. '   ' → logprob: -12.511088371276855
    8. 'rees' → logprob: -12.886088371276855
    9. '#' → logprob: -13.261088371276855
    10. 'e' → logprob: -13.261088371276855

Token 486: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031170127913355827
    2. ',' → logprob: -3.906170129776001
    3. '():' → logprob: -5.406169891357422
    4. ':' → logprob: -5.656169891357422
    5. ' et' → logprob: -6.906169891357422
    6. '()' → logprob: -7.156169891357422
    7. '():
' → logprob: -8.156169891357422
    8. '```' → logprob: -9.531169891357422
    9. ':
' → logprob: -9.781169891357422
    10. 'def' → logprob: -9.781169891357422

Token 487: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013760410249233246
    2. ',' → logprob: -5.013760566711426
    3. '():' → logprob: -5.388760566711426
    4. ':' → logprob: -6.888760566711426
    5. '()' → logprob: -7.638760566711426
    6. '):' → logprob: -8.013760566711426
    7. '():
' → logprob: -8.513760566711426
    8. '```' → logprob: -8.888760566711426
    9. ')' → logprob: -9.388760566711426
    10. '):
' → logprob: -10.513760566711426

Token 488: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004857530351728201
    2. ' n' → logprob: -5.504857540130615
    3. 'n' → logprob: -8.004857063293457
    4. '    ' → logprob: -9.254857063293457
    5. '    
' → logprob: -9.254857063293457
    6. 'def' → logprob: -9.879857063293457
    7. '   ' → logprob: -9.879857063293457
    8. '```' → logprob: -10.379857063293457
    9. 'import' → logprob: -10.879857063293457
    10. ' p' → logprob: -11.254857063293457

Token 489: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0022531491704285145
    2. '   ' → logprob: -6.12725305557251
    3. 'ate' → logprob: -10.377253532409668
    4. 'def' → logprob: -10.502253532409668
    5. '=' → logprob: -13.627253532409668
    6. 'iter' → logprob: -13.877253532409668
    7. 'érer' → logprob: -14.252253532409668
    8. '    
' → logprob: -14.377253532409668
    9. 'atrice' → logprob: -14.377253532409668
    10. ' =' → logprob: -14.377253532409668

Token 490: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03972591087222099
    2. ' la' → logprob: -3.5397260189056396
    3. 'n' → logprob: -4.9147257804870605
    4. ' n' → logprob: -7.0397257804870605
    5. 'la' → logprob: -7.2897257804870605
    6. '(n' → logprob: -8.039726257324219
    7. ' et' → logprob: -8.664726257324219
    8. 'l' → logprob: -9.414726257324219
    9. ' les' → logprob: -9.664726257324219
    10. ' le' → logprob: -9.914726257324219

Token 491: ''esp' (ID: 73244)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6780226826667786
    2. ''esp' → logprob: -0.8030226826667786
    3. '   ' → logprob: -3.928022623062134
    4. ''' → logprob: -4.678022861480713
    5. '_expected' → logprob: -4.803022861480713
    6. 'e' → logprob: -5.803022861480713
    7. 'expected' → logprob: -7.178022861480713
    8. '_' → logprob: -7.553022861480713
    9. ''exp' → logprob: -7.803022861480713
    10. ''espace' → logprob: -7.803022861480713

Token 492: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.01145025622099638
    2. 'érence' → logprob: -5.011450290679932
    3. 'érer' → logprob: -5.886450290679932
    4. 'érée' → logprob: -6.886450290679932
    5. '   ' → logprob: -8.136449813842773
    6. 'ér' → logprob: -8.511449813842773
    7. 'Expected' → logprob: -9.136449813842773
    8. 'er' → logprob: -9.761449813842773
    9. '_expected' → logprob: -9.886449813842773
    10. 'érience' → logprob: -10.511449813842773

Token 493: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27069413661956787
    2. ' maximale' → logprob: -1.7706941366195679
    3. 'max' → logprob: -2.7706942558288574
    4. '_max' → logprob: -6.895694255828857
    5. ' attend' → logprob: -7.020694255828857
    6. 'att' → logprob: -7.145694255828857
    7. ' de' → logprob: -7.395694255828857
    8. 'de' → logprob: -8.1456937789917
    9. ' max' → logprob: -8.2706937789917
    10. '    ' → logprob: -9.3956937789917

Token 494: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05352994427084923
    2. ',' → logprob: -3.053529977798462
    3. ' et' → logprob: -5.428529739379883
    4. 'et' → logprob: -8.053529739379883
    5. 'de' → logprob: -9.553529739379883
    6. ' de' → logprob: -9.928529739379883
    7. ' ,' → logprob: -11.053529739379883
    8. '    
' → logprob: -11.178529739379883
    9. ' des' → logprob: -11.303529739379883
    10. '```' → logprob: -11.553529739379883

Token 495: ' afficher' (ID: 146524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021382281556725502
    2. ' afficher' → logprob: -4.1463823318481445
    3. ' print' → logprob: -5.3963823318481445
    4. 'print' → logprob: -7.6463823318481445
    5. 'aff' → logprob: -9.021382331848145
    6. ' impr' → logprob: -9.771382331848145
    7. ' les' → logprob: -9.771382331848145
    8. ' imprime' → logprob: -10.896382331848145
    9. 'Afficher' → logprob: -11.396382331848145
    10. '   ' → logprob: -11.521382331848145

Token 496: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6751134991645813
    2. ' la' → logprob: -1.5501134395599365
    3. '   ' → logprob: -1.9251134395599365
    4. ' le' → logprob: -3.0501134395599365
    5. 'result' → logprob: -3.3001134395599365
    6. '(' → logprob: -4.175113677978516
    7. 'la' → logprob: -4.675113677978516
    8. ' les' → logprob: -4.800113677978516
    9. '(
' → logprob: -5.800113677978516
    10. 'le' → logprob: -5.925113677978516

Token 497: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.4782692790031433
    2. ' résultat' → logprob: -0.9782692790031433
    3. 'result' → logprob: -5.603269100189209
    4. '   ' → logprob: -8.228269577026367
    5. 'Rés' → logprob: -9.603269577026367
    6. ' resultat' → logprob: -9.728269577026367
    7. 'r' → logprob: -9.978269577026367
    8. ' résultats' → logprob: -11.478269577026367
    9. 'res' → logprob: -11.728269577026367
    10. ' result' → logprob: -11.853269577026367

Token 498: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031393319368362427
    2. ':' → logprob: -6.503139495849609
    3. '():' → logprob: -7.003139495849609
    4. '):' → logprob: -8.12813949584961
    5. '():
' → logprob: -9.00313949584961
    6. '):
' → logprob: -9.37813949584961
    7. '
' → logprob: -9.75313949584961
    8. '    
' → logprob: -9.75313949584961
    9. ')' → logprob: -10.62813949584961
    10. '.' → logprob: -11.00313949584961

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010229965671896935
    2. '```' → logprob: -4.63523006439209
    3. '    
' → logprob: -8.26023006439209
    4. '
' → logprob: -9.01023006439209
    5. '``' → logprob: -10.38523006439209
    6. ':' → logprob: -11.26023006439209
    7. 'def' → logprob: -11.26023006439209
    8. '):
' → logprob: -11.38523006439209
    9. '<|end|>' → logprob: -12.38523006439209
    10. ')' → logprob: -12.38523006439209

Token 500: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018732868193183094
    2. '    
' → logprob: -9.000186920166016
    3. '
' → logprob: -10.500186920166016
    4. '```' → logprob: -10.500186920166016
    5. 'n' → logprob: -12.000186920166016
    6. 'def' → logprob: -13.875186920166016
    7. 'import' → logprob: -14.000186920166016
    8. '       ' → logprob: -15.875186920166016
    9. '``' → logprob: -15.875186920166016
    10. '    ' → logprob: -16.000186920166016

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000182921823579818
    2. 'n' → logprob: -9.62518310546875
    3. 'import' → logprob: -9.87518310546875
    4. '```' → logprob: -9.87518310546875
    5. ' n' → logprob: -11.62518310546875
    6. ' import' → logprob: -13.50018310546875
    7. 'input' → logprob: -13.75018310546875
    8. '    
' → logprob: -14.37518310546875
    9. 'try' → logprob: -15.12518310546875
    10. '    ' → logprob: -15.12518310546875

Token 502: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.047704536467790604
    2. ' n' → logprob: -3.5477044582366943
    3. '   ' → logprob: -4.047704696655273
    4. 'import' → logprob: -8.172704696655273
    5. '```' → logprob: -10.172704696655273
    6. ' import' → logprob: -11.797704696655273
    7. '	n' → logprob: -12.922704696655273
    8. ' ' → logprob: -15.047704696655273
    9. 'try' → logprob: -15.672704696655273
    10. '    
' → logprob: -15.672704696655273

Token 503: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048112593591213226
    2. 'import' → logprob: -3.298112630844116
    3. ' n' → logprob: -4.673112392425537
    4. ' import' → logprob: -7.423112392425537
    5. '   ' → logprob: -10.173112869262695
    6. '```' → logprob: -10.548112869262695
    7. 't' → logprob: -12.048112869262695
    8. 'input' → logprob: -12.173112869262695
    9. 'try' → logprob: -13.298112869262695
    10. '#' → logprob: -14.048112869262695

Token 504: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6539117097854614
    2. '   ' → logprob: -0.7789117097854614
    3. 'import' → logprob: -5.028911590576172
    4. ' =' → logprob: -5.153911590576172
    5. 'n' → logprob: -5.528911590576172
    6. '```' → logprob: -6.278911590576172
    7. '=' → logprob: -7.278911590576172
    8. '()
' → logprob: -7.653911590576172
    9. 's' → logprob: -8.528911590576172
    10. ' n' → logprob: -8.778911590576172

Token 505: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602691262960434
    2. 'n' → logprob: -1.9102691411972046
    3. '   ' → logprob: -10.285268783569336
    4. ' la' → logprob: -11.785268783569336
    5. '	n' → logprob: -13.535268783569336
    6. 't' → logprob: -14.535268783569336
    7. ' t' → logprob: -15.035268783569336
    8. 'int' → logprob: -15.410268783569336
    9. ' l' → logprob: -16.035268783569336
    10. ' input' → logprob: -16.285268783569336

Token 506: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6669555306434631
    2. 'ent' → logprob: -1.1669554710388184
    3. ' integers' → logprob: -2.2919554710388184
    4. 'n' → logprob: -3.5419554710388184
    5. 'inte' → logprob: -3.9169554710388184
    6. ' n' → logprob: -4.791955471038818
    7. ' =' → logprob: -5.291955471038818
    8. ' nombres' → logprob: -5.416955471038818
    9. '_ent' → logprob: -6.666955471038818
    10. 'val' → logprob: -6.791955471038818

Token 507: 'iers' (ID: 11012)
  Prédit: 'rees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.8072373867034912
    2. 'rée' → logprob: -0.8072373867034912
    3. 'r' → logprob: -2.682237386703491
    4. 'ries' → logprob: -4.05723762512207
    5. 'ree' → logprob: -5.18223762512207
    6. 't' → logprob: -5.43223762512207
    7. 'iers' → logprob: -6.05723762512207
    8. 're' → logprob: -6.43223762512207
    9. ' =' → logprob: -6.80723762512207
    10. 'tries' → logprob: -6.93223762512207

Token 508: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.484135240316391
    2. 'n' → logprob: -0.9841352701187134
    3. ' =' → logprob: -5.484135150909424
    4. '(n' → logprob: -5.609135150909424
    5. '   ' → logprob: -6.359135150909424
    6. ' line' → logprob: -9.109135627746582
    7. ',' → logprob: -9.484135627746582
    8. 's' → logprob: -9.609135627746582
    9. '()' → logprob: -9.984135627746582
    10. '	n' → logprob: -10.359135627746582

Token 509: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. ' ,' → logprob: -9.00019359588623
    3. ',k' → logprob: -9.75019359588623
    4. ',n' → logprob: -12.25019359588623
    5. ' =' → logprob: -12.50019359588623
    6. '   ' → logprob: -13.87519359588623
    7. ',p' → logprob: -14.00019359588623
    8. '=' → logprob: -15.12519359588623
    9. ' et' → logprob: -15.37519359588623
    10. 's' → logprob: -16.000194549560547

Token 510: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023245712742209435
    2. ' k' → logprob: -3.7732458114624023
    3. ',k' → logprob: -15.523245811462402
    4. '	k' → logprob: -16.898244857788086
    5. '   ' → logprob: -17.523244857788086
    6. ',' → logprob: -17.773244857788086
    7. '_k' → logprob: -19.023244857788086
    8. 'p' → logprob: -19.148244857788086
    9. ' ' → logprob: -19.148244857788086
    10. '  ' → logprob: -19.898244857788086

Token 511: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007743150927126408
    2. '=' → logprob: -5.0077433586120605
    3. '   ' → logprob: -7.1327433586120605
    4. ',' → logprob: -8.632742881774902
    5. 'n' → logprob: -10.632742881774902
    6. '=n' → logprob: -11.757742881774902
    7. ' n' → logprob: -12.507742881774902
    8. '=int' → logprob: -12.507742881774902
    9. '=input' → logprob: -12.632742881774902
    10. '(n' → logprob: -12.882742881774902

Token 512: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6667129993438721
    2. 'input' → logprob: -1.041712999343872
    3. ' partir' → logprob: -3.291712999343872
    4. '=input' → logprob: -3.666712999343872
    5. 'part' → logprob: -3.916712999343872
    6. '=' → logprob: -4.166712760925293
    7. ' =' → logprob: -4.541712760925293
    8. ' l' → logprob: -4.916712760925293
    9. 'la' → logprob: -5.541712760925293
    10. ' input' → logprob: -5.916712760925293

Token 513: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3265525996685028
    2. '   ' → logprob: -1.3265526294708252
    3. ' de' → logprob: -4.826552391052246
    4. ' input' → logprob: -6.201552391052246
    5. '()
' → logprob: -7.201552391052246
    6. '().' → logprob: -7.826552391052246
    7. 'input' → logprob: -7.826552391052246
    8. 'de' → logprob: -7.951552391052246
    9. ' la' → logprob: -8.076552391052246
    10. '(' → logprob: -8.326552391052246

Token 514: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023923963308334
    2. ' input' → logprob: -2.3502392768859863
    3. 'l' → logprob: -10.475238800048828
    4. '=input' → logprob: -13.725238800048828
    5. ' l' → logprob: -13.975238800048828
    6. 'la' → logprob: -13.975238800048828
    7. '	input' → logprob: -14.600238800048828
    8. '   ' → logprob: -14.725238800048828
    9. ' la' → logprob: -14.850238800048828
    10. '(input' → logprob: -15.975238800048828

Token 515: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006826313212513924
    2. ''entrée' → logprob: -5.381826400756836
    3. '=input' → logprob: -6.756826400756836
    4. 'entrée' → logprob: -8.006826400756836
    5. ' input' → logprob: -8.006826400756836
    6. 'a' → logprob: -8.631826400756836
    7. 'e' → logprob: -9.381826400756836
    8. 'stdin' → logprob: -10.006826400756836
    9. ''' → logprob: -10.631826400756836
    10. 'ine' → logprob: -11.631826400756836

Token 516: ' standard' (ID: 7024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09675393998622894
    2. '=' → logprob: -3.3467538356781006
    3. '()' → logprob: -3.3467538356781006
    4. '   ' → logprob: -4.47175407409668
    5. 'n' → logprob: -5.34675407409668
    6. ',' → logprob: -6.47175407409668
    7. '_line' → logprob: -7.09675407409668
    8. '()
' → logprob: -7.47175407409668
    9. 's' → logprob: -7.97175407409668
    10. '(n' → logprob: -7.97175407409668

Token 517: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0991130918264389
    2. 'n' → logprob: -2.5991129875183105
    3. ' n' → logprob: -4.4741129875183105
    4. '
' → logprob: -5.5991129875183105
    5. ',' → logprob: -6.5991129875183105
    6. ' line' → logprob: -6.5991129875183105
    7. '    
' → logprob: -7.0991129875183105
    8. '  
' → logprob: -7.9741129875183105
    9. '(n' → logprob: -8.849113464355469
    10. 'line' → logprob: -8.849113464355469

Token 518: ' sépar' (ID: 97160)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05656088516116142
    2. 'n' → logprob: -2.93156099319458
    3. '   ' → logprob: -6.80656099319458
    4. ' line' → logprob: -7.68156099319458
    5. ' p' → logprob: -10.056560516357422
    6. ' input' → logprob: -11.056560516357422
    7. 'line' → logprob: -11.306560516357422
    8. ' values' → logprob: -12.306560516357422
    9. '	n' → logprob: -12.556560516357422
    10. ' raw' → logprob: -12.681560516357422

Token 519: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.493630588054657
    2. 'é' → logprob: -0.993630588054657
    3. 'e' → logprob: -4.618630409240723
    4. 'ée' → logprob: -4.868630409240723
    5. 'er' → logprob: -7.118630409240723
    6. 'ées' → logprob: -7.993630409240723
    7. 'ed' → logprob: -8.993630409240723
    8. ' par' → logprob: -9.243630409240723
    9. 'es' → logprob: -9.368630409240723
    10. 'è' → logprob: -9.993630409240723

Token 520: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.691763162612915
    2. 'par' → logprob: -0.816763162612915
    3. '()' → logprob: -3.191763162612915
    4. '=' → logprob: -5.066762924194336
    5. '_par' → logprob: -5.441762924194336
    6. 'by' → logprob: -6.441762924194336
    7. ')' → logprob: -6.941762924194336
    8. ' by' → logprob: -7.816762924194336
    9. '   ' → logprob: -8.066762924194336
    10. 'def' → logprob: -8.441762924194336

Token 521: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9366327524185181
    2. ' un' → logprob: -1.686632752418518
    3. 'space' → logprob: -1.811632752418518
    4. ''' → logprob: -2.3116326332092285
    5. 'l' → logprob: -2.8116326332092285
    6. '"' → logprob: -3.9366326332092285
    7. ' une' → logprob: -4.1866326332092285
    8. ' espace' → logprob: -4.3116326332092285
    9. ''espace' → logprob: -4.4366326332092285
    10. 'une' → logprob: -4.5616326332092285

Token 522: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8547890782356262
    2. ' espace' → logprob: -0.9797890782356262
    3. 'space' → logprob: -2.2297890186309814
    4. 'esp' → logprob: -2.8547890186309814
    5. ''espace' → logprob: -3.6047890186309814
    6. ' space' → logprob: -5.3547892570495605
    7. '’espace' → logprob: -7.2297892570495605
    8. ' espaces' → logprob: -7.7297892570495605
    9. ''' → logprob: -8.604788780212402
    10. 'e' → logprob: -8.854788780212402

Token 523: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12180160731077194
    2. '   ' → logprob: -2.4968016147613525
    3. ' n' → logprob: -3.4968016147613525
    4. ' line' → logprob: -6.746801376342773
    5. 'line' → logprob: -8.621801376342773
    6. '    
' → logprob: -8.621801376342773
    7. '
' → logprob: -8.871801376342773
    8. ' =' → logprob: -9.496801376342773
    9. ',' → logprob: -9.496801376342773
    10. 'input' → logprob: -10.246801376342773

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1289326250553131
    2. 'n' → logprob: -2.7539327144622803
    3. ' n' → logprob: -2.8789327144622803
    4. ' line' → logprob: -7.253932476043701
    5. 'line' → logprob: -8.50393295288086
    6. 'input' → logprob: -9.50393295288086
    7. '    
' → logprob: -10.12893295288086
    8. '```' → logprob: -10.87893295288086
    9. ' input' → logprob: -11.25393295288086
    10. '	n' → logprob: -11.50393295288086

Token 525: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06391716748476028
    2. ' n' → logprob: -2.8139171600341797
    3. '   ' → logprob: -6.43891716003418
    4. 'line' → logprob: -8.68891716003418
    5. ' line' → logprob: -8.81391716003418
    6. 'input' → logprob: -10.81391716003418
    7. '```' → logprob: -12.31391716003418
    8. ' input' → logprob: -12.93891716003418
    9. '	n' → logprob: -13.18891716003418
    10. 'ligne' → logprob: -14.18891716003418

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002810105914250016
    2. ',k' → logprob: -5.877810001373291
    3. ' ,' → logprob: -12.37781047821045
    4. 'k' → logprob: -14.12781047821045
    5. ',n' → logprob: -16.127809524536133
    6. ',
' → logprob: -16.877809524536133
    7. ',p' → logprob: -17.002809524536133
    8. ',input' → logprob: -17.127809524536133
    9. ',int' → logprob: -17.252809524536133
    10. ',K' → logprob: -17.377809524536133

Token 527: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38689324259757996
    2. ' k' → logprob: -1.1368932723999023
    3. '=k' → logprob: -11.261893272399902
    4. '=' → logprob: -12.386893272399902
    5. ' ' → logprob: -12.636893272399902
    6. '	k' → logprob: -14.511893272399902
    7. ',k' → logprob: -14.761893272399902
    8. ' =' → logprob: -14.886893272399902
    9. '_k' → logprob: -15.011893272399902
    10. '*k' → logprob: -16.261892318725586

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740970730781555
    2. ' =' → logprob: -0.9740970730781555
    3. '=input' → logprob: -11.09909725189209
    4. ')' → logprob: -13.34909725189209
    5. '=int' → logprob: -13.72409725189209
    6. ')=' → logprob: -14.22409725189209
    7. '=list' → logprob: -15.09909725189209
    8. '=line' → logprob: -15.22409725189209
    9. ',' → logprob: -15.72409725189209
    10. '=user' → logprob: -15.97409725189209

Token 529: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022422909736633
    2. 'map' → logprob: -1.910224199295044
    3. '	map' → logprob: -16.41022491455078
    4. '(map' → logprob: -18.53522491455078
    5. '_map' → logprob: -19.91022491455078
    6. '.map' → logprob: -20.16022491455078
    7. ' ' → logprob: -20.66022491455078
    8. 'list' → logprob: -20.78522491455078
    9. ' ' → logprob: -20.91022491455078
    10. 'm' → logprob: -21.03522491455078

Token 530: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.93448489275761e-05
    2. '(' → logprob: -9.500079154968262
    3. 'int' → logprob: -12.500079154968262
    4. '=int' → logprob: -15.875079154968262
    5. '(str' → logprob: -15.875079154968262
    6. '<int' → logprob: -15.875079154968262
    7. '(input' → logprob: -15.875079154968262
    8. ' int' → logprob: -16.500080108642578
    9. '(lambda' → logprob: -17.250080108642578
    10. '(
' → logprob: -17.875080108642578

Token 531: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31362172961235046
    2. 'input' → logprob: -1.3136217594146729
    3. ',input' → logprob: -8.563621520996094
    4. ' input' → logprob: -9.563621520996094
    5. ')' → logprob: -9.813621520996094
    6. '(' → logprob: -10.188621520996094
    7. '=input' → logprob: -12.688621520996094
    8. ',' → logprob: -13.188621520996094
    9. '   ' → logprob: -14.313621520996094
    10. '[input' → logprob: -15.188621520996094

Token 532: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -18.38604736328125
    4. '=input' → logprob: -19.63604736328125
    5. ',input' → logprob: -20.88604736328125
    6. '   ' → logprob: -21.13604736328125
    7. '	input' → logprob: -21.63604736328125
    8. '<input' → logprob: -22.26104736328125
    9. '_input' → logprob: -22.51104736328125
    10. ')' → logprob: -22.76104736328125

Token 533: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -16.750003814697266
    4. '(' → logprob: -18.375003814697266
    5. '()
' → logprob: -20.250003814697266
    6. '("").' → logprob: -21.000003814697266
    7. '())' → logprob: -21.500003814697266
    8. '.split' → logprob: -21.750003814697266
    9. '('').' → logprob: -22.375003814697266
    10. '().
' → logprob: -22.375003814697266

Token 534: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005532711511477828
    2. 'strip' → logprob: -7.500553131103516
    3. ' split' → logprob: -16.000553131103516
    4. 'rstrip' → logprob: -16.875553131103516
    5. '().' → logprob: -17.625553131103516
    6. '(split' → logprob: -18.000553131103516
    7. 'read' → logprob: -18.500553131103516
    8. '.split' → logprob: -19.500553131103516
    9. 'spl' → logprob: -20.500553131103516
    10. '_split' → logprob: -20.500553131103516

Token 535: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031850787345319986
    2. ')' → logprob: -6.378185272216797
    3. '()' → logprob: -6.753185272216797
    4. '()))' → logprob: -8.128185272216797
    5. '(' → logprob: -11.753185272216797
    6. '))' → logprob: -11.878185272216797
    7. '('' → logprob: -12.753185272216797
    8. ' ())' → logprob: -14.378185272216797
    9. '().' → logprob: -15.503185272216797
    10. '(','' → logprob: -15.503185272216797

Token 536: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4979493319988251
    2. '   ' → logprob: -0.9979493618011475
    3. ' p' → logprob: -3.7479493618011475
    4. '```' → logprob: -11.247949600219727
    5. '	p' → logprob: -11.747949600219727
    6. '    
' → logprob: -13.997949600219727
    7. '  ' → logprob: -14.622949600219727
    8. ' ' → logprob: -14.747949600219727
    9. '   ' → logprob: -14.997949600219727
    10. '
' → logprob: -15.497949600219727

Token 537: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012630375567823648
    2. '   ' → logprob: -9.000125885009766
    3. '#' (adapté à ' #') → logprob: -13.375125885009766
    4. ' p' → logprob: -13.625125885009766
    5. '```' → logprob: -17.000125885009766
    6. '    
' → logprob: -17.375125885009766
    7. '_p' → logprob: -18.250125885009766
    8. 'P' → logprob: -18.500125885009766
    9. '	p' → logprob: -18.750125885009766
    10. '
' → logprob: -19.250125885009766

Token 538: ' Lecture' (ID: 106534)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.676981345459353e-06
    2. '#' → logprob: -12.750005722045898
    3. ' p' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.875005722045898
    5. 'values' → logprob: -16.0000057220459
    6. 'P' → logprob: -16.2500057220459
    7. 'pi' → logprob: -16.3750057220459
    8. '```' → logprob: -16.7500057220459
    9. 'data' → logprob: -17.6250057220459
    10. 'arr' → logprob: -18.2500057220459

Token 539: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050213079899549484
    2. '()' → logprob: -3.425213098526001
    3. ' de' → logprob: -4.300212860107422
    4. 'de' → logprob: -6.925212860107422
    5. 'p' → logprob: -7.050212860107422
    6. '(' → logprob: -8.425212860107422
    7. '(p' → logprob: -8.550212860107422
    8. ' of' → logprob: -8.675212860107422
    9. ' p' → logprob: -9.300212860107422
    10. 'n' → logprob: -9.925212860107422

Token 540: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011831194162368774
    2. 'p' → logprob: -4.761831283569336
    3. ' list' → logprob: -5.761831283569336
    4. ' p' → logprob: -9.761831283569336
    5. 'liste' → logprob: -11.761831283569336
    6. 'map' → logprob: -14.636831283569336
    7. 'lst' → logprob: -15.636831283569336
    8. 'lista' → logprob: -16.886831283569336
    9. 'l' → logprob: -17.011831283569336
    10. ' liste' → logprob: -18.011831283569336

Token 541: ' liste' (ID: 31719)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03788517415523529
    2. 'list' → logprob: -3.4128851890563965
    3. ' p' → logprob: -5.9128851890563965
    4. ' list' → logprob: -6.5378851890563965
    5. 'liste' → logprob: -10.037884712219238
    6. '[' → logprob: -11.287884712219238
    7. 'lst' → logprob: -11.412884712219238
    8. 'lista' → logprob: -13.162884712219238
    9. '[p' → logprob: -13.287884712219238
    10. 'pi' → logprob: -13.787884712219238

Token 542: ' entière' (ID: 61583)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2519431710243225
    2. ' p' → logprob: -1.5019431114196777
    3. '(p' → logprob: -12.126943588256836
    4. ' des' → logprob: -12.501943588256836
    5. ' de' → logprob: -13.126943588256836
    6. '_p' → logprob: -13.626943588256836
    7. '   ' → logprob: -14.251943588256836
    8. ' of' → logprob: -15.251943588256836
    9. ' ' → logprob: -15.501943588256836
    10. 'des' → logprob: -15.626943588256836

Token 543: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6512380242347717
    2. 'p' → logprob: -0.7762380242347717
    3. '(p' → logprob: -4.276237964630127
    4. '   ' → logprob: -5.651237964630127
    5. '()' → logprob: -8.276238441467285
    6. '_p' → logprob: -8.401238441467285
    7. '(' → logprob: -8.526238441467285
    8. 's' → logprob: -9.151238441467285
    9. ' des' → logprob: -9.526238441467285
    10. ',' → logprob: -9.526238441467285

Token 544: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741101562976837
    2. ' =' → logprob: -0.9741101264953613
    3. '   ' → logprob: -10.34911060333252
    4. '=p' → logprob: -14.72411060333252
    5. '=list' → logprob: -15.09911060333252
    6. 'p' → logprob: -15.97411060333252
    7. ' ' → logprob: -16.224109649658203
    8. '  ' → logprob: -16.724109649658203
    9. '=[]' → logprob: -17.224109649658203
    10. ')' → logprob: -17.349109649658203

Token 545: ' partir' (ID: 12100)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003398726985324174
    2. ' list' → logprob: -8.00033950805664
    3. '=list' → logprob: -12.50033950805664
    4. 'liste' → logprob: -15.12533950805664
    5. ':list' → logprob: -16.37533950805664
    6. '   ' → logprob: -16.50033950805664
    7. '[' → logprob: -17.00033950805664
    8. 'l' → logprob: -17.12533950805664
    9. 'lis' → logprob: -17.12533950805664
    10. '	list' → logprob: -17.50033950805664

Token 546: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6262676119804382
    2. '   ' → logprob: -1.626267671585083
    3. 'de' → logprob: -2.126267671585083
    4. ' de' → logprob: -2.876267671585083
    5. '(input' → logprob: -4.001267433166504
    6. '()' → logprob: -4.126267433166504
    7. 'input' → logprob: -4.126267433166504
    8. 'la' → logprob: -4.501267433166504
    9. 'list' → logprob: -4.876267433166504
    10. '(list' → logprob: -5.001267433166504

Token 547: ' l' (ID: 305)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16061554849147797
    2. 'input' → logprob: -1.9106155633926392
    3. ' list' → logprob: -8.160615921020508
    4. ' input' → logprob: -9.160615921020508
    5. 'map' → logprob: -14.910615921020508
    6. 'l' → logprob: -16.410615921020508
    7. 'liste' → logprob: -17.285615921020508
    8. 'Input' → logprob: -17.410615921020508
    9. '=list' → logprob: -17.410615921020508
    10. 'int' → logprob: -17.785615921020508

Token 548: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02577485330402851
    2. ''entrée' → logprob: -4.400774955749512
    3. ' input' → logprob: -5.025774955749512
    4. 'entrée' → logprob: -5.275774955749512
    5. '=input' → logprob: -6.650774955749512
    6. 'a' → logprob: -9.900774955749512
    7. '_input' → logprob: -10.025774955749512
    8. 'e' → logprob: -10.525774955749512
    9. '(input' → logprob: -10.900774955749512
    10. '’entrée' → logprob: -11.650774955749512

Token 549: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06648916751146317
    2. '().' → logprob: -3.1914892196655273
    3. '()
' → logprob: -4.191489219665527
    4. '=' → logprob: -6.066489219665527
    5. ' p' → logprob: -6.316489219665527
    6. ' =' → logprob: -6.441489219665527
    7. 'p' → logprob: -7.191489219665527
    8. '   ' → logprob: -7.816489219665527
    9. '=input' → logprob: -8.316489219665527
    10. ')' → logprob: -8.816489219665527

Token 550: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10469891875982285
    2. ' =' → logprob: -3.229698896408081
    3. '=' → logprob: -3.604698896408081
    4. ' p' → logprob: -4.97969913482666
    5. ')' → logprob: -5.10469913482666
    6. 'p' → logprob: -5.22969913482666
    7. '()' → logprob: -5.35469913482666
    8. '(p' → logprob: -5.47969913482666
    9. '()
' → logprob: -6.72969913482666
    10. ',' → logprob: -6.72969913482666

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19297774136066437
    2. 'p' → logprob: -1.942977786064148
    3. ' p' → logprob: -3.4429776668548584
    4. ',' → logprob: -9.067977905273438
    5. '	p' → logprob: -9.942977905273438
    6. '=' → logprob: -10.692977905273438
    7. ',p' → logprob: -10.942977905273438
    8. ' =' → logprob: -11.192977905273438
    9. '(p' → logprob: -12.192977905273438
    10. '```' → logprob: -12.567977905273438

Token 552: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0011730826226994395
    2. ' p' → logprob: -6.75117301940918
    3. '   ' → logprob: -12.75117301940918
    4. 'list' → logprob: -17.62617301940918
    5. '	p' → logprob: -20.87617301940918
    6. ' list' → logprob: -21.62617301940918
    7. '```' → logprob: -22.12617301940918
    8. '  ' → logprob: -22.62617301940918
    9. ' ' → logprob: -22.87617301940918
    10. '
' → logprob: -22.87617301940918

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. '=list' → logprob: -15.673587799072266
    4. '_' → logprob: -16.548587799072266
    5. '_list' → logprob: -16.798587799072266
    6. '=[]' → logprob: -16.798587799072266
    7. ')' → logprob: -16.923587799072266
    8. '   ' → logprob: -17.423587799072266
    9. '_=' → logprob: -17.423587799072266
    10. 's' → logprob: -17.673587799072266

Token 554: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0206720617134124e-05
    2. ' list' → logprob: -11.50001049041748
    3. '=list' → logprob: -23.875009536743164
    4. '[list' → logprob: -24.500009536743164
    5. 'map' → logprob: -24.625009536743164
    6. '	list' → logprob: -24.750009536743164
    7. '[' → logprob: -25.625009536743164
    8. '.list' → logprob: -26.375009536743164
    9. 'List' → logprob: -26.500009536743164
    10. '(list' → logprob: -26.750009536743164

Token 555: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.584239938296378e-06
    2. 'map' → logprob: -12.250007629394531
    3. '(' → logprob: -12.875007629394531
    4. '(int' → logprob: -16.50000762939453
    5. ' map' → logprob: -18.75000762939453
    6. '.map' → logprob: -18.75000762939453
    7. '()' → logprob: -18.87500762939453
    8. ',map' → logprob: -19.00000762939453
    9. '	map' → logprob: -19.50000762939453
    10. '_map' → logprob: -20.87500762939453

Token 556: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.704065213445574e-05
    2. 'int' → logprob: -10.000046730041504
    3. ' int' → logprob: -14.250046730041504
    4. '=int' → logprob: -14.750046730041504
    5. '<int' → logprob: -15.375046730041504
    6. ',int' → logprob: -15.375046730041504
    7. '[int' → logprob: -16.25004768371582
    8. '(' → logprob: -16.25004768371582
    9. ']int' → logprob: -17.62504768371582
    10. '	int' → logprob: -18.37504768371582

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8123677968978882
    2. ',input' → logprob: -1.0623677968978882
    3. '(input' → logprob: -1.5623677968978882
    4. 'input' → logprob: -7.187367916107178
    5. '(' → logprob: -8.93736743927002
    6. ' ,' → logprob: -10.81236743927002
    7. ' input' → logprob: -12.68736743927002
    8. '   ' → logprob: -12.81236743927002
    9. '=input' → logprob: -13.31236743927002
    10. '(),' → logprob: -13.56236743927002

Token 558: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -19.500261306762695
    4. ',input' → logprob: -20.750261306762695
    5. '_input' → logprob: -22.375261306762695
    6. '<input' → logprob: -23.000261306762695
    7. '=input' → logprob: -23.625261306762695
    8. '	input' → logprob: -23.750261306762695
    9. '[input' → logprob: -24.875261306762695
    10. '.input' → logprob: -25.000261306762695

Token 559: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.750000953674316
    3. ' ().' → logprob: -17.0
    4. '.split' → logprob: -18.25
    5. '(' → logprob: -18.875
    6. 'input' → logprob: -19.0
    7. ',input' → logprob: -19.375
    8. '()[' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. ' .' → logprob: -20.0

Token 560: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'strip' → logprob: -15.125
    3. ' split' → logprob: -17.25
    4. 'rstrip' → logprob: -17.5
    5. '(split' → logprob: -17.625
    6. '.split' → logprob: -19.625
    7. '_split' → logprob: -20.75
    8. 'spl' → logprob: -21.125
    9. 'plit' → logprob: -22.75
    10. 'read' → logprob: -23.5

Token 561: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00710925180464983
    2. '))' → logprob: -5.00710916519165
    3. '()' → logprob: -8.007109642028809
    4. '())' → logprob: -10.257109642028809
    5. '(' → logprob: -11.132109642028809
    6. '()))
' → logprob: -11.632109642028809
    7. '()));' → logprob: -13.632109642028809
    8. '()))

' → logprob: -15.507109642028809
    9. '())).' → logprob: -15.882109642028809
    10. ' ))' → logprob: -15.882109642028809

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20357109606266022
    2. 'result' → logprob: -1.703571081161499
    3. ' result' → logprob: -6.953571319580078
    4. '```' → logprob: -7.578571319580078
    5. '    
' → logprob: -8.453571319580078
    6. '
' → logprob: -8.703571319580078
    7. 'max' → logprob: -9.453571319580078
    8. 'res' → logprob: -9.953571319580078
    9. 'value' → logprob: -10.328571319580078
    10. 'return' → logprob: -10.328571319580078

Token 563: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.010519839823246002
    2. 'expected' → logprob: -5.760519981384277
    3. '   ' → logprob: -6.010519981384277
    4. 'res' → logprob: -6.135519981384277
    5. 'max' → logprob: -6.510519981384277
    6. 'print' → logprob: -7.385519981384277
    7. 'value' → logprob: -8.135519981384277
    8. ' result' → logprob: -9.760519981384277
    9. 'val' → logprob: -10.010519981384277
    10. '#' (adapté à ' #') → logprob: -10.135519981384277

Token 564: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018274489790201187
    2. 'res' → logprob: -5.018274307250977
    3. 'print' → logprob: -5.143274307250977
    4. 'expected' → logprob: -5.518274307250977
    5. 'ev' → logprob: -7.643274307250977
    6. 'val' → logprob: -8.143274307250977
    7. ' result' → logprob: -8.268274307250977
    8. 'value' → logprob: -8.643274307250977
    9. 'esp' → logprob: -9.018274307250977
    10. 'rés' → logprob: -9.143274307250977

Token 565: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32377690076828003
    2. 'result' → logprob: -1.3237769603729248
    3. '_result' → logprob: -5.698776721954346
    4. ' de' → logprob: -5.698776721954346
    5. ' result' → logprob: -6.573776721954346
    6. 'de' → logprob: -7.323776721954346
    7. 'res' → logprob: -7.323776721954346
    8. 'print' → logprob: -8.073777198791504
    9. ' =' → logprob: -8.448777198791504
    10. 'resultado' → logprob: -9.323777198791504

Token 566: ' l' (ID: 305)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0289881229400635
    2. 'max' → logprob: -1.0289881229400635
    3. 'print' → logprob: -1.2789881229400635
    4. 'val' → logprob: -5.653987884521484
    5. 'expected' → logprob: -6.778987884521484
    6. 'res' → logprob: -6.903987884521484
    7. 'value' → logprob: -7.278987884521484
    8. ' max' → logprob: -8.028987884521484
    9. ' result' → logprob: -9.028987884521484
    10. 'ev' → logprob: -9.778987884521484

Token 567: ''esp' (ID: 73244)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.021338175982236862
    2. 'result' → logprob: -4.896337985992432
    3. 'esp' → logprob: -5.396337985992432
    4. 'expected' → logprob: -5.396337985992432
    5. '_expected' → logprob: -6.646337985992432
    6. ' max' → logprob: -7.021337985992432
    7. '_result' → logprob: -7.396337985992432
    8. ''esp' → logprob: -7.521337985992432
    9. 'esper' → logprob: -8.27133846282959
    10. '_max' → logprob: -9.02133846282959

Token 568: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.017285525798797607
    2. '_expected' → logprob: -4.767285346984863
    3. 'érence' → logprob: -5.017285346984863
    4. 'ér' → logprob: -7.767285346984863
    5. 'érience' → logprob: -8.017285346984863
    6. 'er' → logprob: -8.142285346984863
    7. '   ' → logprob: -8.517285346984863
    8. '_expect' → logprob: -9.017285346984863
    9. '_max' → logprob: -9.142285346984863
    10. '_' → logprob: -9.267285346984863

Token 569: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06089663878083229
    2. 'max' → logprob: -2.935896635055542
    3. ' maximale' → logprob: -5.935896873474121
    4. 'result' → logprob: -6.310896873474121
    5. '_max' → logprob: -7.810896873474121
    6. 'res' → logprob: -7.810896873474121
    7. 'att' → logprob: -8.060896873474121
    8. 'expected' → logprob: -9.060896873474121
    9. 'val' → logprob: -9.685896873474121
    10. 'value' → logprob: -10.060896873474121

Token 570: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7268253564834595
    2. 'result' → logprob: -0.7268253564834595
    3. ' result' → logprob: -3.60182523727417
    4. 'res' → logprob: -5.35182523727417
    5. 'ev' → logprob: -7.85182523727417
    6. 'expected' → logprob: -8.476825714111328
    7. ' res' → logprob: -8.976825714111328
    8. 'value' → logprob: -9.476825714111328
    9. 'exp' → logprob: -9.976825714111328
    10. 'resultado' → logprob: -9.976825714111328

Token 571: ' l' (ID: 305)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08001010119915009
    2. 'print' → logprob: -2.580010175704956
    3. ' max' → logprob: -6.830009937286377
    4. ' print' → logprob: -10.205010414123535
    5. '   ' → logprob: -13.705010414123535
    6. '(max' → logprob: -14.955010414123535
    7. '=max' → logprob: -15.080010414123535
    8. 'result' → logprob: -17.08000946044922
    9. ',max' → logprob: -17.70500946044922
    10. 'printf' → logprob: -18.20500946044922

Token 572: ''appel' (ID: 172839)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001652796781854704
    2. ' max' → logprob: -9.000164985656738
    3. '=max' → logprob: -10.250164985656738
    4. 'print' → logprob: -12.625164985656738
    5. 'ax' → logprob: -13.875164985656738
    6. '   ' → logprob: -14.000164985656738
    7. '(max' → logprob: -15.000164985656738
    8. 'a' → logprob: -15.125164985656738
    9. '```' → logprob: -15.750164985656738
    10. '_max' → logprob: -15.750164985656738

Token 573: ' de' (ID: 334)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4248080253601074
    2. '   ' → logprob: -1.1748080253601074
    3. 'max' → logprob: -4.549808025360107
    4. ' à' → logprob: -4.799808025360107
    5. '(max' → logprob: -4.924808025360107
    6. '=max' → logprob: -5.299808025360107
    7. 'de' → logprob: -6.174808025360107
    8. '=' → logprob: -6.424808025360107
    9. 'to' → logprob: -6.424808025360107
    10. 'a' → logprob: -8.049808502197266

Token 574: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.3458322731312364e-06
    2. 'print' → logprob: -12.000007629394531
    3. ' max' → logprob: -13.750007629394531
    4. '(max' → logprob: -21.37500762939453
    5. '=max' → logprob: -22.75000762939453
    6. '[max' → logprob: -24.37500762939453
    7. '```' → logprob: -24.62500762939453
    8. '	max' → logprob: -25.62500762939453
    9. '
' → logprob: -25.75000762939453
    10. '_max' → logprob: -26.25000762939453

Token 575: ' fonction' (ID: 17610)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.981667537620524e-06
    2. ' max' → logprob: -13.750001907348633
    3. 'print' → logprob: -14.000001907348633
    4. 'result' → logprob: -20.375001907348633
    5. 'function' → logprob: -21.125001907348633
    6. '```' → logprob: -21.125001907348633
    7. '=max' → logprob: -21.250001907348633
    8. '
' → logprob: -21.875001907348633
    9. 'maximum' → logprob: -21.875001907348633
    10. 'value' → logprob: -22.125001907348633

Token 576: ' dédiée' (ID: 183679)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.700735330581665
    2. 'max' → logprob: -1.200735330581665
    3. 'print' → logprob: -2.700735330581665
    4. ' result' → logprob: -2.950735330581665
    5. '   ' → logprob: -3.325735330581665
    6. ' max' → logprob: -3.450735330581665
    7. ' print' → logprob: -5.325735092163086
    8. 'res' → logprob: -5.450735092163086
    9. 'value' → logprob: -5.950735092163086
    10. 'expected' → logprob: -7.075735092163086

Token 577: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4955585300922394
    2. 'result' → logprob: -1.370558500289917
    3. ' result' → logprob: -1.995558500289917
    4. 'print' → logprob: -8.245558738708496
    5. 'value' → logprob: -8.870558738708496
    6. ' print' → logprob: -9.120558738708496
    7. 'res' → logprob: -9.745558738708496
    8. ' resultat' → logprob: -9.870558738708496
    9. ' value' → logprob: -9.995558738708496
    10. '```' → logprob: -10.245558738708496

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16525626182556152
    2. 'result' → logprob: -1.9152562618255615
    3. ' result' → logprob: -5.540256500244141
    4. 'res' → logprob: -7.665256500244141
    5. 'expected' → logprob: -8.66525650024414
    6. '```' → logprob: -8.91525650024414
    7. 'print' → logprob: -9.04025650024414
    8. 'max' → logprob: -9.54025650024414
    9. 'value' → logprob: -10.29025650024414
    10. 'resultado' → logprob: -11.41525650024414

Token 579: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.02744222991168499
    2. 'expected' → logprob: -4.652442455291748
    3. 'res' → logprob: -5.027442455291748
    4. ' result' → logprob: -5.027442455291748
    5. 'max' → logprob: -6.277442455291748
    6. 'ev' → logprob: -6.777442455291748
    7. 'print' → logprob: -7.527442455291748
    8. '   ' → logprob: -7.652442455291748
    9. ' expected' → logprob: -9.15244197845459
    10. 'answer' → logprob: -9.77744197845459

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302620768547058
    2. '=' → logprob: -3.6513025760650635
    3. '_' → logprob: -13.651302337646484
    4. ')' → logprob: -14.026302337646484
    5. ',' → logprob: -16.276302337646484
    6. '＝' → logprob: -16.776302337646484
    7. ' ' → logprob: -16.901302337646484
    8. ' =)' → logprob: -17.026302337646484
    9. '_=' → logprob: -17.026302337646484
    10. ' =
' → logprob: -17.401302337646484

Token 581: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009114635176956654
    2. ' max' → logprob: -7.000911235809326
    3. '(max' → logprob: -22.875911712646484
    4. '	max' → logprob: -23.875911712646484
    5. '   ' → logprob: -26.000911712646484
    6. '[max' → logprob: -26.375911712646484
    7. '_max' → logprob: -26.750911712646484
    8. '=max' → logprob: -27.000911712646484
    9. ',max' → logprob: -27.750911712646484
    10. '.max' → logprob: -28.125911712646484

Token 582: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -3.128163257315464e-07
    2. 'expected' → logprob: -15.875
    3. '_max' → logprob: -17.625
    4. '_expect' → logprob: -18.125
    5. 'Expected' → logprob: -18.5
    6. '(expected' → logprob: -18.75
    7. '(_' → logprob: -19.375
    8. '_exp' → logprob: -19.625
    9. '_' → logprob: -20.375
    10. '\' → logprob: -20.5

Token 583: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.7432603272027336e-06
    2. '_val' → logprob: -14.125001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_values' → logprob: -15.625001907348633
    5. 'value' → logprob: -16.500001907348633
    6. ' _' → logprob: -16.750001907348633
    7. '_expected' → logprob: -18.875001907348633
    8. '_VALUE' → logprob: -19.250001907348633
    9. '\' → logprob: -19.500001907348633
    10. ' value' → logprob: -19.750001907348633

Token 584: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. '_value' → logprob: -14.750004768371582
    4. '_s' → logprob: -15.750004768371582
    5. '_max' → logprob: -17.5000057220459
    6. 'sub' → logprob: -18.5000057220459
    7. '_sum' → logprob: -19.1250057220459
    8. '_subset' → logprob: -19.1250057220459
    9. '_SUB' → logprob: -19.2500057220459
    10. '_values' → logprob: -19.7500057220459

Token 585: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.9361264946837764e-07
    2. '_array' → logprob: -16.625
    3. 'arra' → logprob: -16.75
    4. 'ar' → logprob: -18.125
    5. 'arrays' → logprob: -19.25
    6. 'list' → logprob: -19.25
    7. 'rray' → logprob: -19.75
    8. 'string' → logprob: -19.875
    9. 'arr' → logprob: -19.875
    10. 'value' → logprob: -20.125

Token 586: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.166338137816638e-05
    2. ' (' → logprob: -10.625031471252441
    3. '(' → logprob: -12.125031471252441
    4. '(len' → logprob: -13.625031471252441
    5. '```' → logprob: -15.500031471252441
    6. '   ' → logprob: -15.875031471252441
    7. '(p' → logprob: -16.625032424926758
    8. '(
' → logprob: -17.125032424926758
    9. '(s' → logprob: -17.750032424926758
    10. ' ' → logprob: -18.375032424926758

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014573395310435444
    2. ',k' → logprob: -8.87514591217041
    3. ' ,' → logprob: -12.75014591217041
    4. '   ' → logprob: -13.12514591217041
    5. ',p' → logprob: -14.37514591217041
    6. ',
' → logprob: -15.62514591217041
    7. ',n' → logprob: -16.250144958496094
    8. '=' → logprob: -17.125144958496094
    9. ')' → logprob: -18.250144958496094
    10. 'k' → logprob: -18.250144958496094

Token 588: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001170225441455841
    2. ' k' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.251171112060547
    4. '	k' → logprob: -20.626171112060547
    5. '```' → logprob: -23.751171112060547
    6. ',k' → logprob: -24.126171112060547
    7. ' ' → logprob: -24.126171112060547
    8. ' к' → logprob: -24.501171112060547
    9. '{k' → logprob: -24.501171112060547
    10. ')' → logprob: -24.626171112060547

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ',p' → logprob: -10.75002384185791
    3. ' ,' → logprob: -13.87502384185791
    4. ',
' → logprob: -14.62502384185791
    5. '   ' → logprob: -15.25002384185791
    6. 'p' → logprob: -16.125022888183594
    7. ')' → logprob: -16.625022888183594
    8. '(p' → logprob: -17.000022888183594
    9. ',n' → logprob: -17.375022888183594
    10. '```' → logprob: -18.000022888183594

Token 590: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.547789674485102e-05
    2. ' p' → logprob: -10.250035285949707
    3. ')p' → logprob: -22.500036239624023
    4. '   ' → logprob: -22.750036239624023
    5. ')' → logprob: -23.750036239624023
    6. '	p' → logprob: -24.125036239624023
    7. '_p' → logprob: -25.250036239624023
    8. '$p' → logprob: -25.375036239624023
    9. '<p' → logprob: -25.750036239624023
    10. '(p' → logprob: -25.875036239624023

Token 591: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033939589047804475
    2. ')
' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.50033950805664
    4. ')
' → logprob: -15.62533950805664
    5. ' )' → logprob: -16.50033950805664
    6. ')

' → logprob: -17.25033950805664
    7. ')`' → logprob: -18.75033950805664
    8. ' ' → logprob: -19.37533950805664
    9. '))' → logprob: -19.62533950805664
    10. '),' → logprob: -20.00033950805664

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011157822795212269
    2. 'print' → logprob: -4.511157989501953
    3. '```' → logprob: -9.386157989501953
    4. '
' → logprob: -10.761157989501953
    5. '    
' → logprob: -12.511157989501953
    6. ' print' → logprob: -14.386157989501953
    7. '	print' → logprob: -14.636157989501953
    8. '``' → logprob: -15.761157989501953
    9. '   ' → logprob: -17.511157989501953
    10. '  
' → logprob: -17.511157989501953

Token 593: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.062066275626420975
    2. '   ' → logprob: -2.8120663166046143
    3. ' print' → logprob: -9.312066078186035
    4. '```' → logprob: -11.937066078186035
    5. '	print' → logprob: -13.687066078186035
    6. '
' → logprob: -14.437066078186035
    7. '    
' → logprob: -17.18706703186035
    8. 'printf' → logprob: -18.93706703186035
    9. '#print' → logprob: -18.93706703186035
    10. '``' → logprob: -19.31206703186035

Token 594: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.25
    3. '   ' → logprob: -18.5
    4. 'printf' → logprob: -22.25
    5. '#print' → logprob: -24.5
    6. '```' → logprob: -24.75
    7. 'import' → logprob: -25.0
    8. '	print' → logprob: -25.875
    9. '#' → logprob: -26.0
    10. 'Print' → logprob: -27.0

Token 595: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0775715559720993
    2. 'ichage' → logprob: -3.2025716304779053
    3. 'ich' → logprob: -4.077571392059326
    4. '   ' → logprob: -4.327571392059326
    5. 'iche' → logprob: -5.702571392059326
    6. 'print' → logprob: -8.077571868896484
    7. 'cher' → logprob: -9.952571868896484
    8. '#' → logprob: -10.077571868896484
    9. '  ' → logprob: -10.952571868896484
    10. '```' → logprob: -11.077571868896484

Token 596: ' du' (ID: 1462)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.7830026149749756
    2. '(' → logprob: -1.2830026149749756
    3. '(result' → logprob: -1.4080026149749756
    4. '   ' → logprob: -4.033002853393555
    5. 'result' → logprob: -6.033002853393555
    6. '(print' → logprob: -7.908002853393555
    7. '(
' → logprob: -8.658002853393555
    8. '("' → logprob: -9.158002853393555
    9. '()' → logprob: -9.533002853393555
    10. '(round' → logprob: -9.908002853393555

Token 597: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14055132865905762
    2. 'f' → logprob: -2.1405513286590576
    3. 'format' → logprob: -4.890551567077637
    4. 'round' → logprob: -5.140551567077637
    5. '"{' → logprob: -9.265551567077637
    6. ' f' → logprob: -10.765551567077637
    7. ' result' → logprob: -11.265551567077637
    8. 'res' → logprob: -12.015551567077637
    9. 'rés' → logprob: -12.140551567077637
    10. '("{' → logprob: -12.390551567077637

Token 598: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08595926314592361
    2. '(' → logprob: -2.5859591960906982
    3. '(f' → logprob: -5.085959434509277
    4. '()' → logprob: -8.585959434509277
    5. '("{' → logprob: -8.960959434509277
    6. '(result' → logprob: -9.335959434509277
    7. '(
' → logprob: -9.460959434509277
    8. '(print' → logprob: -9.460959434509277
    9. '    
' → logprob: -9.585959434509277
    10. '
' → logprob: -9.835959434509277

Token 599: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.033288780599832535
    2. 'isé' → logprob: -3.6582887172698975
    3. '   ' → logprob: -5.533288955688477
    4. 'er' → logprob: -6.283288955688477
    5. 'e' → logprob: -7.408288955688477
    6. 'ié' → logprob: -9.033288955688477
    7. 'result' → logprob: -9.283288955688477
    8. 'print' → logprob: -9.408288955688477
    9. '(result' → logprob: -9.658288955688477
    10. '_result' → logprob: -10.283288955688477

Token 600: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23619474470615387
    2. '(' → logprob: -1.6111947298049927
    3. '(result' → logprob: -5.486194610595703
    4. '(f' → logprob: -5.611194610595703
    5. '()' → logprob: -6.611194610595703
    6. '()
' → logprob: -8.111194610595703
    7. '(
' → logprob: -8.111194610595703
    8. '(print' → logprob: -8.361194610595703
    9. '(round' → logprob: -8.986194610595703
    10. ',' → logprob: -8.986194610595703

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043233807082287967
    2. 'print' → logprob: -7.75043249130249
    3. '```' → logprob: -13.500432014465332
    4. ' print' → logprob: -15.500432014465332
    5. '       ' → logprob: -19.00043296813965
    6. '	print' → logprob: -20.12543296813965
    7. '`' → logprob: -21.12543296813965
    8. '``' → logprob: -21.37543296813965
    9. '   ' → logprob: -21.50043296813965
    10. '    
' → logprob: -22.00043296813965

Token 602: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -14.750000953674316
    4. '```' → logprob: -17.000001907348633
    5. 'printf' → logprob: -23.375001907348633
    6. '	print' → logprob: -24.250001907348633
    7. '``' → logprob: -24.750001907348633
    8. '
' → logprob: -26.500001907348633
    9. '#print' → logprob: -26.750001907348633
    10. '`' → logprob: -26.750001907348633

Token 603: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002666999935172498
    2. '(round' → logprob: -9.000267028808594
    3. '(f' → logprob: -9.250267028808594
    4. '(' → logprob: -10.000267028808594
    5. 'result' → logprob: -13.625267028808594
    6. '("{' → logprob: -15.500267028808594
    7. '()' → logprob: -16.125267028808594
    8. '(format' → logprob: -16.250267028808594
    9. '(results' → logprob: -17.125267028808594
    10. '("%.' → logprob: -17.500267028808594

Token 604: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '())' → logprob: -12.750004768371582
    3. '()' → logprob: -13.500004768371582
    4. ' )' → logprob: -15.125004768371582
    5. '   ' → logprob: -17.125003814697266
    6. ')`' → logprob: -17.375003814697266
    7. '))' → logprob: -17.625003814697266
    8. ')}' → logprob: -18.375003814697266
    9. '(' → logprob: -19.125003814697266
    10. '),' → logprob: -19.375003814697266

Token 605: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5213274309644476e-05
    2. 'main' → logprob: -11.375015258789062
    3. ' if' → logprob: -12.625015258789062
    4. '```' → logprob: -14.750015258789062
    5. '#' → logprob: -18.875015258789062
    6. '
' → logprob: -19.625015258789062
    7. '__' → logprob: -20.500015258789062
    8. ' main' → logprob: -20.875015258789062
    9. '	if' → logprob: -20.875015258789062
    10. 'import' → logprob: -20.875015258789062

Token 606: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. ' if' → logprob: -14.000000953674316
    3. 'main' → logprob: -15.500000953674316
    4. '```' → logprob: -22.375001907348633
    5. '__' → logprob: -22.750001907348633
    6. 'If' → logprob: -22.875001907348633
    7. '#' → logprob: -23.625001907348633
    8. '
' → logprob: -23.875001907348633
    9. '#if' → logprob: -24.375001907348633
    10. '	if' → logprob: -26.375001907348633

Token 607: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011049231514334679
    2. ' __' → logprob: -4.511049270629883
    3. 'name' → logprob: -13.761049270629883
    4. '_name' → logprob: -15.886049270629883
    5. '___' → logprob: -16.136049270629883
    6. '_' → logprob: -16.511049270629883
    7. '/__' → logprob: -18.761049270629883
    8. ' ' → logprob: -19.136049270629883
    9. '____' → logprob: -19.261049270629883
    10. 'True' → logprob: -19.261049270629883

Token 608: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0036956816911697388
    2. ' __' → logprob: -5.628695487976074
    3. 'name' → logprob: -10.128695487976074
    4. '_' → logprob: -10.878695487976074
    5. 'if' → logprob: -10.878695487976074
    6. ' ==' → logprob: -12.128695487976074
    7. '==' → logprob: -12.128695487976074
    8. '_name' → logprob: -12.628695487976074
    9. '(__' → logprob: -14.253695487976074
    10. '___' → logprob: -14.378695487976074

Token 609: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005964938085526228
    2. ' __' → logprob: -5.755964756011963
    3. 'name' → logprob: -7.130964756011963
    4. '_name' → logprob: -7.755964756011963
    5. ' ==' → logprob: -7.755964756011963
    6. '==' → logprob: -7.880964756011963
    7. '.__' → logprob: -7.880964756011963
    8. 'if' → logprob: -8.880965232849121
    9. '.py' → logprob: -10.005965232849121
    10. '_' → logprob: -10.130965232849121

Token 610: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024802929256111383
    2. ' __' → logprob: -6.002480506896973
    3. 'name' → logprob: -13.002480506896973
    4. ' "__' → logprob: -14.002480506896973
    5. '_name' → logprob: -14.127480506896973
    6. '___' → logprob: -15.627480506896973
    7. '_le' → logprob: -16.002479553222656
    8. '/__' → logprob: -16.002479553222656
    9. ' le' → logprob: -16.502479553222656
    10. '"' → logprob: -16.752479553222656

Token 611: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1455754190683365
    2. ' en' → logprob: -2.395575523376465
    3. 'é' → logprob: -3.645575523376465
    4. ' __' → logprob: -4.395575523376465
    5. '_' → logprob: -7.020575523376465
    6. 'd' → logprob: -7.020575523376465
    7. '.py' → logprob: -7.270575523376465
    8. '_en' → logprob: -7.395575523376465
    9. '_name' → logprob: -7.520575523376465
    10. ' directement' → logprob: -7.895575523376465

Token 612: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.41213834285736084
    2. '__' → logprob: -1.1621383428573608
    3. 'direct' → logprob: -4.41213846206665
    4. ' directement' → logprob: -5.78713846206665
    5. ' __' → logprob: -5.91213846206665
    6. ' as' → logprob: -6.78713846206665
    7. '_en' → logprob: -6.91213846206665
    8. 'en' → logprob: -7.28713846206665
    9. 'import' → logprob: -7.53713846206665
    10. ' directly' → logprob: -7.53713846206665

Token 613: ' tant' (ID: 16235)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0048142229206860065
    2. ' __' → logprob: -5.504814147949219
    3. '```' → logprob: -7.254814147949219
    4. 'name' → logprob: -11.629814147949219
    5. '/__' → logprob: -12.629814147949219
    6. '___' → logprob: -12.629814147949219
    7. 'python' → logprob: -13.379814147949219
    8. 'direct' → logprob: -13.504814147949219
    9. 'main' → logprob: -13.754814147949219
    10. 'module' → logprob: -14.004814147949219

Token 614: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7287735939025879
    2. 'que' → logprob: -0.7287735939025879
    3. '__' → logprob: -3.978773593902588
    4. 'qu' → logprob: -4.478773593902588
    5. ' qu' → logprob: -5.353773593902588
    6. 'Que' → logprob: -9.35377311706543
    7. '_qu' → logprob: -10.22877311706543
    8. '#' → logprob: -10.22877311706543
    9. 'q' → logprob: -11.47877311706543
    10. '(qu' → logprob: -11.85377311706543

Token 615: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030526963528245687
    2. 'principal' → logprob: -6.003052711486816
    3. 'script' → logprob: -8.503052711486816
    4. ' __' → logprob: -8.753052711486816
    5. 'main' → logprob: -9.253052711486816
    6. 'le' → logprob: -10.003052711486816
    7. ' script' → logprob: -11.128052711486816
    8. 'princip' → logprob: -11.128052711486816
    9. '"' → logprob: -11.378052711486816
    10. ' principal' → logprob: -11.628052711486816

Token 616: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18374891579151154
    2. ':' → logprob: -2.558748960494995
    3. ':
' → logprob: -2.558748960494995
    4. ' if' → logprob: -4.433748722076416
    5. '```' → logprob: -7.558748722076416
    6. ',' → logprob: -8.058749198913574
    7. '__' → logprob: -8.558749198913574
    8. ':

' → logprob: -10.683749198913574
    9. '
' → logprob: -11.183749198913574
    10. '_' → logprob: -11.308749198913574

Token 617: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3069913387298584
    2. ':' → logprob: -1.6819913387298584
    3. 'if' → logprob: -2.5569913387298584
    4. ' if' → logprob: -7.8069915771484375
    5. ',' → logprob: -8.806991577148438
    6. ':

' → logprob: -8.931991577148438
    7. '```' → logprob: -10.181991577148438
    8. ',
' → logprob: -11.056991577148438
    9. '
' → logprob: -11.056991577148438
    10. '__' → logprob: -11.806991577148438

Token 618: ' lance' (ID: 66715)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004112119786441326
    2. ' if' → logprob: -5.504112243652344
    3. '__' → logprob: -10.504112243652344
    4. ' __' → logprob: -12.879112243652344
    5. '```' → logprob: -13.254112243652344
    6. '
' → logprob: -13.379112243652344
    7. '   ' → logprob: -14.879112243652344
    8. ' 
' → logprob: -17.129112243652344
    9. 'main' → logprob: -18.129112243652344
    10. '``' → logprob: -18.254112243652344

Token 619: ' la' (ID: 557)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06312242895364761
    2. 'if' → logprob: -2.813122510910034
    3. '   ' → logprob: -7.563122272491455
    4. '_' → logprob: -8.438122749328613
    5. ' __' → logprob: -8.938122749328613
    6. '```' → logprob: -9.688122749328613
    7. ' la' → logprob: -10.313122749328613
    8. 'le' → logprob: -10.313122749328613
    9. '_main' → logprob: -10.938122749328613
    10. ' le' → logprob: -10.938122749328613

Token 620: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005417120410129428
    2. '__' → logprob: -7.625541687011719
    3. ' main' → logprob: -10.500541687011719
    4. 'fonction' → logprob: -11.500541687011719
    5. 'programme' → logprob: -12.000541687011719
    6. '```' → logprob: -13.000541687011719
    7. 'script' → logprob: -13.250541687011719
    8. 'program' → logprob: -13.250541687011719
    9. 'if' → logprob: -13.375541687011719
    10. 'principal' → logprob: -14.500541687011719

Token 621: ' main' (ID: 2758)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6244728565216064
    2. '__' → logprob: -1.1244728565216064
    3. 'main' → logprob: -1.9994728565216064
    4. '```' → logprob: -5.874472618103027
    5. ' main' → logprob: -7.249472618103027
    6. ' if' → logprob: -7.874472618103027
    7. ' __' → logprob: -8.749472618103027
    8. '_main' → logprob: -9.249472618103027
    9. '`' → logprob: -10.499472618103027
    10. 'principal' → logprob: -11.374472618103027

Token 622: '()
' (ID: 1234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10522334277629852
    2. ':
' → logprob: -2.3552234172821045
    3. '
' → logprob: -5.730223178863525
    4. ':' → logprob: -6.855223178863525
    5. ' if' → logprob: -7.980223178863525
    6. '```' → logprob: -8.105223655700684
    7. ':

' → logprob: -10.730223655700684
    8. '():
' → logprob: -11.355223655700684
    9. '``' → logprob: -11.980223655700684
    10. '_if' → logprob: -12.480223655700684

Token 623: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.876193169271573e-05
    2. '```' → logprob: -9.500088691711426
    3. '
' → logprob: -11.250088691711426
    4. ' if' → logprob: -14.250088691711426
    5. '``' → logprob: -16.000089645385742
    6. '\n' → logprob: -18.875089645385742
    7. '\' → logprob: -19.500089645385742
    8. '\
' → logprob: -19.625089645385742
    9. '    
' → logprob: -20.500089645385742
    10. '  
' → logprob: -20.500089645385742

Token 624: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931560039520264
    2. ' __' → logprob: -0.6931560039520264
    3. ' ' → logprob: -12.068156242370605
    4. ' ' → logprob: -13.443156242370605
    5. 'name' → logprob: -14.818156242370605
    6. '```' → logprob: -15.193156242370605
    7. ' ' → logprob: -15.193156242370605
    8. '​' → logprob: -15.568156242370605
    9. '___' → logprob: -15.693156242370605
    10. '/__' → logprob: -15.818156242370605

Token 625: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2756980359554291
    2. '==' → logprob: -1.9006980657577515
    3. ' ==' → logprob: -2.400697946548462
    4. '=="' → logprob: -7.775698184967041
    5. ' __' → logprob: -8.275697708129883
    6. 'name' → logprob: -9.400697708129883
    7. '=='' → logprob: -9.900697708129883
    8. '_' → logprob: -11.900697708129883
    9. '[' → logprob: -12.025697708129883
    10. 'main' → logprob: -12.400697708129883

Token 626: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '==' → logprob: -14.375000953674316
    3. '____' → logprob: -16.125
    4. '_' → logprob: -16.25
    5. '___' → logprob: -17.0
    6. '__.__' → logprob: -17.25
    7. '=="' → logprob: -18.75
    8. '__
' → logprob: -18.75
    9. 'name' → logprob: -19.25
    10. '__["' → logprob: -20.25

Token 627: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.491498531133402e-06
    2. '==' → logprob: -11.625009536743164
    3. '_' → logprob: -15.625009536743164
    4. '__.__' → logprob: -16.000009536743164
    5. '____' → logprob: -16.750009536743164
    6. '___' → logprob: -17.750009536743164
    7. '__
' → logprob: -17.750009536743164
    8. '=="' → logprob: -18.000009536743164
    9. ' ==' → logprob: -18.125009536743164
    10. '__,' → logprob: -18.250009536743164

Token 628: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023305457085371017
    2. ''' → logprob: -3.7733054161071777
    3. ' "__' → logprob: -10.023305892944336
    4. '__' → logprob: -11.148305892944336
    5. ' '__' → logprob: -14.148305892944336
    6. '"name' → logprob: -16.148305892944336
    7. '"user' → logprob: -16.398305892944336
    8. 'main' → logprob: -16.773305892944336
    9. '("__' → logprob: -17.023305892944336
    10. ''"' → logprob: -17.648305892944336

Token 629: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -18.375
    3. ' main' → logprob: -19.5
    4. '__' → logprob: -19.625
    5. '_main' → logprob: -20.375
    6. 'm' → logprob: -21.5
    7. 'ma' → logprob: -21.75
    8. 'maine' → logprob: -22.5
    9. '	main' → logprob: -22.75
    10. '主' → logprob: -23.25

Token 630: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018180612474679947
    2. '__' → logprob: -4.018180847167969
    3. '__':
' → logprob: -10.393180847167969
    4. '__["' → logprob: -16.64318084716797
    5. '__("' → logprob: -17.89318084716797
    6. '_' → logprob: -17.89318084716797
    7. '"' → logprob: -18.14318084716797
    8. '__
' → logprob: -18.39318084716797
    9. ' "__' → logprob: -18.64318084716797
    10. '("__' → logprob: -18.89318084716797

Token 631: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1362302005290985
    2. '__' → logprob: -2.511230230331421
    3. ' main' → logprob: -3.261230230331421
    4. '"' → logprob: -5.136229991912842
    5. '   ' → logprob: -7.511229991912842
    6. '	main' → logprob: -7.761229991912842
    7. ' "__' → logprob: -8.01123046875
    8. ' __' → logprob: -8.26123046875
    9. '_main' → logprob: -8.51123046875
    10. ''' → logprob: -9.51123046875

Token 632: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.250001907348633
    4. '	main' → logprob: -21.000001907348633
    5. '_main' → logprob: -25.125001907348633
    6. '.main' → logprob: -25.875001907348633
    7. 'Main' → logprob: -27.000001907348633
    8. '(main' → logprob: -27.000001907348633
    9. '```' → logprob: -27.750001907348633
    10. 'mainwindow' → logprob: -29.000001907348633

Token 633: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 631
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 192
Tokens correctement prédits (top 10): 399
Précision stricte (1ère position): 28.37%
Précision adaptée (1ère position): 30.43%
Précision (top 10): 63.23%
================================================================================
