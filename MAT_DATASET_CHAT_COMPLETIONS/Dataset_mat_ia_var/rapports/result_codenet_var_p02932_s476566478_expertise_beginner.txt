================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    import sys

    # Lecture de l'entrée
    N, M, L, R = map(int, sys.stdin.readline().split())

    MOD = 10**9 + 7

    # Préparation des factorielles et inverses
    X = 1000
    fact = [1] * (X * X)
    for i in range(1, X * X):
        fact[i] = fact[i - 1] * i % MOD

    # Calcul des inverses de factorielles via Fermat (car MOD est premier)
    fact_inv = [1] * (X * X)
    fact_inv[X * X - 1] = pow(fact[X * X - 1], MOD - 2, MOD)
    for i in range(X * X - 2, -1, -1):
        fact_inv[i] = fact_inv[i + 1] * (i + 1) % MOD

    # Calcul des combinaisons alternées
    U = N - M
    comb = []
    for k in range(U + 1):
        val = fact[U] * fact_inv[k] % MOD * fact_inv[U - k] % MOD
        if k % 2 == 1:
            val = -val
        comb.append(val % MOD)

    # Calcul de P
    P = [0] * (R + 1)
    for idx, x in enumerate(comb):
        i = idx + M
        for j in range(0, R+1, i):
            P[j] = (P[j] + x) % MOD

    # Correction de P
    for i in range(M, R + 1):
        P[i] = (P[i] - P[i - M]) % MOD

    # Calcul de Q
    Q = []
    for i in range(R + 1):
        val = fact[N + i] * fact_inv[i] % MOD * fact_inv[N] % MOD
        Q.append(val)

    # Fonction f
    def f(RR):
        total = fact[RR + N] * fact_inv[RR] % MOD * fact_inv[N] % MOD
        x = 0
        for i in range(RR + 1):
            x = (x + Q[RR - i] * P[i]) % MOD
        coef = fact[N] * fact_inv[M] % MOD * fact_inv[N - M] % MOD
        return (total - x * coef) % MOD

    answer = (f(R) - f(L - 1)) % MOD
    print(answer)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0316474549472332
    2. '():' → logprob: -3.9066474437713623
    3. '(:' → logprob: -4.656647682189941
    4. ':' → logprob: -6.656647682189941
    5. '(":' → logprob: -9.656647682189941
    6. '(
' → logprob: -10.156647682189941
    7. '```' → logprob: -10.406647682189941
    8. '(`' → logprob: -10.531647682189941
    9. '):' → logprob: -10.906647682189941
    10. ' (' → logprob: -11.281647682189941

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07676950097084045
    2. '(' → logprob: -3.4517695903778076
    3. '    ' → logprob: -4.3267693519592285
    4. '\' → logprob: -4.7017693519592285
    5. ':' → logprob: -5.2017693519592285
    6. 'print' → logprob: -5.4517693519592285
    7. '():' → logprob: -5.5767693519592285
    8. ' ' → logprob: -6.3267693519592285
    9. '(sys' → logprob: -7.0767693519592285
    10. '()' → logprob: -7.4517693519592285

Token 7: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8437236547470093
    2. '    ' → logprob: -1.2187236547470093
    3. '   ' → logprob: -1.5937236547470093
    4. 'pass' → logprob: -3.093723773956299
    5. ' pass' → logprob: -4.718723773956299
    6. ' print' → logprob: -4.968723773956299
    7. ' ' → logprob: -5.343723773956299
    8. '  ' → logprob: -7.343723773956299
    9. '_' → logprob: -7.343723773956299
    10. 'return' → logprob: -7.468723773956299

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6497755646705627
    2. ' sys' → logprob: -0.7747755646705627
    3. ' ' → logprob: -4.149775505065918
    4. ' space' → logprob: -7.149775505065918
    5. ' math' → logprob: -8.899775505065918
    6. ' json' → logprob: -9.524775505065918
    7. ' ' → logprob: -9.649775505065918
    8. ' numpy' → logprob: -10.024775505065918
    9. 'sys' → logprob: -10.524775505065918
    10. ' system' → logprob: -10.774775505065918

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45800063014030457
    2. '<|end|>' → logprob: -2.083000659942627
    3. '
' → logprob: -2.458000659942627
    4. '\' → logprob: -3.083000659942627
    5. 'newline' → logprob: -3.833000659942627
    6. ')' → logprob: -3.958000659942627
    7. '\n' → logprob: -4.333000659942627
    8. '<|end|>' → logprob: -4.583000659942627
    9. '   ' → logprob: -4.708000659942627
    10. 'import' → logprob: -4.833000659942627

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02834891341626644
    2. '\' → logprob: -4.653348922729492
    3. '    
' → logprob: -5.278348922729492
    4. '\n' → logprob: -5.528348922729492
    5. '.' → logprob: -6.278348922729492
    6. '    ' → logprob: -6.653348922729492
    7. '
' → logprob: -6.903348922729492
    8. ' ' → logprob: -7.028348922729492
    9. 'newline' → logprob: -7.028348922729492
    10. '       ' → logprob: -7.528348922729492

Token 11: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08388778567314148
    2. 'print' → logprob: -3.083887815475464
    3. 'pass' → logprob: -4.208887577056885
    4. 'for' → logprob: -5.208887577056885
    5. '    ' → logprob: -5.833887577056885
    6. 'if' → logprob: -6.083887577056885
    7. 'sys' → logprob: -6.083887577056885
    8. 'import' → logprob: -6.958887577056885
    9. 'input' → logprob: -7.333887577056885
    10. ' ' → logprob: -7.458887577056885

Token 12: ' Lecture' (ID: 106534)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.6016001105308533
    2. 'stdin' → logprob: -1.851600170135498
    3. 'stdout' → logprob: -2.226600170135498
    4. ' argv' → logprob: -2.601600170135498
    5. 'path' → logprob: -2.976600170135498
    6. '   ' → logprob: -3.851600170135498
    7. ' path' → logprob: -4.351600170135498
    8. 'input' → logprob: -5.226600170135498
    9. 'args' → logprob: -5.226600170135498
    10. ' stdout' → logprob: -6.101600170135498

Token 13: ' de' (ID: 334)
  Prédit: ' notes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' notes' → logprob: -0.5405694246292114
    2. ' ' → logprob: -2.040569305419922
    3. ' =' → logprob: -2.040569305419922
    4. '   ' → logprob: -2.790569305419922
    5. '_notes' → logprob: -4.040569305419922
    6. ' de' → logprob: -4.165569305419922
    7. ' des' → logprob: -4.790569305419922
    8. 's' → logprob: -4.790569305419922
    9. 'notes' → logprob: -4.790569305419922
    10. ' Notes' → logprob: -4.915569305419922

Token 14: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.372880220413208
    2. ' l' → logprob: -1.997880220413208
    3. ' la' → logprob: -2.372880220413208
    4. ' ' → logprob: -2.747880220413208
    5. ' sys' → logprob: -5.247879981994629
    6. 'la' → logprob: -5.372879981994629
    7. 's' → logprob: -5.372879981994629
    8. '_' → logprob: -6.622879981994629
    9. ' input' → logprob: -7.872879981994629
    10. '   ' → logprob: -7.997879981994629

Token 15: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.901486873626709
    2. 'a' → logprob: -1.151486873626709
    3. 'e' → logprob: -1.401486873626709
    4. ''' → logprob: -4.776486873626709
    5. 'entrée' → logprob: -4.776486873626709
    6. 'u' → logprob: -5.401486873626709
    7. '’entrée' → logprob: -6.401486873626709
    8. 'f' → logprob: -6.776486873626709
    9. 'é' → logprob: -7.026486873626709
    10. '_' → logprob: -7.026486873626709

Token 16: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3543553948402405
    2. '_' → logprob: -2.1043553352355957
    3. '   ' → logprob: -3.1043553352355957
    4. ' )' → logprob: -3.8543553352355957
    5. 's' → logprob: -4.354355335235596
    6. '    ' → logprob: -4.479355335235596
    7. 'input' → logprob: -4.479355335235596
    8. ',' → logprob: -4.604355335235596
    9. '  ' → logprob: -4.729355335235596
    10. ' input' → logprob: -5.229355335235596

Token 17: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4150466918945312
    2. 's' → logprob: -1.6650466918945312
    3. '   ' → logprob: -1.6650466918945312
    4. ',' → logprob: -1.7900466918945312
    5. ' standard' → logprob: -2.9150466918945312
    6. ' ' → logprob: -3.6650466918945312
    7. 'n' → logprob: -4.165046691894531
    8. 'standard' → logprob: -4.290046691894531
    9. 'user' → logprob: -4.415046691894531
    10. ')' → logprob: -5.040046691894531

Token 18: ' N' (ID: 478)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.3226330280303955
    2. ' lines' → logprob: -1.6976330280303955
    3. 'input' → logprob: -1.6976330280303955
    4. '   ' → logprob: -2.4476330280303955
    5. 'n' → logprob: -2.8226330280303955
    6. ' input' → logprob: -3.0726330280303955
    7. 'l' → logprob: -3.1976330280303955
    8. ' data' → logprob: -3.3226330280303955
    9. ' line' → logprob: -3.6976330280303955
    10. 'line' → logprob: -4.322632789611816

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010264060460031033
    2. '=' → logprob: -4.885263919830322
    3. ',' → logprob: -6.510263919830322
    4. '_' → logprob: -7.385263919830322
    5. ' ' → logprob: -8.51026439666748
    6. '=int' → logprob: -8.51026439666748
    7. '   ' → logprob: -10.13526439666748
    8. '  ' → logprob: -10.63526439666748
    9. '=input' → logprob: -10.63526439666748
    10. ')' → logprob: -11.01026439666748

Token 20: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5177366137504578
    2. ' ' → logprob: -1.6427366733551025
    3. ' K' → logprob: -2.0177366733551025
    4. ' input' → logprob: -3.6427366733551025
    5. ' T' → logprob: -4.142736434936523
    6. 'M' → logprob: -4.142736434936523
    7. 'input' → logprob: -5.017736434936523
    8. 'K' → logprob: -5.767736434936523
    9. ' =' → logprob: -6.142736434936523
    10. '  ' → logprob: -6.142736434936523

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289651691913605
    2. '=' → logprob: -2.23789644241333
    3. ',' → logprob: -9.612896919250488
    4. ' ' → logprob: -12.612896919250488
    5. ')' → logprob: -13.237896919250488
    6. '=input' → logprob: -14.237896919250488
    7. '  ' → logprob: -14.987896919250488
    8. ' ,' → logprob: -15.112896919250488
    9. '=int' → logprob: -15.612896919250488
    10. ' =
' → logprob: -15.987896919250488

Token 22: ' L' (ID: 451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6164305806159973
    2. ' ' → logprob: -1.3664305210113525
    3. ' K' → logprob: -1.7414305210113525
    4. '  ' → logprob: -4.991430759429932
    5. '=' → logprob: -5.116430759429932
    6. ' P' → logprob: -5.366430759429932
    7. ' L' → logprob: -5.491430759429932
    8. 'K' → logprob: -6.741430759429932
    9. ' Q' → logprob: -6.866430759429932
    10. ' T' → logprob: -7.366430759429932

Token 23: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07001145929098129
    2. '=' → logprob: -2.6950113773345947
    3. ',' → logprob: -9.695011138916016
    4. ' ' → logprob: -11.445011138916016
    5. '  ' → logprob: -14.320011138916016
    6. ')' → logprob: -14.445011138916016
    7. '   ' → logprob: -14.695011138916016
    8. ' ' → logprob: -15.320011138916016
    9. '=input' → logprob: -15.570011138916016
    10. ' ,' → logprob: -15.695011138916016

Token 24: ' R' (ID: 460)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5883308053016663
    2. ' ' → logprob: -1.9633307456970215
    3. ' =' → logprob: -2.0883307456970215
    4. 'K' → logprob: -2.5883307456970215
    5. '_' → logprob: -3.8383307456970215
    6. ' P' → logprob: -4.4633307456970215
    7. ' T' → logprob: -4.4633307456970215
    8. '=' → logprob: -4.5883307456970215
    9. '  ' → logprob: -5.0883307456970215
    10. 'P' → logprob: -5.0883307456970215

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28116482496261597
    2. '=' → logprob: -1.4061648845672607
    3. ',' → logprob: -11.78116512298584
    4. ' ' → logprob: -12.78116512298584
    5. '  ' → logprob: -14.28116512298584
    6. '=sys' → logprob: -14.40616512298584
    7. '=input' → logprob: -14.53116512298584
    8. ')' → logprob: -14.65616512298584
    9. '```' → logprob: -14.65616512298584
    10. '   ' → logprob: -14.78116512298584

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0026403414085507393
    2. 'map' → logprob: -6.127640247344971
    3. ' sys' → logprob: -8.377640724182129
    4. ' [' → logprob: -9.502640724182129
    5. ' ' → logprob: -10.002640724182129
    6. '[' → logprob: -10.377640724182129
    7. ' list' → logprob: -10.877640724182129
    8. ' ' → logprob: -11.002640724182129
    9. ' input' → logprob: -11.127640724182129
    10. '	map' → logprob: -11.502640724182129

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4429679811000824
    2. '(' → logprob: -1.0679680109024048
    3. '(str' → logprob: -4.317967891693115
    4. '(lambda' → logprob: -7.442967891693115
    5. '(input' → logprob: -8.942968368530273
    6. '(list' → logprob: -10.692968368530273
    7. '(
' → logprob: -10.817968368530273
    8. 'int' → logprob: -10.817968368530273
    9. '(eval' → logprob: -11.067968368530273
    10. '(sys' → logprob: -11.567968368530273

Token 28: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6239237785339355
    2. '(input' → logprob: -1.9989237785339355
    3. ',' → logprob: -2.2489237785339355
    4. '(' → logprob: -2.2489237785339355
    5. '(sys' → logprob: -2.3739237785339355
    6. 'input' → logprob: -4.3739237785339355
    7. '<|end|>' → logprob: -5.7489237785339355
    8. ',input' → logprob: -5.9989237785339355
    9. ')(' → logprob: -6.7489237785339355
    10. '   ' → logprob: -7.1239237785339355

Token 29: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08823686838150024
    2. 'sys' → logprob: -2.7132368087768555
    3. ' input' → logprob: -4.2132368087768555
    4. 'input' → logprob: -5.7132368087768555
    5. ')' → logprob: -11.338236808776855
    6. '(sys' → logprob: -11.838236808776855
    7. '=sys' → logprob: -11.963236808776855
    8. ' ' → logprob: -12.838236808776855
    9. ' )' → logprob: -13.213236808776855
    10. '	sys' → logprob: -13.588236808776855

Token 30: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003649606602266431
    2. '.argv' → logprob: -5.878649711608887
    3. '.' → logprob: -7.128649711608887
    4. '.readline' → logprob: -10.628649711608887
    5. '.stdout' → logprob: -11.628649711608887
    6. '(stdin' → logprob: -12.503649711608887
    7. '.std' → logprob: -12.628649711608887
    8. 'stdin' → logprob: -14.003649711608887
    9. ' .' → logprob: -14.628649711608887
    10. '().' → logprob: -15.378649711608887

Token 31: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.7530574849806726e-05
    2. '.read' → logprob: -10.500057220458984
    3. '.' → logprob: -10.875057220458984
    4. '.stdin' → logprob: -11.500057220458984
    5. '.readlines' → logprob: -14.125057220458984
    6. ' .' → logprob: -15.875057220458984
    7. ').' → logprob: -17.000057220458984
    8. '.buffer' → logprob: -17.750057220458984
    9. '.)' → logprob: -18.500057220458984
    10. '.next' → logprob: -18.625057220458984

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.27502280473709106
    2. '())' → logprob: -1.9000227451324463
    3. '()' → logprob: -2.4000227451324463
    4. '()))' → logprob: -10.650022506713867
    5. ')' → logprob: -10.775022506713867
    6. '(' → logprob: -10.900022506713867
    7. '()[' → logprob: -11.025022506713867
    8. '()]' → logprob: -11.275022506713867
    9. ' ())' → logprob: -11.275022506713867
    10. '());' → logprob: -11.525022506713867

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16084374487400055
    2. 'strip' → logprob: -1.9108437299728394
    3. 'rstrip' → logprob: -7.410843849182129
    4. 'read' → logprob: -11.785843849182129
    5. ' split' → logprob: -12.160843849182129
    6. ' strip' → logprob: -13.660843849182129
    7. '(split' → logprob: -15.160843849182129
    8. ')' → logprob: -15.660843849182129
    9. 's' → logprob: -16.285842895507812
    10. 'spl' → logprob: -16.660842895507812

Token 34: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00641929404810071
    2. '()' → logprob: -5.3814191818237305
    3. ')' → logprob: -6.6314191818237305
    4. '()))' → logprob: -7.7564191818237305
    5. '(' → logprob: -11.13141918182373
    6. '())
' → logprob: -11.25641918182373
    7. ' ())' → logprob: -11.88141918182373
    8. '('' → logprob: -12.13141918182373
    9. '))' → logprob: -12.38141918182373
    10. '().' → logprob: -13.63141918182373

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4914419949054718
    2. '<|end|>' → logprob: -1.6164419651031494
    3. ')' → logprob: -2.4914419651031494
    4. '\n' → logprob: -3.3664419651031494
    5. '  
' → logprob: -3.9914419651031494
    6. '   ' → logprob: -4.1164422035217285
    7. '    
' → logprob: -4.4914422035217285
    8. '<|end|>' → logprob: -4.4914422035217285
    9. ' 
' → logprob: -5.2414422035217285
    10. '```' → logprob: -6.3664422035217285

Token 36: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27189695835113525
    2. 'A' → logprob: -3.7718968391418457
    3. 'a' → logprob: -3.8968968391418457
    4. 'data' → logprob: -4.146896839141846
    5. ')' → logprob: -4.271896839141846
    6. '    
' → logprob: -4.271896839141846
    7. 's' → logprob: -4.521896839141846
    8. '#' → logprob: -4.521896839141846
    9. ' ' → logprob: -4.521896839141846
    10. 'graph' → logprob: -4.521896839141846

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08905681222677231
    2. '=' → logprob: -2.4640567302703857
    3. '<|end|>' → logprob: -9.964056968688965
    4. ')' → logprob: -10.339056968688965
    5. '_' → logprob: -12.089056968688965
    6. ',' → logprob: -12.089056968688965
    7. ' ' → logprob: -12.089056968688965
    8. '<|end|>' → logprob: -12.214056968688965
    9. ' =)' → logprob: -12.464056968688965
    10. ' =
' → logprob: -12.714056968688965

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13286563754081726
    2. '10' → logprob: -2.1328656673431396
    3. '100' → logprob: -5.1328654289245605
    4. '1' → logprob: -11.132865905761719
    5. ' ' → logprob: -13.257865905761719
    6. '998' → logprob: -13.257865905761719
    7. ' (' → logprob: -14.257865905761719
    8. ' int' → logprob: -15.132865905761719
    9. '109' → logprob: -15.257865905761719
    10. 'int' → logprob: -15.257865905761719

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18070068955421448
    2. '100' → logprob: -1.805700659751892
    3. '998' → logprob: -7.180700778961182
    4. '1' → logprob: -8.930700302124023
    5. ' ' → logprob: -10.055700302124023
    6. '(' → logprob: -11.430700302124023
    7. 'int' → logprob: -12.680700302124023
    8. '123' → logprob: -13.555700302124023
    9. '109' → logprob: -14.180700302124023
    10. '2' → logprob: -14.430700302124023

Token 40: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.064796082675457
    2. '**' → logprob: -2.814795970916748
    3. '09' → logprob: -5.939795970916748
    4. ' ' → logprob: -9.564796447753906
    5. '+' → logprob: -10.189796447753906
    6. '```' → logprob: -10.189796447753906
    7. '009' → logprob: -10.939796447753906
    8. '_' → logprob: -11.439796447753906
    9. '000' → logprob: -11.939796447753906
    10. '^' → logprob: -12.314796447753906

Token 41: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.127333340875339e-06
    2. '09' → logprob: -12.500003814697266
    3. '18' → logprob: -16.250003814697266
    4. '10' → logprob: -16.375003814697266
    5. '8' → logprob: -16.500003814697266
    6. '+' → logprob: -17.500003814697266
    7. '6' → logprob: -17.625003814697266
    8. '4' → logprob: -17.625003814697266
    9. '15' → logprob: -17.750003814697266
    10. '```' → logprob: -18.000003814697266

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04301152005791664
    2. ' +' → logprob: -3.168011426925659
    3. ' ' → logprob: -12.418011665344238
    4. '7' → logprob: -12.543011665344238
    5. ' +
' → logprob: -13.543011665344238
    6. '+
' → logprob: -14.293011665344238
    7. ' ' → logprob: -15.043011665344238
    8. '20' → logprob: -15.168011665344238
    9. '＋' → logprob: -15.293011665344238
    10. ' plus' → logprob: -15.293011665344238

Token 43: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '+' → logprob: -16.0
    4. '9' → logprob: -17.125
    5. '```' → logprob: -17.375
    6. '   ' → logprob: -18.125
    7. '07' → logprob: -19.375
    8. '  ' → logprob: -19.5625
    9. '' → logprob: -21.0
    10. '67' → logprob: -21.125

Token 44: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '9' → logprob: -17.75
    4. '+' → logprob: -17.875
    5. '07' → logprob: -19.5
    6. '   ' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '  ' → logprob: -23.0625
    9. '７' → logprob: -23.25
    10. '

' → logprob: -23.25

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27507632970809937
    2. '<|end|>' → logprob: -1.9000763893127441
    3. '\n' → logprob: -3.025076389312744
    4. '' → logprob: -4.900076389312744
    5. ')' → logprob: -4.900076389312744
    6. '\' → logprob: -5.775076389312744
    7. ' 
' → logprob: -5.775076389312744
    8. '#' → logprob: -5.775076389312744
    9. '<|end|>' → logprob: -5.900076389312744
    10. '   ' → logprob: -5.900076389312744

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5550264716148376
    2. '   ' → logprob: -1.4300265312194824
    3. 'n' → logprob: -3.1800265312194824
    4. 'dp' → logprob: -3.5550265312194824
    5. '    
' → logprob: -3.6800265312194824
    6. 'result' → logprob: -3.9300265312194824
    7. '\n' → logprob: -4.055026531219482
    8. 'a' → logprob: -4.680026531219482
    9. ' 
' → logprob: -4.930026531219482
    10. 'A' → logprob: -5.055026531219482

Token 47: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07220777869224548
    2. 'result' → logprob: -3.9472076892852783
    3. ' dp' → logprob: -4.697207927703857
    4. 'count' → logprob: -5.072207927703857
    5. 'answer' → logprob: -5.822207927703857
    6. 'a' → logprob: -5.947207927703857
    7. '#' (adapté à ' #') → logprob: -6.072207927703857
    8. 'd' → logprob: -6.322207927703857
    9. 'res' → logprob: -6.322207927703857
    10. 'graph' → logprob: -6.322207927703857

Token 48: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6789031624794006
    2. ' dp' → logprob: -1.3039031028747559
    3. '#' → logprob: -3.303903102874756
    4. ' result' → logprob: -3.803903102874756
    5. ' #' → logprob: -4.053903102874756
    6. 'f' → logprob: -4.303903102874756
    7. ' ways' → logprob: -4.428903102874756
    8. 'c' → logprob: -4.553903102874756
    9. 'd' → logprob: -4.678903102874756
    10. 'count' → logprob: -4.803903102874756

Token 49: 'paration' (ID: 27466)
  Prédit: 'paration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.31881433725357056
    2. 'c' → logprob: -2.568814277648926
    3. 'cision' → logprob: -2.943814277648926
    4. 'fix' → logprob: -3.193814277648926
    5. 'vision' → logprob: -3.943814277648926
    6. 'd' → logprob: -4.068814277648926
    7. 'dict' → logprob: -4.443814277648926
    8. '_c' → logprob: -5.193814277648926
    9. 'sum' → logprob: -5.193814277648926
    10. 'pare' → logprob: -5.943814277648926

Token 50: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' fact' (ID: 2840)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4556710422039032
    2. 'dp' → logprob: -1.0806710720062256
    3. 'fact' → logprob: -5.2056708335876465
    4. ' fact' → logprob: -5.7056708335876465
    5. ' arrays' → logprob: -5.8306708335876465
    6. ' data' → logprob: -5.9556708335876465
    7. '_dp' → logprob: -6.4556708335876465
    8. ' tableaux' → logprob: -6.7056708335876465
    9. ' DP' → logprob: -6.9556708335876465
    10. ' tables' → logprob: -7.0806708335876465

Token 52: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.33491429686546326
    2. 'o' → logprob: -2.209914207458496
    3. '```' → logprob: -2.459914207458496
    4. 'ori' → logprob: -3.209914207458496
    5. 'ories' → logprob: -4.209914207458496
    6. 'oires' → logprob: -4.709914207458496
    7. '_' → logprob: -5.459914207458496
    8. 'eurs' → logprob: -5.584914207458496
    9. 'orial' → logprob: -5.584914207458496
    10. 'ors' → logprob: -5.709914207458496

Token 53: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.2534672021865845
    2. 'els' → logprob: -1.5034672021865845
    3. '```' → logprob: -7.628467082977295
    4. 'als' → logprob: -8.753467559814453
    5. '``' → logprob: -9.003467559814453
    6. 'es' → logprob: -9.253467559814453
    7. 'les' → logprob: -9.378467559814453
    8. '`' → logprob: -9.378467559814453
    9. 'ales' → logprob: -9.628467559814453
    10. 'lles' → logprob: -9.753467559814453

Token 54: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7214080691337585
    2. ',' → logprob: -0.8464080691337585
    3. ' et' → logprob: -3.7214081287384033
    4. ' and' → logprob: -3.8464081287384033
    5. 'et' → logprob: -4.221407890319824
    6. ' ' → logprob: -4.846407890319824
    7. '[' → logprob: -4.971407890319824
    8. 'and' → logprob: -6.471407890319824
    9. '(' → logprob: -6.971407890319824
    10. ' ,' → logprob: -6.971407890319824

Token 55: ' invers' (ID: 38721)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6067996621131897
    2. 'inverse' → logprob: -1.856799602508545
    3. ' leurs' → logprob: -2.481799602508545
    4. ' inverse' → logprob: -2.856799602508545
    5. 'in' → logprob: -3.356799602508545
    6. 'inv' → logprob: -3.606799602508545
    7. 'des' → logprob: -4.231799602508545
    8. '```' → logprob: -4.481799602508545
    9. ' leur' → logprob: -4.606799602508545
    10. ' their' → logprob: -4.606799602508545

Token 56: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0002234437270089984
    2. 'és' → logprob: -8.500223159790039
    3. 'e' → logprob: -11.750223159790039
    4. '```' → logprob: -12.000223159790039
    5. 'ées' → logprob: -12.875223159790039
    6. 'é' → logprob: -14.375223159790039
    7. 'ès' → logprob: -14.375223159790039
    8. 'ales' → logprob: -15.625223159790039
    9. 'ières' → logprob: -15.875223159790039
    10. 'ės' → logprob: -15.875223159790039

Token 57: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4789058268070221
    2. '```' → logprob: -2.4789059162139893
    3. 'fact' → logprob: -3.3539059162139893
    4. 's' → logprob: -3.4789059162139893
    5. ' factorial' → logprob: -3.6039059162139893
    6. '_factor' → logprob: -3.6039059162139893
    7. 'def' → logprob: -3.9789059162139893
    8. ':' → logprob: -4.10390567779541
    9. '[' → logprob: -4.35390567779541
    10. ' ,' → logprob: -4.47890567779541

Token 58: '   ' (ID: 271)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.0055859088897705
    2. '_factor' → logprob: -1.6305859088897705
    3. ',' → logprob: -1.7555859088897705
    4. 'factor' → logprob: -2.6305859088897705
    5. '_fact' → logprob: -3.1305859088897705
    6. '```' → logprob: -3.2555859088897705
    7. '[' → logprob: -4.130585670471191
    8. 's' → logprob: -4.380585670471191
    9. ' factorial' → logprob: -4.380585670471191
    10. 'n' → logprob: -4.755585670471191

Token 59: ' X' (ID: 2127)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07773435860872269
    2. ' fact' → logprob: -3.0777344703674316
    3. 'factor' → logprob: -3.9527344703674316
    4. ' factorial' → logprob: -5.202734470367432
    5. '_fact' → logprob: -6.327734470367432
    6. ' ' → logprob: -6.952734470367432
    7. 'n' → logprob: -8.327733993530273
    8. 'fac' → logprob: -8.327733993530273
    9. '_factor' → logprob: -8.577733993530273
    10. '```' → logprob: -9.202733993530273

Token 60: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1082760095596313
    2. '_fact' → logprob: -1.2332760095596313
    3. ' =' → logprob: -2.358275890350342
    4. '_factor' → logprob: -2.608275890350342
    5. '_fac' → logprob: -2.733275890350342
    6. '!' → logprob: -3.483275890350342
    7. '=' → logprob: -3.483275890350342
    8. '_f' → logprob: -3.608275890350342
    9. '_max' → logprob: -4.233275890350342
    10. 'fact' → logprob: -4.858275890350342

Token 61: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.17155511677265167
    2. ' R' → logprob: -3.0465550422668457
    3. ' L' → logprob: -3.1715550422668457
    4. ' ' → logprob: -3.4215550422668457
    5. 'max' → logprob: -3.6715550422668457
    6. 'R' → logprob: -5.921555042266846
    7. ' N' → logprob: -5.921555042266846
    8. 'L' → logprob: -6.546555042266846
    9. ' M' → logprob: -6.546555042266846
    10. '10' → logprob: -7.171555042266846

Token 62: '100' (ID: 1353)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6298626065254211
    2. 'N' → logprob: -1.7548625469207764
    3. 'max' → logprob: -1.8798625469207764
    4. '10' → logprob: -2.5048625469207764
    5. '2' → logprob: -4.0048627853393555
    6. 'R' → logprob: -4.1298627853393555
    7. 'M' → logprob: -4.8798627853393555
    8. ' L' → logprob: -5.1298627853393555
    9. ' max' → logprob: -5.5048627853393555
    10. ' N' → logprob: -6.2548627853393555

Token 63: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6798987984657288
    2. '001' → logprob: -1.429898738861084
    3. '005' → logprob: -1.804898738861084
    4. '010' → logprob: -3.054898738861084
    5. '002' → logprob: -4.054898738861084
    6. '0' → logprob: -4.179898738861084
    7. '5' → logprob: -5.804898738861084
    8. '00' → logprob: -6.179898738861084
    9. '1' → logprob: -6.679898738861084
    10. '050' → logprob: -7.429898738861084

Token 64: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09716302901506424
    2. '0' → logprob: -3.597162961959839
    3. '2' → logprob: -3.972162961959839
    4. '+' → logprob: -3.972162961959839
    5. ' +' → logprob: -4.472163200378418
    6. '001' → logprob: -5.722163200378418
    7. '000' → logprob: -5.847163200378418
    8. '
' → logprob: -5.972163200378418
    9. '5' → logprob: -6.597163200378418
    10. '01' → logprob: -6.722163200378418

Token 65: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010206005536019802
    2. '
' → logprob: -5.51020622253418
    3. ' +' → logprob: -5.63520622253418
    4. '<|end|>' → logprob: -6.76020622253418
    5. '0' → logprob: -7.38520622253418
    6. '*' → logprob: -8.63520622253418
    7. '<|end|>' → logprob: -9.01020622253418
    8. '

' → logprob: -9.13520622253418
    9. '+
' → logprob: -9.76020622253418
    10. '1' → logprob: -10.01020622253418

Token 66: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.11714306473731995
    2. 'max' → logprob: -2.992143154144287
    3. 'factor' → logprob: -3.367143154144287
    4. '+' → logprob: -4.617143154144287
    5. 'f' → logprob: -5.117143154144287
    6. 'fac' → logprob: -5.242143154144287
    7. 'MAX' → logprob: -6.992143154144287
    8. '
' → logprob: -7.117143154144287
    9. '_fact' → logprob: -7.242143154144287
    10. '_factor' → logprob: -7.742143154144287

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5396086573600769
    2. '=' → logprob: -1.4146087169647217
    3. 's' → logprob: -1.7896087169647217
    4. '[' → logprob: -6.039608478546143
    5. '   ' → logprob: -6.789608478546143
    6. ' ' → logprob: -6.789608478546143
    7. '_' → logprob: -7.039608478546143
    8. ',' → logprob: -7.164608478546143
    9. '[]' → logprob: -9.2896089553833
    10. '=[' → logprob: -9.6646089553833

Token 68: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38689637184143066
    2. '[' → logprob: -1.1368963718414307
    3. ' ' → logprob: -11.761896133422852
    4. '[int' → logprob: -11.761896133422852
    5. '[i' → logprob: -13.261896133422852
    6. '1' → logprob: -13.261896133422852
    7. '[len' → logprob: -14.011896133422852
    8. '[f' → logprob: -14.761896133422852
    9. '=[' → logprob: -14.761896133422852
    10. '[n' → logprob: -14.761896133422852

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. ']' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '  ' → logprob: -19.750001907348633
    6. ')' → logprob: -20.500001907348633
    7. '১' → logprob: -21.250001907348633
    8. '```' → logprob: -21.375001907348633
    9. 'fact' → logprob: -21.625001907348633
    10. '۱' → logprob: -21.625001907348633

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024087082128971815
    2. ',' → logprob: -6.127408504486084
    3. ' ]' → logprob: -8.752408981323242
    4. ']*' → logprob: -10.002408981323242
    5. ']*(' → logprob: -11.502408981323242
    6. ' for' → logprob: -12.502408981323242
    7. ']+' → logprob: -13.252408981323242
    8. ']
' → logprob: -14.127408981323242
    9. ' ' → logprob: -14.377408981323242
    10. ')' → logprob: -14.377408981323242

Token 71: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057321228086948395
    2. ']' → logprob: -3.057321310043335
    3. '<|end|>' → logprob: -5.432321071624756
    4. '*' → logprob: -7.557321071624756
    5. ' for' → logprob: -7.682321071624756
    6. ' ' → logprob: -7.682321071624756
    7. ',
' → logprob: -7.682321071624756
    8. '
' → logprob: -7.682321071624756
    9. ' ]' → logprob: -7.682321071624756
    10. '<|end|>' → logprob: -8.057321548461914

Token 72: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0005307526444084942
    2. ' (' → logprob: -7.75053071975708
    3. '(' → logprob: -9.250531196594238
    4. '(x' → logprob: -13.625531196594238
    5. ' ' → logprob: -14.000531196594238
    6. '(N' → logprob: -14.250531196594238
    7. '   ' → logprob: -14.625531196594238
    8. '100' → logprob: -15.125531196594238
    9. 'X' → logprob: -15.250531196594238
    10. '101' → logprob: -16.875530242919922

Token 73: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.017082689329981804
    2. ' X' → logprob: -4.267082691192627
    3. '(X' → logprob: -5.892082691192627
    4. ' (' → logprob: -9.267082214355469
    5. ' ' → logprob: -10.767082214355469
    6. '   ' → logprob: -11.017082214355469
    7. '(' → logprob: -11.517082214355469
    8. 'N' → logprob: -12.767082214355469
    9. '100' → logprob: -13.392082214355469
    10. 'XN' → logprob: -13.517082214355469

Token 74: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026309587061405182
    2. ' +' → logprob: -3.6513094902038574
    3. '+
' → logprob: -12.651309967041016
    4. ')' → logprob: -13.026309967041016
    5. '1' → logprob: -13.776309967041016
    6. ' ' → logprob: -14.151309967041016
    7. ' +
' → logprob: -14.526309967041016
    8. '+)' → logprob: -15.026309967041016
    9. '0' → logprob: -15.151309967041016
    10. '2' → logprob: -15.401309967041016

Token 75: ' X' (ID: 2127)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41209888458251953
    2. '3' → logprob: -1.7870988845825195
    3. ' ' → logprob: -2.0370988845825195
    4. '10' → logprob: -4.4120988845825195
    5. '5' → logprob: -5.0370988845825195
    6. '4' → logprob: -5.1620988845825195
    7. 'M' → logprob: -5.2870988845825195
    8. ' M' → logprob: -5.5370988845825195
    9. '6' → logprob: -6.4120988845825195
    10. '+' → logprob: -6.7870988845825195

Token 76: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34277981519699097
    2. ')' → logprob: -1.3427798748016357
    3. ' +' → logprob: -3.5927798748016357
    4. ' )' → logprob: -6.717779636383057
    5. '+)' → logprob: -8.717780113220215
    6. '*' → logprob: -9.467780113220215
    7. ')
' → logprob: -10.217780113220215
    8. '1' → logprob: -10.842780113220215
    9. '2' → logprob: -11.592780113220215
    10. '+
' → logprob: -11.717780113220215

Token 77: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01122430618852377
    2. '0' → logprob: -6.261224269866943
    3. ')
' → logprob: -6.261224269866943
    4. ']' → logprob: -6.386224269866943
    5. '<|end|>' → logprob: -6.386224269866943
    6. '[' → logprob: -6.511224269866943
    7. '*' → logprob: -6.886224269866943
    8. '+' → logprob: -7.886224269866943
    9. '**' → logprob: -8.011224746704102
    10. '1' → logprob: -8.761224746704102

Token 78: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6548994183540344
    2. '0' → logprob: -1.5298993587493896
    3. '
' → logprob: -2.5298993587493896
    4. ')' → logprob: -2.9048993587493896
    5. '**' → logprob: -3.0298993587493896
    6. '1' → logprob: -3.7798993587493896
    7. '' → logprob: -4.654899597167969
    8. '+' → logprob: -4.779899597167969
    9. '2' → logprob: -4.904899597167969
    10. '
' → logprob: -5.279899597167969

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013081294484436512
    2. ' ' → logprob: -4.388081073760986
    3. 'i' → logprob: -7.888081073760986
    4. ' _' → logprob: -8.638081550598145
    5. '_' → logprob: -11.513081550598145
    6. '	i' → logprob: -12.763081550598145
    7. ' x' → logprob: -12.888081550598145
    8. ' ' → logprob: -13.888081550598145
    9. '  ' → logprob: -14.013081550598145
    10. ' in' → logprob: -14.888081550598145

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006877222564071417
    2. 'in' → logprob: -5.131877422332764
    3. ' ' → logprob: -7.006877422332764
    4. '	in' → logprob: -11.256876945495605
    5. '+' → logprob: -11.506876945495605
    6. '1' → logprob: -12.131876945495605
    7. '<|end|>' → logprob: -12.131876945495605
    8. '  ' → logprob: -12.881876945495605
    9. ' i' → logprob: -13.256876945495605
    10. '<|end|>' → logprob: -14.256876945495605

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0028763189911842346
    2. ' ' → logprob: -6.502876281738281
    3. 'range' → logprob: -6.627876281738281
    4. ' xrange' → logprob: -10.877876281738281
    5. '	range' → logprob: -11.127876281738281
    6. '  ' → logprob: -11.502876281738281
    7. ' in' → logprob: -12.502876281738281
    8. '(range' → logprob: -13.877876281738281
    9. ' space' → logprob: -14.002876281738281
    10. ' ' → logprob: -15.377876281738281

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017958412354346365
    2. ' (' → logprob: -8.750179290771484
    3. '1' → logprob: -11.125179290771484
    4. ' ' → logprob: -12.875179290771484
    5. '(
' → logprob: -12.875179290771484
    6. '2' → logprob: -15.125179290771484
    7. '(X' → logprob: -15.125179290771484
    8. '(len' → logprob: -16.375179290771484
    9. '   ' → logprob: -16.500179290771484
    10. '(

' → logprob: -16.750179290771484

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062489669770002365
    2. ' ' → logprob: -2.8124897480010986
    3. '2' → logprob: -7.5624895095825195
    4. ')' → logprob: -13.81248950958252
    5. '   ' → logprob: -13.81248950958252
    6. '  ' → logprob: -16.062490463256836
    7. ' )' → logprob: -16.437490463256836
    8. '(' → logprob: -17.062490463256836
    9. '    ' → logprob: -17.562490463256836
    10. '```' → logprob: -17.562490463256836

Token 84: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6374526619911194
    2. ',' → logprob: -0.7624526619911194
    3. ' )' → logprob: -6.012452602386475
    4. ')' → logprob: -6.762452602386475
    5. ' ' → logprob: -7.387452602386475
    6. ' ):' → logprob: -7.637452602386475
    7. '):' → logprob: -9.637453079223633
    8. ' ),' → logprob: -10.887453079223633
    9. ',X' → logprob: -10.887453079223633
    10. ',len' → logprob: -11.887453079223633

Token 85: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.20146147906780243
    2. 'X' → logprob: -1.7014614343643188
    3. ' len' → logprob: -10.576461791992188
    4. 'len' → logprob: -10.951461791992188
    5. ' ' → logprob: -12.701461791992188
    6. '   ' → logprob: -14.326461791992188
    7. '100' → logprob: -14.701461791992188
    8. '    ' → logprob: -14.951461791992188
    9. '  ' → logprob: -15.201461791992188
    10. '10' → logprob: -15.451461791992188

Token 86: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11266744881868362
    2. '*' → logprob: -2.3626675605773926
    3. '+' → logprob: -4.862667560577393
    4. ' +' → logprob: -5.487667560577393
    5. ' ' → logprob: -8.362667083740234
    6. ')' → logprob: -8.862667083740234
    7. '**' → logprob: -10.362667083740234
    8. '):' → logprob: -10.737667083740234
    9. '<|end|>' → logprob: -11.362667083740234
    10. ' **' → logprob: -11.862667083740234

Token 87: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1427493542432785
    2. ' X' → logprob: -2.017749309539795
    3. ' ' → logprob: -10.267749786376953
    4. '	X' → logprob: -11.142749786376953
    5. ')' → logprob: -11.767749786376953
    6. ' )' → logprob: -12.142749786376953
    7. '1' → logprob: -13.142749786376953
    8. '   ' → logprob: -13.142749786376953
    9. '100' → logprob: -13.517749786376953
    10. '2' → logprob: -13.767749786376953

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012422556756064296
    2. ' ):' → logprob: -6.876242160797119
    3. '):
' → logprob: -9.251242637634277
    4. '+' → logprob: -9.751242637634277
    5. ')' → logprob: -10.001242637634277
    6. ':' → logprob: -11.751242637634277
    7. ']:' → logprob: -14.251242637634277
    8. ' +' → logprob: -14.876242637634277
    9. ' ):
' → logprob: -15.001242637634277
    10. ' )' → logprob: -15.751242637634277

Token 89: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10881689935922623
    2. ' :' → logprob: -2.6088168621063232
    3. '):' → logprob: -3.7338168621063232
    4. ' ):' → logprob: -5.483817100524902
    5. ')' → logprob: -7.233817100524902
    6. ' :
' → logprob: -9.233817100524902
    7. ' ' → logprob: -9.358817100524902
    8. ',' → logprob: -9.483817100524902
    9. ' ,' → logprob: -9.608817100524902
    10. ' )' → logprob: -9.983817100524902

Token 90: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.7868145108222961
    2. ' fact' → logprob: -0.9118145108222961
    3. ' ' → logprob: -2.0368144512176514
    4. '    ' → logprob: -5.2868146896362305
    5. '_fact' → logprob: -5.2868146896362305
    6. ' Fact' → logprob: -7.6618146896362305
    7. '.fact' → logprob: -8.16181468963623
    8. ' )' → logprob: -8.16181468963623
    9. ' i' → logprob: -8.28681468963623
    10. 'Fact' → logprob: -8.53681468963623

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06197473779320717
    2. '[' → logprob: -2.8119747638702393
    3. '[I' → logprob: -12.68697452545166
    4. '[...]' → logprob: -14.56197452545166
    5. ' [' → logprob: -14.68697452545166
    6. '[f' → logprob: -15.06197452545166
    7. '```' → logprob: -15.06197452545166
    8. ' ' → logprob: -15.06197452545166
    9. '\[' → logprob: -15.06197452545166
    10. '[index' → logprob: -15.18697452545166

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3768831193447113
    2. ')' → logprob: -1.5018831491470337
    3. '=' → logprob: -3.251883029937744
    4. ' ' → logprob: -3.251883029937744
    5. ' =' → logprob: -5.001883029937744
    6. '*' → logprob: -5.751883029937744
    7. ']=' → logprob: -6.626883029937744
    8. ' ]' → logprob: -7.126883029937744
    9. ')=' → logprob: -7.126883029937744
    10. ' )' → logprob: -7.876883029937744

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025649517774582
    2. ' =' → logprob: -2.3502564430236816
    3. '*=' → logprob: -10.35025691986084
    4. ' *=' → logprob: -11.10025691986084
    5. '=i' → logprob: -13.97525691986084
    6. '=

' → logprob: -15.47525691986084
    7. ']=' → logprob: -15.72525691986084
    8. ' ' → logprob: -16.225255966186523
    9. '＝' → logprob: -16.350255966186523
    10. ')=' → logprob: -16.350255966186523

Token 94: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.01452050544321537
    2. 'fact' → logprob: -4.264520645141602
    3. ' (' → logprob: -8.014520645141602
    4. '_fact' → logprob: -11.514520645141602
    5. ' factorial' → logprob: -12.139520645141602
    6. '(' → logprob: -12.639520645141602
    7. ' fakt' → logprob: -12.639520645141602
    8. '.fact' → logprob: -13.514520645141602
    9. ' facto' → logprob: -14.139520645141602
    10. ' factor' → logprob: -14.514520645141602

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008072483469732106
    2. '[' → logprob: -7.125807285308838
    3. '[-' → logprob: -14.00080680847168
    4. '```' → logprob: -14.00080680847168
    5. '[
' → logprob: -14.50080680847168
    6. ' [' → logprob: -14.87580680847168
    7. '[I' → logprob: -16.62580680847168
    8. ' ' → logprob: -17.12580680847168
    9. 'i' → logprob: -17.12580680847168
    10. '*' → logprob: -17.12580680847168

Token 96: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03896362707018852
    2. ' -' → logprob: -3.288963556289673
    3. '*' → logprob: -7.288963794708252
    4. ' *' → logprob: -8.538963317871094
    5. ' ' → logprob: -11.038963317871094
    6. '[i' → logprob: -11.788963317871094
    7. ']' → logprob: -11.913963317871094
    8. '*i' → logprob: -12.788963317871094
    9. '[' → logprob: -13.288963317871094
    10. '-i' → logprob: -13.663963317871094

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615515194833279
    2. ' ' → logprob: -4.758615493774414
    3. ']' → logprob: -14.758615493774414
    4. ' ]' → logprob: -15.258615493774414
    5. ' ' → logprob: -16.258615493774414
    6. '```' → logprob: -16.258615493774414
    7. '   ' → logprob: -17.008615493774414
    8. '    ' → logprob: -17.258615493774414
    9. ')' → logprob: -17.758615493774414
    10. ' i' → logprob: -18.008615493774414

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.875001907348633
    4. '<|end|>' → logprob: -17.187501907348633
    5. ']' → logprob: -17.500001907348633
    6. '  ' → logprob: -17.687501907348633
    7. '```' → logprob: -18.437501907348633
    8. '    ' → logprob: -18.562501907348633
    9. '১' → logprob: -19.000001907348633
    10. 'import' → logprob: -19.375001907348633

Token 99: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10031266510486603
    2. '*' → logprob: -2.3503127098083496
    3. '*i' → logprob: -9.225312232971191
    4. ' ' → logprob: -12.475312232971191
    5. ' ' → logprob: -12.850312232971191
    6. ')' → logprob: -14.975312232971191
    7. '**' → logprob: -15.975312232971191
    8. '```' → logprob: -15.975312232971191
    9. ']' → logprob: -16.600313186645508
    10. '*object' → logprob: -16.975313186645508

Token 100: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2526428699493408
    2. ' *' → logprob: -1.5026428699493408
    3. '*i' → logprob: -7.252642631530762
    4. '*(' → logprob: -13.377642631530762
    5. ' ' → logprob: -13.752642631530762
    6. ' ' → logprob: -13.752642631530762
    7. '*object' → logprob: -14.502642631530762
    8. '**' → logprob: -15.127642631530762
    9. '*A' → logprob: -15.377642631530762
    10. '*u' → logprob: -16.377643585205078

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141392946243286
    2. 'i' → logprob: -1.701413869857788
    3. '	i' → logprob: -14.576414108276367
    4. ' ' → logprob: -15.951414108276367
    5. ' ' → logprob: -17.326414108276367
    6. '    ' → logprob: -18.326414108276367
    7. '   ' → logprob: -18.576414108276367
    8. '(i' → logprob: -19.201414108276367
    9. 'I' → logprob: -19.826414108276367
    10. '<|end|>' → logprob: -19.826414108276367

Token 102: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0013289296766743064
    2. '%' → logprob: -6.626328945159912
    3. ' ' → logprob: -13.626328468322754
    4. ' %
' → logprob: -14.251328468322754
    5. '%i' → logprob: -14.501328468322754
    6. ' ' → logprob: -14.751328468322754
    7. ' %=' → logprob: -15.751328468322754
    8. '%n' → logprob: -17.12632942199707
    9. '%A' → logprob: -17.25132942199707
    10. '%B' → logprob: -17.62632942199707

Token 103: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.029752103611826897
    2. ' MOD' → logprob: -3.529752016067505
    3. '(M' → logprob: -13.904751777648926
    4. '_MOD' → logprob: -15.154751777648926
    5. '.MOD' → logprob: -15.529751777648926
    6. ' ' → logprob: -16.029752731323242
    7. ' ' → logprob: -16.529752731323242
    8. ' (' → logprob: -16.654752731323242
    9. '(mod' → logprob: -17.779752731323242
    10. '(' → logprob: -17.904752731323242

Token 104: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.276294082403183
    2. '<|end|>' → logprob: -2.026293992996216
    3. '   ' → logprob: -2.526293992996216
    4. ')' → logprob: -5.151294231414795
    5. '[' → logprob: -5.526294231414795
    6. '    
' → logprob: -5.526294231414795
    7. '' → logprob: -5.651294231414795
    8. ']' → logprob: -6.026294231414795
    9. ' 
' → logprob: -6.151294231414795
    10. ' ' → logprob: -6.526294231414795

Token 106: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32545533776283264
    2. ']' → logprob: -2.5754554271698
    3. '
' → logprob: -2.9504554271698
    4. ' ' → logprob: -3.0754554271698
    5. ')' → logprob: -3.4504554271698
    6. ',' → logprob: -4.200455188751221
    7. '   ' → logprob: -4.325455188751221
    8. '' → logprob: -4.575455188751221
    9. ' 
' → logprob: -5.450455188751221
    10. '0' → logprob: -5.700455188751221

Token 107: ' Calcul' (ID: 57243)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.3548870384693146
    2. 'inv' → logprob: -1.3548870086669922
    3. 'inverse' → logprob: -3.729887008666992
    4. ' inverse' → logprob: -4.229887008666992
    5. 'in' → logprob: -6.729887008666992
    6. 'pow' → logprob: -7.854887008666992
    7. ' pow' → logprob: -9.229887008666992
    8. 'fact' → logprob: -9.854887008666992
    9. ' i' → logprob: -9.854887008666992
    10. ' in' → logprob: -10.104887008666992

Token 108: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3175695836544037
    2. ' ' → logprob: -2.4425694942474365
    3. '_' → logprob: -2.8175694942474365
    4. '   ' → logprob: -3.1925694942474365
    5. ']' → logprob: -3.4425694942474365
    6. ')' → logprob: -3.8175694942474365
    7. '    ' → logprob: -5.192569732666016
    8. ',' → logprob: -5.692569732666016
    9. '<|end|>' → logprob: -5.692569732666016
    10. '  ' → logprob: -5.817569732666016

Token 109: ' invers' (ID: 38721)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.17196966707706451
    2. ' inv' → logprob: -2.5469696521759033
    3. 'inverse' → logprob: -3.2969696521759033
    4. 'in' → logprob: -3.5469696521759033
    5. ' inverse' → logprob: -4.921969890594482
    6. ' invers' → logprob: -5.421969890594482
    7. 'pow' → logprob: -7.421969890594482
    8. 'fact' → logprob: -7.796969890594482
    9. 'i' → logprob: -8.796969413757324
    10. ' ' → logprob: -9.171969413757324

Token 110: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -5.3358446166384965e-05
    2. 'e' → logprob: -10.375053405761719
    3. 'ves' → logprob: -11.875053405761719
    4. '[' → logprob: -12.250053405761719
    5. 'v' → logprob: -13.000053405761719
    6. 's' → logprob: -13.250053405761719
    7. '   ' → logprob: -14.000053405761719
    8. 'ues' → logprob: -14.125053405761719
    9. 'eses' → logprob: -14.125053405761719
    10. '```' → logprob: -14.750053405761719

Token 111: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9592076539993286
    2. '_' → logprob: -1.5842076539993286
    3. ',' → logprob: -2.084207534790039
    4. ' ' → logprob: -2.709207534790039
    5. '<|end|>' → logprob: -2.834207534790039
    6. ' =' → logprob: -3.459207534790039
    7. '_fact' → logprob: -3.959207534790039
    8. 'fact' → logprob: -4.084207534790039
    9. '   ' → logprob: -4.459207534790039
    10. ')' → logprob: -4.584207534790039

Token 112: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.012380260042846203
    2. ' fact' → logprob: -5.012380123138428
    3. 'factor' → logprob: -5.387380123138428
    4. '<|end|>' → logprob: -7.387380123138428
    5. '[' → logprob: -9.012380599975586
    6. 'fac' → logprob: -9.762380599975586
    7. '```' → logprob: -10.262380599975586
    8. '`' → logprob: -10.637380599975586
    9. '[]' → logprob: -10.637380599975586
    10. 'f' → logprob: -11.012380599975586

Token 113: 'ori' (ID: 6510)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1371646523475647
    2. 'or' → logprob: -2.63716459274292
    3. '[' → logprob: -3.76216459274292
    4. 'i' → logprob: -4.63716459274292
    5. '[]' → logprob: -5.01216459274292
    6. 'orial' → logprob: -5.38716459274292
    7. 'oria' → logprob: -5.63716459274292
    8. 'fact' → logprob: -6.13716459274292
    9. ' ' → logprob: -7.26216459274292
    10. 'ori' → logprob: -7.38716459274292

Token 114: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.6989697813987732
    2. 'elles' → logprob: -0.6989697813987732
    3. 'es' → logprob: -5.573969841003418
    4. 'el' → logprob: -7.198969841003418
    5. 's' → logprob: -7.323969841003418
    6. 'als' → logprob: -8.823969841003418
    7. 'eles' → logprob: -9.073969841003418
    8. '```' → logprob: -9.323969841003418
    9. 'al' → logprob: -9.948969841003418
    10. 'ales' → logprob: -10.073969841003418

Token 115: ' via' (ID: 4493)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.16839183866977692
    2. '   ' → logprob: -3.2933919429779053
    3. '_inv' → logprob: -3.2933919429779053
    4. '[' → logprob: -3.5433919429779053
    5. '
' → logprob: -3.7933919429779053
    6. 'inverse' → logprob: -4.668391704559326
    7. '```' → logprob: -5.543391704559326
    8. ',' → logprob: -6.043391704559326
    9. 'fact' → logprob: -6.043391704559326
    10. '_inverse' → logprob: -6.043391704559326

Token 116: ' Ferm' (ID: 156422)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.32722413539886475
    2. ' pow' → logprob: -1.9522241353988647
    3. ' la' → logprob: -2.7022242546081543
    4. 'l' → logprob: -3.7022242546081543
    5. ' l' → logprob: -3.8272242546081543
    6. '```' → logprob: -4.827224254608154
    7. ' Ferm' → logprob: -5.202224254608154
    8. '_pow' → logprob: -6.202224254608154
    9. '(pow' → logprob: -6.202224254608154
    10. 'la' → logprob: -6.702224254608154

Token 117: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0003556039300747216
    2. 'a' → logprob: -9.00035572052002
    3. 'ât' → logprob: -9.62535572052002
    4. '-' → logprob: -10.00035572052002
    5. 't' → logprob: -10.50035572052002
    6. 'ат' → logprob: -11.00035572052002
    7. '+' → logprob: -11.37535572052002
    8. '-at' → logprob: -11.37535572052002
    9. 'à' → logprob: -11.50035572052002
    10. 'até' → logprob: -11.87535572052002

Token 118: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08192545175552368
    2. '```' → logprob: -3.331925392150879
    3. '[' → logprob: -4.831925392150879
    4. 's' → logprob: -4.956925392150879
    5. '<|end|>' → logprob: -5.206925392150879
    6. '  ' → logprob: -5.206925392150879
    7. ' ' → logprob: -5.956925392150879
    8. ',' → logprob: -6.081925392150879
    9. '**' → logprob: -6.456925392150879
    10. '
' → logprob: -6.831925392150879

Token 119: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07780594378709793
    2. 'pow' → logprob: -3.077805995941162
    3. '   ' → logprob: -4.327805995941162
    4. ' pow' → logprob: -4.827805995941162
    5. 'def' → logprob: -5.952805995941162
    6. ' )' → logprob: -6.702805995941162
    7. '<|end|>' → logprob: -7.077805995941162
    8. '    ' → logprob: -7.577805995941162
    9. '  ' → logprob: -7.952805995941162
    10. '```' → logprob: -8.077805519104004

Token 120: ' MOD' (ID: 32868)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.2904847860336304
    2. '   ' → logprob: -1.6654847860336304
    3. ' ' → logprob: -2.16548490524292
    4. ' MOD' → logprob: -2.29048490524292
    5. 'MOD' → logprob: -2.29048490524292
    6. ' le' → logprob: -3.29048490524292
    7. 'p' → logprob: -3.54048490524292
    8. ' pow' → logprob: -4.16548490524292
    9. 'prime' → logprob: -4.29048490524292
    10. ')' → logprob: -4.54048490524292

Token 121: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22752048075199127
    2. '-' → logprob: -2.10252046585083
    3. ' -' → logprob: -3.22752046585083
    4. ')' → logprob: -3.97752046585083
    5. ' est' → logprob: -4.10252046585083
    6. 'is' → logprob: -5.35252046585083
    7. '```' → logprob: -7.10252046585083
    8. '<|end|>' → logprob: -8.727520942687988
    9. '   ' → logprob: -8.852520942687988
    10. ' n' → logprob: -8.977520942687988

Token 122: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.003666348522529006
    2. 'prime' → logprob: -6.253666400909424
    3. 'un' → logprob: -7.128666400909424
    4. ' premier' → logprob: -7.253666400909424
    5. 'prima' → logprob: -8.628665924072266
    6. '   ' → logprob: -11.753665924072266
    7. '```' → logprob: -11.753665924072266
    8. 'Premier' → logprob: -12.128665924072266
    9. ' un' → logprob: -12.128665924072266
    10. 'pr' → logprob: -12.628665924072266

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005068036844022572
    2. '):' → logprob: -8.375506401062012
    3. '   ' → logprob: -8.750506401062012
    4. ')
' → logprob: -9.500506401062012
    5. ' )' → logprob: -11.000506401062012
    6. ')

' → logprob: -11.875506401062012
    7. ',' → logprob: -12.500506401062012
    8. '):
' → logprob: -12.750506401062012
    9. '):

' → logprob: -12.875506401062012
    10. '```' → logprob: -13.375506401062012

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43543580174446106
    2. '
' → logprob: -1.0604357719421387
    3. '```' → logprob: -6.185435771942139
    4. '    
' → logprob: -6.435435771942139
    5. '[' → logprob: -7.310435771942139
    6. '  
' → logprob: -7.435435771942139
    7. ' 
' → logprob: -7.935435771942139
    8. ',' → logprob: -8.435436248779297
    9. 'fact' → logprob: -8.435436248779297
    10. '<|end|>' → logprob: -8.685436248779297

Token 125: ' fact' (ID: 2840)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.39265257120132446
    2. ' inv' → logprob: -1.1426525115966797
    3. '   ' → logprob: -5.64265251159668
    4. '
' → logprob: -7.39265251159668
    5. 'inverse' → logprob: -7.76765251159668
    6. 'fact' (adapté à ' fact') → logprob: -8.39265251159668
    7. ' inverse' → logprob: -8.39265251159668
    8. ' fact' → logprob: -8.39265251159668
    9. '_inv' → logprob: -8.64265251159668
    10. 'in' → logprob: -9.26765251159668

Token 126: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.009302431717514992
    2. '_inverse' → logprob: -4.759302616119385
    3. 'inv' → logprob: -8.134302139282227
    4. '_' → logprob: -8.134302139282227
    5. '_in' → logprob: -10.009302139282227
    6. '_INV' → logprob: -10.634302139282227
    7. 'Inv' → logprob: -12.009302139282227
    8. 'inverse' → logprob: -12.134302139282227
    9. '_i' → logprob: -12.259302139282227
    10. '   ' → logprob: -12.634302139282227

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869588077068329
    2. '=' → logprob: -1.1369588375091553
    3. '[' → logprob: -9.636959075927734
    4. '=[' → logprob: -11.761959075927734
    5. 's' → logprob: -11.886959075927734
    6. '_' → logprob: -13.011959075927734
    7. ']' → logprob: -13.386959075927734
    8. '=[]' → logprob: -14.011959075927734
    9. ' =[' → logprob: -14.011959075927734
    10. '   ' → logprob: -14.636959075927734

Token 128: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20141470432281494
    2. ' [' → logprob: -1.701414704322815
    3. '[len' → logprob: -14.576415061950684
    4. ' ' → logprob: -15.201415061950684
    5. '[i' → logprob: -15.951415061950684
    6. '[n' → logprob: -16.701414108276367
    7. 'fact' → logprob: -16.951414108276367
    8. '[f' → logprob: -17.576414108276367
    9. '[int' → logprob: -17.701414108276367
    10. '   ' → logprob: -17.826414108276367

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.000046730041504
    3. '0' → logprob: -14.875046730041504
    4. ']' → logprob: -15.250046730041504
    5. 'None' → logprob: -16.000045776367188
    6. '[' → logprob: -16.375045776367188
    7. '(' → logprob: -16.375045776367188
    8. ',' → logprob: -17.375045776367188
    9. '```' → logprob: -17.375045776367188
    10. ')' → logprob: -17.750045776367188

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.4849443838757e-06
    2. '*' → logprob: -13.500004768371582
    3. ']*' → logprob: -13.875004768371582
    4. ' ]' → logprob: -14.000004768371582
    5. ')' → logprob: -14.750004768371582
    6. ',' → logprob: -14.750004768371582
    7. ' *' → logprob: -15.750004768371582
    8. ' ' → logprob: -15.875004768371582
    9. ']*(' → logprob: -16.125003814697266
    10. '   ' → logprob: -16.250003814697266

Token 131: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004472015891224146
    2. '*' → logprob: -5.504471778869629
    3. '[' → logprob: -8.754471778869629
    4. ']' → logprob: -9.004471778869629
    5. ' ' → logprob: -9.754471778869629
    6. ',' → logprob: -10.379471778869629
    7. ')' → logprob: -11.879471778869629
    8. ' [' → logprob: -12.754471778869629
    9. '*(' → logprob: -13.004471778869629
    10. ' ]' → logprob: -13.254471778869629

Token 132: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0019638435915112495
    2. ' (' → logprob: -6.5019636154174805
    3. '(' → logprob: -8.12696361541748
    4. '(len' → logprob: -8.75196361541748
    5. 'len' → logprob: -11.87696361541748
    6. '((' → logprob: -15.12696361541748
    7. '
' → logprob: -15.87696361541748
    8. '(XML' → logprob: -16.376964569091797
    9. '(MAX' → logprob: -16.376964569091797
    10. '  ' → logprob: -16.751964569091797

Token 133: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0017292065313085914
    2. '100' → logprob: -6.5017290115356445
    3. '(X' → logprob: -8.876729011535645
    4. ' X' → logprob: -9.876729011535645
    5. '10' → logprob: -11.001729011535645
    6. '(' → logprob: -11.501729011535645
    7. ' (' → logprob: -12.376729011535645
    8. '400' → logprob: -13.751729011535645
    9. 'len' → logprob: -14.126729011535645
    10. '   ' → logprob: -14.251729011535645

Token 134: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1269782930612564
    2. ' *' → logprob: -2.1269783973693848
    3. '**' → logprob: -10.876977920532227
    4. ' ' → logprob: -11.126977920532227
    5. '2' → logprob: -11.376977920532227
    6. '*num' → logprob: -13.751977920532227
    7. '*x' → logprob: -14.501977920532227
    8. '*object' → logprob: -14.626977920532227
    9. '<|end|>' → logprob: -14.626977920532227
    10. '0' → logprob: -15.001977920532227

Token 135: ' X' (ID: 2127)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004602080676704645
    2. 'X' → logprob: -5.879601955413818
    3. ' ' → logprob: -6.379601955413818
    4. '(' → logprob: -9.504602432250977
    5. '100' → logprob: -12.504602432250977
    6. '²' → logprob: -12.504602432250977
    7. ' X' → logprob: -12.629602432250977
    8. '(X' → logprob: -13.004602432250977
    9. '1' → logprob: -13.254602432250977
    10. '<|end|>' → logprob: -13.254602432250977

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519680857658386
    2. ')
' → logprob: -1.5019681453704834
    3. ')
' → logprob: -10.501968383789062
    4. '   ' → logprob: -12.001968383789062
    5. ')

' → logprob: -13.001968383789062
    6. ']' → logprob: -14.126968383789062
    7. ' )' → logprob: -14.626968383789062
    8. '
' → logprob: -15.001968383789062
    9. ' )
' → logprob: -15.126968383789062
    10. '[' → logprob: -15.876968383789062

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7513497471809387
    2. 'for' → logprob: -1.126349687576294
    3. ' for' → logprob: -2.126349687576294
    4. '
' → logprob: -3.251349687576294
    5. ')' → logprob: -3.501349687576294
    6. '<|end|>' → logprob: -5.001349925994873
    7. '[' → logprob: -5.126349925994873
    8. ' ' → logprob: -7.251349925994873
    9. '[
' → logprob: -8.001349449157715
    10. '    
' → logprob: -8.126349449157715

Token 138: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.002933364361524582
    2. ' fact' → logprob: -6.252933502197266
    3. '   ' → logprob: -7.377933502197266
    4. 'factor' → logprob: -8.502933502197266
    5. ')' → logprob: -9.627933502197266
    6. '_fact' → logprob: -10.627933502197266
    7. '.fact' → logprob: -10.627933502197266
    8. 'f' → logprob: -11.252933502197266
    9. '-f' → logprob: -11.752933502197266
    10. '```' → logprob: -12.002933502197266

Token 139: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.7954958821064793e-05
    2. '_INV' → logprob: -12.000018119812012
    3. 'inv' → logprob: -12.875018119812012
    4. '[_' → logprob: -12.875018119812012
    5. '[' → logprob: -13.500018119812012
    6. '_i' → logprob: -13.750018119812012
    7. '_inverse' → logprob: -14.125018119812012
    8. '_idx' → logprob: -14.250018119812012
    9. '   ' → logprob: -14.375018119812012
    10. '_inf' → logprob: -14.625018119812012

Token 140: '[X' (ID: 118621)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.001436185440979898
    2. '[' → logprob: -7.126436233520508
    3. '[X' → logprob: -7.376436233520508
    4. ' [-' → logprob: -13.126436233520508
    5. '```' → logprob: -14.376436233520508
    6. '=' → logprob: -14.501436233520508
    7. '[x' → logprob: -14.626436233520508
    8. '[len' → logprob: -15.001436233520508
    9. '][-' → logprob: -15.001436233520508
    10. ' =' → logprob: -15.376436233520508

Token 141: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0181878749281168
    2. ' *' → logprob: -4.018187999725342
    3. ' ' → logprob: -10.518187522888184
    4. '*K' → logprob: -13.018187522888184
    5. '**' → logprob: -13.143187522888184
    6. '*i' → logprob: -13.393187522888184
    7. '*S' → logprob: -14.018187522888184
    8. 'X' → logprob: -14.143187522888184
    9. ')' → logprob: -14.268187522888184
    10. '*x' → logprob: -14.393187522888184

Token 142: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0015058133285492659
    2. ' X' → logprob: -6.5015058517456055
    3. ' ' → logprob: -13.251505851745605
    4. '	X' → logprob: -14.001505851745605
    5. '_X' → logprob: -14.876505851745605
    6. '<|end|>' → logprob: -15.501505851745605
    7. '>X' → logprob: -16.25150489807129
    8. '*' → logprob: -16.50150489807129
    9. '<|end|>' → logprob: -17.00150489807129
    10. '
' → logprob: -17.25150489807129

Token 143: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022595763206482
    2. ' -' → logprob: -1.9102259874343872
    3. ']' → logprob: -14.160225868225098
    4. ' ' → logprob: -14.535225868225098
    5. ')' → logprob: -15.285225868225098
    6. '   ' → logprob: -16.410226821899414
    7. '-
' → logprob: -16.535226821899414
    8. '[' → logprob: -17.160226821899414
    9. '–' → logprob: -17.410226821899414
    10. ' -
' → logprob: -17.910226821899414

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -17.375
    5. ')' → logprob: -18.0
    6. ']' → logprob: -18.125
    7. '' → logprob: -19.25
    8. '۱' → logprob: -19.375
    9. '2' → logprob: -19.6875
    10. '`' → logprob: -19.9375

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.875
    4. ')' → logprob: -17.8125
    5. '۱' → logprob: -18.125
    6. ']' → logprob: -18.375
    7. '<|end|>' → logprob: -18.4375
    8. '' → logprob: -18.5
    9. '
' → logprob: -18.875
    10. '2' → logprob: -19.25

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1279553291387856e-05
    2. ' ]' → logprob: -11.500011444091797
    3. ']=' → logprob: -14.000011444091797
    4. ')' → logprob: -15.500011444091797
    5. '=' → logprob: -17.125011444091797
    6. '   ' → logprob: -18.250011444091797
    7. ']
' → logprob: -18.750011444091797
    8. ' ' → logprob: -19.250011444091797
    9. ')]' → logprob: -20.250011444091797
    10. ']

' → logprob: -20.500011444091797

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. ' =
' → logprob: -16.011871337890625
    4. '＝' → logprob: -16.136871337890625
    5. 'pow' → logprob: -16.261871337890625
    6. '=

' → logprob: -16.261871337890625
    7. ']' → logprob: -16.511871337890625
    8. ']=' → logprob: -16.636871337890625
    9. '=
' → logprob: -17.011871337890625
    10. '=int' → logprob: -17.011871337890625

Token 148: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0007104054093360901
    2. ' pow' → logprob: -7.250710487365723
    3. '(pow' → logprob: -14.500710487365723
    4. '   ' → logprob: -17.625709533691406
    5. '_pow' → logprob: -18.500709533691406
    6. 'power' → logprob: -19.750709533691406
    7. '1' → logprob: -20.125709533691406
    8. ' ' → logprob: -20.875709533691406
    9. 'Pow' → logprob: -21.000709533691406
    10. '.pow' → logprob: -21.875709533691406

Token 149: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.1269538253545761
    2. '(' → logprob: -2.1269538402557373
    3. 'fact' → logprob: -10.876954078674316
    4. '(
' → logprob: -12.251954078674316
    5. 'f' → logprob: -14.501954078674316
    6. '(

' → logprob: -14.876954078674316
    7. '(face' → logprob: -15.501954078674316
    8. '(fid' → logprob: -15.751954078674316
    9. '_fact' → logprob: -15.876954078674316
    10. '(freq' → logprob: -16.376953125

Token 150: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0013158319052308798
    2. 'fact' → logprob: -7.126315593719482
    3. 'a' → logprob: -8.62631607055664
    4. '(' → logprob: -8.87631607055664
    5. '(act' → logprob: -9.50131607055664
    6. '(X' → logprob: -10.25131607055664
    7. ')' → logprob: -10.50131607055664
    8. 'ac' → logprob: -10.75131607055664
    9. '(x' → logprob: -12.12631607055664
    10. '(
' → logprob: -12.25131607055664

Token 151: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.00220818561501801
    2. '[' → logprob: -6.627208232879639
    3. '[-' → logprob: -7.127208232879639
    4. '(X' → logprob: -10.12720775604248
    5. ',X' → logprob: -11.25220775604248
    6. 'X' → logprob: -12.12720775604248
    7. ' [' → logprob: -12.25220775604248
    8. ')' → logprob: -12.75220775604248
    9. ',' → logprob: -13.00220775604248
    10. '[
' → logprob: -13.12720775604248

Token 152: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.016364894807338715
    2. ' *' → logprob: -4.516365051269531
    3. 'X' → logprob: -5.266365051269531
    4. ' ' → logprob: -10.141365051269531
    5. ' X' → logprob: -10.391365051269531
    6. '[' → logprob: -11.016365051269531
    7. '**' → logprob: -11.766365051269531
    8. '>X' → logprob: -12.141365051269531
    9. '*object' → logprob: -12.391365051269531
    10. '  ' → logprob: -12.641365051269531

Token 153: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.129266067640856e-05
    2. ' X' → logprob: -11.125020980834961
    3. '(' → logprob: -13.500020980834961
    4. '(X' → logprob: -13.750020980834961
    5. '2' → logprob: -14.250020980834961
    6. '	X' → logprob: -14.500020980834961
    7. '

' → logprob: -14.625020980834961
    8. '>X' → logprob: -15.125020980834961
    9. '
' → logprob: -15.250020980834961
    10. 'XX' → logprob: -15.500020980834961

Token 154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018999001011252403
    2. '[' → logprob: -4.768999099731445
    3. ' -' → logprob: -4.768999099731445
    4. '*' → logprob: -6.893999099731445
    5. 'X' → logprob: -7.893999099731445
    6. ' ' → logprob: -8.268999099731445
    7. '[-' → logprob: -9.143999099731445
    8. '-X' → logprob: -10.768999099731445
    9. ')' → logprob: -11.018999099731445
    10. ']' → logprob: -11.143999099731445

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. ' ' → logprob: -9.875052452087402
    3. '-' → logprob: -14.750052452087402
    4. '2' → logprob: -14.937552452087402
    5. '   ' → logprob: -15.750052452087402
    6. '```' → logprob: -16.06255340576172
    7. '' → logprob: -17.18755340576172
    8. '0' → logprob: -17.43755340576172
    9. '11' → logprob: -17.43755340576172
    10. ' -' → logprob: -17.50005340576172

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.50000286102295
    3. '
' → logprob: -15.31250286102295
    4. '{' → logprob: -15.81250286102295
    5. '2' → logprob: -16.187501907348633
    6. '```' → logprob: -16.375001907348633
    7. '

' → logprob: -16.562501907348633
    8. '１' → logprob: -16.937501907348633
    9. '   ' → logprob: -17.000001907348633
    10. '-' → logprob: -17.250001907348633

Token 157: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',M' → logprob: -15.750015258789062
    4. '```' → logprob: -16.375015258789062
    5. ',
' → logprob: -17.125015258789062
    6. ')' → logprob: -17.375015258789062
    7. 'MOD' → logprob: -17.500015258789062
    8. '   ' → logprob: -17.750015258789062
    9. '‌,' → logprob: -18.000015258789062
    10. '),' → logprob: -18.000015258789062

Token 158: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01815205067396164
    2. ' MOD' → logprob: -4.018152236938477
    3. '_MOD' → logprob: -13.268152236938477
    4. '.MOD' → logprob: -15.893152236938477
    5. ' ' → logprob: -16.393152236938477
    6. 'mod' → logprob: -16.893152236938477
    7. '-' → logprob: -17.018152236938477
    8. '-M' → logprob: -17.018152236938477
    9. 'Mod' → logprob: -17.393152236938477
    10. '(Mod' → logprob: -17.518152236938477

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02324547804892063
    2. ' -' → logprob: -3.7732455730438232
    3. '−' → logprob: -18.398244857788086
    4. ' ' → logprob: -18.648244857788086
    5. '```' → logprob: -19.273244857788086
    6. '–' → logprob: -19.773244857788086
    7. ' ' → logprob: -20.648244857788086
    8. '   ' → logprob: -21.273244857788086
    9. '2' → logprob: -21.710744857788086
    10. '  ' → logprob: -21.898244857788086

Token 160: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '```' → logprob: -16.500003814697266
    5. ' -' → logprob: -16.562503814697266
    6. '

' → logprob: -16.937503814697266
    7. '۲' → logprob: -17.312503814697266
    8. '٢' → logprob: -17.750003814697266
    9. '3' → logprob: -17.812503814697266
    10. '   ' → logprob: -17.937503814697266

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -15.500000953674316
    4. '```' → logprob: -16.500001907348633
    5. '3' → logprob: -17.687501907348633
    6. '   ' → logprob: -17.750001907348633
    7. '۲' → logprob: -18.062501907348633
    8. '
' → logprob: -18.062501907348633
    9. '

' → logprob: -18.437501907348633
    10. '' → logprob: -18.625001907348633

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001054603373631835
    2. ')' → logprob: -6.876054763793945
    3. ' ,' → logprob: -10.876054763793945
    4. '   ' → logprob: -13.251054763793945
    5. ' ' → logprob: -14.876054763793945
    6. ',
' → logprob: -15.126054763793945
    7. ' )' → logprob: -15.626054763793945
    8. ',...' → logprob: -16.501054763793945
    9. '```' → logprob: -16.876054763793945
    10. '),' → logprob: -17.251054763793945

Token 163: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5760720372200012
    2. ' MOD' → logprob: -0.8260720372200012
    3. ')' → logprob: -8.951071739196777
    4. ' )' → logprob: -13.076071739196777
    5. '   ' → logprob: -14.701071739196777
    6. '_MOD' → logprob: -15.076071739196777
    7. '.MOD' → logprob: -16.451072692871094
    8. ' ' → logprob: -17.076072692871094
    9. '```' → logprob: -17.576072692871094
    10. ')
' → logprob: -18.326072692871094

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -14.750021934509277
    4. ')

' → logprob: -15.625021934509277
    5. '   ' → logprob: -17.000022888183594
    6. ')`' → logprob: -17.625022888183594
    7. ')
' → logprob: -17.625022888183594
    8. '),' → logprob: -18.000022888183594
    9. '```' → logprob: -19.000022888183594
    10. ')#' → logprob: -19.500022888183594

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022160345688462257
    2. '
' → logprob: -6.75221586227417
    3. '    
' → logprob: -7.50221586227417
    4. 'for' → logprob: -8.377216339111328
    5. ' for' → logprob: -9.502216339111328
    6. '```' → logprob: -9.627216339111328
    7. '	for' → logprob: -10.377216339111328
    8. '  
' → logprob: -10.752216339111328
    9. '' → logprob: -11.252216339111328
    10. ')' → logprob: -11.502216339111328

Token 166: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0790461003780365
    2. ')' → logprob: -2.9540460109710693
    3. '<|end|>' → logprob: -4.454046249389648
    4. '	for' → logprob: -5.704046249389648
    5. '```' → logprob: -6.579046249389648
    6. 'for' (adapté à ' for') → logprob: -6.704046249389648
    7. ' for' → logprob: -6.829046249389648
    8. ' ' → logprob: -7.204046249389648
    9. '	i' → logprob: -7.579046249389648
    10. '
' → logprob: -7.704046249389648

Token 167: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38688430190086365
    2. ' i' → logprob: -1.136884331703186
    3. '	i' → logprob: -11.511884689331055
    4. ' ' → logprob: -12.886884689331055
    5. '   ' → logprob: -15.386884689331055
    6. '```' → logprob: -15.511884689331055
    7. 'j' → logprob: -16.261884689331055
    8. '  ' → logprob: -16.636884689331055
    9. 'x' → logprob: -16.761884689331055
    10. 'I' → logprob: -17.011884689331055

Token 168: ' in' (ID: 306)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2692350149154663
    2. 'in' → logprob: -2.019235134124756
    3. ' X' → logprob: -2.644235134124756
    4. ' in' → logprob: -4.019235134124756
    5. '(X' → logprob: -4.519235134124756
    6. ',' → logprob: -6.769235134124756
    7. '	X' → logprob: -7.769235134124756
    8. ' ' → logprob: -7.769235134124756
    9. ',X' → logprob: -8.019234657287598
    10. '   ' → logprob: -8.394234657287598

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25339967012405396
    2. ' range' → logprob: -1.5033996105194092
    3. ' reversed' → logprob: -7.253399848937988
    4. 're' → logprob: -7.378399848937988
    5. '(range' → logprob: -9.628399848937988
    6. '   ' → logprob: -10.253399848937988
    7. ' ' → logprob: -10.753399848937988
    8. '  ' → logprob: -12.003399848937988
    9. ' xrange' → logprob: -12.378399848937988
    10. 'reverse' → logprob: -13.503399848937988

Token 170: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -9.329167369287461e-05
    2. '(' → logprob: -9.375093460083008
    3. 'X' → logprob: -12.500093460083008
    4. '((' → logprob: -13.000093460083008
    5. ' (' → logprob: -14.000093460083008
    6. '(F' → logprob: -14.375093460083008
    7. '(
' → logprob: -15.000093460083008
    8. '(x' → logprob: -16.125093460083008
    9. '   ' → logprob: -16.125093460083008
    10. '(range' → logprob: -16.125093460083008

Token 171: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004628176800906658
    2. ' *' → logprob: -5.3796281814575195
    3. 'X' → logprob: -12.37962818145752
    4. '**' → logprob: -13.87962818145752
    5. ' ' → logprob: -14.00462818145752
    6. '   ' → logprob: -14.37962818145752
    7. '-' → logprob: -14.87962818145752
    8. '  ' → logprob: -15.00462818145752
    9. '#' → logprob: -15.87962818145752
    10. ' -' → logprob: -16.254627227783203

Token 172: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004878723411820829
    2. '2' → logprob: -7.875487804412842
    3. '*' → logprob: -9.75048828125
    4. 'XX' → logprob: -10.25048828125
    5. '1' → logprob: -12.00048828125
    6. ' X' → logprob: -12.75048828125
    7. '100' → logprob: -13.87548828125
    8. '(X' → logprob: -14.37548828125
    9. '-' → logprob: -14.62548828125
    10. 'XL' → logprob: -14.62548828125

Token 173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048589982092380524
    2. ' -' → logprob: -3.0485899448394775
    3. '2' → logprob: -13.548589706420898
    4. ' ' → logprob: -14.423589706420898
    5. 'X' → logprob: -15.548589706420898
    6. '   ' → logprob: -15.673589706420898
    7. ')' → logprob: -16.0485897064209
    8. '[' → logprob: -16.2985897064209
    9. '1' → logprob: -16.6735897064209
    10. ',' → logprob: -16.9235897064209

Token 174: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '1' → logprob: -18.500001907348633
    5. '-' → logprob: -19.000001907348633
    6. '```' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.000001907348633
    8. '
' → logprob: -20.250001907348633
    9. '２' → logprob: -20.687501907348633
    10. '

' → logprob: -20.750001907348633

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -17.375001907348633
    4. '```' → logprob: -19.000001907348633
    5. '２' → logprob: -19.125001907348633
    6. '۲' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '
' → logprob: -20.125001907348633
    10. '

' → logprob: -21.312501907348633

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033100813161581755
    2. ' ,' → logprob: -6.253310203552246
    3. ',-' → logprob: -6.753310203552246
    4. '   ' → logprob: -8.753310203552246
    5. ' in' → logprob: -11.128310203552246
    6. '    ' → logprob: -11.753310203552246
    7. ',i' → logprob: -11.878310203552246
    8. ' ,-' → logprob: -12.003310203552246
    9. 'in' → logprob: -12.253310203552246
    10. '-' → logprob: -12.503310203552246

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036270313430577517
    2. ' -' → logprob: -5.628626823425293
    3. '   ' → logprob: -11.128626823425293
    4. '0' → logprob: -11.503626823425293
    5. ' ' → logprob: -13.378626823425293
    6. '  ' → logprob: -14.753626823425293
    7. '-i' → logprob: -15.628626823425293
    8. '    ' → logprob: -16.12862777709961
    9. '	' → logprob: -17.25362777709961
    10. '...' → logprob: -18.00362777709961

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.375
    4. '2' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. '
' → logprob: -19.125
    7. ' -' → logprob: -19.375
    8. ',' → logprob: -19.9375
    9. '１' → logprob: -20.375
    10. '-' → logprob: -20.375

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020869735162705183
    2. ',-' → logprob: -6.502087116241455
    3. '-' → logprob: -7.502087116241455
    4. ' ,' → logprob: -10.627086639404297
    5. ' -' → logprob: -13.002086639404297
    6. ',
' → logprob: -13.252086639404297
    7. '   ' → logprob: -13.377086639404297
    8. ' ,-' → logprob: -14.002086639404297
    9. '-,' → logprob: -14.377086639404297
    10. '```' → logprob: -15.502086639404297

Token 180: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003178782993927598
    2. ' -' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.128178596496582
    4. ' ' → logprob: -15.503178596496582
    5. '  ' → logprob: -16.0031795501709
    6. '```' → logprob: -18.6281795501709
    7. '<|end|>' → logprob: -18.8781795501709
    8. '-i' → logprob: -18.8781795501709
    9. ')' → logprob: -19.0031795501709
    10. '−' → logprob: -19.2531795501709

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -17.250001907348633
    4. '):
' → logprob: -18.000001907348633
    5. ',' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. '2' → logprob: -20.500001907348633
    9. '<|end|>' → logprob: -20.500001907348633
    10. '１' → logprob: -21.250001907348633

Token 182: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.168533056974411
    2. '):' → logprob: -1.9185330867767334
    3. ',' → logprob: -5.418532848358154
    4. ':' → logprob: -6.168532848358154
    5. '   ' → logprob: -6.918532848358154
    6. '):
' → logprob: -8.043533325195312
    7. '-' → logprob: -8.918533325195312
    8. ' ):
' → logprob: -9.418533325195312
    9. ':
' → logprob: -9.668533325195312
    10. ')' → logprob: -10.043533325195312

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036689721047878265
    2. ' fact' → logprob: -3.9116897583007812
    3. '<|end|>' → logprob: -4.661689758300781
    4. '   ' → logprob: -6.411689758300781
    5. ' ' → logprob: -6.661689758300781
    6. ':' → logprob: -6.786689758300781
    7. 'fact' → logprob: -8.036689758300781
    8. '    ' → logprob: -8.286689758300781
    9. ' Fact' → logprob: -8.286689758300781
    10. '):' → logprob: -8.661689758300781

Token 184: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.4772428870201111
    2. ' fact' → logprob: -0.9772428870201111
    3. '   ' → logprob: -5.852242946624756
    4. '       ' → logprob: -8.727242469787598
    5. '_fact' → logprob: -9.477242469787598
    6. '.fact' → logprob: -10.727242469787598
    7. '```' → logprob: -11.602242469787598
    8. 'Fact' → logprob: -11.852242469787598
    9. '	f' → logprob: -12.352242469787598
    10. ' fakt' → logprob: -13.102242469787598

Token 185: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -7.588793960167095e-05
    2. '_i' → logprob: -9.750076293945312
    3. '[i' → logprob: -11.375076293945312
    4. '_in' → logprob: -13.625076293945312
    5. '_' → logprob: -14.000076293945312
    6. '[_' → logprob: -14.125076293945312
    7. '_inf' → logprob: -14.375076293945312
    8. '_inverse' → logprob: -14.375076293945312
    9. '_iv' → logprob: -14.750076293945312
    10. '[' → logprob: -15.250076293945312

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012558852904476225
    2. '[' → logprob: -9.000125885009766
    3. '[I' → logprob: -14.000125885009766
    4. '```' → logprob: -14.750125885009766
    5. '[...]' → logprob: -15.750125885009766
    6. '[int' → logprob: -16.250125885009766
    7. '[next' → logprob: -16.250125885009766
    8. '\[' → logprob: -16.250125885009766
    9. '[idx' → logprob: -16.625125885009766
    10. '[
' → logprob: -16.625125885009766

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20266525447368622
    2. '=' → logprob: -1.7026652097702026
    3. ' =' → logprob: -7.327665328979492
    4. ']=' → logprob: -7.452665328979492
    5. ' ]' → logprob: -11.827665328979492
    6. ')' → logprob: -12.327665328979492
    7. '[' → logprob: -13.827665328979492
    8. ' ' → logprob: -15.077665328979492
    9. '=

' → logprob: -15.452665328979492
    10. '=
' → logprob: -15.827665328979492

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009756204672157764
    2. ' =' → logprob: -4.634756088256836
    3. '=

' → logprob: -16.509756088256836
    4. '＝' → logprob: -16.634756088256836
    5. '[' → logprob: -17.884756088256836
    6. '.=' → logprob: -18.384756088256836
    7. ']=' → logprob: -18.384756088256836
    8. ')=' → logprob: -18.509756088256836
    9. ' ' → logprob: -18.509756088256836
    10. '=
' → logprob: -18.634756088256836

Token 189: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.015207558870315552
    2. ' fact' → logprob: -4.265207767486572
    3. '(f' → logprob: -7.015207767486572
    4. ' (' → logprob: -9.390207290649414
    5. '_fact' → logprob: -10.390207290649414
    6. '(' → logprob: -11.765207290649414
    7. '.fact' → logprob: -11.890207290649414
    8. 'factor' → logprob: -12.015207290649414
    9. 'Fact' → logprob: -12.390207290649414
    10. 'facts' → logprob: -13.515207290649414

Token 190: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00015217094914987683
    2. '[i' → logprob: -9.875152587890625
    3. '[_' → logprob: -10.375152587890625
    4. '_INV' → logprob: -10.625152587890625
    5. '[' → logprob: -11.500152587890625
    6. '_i' → logprob: -11.625152587890625
    7. '```' → logprob: -12.375152587890625
    8. '_ans' → logprob: -12.500152587890625
    9. '_iv' → logprob: -12.875152587890625
    10. 'inv' → logprob: -13.125152587890625

Token 191: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.50001049041748
    3. '[
' → logprob: -16.000009536743164
    4. '[I' → logprob: -16.000009536743164
    5. 'i' → logprob: -17.625009536743164
    6. ' [' → logprob: -17.750009536743164
    7. '{i' → logprob: -19.125009536743164
    8. '[next' → logprob: -19.250009536743164
    9. '[++' → logprob: -19.375009536743164
    10. '[idx' → logprob: -19.500009536743164

Token 192: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20649762451648712
    2. '[i' → logprob: -1.7064976692199707
    3. '[' → logprob: -5.581497669219971
    4. ' +' → logprob: -7.206497669219971
    5. 'i' → logprob: -7.581497669219971
    6. '+i' → logprob: -10.831497192382812
    7. 's' → logprob: -12.456497192382812
    8. '   ' → logprob: -12.456497192382812
    9. '[I' → logprob: -12.581497192382812
    10. ']' → logprob: -12.706497192382812

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '
' → logprob: -20.500001907348633
    8. '১' → logprob: -21.750001907348633
    9. '۱' → logprob: -22.437501907348633
    10. '१' → logprob: -22.562501907348633

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '```' → logprob: -16.500001907348633
    6. '  ' → logprob: -18.125001907348633
    7. '১' → logprob: -18.937501907348633
    8. '
' → logprob: -19.250001907348633
    9. '१' → logprob: -19.500001907348633
    10. '<|end|>' → logprob: -19.562501907348633

Token 195: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10757628828287125
    2. ' *' → logprob: -2.357576370239258
    3. ')' → logprob: -5.357576370239258
    4. ']' → logprob: -6.607576370239258
    5. '*i' → logprob: -6.982576370239258
    6. ' ' → logprob: -9.107576370239258
    7. '*(' → logprob: -9.232576370239258
    8. '   ' → logprob: -9.732576370239258
    9. '}' → logprob: -11.482576370239258
    10. '**' → logprob: -11.482576370239258

Token 196: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2257152497768402
    2. ' *' → logprob: -1.6007152795791626
    3. '*(' → logprob: -8.225715637207031
    4. ' ' → logprob: -11.475715637207031
    5. '*object' → logprob: -11.850715637207031
    6. '*i' → logprob: -12.475715637207031
    7. '**' → logprob: -13.100715637207031
    8. ' ' → logprob: -13.225715637207031
    9. '```' → logprob: -13.725715637207031
    10. '`' → logprob: -13.975715637207031

Token 197: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1133035346865654
    2. ' (' → logprob: -2.2383034229278564
    3. '(' → logprob: -7.7383036613464355
    4. '[i' → logprob: -10.363303184509277
    5. '(ii' → logprob: -12.488303184509277
    6. '(
' → logprob: -12.863303184509277
    7. ' ' → logprob: -13.488303184509277
    8. '(in' → logprob: -14.238303184509277
    9. '   ' → logprob: -14.238303184509277
    10. '((' → logprob: -14.613303184509277

Token 198: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9504606825648807e-05
    2. ' i' → logprob: -11.375019073486328
    3. '   ' → logprob: -12.000019073486328
    4. '(i' → logprob: -13.250019073486328
    5. ' ' → logprob: -17.625019073486328
    6. '[i' → logprob: -17.750019073486328
    7. '	i' → logprob: -18.500019073486328
    8. '{i' → logprob: -18.500019073486328
    9. '  ' → logprob: -19.250019073486328
    10. '
' → logprob: -19.625019073486328

Token 199: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023245826363563538
    2. ' +' → logprob: -3.7732458114624023
    3. '+
' → logprob: -15.023245811462402
    4. ' +
' → logprob: -16.77324676513672
    5. '1' → logprob: -17.52324676513672
    6. '＋' → logprob: -17.77324676513672
    7. ' ' → logprob: -17.89824676513672
    8. '+i' → logprob: -18.27324676513672
    9. ' plus' → logprob: -19.14824676513672
    10. '+

' → logprob: -19.14824676513672

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.00000762939453
    4. '   ' → logprob: -17.62500762939453
    5. '
' → logprob: -18.62500762939453
    6. '<|end|>' → logprob: -18.93750762939453
    7. '  ' → logprob: -19.12500762939453
    8. ')' → logprob: -19.31250762939453
    9. '১' → logprob: -19.43750762939453
    10. '`' → logprob: -19.50000762939453

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.750003814697266
    4. '<|end|>' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.375003814697266
    6. '১' → logprob: -19.500003814697266
    7. '
' → logprob: -19.750003814697266
    8. '۱' → logprob: -20.125003814697266
    9. '१' → logprob: -20.125003814697266
    10. ')' → logprob: -20.187503814697266

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.195421494543552e-05
    2. ')%' → logprob: -10.12507152557373
    3. ' )' → logprob: -10.37507152557373
    4. '%' → logprob: -15.12507152557373
    5. '   ' → logprob: -15.37507152557373
    6. ' %' → logprob: -15.87507152557373
    7. ')
' → logprob: -17.625072479248047
    8. ']' → logprob: -18.000072479248047
    9. '))' → logprob: -19.000072479248047
    10. '%)' → logprob: -19.125072479248047

Token 203: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.009766360744833946
    2. '%' → logprob: -4.634766578674316
    3. ' ' → logprob: -12.509766578674316
    4. '	' → logprob: -13.384766578674316
    5. ' %=' → logprob: -13.384766578674316
    6. ' %
' → logprob: -13.384766578674316
    7. ')' → logprob: -14.134766578674316
    8. ')%' → logprob: -14.259766578674316
    9. ' ' → logprob: -15.509766578674316
    10. '```' → logprob: -15.509766578674316

Token 204: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00861456897109747
    2. ' MOD' → logprob: -4.758614540100098
    3. '_MOD' → logprob: -17.258615493774414
    4. '.MOD' → logprob: -19.383615493774414
    5. 'MO' → logprob: -20.883615493774414
    6. ' ' → logprob: -21.258615493774414
    7. 'mod' → logprob: -21.633615493774414
    8. '```' → logprob: -22.008615493774414
    9. 'M' → logprob: -22.258615493774414
    10. ' ' → logprob: -22.383615493774414

Token 205: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15838494896888733
    2. '<|end|>' → logprob: -2.5333850383758545
    3. '
' → logprob: -3.7833850383758545
    4. '    
' → logprob: -3.9083850383758545
    5. 'def' → logprob: -4.533384799957275
    6. ')' → logprob: -4.783384799957275
    7. '```' → logprob: -6.658384799957275
    8. '  
' → logprob: -7.033384799957275
    9. ' 
' → logprob: -7.533384799957275
    10. '<|end|>' → logprob: -7.658384799957275

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21167567372322083
    2. '<|end|>' → logprob: -2.4616756439208984
    3. 'def' → logprob: -2.7116756439208984
    4. '
' → logprob: -3.9616756439208984
    5. ')' → logprob: -4.461675643920898
    6. '    
' → logprob: -5.586675643920898
    7. ' def' → logprob: -6.086675643920898
    8. '<|end|>' → logprob: -7.586675643920898
    9. '```' → logprob: -7.711675643920898
    10. ']' → logprob: -8.336675643920898

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06883447617292404
    2. 'def' → logprob: -3.3188345432281494
    3. ')' → logprob: -4.44383430480957
    4. '
' → logprob: -4.94383430480957
    5. '```' → logprob: -5.44383430480957
    6. '    
' → logprob: -6.06883430480957
    7. ' ' → logprob: -7.06883430480957
    8. ' def' → logprob: -7.19383430480957
    9. '' → logprob: -7.44383430480957
    10. '  ' → logprob: -7.69383430480957

Token 208: ' Calcul' (ID: 57243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001350234029814601
    2. ' def' → logprob: -6.626350402832031
    3. 'from' → logprob: -12.001350402832031
    4. 'comb' → logprob: -12.001350402832031
    5. '```' → logprob: -12.251350402832031
    6. '   ' → logprob: -12.876350402832031
    7. 'import' → logprob: -13.126350402832031
    8. '#' → logprob: -14.001350402832031
    9. 'n' → logprob: -14.876350402832031
    10. '
' → logprob: -15.376350402832031

Token 209: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006949561182409525
    2. ' des' → logprob: -5.881949424743652
    3. ' def' → logprob: -6.131949424743652
    4. 'des' → logprob: -7.006949424743652
    5. ' de' → logprob: -7.881949424743652
    6. '   ' → logprob: -8.756949424743652
    7. ' of' → logprob: -9.006949424743652
    8. 's' → logprob: -9.381949424743652
    9. ')' → logprob: -9.881949424743652
    10. '(' → logprob: -10.256949424743652

Token 210: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.19956852495670319
    2. 'def' → logprob: -1.824568510055542
    3. 'n' → logprob: -5.324568748474121
    4. 'com' → logprob: -5.574568748474121
    5. ' comb' → logprob: -5.699568748474121
    6. 'C' → logprob: -5.699568748474121
    7. 'inv' → logprob: -7.324568748474121
    8. 'bin' → logprob: -7.574568748474121
    9. 'coeff' → logprob: -7.949568748474121
    10. 'res' → logprob: -8.074568748474121

Token 211: 'inais' (ID: 42744)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -1.264304757118225
    2. '(' → logprob: -1.389304757118225
    3. '(n' → logprob: -2.1393046379089355
    4. '()' → logprob: -2.2643046379089355
    5. 'inais' → logprob: -2.3893046379089355
    6. 'n' → logprob: -2.7643046379089355
    7. 'in' → logprob: -3.2643046379089355
    8. 'ination' → logprob: -4.0143046379089355
    9. 'inations' → logprob: -4.8893046379089355
    10. '(i' → logprob: -5.6393046379089355

Token 212: 'ons' (ID: 1808)
  Prédit: 'sons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sons' → logprob: -0.5766487121582031
    2. 'n' → logprob: -1.2016487121582031
    3. 'ais' → logprob: -2.701648712158203
    4. 'son' → logprob: -3.951648712158203
    5. 'ons' → logprob: -3.951648712158203
    6. 'na' → logprob: -4.576648712158203
    7. 'asons' → logprob: -5.201648712158203
    8. 's' → logprob: -5.951648712158203
    9. 'a' → logprob: -6.076648712158203
    10. '#' → logprob: -6.201648712158203

Token 213: ' altern' (ID: 7310)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010018374770879745
    2. ' def' → logprob: -4.885018348693848
    3. '
' → logprob: -6.135018348693848
    4. '   ' → logprob: -9.760018348693848
    5. '    
' → logprob: -9.760018348693848
    6. ' 
' → logprob: -10.510018348693848
    7. '

' → logprob: -11.010018348693848
    8. '(' → logprob: -11.260018348693848
    9. '```' → logprob: -11.635018348693848
    10. '(
' → logprob: -11.885018348693848

Token 214: 'ées' (ID: 5161)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016641266644001007
    2. 'inais' → logprob: -5.766641139984131
    3. 'inations' → logprob: -5.891641139984131
    4. 'e' → logprob: -6.016641139984131
    5. ' def' → logprob: -6.766641139984131
    6. '[' → logprob: -6.766641139984131
    7. '(' → logprob: -7.016641139984131
    8. 'ations' → logprob: -7.641641139984131
    9. '[i' → logprob: -7.766641139984131
    10. '+' → logprob: -7.766641139984131

Token 215: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06411139667034149
    2. 'for' → logprob: -3.9391114711761475
    3. ' for' → logprob: -4.314111232757568
    4. ' def' → logprob: -4.564111232757568
    5. '   ' → logprob: -4.689111232757568
    6. 's' → logprob: -6.439111232757568
    7. '[' → logprob: -6.564111232757568
    8. '
' → logprob: -6.939111232757568
    9. ' =' → logprob: -7.189111232757568
    10. '```' → logprob: -7.564111232757568

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011273691430687904
    2. 'def' → logprob: -5.2612738609313965
    3. ' for' → logprob: -5.7612738609313965
    4. 'for' → logprob: -6.8862738609313965
    5. ')' → logprob: -7.7612738609313965
    6. '    
' → logprob: -8.511273384094238
    7. '<|end|>' → logprob: -8.636273384094238
    8. '[' → logprob: -9.011273384094238
    9. '    ' → logprob: -9.136273384094238
    10. 'n' → logprob: -9.386273384094238

Token 217: ' U' (ID: 601)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.1430219411849976
    2. 'def' → logprob: -2.018022060394287
    3. ' comb' → logprob: -2.143022060394287
    4. 'dp' → logprob: -2.268022060394287
    5. ' def' → logprob: -3.018022060394287
    6. 'res' → logprob: -3.518022060394287
    7. ' C' → logprob: -3.643022060394287
    8. 'C' → logprob: -3.768022060394287
    9. ' ans' → logprob: -3.893022060394287
    10. ' alt' → logprob: -3.893022060394287

Token 218: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.687389075756073
    2. ' =' → logprob: -0.812389075756073
    3. '=' → logprob: -3.0623891353607178
    4. 'se' → logprob: -6.562388896942139
    5. '[' → logprob: -7.312388896942139
    6. 'dp' → logprob: -7.437388896942139
    7. 'ntil' → logprob: -7.687388896942139
    8. 'C' → logprob: -7.937388896942139
    9. 'pper' → logprob: -7.937388896942139
    10. 'P' → logprob: -7.937388896942139

Token 219: ' N' (ID: 478)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[R' → logprob: -1.1945772171020508
    2. 'R' → logprob: -1.5695772171020508
    3. ' [' → logprob: -1.5695772171020508
    4. '[L' → logprob: -2.694577217102051
    5. ' R' → logprob: -3.194577217102051
    6. '[' → logprob: -3.194577217102051
    7. '[M' → logprob: -3.444577217102051
    8. 'L' → logprob: -3.694577217102051
    9. '0' → logprob: -3.944577217102051
    10. 'M' → logprob: -4.444577217102051

Token 220: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6393601298332214
    2. ' +' → logprob: -0.7643601298332214
    3. ' *' → logprob: -5.764359951019287
    4. ',' → logprob: -7.389359951019287
    5. '   ' → logprob: -7.389359951019287
    6. 'def' → logprob: -7.389359951019287
    7. '*' → logprob: -7.514359951019287
    8. '[' → logprob: -8.514360427856445
    9. 'import' → logprob: -8.639360427856445
    10. '-' → logprob: -8.764360427856445

Token 221: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8380640149116516
    2. 'L' → logprob: -1.2130639553070068
    3. '1' → logprob: -1.3380639553070068
    4. 'R' → logprob: -5.963064193725586
    5. '2' → logprob: -6.838064193725586
    6. ' M' → logprob: -6.963064193725586
    7. '(L' → logprob: -7.213064193725586
    8. '(M' → logprob: -7.463064193725586
    9. ' L' → logprob: -7.588064193725586
    10. ' ' → logprob: -7.838064193725586

Token 222: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29002097249031067
    2. ' +' → logprob: -1.5400209426879883
    3. '   ' → logprob: -3.9150209426879883
    4. '
' → logprob: -4.415020942687988
    5. ' ' → logprob: -6.915020942687988
    6. '<|end|>' → logprob: -7.165020942687988
    7. ')' → logprob: -7.415020942687988
    8. ' 
' → logprob: -7.415020942687988
    9. '<|end|>' → logprob: -7.790020942687988
    10. '    
' → logprob: -7.915020942687988

Token 223: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.527918815612793
    2. '   ' → logprob: -1.152918815612793
    3. '+' → logprob: -2.777918815612793
    4. ' +' → logprob: -4.902918815612793
    5. '<|end|>' → logprob: -4.902918815612793
    6. ' 
' → logprob: -5.152918815612793
    7. '    
' → logprob: -5.652918815612793
    8. ' ' → logprob: -5.902918815612793
    9. '  
' → logprob: -7.027918815612793
    10. 'def' → logprob: -7.402918815612793

Token 224: ' comb' (ID: 4134)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.790091335773468
    2. 'comb' (adapté à ' comb') → logprob: -2.2900912761688232
    3. 'for' → logprob: -2.4150912761688232
    4. 'res' → logprob: -2.6650912761688232
    5. 'result' → logprob: -2.6650912761688232
    6. 'C' → logprob: -3.6650912761688232
    7. ' comb' → logprob: -3.6650912761688232
    8. ' for' → logprob: -3.7900912761688232
    9. 'ans' → logprob: -4.290091514587402
    10. ' dp' → logprob: -4.290091514587402

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4817931354045868
    2. '=' → logprob: -0.9817931652069092
    3. '[' → logprob: -6.48179292678833
    4. '=[' → logprob: -6.48179292678833
    5. 's' → logprob: -6.73179292678833
    6. 'ination' → logprob: -6.98179292678833
    7. '   ' → logprob: -7.23179292678833
    8. '=[]' → logprob: -7.98179292678833
    9. '_' → logprob: -8.231793403625488
    10. 'inations' → logprob: -8.606793403625488

Token 226: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01868092268705368
    2. ' [' → logprob: -4.018681049346924
    3. '[[' → logprob: -9.393680572509766
    4. '[u' → logprob: -9.393680572509766
    5. '[f' → logprob: -9.893680572509766
    6. '[n' → logprob: -10.018680572509766
    7. '[N' → logprob: -10.393680572509766
    8. '[i' → logprob: -10.643680572509766
    9. '[-' → logprob: -10.768680572509766
    10. '[a' → logprob: -10.893680572509766

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08405044674873352
    2. ' for' → logprob: -2.959050416946411
    3. '[' → logprob: -4.33405065536499
    4. 'for' → logprob: -4.58405065536499
    5. '(' → logprob: -6.45905065536499
    6. ' =' → logprob: -7.08405065536499
    7. ' (' → logprob: -7.33405065536499
    8. '    ' → logprob: -7.70905065536499
    9. ' ' → logprob: -8.084050178527832
    10. '(range' → logprob: -8.334050178527832

Token 228: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31606632471084595
    2. ' for' → logprob: -1.3160662651062012
    3. 'current' → logprob: -7.816066265106201
    4. '[' → logprob: -7.941066265106201
    5. '   ' → logprob: -7.941066265106201
    6. 'cur' → logprob: -8.19106674194336
    7. 'i' → logprob: -8.19106674194336
    8. 'comb' → logprob: -8.44106674194336
    9. 'curr' → logprob: -9.19106674194336
    10. 'prev' → logprob: -9.31606674194336

Token 229: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25434112548828125
    2. 'k' → logprob: -1.7543411254882812
    3. ' i' → logprob: -4.004341125488281
    4. 'u' → logprob: -4.754341125488281
    5. 'j' → logprob: -4.879341125488281
    6. 'x' → logprob: -5.254341125488281
    7. ' k' → logprob: -5.504341125488281
    8. 'd' → logprob: -6.254341125488281
    9. 'a' → logprob: -6.379341125488281
    10. 'r' → logprob: -6.629341125488281

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009890426881611347
    2. 'in' → logprob: -4.634890556335449
    3. ' ' → logprob: -9.38489055633545
    4. 'k' → logprob: -10.88489055633545
    5. ',' → logprob: -12.25989055633545
    6. '	in' → logprob: -12.38489055633545
    7. 'n' → logprob: -13.25989055633545
    8. 's' → logprob: -13.38489055633545
    9. ')' → logprob: -13.44739055633545
    10. '1' → logprob: -13.57239055633545

Token 231: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740805923938751
    2. ' range' → logprob: -0.9740805625915527
    3. '	range' → logprob: -13.599081039428711
    4. '(range' → logprob: -13.849081039428711
    5. 'comb' → logprob: -14.474081039428711
    6. ' ' → logprob: -15.599081039428711
    7. '```' → logprob: -15.849081039428711
    8. 'rang' → logprob: -16.47408103942871
    9. '[' → logprob: -16.47408103942871
    10. '.range' → logprob: -16.72408103942871

Token 232: '(U' (ID: 27452)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.43164220452308655
    2. '(' → logprob: -2.1816422939300537
    3. '(M' → logprob: -2.3066422939300537
    4. '(R' → logprob: -2.4316422939300537
    5. '(U' → logprob: -3.1816422939300537
    6. '(N' → logprob: -5.181642055511475
    7. '(k' → logprob: -6.431642055511475
    8. ' (' → logprob: -7.056642055511475
    9. '(K' → logprob: -7.931642055511475
    10. '(X' → logprob: -9.556642532348633

Token 233: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3870784342288971
    2. ' +' → logprob: -1.1370784044265747
    3. '):' → logprob: -8.887078285217285
    4. '):
' → logprob: -10.137078285217285
    5. '   ' → logprob: -11.262078285217285
    6. ',' → logprob: -12.012078285217285
    7. ')' → logprob: -13.262078285217285
    8. '1' → logprob: -13.262078285217285
    9. ' ' → logprob: -13.637078285217285
    10. ' ):' → logprob: -13.762078285217285

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006726737599819899
    2. ' ' → logprob: -5.0067267417907715
    3. '2' → logprob: -11.756726264953613
    4. '   ' → logprob: -13.006726264953613
    5. '```' → logprob: -15.444226264953613
    6. '3' → logprob: -16.38172721862793
    7. '  ' → logprob: -16.38172721862793
    8. ')' → logprob: -16.44422721862793
    9. ' k' → logprob: -16.63172721862793
    10. '7' → logprob: -16.81922721862793

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016468366084154695
    2. ' ' → logprob: -8.750164985656738
    3. '2' → logprob: -12.125164985656738
    4. '   ' → logprob: -15.875164985656738
    5. '```' → logprob: -16.187664031982422
    6. '3' → logprob: -16.562664031982422
    7. '  ' → logprob: -17.375164031982422
    8. '7' → logprob: -17.500164031982422
    9. '
' → logprob: -17.625164031982422
    10. '11' → logprob: -17.750164031982422

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3144581615924835
    2. '):
' → logprob: -1.3144581317901611
    3. ')' → logprob: -7.18945837020874
    4. ' ):' → logprob: -8.814457893371582
    5. ':' → logprob: -8.939457893371582
    6. ' ):
' → logprob: -9.064457893371582
    7. '):
' → logprob: -10.939457893371582
    8. ',' → logprob: -11.064457893371582
    9. '+' → logprob: -12.564457893371582
    10. '   ' → logprob: -12.689457893371582

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4045625925064087
    2. '   ' → logprob: -1.1545625925064087
    3. ':' → logprob: -4.404562473297119
    4. ' comb' → logprob: -6.404562473297119
    5. '<|end|>' → logprob: -6.529562473297119
    6. ',' → logprob: -6.904562473297119
    7. '    ' → logprob: -8.154562950134277
    8. ' ' → logprob: -8.529562950134277
    9. '[' → logprob: -8.654562950134277
    10. ':
' → logprob: -8.904562950134277

Token 238: ' val' (ID: 1459)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9851904511451721
    2. ' comb' → logprob: -1.7351903915405273
    3. 'val' (adapté à ' val') → logprob: -1.7351903915405273
    4. '       ' → logprob: -1.8601903915405273
    5. 'c' → logprob: -2.9851903915405273
    6. ' val' → logprob: -3.8601903915405273
    7. 'num' → logprob: -4.235190391540527
    8. ' c' → logprob: -4.985190391540527
    9. 'value' → logprob: -5.485190391540527
    10. 'n' → logprob: -5.735190391540527

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038075465708971024
    2. '=' → logprob: -3.2880754470825195
    3. '   ' → logprob: -10.78807544708252
    4. ' ' → logprob: -12.78807544708252
    5. ',' → logprob: -13.03807544708252
    6. 's' → logprob: -13.53807544708252
    7. ')' → logprob: -14.28807544708252
    8. ' =
' → logprob: -14.28807544708252
    9. '=int' → logprob: -14.78807544708252
    10. '.append' → logprob: -14.91307544708252

Token 240: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.14408572018146515
    2. ' fact' → logprob: -2.144085645675659
    3. ' (' → logprob: -4.144085884094238
    4. '(f' → logprob: -7.269085884094238
    5. '(' → logprob: -8.519085884094238
    6. '_fact' → logprob: -10.206585884094238
    7. '   ' → logprob: -10.456585884094238
    8. ' factorial' → logprob: -10.456585884094238
    9. '((' → logprob: -10.581585884094238
    10. '
' → logprob: -10.831585884094238

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2014307826757431
    2. '[N' → logprob: -1.7014307975769043
    3. '[X' → logprob: -12.201430320739746
    4. '```' → logprob: -12.451430320739746
    5. '[n' → logprob: -12.826430320739746
    6. '   ' → logprob: -13.451430320739746
    7. 'N' → logprob: -13.701430320739746
    8. 'U' → logprob: -14.201430320739746
    9. '	U' → logprob: -15.201430320739746
    10. '[k' → logprob: -15.201430320739746

Token 242: 'U' (ID: 52)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2025524228811264
    2. 'U' → logprob: -1.7025524377822876
    3. 'X' → logprob: -6.952552318572998
    4. '[N' → logprob: -9.952552795410156
    5. '[' → logprob: -10.202552795410156
    6. ']' → logprob: -10.452552795410156
    7. 'L' → logprob: -10.952552795410156
    8. '   ' → logprob: -11.327552795410156
    9. '(N' → logprob: -11.577552795410156
    10. ' N' → logprob: -11.952552795410156

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.641841820150148e-05
    2. ']
' → logprob: -11.00002670288086
    3. ']%' → logprob: -12.00002670288086
    4. ']*' → logprob: -13.25002670288086
    5. ' ]' → logprob: -14.25002670288086
    6. '   ' → logprob: -14.62502670288086
    7. 'k' → logprob: -15.75002670288086
    8. ']
' → logprob: -16.62502670288086
    9. ']]' → logprob: -17.25002670288086
    10. ']

' → logprob: -17.37502670288086

Token 244: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04458789899945259
    2. '*' → logprob: -3.2945878505706787
    3. '<|end|>' → logprob: -5.919588088989258
    4. '   ' → logprob: -6.044588088989258
    5. ' ' → logprob: -8.044588088989258
    6. ')' → logprob: -8.294588088989258
    7. '*k' → logprob: -8.294588088989258
    8. '    ' → logprob: -9.294588088989258
    9. ']' → logprob: -9.544588088989258
    10. '```' → logprob: -10.044588088989258

Token 245: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.47408607602119446
    2. ' fact' → logprob: -0.9740860462188721
    3. '_fact' → logprob: -12.099085807800293
    4. '.fact' → logprob: -13.349085807800293
    5. ' (' → logprob: -14.349085807800293
    6. ' fakt' → logprob: -14.724085807800293
    7. 'Fact' → logprob: -14.974085807800293
    8. 'factor' → logprob: -15.224085807800293
    9. ' facto' → logprob: -16.59908676147461
    10. ' ' → logprob: -16.72408676147461

Token 246: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.282920129597187e-05
    2. 'inv' → logprob: -11.500012397766113
    3. '_fact' → logprob: -14.375012397766113
    4. 'fact' → logprob: -14.500012397766113
    5. '[' → logprob: -14.625012397766113
    6. '_INV' → logprob: -14.625012397766113
    7. '```' → logprob: -15.875012397766113
    8. '[_' → logprob: -16.25001335144043
    9. '_inverse' → logprob: -16.25001335144043
    10. '_in' → logprob: -16.25001335144043

Token 247: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.125016212463379
    3. 'k' → logprob: -14.250016212463379
    4. '[N' → logprob: -15.250016212463379
    5. '```' → logprob: -15.750016212463379
    6. '

' → logprob: -16.875015258789062
    7. '[val' → logprob: -17.625015258789062
    8. ' [' → logprob: -17.625015258789062
    9. '[M' → logprob: -17.875015258789062
    10. '{k' → logprob: -18.000015258789062

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000978743890300393
    2. ']%' → logprob: -7.000978946685791
    3. ' ]' → logprob: -10.375978469848633
    4. '%' → logprob: -10.500978469848633
    5. ']*' → logprob: -12.250978469848633
    6. '']' → logprob: -14.125978469848633
    7. '*' → logprob: -14.500978469848633
    8. '[' → logprob: -14.625978469848633
    9. '<|end|>' → logprob: -14.875978469848633
    10. ']
' → logprob: -15.375978469848633

Token 249: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19697897136211395
    2. ' %' → logprob: -1.8219789266586304
    3. ' *' → logprob: -4.19697904586792
    4. '*' → logprob: -6.32197904586792
    5. '   ' → logprob: -9.696978569030762
    6. ')' → logprob: -10.071978569030762
    7. ']' → logprob: -10.446978569030762
    8. ' ' → logprob: -10.696978569030762
    9. '```' → logprob: -10.696978569030762
    10. '[' → logprob: -10.821978569030762

Token 250: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07524009793996811
    2. ' MOD' → logprob: -2.700240135192871
    3. 'fact' → logprob: -5.325240135192871
    4. ' fact' → logprob: -8.325240135192871
    5. '(M' → logprob: -9.575240135192871
    6. '   ' → logprob: -10.575240135192871
    7. '.MOD' → logprob: -11.325240135192871
    8. ' (' → logprob: -11.450240135192871
    9. '_MOD' → logprob: -11.450240135192871
    10. '(' → logprob: -11.450240135192871

Token 251: ' *' (ID: 425)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6506019234657288
    2. '<|end|>' → logprob: -1.775601863861084
    3. ' *' → logprob: -2.025601863861084
    4. ' fact' → logprob: -2.025601863861084
    5. '*' → logprob: -3.900601863861084
    6. '   ' → logprob: -4.775601863861084
    7. '       ' → logprob: -5.275601863861084
    8. ' ' → logprob: -5.900601863861084
    9. ')' → logprob: -6.025601863861084
    10. '<|end|>' → logprob: -6.650601863861084

Token 252: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0004891689168289304
    2. ' fact' → logprob: -7.625489234924316
    3. 'factor' → logprob: -15.000489234924316
    4. '(f' → logprob: -15.250489234924316
    5. '_fact' → logprob: -15.500489234924316
    6. '.fact' → logprob: -15.750489234924316
    7. 'facts' → logprob: -16.62548828125
    8. '   ' → logprob: -16.75048828125
    9. 'Fact' → logprob: -16.87548828125
    10. '(' → logprob: -17.12548828125

Token 253: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0007891403511166573
    2. 'inv' → logprob: -7.375789165496826
    3. '[' → logprob: -9.125788688659668
    4. '[N' → logprob: -11.000788688659668
    5. '[M' → logprob: -11.750788688659668
    6. '[V' → logprob: -12.000788688659668
    7. '[X' → logprob: -12.250788688659668
    8. '_INV' → logprob: -12.375788688659668
    9. 'fact' → logprob: -12.625788688659668
    10. 'Inv' → logprob: -12.750788688659668

Token 254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'U' → logprob: -15.5
    3. '[N' → logprob: -17.125
    4. '(U' → logprob: -18.375
    5. '[[' → logprob: -18.625
    6. ' [' → logprob: -19.0
    7. '[u' → logprob: -19.0
    8. '```' → logprob: -19.25
    9. '{' → logprob: -19.625
    10. '   ' → logprob: -20.375

Token 255: 'U' (ID: 52)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000206401280593127
    2. 'U' → logprob: -8.875205993652344
    3. '(U' → logprob: -9.625205993652344
    4. '   ' → logprob: -16.125205993652344
    5. '(' → logprob: -16.375205993652344
    6. '```' → logprob: -16.750205993652344
    7. '{' → logprob: -17.000205993652344
    8. '[N' → logprob: -17.500205993652344
    9. '[
' → logprob: -17.625205993652344
    10. ' U' → logprob: -18.375205993652344

Token 256: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6381842494010925
    2. ' -' → logprob: -1.1381843090057373
    3. '-k' → logprob: -1.8881843090057373
    4. '   ' → logprob: -14.013184547424316
    5. ' ' → logprob: -14.263184547424316
    6. '-K' → logprob: -15.013184547424316
    7. '-u' → logprob: -15.138184547424316
    8. '-kar' → logprob: -15.638184547424316
    9. '-m' → logprob: -16.38818359375
    10. '-
' → logprob: -16.76318359375

Token 257: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.107425062713446e-06
    2. ' k' → logprob: -11.875006675720215
    3. '{k' → logprob: -17.37500762939453
    4. '	k' → logprob: -17.75000762939453
    5. '[k' → logprob: -18.50000762939453
    6. '   ' → logprob: -18.62500762939453
    7. '_k' → logprob: -19.87500762939453
    8. ',k' → logprob: -20.12500762939453
    9. ' к' → logprob: -20.37500762939453
    10. '=k' → logprob: -20.37500762939453

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010854477295652032
    2. ']%' → logprob: -7.00108528137207
    3. ' ]' → logprob: -8.75108528137207
    4. '()]' → logprob: -11.62608528137207
    5. '%' → logprob: -13.50108528137207
    6. ']()' → logprob: -13.75108528137207
    7. ']
' → logprob: -13.87608528137207
    8. '```' → logprob: -14.00108528137207
    9. '']' → logprob: -14.62608528137207
    10. ')]' → logprob: -15.00108528137207

Token 259: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.09138241410255432
    2. '%' → logprob: -2.4663825035095215
    3. ')' → logprob: -6.3413825035095215
    4. ')%' → logprob: -7.4663825035095215
    5. ']%' → logprob: -10.466382026672363
    6. ' ' → logprob: -10.966382026672363
    7. '   ' → logprob: -11.216382026672363
    8. '```' → logprob: -11.341382026672363
    9. ']' → logprob: -11.466382026672363
    10. ' %=' → logprob: -11.716382026672363

Token 260: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.000158842682139948
    2. ' MOD' → logprob: -8.75015926361084
    3. '(M' → logprob: -15.87515926361084
    4. '.MOD' → logprob: -16.250158309936523
    5. '_MOD' → logprob: -16.875158309936523
    6. 'MO' → logprob: -18.000158309936523
    7. '   ' → logprob: -18.000158309936523
    8. 'M' → logprob: -19.375158309936523
    9. '```' → logprob: -19.500158309936523
    10. '(' → logprob: -19.625158309936523

Token 261: '
' (ID: 198)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0754899978637695
    2. '   ' → logprob: -1.2004899978637695
    3. '<|end|>' → logprob: -1.8254899978637695
    4. ')' → logprob: -2.0754899978637695
    5. '       ' → logprob: -3.0754899978637695
    6. ' ' → logprob: -4.7004899978637695
    7. 'comb' → logprob: -5.4504899978637695
    8. '  ' → logprob: -6.5754899978637695
    9. '    
' → logprob: -6.7004899978637695
    10. '	com' → logprob: -6.7004899978637695

Token 262: '       ' (ID: 309)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.40889644622802734
    2. '   ' → logprob: -1.6588964462280273
    3. '       ' → logprob: -2.0338964462280273
    4. 'comb' → logprob: -4.533896446228027
    5. '    
' → logprob: -7.033896446228027
    6. ')' → logprob: -7.033896446228027
    7. '        
' → logprob: -7.158896446228027
    8. '
' → logprob: -8.408896446228027
    9. ',' → logprob: -8.408896446228027
    10. ' 
' → logprob: -9.033896446228027

Token 263: ' if' (ID: 538)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.10160255432128906
    2. ' comb' → logprob: -2.726602554321289
    3. '   ' → logprob: -3.476602554321289
    4. '       ' → logprob: -9.351602554321289
    5. 'com' → logprob: -9.601602554321289
    6. '
' → logprob: -10.101602554321289
    7. '(com' → logprob: -10.976602554321289
    8. '_comb' → logprob: -11.351602554321289
    9. '    
' → logprob: -11.851602554321289
    10. ' ' → logprob: -12.101602554321289

Token 264: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.026128550991415977
    2. 'k' → logprob: -4.026128768920898
    3. ' (' → logprob: -4.901128768920898
    4. '(k' → logprob: -7.901128768920898
    5. '(' → logprob: -9.401128768920898
    6. ' ' → logprob: -10.026128768920898
    7. ' val' → logprob: -12.651128768920898
    8. ' ' → logprob: -13.151128768920898
    9. '	k' → logprob: -13.651128768920898
    10. ' ((' → logprob: -13.963628768920898

Token 265: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1453244388103485
    2. '%' → logprob: -2.020324468612671
    3. ' ' → logprob: -6.020324230194092
    4. ' %
' → logprob: -9.39532470703125
    5. ' ' → logprob: -9.77032470703125
    6. ' 
' → logprob: -11.14532470703125
    7. '>' → logprob: -11.64532470703125
    8. '[' → logprob: -11.64532470703125
    9. ' ==' → logprob: -11.64532470703125
    10. '==' → logprob: -12.02032470703125

Token 266: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001600347168277949
    2. ' ' → logprob: -8.750160217285156
    3. '```' → logprob: -14.750160217285156
    4. '(' → logprob: -15.250160217285156
    5. '   ' → logprob: -15.375160217285156
    6. '  ' → logprob: -15.625160217285156
    7. '
' → logprob: -16.375160217285156
    8. '۲' → logprob: -16.687660217285156
    9. '<|end|>' → logprob: -17.312660217285156
    10. '[' → logprob: -17.687660217285156

Token 267: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '4' → logprob: -18.250001907348633
    4. '```' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.062501907348633
    6. '>' → logprob: -19.125001907348633
    7. '
' → logprob: -19.125001907348633
    8. '  ' → logprob: -19.437501907348633
    9. '۲' → logprob: -19.500001907348633
    10. '=' → logprob: -19.687501907348633

Token 268: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04320894181728363
    2. ' ==' → logprob: -3.1682088375091553
    3. '=' → logprob: -9.168209075927734
    4. ':' → logprob: -10.668209075927734
    5. '1' → logprob: -11.043209075927734
    6. '0' → logprob: -11.043209075927734
    7. ' ' → logprob: -11.668209075927734
    8. ']==' → logprob: -11.793209075927734
    9. '!=' → logprob: -11.918209075927734
    10. '==
' → logprob: -12.043209075927734

Token 269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02676396258175373
    2. '0' → logprob: -3.776763916015625
    3. ' ' → logprob: -5.651763916015625
    4. '   ' → logprob: -14.776763916015625
    5. '=' → logprob: -16.151763916015625
    6. '```' → logprob: -16.339263916015625
    7. '2' → logprob: -16.589263916015625
    8. 'k' → logprob: -16.964263916015625
    9. '01' → logprob: -17.276763916015625
    10. ' ' → logprob: -17.339263916015625

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12710364162921906
    2. '0' → logprob: -2.127103567123413
    3. ' ' → logprob: -8.877103805541992
    4. '2' → logprob: -10.252103805541992
    5. '```' → logprob: -14.627103805541992
    6. '   ' → logprob: -15.877103805541992
    7. '  ' → logprob: -17.439603805541992
    8. '01' → logprob: -17.627103805541992
    9. '4' → logprob: -17.877103805541992
    10. '' → logprob: -18.127103805541992

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007552559021860361
    2. ':
' → logprob: -5.007552623748779
    3. ' :' → logprob: -7.882552623748779
    4. '       ' → logprob: -8.257552146911621
    5. '   ' → logprob: -9.632552146911621
    6. '           ' → logprob: -9.882552146911621
    7. ' *' → logprob: -10.882552146911621
    8. ' val' → logprob: -11.257552146911621
    9. '=' → logprob: -11.507552146911621
    10. ' :
' → logprob: -11.632552146911621

Token 272: '           ' (ID: 352)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4226219356060028
    2. '           ' → logprob: -1.2976219654083252
    3. 'val' → logprob: -2.672621965408325
    4. '       ' → logprob: -6.922621726989746
    5. '[val' → logprob: -7.047621726989746
    6. ',val' → logprob: -8.547621726989746
    7. ' comb' → logprob: -8.672621726989746
    8. '	val' → logprob: -10.047621726989746
    9. ':' → logprob: -11.047621726989746
    10. ' ' → logprob: -11.047621726989746

Token 273: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3959142863750458
    2. '           ' → logprob: -1.6459143161773682
    3. 'val' (adapté à ' val') → logprob: -2.020914316177368
    4. '	val' → logprob: -7.145914077758789
    5. '       ' → logprob: -7.645914077758789
    6. '[val' → logprob: -9.145914077758789
    7. '   ' → logprob: -9.520914077758789
    8. ',val' → logprob: -10.145914077758789
    9. '_val' → logprob: -10.770914077758789
    10. '(val' → logprob: -11.520914077758789

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002573044504970312
    2. ' =' → logprob: -6.002573013305664
    3. '*=' → logprob: -9.252573013305664
    4. '-=' → logprob: -14.377573013305664
    5. ' *=' → logprob: -14.752573013305664
    6. '   ' → logprob: -16.127573013305664
    7. '=-' → logprob: -16.127573013305664
    8. '+=' → logprob: -16.377573013305664
    9. '*' → logprob: -16.502573013305664
    10. '=

' → logprob: -16.752573013305664

Token 275: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9394615292549133
    2. '-M' → logprob: -1.4394614696502686
    3. '-' → logprob: -1.9394614696502686
    4. 'MOD' → logprob: -2.1894614696502686
    5. '-mod' → logprob: -3.0644614696502686
    6. ' (' → logprob: -3.6894614696502686
    7. ' MOD' → logprob: -3.8144614696502686
    8. 'val' → logprob: -5.314461708068848
    9. '-val' → logprob: -5.564461708068848
    10. '(-' → logprob: -5.564461708068848

Token 276: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.9795445849886164e-05
    2. ' val' → logprob: -9.750060081481934
    3. '(val' → logprob: -13.625060081481934
    4. '	val' → logprob: -15.875060081481934
    5. '<|end|>' → logprob: -16.125059127807617
    6. 'valg' → logprob: -17.750059127807617
    7. '[val' → logprob: -17.750059127807617
    8. '1' → logprob: -18.000059127807617
    9. '_val' → logprob: -18.125059127807617
    10. 'valu' → logprob: -18.625059127807617

Token 277: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06264017522335052
    2. '%' → logprob: -3.5626401901245117
    3. '<|end|>' → logprob: -3.5626401901245117
    4. '       ' → logprob: -6.437640190124512
    5. 'val' → logprob: -7.687640190124512
    6. ' val' → logprob: -7.937640190124512
    7. '<|end|>' → logprob: -8.187640190124512
    8. '[val' → logprob: -8.187640190124512
    9. ')' → logprob: -8.437640190124512
    10. ' %=' → logprob: -8.562640190124512

Token 278: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6348789930343628
    2. '       ' → logprob: -1.3848789930343628
    3. '<|end|>' → logprob: -1.8848789930343628
    4. '%' → logprob: -2.8848791122436523
    5. ' ' → logprob: -5.134879112243652
    6. ' 
' → logprob: -6.759879112243652
    7. '<|end|>' → logprob: -6.759879112243652
    8. ')' → logprob: -7.259879112243652
    9. '   ' → logprob: -7.634879112243652
    10. '
' → logprob: -8.134879112243652

Token 279: ' comb' (ID: 4134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12863361835479736
    2. 'val' → logprob: -2.753633499145508
    3. ' val' → logprob: -3.003633499145508
    4. '   ' → logprob: -6.128633499145508
    5. ' ' → logprob: -6.753633499145508
    6. '    ' → logprob: -7.003633499145508
    7. ' comb' → logprob: -7.628633499145508
    8. '        ' → logprob: -7.878633499145508
    9. ')' → logprob: -8.253633499145508
    10. '           ' → logprob: -8.378633499145508

Token 280: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.45749813318252563
    2. '[' → logprob: -1.0824980735778809
    3. ' %=' → logprob: -4.582498073577881
    4. '%' → logprob: -5.832498073577881
    5. '[val' → logprob: -5.957498073577881
    6. '%=' → logprob: -6.082498073577881
    7. '.' → logprob: -6.207498073577881
    8. '<|end|>' → logprob: -6.332498073577881
    9. '[k' → logprob: -6.582498073577881
    10. '=' → logprob: -6.957498073577881

Token 281: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.004645861219614744
    2. 'val' → logprob: -6.254645824432373
    3. '((' → logprob: -6.379645824432373
    4. '(' → logprob: -7.379645824432373
    5. ' (' → logprob: -8.504646301269531
    6. ' val' → logprob: -8.879646301269531
    7. '(abs' → logprob: -10.129646301269531
    8. '(pow' → logprob: -12.629646301269531
    9. '[val' → logprob: -12.879646301269531
    10. '(
' → logprob: -13.129646301269531

Token 282: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007250337861478329
    2. ' )' → logprob: -5.3822503089904785
    3. '   ' → logprob: -6.2572503089904785
    4. ')
' → logprob: -7.6322503089904785
    5. '       ' → logprob: -9.007250785827637
    6. '%' → logprob: -10.882250785827637
    7. '+' → logprob: -10.882250785827637
    8. ' )
' → logprob: -11.132250785827637
    9. '<|end|>' → logprob: -11.632250785827637
    10. ')return' → logprob: -11.882250785827637

Token 283: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001584850688232109
    2. ' MOD' → logprob: -8.750158309936523
    3. '_MOD' → logprob: -18.750158309936523
    4. '.MOD' → logprob: -19.250158309936523
    5. '   ' → logprob: -20.125158309936523
    6. ' ' → logprob: -20.625158309936523
    7. '```' → logprob: -21.250158309936523
    8. 'mod' → logprob: -21.250158309936523
    9. 'MO' → logprob: -23.250158309936523
    10. '(mod' → logprob: -23.500158309936523

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.976922744186595e-05
    2. ')
' → logprob: -10.500040054321289
    3. '   ' → logprob: -11.500040054321289
    4. ' )' → logprob: -13.250040054321289
    5. ')return' → logprob: -15.375040054321289
    6. ')#' → logprob: -17.62504005432129
    7. ')n' → logprob: -17.62504005432129
    8. ')

' → logprob: -17.87504005432129
    9. ')`' → logprob: -17.87504005432129
    10. '),' → logprob: -18.00004005432129

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02119499072432518
    2. '<|end|>' → logprob: -4.021194934844971
    3. 'for' → logprob: -6.521194934844971
    4. '    
' → logprob: -7.521194934844971
    5. ')' → logprob: -7.896194934844971
    6. ' for' → logprob: -8.396195411682129
    7. 'return' → logprob: -9.146195411682129
    8. '#' → logprob: -9.771195411682129
    9. '
' → logprob: -10.146195411682129
    10. 'def' → logprob: -10.271195411682129

Token 286: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8974045515060425
    2. '   ' → logprob: -1.2724045515060425
    3. 'result' → logprob: -2.147404670715332
    4. 'print' → logprob: -2.897404670715332
    5. '#' (adapté à ' #') → logprob: -3.147404670715332
    6. 'sum' → logprob: -3.147404670715332
    7. ' for' → logprob: -4.522404670715332
    8. 'return' → logprob: -4.522404670715332
    9. 'total' → logprob: -5.272404670715332
    10. 'def' → logprob: -5.522404670715332

Token 287: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0654382705688477
    2. 'dp' → logprob: -1.5654382705688477
    3. 'answer' → logprob: -2.4404382705688477
    4. 'for' → logprob: -2.8154382705688477
    5. 'total' → logprob: -2.9404382705688477
    6. 'res' → logprob: -3.0654382705688477
    7. 'sum' → logprob: -3.1904382705688477
    8. ' result' → logprob: -3.9404382705688477
    9. '#' → logprob: -4.065438270568848
    10. 's' → logprob: -4.440438270568848

Token 288: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1592702865600586
    2. ' for' → logprob: -1.2842702865600586
    3. 'for' → logprob: -1.6592702865600586
    4. ' des' → logprob: -3.2842702865600586
    5. '   ' → logprob: -3.2842702865600586
    6. 'result' → logprob: -3.5342702865600586
    7. 'des' → logprob: -3.7842702865600586
    8. ' de' → logprob: -4.034270286560059
    9. 'of' → logprob: -4.159270286560059
    10. ' result' → logprob: -4.409270286560059

Token 289: ' P' (ID: 398)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.6419694423675537
    2. ' ans' → logprob: -2.1419694423675537
    3. ' sum' → logprob: -2.3919694423675537
    4. 'ans' → logprob: -2.8919694423675537
    5. ' res' → logprob: -3.0169694423675537
    6. 'pow' → logprob: -3.0169694423675537
    7. 'dp' → logprob: -3.2669694423675537
    8. 'res' → logprob: -3.3919694423675537
    9. 'answer' → logprob: -3.5169694423675537
    10. 'total' → logprob: -3.5169694423675537

Token 290: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6656506061553955
    2. '_' → logprob: -1.0406506061553955
    3. '[' → logprob: -3.0406506061553955
    4. '(' → logprob: -3.7906506061553955
    5. '=' → logprob: -3.9156506061553955
    6. ' _' → logprob: -4.915650367736816
    7. '_sum' → logprob: -5.040650367736816
    8. 'sum' → logprob: -5.790650367736816
    9. ',' → logprob: -5.915650367736816
    10. '[]' → logprob: -5.915650367736816

Token 291: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08470629155635834
    2. '=' → logprob: -2.8347063064575195
    3. 'for' → logprob: -4.5847063064575195
    4. ' for' → logprob: -6.2097063064575195
    5. 'def' → logprob: -6.4597063064575195
    6. 'range' → logprob: -6.9597063064575195
    7. 'ower' → logprob: -7.2097063064575195
    8. ',' → logprob: -7.3347063064575195
    9. 'sum' → logprob: -7.3347063064575195
    10. '   ' → logprob: -7.5847063064575195

Token 292: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.04682310298085213
    2. ' P' → logprob: -3.171823024749756
    3. 'p' → logprob: -6.921823024749756
    4. 'result' → logprob: -7.296823024749756
    5. 'total' → logprob: -7.796823024749756
    6. 'res' → logprob: -8.296823501586914
    7. 'sum' → logprob: -8.296823501586914
    8. '   ' → logprob: -8.921823501586914
    9. 'ans' → logprob: -8.921823501586914
    10. ' result' → logprob: -9.171823501586914

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054915234446525574
    2. '=' → logprob: -2.929915189743042
    3. '_' → logprob: -11.554915428161621
    4. ',' → logprob: -11.679915428161621
    5. ' ' → logprob: -12.554915428161621
    6. '[' → logprob: -13.429915428161621
    7. ' =
' → logprob: -13.429915428161621
    8. ' =[' → logprob: -13.679915428161621
    9. 'def' → logprob: -14.054915428161621
    10. '  ' → logprob: -14.179915428161621

Token 294: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10161170363426208
    2. '1' → logprob: -3.726611614227295
    3. 'pow' → logprob: -4.101611614227295
    4. 'sum' → logprob: -4.351611614227295
    5. ' ' → logprob: -4.601611614227295
    6. '(' → logprob: -4.851611614227295
    7. '[' → logprob: -5.226611614227295
    8. '(sum' → logprob: -5.851611614227295
    9. ' sum' → logprob: -6.476611614227295
    10. '[L' → logprob: -6.476611614227295

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2545069456100464
    2. '1' → logprob: -1.5045069456100464
    3. '(' → logprob: -6.629507064819336
    4. ']' → logprob: -7.754507064819336
    5. 'pow' → logprob: -8.254507064819336
    6. 'fact' → logprob: -9.004507064819336
    7. '[' → logprob: -9.629507064819336
    8. 'L' → logprob: -10.254507064819336
    9. ')' → logprob: -10.379507064819336
    10. '   ' → logprob: -10.629507064819336

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014847563579678535
    2. ' ]' → logprob: -9.62514877319336
    3. ']*(' → logprob: -10.12514877319336
    4. ']*' → logprob: -10.87514877319336
    5. ' for' → logprob: -12.00014877319336
    6. ')' → logprob: -12.37514877319336
    7. ',' → logprob: -12.75014877319336
    8. '   ' → logprob: -12.87514877319336
    9. 'for' → logprob: -13.25014877319336
    10. '()]' → logprob: -13.50014877319336

Token 297: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002383376471698284
    2. ']*(' → logprob: -6.877383232116699
    3. ' *' → logprob: -7.502383232116699
    4. ' for' → logprob: -7.752383232116699
    5. ']*' → logprob: -8.5023832321167
    6. '*' → logprob: -9.3773832321167
    7. 'for' → logprob: -10.3773832321167
    8. ',' → logprob: -11.1273832321167
    9. ' ]' → logprob: -11.2523832321167
    10. '*(' → logprob: -11.8773832321167

Token 298: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.103430986404419
    2. '(M' → logprob: -1.228430986404419
    3. '(U' → logprob: -1.478430986404419
    4. '(' → logprob: -2.853430986404419
    5. '(L' → logprob: -2.978430986404419
    6. '(R' → logprob: -3.478430986404419
    7. '((' → logprob: -5.47843074798584
    8. '(X' → logprob: -6.72843074798584
    9. ' (' → logprob: -7.72843074798584
    10. 'N' → logprob: -8.35343074798584

Token 299: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8505245447158813
    2. 'N' → logprob: -1.3505245447158813
    3. 'R' → logprob: -2.350524425506592
    4. 'U' → logprob: -2.600524425506592
    5. 'M' → logprob: -2.725524425506592
    6. 'X' → logprob: -3.475524425506592
    7. '(L' → logprob: -4.475524425506592
    8. '(R' → logprob: -4.600524425506592
    9. '(U' → logprob: -5.100524425506592
    10. '(N' → logprob: -5.225524425506592

Token 300: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4393520653247833
    2. '+' → logprob: -1.814352035522461
    3. '-' → logprob: -1.814352035522461
    4. ' +' → logprob: -3.564352035522461
    5. '-L' → logprob: -7.314352035522461
    6. '-R' → logprob: -7.689352035522461
    7. '   ' → logprob: -9.439352035522461
    8. '-M' → logprob: -10.064352035522461
    9. ' ' → logprob: -10.064352035522461
    10. '-B' → logprob: -11.439352035522461

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029843280091881752
    2. '2' → logprob: -3.529843330383301
    3. ' ' → logprob: -9.4048433303833
    4. '   ' → logprob: -12.1548433303833
    5. '3' → logprob: -13.1548433303833
    6. '10' → logprob: -13.9048433303833
    7. '5' → logprob: -14.6548433303833
    8. '11' → logprob: -14.7798433303833
    9. '```' → logprob: -15.2798433303833
    10. '7' → logprob: -15.4673433303833

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048612114042043686
    2. '2' → logprob: -3.048612117767334
    3. ' ' → logprob: -11.423611640930176
    4. '(' → logprob: -12.548611640930176
    5. '3' → logprob: -12.798611640930176
    6. '10' → logprob: -13.048611640930176
    7. '   ' → logprob: -13.923611640930176
    8. 'R' → logprob: -14.173611640930176
    9. '5' → logprob: -14.298611640930176
    10. '(R' → logprob: -14.298611640930176

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011427151912357658
    2. ')
' → logprob: -9.125114440917969
    3. ' )' → logprob: -12.750114440917969
    4. ')]' → logprob: -14.000114440917969
    5. '   ' → logprob: -14.625114440917969
    6. ']' → logprob: -14.625114440917969
    7. '+' → logprob: -15.875114440917969
    8. ')

' → logprob: -16.00011444091797
    9. '```' → logprob: -16.37511444091797
    10. ')`' → logprob: -16.62511444091797

Token 304: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2895025908946991
    2. '   ' → logprob: -1.7895026206970215
    3. ' for' → logprob: -2.5395026206970215
    4. 'P' → logprob: -5.5395026206970215
    5. 'i' → logprob: -7.1645026206970215
    6. '	for' → logprob: -8.039502143859863
    7. '```' → logprob: -8.914502143859863
    8. ' P' → logprob: -9.039502143859863
    9. '    
' → logprob: -10.164502143859863
    10. '[' → logprob: -11.039502143859863

Token 305: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1471354067325592
    2. 'P' → logprob: -2.0221354961395264
    3. ' for' → logprob: -6.772135257720947
    4. 'i' → logprob: -7.147135257720947
    5. 'p' → logprob: -7.522135257720947
    6. 'pow' → logprob: -8.022135734558105
    7. 'sum' → logprob: -8.147135734558105
    8. 's' → logprob: -8.772135734558105
    9. 'current' → logprob: -9.272135734558105
    10. 'power' → logprob: -9.397135734558105

Token 306: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27719131112098694
    2. 'k' → logprob: -2.027191400527954
    3. 'x' → logprob: -2.777191400527954
    4. 'j' → logprob: -4.152191162109375
    5. ' i' → logprob: -4.777191162109375
    6. 'a' → logprob: -5.652191162109375
    7. 'd' → logprob: -5.777191162109375
    8. 's' → logprob: -5.902191162109375
    9. 'r' → logprob: -6.027191162109375
    10. 'l' → logprob: -6.277191162109375

Token 307: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07033274322748184
    2. 'in' → logprob: -2.6953327655792236
    3. ',' → logprob: -7.9453325271606445
    4. '	in' → logprob: -11.195332527160645
    5. ' ,' → logprob: -11.820332527160645
    6. ' ' → logprob: -12.320332527160645
    7. ')' → logprob: -12.695332527160645
    8. 'In' → logprob: -12.820332527160645
    9. ' i' → logprob: -13.695332527160645
    10. ' ' → logprob: -13.695332527160645

Token 308: ' x' (ID: 1215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6898037195205688
    2. 'c' → logprob: -1.0648037195205688
    3. 'v' → logprob: -1.9398037195205688
    4. ' val' → logprob: -5.689803600311279
    5. ' c' → logprob: -6.564803600311279
    6. 'value' → logprob: -6.939803600311279
    7. 'coeff' → logprob: -7.189803600311279
    8. 'k' → logprob: -7.314803600311279
    9. 'coef' → logprob: -7.689803600311279
    10. 'x' → logprob: -7.814803600311279

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14280103147029877
    2. 'in' → logprob: -2.01780104637146
    3. ' ' → logprob: -9.642801284790039
    4. ',' → logprob: -10.267801284790039
    5. ')' → logprob: -12.267801284790039
    6. 'In' → logprob: -12.517801284790039
    7. 'import' → logprob: -12.767801284790039
    8. '_in' → logprob: -12.767801284790039
    9. '	in' → logprob: -13.642801284790039
    10. 'inthe' → logprob: -14.017801284790039

Token 310: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.03804194927215576
    2. ' enumerate' → logprob: -3.2880420684814453
    3. 'enum' → logprob: -16.038042068481445
    4. ' in' → logprob: -16.163042068481445
    5. '(en' → logprob: -16.538042068481445
    6. 'in' → logprob: -16.663042068481445
    7. 'en' → logprob: -16.663042068481445
    8. '.enumer' → logprob: -17.663042068481445
    9. 'range' → logprob: -18.038042068481445
    10. ' enumer' → logprob: -18.788042068481445

Token 311: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.048722147941589355
    2. '(range' → logprob: -3.048722267150879
    3. 'comb' → logprob: -9.423722267150879
    4. '(combo' → logprob: -11.048722267150879
    5. 'range' → logprob: -12.298722267150879
    6. '((' → logprob: -12.673722267150879
    7. '(re' → logprob: -12.673722267150879
    8. '(en' → logprob: -12.923722267150879
    9. '(comp' → logprob: -13.173722267150879
    10. '(' → logprob: -13.173722267150879

Token 312: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. '[b' → logprob: -16.375
    3. 'bb' → logprob: -17.625
    4. 'bj' → logprob: -17.625
    5. 'p' → logprob: -17.75
    6. 'B' → logprob: -17.875
    7. '(b' → logprob: -18.25
    8. 'bp' → logprob: -18.75
    9. '[' → logprob: -18.875
    10. 'mb' → logprob: -19.125

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008728737011551857
    2. '):
' → logprob: -4.758728504180908
    3. '():' → logprob: -10.008728981018066
    4. '   ' → logprob: -10.633728981018066
    5. ' ):' → logprob: -10.633728981018066
    6. ':' → logprob: -11.633728981018066
    7. '(' → logprob: -12.633728981018066
    8. '[' → logprob: -13.008728981018066
    9. ')' → logprob: -13.258728981018066
    10. '):
' → logprob: -13.758728981018066

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001106279087252915
    2. '   ' → logprob: -7.126106262207031
    3. 'P' → logprob: -9.001106262207031
    4. ' P' → logprob: -9.376106262207031
    5. ',' → logprob: -10.626106262207031
    6. '):
' → logprob: -11.501106262207031
    7. ')' → logprob: -11.626106262207031
    8. ':' → logprob: -12.001106262207031
    9. ':
' → logprob: -12.376106262207031
    10. '        
' → logprob: -12.626106262207031

Token 315: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8379916548728943
    2. 'P' → logprob: -1.087991714477539
    3. '   ' → logprob: -1.587991714477539
    4. 'for' → logprob: -4.337991714477539
    5. ' if' → logprob: -4.962991714477539
    6. '       ' → logprob: -6.337991714477539
    7. 'pos' → logprob: -6.587991714477539
    8. ' P' → logprob: -6.712991714477539
    9. 'i' (adapté à ' i') → logprob: -7.462991714477539
    10. 'j' → logprob: -7.837991714477539

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.500613272190094
    2. '=' → logprob: -1.2506132125854492
    3. 'dx' → logprob: -3.000613212585449
    4. 'nd' → logprob: -3.500613212585449
    5. 'x' → logprob: -3.875613212585449
    6. 'f' → logprob: -5.125613212585449
    7. 'n' → logprob: -8.62561321258545
    8. 'for' → logprob: -9.12561321258545
    9. 'nt' → logprob: -9.25061321258545
    10. '=index' → logprob: -9.62561321258545

Token 317: ' idx' (ID: 14016)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.23799633979797363
    2. 'idx' → logprob: -1.6129963397979736
    3. 'M' → logprob: -5.6129961013793945
    4. ' L' → logprob: -6.1129961013793945
    5. ' idx' → logprob: -6.2379961013793945
    6. 'R' → logprob: -6.3629961013793945
    7. 'N' → logprob: -6.4879961013793945
    8. 'x' → logprob: -6.9879961013793945
    9. 'U' → logprob: -8.362996101379395
    10. '(idx' → logprob: -9.987996101379395

Token 318: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0866318866610527
    2. ' +' → logprob: -2.7116317749023438
    3. '   ' → logprob: -4.336631774902344
    4. '+=' → logprob: -6.586631774902344
    5. '+
' → logprob: -7.461631774902344
    6. '=' → logprob: -7.586631774902344
    7. ' +=' → logprob: -7.836631774902344
    8. ' =' → logprob: -8.961631774902344
    9. '+x' → logprob: -9.086631774902344
    10. '*' → logprob: -9.711631774902344

Token 319: ' M' (ID: 391)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0029408519621938467
    2. 'M' → logprob: -6.502940654754639
    3. ' L' → logprob: -7.127940654754639
    4. 'N' → logprob: -8.252941131591797
    5. 'R' → logprob: -8.877941131591797
    6. '   ' → logprob: -9.002941131591797
    7. '1' → logprob: -10.627941131591797
    8. '0' → logprob: -10.752941131591797
    9. ' ' → logprob: -10.752941131591797
    10. '(L' → logprob: -10.752941131591797

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04731167480349541
    2. '
' → logprob: -3.422311782836914
    3. '+' → logprob: -5.797311782836914
    4. '    
' → logprob: -6.047311782836914
    5. '<|end|>' → logprob: -6.422311782836914
    6. 'for' → logprob: -6.672311782836914
    7. '       ' → logprob: -6.672311782836914
    8. '```' → logprob: -7.047311782836914
    9. ')' → logprob: -7.297311782836914
    10. ' for' → logprob: -7.922311782836914

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5521574020385742
    2. '   ' → logprob: -0.9271574020385742
    3. '
' → logprob: -3.802157402038574
    4. '    
' → logprob: -6.552157402038574
    5. '<|end|>' → logprob: -6.802157402038574
    6. '        
' → logprob: -7.052157402038574
    7. ' if' → logprob: -7.552157402038574
    8. '           ' → logprob: -8.052157402038574
    9. '  
' → logprob: -8.052157402038574
    10. '    ' → logprob: -8.177157402038574

Token 322: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29601728916168213
    2. ' if' → logprob: -1.5460172891616821
    3. '   ' → logprob: -3.1710171699523926
    4. 'P' → logprob: -7.046017169952393
    5. 'for' (adapté à ' for') → logprob: -8.92101764678955
    6. ' P' → logprob: -9.54601764678955
    7. ' ' → logprob: -10.42101764678955
    8. '	if' → logprob: -11.42101764678955
    9. ' for' → logprob: -11.42101764678955
    10. '       ' → logprob: -11.67101764678955

Token 323: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008288905955851078
    2. 'v' → logprob: -6.383288860321045
    3. ' j' → logprob: -6.758288860321045
    4. 'length' → logprob: -6.758288860321045
    5. 'val' → logprob: -6.883288860321045
    6. 'd' → logprob: -7.633288860321045
    7. 'k' → logprob: -7.633288860321045
    8. 's' → logprob: -7.758288860321045
    9. '_j' → logprob: -8.008289337158203
    10. 'r' → logprob: -8.258289337158203

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04865424707531929
    2. 'in' → logprob: -3.048654317855835
    3. 'range' → logprob: -10.673654556274414
    4. ' ' → logprob: -11.298654556274414
    5. 'In' → logprob: -11.923654556274414
    6. ')' → logprob: -12.798654556274414
    7. 's' → logprob: -12.798654556274414
    8. '   ' → logprob: -12.798654556274414
    9. '<|end|>' → logprob: -13.048654556274414
    10. '	in' → logprob: -13.173654556274414

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04864833876490593
    2. ' range' → logprob: -3.0486483573913574
    3. '(range' → logprob: -10.7986478805542
    4. 'x' → logprob: -11.5486478805542
    5. '   ' → logprob: -11.6736478805542
    6. '	range' → logprob: -11.9236478805542
    7. '[' → logprob: -12.6736478805542
    8. ')' → logprob: -12.9236478805542
    9. ' ' → logprob: -13.6736478805542
    10. '[i' → logprob: -13.9236478805542

Token 326: '(' (ID: 7)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.1166531890630722
    2. 'L' → logprob: -3.1166532039642334
    3. '(i' → logprob: -3.1166532039642334
    4. '(R' → logprob: -4.116652965545654
    5. '(N' → logprob: -6.991652965545654
    6. 'i' → logprob: -6.991652965545654
    7. '(x' → logprob: -6.991652965545654
    8. '(M' → logprob: -7.366652965545654
    9. '(' → logprob: -7.491652965545654
    10. 'R' → logprob: -7.866652965545654

Token 327: '0' (ID: 15)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1166745126247406
    2. 'R' → logprob: -2.4916744232177734
    3. 'i' → logprob: -3.9916744232177734
    4. 'x' → logprob: -5.616674423217773
    5. 'len' → logprob: -6.491674423217773
    6. 'N' → logprob: -6.741674423217773
    7. 'max' → logprob: -7.241674423217773
    8. 'M' → logprob: -7.241674423217773
    9. 'U' → logprob: -8.491674423217773
    10. '0' → logprob: -8.616674423217773

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08138822764158249
    2. ' ,' → logprob: -2.581388235092163
    3. ',i' → logprob: -7.456387996673584
    4. '   ' → logprob: -7.706387996673584
    5. 'L' → logprob: -8.081388473510742
    6. ',R' → logprob: -8.206388473510742
    7. '(i' → logprob: -8.456388473510742
    8. '(R' → logprob: -8.831388473510742
    9. ' i' → logprob: -9.081388473510742
    10. 'R' → logprob: -9.706388473510742

Token 329: ' R' (ID: 460)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4940938651561737
    2. 'R' → logprob: -0.9940938949584961
    3. 'i' → logprob: -4.994093894958496
    4. 'N' → logprob: -5.619093894958496
    5. 'X' → logprob: -5.994093894958496
    6. 'x' → logprob: -6.244093894958496
    7. ' L' → logprob: -6.744093894958496
    8. 'M' → logprob: -6.994093894958496
    9. ' R' → logprob: -6.994093894958496
    10. 'len' → logprob: -6.994093894958496

Token 330: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16499795019626617
    2. ' +' → logprob: -2.1649980545043945
    3. ' -' → logprob: -3.4149980545043945
    4. '-' → logprob: -5.6649980545043945
    5. ',' → logprob: -7.6649980545043945
    6. '   ' → logprob: -8.539998054504395
    7. '[i' → logprob: -8.914998054504395
    8. '-i' → logprob: -9.914998054504395
    9. '+i' → logprob: -10.414998054504395
    10. '):
' → logprob: -10.539998054504395

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011273929849267006
    2. ' ' → logprob: -5.0112738609313965
    3. 'i' → logprob: -6.5112738609313965
    4. ' i' → logprob: -6.5112738609313965
    5. ' -' → logprob: -7.2612738609313965
    6. '   ' → logprob: -8.011274337768555
    7. ')' → logprob: -9.636274337768555
    8. '+' → logprob: -9.886274337768555
    9. '2' → logprob: -10.011274337768555
    10. 'R' → logprob: -10.136274337768555

Token 332: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048655495047569275
    2. '):' → logprob: -3.4236555099487305
    3. ',' → logprob: -5.4236555099487305
    4. '+' → logprob: -5.6736555099487305
    5. ' -' → logprob: -6.0486555099487305
    6. '+i' → logprob: -6.2986555099487305
    7. '-i' → logprob: -7.0486555099487305
    8. '       ' → logprob: -7.0486555099487305
    9. ',i' → logprob: -8.29865550994873
    10. ' ):
' → logprob: -8.67365550994873

Token 333: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6974120140075684
    2. 'i' → logprob: -0.9474120140075684
    3. 'L' → logprob: -2.4474120140075684
    4. '2' → logprob: -4.697412014007568
    5. ' i' → logprob: -5.572412014007568
    6. 'x' → logprob: -5.947412014007568
    7. '   ' → logprob: -5.947412014007568
    8. 'X' → logprob: -6.072412014007568
    9. ' L' → logprob: -6.572412014007568
    10. 'U' → logprob: -6.572412014007568

Token 334: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741328954696655
    2. '):
' → logprob: -0.9741328954696655
    3. '):
' → logprob: -10.224132537841797
    4. ':' → logprob: -11.724132537841797
    5. ')' → logprob: -12.599132537841797
    6. '       ' → logprob: -12.974132537841797
    7. '):

' → logprob: -12.974132537841797
    8. '   ' → logprob: -13.599132537841797
    9. '+' → logprob: -14.474132537841797
    10. ' ):' → logprob: -14.724132537841797

Token 335: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5397215485572815
    2. '           ' → logprob: -1.0397214889526367
    3. '	       ' → logprob: -2.7897214889526367
    4. '               ' → logprob: -6.914721488952637
    5. '```' → logprob: -9.039721488952637
    6. '	   ' → logprob: -9.164721488952637
    7. '    	' → logprob: -9.414721488952637
    8. '    	   ' → logprob: -9.414721488952637
    9. 'P' → logprob: -9.664721488952637
    10. '	           ' → logprob: -9.664721488952637

Token 336: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.00031520487391389906
    2. ' P' → logprob: -8.25031566619873
    3. '           ' → logprob: -9.87531566619873
    4. '   ' → logprob: -13.62531566619873
    5. ' ' → logprob: -14.75031566619873
    6. '	P' → logprob: -15.12531566619873
    7. 'if' → logprob: -15.75031566619873
    8. '(P' → logprob: -15.75031566619873
    9. '```' → logprob: -16.125314712524414
    10. 'p' → logprob: -16.500314712524414

Token 337: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.7888184528565034e-05
    2. '[' → logprob: -10.8750581741333
    3. '[(' → logprob: -10.8750581741333
    4. '[P' → logprob: -11.0000581741333
    5. '[i' → logprob: -13.5000581741333
    6. '[
' → logprob: -14.7500581741333
    7. 'j' → logprob: -15.2500581741333
    8. '```' → logprob: -15.5000581741333
    9. '[p' → logprob: -15.6250581741333
    10. '(j' → logprob: -15.7500581741333

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007753787562251091
    2. ']+=' → logprob: -4.882753849029541
    3. ']=' → logprob: -9.132753372192383
    4. ']=(' → logprob: -10.507753372192383
    5. '(' → logprob: -12.382753372192383
    6. '[' → logprob: -13.132753372192383
    7. '=' → logprob: -13.757753372192383
    8. ' ]' → logprob: -13.882753372192383
    9. '+=' → logprob: -14.007753372192383
    10. '   ' → logprob: -14.132753372192383

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11709651350975037
    2. '+=' → logprob: -2.242096424102783
    3. ' =' → logprob: -5.867096424102783
    4. ' +=' → logprob: -6.617096424102783
    5. '=(' → logprob: -9.492096900939941
    6. ']+=' → logprob: -11.617096900939941
    7. '(' → logprob: -12.117096900939941
    8. '-=' → logprob: -13.742096900939941
    9. '+=(' → logprob: -13.742096900939941
    10. ' (' → logprob: -14.242096900939941

Token 340: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.007447848562151194
    2. ' (' → logprob: -5.007447719573975
    3. '(' → logprob: -7.257447719573975
    4. '   ' → logprob: -11.757448196411133
    5. '(Q' → logprob: -11.757448196411133
    6. '(p' → logprob: -13.132448196411133
    7. '(A' → logprob: -13.382448196411133
    8. '(j' → logprob: -13.757448196411133
    9. ' ' → logprob: -13.882448196411133
    10. '(val' → logprob: -13.882448196411133

Token 341: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0006629953859373927
    2. '(P' → logprob: -7.500662803649902
    3. ' P' → logprob: -9.125662803649902
    4. '           ' → logprob: -14.125662803649902
    5. ' (' → logprob: -15.500662803649902
    6. '   ' → logprob: -16.00066375732422
    7. '               ' → logprob: -16.62566375732422
    8. '	P' → logprob: -17.12566375732422
    9. '[P' → logprob: -17.25066375732422
    10. '(' → logprob: -17.37566375732422

Token 342: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004324573092162609
    2. 'j' → logprob: -7.75043249130249
    3. '[' → logprob: -13.500432014465332
    4. '[
' → logprob: -15.750432014465332
    5. '```' → logprob: -15.875432014465332
    6. '[P' → logprob: -16.12543296813965
    7. '	j' → logprob: -16.75043296813965
    8. '[i' → logprob: -17.12543296813965
    9. '_j' → logprob: -17.50043296813965
    10. ' j' → logprob: -18.12543296813965

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002349242102354765
    2. ']+' → logprob: -6.252349376678467
    3. '+' → logprob: -8.002348899841309
    4. '-' → logprob: -9.877348899841309
    5. ' -' → logprob: -11.377348899841309
    6. ' +' → logprob: -11.877348899841309
    7. ' ]' → logprob: -12.252348899841309
    8. '[j' → logprob: -12.877348899841309
    9. '[' → logprob: -13.002348899841309
    10. ']-' → logprob: -13.127348899841309

Token 344: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931642889976501
    2. ' +' → logprob: -0.6931642889976501
    3. '+x' → logprob: -11.693163871765137
    4. ' -' → logprob: -12.318163871765137
    5. '-' → logprob: -13.068163871765137
    6. '+p' → logprob: -14.193163871765137
    7. '+j' → logprob: -15.568163871765137
    8. '+A' → logprob: -15.568163871765137
    9. '+C' → logprob: -15.693163871765137
    10. '+i' → logprob: -15.818163871765137

Token 345: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09474819153547287
    2. 'comb' → logprob: -2.8447482585906982
    3. ' x' → logprob: -3.4697482585906982
    4. ' comb' → logprob: -6.969748020172119
    5. '           ' → logprob: -9.969748497009277
    6. '   ' → logprob: -10.344748497009277
    7. '(x' → logprob: -10.594748497009277
    8. '               ' → logprob: -10.844748497009277
    9. 'P' → logprob: -10.969748497009277
    10. 'com' → logprob: -11.344748497009277

Token 346: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021913025993853807
    2. ' *' → logprob: -6.752191066741943
    3. '*' → logprob: -7.502191066741943
    4. ' )' → logprob: -7.877191066741943
    5. ')%' → logprob: -9.627191543579102
    6. '   ' → logprob: -11.502191543579102
    7. '*j' → logprob: -12.877191543579102
    8. '*)' → logprob: -13.002191543579102
    9. '[' → logprob: -13.627191543579102
    10. '%' → logprob: -13.752191543579102

Token 347: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3869989514350891
    2. ' %' → logprob: -1.1369988918304443
    3. ')' → logprob: -9.761999130249023
    4. ')%' → logprob: -10.011999130249023
    5. '%c' → logprob: -12.136999130249023
    6. '%A' → logprob: -12.261999130249023
    7. '   ' → logprob: -12.761999130249023
    8. '%s' → logprob: -13.136999130249023
    9. '%B' → logprob: -13.261999130249023
    10. ' %=' → logprob: -13.511999130249023

Token 348: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. '_MOD' → logprob: -19.87502098083496
    4. '.MOD' → logprob: -20.87502098083496
    5. 'MO' → logprob: -22.87502098083496
    6. 'M' → logprob: -23.25002098083496
    7. 'mod' → logprob: -23.37502098083496
    8. '   ' → logprob: -23.62502098083496
    9. 'MODULE' → logprob: -24.12502098083496
    10. ' ' → logprob: -24.62502098083496

Token 349: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' Correction' (ID: 134873)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27555471658706665
    2. 'for' → logprob: -1.7755546569824219
    3. '   ' → logprob: -3.900554656982422
    4. ' for' → logprob: -4.525554656982422
    5. 'return' → logprob: -4.525554656982422
    6. 'if' → logprob: -4.775554656982422
    7. '#' → logprob: -4.900554656982422
    8. 'pass' → logprob: -5.275554656982422
    9. '#print' → logprob: -6.150554656982422
    10. 'result' → logprob: -6.275554656982422

Token 353: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25917232036590576
    2. '   ' → logprob: -1.7591723203659058
    3. ' for' → logprob: -2.8841724395751953
    4. '```' → logprob: -8.759172439575195
    5. '	for' → logprob: -10.009172439575195
    6. 'P' → logprob: -12.009172439575195
    7. '[' → logprob: -12.509172439575195
    8. '    
' → logprob: -13.634172439575195
    9. '
' → logprob: -13.759172439575195
    10. '``' → logprob: -13.759172439575195

Token 354: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.17297039926052094
    2. 'for' → logprob: -2.7979702949523926
    3. 'l' → logprob: -3.2979702949523926
    4. ' P' → logprob: -3.5479702949523926
    5. 'la' → logprob: -4.672970294952393
    6. 'range' → logprob: -5.172970294952393
    7. ' la' → logprob: -5.422970294952393
    8. ' for' → logprob: -5.672970294952393
    9. 'len' → logprob: -6.172970294952393
    10. ' l' → logprob: -6.547970294952393

Token 355: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013652592897415161
    2. 'P' → logprob: -4.513652801513672
    3. ' for' → logprob: -6.138652801513672
    4. '   ' → logprob: -7.888652801513672
    5. '```' → logprob: -10.638652801513672
    6. 'i' → logprob: -10.888652801513672
    7. '
' → logprob: -12.388652801513672
    8. '[' → logprob: -12.388652801513672
    9. '#' → logprob: -13.138652801513672
    10. 'sum' → logprob: -13.388652801513672

Token 356: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2296726107597351
    2. '   ' → logprob: -1.7296726703643799
    3. ' for' → logprob: -3.72967267036438
    4. 'P' → logprob: -5.604672431945801
    5. 'i' → logprob: -10.3546724319458
    6. '	for' → logprob: -10.3546724319458
    7. '
' → logprob: -10.7296724319458
    8. 'if' → logprob: -11.1046724319458
    9. 'def' → logprob: -11.2296724319458
    10. '```' → logprob: -11.2296724319458

Token 357: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16526222229003906
    2. 'P' → logprob: -2.040262222290039
    3. ' for' → logprob: -4.540262222290039
    4. 'total' → logprob: -6.665262222290039
    5. 'sign' → logprob: -6.915262222290039
    6. 'inv' → logprob: -6.915262222290039
    7. '   ' → logprob: -7.040262222290039
    8. 'offset' → logprob: -7.040262222290039
    9. 'if' → logprob: -7.165262222290039
    10. 'sum' → logprob: -7.415262222290039

Token 358: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5769088268280029
    2. 'i' → logprob: -1.701908826828003
    3. ' j' → logprob: -1.951908826828003
    4. 'j' → logprob: -2.201908826828003
    5. 'k' → logprob: -6.951909065246582
    6. ' k' → logprob: -7.326909065246582
    7. 'x' → logprob: -7.576909065246582
    8. ' idx' → logprob: -7.826909065246582
    9. ' x' → logprob: -8.201909065246582
    10. 'idx' → logprob: -9.201909065246582

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14279349148273468
    2. 'in' → logprob: -2.0177934169769287
    3. 'range' → logprob: -9.517793655395508
    4. 'n' → logprob: -10.767793655395508
    5. ',' → logprob: -11.267793655395508
    6. ' range' → logprob: -12.017793655395508
    7. ' ' → logprob: -13.392793655395508
    8. '   ' → logprob: -13.892793655395508
    9. '```' → logprob: -14.892793655395508
    10. ')' → logprob: -15.267793655395508

Token 360: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007612305693328381
    2. ' range' → logprob: -4.882612228393555
    3. '   ' → logprob: -13.132612228393555
    4. 'P' → logprob: -13.757612228393555
    5. ' ' → logprob: -14.382612228393555
    6. '(range' → logprob: -14.382612228393555
    7. 'in' → logprob: -15.007612228393555
    8. 'r' → logprob: -15.507612228393555
    9. 'rang' → logprob: -15.632612228393555
    10. '	range' → logprob: -15.632612228393555

Token 361: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23176369071006775
    2. '(R' → logprob: -2.1067636013031006
    3. '(L' → logprob: -2.4817636013031006
    4. '(M' → logprob: -6.60676383972168
    5. '(len' → logprob: -8.60676383972168
    6. '(N' → logprob: -10.85676383972168
    7. '(P' → logprob: -10.85676383972168
    8. ' (' → logprob: -10.85676383972168
    9. '1' → logprob: -11.10676383972168
    10. '((' → logprob: -11.73176383972168

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26063045859336853
    2. '+' → logprob: -1.510630488395691
    3. ' +' → logprob: -5.0106306076049805
    4. '   ' → logprob: -6.8856306076049805
    5. ' ,' → logprob: -7.0106306076049805
    6. ',M' → logprob: -9.88563060760498
    7. '+,' → logprob: -12.01063060760498
    8. ',R' → logprob: -12.51063060760498
    9. '-' → logprob: -12.51063060760498
    10. '       ' → logprob: -13.63563060760498

Token 363: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0006444069440476596
    2. ' R' → logprob: -7.875644207000732
    3. 'L' → logprob: -8.25064468383789
    4. '   ' → logprob: -13.25064468383789
    5. 'N' → logprob: -14.00064468383789
    6. 'len' → logprob: -15.75064468383789
    7. 'min' → logprob: -16.37564468383789
    8. ' L' → logprob: -16.37564468383789
    9. ' ' → logprob: -16.37564468383789
    10. '	R' → logprob: -16.87564468383789

Token 364: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815567910671234
    2. ' +' → logprob: -4.018155574798584
    3. ',' → logprob: -12.643156051635742
    4. '   ' → logprob: -13.268156051635742
    5. '+
' → logprob: -14.768156051635742
    6. '+,' → logprob: -16.518156051635742
    7. '
' → logprob: -17.018156051635742
    8. '＋' → logprob: -17.143156051635742
    9. ' ,' → logprob: -17.268156051635742
    10. '```' → logprob: -17.393156051635742

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.375040054321289
    3. '   ' → logprob: -11.750040054321289
    4. '```' → logprob: -15.000040054321289
    5. '+' → logprob: -16.37504005432129
    6. ',' → logprob: -16.68754005432129
    7. '2' → logprob: -17.25004005432129
    8. ')' → logprob: -17.31254005432129
    9. '       ' → logprob: -17.62504005432129
    10. '...' → logprob: -17.75004005432129

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.125005722045898
    4. '```' → logprob: -16.1250057220459
    5. '2' → logprob: -16.6250057220459
    6. '
' → logprob: -18.0625057220459
    7. '+' → logprob: -18.2500057220459
    8. ')' → logprob: -18.6250057220459
    9. ',' → logprob: -19.0625057220459
    10. '0' → logprob: -19.5625057220459

Token 367: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7512528896331787
    2. '):' → logprob: -0.8762528896331787
    3. ',' → logprob: -2.2512528896331787
    4. '+' → logprob: -5.876253128051758
    5. '   ' → logprob: -5.876253128051758
    6. ':' → logprob: -7.251253128051758
    7. '       ' → logprob: -9.626253128051758
    8. '):
' → logprob: -9.626253128051758
    9. ' ,' → logprob: -9.626253128051758
    10. ')' → logprob: -10.751253128051758

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019340807921253145
    2. '   ' → logprob: -8.87519359588623
    3. ' if' → logprob: -10.25019359588623
    4. ' P' → logprob: -12.12519359588623
    5. ',' → logprob: -12.75019359588623
    6. '```' → logprob: -12.75019359588623
    7. 'P' → logprob: -13.25019359588623
    8. '	   ' → logprob: -13.62519359588623
    9. 'if' → logprob: -13.75019359588623
    10. '           ' → logprob: -14.00019359588623

Token 369: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.056614845991134644
    2. 'if' → logprob: -3.681614875793457
    3. '   ' → logprob: -4.056614875793457
    4. ' P' → logprob: -5.056614875793457
    5. '       ' → logprob: -5.431614875793457
    6. ' if' → logprob: -6.806614875793457
    7. 'j' → logprob: -7.931614875793457
    8. 'for' → logprob: -9.181614875793457
    9. '	P' → logprob: -9.306614875793457
    10. ' ' → logprob: -10.056614875793457

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.368984107510187e-05
    2. '[j' → logprob: -10.750033378601074
    3. '[' → logprob: -11.625033378601074
    4. '[P' → logprob: -13.625033378601074
    5. 'i' → logprob: -14.875033378601074
    6. '\[' → logprob: -15.125033378601074
    7. '
' → logprob: -15.250033378601074
    8. '[I' → logprob: -15.375033378601074
    9. ' [' → logprob: -15.500033378601074
    10. '```' → logprob: -15.875033378601074

Token 371: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013500562636181712
    2. ']+=' → logprob: -9.25013542175293
    3. ']=' → logprob: -10.50013542175293
    4. '-' → logprob: -11.87513542175293
    5. ']=(' → logprob: -13.75013542175293
    6. ']-' → logprob: -14.25013542175293
    7. ' ]' → logprob: -14.50013542175293
    8. ')]' → logprob: -14.87513542175293
    9. '   ' → logprob: -14.87513542175293
    10. '[' → logprob: -15.25013542175293

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038037821650505066
    2. '+=' → logprob: -3.4130377769470215
    3. ' =' → logprob: -6.4130377769470215
    4. '%=' → logprob: -6.7880377769470215
    5. '-=' → logprob: -7.0380377769470215
    6. ' +=' → logprob: -7.6630377769470215
    7. ' ^=' → logprob: -9.03803825378418
    8. '=(' → logprob: -9.53803825378418
    9. '*=' → logprob: -10.16303825378418
    10. ' -=' → logprob: -10.91303825378418

Token 373: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0556827038526535
    2. ' (' → logprob: -3.30568265914917
    3. '(' → logprob: -4.30568265914917
    4. '0' → logprob: -5.80568265914917
    5. '((' → logprob: -8.055683135986328
    6. ' ' → logprob: -8.930683135986328
    7. '   ' → logprob: -9.055683135986328
    8. '(int' → logprob: -9.305683135986328
    9. '1' → logprob: -10.055683135986328
    10. 'P' → logprob: -10.055683135986328

Token 374: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0004155377100687474
    2. ' P' → logprob: -8.625415802001953
    3. '(P' → logprob: -9.250415802001953
    4. '   ' → logprob: -9.375415802001953
    5. '-P' → logprob: -10.500415802001953
    6. '-' → logprob: -11.125415802001953
    7. '0' → logprob: -12.750415802001953
    8. ' (' → logprob: -13.625415802001953
    9. '           ' → logprob: -13.875415802001953
    10. ' -' → logprob: -14.125415802001953

Token 375: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. 'i' → logprob: -12.625003814697266
    3. '(i' → logprob: -15.250003814697266
    4. '[' → logprob: -15.625003814697266
    5. ']' → logprob: -16.125003814697266
    6. ')' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '[I' → logprob: -17.750003814697266
    9. ' i' → logprob: -17.875003814697266
    10. ')i' → logprob: -18.000003814697266

Token 376: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010505681857466698
    2. ']' → logprob: -4.635505676269531
    3. '[' → logprob: -8.010505676269531
    4. 'i' → logprob: -8.135505676269531
    5. '-' → logprob: -10.010505676269531
    6. ')' → logprob: -10.885505676269531
    7. '   ' → logprob: -11.260505676269531
    8. '
' → logprob: -11.385505676269531
    9. '(i' → logprob: -11.385505676269531
    10. '[
' → logprob: -12.135505676269531

Token 377: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.571392834186554
    2. '-' → logprob: -1.0713927745819092
    3. '+' → logprob: -3.196392774581909
    4. '[i' → logprob: -3.446392774581909
    5. ' +' → logprob: -3.946392774581909
    6. ')' → logprob: -8.321393013000488
    7. '[' → logprob: -9.071393013000488
    8. '   ' → logprob: -9.696393013000488
    9. '[-' → logprob: -10.071393013000488
    10. '*' → logprob: -10.196393013000488

Token 378: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08638918399810791
    2. '1' → logprob: -3.0863890647888184
    3. ' P' → logprob: -3.3363890647888184
    4. ' ' → logprob: -7.586389064788818
    5. '(P' → logprob: -8.086389541625977
    6. '   ' → logprob: -8.836389541625977
    7. 'comb' → logprob: -8.961389541625977
    8. 'M' → logprob: -9.336389541625977
    9. ' (' → logprob: -9.461389541625977
    10. '(' → logprob: -9.836389541625977

Token 379: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.125003814697266
    3. '[' → logprob: -14.250003814697266
    4. '[M' → logprob: -14.750003814697266
    5. '(i' → logprob: -16.625003814697266
    6. '[
' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '[P' → logprob: -17.125003814697266
    9. '{i' → logprob: -17.625003814697266
    10. '[j' → logprob: -18.125003814697266

Token 380: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021370556205511093
    2. 'i' → logprob: -6.252137184143066
    3. '-' → logprob: -9.377137184143066
    4. ' -' → logprob: -9.877137184143066
    5. '[' → logprob: -10.252137184143066
    6. '-i' → logprob: -11.377137184143066
    7. ' i' → logprob: -12.002137184143066
    8. '(i' → logprob: -12.252137184143066
    9. '[-' → logprob: -12.502137184143066
    10. '   ' → logprob: -12.752137184143066

Token 381: ' M' (ID: 391)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47786745429039
    2. 'M' → logprob: -0.9778674840927124
    3. 'i' → logprob: -5.602867603302002
    4. ' M' → logprob: -10.102867126464844
    5. 'L' → logprob: -10.602867126464844
    6. 'R' → logprob: -11.227867126464844
    7. '   ' → logprob: -12.102867126464844
    8. ' ' → logprob: -12.227867126464844
    9. 'j' → logprob: -13.352867126464844
    10. 'N' → logprob: -13.852867126464844

Token 382: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16025997698307037
    2. ']' → logprob: -1.9102599620819092
    3. ' ])' → logprob: -11.410260200500488
    4. ']+' → logprob: -11.660260200500488
    5. ']%' → logprob: -11.785260200500488
    6. ')' → logprob: -12.410260200500488
    7. ' ]' → logprob: -13.910260200500488
    8. '   ' → logprob: -14.160260200500488
    9. ']
' → logprob: -14.285260200500488
    10. ''])' → logprob: -14.910260200500488

Token 383: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07912606745958328
    2. ' %' → logprob: -2.5791261196136475
    3. ')' → logprob: -9.079126358032227
    4. ')%' → logprob: -9.579126358032227
    5. '   ' → logprob: -10.454126358032227
    6. '%A' → logprob: -12.204126358032227
    7. '%i' → logprob: -12.579126358032227
    8. ' %=' → logprob: -13.079126358032227
    9. '%B' → logprob: -13.079126358032227
    10. '```' → logprob: -13.454126358032227

Token 384: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -19.750003814697266
    4. 'M' → logprob: -20.500003814697266
    5. '.MOD' → logprob: -20.875003814697266
    6. 'MO' → logprob: -21.375003814697266
    7. 'mod' → logprob: -23.750003814697266
    8. 'MODULE' → logprob: -23.750003814697266
    9. '```' → logprob: -24.000003814697266
    10. '   ' → logprob: -24.125003814697266

Token 385: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0523780584335327
    2. '   ' → logprob: -1.4273780584335327
    3. 'for' → logprob: -1.5523780584335327
    4. 'if' → logprob: -2.0523781776428223
    5. 'print' → logprob: -2.8023781776428223
    6. '#' (adapté à ' #') → logprob: -5.427378177642822
    7. 'result' → logprob: -5.552378177642822
    8. ' for' → logprob: -7.802378177642822
    9. 'pass' → logprob: -7.927378177642822
    10. ' return' → logprob: -8.802377700805664

Token 388: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5193220376968384
    2. 'print' → logprob: -1.1443220376968384
    3. 'for' → logprob: -2.769321918487549
    4. 'result' → logprob: -4.644321918487549
    5. 'if' → logprob: -5.144321918487549
    6. '#' → logprob: -5.769321918487549
    7. '   ' → logprob: -6.144321918487549
    8. ' return' → logprob: -7.144321918487549
    9. 'sys' → logprob: -7.269321918487549
    10. ' for' → logprob: -7.519321918487549

Token 389: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4041004776954651
    2. '   ' → logprob: -2.7791004180908203
    3. 'total' → logprob: -2.7791004180908203
    4. ' result' → logprob: -2.9041004180908203
    5. 'for' → logprob: -3.1541004180908203
    6. 'res' → logprob: -3.7791004180908203
    7. 'sum' → logprob: -3.7791004180908203
    8. ' for' → logprob: -4.27910041809082
    9. 'answer' → logprob: -4.52910041809082
    10. ' total' → logprob: -4.65410041809082

Token 390: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9299213290214539
    2. 'answer' → logprob: -1.6799213886260986
    3. 'result' → logprob: -2.3049213886260986
    4. 'ans' → logprob: -2.5549213886260986
    5. 'S' → logprob: -2.8049213886260986
    6. 'dp' → logprob: -3.4299213886260986
    7. 'res' → logprob: -3.5549213886260986
    8. 'P' → logprob: -3.6799213886260986
    9. 'for' → logprob: -4.1799211502075195
    10. 'total' → logprob: -4.3049211502075195

Token 391: '
' (ID: 198)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.20184959471225739
    2. '   ' → logprob: -1.7018495798110962
    3. ' Q' → logprob: -7.826849460601807
    4. '	Q' → logprob: -11.201849937438965
    5. '```' → logprob: -11.451849937438965
    6. '
' → logprob: -12.201849937438965
    7. ' ' → logprob: -12.451849937438965
    8. '  ' → logprob: -13.826849937438965
    9. 'def' → logprob: -14.326849937438965
    10. '    
' → logprob: -14.576849937438965

Token 392: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.05096082016825676
    2. '   ' → logprob: -3.0509607791900635
    3. ' Q' → logprob: -6.050961017608643
    4. '	Q' → logprob: -11.675960540771484
    5. '```' → logprob: -12.925960540771484
    6. ' ' → logprob: -13.175960540771484
    7. 'import' → logprob: -14.675960540771484
    8. '  ' → logprob: -14.800960540771484
    9. 'for' → logprob: -15.050960540771484
    10. ' for' → logprob: -15.550960540771484

Token 393: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0015541439643129706
    2. '   ' → logprob: -6.751554012298584
    3. ' Q' → logprob: -7.876554012298584
    4. '```' → logprob: -12.876554489135742
    5. ' ' → logprob: -14.376554489135742
    6. '	Q' → logprob: -14.501554489135742
    7. '
' → logprob: -15.376554489135742
    8. '``' → logprob: -16.501554489135742
    9. '  ' → logprob: -16.626554489135742
    10. 'def' → logprob: -16.751554489135742

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142260193824768
    2. '=' → logprob: -1.7014225721359253
    3. '=[' → logprob: -12.951422691345215
    4. '   ' → logprob: -13.326422691345215
    5. '[' → logprob: -13.951422691345215
    6. ' ' → logprob: -13.951422691345215
    7. 'Q' → logprob: -14.326422691345215
    8. ',' → logprob: -14.451422691345215
    9. ' =[' → logprob: -14.701422691345215
    10. 'P' → logprob: -14.826422691345215

Token 395: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4407440423965454
    2. ' [' → logprob: -1.3157440423965454
    3. '[R' → logprob: -3.065743923187256
    4. '[M' → logprob: -4.190743923187256
    5. '[L' → logprob: -4.190743923187256
    6. '[N' → logprob: -5.190743923187256
    7. '[P' → logprob: -5.315743923187256
    8. '   ' → logprob: -9.315744400024414
    9. 'R' → logprob: -9.690744400024414
    10. '[len' → logprob: -9.690744400024414

Token 396: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6143304705619812
    2. '   ' → logprob: -1.364330530166626
    3. ' for' → logprob: -1.614330530166626
    4. '[' → logprob: -5.489330291748047
    5. 'range' → logprob: -9.489330291748047
    6. ' range' → logprob: -9.989330291748047
    7. '(range' → logprob: -10.239330291748047
    8. '<|end|>' → logprob: -10.239330291748047
    9. '[i' → logprob: -10.989330291748047
    10. ' [' → logprob: -11.364330291748047

Token 397: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012639610096812248
    2. ' for' → logprob: -4.76263952255249
    3. '   ' → logprob: -6.76263952255249
    4. 'pow' → logprob: -6.88763952255249
    5. 'total' → logprob: -7.63763952255249
    6. 'power' → logprob: -7.88763952255249
    7. 'Q' → logprob: -8.262639999389648
    8. 'val' → logprob: -8.887639999389648
    9. 's' → logprob: -8.887639999389648
    10. 'q' → logprob: -10.137639999389648

Token 398: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1504829376935959
    2. 'k' → logprob: -2.9004828929901123
    3. 'x' → logprob: -3.1504828929901123
    4. 'j' → logprob: -4.275483131408691
    5. 'r' → logprob: -5.400483131408691
    6. 'length' → logprob: -5.525483131408691
    7. 'd' → logprob: -5.650483131408691
    8. 'val' → logprob: -5.775483131408691
    9. 'l' → logprob: -6.025483131408691
    10. 'q' → logprob: -6.150483131408691

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01120874285697937
    2. 'in' → logprob: -4.511208534240723
    3. 'range' → logprob: -9.886208534240723
    4. ',' → logprob: -10.636208534240723
    5. '   ' → logprob: -10.886208534240723
    6. ' ' → logprob: -11.761208534240723
    7. '_' → logprob: -11.761208534240723
    8. 'Q' → logprob: -12.011208534240723
    9. '0' → logprob: -12.261208534240723
    10. '=' → logprob: -12.386208534240723

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008622728288173676
    2. ' range' → logprob: -4.758622646331787
    3. 'L' → logprob: -13.133623123168945
    4. 'R' → logprob: -13.258623123168945
    5. 'P' → logprob: -13.633623123168945
    6. '(range' → logprob: -13.633623123168945
    7. ' ' → logprob: -14.758623123168945
    8. '   ' → logprob: -15.008623123168945
    9. 'in' → logprob: -15.633623123168945
    10. 'Q' → logprob: -15.633623123168945

Token 401: '(R' (ID: 4092)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.6677295565605164
    2. '(L' → logprob: -0.7927295565605164
    3. '(R' → logprob: -3.667729616165161
    4. '(' → logprob: -5.792729377746582
    5. 'L' → logprob: -5.917729377746582
    6. '(N' → logprob: -6.167729377746582
    7. 'M' → logprob: -6.917729377746582
    8. '(len' → logprob: -10.167729377746582
    9. '   ' → logprob: -10.292729377746582
    10. 'R' → logprob: -10.417729377746582

Token 402: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031936727464199066
    2. ' +' → logprob: -3.5319366455078125
    3. ',' → logprob: -6.7819366455078125
    4. '-' → logprob: -7.4069366455078125
    5. ' -' → logprob: -8.656936645507812
    6. '   ' → logprob: -8.906936645507812
    7. ')' → logprob: -10.031936645507812
    8. 'M' → logprob: -11.031936645507812
    9. ')+' → logprob: -11.531936645507812
    10. ' ,' → logprob: -11.656936645507812

Token 403: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003501242317724973
    2. ' ' → logprob: -8.000349998474121
    3. '2' → logprob: -11.750349998474121
    4. '+' → logprob: -12.750349998474121
    5. '   ' → logprob: -13.750349998474121
    6. '0' → logprob: -14.812849998474121
    7. '```' → logprob: -14.875349998474121
    8. ',' → logprob: -15.125349998474121
    9. '(' → logprob: -15.250349998474121
    10. '
' → logprob: -15.437849998474121

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017840604996308684
    2. '+' → logprob: -6.501783847808838
    3. '2' → logprob: -9.126784324645996
    4. ' ' → logprob: -9.626784324645996
    5. '0' → logprob: -10.376784324645996
    6. 'M' → logprob: -10.376784324645996
    7. ' +' → logprob: -11.251784324645996
    8. '(M' → logprob: -11.751784324645996
    9. '-' → logprob: -12.501784324645996
    10. '(' → logprob: -12.939284324645996

Token 405: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.016169032081961632
    2. '):' → logprob: -4.14116907119751
    3. '+' → logprob: -9.891168594360352
    4. '   ' → logprob: -10.141168594360352
    5. '):
' → logprob: -10.891168594360352
    6. ')' → logprob: -11.016168594360352
    7. ':' → logprob: -12.766168594360352
    8. ' ):
' → logprob: -13.016168594360352
    9. '       ' → logprob: -13.641168594360352
    10. ':
' → logprob: -13.766168594360352

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2339772880077362
    2. '   ' → logprob: -1.7339773178100586
    3. 'Q' → logprob: -3.8589773178100586
    4. ' Q' → logprob: -4.733977317810059
    5. '	Q' → logprob: -6.608977317810059
    6. '	   ' → logprob: -8.108977317810059
    7. '	' → logprob: -8.608977317810059
    8. '    ' → logprob: -9.233977317810059
    9. '           ' → logprob: -10.608977317810059
    10. ',' → logprob: -10.733977317810059

Token 407: ' val' (ID: 1459)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.11296424269676208
    2. 'if' → logprob: -2.487964153289795
    3. '       ' → logprob: -4.862964153289795
    4. '   ' → logprob: -5.237964153289795
    5. ' Q' → logprob: -5.487964153289795
    6. 'val' (adapté à ' val') → logprob: -5.612964153289795
    7. ' if' → logprob: -6.487964153289795
    8. 'q' → logprob: -7.362964153289795
    9. 'x' → logprob: -8.612964630126953
    10. ' val' → logprob: -8.987964630126953

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14268310368061066
    2. ' =' → logprob: -2.0176830291748047
    3. ',' → logprob: -13.267683029174805
    4. '=int' → logprob: -13.267683029174805
    5. '=
' → logprob: -14.142683029174805
    6. ')' → logprob: -14.142683029174805
    7. '=P' → logprob: -14.392683029174805
    8. 'import' → logprob: -14.767683029174805
    9. ' ' → logprob: -14.892683029174805
    10. '   ' → logprob: -15.142683029174805

Token 409: ' fact' (ID: 2840)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5352141857147217
    2. '0' → logprob: -2.0352141857147217
    3. '(P' → logprob: -2.5352141857147217
    4. 'fact' → logprob: -2.7852141857147217
    5. '(' → logprob: -3.2852141857147217
    6. 'pow' → logprob: -3.2852141857147217
    7. 'sum' → logprob: -4.035214424133301
    8. '(i' → logprob: -4.410214424133301
    9. '1' → logprob: -4.660214424133301
    10. ' P' → logprob: -5.035214424133301

Token 410: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32094454765319824
    2. '[L' → logprob: -2.0709445476531982
    3. '[N' → logprob: -2.4459445476531982
    4. '[R' → logprob: -3.0709445476531982
    5. '[' → logprob: -4.945944786071777
    6. '[M' → logprob: -5.445944786071777
    7. 'i' → logprob: -6.695944786071777
    8. 'L' → logprob: -6.945944786071777
    9. 'N' → logprob: -7.195944786071777
    10. 'R' → logprob: -7.945944786071777

Token 411: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004743041470646858
    2. '-' → logprob: -5.5047430992126465
    3. ' -' → logprob: -7.7547430992126465
    4. '   ' → logprob: -8.504742622375488
    5. ']
' → logprob: -11.879742622375488
    6. '-i' → logprob: -11.879742622375488
    7. ']*' → logprob: -12.254742622375488
    8. '*' → logprob: -12.754742622375488
    9. '+' → logprob: -12.879742622375488
    10. ' ]' → logprob: -13.254742622375488

Token 412: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010465461760759354
    2. 'R' → logprob: -5.135465621948242
    3. 'L' → logprob: -6.260465621948242
    4. 'N' → logprob: -6.260465621948242
    5. ' i' → logprob: -8.135465621948242
    6. '1' → logprob: -8.635465621948242
    7. 'M' → logprob: -9.510465621948242
    8. 'Q' → logprob: -10.010465621948242
    9. ' ' → logprob: -10.635465621948242
    10. '
' → logprob: -10.760465621948242

Token 413: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001097417771234177
    2. '-' → logprob: -10.000109672546387
    3. '   ' → logprob: -10.125109672546387
    4. ' -' → logprob: -11.625109672546387
    5. ' ]' → logprob: -11.750109672546387
    6. ']
' → logprob: -13.625109672546387
    7. '[i' → logprob: -14.250109672546387
    8. ')' → logprob: -14.625109672546387
    9. '']' → logprob: -14.625109672546387
    10. '```' → logprob: -14.625109672546387

Token 414: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009121468290686607
    2. '*' → logprob: -4.884121417999268
    3. '=' → logprob: -8.134121894836426
    4. 'val' → logprob: -8.634121894836426
    5. '   ' → logprob: -8.759121894836426
    6. ')' → logprob: -8.884121894836426
    7. 'def' → logprob: -9.009121894836426
    8. ' //' → logprob: -9.134121894836426
    9. '<|end|>' → logprob: -9.384121894836426
    10. ',' → logprob: -9.759121894836426

Token 415: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.14274296164512634
    2. ' fact' → logprob: -2.017742872238159
    3. 'pow' → logprob: -10.017743110656738
    4. ' pow' → logprob: -11.767743110656738
    5. '   ' → logprob: -12.392743110656738
    6. '_fact' → logprob: -12.517743110656738
    7. '.fact' → logprob: -13.267743110656738
    8. ' ' → logprob: -13.392743110656738
    9. '  ' → logprob: -13.892743110656738
    10. '
' → logprob: -14.267743110656738

Token 416: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.03374873846769333
    2. '[N' → logprob: -4.408748626708984
    3. '[i' → logprob: -5.033748626708984
    4. '[R' → logprob: -5.408748626708984
    5. 'inv' → logprob: -5.533748626708984
    6. '[' → logprob: -5.908748626708984
    7. '[M' → logprob: -6.408748626708984
    8. '[L' → logprob: -6.783748626708984
    9. '[X' → logprob: -8.908748626708984
    10. '[-' → logprob: -9.283748626708984

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025768116116523743
    2. '[N' → logprob: -3.7757680416107178
    3. '[L' → logprob: -6.025768280029297
    4. '[R' → logprob: -9.900768280029297
    5. '[' → logprob: -10.900768280029297
    6. 'i' → logprob: -11.525768280029297
    7. '[M' → logprob: -11.525768280029297
    8. '[(' → logprob: -12.025768280029297
    9. '[n' → logprob: -13.150768280029297
    10. '[I' → logprob: -13.150768280029297

Token 418: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000111768240458332
    2. ']%' → logprob: -9.12511157989502
    3. '%' → logprob: -13.00011157989502
    4. ' ]' → logprob: -14.75011157989502
    5. '   ' → logprob: -16.250112533569336
    6. '```' → logprob: -17.375112533569336
    7. '']' → logprob: -18.000112533569336
    8. ']
' → logprob: -18.625112533569336
    9. '[' → logprob: -18.625112533569336
    10. ' ' → logprob: -19.000112533569336

Token 419: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6326728463172913
    2. ' %' → logprob: -0.7576728463172913
    3. ' *' → logprob: -10.257673263549805
    4. '   ' → logprob: -11.132673263549805
    5. ' ' → logprob: -12.007673263549805
    6. '*' → logprob: -12.132673263549805
    7. '       ' → logprob: -12.507673263549805
    8. ' ' → logprob: -13.382673263549805
    9. 'import' → logprob: -13.632673263549805
    10. ')%' → logprob: -13.632673263549805

Token 420: ' MOD' (ID: 32868)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.08059900254011154
    2. ' fact' → logprob: -2.830599069595337
    3. '   ' → logprob: -4.705598831176758
    4. '*' → logprob: -5.955598831176758
    5. ' ' → logprob: -6.080598831176758
    6. ' *' → logprob: -6.580598831176758
    7. 'factor' → logprob: -6.830598831176758
    8. ' (' → logprob: -7.955598831176758
    9. '[' → logprob: -8.080598831176758
    10. '<|end|>' → logprob: -8.330598831176758

Token 421: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26051363348960876
    2. ' *' → logprob: -1.5105136632919312
    3. '   ' → logprob: -5.510513782501221
    4. '*' → logprob: -5.885513782501221
    5. '<|end|>' → logprob: -8.135513305664062
    6. ')' → logprob: -8.260513305664062
    7. '```' → logprob: -8.385513305664062
    8. 'Q' → logprob: -8.385513305664062
    9. ',' → logprob: -8.635513305664062
    10. ' ' → logprob: -8.635513305664062

Token 422: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00081796565791592
    2. ' fact' → logprob: -7.125817775726318
    3. 'factor' → logprob: -11.375818252563477
    4. '_fact' → logprob: -14.250818252563477
    5. '.fact' → logprob: -14.625818252563477
    6. '   ' → logprob: -14.875818252563477
    7. 'Fact' → logprob: -15.375818252563477
    8. 'f' → logprob: -16.375818252563477
    9. 'ifact' → logprob: -16.500818252563477
    10. ' ' → logprob: -17.000818252563477

Token 423: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -4.394135612528771e-05
    2. '[N' → logprob: -10.250043869018555
    3. 'inv' → logprob: -12.125043869018555
    4. '_INV' → logprob: -13.500043869018555
    5. '[' → logprob: -14.625043869018555
    6. '```' → logprob: -15.125043869018555
    7. '   ' → logprob: -15.500043869018555
    8. 'Inv' → logprob: -15.750043869018555
    9. '﻿' → logprob: -16.375043869018555
    10. '`' → logprob: -16.625043869018555

Token 424: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -4.3464544432936236e-05
    2. 'N' → logprob: -10.750043869018555
    3. '[' → logprob: -10.875043869018555
    4. '[n' → logprob: -13.250043869018555
    5. '(N' → logprob: -14.500043869018555
    6. '[i' → logprob: -15.125043869018555
    7. '	N' → logprob: -16.125043869018555
    8. '   ' → logprob: -16.125043869018555
    9. '```' → logprob: -16.375043869018555
    10. '[(' → logprob: -16.750043869018555

Token 425: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.59112948179245
    2. '[N' → logprob: -0.96612948179245
    3. '[' → logprob: -2.8411295413970947
    4. '<|end|>' → logprob: -5.716129302978516
    5. ')' → logprob: -7.341129302978516
    6. '%' → logprob: -7.466129302978516
    7. '[]' → logprob: -7.716129302978516
    8. 'i' → logprob: -7.841129302978516
    9. ']' → logprob: -7.966129302978516
    10. 'N' → logprob: -8.216129302978516

Token 426: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2941938042640686
    2. '       ' → logprob: -1.6691937446594238
    3. ' %' → logprob: -3.419193744659424
    4. ')' → logprob: -4.044193744659424
    5. 'Q' → logprob: -4.794193744659424
    6. ')%' → logprob: -5.544193744659424
    7. '   ' → logprob: -6.419193744659424
    8. 'val' → logprob: -6.544193744659424
    9. '
' → logprob: -7.919193744659424
    10. ' val' → logprob: -9.169194221496582

Token 427: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.7046350836753845
    2. '(M' → logprob: -0.9546350836753845
    3. ' MOD' → logprob: -2.9546351432800293
    4. ' (' → logprob: -3.4546351432800293
    5. '(Mod' → logprob: -3.9546351432800293
    6. '(' → logprob: -5.079635143280029
    7. '(N' → logprob: -5.204635143280029
    8. '(i' → logprob: -6.704635143280029
    9. '{' → logprob: -6.829635143280029
    10. '(R' → logprob: -7.329635143280029

Token 428: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010735770774772391
    2. '   ' → logprob: -10.375107765197754
    3. 'Q' → logprob: -10.500107765197754
    4. ',' → logprob: -11.000107765197754
    5. '<|end|>' → logprob: -11.000107765197754
    6. ')' → logprob: -11.875107765197754
    7. ',Q' → logprob: -13.125107765197754
    8. ' Q' → logprob: -13.375107765197754
    9. '        
' → logprob: -14.125107765197754
    10. ',
' → logprob: -14.500107765197754

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040026482194662094
    2. 'Q' → logprob: -3.9150264263153076
    3. '   ' → logprob: -4.040026664733887
    4. ',' → logprob: -6.915026664733887
    5. ' Q' → logprob: -7.790026664733887
    6. ')' → logprob: -9.540026664733887
    7. ',
' → logprob: -9.915026664733887
    8. '
' → logprob: -10.040026664733887
    9. ',Q' → logprob: -10.040026664733887
    10. '           ' → logprob: -10.790026664733887

Token 430: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.00034118397161364555
    2. ' Q' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.250341415405273
    4. '       ' → logprob: -14.250341415405273
    5. '	Q' → logprob: -15.750341415405273
    6. 'val' → logprob: -16.500341415405273
    7. 'q' → logprob: -18.500341415405273
    8. '
' → logprob: -18.625341415405273
    9. ' ' → logprob: -19.000341415405273
    10. ',Q' → logprob: -19.750341415405273

Token 431: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021021578868385404
    2. '.' → logprob: -8.50020980834961
    3. ' .' → logprob: -12.75020980834961
    4. '.app' → logprob: -12.87520980834961
    5. '.ap' → logprob: -13.75020980834961
    6. '.extend' → logprob: -16.00020980834961
    7. '=' → logprob: -16.87520980834961
    8. '.push' → logprob: -17.25020980834961
    9. '.py' → logprob: -18.37520980834961
    10. '=.' → logprob: -18.62520980834961

Token 432: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.003260177094489336
    2. 'val' → logprob: -5.753260135650635
    3. ' val' → logprob: -9.503260612487793
    4. '(' → logprob: -12.878260612487793
    5. ' (' → logprob: -13.003260612487793
    6. '((' → logprob: -13.253260612487793
    7. ',val' → logprob: -14.378260612487793
    8. '[val' → logprob: -14.753260612487793
    9. '	val' → logprob: -15.753260612487793
    10. '0' → logprob: -16.128259658813477

Token 433: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004901225329376757
    2. '%' → logprob: -8.125490188598633
    3. '<|end|>' → logprob: -9.375490188598633
    4. ')
' → logprob: -9.875490188598633
    5. '   ' → logprob: -10.500490188598633
    6. ' )' → logprob: -11.750490188598633
    7. ')%' → logprob: -11.750490188598633
    8. ' %' → logprob: -12.125490188598633
    9. '%)' → logprob: -13.375490188598633
    10. '       ' → logprob: -13.375490188598633

Token 434: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13269007205963135
    2. 'result' → logprob: -3.007689952850342
    3. 'return' → logprob: -3.132689952850342
    4. '   ' → logprob: -4.382689952850342
    5. '#' (adapté à ' #') → logprob: -5.007689952850342
    6. ' for' → logprob: -5.382689952850342
    7. 'res' → logprob: -6.757689952850342
    8. 'answer' → logprob: -6.757689952850342
    9. 'def' → logprob: -6.882689952850342
    10. 'sum' → logprob: -7.007689952850342

Token 436: ' Fonction' (ID: 189149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20098859071731567
    2. 'result' → logprob: -2.075988531112671
    3. 'for' → logprob: -3.575988531112671
    4. '#' → logprob: -4.45098876953125
    5. ' return' → logprob: -5.45098876953125
    6. 'print' → logprob: -5.82598876953125
    7. 'answer' → logprob: -6.07598876953125
    8. 'res' → logprob: -6.20098876953125
    9. 'def' → logprob: -6.82598876953125
    10. ' for' → logprob: -7.20098876953125

Token 437: ' f' (ID: 285)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12918899953365326
    2. ' def' → logprob: -2.1291890144348145
    3. ' f' → logprob: -7.7541890144348145
    4. ' compute' → logprob: -8.004188537597656
    5. ' calculate' → logprob: -8.129188537597656
    6. ' factorial' → logprob: -8.504188537597656
    7. 'f' → logprob: -8.879188537597656
    8. ' calc' → logprob: -9.254188537597656
    9. 'factor' → logprob: -9.629188537597656
    10. ' pow' → logprob: -9.754188537597656

Token 438: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07694325596094131
    2. '(' → logprob: -3.3269431591033936
    3. ':' → logprob: -3.4519431591033936
    4. '_' → logprob: -6.326943397521973
    5. '(n' → logprob: -6.701943397521973
    6. ' def' → logprob: -7.201943397521973
    7. '_def' → logprob: -8.076943397521973
    8. '():' → logprob: -8.201943397521973
    9. '(
' → logprob: -8.576943397521973
    10. 'ndef' → logprob: -8.576943397521973

Token 439: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013792512938380241
    2. ' def' → logprob: -5.138792514801025
    3. '(' → logprob: -5.513792514801025
    4. ':' → logprob: -6.013792514801025
    5. '   ' → logprob: -8.388792037963867
    6. '_' → logprob: -8.638792037963867
    7. '(n' → logprob: -8.888792037963867
    8. '```' → logprob: -9.013792037963867
    9. 'f' → logprob: -9.263792037963867
    10. '(
' → logprob: -9.388792037963867

Token 440: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10046135634183884
    2. ' def' → logprob: -2.35046124458313
    3. '   ' → logprob: -9.22546100616455
    4. ' 
' → logprob: -9.47546100616455
    5. '    
' → logprob: -10.72546100616455
    6. '```' → logprob: -11.10046100616455
    7. '(' → logprob: -11.22546100616455
    8. '	def' → logprob: -11.47546100616455
    9. '(
' → logprob: -12.72546100616455
    10. '[' → logprob: -13.35046100616455

Token 441: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20143741369247437
    2. ' f' → logprob: -1.7014374732971191
    3. ' ' → logprob: -12.201436996459961
    4. '_f' → logprob: -12.451436996459961
    5. '	f' → logprob: -12.576436996459961
    6. '```' → logprob: -12.951436996459961
    7. ' ' → logprob: -13.576436996459961
    8. 'factor' → logprob: -13.951436996459961
    9. ' factorial' → logprob: -13.951436996459961
    10. '   ' → logprob: -14.326436996459961

Token 442: '(R' (ID: 4092)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11182749271392822
    2. '(' → logprob: -3.2368273735046387
    3. '(x' → logprob: -3.4868273735046387
    4. '(k' → logprob: -3.4868273735046387
    5. '(n' → logprob: -5.736827373504639
    6. '(j' → logprob: -6.736827373504639
    7. '(s' → logprob: -8.111827850341797
    8. '(a' → logprob: -8.361827850341797
    9. '(idx' → logprob: -9.111827850341797
    10. '(index' → logprob: -10.236827850341797

Token 443: 'R' (ID: 49)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011698533780872822
    2. ',' → logprob: -5.0116987228393555
    3. '):
' → logprob: -5.5116987228393555
    4. ')' → logprob: -7.1366987228393555
    5. '+' → logprob: -10.011698722839355
    6. ' ):' → logprob: -10.636698722839355
    7. '   ' → logprob: -11.136698722839355
    8. ':' → logprob: -11.261698722839355
    9. '):
' → logprob: -11.261698722839355
    10. '=' → logprob: -12.636698722839355

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008821140974760056
    2. ')' → logprob: -5.3838210105896
    3. ',' → logprob: -6.0088210105896
    4. '):
' → logprob: -6.3838210105896
    5. '(' → logprob: -11.633821487426758
    6. '):
' → logprob: -12.383821487426758
    7. ' ):' → logprob: -12.508821487426758
    8. '   ' → logprob: -12.633821487426758
    9. ':' → logprob: -12.758821487426758
    10. '_' → logprob: -13.008821487426758

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027682865038514137
    2. '   ' → logprob: -8.375276565551758
    3. '	   ' → logprob: -11.375276565551758
    4. '<|end|>' → logprob: -11.375276565551758
    5. '        
' → logprob: -11.875276565551758
    6. '    
' → logprob: -13.000276565551758
    7. '           ' → logprob: -13.250276565551758
    8. '	' → logprob: -13.375276565551758
    9. '```' → logprob: -13.625276565551758
    10. '\n' → logprob: -13.625276565551758

Token 446: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1865867376327515
    2. 'res' → logprob: -1.4365867376327515
    3. 'result' → logprob: -1.4365867376327515
    4. '   ' → logprob: -2.311586856842041
    5. ' if' → logprob: -2.811586856842041
    6. 'return' → logprob: -3.811586856842041
    7. ' res' → logprob: -4.186586856842041
    8. '       ' → logprob: -4.936586856842041
    9. ' result' → logprob: -4.936586856842041
    10. 's' → logprob: -5.936586856842041

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5806342959403992
    2. ' =' → logprob: -0.8306342959403992
    3. ' +=' → logprob: -5.580634117126465
    4. '+=' → logprob: -7.080634117126465
    5. '_' → logprob: -10.580634117126465
    6. '+' → logprob: -11.455634117126465
    7. ')' → logprob: -11.580634117126465
    8. ' ' → logprob: -12.080634117126465
    9. ',' → logprob: -12.080634117126465
    10. '   ' → logprob: -12.705634117126465

Token 448: ' fact' (ID: 2840)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12695761024951935
    2. ' ' → logprob: -2.126957654953003
    3. '(' → logprob: -11.376957893371582
    4. ' (' → logprob: -12.001957893371582
    5. '1' → logprob: -12.126957893371582
    6. ' ' → logprob: -13.251957893371582
    7. '   ' → logprob: -13.751957893371582
    8. 'pow' → logprob: -14.001957893371582
    9. ' pow' → logprob: -14.626957893371582
    10. '[' → logprob: -15.126957893371582

Token 449: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29571622610092163
    2. '[N' → logprob: -1.5457162857055664
    3. '[R' → logprob: -3.1707162857055664
    4. 'N' → logprob: -8.420716285705566
    5. 'RR' → logprob: -8.545716285705566
    6. '   ' → logprob: -9.170716285705566
    7. '_inv' → logprob: -9.170716285705566
    8. '_R' → logprob: -9.795716285705566
    9. '_N' → logprob: -9.920716285705566
    10. '[f' → logprob: -10.920716285705566

Token 450: 'RR' (ID: 42498)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18440917134284973
    2. 'RR' → logprob: -1.8094091415405273
    3. 'R' → logprob: -5.559409141540527
    4. 'L' → logprob: -7.434409141540527
    5. 'X' → logprob: -9.434409141540527
    6. 'NN' → logprob: -10.059409141540527
    7. 'M' → logprob: -10.684409141540527
    8. 'NR' → logprob: -11.559409141540527
    9. ' N' → logprob: -11.684409141540527
    10. '[' → logprob: -11.684409141540527

Token 451: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0145778339356184
    2. '+' → logprob: -4.264577865600586
    3. ' +' → logprob: -8.139577865600586
    4. '   ' → logprob: -9.764577865600586
    5. ']*' → logprob: -11.264577865600586
    6. ']%' → logprob: -11.514577865600586
    7. ' ]' → logprob: -11.639577865600586
    8. ']
' → logprob: -11.639577865600586
    9. '+r' → logprob: -12.264577865600586
    10. '-' → logprob: -12.514577865600586

Token 452: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.013035638257861137
    2. 'M' → logprob: -4.763035774230957
    3. 'L' → logprob: -5.888035774230957
    4. 'R' → logprob: -6.888035774230957
    5. '1' → logprob: -7.513035774230957
    6. ' N' → logprob: -10.013035774230957
    7. '   ' → logprob: -10.888035774230957
    8. ' M' → logprob: -13.013035774230957
    9. '0' → logprob: -13.513035774230957
    10. ' ' → logprob: -13.888035774230957

Token 453: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014931005716789514
    2. '-' → logprob: -9.375149726867676
    3. ' ]' → logprob: -10.625149726867676
    4. '   ' → logprob: -11.375149726867676
    5. ' -' → logprob: -11.625149726867676
    6. ']%' → logprob: -11.875149726867676
    7. ']
' → logprob: -12.000149726867676
    8. '+' → logprob: -12.750149726867676
    9. ']*' → logprob: -14.000149726867676
    10. '```' → logprob: -14.500149726867676

Token 454: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7852562665939331
    2. ' *' → logprob: -1.410256266593933
    3. '   ' → logprob: -2.6602563858032227
    4. ')' → logprob: -3.0352563858032227
    5. '<|end|>' → logprob: -3.1602563858032227
    6. '%' → logprob: -3.2852563858032227
    7. 'def' → logprob: -3.2852563858032227
    8. ' %' → logprob: -3.2852563858032227
    9. '*' → logprob: -4.785256385803223
    10. '	' → logprob: -5.535256385803223

Token 455: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.01106221228837967
    2. ' fact' → logprob: -4.511062145233154
    3. 'pow' → logprob: -11.761062622070312
    4. '_fact' → logprob: -13.011062622070312
    5. '.fact' → logprob: -13.886062622070312
    6. '   ' → logprob: -14.261062622070312
    7. 'factor' → logprob: -14.761062622070312
    8. 'f' → logprob: -14.886062622070312
    9. 'Fact' → logprob: -14.886062622070312
    10. '
' → logprob: -15.011062622070312

Token 456: '_inv' (ID: 53427)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0041435761377215385
    2. '[R' → logprob: -5.754143714904785
    3. '[' → logprob: -7.879143714904785
    4. '[f' → logprob: -8.129143714904785
    5. '_inv' → logprob: -8.754143714904785
    6. 'inv' → logprob: -10.129143714904785
    7. '[M' → logprob: -10.254143714904785
    8. '[L' → logprob: -10.629143714904785
    9. '[n' → logprob: -11.629143714904785
    10. 'Inv' → logprob: -11.754143714904785

Token 457: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.042252328246831894
    2. '[N' → logprob: -3.5422523021698
    3. '[R' → logprob: -4.417252540588379
    4. 'RR' → logprob: -8.042252540588379
    5. 'N' → logprob: -10.667252540588379
    6. '[n' → logprob: -12.667252540588379
    7. '[f' → logprob: -12.667252540588379
    8. '   ' → logprob: -13.542252540588379
    9. '(R' → logprob: -14.167252540588379
    10. '[(' → logprob: -14.667252540588379

Token 458: 'RR' (ID: 42498)
  Prédit: 'RR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RR' → logprob: -0.00638446444645524
    2. '[' → logprob: -5.131384372711182
    3. 'N' → logprob: -8.63138484954834
    4. 'R' → logprob: -9.13138484954834
    5. '[R' → logprob: -9.38138484954834
    6. ' RR' → logprob: -10.25638484954834
    7. '[N' → logprob: -10.50638484954834
    8. '(R' → logprob: -11.50638484954834
    9. '   ' → logprob: -12.25638484954834
    10. '(' → logprob: -13.00638484954834

Token 459: ']' (ID: 60)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.587296724319458
    2. ']' → logprob: -0.837296724319458
    3. '[' → logprob: -4.962296485900879
    4. '[R' → logprob: -6.212296485900879
    5. '%' → logprob: -6.712296485900879
    6. ']%' → logprob: -7.212296485900879
    7. '```' → logprob: -9.087296485900879
    8. '[
' → logprob: -9.462296485900879
    9. '   ' → logprob: -10.712296485900879
    10. '[%' → logprob: -10.962296485900879

Token 460: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04964299127459526
    2. '%' → logprob: -3.049643039703369
    3. ' *' → logprob: -7.424643039703369
    4. '       ' → logprob: -8.799642562866211
    5. ' ' → logprob: -9.424642562866211
    6. ')' → logprob: -9.799642562866211
    7. '<|end|>' → logprob: -10.049642562866211
    8. '   ' → logprob: -10.174642562866211
    9. ' ' → logprob: -10.299642562866211
    10. ')%' → logprob: -10.799642562866211

Token 461: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.41008228063583374
    2. ' MOD' → logprob: -1.1600823402404785
    3. 'fact' → logprob: -4.0350823402404785
    4. ' fact' → logprob: -5.2850823402404785
    5. '   ' → logprob: -8.78508186340332
    6. 'mod' → logprob: -12.16008186340332
    7. '(M' → logprob: -12.28508186340332
    8. '.MOD' → logprob: -12.41008186340332
    9. 'FACT' → logprob: -12.53508186340332
    10. '_MOD' → logprob: -12.66008186340332

Token 462: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06076304242014885
    2. '<|end|>' → logprob: -3.310763120651245
    3. '   ' → logprob: -4.185762882232666
    4. ')' → logprob: -5.685762882232666
    5. ' ' → logprob: -6.685762882232666
    6. '	' → logprob: -7.685762882232666
    7. ' *' → logprob: -8.185763359069824
    8. '    ' → logprob: -8.310763359069824
    9. ' ' → logprob: -8.435763359069824
    10. '        ' → logprob: -8.560763359069824

Token 463: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0003364158037584275
    2. ' fact' → logprob: -8.000336647033691
    3. 'f' → logprob: -14.375336647033691
    4. '.fact' → logprob: -16.250335693359375
    5. '   ' → logprob: -16.500335693359375
    6. 'pow' → logprob: -16.750335693359375
    7. 'factor' → logprob: -17.000335693359375
    8. '_fact' → logprob: -17.125335693359375
    9. 'fait' → logprob: -17.250335693359375
    10. 'Fact' → logprob: -17.250335693359375

Token 464: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00011093381908722222
    2. 'inv' → logprob: -9.375110626220703
    3. '[N' → logprob: -11.125110626220703
    4. '_INV' → logprob: -11.625110626220703
    5. '[' → logprob: -13.500110626220703
    6. 'Inv' → logprob: -15.625110626220703
    7. '_inf' → logprob: -15.875110626220703
    8. 'INV' → logprob: -16.125110626220703
    9. 'N' → logprob: -16.250110626220703
    10. 'def' → logprob: -16.500110626220703

Token 465: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -6.76628842484206e-05
    2. 'N' → logprob: -9.875067710876465
    3. '[' → logprob: -11.375067710876465
    4. '(N' → logprob: -12.625067710876465
    5. '[
' → logprob: -14.750067710876465
    6. '	N' → logprob: -15.125067710876465
    7. '[n' → logprob: -15.125067710876465
    8. '```' → logprob: -15.125067710876465
    9. '   ' → logprob: -16.50006675720215
    10. ' [' → logprob: -17.00006675720215

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022659937385469675
    2. ')' → logprob: -6.877265930175781
    3. 'def' → logprob: -7.877265930175781
    4. '}' → logprob: -8.252265930175781
    5. ' ]' → logprob: -8.752265930175781
    6. ']%' → logprob: -8.877265930175781
    7. '   ' → logprob: -9.002265930175781
    8. '%' → logprob: -9.252265930175781
    9. '```' → logprob: -10.502265930175781
    10. '(' → logprob: -11.502265930175781

Token 467: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.0832912921905518
    2. ')' → logprob: -1.3332912921905518
    3. '%' → logprob: -1.4582912921905518
    4. '       ' → logprob: -2.7082912921905518
    5. '<|end|>' → logprob: -3.0832912921905518
    6. '   ' → logprob: -3.4582912921905518
    7. '(' → logprob: -4.958291053771973
    8. ' ' → logprob: -5.583291053771973
    9. ')%' → logprob: -5.958291053771973
    10. 'def' → logprob: -6.333291053771973

Token 468: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006717505399137735
    2. ' MOD' → logprob: -5.006717681884766
    3. '_MOD' → logprob: -14.131717681884766
    4. '   ' → logprob: -15.006717681884766
    5. ' ' → logprob: -15.256717681884766
    6. '.MOD' → logprob: -15.381717681884766
    7. '(M' → logprob: -15.506717681884766
    8. '```' → logprob: -16.006717681884766
    9. '(' → logprob: -16.131717681884766
    10. '
' → logprob: -17.256717681884766

Token 469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14280536770820618
    2. '<|end|>' → logprob: -2.517805337905884
    3. '
' → logprob: -3.642805337905884
    4. '+' → logprob: -5.017805576324463
    5. '	' → logprob: -5.392805576324463
    6. '   ' → logprob: -5.892805576324463
    7. ')' → logprob: -5.892805576324463
    8. ' ' → logprob: -6.642805576324463
    9. '        
' → logprob: -6.642805576324463
    10. '[' → logprob: -6.767805576324463

Token 470: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: ' x' (ID: 1215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.93851637840271
    2. '
' → logprob: -1.43851637840271
    3. ' total' → logprob: -2.18851637840271
    4. 'return' → logprob: -2.56351637840271
    5. '   ' → logprob: -3.06351637840271
    6. 'if' → logprob: -3.31351637840271
    7. ' 
' → logprob: -3.68851637840271
    8. ' if' → logprob: -4.063516616821289
    9. ' return' → logprob: -4.688516616821289
    10. ' for' → logprob: -4.688516616821289

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2825632095336914
    2. '=' → logprob: -1.4075632095336914
    3. '   ' → logprob: -7.407563209533691
    4. ',' → logprob: -7.782563209533691
    5. '  ' → logprob: -9.532563209533691
    6. ' ' → logprob: -9.657563209533691
    7. '=int' → logprob: -10.657563209533691
    8. ')' → logprob: -10.907563209533691
    9. '```' → logprob: -10.907563209533691
    10. ' ' → logprob: -10.907563209533691

Token 473: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.260206937789917
    2. 'fact' → logprob: -1.760206937789917
    3. 'RR' → logprob: -1.760206937789917
    4. 'P' → logprob: -2.385206937789917
    5. '(R' → logprob: -2.635206937789917
    6. 'R' → logprob: -3.135206937789917
    7. '(' → logprob: -3.135206937789917
    8. 'pow' → logprob: -3.385206937789917
    9. '1' → logprob: -3.635206937789917
    10. '(P' → logprob: -4.010207176208496

Token 474: '0' (ID: 15)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9707924723625183
    2. 'fact' → logprob: -2.095792531967163
    3. '(R' → logprob: -2.345792531967163
    4. 'RR' → logprob: -2.345792531967163
    5. 'P' → logprob: -2.845792531967163
    6. '0' → logprob: -2.845792531967163
    7. '(' → logprob: -2.845792531967163
    8. 'R' → logprob: -3.470792531967163
    9. '1' → logprob: -3.470792531967163
    10. 'Q' → logprob: -3.595792531967163

Token 475: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20246392488479614
    2. 'for' (adapté à ' for') → logprob: -2.0774638652801514
    3. '       ' → logprob: -3.2024638652801514
    4. '   ' → logprob: -4.0774641036987305
    5. '	for' → logprob: -8.82746410369873
    6. '<|end|>' → logprob: -8.82746410369873
    7. ' ' → logprob: -9.82746410369873
    8. ' i' → logprob: -10.95246410369873
    9. '    ' → logprob: -11.95246410369873
    10. ' f' → logprob: -12.07746410369873

Token 478: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1584620624780655
    2. 'k' → logprob: -2.2834620475769043
    3. 'j' → logprob: -3.4084620475769043
    4. ' i' → logprob: -4.783462047576904
    5. ' k' → logprob: -7.158462047576904
    6. ' j' → logprob: -7.408462047576904
    7. 'y' → logprob: -8.033462524414062
    8. '_i' → logprob: -8.283462524414062
    9. '   ' → logprob: -8.408462524414062
    10. 'r' → logprob: -8.533462524414062

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014628469944000244
    2. 'in' → logprob: -4.2646284103393555
    3. ',' → logprob: -8.139628410339355
    4. ' ' → logprob: -9.764628410339355
    5. ' ,' → logprob: -10.764628410339355
    6. '	' → logprob: -11.139628410339355
    7. '	in' → logprob: -11.514628410339355
    8. '_' → logprob: -11.514628410339355
    9. ' ' → logprob: -11.514628410339355
    10. '0' → logprob: -12.014628410339355

Token 480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6327606439590454
    2. ' range' → logprob: -0.7577606439590454
    3. '   ' → logprob: -9.382761001586914
    4. ' P' → logprob: -11.007761001586914
    5. ' ' → logprob: -11.257761001586914
    6. ' in' → logprob: -11.382761001586914
    7. '(range' → logprob: -12.382761001586914
    8. '	range' → logprob: -12.507761001586914
    9. ' M' → logprob: -12.757761001586914
    10. 'P' → logprob: -12.757761001586914

Token 481: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.6046731472015381
    2. '(M' → logprob: -1.104673147201538
    3. '(N' → logprob: -2.479673147201538
    4. '(' → logprob: -3.729673147201538
    5. '(len' → logprob: -4.354673385620117
    6. '(U' → logprob: -7.354673385620117
    7. '(L' → logprob: -8.229673385620117
    8. '   ' → logprob: -8.354673385620117
    9. '(P' → logprob: -8.854673385620117
    10. '(min' → logprob: -9.479673385620117

Token 482: 'R' (ID: 49)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09371624141931534
    2. ' +' → logprob: -2.4687161445617676
    3. 'M' → logprob: -6.593716144561768
    4. ')' → logprob: -7.218716144561768
    5. 'R' → logprob: -7.468716144561768
    6. ' ' → logprob: -7.968716144561768
    7. '   ' → logprob: -8.093716621398926
    8. '-' → logprob: -8.343716621398926
    9. ' -' → logprob: -8.343716621398926
    10. '0' → logprob: -8.468716621398926

Token 483: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2528560161590576
    2. ' +' → logprob: -1.5028560161590576
    3. ',' → logprob: -8.002856254577637
    4. '   ' → logprob: -8.127856254577637
    5. '):
' → logprob: -8.877856254577637
    6. '):' → logprob: -9.627856254577637
    7. '-' → logprob: -10.127856254577637
    8. ' -' → logprob: -10.877856254577637
    9. ' ,' → logprob: -11.752856254577637
    10. '       ' → logprob: -11.752856254577637

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.825890159234405e-05
    2. ' ' → logprob: -9.625068664550781
    3. '   ' → logprob: -14.500068664550781
    4. '```' → logprob: -14.625068664550781
    5. '2' → logprob: -15.250068664550781
    6. 'N' → logprob: -15.250068664550781
    7. '0' → logprob: -15.250068664550781
    8. '
' → logprob: -15.875068664550781
    9. '+' → logprob: -16.87506866455078
    10. 'M' → logprob: -17.12506866455078

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -15.375008583068848
    4. '2' → logprob: -16.12500762939453
    5. '
' → logprob: -16.37500762939453
    6. 'N' → logprob: -16.81250762939453
    7. '   ' → logprob: -16.93750762939453
    8. '0' → logprob: -18.06250762939453
    9. 'import' → logprob: -18.68750762939453
    10. 'M' → logprob: -18.75000762939453

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18226692080497742
    2. '):' → logprob: -1.8072669506072998
    3. '       ' → logprob: -6.932266712188721
    4. '   ' → logprob: -7.307266712188721
    5. ':' → logprob: -7.557266712188721
    6. ',' → logprob: -9.182267189025879
    7. '):
' → logprob: -9.307267189025879
    8. '+' → logprob: -9.807267189025879
    9. ':
' → logprob: -10.432267189025879
    10. ')' → logprob: -10.682267189025879

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09923162311315536
    2. '       ' → logprob: -2.849231719970703
    3. '	       ' → logprob: -3.724231719970703
    4. ' x' → logprob: -4.724231719970703
    5. 'x' → logprob: -6.224231719970703
    6. '<|end|>' → logprob: -8.099231719970703
    7. '   ' → logprob: -8.224231719970703
    8. '	   ' → logprob: -8.349231719970703
    9. '		   ' → logprob: -8.724231719970703
    10. '		' → logprob: -8.724231719970703

Token 488: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14763443171977997
    2. 'x' (adapté à ' x') → logprob: -2.272634506225586
    3. '           ' → logprob: -3.647634506225586
    4. '       ' → logprob: -5.522634506225586
    5. '	       ' → logprob: -6.397634506225586
    6. '   ' → logprob: -7.397634506225586
    7. ' ' → logprob: -7.522634506225586
    8. '               ' → logprob: -7.897634506225586
    9. '```' → logprob: -8.522634506225586
    10. ' if' → logprob: -9.147634506225586

Token 489: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43854662775993347
    2. '+=' → logprob: -1.0635466575622559
    3. '=' → logprob: -5.063546657562256
    4. ' =' → logprob: -5.688546657562256
    5. ']+=' → logprob: -10.438546180725098
    6. '+' → logprob: -10.563546180725098
    7. '```' → logprob: -11.813546180725098
    8. '       ' → logprob: -12.188546180725098
    9. '   ' → logprob: -12.438546180725098
    10. '    ' → logprob: -13.188546180725098

Token 490: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02086709253489971
    2. ' (' → logprob: -4.020866870880127
    3. '(i' → logprob: -6.645866870880127
    4. '(' → logprob: -6.895866870880127
    5. '(P' → logprob: -8.395867347717285
    6. '(f' → logprob: -9.520867347717285
    7. '(Q' → logprob: -10.895867347717285
    8. ' ' → logprob: -11.145867347717285
    9. '(val' → logprob: -11.145867347717285
    10. '(X' → logprob: -11.395867347717285

Token 491: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005988170392811298
    2. '(x' → logprob: -5.130988121032715
    3. ' x' → logprob: -9.755988121032715
    4. '(' → logprob: -15.005988121032715
    5. '   ' → logprob: -15.130988121032715
    6. ' (' → logprob: -15.130988121032715
    7. '	x' → logprob: -15.505988121032715
    8. '
' → logprob: -16.38098907470703
    9. ')x' → logprob: -16.50598907470703
    10. '           ' → logprob: -16.63098907470703

Token 492: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693156361579895
    2. ' +' → logprob: -0.693156361579895
    3. '+i' → logprob: -12.693156242370605
    4. '+
' → logprob: -13.693156242370605
    5. '*' → logprob: -13.818156242370605
    6. '+x' → logprob: -13.943156242370605
    7. ' +
' → logprob: -13.943156242370605
    8. '[' → logprob: -14.443156242370605
    9. ' *' → logprob: -15.318156242370605
    10. ' -' → logprob: -15.443156242370605

Token 493: ' Q' (ID: 1486)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.026568956673145294
    2. 'Q' → logprob: -3.90156888961792
    3. ' P' → logprob: -5.52656888961792
    4. '(P' → logprob: -7.15156888961792
    5. '   ' → logprob: -7.77656888961792
    6. 'f' → logprob: -8.401569366455078
    7. '(i' → logprob: -9.526569366455078
    8. ' Q' → logprob: -9.526569366455078
    9. 'comb' → logprob: -9.526569366455078
    10. 'fact' → logprob: -9.651569366455078

Token 494: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -11.500020980834961
    3. 'i' → logprob: -11.625020980834961
    4. '[N' → logprob: -13.750020980834961
    5. '[I' → logprob: -15.500020980834961
    6. '[
' → logprob: -15.750020980834961
    7. '```' → logprob: -16.00002098083496
    8. '[j' → logprob: -16.12502098083496
    9. '[R' → logprob: -16.12502098083496
    10. '[-' → logprob: -16.37502098083496

Token 495: 'RR' (ID: 42498)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.603335638530552e-05
    2. 'R' → logprob: -10.250096321105957
    3. '   ' → logprob: -10.375096321105957
    4. ' i' → logprob: -11.625096321105957
    5. '[i' → logprob: -12.250096321105957
    6. 'L' → logprob: -12.625096321105957
    7. '
' → logprob: -12.875096321105957
    8. '```' → logprob: -13.500096321105957
    9. '
' → logprob: -13.750096321105957
    10. ' ' → logprob: -13.750096321105957

Token 496: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6871929168701172
    2. '-' → logprob: -0.8121929168701172
    3. '-i' → logprob: -2.937192916870117
    4. '   ' → logprob: -9.812192916870117
    5. ' ' → logprob: -11.062192916870117
    6. 'i' → logprob: -11.312192916870117
    7. ']' → logprob: -11.437192916870117
    8. '])' → logprob: -11.562192916870117
    9. ' i' → logprob: -12.562192916870117
    10. '-j' → logprob: -13.562192916870117

Token 497: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014096579980105162
    2. ' i' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.125141143798828
    4. ' ' → logprob: -15.125141143798828
    5. '  ' → logprob: -17.000141143798828
    6. '	i' → logprob: -17.125141143798828
    7. '
' → logprob: -18.250141143798828
    8. '       ' → logprob: -18.625141143798828
    9. '<|end|>' → logprob: -18.750141143798828
    10. '    ' → logprob: -19.125141143798828

Token 498: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009571973932906985
    2. '])' → logprob: -7.000957012176514
    3. ' ]' → logprob: -10.125957489013672
    4. ']
' → logprob: -13.250957489013672
    5. ']*' → logprob: -13.875957489013672
    6. '   ' → logprob: -14.000957489013672
    7. ' ])' → logprob: -14.750957489013672
    8. ')' → logprob: -15.375957489013672
    9. '*' → logprob: -15.375957489013672
    10. 'i' → logprob: -15.500957489013672

Token 499: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13433584570884705
    2. '*' → logprob: -2.13433575630188
    3. ']' → logprob: -5.384335994720459
    4. ')' → logprob: -6.009335994720459
    5. '])' → logprob: -9.1343355178833
    6. '   ' → logprob: -9.3843355178833
    7. ' ]' → logprob: -11.0093355178833
    8. ' ' → logprob: -11.1343355178833
    9. '```' → logprob: -11.2593355178833
    10. '    ' → logprob: -11.3843355178833

Token 500: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004232616163790226
    2. ' P' → logprob: -5.504232406616211
    3. '   ' → logprob: -9.129232406616211
    4. 'f' → logprob: -12.004232406616211
    5. 'i' → logprob: -12.129232406616211
    6. '       ' → logprob: -12.629232406616211
    7. ' ' → logprob: -12.629232406616211
    8. '(P' → logprob: -12.629232406616211
    9. '(' → logprob: -12.754232406616211
    10. 'Q' → logprob: -12.754232406616211

Token 501: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.7689099018462e-05
    2. 'i' → logprob: -9.62508773803711
    3. '(i' → logprob: -10.87508773803711
    4. '[M' → logprob: -14.12508773803711
    5. '[' → logprob: -14.37508773803711
    6. '[L' → logprob: -14.62508773803711
    7. '[
' → logprob: -15.25008773803711
    8. '[N' → logprob: -16.00008773803711
    9. '[I' → logprob: -16.00008773803711
    10. '   ' → logprob: -16.12508773803711

Token 502: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0037237186916172504
    2. ']' → logprob: -5.753723621368408
    3. ')' → logprob: -8.378724098205566
    4. '   ' → logprob: -8.753724098205566
    5. ' ])' → logprob: -9.753724098205566
    6. ']%' → logprob: -9.878724098205566
    7. '       ' → logprob: -11.128724098205566
    8. '%' → logprob: -11.378724098205566
    9. '[i' → logprob: -12.378724098205566
    10. '    ' → logprob: -12.503724098205566

Token 503: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.19004331529140472
    2. ')' → logprob: -1.940043330192566
    3. '%' → logprob: -3.6900432109832764
    4. ')%' → logprob: -5.9400434494018555
    5. ' )' → logprob: -6.4400434494018555
    6. ' %=' → logprob: -9.440043449401855
    7. ' %)' → logprob: -10.440043449401855
    8. ' ' → logprob: -10.815043449401855
    9. '```' → logprob: -11.690043449401855
    10. ']' → logprob: -12.190043449401855

Token 504: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011709370883181691
    2. ' MOD' → logprob: -6.751171112060547
    3. 'M' → logprob: -15.251171112060547
    4. '_MOD' → logprob: -15.376171112060547
    5. '.MOD' → logprob: -15.751171112060547
    6. '(M' → logprob: -15.876171112060547
    7. '(Mod' → logprob: -17.126171112060547
    8. ' ' → logprob: -18.126171112060547
    9. 'Mod' → logprob: -18.251171112060547
    10. 'mod' → logprob: -19.001171112060547

Token 505: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059896670281887054
    2. '<|end|>' → logprob: -3.80989670753479
    3. '
' → logprob: -4.309896469116211
    4. '   ' → logprob: -4.559896469116211
    5. '	' → logprob: -6.059896469116211
    6. ' ' → logprob: -6.184896469116211
    7. '\n' → logprob: -6.184896469116211
    8. '        
' → logprob: -7.059896469116211
    9. ')' → logprob: -7.059896469116211
    10. '           ' → logprob: -7.559896469116211

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008872182108461857
    2. '<|end|>' → logprob: -5.133872032165527
    3. '
' → logprob: -6.258872032165527
    4. '	' → logprob: -8.133872032165527
    5. ' return' → logprob: -8.508872032165527
    6. '   ' → logprob: -8.758872032165527
    7. '	return' → logprob: -8.883872032165527
    8. 'return' → logprob: -9.633872032165527
    9. '           ' → logprob: -10.258872032165527
    10. ' ' → logprob: -10.508872032165527

Token 507: ' coef' (ID: 107584)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09383433312177658
    2. '   ' → logprob: -3.468834400177002
    3. ' return' → logprob: -3.593834400177002
    4. 'return' → logprob: -3.593834400177002
    5. '
' → logprob: -5.843834400177002
    6. '	return' → logprob: -7.718834400177002
    7. '```' → logprob: -10.718833923339844
    8. ' ' → logprob: -11.093833923339844
    9. '<|end|>' → logprob: -11.718833923339844
    10. '	' → logprob: -11.968833923339844

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28027811646461487
    2. 's' → logprob: -1.5302780866622925
    3. '=' → logprob: -3.780278205871582
    4. 'icients' → logprob: -5.780278205871582
    5. 'icient' → logprob: -6.655278205871582
    6. ',' → logprob: -8.405278205871582
    7. ' s' → logprob: -8.780278205871582
    8. ' ' → logprob: -9.905278205871582
    9. '[' → logprob: -9.905278205871582
    10. ' +=' → logprob: -10.030278205871582

Token 509: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -1.288400650024414
    2. 'fact' → logprob: -1.288400650024414
    3. ' comb' → logprob: -1.913400650024414
    4. ' (' → logprob: -2.163400650024414
    5. 'comb' → logprob: -2.913400650024414
    6. 'pow' → logprob: -3.163400650024414
    7. ' pow' → logprob: -3.788400650024414
    8. '(-' → logprob: -4.288400650024414
    9. ' (-' → logprob: -4.913400650024414
    10. '1' → logprob: -5.163400650024414

Token 510: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.11898685991764069
    2. '[' → logprob: -2.6189868450164795
    3. '[R' → logprob: -3.6189868450164795
    4. '[L' → logprob: -4.743987083435059
    5. '[M' → logprob: -6.118987083435059
    6. 'N' → logprob: -6.868987083435059
    7. '[P' → logprob: -9.243987083435059
    8. '[i' → logprob: -9.618987083435059
    9. '[n' → logprob: -9.618987083435059
    10. 'L' → logprob: -10.118987083435059

Token 511: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39124375581741333
    2. '-' → logprob: -1.2662436962127686
    3. ' +' → logprob: -4.391243934631348
    4. '[M' → logprob: -4.516243934631348
    5. '[N' → logprob: -4.891243934631348
    6. '[' → logprob: -5.766243934631348
    7. ' -' → logprob: -5.891243934631348
    8. 'M' → logprob: -6.266243934631348
    9. 'N' → logprob: -6.516243934631348
    10. '[-' → logprob: -8.266243934631348

Token 512: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2098853588104248
    2. '*' → logprob: -1.7098853588104248
    3. '[' → logprob: -5.459885597229004
    4. '   ' → logprob: -5.709885597229004
    5. '
' → logprob: -8.834885597229004
    6. '	' → logprob: -9.084885597229004
    7. 'def' → logprob: -9.209885597229004
    8. '```' → logprob: -9.584885597229004
    9. '    ' → logprob: -9.709885597229004
    10. '**' → logprob: -10.084885597229004

Token 513: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.000659419281873852
    2. 'pow' → logprob: -7.875659465789795
    3. ' fact' → logprob: -8.500658988952637
    4. 'factor' → logprob: -10.500658988952637
    5. 'inv' → logprob: -11.500658988952637
    6. 'f' → logprob: -11.875658988952637
    7. 'P' → logprob: -12.125658988952637
    8. '```' → logprob: -12.625658988952637
    9. '   ' → logprob: -12.750658988952637
    10. 'val' → logprob: -12.750658988952637

Token 514: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00037740718107670546
    2. '[' → logprob: -8.625377655029297
    3. 'inv' → logprob: -8.750377655029297
    4. '[N' → logprob: -12.000377655029297
    5. 'f' → logprob: -12.500377655029297
    6. '```' → logprob: -12.500377655029297
    7. '[P' → logprob: -12.500377655029297
    8. '[i' → logprob: -12.750377655029297
    9. '_val' → logprob: -12.750377655029297
    10. '_INV' → logprob: -12.875377655029297

Token 515: '[M' (ID: 98407)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.13454948365688324
    2. '[R' → logprob: -2.759549379348755
    3. '[' → logprob: -2.884549379348755
    4. '[L' → logprob: -5.384549617767334
    5. '[M' → logprob: -6.259549617767334
    6. '[n' → logprob: -9.634549140930176
    7. 'N' → logprob: -9.884549140930176
    8. '[i' → logprob: -10.634549140930176
    9. 'RR' → logprob: -11.509549140930176
    10. '(N' → logprob: -11.509549140930176

Token 516: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09258532524108887
    2. '[M' → logprob: -3.092585325241089
    3. '[N' → logprob: -4.092585563659668
    4. '[' → logprob: -4.092585563659668
    5. '[i' → logprob: -5.717585563659668
    6. '%' → logprob: -6.342585563659668
    7. '*' → logprob: -6.467585563659668
    8. '```' → logprob: -7.592585563659668
    9. '*M' → logprob: -7.592585563659668
    10. ' *' → logprob: -7.967585563659668

Token 517: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17553621530532837
    2. '%' → logprob: -1.9255361557006836
    3. ' *' → logprob: -4.550536155700684
    4. '<|end|>' → logprob: -5.550536155700684
    5. '   ' → logprob: -8.675536155700684
    6. ' ' → logprob: -8.925536155700684
    7. ')' → logprob: -9.550536155700684
    8. ' ' → logprob: -9.675536155700684
    9. '<|end|>' → logprob: -9.675536155700684
    10. '*' → logprob: -9.800536155700684

Token 518: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.7737432718276978
    2. 'MOD' → logprob: -1.2737432718276978
    3. '(M' → logprob: -2.023743152618408
    4. ' (' → logprob: -3.148743152618408
    5. 'fact' → logprob: -3.273743152618408
    6. ' fact' → logprob: -3.648743152618408
    7. '(' → logprob: -4.273743152618408
    8. '(N' → logprob: -5.648743152618408
    9. '(Mod' → logprob: -7.398743152618408
    10. ' ' → logprob: -8.148743629455566

Token 519: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00022201328829396516
    2. ' fact' → logprob: -8.750222206115723
    3. 'pow' → logprob: -10.250222206115723
    4. 'f' → logprob: -11.875222206115723
    5. 'factor' → logprob: -12.625222206115723
    6. 'comb' → logprob: -12.875222206115723
    7. '   ' → logprob: -12.875222206115723
    8. '
' → logprob: -13.125222206115723
    9. '```' → logprob: -13.250222206115723
    10. 'P' → logprob: -13.625222206115723

Token 521: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00017803447553887963
    2. 'inv' → logprob: -9.375178337097168
    3. '[M' → logprob: -10.375178337097168
    4. '[' → logprob: -11.000178337097168
    5. '[R' → logprob: -11.000178337097168
    6. '_INV' → logprob: -11.500178337097168
    7. '[N' → logprob: -11.750178337097168
    8. '```' → logprob: -13.000178337097168
    9. 'Inv' → logprob: -13.375178337097168
    10. '[_' → logprob: -13.500178337097168

Token 522: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.26031598448753357
    2. '[L' → logprob: -1.760316014289856
    3. '[R' → logprob: -3.6353158950805664
    4. '[' → logprob: -3.6353158950805664
    5. '[M' → logprob: -5.510315895080566
    6. '[(' → logprob: -8.260315895080566
    7. 'L' → logprob: -9.885315895080566
    8. '(N' → logprob: -10.760315895080566
    9. '[C' → logprob: -11.010315895080566
    10. '[K' → logprob: -11.760315895080566

Token 523: ' -' (ID: 533)
  Prédit: '-M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-M' → logprob: -0.044087737798690796
    2. '-' → logprob: -3.6690876483917236
    3. ' -' → logprob: -4.044087886810303
    4. '-N' → logprob: -9.669087409973145
    5. '   ' → logprob: -11.794087409973145
    6. '-I' → logprob: -11.919087409973145
    7. 'M' → logprob: -12.169087409973145
    8. ' ' → logprob: -12.294087409973145
    9. '[' → logprob: -12.794087409973145
    10. '-R' → logprob: -13.169087409973145

Token 524: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00023131117632146925
    2. ' M' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.500231742858887
    4. ' ' → logprob: -16.62523078918457
    5. '(M' → logprob: -16.87523078918457
    6. '	M' → logprob: -17.25023078918457
    7. '  ' → logprob: -18.00023078918457
    8. 'N' → logprob: -18.00023078918457
    9. '[M' → logprob: -18.50023078918457
    10. '(' → logprob: -18.62523078918457

Token 525: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5504157543182373
    2. ']' → logprob: -1.6754157543182373
    3. '%' → logprob: -2.1754157543182373
    4. ' %' → logprob: -2.1754157543182373
    5. '<|end|>' → logprob: -6.175415992736816
    6. ' ]' → logprob: -6.550415992736816
    7. ')%' → logprob: -6.800415992736816
    8. ']%' → logprob: -7.175415992736816
    9. ' )' → logprob: -7.175415992736816
    10. '}' → logprob: -7.425415992736816

Token 526: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5778931975364685
    2. '%' → logprob: -0.8278931975364685
    3. '[' → logprob: -7.452893257141113
    4. ')' → logprob: -7.952893257141113
    5. '<|end|>' → logprob: -8.452893257141113
    6. '[i' → logprob: -8.827893257141113
    7. '(' → logprob: -8.827893257141113
    8. '```' → logprob: -9.452893257141113
    9. '%i' → logprob: -9.577893257141113
    10. ' (' → logprob: -9.952893257141113

Token 527: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04870307445526123
    2. ' MOD' → logprob: -3.048703193664551
    3. 'M' → logprob: -9.67370319366455
    4. '(M' → logprob: -10.42370319366455
    5. ' M' → logprob: -10.92370319366455
    6. '_MOD' → logprob: -12.79870319366455
    7. ' ' → logprob: -13.79870319366455
    8. '(' → logprob: -14.92370319366455
    9. ' (' → logprob: -15.29870319366455
    10. '.MOD' → logprob: -15.54870319366455

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8983166813850403
    2. '<|end|>' → logprob: -1.3983166217803955
    3. '   ' → logprob: -1.5233166217803955
    4. '
' → logprob: -2.6483166217803955
    5. '    
' → logprob: -4.773316860198975
    6. '+' → logprob: -4.898316860198975
    7. '<|end|>' → logprob: -5.148316860198975
    8. '	return' → logprob: -5.648316860198975
    9. ')' → logprob: -5.898316860198975
    10. 'x' → logprob: -6.273316860198975

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12337006628513336
    2. '
' → logprob: -2.8733701705932617
    3. '   ' → logprob: -3.6233701705932617
    4. '<|end|>' → logprob: -3.6233701705932617
    5. ' return' → logprob: -6.373370170593262
    6. 'return' → logprob: -6.623370170593262
    7. '	return' → logprob: -6.748370170593262
    8. ' ' → logprob: -7.873370170593262
    9. '    
' → logprob: -7.998370170593262
    10. ' 
' → logprob: -8.373370170593262

Token 530: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012992801144719124
    2. ' return' → logprob: -6.012992858886719
    3. 'result' → logprob: -6.012992858886719
    4. '   ' → logprob: -6.262992858886719
    5. '       ' → logprob: -6.262992858886719
    6. 'x' → logprob: -6.512992858886719
    7. 'total' → logprob: -7.012992858886719
    8. 'if' → logprob: -7.512992858886719
    9. '
' → logprob: -7.512992858886719
    10. 'res' → logprob: -8.512992858886719

Token 531: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.4082603454589844
    2. '(co' → logprob: -1.5332603454589844
    3. ' (' → logprob: -2.1582603454589844
    4. '(x' → logprob: -6.533260345458984
    5. 'total' → logprob: -6.908260345458984
    6. '(' → logprob: -7.908260345458984
    7. 'coef' → logprob: -8.033260345458984
    8. ' total' → logprob: -8.408260345458984
    9. '(val' → logprob: -9.533260345458984
    10. '(coeff' → logprob: -9.658260345458984

Token 532: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6795286536216736
    2. '(total' → logprob: -0.9295286536216736
    3. 'coef' → logprob: -2.6795287132263184
    4. '(co' → logprob: -3.9295287132263184
    5. ' total' → logprob: -5.554528713226318
    6. '(x' → logprob: -6.304528713226318
    7. ' (' → logprob: -6.429528713226318
    8. 'x' → logprob: -6.929528713226318
    9. 'co' → logprob: -7.304528713226318
    10. ' coef' → logprob: -8.17952823638916

Token 533: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0731498971581459
    2. ' *' → logprob: -2.9481499195098877
    3. '-' → logprob: -4.573149681091309
    4. '*' → logprob: -4.948149681091309
    5. ' +' → logprob: -7.948149681091309
    6. '+' → logprob: -8.198149681091309
    7. ' ' → logprob: -10.823149681091309
    8. ')' → logprob: -11.073149681091309
    9. '   ' → logprob: -12.448149681091309
    10. ',' → logprob: -12.573149681091309

Token 534: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0643154382705688
    2. ' x' → logprob: -1.0643154382705688
    3. 'coef' → logprob: -1.6893154382705688
    4. ' coef' → logprob: -2.3143153190612793
    5. ' (' → logprob: -4.439315319061279
    6. '(co' → logprob: -4.939315319061279
    7. '(x' → logprob: -5.314315319061279
    8. '(' → logprob: -6.314315319061279
    9. 'co' → logprob: -8.064315795898438
    10. '   ' → logprob: -8.439315795898438

Token 535: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002436662558466196
    2. ' )' → logprob: -6.502436637878418
    3. ' +' → logprob: -7.627436637878418
    4. '+' → logprob: -8.127436637878418
    5. ')%' → logprob: -9.252436637878418
    6. '   ' → logprob: -10.627436637878418
    7. '*' → logprob: -11.127436637878418
    8. ' *' → logprob: -11.502436637878418
    9. ')*' → logprob: -12.502436637878418
    10. '       ' → logprob: -14.377436637878418

Token 536: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.017139997333288193
    2. ' coef' → logprob: -4.267139911651611
    3. 'fact' → logprob: -5.892139911651611
    4. '   ' → logprob: -9.64214038848877
    5. 'pow' → logprob: -10.01714038848877
    6. ' fact' → logprob: -10.26714038848877
    7. '(' → logprob: -11.39214038848877
    8. 'coeff' → logprob: -11.64214038848877
    9. '     ' → logprob: -11.89214038848877
    10. 'factor' → logprob: -11.89214038848877

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002968072658404708
    2. ')%' → logprob: -6.127967834472656
    3. '%' → logprob: -7.752967834472656
    4. ' )' → logprob: -8.002967834472656
    5. '   ' → logprob: -12.002967834472656
    6. ' %' → logprob: -12.252967834472656
    7. '+' → logprob: -12.252967834472656
    8. ' +' → logprob: -13.127967834472656
    9. '%)' → logprob: -15.752967834472656
    10. '')' → logprob: -15.877967834472656

Token 538: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4301607608795166
    2. '%' → logprob: -1.0551607608795166
    3. ')' → logprob: -7.1801605224609375
    4. '<|end|>' → logprob: -7.5551605224609375
    5. ' ' → logprob: -9.680160522460938
    6. '
' → logprob: -10.680160522460938
    7. ')%' → logprob: -10.930160522460938
    8. '%B' → logprob: -11.055160522460938
    9. '   ' → logprob: -11.555160522460938
    10. ' ' → logprob: -11.805160522460938

Token 539: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07889099419116974
    2. ' MOD' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.703890800476074
    4. '_MOD' → logprob: -15.078890800476074
    5. '.MOD' → logprob: -15.453890800476074
    6. '(M' → logprob: -16.20389175415039
    7. '```' → logprob: -16.45389175415039
    8. '   ' → logprob: -16.70389175415039
    9. ' ' → logprob: -17.20389175415039
    10. '`' → logprob: -17.82889175415039

Token 540: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46130821108818054
    2. '<|end|>' → logprob: -2.086308240890503
    3. '
' → logprob: -2.211308240890503
    4. ':' → logprob: -2.711308240890503
    5. '   ' → logprob: -3.211308240890503
    6. ' ' → logprob: -4.586308002471924
    7. 'def' → logprob: -5.586308002471924
    8. '(' → logprob: -5.961308002471924
    9. '(
' → logprob: -6.836308002471924
    10. '\n' → logprob: -6.836308002471924

Token 542: ' answer' (ID: 6052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5201416611671448
    2. '
' → logprob: -1.7701416015625
    3. 'return' → logprob: -2.5201416015625
    4. 'def' → logprob: -3.6451416015625
    5. '<|end|>' → logprob: -3.6451416015625
    6. '    
' → logprob: -3.7701416015625
    7. '    ' → logprob: -4.2701416015625
    8. 'if' → logprob: -4.3951416015625
    9. ' ' → logprob: -4.5201416015625
    10. 'print' → logprob: -4.6451416015625

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26123571395874023
    2. '=' → logprob: -1.8862357139587402
    3. '<|end|>' → logprob: -3.5112357139587402
    4. '[' → logprob: -4.26123571395874
    5. '(' → logprob: -4.76123571395874
    6. ' ' → logprob: -5.38623571395874
    7. ' +=' → logprob: -5.38623571395874
    8. '()' → logprob: -5.63623571395874
    9. ')' → logprob: -5.88623571395874
    10. '  ' → logprob: -6.13623571395874

Token 544: ' (' (ID: 350)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3744143843650818
    2. 'f' → logprob: -1.2494144439697266
    3. '0' → logprob: -3.8744144439697266
    4. ' ' → logprob: -6.124414443969727
    5. ' (' → logprob: -6.874414443969727
    6. ' sum' → logprob: -7.499414443969727
    7. 'sum' → logprob: -7.999414443969727
    8. '(f' → logprob: -8.374414443969727
    9. '(' → logprob: -9.124414443969727
    10. ' sys' → logprob: -9.874414443969727

Token 545: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002849925309419632
    2. 'pow' → logprob: -7.12785005569458
    3. ' f' → logprob: -7.37785005569458
    4. 'fact' → logprob: -7.37785005569458
    5. '(f' → logprob: -8.377849578857422
    6. 'sum' → logprob: -8.377849578857422
    7. 'P' → logprob: -9.127849578857422
    8. 'R' → logprob: -10.127849578857422
    9. '(' → logprob: -10.127849578857422
    10. '1' → logprob: -10.627849578857422

Token 546: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.23612931370735168
    2. '(L' → logprob: -1.6111292839050293
    3. '(' → logprob: -4.611129283905029
    4. ' (' → logprob: -8.111129760742188
    5. '(N' → logprob: -8.736129760742188
    6. ')' → logprob: -9.611129760742188
    7. '(M' → logprob: -9.611129760742188
    8. 'L' → logprob: -9.736129760742188
    9. '((' → logprob: -10.986129760742188
    10. ')(' → logprob: -11.361129760742188

Token 547: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004485662095248699
    2. '+' → logprob: -6.129485607147217
    3. '-' → logprob: -6.754485607147217
    4. ')+' → logprob: -7.504485607147217
    5. ')]' → logprob: -8.879486083984375
    6. ')-' → logprob: -9.629486083984375
    7. '))' → logprob: -9.629486083984375
    8. ' -' → logprob: -9.754486083984375
    9. ')
' → logprob: -10.379486083984375
    10. ' )' → logprob: -10.379486083984375

Token 548: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.427441269159317
    2. ')' → logprob: -1.3024412393569946
    3. ' +' → logprob: -3.052441358566284
    4. '+' → logprob: -4.427441120147705
    5. '-' → logprob: -4.427441120147705
    6. ')%' → logprob: -6.302441120147705
    7. '%' → logprob: -6.677441120147705
    8. ' )' → logprob: -6.802441120147705
    9. '   ' → logprob: -8.802441596984863
    10. ' *' → logprob: -8.927441596984863

Token 549: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03804275393486023
    2. ' f' → logprob: -3.2880427837371826
    3. '   ' → logprob: -14.913043022155762
    4. ' ' → logprob: -15.288043022155762
    5. '(f' → logprob: -15.288043022155762
    6. ' ' → logprob: -16.038042068481445
    7. ')' → logprob: -16.413042068481445
    8. ' (' → logprob: -16.538042068481445
    9. '(' → logprob: -16.538042068481445
    10. '  ' → logprob: -16.663042068481445

Token 550: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.751746746478602e-05
    2. '(' → logprob: -10.37504768371582
    3. ')(' → logprob: -12.25004768371582
    4. 'L' → logprob: -12.25004768371582
    5. ')' → logprob: -13.25004768371582
    6. ' (' → logprob: -13.62504768371582
    7. '(
' → logprob: -14.00004768371582
    8. '   ' → logprob: -14.50004768371582
    9. '(R' → logprob: -14.75004768371582
    10. '((' → logprob: -14.87504768371582

Token 551: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15169094502925873
    2. ' -' → logprob: -2.40169095993042
    3. ')' → logprob: -3.40169095993042
    4. '+' → logprob: -4.27669095993042
    5. ' +' → logprob: -6.27669095993042
    6. '   ' → logprob: -7.27669095993042
    7. ' ' → logprob: -8.651690483093262
    8. '1' → logprob: -9.276690483093262
    9. ' )' → logprob: -10.026690483093262
    10. '))' → logprob: -10.526690483093262

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.000009536743164
    4. ')' → logprob: -14.250009536743164
    5. '```' → logprob: -16.750009536743164
    6. '2' → logprob: -17.375009536743164
    7. '    ' → logprob: -17.875009536743164
    8. ' )' → logprob: -18.250009536743164
    9. '
' → logprob: -19.125009536743164
    10. '       ' → logprob: -19.625009536743164

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. ')' → logprob: -16.625001907348633
    5. '2' → logprob: -17.500001907348633
    6. '```' → logprob: -18.875001907348633
    7. '    ' → logprob: -20.375001907348633
    8. '
' → logprob: -20.625001907348633
    9. '  ' → logprob: -21.312501907348633
    10. '0' → logprob: -21.312501907348633

Token 554: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001483564410591498
    2. ')%' → logprob: -9.00014877319336
    3. ' )' → logprob: -11.25014877319336
    4. '+' → logprob: -11.50014877319336
    5. ' +' → logprob: -14.25014877319336
    6. '   ' → logprob: -14.50014877319336
    7. '))' → logprob: -14.75014877319336
    8. '')' → logprob: -16.12514877319336
    9. '")' → logprob: -17.12514877319336
    10. '`)' → logprob: -17.50014877319336

Token 555: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1905723512172699
    2. '%' → logprob: -1.8155723810195923
    3. '
' → logprob: -4.940572261810303
    4. '   ' → logprob: -5.690572261810303
    5. ')' → logprob: -9.315572738647461
    6. ' ' → logprob: -9.940572738647461
    7. '
' → logprob: -10.940572738647461
    8. ')%' → logprob: -11.065572738647461
    9. ' 
' → logprob: -11.315572738647461
    10. '```' → logprob: -11.690572738647461

Token 556: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006716079078614712
    2. ' MOD' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.506715774536133
    4. '_MOD' → logprob: -16.006715774536133
    5. '.MOD' → logprob: -16.131715774536133
    6. ' ' → logprob: -17.256715774536133
    7. '(M' → logprob: -17.881715774536133
    8. '```' → logprob: -17.881715774536133
    9. '`' → logprob: -18.881715774536133
    10. '100' → logprob: -19.131715774536133

Token 557: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05718411132693291
    2. '   ' → logprob: -3.0571842193603516
    3. '<|end|>' → logprob: -4.807184219360352
    4. '    
' → logprob: -8.307184219360352
    5. '
' → logprob: -9.432184219360352
    6. '<|end|>' → logprob: -11.057184219360352
    7. ')' → logprob: -11.682184219360352
    8. '```' → logprob: -11.682184219360352
    9. '

' → logprob: -12.057184219360352
    10. '  
' → logprob: -12.307184219360352

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.460600346326828
    2. '<|end|>' → logprob: -1.0856003761291504
    3. '
' → logprob: -3.5856003761291504
    4. '    
' → logprob: -6.33560037612915
    5. ')' → logprob: -7.83560037612915
    6. '```' → logprob: -7.96060037612915
    7. 'return' → logprob: -8.210599899291992
    8. '<|end|>' → logprob: -8.335599899291992
    9. '	return' → logprob: -8.460599899291992
    10. '\n' → logprob: -8.585599899291992

Token 559: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.17777672410011292
    2. '
' → logprob: -2.42777681350708
    3. '   ' → logprob: -2.67777681350708
    4. 'return' → logprob: -5.17777681350708
    5. '    
' → logprob: -8.552776336669922
    6. 'sys' → logprob: -10.802776336669922
    7. ' print' → logprob: -10.927776336669922
    8. '```' → logprob: -11.177776336669922
    9. '
' → logprob: -11.677776336669922
    10. ' return' → logprob: -12.177776336669922

Token 560: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.002169532235711813
    2. '(' → logprob: -6.252169609069824
    3. '()' → logprob: -8.627169609069824
    4. 'answer' → logprob: -9.877169609069824
    5. '(ans' → logprob: -11.877169609069824
    6. '(
' → logprob: -13.752169609069824
    7. '((' → logprob: -13.877169609069824
    8. ' (' → logprob: -14.627169609069824
    9. '(f' → logprob: -14.752169609069824
    10. '(question' → logprob: -16.002168655395508

Token 561: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.500007629394531
    3. '()' → logprob: -13.750007629394531
    4. ' )' → logprob: -13.875007629394531
    5. '())' → logprob: -14.125007629394531
    6. '')' → logprob: -15.000007629394531
    7. '")' → logprob: -15.500007629394531
    8. '`)' → logprob: -15.875007629394531
    9. '```' → logprob: -16.12500762939453
    10. '   ' → logprob: -16.87500762939453

Token 562: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02976194955408573
    2. '__' → logprob: -3.529762029647827
    3. 'name' → logprob: -11.779762268066406
    4. ' ' → logprob: -13.404762268066406
    5. '_name' → logprob: -13.904762268066406
    6. ' ' → logprob: -14.529762268066406
    7. '  ' → logprob: -15.154762268066406
    8. '```' → logprob: -15.404762268066406
    9. '___' → logprob: -15.904762268066406
    10. ' name' → logprob: -16.904762268066406

Token 564: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.162941113114357
    2. ' ==' → logprob: -2.0379412174224854
    3. ' __' → logprob: -4.787940979003906
    4. '==' → logprob: -5.162940979003906
    5. '.__' → logprob: -5.412940979003906
    6. '__.__' → logprob: -8.162940979003906
    7. '=="' → logprob: -8.412940979003906
    8. '.' → logprob: -8.662940979003906
    9. '__.' → logprob: -8.662940979003906
    10. '_' → logprob: -8.912940979003906

Token 565: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.3596853831550106e-05
    2. '==' → logprob: -10.000053405761719
    3. '__.__' → logprob: -12.000053405761719
    4. '=="' → logprob: -14.375053405761719
    5. ' ==' → logprob: -14.625053405761719
    6. '____' → logprob: -15.000053405761719
    7. '__('' → logprob: -16.00005340576172
    8. '__["' → logprob: -16.50005340576172
    9. '___' → logprob: -16.87505340576172
    10. '__.' → logprob: -17.12505340576172

Token 566: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7609936594963074
    2. ' ==' → logprob: -0.8859936594963074
    3. '==' → logprob: -2.135993719100952
    4. '=="' → logprob: -6.260993480682373
    5. '=='' → logprob: -8.385993957519531
    6. '__.__' → logprob: -9.635993957519531
    7. '_' → logprob: -10.760993957519531
    8. '.__' → logprob: -10.885993957519531
    9. ' =="' → logprob: -11.010993957519531
    10. '"' → logprob: -11.010993957519531

Token 567: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029776528477668762
    2. ''' → logprob: -3.5297765731811523
    3. '__' → logprob: -10.779776573181152
    4. ' "__' → logprob: -12.404776573181152
    5. '"user' → logprob: -14.904776573181152
    6. '"name' → logprob: -16.154775619506836
    7. ' '__' → logprob: -16.154775619506836
    8. '"class' → logprob: -16.404775619506836
    9. '("__' → logprob: -17.154775619506836
    10. '"is' → logprob: -17.279775619506836

Token 568: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.4498052223643754e-05
    2. '__' → logprob: -11.625014305114746
    3. ''' → logprob: -13.125014305114746
    4. 'name' → logprob: -13.250014305114746
    5. '"' → logprob: -13.500014305114746
    6. ' main' → logprob: -15.125014305114746
    7. '_main' → logprob: -16.500015258789062
    8. '	main' → logprob: -18.500015258789062
    9. '__":
' → logprob: -18.875015258789062
    10. 'ma' → logprob: -18.875015258789062

Token 569: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.316950261592865
    2. '__' → logprob: -1.3169503211975098
    3. '__':
' → logprob: -5.94195032119751
    4. '__:' → logprob: -7.19195032119751
    5. '__.' → logprob: -9.566949844360352
    6. '__["' → logprob: -9.691949844360352
    7. '__.__' → logprob: -10.066949844360352
    8. ':' → logprob: -10.566949844360352
    9. '.' → logprob: -11.191949844360352
    10. '==' → logprob: -11.191949844360352

Token 570: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5918941497802734
    2. '   ' → logprob: -1.3418941497802734
    3. ' main' → logprob: -1.9668941497802734
    4. '	main' → logprob: -3.0918941497802734
    5. '_main' → logprob: -10.466894149780273
    6. ' ' → logprob: -10.716894149780273
    7. '  ' → logprob: -12.716894149780273
    8. '    
' → logprob: -12.716894149780273
    9. '(main' → logprob: -13.466894149780273
    10. '   ' → logprob: -13.466894149780273

Token 571: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -19.25
    4. '   ' → logprob: -21.0
    5. 'sys' → logprob: -23.375
    6. '.main' → logprob: -24.25
    7. '(main' → logprob: -25.0
    8. '_main' → logprob: -25.0
    9. '```' → logprob: -27.375
    10. 'mainwindow' → logprob: -27.625

Token 572: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 570
Tokens correctement prédits (1ère position, stricte): 210
Tokens correctement prédits (1ère position, avec adaptation): 227
Tokens correctement prédits (top 10): 476
Précision stricte (1ère position): 36.84%
Précision adaptée (1ère position): 39.82%
Précision (top 10): 83.51%
================================================================================
