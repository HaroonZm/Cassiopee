================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as STD

# the chosen one liner for int conversion
parse_int = lambda: int(STD.readline())

# input block -- favoring variable names one would expect from the 90s
LENGTH_MAGIC = parse_int()
SORCERERS = list(map(int, STD.readline().split()))

# indices with a dramatic name
wizardry = []
spellbook = SORCERERS[:]
can_transfigure = 1

while spellbook:
    i = len(spellbook)
    staged = None
    for j in range(i-1, -1, -1):
        if spellbook[j] == j+1:
            staged = spellbook.pop(j); wizardry.append(staged)
            break
    else:
        can_transfigure = 0
        break

if can_transfigure:
    # using map for side effects to please no one
    list(map(print, wizardry[::-1]))
else:
    # expressing -1 in unary minus for obscure fun
    print(-0b1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: ' STD' (ID: 71080)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.485755980014801
    2. ' input' → logprob: -1.6107559204101562
    3. 'stdin' → logprob: -1.8607559204101562
    4. 'sys' → logprob: -4.735755920410156
    5. ' sys' → logprob: -4.985755920410156
    6. ' f' → logprob: -5.610755920410156
    7. 's' → logprob: -6.360755920410156
    8. 'data' → logprob: -6.485755920410156
    9. 'f' → logprob: -6.485755920410156
    10. ' stdin' → logprob: -6.860755920410156

Token 6: '

' (ID: 279)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.0036190778482705355
    2. 'I' → logprob: -5.628619194030762
    3. 'In' → logprob: -12.503619194030762
    4. 'in' → logprob: -12.628619194030762
    5. '_' → logprob: -12.628619194030762
    6. '```' → logprob: -13.003619194030762
    7. '_IN' → logprob: -13.253619194030762
    8. '   ' → logprob: -13.753619194030762
    9. '_in' → logprob: -14.378619194030762
    10. '[' → logprob: -14.628619194030762

Token 7: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015153385465964675
    2. '[' → logprob: -7.2515153884887695
    3. ',' → logprob: -7.5015153884887695
    4. ':' → logprob: -9.25151538848877
    5. ';' → logprob: -10.62651538848877
    6. '\' → logprob: -11.00151538848877
    7. 'A' → logprob: -11.12651538848877
    8. 't' → logprob: -11.50151538848877
    9. '.readline' → logprob: -11.62651538848877
    10. '.
' → logprob: -11.75151538848877

Token 8: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6567105650901794
    2. ' #' → logprob: -2.031710624694824
    3. 'input' → logprob: -2.156710624694824
    4. ' input' → logprob: -2.406710624694824
    5. 'I' → logprob: -3.656710624694824
    6. '=' → logprob: -4.531710624694824
    7. 'STD' → logprob: -4.656710624694824
    8. '_' → logprob: -4.906710624694824
    9. ' ' → logprob: -4.906710624694824
    10. ' =' → logprob: -4.906710624694824

Token 9: ' chosen' (ID: 16180)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9132482409477234
    2. 'def' → logprob: -2.038248300552368
    3. 'input' → logprob: -2.288248300552368
    4. 're' → logprob: -2.663248300552368
    5. ' next' → logprob: -2.913248300552368
    6. ' code' → logprob: -3.038248300552368
    7. '_' → logprob: -3.163248300552368
    8. '#' → logprob: -3.913248300552368
    9. ' following' → logprob: -4.163248062133789
    10. 'stdin' → logprob: -4.288248062133789

Token 10: ' one' (ID: 1001)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5055713057518005
    2. ' option' → logprob: -1.8805713653564453
    3. 'option' → logprob: -3.5055713653564453
    4. '_option' → logprob: -3.5055713653564453
    5. '_word' → logprob: -3.6305713653564453
    6. '_token' → logprob: -3.8805713653564453
    7. 'token' → logprob: -4.505571365356445
    8. 'word' → logprob: -4.505571365356445
    9. '_language' → logprob: -4.755571365356445
    10. ' word' → logprob: -5.005571365356445

Token 11: ' liner' (ID: 72024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7083021998405457
    2. ' =' → logprob: -1.2083022594451904
    3. '_' → logprob: -2.0833022594451904
    4. '.' → logprob: -3.3333022594451904
    5. ' ' → logprob: -3.8333022594451904
    6. ':' → logprob: -4.958302021026611
    7. 'def' → logprob: -5.333302021026611
    8. '#' → logprob: -5.333302021026611
    9. 'import' → logprob: -6.708302021026611
    10. 'input' → logprob: -6.708302021026611

Token 12: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7190826535224915
    2. 'for' → logprob: -0.8440826535224915
    3. 'input' → logprob: -3.2190825939178467
    4. 'next' → logprob: -4.844082832336426
    5. 'data' → logprob: -5.094082832336426
    6. '_' → logprob: -5.219082832336426
    7. 's' → logprob: -5.594082832336426
    8. '[' → logprob: -5.844082832336426
    9. '=' → logprob: -6.094082832336426
    10. 'answer' → logprob: -6.344082832336426

Token 13: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7478905320167542
    2. ' input' → logprob: -1.4978904724121094
    3. '_' → logprob: -2.3728904724121094
    4. 'i' → logprob: -2.3728904724121094
    5. 'line' → logprob: -4.247890472412109
    6. ' line' → logprob: -4.497890472412109
    7. 'n' → logprob: -4.997890472412109
    8. '_input' → logprob: -5.247890472412109
    9. ' i' → logprob: -5.372890472412109
    10. 'x' → logprob: -5.497890472412109

Token 14: ' conversion' (ID: 22165)
  Prédit: 'eger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eger' → logprob: -0.32120275497436523
    2. 's' → logprob: -3.3212027549743652
    3. '```' → logprob: -4.071202754974365
    4. '_' → logprob: -4.196202754974365
    5. '(input' → logprob: -4.196202754974365
    6. 'e' → logprob: -4.321202754974365
    7. '_map' → logprob: -4.446202754974365
    8. '(' → logprob: -4.446202754974365
    9. '(stdin' → logprob: -4.446202754974365
    10. '(int' → logprob: -4.821202754974365

Token 15: '
' (ID: 198)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.30158305168151855
    2. 'list' → logprob: -2.5515830516815186
    3. 'n' → logprob: -2.8015830516815186
    4. 'x' → logprob: -2.8015830516815186
    5. 's' → logprob: -4.676583290100098
    6. 'int' → logprob: -4.926583290100098
    7. 'lambda' → logprob: -5.051583290100098
    8. 'line' → logprob: -5.426583290100098
    9. '=' → logprob: -5.551583290100098
    10. ' =' → logprob: -5.801583290100098

Token 16: 'parse' (ID: 4841)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6107779741287231
    2. 'int' → logprob: -1.6107779741287231
    3. ' =' → logprob: -1.8607779741287231
    4. '=int' → logprob: -1.8607779741287231
    5. '(' → logprob: -2.3607778549194336
    6. '`' → logprob: -2.6107778549194336
    7. '(int' → logprob: -3.2357778549194336
    8. 's' → logprob: -3.3607778549194336
    9. '_' → logprob: -3.9857778549194336
    10. '```' → logprob: -5.360777854919434

Token 17: '_int' (ID: 12285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1093544960021973
    2. 'int' → logprob: -1.1093544960021973
    3. '(' → logprob: -1.8593544960021973
    4. '=int' → logprob: -2.9843544960021973
    5. 'r' → logprob: -3.2343544960021973
    6. '_int' → logprob: -3.7343544960021973
    7. '('' → logprob: -4.109354496002197
    8. '=' → logprob: -4.609354496002197
    9. '(int' → logprob: -4.609354496002197
    10. 'er' → logprob: -4.859354496002197

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2523650527000427
    2. ' =' → logprob: -1.5023651123046875
    3. '(' → logprob: -7.8773651123046875
    4. '=int' → logprob: -10.127365112304688
    5. '=lambda' → logprob: -12.002365112304688
    6. ' ' → logprob: -12.627365112304688
    7. '=parse' → logprob: -12.877365112304688
    8. '(int' → logprob: -14.502365112304688
    9. '=

' → logprob: -14.627365112304688
    10. ',' → logprob: -14.752365112304688

Token 19: ' lambda' (ID: 27871)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7375178933143616
    2. ' lambda' → logprob: -0.8625178933143616
    3. 'int' → logprob: -2.487517833709717
    4. 'lambda' → logprob: -4.112517833709717
    5. ' ' → logprob: -10.737518310546875
    6. ' lamb' → logprob: -10.862518310546875
    7. '(lambda' → logprob: -11.112518310546875
    8. '(int' → logprob: -11.487518310546875
    9. '```' → logprob: -11.487518310546875
    10. '<int' → logprob: -11.862518310546875

Token 20: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7071627974510193
    2. ' x' → logprob: -0.7071627974510193
    3. 's' → logprob: -4.582162857055664
    4. ' s' → logprob: -5.707162857055664
    5. ' line' → logprob: -9.082162857055664
    6. 'int' → logprob: -9.707162857055664
    7. 'line' → logprob: -9.957162857055664
    8. '_' → logprob: -10.832162857055664
    9. 'a' → logprob: -11.332162857055664
    10. '_:' → logprob: -11.332162857055664

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.428739070892334
    2. ' int' → logprob: -1.053739070892334
    3. ' ' → logprob: -11.303739547729492
    4. '(int' → logprob: -11.553739547729492
    5. '[int' → logprob: -12.303739547729492
    6. '  ' → logprob: -12.553739547729492
    7. '<int' → logprob: -12.928739547729492
    8. '   ' → logprob: -13.428739547729492
    9. 'ints' → logprob: -14.178739547729492
    10. ' map' → logprob: -14.303739547729492

Token 22: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.0017261108150705695
    2. '(' → logprob: -6.626726150512695
    3. '(next' → logprob: -8.001726150512695
    4. '(stdin' → logprob: -10.001726150512695
    5. '((' → logprob: -11.501726150512695
    6. '('' → logprob: -13.751726150512695
    7. '(ord' → logprob: -13.751726150512695
    8. '()' → logprob: -13.751726150512695
    9. '(std' → logprob: -14.001726150512695
    10. ' (' → logprob: -14.126726150512695

Token 23: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.9146995327901095e-05
    2. 'DIN' → logprob: -10.875019073486328
    3. 'Din' → logprob: -15.625019073486328
    4. ' D' → logprob: -18.125019073486328
    5. '"D' → logprob: -18.250019073486328
    6. '[D' → logprob: -18.750019073486328
    7. '(D' → logprob: -19.000019073486328
    8. '%D' → logprob: -19.000019073486328
    9. '	D' → logprob: -19.125019073486328
    10. 'Д' → logprob: -19.125019073486328

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005591840948909521
    2. '.' → logprob: -5.255591869354248
    3. '().' → logprob: -8.00559139251709
    4. 'read' → logprob: -11.38059139251709
    5. ' readline' → logprob: -12.00559139251709
    6. ').' → logprob: -12.50559139251709
    7. '.read' → logprob: -13.13059139251709
    8. '_read' → logprob: -15.00559139251709
    9. ')' → logprob: -15.38059139251709
    10. ' .' → logprob: -16.380592346191406

Token 25: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04200775548815727
    2. '().' → logprob: -3.2920076847076416
    3. '()' → logprob: -5.542007923126221
    4. '()[' → logprob: -11.167007446289062
    5. ')' → logprob: -11.417007446289062
    6. ' ())' → logprob: -11.542007446289062
    7. '()))' → logprob: -13.667007446289062
    8. '();)' → logprob: -14.042007446289062
    9. '())
' → logprob: -14.292007446289062
    10. '(' → logprob: -14.542007446289062

Token 26: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0883383750915527
    2. '#' → logprob: -1.3383383750915527
    3. '\n' → logprob: -1.5883383750915527
    4. 'x' → logprob: -2.4633383750915527
    5. 'def' → logprob: -3.3383383750915527
    6. '(' → logprob: -4.213338375091553
    7. 'a' → logprob: -4.713338375091553
    8. '
' → logprob: -4.963338375091553
    9. '\' → logprob: -5.463338375091553
    10. 'result' → logprob: -5.588338375091553

Token 27: ' input' (ID: 3422)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.212768316268921
    2. ' ' → logprob: -1.462768316268921
    3. '\n' → logprob: -2.587768316268921
    4. '(' → logprob: -2.587768316268921
    5. 'x' → logprob: -2.712768316268921
    6. 'n' → logprob: -2.962768316268921
    7. ')' → logprob: -3.087768316268921
    8. '#' → logprob: -3.462768316268921
    9. 'def' → logprob: -3.712768316268921
    10. '<|end|>' → logprob: -4.2127685546875

Token 28: ' block' (ID: 4355)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2565957307815552
    2. '_line' → logprob: -2.7565956115722656
    3. '=' → logprob: -3.1315956115722656
    4. 's' → logprob: -3.2565956115722656
    5. ' =' → logprob: -3.5065956115722656
    6. '_data' → logprob: -3.7565956115722656
    7. '_' → logprob: -4.131595611572266
    8. '_str' → logprob: -6.006595611572266
    9. '_lines' → logprob: -6.506595611572266
    10. 'line' → logprob: -7.006595611572266

Token 29: ' --' (ID: 2230)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0973392203450203
    2. '(' → logprob: -2.972339153289795
    3. '=' → logprob: -3.972339153289795
    4. 's' → logprob: -4.972339153289795
    5. ')' → logprob: -5.972339153289795
    6. ' =' → logprob: -6.222339153289795
    7. ':' → logprob: -6.472339153289795
    8. '\n' → logprob: -6.597339153289795
    9. '()
' → logprob: -6.847339153289795
    10. '()\' → logprob: -6.972339153289795

Token 30: ' favor' (ID: 5101)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4161362648010254
    2. 'x' → logprob: -2.5411362648010254
    3. ' ' → logprob: -2.9161362648010254
    4. 'data' → logprob: -2.9161362648010254
    5. 'num' → logprob: -3.0411362648010254
    6. ' n' → logprob: -4.041136264801025
    7. '\n' → logprob: -4.166136264801025
    8. 'number' → logprob: -4.541136264801025
    9. 'a' → logprob: -4.916136264801025
    10. 'count' → logprob: -5.041136264801025

Token 31: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.2077493816614151
    2. '=' → logprob: -1.957749366760254
    3. 's' → logprob: -4.582749366760254
    4. 'ed' → logprob: -4.832749366760254
    5. 'er' → logprob: -5.207749366760254
    6. ':' → logprob: -5.332749366760254
    7. 'for' → logprob: -5.332749366760254
    8. 'iting' → logprob: -6.457749366760254
    9. 'input' → logprob: -6.582749366760254
    10. ' =' → logprob: -6.957749366760254

Token 32: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.654131531715393
    2. '=' → logprob: -2.1541314125061035
    3. '()' → logprob: -2.5291314125061035
    4. ' =' → logprob: -2.5291314125061035
    5. ' for' → logprob: -2.7791314125061035
    6. 'parse' → logprob: -2.9041314125061035
    7. 'range' → logprob: -2.9041314125061035
    8. ' range' → logprob: -3.0291314125061035
    9. 'a' → logprob: -3.1541314125061035
    10. '```' → logprob: -3.2791314125061035

Token 33: ' names' (ID: 8747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13450196385383606
    2. ' =' → logprob: -2.5095019340515137
    3. '=' → logprob: -3.1345019340515137
    4. '_' → logprob: -7.884501934051514
    5. '_name' → logprob: -8.634502410888672
    6. ' s' → logprob: -8.759502410888672
    7. '_s' → logprob: -9.509502410888672
    8. '_=' → logprob: -9.634502410888672
    9. '_names' → logprob: -10.384502410888672
    10. 'name' → logprob: -10.884502410888672

Token 34: ' one' (ID: 1001)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6708595752716064
    2. 'a' → logprob: -1.7958595752716064
    3. 's' → logprob: -2.4208595752716064
    4. 'x' → logprob: -2.5458595752716064
    5. '_' → logprob: -3.2958595752716064
    6. 'num' → logprob: -3.5458595752716064
    7. '_n' → logprob: -4.170859336853027
    8. ':' → logprob: -4.295859336853027
    9. 'data' → logprob: -5.045859336853027
    10. '`' → logprob: -5.545859336853027

Token 35: ' would' (ID: 1481)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7411442995071411
    2. ' =' → logprob: -0.8661442995071411
    3. 's' → logprob: -2.3661441802978516
    4. '_' → logprob: -5.366144180297852
    5. ',' → logprob: -5.991144180297852
    6. ' ' → logprob: -8.116144180297852
    7. '1' → logprob: -8.366144180297852
    8. '_s' → logprob: -8.616144180297852
    9. '_n' → logprob: -8.866144180297852
    10. 'a' → logprob: -8.866144180297852

Token 36: ' expect' (ID: 2665)
  Prédit: 'expect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expect' → logprob: -0.3008553683757782
    2. 'use' → logprob: -2.3008553981781006
    3. 'prefer' → logprob: -2.8008553981781006
    4. 'typically' → logprob: -3.9258553981781006
    5. 'usually' → logprob: -4.3008551597595215
    6. ' expect' → logprob: -4.4258551597595215
    7. '```' → logprob: -4.5508551597595215
    8. 'like' → logprob: -4.9258551597595215
    9. 'associate' → logprob: -5.3008551597595215
    10. 'normally' → logprob: -5.6758551597595215

Token 37: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32764917612075806
    2. 'x' → logprob: -2.2026491165161133
    3. 'a' → logprob: -2.4526491165161133
    4. 's' → logprob: -4.077649116516113
    5. 'num' → logprob: -4.327649116516113
    6. 'number' → logprob: -4.952649116516113
    7. '_' → logprob: -5.202649116516113
    8. ',' → logprob: -5.577649116516113
    9. ':' → logprob: -5.577649116516113
    10. '_n' → logprob: -5.577649116516113

Token 38: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6795756220817566
    2. 'input' → logprob: -1.1795756816864014
    3. ' the' → logprob: -3.0545756816864014
    4. 'the' → logprob: -3.3045756816864014
    5. ' a' → logprob: -3.9295756816864014
    6. ' code' → logprob: -3.9295756816864014
    7. 'a' → logprob: -4.054575443267822
    8. ' competitive' → logprob: -4.554575443267822
    9. 'code' → logprob: -4.804575443267822
    10. ' problem' → logprob: -5.679575443267822

Token 39: ' ' (ID: 220)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.0186407566070557
    2. 'problem' → logprob: -1.0186407566070557
    3. 'input' → logprob: -1.7686407566070557
    4. ' input' → logprob: -2.8936407566070557
    5. ' prompt' → logprob: -4.518640518188477
    6. 'prompt' → logprob: -4.768640518188477
    7. ' user' → logprob: -5.518640518188477
    8. 'contest' → logprob: -5.518640518188477
    9. ' contest' → logprob: -5.768640518188477
    10. 'user' → logprob: -6.143640518188477

Token 40: '90' (ID: 2744)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5336019992828369
    2. 'problem' → logprob: -1.283601999282837
    3. 'user' → logprob: -2.908601999282837
    4. 'contest' → logprob: -4.158601760864258
    5. 'prompt' → logprob: -4.408601760864258
    6. 'sys' → logprob: -4.533601760864258
    7. 'prob' → logprob: -4.783601760864258
    8. 'task' → logprob: -4.908601760864258
    9. 'code' → logprob: -5.658601760864258
    10. 'stdin' → logprob: -5.658601760864258

Token 41: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0477450005710125
    2. ''s' → logprob: -3.4227449893951416
    3. ' s' → logprob: -4.422745227813721
    4. '`s' → logprob: -7.547745227813721
    5. ''' → logprob: -7.672745227813721
    6. '0' → logprob: -7.922745227813721
    7. 'es' → logprob: -8.797744750976562
    8. 'S' → logprob: -9.922744750976562
    9. '9' → logprob: -10.297744750976562
    10. '`' → logprob: -10.547744750976562

Token 42: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9945561289787292
    2. 'a' → logprob: -1.619556188583374
    3. 'x' → logprob: -2.119556188583374
    4. 'num' → logprob: -2.744556188583374
    5. 'N' → logprob: -3.619556188583374
    6. ' n' → logprob: -3.994556188583374
    7. 'A' → logprob: -3.994556188583374
    8. 'i' → logprob: -4.244555950164795
    9. 'count' → logprob: -4.244555950164795
    10. '_' → logprob: -4.619555950164795

Token 43: 'L' (ID: 43)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6397565603256226
    2. 'a' → logprob: -2.264756679534912
    3. 's' → logprob: -3.014756679534912
    4. 'N' → logprob: -3.139756679534912
    5. 'data' → logprob: -3.389756679534912
    6. 'x' → logprob: -3.389756679534912
    7. ' n' → logprob: -3.514756679534912
    8. 'num' → logprob: -3.889756679534912
    9. 'A' → logprob: -4.139756679534912
    10. 'for' → logprob: -4.639756679534912

Token 44: 'ENGTH' (ID: 15789)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29147642850875854
    2. ' =' → logprob: -1.6664764881134033
    3. '=input' → logprob: -4.291476249694824
    4. 'EN' → logprob: -4.791476249694824
    5. ',' → logprob: -4.916476249694824
    6. 'INE' → logprob: -5.291476249694824
    7. 'IMIT' → logprob: -5.666476249694824
    8. 'ine' → logprob: -5.666476249694824
    9. '=int' → logprob: -5.666476249694824
    10. 'e' → logprob: -5.916476249694824

Token 45: '_MAGIC' (ID: 131565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13073237240314484
    2. ' =' → logprob: -2.505732297897339
    3. ' ,' → logprob: -3.630732297897339
    4. '=' → logprob: -4.755732536315918
    5. '_' → logprob: -6.130732536315918
    6. ',_' → logprob: -7.255732536315918
    7. ' ' → logprob: -7.630732536315918
    8. '_,' → logprob: -8.255732536315918
    9. ')' → logprob: -8.380732536315918
    10. '=int' → logprob: -8.505732536315918

Token 46: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3362187147140503
    2. ' =' → logprob: -1.4612187147140503
    3. '=' → logprob: -3.08621883392334
    4. ' ,' → logprob: -6.08621883392334
    5. '=int' → logprob: -7.83621883392334
    6. ' ' → logprob: -8.27371883392334
    7. '_' → logprob: -8.33621883392334
    8. ',_' → logprob: -8.39871883392334
    9. ',S' → logprob: -8.58621883392334
    10. 'Y' → logprob: -8.58621883392334

Token 47: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.1130041629076004
    2. ' parse' → logprob: -2.238004207611084
    3. 'int' → logprob: -9.363003730773926
    4. ' int' → logprob: -10.363003730773926
    5. '10' → logprob: -11.113003730773926
    6. ' ' → logprob: -11.238003730773926
    7. '100' → logprob: -11.363003730773926
    8. '(parse' → logprob: -12.113003730773926
    9. '20' → logprob: -12.613003730773926
    10. '	parse' → logprob: -13.113003730773926

Token 48: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.002691578818485141
    2. '_' → logprob: -6.377691745758057
    3. '(' → logprob: -8.127691268920898
    4. 'int' → logprob: -9.127691268920898
    5. '_len' → logprob: -9.127691268920898
    6. '()' → logprob: -9.627691268920898
    7. '_INT' → logprob: -10.127691268920898
    8. '(_' → logprob: -10.252691268920898
    9. '_line' → logprob: -10.752691268920898
    10. '_token' → logprob: -10.752691268920898

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003693658858537674
    2. '()
' → logprob: -5.753693580627441
    3. '()\' → logprob: -8.003693580627441
    4. '()

' → logprob: -9.253693580627441
    5. '(' → logprob: -10.003693580627441
    6. ' ()' → logprob: -10.628693580627441
    7. ')' → logprob: -12.628693580627441
    8. '()<' → logprob: -12.878693580627441
    9. '())' → logprob: -13.003693580627441
    10. '()`' → logprob: -13.753693580627441

Token 50: 'SOR' (ID: 188208)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.6077423095703125
    2. 'n' → logprob: -2.1077423095703125
    3. 's' → logprob: -2.8577423095703125
    4. ')' → logprob: -2.8577423095703125
    5. 'for' → logprob: -2.9827423095703125
    6. 'data' → logprob: -3.2327423095703125
    7. '<|end|>' → logprob: -3.3577423095703125
    8. 'newline' → logprob: -3.4827423095703125
    9. '
' → logprob: -3.6077423095703125
    10. '\' → logprob: -3.7327423095703125

Token 51: 'CER' (ID: 133578)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.43237733840942383
    2. 'RY' → logprob: -1.8073773384094238
    3. 'CE' → logprob: -2.682377338409424
    4. 'C' → logprob: -3.307377338409424
    5. 'CER' → logprob: -3.682377338409424
    6. 'TES' → logprob: -4.432377338409424
    7. 'TC' → logprob: -4.682377338409424
    8. 'TS' → logprob: -4.807377338409424
    9. 'CES' → logprob: -5.307377338409424
    10. 'R' → logprob: -5.682377338409424

Token 52: 'ERS' (ID: 6673)
  Prédit: 'ER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.004758818540722132
    2. 'ERS' → logprob: -5.629758834838867
    3. 'ESS' → logprob: -7.004758834838867
    4. 'E' → logprob: -9.879758834838867
    5. 'Y' → logprob: -10.129758834838867
    6. 'OR' → logprob: -10.504758834838867
    7. 'ES' → logprob: -10.879758834838867
    8. '=' → logprob: -11.379758834838867
    9. 'ERR' → logprob: -11.504758834838867
    10. '

' → logprob: -11.629758834838867

Token 53: ' =' (ID: 314)
  Prédit: '_COUNT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_COUNT' → logprob: -0.4081951379776001
    2. ' =' → logprob: -1.6581951379776
    3. '_' → logprob: -3.2831950187683105
    4. '=' → logprob: -3.4081950187683105
    5. '_NUMBER' → logprob: -4.1581950187683105
    6. '_NUM' → logprob: -4.1581950187683105
    7. '_N' → logprob: -4.7831950187683105
    8. '_LENGTH' → logprob: -5.1581950187683105
    9. '_NAMES' → logprob: -5.9081950187683105
    10. '_CNT' → logprob: -6.0331950187683105

Token 54: ' list' (ID: 1562)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.644661009311676
    2. 'parse' → logprob: -0.769661009311676
    3. '[' → logprob: -5.269660949707031
    4. ' [' → logprob: -5.394660949707031
    5. '(parse' → logprob: -7.144660949707031
    6. ' []' → logprob: -7.394660949707031
    7. '[int' → logprob: -7.769660949707031
    8. '[]' → logprob: -8.769660949707031
    9. ' ' → logprob: -9.144660949707031
    10. ' int' → logprob: -9.769660949707031

Token 55: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.018237505108118057
    2. '(' → logprob: -4.018237590789795
    3. '(parse' → logprob: -10.143237113952637
    4. '(int' → logprob: -10.393237113952637
    5. '()' → logprob: -11.768237113952637
    6. '(ST' → logprob: -11.893237113952637
    7. '(range' → logprob: -13.518237113952637
    8. '(
' → logprob: -14.518237113952637
    9. '(

' → logprob: -15.393237113952637
    10. '(m' → logprob: -15.893237113952637

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014319690875709057
    2. '(' → logprob: -4.264319896697998
    3. '(parse' → logprob: -9.51431941986084
    4. '(
' → logprob: -10.26431941986084
    5. '(lambda' → logprob: -10.88931941986084
    6. ' (' → logprob: -11.38931941986084
    7. '(str' → logprob: -11.88931941986084
    8. 'int' → logprob: -12.51431941986084
    9. '(eval' → logprob: -13.51431941986084
    10. ' int' → logprob: -13.63931941986084

Token 57: ',' (ID: 11)
  Prédit: '(ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.38735055923461914
    2. ',' → logprob: -1.1373505592346191
    3. ' ,' → logprob: -8.387350082397461
    4. '(' → logprob: -8.887350082397461
    5. '(),' → logprob: -9.762350082397461
    6. ',std' → logprob: -10.762350082397461
    7. '(S' → logprob: -11.887350082397461
    8. ',(' → logprob: -12.262350082397461
    9. '(','' → logprob: -12.262350082397461
    10. ',S' → logprob: -12.512350082397461

Token 58: ' STD' (ID: 71080)
  Prédit: ' STD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' STD' → logprob: -0.42944392561912537
    2. 'STD' → logprob: -1.0544439554214478
    3. 'ST' → logprob: -7.679443836212158
    4. ' ST' → logprob: -8.554444313049316
    5. ' STL' → logprob: -9.804444313049316
    6. ' ' → logprob: -11.304444313049316
    7. '(ST' → logprob: -11.429444313049316
    8. '	ST' → logprob: -13.179444313049316
    9. 'SD' → logprob: -13.304444313049316
    10. ' STDERR' → logprob: -14.179444313049316

Token 59: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00033713103039190173
    2. '.' → logprob: -8.250337600708008
    3. '.readlines' → logprob: -9.750337600708008
    4. '().' → logprob: -11.375337600708008
    5. '.read' → logprob: -13.375337600708008
    6. ' .' → logprob: -13.625337600708008
    7. ' readline' → logprob: -13.625337600708008
    8. '))' → logprob: -13.875337600708008
    9. ')' → logprob: -14.500337600708008
    10. ')))' → logprob: -15.250337600708008

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6166903151315637e-05
    2. '()' → logprob: -11.250016212463379
    3. ' ().' → logprob: -12.750016212463379
    4. '(' → logprob: -16.625015258789062
    5. ')' → logprob: -17.625015258789062
    6. ' ' → logprob: -17.750015258789062
    7. ' .' → logprob: -17.875015258789062
    8. '.' → logprob: -18.250015258789062
    9. '()
' → logprob: -18.875015258789062
    10. '()))' → logprob: -19.000015258789062

Token 61: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31628626585006714
    2. 'split' → logprob: -1.316286325454712
    3. 'rstrip' → logprob: -5.816286087036133
    4. 'read' → logprob: -10.691286087036133
    5. ' split' → logprob: -11.441286087036133
    6. ' strip' → logprob: -11.816286087036133
    7. '(split' → logprob: -16.191286087036133
    8. 'spl' → logprob: -16.316286087036133
    9. 'decode' → logprob: -16.566286087036133
    10. '.strip' → logprob: -16.816286087036133

Token 62: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028879940509796143
    2. '))' → logprob: -4.2788801193237305
    3. '()' → logprob: -4.4038801193237305
    4. '())' → logprob: -6.1538801193237305
    5. '())))' → logprob: -8.77888011932373
    6. ')))' → logprob: -10.40388011932373
    7. ')' → logprob: -10.77888011932373
    8. '(),' → logprob: -11.15388011932373
    9. '(' → logprob: -11.27888011932373
    10. '()))
' → logprob: -11.65388011932373

Token 63: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6544424891471863
    2. '
' → logprob: -1.654442548751831
    3. '[' → logprob: -1.904442548751831
    4. '<|end|>' → logprob: -2.779442548751831
    5. '.' → logprob: -3.654442548751831
    6. '+' → logprob: -4.404442310333252
    7. '\n' → logprob: -4.529442310333252
    8. '(' → logprob: -5.654442310333252
    9. '[::-' → logprob: -6.029442310333252
    10. '[
' → logprob: -6.029442310333252

Token 64: ' indices' (ID: 30378)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9520468711853027
    2. 'max' → logprob: -1.9520468711853027
    3. 'total' → logprob: -2.3270468711853027
    4. 'for' → logprob: -2.5770468711853027
    5. 'sum' → logprob: -2.5770468711853027
    6. 's' → logprob: -2.8270468711853027
    7. 'answer' → logprob: -2.9520468711853027
    8. '#' → logprob: -3.3270468711853027
    9. 'count' → logprob: -3.4520468711853027
    10. 'dp' → logprob: -3.5770468711853027

Token 65: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05701938644051552
    2. ' =' → logprob: -3.9320194721221924
    3. ' _' → logprob: -4.682019233703613
    4. ' ' → logprob: -4.932019233703613
    5. '=' → logprob: -5.932019233703613
    6. '[]' → logprob: -6.057019233703613
    7. '_i' → logprob: -6.182019233703613
    8. '_indices' → logprob: -6.307019233703613
    9. '[:]' → logprob: -6.807019233703613
    10. '[' → logprob: -6.932019233703613

Token 66: ' a' (ID: 261)
  Prédit: ' sor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sor' → logprob: -1.1764055490493774
    2. ' value' → logprob: -1.8014055490493774
    3. ' ' → logprob: -1.9264055490493774
    4. ' the' → logprob: -2.801405429840088
    5. ' a' → logprob: -2.926405429840088
    6. 'SOR' → logprob: -3.301405429840088
    7. 'value' → logprob: -3.426405429840088
    8. '_' → logprob: -3.676405429840088
    9. ' S' → logprob: -3.801405429840088
    10. '1' → logprob: -3.926405429840088

Token 67: ' dramatic' (ID: 35725)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8487547636032104
    2. '_' → logprob: -1.9737547636032104
    3. 'ct' → logprob: -2.0987548828125
    4. 'l' → logprob: -2.3487548828125
    5. 'll' → logprob: -2.3487548828125
    6. 'value' → logprob: -3.4737548828125
    7. '1' → logprob: -3.5987548828125
    8. ' value' → logprob: -3.5987548828125
    9. 'd' → logprob: -3.8487548828125
    10. 'c' → logprob: -4.2237548828125

Token 68: ' name' (ID: 1308)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -1.0272786617279053
    2. ' ' → logprob: -1.4022786617279053
    3. ' twist' → logprob: -2.1522786617279053
    4. 'space' → logprob: -2.9022786617279053
    5. ' difference' → logprob: -3.1522786617279053
    6. '_' → logprob: -3.1522786617279053
    7. ' flair' → logprob: -3.7772786617279053
    8. ' bit' → logprob: -4.527278900146484
    9. ' _' → logprob: -4.527278900146484
    10. ' role' → logprob: -4.777278900146484

Token 69: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25322726368904114
    2. '=' → logprob: -1.8782272338867188
    3. '_' → logprob: -3.5032272338867188
    4. 's' → logprob: -4.378227233886719
    5. 'DR' → logprob: -5.128227233886719
    6. '_indices' → logprob: -5.753227233886719
    7. '_DR' → logprob: -6.128227233886719
    8. '_idx' → logprob: -6.253227233886719
    9. ':' → logprob: -6.378227233886719
    10. 'idx' → logprob: -6.628227233886719

Token 70: 'wizard' (ID: 126107)
  Prédit: 'DR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DR' → logprob: -1.4292802810668945
    2. ' DR' → logprob: -2.4917802810668945
    3. ' =' → logprob: -2.7417802810668945
    4. 'D' → logprob: -2.9292802810668945
    5. 'I' → logprob: -3.4917802810668945
    6. ' i' → logprob: -3.5542802810668945
    7. 'indices' → logprob: -3.5542802810668945
    8. 'dram' → logprob: -3.5542802810668945
    9. 'idx' → logprob: -3.8042802810668945
    10. 'i' → logprob: -4.0542802810668945

Token 71: 'ry' (ID: 1102)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2091994732618332
    2. '_indices' → logprob: -1.9591994285583496
    3. '_s' → logprob: -3.5841994285583496
    4. '_idx' → logprob: -5.08419942855835
    5. '_idxs' → logprob: -5.45919942855835
    6. '_' → logprob: -5.83419942855835
    7. '_positions' → logprob: -6.08419942855835
    8. '_indexes' → logprob: -6.20919942855835
    9. '_pos' → logprob: -7.33419942855835
    10. '_index' → logprob: -7.95919942855835

Token 72: ' =' (ID: 314)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.615838348865509
    2. '_' → logprob: -1.4908382892608643
    3. 's' → logprob: -1.7408382892608643
    4. ' =' → logprob: -4.115838527679443
    5. '_positions' → logprob: -4.115838527679443
    6. '_indexes' → logprob: -4.615838527679443
    7. '_s' → logprob: -5.740838527679443
    8. '=' → logprob: -5.740838527679443
    9. '_idxs' → logprob: -5.865838527679443
    10. '_idx' → logprob: -6.240838527679443

Token 73: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8014498353004456
    2. ' [' → logprob: -1.0514497756958008
    3. '[]' → logprob: -1.9264497756958008
    4. '[' → logprob: -3.551449775695801
    5. ' list' → logprob: -5.301449775695801
    6. ' range' → logprob: -5.426449775695801
    7. '[len' → logprob: -5.551449775695801
    8. ' set' → logprob: -5.676449775695801
    9. ' ' → logprob: -6.176449775695801
    10. 'set' → logprob: -6.551449775695801

Token 74: 'spell' (ID: 81891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0365450344979763
    2. ' for' → logprob: -3.7865450382232666
    3. '<|end|>' → logprob: -5.9115447998046875
    4. '=' → logprob: -6.5365447998046875
    5. '
' → logprob: -6.5365447998046875
    6. ' ' → logprob: -6.5365447998046875
    7. ' =' → logprob: -6.5365447998046875
    8. ' 
' → logprob: -6.9115447998046875
    9. '[' → logprob: -7.1615447998046875
    10. 'i' → logprob: -7.2865447998046875

Token 75: 'book' (ID: 3092)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8911730051040649
    2. '_indices' → logprob: -1.266173005104065
    3. '_' → logprob: -2.2661728858947754
    4. '=' → logprob: -2.3911728858947754
    5. ' =' → logprob: -3.0161728858947754
    6. '_index' → logprob: -4.516172885894775
    7. '_cast' → logprob: -4.766172885894775
    8. '_count' → logprob: -5.016172885894775
    9. '_ids' → logprob: -5.141172885894775
    10. '_idx' → logprob: -5.266172885894775

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3156702220439911
    2. '=' → logprob: -1.3156702518463135
    3. '_' → logprob: -6.815670013427734
    4. '=[]' → logprob: -7.690670013427734
    5. ' ' → logprob: -8.190670013427734
    6. '_indices' → logprob: -8.440670013427734
    7. '[:]' → logprob: -9.815670013427734
    8. '[]' → logprob: -9.940670013427734
    9. '[' → logprob: -10.065670013427734
    10. 's' → logprob: -10.315670013427734

Token 77: ' S' (ID: 336)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.748429536819458
    2. '[]' → logprob: -0.873429536819458
    3. 'set' → logprob: -3.123429536819458
    4. ' []' → logprob: -3.498429536819458
    5. '0' → logprob: -4.498429298400879
    6. '[' → logprob: -4.623429298400879
    7. ' {}' → logprob: -5.248429298400879
    8. ' set' → logprob: -5.373429298400879
    9. '{' → logprob: -6.623429298400879
    10. ' ' → logprob: -6.748429298400879

Token 78: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.02241434156894684
    2. 'ET' → logprob: -4.647414207458496
    3. 'et' → logprob: -4.772414207458496
    4. 'ORT' → logprob: -7.959914207458496
    5. '[]' → logprob: -8.272414207458496
    6. 'O' → logprob: -8.272414207458496
    7. 'or' → logprob: -8.334914207458496
    8. '0' → logprob: -8.459914207458496
    9. 'pell' → logprob: -8.459914207458496
    10. 'ets' → logprob: -8.584914207458496

Token 79: 'CER' (ID: 133578)
  Prédit: 'CER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CER' → logprob: -0.003004327416419983
    2. 'ER' → logprob: -6.128004550933838
    3. 'C' → logprob: -7.253004550933838
    4. 'ERC' → logprob: -10.62800407409668
    5. 'CRE' → logprob: -10.87800407409668
    6. '```' → logprob: -11.25300407409668
    7. 'ERS' → logprob: -11.75300407409668
    8. 'cer' → logprob: -12.12800407409668
    9. 'CEL' → logprob: -12.37800407409668
    10. 'cers' → logprob: -12.50300407409668

Token 80: 'ERS' (ID: 6673)
  Prédit: 'ERS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERS' → logprob: -0.0012970196548849344
    2. 'S' → logprob: -7.0012969970703125
    3. 'RS' → logprob: -8.126296997070312
    4. 'ER' → logprob: -10.376296997070312
    5. 'ers' → logprob: -10.876296997070312
    6. '{' → logprob: -12.126296997070312
    7. '`' → logprob: -12.251296997070312
    8. '[' → logprob: -12.376296997070312
    9. 'ES' → logprob: -12.376296997070312
    10. '```' → logprob: -12.376296997070312

Token 81: '[:' (ID: 7808)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29189783334732056
    2. '[' → logprob: -2.041897773742676
    3. '[:]' → logprob: -2.916897773742676
    4. '.sort' → logprob: -3.791897773742676
    5. '[::-' → logprob: -4.416897773742676
    6. '.count' → logprob: -5.291897773742676
    7. '.index' → logprob: -5.416897773742676
    8. ')' → logprob: -5.541897773742676
    9. '.pop' → logprob: -5.666897773742676
    10. ',' → logprob: -6.041897773742676

Token 82: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.667123556137085
    2. ']' → logprob: -0.792123556137085
    3. 'L' → logprob: -3.792123556137085
    4. '1' → logprob: -5.292123794555664
    5. ')]' → logprob: -6.292123794555664
    6. ')' → logprob: -6.542123794555664
    7. '])]' → logprob: -6.792123794555664
    8. '-' → logprob: -7.417123794555664
    9. '],' → logprob: -8.292123794555664
    10. '-L' → logprob: -8.792123794555664

Token 83: 'can' (ID: 6929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01658053696155548
    2. '.' → logprob: -5.516580581665039
    3. '[' → logprob: -5.516580581665039
    4. ' for' → logprob: -6.141580581665039
    5. '#' → logprob: -6.766580581665039
    6. '.for' → logprob: -7.016580581665039
    7. '
' → logprob: -7.016580581665039
    8. '<|end|>' → logprob: -7.016580581665039
    9. '[:]' → logprob: -7.391580581665039
    10. ')' → logprob: -8.141580581665039

Token 84: '_trans' (ID: 14514)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.256085991859436
    2. '_use' → logprob: -1.756085991859436
    3. '_cast' → logprob: -2.2560858726501465
    4. 'did' → logprob: -2.5060858726501465
    5. 'd' → logprob: -3.2560858726501465
    6. 'trip' → logprob: -3.3810858726501465
    7. 'cast' → logprob: -3.6310858726501465
    8. 'tr' → logprob: -3.7560858726501465
    9. 'do' → logprob: -4.1310858726501465
    10. 'use' → logprob: -4.2560858726501465

Token 85: 'figure' (ID: 27949)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.0346648134291172
    2. 'late' → logprob: -4.659664630889893
    3. 'mute' → logprob: -4.909664630889893
    4. '_' → logprob: -5.534664630889893
    5. '```' → logprob: -6.284664630889893
    6. 's' → logprob: -6.784664630889893
    7. 'it' → logprob: -7.284664630889893
    8. 'sl' → logprob: -7.409664630889893
    9. '

' → logprob: -7.597164630889893
    10. 'act' → logprob: -7.659664630889893

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27852198481559753
    2. 'd' → logprob: -1.52852201461792
    3. '=' → logprob: -3.77852201461792
    4. 'able' → logprob: -6.02852201461792
    5. 's' → logprob: -8.028521537780762
    6. '_' → logprob: -8.653521537780762
    7. 'ed' → logprob: -8.903521537780762
    8. ' ' → logprob: -9.528521537780762
    9. 'e' → logprob: -9.778521537780762
    10. '=[]' → logprob: -10.278521537780762

Token 87: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37533509731292725
    2. '[]' → logprob: -2.250335216522217
    3. ' [' → logprob: -3.000335216522217
    4. 'True' → logprob: -3.250335216522217
    5. 'set' → logprob: -3.500335216522217
    6. ' []' → logprob: -3.875335216522217
    7. '[len' → logprob: -4.125335216522217
    8. '0' → logprob: -4.250335216522217
    9. '{}' → logprob: -4.875335216522217
    10. 'False' → logprob: -5.000335216522217

Token 88: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5347945094108582
    2. 'True' → logprob: -1.909794569015503
    3. 'set' → logprob: -2.534794569015503
    4. '[]' → logprob: -3.159794569015503
    5. 'False' → logprob: -3.409794569015503
    6. '{' → logprob: -3.659794569015503
    7. '{}' → logprob: -3.784794569015503
    8. '0' → logprob: -4.284794330596924
    9. 'lambda' → logprob: -4.284794330596924
    10. '[len' → logprob: -4.284794330596924

Token 89: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18379029631614685
    2. '0' → logprob: -3.5587902069091797
    3. '
' → logprob: -3.6837902069091797
    4. 'for' → logprob: -3.8087902069091797
    5. '=' → logprob: -3.8087902069091797
    6. 'while' → logprob: -4.30879020690918
    7. '*' → logprob: -4.80879020690918
    8. ':' → logprob: -5.05879020690918
    9. ',' → logprob: -5.05879020690918
    10. '-' → logprob: -5.18379020690918

Token 90: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36820605397224426
    2. ':' → logprob: -2.118206024169922
    3. ' for' → logprob: -2.118206024169922
    4. '+' → logprob: -3.743206024169922
    5. '
' → logprob: -4.368206024169922
    6. '=' → logprob: -4.868206024169922
    7. '*' → logprob: -5.243206024169922
    8. '-' → logprob: -5.368206024169922
    9. ',' → logprob: -5.618206024169922
    10. ')' → logprob: -6.618206024169922

Token 91: ' spell' (ID: 29176)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.12529392540454865
    2. ' LENGTH' → logprob: -3.0002939701080322
    3. 'can' → logprob: -3.1252939701080322
    4. ' len' → logprob: -4.250293731689453
    5. 'L' → logprob: -5.875293731689453
    6. ' L' → logprob: -6.625293731689453
    7. ' spell' → logprob: -6.875293731689453
    8. ' not' → logprob: -7.250293731689453
    9. ' ' → logprob: -7.250293731689453
    10. ' length' → logprob: -7.250293731689453

Token 92: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -2.0100624169572257e-05
    2. 'b' → logprob: -12.750020027160645
    3. '_book' → logprob: -13.000020027160645
    4. 'books' → logprob: -13.250020027160645
    5. 'boo' → logprob: -13.375020027160645
    6. '```' → logprob: -13.625020027160645
    7. 'cast' → logprob: -13.875020027160645
    8. 'bok' → logprob: -13.875020027160645
    9. 'bo' → logprob: -14.125020027160645
    10. 'length' → logprob: -14.375020027160645

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.606027364730835
    2. ' and' → logprob: -0.856027364730835
    3. 'and' → logprob: -4.356027603149414
    4. '[:]' → logprob: -4.981027603149414
    5. '[' → logprob: -5.606027603149414
    6. '):' → logprob: -6.231027603149414
    7. '.pop' → logprob: -6.481027603149414
    8. '>:' → logprob: -7.106027603149414
    9. '<|end|>' → logprob: -7.731027603149414
    10. ' :' → logprob: -8.231027603149414

Token 94: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0330619812011719
    2. '   ' → logprob: -1.9080619812011719
    3. '[' → logprob: -2.533061981201172
    4. ' and' → logprob: -2.658061981201172
    5. ' =' → logprob: -3.283061981201172
    6. ' if' → logprob: -3.283061981201172
    7. '.pop' → logprob: -3.408061981201172
    8. 'spell' → logprob: -3.408061981201172
    9. '[i' → logprob: -3.533061981201172
    10. ' spell' → logprob: -3.908061981201172

Token 95: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9912334680557251
    2. ' if' → logprob: -2.4912333488464355
    3. ' current' → logprob: -2.6162333488464355
    4. 'current' → logprob: -2.8662333488464355
    5. ' for' → logprob: -2.9912333488464355
    6. 'if' → logprob: -3.4912333488464355
    7. ' next' → logprob: -3.6162333488464355
    8. 'for' → logprob: -3.7412333488464355
    9. ' spell' → logprob: -3.8662333488464355
    10. ' last' → logprob: -3.9912333488464355

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022552231326699257
    2. '=' → logprob: -4.272552013397217
    3. 'nd' → logprob: -5.272552013397217
    4. 'f' → logprob: -6.147552013397217
    5. 'dx' → logprob: -7.272552013397217
    6. 'n' → logprob: -9.272552490234375
    7. 'x' → logprob: -9.647552490234375
    8. ' ' → logprob: -9.772552490234375
    9. ',' → logprob: -10.022552490234375
    10. 'd' → logprob: -10.647552490234375

Token 97: ' len' (ID: 4631)
  Prédit: 'spell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spell' → logprob: -0.4119412899017334
    2. '0' → logprob: -1.6619412899017334
    3. ' spell' → logprob: -2.0369412899017334
    4. ' ' → logprob: -4.4119415283203125
    5. 'len' → logprob: -5.5369415283203125
    6. ' len' → logprob: -7.1619415283203125
    7. '-' → logprob: -9.036941528320312
    8. 'sp' → logprob: -9.599441528320312
    9. 'max' → logprob: -10.036941528320312
    10. '1' → logprob: -10.036941528320312

Token 98: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.009383331052958965
    2. '(w' → logprob: -4.759383201599121
    3. '(' → logprob: -7.259383201599121
    4. '(s' → logprob: -10.509383201599121
    5. 'spell' → logprob: -10.759383201599121
    6. ' spell' → logprob: -12.884383201599121
    7. '(word' → logprob: -13.009383201599121
    8. ' (' → logprob: -13.134383201599121
    9. '(skill' → logprob: -14.134383201599121
    10. 'wizard' → logprob: -14.259383201599121

Token 99: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.00026300468016415834
    2. 'el' → logprob: -8.250263214111328
    3. 'ebook' → logprob: -15.125263214111328
    4. 'll' → logprob: -15.375263214111328
    5. '```' → logprob: -15.500263214111328
    6. '   ' → logprob: -15.750263214111328
    7. ' ' → logprob: -16.375263214111328
    8. '[' → logprob: -16.375263214111328
    9. 'ел' → logprob: -16.500263214111328
    10. '       ' → logprob: -16.625263214111328

Token 100: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -8.537868779967539e-06
    2. 'ook' → logprob: -12.500008583068848
    3. '(book' → logprob: -12.625008583068848
    4. 'obook' → logprob: -15.125008583068848
    5. '_book' → logprob: -15.250008583068848
    6. 'of' → logprob: -15.750008583068848
    7. '	book' → logprob: -16.37500762939453
    8. '(' → logprob: -16.75000762939453
    9. '```' → logprob: -16.87500762939453
    10. 'books' → logprob: -17.00000762939453

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005116584710776806
    2. ')-' → logprob: -6.0051164627075195
    3. ' )' → logprob: -6.6301164627075195
    4. '-' → logprob: -7.1301164627075195
    5. ' -' → logprob: -7.6301164627075195
    6. '-)' → logprob: -11.75511646270752
    7. '[' → logprob: -12.00511646270752
    8. ' ' → logprob: -12.25511646270752
    9. '()' → logprob: -12.50511646270752
    10. '())' → logprob: -13.75511646270752

Token 102: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14296916127204895
    2. ' -' → logprob: -2.0179691314697266
    3. ' ' → logprob: -9.017969131469727
    4. ' if' → logprob: -9.267969131469727
    5. '   ' → logprob: -10.142969131469727
    6. 'if' → logprob: -11.142969131469727
    7. ')' → logprob: -12.642969131469727
    8. ' and' → logprob: -12.767969131469727
    9. '  ' → logprob: -12.892969131469727
    10. '-
' → logprob: -13.142969131469727

Token 103: ' staged' (ID: 98557)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02706010639667511
    2. ' -' → logprob: -3.652060031890869
    3. '   ' → logprob: -8.277060508728027
    4. 'if' → logprob: -8.902060508728027
    5. ' if' → logprob: -8.902060508728027
    6. ' ' → logprob: -9.152060508728027
    7. '-i' → logprob: -9.777060508728027
    8. '-=' → logprob: -10.902060508728027
    9. 'i' → logprob: -11.777060508728027
    10. ' i' → logprob: -11.777060508728027

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4301398992538452
    2. '=' → logprob: -1.9301398992538452
    3. '_' → logprob: -2.4301400184631348
    4. '-' → logprob: -3.3051400184631348
    5. '_spell' → logprob: -3.5551400184631348
    6. '_index' → logprob: -4.680140018463135
    7. ' -=' → logprob: -4.930140018463135
    8. '_idx' → logprob: -4.930140018463135
    9. ' -' → logprob: -5.180140018463135
    10. '_i' → logprob: -5.555140018463135

Token 105: ' None' (ID: 4662)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8883101344108582
    2. ' spell' → logprob: -1.013310194015503
    3. 'spell' → logprob: -2.513310194015503
    4. '[]' → logprob: -2.888310194015503
    5. '0' → logprob: -3.888310194015503
    6. ' ' → logprob: -4.013309955596924
    7. ' False' → logprob: -4.513309955596924
    8. ' [' → logprob: -4.888309955596924
    9. 'False' → logprob: -5.013309955596924
    10. ' i' → logprob: -5.138309955596924

Token 106: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5028128623962402
    2. '
' → logprob: -2.3778128623962402
    3. '   ' → logprob: -2.7528128623962402
    4. ' ' → logprob: -2.7528128623962402
    5. 'if' → logprob: -3.0028128623962402
    6. ' for' → logprob: -3.0028128623962402
    7. 'for' → logprob: -3.8778128623962402
    8. ' 
' → logprob: -4.00281286239624
    9. '<|end|>' → logprob: -4.25281286239624
    10. ')' → logprob: -5.75281286239624

Token 107: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33069127798080444
    2. '   ' → logprob: -2.330691337585449
    3. ' 
' → logprob: -2.955691337585449
    4. '
' → logprob: -3.330691337585449
    5. ' ' → logprob: -3.580691337585449
    6. '<|end|>' → logprob: -3.580691337585449
    7. 'if' → logprob: -4.205691337585449
    8. ' for' → logprob: -4.455691337585449
    9. '    
' → logprob: -5.830691337585449
    10. '  
' → logprob: -6.080691337585449

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4128980338573456
    2. ' for' → logprob: -1.162898063659668
    3. '   ' → logprob: -3.912898063659668
    4. 'if' → logprob: -6.162898063659668
    5. ' if' → logprob: -6.412898063659668
    6. '-' → logprob: -7.037898063659668
    7. 'idx' → logprob: -8.787898063659668
    8. '+' → logprob: -9.037898063659668
    9. '  ' → logprob: -9.287898063659668
    10. '
' → logprob: -9.412898063659668

Token 109: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3274590075016022
    2. ' idx' → logprob: -1.5774589776992798
    3. ' x' → logprob: -3.5774590969085693
    4. 'j' → logprob: -4.20245885848999
    5. ' index' → logprob: -4.32745885848999
    6. 'idx' → logprob: -5.32745885848999
    7. ' _' → logprob: -5.70245885848999
    8. ' ' → logprob: -6.57745885848999
    9. 'x' → logprob: -6.70245885848999
    10. 'index' → logprob: -7.07745885848999

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011060434393584728
    2. 'in' → logprob: -4.5110602378845215
    3. ',' → logprob: -12.51106071472168
    4. ' range' → logprob: -12.51106071472168
    5. ' ' → logprob: -12.63606071472168
    6. 'range' → logprob: -13.63606071472168
    7. '	in' → logprob: -15.26106071472168
    8. ' xrange' → logprob: -15.38606071472168
    9. ' ,' → logprob: -15.76106071472168
    10. '<|end|>' → logprob: -16.63606071472168

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14276868104934692
    2. 'range' → logprob: -2.017768621444702
    3. ' spell' → logprob: -9.517768859863281
    4. 'spell' → logprob: -11.517768859863281
    5. ' xrange' → logprob: -12.642768859863281
    6. '(range' → logprob: -13.267768859863281
    7. ' ' → logprob: -13.517768859863281
    8. '	range' → logprob: -13.642768859863281
    9. ' reversed' → logprob: -13.892768859863281
    10. 're' → logprob: -15.142768859863281

Token 112: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00016957100888248533
    2. '(len' → logprob: -8.87516975402832
    3. '(' → logprob: -10.50016975402832
    4. '(j' → logprob: -13.75016975402832
    5. ' (' → logprob: -14.50016975402832
    6. ' i' → logprob: -15.25016975402832
    7. '(L' → logprob: -16.37516975402832
    8. 'i' → logprob: -16.87516975402832
    9. '   ' → logprob: -16.87516975402832
    10. '(n' → logprob: -17.75016975402832

Token 113: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9782702326774597
    2. '):
' → logprob: -1.1032702922821045
    3. '-' → logprob: -1.3532702922821045
    4. ' -' → logprob: -3.4782702922821045
    5. '   ' → logprob: -6.478270053863525
    6. ',' → logprob: -7.478270053863525
    7. ' ):' → logprob: -8.353270530700684
    8. '):
' → logprob: -8.478270530700684
    9. ' ):
' → logprob: -9.228270530700684
    10. ')' → logprob: -9.228270530700684

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003255719493608922
    2. '2' → logprob: -8.750325202941895
    3. ' ' → logprob: -8.750325202941895
    4. '-' → logprob: -12.250325202941895
    5. ',' → logprob: -14.312825202941895
    6. '   ' → logprob: -14.437825202941895
    7. '```' → logprob: -14.687825202941895
    8. ' -' → logprob: -14.750325202941895
    9. '+' → logprob: -14.875325202941895
    10. '
' → logprob: -14.937825202941895

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006680917460471392
    2. ',-' → logprob: -5.131680965423584
    3. ' ,' → logprob: -7.631680965423584
    4. ' -' → logprob: -9.131680488586426
    5. '-' → logprob: -9.381680488586426
    6. ' ,-' → logprob: -10.006680488586426
    7. '):' → logprob: -10.881680488586426
    8. ' ' → logprob: -12.631680488586426
    9. '   ' → logprob: -12.756680488586426
    10. '):
' → logprob: -13.631680488586426

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004754072520881891
    2. ' -' → logprob: -5.379754066467285
    3. '0' → logprob: -9.254754066467285
    4. ' ' → logprob: -10.379754066467285
    5. '-i' → logprob: -13.254754066467285
    6. '   ' → logprob: -13.379754066467285
    7. '1' → logprob: -13.629754066467285
    8. '-j' → logprob: -13.754754066467285
    9. ' j' → logprob: -15.004754066467285
    10. '  ' → logprob: -15.004754066467285

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -16.250001907348633
    4. '-' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '
' → logprob: -17.750001907348633
    7. ' -' → logprob: -17.937501907348633
    8. 'i' → logprob: -18.312501907348633
    9. '```' → logprob: -18.500001907348633
    10. '

' → logprob: -18.812501907348633

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.805981972021982e-05
    2. '-' → logprob: -9.75009822845459
    3. ',-' → logprob: -10.25009822845459
    4. ' ,' → logprob: -12.62509822845459
    5. ' -' → logprob: -15.00009822845459
    6. '```' → logprob: -15.37509822845459
    7. ',
' → logprob: -15.50009822845459
    8. '1' → logprob: -16.250097274780273
    9. '   ' → logprob: -16.250097274780273
    10. ' ,-' → logprob: -17.000097274780273

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868826925754547
    2. ' -' → logprob: -1.1368826627731323
    3. ' ' → logprob: -11.636882781982422
    4. '   ' → logprob: -13.761882781982422
    5. '```' → logprob: -14.636882781982422
    6. '	' → logprob: -15.011882781982422
    7. '  ' → logprob: -15.261882781982422
    8. ')' → logprob: -15.636882781982422
    9. '1' → logprob: -15.886882781982422
    10. '-j' → logprob: -16.886882781982422

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -17.125001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -19.125001907348633
    6. '3' → logprob: -19.875001907348633
    7. '  ' → logprob: -19.937501907348633
    8. '１' → logprob: -20.187501907348633
    9. '
' → logprob: -20.312501907348633
    10. ')' → logprob: -20.312501907348633

Token 121: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0228830575942993
    2. '):' → logprob: -1.3978830575942993
    3. ',-' → logprob: -1.5228830575942993
    4. ',' → logprob: -1.8978830575942993
    5. '-' → logprob: -4.02288293838501
    6. '   ' → logprob: -5.77288293838501
    7. '):-' → logprob: -6.02288293838501
    8. ' -' → logprob: -7.39788293838501
    9. '):
' → logprob: -8.397883415222168
    10. ')' → logprob: -8.397883415222168

Token 122: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46944183111190796
    2. '       ' → logprob: -1.0944418907165527
    3. '   ' → logprob: -4.469441890716553
    4. ':
' → logprob: -4.469441890716553
    5. '<|end|>' → logprob: -4.844441890716553
    6. '):' → logprob: -5.594441890716553
    7. ',' → logprob: -6.344441890716553
    8. ' if' → logprob: -6.844441890716553
    9. '):
' → logprob: -6.969441890716553
    10. '<|end|>' → logprob: -8.219441413879395

Token 123: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0399762392044067
    2. ':' → logprob: -1.2899762392044067
    3. '       ' → logprob: -1.4149762392044067
    4. '):' → logprob: -3.664976119995117
    5. ':
' → logprob: -3.914976119995117
    6. ' ' → logprob: -4.164976119995117
    7. ',' → logprob: -4.414976119995117
    8. '):
' → logprob: -4.539976119995117
    9. 'if' (adapté à ' if') → logprob: -4.539976119995117
    10. '   ' → logprob: -4.539976119995117

Token 124: ' spell' (ID: 29176)
  Prédit: ' spell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spell' → logprob: -0.5807183384895325
    2. 'spell' → logprob: -0.8307183384895325
    3. ' j' → logprob: -6.330718517303467
    4. 'j' → logprob: -6.705718517303467
    5. 'SOR' → logprob: -8.080718040466309
    6. '   ' → logprob: -8.330718040466309
    7. 'sp' → logprob: -8.455718040466309
    8. ' not' → logprob: -8.955718040466309
    9. ' ' → logprob: -9.080718040466309
    10. 'abs' → logprob: -9.330718040466309

Token 125: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -6.704273118884885e-07
    2. 'books' → logprob: -16.0
    3. ' book' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. 'bo' → logprob: -16.875
    6. 'boo' → logprob: -17.25
    7. '   ' → logprob: -17.5
    8. ' ' → logprob: -17.625
    9. 'b' → logprob: -17.75
    10. 'ook' → logprob: -18.0

Token 126: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00022070204431656748
    2. '[' → logprob: -8.50022029876709
    3. ' [' → logprob: -11.87522029876709
    4. '[i' → logprob: -12.00022029876709
    5. '   ' → logprob: -13.87522029876709
    6. ' ' → logprob: -14.25022029876709
    7. '```' → logprob: -14.62522029876709
    8. 'j' → logprob: -15.12522029876709
    9. '[
' → logprob: -15.25022029876709
    10. ')' → logprob: -15.25022029876709

Token 127: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1887409687042236
    2. '>' → logprob: -1.5637409687042236
    3. ' <' → logprob: -2.3137409687042236
    4. ' >' → logprob: -2.3137409687042236
    5. ' %' → logprob: -2.5637409687042236
    6. '<' → logprob: -2.6887409687042236
    7. '==' → logprob: -3.3137409687042236
    8. ']' → logprob: -3.4387409687042236
    9. ' ==' → logprob: -3.6887409687042236
    10. ')' → logprob: -4.1887407302856445

Token 128: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1127530336380005
    2. '<' → logprob: -1.6127530336380005
    3. '%' → logprob: -1.7377530336380005
    4. '==' → logprob: -2.237752914428711
    5. ' >' → logprob: -2.737752914428711
    6. ' <' → logprob: -2.987752914428711
    7. ' ==' → logprob: -3.487752914428711
    8. ' %' → logprob: -4.112752914428711
    9. '>=' → logprob: -4.487752914428711
    10. '<=' → logprob: -5.487752914428711

Token 129: ' j' (ID: 441)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5364336371421814
    2. ' can' → logprob: -0.9114336371421814
    3. ' ' → logprob: -5.411433696746826
    4. '1' → logprob: -5.661433696746826
    5. '0' → logprob: -6.286433696746826
    6. 'j' → logprob: -6.536433696746826
    7. '(can' → logprob: -8.411433219909668
    8. ' j' → logprob: -8.598933219909668
    9. 'L' → logprob: -8.661433219909668
    10. 'i' → logprob: -8.786433219909668

Token 130: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16832727193832397
    2. '+' → logprob: -2.0433273315429688
    3. ':
' → logprob: -3.7933273315429688
    4. ' +' → logprob: -6.168327331542969
    5. ' and' → logprob: -7.793327331542969
    6. 'and' → logprob: -9.293327331542969
    7. '-' → logprob: -10.168327331542969
    8. ':

' → logprob: -10.293327331542969
    9. ' :' → logprob: -10.293327331542969
    10. '+j' → logprob: -11.043327331542969

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006727590807713568
    2. ' ' → logprob: -7.375672817230225
    3. '2' → logprob: -10.625672340393066
    4. ':' → logprob: -11.500672340393066
    5. 'j' → logprob: -13.375672340393066
    6. '+' → logprob: -13.563172340393066
    7. '

' → logprob: -14.125672340393066
    8. '
' → logprob: -14.313172340393066
    9. ',' → logprob: -14.438172340393066
    10. '  ' → logprob: -14.500672340393066

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6936835050582886
    2. ':
' → logprob: -0.6936835050582886
    3. ' and' → logprob: -8.068683624267578
    4. '):
' → logprob: -8.943683624267578
    5. '):' → logprob: -10.568683624267578
    6. ':
' → logprob: -11.193683624267578
    7. '       ' → logprob: -11.318683624267578
    8. ':

' → logprob: -11.943683624267578
    9. ' or' → logprob: -12.068683624267578
    10. 'and' → logprob: -12.068683624267578

Token 133: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4134528636932373
    2. ':
' → logprob: -1.1634528636932373
    3. '           ' → logprob: -3.6634528636932373
    4. '       ' → logprob: -8.413453102111816
    5. ' and' → logprob: -8.413453102111816
    6. '):
' → logprob: -9.788453102111816
    7. '   ' → logprob: -11.288453102111816
    8. '):' → logprob: -11.288453102111816
    9. ':
' → logprob: -11.288453102111816
    10. '          ' → logprob: -11.913453102111816

Token 134: ' staged' (ID: 98557)
  Prédit: ' staged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' staged' → logprob: -0.05843007564544678
    2. 'st' → logprob: -3.5584301948547363
    3. '   ' → logprob: -3.9334301948547363
    4. '           ' → logprob: -5.058430194854736
    5. '
' → logprob: -6.433430194854736
    6. '               ' → logprob: -8.058429718017578
    7. '    
' → logprob: -8.933429718017578
    8. '            
' → logprob: -9.808429718017578
    9. '       ' → logprob: -9.933429718017578
    10. '  ' → logprob: -10.433429718017578

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326398253440857
    2. '=' → logprob: -1.313264012336731
    3. ' ' → logprob: -13.563263893127441
    4. ',' → logprob: -15.438263893127441
    5. '=j' → logprob: -16.063264846801758
    6. '.' → logprob: -16.938264846801758
    7. '=index' → logprob: -16.938264846801758
    8. 's' → logprob: -17.063264846801758
    9. '=None' → logprob: -17.063264846801758
    10. ' is' → logprob: -17.063264846801758

Token 136: ' spell' (ID: 29176)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08522006869316101
    2. ' j' → logprob: -2.8352200984954834
    3. 'spell' → logprob: -3.9602200984954834
    4. ' spell' → logprob: -5.585219860076904
    5. '	j' → logprob: -9.897720336914062
    6. 'sp' → logprob: -11.085220336914062
    7. ' ' → logprob: -11.335220336914062
    8. ' ' → logprob: -11.397720336914062
    9. '[j' → logprob: -11.897720336914062
    10. '(j' → logprob: -12.210220336914062

Token 137: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -9.088346359931165e-07
    2. 'ook' → logprob: -14.750000953674316
    3. 'boo' → logprob: -16.75
    4. 'cast' → logprob: -17.125
    5. 'bo' → logprob: -17.375
    6. 'b' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. '   ' → logprob: -17.625
    9. 'obook' → logprob: -17.75
    10. 'j' → logprob: -17.75

Token 138: '.pop' (ID: 15746)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2812558114528656
    2. '.pop' → logprob: -1.406255841255188
    3. 'pop' → logprob: -10.031255722045898
    4. '[' → logprob: -10.406255722045898
    5. 'j' → logprob: -11.281255722045898
    6. ' pop' → logprob: -12.531255722045898
    7. ',j' → logprob: -12.906255722045898
    8. 'Pop' → logprob: -13.156255722045898
    9. '```' → logprob: -13.656255722045898
    10. '[i' → logprob: -13.906255722045898

Token 139: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0001295222609769553
    2. '(' → logprob: -9.000129699707031
    3. '()' → logprob: -12.125129699707031
    4. '(
' → logprob: -14.750129699707031
    5. '(

' → logprob: -16.50012969970703
    6. '[j' → logprob: -17.00012969970703
    7. 'j' → logprob: -17.25012969970703
    8. ' (' → logprob: -17.87512969970703
    9. '(i' → logprob: -18.00012969970703
    10. '	j' → logprob: -19.00012969970703

Token 140: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20192712545394897
    2. ')
' → logprob: -1.7019271850585938
    3. ' )' → logprob: -8.576927185058594
    4. ')
' → logprob: -8.951927185058594
    5. ' )
' → logprob: -9.201927185058594
    6. ');' → logprob: -10.826927185058594
    7. ')

' → logprob: -10.951927185058594
    8. ')return' → logprob: -11.201927185058594
    9. '           ' → logprob: -11.326927185058594
    10. '<|end|>' → logprob: -11.701927185058594

Token 141: ' wizard' (ID: 67537)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06289409101009369
    2. 'break' → logprob: -3.437894105911255
    3. ' can' → logprob: -4.187893867492676
    4. '           ' → logprob: -5.437893867492676
    5. ' wizard' → logprob: -5.562893867492676
    6. '            ' → logprob: -6.562893867492676
    7. 'can' → logprob: -7.062893867492676
    8. '    ' → logprob: -7.312893867492676
    9. ' ' → logprob: -7.812893867492676
    10. ' spell' → logprob: -7.937893867492676

Token 142: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0002728985855355859
    2. 'y' → logprob: -8.250272750854492
    3. 'ery' → logprob: -11.500272750854492
    4. '.append' → logprob: -13.875272750854492
    5. 'ly' → logprob: -15.750272750854492
    6. 'ryw' → logprob: -16.125272750854492
    7. 'rys' → logprob: -16.875272750854492
    8. 'ries' → logprob: -17.000272750854492
    9. 'r' → logprob: -17.250272750854492
    10. 'ury' → logprob: -17.375272750854492

Token 143: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021629150433000177
    2. '.' → logprob: -8.500216484069824
    3. '.insert' → logprob: -11.375216484069824
    4. '.extend' → logprob: -14.125216484069824
    5. '.ap' → logprob: -15.750216484069824
    6. '.app' → logprob: -15.875216484069824
    7. 'append' → logprob: -16.000215530395508
    8. ' .' → logprob: -16.750215530395508
    9. '.reverse' → logprob: -17.125215530395508
    10. '.Append' → logprob: -17.625215530395508

Token 144: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0009220616775564849
    2. '(' → logprob: -7.625922203063965
    3. '(sp' → logprob: -7.750922203063965
    4. '(s' → logprob: -13.750922203063965
    5. '(j' → logprob: -13.875922203063965
    6. ' (' → logprob: -14.625922203063965
    7. '(stage' → logprob: -14.875922203063965
    8. '((' → logprob: -15.000922203063965
    9. '(
' → logprob: -15.625922203063965
    10. '(stor' → logprob: -16.37592124938965

Token 145: 'aged' (ID: 4743)
  Prédit: 'aged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aged' → logprob: -1.0802738870552275e-05
    2. 'age' → logprob: -12.25001049041748
    3. 'ag' → logprob: -12.75001049041748
    4. 'ged' → logprob: -14.12501049041748
    5. 'aging' → logprob: -14.37501049041748
    6. 'a' → logprob: -15.00001049041748
    7. 'ager' → logprob: -15.62501049041748
    8. '(' → logprob: -16.000011444091797
    9. '[' → logprob: -16.125011444091797
    10. 'g' → logprob: -16.375011444091797

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009611827321350574
    2. ')
' → logprob: -4.7596116065979
    3. ');' → logprob: -7.0096116065979
    4. ' )' → logprob: -10.259612083435059
    5. ';' → logprob: -10.884612083435059
    6. '<|end|>' → logprob: -11.259612083435059
    7. ');
' → logprob: -12.134612083435059
    8. ')return' → logprob: -12.384612083435059
    9. '   ' → logprob: -13.009612083435059
    10. '           ' → logprob: -13.384612083435059

Token 147: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.39162448048591614
    2. ' can' → logprob: -1.8916244506835938
    3. 'break' (adapté à ' break') → logprob: -2.2666244506835938
    4. 'can' → logprob: -3.3916244506835938
    5. '           ' → logprob: -4.016624450683594
    6. ' continue' → logprob: -5.141624450683594
    7. '
' → logprob: -5.891624450683594
    8. ' if' → logprob: -6.141624450683594
    9. '            
' → logprob: -6.641624450683594
    10. 'continue' → logprob: -6.891624450683594

Token 149: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02478313446044922
    2. ' else' → logprob: -4.024783134460449
    3. 'else' → logprob: -6.274783134460449
    4. '       ' → logprob: -6.524783134460449
    5. '<|end|>' → logprob: -6.649783134460449
    6. '    ' → logprob: -7.524783134460449
    7. '    
' → logprob: -7.899783134460449
    8. ' ' → logprob: -8.02478313446045
    9. ' if' → logprob: -8.52478313446045
    10. '  ' → logprob: -9.02478313446045

Token 151: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.32127562165260315
    2. 'else' (adapté à ' else') → logprob: -1.3212755918502808
    3. ' if' → logprob: -5.69627571105957
    4. 'if' → logprob: -6.07127571105957
    5. '   ' → logprob: -6.44627571105957
    6. ' ' → logprob: -8.19627571105957
    7. 'elif' → logprob: -9.07127571105957
    8. ')' → logprob: -9.57127571105957
    9. '    ' → logprob: -9.69627571105957
    10. ' elif' → logprob: -10.32127571105957

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003906826954334974
    2. ' :' → logprob: -6.128906726837158
    3. ':
' → logprob: -6.378906726837158
    4. ' :
' → logprob: -11.003907203674316
    5. '   ' → logprob: -13.128907203674316
    6. ':return' → logprob: -13.628907203674316
    7. ':

' → logprob: -13.753907203674316
    8. ':
' → logprob: -14.128907203674316
    9. '{' → logprob: -15.628907203674316
    10. '    ' → logprob: -15.753907203674316

Token 153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03482520207762718
    2. ' can' → logprob: -3.784825086593628
    3. '       ' → logprob: -5.159825325012207
    4. 'can' → logprob: -6.409825325012207
    5. ' break' → logprob: -6.784825325012207
    6. ' print' → logprob: -7.034825325012207
    7. ' if' → logprob: -7.034825325012207
    8. 'print' → logprob: -7.784825325012207
    9. ' spell' → logprob: -8.284825325012207
    10. ' raise' → logprob: -9.284825325012207

Token 154: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.1511368304491043
    2. 'print' → logprob: -2.651136875152588
    3. '   ' → logprob: -3.526136875152588
    4. ' can' → logprob: -3.651136875152588
    5. 'break' → logprob: -4.401136875152588
    6. ' print' → logprob: -6.651136875152588
    7. ' break' → logprob: -7.526136875152588
    8. '       ' → logprob: -9.52613639831543
    9. '	can' → logprob: -10.27613639831543
    10. '  ' → logprob: -10.90113639831543

Token 155: '_trans' (ID: 14514)
  Prédit: '_trans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trans' → logprob: -5.200166469876422e-06
    2. 'trans' → logprob: -13.000004768371582
    3. '_transform' → logprob: -13.125004768371582
    4. '_' → logprob: -15.000004768371582
    5. '_break' → logprob: -15.500004768371582
    6. 'Trans' → logprob: -16.1250057220459
    7. '_continue' → logprob: -16.1250057220459
    8. 'rans' → logprob: -17.0000057220459
    9. 't' → logprob: -17.5000057220459
    10. '=' → logprob: -17.6250057220459

Token 156: 'figure' (ID: 27949)
  Prédit: 'figure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'figure' → logprob: -0.10042490810155869
    2. 'igure' → logprob: -2.3504250049591064
    3. 'cture' → logprob: -9.850424766540527
    4. 'ature' → logprob: -10.350424766540527
    5. 'fig' → logprob: -10.475424766540527
    6. 'form' → logprob: -10.725424766540527
    7. 'iture' → logprob: -10.850424766540527
    8. 'igrate' → logprob: -11.225424766540527
    9. 'r' → logprob: -11.850424766540527
    10. 'igue' → logprob: -12.350424766540527

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038043100386857986
    2. ' =' → logprob: -3.2880430221557617
    3. '-=' → logprob: -14.538043022155762
    4. '==' → logprob: -15.038043022155762
    5. '*=' → logprob: -15.163043022155762
    6. ' ' → logprob: -15.288043022155762
    7. '+=' → logprob: -15.788043022155762
    8. '=False' → logprob: -16.288043975830078
    9. ' -=' → logprob: -16.538043975830078
    10. '   ' → logprob: -17.163043975830078

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021224225929472595
    2. 'False' → logprob: -9.000212669372559
    3. ' ' → logprob: -9.375212669372559
    4. ' False' → logprob: -13.500212669372559
    5. '-' → logprob: -13.625212669372559
    6. '   ' → logprob: -14.250212669372559
    7. '  ' → logprob: -15.562712669372559
    8. 'None' → logprob: -16.312711715698242
    9. '	' → logprob: -17.000211715698242
    10. '    ' → logprob: -17.000211715698242

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031890018726699054
    2. 'False' → logprob: -8.25031852722168
    3. '-' → logprob: -10.00031852722168
    4. ' ' → logprob: -11.75031852722168
    5. 'None' → logprob: -13.50031852722168
    6. ' False' → logprob: -14.18781852722168
    7. 'false' → logprob: -14.75031852722168
    8. '   ' → logprob: -15.00031852722168
    9. '2' → logprob: -16.00031852722168
    10. ' -' → logprob: -16.18781852722168

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014823723176959902
    2. '   ' → logprob: -9.250147819519043
    3. '           ' → logprob: -10.125147819519043
    4. '	' → logprob: -12.625147819519043
    5. ' ' → logprob: -13.250147819519043
    6. '      ' → logprob: -13.250147819519043
    7. '	break' → logprob: -13.250147819519043
    8. '     ' → logprob: -14.500147819519043
    9. '<|end|>' → logprob: -14.500147819519043
    10. '    ' → logprob: -14.500147819519043

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -11.125022888183594
    3. '           ' → logprob: -12.500022888183594
    4. '	' → logprob: -13.750022888183594
    5. ' ' → logprob: -14.250022888183594
    6. '      ' → logprob: -14.500022888183594
    7. '	break' → logprob: -14.500022888183594
    8. '<|end|>' → logprob: -14.750022888183594
    9. '.' → logprob: -15.250022888183594
    10. ' break' → logprob: -15.625022888183594

Token 162: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0015788980526849627
    2. ' break' → logprob: -6.6265788078308105
    3. '       ' → logprob: -8.501579284667969
    4. '	break' → logprob: -10.126579284667969
    5. '   ' → logprob: -11.751579284667969
    6. '           ' → logprob: -14.376579284667969
    7. '
' → logprob: -14.626579284667969
    8. 'print' → logprob: -15.251579284667969
    9. 'b' → logprob: -15.876579284667969
    10. '        
' → logprob: -16.25157928466797

Token 163: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09105073660612106
    2. 'if' → logprob: -2.466050624847412
    3. 'for' → logprob: -7.091050624847412
    4. '   ' → logprob: -7.466050624847412
    5. ' if' → logprob: -8.34105110168457
    6. '    
' → logprob: -9.09105110168457
    7. 'while' → logprob: -9.34105110168457
    8. 'wizard' → logprob: -9.96605110168457
    9. 'return' → logprob: -10.21605110168457
    10. 'i' → logprob: -10.34105110168457

Token 164: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1504194587469101
    2. 'if' → logprob: -2.1504194736480713
    3. '
' → logprob: -4.525419235229492
    4. ' if' → logprob: -4.775419235229492
    5. 'for' → logprob: -7.150419235229492
    6. '    
' → logprob: -7.650419235229492
    7. '   ' → logprob: -7.650419235229492
    8. '\n' → logprob: -7.900419235229492
    9. ' 
' → logprob: -8.150419235229492
    10. ' print' → logprob: -8.275419235229492

Token 165: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.10023795068264008
    2. ' can' → logprob: -2.3502378463745117
    3. ' not' → logprob: -10.475237846374512
    4. 'not' → logprob: -13.100237846374512
    5. '(can' → logprob: -14.350237846374512
    6. '	can' → logprob: -15.100237846374512
    7. ' len' → logprob: -16.850238800048828
    8. '_can' → logprob: -17.100238800048828
    9. ' ' → logprob: -17.225238800048828
    10. 'len' → logprob: -17.725238800048828

Token 166: '_trans' (ID: 14514)
  Prédit: '_trans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trans' → logprob: -7.107425062713446e-06
    2. 'trans' → logprob: -11.875006675720215
    3. '_transform' → logprob: -16.37500762939453
    4. 'Trans' → logprob: -16.75000762939453
    5. '_TRANS' → logprob: -19.12500762939453
    6. '-trans' → logprob: -19.75000762939453
    7. 'rans' → logprob: -20.50000762939453
    8. '_' → logprob: -20.62500762939453
    9. '_tr' → logprob: -20.87500762939453
    10. ' Trans' → logprob: -21.50000762939453

Token 167: 'figure' (ID: 27949)
  Prédit: 'figure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'figure' → logprob: -0.2522844672203064
    2. 'igure' → logprob: -1.5022845268249512
    3. 'form' → logprob: -8.377284049987793
    4. 'iture' → logprob: -10.752284049987793
    5. 'Figure' → logprob: -10.752284049987793
    6. 'fig' → logprob: -10.877284049987793
    7. 'ature' → logprob: -11.377284049987793
    8. 'igrate' → logprob: -11.627284049987793
    9. 'if' → logprob: -11.877284049987793
    10. 'r' → logprob: -12.252284049987793

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012706235982477665
    2. ':
' → logprob: -4.387706279754639
    3. '==' → logprob: -9.13770580291748
    4. ' ==' → logprob: -9.38770580291748
    5. ' :' → logprob: -12.63770580291748
    6. '():' → logprob: -14.76270580291748
    7. ':

' → logprob: -15.01270580291748
    8. '(' → logprob: -15.13770580291748
    9. 'print' → logprob: -15.51270580291748
    10. '>' → logprob: -15.51270580291748

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002418345306068659
    2. ' print' → logprob: -6.627418518066406
    3. 'print' → logprob: -7.252418518066406
    4. ' for' → logprob: -8.127418518066406
    5. ':
' → logprob: -10.502418518066406
    6. ':' → logprob: -10.877418518066406
    7. 'for' → logprob: -11.002418518066406
    8. '	print' → logprob: -11.377418518066406
    9. '    
' → logprob: -12.502418518066406
    10. '
' → logprob: -12.877418518066406

Token 170: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05711599439382553
    2. 'for' → logprob: -2.9321160316467285
    3. 'wizard' → logprob: -6.3071160316467285
    4. 'while' → logprob: -8.30711555480957
    5. ' for' → logprob: -9.93211555480957
    6. ' print' → logprob: -10.05711555480957
    7. '   ' → logprob: -10.30711555480957
    8. '[' → logprob: -11.55711555480957
    9. 'from' → logprob: -11.93211555480957
    10. 'import' → logprob: -12.05711555480957

Token 171: ' using' (ID: 2360)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08313266932964325
    2. 'for' → logprob: -2.583132743835449
    3. ' for' → logprob: -6.583132743835449
    4. 'wizard' → logprob: -6.583132743835449
    5. ' print' → logprob: -6.833132743835449
    6. '   ' → logprob: -8.83313274383545
    7. 'while' → logprob: -8.95813274383545
    8. ' wizard' → logprob: -10.33313274383545
    9. 'import' → logprob: -10.58313274383545
    10. 'result' → logprob: -11.45813274383545

Token 172: ' map' (ID: 4014)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3501356840133667
    2. '"' → logprob: -1.4751356840133667
    3. 'print' → logprob: -3.1001358032226562
    4. ''w' → logprob: -4.850135803222656
    5. 'wizard' → logprob: -4.975135803222656
    6. ''\' → logprob: -6.225135803222656
    7. ' '' → logprob: -6.350135803222656
    8. ' wizard' → logprob: -7.225135803222656
    9. ' print' → logprob: -7.725135803222656
    10. '"\' → logprob: -7.850135803222656

Token 173: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08016350120306015
    2. '(print' → logprob: -2.5801634788513184
    3. '(' → logprob: -6.830163478851318
    4. '(
' → logprob: -9.580163955688477
    5. ' print' → logprob: -9.830163955688477
    6. '   ' → logprob: -9.830163955688477
    7. '(lambda' → logprob: -11.330163955688477
    8. '(str' → logprob: -13.955163955688477
    9. 'for' → logprob: -14.330163955688477
    10. '```' → logprob: -15.080163955688477

Token 174: ' side' (ID: 4307)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011939727846765891
    2. 'str' → logprob: -9.25011920928955
    3. '(print' → logprob: -11.50011920928955
    4. '(str' → logprob: -11.75011920928955
    5. '   ' → logprob: -12.87511920928955
    6. ' print' → logprob: -13.50011920928955
    7. '(lambda' → logprob: -14.00011920928955
    8. 'lambda' → logprob: -15.12511920928955
    9. 'wizard' → logprob: -15.62511920928955
    10. '```' → logprob: -17.750120162963867

Token 175: ' effects' (ID: 9327)
  Prédit: ' effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effect' → logprob: -0.7439132928848267
    2. 'effect' → logprob: -0.7439132928848267
    3. 'effects' → logprob: -3.493913173675537
    4. ' effects' → logprob: -4.618913173675537
    5. 'print' → logprob: -5.118913173675537
    6. '-effect' → logprob: -6.618913173675537
    7. '=' → logprob: -7.243913173675537
    8. '   ' → logprob: -7.493913173675537
    9. ',' → logprob: -8.618913650512695
    10. '_effect' → logprob: -8.743913650512695

Token 176: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7861120104789734
    2. '(lambda' → logprob: -1.0361120700836182
    3. '(print' → logprob: -2.411112070083618
    4. '(map' → logprob: -3.161112070083618
    5. 'print' → logprob: -3.411112070083618
    6. '(
' → logprob: -3.911112070083618
    7. 'for' → logprob: -6.161111831665039
    8. '   ' → logprob: -6.786111831665039
    9. '(list' → logprob: -8.036111831665039
    10. 'map' → logprob: -8.161111831665039

Token 177: ' please' (ID: 4843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05030116066336632
    2. 'list' → logprob: -3.0503010749816895
    3. '(lambda' → logprob: -7.0503010749816895
    4. 'lambda' → logprob: -7.6753010749816895
    5. ' print' → logprob: -8.550301551818848
    6. '(print' → logprob: -9.425301551818848
    7. '_' → logprob: -10.675301551818848
    8. ' list' → logprob: -10.925301551818848
    9. '[' → logprob: -11.050301551818848
    10. 'map' → logprob: -11.050301551818848

Token 178: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03287636116147041
    2. 'list' → logprob: -3.5328762531280518
    3. 'wizard' → logprob: -6.407876491546631
    4. '(lambda' → logprob: -7.282876491546631
    5. 'lambda' → logprob: -7.532876491546631
    6. '(print' → logprob: -8.782876014709473
    7. '   ' → logprob: -10.782876014709473
    8. 'w' → logprob: -11.032876014709473
    9. '_' → logprob: -11.407876014709473
    10. '(w' → logprob: -11.657876014709473

Token 179: ' one' (ID: 1001)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24329999089241028
    2. 'newline' → logprob: -2.368299961090088
    3. 'list' → logprob: -3.118299961090088
    4. ' print' → logprob: -4.118299961090088
    5. ' newline' → logprob: -4.618299961090088
    6. 'one' → logprob: -5.118299961090088
    7. 'new' → logprob: -5.243299961090088
    8. 'w' → logprob: -5.243299961090088
    9. 'space' → logprob: -5.368299961090088
    10. ' list' → logprob: -5.868299961090088

Token 180: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.620775580406189
    2. '(' → logprob: -1.745775580406189
    3. 'print' → logprob: -2.1207756996154785
    4. '(map' → logprob: -2.8707756996154785
    5. '(
' → logprob: -2.9957756996154785
    6. 'map' → logprob: -3.8707756996154785
    7. 'list' → logprob: -3.8707756996154785
    8. ' for' → logprob: -4.7457756996154785
    9. '   ' → logprob: -5.4957756996154785
    10. '(print' → logprob: -5.4957756996154785

Token 181: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6608065366744995
    2. 'for' → logprob: -1.4108065366744995
    3. 'print' → logprob: -1.5358065366744995
    4. '   ' → logprob: -5.035806655883789
    5. 'map' → logprob: -5.410806655883789
    6. '(' → logprob: -5.535806655883789
    7. ' for' → logprob: -5.660806655883789
    8. '_' → logprob: -6.160806655883789
    9. '(list' → logprob: -7.035806655883789
    10. ' list' → logprob: -7.285806655883789

Token 182: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.1089780181646347
    2. 'print' → logprob: -2.858978033065796
    3. 'for' → logprob: -3.108978033065796
    4. ' list' → logprob: -7.733977794647217
    5. '_' → logprob: -7.983977794647217
    6. 'map' → logprob: -8.733978271484375
    7. ' for' → logprob: -8.858978271484375
    8. '   ' → logprob: -8.983978271484375
    9. ' print' → logprob: -10.858978271484375
    10. 'None' → logprob: -11.608978271484375

Token 183: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.125015258789062
    3. 'map' → logprob: -14.125015258789062
    4. '(print' → logprob: -16.625015258789062
    5. ',map' → logprob: -17.875015258789062
    6. '(
' → logprob: -18.000015258789062
    7. '(filter' → logprob: -19.000015258789062
    8. '(m' → logprob: -19.750015258789062
    9. '(range' → logprob: -20.250015258789062
    10. '_map' → logprob: -20.500015258789062

Token 184: '(print' (ID: 110391)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.7209538817405701
    2. '(print' → logprob: -0.7209538817405701
    3. '(lambda' → logprob: -3.845953941345215
    4. '(' → logprob: -5.220953941345215
    5. 'print' → logprob: -7.470953941345215
    6. '(
' → logprob: -10.470953941345215
    7. '((' → logprob: -11.595953941345215
    8. '(writer' → logprob: -11.720953941345215
    9. '```' → logprob: -11.845953941345215
    10. 'wizard' → logprob: -11.970953941345215

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25286442041397095
    2. ',w' → logprob: -1.5028643608093262
    3. '(w' → logprob: -7.252864360809326
    4. ',(' → logprob: -8.877864837646484
    5. ' ,' → logprob: -9.877864837646484
    6. '   ' → logprob: -11.252864837646484
    7. ',
' → logprob: -11.627864837646484
    8. '(' → logprob: -13.002864837646484
    9. ',W' → logprob: -13.752864837646484
    10. '  ' → logprob: -13.877864837646484

Token 186: ' wizard' (ID: 67537)
  Prédit: 'wizard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wizard' → logprob: -0.020428596064448357
    2. 're' → logprob: -4.020428657531738
    3. ' wizard' → logprob: -6.395428657531738
    4. '   ' → logprob: -8.395428657531738
    5. ' reversed' → logprob: -8.645428657531738
    6. 'wiz' → logprob: -9.520428657531738
    7. 'w' → logprob: -10.520428657531738
    8. '(re' → logprob: -10.645428657531738
    9. '  ' → logprob: -10.645428657531738
    10. ' ' → logprob: -11.145428657531738

Token 187: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.28181740641593933
    2. 'y' → logprob: -1.4068174362182617
    3. 'wizard' → logprob: -7.656817436218262
    4. 'wy' → logprob: -9.406817436218262
    5. 'w' → logprob: -10.281817436218262
    6. ')' → logprob: -10.406817436218262
    7. 'zy' → logprob: -10.531817436218262
    8. ' ' → logprob: -12.656817436218262
    9. 'ury' → logprob: -12.781817436218262
    10. 'ery' → logprob: -13.656817436218262

Token 188: '[::-' (ID: 159890)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006953822914510965
    2. '))
' → logprob: -5.006953716278076
    3. '[::-' → logprob: -8.881954193115234
    4. ')' → logprob: -9.756954193115234
    5. '))

' → logprob: -11.131954193115234
    6. ' ))' → logprob: -11.131954193115234
    7. '   ' → logprob: -12.506954193115234
    8. ')))' → logprob: -13.006954193115234
    9. '()))' → logprob: -13.756954193115234
    10. ' ' → logprob: -13.881954193115234

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. '[' → logprob: -11.0000581741333
    3. ')' → logprob: -11.1250581741333
    4. '))' → logprob: -12.1250581741333
    5. '-' → logprob: -12.5000581741333
    6. 'ed' → logprob: -12.7500581741333
    7. '])' → logprob: -12.8750581741333
    8. '[::-' → logprob: -13.3750581741333
    9. '```' → logprob: -13.5000581741333
    10. '(' → logprob: -13.8750581741333

Token 190: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -7.219262624857947e-05
    2. ')' → logprob: -10.000072479248047
    3. '))
' → logprob: -10.750072479248047
    4. ' ))' → logprob: -12.750072479248047
    5. ')))' → logprob: -13.250072479248047
    6. '()))' → logprob: -14.875072479248047
    7. '))

' → logprob: -15.750072479248047
    8. '));' → logprob: -16.500072479248047
    9. ',' → logprob: -17.000072479248047
    10. ''))' → logprob: -17.250072479248047

Token 191: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38736438751220703
    2. ':' → logprob: -1.137364387512207
    3. '   ' → logprob: -7.762364387512207
    4. 'print' → logprob: -10.262364387512207
    5. ' :
' → logprob: -10.887364387512207
    6. ' :' → logprob: -12.262364387512207
    7. ':

' → logprob: -12.512364387512207
    8. ':
' → logprob: -12.887364387512207
    9. ' print' → logprob: -13.012364387512207
    10. '  ' → logprob: -15.762364387512207

Token 193: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029067506548017263
    2. '   ' → logprob: -6.002906799316406
    3. ' print' → logprob: -7.752906799316406
    4. '	print' → logprob: -13.627906799316406
    5. ' ' → logprob: -15.877906799316406
    6. '  ' → logprob: -17.502906799316406
    7. '```' → logprob: -17.502906799316406
    8. '    
' → logprob: -18.252906799316406
    9. '(print' → logprob: -18.627906799316406
    10. '
' → logprob: -18.627906799316406

Token 194: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.500000953674316
    3. ' print' → logprob: -16.875
    4. '   ' → logprob: -17.625
    5. '-print' → logprob: -17.875
    6. 'pr' → logprob: -20.125
    7. 'printf' → logprob: -20.75
    8. 'prin' → logprob: -21.0
    9. '```' → logprob: -21.375
    10. '	print' → logprob: -21.75

Token 195: ' expressing' (ID: 64743)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.000001907348633
    4. 'pr' → logprob: -17.500001907348633
    5. '-' → logprob: -17.625001907348633
    6. 'prin' → logprob: -18.625001907348633
    7. '-print' → logprob: -18.875001907348633
    8. '#print' → logprob: -19.375001907348633
    9. '#' → logprob: -19.625001907348633
    10. 'printf' → logprob: -20.625001907348633

Token 196: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33361348509788513
    2. 'print' → logprob: -1.3336135149002075
    3. '"' → logprob: -4.208613395690918
    4. 'im' → logprob: -6.458613395690918
    5. ':' → logprob: -7.208613395690918
    6. ''' → logprob: -7.708613395690918
    7. '0' → logprob: -7.833613395690918
    8. '":' → logprob: -8.333613395690918
    9. '-im' → logprob: -8.833613395690918
    10. '"The' → logprob: -8.833613395690918

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3586534559726715
    2. '-' → logprob: -1.6086534261703491
    3. 'print' → logprob: -2.3586535453796387
    4. '"' → logprob: -5.983653545379639
    5. ' -' → logprob: -6.358653545379639
    6. ' print' → logprob: -7.608653545379639
    7. 'im' → logprob: -7.733653545379639
    8. ':' → logprob: -8.10865306854248
    9. '2' → logprob: -9.48365306854248
    10. 'puts' → logprob: -9.48365306854248

Token 198: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015550498210359365
    2. '-' → logprob: -10.000155448913574
    3. '(-' → logprob: -10.375155448913574
    4. '(' → logprob: -10.375155448913574
    5. '(print' → logprob: -10.625155448913574
    6. ' print' → logprob: -11.125155448913574
    7. '   ' → logprob: -12.500155448913574
    8. '-print' → logprob: -12.750155448913574
    9. '.print' → logprob: -14.375155448913574
    10. '
' → logprob: -15.000155448913574

Token 199: ' unary' (ID: 185293)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10057391226291656
    2. '-' → logprob: -2.350574016571045
    3. ' print' → logprob: -9.350573539733887
    4. '-print' → logprob: -9.600573539733887
    5. '[-' → logprob: -9.725573539733887
    6. 'str' → logprob: -9.850573539733887
    7. ' -' → logprob: -11.350573539733887
    8. ''-' → logprob: -11.350573539733887
    9. 'python' → logprob: -11.475573539733887
    10. 'a' → logprob: -11.600573539733887

Token 200: ' minus' (ID: 40335)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07190541177988052
    2. '-' → logprob: -2.6969053745269775
    3. '-
' → logprob: -6.571905612945557
    4. '-print' → logprob: -9.571905136108398
    5. ' print' → logprob: -9.696905136108398
    6. 'p' → logprob: -9.946905136108398
    7. '+' → logprob: -9.946905136108398
    8. '~' → logprob: -10.071905136108398
    9. ''-' → logprob: -10.571905136108398
    10. '-
' → logprob: -10.571905136108398

Token 201: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24765050411224365
    2. '-' → logprob: -1.6226505041122437
    3. '(-' → logprob: -3.997650623321533
    4. '   ' → logprob: -5.997650623321533
    5. '-print' → logprob: -7.622650623321533
    6. '(
' → logprob: -8.247650146484375
    7. ' print' → logprob: -8.747650146484375
    8. '(' → logprob: -8.997650146484375
    9. '-
' → logprob: -9.622650146484375
    10. '(print' → logprob: -11.372650146484375

Token 202: ' obscure' (ID: 77331)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005596579983830452
    2. '1' → logprob: -5.63059663772583
    3. 'print' → logprob: -6.88059663772583
    4. ' -' → logprob: -7.25559663772583
    5. 'True' → logprob: -9.630596160888672
    6. '(-' → logprob: -9.630596160888672
    7. '(' → logprob: -10.505596160888672
    8. 'the' → logprob: -10.630596160888672
    9. '-un' → logprob: -11.005596160888672
    10. ' ' → logprob: -11.880596160888672

Token 203: ' fun' (ID: 2827)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47133439779281616
    2. 'print' → logprob: -1.221334457397461
    3. '(' → logprob: -3.971334457397461
    4. 'one' → logprob: -4.471334457397461
    5. '(-' → logprob: -4.596334457397461
    6. 'way' → logprob: -4.721334457397461
    7. '-' → logprob: -4.846334457397461
    8. 'fashion' → logprob: -4.971334457397461
    9. 'notation' → logprob: -5.471334457397461
    10. 'number' → logprob: -5.846334457397461

Token 204: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012328929267823696
    2. '-' → logprob: -4.5123291015625
    3. '   ' → logprob: -7.0123291015625
    4. '(-' → logprob: -9.0123291015625
    5. ' print' → logprob: -9.5123291015625
    6. '-
' → logprob: -9.7623291015625
    7. '-print' → logprob: -10.0123291015625
    8. '(
' → logprob: -10.1373291015625
    9. ' -' → logprob: -10.7623291015625
    10. '(' → logprob: -12.1373291015625

Token 205: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001757696009008214
    2. '   ' → logprob: -8.750175476074219
    3. '-' → logprob: -11.250175476074219
    4. ' print' → logprob: -13.250175476074219
    5. '-print' → logprob: -13.875175476074219
    6. '
' → logprob: -14.750175476074219
    7. '(-' → logprob: -15.000175476074219
    8. '```' → logprob: -15.250175476074219
    9. '(print' → logprob: -15.250175476074219
    10. '-
' → logprob: -16.25017547607422

Token 206: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011771318968385458
    2. '-print' → logprob: -7.0011773109436035
    3. '-' → logprob: -8.251176834106445
    4. '-pr' → logprob: -13.251176834106445
    5. ' print' → logprob: -13.376176834106445
    6. 'prin' → logprob: -15.001176834106445
    7. 'pr' → logprob: -15.251176834106445
    8. 'pri' → logprob: -15.376176834106445
    9. '-p' → logprob: -16.001176834106445
    10. '   ' → logprob: -16.376176834106445

Token 207: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.02356025017797947
    2. '(' → logprob: -3.8985602855682373
    3. '-' → logprob: -5.898560047149658
    4. ' -' → logprob: -8.648560523986816
    5. '(
' → logprob: -9.523560523986816
    6. ' (-' → logprob: -11.148560523986816
    7. ' (' → logprob: -12.398560523986816
    8. '(-(' → logprob: -14.148560523986816
    9. '(
' → logprob: -15.023560523986816
    10. '   ' → logprob: -15.023560523986816

Token 208: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '(' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '0' → logprob: -17.375001907348633
    6. ')' → logprob: -17.375001907348633
    7. '-' → logprob: -18.000001907348633
    8. '１' → logprob: -19.000001907348633
    9. '```' → logprob: -19.375001907348633
    10. '_' → logprob: -19.625001907348633

Token 209: 'b' (ID: 65)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002637199067976326
    2. ' ' → logprob: -8.250264167785645
    3. ')' → logprob: -13.500264167785645
    4. '   ' → logprob: -14.000264167785645
    5. '-' → logprob: -15.875264167785645
    6. '(' → logprob: -17.375263214111328
    7. '  ' → logprob: -17.500263214111328
    8. ' )' → logprob: -18.125263214111328
    9. ' -' → logprob: -18.500263214111328
    10. '=' → logprob: -18.625263214111328

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.862962229410186e-05
    2. '01' → logprob: -10.250078201293945
    3. '0' → logprob: -11.250078201293945
    4. '000' → logprob: -11.625078201293945
    5. '001' → logprob: -11.875078201293945
    6. '11' → logprob: -12.625078201293945
    7. '101' → logprob: -13.125078201293945
    8. '   ' → logprob: -13.312578201293945
    9. '10' → logprob: -13.875078201293945
    10. '111' → logprob: -13.937578201293945

Token 211: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '))' → logprob: -13.125004768371582
    3. ')
' → logprob: -14.000004768371582
    4. ' )' → logprob: -14.000004768371582
    5. '1' → logprob: -15.000004768371582
    6. ')`' → logprob: -15.125004768371582
    7. '`)' → logprob: -16.0000057220459
    8. '0' → logprob: -16.3750057220459
    9. ')#' → logprob: -17.3750057220459
    10. ')")' → logprob: -17.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 30.62%
Précision adaptée (1ère position): 33.01%
Précision (top 10): 58.37%
================================================================================
