================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un nombre entier qui sera stocké dans la variable 'n'.
# Cette variable représente le nombre d'éléments que nous allons traiter ensuite.
n = int(input())

# Récupère les éléments d'entrée de l'utilisateur sous forme de chaîne de caractères,
# les divise en sous-chaînes et les convertit chacune en entier.
# L'ensemble est stocké dans la liste 'h'.
h = list(map(int, input().split()))

# Initialise une variable booléenne nommée 'judge' à True.
# Cette variable servira de drapeau pour indiquer si la condition du problème est remplie.
judge = True

# Démarre une boucle qui s'exécute pour chaque indice 'i' allant de 0 à n-2 (inclus),
# ce qui signifie qu'on s'arrête avant le dernier élément de la liste 'h' car on va comparer des paires consécutives.
for i in range(n - 1):
    # Vérifie si l'élément courant dans la liste 'h' est strictement supérieur à l'élément suivant.
    if h[i] > h[i + 1]:
        # Si c'est le cas, la condition attendue n'est pas respectée.
        # On attribue la valeur False à la variable 'judge' pour signaler que la séquence ne répond pas à la contrainte.
        judge = False
        # Utilise 'break' pour arrêter immédiatement la boucle car il est inutile d'effectuer d'autres vérifications.
        break
    # Si l'élément courant n'est pas supérieur mais qu'il est différent du suivant,
    # cela signifie qu'il est inférieur, donc nous procédons à l'étape suivante.
    elif h[i] != h[i + 1]:
        # On décrémente l'élément suivant de la liste 'h' de 1 unité.
        # Cela ajuste la séquence pour la comparer de nouveau lors du prochain passage dans la boucle,
        # dans le but de satisfaire une certaine condition de non-décroissance permise par décrément.
        h[i + 1] = h[i + 1] - 1
        # Cette opération modifie directement la liste d'origine.

# Après la boucle, on vérifie si le drapeau 'judge' est resté à True,
# ce qui signifierait que la séquence respecte la contrainte demandée dans le problème.
if judge:
    # Affiche "Yes" pour indiquer le succès.
    print("Yes")
else:
    # Affiche "No" si au moins une des comparaisons dans la boucle n'a pas respecté la règle.
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2601135969161987
    2. ' ' → logprob: -1.5101135969161987
    3. ':' → logprob: -1.6351135969161987
    4. 's' → logprob: -1.7601135969161987
    5. ' =' → logprob: -3.5101137161254883
    6. ''' → logprob: -3.7601137161254883
    7. '_' → logprob: -3.7601137161254883
    8. ' d' → logprob: -4.260113716125488
    9. '```' → logprob: -4.385113716125488
    10. ' :' → logprob: -4.760113716125488

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011731287464499474
    2. ' l' → logprob: -4.511731147766113
    3. 'user' → logprob: -8.511731147766113
    4. '#' → logprob: -8.761731147766113
    5. 'util' → logprob: -9.636731147766113
    6. ''' → logprob: -10.386731147766113
    7. '`' → logprob: -10.386731147766113
    8. '```' → logprob: -10.636731147766113
    9. ' ' → logprob: -11.011731147766113
    10. 'la' → logprob: -11.136731147766113

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3607207238674164
    2. 'name' → logprob: -2.235720634460449
    3. 'user' → logprob: -2.485720634460449
    4. 'n' → logprob: -3.235720634460449
    5. 'input' → logprob: -4.110720634460449
    6. 's' → logprob: -4.360720634460449
    7. 'username' → logprob: -4.735720634460449
    8. '#' → logprob: -5.110720634460449
    9. '`' → logprob: -5.235720634460449
    10. 'print' → logprob: -5.735720634460449

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5498698353767395
    2. ' saisir' → logprob: -1.4248697757720947
    3. ' ' → logprob: -2.4248697757720947
    4. ' ' → logprob: -3.9248697757720947
    5. 'r' → logprob: -4.174870014190674
    6. 'entr' → logprob: -4.424870014190674
    7. '```' → logprob: -4.799870014190674
    8. '_' → logprob: -4.924870014190674
    9. 'entrée' → logprob: -5.174870014190674
    10. ' entrer' → logprob: -5.174870014190674

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018289826810359955
    2. ' un' → logprob: -5.018290042877197
    3. ''' → logprob: -5.268290042877197
    4. '_' → logprob: -6.143290042877197
    5. ' une' → logprob: -6.643290042877197
    6. 's' → logprob: -7.518290042877197
    7. 'u' → logprob: -8.018289566040039
    8. '```' → logprob: -8.018289566040039
    9. 'r' → logprob: -8.518289566040039
    10. ''un' → logprob: -8.643289566040039

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08431092649698257
    2. ' espace' → logprob: -2.959311008453369
    3. '_' → logprob: -5.334311008453369
    4. 'es' → logprob: -5.584311008453369
    5. 'e' → logprob: -5.584311008453369
    6. '  ' → logprob: -6.334311008453369
    7. 'a' → logprob: -6.459311008453369
    8. 'space' → logprob: -6.459311008453369
    9. 'n' → logprob: -6.584311008453369
    10. 'é' → logprob: -6.709311008453369

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014458579942584038
    2. 'nombre' → logprob: -4.639458656311035
    3. 'x' → logprob: -6.264458656311035
    4. '\n' → logprob: -7.514458656311035
    5. '_' → logprob: -7.639458656311035
    6. '#' → logprob: -7.764458656311035
    7. '```' → logprob: -8.514458656311035
    8. ' ' → logprob: -8.514458656311035
    9. 's' → logprob: -8.639458656311035
    10. '\' → logprob: -8.889458656311035

Token 11: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008863802999258041
    2. 'x' → logprob: -5.508863925933838
    3. 'nombre' → logprob: -6.133863925933838
    4. 'i' → logprob: -6.883863925933838
    5. '#' → logprob: -8.13386344909668
    6. 'input' → logprob: -8.63386344909668
    7. '\n' → logprob: -8.63386344909668
    8. '```' → logprob: -8.75886344909668
    9. '`' → logprob: -8.88386344909668
    10. '_' → logprob: -9.25886344909668

Token 12: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12880654633045197
    2. ''' → logprob: -3.2538065910339355
    3. 's' → logprob: -3.7538065910339355
    4. '_' → logprob: -4.0038065910339355
    5. '`' → logprob: -5.6288065910339355
    6. ' )' → logprob: -5.7538065910339355
    7. 'n' → logprob: -5.8788065910339355
    8. ' est' → logprob: -6.0038065910339355
    9. ' sera' → logprob: -6.0038065910339355
    10. ' n' → logprob: -6.2538065910339355

Token 13: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004121380392462015
    2. 's' → logprob: -7.12912130355835
    3. ''' → logprob: -7.37912130355835
    4. '  ' → logprob: -7.75412130355835
    5. '\' → logprob: -7.87912130355835
    6. '_' → logprob: -8.629121780395508
    7. ' utilisé' → logprob: -8.629121780395508
    8. ' ,' → logprob: -9.129121780395508
    9. 'n' → logprob: -9.254121780395508
    10. '"' → logprob: -9.379121780395508

Token 14: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01313940342515707
    2. ' ' → logprob: -4.388139247894287
    3. ' _' → logprob: -8.138139724731445
    4. 'd' → logprob: -9.638139724731445
    5. '_d' → logprob: -9.888139724731445
    6. '_space' → logprob: -10.138139724731445
    7. ',' → logprob: -10.638139724731445
    8. 's' → logprob: -10.888139724731445
    9. ' d' → logprob: -11.138139724731445
    10. 'e' → logprob: -11.263139724731445

Token 15: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18463613092899323
    2. 'n' → logprob: -2.684636116027832
    3. ' ' → logprob: -3.934636116027832
    4. ':' → logprob: -3.934636116027832
    5. ',' → logprob: -4.309636116027832
    6. '.' → logprob: -4.559636116027832
    7. '`' → logprob: -4.684636116027832
    8. 'x' → logprob: -5.434636116027832
    9. '\' → logprob: -5.559636116027832
    10. '\n' → logprob: -5.684636116027832

Token 16: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6732500195503235
    2. ' une' → logprob: -2.0482499599456787
    3. 'la' → logprob: -2.5482499599456787
    4. 'n' → logprob: -2.7982499599456787
    5. ' ' → logprob: -2.7982499599456787
    6. 'une' → logprob: -3.0482499599456787
    7. ' n' → logprob: -3.9232499599456787
    8. 'a' → logprob: -4.298250198364258
    9. ' a' → logprob: -4.298250198364258
    10. '`' → logprob: -4.548250198364258

Token 17: ' variable' (ID: 11076)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5772504806518555
    2. 'variable' → logprob: -0.9522504806518555
    3. 'n' → logprob: -3.9522504806518555
    4. ' variable' → logprob: -4.2022504806518555
    5. 'var' → logprob: -5.2022504806518555
    6. ' nombre' → logprob: -5.5772504806518555
    7. 'x' → logprob: -5.8272504806518555
    8. '`' → logprob: -6.4522504806518555
    9. 'ent' → logprob: -6.5772504806518555
    10. 'num' → logprob: -6.9522504806518555

Token 18: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8489539623260498
    2. ' ' → logprob: -1.2239539623260498
    3. 'nombre' → logprob: -2.47395396232605
    4. '_' → logprob: -2.72395396232605
    5. '`' → logprob: -2.72395396232605
    6. ' n' → logprob: -3.97395396232605
    7. '```' → logprob: -4.723954200744629
    8. 's' → logprob: -5.598954200744629
    9. 'num' → logprob: -5.598954200744629
    10. 'a' → logprob: -5.723954200744629

Token 19: 'n' (ID: 77)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.029706047847867012
    2. 'n' → logprob: -3.7797060012817383
    3. 'nb' → logprob: -6.154706001281738
    4. 'num' → logprob: -6.779706001281738
    5. 'ent' → logprob: -7.154706001281738
    6. 'number' → logprob: -7.529706001281738
    7. '`' → logprob: -7.779706001281738
    8. ' nombre' → logprob: -7.904706001281738
    9. 'nbr' → logprob: -8.404706001281738
    10. 'user' → logprob: -8.654706001281738

Token 20: ''.
' (ID: 49980)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5938989520072937
    2. ''' → logprob: -1.4688990116119385
    3. ')' → logprob: -1.8438990116119385
    4. 'e' → logprob: -3.9688990116119385
    5. '')' → logprob: -4.343898773193359
    6. '#' → logprob: -4.718898773193359
    7. '```' → logprob: -5.718898773193359
    8. '']' → logprob: -5.968898773193359
    9. '`' → logprob: -6.593898773193359
    10. 'u' → logprob: -6.718898773193359

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001561009994475171
    2. '\n' → logprob: -9.62515640258789
    3. '```' → logprob: -10.12515640258789
    4. '\' → logprob: -10.75015640258789
    5. '#' → logprob: -11.75015640258789
    6. '' → logprob: -12.87515640258789
    7. '`' → logprob: -13.00015640258789
    8. '.' → logprob: -13.00015640258789
    9. ' ' → logprob: -13.12515640258789
    10. ',' → logprob: -13.37515640258789

Token 22: ' Cette' (ID: 27383)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016277639952022582
    2. ' n' → logprob: -8.750163078308105
    3. ' ' → logprob: -13.250163078308105
    4. '#' → logprob: -13.875163078308105
    5. '```' → logprob: -14.375163078308105
    6. ' \' → logprob: -15.875163078308105
    7. ' ```' → logprob: -15.875163078308105
    8. '\n' → logprob: -16.00016212463379
    9. ' #' → logprob: -16.00016212463379
    10. 'print' → logprob: -16.12516212463379

Token 23: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20593029260635376
    2. ' variable' → logprob: -2.705930233001709
    3. ' n' → logprob: -3.080930233001709
    4. ' valeur' → logprob: -3.455930233001709
    5. 'nombre' → logprob: -4.205930233001709
    6. '_' → logprob: -5.205930233001709
    7. ' nombre' → logprob: -5.455930233001709
    8. 'variable' → logprob: -5.580930233001709
    9. 's' → logprob: -5.830930233001709
    10. ' ' → logprob: -6.080930233001709

Token 24: ' représente' (ID: 88912)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.416472464799881
    2. ' sera' → logprob: -2.4164724349975586
    3. ' n' → logprob: -2.6664724349975586
    4. ' est' → logprob: -3.1664724349975586
    5. 'n' → logprob: -3.6664724349975586
    6. ' =' → logprob: -4.041472434997559
    7. 's' → logprob: -4.416472434997559
    8. '_' → logprob: -4.416472434997559
    9. ' contient' → logprob: -4.666472434997559
    10. ' a' → logprob: -4.791472434997559

Token 25: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.07172844558954239
    2. 'le' → logprob: -2.821728467941284
    3. ' la' → logprob: -4.821728229522705
    4. 'la' → logprob: -7.446728229522705
    5. 'l' → logprob: -7.696728229522705
    6. ' un' → logprob: -8.196728706359863
    7. ' ' → logprob: -8.946728706359863
    8. ' l' → logprob: -9.821728706359863
    9. '_le' → logprob: -10.321728706359863
    10. ' nombre' → logprob: -10.446728706359863

Token 26: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5780446529388428
    2. 'nombre' → logprob: -0.8280446529388428
    3. 'n' → logprob: -7.328044891357422
    4. 's' → logprob: -8.703044891357422
    5. 'é' → logprob: -9.078044891357422
    6. ' facteur' → logprob: -9.078044891357422
    7. 'nom' → logprob: -9.328044891357422
    8. ' nombres' → logprob: -9.703044891357422
    9. 'Nombre' → logprob: -9.703044891357422
    10. 'fact' → logprob: -9.703044891357422

Token 27: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5908065438270569
    2. ' ' → logprob: -1.465806484222412
    3. ' de' → logprob: -2.090806484222412
    4. 'd' → logprob: -2.840806484222412
    5. ' total' → logprob: -4.590806484222412
    6. 'total' → logprob: -5.340806484222412
    7. '_' → logprob: -5.590806484222412
    8. 'de' → logprob: -5.715806484222412
    9. 's' → logprob: -6.590806484222412
    10. '#' → logprob: -6.590806484222412

Token 28: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5036909580230713
    2. 'é' → logprob: -1.5036909580230713
    3. ''' → logprob: -2.3786909580230713
    4. 'e' → logprob: -3.5036909580230713
    5. ''é' → logprob: -3.8786909580230713
    6. ' ' → logprob: -5.378690719604492
    7. 'éros' → logprob: -5.503690719604492
    8. 'ombres' → logprob: -6.628690719604492
    9. '```' → logprob: -6.753690719604492
    10. ' espaces' → logprob: -6.878690719604492

Token 29: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7469434142112732
    2. 'é' → logprob: -0.8719434142112732
    3. ''' → logprob: -2.621943473815918
    4. ''é' → logprob: -4.121943473815918
    5. ''él' → logprob: -5.121943473815918
    6. 'él' → logprob: -5.496943473815918
    7. 'e' → logprob: -6.496943473815918
    8. ''ét' → logprob: -6.871943473815918
    9. 'it' → logprob: -6.871943473815918
    10. 'è' → logprob: -7.121943473815918

Token 30: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0019087657565250993
    2. 'ment' → logprob: -6.376908779144287
    3. 'm' → logprob: -8.626908302307129
    4. 'me' → logprob: -12.501908302307129
    5. 'éments' → logprob: -12.751908302307129
    6. 'mé' → logprob: -12.876908302307129
    7. 'mentation' → logprob: -13.001908302307129
    8. 'ements' → logprob: -13.126908302307129
    9. '```' → logprob: -13.251908302307129
    10. 'men' → logprob: -13.251908302307129

Token 31: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046006251126527786
    2. ' à' → logprob: -3.421006202697754
    3. 'n' → logprob: -5.796006202697754
    4. '_' → logprob: -5.921006202697754
    5. ' a' → logprob: -6.421006202697754
    6. 's' → logprob: -6.671006202697754
    7. '.' → logprob: -6.921006202697754
    8. ')' → logprob: -7.421006202697754
    9. ' n' → logprob: -7.421006202697754
    10. ' )' → logprob: -8.546006202697754

Token 32: ' nous' (ID: 6176)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5378250479698181
    2. 'l' → logprob: -1.162825107574463
    3. 'n' → logprob: -4.412825107574463
    4. ' vous' → logprob: -4.537825107574463
    5. 'tu' → logprob: -4.787825107574463
    6. ' n' → logprob: -4.912825107574463
    7. 'vous' → logprob: -4.912825107574463
    8. 's' → logprob: -5.287825107574463
    9. '```' → logprob: -5.537825107574463
    10. ' tu' → logprob: -5.537825107574463

Token 33: ' allons' (ID: 97647)
  Prédit: ' allons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allons' → logprob: -0.718752384185791
    2. ' voulons' → logprob: -0.718752384185791
    3. ' souhait' → logprob: -4.218752384185791
    4. ' souhaite' → logprob: -6.218752384185791
    5. ' ' → logprob: -6.218752384185791
    6. ' voulez' → logprob: -6.718752384185791
    7. ' veux' → logprob: -6.843752384185791
    8. ' souhaitez' → logprob: -7.218752384185791
    9. ' veut' → logprob: -7.218752384185791
    10. 'sou' → logprob: -7.468752384185791

Token 34: ' traiter' (ID: 105852)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.4147838354110718
    2. 'tr' → logprob: -2.1647839546203613
    3. ' traiter' → logprob: -2.1647839546203613
    4. 'aj' → logprob: -2.2897839546203613
    5. '#' → logprob: -2.2897839546203613
    6. 's' → logprob: -2.6647839546203613
    7. ' afficher' → logprob: -3.0397839546203613
    8. ' ajouter' → logprob: -3.6647839546203613
    9. 'aff' → logprob: -3.9147839546203613
    10. ' saisir' → logprob: -3.9147839546203613

Token 35: ' ensuite' (ID: 39713)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.676981345459353e-06
    2. '\n' → logprob: -13.125005722045898
    3. '
' → logprob: -13.625005722045898
    4. '#' → logprob: -14.000005722045898
    5. '```' → logprob: -14.125005722045898
    6. '.' → logprob: -15.250005722045898
    7. ' n' → logprob: -15.375005722045898
    8. '\' → logprob: -15.875005722045898
    9. '

' → logprob: -16.5000057220459
    10. ',' → logprob: -17.1250057220459

Token 36: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00038086410495452583
    2. '#' → logprob: -8.625380516052246
    3. '\n' → logprob: -9.000380516052246
    4. '\' → logprob: -11.000380516052246
    5. '```' → logprob: -11.000380516052246
    6. '
' → logprob: -11.375380516052246
    7. '.' → logprob: -11.625380516052246
    8. ',' → logprob: -11.875380516052246
    9. 'x' → logprob: -12.500380516052246
    10. 'i' → logprob: -12.875380516052246

Token 37: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.75
    3. '```' → logprob: -16.5
    4. '#' → logprob: -16.75
    5. ' n' → logprob: -18.125
    6. '\' → logprob: -18.25
    7. '
' → logprob: -19.25
    8. '`' → logprob: -19.875
    9. '

' → logprob: -20.625
    10. 'print' → logprob: -20.75

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005930813029408455
    2. '=' → logprob: -5.1309309005737305
    3. '=int' → logprob: -14.25593090057373
    4. ' ' → logprob: -14.38093090057373
    5. '=input' → logprob: -15.00593090057373
    6. ' ' → logprob: -15.50593090057373
    7. 's' → logprob: -16.005929946899414
    8. 'space' → logprob: -16.255929946899414
    9. ',' → logprob: -16.630929946899414
    10. '.' → logprob: -16.755929946899414

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014226154424250126
    2. 'int' → logprob: -4.264225959777832
    3. ' input' → logprob: -9.764225959777832
    4. ' ' → logprob: -13.264225959777832
    5. 'input' → logprob: -13.639225959777832
    6. ' ' → logprob: -13.764225959777832
    7. '=int' → logprob: -13.764225959777832
    8. '	int' → logprob: -17.13922691345215
    9. '<int' → logprob: -17.38922691345215
    10. '[int' → logprob: -17.51422691345215

Token 40: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062005553394556046
    2. '(input' → logprob: -2.8120055198669434
    3. '('' → logprob: -10.812005996704102
    4. ' (' → logprob: -11.812005996704102
    5. '()' → logprob: -12.562005996704102
    6. 'input' → logprob: -13.312005996704102
    7. '(
' → logprob: -13.312005996704102
    8. '(int' → logprob: -13.812005996704102
    9. '("' → logprob: -14.187005996704102
    10. '(

' → logprob: -14.312005996704102

Token 41: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10806700587272644
    2. '('' → logprob: -2.483067035675049
    3. '("("' → logprob: -4.358067035675049
    4. '()' → logprob: -5.358067035675049
    5. '("' → logprob: -6.983067035675049
    6. '("")' → logprob: -8.85806655883789
    7. '(""))' → logprob: -9.35806655883789
    8. '())' → logprob: -9.48306655883789
    9. '(">' → logprob: -9.48306655883789
    10. '(
' → logprob: -10.35806655883789

Token 42: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10895834118127823
    2. ' ' → logprob: -2.4839582443237305
    3. ' )' → logprob: -5.6089582443237305
    4. '#' → logprob: -5.6089582443237305
    5. '<|end|>' → logprob: -5.7339582443237305
    6. '\' → logprob: -6.2339582443237305
    7. '[' → logprob: -7.3589582443237305
    8. 'for' → logprob: -7.3589582443237305
    9. ':' → logprob: -7.4839582443237305
    10. '(' → logprob: -7.4839582443237305

Token 43: ' R' (ID: 460)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7041640877723694
    2. 'for' → logprob: -1.2041640281677246
    3. ' ' → logprob: -1.7041640281677246
    4. ' n' → logprob: -5.954164028167725
    5. 'elements' → logprob: -6.204164028167725
    6. ' elements' → logprob: -6.329164028167725
    7. 'n' → logprob: -6.454164028167725
    8. ''' → logprob: -6.454164028167725
    9. ' items' → logprob: -6.579164028167725
    10. ' f' → logprob: -6.829164028167725

Token 44: 'éc' (ID: 5675)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.193655014038086
    2. 'ep' → logprob: -1.193655014038086
    3. 'e' → logprob: -1.443655014038086
    4. 'ép' → logprob: -3.318655014038086
    5. 'for' → logprob: -3.568655014038086
    6. 'a' → logprob: -4.068655014038086
    7. 'ange' → logprob: -4.568655014038086
    8. ' #' → logprob: -4.943655014038086
    9. ''' → logprob: -5.193655014038086
    10. 'eturn' → logprob: -5.193655014038086

Token 45: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.007147010415792465
    2. 'u' → logprob: -5.257146835327148
    3. 'upr' → logprob: -7.132146835327148
    4. 'uper' → logprob: -7.257146835327148
    5. 'upart' → logprob: -9.257146835327148
    6. '#' → logprob: -9.257146835327148
    7. 'upi' → logprob: -9.632146835327148
    8. 'ursive' → logprob: -10.382146835327148
    9. 'upe' → logprob: -11.632146835327148
    10. '

' → logprob: -11.882146835327148

Token 46: 'ère' (ID: 4346)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07068856805562973
    2. '('' → logprob: -3.695688486099243
    3. '_' → logprob: -4.195688724517822
    4. '(' → logprob: -4.445688724517822
    5. 'er' → logprob: -6.320688724517822
    6. 'ort' → logprob: -6.445688724517822
    7. 'u' → logprob: -7.070688724517822
    8. '("' → logprob: -7.195688724517822
    9. ' ()' → logprob: -7.320688724517822
    10. '("")' → logprob: -7.445688724517822

Token 47: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0580935962498188
    2. '()' → logprob: -2.933093547821045
    3. '('' → logprob: -7.183093547821045
    4. ' (' → logprob: -7.183093547821045
    5. '("' → logprob: -7.933093547821045
    6. '(n' → logprob: -8.058094024658203
    7. ')' → logprob: -8.433094024658203
    8. ' ' → logprob: -8.683094024658203
    9. '(
' → logprob: -9.433094024658203
    10. '_' → logprob: -9.433094024658203

Token 48: ' éléments' (ID: 57375)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0703054666519165
    2. 'n' → logprob: -1.5703054666519165
    3. 'élé' → logprob: -1.5703054666519165
    4. ' nombres' → logprob: -2.320305347442627
    5. ' ' → logprob: -2.820305347442627
    6. ' éléments' → logprob: -3.820305347442627
    7. ' données' → logprob: -4.320305347442627
    8. ' valeurs' → logprob: -4.945305347442627
    9. '_' → logprob: -5.195305347442627
    10. 'val' → logprob: -5.570305347442627

Token 49: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3646686375141144
    2. 's' → logprob: -2.489668607711792
    3. '[' → logprob: -2.989668607711792
    4. '_' → logprob: -3.239668607711792
    5. ' =' → logprob: -3.739668607711792
    6. '[]' → logprob: -3.864668607711792
    7. '_list' → logprob: -4.114668846130371
    8. '(' → logprob: -4.239668846130371
    9. 'n' → logprob: -4.489668846130371
    10. ',' → logprob: -5.489668846130371

Token 50: ''entrée' (ID: 115820)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.5331841111183167
    2. 'e' → logprob: -1.5331840515136719
    3. ''' → logprob: -2.658184051513672
    4. ' ' → logprob: -3.408184051513672
    5. 'es' → logprob: -3.408184051513672
    6. ''un' → logprob: -3.533184051513672
    7. ' e' → logprob: -5.033184051513672
    8. ''entrée' → logprob: -5.283184051513672
    9. ' '' → logprob: -5.908184051513672
    10. ' une' → logprob: -6.033184051513672

Token 51: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7920541167259216
    2. 's' → logprob: -1.1670541763305664
    3. 'n' → logprob: -3.2920541763305664
    4. '(' → logprob: -3.4170541763305664
    5. ' =' → logprob: -3.4170541763305664
    6. ',' → logprob: -3.5420541763305664
    7. '().' → logprob: -3.6670541763305664
    8. '[' → logprob: -4.542054176330566
    9. ' ' → logprob: -4.792054176330566
    10. 'input' → logprob: -5.042054176330566

Token 52: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09488676488399506
    2. ' l' → logprob: -2.4698867797851562
    3. 'a' → logprob: -6.344886779785156
    4. 'l' → logprob: -6.719886779785156
    5. ' ' → logprob: -7.219886779785156
    6. 'la' → logprob: -7.594886779785156
    7. 's' → logprob: -8.219886779785156
    8. ' une' → logprob: -8.594886779785156
    9. ' ' → logprob: -8.719886779785156
    10. 'une' → logprob: -8.844886779785156

Token 53: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029221776872873306
    2. ''utilisateur' → logprob: -3.654221773147583
    3. 'e' → logprob: -6.654222011566162
    4. ''' → logprob: -7.779222011566162
    5. ' a' → logprob: -8.154221534729004
    6. ''entrée' → logprob: -8.404221534729004
    7. 'es' → logprob: -8.654221534729004
    8. ''a' → logprob: -9.029221534729004
    9. ' input' → logprob: -9.279221534729004
    10. 'input' → logprob: -9.279221534729004

Token 54: ' sous' (ID: 14487)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.344455361366272
    2. 'for' → logprob: -1.469455361366272
    3. '()' → logprob: -1.594455361366272
    4. '(' → logprob: -2.0944552421569824
    5. 's' → logprob: -2.5944552421569824
    6. ',' → logprob: -3.0944552421569824
    7. ')' → logprob: -4.469455242156982
    8. 'n' → logprob: -4.469455242156982
    9. ' =' → logprob: -5.344455242156982
    10. '(
' → logprob: -5.469455242156982

Token 55: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.016456367447972298
    2. 'forme' → logprob: -4.391456604003906
    3. ' la' → logprob: -6.641456604003906
    4. 'la' → logprob: -6.891456604003906
    5. ' form' → logprob: -7.391456604003906
    6. 'form' → logprob: -7.766456604003906
    7. ' une' → logprob: -8.266456604003906
    8. 'une' → logprob: -9.016456604003906
    9. ' ' → logprob: -9.516456604003906
    10. '#' → logprob: -10.391456604003906

Token 56: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03909718245267868
    2. 'd' → logprob: -3.7890970706939697
    3. ' de' → logprob: -4.414097309112549
    4. '()' → logprob: -7.039097309112549
    5. 's' → logprob: -7.164097309112549
    6. 'de' → logprob: -7.539097309112549
    7. '[]' → logprob: -7.664097309112549
    8. ' des' → logprob: -8.91409683227539
    9. '[' → logprob: -9.03909683227539
    10. '(' → logprob: -9.28909683227539

Token 57: ' chaîne' (ID: 89288)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.15962952375411987
    2. ' list' → logprob: -3.4096295833587646
    3. ' input' → logprob: -3.7846295833587646
    4. 'liste' → logprob: -3.7846295833587646
    5. ''' → logprob: -4.0346293449401855
    6. ' ' → logprob: -4.1596293449401855
    7. ' la' → logprob: -4.4096293449401855
    8. ' une' → logprob: -5.1596293449401855
    9. ' listes' → logprob: -6.4096293449401855
    10. ' l' → logprob: -6.5346293449401855

Token 58: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5340846180915833
    2. ' de' → logprob: -1.1590845584869385
    3. 'es' → logprob: -3.6590845584869385
    4. 'de' → logprob: -4.034084796905518
    5. ' s' → logprob: -4.534084796905518
    6. ' ' → logprob: -4.659084796905518
    7. 'e' → logprob: -4.659084796905518
    8. ' d' → logprob: -4.909084796905518
    9. ' )' → logprob: -5.284084796905518
    10. ' .' → logprob: -6.034084796905518

Token 59: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.5736075639724731
    2. 'car' → logprob: -0.9486075639724731
    3. 'chaine' → logprob: -3.6986074447631836
    4. 'texte' → logprob: -4.073607444763184
    5. 'cha' → logprob: -6.323607444763184
    6. ' chaîne' → logprob: -6.823607444763184
    7. ' chaînes' → logprob: -7.198607444763184
    8. ' caracteres' → logprob: -7.573607444763184
    9. ' texte' → logprob: -8.073607444763184
    10. 'chain' → logprob: -8.198607444763184

Token 60: ',
' (ID: 412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15117599070072174
    2. '.' → logprob: -3.4011759757995605
    3. '()' → logprob: -3.7761759757995605
    4. '.split' → logprob: -3.7761759757995605
    5. '().' → logprob: -4.2761759757995605
    6. ')' → logprob: -4.6511759757995605
    7. ' .' → logprob: -4.6511759757995605
    8. ' )' → logprob: -5.2761759757995605
    9. 'input' → logprob: -5.6511759757995605
    10. ',' → logprob: -5.7761759757995605

Token 61: '#' (ID: 2)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8802669048309326
    2. 's' → logprob: -1.1302669048309326
    3. ' ' → logprob: -2.8802669048309326
    4. ' s' → logprob: -3.1302669048309326
    5. 'input' → logprob: -3.2552669048309326
    6. ' )' → logprob: -3.7552669048309326
    7. ')' → logprob: -4.255267143249512
    8. ' elements' → logprob: -4.630267143249512
    9. ' ,' → logprob: -5.130267143249512
    10. ' a' → logprob: -5.380267143249512

Token 62: ' les' (ID: 1341)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.4303574562072754
    2. 'elements' → logprob: -2.4303574562072754
    3. ' lst' → logprob: -3.0553574562072754
    4. 's' → logprob: -3.5553574562072754
    5. ' split' → logprob: -3.6803574562072754
    6. ' items' → logprob: -3.8053574562072754
    7. ' input' → logprob: -4.180357456207275
    8. ' puis' → logprob: -4.305357456207275
    9. 'split' → logprob: -4.305357456207275
    10. ' s' → logprob: -4.555357456207275

Token 63: ' div' (ID: 4223)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.8045331239700317
    2. 'split' → logprob: -1.1795331239700317
    3. ' elements' → logprob: -1.8045331239700317
    4. 'élé' → logprob: -3.554533004760742
    5. ' split' → logprob: -3.929533004760742
    6. ' éléments' → logprob: -5.179533004760742
    7. 'spl' → logprob: -5.179533004760742
    8. 's' → logprob: -5.554533004760742
    9. 'liste' → logprob: -5.804533004760742
    10. 'list' → logprob: -6.054533004760742

Token 64: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.8351277709007263
    2. 'ise' → logprob: -0.9601277709007263
    3. 'ser' → logprob: -2.585127830505371
    4. 's' → logprob: -3.085127830505371
    5. 'de' → logprob: -4.210127830505371
    6. 'd' → logprob: -4.210127830505371
    7. 'sert' → logprob: -5.585127830505371
    8. 'sent' → logprob: -5.960127830505371
    9. 'dent' → logprob: -6.210127830505371
    10. 'erse' → logprob: -6.397627830505371

Token 65: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1576507091522217
    2. ' ' → logprob: -1.5326507091522217
    3. '()' → logprob: -1.9076507091522217
    4. '('' → logprob: -2.1576507091522217
    5. ' )' → logprob: -2.9076507091522217
    6. ')' → logprob: -3.1576507091522217
    7. 's' → logprob: -3.5326507091522217
    8. ' par' → logprob: -3.9076507091522217
    9. '<|end|>' → logprob: -4.907650947570801
    10. ' (' → logprob: -5.032650947570801

Token 66: ' sous' (ID: 14487)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23642024397850037
    2. ' liste' → logprob: -1.9864202737808228
    3. ' espaces' → logprob: -3.361420154571533
    4. 'une' → logprob: -4.236420154571533
    5. ' listes' → logprob: -4.986420154571533
    6. ' chaînes' → logprob: -5.611420154571533
    7. 'liste' → logprob: -6.111420154571533
    8. ' espace' → logprob: -6.361420154571533
    9. ' éléments' → logprob: -6.736420154571533
    10. 's' → logprob: -6.986420154571533

Token 67: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.05213628709316254
    2. 'cha' → logprob: -3.552136182785034
    3. 'chain' → logprob: -4.302136421203613
    4. '-cha' → logprob: -6.177136421203613
    5. ' chain' → logprob: -6.802136421203613
    6. 'chaine' → logprob: -6.927136421203613
    7. '-chain' → logprob: -7.427136421203613
    8. '-' → logprob: -7.677136421203613
    9. ' chaîne' → logprob: -7.802136421203613
    10. 's' → logprob: -7.927136421203613

Token 68: 'înes' (ID: 171517)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38152411580085754
    2. 'nes' → logprob: -1.5065240859985352
    3. 'înes' → logprob: -2.631524085998535
    4. 'aines' → logprob: -4.756524085998535
    5. 'ines' → logprob: -5.631524085998535
    6. 'ttes' → logprob: -6.631524085998535
    7. 'strings' → logprob: -6.631524085998535
    8. 'rc' → logprob: -7.131524085998535
    9. 'ne' → logprob: -7.256524085998535
    10. 'a' → logprob: -7.381524085998535

Token 69: ' et' (ID: 859)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.4924888610839844
    2. 's' → logprob: -1.8674888610839844
    3. '()' → logprob: -2.3674888610839844
    4. ' à' → logprob: -2.9924888610839844
    5. ' .' → logprob: -3.1174888610839844
    6. ',' → logprob: -3.1174888610839844
    7. '('' → logprob: -3.1174888610839844
    8. ' ' → logprob: -3.2424888610839844
    9. '[' → logprob: -3.2424888610839844
    10. '.' → logprob: -3.7424888610839844

Token 70: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0694199725985527
    2. ' stock' → logprob: -3.5694198608398438
    3. 'les' → logprob: -4.569419860839844
    4. ' crée' → logprob: -4.819419860839844
    5. ' transforme' → logprob: -5.319419860839844
    6. ' convert' → logprob: -5.319419860839844
    7. 's' → logprob: -5.444419860839844
    8. 'convert' → logprob: -6.069419860839844
    9. 'stock' → logprob: -6.694419860839844
    10. '#' → logprob: -7.819419860839844

Token 71: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.6754709482192993
    2. ' transforme' → logprob: -1.3004709482192993
    3. 'convert' → logprob: -1.6754709482192993
    4. ' stock' → logprob: -3.9254708290100098
    5. 'transform' → logprob: -6.30047082901001
    6. ' split' → logprob: -6.30047082901001
    7. 'stock' → logprob: -6.30047082901001
    8. 'split' → logprob: -6.42547082901001
    9. 'map' → logprob: -6.67547082901001
    10. ' map' → logprob: -7.17547082901001

Token 72: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3883175551891327
    2. 'i' → logprob: -1.888317584991455
    3. 'is' → logprob: -1.888317584991455
    4. 'ir' → logprob: -5.013317584991455
    5. ' it' → logprob: -6.263317584991455
    6. 'ies' → logprob: -6.388317584991455
    7. 't' → logprob: -6.763317584991455
    8. 'ie' → logprob: -6.888317584991455
    9. 'et' → logprob: -7.013317584991455
    10. ' en' → logprob: -7.263317584991455

Token 73: ' chacune' (ID: 127465)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.04672573134303093
    2. 'en' → logprob: -3.1717257499694824
    3. '(' → logprob: -6.296725749969482
    4. 'list' → logprob: -7.671725749969482
    5. '()' → logprob: -8.046725273132324
    6. 'ens' → logprob: -8.421725273132324
    7. ' ' → logprob: -8.921725273132324
    8. ' list' → logprob: -9.046725273132324
    9. 's' → logprob: -9.546725273132324
    10. '[' → logprob: -9.546725273132324

Token 74: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.043933406472206116
    2. 'en' → logprob: -3.168933391571045
    3. ' into' → logprob: -8.293933868408203
    4. ')' → logprob: -8.293933868408203
    5. '=' → logprob: -9.293933868408203
    6. '_en' → logprob: -9.543933868408203
    7. ' =' → logprob: -9.918933868408203
    8. ' in' → logprob: -10.043933868408203
    9. ' ' → logprob: -10.668933868408203
    10. 'ens' → logprob: -10.793933868408203

Token 75: ' entier' (ID: 80473)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04609834775328636
    2. ' integers' → logprob: -4.296098232269287
    3. 'ent' → logprob: -4.546098232269287
    4. 'des' → logprob: -5.171098232269287
    5. ' int' → logprob: -5.671098232269287
    6. ' un' → logprob: -5.796098232269287
    7. 'int' → logprob: -5.796098232269287
    8. ' ent' → logprob: -6.421098232269287
    9. 's' → logprob: -7.046098232269287
    10. ' une' → logprob: -7.171098232269287

Token 76: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5432015657424927
    2. 'elements' → logprob: -1.4182015657424927
    3. 'numbers' → logprob: -2.668201446533203
    4. 'values' → logprob: -3.668201446533203
    5. ' elements' → logprob: -4.168201446533203
    6. 'n' → logprob: -4.293201446533203
    7. ' numbers' → logprob: -5.293201446533203
    8. ')' → logprob: -5.418201446533203
    9. ',' → logprob: -5.418201446533203
    10. 'a' → logprob: -5.543201446533203

Token 77: '#' (ID: 2)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.7270784974098206
    2. ' elements' → logprob: -1.3520784378051758
    3. 's' → logprob: -3.102078437805176
    4. 'numbers' → logprob: -3.352078437805176
    5. 'values' → logprob: -3.727078437805176
    6. ' data' → logprob: -3.852078437805176
    7. 'x' → logprob: -3.977078437805176
    8. ' numbers' → logprob: -3.977078437805176
    9. 'data' → logprob: -4.102078437805176
    10. ' x' → logprob: -4.227078437805176

Token 78: ' L' (ID: 451)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.879154622554779
    2. ' elements' → logprob: -1.1291546821594238
    3. 'numbers' → logprob: -3.004154682159424
    4. ' numbers' → logprob: -3.129154682159424
    5. 'data' → logprob: -3.504154682159424
    6. 'lst' → logprob: -3.504154682159424
    7. ' data' → logprob: -3.629154682159424
    8. ' lst' → logprob: -4.129154682159424
    9. 'values' → logprob: -4.254154682159424
    10. 'arr' → logprob: -4.379154682159424

Token 79: ''ensemble' (ID: 79341)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.7694293260574341
    2. 'iste' → logprob: -1.769429326057434
    3. 'es' → logprob: -2.8944292068481445
    4. 's' → logprob: -2.8944292068481445
    5. 'ist' → logprob: -3.0194292068481445
    6. 'n' → logprob: -3.1444292068481445
    7. 'e' → logprob: -3.2694292068481445
    8. ' =' → logprob: -3.5194292068481445
    9. '_elements' → logprob: -3.6444292068481445
    10. ' elements' → logprob: -3.6444292068481445

Token 80: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.552248477935791
    2. ' des' → logprob: -1.427248477935791
    3. 's' → logprob: -2.552248477935791
    4. 'des' → logprob: -3.802248477935791
    5. '=' → logprob: -3.927248477935791
    6. ' de' → logprob: -4.177248477935791
    7. '_' → logprob: -4.177248477935791
    8. '_elements' → logprob: -5.302248477935791
    9. ' ' → logprob: -5.677248477935791
    10. ' d' → logprob: -5.802248477935791

Token 81: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2268107533454895
    2. 's' → logprob: -2.6018106937408447
    3. ' stored' → logprob: -3.9768106937408447
    4. ' list' → logprob: -4.226810932159424
    5. ' ' → logprob: -4.476810932159424
    6. '[' → logprob: -4.601810932159424
    7. ' placé' → logprob: -4.601810932159424
    8. 'list' → logprob: -4.726810932159424
    9. 'stock' → logprob: -4.976810932159424
    10. ' convert' → logprob: -5.101810932159424

Token 82: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0006153396097943187
    2. 'ée' → logprob: -8.375615119934082
    3. '=' → logprob: -9.500615119934082
    4. 'e' → logprob: -9.750615119934082
    5. '_' → logprob: -9.875615119934082
    6. ' =' → logprob: -10.000615119934082
    7. 'u' → logprob: -10.125615119934082
    8. 'er' → logprob: -10.125615119934082
    9. 'és' → logprob: -10.375615119934082
    10. 'ées' → logprob: -11.000615119934082

Token 83: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.16084222495555878
    2. '_' → logprob: -2.410842180252075
    3. 's' → logprob: -3.285842180252075
    4. 'dans' → logprob: -4.785842418670654
    5. '_list' → logprob: -5.660842418670654
    6. ' sous' → logprob: -6.160842418670654
    7. ' _' → logprob: -6.410842418670654
    8. ' ' → logprob: -6.785842418670654
    9. ' en' → logprob: -7.160842418670654
    10. ' =' → logprob: -7.535842418670654

Token 84: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.579459547996521
    2. ' la' → logprob: -1.079459547996521
    3. ' a' → logprob: -2.9544596672058105
    4. 'une' → logprob: -4.0794596672058105
    5. ' ' → logprob: -4.4544596672058105
    6. ' un' → logprob: -5.2044596672058105
    7. 'a' → logprob: -5.8294596672058105
    8. ' list' → logprob: -6.2044596672058105
    9. ' liste' → logprob: -6.3294596672058105
    10. '[' → logprob: -6.7044596672058105

Token 85: ' liste' (ID: 31719)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3360675275325775
    2. 's' → logprob: -2.0860674381256104
    3. ' liste' → logprob: -2.4610674381256104
    4. ' list' → logprob: -3.8360674381256104
    5. ' ' → logprob: -4.0860676765441895
    6. 'liste' → logprob: -4.8360676765441895
    7. ' tableau' → logprob: -5.5860676765441895
    8. 'a' → logprob: -5.7110676765441895
    9. ' lst' → logprob: -5.8360676765441895
    10. 'l' → logprob: -5.9610676765441895

Token 86: ' '' (ID: 461)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.9498786330223083
    2. ' ' → logprob: -2.074878692626953
    3. ' lst' → logprob: -2.574878692626953
    4. 'elements' → logprob: -2.824878692626953
    5. ' l' → logprob: -2.949878692626953
    6. ' data' → logprob: -3.074878692626953
    7. ' a' → logprob: -3.449878692626953
    8. ' items' → logprob: -3.699878692626953
    9. 'a' → logprob: -3.699878692626953
    10. 's' → logprob: -3.699878692626953

Token 87: 'h' (ID: 71)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.061901569366455
    2. 'lst' → logprob: -1.436901569366455
    3. 'numbers' → logprob: -1.811901569366455
    4. 'l' → logprob: -2.311901569366455
    5. 'a' → logprob: -2.936901569366455
    6. 'arr' → logprob: -3.311901569366455
    7. 'data' → logprob: -3.561901569366455
    8. 'liste' → logprob: -4.811901569366455
    9. 'n' → logprob: -4.936901569366455
    10. 'L' → logprob: -5.186901569366455

Token 88: ''.
' (ID: 49980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8494868874549866
    2. 'a' → logprob: -1.8494868278503418
    3. ']' → logprob: -2.099486827850342
    4. 's' → logprob: -2.349486827850342
    5. '')' → logprob: -2.974486827850342
    6. 't' → logprob: -2.974486827850342
    7. '_' → logprob: -3.349486827850342
    8. ' ')' → logprob: -4.724486827850342
    9. '']' → logprob: -4.974486827850342
    10. ' =' → logprob: -4.974486827850342

Token 89: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0013329789508134127
    2. ' h' → logprob: -6.626332759857178
    3. 's' → logprob: -12.126333236694336
    4. ' 
' → logprob: -14.376333236694336
    5. ' ' → logprob: -15.376333236694336
    6. ''h' → logprob: -15.751333236694336
    7. ' `' → logprob: -16.126333236694336
    8. '[h' → logprob: -16.251333236694336
    9. 'a' → logprob: -16.501333236694336
    10. 'n' → logprob: -16.501333236694336

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07017827779054642
    2. '=' → logprob: -2.695178270339966
    3. '[' → logprob: -9.570178031921387
    4. '.' → logprob: -9.695178031921387
    5. ',' → logprob: -9.945178031921387
    6. 's' → logprob: -11.320178031921387
    7. ' =[' → logprob: -11.445178031921387
    8. '=[]' → logprob: -11.570178031921387
    9. '_' → logprob: -11.695178031921387
    10. '[:]' → logprob: -12.070178031921387

Token 91: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3880237340927124
    2. ' list' → logprob: -1.1380237340927124
    3. '[list' → logprob: -7.138023853302002
    4. ' [' → logprob: -8.513023376464844
    5. '[' → logprob: -8.888023376464844
    6. '[int' → logprob: -11.763023376464844
    7. '[input' → logprob: -12.513023376464844
    8. '[l' → logprob: -13.763023376464844
    9. 'li' → logprob: -14.013023376464844
    10. 'map' → logprob: -14.013023376464844

Token 92: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16032496094703674
    2. '(map' → logprob: -1.9103249311447144
    3. '(int' → logprob: -9.535325050354004
    4. '(
' → logprob: -11.035325050354004
    5. '(

' → logprob: -12.160325050354004
    6. '(input' → logprob: -12.910325050354004
    7. '(m' → logprob: -13.285325050354004
    8. 'map' → logprob: -14.160325050354004
    9. '(ma' → logprob: -14.160325050354004
    10. '(s' → logprob: -14.910325050354004

Token 93: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133890926837921
    2. '(int' → logprob: -1.3133890628814697
    3. '(
' → logprob: -9.06338882446289
    4. '(lambda' → logprob: -12.56338882446289
    5. '<int' → logprob: -13.06338882446289
    6. '(str' → logprob: -13.31338882446289
    7. '[int' → logprob: -14.06338882446289
    8. '(in' → logprob: -14.18838882446289
    9. ' (' → logprob: -14.43838882446289
    10. '(input' → logprob: -14.56338882446289

Token 94: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4745360016822815
    2. '(' → logprob: -0.9745360016822815
    3. ',input' → logprob: -8.099535942077637
    4. ' (' → logprob: -9.849535942077637
    5. '(
' → logprob: -9.849535942077637
    6. ',' → logprob: -10.849535942077637
    7. ')' → logprob: -11.349535942077637
    8. 'input' → logprob: -11.724535942077637
    9. '(

' → logprob: -12.474535942077637
    10. ' input' → logprob: -13.474535942077637

Token 95: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07041307538747787
    2. ' input' → logprob: -2.695413112640381
    3. '(input' → logprob: -7.695413112640381
    4. ',input' → logprob: -10.945412635803223
    5. '	input' → logprob: -13.695412635803223
    6. ')' → logprob: -13.945412635803223
    7. '=input' → logprob: -14.320412635803223
    8. '_input' → logprob: -14.945412635803223
    9. ' ' → logprob: -15.195412635803223
    10. '[input' → logprob: -15.570412635803223

Token 96: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0041174618527293205
    2. '()' → logprob: -5.504117488861084
    3. '(' → logprob: -10.629117012023926
    4. '())' → logprob: -12.254117012023926
    5. '()))' → logprob: -12.254117012023926
    6. ' ().' → logprob: -13.129117012023926
    7. '()
' → logprob: -14.379117012023926
    8. ')' → logprob: -14.754117012023926
    9. '('').' → logprob: -14.879117012023926
    10. '()).' → logprob: -15.254117012023926

Token 97: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006724129430949688
    2. 'strip' → logprob: -5.0067243576049805
    3. 'rstrip' → logprob: -11.75672435760498
    4. ' split' → logprob: -14.38172435760498
    5. '(split' → logprob: -15.88172435760498
    6. ')' → logprob: -16.131723403930664
    7. 'spl' → logprob: -16.381723403930664
    8. '.split' → logprob: -18.131723403930664
    9. ' strip' → logprob: -18.506723403930664
    10. 'plit' → logprob: -18.756723403930664

Token 98: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3584209382534027
    2. '()))' → logprob: -1.608420968055725
    3. '()' → logprob: -2.3584208488464355
    4. '(' → logprob: -5.3584208488464355
    5. '())))' → logprob: -7.1084208488464355
    6. ')' → logprob: -7.4834208488464355
    7. '))' → logprob: -8.858421325683594
    8. '('' → logprob: -9.108421325683594
    9. '()));' → logprob: -10.858421325683594
    10. ' ())' → logprob: -10.983421325683594

Token 99: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3632644414901733
    2. '#' → logprob: -1.7382644414901733
    3. '.' → logprob: -1.8632644414901733
    4. '<|end|>' → logprob: -1.8632644414901733
    5. '
' → logprob: -2.488264560699463
    6. ' ' → logprob: -2.488264560699463
    7. ')' → logprob: -3.363264560699463
    8. ' 
' → logprob: -3.988264560699463
    9. 's' → logprob: -5.113264560699463
    10. '  
' → logprob: -5.738264560699463

Token 100: ' Initialise' (ID: 179601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7664161324501038
    2. 's' → logprob: -1.266416072845459
    3. 'for' → logprob: -2.141416072845459
    4. 'f' → logprob: -3.141416072845459
    5. 'max' → logprob: -3.641416072845459
    6. 'r' → logprob: -4.391416072845459
    7. 'i' → logprob: -4.516416072845459
    8. 'm' → logprob: -4.641416072845459
    9. 'sum' → logprob: -4.641416072845459
    10. 'c' → logprob: -5.641416072845459

Token 101: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.204526424407959
    2. ' une' → logprob: -1.579526424407959
    3. ' l' → logprob: -2.329526424407959
    4. 's' → logprob: -2.579526424407959
    5. ' a' → logprob: -2.829526424407959
    6. ' un' → logprob: -2.954526424407959
    7. ' max' → logprob: -3.454526424407959
    8. ' la' → logprob: -3.454526424407959
    9. ' le' → logprob: -3.454526424407959
    10. '_' → logprob: -3.579526424407959

Token 102: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3886525332927704
    2. ' variable' → logprob: -1.6386525630950928
    3. 'variable' → logprob: -3.1386525630950928
    4. '_' → logprob: -4.138652324676514
    5. 's' → logprob: -4.513652324676514
    6. ' liste' → logprob: -4.638652324676514
    7. 'liste' → logprob: -4.763652324676514
    8. ' somme' → logprob: -4.888652324676514
    9. 'space' → logprob: -5.638652324676514
    10. ' =' → logprob: -6.013652324676514

Token 103: ' bool' (ID: 3792)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1595476120710373
    2. ' ' → logprob: -3.0345475673675537
    3. ' result' → logprob: -3.0345475673675537
    4. 'max' → logprob: -4.534547805786133
    5. 's' → logprob: -4.909547805786133
    6. ' s' → logprob: -5.034547805786133
    7. ' total' → logprob: -5.409547805786133
    8. ' h' → logprob: -5.659547805786133
    9. ' sum' → logprob: -5.784547805786133
    10. ' min' → logprob: -6.159547805786133

Token 104: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0007036144379526377
    2. 'ean' → logprob: -8.125703811645508
    3. 'éan' → logprob: -8.250703811645508
    4. 'ée' → logprob: -9.500703811645508
    5. '#' → logprob: -10.750703811645508
    6. 'É' → logprob: -11.500703811645508
    7. 'ienne' → logprob: -12.000703811645508
    8. 'éal' → logprob: -12.125703811645508
    9. '_' → logprob: -12.375703811645508
    10. 'e' → logprob: -13.250703811645508

Token 105: 'enne' (ID: 17721)
  Prédit: 'enne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enne' → logprob: -0.0005377820343710482
    2. 'en' → logprob: -8.250537872314453
    3. 'e' → logprob: -9.250537872314453
    4. 'ene' → logprob: -10.375537872314453
    5. 'nne' → logprob: -10.500537872314453
    6. 'an' → logprob: -10.625537872314453
    7. 'ennes' → logprob: -11.375537872314453
    8. 'ène' → logprob: -11.375537872314453
    9. 'enna' → logprob: -11.375537872314453
    10. 'a' → logprob: -11.375537872314453

Token 106: ' nom' (ID: 8080)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -2.096059799194336
    2. ' ' → logprob: -2.346059799194336
    3. ' flag' → logprob: -2.346059799194336
    4. ' found' → logprob: -2.471059799194336
    5. 'valid' → logprob: -2.596059799194336
    6. ' est' → logprob: -2.846059799194336
    7. ' valid' → logprob: -2.846059799194336
    8. ' `' → logprob: -2.971059799194336
    9. 'is' → logprob: -3.471059799194336
    10. ' is' → logprob: -3.471059799194336

Token 107: 'm' (ID: 76)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6938251852989197
    2. 'ée' → logprob: -0.6938251852989197
    3. 'e' → logprob: -8.068824768066406
    4. 'm' → logprob: -8.818824768066406
    5. '=' → logprob: -8.818824768066406
    6. 'mé' → logprob: -10.818824768066406
    7. 'és' → logprob: -11.693824768066406
    8. 'née' → logprob: -11.818824768066406
    9. 'É' → logprob: -12.193824768066406
    10. '=False' → logprob: -12.943824768066406

Token 108: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.16052855551242828
    2. 'é' → logprob: -1.910528540611267
    3. 'e' → logprob: -8.160528182983398
    4. 'ee' → logprob: -11.160528182983398
    5. 'è' → logprob: -13.160528182983398
    6. '=' → logprob: -13.910528182983398
    7. '#' → logprob: -15.035528182983398
    8. 'É' → logprob: -15.535528182983398
    9. 'ė' → logprob: -15.535528182983398
    10. 'ê' → logprob: -15.910528182983398

Token 109: ' '' (ID: 461)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.537927508354187
    2. 'valid' → logprob: -2.0379276275634766
    3. 'is' → logprob: -3.2879276275634766
    4. 'tr' → logprob: -3.4129276275634766
    5. 'possible' → logprob: -3.4129276275634766
    6. 'flag' → logprob: -3.5379276275634766
    7. 'ok' → logprob: -3.7879276275634766
    8. 'max' → logprob: -3.7879276275634766
    9. 'sorted' → logprob: -4.162927627563477
    10. ' found' → logprob: -4.787927627563477

Token 110: 'judge' (ID: 163735)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1402111053466797
    2. 'is' → logprob: -1.7652111053466797
    3. 'ok' → logprob: -2.3902111053466797
    4. 'valid' → logprob: -2.5152111053466797
    5. 'flag' → logprob: -3.2652111053466797
    6. 'tr' → logprob: -3.3902111053466797
    7. 'res' → logprob: -3.7652111053466797
    8. 'found' → logprob: -3.7652111053466797
    9. 'sorted' → logprob: -4.01521110534668
    10. 'can' → logprob: -4.14021110534668

Token 111: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6783511638641357
    2. 'd' → logprob: -1.5533511638641357
    3. ' =' → logprob: -2.5533511638641357
    4. ')' → logprob: -3.0533511638641357
    5. 'e' → logprob: -3.0533511638641357
    6. '=' → logprob: -3.5533511638641357
    7. ''' → logprob: -4.053351402282715
    8. 'ed' → logprob: -4.553351402282715
    9. ' ' → logprob: -4.678351402282715
    10. 'r' → logprob: -5.178351402282715

Token 112: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31996139883995056
    2. '=' → logprob: -1.319961428642273
    3. '=True' → logprob: -5.6949615478515625
    4. ' True' → logprob: -6.6949615478515625
    5. ' ' → logprob: -6.9449615478515625
    6. '=False' → logprob: -7.9449615478515625
    7. 'True' → logprob: -8.319961547851562
    8. 's' → logprob: -8.944961547851562
    9. ',' → logprob: -9.444961547851562
    10. 'judge' → logprob: -9.569961547851562

Token 113: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.007284542545676231
    2. 'True' → logprob: -5.007284641265869
    3. ' False' → logprob: -7.507284641265869
    4. 'False' → logprob: -10.882284164428711
    5. ' ' → logprob: -14.632284164428711
    6. '=True' → logprob: -14.757284164428711
    7. '(True' → logprob: -14.882284164428711
    8. ' Tru' → logprob: -17.25728416442871
    9. ' ' → logprob: -18.13228416442871
    10. ' None' → logprob: -19.13228416442871

Token 114: '.
' (ID: 558)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.6796761751174927
    2. ' ' → logprob: -0.8046761751174927
    3. ' judge' → logprob: -4.179676055908203
    4. ')' → logprob: -4.679676055908203
    5. ',' → logprob: -4.804676055908203
    6. '<|end|>' → logprob: -5.429676055908203
    7. ' ' → logprob: -6.679676055908203
    8. ' )' → logprob: -6.679676055908203
    9. 'j' → logprob: -7.179676055908203
    10. '
' → logprob: -7.179676055908203

Token 115: '#' (ID: 2)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.015933360904455185
    2. ' judge' → logprob: -4.640933513641357
    3. 'j' → logprob: -5.515933513641357
    4. 'jud' → logprob: -8.0159330368042
    5. '```' → logprob: -8.0159330368042
    6. ' ' → logprob: -8.2659330368042
    7. ' ' → logprob: -8.7659330368042
    8. ' 
' → logprob: -8.7659330368042
    9. 'jug' → logprob: -9.0159330368042
    10. '_' → logprob: -9.1409330368042

Token 116: ' Cette' (ID: 27383)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.03126949071884155
    2. ' judge' → logprob: -3.5312695503234863
    3. 'j' → logprob: -7.281269550323486
    4. 'jud' → logprob: -8.281269073486328
    5. 'jug' → logprob: -8.406269073486328
    6. ' ' → logprob: -9.406269073486328
    7. ' juge' → logprob: -9.531269073486328
    8. 'jury' → logprob: -10.156269073486328
    9. ' 
' → logprob: -10.406269073486328
    10. '
' → logprob: -10.531269073486328

Token 117: ' variable' (ID: 11076)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.37517985701560974
    2. 'judge' → logprob: -1.7501798868179321
    3. ' juge' → logprob: -3.0001797676086426
    4. ' variable' → logprob: -3.7501797676086426
    5. ' ' → logprob: -4.000179767608643
    6. ' ' → logprob: -5.000179767608643
    7. 'space' → logprob: -5.875179767608643
    8. 'n' → logprob: -6.000179767608643
    9. 's' → logprob: -6.000179767608643
    10. 'variable' → logprob: -6.125179767608643

Token 118: ' serv' (ID: 2096)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.022975578904151917
    2. 'ra' → logprob: -4.022975444793701
    3. 'ir' → logprob: -6.147975444793701
    4. 'a' → logprob: -6.647975444793701
    5. 'irà' → logprob: -7.647975444793701
    6. 'e' → logprob: -8.14797592163086
    7. '#' → logprob: -8.52297592163086
    8. 'r' → logprob: -9.02297592163086
    9. 'irai' → logprob: -9.52297592163086
    10. 'era' → logprob: -9.64797592163086

Token 120: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10941985249519348
    2. '<|end|>' → logprob: -3.234419822692871
    3. ' ' → logprob: -3.359419822692871
    4. 'à' → logprob: -3.984419822692871
    5. ' as' → logprob: -5.609419822692871
    6. ' to' → logprob: -5.984419822692871
    7. 's' → logprob: -7.109419822692871
    8. ' de' → logprob: -7.734419822692871
    9. '```' → logprob: -7.734419822692871
    10. ' au' → logprob: -8.109419822692871

Token 121: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.08959339559078217
    2. 'flag' → logprob: -3.4645934104919434
    3. 'ind' → logprob: -4.339593410491943
    4. ' tém' → logprob: -4.339593410491943
    5. ' flag' → logprob: -4.589593410491943
    6. 'dr' → logprob: -5.464593410491943
    7. 'd' → logprob: -5.839593410491943
    8. ' indic' → logprob: -6.089593410491943
    9. 'sent' → logprob: -6.714593410491943
    10. 'signal' → logprob: -6.839593410491943

Token 122: 'apeau' (ID: 140059)
  Prédit: 'ép'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ép' → logprob: -0.9094818234443665
    2. 'éf' → logprob: -1.0344817638397217
    3. 'é' → logprob: -2.4094817638397217
    4. 'ef' → logprob: -2.5344817638397217
    5. 'f' → logprob: -3.2844817638397217
    6. 'éc' → logprob: -4.534482002258301
    7. 'és' → logprob: -5.034482002258301
    8. 'ôle' → logprob: -6.159482002258301
    9. 'ep' → logprob: -6.159482002258301
    10. 'e' → logprob: -6.284482002258301

Token 123: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036180634051561356
    2. '<|end|>' → logprob: -3.6611807346343994
    3. ' )' → logprob: -6.16118049621582
    4. ' to' → logprob: -6.16118049621582
    5. ',' → logprob: -6.78618049621582
    6. ')' → logprob: -7.03618049621582
    7. ' ,' → logprob: -7.78618049621582
    8. '  ' → logprob: -8.03618049621582
    9. 'n' → logprob: -8.16118049621582
    10. ' for' → logprob: -8.16118049621582

Token 124: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.1508164405822754
    2. ' déterminer' → logprob: -1.5258164405822754
    3. ' vérifier' → logprob: -1.6508164405822754
    4. 'su' → logprob: -2.4008164405822754
    5. ' suivre' → logprob: -2.5258164405822754
    6. ' ind' → logprob: -2.9008164405822754
    7. ' détect' → logprob: -4.400816440582275
    8. 'v' → logprob: -5.150816440582275
    9. ' contrôler' → logprob: -5.400816440582275
    10. '<|end|>' → logprob: -5.650816440582275

Token 125: 'iquer' (ID: 63028)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.17721042037010193
    2. 'iquer' → logprob: -2.0522103309631348
    3. 'iqué' → logprob: -4.177210330963135
    4. 'iquant' → logprob: -4.802210330963135
    5. 'iqu' → logprob: -5.177210330963135
    6. 'icate' → logprob: -6.052210330963135
    7. 'iq' → logprob: -6.927210330963135
    8. 'i' → logprob: -7.302210330963135
    9. 'ice' → logprob: -8.302210807800293
    10. 'icator' → logprob: -9.052210807800293

Token 126: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28775471448898315
    2. ' les' → logprob: -2.787754774093628
    3. ' l' → logprob: -3.037754774093628
    4. ' le' → logprob: -3.287754774093628
    5. ' toutes' → logprob: -3.537754774093628
    6. 'la' → logprob: -4.287754535675049
    7. '<|end|>' → logprob: -4.787754535675049
    8. 'l' → logprob: -5.037754535675049
    9. 'tout' → logprob: -5.037754535675049
    10. ' une' → logprob: -5.162754535675049

Token 128: ' condition' (ID: 7060)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7011580467224121
    2. ' liste' → logprob: -1.826158046722412
    3. 'sequence' → logprob: -2.201158046722412
    4. ' sé' → logprob: -2.201158046722412
    5. 'liste' → logprob: -3.076158046722412
    6. ' condition' → logprob: -3.951158046722412
    7. 'condition' → logprob: -4.201158046722412
    8. 'sé' → logprob: -4.326158046722412
    9. 's' → logprob: -5.638658046722412
    10. 'h' → logprob: -6.513658046722412

Token 129: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01623976044356823
    2. '<|end|>' → logprob: -5.641239643096924
    3. ' True' → logprob: -5.766239643096924
    4. 's' → logprob: -6.016239643096924
    5. ',' → logprob: -6.141239643096924
    6. '  ' → logprob: -7.016239643096924
    7. ' ,' → logprob: -7.516239643096924
    8. ' is' → logprob: -7.641239643096924
    9. '_' → logprob: -7.891239643096924
    10. 'True' → logprob: -8.016240119934082

Token 130: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.3219144940376282
    2. 'pro' → logprob: -2.0719144344329834
    3. ' tri' → logprob: -3.8219144344329834
    4. ' jeu' → logprob: -4.0719146728515625
    5. ' code' → logprob: -4.3219146728515625
    6. ' probleme' → logprob: -4.3219146728515625
    7. '```' → logprob: -4.6969146728515625
    8. 'proble' → logprob: -5.0719146728515625
    9. 'tri' → logprob: -5.3219146728515625
    10. ' sequence' → logprob: -5.3219146728515625

Token 131: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.01900707557797432
    2. 'est' → logprob: -4.894007205963135
    3. ' ' → logprob: -5.019007205963135
    4. ' is' → logprob: -6.269007205963135
    5. 's' → logprob: -6.394007205963135
    6. ' s' → logprob: -8.394006729125977
    7. ' reste' → logprob: -8.769006729125977
    8. ' continue' → logprob: -9.144006729125977
    9. ' respecte' → logprob: -9.144006729125977
    10. ' ' → logprob: -9.269006729125977

Token 132: ' rempl' (ID: 66326)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.841923177242279
    2. ' respect' → logprob: -1.3419232368469238
    3. 'maint' → logprob: -1.5919232368469238
    4. 's' → logprob: -2.716923236846924
    5. '<|end|>' → logprob: -4.091923236846924
    6. 'valid' → logprob: -5.841923236846924
    7. '
' → logprob: -5.841923236846924
    8. ' toujours' → logprob: -6.091923236846924
    9. 'v' → logprob: -6.216923236846924
    10. ' True' → logprob: -6.841923236846924

Token 133: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.02771451137959957
    2. 'i' → logprob: -3.902714490890503
    3. 'f' → logprob: -5.652714729309082
    4. 'e' → logprob: -6.777714729309082
    5. '   ' → logprob: -7.652714729309082
    6. '	' → logprob: -8.277714729309082
    7. 'a' → logprob: -8.840214729309082
    8. '  ' → logprob: -8.840214729309082
    9. ' ' → logprob: -8.902714729309082
    10. 'ief' → logprob: -8.965214729309082

Token 134: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10170506685972214
    2. ',' → logprob: -2.6017050743103027
    3. ')' → logprob: -5.601705074310303
    4. ' ,' → logprob: -5.601705074310303
    5. ' )' → logprob: -5.726705074310303
    6. '.' → logprob: -5.726705074310303
    7. ' ou' → logprob: -6.101705074310303
    8. ' or' → logprob: -6.351705074310303
    9. ' True' → logprob: -6.476705074310303
    10. '  ' → logprob: -7.726705074310303

Token 135: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.15756015479564667
    2. ' judge' → logprob: -2.032560110092163
    3. ' 
' → logprob: -5.282560348510742
    4. '
' → logprob: -5.782560348510742
    5. ' ' → logprob: -6.407560348510742
    6. '  
' → logprob: -7.157560348510742
    7. 'j' → logprob: -7.157560348510742
    8. ' ' → logprob: -7.157560348510742
    9. '```' → logprob: -8.032560348510742
    10. 'jud' → logprob: -8.282560348510742

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023388151079416275
    2. '=' → logprob: -3.773388147354126
    3. ' ' → logprob: -8.898387908935547
    4. ' ' → logprob: -13.398387908935547
    5. ')' → logprob: -13.523387908935547
    6. '=True' → logprob: -13.648387908935547
    7. ' =
' → logprob: -14.523387908935547
    8. '_' → logprob: -14.773387908935547
    9. ',' → logprob: -14.773387908935547
    10. 's' → logprob: -15.648387908935547

Token 137: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.001236656797118485
    2. 'True' → logprob: -6.876236438751221
    3. ' ' → logprob: -8.501236915588379
    4. ' ' → logprob: -14.626236915588379
    5. ' Tru' → logprob: -16.501235961914062
    6. '=True' → logprob: -17.001235961914062
    7. '(True' → logprob: -17.501235961914062
    8. ' False' → logprob: -18.251235961914062
    9. ' true' → logprob: -18.751235961914062
    10. ' T' → logprob: -20.501235961914062

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23572058975696564
    2. ' 
' → logprob: -2.735720634460449
    3. '<|end|>' → logprob: -2.860720634460449
    4. 'for' → logprob: -3.485720634460449
    5. ' for' → logprob: -3.610720634460449
    6. ' ' → logprob: -3.985720634460449
    7. '  
' → logprob: -5.485720634460449
    8. '\n' → logprob: -5.860720634460449
    9. '' → logprob: -6.860720634460449
    10. ',' → logprob: -7.360720634460449

Token 139: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6385868787765503
    2. ' 
' → logprob: -1.2635868787765503
    3. 'for' → logprob: -2.26358699798584
    4. ' for' → logprob: -3.13858699798584
    5. '\n' → logprob: -3.63858699798584
    6. ' ' → logprob: -5.01358699798584
    7. '' → logprob: -5.13858699798584
    8. '  
' → logprob: -6.76358699798584
    9. '\' → logprob: -7.38858699798584
    10. 'n' → logprob: -8.38858699798584

Token 140: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.100059156073257e-05
    2. ' for' → logprob: -9.750070571899414
    3. 'if' → logprob: -11.750070571899414
    4. 'fo' → logprob: -13.625070571899414
    5. 'f' → logprob: -13.750070571899414
    6. 'i' → logprob: -14.375070571899414
    7. '#' → logprob: -14.500070571899414
    8. 'For' → logprob: -15.375070571899414
    9. 'a' → logprob: -16.000070571899414
    10. 'pour' → logprob: -16.000070571899414

Token 141: 'ém' (ID: 4135)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7222632765769958
    2. 'for' → logprob: -0.8472632765769958
    3. ' for' → logprob: -3.4722633361816406
    4. 'f' → logprob: -3.5972633361816406
    5. 'ef' → logprob: -5.222263336181641
    6. 'i' → logprob: -5.222263336181641
    7. '#' → logprob: -5.722263336181641
    8. '=' → logprob: -5.847263336181641
    9. 'o' → logprob: -5.847263336181641
    10. 'n' → logprob: -6.222263336181641

Token 142: 'arre' (ID: 55489)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06660716235637665
    2. '#' → logprob: -3.8166072368621826
    3. 'é' → logprob: -4.1916069984436035
    4. 'i' → logprob: -4.9416069984436035
    5. 'for' → logprob: -5.0666069984436035
    6. 'a' → logprob: -5.6916069984436035
    7. 'and' → logprob: -6.0666069984436035
    8. 'if' → logprob: -6.0666069984436035
    9. 'o' → logprob: -6.8166069984436035
    10. 'ande' → logprob: -6.8166069984436035

Token 143: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4880509376525879
    2. 'for' → logprob: -1.238050937652588
    3. ' a' → logprob: -2.363050937652588
    4. ' la' → logprob: -7.988050937652588
    5. ' an' → logprob: -8.36305046081543
    6. ' the' → logprob: -8.36305046081543
    7. ' ' → logprob: -8.61305046081543
    8. 'a' → logprob: -8.98805046081543
    9. ' une' → logprob: -9.11305046081543
    10. 'range' → logprob: -9.11305046081543

Token 144: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3422185182571411
    2. 'for' → logprob: -1.3422185182571411
    3. ' boucle' → logprob: -3.7172183990478516
    4. ' range' → logprob: -6.467218399047852
    5. 'bou' → logprob: -7.467218399047852
    6. 'range' → logprob: -7.592218399047852
    7. ' bou' → logprob: -7.592218399047852
    8. '_' → logprob: -7.717218399047852
    9. ' ' → logprob: -8.592218399047852
    10. ' loop' → logprob: -8.592218399047852

Token 145: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1280640810728073
    2. ' ' → logprob: -2.3780641555786133
    3. 'for' → logprob: -3.6280641555786133
    4. ' i' → logprob: -7.503064155578613
    5. ' 
' → logprob: -9.128064155578613
    6. ' range' → logprob: -9.503064155578613
    7. 'i' → logprob: -10.378064155578613
    8. ' in' → logprob: -10.628064155578613
    9. 'range' → logprob: -10.753064155578613
    10. '
' → logprob: -11.003064155578613

Token 146: ' s' (ID: 265)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3937571942806244
    2. ' for' → logprob: -1.2687572240829468
    3. 'range' → logprob: -3.7687571048736572
    4. 'for' → logprob: -4.518757343292236
    5. ' i' → logprob: -5.018757343292236
    6. ' ' → logprob: -6.893757343292236
    7. ' in' → logprob: -7.893757343292236
    8. '_range' → logprob: -8.268756866455078
    9. '	range' → logprob: -8.393756866455078
    10. ' xrange' → logprob: -8.518756866455078

Token 147: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5983147025108337
    2. 'for' → logprob: -0.8483147025108337
    3. ' for' → logprob: -4.7233147621154785
    4. 'a' → logprob: -5.5983147621154785
    5. ' range' → logprob: -6.2233147621154785
    6. 'range' → logprob: -6.2233147621154785
    7. ''' → logprob: -6.3483147621154785
    8. ' '' → logprob: -8.09831428527832
    9. ''a' → logprob: -8.34831428527832
    10. '_for' → logprob: -8.47331428527832

Token 148: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.5198334455490112
    2. 'ecute' → logprob: -1.2698334455490112
    3. 'ec' → logprob: -3.019833564758301
    4. 'é' → logprob: -3.394833564758301
    5. 'plore' → logprob: -3.769833564758301
    6. 'erce' → logprob: -5.394833564758301
    7. 'for' → logprob: -5.644833564758301
    8. 'écut' → logprob: -5.769833564758301
    9. 'e' → logprob: -6.144833564758301
    10. 'ère' → logprob: -6.894833564758301

Token 149: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.0486929677426815
    2. 'ure' → logprob: -4.4236931800842285
    3. 'u' → logprob: -4.7986931800842285
    4. 'ecute' → logprob: -5.0486931800842285
    5. 'ur' → logprob: -5.4236931800842285
    6. 'e' → logprob: -5.9236931800842285
    7. 'ite' → logprob: -6.2986931800842285
    8. 'uite' → logprob: -6.2986931800842285
    9. 'ère' → logprob: -6.5486931800842285
    10. 'urte' → logprob: -6.5486931800842285

Token 150: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.105894073843956
    2. ' ' → logprob: -2.855894088745117
    3. 'for' → logprob: -3.730894088745117
    4. ' i' → logprob: -4.480894088745117
    5. ' pour' → logprob: -6.355894088745117
    6. 'n' → logprob: -6.855894088745117
    7. 'i' → logprob: -7.105894088745117
    8. ' ' → logprob: -7.230894088745117
    9. 's' → logprob: -7.730894088745117
    10. ' from' → logprob: -7.855894088745117

Token 151: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -7.421908958349377e-05
    2. ' _' → logprob: -10.00007438659668
    3. 'i' → logprob: -11.25007438659668
    4. ' ' → logprob: -11.87507438659668
    5. ' ' → logprob: -12.25007438659668
    6. '_' → logprob: -13.37507438659668
    7. '	i' → logprob: -14.12507438659668
    8. ' range' → logprob: -14.50007438659668
    9. ' n' → logprob: -15.12507438659668
    10. ' ' → logprob: -15.25007438659668

Token 152: ' indice' (ID: 90848)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013349742628633976
    2. ' ' → logprob: -4.388349533081055
    3. 'i' → logprob: -7.638349533081055
    4. ' _' → logprob: -8.138349533081055
    5. '_' → logprob: -10.638349533081055
    6. '  ' → logprob: -10.763349533081055
    7. ' espace' → logprob: -12.263349533081055
    8. ' index' → logprob: -12.388349533081055
    9. ' ‌' → logprob: -13.263349533081055
    10. '_i' → logprob: -13.388349533081055

Token 153: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.022218715399503708
    2. 'i' → logprob: -4.647218704223633
    3. ' ' → logprob: -4.647218704223633
    4. ' range' → logprob: -6.397218704223633
    5. ' in' → logprob: -7.772218704223633
    6. '_' → logprob: -8.647218704223633
    7. 'range' → logprob: -8.647218704223633
    8. ' _' → logprob: -9.647218704223633
    9. ' ' → logprob: -10.147218704223633
    10. ' de' → logprob: -10.272218704223633

Token 154: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16025154292583466
    2. 'i' → logprob: -1.910251498222351
    3. ' ' → logprob: -11.41025161743164
    4. '	i' → logprob: -11.78525161743164
    5. ' ' → logprob: -12.28525161743164
    6. ' in' → logprob: -14.41025161743164
    7. 'e' → logprob: -14.41025161743164
    8. 'I' → logprob: -14.53525161743164
    9. '1' → logprob: -15.16025161743164
    10. '0' → logprob: -15.47275161743164

Token 155: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009852652437984943
    2. 'in' → logprob: -4.884852886199951
    3. ' ' → logprob: -6.384852886199951
    4. ',' → logprob: -8.384852409362793
    5. 'range' → logprob: -9.509852409362793
    6. ' dans' → logprob: -9.759852409362793
    7. ')' → logprob: -9.759852409362793
    8. ' range' → logprob: -10.259852409362793
    9. ' en' → logprob: -10.634852409362793
    10. ' ,' → logprob: -11.134852409362793

Token 156: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006058432627469301
    2. 'in' → logprob: -5.256058216094971
    3. ' ' → logprob: -7.756058216094971
    4. ' range' → logprob: -8.881058692932129
    5. 'range' → logprob: -9.006058692932129
    6. ',' → logprob: -9.506058692932129
    7. ' i' → logprob: -11.256058692932129
    8. ' dans' → logprob: -11.381058692932129
    9. 'en' → logprob: -12.006058692932129
    10. ' en' → logprob: -12.131058692932129

Token 157: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1430746465921402
    2. ' from' → logprob: -2.1430747509002686
    3. 'from' → logprob: -5.0180745124816895
    4. 'de' → logprob: -5.5180745124816895
    5. ' range' → logprob: -6.0180745124816895
    6. 'range' → logprob: -7.0180745124816895
    7. ' ' → logprob: -7.2680745124816895
    8. ' in' → logprob: -7.7680745124816895
    9. ' à' → logprob: -8.643074989318848
    10. '<|end|>' → logprob: -8.768074989318848

Token 158: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7436380982398987
    2. '0' → logprob: -0.9936380982398987
    3. '1' → logprob: -1.868638038635254
    4. '2' → logprob: -10.243638038635254
    5. ' range' → logprob: -11.493638038635254
    6. 'range' → logprob: -12.118638038635254
    7. ' ' → logprob: -12.618638038635254
    8. 'n' → logprob: -14.118638038635254
    9. '(' → logprob: -14.993638038635254
    10. ' 
' → logprob: -15.306138038635254

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4766431450843811
    2. '1' → logprob: -0.9766431450843811
    3. ' ' → logprob: -5.976643085479736
    4. 'range' → logprob: -11.226643562316895
    5. ' range' → logprob: -11.476643562316895
    6. '2' → logprob: -13.351643562316895
    7. '(' → logprob: -16.101642608642578
    8. 'n' → logprob: -16.601642608642578
    9. '01' → logprob: -17.851642608642578
    10. '`' → logprob: -17.914142608642578

Token 160: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.49594634771347046
    2. ' ' → logprob: -1.6209464073181152
    3. ' à' → logprob: -2.7459464073181152
    4. 'range' → logprob: -3.2459464073181152
    5. ' range' → logprob: -3.2459464073181152
    6. ' in' → logprob: -3.7459464073181152
    7. 'to' → logprob: -4.120946407318115
    8. ',' → logprob: -5.245946407318115
    9. 'in' → logprob: -6.870946407318115
    10. ' a' → logprob: -7.370946407318115

Token 161: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12694522738456726
    2. 'n' → logprob: -2.1269452571868896
    3. ' ' → logprob: -12.251945495605469
    4. '(n' → logprob: -12.501945495605469
    5. '	n' → logprob: -13.001945495605469
    6. ' (' → logprob: -13.501945495605469
    7. 'len' → logprob: -14.001945495605469
    8. '1' → logprob: -14.376945495605469
    9. ' ' → logprob: -14.501945495605469
    10. ' 
' → logprob: -14.626945495605469

Token 162: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38691720366477966
    2. ' -' → logprob: -1.136917233467102
    3. ' ' → logprob: -10.636917114257812
    4. '<|end|>' → logprob: -11.011917114257812
    5. '1' → logprob: -13.136917114257812
    6. ' ' → logprob: -13.511917114257812
    7. '
' → logprob: -14.511917114257812
    8. '```' → logprob: -15.199417114257812
    9. '2' → logprob: -15.324417114257812
    10. '  ' → logprob: -15.449417114257812

Token 163: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00716489227488637
    2. '2' → logprob: -5.25716495513916
    3. ' ' → logprob: -6.25716495513916
    4. '-' → logprob: -11.50716495513916
    5. ' -' → logprob: -13.88216495513916
    6. '
' → logprob: -14.63216495513916
    7. '```' → logprob: -15.56966495513916
    8. '  ' → logprob: -15.75716495513916
    9. '3' → logprob: -16.007164001464844
    10. ' ' → logprob: -16.257164001464844

Token 164: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09251423925161362
    2. ' :' → logprob: -2.4675142765045166
    3. ',' → logprob: -5.8425140380859375
    4. ' :
' → logprob: -8.967514038085938
    5. ' in' → logprob: -9.092514038085938
    6. ':
' → logprob: -9.092514038085938
    7. ' for' → logprob: -9.592514038085938
    8. ' ' → logprob: -10.217514038085938
    9. ' ,' → logprob: -10.467514038085938
    10. 'for' → logprob: -10.467514038085938

Token 165: 'in' (ID: 258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8154712915420532
    2. 'n' → logprob: -1.6904712915420532
    3. ' ):' → logprob: -2.1904711723327637
    4. ' )' → logprob: -2.3154711723327637
    5. ' n' → logprob: -2.5654711723327637
    6. '):' → logprob: -2.5654711723327637
    7. ',' → logprob: -6.690471172332764
    8. ' ):
' → logprob: -6.690471172332764
    9. ')n' → logprob: -6.815471172332764
    10. ' ' → logprob: -6.815471172332764

Token 166: 'clus' (ID: 4085)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49374592304229736
    2. '-' → logprob: -1.7437459230422974
    3. ' range' → logprob: -1.7437459230422974
    4. ' ' → logprob: -3.743745803833008
    5. ')' → logprob: -4.993745803833008
    6. ' n' → logprob: -6.118745803833008
    7. 'range' → logprob: -6.493745803833008
    8. ' )' → logprob: -6.618745803833008
    9. 'dex' → logprob: -6.618745803833008
    10. '   ' → logprob: -7.243745803833008

Token 167: '),
' (ID: 2313)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31057414412498474
    2. ' ):' → logprob: -1.6855741739273071
    3. ')' → logprob: -2.6855740547180176
    4. ' )' → logprob: -4.935574054718018
    5. '):
' → logprob: -5.310574054718018
    6. ' ):
' → logprob: -7.185574054718018
    7. ' ' → logprob: -8.185574531555176
    8. ':' → logprob: -8.810574531555176
    9. ' :' → logprob: -9.935574531555176
    10. ',' → logprob: -10.060574531555176

Token 168: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30357882380485535
    2. ':' → logprob: -2.1785788536071777
    3. ' :' → logprob: -2.1785788536071777
    4. ' i' → logprob: -3.8035788536071777
    5. ' in' → logprob: -6.053578853607178
    6. ' ):' → logprob: -6.428578853607178
    7. ' ,' → logprob: -6.553578853607178
    8. '1' → logprob: -6.678578853607178
    9. 'i' → logprob: -7.178578853607178
    10. ' )' → logprob: -7.428578853607178

Token 169: ' ce' (ID: 2357)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.37351134419441223
    2. ' ' → logprob: -1.3735113143920898
    3. ' n' → logprob: -3.74851131439209
    4. 'n' → logprob: -4.74851131439209
    5. 'i' → logprob: -5.12351131439209
    6. ' range' → logprob: -5.49851131439209
    7. ' :' → logprob: -5.62351131439209
    8. ' for' → logprob: -5.99851131439209
    9. ':' → logprob: -6.24851131439209
    10. '1' → logprob: -6.49851131439209

Token 170: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0427383184432983
    2. ' qui' → logprob: -1.4177383184432983
    3. 'n' → logprob: -2.167738437652588
    4. ' for' → logprob: -2.542738437652588
    5. '#' → logprob: -3.417738437652588
    6. 'nt' → logprob: -4.167738437652588
    7. ')' → logprob: -4.167738437652588
    8. '.' → logprob: -4.292738437652588
    9. '+' → logprob: -4.667738437652588
    10. 'qui' → logprob: -4.667738437652588

Token 171: ' signifie' (ID: 81149)
  Prédit: ' signifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.6386980414390564
    2. ' permet' → logprob: -2.013698101043701
    3. ' veut' → logprob: -2.638698101043701
    4. '<|end|>' → logprob: -2.888698101043701
    5. ' permettra' → logprob: -3.013698101043701
    6. ' garantit' → logprob: -3.513698101043701
    7. ' n' → logprob: -4.013698101043701
    8. ' correspond' → logprob: -4.013698101043701
    9. ':' → logprob: -4.388698101043701
    10. 'n' → logprob: -4.638698101043701

Token 172: ' qu' (ID: 474)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5180391669273376
    2. ' que' → logprob: -1.7680392265319824
    3. ' ' → logprob: -2.1430392265319824
    4. 'n' → logprob: -2.2680392265319824
    5. ' len' → logprob: -5.018039226531982
    6. ' that' → logprob: -6.143039226531982
    7. ' i' → logprob: -7.143039226531982
    8. ' ' → logprob: -7.518039226531982
    9. '(n' → logprob: -7.518039226531982
    10. ' à' → logprob: -8.268038749694824

Token 173: ''on' (ID: 25812)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6876001358032227
    2. 'n' → logprob: -1.6876001358032227
    3. ' ' → logprob: -2.0626001358032227
    4. ' i' → logprob: -2.5626001358032227
    5. 'i' → logprob: -3.4376001358032227
    6. ' ' → logprob: -4.687600135803223
    7. ' on' → logprob: -4.937600135803223
    8. ' len' → logprob: -4.937600135803223
    9. ' '' → logprob: -5.062600135803223
    10. ' à' → logprob: -5.187600135803223

Token 174: ' s' (ID: 265)
  Prédit: ' examine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' examine' → logprob: -1.4196697473526
    2. ' vérifier' → logprob: -1.7946697473526
    3. ' for' → logprob: -2.0446696281433105
    4. ' vér' → logprob: -2.1696696281433105
    5. ' compare' → logprob: -2.4196696281433105
    6. 'for' → logprob: -2.6696696281433105
    7. ' ' → logprob: -3.2946696281433105
    8. ' va' → logprob: -3.5446696281433105
    9. '<|end|>' → logprob: -4.4196696281433105
    10. ' regarde' → logprob: -4.5446696281433105

Token 175: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2953174114227295
    2. ''agit' → logprob: -1.2953174114227295
    3. 'a' → logprob: -2.9203174114227295
    4. 'ur' → logprob: -3.4203174114227295
    5. 'n' → logprob: -3.5453174114227295
    6. 'u' → logprob: -3.6703174114227295
    7. 'i' → logprob: -3.6703174114227295
    8. ''arr' → logprob: -3.9203174114227295
    9. 'in' → logprob: -4.045317649841309
    10. 'ure' → logprob: -4.170317649841309

Token 176: 'ête' (ID: 16808)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.12327764928340912
    2. 'ête' → logprob: -2.6232776641845703
    3. 'ge' → logprob: -3.7482776641845703
    4. 'e' → logprob: -5.62327766418457
    5. 'ige' → logprob: -6.12327766418457
    6. 'range' → logprob: -6.37327766418457
    7. 'ege' → logprob: -6.37327766418457
    8. 'âge' → logprob: -6.37327766418457
    9. 'êt' → logprob: -6.62327766418457
    10. 'ive' → logprob: -6.62327766418457

Token 177: ' avant' (ID: 13339)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.31591692566871643
    2. ' ' → logprob: -2.1909170150756836
    3. ' to' → logprob: -2.8159170150756836
    4. '<|end|>' → logprob: -2.8159170150756836
    5. ' at' → logprob: -4.190917015075684
    6. ' au' → logprob: -4.815917015075684
    7. ' jusqu' → logprob: -5.815917015075684
    8. ' a' → logprob: -6.190917015075684
    9. ' in' → logprob: -6.315917015075684
    10. 'n' → logprob: -6.565917015075684

Token 178: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014492308720946312
    2. 'n' → logprob: -4.264492511749268
    3. ' len' → logprob: -8.26449203491211
    4. ' la' → logprob: -10.38949203491211
    5. 'len' → logprob: -11.26449203491211
    6. ' ' → logprob: -11.38949203491211
    7. ' le' → logprob: -12.01449203491211
    8. ' range' → logprob: -13.01449203491211
    9. '	n' → logprob: -13.88949203491211
    10. '(n' → logprob: -14.01449203491211

Token 179: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.008917202241718769
    2. ' dernier' → logprob: -4.758917331695557
    3. 'der' → logprob: -8.508916854858398
    4. 'n' → logprob: -10.133916854858398
    5. 'last' → logprob: -10.258916854858398
    6. ' dernière' → logprob: -11.258916854858398
    7. 'Dern' → logprob: -12.383916854858398
    8. ' last' → logprob: -13.133916854858398
    9. 'd' → logprob: -13.258916854858398
    10. ' der' → logprob: -14.133916854858398

Token 180: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.43852949142456055
    2. 'élé' → logprob: -2.0635294914245605
    3. ' ' → logprob: -2.8135294914245605
    4. '<|end|>' → logprob: -2.8135294914245605
    5. ' index' → logprob: -3.1885294914245605
    6. ' indice' → logprob: -3.6885294914245605
    7. 'indice' → logprob: -4.1885294914245605
    8. 'index' → logprob: -5.1885294914245605
    9. 'i' → logprob: -5.6885294914245605
    10. ' element' → logprob: -5.8135294914245605

Token 181: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24579639732837677
    2. ' for' → logprob: -1.8707964420318604
    3. 'for' → logprob: -3.1207964420318604
    4. ' :' → logprob: -5.495796203613281
    5. ',' → logprob: -5.620796203613281
    6. ' in' → logprob: -5.995796203613281
    7. ':
' → logprob: -6.245796203613281
    8. 'range' → logprob: -6.495796203613281
    9. ')' → logprob: -6.620796203613281
    10. ' range' → logprob: -6.745796203613281

Token 182: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9879177212715149
    2. 'h' → logprob: -1.4879176616668701
    3. 'n' → logprob: -1.4879176616668701
    4. ' h' → logprob: -1.9879176616668701
    5. ' range' → logprob: -3.61291766166687
    6. 'range' → logprob: -4.487917900085449
    7. ' la' → logprob: -7.362917900085449
    8. 'la' → logprob: -9.73791790008545
    9. ' ' → logprob: -11.23791790008545
    10. 'l' → logprob: -11.61291790008545

Token 183: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5712824463844299
    2. 'liste' → logprob: -1.1962823867797852
    3. ' liste' → logprob: -2.571282386779785
    4. 'range' → logprob: -3.571282386779785
    5. ' h' → logprob: -4.196282386779785
    6. 'list' → logprob: -5.321282386779785
    7. ' range' → logprob: -5.696282386779785
    8. 'n' → logprob: -5.946282386779785
    9. ' list' → logprob: -7.821282386779785
    10. '```' → logprob: -8.321282386779785

Token 184: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8204115033149719
    2. ':' → logprob: -0.9454115033149719
    3. ' for' → logprob: -1.8204114437103271
    4. 'n' → logprob: -5.445411682128906
    5. ',' → logprob: -6.570411682128906
    6. 'range' → logprob: -6.945411682128906
    7. ' :' → logprob: -7.445411682128906
    8. ':
' → logprob: -7.570411682128906
    9. 'in' → logprob: -8.070411682128906
    10. 'i' → logprob: -8.195411682128906

Token 185: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009484992478974164
    2. ' h' → logprob: -7.375948429107666
    3. ')' → logprob: -8.875948905944824
    4. '-' → logprob: -9.000948905944824
    5. '
' → logprob: -10.625948905944824
    6. ' -' → logprob: -10.875948905944824
    7. ')
' → logprob: -12.500948905944824
    8. ').' → logprob: -12.875948905944824
    9. '`' → logprob: -14.000948905944824
    10. '):
' → logprob: -14.250948905944824

Token 186: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.56949383020401
    2. '):' → logprob: -1.1944937705993652
    3. ':' → logprob: -2.1944937705993652
    4. ' for' → logprob: -4.069493770599365
    5. ')' → logprob: -6.819493770599365
    6. '):
' → logprob: -7.444493770599365
    7. ':
' → logprob: -7.819493770599365
    8. ' ):' → logprob: -8.444494247436523
    9. '
' → logprob: -8.694494247436523
    10. 'n' → logprob: -9.069494247436523

Token 187: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022904982790350914
    2. 'for' → logprob: -4.397904872894287
    3. ':
' → logprob: -5.147904872894287
    4. ' for' → logprob: -5.522904872894287
    5. ' :' → logprob: -8.272905349731445
    6. ',' → logprob: -9.397905349731445
    7. ' :
' → logprob: -10.272905349731445
    8. 'f' → logprob: -10.272905349731445
    9. ' ' → logprob: -10.397905349731445
    10. '.' → logprob: -10.397905349731445

Token 188: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14050337672233582
    2. ' i' → logprob: -2.265503406524658
    3. 'n' → logprob: -4.015503406524658
    4. ' len' → logprob: -5.515503406524658
    5. ' range' → logprob: -5.890503406524658
    6. ' ' → logprob: -7.140503406524658
    7. 'i' → logprob: -7.390503406524658
    8. 'range' → logprob: -7.515503406524658
    9. ' on' → logprob: -8.7655029296875
    10. 'len' → logprob: -9.1405029296875

Token 189: ' va' (ID: 3423)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -1.191369652748108
    2. 'n' → logprob: -2.0663695335388184
    3. ' va' → logprob: -2.5663695335388184
    4. ' n' → logprob: -2.8163695335388184
    5. ' vér' → logprob: -3.1913695335388184
    6. ' doit' → logprob: -3.1913695335388184
    7. 'a' → logprob: -3.1913695335388184
    8. ' range' → logprob: -3.4413695335388184
    9. ' souhaite' → logprob: -3.4413695335388184
    10. ' vérifier' → logprob: -3.4413695335388184

Token 190: ' comparer' (ID: 125081)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.3406146466732025
    2. ' comparer' → logprob: -1.340614676475525
    3. 'n' → logprob: -5.0906147956848145
    4. ' regarder' → logprob: -5.7156147956848145
    5. ' examiner' → logprob: -5.7156147956848145
    6. ' compare' → logprob: -6.0906147956848145
    7. 'Comparer' → logprob: -6.7156147956848145
    8. ' tester' → logprob: -6.7156147956848145
    9. ' for' → logprob: -6.8406147956848145
    10. 'v' → logprob: -6.9656147956848145

Token 191: ' des' (ID: 731)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9021673202514648
    2. 'i' → logprob: -1.2771673202514648
    3. 'n' → logprob: -1.7771673202514648
    4. ' ' → logprob: -3.027167320251465
    5. ' n' → logprob: -3.152167320251465
    6. '(i' → logprob: -4.777167320251465
    7. '[i' → logprob: -4.902167320251465
    8. '<|end|>' → logprob: -5.152167320251465
    9. ' h' → logprob: -5.402167320251465
    10. '(n' → logprob: -5.527167320251465

Token 192: ' p' (ID: 275)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.30023133754730225
    2. ' i' → logprob: -2.175231456756592
    3. 'h' → logprob: -3.300231456756592
    4. ' range' → logprob: -3.300231456756592
    5. ' n' → logprob: -4.300231456756592
    6. 'i' → logprob: -4.425231456756592
    7. 'range' → logprob: -4.800231456756592
    8. ' ' → logprob: -5.175231456756592
    9. ' ]' → logprob: -5.175231456756592
    10. '[i' → logprob: -5.175231456756592

Token 193: 'aires' (ID: 8507)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.0087834596633911
    2. 'range' → logprob: -1.0087834596633911
    3. '-' → logprob: -2.1337833404541016
    4. 'len' → logprob: -3.2587833404541016
    5. ' range' → logprob: -4.133783340454102
    6. 'ar' → logprob: -4.133783340454102
    7. 'h' → logprob: -4.258783340454102
    8. 'i' → logprob: -4.383783340454102
    9. 'n' → logprob: -4.508783340454102
    10. 'for' → logprob: -5.008783340454102

Token 194: ' cons' (ID: 1473)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.961342990398407
    2. ' for' → logprob: -1.9613430500030518
    3. 'range' → logprob: -2.0863430500030518
    4. ':' → logprob: -2.0863430500030518
    5. ' in' → logprob: -2.4613430500030518
    6. 'for' → logprob: -2.5863430500030518
    7. '(range' → logprob: -3.9613430500030518
    8. '[i' → logprob: -4.461342811584473
    9. '[' → logprob: -5.461342811584473
    10. 'in' → logprob: -5.586342811584473

Token 195: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.2345840036869049
    2. 't' → logprob: -1.9845839738845825
    3. 'u' → logprob: -4.109583854675293
    4. 'ecut' → logprob: -4.234583854675293
    5. 'secutive' → logprob: -4.609583854675293
    6. 'cut' → logprob: -4.859583854675293
    7. 'e' → logprob: -5.234583854675293
    8. 's' → logprob: -5.609583854675293
    9. 'secut' → logprob: -5.734583854675293
    10. 'h' → logprob: -6.484583854675293

Token 196: 'ives' (ID: 2264)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1675955057144165
    2. 'e' → logprob: -2.667595386505127
    3. 'u' → logprob: -3.042595386505127
    4. ' i' → logprob: -5.042595386505127
    5. '[i' → logprob: -5.417595386505127
    6. 's' → logprob: -5.542595386505127
    7. 'if' → logprob: -5.792595386505127
    8. 'es' → logprob: -5.917595386505127
    9. ':' → logprob: -5.917595386505127
    10. ']' → logprob: -6.167595386505127

Token 197: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021093670278787613
    2. 'for' → logprob: -4.771093845367432
    3. ':
' → logprob: -5.146093845367432
    4. ' for' → logprob: -5.646093845367432
    5. ' :' → logprob: -6.021093845367432
    6. ',' → logprob: -8.521093368530273
    7. ' :
' → logprob: -8.896093368530273
    8. '):' → logprob: -9.396093368530273
    9. ')' → logprob: -10.271093368530273
    10. '.' → logprob: -10.271093368530273

Token 198: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024060342460870743
    2. ' for' → logprob: -3.7740602493286133
    3. 'f' → logprob: -8.149060249328613
    4. '
' → logprob: -8.524060249328613
    5. 'i' → logprob: -9.149060249328613
    6. 'n' → logprob: -9.274060249328613
    7. ':' → logprob: -9.399060249328613
    8. ' 
' → logprob: -11.149060249328613
    9. ':
' → logprob: -12.399060249328613
    10. 'd' → logprob: -12.774060249328613

Token 199: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1285092830657959
    2. ' ' → logprob: -2.128509283065796
    3. 'i' → logprob: -6.503509521484375
    4. ' ' → logprob: -10.003509521484375
    5. '  ' → logprob: -11.253509521484375
    6. ' ‌' → logprob: -11.253509521484375
    7. '	i' → logprob: -12.378509521484375
    8. ' ' → logprob: -13.628509521484375
    9. '_' → logprob: -13.753509521484375
    10. ' ​' → logprob: -14.128509521484375

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01830971986055374
    2. 'in' → logprob: -4.018309593200684
    3. ' ' → logprob: -8.768309593200684
    4. ' i' → logprob: -14.393309593200684
    5. '  ' → logprob: -14.393309593200684
    6. '	in' → logprob: -14.518309593200684
    7. '+' → logprob: -14.893309593200684
    8. ',' → logprob: -15.518309593200684
    9. 'range' → logprob: -15.518309593200684
    10. '0' → logprob: -15.643309593200684

Token 201: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0010884242365136743
    2. 'range' → logprob: -6.876088619232178
    3. ' ' → logprob: -9.87608814239502
    4. '	range' → logprob: -13.00108814239502
    5. ' xrange' → logprob: -13.50108814239502
    6. '(range' → logprob: -14.75108814239502
    7. ' space' → logprob: -16.501089096069336
    8. ' in' → logprob: -17.001089096069336
    9. ' ' → logprob: -17.126089096069336
    10. ' rango' → logprob: -17.501089096069336

Token 202: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38689136505126953
    2. '(n' → logprob: -1.1368913650512695
    3. '(
' → logprob: -11.76189136505127
    4. ' (' → logprob: -11.76189136505127
    5. '(len' → logprob: -12.38689136505127
    6. '(i' → logprob: -15.26189136505127
    7. '((' → logprob: -16.761890411376953
    8. 'n' → logprob: -17.136890411376953
    9. '1' → logprob: -17.261890411376953
    10. ' n' → logprob: -17.636890411376953

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693513929843903
    2. ' -' → logprob: -2.1269352436065674
    3. ')' → logprob: -12.251935005187988
    4. '1' → logprob: -13.626935005187988
    5. ' ' → logprob: -14.501935005187988
    6. '2' → logprob: -15.876935005187988
    7. '):
' → logprob: -15.876935005187988
    8. ' ' → logprob: -16.626935958862305
    9. ' )' → logprob: -16.751935958862305
    10. '()-' → logprob: -16.876935958862305

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011050296947360039
    2. ' ' → logprob: -4.511050224304199
    3. '2' → logprob: -13.8860502243042
    4. '   ' → logprob: -14.6360502243042
    5. '  ' → logprob: -14.7610502243042
    6. ')' → logprob: -15.5110502243042
    7. ' ' → logprob: -15.6360502243042
    8. '```' → logprob: -15.8860502243042
    9. '
' → logprob: -17.198551177978516
    10. '１' → logprob: -17.573551177978516

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '2' → logprob: -17.000059127807617
    4. ')' → logprob: -17.500059127807617
    5. '
' → logprob: -17.750059127807617
    6. '   ' → logprob: -17.875059127807617
    7. '１' → logprob: -18.000059127807617
    8. '۱' → logprob: -18.375059127807617
    9. '```' → logprob: -18.375059127807617
    10. '  ' → logprob: -18.750059127807617

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.196732960641384e-05
    2. '):
' → logprob: -10.375082015991211
    3. ':' → logprob: -10.625082015991211
    4. ')' → logprob: -10.875082015991211
    5. ' ):' → logprob: -12.000082015991211
    6. '):
' → logprob: -14.875082015991211
    7. '():' → logprob: -15.375082015991211
    8. '+' → logprob: -15.875082015991211
    9. ')):' → logprob: -16.00008201599121
    10. ']:' → logprob: -16.37508201599121

Token 207: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15669125318527222
    2. '   ' → logprob: -2.031691312789917
    3. ':
' → logprob: -5.156691074371338
    4. ' :' → logprob: -5.281691074371338
    5. ' ' → logprob: -7.156691074371338
    6. ' :
' → logprob: -7.656691074371338
    7. '    
' → logprob: -7.906691074371338
    8. ' if' → logprob: -8.031691551208496
    9. 'if' → logprob: -8.406691551208496
    10. '<|end|>' → logprob: -8.531691551208496

Token 208: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8399578928947449
    2. ' if' → logprob: -1.0899579524993896
    3. '   ' → logprob: -1.4649579524993896
    4. ' ' → logprob: -8.089958190917969
    5. '    
' → logprob: -8.339958190917969
    6. ' 
' → logprob: -9.214958190917969
    7. '	if' → logprob: -9.464958190917969
    8. '  ' → logprob: -9.714958190917969
    9. '   ' → logprob: -10.089958190917969
    10. '    ' → logprob: -10.214958190917969

Token 209: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1017627865076065
    2. ' if' → logprob: -2.3517627716064453
    3. '   ' → logprob: -6.476762771606445
    4. ' ' → logprob: -11.351762771606445
    5. '  ' → logprob: -13.726762771606445
    6. '	if' → logprob: -13.976762771606445
    7. '    ' → logprob: -14.101762771606445
    8. '    
' → logprob: -14.226762771606445
    9. ' ' → logprob: -14.851762771606445
    10. '   ' → logprob: -15.601762771606445

Token 210: 'ifie' (ID: 46409)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14955921471118927
    2. 'ifie' → logprob: -2.274559259414673
    3. 'if' → logprob: -3.649559259414673
    4. ' if' → logprob: -5.524559020996094
    5. 'ifier' → logprob: -5.774559020996094
    6. ' ' → logprob: -7.274559020996094
    7. 'f' → logprob: -7.399559020996094
    8. 'ifiez' → logprob: -7.399559020996094
    9. '  ' → logprob: -8.399559020996094
    10. '       ' → logprob: -8.649559020996094

Token 211: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5948519110679626
    2. ' ' → logprob: -0.8448519110679626
    3. 'if' → logprob: -4.594851970672607
    4. ' si' → logprob: -5.594851970672607
    5. ' ' → logprob: -6.094851970672607
    6. '  ' → logprob: -6.844851970672607
    7. '   ' → logprob: -7.344851970672607
    8. ' h' → logprob: -8.46985149383545
    9. 'h' → logprob: -8.84485149383545
    10. ' whether' → logprob: -9.59485149383545

Token 212: ' l' (ID: 305)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25207120180130005
    2. 'h' → logprob: -1.5020711421966553
    3. ' ' → logprob: -9.877071380615234
    4. '   ' → logprob: -10.627071380615234
    5. ' abs' → logprob: -10.877071380615234
    6. 'abs' → logprob: -11.127071380615234
    7. ' ' → logprob: -11.502071380615234
    8. ' not' → logprob: -11.877071380615234
    9. '	h' → logprob: -11.877071380615234
    10. '  ' → logprob: -13.127071380615234

Token 213: ''' (ID: 6)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8804683685302734
    2. ' abs' → logprob: -0.8804683685302734
    3. 'h' → logprob: -2.0054683685302734
    4. 'abs' → logprob: -3.6304683685302734
    5. ' ' → logprob: -5.755468368530273
    6. '   ' → logprob: -6.130468368530273
    7. '[h' → logprob: -6.380468368530273
    8. '[' → logprob: -7.255468368530273
    9. ' >' → logprob: -7.505468368530273
    10. '[i' → logprob: -8.630468368530273

Token 214: 'élé' (ID: 15228)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.22661109268665314
    2. ' h' → logprob: -1.9766111373901367
    3. 'abs' → logprob: -3.2266111373901367
    4. ' abs' → logprob: -3.7266111373901367
    5. ' ' → logprob: -9.351611137390137
    6. ' not' → logprob: -9.476611137390137
    7. ')' → logprob: -9.851611137390137
    8. '   ' → logprob: -10.601611137390137
    9. 'diff' → logprob: -10.601611137390137
    10. '(abs' → logprob: -10.664111137390137

Token 215: 'ment' (ID: 508)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0689550638198853
    2. '   ' → logprob: -1.3189550638198853
    3. ' ' → logprob: -2.6939549446105957
    4. ' h' → logprob: -2.8189549446105957
    5. 'ment' → logprob: -2.9439549446105957
    6. '  ' → logprob: -3.1939549446105957
    7. 'm' → logprob: -3.5689549446105957
    8. '[' → logprob: -4.318954944610596
    9. ']' → logprob: -4.318954944610596
    10. ' abs' → logprob: -4.443954944610596

Token 216: ' courant' (ID: 74694)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20759470760822296
    2. ' suivant' → logprob: -2.582594633102417
    3. ' h' → logprob: -3.082594633102417
    4. '[i' → logprob: -3.582594633102417
    5. 's' → logprob: -4.207594871520996
    6. ' à' → logprob: -5.457594871520996
    7. '[h' → logprob: -5.707594871520996
    8. '   ' → logprob: -5.707594871520996
    9. 'abs' → logprob: -6.207594871520996
    10. ' at' → logprob: -6.457594871520996

Token 217: ' dans' (ID: 2671)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.408399224281311
    2. '   ' → logprob: -1.783399224281311
    3. ' >' → logprob: -1.908399224281311
    4. '>' → logprob: -1.908399224281311
    5. ' h' → logprob: -2.0333991050720215
    6. '+' → logprob: -3.1583991050720215
    7. '[h' → logprob: -3.5333991050720215
    8. ' +' → logprob: -3.7833991050720215
    9. ' ' → logprob: -3.7833991050720215
    10. ' <' → logprob: -5.0333991050720215

Token 218: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.42887425422668457
    2. ' h' → logprob: -1.0538742542266846
    3. ' abs' → logprob: -9.928874015808105
    4. '   ' → logprob: -10.303874015808105
    5. ' ' → logprob: -10.303874015808105
    6. 'abs' → logprob: -10.803874015808105
    7. '(h' → logprob: -11.553874015808105
    8. ')' → logprob: -12.303874015808105
    9. ' la' → logprob: -12.303874015808105
    10. ' (' → logprob: -12.803874015808105

Token 219: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016375325620174408
    2. 'liste' → logprob: -4.891375541687012
    3. ' h' → logprob: -5.016375541687012
    4. ' liste' → logprob: -6.516375541687012
    5. 'list' → logprob: -8.266375541687012
    6. 'range' → logprob: -9.641375541687012
    7. ')' → logprob: -10.141375541687012
    8. '#' → logprob: -10.516375541687012
    9. ' list' → logprob: -10.516375541687012
    10. ' ' → logprob: -10.766375541687012

Token 220: ' '' (ID: 461)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.34008893370628357
    2. ' h' → logprob: -1.340088963508606
    3. '[h' → logprob: -3.9650888442993164
    4. '[i' → logprob: -5.840088844299316
    5. '   ' → logprob: -5.840088844299316
    6. ' '' → logprob: -7.965088844299316
    7. '[' → logprob: -8.090088844299316
    8. ',' → logprob: -8.340088844299316
    9. ')' → logprob: -8.590088844299316
    10. ']' → logprob: -9.215088844299316

Token 221: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.023318851366639137
    2. ' h' → logprob: -3.7733187675476074
    3. '[h' → logprob: -10.773319244384766
    4. ''' → logprob: -11.023319244384766
    5. ''h' → logprob: -11.148319244384766
    6. ']' → logprob: -12.273319244384766
    7. ')' → logprob: -12.398319244384766
    8. ' '' → logprob: -13.023319244384766
    9. '[' → logprob: -13.398319244384766
    10. '   ' → logprob: -13.648319244384766

Token 222: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.044796623289585114
    2. ']' → logprob: -3.4197967052459717
    3. '[' → logprob: -4.544796466827393
    4. '[h' → logprob: -8.66979694366455
    5. '][' → logprob: -9.66979694366455
    6. '   ' → logprob: -9.91979694366455
    7. '[j' → logprob: -10.16979694366455
    8. ')' → logprob: -10.91979694366455
    9. '']' → logprob: -10.91979694366455
    10. '```' → logprob: -11.04479694366455

Token 223: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1867452710866928
    2. '[' → logprob: -2.6867451667785645
    3. '>' → logprob: -3.1867451667785645
    4. '[h' → logprob: -3.6867451667785645
    5. ' [' → logprob: -4.6867451667785645
    6. ' ' → logprob: -4.9367451667785645
    7. ' >' → logprob: -5.0617451667785645
    8. ']' → logprob: -5.5617451667785645
    9. '+' → logprob: -5.6867451667785645
    10. '   ' → logprob: -6.0617451667785645

Token 224: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.33659785985946655
    2. ' >' → logprob: -2.0865979194641113
    3. '<' → logprob: -2.5865979194641113
    4. ' <' → logprob: -3.2115979194641113
    5. ' plus' → logprob: -5.211597919464111
    6. ' supérieur' → logprob: -5.336597919464111
    7. ' greater' → logprob: -5.586597919464111
    8. '>=' → logprob: -5.586597919464111
    9. ' ' → logprob: -5.711597919464111
    10. '<h' → logprob: -5.961597919464111

Token 225: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.11178825795650482
    2. '>' → logprob: -2.736788272857666
    3. 'ly' → logprob: -4.111788272857666
    4. ' >' → logprob: -4.736788272857666
    5. ' >=' → logprob: -4.986788272857666
    6. 'ément' → logprob: -6.111788272857666
    7. '>=' → logprob: -6.236788272857666
    8. '<' → logprob: -6.486788272857666
    9. 'lement' → logprob: -6.986788272857666
    10. ' <' → logprob: -7.361788272857666

Token 226: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17626218497753143
    2. ' supérieur' → logprob: -2.426262140274048
    3. ' inférieur' → logprob: -3.801262140274048
    4. '<' → logprob: -4.051262378692627
    5. '>=' → logprob: -4.426262378692627
    6. 'greater' → logprob: -5.176262378692627
    7. ' >' → logprob: -5.426262378692627
    8. 'sup' → logprob: -6.051262378692627
    9. 'plus' → logprob: -6.301262378692627
    10. '+' → logprob: -7.051262378692627

Token 227: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6146939992904663
    2. ' à' → logprob: -0.8646939992904663
    3. ' to' → logprob: -3.614694118499756
    4. 'à' → logprob: -5.864694118499756
    5. ',' → logprob: -6.614694118499756
    6. '    ' → logprob: -6.739694118499756
    7. 'to' → logprob: -6.864694118499756
    8. ' a' → logprob: -6.989694118499756
    9. ' h' → logprob: -7.239694118499756
    10. ' ' → logprob: -7.739694118499756

Token 228: ' l' (ID: 305)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.12694741785526276
    2. 'h' → logprob: -2.1269474029541016
    3. ' ' → logprob: -11.626947402954102
    4. ' ' → logprob: -12.501947402954102
    5. '	h' → logprob: -13.001947402954102
    6. '(h' → logprob: -13.126947402954102
    7. ',' → logprob: -14.626947402954102
    8. '   ' → logprob: -14.626947402954102
    9. '[h' → logprob: -15.251947402954102
    10. ' (' → logprob: -15.501947402954102

Token 229: ''' (ID: 6)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.21475006639957428
    2. ' h' → logprob: -2.214750051498413
    3. '[' → logprob: -3.839750051498413
    4. ' ' → logprob: -3.839750051498413
    5. '[i' → logprob: -4.214750289916992
    6. '+' → logprob: -4.839750289916992
    7. ''' → logprob: -5.464750289916992
    8. ''h' → logprob: -6.214750289916992
    9. '[h' → logprob: -6.589750289916992
    10. '   ' → logprob: -6.714750289916992

Token 230: 'élé' (ID: 15228)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5832218527793884
    2. 'élé' → logprob: -0.8332218527793884
    3. ' élément' → logprob: -5.458221912384033
    4. ' h' → logprob: -6.583221912384033
    5. 'element' → logprob: -7.708221912384033
    6. ' suivant' → logprob: -7.958221912384033
    7. 's' → logprob: -8.708221435546875
    8. 'é' → logprob: -9.083221435546875
    9. 'next' → logprob: -9.958221435546875
    10. '#' → logprob: -9.958221435546875

Token 231: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -7.803360495017841e-05
    2. 'm' → logprob: -11.000078201293945
    3. 'ments' → logprob: -11.000078201293945
    4. 'ément' → logprob: -11.875078201293945
    5. 'men' → logprob: -12.000078201293945
    6. 'ement' → logprob: -12.000078201293945
    7. 'mé' → logprob: -12.375078201293945
    8. 'mentation' → logprob: -12.750078201293945
    9. 'h' → logprob: -12.875078201293945
    10. 'v' → logprob: -13.250078201293945

Token 232: ' suivant' (ID: 68705)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6092908978462219
    2. 'su' → logprob: -1.6092908382415771
    3. ' suivant' → logprob: -1.7342908382415771
    4. '[' → logprob: -2.734290838241577
    5. 's' → logprob: -5.234291076660156
    6. '   ' → logprob: -5.609291076660156
    7. ' suivante' → logprob: -5.734291076660156
    8. ' [' → logprob: -7.859291076660156
    9. ' ' → logprob: -7.859291076660156
    10. '```' → logprob: -8.234291076660156

Token 233: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4600880444049835
    2. ':' → logprob: -1.8350880146026611
    3. ' and' → logprob: -2.460088014602661
    4. '[' → logprob: -2.710088014602661
    5. '[i' → logprob: -3.335088014602661
    6. 'and' → logprob: -5.83508825302124
    7. ' or' → logprob: -5.83508825302124
    8. 'h' → logprob: -6.21008825302124
    9. '[h' → logprob: -6.33508825302124
    10. ',' → logprob: -6.58508825302124

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037876081187278032
    2. ' if' → logprob: -5.753787517547607
    3. '       ' → logprob: -8.878787994384766
    4. '    ' → logprob: -9.128787994384766
    5. ' ' → logprob: -9.378787994384766
    6. '  ' → logprob: -9.753787994384766
    7. '    
' → logprob: -9.878787994384766
    8. ':' → logprob: -9.878787994384766
    9. 'if' → logprob: -10.503787994384766
    10. '<|end|>' → logprob: -10.878787994384766

Token 235: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0118009177967906
    2. ' if' → logprob: -4.511800765991211
    3. 'if' (adapté à ' if') → logprob: -7.386800765991211
    4. '       ' → logprob: -10.011800765991211
    5. '    
' → logprob: -10.636800765991211
    6. '  ' → logprob: -10.886800765991211
    7. '    ' → logprob: -11.136800765991211
    8. ' ' → logprob: -11.761800765991211
    9. '	if' → logprob: -12.261800765991211
    10. ':' → logprob: -12.511800765991211

Token 236: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.005243002902716398
    2. 'h' → logprob: -5.255242824554443
    3. ' ' → logprob: -12.255243301391602
    4. '	h' → logprob: -12.880243301391602
    5. ' ' → logprob: -14.255243301391602
    6. '(h' → logprob: -14.505243301391602
    7. '   ' → logprob: -14.755243301391602
    8. ' not' → logprob: -16.2552433013916
    9. '[h' → logprob: -16.2552433013916
    10. '    ' → logprob: -17.3802433013916

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014171387068927288
    2. '[' → logprob: -4.264171600341797
    3. ' [' → logprob: -12.514171600341797
    4. '[h' → logprob: -12.639171600341797
    5. '[
' → logprob: -15.264171600341797
    6. ']' → logprob: -15.514171600341797
    7. '[I' → logprob: -16.014171600341797
    8. '[j' → logprob: -16.264171600341797
    9. 'i' → logprob: -16.639171600341797
    10. '```' → logprob: -16.764171600341797

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049173370003700256
    2. ' ]' → logprob: -3.924173355102539
    3. ' >' → logprob: -4.424173355102539
    4. '>' → logprob: -4.549173355102539
    5. ']>' → logprob: -5.299173355102539
    6. '[' → logprob: -7.799173355102539
    7. ' ' → logprob: -9.299173355102539
    8. '   ' → logprob: -9.799173355102539
    9. '[i' → logprob: -10.049173355102539
    10. '-' → logprob: -10.799173355102539

Token 239: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14294104278087616
    2. '>' → logprob: -2.0179409980773926
    3. ' <' → logprob: -9.26794147491455
    4. ' ' → logprob: -9.64294147491455
    5. ' >=' → logprob: -10.39294147491455
    6. ' <=' → logprob: -10.76794147491455
    7. '<' → logprob: -10.76794147491455
    8. '   ' → logprob: -11.39294147491455
    9. '>=' → logprob: -11.76794147491455
    10. ' >
' → logprob: -12.76794147491455

Token 240: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.38688868284225464
    2. ' h' → logprob: -1.1368887424468994
    3. ' ' → logprob: -11.63688850402832
    4. '   ' → logprob: -13.13688850402832
    5. '	h' → logprob: -13.26188850402832
    6. ' ' → logprob: -13.88688850402832
    7. ' (' → logprob: -14.01188850402832
    8. '1' → logprob: -14.38688850402832
    9. '(h' → logprob: -14.38688850402832
    10. '  ' → logprob: -14.63688850402832

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. ' [' → logprob: -12.500007629394531
    3. '[' → logprob: -12.625007629394531
    4. ']' → logprob: -16.37500762939453
    5. '][' → logprob: -16.62500762939453
    6. 'i' → logprob: -17.12500762939453
    7. '[
' → logprob: -17.50000762939453
    8. '
' → logprob: -17.50000762939453
    9. ' ' → logprob: -17.62500762939453
    10. '[j' → logprob: -17.87500762939453

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02633269503712654
    2. ' +' → logprob: -3.6513326168060303
    3. ']' → logprob: -11.27633285522461
    4. '1' → logprob: -11.77633285522461
    5. '[i' → logprob: -12.40133285522461
    6. ']+' → logprob: -12.65133285522461
    7. '+i' → logprob: -13.40133285522461
    8. '   ' → logprob: -13.52633285522461
    9. ' ' → logprob: -14.02633285522461
    10. '[' → logprob: -14.52633285522461

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007611005567014217
    2. ' ' → logprob: -4.88261079788208
    3. ']' → logprob: -12.632611274719238
    4. ' ]' → logprob: -14.257611274719238
    5. '  ' → logprob: -14.632611274719238
    6. '   ' → logprob: -15.007611274719238
    7. 'i' → logprob: -16.507610321044922
    8. ' ' → logprob: -16.757610321044922
    9. '0' → logprob: -17.007610321044922
    10. '<|end|>' → logprob: -17.632610321044922

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '
' → logprob: -16.500001907348633
    4. ']' → logprob: -16.625001907348633
    5. 'i' → logprob: -17.750001907348633
    6. '```' → logprob: -18.625001907348633
    7. '0' → logprob: -18.875001907348633
    8. ')' → logprob: -19.875001907348633
    9. '１' → logprob: -19.937501907348633
    10. '१' → logprob: -20.062501907348633

Token 245: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10421731323003769
    2. '):' → logprob: -2.354217290878296
    3. ':' → logprob: -5.854217529296875
    4. ']' → logprob: -7.479217529296875
    5. ']):' → logprob: -7.854217529296875
    6. ']:
' → logprob: -9.354217529296875
    7. '):
' → logprob: -10.104217529296875
    8. '   ' → logprob: -11.604217529296875
    9. ' ):' → logprob: -11.604217529296875
    10. ')' → logprob: -12.229217529296875

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00975679699331522
    2. '   ' → logprob: -5.009756565093994
    3. ':' → logprob: -6.634756565093994
    4. '        
' → logprob: -7.884756565093994
    5. ':
' → logprob: -8.134757041931152
    6. ' judge' → logprob: -8.134757041931152
    7. '    
' → logprob: -8.884757041931152
    8. '\n' → logprob: -8.884757041931152
    9. ' 
' → logprob: -9.509757041931152
    10. '
' → logprob: -9.509757041931152

Token 247: ' #' (ID: 1069)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.3340860605239868
    2. '       ' → logprob: -1.8340860605239868
    3. 'judge' → logprob: -2.2090859413146973
    4. '   ' → logprob: -4.709085941314697
    5. '
' → logprob: -5.834085941314697
    6. '```' → logprob: -6.959085941314697
    7. '        
' → logprob: -7.584085941314697
    8. ' juge' → logprob: -8.584086418151855
    9. '           ' → logprob: -8.709086418151855
    10. '    
' → logprob: -8.959086418151855

Token 248: ' Si' (ID: 7832)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.09805798530578613
    2. '   ' → logprob: -2.473057985305786
    3. ' judge' → logprob: -4.973057746887207
    4. '       ' → logprob: -6.848057746887207
    5. 'jud' → logprob: -8.098057746887207
    6. '
' → logprob: -8.348057746887207
    7. '```' → logprob: -8.473057746887207
    8. '    
' → logprob: -9.223057746887207
    9. 'jug' → logprob: -9.723057746887207
    10. '   ' → logprob: -10.098057746887207

Token 249: ' c' (ID: 274)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.2799418270587921
    2. 'judge' → logprob: -1.6549417972564697
    3. '       ' → logprob: -3.6549417972564697
    4. ' ' → logprob: -5.154942035675049
    5. '        
' → logprob: -5.154942035675049
    6. ' 
' → logprob: -5.529942035675049
    7. '    
' → logprob: -6.154942035675049
    8. '   ' → logprob: -6.529942035675049
    9. '
' → logprob: -6.654942035675049
    10. '    ' → logprob: -6.654942035675049

Token 250: ''est' (ID: 6616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5524862408638
    2. 'udge' → logprob: -1.5524861812591553
    3. 'judge' → logprob: -1.8024861812591553
    4. ' judge' → logprob: -3.6774861812591553
    5. '   ' → logprob: -4.677486419677734
    6. '#' → logprob: -6.052486419677734
    7. 'e' → logprob: -6.427486419677734
    8. '    ' → logprob: -6.802486419677734
    9. 'r' → logprob: -6.927486419677734
    10. '```' → logprob: -6.927486419677734

Token 251: ' le' (ID: 505)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.7915674448013306
    2. 'judge' → logprob: -1.6665674448013306
    3. '   ' → logprob: -2.041567325592041
    4. ' True' → logprob: -3.166567325592041
    5. ':' → logprob: -3.416567325592041
    6. '    
' → logprob: -3.916567325592041
    7. 'True' → logprob: -4.041567325592041
    8. '       ' → logprob: -4.291567325592041
    9. ' juge' → logprob: -4.416567325592041
    10. 'False' → logprob: -4.541567325592041

Token 252: ' cas' (ID: 2108)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20556852221488953
    2. ' False' → logprob: -1.830568552017212
    3. 'judge' → logprob: -4.830568313598633
    4. 'True' → logprob: -4.955568313598633
    5. ' True' → logprob: -5.455568313598633
    6. 'not' → logprob: -6.580568313598633
    7. ' judge' → logprob: -7.080568313598633
    8. 'f' → logprob: -7.330568313598633
    9. ' not' → logprob: -7.330568313598633
    10. 'false' → logprob: -7.580568313598633

Token 253: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0566941499710083
    2. '           ' → logprob: -3.0566940307617188
    3. ':' → logprob: -4.931694030761719
    4. ',' → logprob: -8.431694030761719
    5. ':
' → logprob: -8.556694030761719
    6. '   ' → logprob: -9.056694030761719
    7. '        
' → logprob: -9.431694030761719
    8. '```' → logprob: -9.931694030761719
    9. 'judge' → logprob: -10.181694030761719
    10. ' judge' → logprob: -10.431694030761719

Token 254: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5018439888954163
    2. ' judge' → logprob: -1.2518439292907715
    3. 'judge' → logprob: -2.3768439292907715
    4. '   ' → logprob: -4.6268439292907715
    5. '           ' → logprob: -5.7518439292907715
    6. '```' → logprob: -6.5018439292907715
    7. 'jud' → logprob: -8.12684440612793
    8. ' juge' → logprob: -8.12684440612793
    9. '        
' → logprob: -8.50184440612793
    10. '   ' → logprob: -9.37684440612793

Token 255: ' condition' (ID: 7060)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.010033832862973213
    2. ' judge' → logprob: -4.63503360748291
    3. 'jud' → logprob: -8.63503360748291
    4. 'jug' → logprob: -9.63503360748291
    5. ' juge' → logprob: -11.51003360748291
    6. ' ' → logprob: -12.01003360748291
    7. 'ju' → logprob: -12.63503360748291
    8. '   ' → logprob: -13.01003360748291
    9. 'j' → logprob: -13.01003360748291
    10. 'space' → logprob: -13.26003360748291

Token 256: ' attend' (ID: 13384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49433639645576477
    2. 'judge' → logprob: -1.2443363666534424
    3. ' judge' → logprob: -2.4943363666534424
    4. ' =' → logprob: -5.1193366050720215
    5. '           ' → logprob: -5.4943366050720215
    6. '   ' → logprob: -5.9943366050720215
    7. '        
' → logprob: -6.6193366050720215
    8. '=' → logprob: -6.8693366050720215
    9. '        ' → logprob: -6.8693366050720215
    10. 'jug' → logprob: -7.3693366050720215

Token 257: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.007315069902688265
    2. 'e' → logprob: -5.382315158843994
    3. 'u' → logprob: -6.257315158843994
    4. '   ' → logprob: -7.882315158843994
    5. '       ' → logprob: -9.507314682006836
    6. 'nte' → logprob: -10.257314682006836
    7. 'judge' → logprob: -10.382314682006836
    8. 'd' → logprob: -10.507314682006836
    9. 's' → logprob: -10.632314682006836
    10. 'ed' → logprob: -10.882314682006836

Token 258: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3467458188533783
    2. ' n' → logprob: -1.9717458486557007
    3. 'n' → logprob: -2.471745729446411
    4. ' =' → logprob: -3.721745729446411
    5. '   ' → logprob: -4.59674596786499
    6. 'judge' → logprob: -4.84674596786499
    7. 'est' → logprob: -5.34674596786499
    8. ':' → logprob: -5.84674596786499
    9. '=False' → logprob: -5.84674596786499
    10. ' judge' → logprob: -6.22174596786499

Token 259: ''est' (ID: 6616)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.052643775939941406
    2. ''est' → logprob: -3.8026437759399414
    3. 'e' → logprob: -4.427643775939941
    4. '#' → logprob: -5.677643775939941
    5. 'ot' → logprob: -6.177643775939941
    6. '=' → logprob: -6.177643775939941
    7. ''' → logprob: -6.427643775939941
    8. '   ' → logprob: -6.927643775939941
    9. 'a' → logprob: -7.177643775939941
    10. 'o' → logprob: -7.177643775939941

Token 260: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.022037046030163765
    2. 'plus' → logprob: -4.022037029266357
    3. ' pas' → logprob: -5.897037029266357
    4. '#' → logprob: -7.897037029266357
    5. '_pas' → logprob: -8.397037506103516
    6. ' plus' → logprob: -8.772037506103516
    7. 'judge' → logprob: -9.397037506103516
    8. '
' → logprob: -10.022037506103516
    9. '

' → logprob: -10.272037506103516
    10. '```' → logprob: -10.272037506103516

Token 261: ' respect' (ID: 5618)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.08808963000774384
    2. ' respect' → logprob: -3.21308970451355
    3. 'jug' → logprob: -4.213089466094971
    4. 'v' → logprob: -5.088089466094971
    5. 'rem' → logprob: -5.088089466094971
    6. 'judge' → logprob: -5.588089466094971
    7. 's' → logprob: -5.713089466094971
    8. ' rempl' → logprob: -5.838089466094971
    9. '
' → logprob: -6.463089466094971
    10. 'ré' → logprob: -6.963089466094971

Token 262: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0012899977155029774
    2. 'é' → logprob: -6.8762898445129395
    3. 'ee' → logprob: -8.376290321350098
    4. '       ' → logprob: -11.001290321350098
    5. 'née' → logprob: -12.626290321350098
    6. 'e' → logprob: -13.126290321350098
    7. '   ' → logprob: -13.376290321350098
    8. 'rée' → logprob: -13.876290321350098
    9. 'ées' → logprob: -14.126290321350098
    10. '#' → logprob: -14.876290321350098

Token 263: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008561505004763603
    2. ',' → logprob: -5.008561611175537
    3. ':' → logprob: -6.883561611175537
    4. '.' → logprob: -8.008561134338379
    5. '           ' → logprob: -9.133561134338379
    6. '        
' → logprob: -9.383561134338379
    7. '   ' → logprob: -9.883561134338379
    8. '
' → logprob: -10.133561134338379
    9. '```' → logprob: -10.508561134338379
    10. ':
' → logprob: -10.633561134338379

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008355232886970043
    2. 'judge' → logprob: -5.258355140686035
    3. ' judge' → logprob: -6.258355140686035
    4. '   ' → logprob: -6.883355140686035
    5. '        
' → logprob: -9.758355140686035
    6. '           ' → logprob: -10.258355140686035
    7. '
' → logprob: -10.758355140686035
    8. '```' → logprob: -10.883355140686035
    9. 'jug' → logprob: -11.633355140686035
    10. '   ' → logprob: -11.883355140686035

Token 265: ' #' (ID: 1069)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.6785063743591309
    2. '       ' → logprob: -0.8035063743591309
    3. 'judge' → logprob: -3.178506374359131
    4. '   ' → logprob: -6.803506374359131
    5. '
' → logprob: -7.303506374359131
    6. '        
' → logprob: -7.553506374359131
    7. ' juge' → logprob: -8.178506851196289
    8. '```' → logprob: -9.303506851196289
    9. 'jug' → logprob: -9.428506851196289
    10. 'jud' → logprob: -9.428506851196289

Token 266: ' On' (ID: 2160)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.39752641320228577
    2. 'judge' → logprob: -1.2725263833999634
    3. '       ' → logprob: -3.272526502609253
    4. '   ' → logprob: -4.772526264190674
    5. 'jud' → logprob: -8.397526741027832
    6. '
' → logprob: -8.772526741027832
    7. '    ' → logprob: -8.772526741027832
    8. '           ' → logprob: -9.022526741027832
    9. ' juge' → logprob: -9.147526741027832
    10. '```' → logprob: -9.272526741027832

Token 267: ' attrib' (ID: 72186)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36180540919303894
    2. 'judge' → logprob: -1.6118054389953613
    3. ' judge' → logprob: -2.7368054389953613
    4. '   ' → logprob: -4.236805438995361
    5. ' juge' → logprob: -5.236805438995361
    6. '        
' → logprob: -5.361805438995361
    7. '```' → logprob: -5.861805438995361
    8. ' ' → logprob: -5.986805438995361
    9. '        ' → logprob: -6.361805438995361
    10. '    ' → logprob: -6.611805438995361

Token 268: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.003223821986466646
    2. 'uer' → logprob: -6.253223896026611
    3. 'u' → logprob: -6.753223896026611
    4. 'e' → logprob: -10.003223419189453
    5. 'uera' → logprob: -10.628223419189453
    6. 'uje' → logprob: -11.128223419189453
    7. 'ué' → logprob: -11.628223419189453
    8. '       ' → logprob: -11.628223419189453
    9. 'uez' → logprob: -11.628223419189453
    10. 'ure' → logprob: -12.628223419189453

Token 269: ' la' (ID: 557)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1071285009384155
    2. 'judge' → logprob: -1.2321285009384155
    3. ' judge' → logprob: -1.6071285009384155
    4. ' False' → logprob: -1.7321285009384155
    5. '=False' → logprob: -8.607128143310547
    6. 'jud' → logprob: -9.732128143310547
    7. ' juge' → logprob: -9.857128143310547
    8. '   ' → logprob: -10.482128143310547
    9. '```' → logprob: -10.482128143310547
    10. '_false' → logprob: -10.732128143310547

Token 270: ' valeur' (ID: 41664)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20789793133735657
    2. ' False' → logprob: -2.082897901535034
    3. 'judge' → logprob: -2.832897901535034
    4. ' judge' → logprob: -6.332898139953613
    5. 'false' → logprob: -6.457898139953613
    6. 'jud' → logprob: -8.457898139953613
    7. '=False' → logprob: -8.582898139953613
    8. '_false' → logprob: -8.707898139953613
    9. 'jug' → logprob: -9.457898139953613
    10. ' juge' → logprob: -9.957898139953613

Token 271: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6933916807174683
    2. 'False' → logprob: -0.6933916807174683
    3. '=False' → logprob: -8.568391799926758
    4. '_false' → logprob: -10.068391799926758
    5. 'false' → logprob: -12.568391799926758
    6. ' =' → logprob: -12.818391799926758
    7. ' false' → logprob: -12.818391799926758
    8. '(False' → logprob: -13.568391799926758
    9. '=' → logprob: -14.568391799926758
    10. '   ' → logprob: -15.443391799926758

Token 272: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16853144764900208
    2. ' à' → logprob: -2.1685314178466797
    3. '
' → logprob: -3.7935314178466797
    4. ' to' → logprob: -5.29353141784668
    5. '           ' → logprob: -5.41853141784668
    6. '   ' → logprob: -6.04353141784668
    7. ' au' → logprob: -7.04353141784668
    8. ',' → logprob: -7.04353141784668
    9. '        
' → logprob: -7.04353141784668
    10. '```' → logprob: -7.41853141784668

Token 273: ' la' (ID: 557)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.12705567479133606
    2. 'judge' → logprob: -2.1270556449890137
    3. ' juge' → logprob: -10.002056121826172
    4. 'jud' → logprob: -10.627056121826172
    5. ' ' → logprob: -10.877056121826172
    6. '```' → logprob: -11.252056121826172
    7. 'jug' → logprob: -11.877056121826172
    8. ' juez' → logprob: -12.877056121826172
    9. 'j' → logprob: -12.877056121826172
    10. ' ' → logprob: -13.252056121826172

Token 274: ' variable' (ID: 11076)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.20172682404518127
    2. ' judge' → logprob: -1.7017267942428589
    3. 'jug' → logprob: -9.076726913452148
    4. ' juge' → logprob: -9.701726913452148
    5. 'jud' → logprob: -9.826726913452148
    6. '```' → logprob: -11.076726913452148
    7. 'j' → logprob: -11.451726913452148
    8. ' ' → logprob: -11.576726913452148
    9. 'jury' → logprob: -11.576726913452148
    10. 'Judge' → logprob: -11.951726913452148

Token 275: ' '' (ID: 461)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.03846428915858269
    2. 'judge' → logprob: -3.288464307785034
    3. ' juge' → logprob: -8.163464546203613
    4. 'jug' → logprob: -10.288464546203613
    5. 'jud' → logprob: -10.538464546203613
    6. ' ' → logprob: -11.038464546203613
    7. '```' → logprob: -11.413464546203613
    8. ' juez' → logprob: -11.788464546203613
    9. 'j' → logprob: -12.288464546203613
    10. '`' → logprob: -12.288464546203613

Token 276: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.0010574605548754334
    2. ' judge' → logprob: -6.8760576248168945
    3. 'jug' → logprob: -11.126057624816895
    4. 'jud' → logprob: -11.876057624816895
    5. 'jury' → logprob: -14.251057624816895
    6. '```' → logprob: -14.876057624816895
    7. '
' → logprob: -15.001057624816895
    8. ' ' → logprob: -15.251057624816895
    9. 'j' → logprob: -15.251057624816895
    10. 'Judge' → logprob: -15.376057624816895

Token 277: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7766211628913879
    2. '<|end|>' → logprob: -1.2766211032867432
    3. '
' → logprob: -2.151621103286743
    4. '       ' → logprob: -3.026621103286743
    5. '')' → logprob: -3.026621103286743
    6. ''' → logprob: -4.151621341705322
    7. '```' → logprob: -4.651621341705322
    8. ')
' → logprob: -5.151621341705322
    9. ' )' → logprob: -5.526621341705322
    10. '   ' → logprob: -6.776621341705322

Token 278: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03596043959259987
    2. '
' → logprob: -3.5359604358673096
    3. '        
' → logprob: -5.785960674285889
    4. '<|end|>' → logprob: -6.410960674285889
    5. ',' → logprob: -8.28596019744873
    6. '           ' → logprob: -8.53596019744873
    7. '   ' → logprob: -8.78596019744873
    8. '        ' → logprob: -9.16096019744873
    9. ' 
' → logprob: -9.28596019744873
    10. ' =' → logprob: -9.28596019744873

Token 279: ' signal' (ID: 12884)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.43133261799812317
    2. '       ' → logprob: -1.9313325881958008
    3. 'break' → logprob: -2.431332588195801
    4. '        
' → logprob: -2.931332588195801
    5. '    
' → logprob: -4.681332588195801
    6. ' judge' → logprob: -5.056332588195801
    7. '   ' → logprob: -5.056332588195801
    8. ' 
' → logprob: -5.306332588195801
    9. '
' → logprob: -5.681332588195801
    10. ' continuer' → logprob: -5.681332588195801

Token 280: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.1472419600977446e-06
    2. 'e' → logprob: -14.375000953674316
    3. ' er' → logprob: -14.750000953674316
    4. '#' → logprob: -17.125001907348633
    5. '       ' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '=' → logprob: -18.000001907348633
    8. 'r' → logprob: -18.250001907348633
    9. '­er' → logprob: -18.250001907348633
    10. 'uer' → logprob: -18.375001907348633

Token 281: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24648915231227875
    2. ' True' → logprob: -2.9964890480041504
    3. ' judge' → logprob: -3.1214890480041504
    4. ' ' → logprob: -3.6214890480041504
    5. ' ' → logprob: -4.62148904800415
    6. '        
' → logprob: -4.62148904800415
    7. ' )' → logprob: -4.74648904800415
    8. '    ' → logprob: -5.12148904800415
    9. ' False' → logprob: -5.24648904800415
    10. ' that' → logprob: -5.24648904800415

Token 282: ' la' (ID: 557)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.08608899265527725
    2. 'judge' → logprob: -2.5860888957977295
    3. ' l' → logprob: -6.461089134216309
    4. '       ' → logprob: -6.711089134216309
    5. ' la' → logprob: -7.086089134216309
    6. ' juge' → logprob: -7.336089134216309
    7. '   ' → logprob: -7.461089134216309
    8. ' ' → logprob: -7.836089134216309
    9. ' True' → logprob: -7.961089134216309
    10. ' ' → logprob: -8.086089134216309

Token 283: ' sé' (ID: 7462)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.05879070982336998
    2. ' judge' → logprob: -3.058790683746338
    3. 'condition' → logprob: -4.933790683746338
    4. ' condition' → logprob: -6.933790683746338
    5. 'jug' → logprob: -7.558790683746338
    6. 'jud' → logprob: -7.683790683746338
    7. ' juge' → logprob: -8.433791160583496
    8. ' ' → logprob: -9.183791160583496
    9. 'break' → logprob: -9.558791160583496
    10. '
' → logprob: -9.558791160583496

Token 284: 'quence' (ID: 6975)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.0031550228595733643
    2. 'quence' → logprob: -6.75315523147583
    3. 'jud' → logprob: -8.003154754638672
    4. 'r' → logprob: -8.003154754638672
    5. 'd' → logprob: -8.503154754638672
    6. '#' → logprob: -9.628154754638672
    7. ' judge' → logprob: -9.628154754638672
    8. 'jour' → logprob: -9.753154754638672
    9. 'udge' → logprob: -9.878154754638672
    10. 'u' → logprob: -9.878154754638672

Token 285: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021524403244256973
    2. ' n' → logprob: -4.396524429321289
    3. '=' → logprob: -5.896524429321289
    4. ' est' → logprob: -6.896524429321289
    5. ' ' → logprob: -7.021524429321289
    6. ' a' → logprob: -7.146524429321289
    7. ' s' → logprob: -7.146524429321289
    8. ' devient' → logprob: -7.271524429321289
    9. ' judge' → logprob: -7.646524429321289
    10. '=False' → logprob: -7.771524429321289

Token 286: ' répond' (ID: 35079)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.9074642062187195
    2. 'pas' → logprob: -1.6574642658233643
    3. '=' → logprob: -1.7824642658233643
    4. ' =' → logprob: -2.5324642658233643
    5. 'est' → logprob: -2.7824642658233643
    6. ' respecte' → logprob: -3.2824642658233643
    7. ' est' → logprob: -4.157464027404785
    8. ' sera' → logprob: -4.907464027404785
    9. 's' → logprob: -5.032464027404785
    10. ' continue' → logprob: -5.157464027404785

Token 287: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.05428922176361084
    2. 'pas' → logprob: -3.4292893409729004
    3. '<|end|>' → logprob: -5.3042893409729
    4. '=' → logprob: -5.8042893409729
    5. ' à' → logprob: -5.9292893409729
    6. 's' → logprob: -6.3042893409729
    7. '   ' → logprob: -6.4292893409729
    8. ' =' → logprob: -6.4292893409729
    9. '_pas' → logprob: -6.9292893409729
    10. ' a' → logprob: -7.1792893409729

Token 288: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2830357551574707
    2. '       ' → logprob: -2.6580357551574707
    3. '   ' → logprob: -2.9080357551574707
    4. ' =' → logprob: -3.1580357551574707
    5. ' au' → logprob: -4.158035755157471
    6. ' ' → logprob: -4.408035755157471
    7. ' a' → logprob: -4.783035755157471
    8. ' to' → logprob: -5.033035755157471
    9. '=' → logprob: -5.158035755157471
    10. '<|end|>' → logprob: -5.158035755157471

Token 289: ' la' (ID: 557)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.12698490917682648
    2. 'False' → logprob: -2.1269848346710205
    3. ' True' → logprob: -10.126984596252441
    4. ' judge' → logprob: -11.376984596252441
    5. 'True' → logprob: -12.501984596252441
    6. 'judge' → logprob: -13.751984596252441
    7. '=False' → logprob: -15.751984596252441
    8. '   ' → logprob: -16.251985549926758
    9. ' ' → logprob: -16.501985549926758
    10. '(False' → logprob: -16.626985549926758

Token 290: ' contr' (ID: 6030)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10100049525499344
    2. 'False' → logprob: -2.3510005474090576
    3. ' judge' → logprob: -7.6010003089904785
    4. ' True' → logprob: -8.851000785827637
    5. 'judge' → logprob: -8.976000785827637
    6. 'True' → logprob: -11.726000785827637
    7. ' condition' → logprob: -12.476000785827637
    8. ' false' → logprob: -12.976000785827637
    9. 'condition' → logprob: -13.601000785827637
    10. '=False' → logprob: -13.851000785827637

Token 291: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0020855467300862074
    2. 'a' → logprob: -6.2520856857299805
    3. 'ain' → logprob: -10.25208568572998
    4. 'aine' → logprob: -11.00208568572998
    5. '#' → logprob: -11.12708568572998
    6. '```' → logprob: -11.25208568572998
    7. 'aire' → logprob: -11.37708568572998
    8. '1' → logprob: -11.87708568572998
    9. 'aint' → logprob: -11.87708568572998
    10. 'e' → logprob: -12.25208568572998

Token 292: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004383959341794252
    2. '
' → logprob: -6.3793840408325195
    3. ',' → logprob: -7.1293840408325195
    4. '.' → logprob: -7.3793840408325195
    5. 'judge' → logprob: -7.5043840408325195
    6. '        
' → logprob: -8.50438404083252
    7. '.
' → logprob: -9.62938404083252
    8. '   ' → logprob: -9.75438404083252
    9. '           ' → logprob: -10.00438404083252
    10. ' judge' → logprob: -10.12938404083252

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0911908969283104
    2. 'judge' → logprob: -2.966190814971924
    3. ' judge' → logprob: -3.341190814971924
    4. '   ' → logprob: -9.716191291809082
    5. '        
' → logprob: -9.841191291809082
    6. '
' → logprob: -9.966191291809082
    7. '           ' → logprob: -10.716191291809082
    8. 'jud' → logprob: -10.966191291809082
    9. '```' → logprob: -11.091191291809082
    10. ' juge' → logprob: -11.216191291809082

Token 294: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' (adapté à ' judge') → logprob: -0.1070030927658081
    2. ' judge' → logprob: -2.6070032119750977
    3. '       ' → logprob: -3.6070032119750977
    4. 'jud' → logprob: -7.857003211975098
    5. 'jug' → logprob: -9.857003211975098
    6. '
' → logprob: -9.857003211975098
    7. '        
' → logprob: -10.607003211975098
    8. '   ' → logprob: -10.732003211975098
    9. ' juge' → logprob: -11.232003211975098
    10. '```' → logprob: -11.482003211975098

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021228343248367
    2. '=' → logprob: -2.350212335586548
    3. '=False' → logprob: -12.100212097167969
    4. ' ' → logprob: -16.85021209716797
    5. '=false' → logprob: -18.22521209716797
    6. '＝' → logprob: -18.35021209716797
    7. '=True' → logprob: -18.47521209716797
    8. ' =
' → logprob: -19.22521209716797
    9. 'False' → logprob: -19.35021209716797
    10. ' False' → logprob: -19.47521209716797

Token 296: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. '(False' → logprob: -18.518150329589844
    4. '=False' → logprob: -19.518150329589844
    5. '_false' → logprob: -20.643150329589844
    6. 'false' → logprob: -21.018150329589844
    7. 'F' → logprob: -21.518150329589844
    8. '   ' → logprob: -22.268150329589844
    9. '.False' → logprob: -22.393150329589844
    10. 'True' → logprob: -22.768150329589844

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001290454383706674
    2. '<|end|>' → logprob: -9.375128746032715
    3. '   ' → logprob: -10.875128746032715
    4. '	' → logprob: -11.750128746032715
    5. '      ' → logprob: -12.375128746032715
    6. '        
' → logprob: -12.500128746032715
    7. '    ' → logprob: -13.125128746032715
    8. '        ' → logprob: -13.125128746032715
    9. '           ' → logprob: -13.625128746032715
    10. ',' → logprob: -14.625128746032715

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.248469718324486e-05
    2. '	' → logprob: -11.625022888183594
    3. '   ' → logprob: -12.000022888183594
    4. '<|end|>' → logprob: -12.375022888183594
    5. '      ' → logprob: -14.125022888183594
    6. ' ' → logprob: -15.000022888183594
    7. '           ' → logprob: -15.000022888183594
    8. '        
' → logprob: -15.000022888183594
    9. '    ' → logprob: -15.125022888183594
    10. '    ' → logprob: -15.875022888183594

Token 299: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.179569077678025e-05
    2. 'break' → logprob: -10.625041961669922
    3. ' break' → logprob: -11.500041961669922
    4. '   ' → logprob: -12.875041961669922
    5. '	break' → logprob: -13.375041961669922
    6. '        
' → logprob: -14.000041961669922
    7. '	' → logprob: -14.125041961669922
    8. '      ' → logprob: -14.625041961669922
    9. '<|end|>' → logprob: -15.250041961669922
    10. '    ' → logprob: -15.625041961669922

Token 300: ' Util' (ID: 13564)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0035124069545418024
    2. '       ' → logprob: -6.128512382507324
    3. ' break' → logprob: -6.628512382507324
    4. '	break' → logprob: -13.003512382507324
    5. '   ' → logprob: -14.878512382507324
    6. '#' → logprob: -14.878512382507324
    7. '```' → logprob: -15.003512382507324
    8. '        
' → logprob: -15.128512382507324
    9. 'b' → logprob: -15.503512382507324
    10. 'breaker' → logprob: -15.628512382507324

Token 301: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.31994572281837463
    2. 'se' → logprob: -1.5699456930160522
    3. 'break' → logprob: -4.069945812225342
    4. 'iser' → logprob: -4.069945812225342
    5. 'ser' → logprob: -4.444945812225342
    6. 'isez' → logprob: -4.694945812225342
    7. 't' → logprob: -5.944945812225342
    8. 'isateur' → logprob: -6.444945812225342
    9. 'ze' → logprob: -7.069945812225342
    10. 'er' → logprob: -7.194945812225342

Token 302: ' '' (ID: 461)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3562085032463074
    2. '       ' → logprob: -1.6062085628509521
    3. ' break' → logprob: -3.106208562850952
    4. 'le' → logprob: -3.481208562850952
    5. ' un' → logprob: -4.981208324432373
    6. '   ' → logprob: -5.731208324432373
    7. 'b' → logprob: -5.981208324432373
    8. '
' → logprob: -6.231208324432373
    9. '```' → logprob: -6.481208324432373
    10. ' le' → logprob: -6.856208324432373

Token 303: 'break' (ID: 15354)
  Prédit: 'break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -6.704273118884885e-07
    2. ' break' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.5
    4. '       ' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. 'b' → logprob: -18.0
    7. 'br' → logprob: -18.875
    8. 'breaker' → logprob: -19.0
    9. '
' → logprob: -19.125
    10. 'breaking' → logprob: -19.375

Token 304: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' arrêter' (ID: 163206)
  Prédit: ' sortir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sortir' → logprob: -0.41427502036094666
    2. ' interrom' → logprob: -1.914275050163269
    3. ' quitter' → logprob: -2.0392749309539795
    4. ' arrêter' → logprob: -4.039275169372559
    5. 'stop' → logprob: -4.664275169372559
    6. 'sort' → logprob: -4.664275169372559
    7. ' stopper' → logprob: -5.039275169372559
    8. '       ' → logprob: -5.414275169372559
    9. ' stop' → logprob: -5.914275169372559
    10. '   ' → logprob: -6.289275169372559

Token 307: ' immédiatement' (ID: 100743)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2235645353794098
    2. '<|end|>' → logprob: -1.8485645055770874
    3. 'la' → logprob: -3.473564624786377
    4. ' the' → logprob: -5.723564624786377
    5. 'the' → logprob: -6.098564624786377
    6. 'le' → logprob: -6.223564624786377
    7. ' l' → logprob: -6.223564624786377
    8. ' le' → logprob: -6.973564624786377
    9. 'l' → logprob: -7.098564624786377
    10. '<|end|>' → logprob: -8.348564147949219

Token 309: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.09444919973611832
    2. ' boucle' → logprob: -2.594449281692505
    3. 'loop' → logprob: -4.219449043273926
    4. 'b' → logprob: -8.219449043273926
    5. 'for' → logprob: -8.344449043273926
    6. ' loop' → logprob: -9.219449043273926
    7. '
' → logprob: -9.719449043273926
    8. ' bou' → logprob: -10.469449043273926
    9. '```' → logprob: -11.469449043273926
    10. 'bo' → logprob: -11.844449043273926

Token 310: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ' il' (ID: 1793)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0872754454612732
    2. 'la' → logprob: -3.212275505065918
    3. ' on' → logprob: -4.087275505065918
    4. ' l' → logprob: -4.962275505065918
    5. ' le' → logprob: -5.462275505065918
    6. ' inutile' → logprob: -5.837275505065918
    7. ' nous' → logprob: -6.087275505065918
    8. 'l' → logprob: -6.462275505065918
    9. ' aucune' → logprob: -6.587275505065918
    10. 'on' → logprob: -6.837275505065918

Token 312: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20224395394325256
    2. 'n' → logprob: -1.7022439241409302
    3. 's' → logprob: -8.20224380493164
    4. ' no' → logprob: -8.82724380493164
    5. ' ne' → logprob: -9.07724380493164
    6. ' y' → logprob: -9.70224380493164
    7. ' est' → logprob: -9.95224380493164
    8. '#' → logprob: -10.45224380493164
    9. 'n't' → logprob: -10.45224380493164
    10. 'est' → logprob: -10.57724380493164

Token 313: ' inutile' (ID: 157748)
  Prédit: 'inut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inut' → logprob: -0.12714259326457977
    2. ' inutile' → logprob: -2.1271426677703857
    3. 'in' → logprob: -9.127142906188965
    4. 'utile' → logprob: -10.252142906188965
    5. ' inutil' → logprob: -10.877142906188965
    6. 'iné' → logprob: -11.127142906188965
    7. '       ' → logprob: -11.377142906188965
    8. '   ' → logprob: -11.627142906188965
    9. ' impossible' → logprob: -12.252142906188965
    10. 'ine' → logprob: -12.752142906188965

Token 314: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6462041735649109
    2. ' de' → logprob: -0.7712041735649109
    3. 'de' → logprob: -4.521203994750977
    4. ' d' → logprob: -7.021203994750977
    5. 'd' → logprob: -7.521203994750977
    6. '        ' → logprob: -7.646203994750977
    7. '    ' → logprob: -8.271203994750977
    8. '           ' → logprob: -8.521203994750977
    9. '   ' → logprob: -8.771203994750977
    10. '      ' → logprob: -10.521203994750977

Token 315: ''effect' (ID: 198544)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.096928596496582
    2. ' continuer' → logprob: -1.221928596496582
    3. ' poursuivre' → logprob: -1.846928596496582
    4. 'contin' → logprob: -2.971928596496582
    5. ' de' → logprob: -3.096928596496582
    6. 'e' → logprob: -3.846928596496582
    7. ''aller' → logprob: -3.971928596496582
    8. 's' → logprob: -4.221928596496582
    9. 'a' → logprob: -4.846928596496582
    10. 'continue' → logprob: -5.346928596496582

Token 316: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.0012157135643064976
    2. 'er' → logprob: -6.751215934753418
    3. 'rer' → logprob: -11.001215934753418
    4. 'u' → logprob: -11.126215934753418
    5. 'ure' → logprob: -13.001215934753418
    6. 'urer' → logprob: -13.126215934753418
    7. 're' → logprob: -13.251215934753418
    8. 'uez' → logprob: -13.626215934753418
    9. 'orer' → logprob: -13.626215934753418
    10. 'uating' → logprob: -13.626215934753418

Token 317: ' d' (ID: 272)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.1470929384231567
    2. ' la' → logprob: -1.2720929384231567
    3. ' toute' → logprob: -1.7720929384231567
    4. 'les' → logprob: -2.772092819213867
    5. 's' → logprob: -3.022092819213867
    6. ' any' → logprob: -3.147092819213867
    7. ' les' → logprob: -3.272092819213867
    8. ' further' → logprob: -4.897092819213867
    9. ' davantage' → logprob: -5.022092819213867
    10. '<|end|>' → logprob: -5.647092819213867

Token 318: ''autres' (ID: 38753)
  Prédit: ''autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''autres' → logprob: -0.0699833407998085
    2. 'es' → logprob: -3.3199832439422607
    3. 'e' → logprob: -3.5699832439422607
    4. '’autres' → logprob: -6.81998348236084
    5. ''aut' → logprob: -7.69498348236084
    6. ''autre' → logprob: -7.69498348236084
    7. 'aut' → logprob: -8.19498348236084
    8. '```' → logprob: -8.44498348236084
    9. ''autant' → logprob: -8.81998348236084
    10. ''av' → logprob: -8.81998348236084

Token 319: ' vér' (ID: 42524)
  Prédit: ' checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' checks' → logprob: -1.0407145023345947
    2. ' iterations' → logprob: -1.0407145023345947
    3. 'iterations' → logprob: -2.1657145023345947
    4. ' vér' → logprob: -2.4157145023345947
    5. '   ' → logprob: -4.040714263916016
    6. ' ' → logprob: -4.290714263916016
    7. ' it' → logprob: -4.415714263916016
    8. ' tests' → logprob: -4.540714263916016
    9. 'v' → logprob: -4.540714263916016
    10. 'it' → logprob: -5.415714263916016

Token 320: 'ifications' (ID: 9110)
  Prédit: 'ifications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifications' → logprob: -0.12617424130439758
    2. 'ifs' → logprob: -3.001174211502075
    3. 'ications' → logprob: -3.376174211502075
    4. 'if' → logprob: -4.001174449920654
    5. 'ifie' → logprob: -5.626174449920654
    6. 'ations' → logprob: -5.626174449920654
    7. 'ification' → logprob: -6.251174449920654
    8. 'ifes' → logprob: -6.626174449920654
    9. 'iefs' → logprob: -7.001174449920654
    10. 'actions' → logprob: -7.626174449920654

Token 321: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007312587113119662
    2. 'break' → logprob: -7.625731468200684
    3. ' break' → logprob: -9.125731468200684
    4. '           ' → logprob: -9.250731468200684
    5. '\n' → logprob: -11.500731468200684
    6. '   ' → logprob: -11.750731468200684
    7. '	break' → logprob: -12.000731468200684
    8. '	' → logprob: -12.750731468200684
    9. '        
' → logprob: -12.875731468200684
    10. '\' → logprob: -13.000731468200684

Token 323: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05989791080355644
    2. ' break' → logprob: -2.9348978996276855
    3. '       ' → logprob: -5.3098978996276855
    4. '	break' → logprob: -10.559898376464844
    5. 'b' → logprob: -10.809898376464844
    6. '   ' → logprob: -12.184898376464844
    7. '           ' → logprob: -13.059898376464844
    8. '```' → logprob: -13.184898376464844
    9. '        
' → logprob: -13.809898376464844
    10. 'Break' → logprob: -14.559898376464844

Token 324: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04687144607305527
    2. '

' → logprob: -3.7968714237213135
    3. 'print' → logprob: -4.171871662139893
    4. '
' → logprob: -5.796871662139893
    5. '\n' → logprob: -7.046871662139893
    6. 'if' → logprob: -7.171871662139893
    7. 'judge' → logprob: -7.171871662139893
    8. '  
' → logprob: -7.921871662139893
    9. '
        
' → logprob: -7.921871662139893
    10. '' → logprob: -8.296871185302734

Token 325: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009937762282788754
    2. 'if' → logprob: -4.884937763214111
    3. '
' → logprob: -6.259937763214111
    4. '```' → logprob: -8.384937286376953
    5. '  
' → logprob: -9.509937286376953
    6. 'judge' → logprob: -9.884937286376953
    7. '#' → logprob: -11.259937286376953
    8. '\n' → logprob: -11.384937286376953
    9. '    
' → logprob: -11.634937286376953
    10. ' 
' → logprob: -12.259937286376953

Token 326: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09966763854026794
    2. '
' → logprob: -2.599667549133301
    3. 'if' → logprob: -5.474667549133301
    4. '\n' → logprob: -5.724667549133301
    5. 'judge' → logprob: -5.849667549133301
    6. '    
' → logprob: -5.974667549133301
    7. '#' (adapté à ' #') → logprob: -6.099667549133301
    8. '```' → logprob: -6.724667549133301
    9. '<|end|>' → logprob: -6.849667549133301
    10. 'else' → logprob: -7.099667549133301

Token 327: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03985282778739929
    2. ' else' → logprob: -3.6648528575897217
    3. 'print' → logprob: -5.414852619171143
    4. 'judge' → logprob: -5.914852619171143
    5. 'pass' → logprob: -6.789852619171143
    6. 'continue' → logprob: -6.914852619171143
    7. '```' → logprob: -7.039852619171143
    8. '#' → logprob: -7.164852619171143
    9. 'if' → logprob: -7.289852619171143
    10. ' ' → logprob: -7.664852619171143

Token 328: ' l' (ID: 305)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0278828144073486
    2. ' h' → logprob: -1.1528828144073486
    3. 'h' → logprob: -1.5278828144073486
    4. 'not' → logprob: -2.4028828144073486
    5. ' judge' → logprob: -4.9028825759887695
    6. 'judge' → logprob: -5.1528825759887695
    7. ' ' → logprob: -7.1528825759887695
    8. ' no' → logprob: -7.4028825759887695
    9. ' l' → logprob: -7.6528825759887695
    10. ' __' → logprob: -7.7778825759887695

Token 329: ''' (ID: 6)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6947106719017029
    2. ' not' → logprob: -1.8197107315063477
    3. ' judge' → logprob: -1.8197107315063477
    4. 'h' → logprob: -2.5697107315063477
    5. ' ' → logprob: -3.5697107315063477
    6. 'i' → logprob: -3.6947107315063477
    7. ' else' → logprob: -4.444710731506348
    8. ' i' → logprob: -5.194710731506348
    9. 'else' → logprob: -5.319710731506348
    10. 'e' → logprob: -5.444710731506348

Token 330: 'élé' (ID: 15228)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.227013498544693
    2. 'i' → logprob: -2.47701358795166
    3. 'else' → logprob: -3.35201358795166
    4. ' h' → logprob: -3.85201358795166
    5. ' not' → logprob: -4.22701358795166
    6. 'judge' → logprob: -4.22701358795166
    7. 'not' → logprob: -4.35201358795166
    8. ' i' → logprob: -4.97701358795166
    9. 'elif' → logprob: -5.97701358795166
    10. ' judge' → logprob: -6.10201358795166

Token 331: 'ment' (ID: 508)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5475224852561951
    2. 'se' → logprob: -1.0475225448608398
    3. 'ment' → logprob: -3.04752254486084
    4. 'else' → logprob: -4.04752254486084
    5. 'elif' → logprob: -6.92252254486084
    6. '```' → logprob: -7.04752254486084
    7. '#' → logprob: -7.29752254486084
    8. 't' → logprob: -7.54752254486084
    9. 'lse' → logprob: -7.54752254486084
    10. ' if' → logprob: -7.92252254486084

Token 332: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3004341125488281
    2. '[' → logprob: -2.300434112548828
    3. 'h' → logprob: -2.925434112548828
    4. 'else' → logprob: -4.175434112548828
    5. 'i' → logprob: -4.300434112548828
    6. ' i' → logprob: -4.425434112548828
    7. '==' → logprob: -4.425434112548828
    8. ' h' → logprob: -4.675434112548828
    9. 's' → logprob: -4.800434112548828
    10. ' suivant' → logprob: -4.925434112548828

Token 333: ' n' (ID: 297)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2133975774049759
    2. ' ==' → logprob: -2.21339750289917
    3. '<=' → logprob: -3.08839750289917
    4. '==' → logprob: -3.83839750289917
    5. ' <' → logprob: -4.46339750289917
    6. ' >=' → logprob: -6.96339750289917
    7. '   ' → logprob: -7.46339750289917
    8. ' >' → logprob: -7.46339750289917
    9. 'else' → logprob: -7.46339750289917
    10. 'h' → logprob: -8.588397979736328

Token 334: ''est' (ID: 6616)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.9019904732704163
    2. '<=' → logprob: -1.1519904136657715
    3. ' pas' → logprob: -2.0269904136657715
    4. ' est' → logprob: -2.6519904136657715
    5. 'est' → logprob: -4.1519904136657715
    6. '>' → logprob: -4.5269904136657715
    7. '   ' → logprob: -4.7769904136657715
    8. 'pas' → logprob: -4.9019904136657715
    9. ' <' → logprob: -5.2769904136657715
    10. ' n' → logprob: -5.2769904136657715

Token 335: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.062439288944005966
    2. ' pas' → logprob: -2.812439203262329
    3. 'strict' → logprob: -8.68743896484375
    4. '_pas' → logprob: -9.81243896484375
    5. 't' → logprob: -9.93743896484375
    6. '>' → logprob: -10.18743896484375
    7. '#' → logprob: -10.31243896484375
    8. 'not' → logprob: -10.56243896484375
    9. 'p' → logprob: -10.56243896484375
    10. 's' → logprob: -11.06243896484375

Token 336: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28599491715431213
    2. 'strict' → logprob: -1.7859948873519897
    3. ' supérieur' → logprob: -2.7859950065612793
    4. ' >' → logprob: -5.160995006561279
    5. ' strict' → logprob: -5.285995006561279
    6. ' strictly' → logprob: -6.035995006561279
    7. 'greater' → logprob: -6.285995006561279
    8. 'sup' → logprob: -7.035995006561279
    9. 's' → logprob: -7.285995006561279
    10. ' greater' → logprob: -7.285995006561279

Token 337: ' mais' (ID: 2899)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.776293933391571
    2. 'à' → logprob: -0.901293933391571
    3. '<|end|>' → logprob: -2.401293992996216
    4. ',' → logprob: -4.151293754577637
    5. ' ' → logprob: -4.526293754577637
    6. '   ' → logprob: -5.151293754577637
    7. ' au' → logprob: -6.151293754577637
    8. '.' → logprob: -6.276293754577637
    9. 'au' → logprob: -6.651293754577637
    10. ')' → logprob: -6.651293754577637

Token 338: ' qu' (ID: 474)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.92789226770401
    2. 'égal' → logprob: -1.3028922080993652
    3. 'h' → logprob: -2.6778922080993652
    4. ' pas' → logprob: -2.9278922080993652
    5. 'strict' → logprob: -3.1778922080993652
    6. 's' → logprob: -3.1778922080993652
    7. 'pas' → logprob: -4.177892208099365
    8. ' ég' → logprob: -4.552892208099365
    9. 'diff' → logprob: -4.552892208099365
    10. ' equal' → logprob: -4.552892208099365

Token 339: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.5557956099510193
    2. 'e' → logprob: -1.180795669555664
    3. ''' → logprob: -2.430795669555664
    4. 'u' → logprob: -4.680795669555664
    5. ''au' → logprob: -5.180795669555664
    6. 'il' → logprob: -6.055795669555664
    7. ''un' → logprob: -6.180795669555664
    8. 'h' → logprob: -6.430795669555664
    9. ''on' → logprob: -6.555795669555664
    10. 'a' → logprob: -6.680795669555664

Token 340: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3424474000930786
    2. 'h' → logprob: -2.717447280883789
    3. '>' → logprob: -3.217447280883789
    4. 'est' → logprob: -3.467447280883789
    5. ' h' → logprob: -3.717447280883789
    6. ' y' → logprob: -4.092447280883789
    7. ' a' → logprob: -4.342447280883789
    8. 's' → logprob: -4.467447280883789
    9. '[' → logprob: -4.467447280883789
    10. ''est' → logprob: -4.592447280883789

Token 341: ' différent' (ID: 114823)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.7061396837234497
    2. 'égal' → logprob: -1.4561396837234497
    3. ' strict' → logprob: -2.08113956451416
    4. 'strict' → logprob: -2.58113956451416
    5. ' inférieur' → logprob: -4.08113956451416
    6. ' equal' → logprob: -4.45613956451416
    7. ' ég' → logprob: -4.83113956451416
    8. ' au' → logprob: -5.20613956451416
    9. '<' → logprob: -5.20613956451416
    10. 'exact' → logprob: -6.08113956451416

Token 342: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3536877930164337
    2. 'from' → logprob: -1.7286877632141113
    3. ' from' → logprob: -2.7286877632141113
    4. 'de' → logprob: -4.353687763214111
    5. ' du' → logprob: -4.478687763214111
    6. ' ' → logprob: -4.728687763214111
    7. ')' → logprob: -5.103687763214111
    8. '<|end|>' → logprob: -5.228687763214111
    9. ' des' → logprob: -5.478687763214111
    10. ' ' → logprob: -6.978687763214111

Token 343: ' suivant' (ID: 68705)
  Prédit: ' précédent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédent' → logprob: -0.7269945740699768
    2. 'élé' → logprob: -1.351994514465332
    3. 'h' → logprob: -1.601994514465332
    4. ' suivant' → logprob: -3.476994514465332
    5. 'su' → logprob: -4.976994514465332
    6. 'preced' → logprob: -5.101994514465332
    7. ' h' → logprob: -6.476994514465332
    8. 'pr' → logprob: -6.726994514465332
    9. ' élément' → logprob: -6.976994514465332
    10. ' ' → logprob: -6.976994514465332

Token 344: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4238777458667755
    2. '   ' → logprob: -1.9238777160644531
    3. ',' → logprob: -2.048877716064453
    4. 'and' → logprob: -2.798877716064453
    5. ':' → logprob: -5.548877716064453
    6. ' or' → logprob: -6.173877716064453
    7. ' ,' → logprob: -6.798877716064453
    8. 'elif' → logprob: -7.423877716064453
    9. ' elif' → logprob: -7.923877716064453
    10. ' ' → logprob: -8.048877716064453

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04745560139417648
    2. '       ' → logprob: -4.172455787658691
    3. ' elif' → logprob: -4.547455787658691
    4. ' and' → logprob: -4.922455787658691
    5. 'elif' → logprob: -5.797455787658691
    6. '    ' → logprob: -5.922455787658691
    7. ':' → logprob: -5.922455787658691
    8. ' continue' → logprob: -7.172455787658691
    9. ' or' → logprob: -7.172455787658691
    10. ' :' → logprob: -7.297455787658691

Token 346: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2931532859802246
    2. ' elif' → logprob: -2.7931532859802246
    3. ' continue' → logprob: -3.2931532859802246
    4. '    ' → logprob: -3.2931532859802246
    5. ' ' → logprob: -3.4181532859802246
    6. '       ' → logprob: -3.7931532859802246
    7. 'elif' → logprob: -3.9181532859802246
    8. ':' → logprob: -4.418153285980225
    9. ' :' → logprob: -5.168153285980225
    10. ' or' → logprob: -5.168153285980225

Token 347: ' cela' (ID: 17542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33224165439605713
    2. ' judge' → logprob: -2.4572415351867676
    3. '       ' → logprob: -2.7072415351867676
    4. '    ' → logprob: -3.7072415351867676
    5. ' continue' → logprob: -3.9572415351867676
    6. ' if' → logprob: -4.207241535186768
    7. 'judge' → logprob: -4.207241535186768
    8. ' elif' → logprob: -4.707241535186768
    9. 'elif' → logprob: -5.207241535186768
    10. '    
' → logprob: -5.582241535186768

Token 348: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9183204174041748
    2. '   ' → logprob: -0.9183204174041748
    3. '       ' → logprob: -2.793320417404175
    4. ' continue' → logprob: -3.918320417404175
    5. '    ' → logprob: -4.043320655822754
    6. ' else' → logprob: -4.043320655822754
    7. ' ' → logprob: -4.293320655822754
    8. ' judge' → logprob: -4.668320655822754
    9. ' n' → logprob: -4.918320655822754
    10. ' ' → logprob: -4.918320655822754

Token 349: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7833455801010132
    2. '   ' → logprob: -1.2833455801010132
    3. ' que' → logprob: -2.6583456993103027
    4. '    ' → logprob: -2.7833456993103027
    5. ' that' → logprob: -2.9083456993103027
    6. '"' → logprob: -4.408345699310303
    7. ',' → logprob: -4.658345699310303
    8. ' (' → logprob: -4.658345699310303
    9. ' ' → logprob: -4.658345699310303
    10. ''' → logprob: -5.158345699310303

Token 350: ''il' (ID: 14683)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5580295324325562
    2. '   ' → logprob: -1.5580295324325562
    3. 'h' → logprob: -1.9330295324325562
    4. '    ' → logprob: -3.8080296516418457
    5. ' ' → logprob: -4.183029651641846
    6. '  ' → logprob: -4.308029651641846
    7. ' judge' → logprob: -6.183029651641846
    8. ' que' → logprob: -6.308029651641846
    9. '<|end|>' → logprob: -6.308029651641846
    10. '       ' → logprob: -6.558029651641846

Token 351: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7721819877624512
    2. '   ' → logprob: -2.022181987762451
    3. ' continue' → logprob: -2.272181987762451
    4. ' +=' → logprob: -2.522181987762451
    5. '<|end|>' → logprob: -2.522181987762451
    6. ' n' → logprob: -2.647181987762451
    7. ' !=' → logprob: -2.647181987762451
    8. ' a' → logprob: -3.272181987762451
    9. '=' → logprob: -3.647181987762451
    10. ' =' → logprob: -3.772181987762451

Token 352: ' inférieur' (ID: 191498)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9462234973907471
    2. 'strict' → logprob: -1.571223497390747
    3. ' inférieur' → logprob: -2.196223497390747
    4. ' <' → logprob: -2.446223497390747
    5. ' strictly' → logprob: -2.696223497390747
    6. '<|end|>' → logprob: -2.821223497390747
    7. ' strict' → logprob: -3.946223497390747
    8. ' ' → logprob: -4.196223258972168
    9. 'h' → logprob: -4.571223258972168
    10. 'inf' → logprob: -5.196223258972168

Token 353: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2568003833293915
    2. ' or' → logprob: -2.006800413131714
    3. ' and' → logprob: -3.881800413131714
    4. ' ou' → logprob: -3.881800413131714
    5. ',' → logprob: -4.131800174713135
    6. '<|end|>' → logprob: -4.256800174713135
    7. '    ' → logprob: -5.256800174713135
    8. ' et' → logprob: -5.506800174713135
    9. ':' → logprob: -6.006800174713135
    10. ' ' → logprob: -6.131800174713135

Token 354: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5982062220573425
    2. '   ' → logprob: -1.2232062816619873
    3. ' continue' → logprob: -3.0982062816619873
    4. '    ' → logprob: -3.2232062816619873
    5. ' ' → logprob: -3.9732062816619873
    6. '<|end|>' → logprob: -4.973206043243408
    7. '        
' → logprob: -5.098206043243408
    8. 'continue' → logprob: -5.098206043243408
    9. ',' → logprob: -5.348206043243408
    10. ' ' → logprob: -5.723206043243408

Token 355: ' nous' (ID: 6176)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.1386573314666748
    2. '   ' → logprob: -3.138657331466675
    3. ' continue' → logprob: -3.388657331466675
    4. 'judge' → logprob: -3.388657331466675
    5. 'continue' → logprob: -4.763657569885254
    6. '    
' → logprob: -6.388657569885254
    7. '    ' → logprob: -6.763657569885254
    8. ' ' → logprob: -7.263657569885254
    9. '
' → logprob: -7.388657569885254
    10. ' 
' → logprob: -7.513657569885254

Token 356: ' procéd' (ID: 68020)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.222200408577919
    2. 'continue' → logprob: -2.347200393676758
    3. '       ' → logprob: -3.097200393676758
    4. '   ' → logprob: -3.597200393676758
    5. '    ' → logprob: -3.722200393676758
    6. ' ' → logprob: -6.847200393676758
    7. ' pass' → logprob: -7.347200393676758
    8. ' continuer' → logprob: -7.472200393676758
    9. 'contin' → logprob: -7.472200393676758
    10. '	continue' → logprob: -7.597200393676758

Token 357: 'ons' (ID: 1808)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6709124445915222
    2. 'ons' → logprob: -1.170912504196167
    3. 'e' → logprob: -3.170912504196167
    4. 'ent' → logprob: -3.420912504196167
    5. ' au' → logprob: -3.920912504196167
    6. ' =' → logprob: -4.170912265777588
    7. '=' → logprob: -4.545912265777588
    8. ' par' → logprob: -4.670912265777588
    9. 'er' → logprob: -4.795912265777588
    10. 'ure' → logprob: -5.545912265777588

Token 358: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18085531890392303
    2. ' continue' → logprob: -2.5558552742004395
    3. 'continue' → logprob: -3.3058552742004395
    4. '<|end|>' → logprob: -3.8058552742004395
    5. ' to' → logprob: -4.9308552742004395
    6. ' continues' → logprob: -5.6808552742004395
    7. '.' → logprob: -5.8058552742004395
    8. ' ' → logprob: -5.9308552742004395
    9. '   ' → logprob: -6.1808552742004395
    10. ' a' → logprob: -6.6808552742004395

Token 359: ' l' (ID: 305)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8998927474021912
    2. 'continue' → logprob: -0.8998927474021912
    3. 'i' → logprob: -2.899892807006836
    4. ' i' → logprob: -3.649892807006836
    5. ' judge' → logprob: -3.649892807006836
    6. '   ' → logprob: -3.774892807006836
    7. '1' → logprob: -4.149892807006836
    8. 'pass' → logprob: -4.524892807006836
    9. 'judge' → logprob: -4.649892807006836
    10. ' pass' → logprob: -5.649892807006836

Token 360: ''ét' (ID: 23771)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33316823840141296
    2. 'e' → logprob: -2.3331682682037354
    3. 'continue' → logprob: -2.5831682682037354
    4. '   ' → logprob: -3.2081682682037354
    5. 'a' → logprob: -4.333168029785156
    6. ' ' → logprob: -4.583168029785156
    7. ''' → logprob: -5.708168029785156
    8. 'else' → logprob: -5.833168029785156
    9. 'i' → logprob: -5.958168029785156
    10. ' indentation' → logprob: -5.958168029785156

Token 361: 'ape' (ID: 2480)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6643494367599487
    2. 'ape' → logprob: -0.7893494367599487
    3. ' continue' → logprob: -4.789349555969238
    4. 'er' → logprob: -5.164349555969238
    5. 'ier' → logprob: -5.414349555969238
    6. '_continue' → logprob: -5.914349555969238
    7. 'contin' → logprob: -6.789349555969238
    8. 'erm' → logprob: -6.789349555969238
    9. 'endre' → logprob: -7.164349555969238
    10. 'inue' → logprob: -7.164349555969238

Token 362: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.07637883722782135
    2. '   ' → logprob: -3.70137882232666
    3. ' +=' → logprob: -4.45137882232666
    4. '+=' → logprob: -4.95137882232666
    5. ' =' → logprob: -4.95137882232666
    6. '=' → logprob: -5.07637882232666
    7. '+' → logprob: -5.45137882232666
    8. ' à' → logprob: -6.20137882232666
    9. 'else' → logprob: -6.45137882232666
    10. ' de' → logprob: -7.07637882232666

Token 363: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052813172340393066
    2. ':' → logprob: -4.3028130531311035
    3. '       ' → logprob: -4.5528130531311035
    4. 'elif' → logprob: -4.6778130531311035
    5. ' or' → logprob: -4.6778130531311035
    6. ' elif' → logprob: -5.5528130531311035
    7. ' :' → logprob: -6.0528130531311035
    8. ',' → logprob: -7.9278130531311035
    9. ' and' → logprob: -7.9278130531311035
    10. '  ' → logprob: -8.177813529968262

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17643047869205475
    2. ' elif' → logprob: -2.1764304637908936
    3. 'elif' → logprob: -3.1764304637908936
    4. ' else' → logprob: -5.551430702209473
    5. 'else' → logprob: -7.301430702209473
    6. '```' → logprob: -7.301430702209473
    7. '    
' → logprob: -8.551430702209473
    8. ' 
' → logprob: -8.801430702209473
    9. '  ' → logprob: -8.801430702209473
    10. '    ' → logprob: -8.926430702209473

Token 365: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3689712882041931
    2. ' elif' → logprob: -1.743971347808838
    3. '   ' → logprob: -2.118971347808838
    4. 'else' → logprob: -4.618971347808838
    5. ' else' → logprob: -5.743971347808838
    6. 'if' → logprob: -8.99397087097168
    7. '```' → logprob: -9.49397087097168
    8. '       ' → logprob: -9.86897087097168
    9. '    ' → logprob: -9.99397087097168
    10. ' if' → logprob: -10.11897087097168

Token 366: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2812095582485199
    2. 'h' → logprob: -1.4062095880508423
    3. ' ' → logprob: -10.781209945678711
    4. '	h' → logprob: -11.531209945678711
    5. ' ' → logprob: -11.906209945678711
    6. '(h' → logprob: -12.406209945678711
    7. '   ' → logprob: -12.781209945678711
    8. '<h' → logprob: -12.968709945678711
    9. '[h' → logprob: -12.968709945678711
    10. 'not' → logprob: -13.093709945678711

Token 367: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003762786276638508
    2. '[' → logprob: -5.628762722015381
    3. ' [' → logprob: -8.753763198852539
    4. '   ' → logprob: -13.753763198852539
    5. '[h' → logprob: -13.753763198852539
    6. 'i' → logprob: -14.253763198852539
    7. ' ' → logprob: -14.503763198852539
    8. '[
' → logprob: -15.128763198852539
    9. '[j' → logprob: -15.378763198852539
    10. ' i' → logprob: -15.628763198852539

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007722675800323486
    2. '[i' → logprob: -6.257722854614258
    3. '<' → logprob: -6.382722854614258
    4. ' ]' → logprob: -6.507722854614258
    5. ' <' → logprob: -6.757722854614258
    6. '[' → logprob: -7.382722854614258
    7. ']<' → logprob: -7.632722854614258
    8. '+' → logprob: -8.382722854614258
    9. ']!=' → logprob: -11.007722854614258
    10. ' ' → logprob: -11.257722854614258

Token 369: ' !=' (ID: 1666)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10390105843544006
    2. '<' → logprob: -2.3539011478424072
    3. ' !=' → logprob: -5.853900909423828
    4. ' ' → logprob: -7.853900909423828
    5. '!=' → logprob: -8.103900909423828
    6. '[' → logprob: -10.478900909423828
    7. ' >' → logprob: -10.978900909423828
    8. ' ==' → logprob: -11.666400909423828
    9. ']' → logprob: -11.853900909423828
    10. '<h' → logprob: -12.166400909423828

Token 370: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12693293392658234
    2. ' h' → logprob: -2.1269328594207764
    3. '	h' → logprob: -12.751933097839355
    4. ' ' → logprob: -14.251933097839355
    5. '[h' → logprob: -14.251933097839355
    6. '   ' → logprob: -15.626933097839355
    7. '0' → logprob: -15.876933097839355
    8. '<h' → logprob: -15.876933097839355
    9. '"h' → logprob: -16.75193214416504
    10. 'i' → logprob: -16.75193214416504

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0026454562321305275
    2. '+' → logprob: -6.127645492553711
    3. '[' → logprob: -7.752645492553711
    4. ' [' → logprob: -11.002645492553711
    5. ' +' → logprob: -12.377645492553711
    6. ']' → logprob: -13.127645492553711
    7. '[j' → logprob: -13.252645492553711
    8. '+i' → logprob: -13.877645492553711
    9. 'i' → logprob: -14.002645492553711
    10. '[I' → logprob: -14.002645492553711

Token 372: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6329842209815979
    2. ' +' → logprob: -0.7579842209815979
    3. ']' → logprob: -9.007984161376953
    4. '[i' → logprob: -9.132984161376953
    5. '[' → logprob: -9.632984161376953
    6. '1' → logprob: -10.382984161376953
    7. ']+' → logprob: -10.757984161376953
    8. ' ' → logprob: -11.632984161376953
    9. 'i' → logprob: -12.257984161376953
    10. '   ' → logprob: -12.382984161376953

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000264315924141556
    2. ' ' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.500264167785645
    4. '  ' → logprob: -15.125264167785645
    5. '
' → logprob: -15.375264167785645
    6. '```' → logprob: -15.437764167785645
    7. ']' → logprob: -15.875264167785645
    8. '[' → logprob: -16.62526512145996
    9. ' ' → logprob: -16.75026512145996
    10. '+' → logprob: -16.81276512145996

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -15.31253719329834
    4. '
' → logprob: -15.50003719329834
    5. 'i' → logprob: -15.56253719329834
    6. '```' → logprob: -15.68753719329834
    7. ']' → logprob: -16.250036239624023
    8. 'h' → logprob: -16.687536239624023
    9. '+' → logprob: -16.875036239624023
    10. '

' → logprob: -17.125036239624023

Token 375: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1579330861568451
    2. ':
' → logprob: -2.407932996749878
    3. '):
' → logprob: -3.532932996749878
    4. '):' → logprob: -4.407933235168457
    5. ']:' → logprob: -4.907933235168457
    6. ']:
' → logprob: -5.407933235168457
    7. '   ' → logprob: -6.657933235168457
    8. '       ' → logprob: -7.157933235168457
    9. ' and' → logprob: -7.782933235168457
    10. ' :' → logprob: -9.532933235168457

Token 376: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2712149918079376
    2. '       ' → logprob: -1.8962149620056152
    3. 'h' → logprob: -2.8962149620056152
    4. 'judge' → logprob: -4.396214962005615
    5. ' judge' → logprob: -5.271214962005615
    6. 'n' → logprob: -5.521214962005615
    7. ' h' → logprob: -5.521214962005615
    8. 'continue' → logprob: -6.646214962005615
    9. '   ' → logprob: -6.896214962005615
    10. '```' → logprob: -7.896214962005615

Token 377: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.4180930852890015
    2. '       ' → logprob: -1.4180930852890015
    3. '   ' → logprob: -1.6680930852890015
    4. ' h' → logprob: -2.793093204498291
    5. 'continue' → logprob: -2.793093204498291
    6. ' continue' → logprob: -3.043093204498291
    7. ' judge' → logprob: -3.043093204498291
    8. 'judge' → logprob: -3.043093204498291
    9. 'n' → logprob: -4.043093204498291
    10. '        
' → logprob: -4.668093204498291

Token 378: ' On' (ID: 2160)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.14302568137645721
    2. 'judge' → logprob: -2.3930256366729736
    3. 'continue' → logprob: -3.6430256366729736
    4. 'pass' → logprob: -5.518025875091553
    5. 'print' → logprob: -5.518025875091553
    6. 'break' → logprob: -5.518025875091553
    7. 'j' → logprob: -6.768025875091553
    8. 'n' → logprob: -7.643025875091553
    9. 'if' → logprob: -7.768025875091553
    10. '   ' → logprob: -8.393025398254395

Token 379: ' décr' (ID: 123041)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.29297077655792236
    2. 'break' → logprob: -2.167970657348633
    3. 'judge' → logprob: -2.792970657348633
    4. 'continue' → logprob: -2.917970657348633
    5. ' h' → logprob: -5.042970657348633
    6. '   ' → logprob: -5.292970657348633
    7. 'pass' → logprob: -5.667970657348633
    8. ' judge' → logprob: -6.292970657348633
    9. ' continue' → logprob: -6.917970657348633
    10. 'i' → logprob: -7.042970657348633

Token 380: 'é' (ID: 377)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.3097914755344391
    2. 'ément' → logprob: -2.1847915649414062
    3. 'ase' → logprob: -2.8097915649414062
    4. 'é' → logprob: -3.5597915649414062
    5. 'ment' → logprob: -4.434791564941406
    6. 'h' → logprob: -4.559791564941406
    7. 'ease' → logprob: -4.684791564941406
    8. 'e' → logprob: -4.809791564941406
    9. 'ent' → logprob: -5.184791564941406
    10. '   ' → logprob: -5.184791564941406

Token 381: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.04347275197505951
    2. 'ment' → logprob: -3.4184727668762207
    3. 'nte' → logprob: -5.168472766876221
    4. 'm' → logprob: -5.793472766876221
    5. 'n' → logprob: -8.168472290039062
    6. 'men' → logprob: -8.918472290039062
    7. 'mented' → logprob: -9.168472290039062
    8. 'me' → logprob: -9.168472290039062
    9. 'mental' → logprob: -9.168472290039062
    10. 'ments' → logprob: -9.293472290039062

Token 382: ' l' (ID: 305)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004976287018507719
    2. ' h' → logprob: -7.625497817993164
    3. '
' → logprob: -13.000497817993164
    4. 's' → logprob: -13.625497817993164
    5. '   ' → logprob: -13.750497817993164
    6. '	h' → logprob: -13.875497817993164
    7. '[h' → logprob: -14.500497817993164
    8. ' 
' → logprob: -14.625497817993164
    9. 'a' → logprob: -14.625497817993164
    10. '[' → logprob: -14.875497817993164

Token 383: ''' (ID: 6)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09574203938245773
    2. '[i' → logprob: -2.7207419872283936
    3. '[' → logprob: -4.345742225646973
    4. '[
' → logprob: -4.970742225646973
    5. '[h' → logprob: -6.095742225646973
    6. 'i' → logprob: -7.095742225646973
    7. 's' → logprob: -7.720742225646973
    8. ' h' → logprob: -7.845742225646973
    9. '```' → logprob: -8.345742225646973
    10. '[next' → logprob: -8.470742225646973

Token 384: 'élé' (ID: 15228)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.282920129597187e-05
    2. ' h' → logprob: -11.375012397766113
    3. '	h' → logprob: -15.125012397766113
    4. ''h' → logprob: -15.250012397766113
    5. '   ' → logprob: -15.375012397766113
    6. 'a' → logprob: -15.750012397766113
    7. '[h' → logprob: -16.50001335144043
    8. 'hi' → logprob: -17.00001335144043
    9. '```' → logprob: -17.00001335144043
    10. '"h' → logprob: -17.18751335144043

Token 385: 'ment' (ID: 508)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.3921421766281128
    2. 'nt' → logprob: -1.3921421766281128
    3. '[h' → logprob: -1.6421421766281128
    4. '[i' → logprob: -1.7671421766281128
    5. 't' → logprob: -2.7671422958374023
    6. 'ment' → logprob: -3.8921422958374023
    7. '[' → logprob: -4.017142295837402
    8. 'ments' → logprob: -4.892142295837402
    9. 'nts' → logprob: -5.642142295837402
    10. 'n' → logprob: -5.642142295837402

Token 386: ' suivant' (ID: 68705)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.706078052520752
    2. '[i' → logprob: -1.081078052520752
    3. 'h' → logprob: -2.081078052520752
    4. '[' → logprob: -3.956078052520752
    5. '[h' → logprob: -4.581078052520752
    6. '[next' → logprob: -6.206078052520752
    7. '<|end|>' → logprob: -6.331078052520752
    8. '   ' → logprob: -6.331078052520752
    9. ' h' → logprob: -6.706078052520752
    10. '[s' → logprob: -7.206078052520752

Token 387: ' de' (ID: 334)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13871140778064728
    2. ' h' → logprob: -2.888711452484131
    3. '       ' → logprob: -3.763711452484131
    4. ' =' → logprob: -4.388711452484131
    5. '           ' → logprob: -4.763711452484131
    6. '[' → logprob: -5.138711452484131
    7. '[i' → logprob: -5.513711452484131
    8. '=' → logprob: -6.013711452484131
    9. '```' → logprob: -6.138711452484131
    10. '   ' → logprob: -6.138711452484131

Token 388: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054931484162807465
    2. ' ' → logprob: -2.929931402206421
    3. '<|end|>' → logprob: -11.179931640625
    4. '```' → logprob: -11.554931640625
    5. 'h' → logprob: -11.679931640625
    6. ' one' → logprob: -11.929931640625
    7. '   ' → logprob: -13.429931640625
    8. ' a' → logprob: -13.554931640625
    9. ' h' → logprob: -13.679931640625
    10. '2' → logprob: -13.804931640625

Token 389: ' liste' (ID: 31719)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005243833642452955
    2. ' ' → logprob: -5.25524377822876
    3. '   ' → logprob: -13.005244255065918
    4. '```' → logprob: -13.130244255065918
    5. '<|end|>' → logprob: -13.380244255065918
    6. ' ' → logprob: -13.880244255065918
    7. 'value' → logprob: -14.380244255065918
    8. '`' → logprob: -14.755244255065918
    9. '2' → logprob: -14.755244255065918
    10. '  ' → logprob: -15.255244255065918

Token 390: ' '' (ID: 461)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1452362984418869
    2. '[' → logprob: -3.0202362537384033
    3. ' h' → logprob: -3.2702362537384033
    4. '[i' → logprob: -3.2702362537384033
    5. '[h' → logprob: -5.520236492156982
    6. ' [' → logprob: -5.895236492156982
    7. '   ' → logprob: -6.770236492156982
    8. 's' → logprob: -7.270236492156982
    9. '       ' → logprob: -8.270236015319824
    10. '```' → logprob: -8.395236015319824

Token 391: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0008124859305098653
    2. ' h' → logprob: -7.125812530517578
    3. ''h' → logprob: -12.250812530517578
    4. 's' → logprob: -14.375812530517578
    5. '[h' → logprob: -14.625812530517578
    6. '`' → logprob: -14.750812530517578
    7. '[' → logprob: -15.125812530517578
    8. '_h' → logprob: -15.125812530517578
    9. '```' → logprob: -15.125812530517578
    10. '   ' → logprob: -15.500812530517578

Token 392: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002607879461720586
    2. '[' → logprob: -6.252607822418213
    3. '       ' → logprob: -7.752607822418213
    4. '           ' → logprob: -8.502608299255371
    5. '[h' → logprob: -11.252608299255371
    6. '   ' → logprob: -11.377608299255371
    7. '[j' → logprob: -12.627608299255371
    8. ' [' → logprob: -12.627608299255371
    9. ',' → logprob: -13.377608299255371
    10. '[
' → logprob: -13.377608299255371

Token 393: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23333218693733215
    2. '[' → logprob: -1.7333321571350098
    3. 'h' → logprob: -4.73333215713501
    4. '       ' → logprob: -4.98333215713501
    5. '           ' → logprob: -5.23333215713501
    6. '[h' → logprob: -5.23333215713501
    7. '[-' → logprob: -6.73333215713501
    8. '   ' → logprob: -6.73333215713501
    9. '```' → logprob: -6.73333215713501
    10. ' [' → logprob: -7.85833215713501

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.504620552062988
    4. ' ' → logprob: -16.629621505737305
    5. ' one' → logprob: -17.254621505737305
    6. '<|end|>' → logprob: -17.379621505737305
    7. '  ' → logprob: -17.504621505737305
    8. '    ' → logprob: -17.879621505737305
    9. '
' → logprob: -18.004621505737305
    10. '2' → logprob: -18.129621505737305

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -18.375001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '```' → logprob: -19.750001907348633
    6. '2' → logprob: -19.875001907348633
    7. 'one' → logprob: -20.625001907348633
    8. '
' → logprob: -20.875001907348633
    9. '１' → logprob: -21.750001907348633
    10. '۱' → logprob: -21.750001907348633

Token 396: ' unité' (ID: 181741)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058048930019140244
    2. '
' → logprob: -3.058048963546753
    3. 'h' → logprob: -5.683048725128174
    4. '           ' → logprob: -5.683048725128174
    5. '        
' → logprob: -7.058048725128174
    6. '   ' → logprob: -7.558048725128174
    7. ' h' → logprob: -7.558048725128174
    8. ',' → logprob: -9.308049201965332
    9. '               ' → logprob: -9.433049201965332
    10. '
' → logprob: -9.433049201965332

Token 397: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030727831181138754
    2. '           ' → logprob: -6.253072738647461
    3. 'h' → logprob: -7.128072738647461
    4. ' h' → logprob: -9.253072738647461
    5. ',' → logprob: -9.753072738647461
    6. '   ' → logprob: -10.128072738647461
    7. '
' → logprob: -10.253072738647461
    8. '```' → logprob: -10.753072738647461
    9. '.' → logprob: -11.003072738647461
    10. '        
' → logprob: -11.253072738647461

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051873899064958096
    2. ' h' → logprob: -6.630187511444092
    3. '           ' → logprob: -7.005187511444092
    4. 'h' → logprob: -7.130187511444092
    5. '<|end|>' → logprob: -7.130187511444092
    6. '   ' → logprob: -7.630187511444092
    7. ' ' → logprob: -8.255187034606934
    8. '        
' → logprob: -8.630187034606934
    9. ' 
' → logprob: -9.130187034606934
    10. '```' → logprob: -9.630187034606934

Token 399: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3424524962902069
    2. '       ' → logprob: -1.4674525260925293
    3. ' h' → logprob: -2.9674525260925293
    4. '           ' → logprob: -5.092452526092529
    5. '   ' → logprob: -6.592452526092529
    6. '	h' → logprob: -7.842452526092529
    7. '```' → logprob: -10.842452049255371
    8. '	   ' → logprob: -10.967452049255371
    9. ' ' → logprob: -10.967452049255371
    10. '               ' → logprob: -11.342452049255371

Token 400: ' Cela' (ID: 44403)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1230718195438385
    2. '       ' → logprob: -2.4980719089508057
    3. ' h' → logprob: -3.9980719089508057
    4. '   ' → logprob: -4.373071670532227
    5. '           ' → logprob: -6.248071670532227
    6. '	h' → logprob: -7.748071670532227
    7. '```' → logprob: -9.123071670532227
    8. '    ' → logprob: -10.373071670532227
    9. '        ' → logprob: -10.623071670532227
    10. ' ' → logprob: -11.623071670532227

Token 401: ' ajuste' (ID: 94049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5135537981987
    2. '<|end|>' → logprob: -1.3885538578033447
    3. ' h' → logprob: -2.6385538578033447
    4. ' 
' → logprob: -3.5135538578033447
    5. ' =' → logprob: -5.263553619384766
    6. '    ' → logprob: -5.513553619384766
    7. '   ' → logprob: -5.638553619384766
    8. ' )' → logprob: -5.638553619384766
    9. '       ' → logprob: -5.763553619384766
    10. ' ' → logprob: -5.888553619384766

Token 402: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.12771759927272797
    2. 'h' → logprob: -2.1277174949645996
    3. ' ' → logprob: -8.002717971801758
    4. '	h' → logprob: -8.877717971801758
    5. '(h' → logprob: -9.627717971801758
    6. ')' → logprob: -9.877717971801758
    7. 's' → logprob: -9.877717971801758
    8. ' 
' → logprob: -10.377717971801758
    9. ' the' → logprob: -10.502717971801758
    10. ' ' → logprob: -11.002717971801758

Token 403: ' sé' (ID: 7462)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002248388482257724
    2. ' h' → logprob: -6.127248287200928
    3. 'value' → logprob: -11.252248764038086
    4. ' value' → logprob: -11.502248764038086
    5. ' next' → logprob: -11.752248764038086
    6. 'next' → logprob: -12.127248764038086
    7. '   ' → logprob: -12.127248764038086
    8. 'élé' → logprob: -12.627248764038086
    9. ' ' → logprob: -12.752248764038086
    10. 's' → logprob: -13.752248764038086

Token 404: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.7014437364414334e-05
    2. 'q' → logprob: -11.37502670288086
    3. 'quences' → logprob: -11.87502670288086
    4. 'quent' → logprob: -12.37502670288086
    5. 'QUENCE' → logprob: -13.00002670288086
    6. 'qu' → logprob: -14.50002670288086
    7. 'h' → logprob: -14.62502670288086
    8. '   ' → logprob: -14.87502670288086
    9. '#' → logprob: -15.25002670288086
    10. 'lection' → logprob: -15.62502670288086

Token 405: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9238408803939819
    2. '       ' → logprob: -1.298840880393982
    3. 'h' → logprob: -1.423840880393982
    4. ' h' → logprob: -2.7988409996032715
    5. '[h' → logprob: -5.1738409996032715
    6. '           ' → logprob: -5.5488409996032715
    7. '[' → logprob: -5.5488409996032715
    8. ',' → logprob: -6.0488409996032715
    9. '.' → logprob: -6.2988409996032715
    10. '[i' → logprob: -6.5488409996032715

Token 406: ' la' (ID: 557)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -1.0526721477508545
    2. 'h' → logprob: -2.1776721477508545
    3. ' essayer' → logprob: -2.4276721477508545
    4. ' garantir' → logprob: -2.8026721477508545
    5. ' h' → logprob: -2.8026721477508545
    6. ' rendre' → logprob: -3.0526721477508545
    7. ' empêcher' → logprob: -3.3026721477508545
    8. ' permettre' → logprob: -3.6776721477508545
    9. ' maintenir' → logprob: -3.8026721477508545
    10. '```' → logprob: -4.052672386169434

Token 407: ' comparer' (ID: 125081)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.1580339670181274
    2. 'maint' → logprob: -2.783033847808838
    3. '```' → logprob: -2.783033847808838
    4. ' garantir' → logprob: -3.033033847808838
    5. '   ' → logprob: -3.408033847808838
    6. 's' → logprob: -3.408033847808838
    7. 'continue' → logprob: -3.533033847808838
    8. ' permettre' → logprob: -3.533033847808838
    9. 'su' → logprob: -3.533033847808838
    10. '       ' → logprob: -3.658033847808838

Token 408: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4359580278396606
    2. ' à' → logprob: -1.4359580278396606
    3. '   ' → logprob: -2.435957908630371
    4. ' afin' → logprob: -2.685957908630371
    5. ' de' → logprob: -2.810957908630371
    6. ',' → logprob: -2.810957908630371
    7. ' h' → logprob: -3.185957908630371
    8. '[i' → logprob: -3.435957908630371
    9. '.' → logprob: -3.685957908630371
    10. ' correctement' → logprob: -3.935957908630371

Token 409: ' nouveau' (ID: 23184)
  Prédit: ' manière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manière' → logprob: -0.7497468590736389
    2. 'fa' → logprob: -1.4997467994689941
    3. ' façon' → logprob: -1.8747467994689941
    4. 'man' → logprob: -2.624746799468994
    5. 'la' → logprob: -4.499746799468994
    6. 'i' → logprob: -4.874746799468994
    7. 'future' → logprob: -5.124746799468994
    8. ' la' → logprob: -5.249746799468994
    9. 'fac' → logprob: -5.374746799468994
    10. 'pro' → logprob: -5.374746799468994

Token 410: ' lors' (ID: 15456)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0104362964630127
    2. 'h' → logprob: -1.3854362964630127
    3. '   ' → logprob: -2.2604362964630127
    4. '       ' → logprob: -2.5104362964630127
    5. ',' → logprob: -2.7604362964630127
    6. '.' → logprob: -3.3854362964630127
    7. ')' → logprob: -3.5104362964630127
    8. '<|end|>' → logprob: -3.6354362964630127
    9. '           ' → logprob: -4.760436058044434
    10. '[' → logprob: -5.260436058044434

Token 411: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1441437304019928
    2. '   ' → logprob: -2.51914381980896
    3. ' du' → logprob: -3.89414381980896
    4. ' la' → logprob: -4.644143581390381
    5. ' suivante' → logprob: -4.769143581390381
    6. 'de' → logprob: -5.269143581390381
    7. 'a' → logprob: -6.269143581390381
    8. '<|end|>' → logprob: -6.394143581390381
    9. ' prochaine' → logprob: -7.019143581390381
    10. 'i' → logprob: -7.644143581390381

Token 412: ' prochain' (ID: 52413)
  Prédit: ' prochain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochain' → logprob: -0.6774923801422119
    2. 'pro' → logprob: -1.177492380142212
    3. 'tour' → logprob: -2.677492380142212
    4. ' passage' → logprob: -3.427492380142212
    5. 'next' → logprob: -3.427492380142212
    6. ' prochaine' → logprob: -3.677492380142212
    7. 'pass' → logprob: -4.302492141723633
    8. ' tour' → logprob: -5.677492141723633
    9. ' next' → logprob: -6.052492141723633
    10. 'i' → logprob: -6.427492141723633

Token 413: ' passage' (ID: 26368)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8647179007530212
    2. ' ' → logprob: -1.364717960357666
    3. 'i' → logprob: -1.489717960357666
    4. ' for' → logprob: -3.114717960357666
    5. ' iteration' → logprob: -3.364717960357666
    6. 'for' → logprob: -4.489717960357666
    7. ' passage' → logprob: -6.864717960357666
    8. '[i' → logprob: -6.989717960357666
    9. '+' → logprob: -7.239717960357666
    10. 'iteration' → logprob: -7.364717960357666

Token 414: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27163270115852356
    2. '           ' → logprob: -2.271632671356201
    3. 'h' → logprob: -2.896632671356201
    4. '   ' → logprob: -3.021632671356201
    5. ' h' → logprob: -4.021632671356201
    6. '[' → logprob: -5.521632671356201
    7. ',' → logprob: -6.521632671356201
    8. ')' → logprob: -7.021632671356201
    9. '```' → logprob: -7.021632671356201
    10. '.' → logprob: -7.271632671356201

Token 415: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5914722084999084
    2. 'la' → logprob: -0.8414722084999084
    3. 'the' → logprob: -5.091472148895264
    4. 'for' → logprob: -5.841472148895264
    5. 'l' → logprob: -5.966472148895264
    6. ' the' → logprob: -6.091472148895264
    7. 'le' → logprob: -7.841472148895264
    8. '```' → logprob: -7.966472148895264
    9. ' for' → logprob: -8.591472625732422
    10. '<|end|>' → logprob: -8.841472625732422

Token 416: ' boucle' (ID: 174211)
  Prédit: ' boucle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.34120437502861023
    2. 'for' → logprob: -1.7162044048309326
    3. 'bou' → logprob: -2.9662044048309326
    4. ' loop' → logprob: -3.5912044048309326
    5. 'loop' → logprob: -4.0912041664123535
    6. ' for' → logprob: -4.5912041664123535
    7. 'b' → logprob: -6.8412041664123535
    8. ' ' → logprob: -6.9662041664123535
    9. ' bou' → logprob: -6.9662041664123535
    10. '```' → logprob: -9.716204643249512

Token 417: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.159245252609253
    2. '       ' → logprob: -1.534245252609253
    3. ' h' → logprob: -2.034245252609253
    4. 'h' → logprob: -2.284245252609253
    5. ')' → logprob: -2.409245252609253
    6. ' ' → logprob: -3.159245252609253
    7. ' 
' → logprob: -3.784245252609253
    8. '[' → logprob: -4.034245491027832
    9. '<|end|>' → logprob: -4.284245491027832
    10. '    ' → logprob: -4.784245491027832

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007014913950115442
    2. 'h' → logprob: -6.382014751434326
    3. '	' → logprob: -6.632014751434326
    4. '   ' → logprob: -7.007014751434326
    5. '           ' → logprob: -7.257014751434326
    6. ' ' → logprob: -7.507014751434326
    7. ' ' → logprob: -7.882014751434326
    8. '        ' → logprob: -8.507015228271484
    9. ' h' → logprob: -8.507015228271484
    10. '        
' → logprob: -8.632015228271484

Token 419: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036146026104688644
    2. '           ' → logprob: -4.78614616394043
    3. ' ' → logprob: -4.91114616394043
    4. 'h' → logprob: -5.28614616394043
    5. '   ' → logprob: -5.66114616394043
    6. ' h' → logprob: -5.66114616394043
    7. '        ' → logprob: -6.16114616394043
    8. ' 
' → logprob: -6.66114616394043
    9. '    ' → logprob: -6.78614616394043
    10. '        
' → logprob: -6.78614616394043

Token 420: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6151372790336609
    2. ' 
' → logprob: -1.8651373386383057
    3. ' h' → logprob: -1.9901373386383057
    4. '<|end|>' → logprob: -2.7401373386383057
    5. '       ' → logprob: -3.2401373386383057
    6. 'h' → logprob: -3.7401373386383057
    7. '   ' → logprob: -4.865137100219727
    8. 'i' → logprob: -4.990137100219727
    9. ' ' → logprob: -5.615137100219727
    10. ' )' → logprob: -5.740137100219727

Token 421: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.639896273612976
    2. ' h' → logprob: -1.889896273612976
    3. '   ' → logprob: -1.889896273612976
    4. '    ' → logprob: -2.1398963928222656
    5. ' la' → logprob: -2.5148963928222656
    6. ' le' → logprob: -2.7648963928222656
    7. 'h' → logprob: -3.1398963928222656
    8. ' l' → logprob: -3.3898963928222656
    9. ' ' → logprob: -3.5148963928222656
    10. ' the' → logprob: -3.8898963928222656

Token 422: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.5713632106781006
    2. ' code' → logprob: -2.5713632106781006
    3. 'but' → logprob: -2.5713632106781006
    4. ' next' → logprob: -2.9463632106781006
    5. 'for' → logprob: -3.0713632106781006
    6. '```' → logprob: -3.4463632106781006
    7. '#' → logprob: -3.5713632106781006
    8. ' for' → logprob: -4.32136344909668
    9. ' prochain' → logprob: -4.32136344909668
    10. 'h' → logprob: -4.44636344909668

Token 423: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08673004806041718
    2. ' d' → logprob: -2.5867300033569336
    3. '    ' → logprob: -6.211730003356934
    4. 'de' → logprob: -6.211730003356934
    5. 'd' → logprob: -6.461730003356934
    6. '<|end|>' → logprob: -6.836730003356934
    7. ' ' → logprob: -7.836730003356934
    8. ' of' → logprob: -8.211730003356934
    9. '   ' → logprob: -8.211730003356934
    10. '        ' → logprob: -10.086730003356934

Token 424: ' satisfaire' (ID: 156594)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.7843418121337891
    2. 'r' → logprob: -2.034341812133789
    3. ' rendre' → logprob: -2.784341812133789
    4. 's' → logprob: -2.909341812133789
    5. 'min' → logprob: -3.159341812133789
    6. 'év' → logprob: -3.659341812133789
    7. 'ré' → logprob: -3.909341812133789
    8. 'pré' → logprob: -4.159341812133789
    9. ' maintenir' → logprob: -4.159341812133789
    10. 'la' → logprob: -4.284341812133789

Token 425: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07436669617891312
    2. 'la' → logprob: -2.699366807937622
    3. '       ' → logprob: -6.574366569519043
    4. 'the' → logprob: -7.199366569519043
    5. ' the' → logprob: -7.449366569519043
    6. 'le' → logprob: -7.824366569519043
    7. '   ' → logprob: -8.074366569519043
    8. 'h' → logprob: -8.699366569519043
    9. 'l' → logprob: -8.824366569519043
    10. ' à' → logprob: -8.949366569519043

Token 426: ' certaine' (ID: 91318)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.73439621925354
    2. 'contr' → logprob: -1.73439621925354
    3. 'possible' → logprob: -2.48439621925354
    4. 'constraint' → logprob: -3.10939621925354
    5. ' condition' → logprob: -3.35939621925354
    6. 'strict' → logprob: -3.73439621925354
    7. 'des' → logprob: -3.98439621925354
    8. 'continue' → logprob: -4.109395980834961
    9. ' possible' → logprob: -4.234395980834961
    10. ' des' → logprob: -4.484395980834961

Token 427: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.23031528294086456
    2. 'contr' → logprob: -1.6053153276443481
    3. 'cond' → logprob: -6.230315208435059
    4. ' condition' → logprob: -6.980315208435059
    5. ' contr' → logprob: -7.480315208435059
    6. 'con' → logprob: -8.230315208435059
    7. 'contra' → logprob: -8.230315208435059
    8. 'constraint' → logprob: -8.605315208435059
    9. 'restriction' → logprob: -8.980315208435059
    10. 'const' → logprob: -9.730315208435059

Token 428: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7619364857673645
    2. ' h' → logprob: -1.3869364261627197
    3. '   ' → logprob: -1.7619364261627197
    4. 'h' → logprob: -3.0119364261627197
    5. '<|end|>' → logprob: -4.136936664581299
    6. ' 
' → logprob: -4.886936664581299
    7. '.' → logprob: -5.261936664581299
    8. '    ' → logprob: -5.386936664581299
    9. ' ' → logprob: -5.511936664581299
    10. '           ' → logprob: -5.511936664581299

Token 429: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.23259331285953522
    2. 'contin' → logprob: -2.857593297958374
    3. 'strict' → logprob: -3.357593297958374
    4. 'mont' → logprob: -3.482593297958374
    5. ' non' → logprob: -4.357593536376953
    6. 'cro' → logprob: -4.482593536376953
    7. 'mon' → logprob: -4.607593536376953
    8. 'st' → logprob: -4.982593536376953
    9. 'continu' → logprob: -5.107593536376953
    10. 'continue' → logprob: -5.482593536376953

Token 430: '-d' (ID: 2469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8233453631401062
    2. 'dé' → logprob: -2.198345422744751
    3. 'cro' → logprob: -2.323345422744751
    4. 'de' → logprob: -2.323345422744751
    5. 'strict' → logprob: -2.323345422744751
    6. ' décro' → logprob: -2.823345422744751
    7. 'augmentation' → logprob: -3.698345422744751
    8. ' d' → logprob: -3.948345422744751
    9. 'desc' → logprob: -3.948345422744751
    10. ' strict' → logprob: -4.698345184326172

Token 431: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.15515555441379547
    2. 'é' → logprob: -2.030155658721924
    3. 'és' → logprob: -5.905155658721924
    4. 'ec' → logprob: -6.155155658721924
    5. 'cro' → logprob: -6.780155658721924
    6. 'ép' → logprob: -7.155155658721924
    7. 'épend' → logprob: -7.280155658721924
    8. 'es' → logprob: -7.280155658721924
    9. 'égalité' → logprob: -7.280155658721924
    10. 'ég' → logprob: -7.780155658721924

Token 432: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.02257518656551838
    2. 'omp' → logprob: -5.397575378417969
    3. 'roit' → logprob: -5.397575378417969
    4. 'rement' → logprob: -5.397575378417969
    5. 'rés' → logprob: -5.772575378417969
    6. 'rès' → logprob: -6.522575378417969
    7. 'roi' → logprob: -6.647575378417969
    8. 'r' → logprob: -6.772575378417969
    9. 'res' → logprob: -8.022575378417969
    10. 'rogram' → logprob: -8.272575378417969

Token 433: 'issance' (ID: 17968)
  Prédit: 'issance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issance' → logprob: -0.0055418009869754314
    2. 'issante' → logprob: -5.755541801452637
    3. 'is' → logprob: -7.255541801452637
    4. 'issement' → logprob: -7.380541801452637
    5. 'issant' → logprob: -7.755541801452637
    6. 'iss' → logprob: -8.130541801452637
    7. '#' → logprob: -8.755541801452637
    8. 'ss' → logprob: -10.630541801452637
    9. 'issa' → logprob: -11.005541801452637
    10. 'issent' → logprob: -11.380541801452637

Token 434: ' perm' (ID: 5961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043903741985559464
    2. 'h' → logprob: -4.168903827667236
    3. '   ' → logprob: -4.418903827667236
    4. '           ' → logprob: -4.918903827667236
    5. ' h' → logprob: -5.918903827667236
    6. ',' → logprob: -6.543903827667236
    7. ')' → logprob: -6.668903827667236
    8. '.' → logprob: -7.043903827667236
    9. '<|end|>' → logprob: -7.918903827667236
    10. '        
' → logprob: -8.543903350830078

Token 435: 'ise' (ID: 1096)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -1.8340458869934082
    2. 'iss' → logprob: -1.8340458869934082
    3. 'itted' → logprob: -1.9590458869934082
    4. 'ett' → logprob: -1.9590458869934082
    5. 'et' → logprob: -2.959045886993408
    6. 'erm' → logprob: -2.959045886993408
    7. 'end' → logprob: -3.334045886993408
    8. 'utable' → logprob: -3.459045886993408
    9. 'it' → logprob: -3.709045886993408
    10. 'ess' → logprob: -3.834045886993408

Token 436: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03833052143454552
    2. '   ' → logprob: -4.413330554962158
    3. '.' → logprob: -5.038330554962158
    4. '<|end|>' → logprob: -5.038330554962158
    5. 'h' → logprob: -5.663330554962158
    6. ')' → logprob: -5.913330554962158
    7. ' h' → logprob: -6.163330554962158
    8. '           ' → logprob: -6.538330554962158
    9. ',' → logprob: -7.288330554962158
    10. ':' → logprob: -7.788330554962158

Token 437: ' décr' (ID: 123041)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.844805121421814
    2. 'la' → logprob: -1.469805121421814
    3. 'l' → logprob: -1.844805121421814
    4. ' une' → logprob: -2.9698052406311035
    5. ' la' → logprob: -3.2198052406311035
    6. 'un' → logprob: -3.5948052406311035
    7. 'des' → logprob: -4.4698052406311035
    8. ' l' → logprob: -4.9698052406311035
    9. 'c' → logprob: -4.9698052406311035
    10. '1' → logprob: -4.9698052406311035

Token 438: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.3155272901058197
    2. 'ement' → logprob: -1.440527319908142
    3. 'rement' → logprob: -3.9405272006988525
    4. 'é' → logprob: -4.815527439117432
    5. 'mentation' → logprob: -6.690527439117432
    6. 'emment' → logprob: -7.065527439117432
    7. 'éc' → logprob: -7.190527439117432
    8. 'ent' → logprob: -7.315527439117432
    9. 'ém' → logprob: -7.815527439117432
    10. 'è' → logprob: -7.815527439117432

Token 439: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6219221949577332
    2. '   ' → logprob: -1.871922254562378
    3. '           ' → logprob: -2.121922254562378
    4. 'h' → logprob: -2.121922254562378
    5. 'er' → logprob: -3.246922254562378
    6. 'ment' → logprob: -4.996922016143799
    7. '               ' → logprob: -5.121922016143799
    8. ' h' → logprob: -6.246922016143799
    9. 'ation' → logprob: -6.371922016143799
    10. 'e' → logprob: -6.621922016143799

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008258765563368797
    2. '   ' → logprob: -5.758258819580078
    3. '           ' → logprob: -6.758258819580078
    4. ' ' → logprob: -6.883258819580078
    5. '<|end|>' → logprob: -7.383258819580078
    6. ' 
' → logprob: -7.633258819580078
    7. '        
' → logprob: -7.883258819580078
    8. '\n' → logprob: -8.383258819580078
    9. '        ' → logprob: -8.508258819580078
    10. 'h' → logprob: -8.508258819580078

Token 441: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08882986009120941
    2. 'h' (adapté à ' h') → logprob: -2.838829755783081
    3. ' h' → logprob: -3.963829755783081
    4. '           ' → logprob: -5.21382999420166
    5. '   ' → logprob: -6.33882999420166
    6. '	h' → logprob: -9.71382999420166
    7. '```' → logprob: -10.08882999420166
    8. ' ' → logprob: -10.21382999420166
    9. '        
' → logprob: -10.33882999420166
    10. ' ' → logprob: -10.46382999420166

Token 442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.672236824873835e-05
    2. '[' → logprob: -9.500076293945312
    3. ' [' → logprob: -13.625076293945312
    4. '[h' → logprob: -16.000076293945312
    5. 'i' → logprob: -16.625076293945312
    6. '```' → logprob: -16.875076293945312
    7. '[
' → logprob: -17.000076293945312
    8. '[I' → logprob: -17.000076293945312
    9. ' i' → logprob: -17.125076293945312
    10. '   ' → logprob: -17.250076293945312

Token 443: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10665137320756912
    2. ' +' → logprob: -2.3566513061523438
    3. ']' → logprob: -5.106651306152344
    4. '[i' → logprob: -8.481651306152344
    5. '[' → logprob: -9.606651306152344
    6. ']+' → logprob: -10.481651306152344
    7. '+i' → logprob: -10.731651306152344
    8. '1' → logprob: -10.981651306152344
    9. '   ' → logprob: -12.106651306152344
    10. '][' → logprob: -12.356651306152344

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000636904442217201
    2. ' ' → logprob: -7.375637054443359
    3. ']' → logprob: -12.50063705444336
    4. '<|end|>' → logprob: -12.62563705444336
    5. '+' → logprob: -14.00063705444336
    6. '   ' → logprob: -14.12563705444336
    7. '```' → logprob: -14.25063705444336
    8. '  ' → logprob: -15.18813705444336
    9. '<|end|>' → logprob: -16.31313705444336
    10. '
' → logprob: -16.43813705444336

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000386701402021572
    2. ' ' → logprob: -7.875386714935303
    3. ']' → logprob: -12.250386238098145
    4. '```' → logprob: -14.687886238098145
    5. '   ' → logprob: -15.250386238098145
    6. '+' → logprob: -15.625386238098145
    7. '  ' → logprob: -16.00038719177246
    8. '`' → logprob: -16.68788719177246
    9. '<|end|>' → logprob: -16.68788719177246
    10. '[' → logprob: -17.00038719177246

Token 446: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005255113355815411
    2. ']-' → logprob: -7.87552547454834
    3. ' ]' → logprob: -8.87552547454834
    4. ' -=' → logprob: -12.75052547454834
    5. '-' → logprob: -13.50052547454834
    6. '-=' → logprob: -14.12552547454834
    7. '']' → logprob: -15.25052547454834
    8. ')' → logprob: -16.625526428222656
    9. '`]' → logprob: -17.250526428222656
    10. ']=' → logprob: -17.375526428222656

Token 447: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.4760435223579407
    2. ' -=' → logprob: -0.9760435223579407
    3. '=' → logprob: -6.351043701171875
    4. '-' → logprob: -8.476043701171875
    5. ' =' → logprob: -11.601043701171875
    6. '+=' → logprob: -13.851043701171875
    7. ' ' → logprob: -14.476043701171875
    8. ' +=' → logprob: -15.101043701171875
    9. '	' → logprob: -15.601043701171875
    10. ' -' → logprob: -16.226043701171875

Token 448: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07889143377542496
    2. ' h' → logprob: -2.5788915157318115
    3. '	h' → logprob: -13.57889175415039
    4. ' ' → logprob: -15.57889175415039
    5. '(h' → logprob: -16.45389175415039
    6. ' ' → logprob: -17.32889175415039
    7. '   ' → logprob: -17.57889175415039
    8. '[h' → logprob: -17.70389175415039
    9. '<h' → logprob: -18.32889175415039
    10. '  ' → logprob: -18.32889175415039

Token 449: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.125008583068848
    3. 'i' → logprob: -13.000008583068848
    4. '(i' → logprob: -15.625008583068848
    5. ' [' → logprob: -16.12500762939453
    6. '[
' → logprob: -16.37500762939453
    7. '{i' → logprob: -16.75000762939453
    8. '[h' → logprob: -16.75000762939453
    9. '```' → logprob: -17.12500762939453
    10. '[I' → logprob: -17.25000762939453

Token 450: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6893291473388672
    2. '+' → logprob: -0.8143291473388672
    3. ' +' → logprob: -2.939329147338867
    4. ']' → logprob: -6.564329147338867
    5. '+i' → logprob: -7.689329147338867
    6. ']+' → logprob: -8.189329147338867
    7. 'i' → logprob: -9.939329147338867
    8. '1' → logprob: -10.939329147338867
    9. '[' → logprob: -11.564329147338867
    10. '[j' → logprob: -11.814329147338867

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03933640941977501
    2. ' ' → logprob: -3.4143364429473877
    3. ']' → logprob: -5.414336204528809
    4. '+' → logprob: -7.539336204528809
    5. ' +' → logprob: -7.914336204528809
    6. ' ]' → logprob: -8.789336204528809
    7. ']+' → logprob: -8.914336204528809
    8. ')' → logprob: -12.039336204528809
    9. ' ' → logprob: -12.226836204528809
    10. ' -' → logprob: -12.664336204528809

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.921253225300461e-05
    2. '+' → logprob: -10.375069618225098
    3. ']' → logprob: -10.750069618225098
    4. ' ' → logprob: -11.500069618225098
    5. ']+' → logprob: -12.500069618225098
    6. '-' → logprob: -14.000069618225098
    7. '0' → logprob: -14.500069618225098
    8. '```' → logprob: -15.375069618225098
    9. ' +' → logprob: -15.500069618225098
    10. 'i' → logprob: -15.500069618225098

Token 453: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06199502944946289
    2. '-' → logprob: -2.811995029449463
    3. ')' → logprob: -11.186994552612305
    4. ' ' → logprob: -11.811994552612305
    5. ']' → logprob: -12.436994552612305
    6. '1' → logprob: -14.436994552612305
    7. ' ' → logprob: -14.936994552612305
    8. '−' → logprob: -15.061994552612305
    9. ']-' → logprob: -16.186994552612305
    10. ')-' → logprob: -16.311994552612305

Token 454: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07888989895582199
    2. ' -' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.953889846801758
    4. '1' → logprob: -17.828889846801758
    5. '()-' → logprob: -17.828889846801758
    6. '<|end|>' → logprob: -17.828889846801758
    7. '–' → logprob: -18.078889846801758
    8. ' -=' → logprob: -18.078889846801758
    9. '-=' → logprob: -18.203889846801758
    10. '−' → logprob: -18.203889846801758

Token 455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.125
    4. '
' → logprob: -20.25
    5. '```' → logprob: -20.75
    6. '１' → logprob: -23.5
    7. '       ' → logprob: -23.5
    8. '  ' → logprob: -23.625
    9. '	' → logprob: -23.75
    10. '۱' → logprob: -23.75

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -18.875
    5. '
' → logprob: -19.625
    6. '<|end|>' → logprob: -21.0
    7. '۱' → logprob: -21.25
    8. '１' → logprob: -21.375
    9. '       ' → logprob: -21.75
    10. '১' → logprob: -21.875

Token 457: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012633290607482195
    2. 'if' → logprob: -6.87626314163208
    3. '<|end|>' → logprob: -9.751263618469238
    4. 'continue' → logprob: -10.001263618469238
    5. '```' → logprob: -10.501263618469238
    6. '#' → logprob: -10.501263618469238
    7. ' print' → logprob: -11.001263618469238
    8. ')' → logprob: -11.001263618469238
    9. 'return' → logprob: -12.126263618469238
    10. 'else' → logprob: -12.251263618469238

Token 459: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: ' Cette' (ID: 27383)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.27294814586639404
    2. 'else' → logprob: -1.647948145866394
    3. 'if' → logprob: -4.022948265075684
    4. 'pass' → logprob: -4.772948265075684
    5. 'judge' → logprob: -5.147948265075684
    6. ' continue' → logprob: -5.272948265075684
    7. 'elif' → logprob: -5.522948265075684
    8. 'break' → logprob: -6.647948265075684
    9. 'print' → logprob: -7.022948265075684
    10. 'for' → logprob: -7.522948265075684

Token 461: ' opération' (ID: 86023)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8551294207572937
    2. '#' → logprob: -1.8551294803619385
    3. 'ligne' → logprob: -2.3551294803619385
    4. 'continue' → logprob: -2.7301294803619385
    5. 'else' → logprob: -3.1051294803619385
    6. 'if' → logprob: -3.3551294803619385
    7. '
' → logprob: -3.8551294803619385
    8. ' ligne' → logprob: -3.9801294803619385
    9. 'mod' → logprob: -4.480129241943359
    10. 'dé' → logprob: -4.480129241943359

Token 462: ' mod' (ID: 1812)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.012761322781443596
    2. 'if' → logprob: -4.762761116027832
    3. 'èle' → logprob: -6.637761116027832
    4. 'e' → logprob: -7.012761116027832
    5. 'ifié' → logprob: -7.887761116027832
    6. 'ifies' → logprob: -8.137761116027832
    7. '#' → logprob: -8.262761116027832
    8. 'ère' → logprob: -8.887761116027832
    9. 'ifier' → logprob: -9.012761116027832
    10. 'f' → logprob: -9.262761116027832

Token 464: ' directement' (ID: 52317)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.26727843284606934
    2. '<|end|>' → logprob: -2.2672784328460693
    3. 'h' → logprob: -3.0172784328460693
    4. 'la' → logprob: -3.8922784328460693
    5. ' l' → logprob: -4.642278671264648
    6. 'l' → logprob: -4.767278671264648
    7. 'the' → logprob: -4.767278671264648
    8. ' the' → logprob: -5.017278671264648
    9. ' h' → logprob: -5.142278671264648
    10. ' le' → logprob: -5.267278671264648

Token 465: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4655938744544983
    2. 'la' → logprob: -1.0905938148498535
    3. 'l' → logprob: -3.9655938148498535
    4. 'h' → logprob: -4.8405938148498535
    5. ' l' → logprob: -5.2155938148498535
    6. ' ' → logprob: -6.7155938148498535
    7. 'le' → logprob: -7.0905938148498535
    8. 'a' → logprob: -7.8405938148498535
    9. ' h' → logprob: -8.340594291687012
    10. 'the' → logprob: -8.715594291687012

Token 466: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.13305288553237915
    2. 'val' → logprob: -2.1330528259277344
    3. ' liste' → logprob: -5.383052825927734
    4. 'list' → logprob: -7.008052825927734
    5. ' valeur' → logprob: -8.258052825927734
    6. 'suite' → logprob: -8.883052825927734
    7. 'élé' → logprob: -9.133052825927734
    8. 'tail' → logprob: -11.383052825927734
    9. 'value' → logprob: -11.383052825927734
    10. 'Liste' → logprob: -11.508052825927734

Token 467: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ''origine' (ID: 89355)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07145845890045166
    2. ''h' → logprob: -3.071458339691162
    3. ''origine' → logprob: -3.946458339691162
    4. 'origine' → logprob: -6.571458339691162
    5. ' h' → logprob: -7.946458339691162
    6. 'e' → logprob: -8.19645881652832
    7. ''' → logprob: -8.44645881652832
    8. 'es' → logprob: -9.19645881652832
    9. '’h' → logprob: -9.19645881652832
    10. '_h' → logprob: -9.32145881652832

Token 469: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007725752890110016
    2. 'if' → logprob: -5.007725715637207
    3. '#' → logprob: -7.882725715637207
    4. ')' → logprob: -8.882725715637207
    5. 'pass' → logprob: -9.007725715637207
    6. 'else' → logprob: -9.507725715637207
    7. ' print' → logprob: -9.757725715637207
    8. 'for' → logprob: -10.007725715637207
    9. '```' → logprob: -10.132725715637207
    10. 'continue' → logprob: -10.257725715637207

Token 471: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12693651020526886
    2. 'if' → logprob: -2.126936435699463
    3. 'pr' → logprob: -13.251936912536621
    4. '#' → logprob: -13.626936912536621
    5. ' if' → logprob: -14.001936912536621
    6. 'yes' → logprob: -14.251936912536621
    7. ' print' → logprob: -14.251936912536621
    8. 'prin' → logprob: -14.376936912536621
    9. '```' → logprob: -14.626936912536621
    10. 'for' → logprob: -14.626936912536621

Token 472: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020566415041685104
    2. 'print' → logprob: -4.020566463470459
    3. '#' → logprob: -6.520566463470459
    4. ' if' → logprob: -7.520566463470459
    5. 'the' → logprob: -8.5205659866333
    6. '"' → logprob: -9.1455659866333
    7. '```' → logprob: -10.1455659866333
    8. ' print' → logprob: -11.3955659866333
    9. 'for' → logprob: -12.0205659866333
    10. ' the' → logprob: -12.1455659866333

Token 473: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.0705481693148613
    2. 'if' → logprob: -3.0705480575561523
    3. 'for' → logprob: -4.195548057556152
    4. 'loop' → logprob: -5.820548057556152
    5. 'print' → logprob: -6.695548057556152
    6. 'v' → logprob: -7.070548057556152
    7. ' boucle' → logprob: -7.070548057556152
    8. '#' → logprob: -8.195548057556152
    9. '```' → logprob: -8.820548057556152
    10. 'bu' → logprob: -9.195548057556152

Token 474: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2522771656513214
    2. 'print' → logprob: -1.502277135848999
    3. '#' → logprob: -8.252277374267578
    4. '
' → logprob: -10.002277374267578
    5. ' if' → logprob: -10.877277374267578
    6. '```' → logprob: -11.377277374267578
    7. '#print' → logprob: -12.377277374267578
    8. '#
' → logprob: -13.377277374267578
    9. ' print' → logprob: -13.377277374267578
    10. ',' → logprob: -13.627277374267578

Token 475: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20141790807247162
    2. 'if' → logprob: -1.7014179229736328
    3. ' if' → logprob: -13.201417922973633
    4. ' print' → logprob: -13.326417922973633
    5. '```' → logprob: -14.576417922973633
    6. '#' → logprob: -14.701417922973633
    7. '#print' → logprob: -16.701417922973633
    8. 'for' → logprob: -16.951417922973633
    9. 'pr' → logprob: -16.951417922973633
    10. '
' → logprob: -17.326417922973633

Token 476: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20276083052158356
    2. 'print' → logprob: -1.7027608156204224
    3. '#' → logprob: -6.702760696411133
    4. ' if' → logprob: -9.327760696411133
    5. ' print' → logprob: -11.327760696411133
    6. 'for' → logprob: -12.077760696411133
    7. '#print' → logprob: -12.327760696411133
    8. '
' → logprob: -13.327760696411133
    9. '```' → logprob: -13.452760696411133
    10. 's' → logprob: -14.702760696411133

Token 477: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0002712297427933663
    2. 'if' → logprob: -8.62527084350586
    3. 'ife' → logprob: -9.62527084350586
    4. 'ifiez' → logprob: -11.87527084350586
    5. 'ifies' → logprob: -12.50027084350586
    6. 'ify' → logprob: -12.50027084350586
    7. 'ifié' → logprob: -12.75027084350586
    8. '#' → logprob: -13.12527084350586
    9. 'ifier' → logprob: -13.25027084350586
    10. 'f' → logprob: -13.37527084350586

Token 478: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019215954467654228
    2. 'print' → logprob: -4.019216060638428
    3. ' if' → logprob: -7.394216060638428
    4. '("' → logprob: -8.76921558380127
    5. '#' → logprob: -9.26921558380127
    6. 'judge' → logprob: -9.39421558380127
    7. '('' → logprob: -10.76921558380127
    8. '(print' → logprob: -10.89421558380127
    9. 'jud' → logprob: -11.01921558380127
    10. '(' → logprob: -11.64421558380127

Token 479: ' le' (ID: 505)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.2265448421239853
    2. ' judge' → logprob: -1.6015448570251465
    3. 'jug' → logprob: -7.6015448570251465
    4. ' juge' → logprob: -8.726544380187988
    5. 'j' → logprob: -8.851544380187988
    6. ' ' → logprob: -8.976544380187988
    7. 'jud' → logprob: -9.351544380187988
    8. ' ' → logprob: -10.601544380187988
    9. 'ju' → logprob: -11.101544380187988
    10. 'jury' → logprob: -11.351544380187988

Token 480: ' dr' (ID: 1498)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.0004785744531545788
    2. ' judge' → logprob: -8.375478744506836
    3. 'jug' → logprob: -8.625478744506836
    4. 'jud' → logprob: -10.500478744506836
    5. 'ju' → logprob: -10.750478744506836
    6. ' juge' → logprob: -11.875478744506836
    7. 'jury' → logprob: -12.750478744506836
    8. 'print' → logprob: -12.875478744506836
    9. 'j' → logprob: -13.375478744506836
    10. 'jou' → logprob: -14.625478744506836

Token 481: 'apeau' (ID: 140059)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.1361774504184723
    2. '   ' → logprob: -3.1361775398254395
    3. 'if' → logprob: -3.1361775398254395
    4. 'f' → logprob: -4.0111775398254395
    5. '  ' → logprob: -5.7611775398254395
    6. '       ' → logprob: -5.8861775398254395
    7. ' judge' → logprob: -5.8861775398254395
    8. 'age' → logprob: -6.3861775398254395
    9. 'ag' → logprob: -6.8861775398254395
    10. ' ' → logprob: -6.8861775398254395

Token 482: ' '' (ID: 461)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.6141399145126343
    2. ':' → logprob: -1.2391399145126343
    3. ' judge' → logprob: -1.8641399145126343
    4. ':
' → logprob: -5.489140033721924
    5. ' and' → logprob: -6.239140033721924
    6. ' juge' → logprob: -6.489140033721924
    7. '==' → logprob: -6.989140033721924
    8. 'jud' → logprob: -7.114140033721924
    9. 'jug' → logprob: -7.114140033721924
    10. ' is' → logprob: -7.239140033721924

Token 483: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.00021140782337170094
    2. 'jug' → logprob: -9.125211715698242
    3. ' judge' → logprob: -10.125211715698242
    4. 'not' → logprob: -10.750211715698242
    5. 'jud' → logprob: -11.750211715698242
    6. 'ju' → logprob: -11.875211715698242
    7. '```' → logprob: -12.000211715698242
    8. 'jou' → logprob: -13.125211715698242
    9. 'j' → logprob: -13.125211715698242
    10. 'jury' → logprob: -13.125211715698242

Token 484: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -5.32392441527918e-05
    2. ':
' → logprob: -10.750053405761719
    3. '==' → logprob: -11.125053405761719
    4. ' :' → logprob: -11.875053405761719
    5. ':#' → logprob: -12.250053405761719
    6. ' ==' → logprob: -12.375053405761719
    7. ' is' → logprob: -14.750053405761719
    8. ':return' → logprob: -15.750053405761719
    9. ':**' → logprob: -16.25005340576172
    10. ':true' → logprob: -16.87505340576172

Token 485: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019620591774582863
    2. ':
' → logprob: -7.001962184906006
    3. '==' → logprob: -7.001962184906006
    4. ' ==' → logprob: -9.626961708068848
    5. ' is' → logprob: -10.376961708068848
    6. 'print' → logprob: -11.251961708068848
    7. ' and' → logprob: -11.626961708068848
    8. ':#' → logprob: -11.626961708068848
    9. ' :' → logprob: -12.626961708068848
    10. '=' → logprob: -13.251961708068848

Token 486: ' rest' (ID: 2867)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024763736873865128
    2. ' True' → logprob: -6.002476215362549
    3. 'False' → logprob: -14.127476692199707
    4. 'true' → logprob: -20.00247573852539
    5. ' False' → logprob: -20.75247573852539
    6. '(True' → logprob: -21.00247573852539
    7. 'v' → logprob: -21.12747573852539
    8. 'print' → logprob: -21.50247573852539
    9. 'TRUE' → logprob: -22.12747573852539
    10. ' still' → logprob: -22.37747573852539

Token 487: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4160030484199524
    2. 'True' → logprob: -1.7910029888153076
    3. 'aur' → logprob: -2.2910029888153076
    4. 'ré' → logprob: -3.7910029888153076
    5. 'atu' → logprob: -4.541003227233887
    6. 'ant' → logprob: -5.291003227233887
    7. 'ained' → logprob: -5.291003227233887
    8. 'ored' → logprob: -5.541003227233887
    9. 're' → logprob: -5.666003227233887
    10. 'r' → logprob: -6.041003227233887

Token 488: ' à' (ID: 1221)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. 'False' → logprob: -17.753177642822266
    4. 'v' → logprob: -18.253177642822266
    5. '(True' → logprob: -20.378177642822266
    6. 'true' → logprob: -21.128177642822266
    7. 'V' → logprob: -21.253177642822266
    8. '=True' → logprob: -23.128177642822266
    9. 'TRUE' → logprob: -23.128177642822266
    10. '_true' → logprob: -23.628177642822266

Token 489: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2664456789934775e-06
    2. 'False' → logprob: -13.750000953674316
    3. ' True' → logprob: -16.250001907348633
    4. 'Tr' → logprob: -19.125001907348633
    5. '
' → logprob: -19.500001907348633
    6. 'true' → logprob: -20.250001907348633
    7. '```' → logprob: -20.625001907348633
    8. 'TRUE' → logprob: -21.375001907348633
    9. 'v' → logprob: -21.875001907348633
    10. 'V' → logprob: -21.875001907348633

Token 490: ',
' (ID: 412)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25537627935409546
    2. 'print' → logprob: -1.5053763389587402
    3. ' if' → logprob: -7.00537633895874
    4. ' and' → logprob: -7.25537633895874
    5. ':' → logprob: -7.38037633895874
    6. 'and' → logprob: -7.50537633895874
    7. '#' → logprob: -8.880375862121582
    8. '
' → logprob: -8.880375862121582
    9. ':
' → logprob: -8.880375862121582
    10. '```' → logprob: -9.505375862121582

Token 491: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014292089268565178
    2. 'print' → logprob: -4.264292240142822
    3. ' if' → logprob: -9.139291763305664
    4. '#' → logprob: -11.264291763305664
    5. 'and' → logprob: -12.889291763305664
    6. '```' → logprob: -13.514291763305664
    7. '   ' → logprob: -13.639291763305664
    8. ' print' → logprob: -14.139291763305664
    9. 'for' → logprob: -14.139291763305664
    10. ' and' → logprob: -14.264291763305664

Token 492: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3132876753807068
    2. 'print' → logprob: -1.3132877349853516
    3. '#' → logprob: -10.813287734985352
    4. ' if' → logprob: -12.188287734985352
    5. ' print' → logprob: -14.563287734985352
    6. '
' → logprob: -16.56328773498535
    7. '#print' → logprob: -16.81328773498535
    8. 'for' → logprob: -16.93828773498535
    9. '```' → logprob: -17.43828773498535
    10. '   ' → logprob: -18.93828773498535

Token 493: ' qui' (ID: 2780)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06416863948106766
    2. '#' → logprob: -3.439168691635132
    3. 'print' → logprob: -4.564168453216553
    4. '```' → logprob: -4.689168453216553
    5. ':' → logprob: -5.314168453216553
    6. ' if' → logprob: -6.314168453216553
    7. '
' → logprob: -7.064168453216553
    8. '   ' → logprob: -7.564168453216553
    9. 'else' → logprob: -8.064168930053711
    10. '=' → logprob: -8.064168930053711

Token 494: ' sign' (ID: 2232)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010129223810508847
    2. ':
' → logprob: -7.376012802124023
    3. 'if' → logprob: -8.501012802124023
    4. 'print' → logprob: -9.001012802124023
    5. ' :' → logprob: -10.501012802124023
    6. '#' → logprob: -11.876012802124023
    7. ' print' → logprob: -12.001012802124023
    8. ' and' → logprob: -12.126012802124023
    9. ' if' → logprob: -12.751012802124023
    10. ':#' → logprob: -12.751012802124023

Token 495: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04332241043448448
    2. '#' → logprob: -4.168322563171387
    3. 'ifie' → logprob: -4.168322563171387
    4. 'print' → logprob: -5.418322563171387
    5. 'ifies' → logprob: -6.043322563171387
    6. 'ind' → logprob: -6.293322563171387
    7. 'au' → logprob: -7.918322563171387
    8. 'rait' → logprob: -8.668322563171387
    9. 'ur' → logprob: -8.793322563171387
    10. 'ains' → logprob: -8.918322563171387

Token 496: 'ait' (ID: 1271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5442726016044617
    2. 'rait' → logprob: -2.1692726612091064
    3. 'ait' → logprob: -2.4192726612091064
    4. 'a' → logprob: -2.7942726612091064
    5. 't' → logprob: -3.5442726612091064
    6. ' que' → logprob: -3.5442726612091064
    7. 'if' → logprob: -4.169272422790527
    8. 's' → logprob: -4.419272422790527
    9. 'f' → logprob: -4.669272422790527
    10. 'qu' → logprob: -4.794272422790527

Token 497: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5040796399116516
    2. ' que' → logprob: -1.1290795803070068
    3. ' that' → logprob: -3.504079580307007
    4. 'if' → logprob: -4.254079818725586
    5. 'que' → logprob: -4.754079818725586
    6. '#' → logprob: -5.254079818725586
    7. 'that' → logprob: -5.379079818725586
    8. '   ' → logprob: -5.629079818725586
    9. ' print' → logprob: -5.879079818725586
    10. 'True' → logprob: -6.254079818725586

Token 498: ' la' (ID: 557)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.001750030554831028
    2. ' judge' → logprob: -6.6267499923706055
    3. 'print' → logprob: -8.001749992370605
    4. '"' → logprob: -10.001749992370605
    5. 'jug' → logprob: -11.501749992370605
    6. 'j' → logprob: -12.126749992370605
    7. 'jud' → logprob: -12.376749992370605
    8. '```' → logprob: -12.501749992370605
    9. ' ' → logprob: -13.251749992370605
    10. ' ' → logprob: -13.501749992370605

Token 499: ' sé' (ID: 7462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004336493439041078
    2. 'sequence' → logprob: -8.125433921813965
    3. ' print' → logprob: -10.375433921813965
    4. 'condition' → logprob: -10.500433921813965
    5. '#' → logprob: -10.875433921813965
    6. 'sé' → logprob: -11.000433921813965
    7. 's' → logprob: -11.000433921813965
    8. 'for' → logprob: -11.875433921813965
    9. 'pr' → logprob: -13.000433921813965
    10. 'prin' → logprob: -13.125433921813965

Token 500: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -5.490809417096898e-05
    2. 'quences' → logprob: -11.000055313110352
    3. 'q' → logprob: -11.375055313110352
    4. 'qu' → logprob: -11.375055313110352
    5. 'QUENCE' → logprob: -11.875055313110352
    6. 'print' → logprob: -12.500055313110352
    7. '#' → logprob: -13.000055313110352
    8. 'rie' → logprob: -14.625055313110352
    9. '```' → logprob: -14.875055313110352
    10. 'sequence' → logprob: -15.375055313110352

Token 501: ' respecte' (ID: 140483)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031341470777988434
    2. ' print' → logprob: -4.656341552734375
    3. ' is' → logprob: -4.781341552734375
    4. ' and' → logprob: -5.406341552734375
    5. 'if' → logprob: -6.406341552734375
    6. ' ==' → logprob: -6.781341552734375
    7. '==' → logprob: -6.906341552734375
    8. ' est' → logprob: -7.031341552734375
    9. ':' → logprob: -7.406341552734375
    10. 'and' → logprob: -8.031341552734375

Token 502: ' la' (ID: 557)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08437644690275192
    2. 'judge' → logprob: -2.709376335144043
    3. 'True' → logprob: -5.584376335144043
    4. 'la' → logprob: -5.709376335144043
    5. ''' → logprob: -5.834376335144043
    6. 'le' → logprob: -6.834376335144043
    7. 'print' → logprob: -7.459376335144043
    8. 'les' → logprob: -7.584376335144043
    9. 'yes' → logprob: -8.084376335144043
    10. ' judge' → logprob: -8.584376335144043

Token 503: ' contr' (ID: 6030)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.2010633945465088
    2. 'True' → logprob: -2.201063394546509
    3. ' True' → logprob: -2.826063394546509
    4. '"' → logprob: -5.95106315612793
    5. 'non' → logprob: -5.95106315612793
    6. 'judge' → logprob: -5.95106315612793
    7. 'print' → logprob: -6.57606315612793
    8. 'h' → logprob: -8.07606315612793
    9. 'certain' → logprob: -8.07606315612793
    10. 'yes' → logprob: -8.07606315612793

Token 504: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.058905575424432755
    2. 'aint' → logprob: -3.183905601501465
    3. 'ition' → logprob: -5.183905601501465
    4. 'raint' → logprob: -5.558905601501465
    5. 'd' → logprob: -6.308905601501465
    6. 'ra' → logprob: -6.933905601501465
    7. 'aine' → logprob: -6.933905601501465
    8. 'rait' → logprob: -7.058905601501465
    9. 'raine' → logprob: -7.433905601501465
    10. 'e' → logprob: -7.808905601501465

Token 505: ' demand' (ID: 8492)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005705862771719694
    2. 'print' → logprob: -5.255705833435059
    3. ' if' → logprob: -7.755705833435059
    4. ':
' → logprob: -11.380705833435059
    5. '#' → logprob: -11.505705833435059
    6. ':' → logprob: -12.255705833435059
    7. '
' → logprob: -12.380705833435059
    8. '```' → logprob: -12.505705833435059
    9. ' and' → logprob: -13.255705833435059
    10. 'and' → logprob: -13.255705833435059

Token 506: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1801874339580536
    2. 'ée' → logprob: -2.305187463760376
    3. 'ee' → logprob: -3.680187463760376
    4. 'é' → logprob: -3.805187463760376
    5. 'ue' → logprob: -5.305187225341797
    6. '#' → logprob: -5.305187225341797
    7. '(e' → logprob: -6.430187225341797
    8. 'if' → logprob: -6.680187225341797
    9. 'ait' → logprob: -7.305187225341797
    10. 'ent' → logprob: -7.305187225341797

Token 507: ' dans' (ID: 2671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032265526242554188
    2. 'print' → logprob: -5.7532267570495605
    3. ' if' → logprob: -10.253226280212402
    4. '
' → logprob: -11.753226280212402
    5. '```' → logprob: -13.128226280212402
    6. 'i' → logprob: -13.753226280212402
    7. 'for' → logprob: -14.503226280212402
    8. '#
' → logprob: -14.628226280212402
    9. '#' → logprob: -15.003226280212402
    10. ':
' → logprob: -15.003226280212402

Token 508: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.771976888179779
    2. 'le' → logprob: -1.6469769477844238
    3. 'la' → logprob: -1.8969769477844238
    4. 'l' → logprob: -2.646976947784424
    5. ' la' → logprob: -3.271976947784424
    6. ' le' → logprob: -3.396976947784424
    7. 'if' → logprob: -4.146976947784424
    8. '"' → logprob: -4.771976947784424
    9. ' l' → logprob: -4.896976947784424
    10. '#' → logprob: -5.271976947784424

Token 509: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.04658578336238861
    2. 'problem' → logprob: -4.421585559844971
    3. 'en' → logprob: -4.546585559844971
    4. 'print' → logprob: -5.046585559844971
    5. 'proble' → logprob: -5.171585559844971
    6. 'if' → logprob: -5.421585559844971
    7. 'én' → logprob: -5.546585559844971
    8. '#' → logprob: -7.296585559844971
    9. ' problème' → logprob: -7.296585559844971
    10. 'jeu' → logprob: -8.421586036682129

Token 510: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0485946387052536
    2. 'print' → logprob: -3.0485947132110596
    3. ' if' → logprob: -12.04859447479248
    4. '```' → logprob: -13.79859447479248
    5. '
' → logprob: -15.92359447479248
    6. ' print' → logprob: -16.173595428466797
    7. 'for' → logprob: -17.048595428466797
    8. '#' → logprob: -17.673595428466797
    9. '``' → logprob: -18.548595428466797
    10. '[' → logprob: -18.673595428466797

Token 511: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47407984733581543
    2. 'if' → logprob: -0.9740798473358154
    3. 'for' → logprob: -13.349080085754395
    4. ' if' → logprob: -14.599080085754395
    5. '```' → logprob: -14.724080085754395
    6. ' print' → logprob: -16.349079132080078
    7. '
' → logprob: -16.474079132080078
    8. 'pr' → logprob: -17.349079132080078
    9. '#' → logprob: -17.599079132080078
    10. 'prin' → logprob: -18.224079132080078

Token 512: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.0009600582998245955
    2. 'judge' → logprob: -7.000959873199463
    3. ' juge' → logprob: -10.250960350036621
    4. ' ' → logprob: -11.500960350036621
    5. 'jud' → logprob: -13.250960350036621
    6. ' not' → logprob: -14.750960350036621
    7. ' ' → logprob: -15.000960350036621
    8. ' j' → logprob: -16.500959396362305
    9. 'j' → logprob: -16.500959396362305
    10. 'jug' → logprob: -16.625959396362305

Token 513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003510741807986051
    2. ':
' → logprob: -8.000350952148438
    3. '==' → logprob: -11.625350952148438
    4. ' ==' → logprob: -12.375350952148438
    5. ' :' → logprob: -13.125350952148438
    6. '=True' → logprob: -15.625350952148438
    7. ':

' → logprob: -16.750350952148438
    8. ' is' → logprob: -17.000350952148438
    9. ':true' → logprob: -17.125350952148438
    10. ':**' → logprob: -17.375350952148438

Token 514: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07023317366838455
    2. ' print' → logprob: -2.945233106613159
    3. '   ' → logprob: -4.195233345031738
    4. ':
' → logprob: -9.570233345031738
    5. ':' → logprob: -10.070233345031738
    6. '	print' → logprob: -10.445233345031738
    7. '```' → logprob: -12.445233345031738
    8. '\n' → logprob: -12.570233345031738
    9. '.print' → logprob: -12.570233345031738
    10. ' ' → logprob: -12.695233345031738

Token 515: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.37500762939453
    4. 'pr' → logprob: -17.25000762939453
    5. '
' → logprob: -17.50000762939453
    6. '	print' → logprob: -17.87500762939453
    7. 'for' → logprob: -19.12500762939453
    8. 'Print' → logprob: -19.37500762939453
    9. '```' → logprob: -19.37500762939453
    10. 'prit' → logprob: -20.00000762939453

Token 516: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.625
    3. '   ' → logprob: -17.125
    4. 'Print' → logprob: -17.75
    5. 'pr' → logprob: -18.0
    6. 'prit' → logprob: -18.375
    7. 'for' → logprob: -18.5
    8. '	print' → logprob: -19.125
    9. 'printf' → logprob: -19.25
    10. '```' → logprob: -19.375

Token 517: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.049270518124103546
    2. 'icher' → logprob: -3.0492706298828125
    3. 'ichage' → logprob: -8.174270629882812
    4. 'fic' → logprob: -8.424270629882812
    5. 'ic' → logprob: -9.924270629882812
    6. 'f' → logprob: -10.174270629882812
    7. 'ich' → logprob: -10.174270629882812
    8. '   ' → logprob: -10.299270629882812
    9. '#' → logprob: -11.424270629882812
    10. 'print' → logprob: -12.299270629882812

Token 518: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0017685896018519998
    2. '('' → logprob: -7.251768589019775
    3. 'Yes' → logprob: -7.501768589019775
    4. '(' → logprob: -8.126769065856934
    5. '"' → logprob: -8.626769065856934
    6. 'YES' → logprob: -11.126769065856934
    7. ' ("' → logprob: -12.501769065856934
    8. 'print' → logprob: -12.626769065856934
    9. '(":' → logprob: -13.251769065856934
    10. 'Oui' → logprob: -13.751769065856934

Token 519: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.011309056542813778
    2. '"' → logprob: -5.1363091468811035
    3. 'YES' → logprob: -5.2613091468811035
    4. 'yes' → logprob: -9.636308670043945
    5. 'True' → logprob: -10.011308670043945
    6. ' Yes' → logprob: -10.511308670043945
    7. 'Good' → logprob: -11.886308670043945
    8. 'Possible' → logprob: -12.761308670043945
    9. 'Oui' → logprob: -12.761308670043945
    10. '_yes' → logprob: -12.886308670043945

Token 520: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5070860385894775
    2. ')' → logprob: -1.6320860385894775
    3. '()' → logprob: -1.7570860385894775
    4. 'print' → logprob: -4.257085800170898
    5. '"' → logprob: -4.507085800170898
    6. '("' → logprob: -6.257085800170898
    7. 'Yes' → logprob: -7.507085800170898
    8. ' )' → logprob: -7.757085800170898
    9. ' ")' → logprob: -8.382085800170898
    10. '())' → logprob: -8.632085800170898

Token 521: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.055061694234609604
    2. '()' → logprob: -3.0550615787506104
    3. ')' → logprob: -5.3050618171691895
    4. '("' → logprob: -7.5550618171691895
    5. ' print' → logprob: -7.5550618171691895
    6. '(' → logprob: -9.180061340332031
    7. '(print' → logprob: -9.305061340332031
    8. '('' → logprob: -9.555061340332031
    9. '()
' → logprob: -10.055061340332031
    10. '```' → logprob: -10.555061340332031

Token 522: ' ind' (ID: 1383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03631216287612915
    2. ' print' → logprob: -4.411312103271484
    3. '<|end|>' → logprob: -4.786312103271484
    4. 'Yes' → logprob: -4.911312103271484
    5. '"' → logprob: -6.036312103271484
    6. ' la' → logprob: -6.286312103271484
    7. '```' → logprob: -6.536312103271484
    8. '   ' → logprob: -7.661312103271484
    9. '
' → logprob: -7.911312103271484
    10. ')' → logprob: -8.536312103271484

Token 523: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.039569392800331116
    2. 'ique' → logprob: -3.28956937789917
    3. 'iqué' → logprob: -7.03956937789917
    4. 'iqu' → logprob: -7.53956937789917
    5. 'icate' → logprob: -9.289569854736328
    6. 'iquant' → logprob: -11.164569854736328
    7. 'iq' → logprob: -12.539569854736328
    8. 'i' → logprob: -13.039569854736328
    9. 'ice' → logprob: -13.164569854736328
    10. 'ic' → logprob: -14.039569854736328

Token 524: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09764309227466583
    2. 'Yes' → logprob: -3.0976431369781494
    3. '"' → logprob: -3.2226431369781494
    4. '(' → logprob: -5.34764289855957
    5. '('' → logprob: -7.34764289855957
    6. '()' → logprob: -7.59764289855957
    7. 'Oui' → logprob: -8.09764289855957
    8. ' Yes' → logprob: -8.22264289855957
    9. '   ' → logprob: -8.47264289855957
    10. '<|end|>' → logprob: -8.84764289855957

Token 525: ' succès' (ID: 55897)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.6413155198097229
    2. 'sequence' → logprob: -1.3913154602050781
    3. ' sequence' → logprob: -3.141315460205078
    4. 'result' → logprob: -3.391315460205078
    5. 'OK' → logprob: -3.641315460205078
    6. 'poss' → logprob: -4.016315460205078
    7. 'Oui' → logprob: -4.016315460205078
    8. 'oui' → logprob: -4.516315460205078
    9. '```' → logprob: -4.766315460205078
    10. 'code' → logprob: -5.016315460205078

Token 526: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022487416572403163
    2. ' print' → logprob: -9.125225067138672
    3. '   ' → logprob: -9.625225067138672
    4. ')' → logprob: -10.750225067138672
    5. '
' → logprob: -11.125225067138672
    6. 'Yes' → logprob: -12.375225067138672
    7. '(print' → logprob: -12.375225067138672
    8. '("' → logprob: -13.625225067138672
    9. ')
' → logprob: -13.875225067138672
    10. '.print' → logprob: -14.500225067138672

Token 527: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001054603373631835
    2. 'Yes' → logprob: -7.626054763793945
    3. ' print' → logprob: -7.751054763793945
    4. '   ' → logprob: -9.001054763793945
    5. ' Yes' → logprob: -12.501054763793945
    6. 'Print' → logprob: -13.126054763793945
    7. '(print' → logprob: -13.251054763793945
    8. ')' → logprob: -13.751054763793945
    9. '```' → logprob: -14.001054763793945
    10. '("' → logprob: -14.251054763793945

Token 528: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.961759259458631e-06
    2. 'Yes' → logprob: -12.375004768371582
    3. ' print' → logprob: -14.125004768371582
    4. '   ' → logprob: -17.0000057220459
    5. 'Print' → logprob: -18.7500057220459
    6. '```' → logprob: -19.0000057220459
    7. 'yes' → logprob: -20.2500057220459
    8. '	print' → logprob: -20.5000057220459
    9. ' Yes' → logprob: -20.5000057220459
    10. 'pr' → logprob: -20.8750057220459

Token 529: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005249648820608854
    2. '(' → logprob: -5.255249500274658
    3. '('' → logprob: -11.130249977111816
    4. '(
' → logprob: -14.755249977111816
    5. ' ("' → logprob: -15.255249977111816
    6. '()' → logprob: -15.255249977111816
    7. '("")' → logprob: -15.505249977111816
    8. '("("' → logprob: -16.5052490234375
    9. '(

' → logprob: -17.8802490234375
    10. '("""' → logprob: -18.1302490234375

Token 530: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -5.512236498361744e-07
    2. 'Oui' → logprob: -15.250000953674316
    3. 'YES' → logprob: -15.500000953674316
    4. ' Yes' → logprob: -16.875
    5. 'No' → logprob: -19.0
    6. 'Ye' → logprob: -19.375
    7. 'True' → logprob: -19.375
    8. 'Yeah' → logprob: -21.875
    9. '"' → logprob: -22.5
    10. '_yes' → logprob: -22.5

Token 531: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.8206473871250637e-05
    2. '")
' → logprob: -10.500028610229492
    3. ')' → logprob: -14.875028610229492
    4. ')")' → logprob: -16.500028610229492
    5. '")
' → logprob: -16.750028610229492
    6. '"' → logprob: -17.250028610229492
    7. '')' → logprob: -18.500028610229492
    8. ' ")' → logprob: -18.750028610229492
    9. '");' → logprob: -18.750028610229492
    10. '!")' → logprob: -19.375028610229492

Token 532: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.749814019713085e-06
    2. ' else' → logprob: -12.000006675720215
    3. '```' → logprob: -15.125006675720215
    4. 'elif' → logprob: -16.12500762939453
    5. 'Else' → logprob: -16.37500762939453
    6. '    
' → logprob: -16.75000762939453
    7. '#else' → logprob: -16.75000762939453
    8. 'print' → logprob: -18.12500762939453
    9. '}else' → logprob: -19.50000762939453
    10. 'el' → logprob: -20.00000762939453

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030235785990953445
    2. ':
' → logprob: -3.530235767364502
    3. '   ' → logprob: -7.655235767364502
    4. ' :' → logprob: -11.90523624420166
    5. ' :
' → logprob: -12.90523624420166
    6. 'print' → logprob: -13.53023624420166
    7. ':

' → logprob: -15.03023624420166
    8. '():
' → logprob: -15.90523624420166
    9. '():' → logprob: -16.030235290527344
    10. '```' → logprob: -16.155235290527344

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1301182061433792
    2. 'print' → logprob: -2.1301181316375732
    3. ' print' → logprob: -5.755118370056152
    4. '	print' → logprob: -11.255118370056152
    5. '(print' → logprob: -13.380118370056152
    6. '```' → logprob: -13.380118370056152
    7. '       ' → logprob: -14.255118370056152
    8. '  ' → logprob: -14.505118370056152
    9. ' ' → logprob: -14.880118370056152
    10. '   ' → logprob: -15.005118370056152

Token 535: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020902375399600714
    2. ' print' → logprob: -8.500208854675293
    3. '   ' → logprob: -12.125208854675293
    4. '	print' → logprob: -17.62520980834961
    5. '```' → logprob: -19.12520980834961
    6. 'Print' → logprob: -19.37520980834961
    7. '(print' → logprob: -19.50020980834961
    8. '.print' → logprob: -19.62520980834961
    9. ' ' → logprob: -22.00020980834961
    10. '"' → logprob: -22.37520980834961

Token 536: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004346329253166914
    2. ' print' → logprob: -5.7543463706970215
    3. '   ' → logprob: -6.7543463706970215
    4. '	print' → logprob: -13.254345893859863
    5. '.print' → logprob: -16.37934684753418
    6. ' ' → logprob: -16.37934684753418
    7. 'Print' → logprob: -16.62934684753418
    8. '    ' → logprob: -16.87934684753418
    9. '(print' → logprob: -17.25434684753418
    10. '  ' → logprob: -17.50434684753418

Token 537: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.00034928982495330274
    2. 'icher' → logprob: -8.250349044799805
    3. 'ic' → logprob: -10.125349044799805
    4. 'ichage' → logprob: -11.000349044799805
    5. 'ich' → logprob: -11.750349044799805
    6. 'ice' → logprob: -11.875349044799805
    7. '#' → logprob: -12.125349044799805
    8. 'print' → logprob: -12.500349044799805
    9. 'ise' → logprob: -12.750349044799805
    10. '   ' → logprob: -13.125349044799805

Token 538: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000286364956991747
    2. '"No' → logprob: -9.000286102294922
    3. '(' → logprob: -9.250286102294922
    4. '"' → logprob: -9.625286102294922
    5. '('' → logprob: -15.000286102294922
    6. ' ("' → logprob: -15.750286102294922
    7. '(
' → logprob: -16.375286102294922
    8. '   ' → logprob: -16.625286102294922
    9. 'Yes' → logprob: -17.250286102294922
    10. '"You' → logprob: -17.250286102294922

Token 539: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.014168561436235905
    2. '"No' → logprob: -4.264168739318848
    3. '"' → logprob: -12.264168739318848
    4. ' No' → logprob: -15.889168739318848
    5. '“No' → logprob: -16.26416778564453
    6. 'NO' → logprob: -16.38916778564453
    7. 'Yes' → logprob: -18.63916778564453
    8. '_No' → logprob: -18.76416778564453
    9. 'Impossible' → logprob: -19.38916778564453
    10. '(No' → logprob: -19.51416778564453

Token 540: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0013215499930083752
    2. '("' → logprob: -6.876321315765381
    3. '")
' → logprob: -8.501321792602539
    4. ')' → logprob: -9.626321792602539
    5. '()' → logprob: -11.251321792602539
    6. 'print' → logprob: -13.001321792602539
    7. '"' → logprob: -13.251321792602539
    8. ')")' → logprob: -13.626321792602539
    9. 'No' → logprob: -15.126321792602539
    10. '")
' → logprob: -15.376321792602539

Token 541: ' si' (ID: 1784)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001216305885463953
    2. 'print' → logprob: -6.751216411590576
    3. '(' → logprob: -10.126215934753418
    4. '(print' → logprob: -12.626215934753418
    5. '"' → logprob: -14.376215934753418
    6. '()' → logprob: -14.876215934753418
    7. '   ' → logprob: -15.001215934753418
    8. '('' → logprob: -15.001215934753418
    9. ' print' → logprob: -15.001215934753418
    10. '("\' → logprob: -15.251215934753418

Token 542: ' au' (ID: 2791)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6744166016578674
    2. ' not' → logprob: -1.2994165420532227
    3. '"' → logprob: -2.1744165420532227
    4. '("' → logprob: -2.5494165420532227
    5. '(not' → logprob: -4.924416542053223
    6. ' judge' → logprob: -5.424416542053223
    7. '
' → logprob: -6.049416542053223
    8. ' ' → logprob: -6.174416542053223
    9. ' "' → logprob: -6.174416542053223
    10. 'print' → logprob: -6.424416542053223

Token 543: ' moins' (ID: 15924)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2651241421699524
    2. 'cun' → logprob: -1.5151240825653076
    3. 'moins' → logprob: -4.765124320983887
    4. 'cu' → logprob: -6.140124320983887
    5. 'une' → logprob: -6.890124320983887
    6. 'final' → logprob: -8.140124320983887
    7. '```' → logprob: -8.640124320983887
    8. 'pas' → logprob: -9.265124320983887
    9. 'cc' → logprob: -9.765124320983887
    10. 'ucune' → logprob: -9.765124320983887

Token 544: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.03931382670998573
    2. ' une' → logprob: -3.914313793182373
    3. 'un' → logprob: -4.289313793182373
    4. ' un' → logprob: -6.039313793182373
    5. 'l' → logprob: -6.789313793182373
    6. 'print' → logprob: -6.914313793182373
    7. 'one' → logprob: -10.039314270019531
    8. ' l' → logprob: -10.164314270019531
    9. '```' → logprob: -10.164314270019531
    10. ''une' → logprob: -10.289314270019531

Token 545: ' des' (ID: 731)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.9631103277206421
    2. 'condition' → logprob: -1.463110327720642
    3. 'élé' → logprob: -1.588110327720642
    4. ' élément' → logprob: -2.2131104469299316
    5. ' des' → logprob: -4.088110446929932
    6. 'fois' → logprob: -4.463110446929932
    7. 'element' → logprob: -4.588110446929932
    8. ' element' → logprob: -5.463110446929932
    9. ' ' → logprob: -5.838110446929932
    10. 'part' → logprob: -6.088110446929932

Token 546: ' compar' (ID: 8342)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.36714494228363037
    2. 'conditions' → logprob: -1.3671449422836304
    3. 'cond' → logprob: -4.24214506149292
    4. 'élé' → logprob: -5.24214506149292
    5. 'condition' → logprob: -5.49214506149292
    6. 'contr' → logprob: -5.49214506149292
    7. 'h' → logprob: -5.61714506149292
    8. ' contraintes' → logprob: -6.49214506149292
    9. '   ' → logprob: -6.61714506149292
    10. ' ' → logprob: -6.74214506149292

Token 547: 'ais' (ID: 1873)
  Prédit: 'aison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aison' → logprob: -0.8029165267944336
    2. 'ais' → logprob: -1.0529165267944336
    3. 'isons' → logprob: -1.9279165267944336
    4. 'ison' → logprob: -3.6779165267944336
    5. 'h' → logprob: -4.427916526794434
    6. 'is' → logprob: -6.177916526794434
    7. 'r' → logprob: -6.177916526794434
    8. 'aise' → logprob: -6.302916526794434
    9. 'raison' → logprob: -6.427916526794434
    10. 'a' → logprob: -6.802916526794434

Token 548: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00023655613767914474
    2. 'sons' → logprob: -8.500236511230469
    3. 'on' → logprob: -11.375236511230469
    4. 'ions' → logprob: -12.000236511230469
    5. 's' → logprob: -12.125236511230469
    6. 't' → logprob: -13.250236511230469
    7. '#' → logprob: -13.375236511230469
    8. '[' → logprob: -14.375236511230469
    9. 'isons' → logprob: -14.500236511230469
    10. '```' → logprob: -14.875236511230469

Token 549: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1640264093875885
    2. ' a' → logprob: -2.0390264987945557
    3. 'n' → logprob: -4.039026260375977
    4. ' n' → logprob: -6.789026260375977
    5. 'avait' → logprob: -7.664026260375977
    6. 'print' → logprob: -8.164026260375977
    7. 's' → logprob: -8.164026260375977
    8. 'ind' → logprob: -8.664026260375977
    9. ' ' → logprob: -9.039026260375977
    10. 'ne' → logprob: -9.039026260375977

Token 550: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.06633254885673523
    2. ' la' → logprob: -3.5663325786590576
    3. 'le' → logprob: -4.0663323402404785
    4. 'l' → logprob: -5.0663323402404785
    5. 'h' → logprob: -5.1913323402404785
    6. 'les' → logprob: -5.9413323402404785
    7. '   ' → logprob: -6.4413323402404785
    8. 'print' → logprob: -6.9413323402404785
    9. '#' → logprob: -8.066332817077637
    10. ' ' → logprob: -8.441332817077637

Token 551: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.00934943463653326
    2. 'else' → logprob: -6.009349346160889
    3. ' boucle' → logprob: -6.009349346160889
    4. 'for' → logprob: -6.134349346160889
    5. ' bou' → logprob: -7.009349346160889
    6. 'if' → logprob: -8.259349822998047
    7. '   ' → logprob: -8.384349822998047
    8. 'b' → logprob: -8.634349822998047
    9. ' for' → logprob: -9.134349822998047
    10. 'loop' → logprob: -9.384349822998047

Token 552: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18179580569267273
    2. ' a' → logprob: -2.556795835494995
    3. 'n' → logprob: -2.931795835494995
    4. 'print' → logprob: -4.056795597076416
    5. ' n' → logprob: -4.431795597076416
    6. 'avait' → logprob: -6.056795597076416
    7. 's' → logprob: -6.806795597076416
    8. '   ' → logprob: -7.056795597076416
    9. 'ind' → logprob: -8.181796073913574
    10. ' print' → logprob: -8.306796073913574

Token 553: ''a' (ID: 10443)
  Prédit: ''a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.5685312151908875
    2. 'a' → logprob: -0.9435312151908875
    3. ''est' → logprob: -3.4435312747955322
    4. ''ont' → logprob: -5.818531036376953
    5. ''' → logprob: -6.318531036376953
    6. ''était' → logprob: -6.693531036376953
    7. '#' → logprob: -6.943531036376953
    8. ''avait' → logprob: -7.068531036376953
    9. 'éc' → logprob: -7.193531036376953
    10. 'ont' → logprob: -7.193531036376953

Token 554: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.005865628831088543
    2. ' pas' → logprob: -5.505865573883057
    3. 'pu' → logprob: -7.005865573883057
    4. 'respect' → logprob: -7.880865573883057
    5. 'été' → logprob: -7.880865573883057
    6. '#' → logprob: -10.630866050720215
    7. 'pass' → logprob: -10.880866050720215
    8. 'p' → logprob: -11.130866050720215
    9. ' été' → logprob: -11.380866050720215
    10. 'put' → logprob: -11.505866050720215

Token 555: ' respect' (ID: 5618)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.39834555983543396
    2. ' respect' → logprob: -1.5233455896377563
    3. 'été' → logprob: -3.023345470428467
    4. ' été' → logprob: -4.148345470428467
    5. ' réussi' → logprob: -4.523345470428467
    6. 'print' → logprob: -4.898345470428467
    7. 'pas' → logprob: -5.023345470428467
    8. 's' → logprob: -5.148345470428467
    9. 'pass' → logprob: -5.273345470428467
    10. 'pu' → logprob: -5.648345470428467

Token 556: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08878077566623688
    2. 'ée' → logprob: -2.5887808799743652
    3. 'ed' → logprob: -5.088780879974365
    4. 'e' → logprob: -5.838780879974365
    5. '"' → logprob: -8.088780403137207
    6. 'ées' → logprob: -9.088780403137207
    7. 'és' → logprob: -9.588780403137207
    8. 'u' → logprob: -9.963780403137207
    9. 'es' → logprob: -10.213780403137207
    10. 'er' → logprob: -10.463780403137207

Token 557: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09836042672395706
    2. '"' → logprob: -2.598360538482666
    3. 'la' → logprob: -5.098360538482666
    4. 'the' → logprob: -5.723360538482666
    5. '()' → logprob: -6.098360538482666
    6. ' la' → logprob: -6.223360538482666
    7. 'le' → logprob: -6.348360538482666
    8. ' ' → logprob: -6.473360538482666
    9. 'l' → logprob: -7.848360538482666
    10. '   ' → logprob: -7.973360538482666

Token 558: ' règle' (ID: 115826)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.5039669275283813
    2. 'condition' → logprob: -1.1289669275283813
    3. '"' → logprob: -3.253966808319092
    4. 'con' → logprob: -4.378966808319092
    5. 'contra' → logprob: -5.003966808319092
    6. 'constraint' → logprob: -5.378966808319092
    7. ' condition' → logprob: -6.128966808319092
    8. '">' → logprob: -7.003966808319092
    9. 'la' → logprob: -7.003966808319092
    10. 'cond' → logprob: -7.253966808319092

Token 559: '.
' (ID: 558)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005076381494291127
    2. 'print' → logprob: -8.250507354736328
    3. '"No' → logprob: -8.750507354736328
    4. '   ' → logprob: -10.375507354736328
    5. '"' → logprob: -10.625507354736328
    6. 'No' → logprob: -11.625507354736328
    7. '(No' → logprob: -12.125507354736328
    8. ')' → logprob: -12.375507354736328
    9. '(' → logprob: -13.000507354736328
    10. '()' → logprob: -13.250507354736328

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760255455970764
    2. 'print' → logprob: -0.8260255455970764
    3. ' print' → logprob: -9.82602596282959
    4. '```' → logprob: -10.45102596282959
    5. '	print' → logprob: -13.07602596282959
    6. '       ' → logprob: -14.07602596282959
    7. '``' → logprob: -15.57602596282959
    8. '(print' → logprob: -16.451025009155273
    9. 'Print' → logprob: -16.701025009155273
    10. '.print' → logprob: -17.951025009155273

Token 561: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021366903092712164
    2. '   ' → logprob: -8.500213623046875
    3. ' print' → logprob: -11.500213623046875
    4. '```' → logprob: -18.500213623046875
    5. '	print' → logprob: -18.750213623046875
    6. '  ' → logprob: -20.125213623046875
    7. ' ' → logprob: -20.125213623046875
    8. '       ' → logprob: -20.625213623046875
    9. '.print' → logprob: -21.375213623046875
    10. 'Print' → logprob: -21.875213623046875

Token 562: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000553151941858232
    2. '(' → logprob: -7.500553131103516
    3. '('' → logprob: -16.250553131103516
    4. '("")' → logprob: -17.500553131103516
    5. '(
' → logprob: -17.875553131103516
    6. '()' → logprob: -18.000553131103516
    7. '("("' → logprob: -18.500553131103516
    8. '("""' → logprob: -18.875553131103516
    9. ' ("' → logprob: -19.250553131103516
    10. ')("' → logprob: -19.625553131103516

Token 563: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -9.088346359931165e-07
    2. '"No' → logprob: -14.000000953674316
    3. ' No' → logprob: -19.625
    4. '"' → logprob: -22.75
    5. 'NO' → logprob: -23.5
    6. '_No' → logprob: -25.375
    7. '“No' → logprob: -25.375
    8. '>No' → logprob: -25.5
    9. 'Yes' → logprob: -25.875
    10. '
' → logprob: -26.375

Token 564: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004114019684493542
    2. ')' → logprob: -5.504114151000977
    3. ')")' → logprob: -10.254114151000977
    4. '")
' → logprob: -15.254114151000977
    5. '')' → logprob: -16.129114151000977
    6. ')"' → logprob: -17.629114151000977
    7. '}")' → logprob: -17.754114151000977
    8. '()' → logprob: -18.629114151000977
    9. '"' → logprob: -18.629114151000977
    10. ' ")' → logprob: -18.879114151000977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 562
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 306
Précision stricte (1ère position): 25.62%
Précision adaptée (1ère position): 26.51%
Précision (top 10): 54.45%
================================================================================
