================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input_line():
    return sys.stdin.readline().strip()

def create_2d_list(num_rows, num_cols, initial_value):
    return [[initial_value] * num_cols for _ in range(num_rows)]

def create_3d_list(dim1, dim2, dim3, initial_value):
    return [[[initial_value] * dim3 for _ in range(dim2)] for _ in range(dim1)]

def create_4d_list(dim1, dim2, dim3, dim4, initial_value):
    return [[[[initial_value] * dim4 for _ in range(dim3)] for _ in range(dim2)] for _ in range(dim1)]

def integer_ceiling(dividend, divisor=1):
    return int(-(-dividend // divisor))

def read_integer():
    return int(read_input_line())

def read_int_map():
    return map(int, read_input_line().split())

def read_integer_list(length=None):
    if length is None:
        return list(read_int_map())
    else:
        return [read_integer() for _ in range(length)]

def print_yes_lowercase():
    print('Yes')

def print_no_lowercase():
    print('No')

def print_yes_uppercase():
    print('YES')

def print_no_uppercase():
    print('NO')

sys.setrecursionlimit(10 ** 9)

LARGE_NUMBER_INFINITY = 10 ** 18
MODULO_DIVISOR = 10 ** 9 + 7

input_string = read_input_line()
input_string_length = len(input_string)

# dp_table[index][abc_state]: number of ways to select first (abc_state) chars of "ABC" up to index-th character 
number_of_characters = input_string_length
number_of_abc_states = 4

dp_table = create_2d_list(number_of_characters + 1, number_of_abc_states, 0)
dp_table[0][0] = 1

for current_index in range(number_of_characters):
    current_character = input_string[current_index]
    for abc_progress in range(number_of_abc_states):
        # Option 1: Do not select the current character
        if current_character == '?':
            # '?' can transition to three different types
            dp_table[current_index + 1][abc_progress] += dp_table[current_index][abc_progress] * 3
            dp_table[current_index + 1][abc_progress] %= MODULO_DIVISOR
        else:
            dp_table[current_index + 1][abc_progress] += dp_table[current_index][abc_progress]
            dp_table[current_index + 1][abc_progress] %= MODULO_DIVISOR
        
        # Option 2: Select the current character if valid for the next letter in "ABC"
        if abc_progress < 3:
            is_valid_selection = (
                current_character == '?' or
                (current_character == 'A' and abc_progress == 0) or
                (current_character == 'B' and abc_progress == 1) or
                (current_character == 'C' and abc_progress == 2)
            )
            if is_valid_selection:
                dp_table[current_index + 1][abc_progress + 1] += dp_table[current_index][abc_progress]
                dp_table[current_index + 1][abc_progress + 1] %= MODULO_DIVISOR

# Output: number of ways to select "A", "B", "C" in order, possibly using '?'
print(dp_table[number_of_characters][3])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01726255752146244
    2. ' ' → logprob: -5.8922624588012695
    3. ' space' → logprob: -6.1422624588012695
    4. '<|end|>' → logprob: -6.2672624588012695
    5. ' a' → logprob: -6.8922624588012695
    6. '  ' → logprob: -7.0172624588012695
    7. '_' → logprob: -7.2672624588012695
    8. ' def' → logprob: -7.3922624588012695
    9. ' process' → logprob: -7.5172624588012695
    10. ' main' → logprob: -7.5172624588012695

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2547767758369446
    2. '_' → logprob: -1.5047767162322998
    3. ' (' → logprob: -6.504776954650879
    4. '_line' → logprob: -7.379776954650879
    5. ':' → logprob: -9.504776954650879
    6. '```' → logprob: -9.504776954650879
    7. ' ' → logprob: -9.629776954650879
    8. '_input' → logprob: -9.879776954650879
    9. 's' → logprob: -9.879776954650879
    10. '_data' → logprob: -10.004776954650879

Token 6: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011178919114172459
    2. '_' → logprob: -4.636178970336914
    3. '():' → logprob: -7.136178970336914
    4. ' (' → logprob: -8.761178970336914
    5. '(_' → logprob: -9.386178970336914
    6. ':' → logprob: -9.886178970336914
    7. '```' → logprob: -9.886178970336914
    8. '(_:' → logprob: -9.886178970336914
    9. '):' → logprob: -10.636178970336914
    10. '_:' → logprob: -10.761178970336914

Token 7: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3923654556274414
    2. '(' → logprob: -1.1423654556274414
    3. ':' → logprob: -6.642365455627441
    4. '(:' → logprob: -6.767365455627441
    5. 's' → logprob: -7.017365455627441
    6. '):' → logprob: -7.142365455627441
    7. '(s' → logprob: -7.642365455627441
    8. '(":' → logprob: -8.517365455627441
    9. ' ():' → logprob: -8.767365455627441
    10. '(line' → logprob: -8.892365455627441

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09494249522686005
    2. ' return' → logprob: -2.719942569732666
    3. '(' → logprob: -4.719942569732666
    4. 'return' → logprob: -4.969942569732666
    5. '```' → logprob: -6.469942569732666
    6. '    
' → logprob: -6.969942569732666
    7. '\' → logprob: -7.094942569732666
    8. '(return' → logprob: -7.094942569732666
    9. ':return' → logprob: -7.344942569732666
    10. '    ' → logprob: -7.594942569732666

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6714057922363281
    2. 'return' (adapté à ' return') → logprob: -1.1714057922363281
    3. ' line' → logprob: -2.421405792236328
    4. ' return' → logprob: -3.171405792236328
    5. 'line' → logprob: -3.421405792236328
    6. 'try' → logprob: -4.421405792236328
    7. ' try' → logprob: -6.171405792236328
    8. 'input' → logprob: -7.421405792236328
    9. 'data' → logprob: -8.046405792236328
    10. '    ' → logprob: -8.671405792236328

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023975146934390068
    2. 'sys' → logprob: -3.773975133895874
    3. ' input' → logprob: -7.523975372314453
    4. 'input' → logprob: -8.648975372314453
    5. ' ' → logprob: -11.398975372314453
    6. '(sys' → logprob: -13.648975372314453
    7. '=sys' → logprob: -14.523975372314453
    8. ' ' → logprob: -14.523975372314453
    9. '	sys' → logprob: -15.148975372314453
    10. ' system' → logprob: -16.148975372314453

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006544724106788635
    2. '.stdin' → logprob: -5.631544589996338
    3. '.readline' → logprob: -6.381544589996338
    4. '.stdout' → logprob: -7.506544589996338
    5. '.argv' → logprob: -7.881544589996338
    6. ' .' → logprob: -8.631545066833496
    7. '.exit' → logprob: -9.881545066833496
    8. '.import' → logprob: -10.756545066833496
    9. '.stderr' → logprob: -11.381545066833496
    10. '.next' → logprob: -11.381545066833496

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009238460334017873
    2. '.' → logprob: -7.6259236335754395
    3. '.read' → logprob: -7.7509236335754395
    4. '.readlines' → logprob: -12.375924110412598
    5. '.Read' → logprob: -14.625924110412598
    6. '.write' → logprob: -15.125924110412598
    7. ' readline' → logprob: -15.500924110412598
    8. 'read' → logprob: -16.37592315673828
    9. ' .' → logprob: -16.75092315673828
    10. '().' → logprob: -17.00092315673828

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00035631912760436535
    2. '().' → logprob: -9.000356674194336
    3. '()
' → logprob: -9.375356674194336
    4. '(' → logprob: -9.500356674194336
    5. ' ()' → logprob: -10.375356674194336
    6. '()(' → logprob: -11.375356674194336
    7. '()

' → logprob: -11.625356674194336
    8. '()\' → logprob: -11.875356674194336
    9. '`()' → logprob: -12.250356674194336
    10. '()`' → logprob: -13.000356674194336

Token 14: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0040799472481012344
    2. 'rstrip' → logprob: -5.504079818725586
    3. '```' → logprob: -14.379079818725586
    4. 'decode' → logprob: -15.254079818725586
    5. 'replace' → logprob: -15.379079818725586
    6. ' strip' → logprob: -15.879079818725586
    7. '_strip' → logprob: -16.379079818725586
    8. 'read' → logprob: -16.629079818725586
    9. 'split' → logprob: -16.629079818725586
    10. 'startswith' → logprob: -17.629079818725586

Token 15: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5234710574150085
    2. '(' → logprob: -0.8984710574150085
    3. '(
' → logprob: -8.523470878601074
    4. '(

' → logprob: -10.273470878601074
    5. '(\' → logprob: -10.648470878601074
    6. '()(' → logprob: -11.148470878601074
    7. '`()' → logprob: -11.398470878601074
    8. '()
' → logprob: -11.523470878601074
    9. '"' → logprob: -12.148470878601074
    10. '```' → logprob: -12.398470878601074

Token 16: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2403644621372223
    2. '\n' → logprob: -1.9903644323349
    3. '' → logprob: -3.4903645515441895
    4. '

' → logprob: -4.4903645515441895
    5. '\' → logprob: -4.6153645515441895
    6. '#' → logprob: -4.8653645515441895
    7. '```' → logprob: -5.3653645515441895
    8. '(' → logprob: -5.7403645515441895
    9. '<|end|>' → logprob: -6.4903645515441895
    10. ' ' → logprob: -6.8653645515441895

Token 17: ' create' (ID: 2501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09750553965568542
    2. '_' → logprob: -3.097505569458008
    3. ' main' → logprob: -4.347505569458008
    4. ' calculate' → logprob: -4.722505569458008
    5. ' read' → logprob: -4.847505569458008
    6. ' space' → logprob: -4.972505569458008
    7. ' process' → logprob: -5.597505569458008
    8. ' write' → logprob: -6.097505569458008
    9. ' add' → logprob: -7.347505569458008
    10. ' compute' → logprob: -7.847505569458008

Token 18: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004774956963956356
    2. '_user' → logprob: -7.254775047302246
    3. '_function' → logprob: -7.879775047302246
    4. ' _' → logprob: -8.004775047302246
    5. '_line' → logprob: -8.254775047302246
    6. '_token' → logprob: -8.379775047302246
    7. '_element' → logprob: -8.629775047302246
    8. '_table' → logprob: -8.629775047302246
    9. '_space' → logprob: -8.754775047302246
    10. '_database' → logprob: -9.254775047302246

Token 19: '2' (ID: 17)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.9858982563018799
    2. 'matrix' → logprob: -2.36089825630188
    3. 'user' → logprob: -2.61089825630188
    4. 'list' → logprob: -2.98589825630188
    5. 'dict' → logprob: -2.98589825630188
    6. 'dictionary' → logprob: -2.98589825630188
    7. 'array' → logprob: -3.36089825630188
    8. 'database' → logprob: -3.36089825630188
    9. 'directory' → logprob: -3.86089825630188
    10. 'data' → logprob: -3.98589825630188

Token 20: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.478266179561615
    2. 'D' → logprob: -1.7282662391662598
    3. 'd' → logprob: -2.6032662391662598
    4. '_dim' → logprob: -3.1032662391662598
    5. '_array' → logprob: -3.1032662391662598
    6. '_' → logprob: -4.10326623916626
    7. '_matrix' → logprob: -4.47826623916626
    8. '0' → logprob: -5.60326623916626
    9. '_dimension' → logprob: -5.72826623916626
    10. '_list' → logprob: -6.97826623916626

Token 21: '_list' (ID: 4162)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.04380973428487778
    2. '_' → logprob: -3.418809652328491
    3. '_list' → logprob: -4.66880989074707
    4. '_matrix' → logprob: -7.66880989074707
    5. 'array' → logprob: -8.79380989074707
    6. '_arr' → logprob: -10.16880989074707
    7. '_vector' → logprob: -11.54380989074707
    8. '_arrays' → logprob: -11.91880989074707
    9. '```' → logprob: -12.04380989074707
    10. '_a' → logprob: -12.16880989074707

Token 22: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046153197763487697
    2. '("("' → logprob: -8.37546157836914
    3. '(n' → logprob: -10.12546157836914
    4. ' (' → logprob: -10.12546157836914
    5. '(size' → logprob: -10.50046157836914
    6. '((' → logprob: -10.87546157836914
    7. '_' → logprob: -11.25046157836914
    8. '(
' → logprob: -11.87546157836914
    9. '<|end|>' → logprob: -12.00046157836914
    10. '(name' → logprob: -12.00046157836914

Token 23: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.46588578820228577
    2. '_elements' → logprob: -1.5908857583999634
    3. 's' → logprob: -2.340885877609253
    4. '_' → logprob: -3.590885877609253
    5. '_s' → logprob: -3.715885877609253
    6. '_cells' → logprob: -4.840885639190674
    7. '_items' → logprob: -5.340885639190674
    8. ')' → logprob: -6.590885639190674
    9. '_lines' → logprob: -6.965885639190674
    10. '_of' → logprob: -7.215885639190674

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011558275582501665
    2. ',num' → logprob: -9.375115394592285
    3. ' ,' → logprob: -10.875115394592285
    4. '‌,' → logprob: -12.625115394592285
    5. ',n' → logprob: -12.750115394592285
    6. ' ' → logprob: -13.625115394592285
    7. '):' → logprob: -13.750115394592285
    8. ')' → logprob: -14.250115394592285
    9. ',size' → logprob: -14.250115394592285
    10. ',int' → logprob: -15.250115394592285

Token 25: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.201427161693573
    2. ' num' → logprob: -1.7014272212982178
    3. ' ' → logprob: -12.326427459716797
    4. '   ' → logprob: -12.576427459716797
    5. '	num' → logprob: -12.701427459716797
    6. '_num' → logprob: -13.951427459716797
    7. '    ' → logprob: -14.326427459716797
    8. ')' → logprob: -14.576427459716797
    9. ',num' → logprob: -15.076427459716797
    10. '  ' → logprob: -15.701427459716797

Token 26: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.2521839737892151
    2. '_columns' → logprob: -1.5021839141845703
    3. '_' → logprob: -8.87718391418457
    4. '_rows' → logprob: -9.87718391418457
    5. '_col' → logprob: -10.12718391418457
    6. '_elements' → logprob: -11.50218391418457
    7. '_cells' → logprob: -12.00218391418457
    8. ' _' → logprob: -13.12718391418457
    9. '_COLUMNS' → logprob: -14.00218391418457
    10. 's' → logprob: -14.12718391418457

Token 27: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026151363272219896
    2. ')' → logprob: -6.002614974975586
    3. ' ):' → logprob: -9.627614974975586
    4. ',' → logprob: -9.877614974975586
    5. ':' → logprob: -11.252614974975586
    6. '):
' → logprob: -12.502614974975586
    7. '   ' → logprob: -13.127614974975586
    8. '=' → logprob: -14.002614974975586
    9. '*' → logprob: -14.752614974975586
    10. ' ' → logprob: -15.127614974975586

Token 28: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40901634097099304
    2. ' None' → logprob: -1.5340163707733154
    3. ' value' → logprob: -3.6590163707733154
    4. ' ' → logprob: -3.9090163707733154
    5. ' default' → logprob: -3.9090163707733154
    6. 'value' → logprob: -4.159016132354736
    7. 'None' → logprob: -4.534016132354736
    8. ' )' → logprob: -4.659016132354736
    9. ' initial' → logprob: -5.034016132354736
    10. 'default' → logprob: -5.159016132354736

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.1314515471458435
    2. '_' → logprob: -2.1314516067504883
    3. '_)' → logprob: -6.006451606750488
    4. ')' → logprob: -6.881451606750488
    5. ')_' → logprob: -8.006451606750488
    6. '_val' → logprob: -8.506451606750488
    7. ' _' → logprob: -8.506451606750488
    8. '_=' → logprob: -8.881451606750488
    9. ' )' → logprob: -10.006451606750488
    10. '=_' → logprob: -10.881451606750488

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013975556939840317
    2. ')' → logprob: -4.638975620269775
    3. '=' → logprob: -5.513975620269775
    4. ' ):' → logprob: -8.763975143432617
    5. '):
' → logprob: -12.138975143432617
    6. ')=' → logprob: -12.138975143432617
    7. ':' → logprob: -12.138975143432617
    8. ' ' → logprob: -12.513975143432617
    9. ' )' → logprob: -14.138975143432617
    10. '   ' → logprob: -14.138975143432617

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24310483038425446
    2. '   ' → logprob: -1.8681048154830933
    3. '(' → logprob: -3.868104934692383
    4. '):' → logprob: -3.868104934692383
    5. ' :' → logprob: -4.618104934692383
    6. '():' → logprob: -5.118104934692383
    7. '    ' → logprob: -7.118104934692383
    8. '[:]' → logprob: -7.743104934692383
    9. ' (' → logprob: -7.868104934692383
    10. '  ' → logprob: -8.618104934692383

Token 32: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4493144750595093
    2. ' [' → logprob: -1.9493144750595093
    3. '   ' → logprob: -2.324314594268799
    4. '[
' → logprob: -2.449314594268799
    5. ' [
' → logprob: -3.574314594268799
    6. ' return' → logprob: -6.324314594268799
    7. ' [[' → logprob: -6.949314594268799
    8. ' ' → logprob: -7.074314594268799
    9. '[]' → logprob: -7.074314594268799
    10. 'return' (adapté à ' return') → logprob: -7.574314594268799

Token 33: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.7991321682929993
    2. '[[' → logprob: -0.7991321682929993
    3. '[' → logprob: -2.5491321086883545
    4. ' [' → logprob: -3.7991321086883545
    5. '[
' → logprob: -11.174132347106934
    6. '[['' → logprob: -12.174132347106934
    7. ' [
' → logprob: -13.924132347106934
    8. ' [[]' → logprob: -14.549132347106934
    9. '[]' → logprob: -14.674132347106934
    10. ' ' → logprob: -15.424132347106934

Token 34: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -3.7697225252486533e-06
    2. ' initial' → logprob: -12.500003814697266
    3. '	initial' → logprob: -18.250003814697266
    4. '.initial' → logprob: -19.125003814697266
    5. '(initial' → logprob: -19.750003814697266
    6. '_initial' → logprob: -20.000003814697266
    7. '初' → logprob: -22.000003814697266
    8. 'Initial' → logprob: -22.250003814697266
    9. 'initializer' → logprob: -22.375003814697266
    10. 'int' → logprob: -22.875003814697266

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0026554400101304054
    2. '_' → logprob: -6.627655506134033
    3. ' _' → logprob: -6.627655506134033
    4. '_val' → logprob: -13.502655029296875
    5. 'Value' → logprob: -14.002655029296875
    6. '_space' → logprob: -14.002655029296875
    7. '_values' → logprob: -14.627655029296875
    8. 's' → logprob: -15.127655029296875
    9. 'ize' → logprob: -15.502655029296875
    10. '```' → logprob: -15.627655029296875

Token 36: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0037316649686545134
    2. 'for' → logprob: -5.628731727600098
    3. ']' → logprob: -9.253731727600098
    4. ' ]' → logprob: -11.253731727600098
    5. ' ' → logprob: -11.753731727600098
    6. ')' → logprob: -12.003731727600098
    7. '   ' → logprob: -12.253731727600098
    8. '	for' → logprob: -13.628731727600098
    9. '    ' → logprob: -13.878731727600098
    10. ']*' → logprob: -14.503731727600098

Token 37: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004624629858881235
    2. 'for' → logprob: -5.379624843597412
    3. ' ' → logprob: -13.379624366760254
    4. '    ' → logprob: -13.379624366760254
    5. '	for' → logprob: -14.129624366760254
    6. '   ' → logprob: -15.379624366760254
    7. ']' → logprob: -16.12962532043457
    8. '        ' → logprob: -16.25462532043457
    9. ')' → logprob: -16.37962532043457
    10. '  ' → logprob: -16.87962532043457

Token 38: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20141538977622986
    2. ' num' → logprob: -1.7014154195785522
    3. '(num' → logprob: -13.326415061950684
    4. ',num' → logprob: -15.826415061950684
    5. '=num' → logprob: -16.326416015625
    6. '	num' → logprob: -16.326416015625
    7. ' ' → logprob: -16.326416015625
    8. '<num' → logprob: -16.451416015625
    9. '$num' → logprob: -17.576416015625
    10. '[num' → logprob: -18.076416015625

Token 39: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.001963605172932148
    2. '_rows' → logprob: -6.2519636154174805
    3. '_col' → logprob: -10.37696361541748
    4. '_' → logprob: -13.12696361541748
    5. '_columns' → logprob: -14.87696361541748
    6. 'Cols' → logprob: -14.87696361541748
    7. '-cols' → logprob: -15.00196361541748
    8. 'cols' → logprob: -15.25196361541748
    9. '_COL' → logprob: -15.37696361541748
    10. ' _' → logprob: -15.62696361541748

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043963853269815445
    2. 'for' → logprob: -3.16896390914917
    3. '   ' → logprob: -7.41896390914917
    4. ']' → logprob: -8.168963432312012
    5. '	for' → logprob: -10.293963432312012
    6. ' ]' → logprob: -10.918963432312012
    7. ' ' → logprob: -11.668963432312012
    8. '    ' → logprob: -12.168963432312012
    9. ')' → logprob: -12.168963432312012
    10. '       ' → logprob: -12.668963432312012

Token 41: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.042907264083623886
    2. ' range' → logprob: -4.042907238006592
    3. '_' → logprob: -4.292907238006592
    4. ' ' → logprob: -4.792907238006592
    5. '<|end|>' → logprob: -6.792907238006592
    6. '<|end|>' → logprob: -7.542907238006592
    7. ' in' → logprob: -8.16790771484375
    8. 'range' → logprob: -9.04290771484375
    9. ' ' → logprob: -9.16790771484375
    10. ' xrange' → logprob: -9.66790771484375

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1789858043193817
    2. 'range' → logprob: -2.053985834121704
    3. 'in' → logprob: -3.428985834121704
    4. ' range' → logprob: -5.803985595703125
    5. ' ' → logprob: -9.678985595703125
    6. '_' → logprob: -10.053985595703125
    7. ' _' → logprob: -10.678985595703125
    8. '	range' → logprob: -10.803985595703125
    9. '  ' → logprob: -10.928985595703125
    10. ' xrange' → logprob: -11.053985595703125

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931697130203247
    2. 'range' → logprob: -0.6931697130203247
    3. '	range' → logprob: -11.193169593811035
    4. ' ' → logprob: -12.443169593811035
    5. ' xrange' → logprob: -13.318169593811035
    6. '_range' → logprob: -13.568169593811035
    7. '   ' → logprob: -14.443169593811035
    8. '  ' → logprob: -14.443169593811035
    9. '_' → logprob: -15.318169593811035
    10. 'rang' → logprob: -15.568169593811035

Token 44: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0026005071122199297
    2. '(' → logprob: -6.00260066986084
    3. ' (' → logprob: -9.00260066986084
    4. 'num' → logprob: -14.12760066986084
    5. ' num' → logprob: -14.62760066986084
    6. ',num' → logprob: -15.12760066986084
    7. '<num' → logprob: -16.127599716186523
    8. '(number' → logprob: -17.627599716186523
    9. ')' → logprob: -17.877599716186523
    10. '=num' → logprob: -17.877599716186523

Token 45: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.50001049041748
    3. 'rows' → logprob: -12.62501049041748
    4. '_cols' → logprob: -13.75001049041748
    5. '_ROWS' → logprob: -13.75001049041748
    6. ' ' → logprob: -15.87501049041748
    7. '	rows' → logprob: -16.000009536743164
    8. ' _' → logprob: -16.125009536743164
    9. '_r' → logprob: -16.500009536743164
    10. '   ' → logprob: -16.750009536743164

Token 46: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.3358446166384965e-05
    2. ']' → logprob: -10.000053405761719
    3. ')' → logprob: -12.000053405761719
    4. '   ' → logprob: -14.375053405761719
    5. '])]' → logprob: -15.000053405761719
    6. '])' → logprob: -15.500053405761719
    7. ')])' → logprob: -15.500053405761719
    8. ' )' → logprob: -15.625053405761719
    9. ')]
' → logprob: -16.50005340576172
    10. '')]' → logprob: -16.75005340576172

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04128360003232956
    2. '
' → logprob: -4.04128360748291
    3. 'd' → logprob: -4.54128360748291
    4. '#' → logprob: -4.91628360748291
    5. '```' → logprob: -6.54128360748291
    6. '

' → logprob: -6.79128360748291
    7. '<|end|>' → logprob: -6.91628360748291
    8. '\' → logprob: -7.04128360748291
    9. 'de' → logprob: -9.41628360748291
    10. '\n' → logprob: -9.91628360748291

Token 48: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0291340351104736
    2. ' calculate' → logprob: -1.0291340351104736
    3. ' solve' → logprob: -2.6541340351104736
    4. ' process' → logprob: -2.9041340351104736
    5. ' read' → logprob: -3.7791340351104736
    6. ' compute' → logprob: -3.7791340351104736
    7. ' find' → logprob: -4.0291337966918945
    8. ' count' → logprob: -4.1541337966918945
    9. ' max' → logprob: -4.5291337966918945
    10. ' sort' → logprob: -5.1541337966918945

Token 49: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005970627069473267
    2. ' _' → logprob: -5.505970478057861
    3. '_list' → logprob: -7.755970478057861
    4. '_set' → logprob: -8.00597095489502
    5. '_s' → logprob: -9.25597095489502
    6. '_a' → logprob: -9.38097095489502
    7. '_mult' → logprob: -9.50597095489502
    8. '_array' → logprob: -10.00597095489502
    9. '_string' → logprob: -10.00597095489502
    10. '_cube' → logprob: -10.13097095489502

Token 50: '3' (ID: 18)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07457371801137924
    2. '2' → logprob: -3.1995737552642822
    3. '3' → logprob: -3.9495737552642822
    4. '1' → logprob: -5.449573516845703
    5. ' ' → logprob: -6.324573516845703
    6. '_list' → logprob: -6.949573516845703
    7. 'dict' → logprob: -7.074573516845703
    8. '_set' → logprob: -7.574573516845703
    9. '_matrix' → logprob: -7.574573516845703
    10. '_rows' → logprob: -8.199573516845703

Token 51: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.062127333134412766
    2. 'd' → logprob: -2.8121273517608643
    3. '_dim' → logprob: -9.437127113342285
    4. 'D' → logprob: -9.937127113342285
    5. '_' → logprob: -11.187127113342285
    6. ' _' → logprob: -12.187127113342285
    7. ' d' → logprob: -12.187127113342285
    8. '```' → logprob: -12.437127113342285
    9. 'def' → logprob: -14.687127113342285
    10. '_def' → logprob: -14.812127113342285

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.006483130622655153
    2. '_' → logprob: -5.25648307800293
    3. ' _' → logprob: -8.13148307800293
    4. '_li' → logprob: -8.25648307800293
    5. '_line' → logprob: -9.00648307800293
    6. '_lst' → logprob: -9.13148307800293
    7. '_lists' → logprob: -9.25648307800293
    8. '_array' → logprob: -9.25648307800293
    9. '_code' → logprob: -10.25648307800293
    10. '_string' → logprob: -10.50648307800293

Token 53: '(dim' (ID: 80871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08258829265832901
    2. '(num' → logprob: -2.9575881958007812
    3. '<|end|>' → logprob: -4.082588195800781
    4. ' (' → logprob: -4.957588195800781
    5. '(size' → logprob: -6.832588195800781
    6. '<|end|>' → logprob: -7.457588195800781
    7. '(n' → logprob: -8.332588195800781
    8. '(user' → logprob: -8.957588195800781
    9. '(len' → logprob: -9.332588195800781
    10. '(space' → logprob: -9.832588195800781

Token 54: '1' (ID: 16)
  Prédit: 'ensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensions' → logprob: -0.01997554488480091
    2. 's' → logprob: -4.644975662231445
    3. 'ension' → logprob: -4.644975662231445
    4. 'ENSIONS' → logprob: -7.769975662231445
    5. 'ensiones' → logprob: -10.394975662231445
    6. 'ENSION' → logprob: -10.769975662231445
    7. 'ens' → logprob: -10.769975662231445
    8. '_' → logprob: -11.019975662231445
    9. '```' → logprob: -11.769975662231445
    10. 'e' → logprob: -12.019975662231445

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009254236705601215
    2. ' ,' → logprob: -5.009254455566406
    3. '_,' → logprob: -6.884254455566406
    4. 's' → logprob: -7.634254455566406
    5. ')' → logprob: -8.009254455566406
    6. ',num' → logprob: -8.509254455566406
    7. ',size' → logprob: -9.384254455566406
    8. '_' → logprob: -9.384254455566406
    9. ',_' → logprob: -9.509254455566406
    10. '):' → logprob: -9.509254455566406

Token 56: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.003219184000045061
    2. 'dim' → logprob: -5.753219127655029
    3. '(dim' → logprob: -10.128219604492188
    4. '_dim' → logprob: -13.878219604492188
    5. '.dim' → logprob: -15.003219604492188
    6. ' dims' → logprob: -16.378219604492188
    7. ' ' → logprob: -16.628219604492188
    8. ')' → logprob: -17.378219604492188
    9. 'Dim' → logprob: -17.503219604492188
    10. 'dims' → logprob: -18.003219604492188

Token 57: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4587942361831665
    2. 's' → logprob: -1.2087942361831665
    3. 'ensions' → logprob: -2.833794116973877
    4. 'ension' → logprob: -5.583794116973877
    5. '2' → logprob: -5.708794116973877
    6. '_dims' → logprob: -7.208794116973877
    7. '_' → logprob: -7.333794116973877
    8. '_dim' → logprob: -7.333794116973877
    9. '_rows' → logprob: -7.458794116973877
    10. '_cols' → logprob: -8.708794593811035

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018232580623589456
    2. ' ,' → logprob: -8.625182151794434
    3. '‌,' → logprob: -13.750182151794434
    4. ',d' → logprob: -14.875182151794434
    5. ')' → logprob: -15.250182151794434
    6. ',num' → logprob: -15.625182151794434
    7. '<|end|>' → logprob: -16.12518310546875
    8. '‍,' → logprob: -16.37518310546875
    9. ' ' → logprob: -16.37518310546875
    10. '_,' → logprob: -16.75018310546875

Token 59: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.02324652671813965
    2. 'dim' → logprob: -3.7732465267181396
    3. '(dim' → logprob: -14.148246765136719
    4. '_dim' → logprob: -15.148246765136719
    5. ' dims' → logprob: -16.14824676513672
    6. '.dim' → logprob: -17.52324676513672
    7. 'dims' → logprob: -17.64824676513672
    8. ' ' → logprob: -18.39824676513672
    9. ' dimens' → logprob: -18.89824676513672
    10. ' num' → logprob: -19.27324676513672

Token 60: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003334440989419818
    2. '1' → logprob: -5.7533345222473145
    3. 's' → logprob: -9.128334045410156
    4. 'ensions' → logprob: -10.128334045410156
    5. '_rows' → logprob: -13.128334045410156
    6. 'ension' → logprob: -13.128334045410156
    7. '2' → logprob: -13.253334045410156
    8. ' ' → logprob: -14.003334045410156
    9. '0' → logprob: -14.128334045410156
    10. '_cols' → logprob: -15.003334045410156

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005249153473414481
    2. ' ,' → logprob: -8.250524520874023
    3. '):' → logprob: -8.250524520874023
    4. ')' → logprob: -14.500524520874023
    5. '_,' → logprob: -14.625524520874023
    6. ' ):' → logprob: -15.000524520874023
    7. ' ' → logprob: -15.250524520874023
    8. '   ' → logprob: -16.000524520874023
    9. '‌,' → logprob: -16.375524520874023
    10. ',size' → logprob: -16.500524520874023

Token 62: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.006735742092132568
    2. 'initial' → logprob: -5.006735801696777
    3. '(initial' → logprob: -12.131735801696777
    4. ' ' → logprob: -12.381735801696777
    5. '_initial' → logprob: -12.506735801696777
    6. '	initial' → logprob: -13.256735801696777
    7. ' inicial' → logprob: -13.506735801696777
    8. ')' → logprob: -13.631735801696777
    9. '   ' → logprob: -14.631735801696777
    10. '  ' → logprob: -14.756735801696777

Token 63: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2828444242477417
    2. '_' → logprob: -1.4078444242477417
    3. '_val' → logprob: -6.907844543457031
    4. ' _' → logprob: -7.907844543457031
    5. ')_' → logprob: -9.282844543457031
    6. '_Value' → logprob: -9.407844543457031
    7. ')' → logprob: -9.657844543457031
    8. '_)' → logprob: -10.907844543457031
    9. '_VALUE' → logprob: -10.907844543457031
    10. '_values' → logprob: -11.282844543457031

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012773419439326972
    2. ')' → logprob: -9.250127792358398
    3. ' ):' → logprob: -10.500127792358398
    4. ']:' → logprob: -13.750127792358398
    5. '):
' → logprob: -14.000127792358398
    6. '   ' → logprob: -14.125127792358398
    7. ':' → logprob: -14.375127792358398
    8. '=' → logprob: -14.625127792358398
    9. '）：' → logprob: -15.750127792358398
    10. ''):' → logprob: -16.6251277923584

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006713286275044084
    2. ' return' → logprob: -7.50067138671875
    3. '[' → logprob: -9.75067138671875
    4. 'return' → logprob: -10.00067138671875
    5. ' [' → logprob: -12.00067138671875
    6. '    ' → logprob: -12.37567138671875
    7. '[[' → logprob: -13.75067138671875
    8. '[
' → logprob: -14.25067138671875
    9. '	return' → logprob: -14.50067138671875
    10. '  ' → logprob: -14.62567138671875

Token 66: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02667226456105709
    2. ' return' → logprob: -3.65167236328125
    3. 'return' (adapté à ' return') → logprob: -8.40167236328125
    4. '    ' → logprob: -9.15167236328125
    5. ' [' → logprob: -10.90167236328125
    6. ' ' → logprob: -11.65167236328125
    7. '[' → logprob: -12.15167236328125
    8. '  ' → logprob: -12.52667236328125
    9. '	return' → logprob: -13.27667236328125
    10. '       ' → logprob: -13.90167236328125

Token 67: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04458391293883324
    2. ' [[[' → logprob: -3.294583797454834
    3. ' [[' → logprob: -5.044583797454834
    4. '[' → logprob: -9.794584274291992
    5. ' [' → logprob: -10.794584274291992
    6. ' ' → logprob: -15.044584274291992
    7. '[['' → logprob: -16.169584274291992
    8. '[
' → logprob: -16.669584274291992
    9. '[]' → logprob: -17.044584274291992
    10. '   ' → logprob: -17.294584274291992

Token 68: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.1472419600977446e-06
    2. ' initial' → logprob: -13.750000953674316
    3. '(initial' → logprob: -18.375001907348633
    4. '	initial' → logprob: -19.125001907348633
    5. '.initial' → logprob: -20.375001907348633
    6. '   ' → logprob: -21.875001907348633
    7. '_initial' → logprob: -22.125001907348633
    8. ' ' → logprob: -23.125001907348633
    9. '初' → logprob: -23.500001907348633
    10. 'INITIAL' → logprob: -24.250001907348633

Token 69: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.125005722045898
    3. 'value' → logprob: -14.625005722045898
    4. '_Value' → logprob: -16.8750057220459
    5. 'Value' → logprob: -17.0000057220459
    6. '_VALUE' → logprob: -17.2500057220459
    7. '_val' → logprob: -17.3750057220459
    8. ' _' → logprob: -18.1250057220459
    9. '_values' → logprob: -18.3750057220459
    10. '_initial' → logprob: -18.5000057220459

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019621781539171934
    2. ' ]' → logprob: -6.251962184906006
    3. ']*' → logprob: -11.126961708068848
    4. ' for' → logprob: -11.376961708068848
    5. '   ' → logprob: -12.376961708068848
    6. ')' → logprob: -14.001961708068848
    7. ']]' → logprob: -14.251961708068848
    8. '']' → logprob: -14.251961708068848
    9. 'for' → logprob: -15.126961708068848
    10. ' ' → logprob: -15.626961708068848

Token 71: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14597560465335846
    2. ' for' → logprob: -2.6459755897521973
    3. ' ]' → logprob: -3.2709755897521973
    4. ']*' → logprob: -3.7709755897521973
    5. ' *' → logprob: -6.020975589752197
    6. 'for' → logprob: -7.270975589752197
    7. '*' → logprob: -7.520975589752197
    8. '    ' → logprob: -9.270976066589355
    9. ' ' → logprob: -9.895976066589355
    10. '   ' → logprob: -10.395976066589355

Token 72: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.0040854052640497684
    2. ' dim' → logprob: -5.504085540771484
    3. '(dim' → logprob: -11.879085540771484
    4. '.dim' → logprob: -19.879085540771484
    5. '_dim' → logprob: -20.254085540771484
    6. ' ' → logprob: -20.629085540771484
    7. '  ' → logprob: -21.254085540771484
    8. '3' → logprob: -21.504085540771484
    9. '    ' → logprob: -22.129085540771484
    10. '   ' → logprob: -22.254085540771484

Token 73: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -16.5
    3. '   ' → logprob: -16.875
    4. ' ' → logprob: -16.9375
    5. '```' → logprob: -17.0
    6. '1' → logprob: -17.375
    7. '_cols' → logprob: -17.6875
    8. '       ' → logprob: -18.875
    9. 'cols' → logprob: -18.875
    10. '  ' → logprob: -18.9375

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02742610312998295
    2. 'for' → logprob: -3.65242600440979
    3. ']' → logprob: -7.027426242828369
    4. ' ]' → logprob: -9.402425765991211
    5. '   ' → logprob: -9.527425765991211
    6. '       ' → logprob: -10.402425765991211
    7. ' ' → logprob: -10.902425765991211
    8. '    ' → logprob: -11.652425765991211
    9. '           ' → logprob: -12.027425765991211
    10. '	for' → logprob: -12.402425765991211

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38688918948173523
    2. ' _' → logprob: -1.1368892192840576
    3. '_range' → logprob: -11.886889457702637
    4. '_dim' → logprob: -12.386889457702637
    5. '_in' → logprob: -13.511889457702637
    6. ' in' → logprob: -13.636889457702637
    7. ' ' → logprob: -13.636889457702637
    8. '_j' → logprob: -14.636889457702637
    9. '_col' → logprob: -14.636889457702637
    10. '<|end|>' → logprob: -14.636889457702637

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9132242202758789
    2. ' range' → logprob: -0.9132242202758789
    3. 'range' → logprob: -2.163224220275879
    4. '_' → logprob: -2.663224220275879
    5. ' _' → logprob: -4.788224220275879
    6. 'in' → logprob: -5.913224220275879
    7. '_range' → logprob: -6.538224220275879
    8. ' ' → logprob: -8.788224220275879
    9. '	range' → logprob: -9.663224220275879
    10. '(range' → logprob: -9.788224220275879

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018228843808174133
    2. 'range' → logprob: -4.018229007720947
    3. '	range' → logprob: -9.518228530883789
    4. '_range' → logprob: -12.893228530883789
    5. ' xrange' → logprob: -13.393228530883789
    6. '(range' → logprob: -14.518228530883789
    7. ' ' → logprob: -15.268228530883789
    8. '_' → logprob: -15.518228530883789
    9. ' _' → logprob: -16.14322853088379
    10. ' rango' → logprob: -16.76822853088379

Token 78: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -5.200166469876422e-06
    2. 'dim' → logprob: -12.500004768371582
    3. '(' → logprob: -13.875004768371582
    4. ' (' → logprob: -14.875004768371582
    5. ' dim' → logprob: -16.6250057220459
    6. '_dim' → logprob: -18.3750057220459
    7. '.dim' → logprob: -20.3750057220459
    8. '(dom' → logprob: -20.8750057220459
    9. '(di' → logprob: -20.8750057220459
    10. '(depth' → logprob: -21.0000057220459

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. 'dim' → logprob: -13.875003814697266
    4. '1' → logprob: -15.250003814697266
    5. '   ' → logprob: -15.562503814697266
    6. '```' → logprob: -16.000003814697266
    7. 's' → logprob: -16.250003814697266
    8. 'def' → logprob: -17.187503814697266
    9. '₂' → logprob: -17.250003814697266
    10. ')' → logprob: -17.312503814697266

Token 80: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02422197349369526
    2. ']' → logprob: -3.774221897125244
    3. '   ' → logprob: -7.899221897125244
    4. ')' → logprob: -8.149222373962402
    5. ' ]' → logprob: -8.274222373962402
    6. ']]' → logprob: -10.149222373962402
    7. '       ' → logprob: -12.149222373962402
    8. ' ' → logprob: -12.649222373962402
    9. ' )' → logprob: -12.774222373962402
    10. '    ' → logprob: -13.024222373962402

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.051224976778030396
    2. 'for' → logprob: -3.051224946975708
    3. ' in' → logprob: -6.551225185394287
    4. '	for' → logprob: -7.176225185394287
    5. ']' → logprob: -8.676224708557129
    6. '   ' → logprob: -9.176224708557129
    7. 'in' → logprob: -9.801224708557129
    8. ')' → logprob: -10.301224708557129
    9. '<|end|>' → logprob: -10.301224708557129
    10. '    ' → logprob: -10.801224708557129

Token 82: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0791630744934082
    2. ' _' → logprob: -3.079163074493408
    3. 'range' → logprob: -4.454163074493408
    4. '_' → logprob: -4.829163074493408
    5. '<|end|>' → logprob: -5.579163074493408
    6. ' dim' → logprob: -5.954163074493408
    7. ' ' → logprob: -6.454163074493408
    8. '_range' → logprob: -7.079163074493408
    9. ' xrange' → logprob: -7.204163074493408
    10. '	range' → logprob: -7.954163074493408

Token 83: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31013137102127075
    2. ' in' → logprob: -1.935131311416626
    3. ' range' → logprob: -2.185131311416626
    4. 'in' → logprob: -4.685131549835205
    5. '	range' → logprob: -7.935131549835205
    6. '_' → logprob: -9.310131072998047
    7. '<|end|>' → logprob: -10.560131072998047
    8. '(range' → logprob: -10.685131072998047
    9. ' ' → logprob: -11.310131072998047
    10. ' xrange' → logprob: -11.685131072998047

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0006800267728976905
    2. 'range' → logprob: -7.375679969787598
    3. '	range' → logprob: -10.000679969787598
    4. ' xrange' → logprob: -12.750679969787598
    5. '_range' → logprob: -13.625679969787598
    6. ' ' → logprob: -13.625679969787598
    7. '(range' → logprob: -13.875679969787598
    8. ' rang' → logprob: -14.125679969787598
    9. '_' → logprob: -14.750679969787598
    10. ' ran' → logprob: -15.375679969787598

Token 85: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -4.7994282795116305e-05
    2. ' (' → logprob: -10.37504768371582
    3. '(' → logprob: -11.25004768371582
    4. ' dim' → logprob: -13.00004768371582
    5. '(range' → logprob: -14.12504768371582
    6. 'dim' → logprob: -14.37504768371582
    7. ' range' → logprob: -16.62504768371582
    8. '_dim' → logprob: -17.12504768371582
    9. ' ' → logprob: -17.50004768371582
    10. 'range' → logprob: -18.87504768371582

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. '3' → logprob: -11.375018119812012
    3. ' ' → logprob: -13.000018119812012
    4. '_rows' → logprob: -13.125018119812012
    5. '0' → logprob: -14.312518119812012
    6. '```' → logprob: -14.875018119812012
    7. ')' → logprob: -15.312518119812012
    8. '_cols' → logprob: -16.062517166137695
    9. '_' → logprob: -16.125017166137695
    10. '  ' → logprob: -16.375017166137695

Token 87: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019446993246674538
    2. ']' → logprob: -6.251944541931152
    3. ')' → logprob: -11.751944541931152
    4. '])]' → logprob: -12.376944541931152
    5. '])' → logprob: -13.626944541931152
    6. ' ]' → logprob: -13.876944541931152
    7. ')])' → logprob: -14.126944541931152
    8. ']]' → logprob: -14.876944541931152
    9. ')],' → logprob: -15.626944541931152
    10. '}]' → logprob: -16.12694549560547

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46016719937324524
    2. 'd' → logprob: -1.3351671695709229
    3. '#' → logprob: -2.960167169570923
    4. '
' → logprob: -3.085167169570923
    5. '\' → logprob: -5.460167407989502
    6. '

' → logprob: -6.835167407989502
    7. '```' → logprob: -7.585167407989502
    8. ' 
' → logprob: -7.710167407989502
    9. 'n' → logprob: -7.835167407989502
    10. 'de' → logprob: -8.335166931152344

Token 89: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5944913625717163
    2. ' calculate' → logprob: -1.5944913625717163
    3. ' parse' → logprob: -3.469491481781006
    4. ' compute' → logprob: -3.719491481781006
    5. ' ' → logprob: -3.844491481781006
    6. ' add' → logprob: -3.969491481781006
    7. ' read' → logprob: -4.094491481781006
    8. ' convert' → logprob: -4.219491481781006
    9. ' process' → logprob: -4.219491481781006
    10. ' factorial' → logprob: -4.344491481781006

Token 90: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008689741604030132
    2. ' _' → logprob: -5.008689880371094
    3. '_list' → logprob: -8.133689880371094
    4. '_string' → logprob: -8.258689880371094
    5. '_s' → logprob: -9.008689880371094
    6. '_array' → logprob: -9.258689880371094
    7. '```' → logprob: -9.383689880371094
    8. '_a' → logprob: -9.508689880371094
    9. '_line' → logprob: -10.008689880371094
    10. '__' → logprob: -10.008689880371094

Token 91: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33686888217926025
    2. '1' → logprob: -1.8368688821792603
    3. '4' → logprob: -2.3368687629699707
    4. 'list' → logprob: -4.586868762969971
    5. 'dict' → logprob: -4.711868762969971
    6. '3' → logprob: -5.086868762969971
    7. 'nd' → logprob: -6.961868762969971
    8. 'default' → logprob: -7.336868762969971
    9. 'matrix' → logprob: -7.586868762969971
    10. 'set' → logprob: -7.711868762969971

Token 92: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.576998770236969
    2. '_d' → logprob: -0.826998770236969
    3. 'D' → logprob: -7.201998710632324
    4. '_dim' → logprob: -8.326998710632324
    5. '_' → logprob: -9.826998710632324
    6. 'dim' → logprob: -11.826998710632324
    7. '_list' → logprob: -12.951998710632324
    8. ' d' → logprob: -12.951998710632324
    9. '```' → logprob: -13.451998710632324
    10. '_dims' → logprob: -13.951998710632324

Token 93: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0024806505534797907
    2. '_' → logprob: -6.127480506896973
    3. '_li' → logprob: -9.127480506896973
    4. '_lists' → logprob: -9.877480506896973
    5. ' _' → logprob: -10.002480506896973
    6. '_lst' → logprob: -10.377480506896973
    7. '_lista' → logprob: -11.627480506896973
    8. '_array' → logprob: -11.752480506896973
    9. '_line' → logprob: -12.127480506896973
    10. '_l' → logprob: -12.127480506896973

Token 94: '(dim' (ID: 80871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35139548778533936
    2. '(dim' → logprob: -1.2263954877853394
    3. '(num' → logprob: -6.101395606994629
    4. ' (' → logprob: -7.726395606994629
    5. '(def' → logprob: -9.851395606994629
    6. '_dim' → logprob: -10.476395606994629
    7. '("("' → logprob: -10.851395606994629
    8. '(n' → logprob: -11.101395606994629
    9. '(size' → logprob: -11.226395606994629
    10. '(d' → logprob: -11.351395606994629

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3135097026824951
    2. 's' → logprob: -1.3135097026824951
    3. 'ensions' → logprob: -8.688509941101074
    4. ',' → logprob: -10.313509941101074
    5. '<|end|>' → logprob: -11.438509941101074
    6. '0' → logprob: -12.188509941101074
    7. '_' → logprob: -12.438509941101074
    8. 'icients' → logprob: -12.688509941101074
    9. 'ension' → logprob: -12.688509941101074
    10. 'ensional' → logprob: -12.938509941101074

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',num' → logprob: -12.625020027160645
    4. ',int' → logprob: -14.875020027160645
    5. ',d' → logprob: -14.875020027160645
    6. '‌,' → logprob: -15.250020027160645
    7. ',size' → logprob: -15.500020027160645
    8. ',
' → logprob: -15.625020027160645
    9. ',n' → logprob: -16.25002098083496
    10. ',param' → logprob: -16.25002098083496

Token 97: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.25193288922309875
    2. ' dim' → logprob: -1.5019328594207764
    3. '(dim' → logprob: -13.001933097839355
    4. '_dim' → logprob: -13.751933097839355
    5. 'dims' → logprob: -15.251933097839355
    6. '<|end|>' → logprob: -16.50193214416504
    7. '.dim' → logprob: -16.62693214416504
    8. ' ' → logprob: -17.12693214416504
    9. '    ' → logprob: -17.25193214416504
    10. 'Dim' → logprob: -17.37693214416504

Token 98: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014781530015170574
    2. '2' → logprob: -4.264781475067139
    3. 'ensions' → logprob: -8.514781951904297
    4. '<|end|>' → logprob: -8.639781951904297
    5. '_rows' → logprob: -9.639781951904297
    6. '<|end|>' → logprob: -11.014781951904297
    7. '4' → logprob: -11.139781951904297
    8. 'ension' → logprob: -11.264781951904297
    9. '```' → logprob: -11.264781951904297
    10. '_dims' → logprob: -11.389781951904297

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8921695047756657e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',d' → logprob: -14.375028610229492
    4. '‌,' → logprob: -14.750028610229492
    5. '<|end|>' → logprob: -16.125028610229492
    6. '`,' → logprob: -16.500028610229492
    7. ',
' → logprob: -17.000028610229492
    8. '_,' → logprob: -17.500028610229492
    9. ',num' → logprob: -17.625028610229492
    10. '‍,' → logprob: -17.875028610229492

Token 100: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.06197429448366165
    2. 'dim' → logprob: -2.811974287033081
    3. '_dim' → logprob: -12.81197452545166
    4. '(dim' → logprob: -12.93697452545166
    5. ' ' → logprob: -14.56197452545166
    6. 'Dim' → logprob: -15.18697452545166
    7. '.dim' → logprob: -15.56197452545166
    8. 'dims' → logprob: -16.061973571777344
    9. '    ' → logprob: -16.186973571777344
    10. '```' → logprob: -16.436973571777344

Token 101: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. '_' → logprob: -18.25
    4. '```' → logprob: -19.625
    5. '３' → logprob: -20.0
    6. 'dim' → logprob: -20.75
    7. '2' → logprob: -20.8125
    8. 's' → logprob: -20.875
    9. '٣' → logprob: -20.875
    10. ' ' → logprob: -21.0625

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',d' → logprob: -13.625029563903809
    4. '‌,' → logprob: -15.000029563903809
    5. ',
' → logprob: -15.375029563903809
    6. ',num' → logprob: -16.625030517578125
    7. ' ' → logprob: -17.500030517578125
    8. 's' → logprob: -17.500030517578125
    9. ',s' → logprob: -17.500030517578125
    10. '<|end|>' → logprob: -17.625030517578125

Token 103: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.16022777557373047
    2. 'dim' → logprob: -1.9102277755737305
    3. '_dim' → logprob: -13.16022777557373
    4. '(dim' → logprob: -13.78522777557373
    5. '.dim' → logprob: -15.28522777557373
    6. '    ' → logprob: -15.53522777557373
    7. ' ' → logprob: -15.91022777557373
    8. ' ' → logprob: -16.160228729248047
    9. '   ' → logprob: -17.535228729248047
    10. 'd' → logprob: -17.660228729248047

Token 104: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -17.125
    3. 'ensions' → logprob: -17.125
    4. '2' → logprob: -17.75
    5. ' ' → logprob: -17.875
    6. '' → logprob: -18.75
    7. '0' → logprob: -18.75
    8. '<|end|>' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. '٤' → logprob: -19.4375

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015920029545668513
    2. ' ,' → logprob: -8.87515926361084
    3. '):' → logprob: -11.12515926361084
    4. '_,' → logprob: -12.50015926361084
    5. ')' → logprob: -15.25015926361084
    6. '_' → logprob: -15.75015926361084
    7. ' ' → logprob: -15.87515926361084
    8. '‌,' → logprob: -16.250158309936523
    9. ',
' → logprob: -17.250158309936523
    10. ',_' → logprob: -17.250158309936523

Token 106: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.12693388760089874
    2. 'initial' → logprob: -2.1269338130950928
    3. 'Initial' → logprob: -13.501934051513672
    4. '	initial' → logprob: -13.626934051513672
    5. '_initial' → logprob: -13.751934051513672
    6. '   ' → logprob: -14.501934051513672
    7. ' ' → logprob: -14.626934051513672
    8. '(initial' → logprob: -14.751934051513672
    9. '  ' → logprob: -15.376934051513672
    10. '.initial' → logprob: -15.501934051513672

Token 107: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0010854477295652032
    2. '_' → logprob: -6.87608528137207
    3. '_val' → logprob: -10.25108528137207
    4. ' _' → logprob: -11.62608528137207
    5. '_values' → logprob: -12.87608528137207
    6. 'value' → logprob: -13.25108528137207
    7. '_Value' → logprob: -13.25108528137207
    8. 'Value' → logprob: -14.50108528137207
    9. '_VALUE' → logprob: -15.00108528137207
    10. '_v' → logprob: -15.25108528137207

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001737431448418647
    2. ' ):' → logprob: -9.250173568725586
    3. ')' → logprob: -9.500173568725586
    4. '):
' → logprob: -13.000173568725586
    5. ':' → logprob: -15.875173568725586
    6. '   ' → logprob: -16.250173568725586
    7. ''):' → logprob: -16.750173568725586
    8. '    ' → logprob: -17.625173568725586
    9. '"):' → logprob: -17.750173568725586
    10. '=' → logprob: -17.750173568725586

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004528030753135681
    2. ' return' → logprob: -6.379528045654297
    3. ')' → logprob: -6.504528045654297
    4. '):' → logprob: -7.879528045654297
    5. 'return' → logprob: -8.129528045654297
    6. '):
' → logprob: -8.379528045654297
    7. '[' → logprob: -8.754528045654297
    8. ':' → logprob: -9.004528045654297
    9. '=' → logprob: -10.129528045654297
    10. ':return' → logprob: -10.629528045654297

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005498887505382299
    2. ' return' → logprob: -5.505498886108398
    3. '   ' → logprob: -7.255498886108398
    4. '[[' → logprob: -7.255498886108398
    5. 'def' → logprob: -12.255498886108398
    6. ':return' → logprob: -14.005498886108398
    7. ')' → logprob: -14.880498886108398
    8. '	return' → logprob: -15.005498886108398
    9. '`' → logprob: -15.505498886108398
    10. '```' → logprob: -15.880498886108398

Token 111: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.5213274309644476e-05
    2. ' [[' → logprob: -11.500015258789062
    3. ' [[[' → logprob: -12.375015258789062
    4. '[' → logprob: -14.125015258789062
    5. '[
' → logprob: -17.250015258789062
    6. '   ' → logprob: -18.875015258789062
    7. 'create' → logprob: -19.500015258789062
    8. '[['' → logprob: -20.000015258789062
    9. '([[' → logprob: -21.125015258789062
    10. ' ' → logprob: -21.125015258789062

Token 112: '[[' (ID: 26245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.56233171664644e-05
    2. '[[' → logprob: -10.125055313110352
    3. ' [' → logprob: -11.500055313110352
    4. 'initial' → logprob: -12.375055313110352
    5. '
' → logprob: -15.000055313110352
    6. '[
' → logprob: -15.250055313110352
    7. 'create' → logprob: -16.75005531311035
    8. '(initial' → logprob: -16.75005531311035
    9. '[get' → logprob: -17.00005531311035
    10. '([' → logprob: -17.37505531311035

Token 113: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -4.320199877838604e-07
    2. ' initial' → logprob: -14.75
    3. '   ' → logprob: -19.375
    4. '	initial' → logprob: -19.375
    5. '(initial' → logprob: -20.625
    6. '_initial' → logprob: -21.125
    7. '.initial' → logprob: -21.25
    8. ' ' → logprob: -23.375
    9. 'original' → logprob: -24.5
    10. '    ' → logprob: -24.875

Token 114: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.465036105713807e-06
    2. 'value' → logprob: -12.375007629394531
    3. '_' → logprob: -12.875007629394531
    4. 'alue' → logprob: -15.625007629394531
    5. 'Value' → logprob: -15.750007629394531
    6. '_VALUE' → logprob: -15.875007629394531
    7. '_Value' → logprob: -17.00000762939453
    8. ' _' → logprob: -17.75000762939453
    9. '_values' → logprob: -18.12500762939453
    10. '_val' → logprob: -18.25000762939453

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001769616355886683
    2. ' ]' → logprob: -8.875177383422852
    3. ']*' → logprob: -10.250177383422852
    4. '*' → logprob: -14.375177383422852
    5. '']' → logprob: -14.750177383422852
    6. ')' → logprob: -15.250177383422852
    7. '"]' → logprob: -15.500177383422852
    8. ' *' → logprob: -15.750177383422852
    9. '   ' → logprob: -16.62517738342285
    10. ' for' → logprob: -17.37517738342285

Token 116: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004231547005474567
    2. ']*' → logprob: -5.7542314529418945
    3. ' ]' → logprob: -7.1292314529418945
    4. '*' → logprob: -8.879231452941895
    5. ' *' → logprob: -9.129231452941895
    6. ' for' → logprob: -13.504231452941895
    7. '']' → logprob: -14.129231452941895
    8. ']]' → logprob: -14.879231452941895
    9. ')' → logprob: -15.004231452941895
    10. '"]' → logprob: -15.129231452941895

Token 117: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.00861528143286705
    2. ' dim' → logprob: -4.758615493774414
    3. '(dim' → logprob: -14.258615493774414
    4. '_dim' → logprob: -16.133615493774414
    5. '    ' → logprob: -18.133615493774414
    6. '.dim' → logprob: -19.133615493774414
    7. ' ' → logprob: -19.758615493774414
    8. '4' → logprob: -20.133615493774414
    9. 'd' → logprob: -20.383615493774414
    10. '   ' → logprob: -20.633615493774414

Token 118: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '' → logprob: -18.5
    3. '৪' → logprob: -18.75
    4. '٤' → logprob: -19.625
    5. '۴' → logprob: -19.75
    6. '४' → logprob: -20.0
    7. '_' → logprob: -21.1875
    8. '４' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. '3' → logprob: -21.9375

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07910580188035965
    2. 'for' → logprob: -2.579105854034424
    3. '    ' → logprob: -9.954105377197266
    4. ' ' → logprob: -10.329105377197266
    5. '        ' → logprob: -10.329105377197266
    6. '   ' → logprob: -10.454105377197266
    7. '       ' → logprob: -11.079105377197266
    8. '	for' → logprob: -11.204105377197266
    9. '           ' → logprob: -11.704105377197266
    10. '         ' → logprob: -11.829105377197266

Token 120: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01155915018171072
    2. '_' → logprob: -4.511559009552002
    3. ' in' → logprob: -7.636559009552002
    4. ' ' → logprob: -10.76155948638916
    5. '_in' → logprob: -12.01155948638916
    6. ' _
' → logprob: -14.63655948638916
    7. '<|end|>' → logprob: -14.76155948638916
    8. 'in' → logprob: -14.88655948638916
    9. '_range' → logprob: -16.511558532714844
    10. ' ' → logprob: -16.761558532714844

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0058200061321258545
    2. ' _' → logprob: -6.380819797515869
    3. 'in' → logprob: -6.505819797515869
    4. '_' → logprob: -6.630819797515869
    5. 'range' → logprob: -7.130819797515869
    6. ' range' → logprob: -7.755819797515869
    7. 'ange' → logprob: -10.505820274353027
    8. ' ' → logprob: -11.005820274353027
    9. '_in' → logprob: -11.630820274353027
    10. '_range' → logprob: -11.755820274353027

Token 122: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7962656617164612
    2. '_' → logprob: -1.2962656021118164
    3. 'range' → logprob: -1.2962656021118164
    4. '_range' → logprob: -6.921265602111816
    5. ' _' → logprob: -7.546265602111816
    6. ' in' → logprob: -7.921265602111816
    7. 'in' → logprob: -12.546265602111816
    8. '	range' → logprob: -13.046265602111816
    9. '_in' → logprob: -13.546265602111816
    10. ' ' → logprob: -14.046265602111816

Token 123: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.625001907348633
    4. 'dim' → logprob: -17.000001907348633
    5. '(di' → logprob: -18.250001907348633
    6. '(dom' → logprob: -19.125001907348633
    7. ' dim' → logprob: -19.875001907348633
    8. '(def' → logprob: -20.250001907348633
    9. '(
' → logprob: -20.500001907348633
    10. '(depth' → logprob: -20.625001907348633

Token 124: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004626291338354349
    2. '2' → logprob: -5.379626274108887
    3. '1' → logprob: -13.004626274108887
    4. '_cols' → logprob: -13.629626274108887
    5. 'dim' → logprob: -14.129626274108887
    6. 'cols' → logprob: -14.629626274108887
    7. ' ' → logprob: -14.629626274108887
    8. ')' → logprob: -15.629626274108887
    9. '(dim' → logprob: -16.254627227783203
    10. '_dims' → logprob: -16.317127227783203

Token 125: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006750424392521381
    2. ']' → logprob: -5.006750583648682
    3. ']]' → logprob: -11.256750106811523
    4. ')' → logprob: -11.506750106811523
    5. '   ' → logprob: -12.006750106811523
    6. ' ]' → logprob: -12.381750106811523
    7. '}]' → logprob: -14.756750106811523
    8. ')]
' → logprob: -15.256750106811523
    9. '       ' → logprob: -15.381750106811523
    10. ']
' → logprob: -15.756750106811523

Token 126: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014276213012635708
    2. 'for' → logprob: -4.264276027679443
    3. '    ' → logprob: -9.764276504516602
    4. ' in' → logprob: -10.139276504516602
    5. '	for' → logprob: -12.139276504516602
    6. '   ' → logprob: -12.639276504516602
    7. '        ' → logprob: -12.639276504516602
    8. ' ' → logprob: -13.014276504516602
    9. '  ' → logprob: -14.889276504516602
    10. '            ' → logprob: -15.014276504516602

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.001966223819181323
    2. '_' → logprob: -6.2519659996032715
    3. ' in' → logprob: -11.00196647644043
    4. ' range' → logprob: -11.25196647644043
    5. ' ' → logprob: -11.87696647644043
    6. '<|end|>' → logprob: -14.62696647644043
    7. '_range' → logprob: -14.75196647644043
    8. '_in' → logprob: -15.37696647644043
    9. ' _
' → logprob: -17.50196647644043
    10. 'range' → logprob: -19.50196647644043

Token 128: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11979839205741882
    2. 'range' → logprob: -2.369798421859741
    3. ' in' → logprob: -3.994798421859741
    4. '_' → logprob: -7.494798183441162
    5. '_range' → logprob: -8.24479866027832
    6. ' _' → logprob: -8.86979866027832
    7. 'in' → logprob: -11.49479866027832
    8. '_in' → logprob: -11.99479866027832
    9. '(range' → logprob: -12.24479866027832
    10. ' ' → logprob: -12.36979866027832

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03805388882756233
    2. ' range' → logprob: -3.2880539894104004
    3. '_range' → logprob: -11.538053512573242
    4. '(range' → logprob: -13.288053512573242
    5. '_' → logprob: -14.663053512573242
    6. '	range' → logprob: -14.663053512573242
    7. ' xrange' → logprob: -16.663053512573242
    8. '    ' → logprob: -18.788053512573242
    9. 'rang' → logprob: -19.038053512573242
    10. ' ' → logprob: -19.538053512573242

Token 130: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.375000953674316
    3. ' (' → logprob: -15.500000953674316
    4. 'dim' → logprob: -17.5
    5. '(dom' → logprob: -18.75
    6. '(di' → logprob: -19.375
    7. '(depth' → logprob: -20.5
    8. '(dist' → logprob: -21.125
    9. '(diff' → logprob: -21.375
    10. ' dim' → logprob: -21.375

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'dim' → logprob: -15.500001907348633
    4. '_' → logprob: -16.250001907348633
    5. '₂' → logprob: -16.625001907348633
    6. '۲' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '
' → logprob: -17.875001907348633
    9. '```' → logprob: -18.125001907348633
    10. '２' → logprob: -18.375001907348633

Token 132: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.31374385952949524
    2. ']' → logprob: -1.3137438297271729
    3. ')' → logprob: -8.188743591308594
    4. ' ]' → logprob: -8.938743591308594
    5. '   ' → logprob: -10.313743591308594
    6. ']]' → logprob: -10.438743591308594
    7. '       ' → logprob: -12.688743591308594
    8. ']
' → logprob: -13.563743591308594
    9. '}]' → logprob: -13.688743591308594
    10. '],' → logprob: -13.938743591308594

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008222105912864208
    2. 'for' → logprob: -4.8832221031188965
    3. ' in' → logprob: -7.5082221031188965
    4. '	for' → logprob: -10.508222579956055
    5. '    ' → logprob: -10.883222579956055
    6. '   ' → logprob: -11.508222579956055
    7. '        ' → logprob: -12.258222579956055
    8. '       ' → logprob: -13.133222579956055
    9. ' ' → logprob: -13.758222579956055
    10. 'in' → logprob: -14.133222579956055

Token 134: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00870368629693985
    2. '_' → logprob: -4.758703708648682
    3. ' range' → logprob: -9.508703231811523
    4. '_range' → logprob: -11.258703231811523
    5. 'range' → logprob: -13.883703231811523
    6. ' in' → logprob: -14.633703231811523
    7. ' _
' → logprob: -15.133703231811523
    8. '_in' → logprob: -16.008703231811523
    9. ' ' → logprob: -16.508703231811523
    10. ' ' → logprob: -16.633703231811523

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.311021625995636
    2. 'in' → logprob: -1.4360215663909912
    3. 'range' → logprob: -3.561021566390991
    4. ' range' → logprob: -7.68602180480957
    5. '_' → logprob: -7.68602180480957
    6. '_range' → logprob: -10.31102180480957
    7. 'dim' → logprob: -10.31102180480957
    8. ' _' → logprob: -11.68602180480957
    9. ' ' → logprob: -11.93602180480957
    10. '(range' → logprob: -12.06102180480957

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20150525867938995
    2. ' range' → logprob: -1.7015053033828735
    3. '_range' → logprob: -9.826505661010742
    4. '_' → logprob: -10.451505661010742
    5. '(range' → logprob: -11.826505661010742
    6. '	range' → logprob: -13.951505661010742
    7. 'rang' → logprob: -14.951505661010742
    8. ' xrange' → logprob: -15.576505661010742
    9. 'dim' → logprob: -15.826505661010742
    10. ' ' → logprob: -16.576505661010742

Token 137: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -0.0005133562372066081
    2. ' (' → logprob: -8.625513076782227
    3. '(range' → logprob: -9.000513076782227
    4. ' range' → logprob: -9.625513076782227
    5. 'dim' → logprob: -9.875513076782227
    6. 'range' → logprob: -10.250513076782227
    7. ' dim' → logprob: -10.375513076782227
    8. '(' → logprob: -10.875513076782227
    9. '_dim' → logprob: -13.250513076782227
    10. '_' → logprob: -13.250513076782227

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '_rows' → logprob: -11.375012397766113
    3. 'dim' → logprob: -15.000012397766113
    4. 'def' → logprob: -15.750012397766113
    5. 'rows' → logprob: -15.750012397766113
    6. 's' → logprob: -16.62501335144043
    7. ')' → logprob: -16.87501335144043
    8. 'row' → logprob: -17.31251335144043
    9. '_' → logprob: -17.43751335144043
    10. ' ' → logprob: -17.87501335144043

Token 139: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.038045283406972885
    2. ']' → logprob: -3.2880451679229736
    3. ']]' → logprob: -14.038044929504395
    4. '}]' → logprob: -14.163044929504395
    5. ']}' → logprob: -14.788044929504395
    6. '])]' → logprob: -14.788044929504395
    7. '>]' → logprob: -15.038044929504395
    8. ' ]' → logprob: -15.038044929504395
    9. '()]' → logprob: -15.288044929504395
    10. '])' → logprob: -15.413044929504395

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15967656672000885
    2. '
' → logprob: -2.1596765518188477
    3. '

' → logprob: -4.284676551818848
    4. ':' → logprob: -4.659676551818848
    5. ')' → logprob: -5.409676551818848
    6. ':def' → logprob: -6.534676551818848
    7. '<|end|>' → logprob: -7.284676551818848
    8. ' def' → logprob: -7.784676551818848
    9. ':

' → logprob: -7.784676551818848
    10. ']' → logprob: -8.034676551818848

Token 141: ' integer' (ID: 16336)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21945390105247498
    2. ' create' → logprob: -2.844453811645508
    3. ' factorial' → logprob: -2.969453811645508
    4. ' read' → logprob: -4.219453811645508
    5. ' solve' → logprob: -4.719453811645508
    6. ' parse' → logprob: -4.969453811645508
    7. ' is' → logprob: -5.094453811645508
    8. ' calculate' → logprob: -5.094453811645508
    9. ' max' → logprob: -5.469453811645508
    10. ' add' → logprob: -5.594453811645508

Token 142: '_ce' (ID: 137725)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.308718204498291
    2. '_to' → logprob: -1.433718204498291
    3. '_parse' → logprob: -1.933718204498291
    4. '_div' → logprob: -2.808718204498291
    5. '_input' → logprob: -2.933718204498291
    6. '_split' → logprob: -3.058718204498291
    7. '_parser' → logprob: -3.433718204498291
    8. '_s' → logprob: -3.433718204498291
    9. '_value' → logprob: -3.558718204498291
    10. '_list' → logprob: -3.933718204498291

Token 143: 'iling' (ID: 10741)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.0003936152206733823
    2. 'iling' → logprob: -7.875393390655518
    3. '_il' → logprob: -12.125393867492676
    4. 'l' → logprob: -13.125393867492676
    5. 'ils' → logprob: -13.750393867492676
    6. 'iled' → logprob: -14.125393867492676
    7. 'ling' → logprob: -14.250393867492676
    8. '
' → logprob: -14.625393867492676
    9. '```' → logprob: -14.875393867492676
    10. 'ilm' → logprob: -14.875393867492676

Token 144: '(div' (ID: 73108)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0458468496799469
    2. '_div' → logprob: -3.420846939086914
    3. '(x' → logprob: -5.420846939086914
    4. '(num' → logprob: -6.545846939086914
    5. '(number' → logprob: -6.670846939086914
    6. '(value' → logprob: -6.670846939086914
    7. '(n' → logprob: -6.795846939086914
    8. '(a' → logprob: -6.920846939086914
    9. '(div' → logprob: -7.295846939086914
    10. ' (' → logprob: -7.420846939086914

Token 145: 'idend' (ID: 80275)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0905457735061646
    2. 'ision' → logprob: -1.0905457735061646
    3. 'ide' → logprob: -1.4655457735061646
    4. 's' → logprob: -2.340545654296875
    5. 'ison' → logprob: -9.215545654296875
    6. 'isor' → logprob: -9.215545654296875
    7. '_de' → logprob: -9.340545654296875
    8. '```' → logprob: -9.465545654296875
    9. 'div' → logprob: -9.965545654296875
    10. '(' → logprob: -10.340545654296875

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.500020027160645
    4. ',
' → logprob: -15.750020027160645
    5. 'div' → logprob: -16.250019073486328
    6. ',d' → logprob: -16.375019073486328
    7. '_div' → logprob: -16.750019073486328
    8. ',num' → logprob: -17.000019073486328
    9. '(div' → logprob: -17.375019073486328
    10. ',int' → logprob: -17.875019073486328

Token 147: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.06210112199187279
    2. ' divisor' → logprob: -2.812101125717163
    3. 'divider' → logprob: -9.062101364135742
    4. ' divider' → logprob: -12.187101364135742
    5. 'den' → logprob: -12.312101364135742
    6. '_div' → logprob: -12.562101364135742
    7. ' ' → logprob: -13.812101364135742
    8. ' div' → logprob: -14.312101364135742
    9. '	div' → logprob: -14.437101364135742
    10. 'def' → logprob: -14.937101364135742

Token 148: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006417844560928643
    2. ')' → logprob: -7.375641822814941
    3. '):
' → logprob: -11.500641822814941
    4. ' ):' → logprob: -12.250641822814941
    5. '):
' → logprob: -16.000640869140625
    6. '   ' → logprob: -16.500640869140625
    7. ':' → logprob: -16.500640869140625
    8. '）：' → logprob: -17.125640869140625
    9. ')：' → logprob: -17.125640869140625
    10. ']:' → logprob: -17.250640869140625

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02239697240293026
    2. ' ' → logprob: -3.897397041320801
    3. ')' → logprob: -7.272397041320801
    4. '):' → logprob: -7.772397041320801
    5. ' )' → logprob: -8.0223970413208
    6. '):
' → logprob: -8.7723970413208
    7. '2' → logprob: -9.5223970413208
    8. ' ):' → logprob: -10.1473970413208
    9. ')]' → logprob: -10.3973970413208
    10. 'div' → logprob: -10.6473970413208

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035143180866725743
    2. ')' → logprob: -8.000351905822754
    3. '):
' → logprob: -11.500351905822754
    4. ' ):' → logprob: -12.125351905822754
    5. '   ' → logprob: -16.375350952148438
    6. '):
' → logprob: -16.500350952148438
    7. ':' → logprob: -16.625350952148438
    8. ']:' → logprob: -17.000350952148438
    9. '）：' → logprob: -17.375350952148438
    10. ')：' → logprob: -17.750350952148438

Token 151: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022613653913140297
    2. '   ' → logprob: -3.897613763809204
    3. ':
' → logprob: -6.772613525390625
    4. '):' → logprob: -7.147613525390625
    5. ' :' → logprob: -9.897613525390625
    6. ':return' → logprob: -9.897613525390625
    7. '():' → logprob: -11.272613525390625
    8. '):
' → logprob: -11.522613525390625
    9. ' return' → logprob: -12.647613525390625
    10. ':int' → logprob: -13.397613525390625

Token 152: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0468839593231678
    2. ':' → logprob: -3.296884059906006
    3. ' return' → logprob: -5.046884059906006
    4. 'return' (adapté à ' return') → logprob: -6.796884059906006
    5. ':return' → logprob: -7.421884059906006
    6. '    ' → logprob: -8.671883583068848
    7. ':
' → logprob: -8.796883583068848
    8. '):' → logprob: -9.546883583068848
    9. '       ' → logprob: -9.671883583068848
    10. '	return' → logprob: -10.046883583068848

Token 153: ' int' (ID: 677)
  Prédit: '(div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.10597963631153107
    2. ' (' → logprob: -2.3559796810150146
    3. ' -' → logprob: -5.2309794425964355
    4. '   ' → logprob: -9.105979919433594
    5. '-' → logprob: -9.355979919433594
    6. '-div' → logprob: -9.480979919433594
    7. ' ' → logprob: -9.855979919433594
    8. '-(' → logprob: -9.980979919433594
    9. 'div' → logprob: -11.730979919433594
    10. '  ' → logprob: -12.105979919433594

Token 154: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5790838599205017
    2. '(-' → logprob: -1.7040839195251465
    3. '(' → logprob: -1.8290839195251465
    4. '((' → logprob: -2.4540839195251465
    5. '(div' → logprob: -4.7040839195251465
    6. '-div' → logprob: -6.4540839195251465
    7. '-(' → logprob: -8.704083442687988
    8. ' -' → logprob: -9.079083442687988
    9. 'div' → logprob: -9.579083442687988
    10. '(
' → logprob: -9.829083442687988

Token 155: '(-' (ID: 8087)
  Prédit: '-div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-div' → logprob: -0.8529272675514221
    2. '(-' → logprob: -1.2279272079467773
    3. 'div' → logprob: -1.7279272079467773
    4. '(div' → logprob: -2.4779272079467773
    5. '-' → logprob: -4.602927207946777
    6. '-(' → logprob: -5.102927207946777
    7. '(' → logprob: -6.227927207946777
    8. '(-(' → logprob: -7.352927207946777
    9. ' -' → logprob: -8.352927207946777
    10. ' (' → logprob: -8.852927207946777

Token 156: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -7.553032628493384e-05
    2. ' dividend' → logprob: -9.500075340270996
    3. '(div' → logprob: -15.000075340270996
    4. '	div' → logprob: -15.375075340270996
    5. ' div' → logprob: -17.250076293945312
    6. '<div' → logprob: -17.875076293945312
    7. 'Dividend' → logprob: -18.000076293945312
    8. '   ' → logprob: -18.625076293945312
    9. 'int' → logprob: -18.625076293945312
    10. 'divide' → logprob: -18.750076293945312

Token 157: 'idend' (ID: 80275)
  Prédit: 'idend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.000608198344707489
    2. 'div' → logprob: -8.125608444213867
    3. 'and' → logprob: -9.875608444213867
    4. 'ident' → logprob: -9.875608444213867
    5. 'd' → logprob: -10.125608444213867
    6. ' ' → logprob: -10.250608444213867
    7. ' dividend' → logprob: -10.375608444213867
    8. '   ' → logprob: -10.375608444213867
    9. 'id' → logprob: -10.750608444213867
    10. 's' → logprob: -11.375608444213867

Token 158: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.015033903531730175
    2. '//' → logprob: -4.265033721923828
    3. ' /' → logprob: -7.515033721923828
    4. '/' → logprob: -9.140033721923828
    5. ' ' → logprob: -9.390033721923828
    6. 'div' → logprob: -9.515033721923828
    7. ' ' → logprob: -10.390033721923828
    8. '/div' → logprob: -10.890033721923828
    9. ' div' → logprob: -11.890033721923828
    10. '_div' → logprob: -13.140033721923828

Token 159: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.02977224998176098
    2. ' divisor' → logprob: -3.5297722816467285
    3. '-div' → logprob: -10.90477180480957
    4. '(div' → logprob: -13.65477180480957
    5. ' ' → logprob: -14.02977180480957
    6. ' div' → logprob: -15.02977180480957
    7. '	div' → logprob: -15.15477180480957
    8. '_div' → logprob: -15.40477180480957
    9. ' -' → logprob: -15.65477180480957
    10. ' divis' → logprob: -16.02977180480957

Token 160: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00041863700607791543
    2. ')' → logprob: -8.000418663024902
    3. ')))' → logprob: -9.500418663024902
    4. '))
' → logprob: -12.125418663024902
    5. ' ))' → logprob: -13.000418663024902
    6. '()))' → logprob: -15.875418663024902
    7. '))

' → logprob: -16.250417709350586
    8. ' ' → logprob: -16.375417709350586
    9. '1' → logprob: -16.500417709350586
    10. '))))' → logprob: -16.625417709350586

Token 161: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10205873101949692
    2. '<|end|>' → logprob: -2.6020586490631104
    3. 'def' → logprob: -4.4770588874816895
    4. '
' → logprob: -4.7270588874816895
    5. '#' → logprob: -6.9770588874816895
    6. '<|end|>' → logprob: -7.8520588874816895
    7. '*' → logprob: -8.477058410644531
    8. '(' → logprob: -8.602058410644531
    9. '```' → logprob: -8.602058410644531
    10. '\n' → logprob: -8.977058410644531

Token 162: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0550960935652256
    2. ' integer' → logprob: -3.18009614944458
    3. ' safe' → logprob: -6.05509614944458
    4. ' def' → logprob: -6.05509614944458
    5. 'main' → logprob: -6.30509614944458
    6. ' create' → logprob: -7.05509614944458
    7. ' read' → logprob: -7.43009614944458
    8. ' parse' → logprob: -7.80509614944458
    9. ' gcd' → logprob: -8.180095672607422
    10. ' factorial' → logprob: -8.305095672607422

Token 163: '_integer' (ID: 82911)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.5540907979011536
    2. '_line' → logprob: -1.5540907382965088
    3. '_integer' → logprob: -2.054090738296509
    4. '_input' → logprob: -2.554090738296509
    5. '_' → logprob: -6.054090976715088
    6. 'int' → logprob: -6.554090976715088
    7. '_number' → logprob: -6.929090976715088
    8. '()' → logprob: -7.179090976715088
    9. '_list' → logprob: -7.304090976715088
    10. '_array' → logprob: -7.554090976715088

Token 164: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008240790106356144
    2. '_line' → logprob: -5.133240699768066
    3. '():
' → logprob: -6.508240699768066
    4. '()' → logprob: -7.508240699768066
    5. ' ():' → logprob: -9.508240699768066
    6. 's' → logprob: -9.758240699768066
    7. 'line' → logprob: -9.883240699768066
    8. '_list' → logprob: -10.258240699768066
    9. '()>' → logprob: -11.133240699768066
    10. '_input' → logprob: -11.758240699768066

Token 165: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06789082288742065
    2. '   ' → logprob: -3.4428908824920654
    3. 'int' → logprob: -4.317890644073486
    4. ' return' → logprob: -4.692890644073486
    5. 'return' → logprob: -5.442890644073486
    6. ' ()' → logprob: -5.692890644073486
    7. '(int' → logprob: -6.567890644073486
    8. '():' → logprob: -7.317890644073486
    9. ' int' → logprob: -7.942890644073486
    10. '()
' → logprob: -8.317891120910645

Token 166: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.621482789516449
    2. ' int' → logprob: -1.4964828491210938
    3. ' return' → logprob: -1.7464828491210938
    4. 'return' (adapté à ' return') → logprob: -2.7464828491210938
    5. '   ' → logprob: -7.871482849121094
    6. ' ' → logprob: -12.121482849121094
    7. '(int' → logprob: -13.246482849121094
    8. '=int' → logprob: -13.371482849121094
    9. ' i' → logprob: -13.871482849121094
    10. '	int' → logprob: -14.371482849121094

Token 167: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1002127155661583
    2. 'int' → logprob: -2.350212812423706
    3. '(int' → logprob: -12.850213050842285
    4. ' integer' → logprob: -13.975213050842285
    5. ' ' → logprob: -14.100213050842285
    6. '	int' → logprob: -14.725213050842285
    7. '  ' → logprob: -14.850213050842285
    8. '<int' → logprob: -14.975213050842285
    9. '   ' → logprob: -15.100213050842285
    10. '[int' → logprob: -15.600213050842285

Token 168: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.16025641560554504
    2. '(' → logprob: -1.9102563858032227
    3. '(sys' → logprob: -11.160256385803223
    4. 'read' → logprob: -11.410256385803223
    5. '(
' → logprob: -12.410256385803223
    6. '(input' → logprob: -14.535256385803223
    7. ' (' → logprob: -15.035256385803223
    8. '(re' → logprob: -15.285256385803223
    9. '()' → logprob: -15.410256385803223
    10. '(

' → logprob: -15.410256385803223

Token 169: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.125001907348633
    3. '_in' → logprob: -16.125001907348633
    4. 'input' → logprob: -16.750001907348633
    5. '_line' → logprob: -16.875001907348633
    6. '_INPUT' → logprob: -18.750001907348633
    7. '_Input' → logprob: -19.000001907348633
    8. '_output' → logprob: -19.250001907348633
    9. '_inputs' → logprob: -19.625001907348633
    10. ' _' → logprob: -19.625001907348633

Token 170: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.125000953674316
    3. '_LINE' → logprob: -15.625000953674316
    4. 'line' → logprob: -16.125
    5. '()' → logprob: -16.625
    6. '_l' → logprob: -17.0
    7. ')' → logprob: -17.5
    8. '_lin' → logprob: -18.25
    9. '_Line' → logprob: -18.5
    10. 'Line' → logprob: -19.0

Token 171: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00021105022460687906
    2. '()' → logprob: -8.500210762023926
    3. '())
' → logprob: -12.625210762023926
    4. '()))' → logprob: -13.125210762023926
    5. ')' → logprob: -13.375210762023926
    6. ' ())' → logprob: -14.375210762023926
    7. '())

' → logprob: -16.875211715698242
    8. '()
' → logprob: -16.875211715698242
    9. '().' → logprob: -17.250211715698242
    10. '()]' → logprob: -17.500211715698242

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.53050296427682e-05
    2. '<|end|>' → logprob: -10.12508487701416
    3. '#' → logprob: -10.50008487701416
    4. ')' → logprob: -12.25008487701416
    5. '```' → logprob: -13.00008487701416
    6. '
' → logprob: -13.12508487701416
    7. ' def' → logprob: -13.50008487701416
    8. 'ndef' → logprob: -13.75008487701416
    9. '\' → logprob: -13.75008487701416
    10. 'de' → logprob: -13.87508487701416

Token 173: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1461387574672699
    2. 'read' → logprob: -2.0211386680603027
    3. ' main' → logprob: -6.146138668060303
    4. ' write' → logprob: -8.146139144897461
    5. ' split' → logprob: -8.396139144897461
    6. ' create' → logprob: -8.896139144897461
    7. '_read' → logprob: -9.396139144897461
    8. 'main' → logprob: -9.396139144897461
    9. 'split' → logprob: -9.521139144897461
    10. ' parse' → logprob: -9.771139144897461

Token 174: '_int' (ID: 12285)
  Prédit: '_integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.8060995936393738
    2. '_list' → logprob: -1.0560996532440186
    3. '_' → logprob: -1.9310996532440186
    4. '_in' → logprob: -3.0560996532440186
    5. '_line' → logprob: -5.1810994148254395
    6. '_int' → logprob: -5.9310994148254395
    7. '_multiple' → logprob: -6.1810994148254395
    8. '_tuple' → logprob: -7.5560994148254395
    9. '_array' → logprob: -7.8060994148254395
    10. '_float' → logprob: -7.9310994148254395

Token 175: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018667586147785187
    2. 'eger' → logprob: -4.268667697906494
    3. '_list' → logprob: -5.893667697906494
    4. '_array' → logprob: -6.393667697906494
    5. 'array' → logprob: -11.143667221069336
    6. '()' → logprob: -11.268667221069336
    7. '_vector' → logprob: -11.518667221069336
    8. 'list' → logprob: -11.518667221069336
    9. '_s' → logprob: -12.143667221069336
    10. 'eg' → logprob: -13.518667221069336

Token 176: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005348019185476005
    2. '():
' → logprob: -8.125535011291504
    3. '()' → logprob: -8.375535011291504
    4. ' ():' → logprob: -12.375535011291504
    5. '():

' → logprob: -14.250535011291504
    6. ' ()' → logprob: -14.250535011291504
    7. '()*' → logprob: -14.875535011291504
    8. '()>' → logprob: -15.000535011291504
    9. '()[' → logprob: -15.125535011291504
    10. '_line' → logprob: -15.625535011291504

Token 177: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14592388272285461
    2. '():
' → logprob: -2.0209238529205322
    3. '()' → logprob: -5.770924091339111
    4. '():
' → logprob: -10.270923614501953
    5. 'return' → logprob: -10.520923614501953
    6. '()[' → logprob: -11.270923614501953
    7. '   ' → logprob: -11.395923614501953
    8. '()
' → logprob: -12.270923614501953
    9. '()):
' → logprob: -12.395923614501953
    10. ' ():' → logprob: -12.395923614501953

Token 178: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2570573389530182
    2. 'lambda' → logprob: -2.5070574283599854
    3. 'list' → logprob: -2.5070574283599854
    4. 'return' (adapté à ' return') → logprob: -2.7570574283599854
    5. 'def' → logprob: -9.132057189941406
    6. '   ' → logprob: -10.382057189941406
    7. '(lambda' → logprob: -10.382057189941406
    8. ' map' → logprob: -12.882057189941406
    9. 'tuple' → logprob: -13.382057189941406
    10. ' return' → logprob: -13.507057189941406

Token 179: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06265439838171005
    2. 'map' → logprob: -2.812654495239258
    3. ' list' → logprob: -7.312654495239258
    4. ' map' → logprob: -11.062654495239258
    5. '(map' → logprob: -13.187654495239258
    6. '(list' → logprob: -13.562654495239258
    7. '[list' → logprob: -15.312654495239258
    8. '   ' → logprob: -15.812654495239258
    9. 'tuple' → logprob: -16.812654495239258
    10. '[' → logprob: -17.062654495239258

Token 180: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006301135290414095
    2. '(' → logprob: -7.375629901885986
    3. 'int' → logprob: -13.250630378723145
    4. '<int' → logprob: -13.875630378723145
    5. '(read' → logprob: -15.125630378723145
    6. '[int' → logprob: -16.000629425048828
    7. ' (' → logprob: -16.250629425048828
    8. '=int' → logprob: -16.250629425048828
    9. '(lambda' → logprob: -16.875629425048828
    10. '(
' → logprob: -17.000629425048828

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11386538296937943
    2. '(read' → logprob: -2.238865375518799
    3. 'read' → logprob: -7.238865375518799
    4. ' ,' → logprob: -8.613865852355957
    5. ' (' → logprob: -9.988865852355957
    6. '(' → logprob: -10.238865852355957
    7. '(),' → logprob: -10.988865852355957
    8. ',(' → logprob: -11.363865852355957
    9. ' read' → logprob: -11.488865852355957
    10. '   ' → logprob: -11.738865852355957

Token 182: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004082197323441505
    2. ' read' → logprob: -5.504082202911377
    3. '(read' → logprob: -13.004081726074219
    4. '	read' → logprob: -13.879081726074219
    5. '   ' → logprob: -15.504081726074219
    6. ' ' → logprob: -15.754081726074219
    7. '  ' → logprob: -15.754081726074219
    8. ')' → logprob: -17.00408172607422
    9. '.read' → logprob: -17.00408172607422
    10. '_read' → logprob: -18.87908172607422

Token 183: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.531315314830863e-06
    2. 'input' → logprob: -13.125003814697266
    3. '_' → logprob: -13.625003814697266
    4. '(_' → logprob: -16.250003814697266
    5. '(input' → logprob: -16.500003814697266
    6. '(' → logprob: -16.625003814697266
    7. '_INPUT' → logprob: -17.750003814697266
    8. 'Input' → logprob: -18.250003814697266
    9. '_in' → logprob: -18.625003814697266
    10. '()' → logprob: -19.000003814697266

Token 184: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.7835754988482222e-05
    2. 'line' → logprob: -11.125018119812012
    3. '()' → logprob: -13.250018119812012
    4. '().' → logprob: -14.375018119812012
    5. '_LINE' → logprob: -14.750018119812012
    6. ')' → logprob: -16.000017166137695
    7. '_' → logprob: -16.375017166137695
    8. ' line' → logprob: -17.125017166137695
    9. 'Line' → logprob: -17.500017166137695
    10. '-line' → logprob: -18.000017166137695

Token 185: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014489953173324466
    2. '()' → logprob: -8.875144958496094
    3. ' ().' → logprob: -12.250144958496094
    4. ' ()' → logprob: -16.625144958496094
    5. '(' → logprob: -17.125144958496094
    6. '()
' → logprob: -18.500144958496094
    7. '().'' → logprob: -18.625144958496094
    8. '().__' → logprob: -18.875144958496094
    9. ')' → logprob: -19.000144958496094
    10. ' ' → logprob: -19.375144958496094

Token 186: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.804671233519912e-05
    2. 'strip' → logprob: -9.50008773803711
    3. ' split' → logprob: -11.25008773803711
    4. '(split' → logprob: -17.00008773803711
    5. '.split' → logprob: -17.62508773803711
    6. 'spl' → logprob: -18.25008773803711
    7. 'rstrip' → logprob: -19.12508773803711
    8. ' strip' → logprob: -20.12508773803711
    9. '_split' → logprob: -20.50008773803711
    10. ' ' → logprob: -21.25008773803711

Token 187: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011778056621551514
    2. '()))' → logprob: -4.761777877807617
    3. '()' → logprob: -5.761777877807617
    4. ')' → logprob: -12.011777877807617
    5. '(' → logprob: -12.761777877807617
    6. '())
' → logprob: -13.511777877807617
    7. ' ())' → logprob: -13.886777877807617
    8. '))' → logprob: -14.886777877807617
    9. '()]' → logprob: -15.136777877807617
    10. '()),' → logprob: -15.261777877807617

Token 188: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014627386117354035
    2. '<|end|>' → logprob: -7.626462936401367
    3. '\' → logprob: -8.376462936401367
    4. '
' → logprob: -8.501462936401367
    5. '#' → logprob: -8.501462936401367
    6. 'd' → logprob: -9.376462936401367
    7. '(' → logprob: -9.876462936401367
    8. ')' → logprob: -10.251462936401367
    9. '```' → logprob: -10.251462936401367
    10. 'de' → logprob: -10.501462936401367

Token 189: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5264087915420532
    2. 'read' → logprob: -0.9014087915420532
    3. ' main' → logprob: -6.901408672332764
    4. ' list' → logprob: -7.401408672332764
    5. 'list' → logprob: -8.151409149169922
    6. 'def' → logprob: -8.151409149169922
    7. '_' → logprob: -8.526409149169922
    8. '_read' → logprob: -8.651409149169922
    9. ' def' → logprob: -9.151409149169922
    10. 'main' → logprob: -9.276409149169922

Token 190: '_integer' (ID: 82911)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.24262888729572296
    2. '_int' → logprob: -1.7426289319992065
    3. '_line' → logprob: -3.867628812789917
    4. '_string' → logprob: -4.742629051208496
    5. '_' → logprob: -5.742629051208496
    6. '_tuple' → logprob: -6.242629051208496
    7. '_str' → logprob: -6.617629051208496
    8. '_integer' → logprob: -7.242629051208496
    9. '_float' → logprob: -7.492629051208496
    10. '_array' → logprob: -7.742629051208496

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014658770523965359
    2. '_array' → logprob: -4.7646589279174805
    3. 's' → logprob: -5.7646589279174805
    4. '()' → logprob: -6.7646589279174805
    5. '_tuple' → logprob: -7.8896589279174805
    6. '_' → logprob: -8.01465892791748
    7. '_pair' → logprob: -8.13965892791748
    8. '_s' → logprob: -8.13965892791748
    9. '_line' → logprob: -8.88965892791748
    10. '_vector' → logprob: -9.01465892791748

Token 192: '(length' (ID: 47037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00024358915106859058
    2. '():
' → logprob: -8.625243186950684
    3. ' ():' → logprob: -10.250243186950684
    4. '()' → logprob: -10.500243186950684
    5. '():

' → logprob: -14.625243186950684
    6. ' ()' → logprob: -15.000243186950684
    7. '():
' → logprob: -15.375243186950684
    8. '()>' → logprob: -17.125244140625
    9. '(' → logprob: -17.250244140625
    10. 'def' → logprob: -18.500244140625

Token 193: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10137875378131866
    2. '()' → logprob: -2.4763786792755127
    3. '():' → logprob: -4.476378917694092
    4. ')' → logprob: -7.726378917694092
    5. '):
' → logprob: -7.976378917694092
    6. '(length' → logprob: -9.226378440856934
    7. '=' → logprob: -10.476378440856934
    8. '():
' → logprob: -10.976378440856934
    9. '()):
' → logprob: -10.976378440856934
    10. '(' → logprob: -11.351378440856934

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026385173201560974
    2. '():' → logprob: -3.9013850688934326
    3. '()' → logprob: -5.776385307312012
    4. '):
' → logprob: -6.026385307312012
    5. '():
' → logprob: -8.901385307312012
    6. ' ):' → logprob: -9.776385307312012
    7. '()):
' → logprob: -10.026385307312012
    8. ',' → logprob: -10.151385307312012
    9. '(' → logprob: -11.026385307312012
    10. ')' → logprob: -11.651385307312012

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5176599025726318
    2. '():' → logprob: -1.1426599025726318
    3. 'def' → logprob: -2.892659902572632
    4. '():
' → logprob: -3.642659902572632
    5. ':' → logprob: -6.892660140991211
    6. 'return' → logprob: -7.517660140991211
    7. ':
' → logprob: -7.767660140991211
    8. '(lst' → logprob: -8.142660140991211
    9. 'list' → logprob: -8.267660140991211
    10. 'lst' → logprob: -8.642660140991211

Token 196: ' if' (ID: 538)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.9454596042633057
    2. 'if' (adapté à ' if') → logprob: -1.0704596042633057
    3. ' lst' → logprob: -2.3204596042633057
    4. 'return' → logprob: -2.8204596042633057
    5. '   ' → logprob: -3.4454596042633057
    6. ' if' → logprob: -3.9454596042633057
    7. 'data' → logprob: -4.320459365844727
    8. 'line' → logprob: -4.320459365844727
    9. 'ints' → logprob: -4.695459365844727
    10. 'nums' → logprob: -5.320459365844727

Token 197: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.003614443587139249
    2. 'length' → logprob: -5.62861442565918
    3. '(length' → logprob: -12.12861442565918
    4. ' not' → logprob: -12.37861442565918
    5. '	length' → logprob: -12.62861442565918
    6. '_length' → logprob: -14.37861442565918
    7. ' ' → logprob: -14.50361442565918
    8. '[length' → logprob: -16.37861442565918
    9. 'ength' → logprob: -16.87861442565918
    10. 'leng' → logprob: -17.25361442565918

Token 198: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006846792530268431
    2. 'is' → logprob: -5.006846904754639
    3. '==' → logprob: -9.13184642791748
    4. '	is' → logprob: -12.25684642791748
    5. ' ==' → logprob: -12.25684642791748
    6. ':' → logprob: -12.50684642791748
    7. ')' → logprob: -12.88184642791748
    8. ' ' → logprob: -13.25684642791748
    9. '=is' → logprob: -13.38184642791748
    10. '=' → logprob: -13.50684642791748

Token 199: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16503848135471344
    2. ' None' → logprob: -1.9150384664535522
    3. 'not' → logprob: -5.915038585662842
    4. ' not' → logprob: -6.165038585662842
    5. '_None' → logprob: -14.040038108825684
    6. 'Not' → logprob: -14.165038108825684
    7. ' ' → logprob: -14.790038108825684
    8. '=None' → logprob: -15.665038108825684
    9. '(None' → logprob: -15.790038108825684
    10. 'none' → logprob: -16.0400390625

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019106727093458176
    2. ':
' → logprob: -4.019106864929199
    3. ',' → logprob: -7.394106864929199
    4. '   ' → logprob: -8.2691068649292
    5. ':return' → logprob: -10.0191068649292
    6. '):' → logprob: -11.6441068649292
    7. ':list' → logprob: -12.1441068649292
    8. '):
' → logprob: -12.2691068649292
    9. ':def' → logprob: -12.5191068649292
    10. 'def' → logprob: -12.6441068649292

Token 201: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03892211616039276
    2. '       ' → logprob: -3.913922071456909
    3. ':
' → logprob: -4.288922309875488
    4. '   ' → logprob: -5.538922309875488
    5. ',' → logprob: -8.663922309875488
    6. ':return' → logprob: -8.913922309875488
    7. '):' → logprob: -9.038922309875488
    8. '():' → logprob: -9.163922309875488
    9. 'return' → logprob: -11.288922309875488
    10. '):
' → logprob: -12.163922309875488

Token 202: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5550093650817871
    2. 'return' (adapté à ' return') → logprob: -0.9300093650817871
    3. ' return' → logprob: -3.555009365081787
    4. '       ' → logprob: -5.930009365081787
    5. 'def' → logprob: -10.055009841918945
    6. 'lst' → logprob: -10.555009841918945
    7. 'data' → logprob: -10.930009841918945
    8. '	return' → logprob: -11.680009841918945
    9. 'lines' → logprob: -11.805009841918945
    10. 'line' → logprob: -11.805009841918945

Token 203: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03064478188753128
    2. '[list' → logprob: -3.7806448936462402
    3. ' list' → logprob: -5.03064489364624
    4. '[int' → logprob: -7.28064489364624
    5. '[' → logprob: -9.030644416809082
    6. ' [' → logprob: -11.155644416809082
    7. '[]' → logprob: -11.655644416809082
    8. 'read' → logprob: -12.655644416809082
    9. '[List' → logprob: -14.030644416809082
    10. '[len' → logprob: -14.655644416809082

Token 204: '(read' (ID: 45738)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07194700092077255
    2. '(read' → logprob: -3.3219470977783203
    3. '()' → logprob: -3.4469470977783203
    4. '(' → logprob: -6.82194709777832
    5. '(int' → logprob: -8.07194709777832
    6. 'read' → logprob: -10.19694709777832
    7. 'map' → logprob: -10.44694709777832
    8. '(range' → logprob: -12.19694709777832
    9. '(split' → logprob: -12.19694709777832
    10. '();' → logprob: -13.19694709777832

Token 205: '_int' (ID: 12285)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0683535037969705e-05
    2. 'input' → logprob: -12.62501049041748
    3. '_integer' → logprob: -12.87501049041748
    4. '(_' → logprob: -13.50001049041748
    5. '_int' → logprob: -13.62501049041748
    6. '(input' → logprob: -14.25001049041748
    7. '_' → logprob: -14.75001049041748
    8. '_in' → logprob: -14.87501049041748
    9. '()' → logprob: -15.75001049041748
    10. '_INPUT' → logprob: -16.250011444091797

Token 206: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0011629577493295074
    2. '_list' → logprob: -6.876163005828857
    3. 's' → logprob: -10.1261625289917
    4. '_line' → logprob: -10.1261625289917
    5. 'map' → logprob: -11.0011625289917
    6. '_' → logprob: -11.3761625289917
    7. '_input' → logprob: -11.3761625289917
    8. 'er' → logprob: -13.2511625289917
    9. 'ent' → logprob: -13.8761625289917
    10. 'ermap' → logprob: -14.1261625289917

Token 207: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001998346531763673
    2. '())
' → logprob: -6.251998424530029
    3. '()' → logprob: -9.626997947692871
    4. ' ())' → logprob: -13.501997947692871
    5. '()))' → logprob: -13.876997947692871
    6. ')' → logprob: -14.376997947692871
    7. '())

' → logprob: -14.876997947692871
    8. '()
' → logprob: -15.626997947692871
    9. '())
' → logprob: -15.876997947692871
    10. '()),' → logprob: -16.626998901367188

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.723973582556937e-05
    2. ',' → logprob: -12.000017166137695
    3. '    
' → logprob: -12.125017166137695
    4. ' else' → logprob: -13.375017166137695
    5. 'def' → logprob: -13.750017166137695
    6. 'else' → logprob: -14.375017166137695
    7. '       ' → logprob: -14.500017166137695
    8. '<|end|>' → logprob: -14.875017166137695
    9. '
' → logprob: -15.000017166137695
    10. '   ' → logprob: -15.125017166137695

Token 209: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03761861473321915
    2. ' else' → logprob: -3.787618637084961
    3. 'else' (adapté à ' else') → logprob: -4.287618637084961
    4. 'def' → logprob: -8.662618637084961
    5. 'return' → logprob: -9.162618637084961
    6. '    
' → logprob: -9.287618637084961
    7. '	else' → logprob: -9.662618637084961
    8. '
' → logprob: -10.787618637084961
    9. ' return' → logprob: -10.787618637084961
    10. '       ' → logprob: -10.912618637084961

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4898386597633362
    2. '       ' → logprob: -1.2398386001586914
    3. ':
' → logprob: -2.3648386001586914
    4. '   ' → logprob: -6.239838600158691
    5. '(' → logprob: -7.989838600158691
    6. ':return' → logprob: -8.239838600158691
    7. ',' → logprob: -8.364838600158691
    8. ' :' → logprob: -8.489838600158691
    9. '():
' → logprob: -8.739838600158691
    10. '(length' → logprob: -8.864838600158691

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23038135468959808
    2. '   ' → logprob: -1.6053813695907593
    3. ' return' → logprob: -5.480381488800049
    4. 'return' → logprob: -7.230381488800049
    5. '	   ' → logprob: -10.85538101196289
    6. '   ' → logprob: -10.85538101196289
    7. '	return' → logprob: -11.35538101196289
    8. '	' → logprob: -12.10538101196289
    9. '[]' → logprob: -13.48038101196289
    10. 'def' → logprob: -13.48038101196289

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03491431102156639
    2. ' return' → logprob: -3.534914255142212
    3. '   ' → logprob: -5.659914493560791
    4. '       ' → logprob: -7.159914493560791
    5. 'result' → logprob: -7.659914493560791
    6. 'lst' → logprob: -8.159914016723633
    7. ' lst' → logprob: -10.159914016723633
    8. 'ret' → logprob: -11.409914016723633
    9. 'arr' → logprob: -11.409914016723633
    10. 'res' → logprob: -11.659914016723633

Token 213: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.14310874044895172
    2. ' [' → logprob: -2.39310884475708
    3. '[int' → logprob: -3.39310884475708
    4. 'list' → logprob: -5.64310884475708
    5. ' list' → logprob: -5.89310884475708
    6. '[' → logprob: -6.26810884475708
    7. '[List' → logprob: -8.893108367919922
    8. '[get' → logprob: -11.393108367919922
    9. '[input' → logprob: -12.518108367919922
    10. '[array' → logprob: -12.643108367919922

Token 214: 'read' (ID: 1293)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07001524418592453
    2. 'read' → logprob: -2.6950151920318604
    3. ' int' → logprob: -10.445014953613281
    4. 'next' → logprob: -10.820014953613281
    5. ' read' → logprob: -11.070014953613281
    6. '0' → logprob: -12.320014953613281
    7. '
' → logprob: -12.695014953613281
    8. '<int' → logprob: -13.820014953613281
    9. '(int' → logprob: -13.945014953613281
    10. '_read' → logprob: -14.070014953613281

Token 215: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.13427695631980896
    2. 'int' → logprob: -2.384276866912842
    3. '_int' → logprob: -3.884276866912842
    4. 'integer' → logprob: -4.384276866912842
    5. '_input' → logprob: -8.63427734375
    6. ' integer' → logprob: -9.13427734375
    7. '_' → logprob: -9.63427734375
    8. ' int' → logprob: -10.38427734375
    9. '
' → logprob: -10.75927734375
    10. 'Integer' → logprob: -11.75927734375

Token 216: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003851517685689032
    2. '()]' → logprob: -7.875385284423828
    3. ' ()' → logprob: -12.500385284423828
    4. 'for' → logprob: -14.625385284423828
    5. '()
' → logprob: -14.875385284423828
    6. '(),' → logprob: -15.625385284423828
    7. '_' → logprob: -16.500385284423828
    8. 's' → logprob: -17.000385284423828
    9. '_list' → logprob: -17.250385284423828
    10. '()]
' → logprob: -17.375385284423828

Token 217: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025113318115472794
    2. 'for' → logprob: -6.627511501312256
    3. ' for' → logprob: -7.002511501312256
    4. '()]' → logprob: -8.252511024475098
    5. ' ()' → logprob: -11.252511024475098
    6. ']' → logprob: -14.627511024475098
    7. '(' → logprob: -14.877511024475098
    8. '	for' → logprob: -15.252511024475098
    9. '(),' → logprob: -16.002511978149414
    10. '()]
' → logprob: -16.127511978149414

Token 218: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.52919222577475e-05
    2. ' _' → logprob: -9.500075340270996
    3. '_range' → logprob: -14.875075340270996
    4. '_in' → logprob: -17.00007438659668
    5. ' range' → logprob: -17.62507438659668
    6. '_i' → logprob: -18.75007438659668
    7. '_=' → logprob: -18.75007438659668
    8. '_]' → logprob: -19.00007438659668
    9. 'range' → logprob: -19.75007438659668
    10. ' ' → logprob: -19.75007438659668

Token 219: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003222510451450944
    2. ' range' → logprob: -5.753222465515137
    3. 'in' → logprob: -10.628222465515137
    4. ' in' → logprob: -11.628222465515137
    5. '_' → logprob: -12.003222465515137
    6. '_range' → logprob: -12.503222465515137
    7. '	range' → logprob: -13.878222465515137
    8. '(range' → logprob: -14.253222465515137
    9. 'length' → logprob: -16.878223419189453
    10. 'ange' → logprob: -17.003223419189453

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004307884373702109
    2. ' range' → logprob: -7.750430583953857
    3. '_' → logprob: -16.375431060791016
    4. '	range' → logprob: -17.375431060791016
    5. '_range' → logprob: -17.500431060791016
    6. '(range' → logprob: -18.125431060791016
    7. 'length' → logprob: -21.375431060791016
    8. '.range' → logprob: -22.375431060791016
    9. 'rang' → logprob: -22.625431060791016
    10. '[' → logprob: -23.125431060791016

Token 221: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.250006675720215
    3. 'length' → logprob: -13.250006675720215
    4. ' length' → logprob: -16.8750057220459
    5. '(len' → logprob: -18.8750057220459
    6. '[length' → logprob: -19.2500057220459
    7. '(l' → logprob: -19.6250057220459
    8. ' (' → logprob: -19.8750057220459
    9. ',length' → logprob: -20.0000057220459
    10. '	length' → logprob: -21.1250057220459

Token 222: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.999452772201039e-05
    2. ')' → logprob: -11.125029563903809
    3. ' )' → logprob: -12.000029563903809
    4. '   ' → logprob: -12.250029563903809
    5. ']' → logprob: -13.125029563903809
    6. ')]
' → logprob: -13.500029563903809
    7. ' ' → logprob: -15.875029563903809
    8. ')])' → logprob: -15.875029563903809
    9. '):' → logprob: -16.625030517578125
    10. '       ' → logprob: -16.625030517578125

Token 223: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011855880729854107
    2. '
' → logprob: -7.001185417175293
    3. '#' → logprob: -9.251185417175293
    4. 'd' → logprob: -9.876185417175293
    5. '\' → logprob: -10.251185417175293
    6. '```' → logprob: -10.376185417175293
    7. '

' → logprob: -10.626185417175293
    8. '<|end|>' → logprob: -11.376185417175293
    9. 'de' → logprob: -12.626185417175293
    10. '[' → logprob: -12.876185417175293

Token 224: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5867674350738525
    2. 'main' → logprob: -0.9617674350738525
    3. 'read' → logprob: -3.5867674350738525
    4. ' read' → logprob: -4.461767196655273
    5. 'write' → logprob: -4.836767196655273
    6. ' write' → logprob: -4.961767196655273
    7. 'print' → logprob: -5.836767196655273
    8. 'parse' → logprob: -6.961767196655273
    9. ' is' → logprob: -7.336767196655273
    10. ' print' → logprob: -7.586767196655273

Token 225: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03934087976813316
    2. '()' → logprob: -3.5393409729003906
    3. '_' → logprob: -5.039340972900391
    4. '_line' → logprob: -7.039340972900391
    5. '(*' → logprob: -8.28934097290039
    6. '("")' → logprob: -8.41434097290039
    7. '_(' → logprob: -8.53934097290039
    8. 'f' → logprob: -8.78934097290039
    9. 'ln' → logprob: -9.03934097290039
    10. '_raw' → logprob: -9.16434097290039

Token 226: '_lower' (ID: 72335)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2755225896835327
    2. '()' → logprob: -1.5255225896835327
    3. '():
' → logprob: -4.150522708892822
    4. '("' → logprob: -5.025522708892822
    5. '(' → logprob: -8.025522232055664
    6. '_lower' → logprob: -9.525522232055664
    7. '_or' → logprob: -9.650522232055664
    8. '()`' → logprob: -9.650522232055664
    9. '("")' → logprob: -9.775522232055664
    10. '(()' → logprob: -9.775522232055664

Token 227: 'case' (ID: 9994)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007051144260913134
    2. '():
' → logprob: -5.13205099105835
    3. 'case' → logprob: -7.13205099105835
    4. '()' → logprob: -8.132051467895508
    5. ' ():' → logprob: -11.132051467895508
    6. '():

' → logprob: -12.382051467895508
    7. ':' → logprob: -12.632051467895508
    8. '():
' → logprob: -12.757051467895508
    9. 'def' → logprob: -14.382051467895508
    10. '('' → logprob: -14.632051467895508

Token 228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00540510006248951
    2. '():
' → logprob: -5.255404949188232
    3. '(' → logprob: -9.75540542602539
    4. ' ():' → logprob: -9.75540542602539
    5. '()' → logprob: -9.88040542602539
    6. '():

' → logprob: -12.88040542602539
    7. '():
' → logprob: -14.88040542602539
    8. '("' → logprob: -15.38040542602539
    9. ' ()' → logprob: -15.88040542602539
    10. '(name' → logprob: -15.88040542602539

Token 229: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4674702286720276
    2. 'print' → logprob: -1.7174701690673828
    3. '('' → logprob: -2.092470169067383
    4. '(print' → logprob: -3.092470169067383
    5. '("' → logprob: -4.092470169067383
    6. '(
' → logprob: -5.592470169067383
    7. '   ' → logprob: -6.092470169067383
    8. '()' → logprob: -7.217470169067383
    9. '(True' → logprob: -7.592470169067383
    10. '(p' → logprob: -7.592470169067383

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' print' → logprob: -15.375001907348633
    4. 'def' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'pr' → logprob: -19.875001907348633
    7. 'return' → logprob: -20.125001907348633
    8. '	print' → logprob: -20.875001907348633
    9. 'printf' → logprob: -21.500001907348633
    10. 'p' → logprob: -21.500001907348633

Token 231: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12730833888053894
    2. '('' → logprob: -2.1273083686828613
    3. '(' → logprob: -7.877308368682861
    4. '"' → logprob: -14.377307891845703
    5. '(
' → logprob: -15.627307891845703
    6. '()' → logprob: -17.002307891845703
    7. ''' → logprob: -17.252307891845703
    8. ' ("' → logprob: -17.752307891845703
    9. '(True' → logprob: -18.627307891845703
    10. '("'' → logprob: -19.002307891845703

Token 232: 'Yes' (ID: 13022)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -5.5577775128767826e-06
    2. ' yes' → logprob: -12.625005722045898
    3. 'y' → logprob: -13.125005722045898
    4. 'ye' → logprob: -16.1250057220459
    5. 'Yes' → logprob: -16.6250057220459
    6. '_yes' → logprob: -17.7500057220459
    7. 'yeah' → logprob: -19.3750057220459
    8. 'true' → logprob: -19.6250057220459
    9. 'YES' → logprob: -19.7500057220459
    10. 'no' → logprob: -20.2500057220459

Token 233: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.231182826217264e-05
    2. ''.' → logprob: -9.875072479248047
    3. '')
' → logprob: -11.625072479248047
    4. ')' → logprob: -12.125072479248047
    5. ''' → logprob: -12.500072479248047
    6. '")' → logprob: -14.375072479248047
    7. '')

' → logprob: -14.625072479248047
    8. '.lower' → logprob: -14.625072479248047
    9. 's' → logprob: -15.375072479248047
    10. '()' → logprob: -15.500072479248047

Token 234: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0744905471801758
    2. '<|end|>' → logprob: -1.3244905471801758
    3. ')' → logprob: -1.5744905471801758
    4. 's' → logprob: -1.9494905471801758
    5. '(' → logprob: -4.449490547180176
    6. '_' → logprob: -4.449490547180176
    7. 'e' → logprob: -5.324490547180176
    8. 'def' → logprob: -5.949490547180176
    9. '   ' → logprob: -6.574490547180176
    10. '_lower' → logprob: -6.699490547180176

Token 235: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0041020275093615055
    2. 'def' → logprob: -5.6291022300720215
    3. ' print' → logprob: -7.6291022300720215
    4. 'r' → logprob: -11.629101753234863
    5. '_print' → logprob: -12.129101753234863
    6. ' def' → logprob: -15.629101753234863
    7. 'n' → logprob: -15.629101753234863
    8. 'ndef' → logprob: -15.879101753234863
    9. 'python' → logprob: -16.00410270690918
    10. '.print' → logprob: -16.12910270690918

Token 236: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.07835843414068222
    2. '_lower' → logprob: -2.7033584117889404
    3. '_yes' → logprob: -5.3283586502075195
    4. '_' → logprob: -6.2033586502075195
    5. '('_' → logprob: -6.9533586502075195
    6. '_low' → logprob: -8.95335865020752
    7. '_n' → logprob: -9.07835865020752
    8. '_error' → logprob: -9.57835865020752
    9. '_false' → logprob: -10.20335865020752
    10. '_upper' → logprob: -10.32835865020752

Token 237: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.018462223932147026
    2. '()' → logprob: -4.018462181091309
    3. '_' → logprob: -9.643462181091309
    4. 'lower' → logprob: -9.768462181091309
    5. '('_' → logprob: -9.768462181091309
    6. '_l' → logprob: -10.393462181091309
    7. '_low' → logprob: -10.768462181091309
    8. '('' → logprob: -10.893462181091309
    9. '.lower' → logprob: -11.018462181091309
    10. '_upper' → logprob: -11.268462181091309

Token 238: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -2.2200749754119897e-06
    2. '_case' → logprob: -13.250001907348633
    3. 'ase' → logprob: -15.000001907348633
    4. 'c' → logprob: -17.750001907348633
    5. 'code' → logprob: -18.375001907348633
    6. 'cas' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '()' → logprob: -19.125001907348633
    9. ' case' → logprob: -19.125001907348633
    10. '(case' → logprob: -19.250001907348633

Token 239: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00910316500812769
    2. '():
' → logprob: -4.759103298187256
    3. '()' → logprob: -7.634103298187256
    4. '():
' → logprob: -12.634102821350098
    5. ' ():' → logprob: -13.634102821350098
    6. '():

' → logprob: -15.134102821350098
    7. ':' → logprob: -16.509103775024414
    8. '(' → logprob: -17.259103775024414
    9. '()
' → logprob: -17.634103775024414
    10. '):' → logprob: -17.759103775024414

Token 240: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31467846035957336
    2. '   ' → logprob: -1.314678430557251
    3. ' print' → logprob: -6.56467866897583
    4. 'def' → logprob: -12.939678192138672
    5. '	print' → logprob: -13.314678192138672
    6. '(print' → logprob: -13.814678192138672
    7. '```' → logprob: -14.439678192138672
    8. '.print' → logprob: -15.939678192138672
    9. '()' → logprob: -15.939678192138672
    10. '(' → logprob: -16.314678192138672

Token 241: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.3795937522663735e-05
    2. '   ' → logprob: -11.12502384185791
    3. ' print' → logprob: -11.62502384185791
    4. 'pr' → logprob: -17.250022888183594
    5. '	print' → logprob: -17.250022888183594
    6. '  ' → logprob: -17.875022888183594
    7. 'prin' → logprob: -17.875022888183594
    8. 'println' → logprob: -18.375022888183594
    9. 'printf' → logprob: -18.500022888183594
    10. '```' → logprob: -18.625022888183594

Token 242: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.602024900028482e-05
    2. '(' → logprob: -9.375085830688477
    3. '("' → logprob: -14.250085830688477
    4. '(No' → logprob: -15.250085830688477
    5. '(no' → logprob: -16.000085830688477
    6. '()' → logprob: -16.125085830688477
    7. ''' → logprob: -16.875085830688477
    8. '(False' → logprob: -17.000085830688477
    9. ' ('' → logprob: -18.375085830688477
    10. 'No' → logprob: -18.500085830688477

Token 243: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0004413975402712822
    2. ''' → logprob: -7.750441551208496
    3. 'no' → logprob: -11.500441551208496
    4. 'NO' → logprob: -14.875441551208496
    5. '"No' → logprob: -16.37544059753418
    6. ' No' → logprob: -16.75044059753418
    7. '')' → logprob: -17.37544059753418
    8. 'Yes' → logprob: -17.87544059753418
    9. '_no' → logprob: -18.25044059753418
    10. ''n' → logprob: -19.37544059753418

Token 244: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0034024056512862444
    2. ')' → logprob: -6.003402233123779
    3. '()' → logprob: -7.003402233123779
    4. '')
' → logprob: -11.378402709960938
    5. '")' → logprob: -13.003402709960938
    6. '')

' → logprob: -13.128402709960938
    7. '())' → logprob: -13.753402709960938
    8. ''' → logprob: -15.003402709960938
    9. '('' → logprob: -15.128402709960938
    10. '()
' → logprob: -17.378402709960938

Token 245: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8119803667068481
    2. 'def' → logprob: -0.8119803667068481
    3. ' ' → logprob: -3.1869802474975586
    4. '<|end|>' → logprob: -3.1869802474975586
    5. '
' → logprob: -5.186980247497559
    6. 'd' → logprob: -5.186980247497559
    7. 's' → logprob: -5.311980247497559
    8. ')' → logprob: -6.061980247497559
    9. '  
' → logprob: -6.186980247497559
    10. 'e' → logprob: -6.686980247497559

Token 246: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4364519715309143
    2. 'main' → logprob: -1.0614519119262695
    3. 'is' → logprob: -5.6864519119262695
    4. ' main' → logprob: -5.8114519119262695
    5. ' print' → logprob: -7.0614519119262695
    6. 'def' → logprob: -9.06145191192627
    7. 'read' → logprob: -9.56145191192627
    8. 'capitalize' → logprob: -9.56145191192627
    9. ' is' → logprob: -10.06145191192627
    10. 'yes' → logprob: -10.68645191192627

Token 247: '_yes' (ID: 151898)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.19676946103572845
    2. '_yes' → logprob: -2.1967694759368896
    3. '_upper' → logprob: -3.1967694759368896
    4. '_' → logprob: -3.6967694759368896
    5. '('_' → logprob: -7.0717692375183105
    6. '_low' → logprob: -8.196769714355469
    7. '_no' → logprob: -9.321769714355469
    8. '_all' → logprob: -9.446769714355469
    9. '("_' → logprob: -9.821769714355469
    10. '()' → logprob: -9.946769714355469

Token 248: '_upper' (ID: 82658)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.04624711722135544
    2. '():' → logprob: -3.1712470054626465
    3. '():
' → logprob: -6.5462470054626465
    4. '_upper' → logprob: -7.0462470054626465
    5. '()' → logprob: -7.2962470054626465
    6. 'lower' → logprob: -8.671247482299805
    7. '_low' → logprob: -11.296247482299805
    8. 'uppercase' → logprob: -11.421247482299805
    9. '():

' → logprob: -11.671247482299805
    10. '_' → logprob: -11.671247482299805

Token 249: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0008284482173621655
    2. '()' → logprob: -7.125828266143799
    3. '()
' → logprob: -11.625828742980957
    4. '())' → logprob: -12.250828742980957
    5. 'lower' → logprob: -12.875828742980957
    6. '():' → logprob: -14.125828742980957
    7. '_case' → logprob: -14.250828742980957
    8. 'def' → logprob: -14.250828742980957
    9. '():
' → logprob: -14.250828742980957
    10. '```' → logprob: -14.250828742980957

Token 250: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009646998951211572
    2. '():
' → logprob: -7.000964641571045
    3. '()' → logprob: -10.375965118408203
    4. ' ():' → logprob: -11.125965118408203
    5. '():

' → logprob: -13.000965118408203
    6. '_upper' → logprob: -13.500965118408203
    7. '():
' → logprob: -13.500965118408203
    8. '_' → logprob: -13.625965118408203
    9. 'uppercase' → logprob: -15.000965118408203
    10. '_lower' → logprob: -15.125965118408203

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001645644661039114
    2. 'print' → logprob: -8.750164985656738
    3. ' print' → logprob: -12.250164985656738
    4. 'def' → logprob: -14.000164985656738
    5. '```' → logprob: -16.000164031982422
    6. '()' → logprob: -16.250164031982422
    7. '	print' → logprob: -16.500164031982422
    8. '   ' → logprob: -16.625164031982422
    9. '       ' → logprob: -17.500164031982422
    10. '    
' → logprob: -17.500164031982422

Token 252: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08185472339391708
    2. '   ' → logprob: -2.581854820251465
    3. ' print' → logprob: -5.831854820251465
    4. 'def' → logprob: -10.581854820251465
    5. '	print' → logprob: -13.331854820251465
    6. '```' → logprob: -14.581854820251465
    7. ' ' → logprob: -15.706854820251465
    8. 'println' → logprob: -16.08185386657715
    9. '  ' → logprob: -16.83185386657715
    10. 'Print' → logprob: -17.08185386657715

Token 253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.404745439183898e-05
    2. '("' → logprob: -10.62503433227539
    3. '(' → logprob: -11.62503433227539
    4. ''' → logprob: -14.25003433227539
    5. 'YES' → logprob: -17.00003433227539
    6. ''S' → logprob: -17.37503433227539
    7. '()' → logprob: -17.37503433227539
    8. 'Yes' → logprob: -18.25003433227539
    9. '"' → logprob: -19.25003433227539
    10. ' ('' → logprob: -19.37503433227539

Token 254: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.03873508423566818
    2. ''' → logprob: -3.2887351512908936
    3. 'Yes' → logprob: -7.2887349128723145
    4. '"' → logprob: -11.913735389709473
    5. 'print' → logprob: -12.788735389709473
    6. ' YES' → logprob: -14.913735389709473
    7. 'yes' → logprob: -16.163734436035156
    8. '.YES' → logprob: -16.663734436035156
    9. 'OK' → logprob: -16.788734436035156
    10. '('' → logprob: -16.913734436035156

Token 255: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.000193527273950167
    2. '')
' → logprob: -9.25019359588623
    3. '()' → logprob: -9.37519359588623
    4. ')' → logprob: -11.62519359588623
    5. '")' → logprob: -13.62519359588623
    6. '')

' → logprob: -13.62519359588623
    7. ''' → logprob: -14.75019359588623
    8. '('' → logprob: -15.00019359588623
    9. '')
' → logprob: -15.25019359588623
    10. '')"' → logprob: -16.875192642211914

Token 256: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02174360491335392
    2. '
' → logprob: -4.1467437744140625
    3. '()' → logprob: -6.3967437744140625
    4. '(
' → logprob: -6.8967437744140625
    5. '```' → logprob: -6.8967437744140625
    6. ' def' → logprob: -7.6467437744140625
    7. '<|end|>' → logprob: -7.7717437744140625
    8. '()
' → logprob: -7.8967437744140625
    9. '(' → logprob: -8.521743774414062
    10. '\' → logprob: -9.021743774414062

Token 257: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00040457461727783084
    2. ' print' → logprob: -7.875404357910156
    3. 'def' → logprob: -10.625404357910156
    4. '_print' → logprob: -15.875404357910156
    5. ' def' → logprob: -17.500404357910156
    6. '```' → logprob: -18.125404357910156
    7. 'python' → logprob: -18.250404357910156
    8. '.print' → logprob: -18.375404357910156
    9. '	print' → logprob: -18.500404357910156
    10. '(print' → logprob: -19.500404357910156

Token 258: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.10799135267734528
    2. '_lower' → logprob: -2.9829914569854736
    3. '('_' → logprob: -3.6079914569854736
    4. '_' → logprob: -4.2329912185668945
    5. '_yes' → logprob: -4.7329912185668945
    6. '_low' → logprob: -8.107991218566895
    7. '(' → logprob: -8.482991218566895
    8. '("_' → logprob: -8.732991218566895
    9. '_upper' → logprob: -8.857991218566895
    10. '('' → logprob: -9.232991218566895

Token 259: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.00016218038217630237
    2. '_' → logprob: -9.500162124633789
    3. 'uppercase' → logprob: -10.125162124633789
    4. '<|end|>' → logprob: -10.500162124633789
    5. '_lower' → logprob: -12.250162124633789
    6. 'Upper' → logprob: -12.625162124633789
    7. 'upper' → logprob: -13.000162124633789
    8. ' uppercase' → logprob: -13.750162124633789
    9. '```' → logprob: -13.750162124633789
    10. '()' → logprob: -13.875162124633789

Token 260: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0024883802980184555
    2. 'CASE' → logprob: -6.002488613128662
    3. '```' → logprob: -12.502488136291504
    4. 'code' → logprob: -13.252488136291504
    5. '()' → logprob: -13.502488136291504
    6. 'erc' → logprob: -13.752488136291504
    7. 'ER' → logprob: -14.002488136291504
    8. '_case' → logprob: -14.502488136291504
    9. 'CA' → logprob: -14.752488136291504
    10. '   ' → logprob: -14.752488136291504

Token 261: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011868205183418468
    2. '():
' → logprob: -9.250118255615234
    3. '()' → logprob: -10.750118255615234
    4. ' ():' → logprob: -14.125118255615234
    5. '():
' → logprob: -15.750118255615234
    6. '():

' → logprob: -15.875118255615234
    7. '):' → logprob: -18.000118255615234
    8. '(' → logprob: -18.000118255615234
    9. '()>' → logprob: -18.125118255615234
    10. ':' → logprob: -18.375118255615234

Token 262: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14388898015022278
    2. '   ' → logprob: -2.0188889503479004
    3. '()' → logprob: -7.0188889503479
    4. ' print' → logprob: -9.143889427185059
    5. '('' → logprob: -9.518889427185059
    6. '(print' → logprob: -9.768889427185059
    7. '(' → logprob: -10.268889427185059
    8. '()
' → logprob: -11.768889427185059
    9. '	print' → logprob: -12.018889427185059
    10. ')' → logprob: -12.518889427185059

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '	print' → logprob: -19.625
    5. '(print' → logprob: -20.0
    6. '```' → logprob: -21.125
    7. 'println' → logprob: -21.375
    8. 'printf' → logprob: -22.625
    9. '.print' → logprob: -22.75
    10. 'Print' → logprob: -23.0

Token 264: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009059097617864609
    2. '(' → logprob: -4.759058952331543
    3. ''' → logprob: -7.884058952331543
    4. '()' → logprob: -10.384058952331543
    5. '("' → logprob: -11.259058952331543
    6. '('\' → logprob: -11.384058952331543
    7. ''N' → logprob: -12.384058952331543
    8. ')' → logprob: -13.259058952331543
    9. '(N' → logprob: -13.509058952331543
    10. '(
' → logprob: -13.759058952331543

Token 265: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.01815907657146454
    2. ''' → logprob: -4.018158912658691
    3. 'No' → logprob: -11.768158912658691
    4. ' NO' → logprob: -14.893158912658691
    5. '_NO' → logprob: -15.393158912658691
    6. '   ' → logprob: -15.393158912658691
    7. 'YES' → logprob: -15.643158912658691
    8. 'print' → logprob: -15.768158912658691
    9. '.NO' → logprob: -15.893158912658691
    10. '"' → logprob: -16.768159866333008

Token 266: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2995940148830414
    2. '')' → logprob: -1.7995940446853638
    3. '()' → logprob: -2.799593925476074
    4. '())' → logprob: -3.424593925476074
    5. '")' → logprob: -9.424593925476074
    6. '()
' → logprob: -11.299593925476074
    7. '')
' → logprob: -11.799593925476074
    8. ')
' → logprob: -12.299593925476074
    9. '`)' → logprob: -13.049593925476074
    10. '())
' → logprob: -13.049593925476074

Token 267: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09044130146503448
    2. '_' → logprob: -3.0904412269592285
    3. 'd' → logprob: -4.3404412269592285
    4. '
' → logprob: -4.5904412269592285
    5. ' ' → logprob: -5.7154412269592285
    6. '#' → logprob: -5.8404412269592285
    7. '<|end|>' → logprob: -6.2154412269592285
    8. ' 
' → logprob: -6.3404412269592285
    9. ':' → logprob: -6.3404412269592285
    10. 'n' → logprob: -6.5904412269592285

Token 268: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005645998287945986
    2. '.exit' → logprob: -5.755646228790283
    3. '.stdout' → logprob: -6.380646228790283
    4. '.stdin' → logprob: -7.505646228790283
    5. '.argv' → logprob: -8.880645751953125
    6. '.stderr' → logprob: -9.880645751953125
    7. '.setdefault' → logprob: -11.380645751953125
    8. ' .' → logprob: -12.630645751953125
    9. '.​' → logprob: -12.755645751953125
    10. '.)' → logprob: -13.380645751953125

Token 269: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0005649457452818751
    2. '_rec' → logprob: -8.375564575195312
    3. 'limit' → logprob: -9.375564575195312
    4. 'ursion' → logprob: -10.000564575195312
    5. ' recursion' → logprob: -10.250564575195312
    6. 'execution' → logprob: -10.625564575195312
    7. 'trace' → logprob: -10.750564575195312
    8. 'set' → logprob: -10.875564575195312
    9. '_limit' → logprob: -10.875564575195312
    10. '_execution' → logprob: -11.625564575195312

Token 270: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.327856630785391e-05
    2. 'ur' → logprob: -10.125082969665527
    3. 'limit' → logprob: -10.625082969665527
    4. 'ursive' → logprob: -11.750082969665527
    5. 'urs' → logprob: -12.125082969665527
    6. 'ursor' → logprob: -13.625082969665527
    7. 't' → logprob: -14.125082969665527
    8. '_limit' → logprob: -14.250082969665527
    9. 'usion' → logprob: -14.500082969665527
    10. 'urf' → logprob: -14.625082969665527

Token 271: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.1875571544806007e-05
    2. '_limit' → logprob: -12.000011444091797
    3. 'lim' → logprob: -12.750011444091797
    4. ' limit' → logprob: -13.250011444091797
    5. 'depth' → logprob: -14.125011444091797
    6. '(limit' → logprob: -16.500011444091797
    7. 'Limit' → logprob: -16.750011444091797
    8. '-limit' → logprob: -17.250011444091797
    9. '.limit' → logprob: -17.375011444091797
    10. 'limits' → logprob: -17.750011444091797

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.500108141452074e-05
    2. '(
' → logprob: -10.500035285949707
    3. '((' → logprob: -12.750035285949707
    4. ' (' → logprob: -13.000035285949707
    5. '(

' → logprob: -14.125035285949707
    6. '(sys' → logprob: -14.250035285949707
    7. '100' → logprob: -15.125035285949707
    8. '(
' → logprob: -15.875035285949707
    9. '()' → logprob: -16.00003433227539
    10. '(int' → logprob: -16.25003433227539

Token 273: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00043591417488642037
    2. '100' → logprob: -7.750435829162598
    3. '200' → logprob: -12.750435829162598
    4. '300' → logprob: -13.625435829162598
    5. '500' → logprob: -14.500435829162598
    6. '250' → logprob: -16.250436782836914
    7. '150' → logprob: -16.250436782836914
    8. '１０' → logprob: -16.250436782836914
    9. '410' → logprob: -16.875436782836914
    10. '999' → logprob: -16.875436782836914

Token 274: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.25243231654167175
    2. '7' → logprob: -1.5024323463439941
    3. '6' → logprob: -8.377431869506836
    4. '8' → logprob: -8.752431869506836
    5. '07' → logprob: -9.627431869506836
    6. '9' → logprob: -10.627431869506836
    7. '000' → logprob: -11.502431869506836
    8. '007' → logprob: -12.127431869506836
    9. '*' → logprob: -12.377431869506836
    10. '```' → logprob: -12.877431869506836

Token 275: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.006725549232214689
    2. '9' → logprob: -5.006725311279297
    3. '8' → logprob: -11.506725311279297
    4. '6' → logprob: -15.881725311279297
    5. '**' → logprob: -18.131725311279297
    6. '+' → logprob: -20.256725311279297
    7. '

' → logprob: -20.256725311279297
    8. '```' → logprob: -20.631725311279297
    9. '７' → logprob: -21.631725311279297
    10. '
' → logprob: -21.631725311279297

Token 276: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.011114909313619137
    2. '9' → logprob: -4.511115074157715
    3. '8' → logprob: -9.636115074157715
    4. '6' → logprob: -13.261115074157715
    5. '+' → logprob: -17.1361141204834
    6. '**' → logprob: -17.3861141204834
    7. '10' → logprob: -18.8861141204834
    8. '７' → logprob: -18.8861141204834
    9. '

' → logprob: -19.8861141204834
    10. '```' → logprob: -20.3861141204834

Token 277: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.25
    3. '))' → logprob: -17.625
    4. ')
' → logprob: -18.875
    5. ')`' → logprob: -19.75
    6. '),' → logprob: -20.5
    7. '())' → logprob: -20.625
    8. ')#' → logprob: -20.875
    9. ')}' → logprob: -21.25
    10. '）' → logprob: -21.25

Token 278: 'L' (ID: 43)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04781011864542961
    2. 'class' → logprob: -3.1728100776672363
    3. '#' → logprob: -5.797810077667236
    4. 'n' → logprob: -6.922810077667236
    5. 'import' → logprob: -7.797810077667236
    6. 'from' → logprob: -8.422810554504395
    7. 'N' → logprob: -9.172810554504395
    8. '
' → logprob: -12.047810554504395
    9. 'ndef' → logprob: -12.047810554504395
    10. ' class' → logprob: -12.297810554504395

Token 279: 'ARGE' (ID: 57928)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13774774968624115
    2. ' =' → logprob: -2.1377477645874023
    3. 'L' → logprob: -5.887747764587402
    4. ',' → logprob: -6.012747764587402
    5. 'ength' → logprob: -6.637747764587402
    6. 'ENGTH' → logprob: -6.887747764587402
    7. 'IMIT' → logprob: -7.012747764587402
    8. '=[]' → logprob: -7.637747764587402
    9. '_' → logprob: -8.262747764587402
    10. '=input' → logprob: -8.512747764587402

Token 280: '_NUMBER' (ID: 40690)
  Prédit: '_INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.41644373536109924
    2. '_NUMBER' → logprob: -2.4164438247680664
    3. ' =' → logprob: -2.5414438247680664
    4. '_INF' → logprob: -2.6664438247680664
    5. '=' → logprob: -3.7914438247680664
    6. '_' → logprob: -4.041443824768066
    7. '_INFINITY' → logprob: -4.541443824768066
    8. '_VALUE' → logprob: -4.791443824768066
    9. '=int' → logprob: -4.791443824768066
    10. '_NUM' → logprob: -4.916443824768066

Token 281: '_INFINITY' (ID: 188542)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858884960412979
    2. '=' → logprob: -3.048588752746582
    3. ',' → logprob: -14.798588752746582
    4. '=int' → logprob: -15.173588752746582
    5. ' ' → logprob: -15.548588752746582
    6. '＝' → logprob: -16.1735897064209
    7. '100' → logprob: -16.4235897064209
    8. '```' → logprob: -16.4235897064209
    9. ':' → logprob: -16.6735897064209
    10. '   ' → logprob: -16.6735897064209

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603635549545288
    2. '=' → logprob: -1.9103635549545288
    3. '=int' → logprob: -9.91036319732666
    4. '_INF' → logprob: -10.28536319732666
    5. 'INF' → logprob: -11.53536319732666
    6. '_' → logprob: -11.66036319732666
    7. ' ' → logprob: -11.78536319732666
    8. '=float' → logprob: -11.78536319732666
    9. '_INFINITY' → logprob: -12.41036319732666
    10. '＝' → logprob: -12.41036319732666

Token 283: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016843128949403763
    2. 'float' → logprob: -4.141843318939209
    3. '1' → logprob: -7.391843318939209
    4. 'int' → logprob: -9.51684284210205
    5. '100' → logprob: -10.01684284210205
    6. '999' → logprob: -10.51684284210205
    7. '922' → logprob: -11.39184284210205
    8. ' ' → logprob: -12.01684284210205
    9. '(' → logprob: -12.01684284210205
    10. '9' → logprob: -12.26684284210205

Token 284: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.015115984715521336
    2. 'float' → logprob: -4.265116214752197
    3. '1' → logprob: -7.140116214752197
    4. 'int' → logprob: -9.765115737915039
    5. '100' → logprob: -10.765115737915039
    6. '922' → logprob: -10.890115737915039
    7. '999' → logprob: -11.140115737915039
    8. '4' → logprob: -11.515115737915039
    9. '2' → logprob: -11.515115737915039
    10. '(' → logprob: -12.015115737915039

Token 285: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.5917153358459473
    2. '9' → logprob: -1.5917153358459473
    3. '10' → logprob: -2.2167153358459473
    4. '15' → logprob: -2.4667153358459473
    5. '12' → logprob: -3.4667153358459473
    6. '20' → logprob: -5.466715335845947
    7. '16' → logprob: -5.716715335845947
    8. '100' → logprob: -5.841715335845947
    9. '+' → logprob: -6.216715335845947
    10. '14' → logprob: -6.841715335845947

Token 286: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.2153782695531845
    2. '15' → logprob: -1.7153782844543457
    3. '20' → logprob: -5.340378284454346
    4. '16' → logprob: -5.340378284454346
    5. '9' → logprob: -6.340378284454346
    6. '12' → logprob: -7.090378284454346
    7. '10' → logprob: -7.215378284454346
    8. '19' → logprob: -7.965378284454346
    9. '13' → logprob: -8.465377807617188
    10. '17' → logprob: -8.840377807617188

Token 287: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.2359403669834137
    2. '15' → logprob: -1.6109403371810913
    3. '16' → logprob: -5.360940456390381
    4. '20' → logprob: -5.860940456390381
    5. '9' → logprob: -6.610940456390381
    6. '12' → logprob: -7.735940456390381
    7. '10' → logprob: -7.735940456390381
    8. '17' → logprob: -8.485939979553223
    9. '19' → logprob: -8.610939979553223
    10. '14' → logprob: -8.860939979553223

Token 288: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5806043148040771
    2. 'def' → logprob: -1.4556043148040771
    3. '<|end|>' → logprob: -1.9556043148040771
    4. '

' → logprob: -3.955604314804077
    5. 'class' → logprob: -4.080604553222656
    6. '#' → logprob: -5.080604553222656
    7. 'L' → logprob: -5.330604553222656
    8. ')' → logprob: -5.455604553222656
    9. '<|end|>' → logprob: -6.080604553222656
    10. '```' → logprob: -6.205604553222656

Token 289: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9507218599319458
    2. 'MAX' → logprob: -1.3257218599319458
    3. '<|end|>' → logprob: -2.4507217407226562
    4. 'L' → logprob: -2.5757217407226562
    5. '#' → logprob: -2.8257217407226562
    6. '
' → logprob: -3.8257217407226562
    7. 'S' → logprob: -4.700721740722656
    8. 'class' → logprob: -4.950721740722656
    9. 'MOD' → logprob: -5.200721740722656
    10. 'INF' → logprob: -5.200721740722656

Token 290: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04881070926785469
    2. '=' → logprob: -3.0488107204437256
    3. '_' → logprob: -8.423810958862305
    4. ',' → logprob: -13.798810958862305
    5. '_=' → logprob: -14.423810958862305
    6. ':' → logprob: -14.548810958862305
    7. '```' → logprob: -15.298810958862305
    8. ' _' → logprob: -15.673810958862305
    9. '＝' → logprob: -15.798810958862305
    10. '_SPACE' → logprob: -15.923810958862305

Token 291: '_DIV' (ID: 83128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. '_' → logprob: -14.773245811462402
    4. '＝' → logprob: -17.02324676513672
    5. ',' → logprob: -17.14824676513672
    6. ' ' → logprob: -17.77324676513672
    7. ' =
' → logprob: -18.14824676513672
    8. ':' → logprob: -18.77324676513672
    9. '	' → logprob: -18.89824676513672
    10. ' =)' → logprob: -19.02324676513672

Token 292: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.013276233337819576
    2. 'ISION' → logprob: -5.138276100158691
    3. 'IDE' → logprob: -5.638276100158691
    4. 'IDER' → logprob: -6.263276100158691
    5. 'ISIBLE' → logprob: -6.763276100158691
    6. '=' → logprob: -8.638276100158691
    7. '   ' → logprob: -9.638276100158691
    8. 'ID' → logprob: -9.763276100158691
    9. '1' → logprob: -9.888276100158691
    10. 'IDEO' → logprob: -10.138276100158691

Token 293: 'OR' (ID: 1301)
  Prédit: 'ON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ON' → logprob: -0.0002753981971181929
    2. 'OR' → logprob: -8.250275611877441
    3. '0' → logprob: -11.875275611877441
    4. 'ION' → logprob: -12.500275611877441
    5. 'On' → logprob: -14.125275611877441
    6. 'O' → logprob: -14.250275611877441
    7. 'on' → logprob: -14.500275611877441
    8. 'B' → logprob: -14.750275611877441
    9. '10' → logprob: -15.625275611877441
    10. '1' → logprob: -16.125274658203125

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.663042068481445
    4. ',' → logprob: -16.663042068481445
    5. '＝' → logprob: -17.663042068481445
    6. ':' → logprob: -18.038042068481445
    7. '  ' → logprob: -18.038042068481445
    8. ' =
' → logprob: -18.913042068481445
    9. '=int' → logprob: -19.038042068481445
    10. '_' → logprob: -19.163042068481445

Token 295: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010660359403118491
    2. ' ' → logprob: -7.001066207885742
    3. '100' → logprob: -9.001066207885742
    4. '998' → logprob: -10.501066207885742
    5. '1' → logprob: -12.501066207885742
    6. '999' → logprob: -18.501066207885742
    7. 'int' → logprob: -18.751066207885742
    8. '109' → logprob: -19.001066207885742
    9. '```' → logprob: -19.626066207885742
    10. '１０' → logprob: -19.751066207885742

Token 296: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009870808571577072
    2. '100' → logprob: -7.0009870529174805
    3. '998' → logprob: -9.50098705291748
    4. '1' → logprob: -14.87598705291748
    5. 'int' → logprob: -15.00098705291748
    6. '(' → logprob: -15.62598705291748
    7. ' ' → logprob: -18.000988006591797
    8. '１０' → logprob: -18.375988006591797
    9. '109' → logprob: -20.000988006591797
    10. 'pow' → logprob: -20.250988006591797

Token 297: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0008558357367292047
    2. '+' → logprob: -7.750855922698975
    3. '09' → logprob: -8.250855445861816
    4. '**' → logprob: -8.750855445861816
    5. '```' → logprob: -12.250855445861816
    6. ' ' → logprob: -14.500855445861816
    7. '10' → logprob: -16.000856399536133
    8. '_' → logprob: -16.375856399536133
    9. '​' → logprob: -17.000856399536133
    10. '=' → logprob: -17.000856399536133

Token 298: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.75
    3. '+' → logprob: -19.75
    4. '```' → logprob: -20.625
    5. ' ' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '10' → logprob: -22.0
    8. '   ' → logprob: -22.375
    9. '18' → logprob: -22.625
    10. '19' → logprob: -22.625

Token 299: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.125
    3. '18' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. '10' → logprob: -20.625
    6. '19' → logprob: -20.625
    7. '９' → logprob: -21.625
    8. '15' → logprob: -22.25
    9. '+' → logprob: -22.375
    10. ' ' → logprob: -22.75

Token 300: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025789898354560137
    2. '7' → logprob: -6.002579212188721
    3. ' +' → logprob: -9.377578735351562
    4. 'plus' → logprob: -11.252578735351562
    5. '＋' → logprob: -12.752578735351562
    6. '+
' → logprob: -13.877578735351562
    7. '```' → logprob: -14.127578735351562
    8. ' plus' → logprob: -14.252578735351562
    9. 'Plus' → logprob: -15.252578735351562
    10. 'PLUS' → logprob: -16.502578735351562

Token 301: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.625
    3. ' ' → logprob: -19.625
    4. '```' → logprob: -20.375
    5. '07' → logprob: -20.875
    6. '   ' → logprob: -20.875
    7. '７' → logprob: -21.125
    8. '
' → logprob: -21.875
    9. '

' → logprob: -22.25
    10. '  ' → logprob: -22.625

Token 302: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -21.25
    3. '```' → logprob: -21.25
    4. ' ' → logprob: -21.75
    5. '   ' → logprob: -21.75
    6. '
' → logprob: -22.125
    7. '07' → logprob: -22.125
    8. '+' → logprob: -22.125
    9. '

' → logprob: -22.75
    10. '' → logprob: -23.25

Token 303: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004603264853358269
    2. '#' → logprob: -6.129603385925293
    3. 'class' → logprob: -6.254603385925293
    4. '<|end|>' → logprob: -8.504603385925293
    5. 'import' → logprob: -9.754603385925293
    6. ' ' → logprob: -10.129603385925293
    7. 'for' → logprob: -10.379603385925293
    8. 'from' → logprob: -10.504603385925293
    9. '
' → logprob: -10.629603385925293
    10. ' def' → logprob: -10.754603385925293

Token 305: '_string' (ID: 8609)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0170205757021904
    2. '_' → logprob: -4.3920207023620605
    3. '_line' → logprob: -6.0170207023620605
    4. '_data' → logprob: -6.6420207023620605
    5. '(' → logprob: -8.017020225524902
    6. ' =' → logprob: -9.267020225524902
    7. '=' → logprob: -9.392020225524902
    8. '().' → logprob: -10.017020225524902
    9. '_str' → logprob: -10.517020225524902
    10. '_lines' → logprob: -10.892020225524902

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3979119658470154
    2. '()' → logprob: -1.5229120254516602
    3. '=' → logprob: -2.27291202545166
    4. '(' → logprob: -5.89791202545166
    5. '_' → logprob: -6.02291202545166
    6. ' ' → logprob: -7.64791202545166
    7. '_string' → logprob: -8.39791202545166
    8. 's' → logprob: -8.52291202545166
    9. '.' → logprob: -8.64791202545166
    10. '_str' → logprob: -9.02291202545166

Token 307: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.045969702303409576
    2. ' read' → logprob: -3.2959697246551514
    3. 'input' → logprob: -5.045969486236572
    4. ' input' → logprob: -6.920969486236572
    5. '""' → logprob: -8.54596996307373
    6. '"' → logprob: -8.67096996307373
    7. ''' → logprob: -10.04596996307373
    8. '''' → logprob: -10.79596996307373
    9. 'sys' → logprob: -11.67096996307373
    10. '	read' → logprob: -11.92096996307373

Token 308: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.623244553338736e-05
    2. '_string' → logprob: -10.250065803527832
    3. '_' → logprob: -11.250065803527832
    4. '()' → logprob: -11.250065803527832
    5. 'input' → logprob: -12.875065803527832
    6. '_line' → logprob: -13.375065803527832
    7. '_in' → logprob: -15.250065803527832
    8. '_Input' → logprob: -16.12506675720215
    9. 'Input' → logprob: -16.37506675720215
    10. '(input' → logprob: -17.25006675720215

Token 309: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.4259644558478612e-05
    2. '_string' → logprob: -12.125014305114746
    3. '_' → logprob: -12.250014305114746
    4. '()' → logprob: -12.625014305114746
    5. 'line' → logprob: -14.500014305114746
    6. '_LINE' → logprob: -16.12501335144043
    7. '_l' → logprob: -17.00001335144043
    8. '_str' → logprob: -17.62501335144043
    9. '_list' → logprob: -18.25001335144043
    10. ' _' → logprob: -18.25001335144043

Token 310: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.759734732331708e-05
    2. '()
' → logprob: -11.375017166137695
    3. '(' → logprob: -12.875017166137695
    4. ' ()' → logprob: -13.375017166137695
    5. '().' → logprob: -13.750017166137695
    6. '()

' → logprob: -14.875017166137695
    7. '()]' → logprob: -16.125017166137695
    8. '())' → logprob: -16.125017166137695
    9. '();' → logprob: -16.625017166137695
    10. ')' → logprob: -16.750017166137695

Token 311: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8771892786026
    2. ')' → logprob: -2.1271891593933105
    3. 'tokens' → logprob: -2.1271891593933105
    4. 'result' → logprob: -2.6271891593933105
    5. 'idx' → logprob: -2.6271891593933105
    6. 'count' → logprob: -2.7521891593933105
    7. 'print' → logprob: -3.1271891593933105
    8. 'length' → logprob: -3.1271891593933105
    9. 'i' → logprob: -3.2521891593933105
    10. 'input' → logprob: -3.2521891593933105

Token 312: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.07881113886833191
    2. '_length' → logprob: -3.2038111686706543
    3. '_char' → logprob: -3.7038111686706543
    4. '_len' → logprob: -5.328811168670654
    5. '_chars' → logprob: -5.953811168670654
    6. '_' → logprob: -6.703811168670654
    7. '_str' → logprob: -7.203811168670654
    8. '_list' → logprob: -7.703811168670654
    9. '_index' → logprob: -8.828810691833496
    10. '_strings' → logprob: -9.703810691833496

Token 313: '_length' (ID: 11514)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.7373036742210388
    2. '[' → logprob: -1.8623037338256836
    3. '.' → logprob: -1.9873037338256836
    4. '.lower' → logprob: -3.1123037338256836
    5. '<|end|>' → logprob: -3.2373037338256836
    6. '[::-' → logprob: -3.3623037338256836
    7. '.strip' → logprob: -3.7373037338256836
    8. '[:]' → logprob: -3.7373037338256836
    9. '.upper' → logprob: -3.9873037338256836
    10. '.startswith' → logprob: -4.612303733825684

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016120703890919685
    2. '=' → logprob: -4.141120910644531
    3. ' ' → logprob: -10.016120910644531
    4. '=len' → logprob: -10.266120910644531
    5. '=input' → logprob: -12.141120910644531
    6. ')' → logprob: -15.016120910644531
    7. '_' → logprob: -15.141120910644531
    8. '  ' → logprob: -15.266120910644531
    9. 'len' → logprob: -15.766120910644531
    10. ' ' → logprob: -15.891120910644531

Token 315: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38687121868133545
    2. ' len' → logprob: -1.1368712186813354
    3. '(len' → logprob: -15.761871337890625
    4. '	len' → logprob: -18.886871337890625
    5. '=len' → logprob: -19.886871337890625
    6. '[len' → logprob: -20.261871337890625
    7. '   ' → logprob: -20.886871337890625
    8. 'int' → logprob: -21.011871337890625
    9. 'input' → logprob: -21.136871337890625
    10. ' ' → logprob: -21.261871337890625

Token 316: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. 'input' → logprob: -15.125021934509277
    4. ' (' → logprob: -17.50002098083496
    5. '=input' → logprob: -18.87502098083496
    6. ',input' → logprob: -20.62502098083496
    7. '(
' → logprob: -21.00002098083496
    8. ' input' → logprob: -21.12502098083496
    9. '(inp' → logprob: -21.50002098083496
    10. '(output' → logprob: -21.75002098083496

Token 317: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00014644917973782867
    2. 'string' → logprob: -9.625146865844727
    3. 'input' → logprob: -9.625146865844727
    4. '(input' → logprob: -11.500146865844727
    5. '_input' → logprob: -13.250146865844727
    6. 'String' → logprob: -13.500146865844727
    7. '_' → logprob: -14.875146865844727
    8. '(_' → logprob: -16.125146865844727
    9. '_str' → logprob: -16.125146865844727
    10. 's' → logprob: -16.250146865844727

Token 318: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.250001907348633
    4. 'input' → logprob: -15.875001907348633
    5. '()' → logprob: -17.625001907348633
    6. '#' → logprob: -17.875001907348633
    7. ')#' → logprob: -17.875001907348633
    8. 'if' → logprob: -18.500001907348633
    9. '}' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 319: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.366351842880249
    2. 'for' → logprob: -2.366351842880249
    3. 'count' → logprob: -2.616351842880249
    4. 'answer' → logprob: -3.241351842880249
    5. 'current' → logprob: -3.991351842880249
    6. 'i' → logprob: -4.116352081298828
    7. 'if' → logprob: -4.616352081298828
    8. 'index' → logprob: -4.991352081298828
    9. 'output' → logprob: -5.116352081298828
    10. 's' → logprob: -5.241352081298828

Token 320: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7333076596260071
    2. 'result' → logprob: -1.2333076000213623
    3. 'char' → logprob: -3.1083076000213623
    4. 'answer' → logprob: -3.4833076000213623
    5. 'def' → logprob: -3.7333076000213623
    6. 'count' → logprob: -3.7333076000213623
    7. 'for' → logprob: -3.9833076000213623
    8. 'stack' → logprob: -4.233307838439941
    9. 'ans' → logprob: -4.733307838439941
    10. 'counts' → logprob: -4.858307838439941

Token 321: '_table' (ID: 11721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0298149511218071
    2. '=' → logprob: -3.6548149585723877
    3. '_' → logprob: -5.779814720153809
    4. '_table' → logprob: -8.904814720153809
    5. '_dp' → logprob: -8.904814720153809
    6. '_array' → logprob: -10.154814720153809
    7. 'dp' → logprob: -10.279814720153809
    8. '_length' → logprob: -10.904814720153809
    9. '_size' → logprob: -11.654814720153809
    10. '=[' → logprob: -11.904814720153809

Token 322: '[index' (ID: 11815)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033675666898489
    2. '=' → logprob: -3.4086756706237793
    3. '_' → logprob: -11.158675193786621
    4. '[' → logprob: -12.533675193786621
    5. '=[' → logprob: -12.658675193786621
    6. ' =[' → logprob: -12.658675193786621
    7. ' ' → logprob: -13.408675193786621
    8. '=[]' → logprob: -14.533675193786621
    9. 'dp' → logprob: -14.783675193786621
    10. '_length' → logprob: -15.158675193786621

Token 323: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007980761118233204
    2. '][' → logprob: -4.882980823516846
    3. ' ]' → logprob: -8.382980346679688
    4. ']=' → logprob: -9.632980346679688
    5. 's' → logprob: -10.382980346679688
    6. ' ][' → logprob: -11.132980346679688
    7. ' =' → logprob: -11.382980346679688
    8. '=' → logprob: -12.757980346679688
    9. ']={' → logprob: -12.882980346679688
    10. '][]' → logprob: -12.882980346679688

Token 324: 'abc' (ID: 26682)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.9583377242088318
    2. 'char' → logprob: -1.2083377838134766
    3. 'length' → logprob: -2.5833377838134766
    4. 'state' → logprob: -3.0833377838134766
    5. '0' → logprob: -3.4583377838134766
    6. 'alphabet' → logprob: -3.7083377838134766
    7. 'substring' → logprob: -3.7083377838134766
    8. '26' → logprob: -3.8333377838134766
    9. 'count' → logprob: -4.458337783813477
    10. 'v' → logprob: -4.708337783813477

Token 325: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.0018975734710693
    2. '_count' → logprob: -1.1268975734710693
    3. ']' → logprob: -1.6268975734710693
    4. '_char' → logprob: -3.2518975734710693
    5. '][' → logprob: -4.251897811889648
    6. '_status' → logprob: -4.501897811889648
    7. '_counts' → logprob: -4.501897811889648
    8. '_index' → logprob: -5.251897811889648
    9. '_type' → logprob: -5.501897811889648
    10. '_choice' → logprob: -5.626897811889648

Token 326: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12753313779830933
    2. '][' → logprob: -2.127533197402954
    3. ' ]' → logprob: -8.252532958984375
    4. ']=' → logprob: -9.002532958984375
    5. ' ][' → logprob: -9.252532958984375
    6. 's' → logprob: -9.377532958984375
    7. '1' → logprob: -12.002532958984375
    8. '=' → logprob: -12.377532958984375
    9. '][]' → logprob: -12.627532958984375
    10. ']={' → logprob: -12.627532958984375

Token 327: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5384668707847595
    2. '=' → logprob: -1.4134669303894043
    3. ' [' → logprob: -2.0384669303894043
    4. '[' → logprob: -3.2884669303894043
    5. '=[' → logprob: -6.788466930389404
    6. '0' → logprob: -7.163466930389404
    7. '[input' → logprob: -7.538466930389404
    8. '[int' → logprob: -7.538466930389404
    9. ' ' → logprob: -7.663466930389404
    10. ' [[' → logprob: -8.163466453552246

Token 328: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2474130094051361
    2. '=' → logprob: -2.122412919998169
    3. 's' → logprob: -3.247412919998169
    4. '_of' → logprob: -3.622412919998169
    5. 'of' → logprob: -3.872412919998169
    6. ' of' → logprob: -4.872413158416748
    7. ']' → logprob: -6.372413158416748
    8. '[]' → logprob: -7.122413158416748
    9. '<|end|>' → logprob: -7.247413158416748
    10. ' ' → logprob: -7.622413158416748

Token 329: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.018187522888183594
    2. ' ways' → logprob: -4.018187522888184
    3. 'way' → logprob: -12.018187522888184
    4. ' subse' → logprob: -12.268187522888184
    5. 'possible' → logprob: -12.393187522888184
    6. ' sequences' → logprob: -12.518187522888184
    7. 'Ways' → logprob: -12.643187522888184
    8. 'w' → logprob: -13.018187522888184
    9. 'WAYS' → logprob: -13.518187522888184
    10. 'valid' → logprob: -13.518187522888184

Token 330: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5014219880104065
    2. '=' → logprob: -1.0014219284057617
    3. ' to' → logprob: -3.7514219284057617
    4. 'to' → logprob: -6.501421928405762
    5. ' for' → logprob: -7.876421928405762
    6. 'for' → logprob: -8.126421928405762
    7. ',' → logprob: -8.376421928405762
    8. ')' → logprob: -8.501421928405762
    9. ' ' → logprob: -8.501421928405762
    10. '<|end|>' → logprob: -8.876421928405762

Token 331: ' select' (ID: 4736)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.22085577249526978
    2. 'reach' → logprob: -2.595855712890625
    3. 'continue' → logprob: -3.345855712890625
    4. ' form' → logprob: -4.095855712890625
    5. 'arr' → logprob: -4.470855712890625
    6. 'decode' → logprob: -4.470855712890625
    7. 'construct' → logprob: -4.720855712890625
    8. ' reach' → logprob: -4.845855712890625
    9. 'build' → logprob: -5.220855712890625
    10. 'fill' → logprob: -5.720855712890625

Token 332: ' first' (ID: 1577)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.004967212677002
    2. ' subse' → logprob: -2.129967212677002
    3. 'index' → logprob: -2.379967212677002
    4. 'from' → logprob: -2.379967212677002
    5. 'for' → logprob: -2.504967212677002
    6. '[index' → logprob: -2.879967212677002
    7. ']' → logprob: -3.129967212677002
    8. '   ' → logprob: -3.254967212677002
    9. '(' → logprob: -3.254967212677002
    10. '_' → logprob: -3.379967212677002

Token 333: ' (' (ID: 350)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.01599307172000408
    2. ' index' → logprob: -4.265993118286133
    3. '[index' → logprob: -7.140993118286133
    4. '(index' → logprob: -7.390993118286133
    5. '_index' → logprob: -8.890993118286133
    6. 'i' → logprob: -9.015993118286133
    7. '#index' → logprob: -10.515993118286133
    8. ',index' → logprob: -10.640993118286133
    9. '=index' → logprob: -10.890993118286133
    10. 'input' → logprob: -11.015993118286133

Token 334: 'abc' (ID: 26682)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0005205047782510519
    2. ' index' → logprob: -8.000520706176758
    3. 'input' → logprob: -8.750520706176758
    4. 'i' → logprob: -11.375520706176758
    5. ')' → logprob: -12.500520706176758
    6. '[index' → logprob: -12.750520706176758
    7. '_index' → logprob: -13.000520706176758
    8. '#index' → logprob: -13.000520706176758
    9. '=index' → logprob: -13.500520706176758
    10. '(index' → logprob: -14.375520706176758

Token 335: '_state' (ID: 9479)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2230258584022522
    2. '_' → logprob: -2.4730257987976074
    3. '_string' → logprob: -2.8480257987976074
    4. 'index' → logprob: -3.5980257987976074
    5. '_chars' → logprob: -4.723025798797607
    6. '_input' → logprob: -5.223025798797607
    7. ')' → logprob: -5.473025798797607
    8. '_char' → logprob: -6.473025798797607
    9. '_token' → logprob: -6.598025798797607
    10. ' _' → logprob: -6.598025798797607

Token 336: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5086073279380798
    2. ' +' → logprob: -1.5086073875427246
    3. ']' → logprob: -2.7586073875427246
    4. ')' → logprob: -2.7586073875427246
    5. '][' → logprob: -4.258607387542725
    6. '_chars' → logprob: -5.258607387542725
    7. '_' → logprob: -5.383607387542725
    8. ' characters' → logprob: -5.883607387542725
    9. ',' → logprob: -6.008607387542725
    10. '_index' → logprob: -6.133607387542725

Token 337: ' chars' (ID: 47991)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8916216492652893
    2. 'characters' → logprob: -1.5166215896606445
    3. ' characters' → logprob: -1.8916215896606445
    4. ']' → logprob: -3.0166215896606445
    5. '][' → logprob: -3.5166215896606445
    6. '_' → logprob: -4.1416215896606445
    7. 'chars' → logprob: -4.2666215896606445
    8. ' +' → logprob: -4.8916215896606445
    9. '_chars' → logprob: -4.8916215896606445
    10. '_char' → logprob: -4.8916215896606445

Token 338: ' of' (ID: 328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6977492570877075
    2. 'for' → logprob: -2.072749137878418
    3. 'from' → logprob: -2.197749137878418
    4. '=' → logprob: -2.572749137878418
    5. '_' → logprob: -2.697749137878418
    6. ',' → logprob: -2.822749137878418
    7. '#' → logprob: -2.822749137878418
    8. ' of' → logprob: -2.947749137878418
    9. 'of' → logprob: -2.947749137878418
    10. ' =' → logprob: -3.197749137878418

Token 339: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16583360731601715
    2. ''' → logprob: -1.915833592414856
    3. 'input' → logprob: -5.415833473205566
    4. ''ab' → logprob: -7.790833473205566
    5. '"A' → logprob: -8.415833473205566
    6. '"S' → logprob: -9.415833473205566
    7. 'ABC' → logprob: -9.790833473205566
    8. ''A' → logprob: -9.790833473205566
    9. 'abc' → logprob: -10.290833473205566
    10. ''S' → logprob: -10.415833473205566

Token 340: 'ABC' (ID: 44197)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.20439526438713074
    2. '"' → logprob: -2.079395294189453
    3. 'ABC' → logprob: -3.204395294189453
    4. ''' → logprob: -4.454395294189453
    5. 'at' → logprob: -5.329395294189453
    6. 'key' → logprob: -7.204395294189453
    7. 'At' → logprob: -7.829395294189453
    8. '`' → logprob: -8.829395294189453
    9. 'AG' → logprob: -9.079395294189453
    10. 'a' → logprob: -9.204395294189453

Token 341: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0006364276050589979
    2. 'from' → logprob: -8.500636100769043
    3. 'string' → logprob: -9.125636100769043
    4. 'ABC' → logprob: -9.125636100769043
    5. 'def' → logprob: -10.500636100769043
    6. 'S' → logprob: -11.125636100769043
    7. '"in' → logprob: -11.125636100769043
    8. 'abc' → logprob: -11.250636100769043
    9. ' "' → logprob: -11.250636100769043
    10. '"
' → logprob: -11.250636100769043

Token 342: ' up' (ID: 869)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.054152484983205795
    2. '=' → logprob: -3.804152488708496
    3. ' =' → logprob: -4.054152488708496
    4. '_dp' → logprob: -5.054152488708496
    5. ']' → logprob: -6.304152488708496
    6. 'from' → logprob: -6.679152488708496
    7. ' dp' → logprob: -7.054152488708496
    8. ',' → logprob: -7.429152488708496
    9. '#' → logprob: -7.679152488708496
    10. 'in' → logprob: -7.929152488708496

Token 343: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07870183140039444
    2. ']' → logprob: -3.4537017345428467
    3. ' to' → logprob: -3.4537017345428467
    4. '_to' → logprob: -5.328701972961426
    5. '=' → logprob: -6.203701972961426
    6. 'index' → logprob: -6.203701972961426
    7. '][' → logprob: -7.578701972961426
    8. 'input' → logprob: -7.703701972961426
    9. '[' → logprob: -8.328701972961426
    10. ',' → logprob: -8.453701972961426

Token 344: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.633163571357727
    2. ' index' → logprob: -0.758163571357727
    3. ' the' → logprob: -8.633163452148438
    4. '#index' → logprob: -9.008163452148438
    5. '[index' → logprob: -9.258163452148438
    6. 'input' → logprob: -10.633163452148438
    7. 'the' → logprob: -10.758163452148438
    8. ' input' → logprob: -10.758163452148438
    9. '=index' → logprob: -10.883163452148438
    10. ' current' → logprob: -11.133163452148438

Token 345: '-th' (ID: 14928)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2057960033416748
    2. ' =' → logprob: -2.080796003341675
    3. '=' → logprob: -3.705796003341675
    4. '_dp' → logprob: -4.205796241760254
    5. ']' → logprob: -4.705796241760254
    6. '_' → logprob: -5.330796241760254
    7. ' dp' → logprob: -5.580796241760254
    8. ',' → logprob: -6.830796241760254
    9. '
' → logprob: -6.955796241760254
    10. '(dp' → logprob: -7.330796241760254

Token 346: ' character' (ID: 5855)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0948607474565506
    2. ' =' → logprob: -3.344860792160034
    3. '=' → logprob: -3.719860792160034
    4. ' in' → logprob: -4.844860553741455
    5. ' ]' → logprob: -5.219860553741455
    6. '_' → logprob: -5.344860553741455
    7. ']=' → logprob: -5.844860553741455
    8. ' _' → logprob: -6.469860553741455
    9. 'dp' → logprob: -6.469860553741455
    10. ',' → logprob: -6.844860553741455

Token 347: ' 
' (ID: 793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002320937579497695
    2. ' =' → logprob: -7.127320766448975
    3. '=' → logprob: -7.502320766448975
    4. ']' → logprob: -8.002321243286133
    5. '_dp' → logprob: -8.002321243286133
    6. ' dp' → logprob: -9.127321243286133
    7. '
' → logprob: -9.752321243286133
    8. '(dp' → logprob: -10.252321243286133
    9. '#' → logprob: -11.127321243286133
    10. ')' → logprob: -11.502321243286133

Token 348: 'number' (ID: 8096)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0927710086107254
    2. '=' → logprob: -2.967771053314209
    3. ' =' → logprob: -3.717771053314209
    4. '_dp' → logprob: -4.967771053314209
    5. ']' → logprob: -5.592771053314209
    6. '_' → logprob: -7.092771053314209
    7. ' dp' → logprob: -7.592771053314209
    8. '(dp' → logprob: -7.842771053314209
    9. 'in' → logprob: -9.21777057647705
    10. ',' → logprob: -9.46777057647705

Token 349: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.2843320667743683
    2. 's' → logprob: -2.409332036972046
    3. '_' → logprob: -2.534332036972046
    4. '_dp' → logprob: -3.284332036972046
    5. '_s' → logprob: -3.534332036972046
    6. '_chars' → logprob: -5.534332275390625
    7. 'of' → logprob: -6.909332275390625
    8. '_table' → logprob: -7.284332275390625
    9. 'dp' → logprob: -7.409332275390625
    10. '_rows' → logprob: -7.909332275390625

Token 350: '_char' (ID: 23398)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.0914486646652222
    2. 'characters' → logprob: -1.2164486646652222
    3. '_' → logprob: -1.7164486646652222
    4. '_char' → logprob: -2.9664487838745117
    5. '_chars' → logprob: -3.0914487838745117
    6. 'dp' → logprob: -3.0914487838745117
    7. '_states' → logprob: -4.466448783874512
    8. '_dp' → logprob: -4.466448783874512
    9. 'chars' → logprob: -5.841448783874512
    10. 'indices' → logprob: -6.341448783874512

Token 351: 'acters' (ID: 8385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3486045300960541
    2. 'acters' → logprob: -1.2236045598983765
    3. '_count' → logprob: -9.848604202270508
    4. '=' → logprob: -10.723604202270508
    5. '_counts' → logprob: -10.973604202270508
    6. 'acter' → logprob: -11.098604202270508
    7. '_index' → logprob: -11.223604202270508
    8. 'count' → logprob: -11.723604202270508
    9. '_types' → logprob: -12.348604202270508
    10. '```' → logprob: -12.473604202270508

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5853897929191589
    2. '=' → logprob: -0.8353897929191589
    3. ',' → logprob: -4.835389614105225
    4. 's' → logprob: -7.335389614105225
    5. '=input' → logprob: -7.460389614105225
    6. ')' → logprob: -9.335390090942383
    7. ']' → logprob: -10.710390090942383
    8. ' ,' → logprob: -10.835390090942383
    9. ',input' → logprob: -10.960390090942383
    10. '=len' → logprob: -11.085390090942383

Token 353: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005191539879888296
    2. ' input' → logprob: -5.505191326141357
    3. 'len' → logprob: -6.880191326141357
    4. ' len' → logprob: -10.505191802978516
    5. '10' → logprob: -11.005191802978516
    6. '26' → logprob: -11.630191802978516
    7. '   ' → logprob: -12.380191802978516
    8. '100' → logprob: -12.505191802978516
    9. '20' → logprob: -12.880191802978516
    10. ' ' → logprob: -13.005191802978516

Token 354: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0002141458389814943
    2. 'string' → logprob: -9.125214576721191
    3. '_' → logprob: -9.250214576721191
    4. 'String' → logprob: -12.125214576721191
    5. '_char' → logprob: -13.750214576721191
    6. '_length' → logprob: -13.875214576721191
    7. '_character' → logprob: -14.750214576721191
    8. '```' → logprob: -15.125214576721191
    9. '_strings' → logprob: -15.500214576721191
    10. '_STRING' → logprob: -15.625214576721191

Token 355: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.004396648146212101
    2. 'length' → logprob: -5.504396438598633
    3. '_' → logprob: -8.379396438598633
    4. '_l' → logprob: -11.004396438598633
    5. '_len' → logprob: -11.004396438598633
    6. ' =' → logprob: -12.004396438598633
    7. '_index' → logprob: -12.004396438598633
    8. 'len' → logprob: -12.129396438598633
    9. '=' → logprob: -12.129396438598633
    10. ' length' → logprob: -12.254396438598633

Token 356: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14005641639232635
    2. ' +' → logprob: -2.7650563716888428
    3. 'dp' → logprob: -3.3900563716888428
    4. ',' → logprob: -4.390056610107422
    5. ' =' → logprob: -4.515056610107422
    6. '
' → logprob: -5.015056610107422
    7. '=' → logprob: -6.640056610107422
    8. '_dp' → logprob: -7.640056610107422
    9. '+
' → logprob: -7.640056610107422
    10. ' dp' → logprob: -7.890056610107422

Token 357: 'number' (ID: 8096)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019235177896916866
    2. '
' → logprob: -7.376923561096191
    3. '+' → logprob: -7.501923561096191
    4. 'number' → logprob: -8.001923561096191
    5. ' =' → logprob: -9.501923561096191
    6. '=' → logprob: -9.626923561096191
    7. '_dp' → logprob: -9.626923561096191
    8. ' dp' → logprob: -9.751923561096191
    9. '#' → logprob: -10.876923561096191
    10. ']' → logprob: -11.001923561096191

Token 358: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0011150928912684321
    2. 'of' → logprob: -7.876115322113037
    3. '_dp' → logprob: -8.126114845275879
    4. '_chars' → logprob: -8.501114845275879
    5. '_' → logprob: -9.251114845275879
    6. '_char' → logprob: -9.876114845275879
    7. '_states' → logprob: -10.501114845275879
    8. 'Of' → logprob: -12.126114845275879
    9. '_number' → logprob: -12.126114845275879
    10. '_choices' → logprob: -12.751114845275879

Token 359: '_' (ID: 62)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.35228845477104187
    2. 'characters' → logprob: -1.2272884845733643
    3. 'char' → logprob: -5.727288246154785
    4. 'dp' → logprob: -8.852288246154785
    5. '_chars' → logprob: -9.352288246154785
    6. 'states' → logprob: -9.977288246154785
    7. 'input' → logprob: -10.102288246154785
    8. 'character' → logprob: -10.352288246154785
    9. 'string' → logprob: -10.477288246154785
    10. '_character' → logprob: -10.727288246154785

Token 360: 'abc' (ID: 26682)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.0016931501450017095
    2. 'char' → logprob: -6.501693248748779
    3. '_char' → logprob: -9.876692771911621
    4. 'character' → logprob: -10.001692771911621
    5. 'dp' → logprob: -10.126692771911621
    6. ' characters' → logprob: -11.126692771911621
    7. 'rows' → logprob: -11.876692771911621
    8. 'ways' → logprob: -12.001692771911621
    9. 'chars' → logprob: -12.626692771911621
    10. 'abc' → logprob: -12.751692771911621

Token 361: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.10087452828884125
    2. '_state' → logprob: -2.350874423980713
    3. '_chars' → logprob: -7.475874423980713
    4. 's' → logprob: -10.100874900817871
    5. '_char' → logprob: -10.475874900817871
    6. '_parts' → logprob: -11.975874900817871
    7. '_s' → logprob: -12.100874900817871
    8. 'state' → logprob: -12.600874900817871
    9. '=_' → logprob: -12.725874900817871
    10. ' =' → logprob: -13.100874900817871

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717974785715342
    2. '=' → logprob: -5.006718158721924
    3. ' ' → logprob: -13.756717681884766
    4. ',' → logprob: -13.756717681884766
    5. ')' → logprob: -14.881717681884766
    6. '=int' → logprob: -16.256717681884766
    7. '```' → logprob: -17.256717681884766
    8. ' ,' → logprob: -17.631717681884766
    9. '＝' → logprob: -18.006717681884766
    10. ' ' → logprob: -18.131717681884766

Token 363: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003180563682690263
    2. '3' → logprob: -5.753180503845215
    3. 'len' → logprob: -13.253180503845215
    4. ' ' → logprob: -13.878180503845215
    5. '   ' → logprob: -16.87818145751953
    6. '４' → logprob: -17.62818145751953
    7. '```' → logprob: -17.94068145751953
    8. '5' → logprob: -18.50318145751953
    9. '۴' → logprob: -19.31568145751953
    10. '=' → logprob: -19.56568145751953

Token 364: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023202638840302825
    2. '3' → logprob: -8.375231742858887
    3. 'len' → logprob: -14.125231742858887
    4. ' ' → logprob: -14.625231742858887
    5. '```' → logprob: -16.125232696533203
    6. '４' → logprob: -16.437732696533203
    7. '5' → logprob: -17.500232696533203
    8. '۴' → logprob: -17.875232696533203
    9. '   ' → logprob: -18.000232696533203
    10. '=' → logprob: -18.562732696533203

Token 365: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3508549928665161
    2. 'dp' → logprob: -1.2258549928665161
    3. '
' → logprob: -6.975854873657227
    4. '

' → logprob: -7.600854873657227
    5. '_dp' → logprob: -7.850854873657227
    6. ' dp' → logprob: -7.975854873657227
    7. ' 
' → logprob: -9.850854873657227
    8. 'number' → logprob: -9.975854873657227
    9. '(dp' → logprob: -10.600854873657227
    10. '' → logprob: -10.975854873657227

Token 366: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002266622323077172
    2. '
' → logprob: -8.500226974487305
    3. ' dp' → logprob: -11.250226974487305
    4. '_dp' → logprob: -12.625226974487305
    5. ']' → logprob: -12.750226974487305
    6. ')' → logprob: -14.250226974487305
    7. '```' → logprob: -14.500226974487305
    8. ']
' → logprob: -14.500226974487305
    9. '(dp' → logprob: -14.625226974487305
    10. '

' → logprob: -14.750226974487305

Token 367: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.6537622034084052e-05
    2. '_' → logprob: -11.37502670288086
    3. ' =' → logprob: -11.62502670288086
    4. '_tab' → logprob: -13.25002670288086
    5. '=_' → logprob: -13.50002670288086
    6. '_tbl' → logprob: -14.00002670288086
    7. ' _' → logprob: -14.12502670288086
    8. '_tables' → logprob: -14.62502670288086
    9. '=' → logprob: -14.75002670288086
    10. '_TABLE' → logprob: -16.25002670288086

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021423548460007
    2. '=' → logprob: -2.3502142429351807
    3. ' ' → logprob: -13.100214004516602
    4. '=create' → logprob: -13.225214004516602
    5. ' =[' → logprob: -13.475214004516602
    6. '=[' → logprob: -13.975214004516602
    7. '[' → logprob: -14.225214004516602
    8. '=[[' → logprob: -15.225214004516602
    9. '＝' → logprob: -15.225214004516602
    10. ' =
' → logprob: -16.8502140045166

Token 369: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.0018875879468396306
    2. '[[' → logprob: -6.376887798309326
    3. ' create' → logprob: -8.626887321472168
    4. '[' → logprob: -12.626887321472168
    5. ' [[' → logprob: -13.251887321472168
    6. '(create' → logprob: -14.001887321472168
    7. '=create' → logprob: -15.876887321472168
    8. '.create' → logprob: -16.251888275146484
    9. ':create' → logprob: -17.126888275146484
    10. '	create' → logprob: -17.501888275146484

Token 370: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1472419600977446e-06
    2. '3' → logprob: -14.000000953674316
    3. '4' → logprob: -16.625001907348633
    4. '```' → logprob: -16.875001907348633
    5. '__' → logprob: -18.000001907348633
    6. ' _' → logprob: -19.125001907348633
    7. '2' → logprob: -19.625001907348633
    8. '[' → logprob: -19.875001907348633
    9. '}_' → logprob: -19.875001907348633
    10. ' ' → logprob: -19.875001907348633

Token 371: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03990449383854866
    2. '2' → logprob: -3.2899045944213867
    3. '4' → logprob: -6.289904594421387
    4. '_' → logprob: -12.789904594421387
    5. '```' → logprob: -13.414904594421387
    6. 'list' → logprob: -14.539904594421387
    7. 'array' → logprob: -14.914904594421387
    8. '`' → logprob: -16.16490364074707
    9. '-' → logprob: -16.22740364074707
    10. 'd' → logprob: -16.35240364074707

Token 372: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -13.000007629394531
    3. 'dp' → logprob: -13.000007629394531
    4. '_d' → logprob: -13.500007629394531
    5. ' d' → logprob: -14.500007629394531
    6. 'p' → logprob: -14.625007629394531
    7. '4' → logprob: -14.750007629394531
    8. '_list' → logprob: -15.875007629394531
    9. 'д' → logprob: -15.875007629394531
    10. '-d' → logprob: -16.37500762939453

Token 373: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. 'list' → logprob: -16.5
    3. '_' → logprob: -18.125
    4. '_table' → logprob: -19.125
    5. '```' → logprob: -19.25
    6. 'List' → logprob: -19.5
    7. '_lists' → logprob: -19.75
    8. '_LIST' → logprob: -19.75
    9. '_List' → logprob: -20.125
    10. '_lst' → logprob: -21.75

Token 374: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -8.537868779967539e-06
    2. 'number' → logprob: -12.000008583068848
    3. '(' → logprob: -13.250008583068848
    4. '(input' → logprob: -14.875008583068848
    5. ' (' → logprob: -15.875008583068848
    6. '(num' → logprob: -16.75000762939453
    7. '[number' → logprob: -17.50000762939453
    8. '(
' → logprob: -18.37500762939453
    9. '(n' → logprob: -19.00000762939453
    10. '```' → logprob: -19.50000762939453

Token 375: '_of' (ID: 8023)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.18439380824565887
    2. '(number' → logprob: -2.434393882751465
    3. '_of' → logprob: -2.559393882751465
    4. '_chars' → logprob: -7.309393882751465
    5. 'char' → logprob: -7.809393882751465
    6. 'number' → logprob: -7.934393882751465
    7. '_character' → logprob: -7.934393882751465
    8. '_number' → logprob: -8.184393882751465
    9. 'characters' → logprob: -8.184393882751465
    10. '_(' → logprob: -8.309393882751465

Token 376: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.12773185968399048
    2. 'characters' → logprob: -2.1277318000793457
    3. 'char' → logprob: -7.127731800079346
    4. 'Characters' → logprob: -15.502732276916504
    5. 'character' → logprob: -15.627732276916504
    6. 'c' → logprob: -15.752732276916504
    7. ' characters' → logprob: -16.002731323242188
    8. '_' → logprob: -16.502731323242188
    9. 'abc' → logprob: -16.752731323242188
    10. '_CHAR' → logprob: -17.502731323242188

Token 377: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -4.5491004129871726e-05
    2. 'ters' → logprob: -10.625045776367188
    3. 'ers' → logprob: -11.125045776367188
    4. 'ar' → logprob: -13.000045776367188
    5. 'aters' → logprob: -13.500045776367188
    6. 'acter' → logprob: -13.875045776367188
    7. 'ct' → logprob: -14.375045776367188
    8. 'arters' → logprob: -15.125045776367188
    9. 's' → logprob: -15.125045776367188
    10. 'eters' → logprob: -15.625045776367188

Token 378: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005157403065823019
    2. ' ,' → logprob: -7.750515937805176
    3. '+' → logprob: -9.625515937805176
    4. ' +' → logprob: -11.625515937805176
    5. 'number' → logprob: -13.375515937805176
    6. '[number' → logprob: -13.375515937805176
    7. ',num' → logprob: -13.750515937805176
    8. ',n' → logprob: -13.875515937805176
    9. ')' → logprob: -14.125515937805176
    10. ',
' → logprob: -14.375515937805176

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. ',' → logprob: -14.376326560974121
    4. '2' → logprob: -15.751326560974121
    5. 'number' → logprob: -15.751326560974121
    6. '   ' → logprob: -16.376327514648438
    7. '0' → logprob: -17.126327514648438
    8. '=' → logprob: -17.751327514648438
    9. ' ,' → logprob: -18.376327514648438
    10. '```' → logprob: -18.501327514648438

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.750024795532227
    3. 'number' → logprob: -12.625024795532227
    4. '2' → logprob: -16.250024795532227
    5. '   ' → logprob: -17.125024795532227
    6. ' number' → logprob: -17.875024795532227
    7. '  ' → logprob: -18.125024795532227
    8. '１' → logprob: -18.375024795532227
    9. '7' → logprob: -18.875024795532227
    10. '
' → logprob: -18.937524795532227

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',num' → logprob: -14.375005722045898
    4. '[number' → logprob: -17.2500057220459
    5. ',n' → logprob: -17.5000057220459
    6. ')' → logprob: -17.7500057220459
    7. ',length' → logprob: -18.3750057220459
    8. '   ' → logprob: -18.3750057220459
    9. ',
' → logprob: -18.5000057220459
    10. 'number' → logprob: -18.5000057220459

Token 382: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -5.085517113911919e-05
    2. ' number' → logprob: -10.00005054473877
    3. '4' → logprob: -12.12505054473877
    4. '   ' → logprob: -17.000051498413086
    5. ' ' → logprob: -19.750051498413086
    6. '[number' → logprob: -20.375051498413086
    7. '	number' → logprob: -20.500051498413086
    8. '(number' → logprob: -20.750051498413086
    9. '
' → logprob: -21.375051498413086
    10. '    ' → logprob: -21.750051498413086

Token 383: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00023119196703191847
    2. 'of' → logprob: -8.37523078918457
    3. 'Of' → logprob: -15.12523078918457
    4. ' of' → logprob: -15.37523078918457
    5. 'number' → logprob: -17.00023078918457
    6. '_OF' → logprob: -17.62523078918457
    7. '	of' → logprob: -18.12523078918457
    8. 's' → logprob: -18.37523078918457
    9. '_number' → logprob: -18.50023078918457
    10. '_' → logprob: -18.75023078918457

Token 384: '_' (ID: 62)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.004171714186668396
    2. '_' → logprob: -5.629171848297119
    3. '4' → logprob: -7.504171848297119
    4. '3' → logprob: -12.004171371459961
    5. 'abcdef' → logprob: -12.004171371459961
    6. 'char' → logprob: -12.629171371459961
    7. 'abcd' → logprob: -13.504171371459961
    8. '7' → logprob: -13.754171371459961
    9. '_char' → logprob: -14.504171371459961
    10. ' abc' → logprob: -14.629171371459961

Token 385: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -2.5776860184123507e-06
    2. '4' → logprob: -13.37500286102295
    3. '3' → logprob: -14.62500286102295
    4. 'characters' → logprob: -15.62500286102295
    5. 'bc' → logprob: -16.000001907348633
    6. 'char' → logprob: -16.625001907348633
    7. 'ab' → logprob: -17.000001907348633
    8. 'abcdef' → logprob: -17.250001907348633
    9. '_' → logprob: -17.375001907348633
    10. 'abcd' → logprob: -17.750001907348633

Token 386: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00020449401927180588
    2. 'states' → logprob: -8.500204086303711
    3. 'States' → logprob: -14.625204086303711
    4. '_state' → logprob: -15.125204086303711
    5. 's' → logprob: -15.625204086303711
    6. 'state' → logprob: -17.87520408630371
    7. ' states' → logprob: -17.87520408630371
    8. '```' → logprob: -18.00020408630371
    9. ' States' → logprob: -18.12520408630371
    10. 'number' → logprob: -18.75020408630371

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',L' → logprob: -12.625061988830566
    4. '0' → logprob: -15.375061988830566
    5. ')' → logprob: -15.625061988830566
    6. ',
' → logprob: -15.625061988830566
    7. 'L' → logprob: -16.750062942504883
    8. ',int' → logprob: -17.625062942504883
    9. ',None' → logprob: -17.625062942504883
    10. '+' → logprob: -18.125062942504883

Token 388: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. 'L' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.375004768371582
    4. ')' → logprob: -18.125003814697266
    5. '```' → logprob: -19.125003814697266
    6. '`' → logprob: -19.250003814697266
    7. '۰' → logprob: -19.250003814697266
    8. '=' → logprob: -20.125003814697266
    9. ' L' → logprob: -20.375003814697266
    10. ')L' → logprob: -20.500003814697266

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. 'L' → logprob: -10.375031471252441
    3. ' ' → logprob: -16.875030517578125
    4. ')L' → logprob: -19.500030517578125
    5. '[L' → logprob: -19.500030517578125
    6. '"L' → logprob: -19.750030517578125
    7. ')' → logprob: -20.125030517578125
    8. '۰' → logprob: -20.125030517578125
    9. '```' → logprob: -20.125030517578125
    10. ' L' → logprob: -20.750030517578125

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -17.375
    4. ')
' → logprob: -18.0
    5. ']' → logprob: -18.75
    6. '),' → logprob: -19.375
    7. ')}' → logprob: -19.625
    8. ')`' → logprob: -19.75
    9. ')]' → logprob: -20.0
    10. '   ' → logprob: -21.0

Token 391: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4140441635390744e-05
    2. ' dp' → logprob: -11.250014305114746
    3. '	dp' → logprob: -15.000014305114746
    4. '(dp' → logprob: -15.750014305114746
    5. '```' → logprob: -15.750014305114746
    6. '_dp' → logprob: -16.00001335144043
    7. '<|end|>' → logprob: -16.37501335144043
    8. '[' → logprob: -16.37501335144043
    9. '0' → logprob: -17.12501335144043
    10. ')' → logprob: -18.50001335144043

Token 392: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.0280383548888494e-06
    2. 'table' → logprob: -15.000000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_TABLE' → logprob: -15.625000953674316
    5. 'Table' → logprob: -16.125001907348633
    6. '_t' → logprob: -16.250001907348633
    7. 'dp' → logprob: -17.625001907348633
    8. '_tab' → logprob: -17.875001907348633
    9. '_Table' → logprob: -17.875001907348633
    10. 't' → logprob: -18.125001907348633

Token 393: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '[number' → logprob: -13.000004768371582
    3. '\[' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -15.125004768371582
    5. '[
' → logprob: -15.500004768371582
    6. '```' → logprob: -15.500004768371582
    7. '[token' → logprob: -15.750004768371582
    8. '[input' → logprob: -15.875004768371582
    9. '[[' → logprob: -16.2500057220459
    10. ']' → logprob: -16.3750057220459

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -17.062501907348633
    4. '000' → logprob: -17.125001907348633
    5. '[' → logprob: -18.000001907348633
    6. '０' → logprob: -18.250001907348633
    7. '1' → logprob: -18.312501907348633
    8. ',' → logprob: -18.437501907348633
    9. 'start' → logprob: -18.500001907348633
    10. '০' → logprob: -18.687501907348633

Token 395: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013708343030884862
    2. ']' → logprob: -7.001370906829834
    3. '[' → logprob: -7.751370906829834
    4. ' ][' → logprob: -10.501370429992676
    5. ',' → logprob: -14.001370429992676
    6. '"][' → logprob: -16.126371383666992
    7. '][]' → logprob: -16.376371383666992
    8. ''][' → logprob: -16.626371383666992
    9. '][-' → logprob: -16.626371383666992
    10. '()][' → logprob: -16.876371383666992

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '3' → logprob: -18.625
    3. ' ' → logprob: -19.0
    4. '۰' → logprob: -20.25
    5. '０' → logprob: -20.25
    6. '1' → logprob: -22.125
    7. '000' → logprob: -22.25
    8. '০' → logprob: -22.5
    9. '०' → logprob: -22.625
    10. '٠' → logprob: -23.0

Token 397: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.537868779967539e-06
    2. ' ]' → logprob: -12.250008583068848
    3. ']=' → logprob: -12.500008583068848
    4. '=' → logprob: -17.12500762939453
    5. ']+=' → logprob: -17.50000762939453
    6. ')' → logprob: -19.87500762939453
    7. ']
' → logprob: -20.50000762939453
    8. '']' → logprob: -21.00000762939453
    9. '`]' → logprob: -21.12500762939453
    10. '()]' → logprob: -21.75000762939453

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326553225517273
    2. ' =' → logprob: -1.3132655620574951
    3. ' +=' → logprob: -12.938265800476074
    4. '+=' → logprob: -13.563265800476074
    5. '＝' → logprob: -17.063264846801758
    6. '=True' → logprob: -17.938264846801758
    7. ' ' → logprob: -18.063264846801758
    8. '=int' → logprob: -19.063264846801758
    9. ' ' → logprob: -19.188264846801758
    10. '.=' → logprob: -19.438264846801758

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.625
    4. '۱' → logprob: -21.125
    5. '0' → logprob: -21.25
    6. '１' → logprob: -21.5
    7. '১' → logprob: -21.875
    8. '१' → logprob: -22.625
    9. '```' → logprob: -22.75
    10. '  ' → logprob: -23.0

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.75
    3. '１' → logprob: -21.75
    4. '১' → logprob: -22.625
    5. '۱' → logprob: -22.625
    6. '१' → logprob: -23.375
    7. '   ' → logprob: -23.625
    8. '```' → logprob: -23.625
    9. '{' → logprob: -24.0
    10. '0' → logprob: -24.125

Token 401: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023810577113181353
    2. ' for' → logprob: -8.375238418579102
    3. '
' → logprob: -12.125238418579102
    4. '\n' → logprob: -13.500238418579102
    5. '```' → logprob: -15.750238418579102
    6. '	for' → logprob: -16.0002384185791
    7. '' → logprob: -16.6252384185791
    8. '
' → logprob: -16.7502384185791
    9. 'n' → logprob: -17.1252384185791
    10. 'For' → logprob: -17.3752384185791

Token 402: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9504606825648807e-05
    2. ' for' → logprob: -10.875019073486328
    3. 'pow' → logprob: -15.250019073486328
    4. 'MOD' → logprob: -16.250019073486328
    5. '```' → logprob: -17.250019073486328
    6. ')' → logprob: -17.375019073486328
    7. '*' → logprob: -17.375019073486328
    8. 'from' → logprob: -17.500019073486328
    9. 'mod' → logprob: -18.000019073486328
    10. '	for' → logprob: -18.375019073486328

Token 403: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08035404980182648
    2. ' index' → logprob: -2.5803539752960205
    3. ' idx' → logprob: -6.8303542137146
    4. 'i' → logprob: -8.455353736877441
    5. 'index' → logprob: -9.830353736877441
    6. ' current' → logprob: -10.205353736877441
    7. ' _' → logprob: -10.330353736877441
    8. ' ' → logprob: -10.830353736877441
    9. '_index' → logprob: -11.830353736877441
    10. '_i' → logprob: -12.205353736877441

Token 404: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35019874572753906
    2. ' in' → logprob: -1.975198745727539
    3. '_index' → logprob: -2.100198745727539
    4. '_char' → logprob: -4.225198745727539
    5. ' _' → logprob: -5.100198745727539
    6. '_character' → logprob: -5.350198745727539
    7. 'index' → logprob: -5.975198745727539
    8. ' index' → logprob: -6.225198745727539
    9. 'in' → logprob: -6.725198745727539
    10. '_idx' → logprob: -6.975198745727539

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05491477996110916
    2. 'in' → logprob: -2.929914712905884
    3. ',' → logprob: -10.554914474487305
    4. ' ' → logprob: -12.554914474487305
    5. '	in' → logprob: -13.804914474487305
    6. '```' → logprob: -14.679914474487305
    7. ',in' → logprob: -14.929914474487305
    8. ')' → logprob: -15.429914474487305
    9. 'import' → logprob: -15.804914474487305
    10. ' ,' → logprob: -15.804914474487305

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.50247573852539
    4. '	range' → logprob: -19.62747573852539
    5. '   ' → logprob: -21.12747573852539
    6. ' ' → logprob: -21.62747573852539
    7. 'input' → logprob: -22.37747573852539
    8. 'ange' → logprob: -22.37747573852539
    9. '_range' → logprob: -22.75247573852539
    10. '0' → logprob: -23.00247573852539

Token 407: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.038921426981687546
    2. '(' → logprob: -3.288921356201172
    3. '(input' → logprob: -7.038921356201172
    4. '(len' → logprob: -13.663921356201172
    5. 'number' → logprob: -13.913921356201172
    6. ' (' → logprob: -15.163921356201172
    7. '(
' → logprob: -16.288921356201172
    8. '(length' → logprob: -17.288921356201172
    9. '(n' → logprob: -17.788921356201172
    10. ' number' → logprob: -17.913921356201172

Token 408: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.006719871424138546
    2. '_char' → logprob: -5.006720066070557
    3. 'of' → logprob: -12.756719589233398
    4. '_chars' → logprob: -14.006719589233398
    5. '_' → logprob: -14.881719589233398
    6. '_character' → logprob: -15.506719589233398
    7. 'Of' → logprob: -16.0067195892334
    8. ' of' → logprob: -17.0067195892334
    9. '__' → logprob: -17.5067195892334
    10. '_OF' → logprob: -17.6317195892334

Token 409: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00023774817236699164
    2. 'characters' → logprob: -8.375237464904785
    3. '_chars' → logprob: -12.625237464904785
    4. '_' → logprob: -13.500237464904785
    5. 'char' → logprob: -13.750237464904785
    6. '_CHAR' → logprob: -14.250237464904785
    7. 'Characters' → logprob: -15.125237464904785
    8. '_character' → logprob: -15.250237464904785
    9. '-' → logprob: -16.7502384185791
    10. ' characters' → logprob: -16.8752384185791

Token 410: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.00023274161503650248
    2. 'ters' → logprob: -8.875232696533203
    3. 'ar' → logprob: -10.250232696533203
    4. 'ers' → logprob: -11.000232696533203
    5. 'aters' → logprob: -11.375232696533203
    6. '_char' → logprob: -11.750232696533203
    7. '```' → logprob: -12.250232696533203
    8. 'acter' → logprob: -12.375232696533203
    9. 'characters' → logprob: -12.750232696533203
    10. 'ct' → logprob: -13.375232696533203

Token 411: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25106900930404663
    2. '+' → logprob: -1.6260690689086914
    3. ' +' → logprob: -3.7510690689086914
    4. '):
' → logprob: -6.751069068908691
    5. ' ):' → logprob: -8.001069068908691
    6. ')' → logprob: -8.626069068908691
    7. ':' → logprob: -9.876069068908691
    8. '   ' → logprob: -10.001069068908691
    9. '+:' → logprob: -10.626069068908691
    10. ',' → logprob: -10.876069068908691

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09250230342149734
    2. ' for' → logprob: -3.0925023555755615
    3. ' current' → logprob: -3.4675023555755615
    4. 'current' → logprob: -5.592502117156982
    5. ' char' → logprob: -6.092502117156982
    6. 'for' → logprob: -6.217502117156982
    7. ' c' → logprob: -6.592502117156982
    8. ' token' → logprob: -7.467502117156982
    9. '    
' → logprob: -7.717502117156982
    10. 'char' → logprob: -7.842502117156982

Token 413: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12378610670566559
    2. 'current' (adapté à ' current') → logprob: -2.248786211013794
    3. '   ' → logprob: -4.748785972595215
    4. ' for' → logprob: -6.498785972595215
    5. 'char' → logprob: -7.748785972595215
    6. ' current' → logprob: -8.873785972595215
    7. 'dp' → logprob: -9.623785972595215
    8. 'c' → logprob: -10.123785972595215
    9. 'character' → logprob: -10.498785972595215
    10. 'input' → logprob: -11.748785972595215

Token 414: '_character' (ID: 99888)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.323288232088089
    2. 'dp' → logprob: -1.9482882022857666
    3. '_dp' → logprob: -2.4482882022857666
    4. 'char' → logprob: -3.9482882022857666
    5. '_character' → logprob: -4.573288440704346
    6. '_chars' → logprob: -5.073288440704346
    7. ' dp' → logprob: -5.823288440704346
    8. 'for' → logprob: -5.823288440704346
    9. '_' → logprob: -6.198288440704346
    10. '   ' → logprob: -7.073288440704346

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869914412498474
    2. '=' → logprob: -1.1369915008544922
    3. '=input' → logprob: -9.261991500854492
    4. 's' → logprob: -12.386991500854492
    5. 'input' → logprob: -12.511991500854492
    6. ')' → logprob: -12.761991500854492
    7. '   ' → logprob: -13.136991500854492
    8. ',' → logprob: -13.386991500854492
    9. ' =
' → logprob: -13.511991500854492
    10. 'for' → logprob: -13.511991500854492

Token 416: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067154900170862675
    2. ' input' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.631715774536133
    4. ' ' → logprob: -18.131715774536133
    5. '(input' → logprob: -19.131715774536133
    6. '	input' → logprob: -19.256715774536133
    7. '<input' → logprob: -19.381715774536133
    8. '=input' → logprob: -19.756715774536133
    9. '[input' → logprob: -20.881715774536133
    10. 'import' → logprob: -21.006715774536133

Token 417: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0001495484757469967
    2. 'string' → logprob: -8.875149726867676
    3. 'String' → logprob: -12.500149726867676
    4. 'input' → logprob: -12.750149726867676
    5. 'put' → logprob: -13.875149726867676
    6. '_char' → logprob: -14.250149726867676
    7. '```' → logprob: -15.000149726867676
    8. '_character' → logprob: -15.125149726867676
    9. '_' → logprob: -15.625149726867676
    10. '_index' → logprob: -16.00014877319336

Token 418: '[current' (ID: 49470)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1807115375995636
    2. ' =' → logprob: -1.8057115077972412
    3. '=current' → logprob: -7.80571174621582
    4. ']' → logprob: -8.18071174621582
    5. '[current' → logprob: -9.80571174621582
    6. 'current' → logprob: -9.93071174621582
    7. '   ' → logprob: -9.93071174621582
    8. '=input' → logprob: -10.43071174621582
    9. 'dp' → logprob: -10.55571174621582
    10. '[' → logprob: -11.30571174621582

Token 419: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0022803882602602243
    2. '_character' → logprob: -6.502280235290527
    3. '_string' → logprob: -7.752280235290527
    4. 'index' → logprob: -8.627280235290527
    5. 'character' → logprob: -9.252280235290527
    6. ']' → logprob: -11.127280235290527
    7. '[index' → logprob: -11.252280235290527
    8. '```' → logprob: -11.752280235290527
    9. 'string' → logprob: -11.877280235290527
    10. '_char' → logprob: -12.002280235290527

Token 420: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25849035382270813
    2. ']' → logprob: -1.5084903240203857
    3. '   ' → logprob: -5.633490562438965
    4. ')
' → logprob: -6.633490562438965
    5. ')]' → logprob: -7.258490562438965
    6. '])' → logprob: -7.883490562438965
    7. ']
' → logprob: -8.133490562438965
    8. ' )' → logprob: -8.758490562438965
    9. ' ]' → logprob: -9.758490562438965
    10. '）' → logprob: -10.883490562438965

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020976945757865906
    2. ' for' → logprob: -4.270977020263672
    3. 'for' → logprob: -5.770977020263672
    4. '	for' → logprob: -5.770977020263672
    5. '    
' → logprob: -7.770977020263672
    6. '```' → logprob: -9.770977020263672
    7. '<|end|>' → logprob: -10.770977020263672
    8. '    ' → logprob: -10.895977020263672
    9. '   ' → logprob: -11.145977020263672
    10. '   ' → logprob: -12.895977020263672

Token 422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013517829589545727
    2. '   ' → logprob: -4.5135178565979
    3. ' for' → logprob: -6.0135178565979
    4. 'dp' → logprob: -11.138517379760742
    5. '	for' → logprob: -12.513517379760742
    6. '    
' → logprob: -13.513517379760742
    7. '```' → logprob: -13.513517379760742
    8. ' ' → logprob: -15.513517379760742
    9. 'copy' → logprob: -16.763517379760742
    10. '' → logprob: -16.763517379760742

Token 423: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.03952985256910324
    2. ' abc' → logprob: -3.289529800415039
    3. 'current' → logprob: -6.914529800415039
    4. ' current' → logprob: -8.414529800415039
    5. 'state' → logprob: -8.539529800415039
    6. ' state' → logprob: -10.414529800415039
    7. 'prev' → logprob: -11.039529800415039
    8. 'previous' → logprob: -11.289529800415039
    9. 'next' → logprob: -11.664529800415039
    10. 'ab' → logprob: -13.039529800415039

Token 424: '_progress' (ID: 60853)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.000797119690105319
    2. '_states' → logprob: -7.500797271728516
    3. 'state' → logprob: -8.375797271728516
    4. '_current' → logprob: -12.250797271728516
    5. '```' → logprob: -13.250797271728516
    6. '_index' → logprob: -13.875797271728516
    7. '_status' → logprob: -14.000797271728516
    8. '_' → logprob: -14.125797271728516
    9. 'State' → logprob: -14.250797271728516
    10. ')' → logprob: -14.375797271728516

Token 425: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9358881115913391
    2. ' in' → logprob: -1.0608880519866943
    3. ',' → logprob: -2.0608880519866943
    4. '_state' → logprob: -2.3108880519866943
    5. 'ion' → logprob: -3.8108880519866943
    6. '_in' → logprob: -4.685888290405273
    7. 'state' → logprob: -6.310888290405273
    8. '_index' → logprob: -7.060888290405273
    9. ',state' → logprob: -7.935888290405273
    10. ',in' → logprob: -8.935888290405273

Token 426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.250000953674316
    3. '	range' → logprob: -22.25
    4. '(range' → logprob: -22.75
    5. '   ' → logprob: -23.875
    6. 'r' → logprob: -24.125
    7. '_range' → logprob: -25.0
    8. 'Range' → logprob: -25.0
    9. '0' → logprob: -25.5
    10. 'number' → logprob: -26.125

Token 427: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.20341499149799347
    2. '(' → logprob: -1.703415036201477
    3. 'number' → logprob: -6.3284149169921875
    4. '4' → logprob: -8.453414916992188
    5. ' number' → logprob: -14.203414916992188
    6. '(
' → logprob: -15.078414916992188
    7. '(n' → logprob: -15.578414916992188
    8. '[number' → logprob: -15.578414916992188
    9. '3' → logprob: -17.078414916992188
    10. '(len' → logprob: -17.328414916992188

Token 428: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.014300551265478134
    2. '_' → logprob: -4.264300346374512
    3. 'of' → logprob: -9.139300346374512
    4. '_states' → logprob: -11.514300346374512
    5. '_chars' → logprob: -12.139300346374512
    6. '=' → logprob: -12.389300346374512
    7. '_char' → logprob: -13.014300346374512
    8. '4' → logprob: -13.389300346374512
    9. '_no' → logprob: -13.889300346374512
    10. '__' → logprob: -13.889300346374512

Token 429: '_' (ID: 62)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.225529745221138
    2. '4' → logprob: -1.6005297899246216
    3. ' number' → logprob: -9.975529670715332
    4. '5' → logprob: -10.350529670715332
    5. '(number' → logprob: -10.850529670715332
    6. '
' → logprob: -12.225529670715332
    7. '3' → logprob: -12.600529670715332
    8. '[number' → logprob: -12.725529670715332
    9. ' ' → logprob: -13.100529670715332
    10. '0' → logprob: -13.600529670715332

Token 430: 'abc' (ID: 26682)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18545348942279816
    2. 'number' → logprob: -1.8104535341262817
    3. 'abc' → logprob: -5.435453414916992
    4. '5' → logprob: -7.060453414916992
    5. '3' → logprob: -7.810453414916992
    6. '(number' → logprob: -11.310453414916992
    7. 'character' → logprob: -11.560453414916992
    8. 'umber' → logprob: -11.685453414916992
    9. 'abcd' → logprob: -12.060453414916992
    10. 'char' → logprob: -12.435453414916992

Token 431: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -4.370294846012257e-05
    2. 'states' → logprob: -10.125043869018555
    3. 'States' → logprob: -13.250043869018555
    4. '_state' → logprob: -13.625043869018555
    5. '4' → logprob: -14.625043869018555
    6. ' states' → logprob: -17.000043869018555
    7. 's' → logprob: -17.750043869018555
    8. '7' → logprob: -17.875043869018555
    9. 'state' → logprob: -17.875043869018555
    10. ' States' → logprob: -19.125043869018555

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18048973381519318
    2. '):
' → logprob: -1.8054897785186768
    3. '   ' → logprob: -7.430489540100098
    4. ':' → logprob: -9.555489540100098
    5. '):
' → logprob: -10.180489540100098
    6. '+' → logprob: -10.680489540100098
    7. ']:' → logprob: -12.430489540100098
    8. ' ):' → logprob: -12.555489540100098
    9. ')' → logprob: -12.930489540100098
    10. '       ' → logprob: -13.055489540100098

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.408677290892228e-05
    2. '        
' → logprob: -11.0000638961792
    3. '   ' → logprob: -11.2500638961792
    4. ',' → logprob: -12.0000638961792
    5. '<|end|>' → logprob: -12.0000638961792
    6. '```' → logprob: -12.7500638961792
    7. 'dp' → logprob: -12.8750638961792
    8. '    ' → logprob: -13.0000638961792
    9. '	' → logprob: -13.2500638961792
    10. '           ' → logprob: -13.3750638961792

Token 434: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009263450279831886
    2. '       ' → logprob: -6.134263515472412
    3. 'if' → logprob: -6.134263515472412
    4. 'count' → logprob: -6.384263515472412
    5. 'current' → logprob: -6.384263515472412
    6. '#' (adapté à ' #') → logprob: -7.009263515472412
    7. 'next' → logprob: -8.134263038635254
    8. 'ways' → logprob: -8.759263038635254
    9. 'value' → logprob: -9.759263038635254
    10. ' dp' → logprob: -10.509263038635254

Token 435: ' Option' (ID: 17796)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0054307118989527225
    2. '#' → logprob: -5.505430698394775
    3. '       ' → logprob: -7.505430698394775
    4. ' dp' → logprob: -8.005431175231934
    5. 'count' → logprob: -8.880431175231934
    6. 'if' → logprob: -8.880431175231934
    7. 'ways' → logprob: -9.505431175231934
    8. 'next' → logprob: -10.005431175231934
    9. 'current' → logprob: -10.755431175231934
    10. ' #' → logprob: -11.255431175231934

Token 436: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.148689866065979
    2. 's' → logprob: -1.273689866065979
    3. '1' → logprob: -1.898689866065979
    4. ' =' → logprob: -2.5236897468566895
    5. ' ' → logprob: -3.3986897468566895
    6. '       ' → logprob: -3.5236897468566895
    7. 'dp' → logprob: -3.5236897468566895
    8. '=' → logprob: -3.8986897468566895
    9. ':' → logprob: -4.6486897468566895
    10. ')' → logprob: -5.1486897468566895

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0321393013000488
    2. '   ' → logprob: -1.5321393013000488
    3. '=' → logprob: -2.032139301300049
    4. '       ' → logprob: -2.282139301300049
    5. ' =' → logprob: -2.407139301300049
    6. ' ' → logprob: -3.032139301300049
    7. 'dp' → logprob: -3.532139301300049
    8. ':' → logprob: -5.032139301300049
    9. '           ' → logprob: -5.032139301300049
    10. '[' → logprob: -6.407139301300049

Token 438: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0371638536453247
    2. 'dp' → logprob: -1.4121638536453247
    3. ' dp' → logprob: -1.6621638536453247
    4. ':' → logprob: -1.6621638536453247
    5. ' =' → logprob: -4.787163734436035
    6. '(dp' → logprob: -5.037163734436035
    7. '=' → logprob: -5.537163734436035
    8. '           ' → logprob: -6.162163734436035
    9. '_dp' → logprob: -7.162163734436035
    10. ' :' → logprob: -8.662163734436035

Token 439: ' Do' (ID: 3756)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.046368103474378586
    2. ' dp' → logprob: -3.17136812210083
    3. '       ' → logprob: -5.79636812210083
    4. '#' → logprob: -8.296367645263672
    5. '(dp' → logprob: -10.171367645263672
    6. '           ' → logprob: -10.921367645263672
    7. '	dp' → logprob: -12.046367645263672
    8. ' #' → logprob: -12.921367645263672
    9. '_dp' → logprob: -13.171367645263672
    10. '=' → logprob: -13.546367645263672

Token 440: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06259974837303162
    2. ' not' → logprob: -3.3125996589660645
    3. 'n't' → logprob: -4.8125996589660645
    4. 'nothing' → logprob: -4.8125996589660645
    5. '_not' → logprob: -5.6875996589660645
    6. 'nt' → logprob: -6.3125996589660645
    7. 'n' → logprob: -6.8125996589660645
    8. '
' → logprob: -7.3125996589660645
    9. 'dp' → logprob: -8.312600135803223
    10. '   ' → logprob: -8.312600135803223

Token 441: ' select' (ID: 4736)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8561563491821289
    2. 'select' → logprob: -1.981156349182129
    3. 'take' → logprob: -2.356156349182129
    4. ' dp' → logprob: -2.731156349182129
    5. 'update' → logprob: -2.981156349182129
    6. 'change' → logprob: -2.981156349182129
    7. '
' → logprob: -3.231156349182129
    8. 'choose' → logprob: -3.731156349182129
    9. 'add' → logprob: -4.356156349182129
    10. 'copy' → logprob: -4.356156349182129

Token 442: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2826622426509857
    2. ' dp' → logprob: -1.657662272453308
    3. '(dp' → logprob: -3.9076621532440186
    4. '       ' → logprob: -4.407662391662598
    5. ' =' → logprob: -4.657662391662598
    6. '
' → logprob: -5.657662391662598
    7. '=' → logprob: -5.782662391662598
    8. '_dp' → logprob: -6.532662391662598
    9. ' the' → logprob: -7.157662391662598
    10. '        
' → logprob: -7.782662391662598

Token 443: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3358250856399536
    2. 'abc' → logprob: -1.7108250856399536
    3. ' current' → logprob: -2.835824966430664
    4. 'character' → logprob: -3.710824966430664
    5. 'dp' → logprob: -4.585824966430664
    6. ' abc' → logprob: -5.710824966430664
    7. 'token' → logprob: -6.210824966430664
    8. ' character' → logprob: -6.210824966430664
    9. ' dp' → logprob: -6.960824966430664
    10. 'next' → logprob: -7.085824966430664

Token 444: ' character' (ID: 5855)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.07301703840494156
    2. 'character' → logprob: -2.948017120361328
    3. '_index' → logprob: -4.573017120361328
    4. 'dp' → logprob: -5.698017120361328
    5. ' character' → logprob: -6.573017120361328
    6. ' dp' → logprob: -6.698017120361328
    7. '_' → logprob: -6.948017120361328
    8. '   ' → logprob: -8.698017120361328
    9. '_dp' → logprob: -9.198017120361328
    10. '_token' → logprob: -9.198017120361328

Token 445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13342472910881042
    2. 'dp' → logprob: -2.633424758911133
    3. '(dp' → logprob: -4.633424758911133
    4. ':' → logprob: -4.633424758911133
    5. '           ' → logprob: -4.633424758911133
    6. ',' → logprob: -4.758424758911133
    7. ' dp' → logprob: -5.633424758911133
    8. ' =' → logprob: -6.008424758911133
    9. '=' → logprob: -6.758424758911133
    10. '   ' → logprob: -6.758424758911133

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012818991672247648
    2. ':' → logprob: -7.62628173828125
    3. '           ' → logprob: -8.12628173828125
    4. ' =' → logprob: -9.00128173828125
    5. ',' → logprob: -9.12628173828125
    6. 'dp' → logprob: -9.75128173828125
    7. '<|end|>' → logprob: -10.25128173828125
    8. '=' → logprob: -10.50128173828125
    9. '(dp' → logprob: -10.75128173828125
    10. '```' → logprob: -10.87628173828125

Token 447: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04973294213414192
    2. '       ' → logprob: -3.5497329235076904
    3. ' dp' → logprob: -3.9247329235076904
    4. '(dp' → logprob: -11.29973316192627
    5. '_dp' → logprob: -11.92473316192627
    6. '           ' → logprob: -12.29973316192627
    7. '	dp' → logprob: -12.29973316192627
    8. ' =' → logprob: -12.54973316192627
    9. '.dp' → logprob: -13.04973316192627
    10. '=' → logprob: -13.79973316192627

Token 448: ' current' (ID: 2208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17974820733070374
    2. 'abc' → logprob: -2.679748296737671
    3. 'True' → logprob: -2.929748296737671
    4. 'current' → logprob: -3.304748296737671
    5. ' dp' → logprob: -6.429748058319092
    6. ' True' → logprob: -7.054748058319092
    7. '       ' → logprob: -7.554748058319092
    8. '0' → logprob: -7.679748058319092
    9. ' abc' → logprob: -7.804748058319092
    10. '(dp' → logprob: -8.05474853515625

Token 449: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.029961753636598587
    2. '_index' → logprob: -4.279961585998535
    3. '_progress' → logprob: -5.904961585998535
    4. '_' → logprob: -5.904961585998535
    5. 'dp' → logprob: -6.029961585998535
    6. 'character' → logprob: -6.029961585998535
    7. '_dp' → logprob: -6.029961585998535
    8. '_table' → logprob: -6.404961585998535
    9. ' dp' → logprob: -7.654961585998535
    10. '_char' → logprob: -8.654961585998535

Token 450: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6954464316368103
    2. '!=' → logprob: -0.6954464316368103
    3. ' !=' → logprob: -7.195446491241455
    4. 'not' → logprob: -7.445446491241455
    5. ' ==' → logprob: -7.445446491241455
    6. '=='' → logprob: -9.070446014404297
    7. '!='' → logprob: -9.570446014404297
    8. ' not' → logprob: -9.695446014404297
    9. '=="' → logprob: -9.695446014404297
    10. '!="' → logprob: -10.445446014404297

Token 451: ' '?' (ID: 73818)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.2119251936674118
    2. ''' → logprob: -1.9619251489639282
    3. '"A' → logprob: -3.5869252681732178
    4. '"' → logprob: -4.086925029754639
    5. 'input' → logprob: -6.461925029754639
    6. '['' → logprob: -6.586925029754639
    7. ''?' → logprob: -6.836925029754639
    8. '?' → logprob: -7.836925029754639
    9. 'chr' → logprob: -7.961925029754639
    10. '["' → logprob: -9.086925506591797

Token 452: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0913317203521729
    2. ':' → logprob: -1.7163317203521729
    3. '):
' → logprob: -1.9663317203521729
    4. ''):
' → logprob: -2.216331720352173
    5. '':' → logprob: -2.216331720352173
    6. '':
' → logprob: -2.341331720352173
    7. '):' → logprob: -4.341331481933594
    8. '       ' → logprob: -5.216331481933594
    9. ')' → logprob: -5.591331481933594
    10. ' or' → logprob: -6.091331481933594

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08736087381839752
    2. 'dp' → logprob: -2.5873608589172363
    3. ' dp' → logprob: -4.837360858917236
    4. '       ' → logprob: -7.837360858917236
    5. '               ' → logprob: -10.462361335754395
    6. '(dp' → logprob: -10.962361335754395
    7. '	dp' → logprob: -10.962361335754395
    8. '```' → logprob: -10.962361335754395
    9. '_dp' → logprob: -11.962361335754395
    10. '	       ' → logprob: -12.337361335754395

Token 454: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011122219264507294
    2. '           ' → logprob: -4.636122226715088
    3. ' dp' → logprob: -6.761122226715088
    4. 'for' → logprob: -8.63612174987793
    5. '(dp' → logprob: -11.51112174987793
    6. '               ' → logprob: -11.76112174987793
    7. '	dp' → logprob: -12.38612174987793
    8. '       ' → logprob: -12.63612174987793
    9. 'mod' → logprob: -14.01112174987793
    10. '_dp' → logprob: -14.01112174987793

Token 455: ' '?'' (ID: 192100)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002984951948747039
    2. '           ' → logprob: -6.252985000610352
    3. ' dp' → logprob: -7.127985000610352
    4. 'for' → logprob: -8.377985000610352
    5. '       ' → logprob: -11.502985000610352
    6. '               ' → logprob: -12.127985000610352
    7. '(dp' → logprob: -13.377985000610352
    8. ' for' → logprob: -13.502985000610352
    9. '	dp' → logprob: -14.252985000610352
    10. '#' → logprob: -14.627985000610352

Token 456: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -2.095236301422119
    2. 'for' → logprob: -2.345236301422119
    3. ':' → logprob: -2.470236301422119
    4. ')' → logprob: -2.470236301422119
    5. '           ' → logprob: -2.595236301422119
    6. ' =' → logprob: -2.720236301422119
    7. 'dp' → logprob: -2.720236301422119
    8. '#' → logprob: -3.345236301422119
    9. ' is' → logprob: -3.345236301422119
    10. 'ways' → logprob: -3.595236301422119

Token 457: ' transition' (ID: 14463)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5095698833465576
    2. ' be' → logprob: -1.0095698833465576
    3. 'act' → logprob: -4.009570121765137
    4. 'represent' → logprob: -5.884570121765137
    5. 'also' → logprob: -6.009570121765137
    6. 'match' → logprob: -6.134570121765137
    7. ' act' → logprob: -6.509570121765137
    8. 'pass' → logprob: -6.884570121765137
    9. 'dp' → logprob: -7.009570121765137
    10. ' represent' → logprob: -7.134570121765137

Token 458: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1531060934066772
    2. 'dp' → logprob: -1.4031060934066772
    3. '           ' → logprob: -1.6531060934066772
    4. '[' → logprob: -2.903106212615967
    5. 'for' → logprob: -3.153106212615967
    6. ' dp' → logprob: -3.153106212615967
    7. ' for' → logprob: -3.403106212615967
    8. '(dp' → logprob: -3.903106212615967
    9. ' to' → logprob: -4.278106212615967
    10. 'to' → logprob: -4.528106212615967

Token 459: ' three' (ID: 3407)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29706597328186035
    2. '(' → logprob: -2.0470659732818604
    3. '(dp' → logprob: -2.6720659732818604
    4. 'abc' → logprob: -3.7970659732818604
    5. 'current' → logprob: -5.047065734863281
    6. '0' → logprob: -5.172065734863281
    7. '[' → logprob: -5.547065734863281
    8. ' dp' → logprob: -5.797065734863281
    9. '(current' → logprob: -5.922065734863281
    10. '('' → logprob: -6.172065734863281

Token 460: ' different' (ID: 2647)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.444489598274231
    2. ' times' → logprob: -1.694489598274231
    3. ' states' → logprob: -2.0694894790649414
    4. 'times' → logprob: -2.0694894790649414
    5. 'states' → logprob: -2.8194894790649414
    6. ')' → logprob: -3.1944894790649414
    7. ' *' → logprob: -3.1944894790649414
    8. '*' → logprob: -3.3194894790649414
    9. '):' → logprob: -3.5694894790649414
    10. '           ' → logprob: -4.069489479064941

Token 461: ' types' (ID: 6009)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7255082130432129
    2. 'states' → logprob: -1.600508213043213
    3. ' characters' → logprob: -2.725508213043213
    4. 'characters' → logprob: -2.725508213043213
    5. 'dp' → logprob: -3.100508213043213
    6. ' dp' → logprob: -3.475508213043213
    7. ' ways' → logprob: -3.850508213043213
    8. ' possibilities' → logprob: -4.350508213043213
    9. 'abc' → logprob: -4.725508213043213
    10. ' options' → logprob: -4.850508213043213

Token 462: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9420660138130188
    2. '           ' → logprob: -1.192065954208374
    3. ':' → logprob: -1.317065954208374
    4. ',' → logprob: -4.317066192626953
    5. ':
' → logprob: -5.442066192626953
    6. '                       ' → logprob: -5.442066192626953
    7. ' and' → logprob: -5.817066192626953
    8. ' for' → logprob: -5.817066192626953
    9. ' or' → logprob: -6.442066192626953
    10. '       ' → logprob: -6.442066192626953

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.591383159160614
    2. '               ' → logprob: -0.841383159160614
    3. '       ' → logprob: -5.21638298034668
    4. '                       ' → logprob: -5.84138298034668
    5. ',' → logprob: -6.09138298034668
    6. ':' → logprob: -7.59138298034668
    7. ' =' → logprob: -7.71638298034668
    8. ' for' → logprob: -7.71638298034668
    9. '                           ' → logprob: -7.71638298034668
    10. 'dp' → logprob: -7.84138298034668

Token 464: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.005941359326243401
    2. '           ' → logprob: -5.505941390991211
    3. 'for' → logprob: -6.505941390991211
    4. ' dp' → logprob: -8.130941390991211
    5. '               ' → logprob: -10.255941390991211
    6. '(dp' → logprob: -11.880941390991211
    7. '#' → logprob: -12.130941390991211
    8. 'ways' → logprob: -12.755941390991211
    9. 'multip' → logprob: -12.755941390991211
    10. 'mod' → logprob: -13.005941390991211

Token 465: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.3464544432936236e-05
    2. ' =' → logprob: -11.125043869018555
    3. '=' → logprob: -11.750043869018555
    4. '_current' → logprob: -12.125043869018555
    5. '_next' → logprob: -12.375043869018555
    6. '_val' → logprob: -12.625043869018555
    7. '_value' → logprob: -13.250043869018555
    8. '_temp' → logprob: -13.625043869018555
    9. 'table' → logprob: -14.000043869018555
    10. '_cell' → logprob: -14.375043869018555

Token 466: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.036524842376821e-05
    2. '[' → logprob: -10.875040054321289
    3. '[next' → logprob: -11.375040054321289
    4. '[number' → logprob: -12.000040054321289
    5. 'dp' → logprob: -14.375040054321289
    6. '[curr' → logprob: -14.500040054321289
    7. '[new' → logprob: -14.500040054321289
    8. 'current' → logprob: -15.125040054321289
    9. '[cur' → logprob: -15.250040054321289
    10. '=current' → logprob: -15.250040054321289

Token 467: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.000540166103746742
    2. 'index' → logprob: -7.750540256500244
    3. '][' → logprob: -10.500539779663086
    4. 'Index' → logprob: -11.125539779663086
    5. '
' → logprob: -11.375539779663086
    6. ']' → logprob: -11.750539779663086
    7. '[' → logprob: -12.125539779663086
    8. '```' → logprob: -12.250539779663086
    9. '+' → logprob: -12.375539779663086
    10. '_INDEX' → logprob: -12.500539779663086

Token 468: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00308811292052269
    2. '[' → logprob: -6.128087997436523
    3. ' ][' → logprob: -7.878087997436523
    4. ']' → logprob: -8.503087997436523
    5. '+' → logprob: -9.628087997436523
    6. '[next' → logprob: -9.753087997436523
    7. '   ' → logprob: -10.253087997436523
    8. ')[' → logprob: -10.378087997436523
    9. '[current' → logprob: -10.628087997436523
    10. ' [' → logprob: -11.503087997436523

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.75001049041748
    3. '0' → logprob: -13.37501049041748
    4. '][' → logprob: -14.62501049041748
    5. '```' → logprob: -15.75001049041748
    6. '   ' → logprob: -16.000011444091797
    7. '2' → logprob: -17.000011444091797
    8. ']' → logprob: -17.375011444091797
    9. '
' → logprob: -17.687511444091797
    10. '[' → logprob: -17.750011444091797

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -13.250007629394531
    3. 'abc' → logprob: -13.375007629394531
    4. '0' → logprob: -13.750007629394531
    5. '3' → logprob: -14.500007629394531
    6. '2' → logprob: -14.500007629394531
    7. '4' → logprob: -15.312507629394531
    8. 'dp' → logprob: -15.437507629394531
    9. '```' → logprob: -15.437507629394531
    10. '   ' → logprob: -15.687507629394531

Token 471: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.019083337858319283
    2. '[' → logprob: -4.019083499908447
    3. ']' → logprob: -7.519083499908447
    4. ')[' → logprob: -8.769083023071289
    5. '[current' → logprob: -9.019083023071289
    6. ' ][' → logprob: -10.894083023071289
    7. ')' → logprob: -11.394083023071289
    8. '[next' → logprob: -11.644083023071289
    9. '```' → logprob: -11.894083023071289
    10. ' [' → logprob: -12.519083023071289

Token 472: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.625
    3. ' ' → logprob: -18.0
    4. '0' → logprob: -18.25
    5. '```' → logprob: -18.625
    6. '
' → logprob: -19.0
    7. ' abc' → logprob: -19.25
    8. '[' → logprob: -19.25
    9. 'xyz' → logprob: -19.75
    10. '  ' → logprob: -20.375

Token 473: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -2.8444881536415778e-05
    2. 'progress' → logprob: -10.500028610229492
    3. '_prog' → logprob: -14.625028610229492
    4. '_PROGRESS' → logprob: -15.625028610229492
    5. 'Progress' → logprob: -16.875028610229492
    6. '_' → logprob: -17.125028610229492
    7. '-progress' → logprob: -17.375028610229492
    8. '[' → logprob: -17.500028610229492
    9. '_pro' → logprob: -17.625028610229492
    10. '	progress' → logprob: -17.750028610229492

Token 474: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7133575677871704
    2. ']+=' → logprob: -1.3383575677871704
    3. ']' → logprob: -1.7133575677871704
    4. '=' → logprob: -2.838357448577881
    5. ' +=' → logprob: -5.338357448577881
    6. '+' → logprob: -6.213357448577881
    7. ']=' → logprob: -6.963357448577881
    8. ' =' → logprob: -7.713357448577881
    9. ']=(' → logprob: -8.463357925415039
    10. '   ' → logprob: -8.588357925415039

Token 475: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0294890645891428
    2. '=' → logprob: -3.654489040374756
    3. ' +=' → logprob: -5.779489040374756
    4. ' =' → logprob: -9.529489517211914
    5. '+=(' → logprob: -11.529489517211914
    6. '+' → logprob: -12.779489517211914
    7. '=(' → logprob: -12.779489517211914
    8. '   ' → logprob: -12.904489517211914
    9. ']+=' → logprob: -13.529489517211914
    10. '%=' → logprob: -13.904489517211914

Token 476: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013935691677033901
    2. '(dp' → logprob: -7.376393795013428
    3. '(' → logprob: -7.876393795013428
    4. '3' → logprob: -7.876393795013428
    5. ' dp' → logprob: -12.00139331817627
    6. ' (' → logprob: -15.12639331817627
    7. '	dp' → logprob: -15.50139331817627
    8. '(
' → logprob: -15.62639331817627
    9. '
' → logprob: -16.126394271850586
    10. '   ' → logprob: -16.251394271850586

Token 477: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.0280383548888494e-06
    2. 'table' → logprob: -14.250000953674316
    3. '_TABLE' → logprob: -15.750000953674316
    4. 'Table' → logprob: -16.375001907348633
    5. '_Table' → logprob: -17.250001907348633
    6. '```' → logprob: -18.125001907348633
    7. '_' → logprob: -18.500001907348633
    8. '<table' → logprob: -18.750001907348633
    9. '@Table' → logprob: -18.750001907348633
    10. '_tab' → logprob: -18.750001907348633

Token 478: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.15310683415737e-05
    2. 'current' → logprob: -10.750021934509277
    3. ' current' → logprob: -17.25002098083496
    4. '[cur' → logprob: -18.12502098083496
    5. '[' → logprob: -19.25002098083496
    6. '_current' → logprob: -19.75002098083496
    7. '	current' → logprob: -19.87502098083496
    8. '```' → logprob: -19.87502098083496
    9. '[curr' → logprob: -20.12502098083496
    10. '(current' → logprob: -20.37502098083496

Token 479: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0005135946557857096
    2. 'index' → logprob: -7.625513553619385
    3. '```' → logprob: -11.500514030456543
    4. '_table' → logprob: -12.125514030456543
    5. 'Index' → logprob: -12.500514030456543
    6. 'nd' → logprob: -13.250514030456543
    7. '+' → logprob: -13.875514030456543
    8. '][' → logprob: -14.125514030456543
    9. ']' → logprob: -14.875514030456543
    10. '_idx' → logprob: -15.000514030456543

Token 480: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16721989214420319
    2. '[current' → logprob: -1.917219877243042
    3. '[' → logprob: -5.167220115661621
    4. ']' → logprob: -8.167220115661621
    5. 'current' → logprob: -8.167220115661621
    6. ' ][' → logprob: -8.542220115661621
    7. '[cur' → logprob: -8.542220115661621
    8. ' [' → logprob: -9.792220115661621
    9. '[curr' → logprob: -9.792220115661621
    10. '```' → logprob: -10.667220115661621

Token 481: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.2113979209971149e-05
    2. ' abc' → logprob: -11.375012397766113
    3. 'current' → logprob: -15.250012397766113
    4. '   ' → logprob: -15.625012397766113
    5. ' ' → logprob: -16.500011444091797
    6. 'abcdef' → logprob: -17.125011444091797
    7. '```' → logprob: -17.375011444091797
    8. '
' → logprob: -18.000011444091797
    9. 'abcd' → logprob: -18.875011444091797
    10. '  ' → logprob: -19.000011444091797

Token 482: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.005242056678980589
    2. 'progress' → logprob: -5.255241870880127
    3. 'Progress' → logprob: -13.130242347717285
    4. '-progress' → logprob: -13.255242347717285
    5. '_PROGRESS' → logprob: -13.380242347717285
    6. '	progress' → logprob: -13.755242347717285
    7. 'gress' → logprob: -14.255242347717285
    8. ' progress' → logprob: -14.755242347717285
    9. '.progress' → logprob: -16.38024139404297
    10. '```' → logprob: -16.50524139404297

Token 483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022117885237094015
    2. ']*' → logprob: -9.000221252441406
    3. '*' → logprob: -9.250221252441406
    4. ' *' → logprob: -14.250221252441406
    5. ')' → logprob: -14.750221252441406
    6. ' ]' → logprob: -15.500221252441406
    7. '```' → logprob: -15.500221252441406
    8. '   ' → logprob: -15.750221252441406
    9. '']' → logprob: -17.375221252441406
    10. ']
' → logprob: -17.375221252441406

Token 484: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026320621371269226
    2. '*' → logprob: -3.651320695877075
    3. '           ' → logprob: -11.651320457458496
    4. '
' → logprob: -12.776320457458496
    5. ' *=' → logprob: -13.901320457458496
    6. '        ' → logprob: -14.151320457458496
    7. '<|end|>' → logprob: -14.151320457458496
    8. ' *
' → logprob: -14.276320457458496
    9. ' ' → logprob: -14.401320457458496
    10. '          ' → logprob: -14.526320457458496

Token 485: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -15.125024795532227
    4. '   ' → logprob: -16.000024795532227
    5. '۳' → logprob: -17.250024795532227
    6. '３' → logprob: -17.562524795532227
    7. '  ' → logprob: -17.937524795532227
    8. '```' → logprob: -17.937524795532227
    9. '  
' → logprob: -18.187524795532227
    10. ' ' → logprob: -18.375024795532227

Token 486: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '
' → logprob: -15.500001907348633
    4. '```' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '۳' → logprob: -18.000001907348633
    7. '３' → logprob: -18.625001907348633
    8. '(' → logprob: -18.875001907348633
    9. '  ' → logprob: -19.562501907348633
    10. '`' → logprob: -19.625001907348633

Token 487: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2536439001560211
    2. '%' → logprob: -2.0036439895629883
    3. ')' → logprob: -2.6286439895629883
    4. 'dp' (adapté à ' dp') → logprob: -5.503643989562988
    5. '=' → logprob: -6.003643989562988
    6. '<|end|>' → logprob: -6.253643989562988
    7. ')%' → logprob: -6.378643989562988
    8. '       ' → logprob: -6.378643989562988
    9. '%=' → logprob: -6.878643989562988
    10. ' %' → logprob: -6.878643989562988

Token 490: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.2200749754119897e-06
    2. 'table' → logprob: -13.625001907348633
    3. 'Table' → logprob: -15.000001907348633
    4. '_TABLE' → logprob: -15.125001907348633
    5. '_Table' → logprob: -16.375001907348633
    6. '_tab' → logprob: -17.000001907348633
    7. '@Table' → logprob: -17.250001907348633
    8. '-table' → logprob: -17.750001907348633
    9. '```' → logprob: -18.000001907348633
    10. '[' → logprob: -18.250001907348633

Token 491: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.008129963040119e-06
    2. '_table' → logprob: -13.750003814697266
    3. '_current' → logprob: -13.750003814697266
    4. '[' → logprob: -14.625003814697266
    5. ' [' → logprob: -14.875003814697266
    6. '[next' → logprob: -15.250003814697266
    7. 'current' → logprob: -15.500003814697266
    8. '[curr' → logprob: -15.500003814697266
    9. '```' → logprob: -16.500003814697266
    10. '[cur' → logprob: -16.500003814697266

Token 492: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.017179489135742188
    2. '][' → logprob: -4.767179489135742
    3. 'index' → logprob: -5.517179489135742
    4. '[current' → logprob: -6.767179489135742
    5. '+' → logprob: -6.892179489135742
    6. 'current' → logprob: -7.392179489135742
    7. '_current' → logprob: -7.517179489135742
    8. '[' → logprob: -8.017179489135742
    9. '```' → logprob: -8.392179489135742
    10. '[index' → logprob: -9.142179489135742

Token 493: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4790198504924774
    2. '+' → logprob: -1.6040198802947998
    3. ' +' → logprob: -1.7290198802947998
    4. ' ][' → logprob: -6.604019641876221
    5. ']' → logprob: -7.979019641876221
    6. '[' → logprob: -8.979020118713379
    7. '   ' → logprob: -9.479020118713379
    8. '[next' → logprob: -10.354020118713379
    9. ' [' → logprob: -10.854020118713379
    10. '```' → logprob: -11.479020118713379

Token 494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013869047397747636
    2. ' ' → logprob: -6.626387119293213
    3. '
' → logprob: -10.876386642456055
    4. 'current' → logprob: -11.438886642456055
    5. '```' → logprob: -12.188886642456055
    6. '[' → logprob: -12.188886642456055
    7. '0' → logprob: -12.626386642456055
    8. '   ' → logprob: -12.938886642456055
    9. '3' → logprob: -13.501386642456055
    10. ']' → logprob: -13.626386642456055

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.203409844194539e-05
    2. ' ' → logprob: -10.500041961669922
    3. '0' → logprob: -11.875041961669922
    4. 'current' → logprob: -13.250041961669922
    5. '
' → logprob: -13.500041961669922
    6. '```' → logprob: -13.937541961669922
    7. '   ' → logprob: -14.687541961669922
    8. '3' → logprob: -14.812541961669922
    9. '2' → logprob: -15.187541961669922
    10. '[' → logprob: -15.375041961669922

Token 496: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00036787090357393026
    2. '[' → logprob: -8.500368118286133
    3. ')[' → logprob: -9.875368118286133
    4. ']' → logprob: -9.875368118286133
    5. ' ][' → logprob: -10.250368118286133
    6. '[current' → logprob: -11.125368118286133
    7. '}[' → logprob: -13.375368118286133
    8. ' ' → logprob: -13.750368118286133
    9. '   ' → logprob: -14.000368118286133
    10. ']][' → logprob: -14.125368118286133

Token 497: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.2948405128554441e-05
    2. 'current' → logprob: -11.62501335144043
    3. ' abc' → logprob: -13.62501335144043
    4. '0' → logprob: -14.00001335144043
    5. '3' → logprob: -14.87501335144043
    6. '   ' → logprob: -15.12501335144043
    7. ' ' → logprob: -15.25001335144043
    8. '...' → logprob: -15.62501335144043
    9. '
' → logprob: -16.12501335144043
    10. '4' → logprob: -16.37501335144043

Token 498: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.011065036058425903
    2. 'progress' → logprob: -4.5110650062561035
    3. 'Progress' → logprob: -11.761065483093262
    4. '_PROGRESS' → logprob: -12.386065483093262
    5. '-progress' → logprob: -13.511065483093262
    6. '```' → logprob: -14.386065483093262
    7. '_pro' → logprob: -14.511065483093262
    8. 'gress' → logprob: -14.886065483093262
    9. '	progress' → logprob: -15.011065483093262
    10. 'index' → logprob: -15.136065483093262

Token 499: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07993285357952118
    2. ']+=' → logprob: -2.579932928085327
    3. ' ]' → logprob: -6.954932689666748
    4. ']=' → logprob: -9.954933166503906
    5. ']+' → logprob: -10.954933166503906
    6. '+=' → logprob: -12.204933166503906
    7. '```' → logprob: -12.454933166503906
    8. ')' → logprob: -13.079933166503906
    9. '[' → logprob: -13.079933166503906
    10. '   ' → logprob: -13.079933166503906

Token 500: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.034601591527462006
    2. ' %=' → logprob: -3.4096016883850098
    3. '%' → logprob: -7.03460168838501
    4. ')' → logprob: -9.784601211547852
    5. '```' → logprob: -12.409601211547852
    6. '	' → logprob: -12.659601211547852
    7. ')%' → logprob: -12.659601211547852
    8. '//=' → logprob: -13.659601211547852
    9. '=' → logprob: -13.909601211547852
    10. ' %' → logprob: -14.034601211547852

Token 501: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.5
    3. 'MO' → logprob: -21.0
    4. '_MOD' → logprob: -21.5
    5. '10' → logprob: -22.875
    6. '```' → logprob: -23.25
    7. 'MODE' → logprob: -23.375
    8. '.MOD' → logprob: -23.5
    9. '100' → logprob: -23.875
    10. 'MODULE' → logprob: -24.625

Token 502: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.03462542966008186
    2. 'O' → logprob: -3.40962553024292
    3. 'MOD' → logprob: -8.159625053405762
    4. 'UL' → logprob: -8.409625053405762
    5. 'ODO' → logprob: -9.034625053405762
    6. 'OD' → logprob: -9.159625053405762
    7. 'ODULE' → logprob: -9.784625053405762
    8. 'ULE' → logprob: -10.409625053405762
    9. 'U' → logprob: -10.784625053405762
    10. '```' → logprob: -10.909625053405762

Token 503: '_DIV' (ID: 83128)
  Prédit: '_DIV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DIV' → logprob: -2.5776860184123507e-06
    2. '<div' → logprob: -14.12500286102295
    3. '```' → logprob: -14.62500286102295
    4. '_div' → logprob: -14.87500286102295
    5. 'DIV' → logprob: -15.00000286102295
    6. 'div' → logprob: -15.12500286102295
    7. '_MOD' → logprob: -15.50000286102295
    8. '_' → logprob: -16.500001907348633
    9. 'Div' → logprob: -16.750001907348633
    10. '\' → logprob: -17.250001907348633

Token 504: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.005241702310740948
    2. 'SOR' → logprob: -5.880241870880127
    3. 'ISIBLE' → logprob: -7.005241870880127
    4. 'MOD' → logprob: -7.255241870880127
    5. 'OS' → logprob: -8.130241394042969
    6. 'OR' → logprob: -8.755241394042969
    7. 'ID' → logprob: -9.255241394042969
    8. 'OD' → logprob: -9.505241394042969
    9. 'S' → logprob: -10.005241394042969
    10. 'POS' → logprob: -10.880241394042969

Token 505: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.00021390743495430797
    2. 'SOR' → logprob: -8.500213623046875
    3. 'TOR' → logprob: -11.750213623046875
    4. 'O' → logprob: -14.000213623046875
    5. '```' → logprob: -15.125213623046875
    6. 'ORS' → logprob: -15.375213623046875
    7. 'ER' → logprob: -15.500213623046875
    8. 'ON' → logprob: -15.500213623046875
    9. 'ROR' → logprob: -16.375213623046875
    10. '{' → logprob: -16.625213623046875

Token 506: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10027157515287399
    2. '<|end|>' → logprob: -2.475271463394165
    3. '
' → logprob: -5.850271701812744
    4. 'elif' → logprob: -6.100271701812744
    5. 'else' → logprob: -6.225271701812744
    6. ')' → logprob: -6.600271701812744
    7. '           ' → logprob: -7.725271701812744
    8. '<|end|>' → logprob: -8.225271224975586
    9. ',' → logprob: -8.350271224975586
    10. '```' → logprob: -8.600271224975586

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011796909384429455
    2. '<|end|>' → logprob: -4.761796951293945
    3. ')' → logprob: -7.011796951293945
    4. '```' → logprob: -7.136796951293945
    5. 'elif' → logprob: -7.511796951293945
    6. 'else' → logprob: -7.636796951293945
    7. '   ' → logprob: -9.386796951293945
    8. '...' → logprob: -10.136796951293945
    9. ' else' → logprob: -10.136796951293945
    10. '           ' → logprob: -10.136796951293945

Token 508: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.137568861246109
    2. 'else' (adapté à ' else') → logprob: -2.512568950653076
    3. ' else' → logprob: -3.137568950653076
    4. 'elif' → logprob: -7.012568950653076
    5. ' ' → logprob: -7.137568950653076
    6. ')' → logprob: -7.637568950653076
    7. '<|end|>' → logprob: -8.137568473815918
    8. '        ' → logprob: -8.262568473815918
    9. '	' → logprob: -8.512568473815918
    10. ' elif' → logprob: -8.512568473815918

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26168543100357056
    2. '           ' → logprob: -1.8866853713989258
    3. ':
' → logprob: -2.761685371398926
    4. '       ' → logprob: -4.511685371398926
    5. ' :' → logprob: -6.511685371398926
    6. '        ' → logprob: -7.386685371398926
    7. ' :
' → logprob: -7.636685371398926
    8. '<|end|>' → logprob: -8.136685371398926
    9. '{' → logprob: -8.386685371398926
    10. '[' → logprob: -8.511685371398926

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0198983047157526
    2. 'dp' → logprob: -4.144898414611816
    3. ' dp' → logprob: -5.769898414611816
    4. '       ' → logprob: -7.269898414611816
    5. '   ' → logprob: -10.894898414611816
    6. '               ' → logprob: -11.894898414611816
    7. '	dp' → logprob: -11.894898414611816
    8. '         ' → logprob: -12.644898414611816
    9. '        ' → logprob: -13.644898414611816
    10. '(dp' → logprob: -13.769898414611816

Token 511: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0157347209751606
    2. ' dp' → logprob: -4.265734672546387
    3. '           ' → logprob: -6.515734672546387
    4. '       ' → logprob: -9.390734672546387
    5. '	dp' → logprob: -12.515734672546387
    6. '   ' → logprob: -13.890734672546387
    7. ' ' → logprob: -14.390734672546387
    8. '               ' → logprob: -14.515734672546387
    9. '_dp' → logprob: -14.640734672546387
    10. '(dp' → logprob: -16.015735626220703

Token 512: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -6.2729995988775045e-06
    2. 'table' → logprob: -12.000006675720215
    3. 'Table' → logprob: -17.8750057220459
    4. '_TABLE' → logprob: -19.1250057220459
    5. '_tab' → logprob: -19.3750057220459
    6. '_tbl' → logprob: -21.0000057220459
    7. '_' → logprob: -21.1250057220459
    8. '_Table' → logprob: -21.2500057220459
    9. '<table' → logprob: -21.3750057220459
    10. 'atable' → logprob: -21.3750057220459

Token 513: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0017149277264252305
    2. '_table' → logprob: -6.376714706420898
    3. '_current' → logprob: -11.876714706420898
    4. 'current' → logprob: -13.126714706420898
    5. '[next' → logprob: -14.126714706420898
    6. '[' → logprob: -14.251714706420898
    7. '```' → logprob: -14.376714706420898
    8. '[_' → logprob: -14.751714706420898
    9. '   ' → logprob: -14.876714706420898
    10. '(current' → logprob: -15.126714706420898

Token 514: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.006350000388920307
    2. '+' → logprob: -5.881350040435791
    3. '_table' → logprob: -5.881350040435791
    4. '][' → logprob: -8.506349563598633
    5. 'index' → logprob: -8.631349563598633
    6. '1' → logprob: -9.381349563598633
    7. ' +' → logprob: -9.506349563598633
    8. '[' → logprob: -9.756349563598633
    9. '   ' → logprob: -10.381349563598633
    10. '```' → logprob: -10.631349563598633

Token 515: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6957991123199463
    2. ' +' → logprob: -0.6957991123199463
    3. '][' → logprob: -5.945798873901367
    4. '   ' → logprob: -11.445798873901367
    5. '[current' → logprob: -11.820798873901367
    6. '[' → logprob: -12.445798873901367
    7. ' ][' → logprob: -12.570798873901367
    8. '       ' → logprob: -14.070798873901367
    9. '  ' → logprob: -14.320798873901367
    10. '```' → logprob: -14.320798873901367

Token 516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07369276881217957
    2. 'current' → logprob: -3.198692798614502
    3. ' ' → logprob: -4.698692798614502
    4. '[' → logprob: -4.948692798614502
    5. 'abc' → logprob: -5.323692798614502
    6. ' current' → logprob: -5.823692798614502
    7. ' abc' → logprob: -6.323692798614502
    8. '[current' → logprob: -6.448692798614502
    9. 'dp' → logprob: -7.448692798614502
    10. 'number' → logprob: -7.823692798614502

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06566565483808517
    2. 'current' → logprob: -3.4406657218933105
    3. 'index' → logprob: -4.0656657218933105
    4. 'abc' → logprob: -5.0656657218933105
    5. '[' → logprob: -5.1906657218933105
    6. ' ' → logprob: -7.5656657218933105
    7. '
' → logprob: -8.065665245056152
    8. 'dp' → logprob: -8.440665245056152
    9. '[current' → logprob: -8.565665245056152
    10. '][' → logprob: -8.690665245056152

Token 518: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23877476155757904
    2. '[current' → logprob: -1.8637747764587402
    3. '[' → logprob: -2.9887747764587402
    4. ')[' → logprob: -5.11377477645874
    5. '}[' → logprob: -8.988774299621582
    6. '[curr' → logprob: -9.613774299621582
    7. ' ][' → logprob: -9.613774299621582
    8. '[][' → logprob: -9.613774299621582
    9. '>[' → logprob: -9.738774299621582
    10. '[cur' → logprob: -9.738774299621582

Token 519: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.06253256648778915
    2. 'current' → logprob: -2.812532663345337
    3. '[' → logprob: -7.562532424926758
    4. '[current' → logprob: -10.687532424926758
    5. ' abc' → logprob: -11.937532424926758
    6. ' current' → logprob: -12.687532424926758
    7. 'dp' → logprob: -12.687532424926758
    8. '```' → logprob: -13.187532424926758
    9. 'abcd' → logprob: -13.312532424926758
    10. 'abcdef' → logprob: -13.437532424926758

Token 520: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.011389798484742641
    2. 'progress' → logprob: -5.26138973236084
    3. '_index' → logprob: -5.38638973236084
    4. 'Progress' → logprob: -7.51138973236084
    5. 'index' → logprob: -7.63638973236084
    6. '_table' → logprob: -8.51138973236084
    7. '```' → logprob: -9.38638973236084
    8. '_character' → logprob: -10.26138973236084
    9. '_PROGRESS' → logprob: -10.38638973236084
    10. '][' → logprob: -10.38638973236084

Token 521: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2525334060192108
    2. ']+=' → logprob: -1.5025334358215332
    3. '       ' → logprob: -7.877533435821533
    4. ' ]' → logprob: -8.752532958984375
    5. '           ' → logprob: -11.002532958984375
    6. '        ' → logprob: -11.252532958984375
    7. '+=' → logprob: -11.377532958984375
    8. ']+' → logprob: -11.877532958984375
    9. ']=' → logprob: -12.002532958984375
    10. '```' → logprob: -12.627532958984375

Token 522: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002693224814720452
    2. ' +=' → logprob: -8.250268936157227
    3. ']+=' → logprob: -12.375268936157227
    4. '=' → logprob: -13.250268936157227
    5. '       ' → logprob: -14.000268936157227
    6. '        ' → logprob: -14.250268936157227
    7. '           ' → logprob: -15.625268936157227
    8. '+' → logprob: -15.750268936157227
    9. '+=(' → logprob: -16.375268936157227
    10. '```' → logprob: -16.875268936157227

Token 523: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170225441455841
    2. ' dp' → logprob: -6.7511701583862305
    3. '	dp' → logprob: -18.376171112060547
    4. '           ' → logprob: -20.251171112060547
    5. '   ' → logprob: -20.751171112060547
    6. '(dp' → logprob: -21.001171112060547
    7. '_dp' → logprob: -21.501171112060547
    8. '       ' → logprob: -22.126171112060547
    9. 'dt' → logprob: -23.626171112060547
    10. 'd' → logprob: -23.626171112060547

Token 524: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.4140441635390744e-05
    2. 'table' → logprob: -11.250014305114746
    3. 'Table' → logprob: -14.250014305114746
    4. '_TABLE' → logprob: -15.875014305114746
    5. '```' → logprob: -15.875014305114746
    6. '_Table' → logprob: -17.12501335144043
    7. '@Table' → logprob: -17.62501335144043
    8. '-table' → logprob: -17.62501335144043
    9. 'TABLE' → logprob: -17.62501335144043
    10. '<table' → logprob: -17.75001335144043

Token 525: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -9.088346359931165e-07
    2. 'current' → logprob: -15.000000953674316
    3. '_current' → logprob: -15.000000953674316
    4. '```' → logprob: -16.0
    5. '[cur' → logprob: -17.625
    6. '(current' → logprob: -18.5
    7. '[' → logprob: -18.625
    8. '[
' → logprob: -19.375
    9. '[curr' → logprob: -19.5
    10. ' [' → logprob: -19.625

Token 526: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001343446783721447
    2. 'index' → logprob: -6.876343250274658
    3. 'current' → logprob: -8.751343727111816
    4. '```' → logprob: -10.251343727111816
    5. '_current' → logprob: -10.626343727111816
    6. '[' → logprob: -10.876343727111816
    7. '[current' → logprob: -10.876343727111816
    8. '][' → logprob: -11.251343727111816
    9. '_INDEX' → logprob: -11.751343727111816
    10. '[index' → logprob: -11.751343727111816

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012648086063563824
    2. '[current' → logprob: -4.387648105621338
    3. '[' → logprob: -10.01264762878418
    4. ' ][' → logprob: -10.51264762878418
    5. ']' → logprob: -10.88764762878418
    6. 'current' → logprob: -11.38764762878418
    7. '[curr' → logprob: -11.88764762878418
    8. '[cur' → logprob: -12.38764762878418
    9. ')[' → logprob: -12.38764762878418
    10. '[index' → logprob: -13.13764762878418

Token 528: 'abc' (ID: 26682)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01823984831571579
    2. 'abc' → logprob: -4.018239974975586
    3. '[current' → logprob: -10.268239974975586
    4. '[' → logprob: -10.643239974975586
    5. ' current' → logprob: -10.643239974975586
    6. ' abc' → logprob: -12.893239974975586
    7. '```' → logprob: -13.268239974975586
    8. 'abcdef' → logprob: -14.018239974975586
    9. '_current' → logprob: -14.393239974975586
    10. '$current' → logprob: -15.018239974975586

Token 529: '_progress' (ID: 60853)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.3210478127002716
    2. '_progress' → logprob: -1.5710477828979492
    3. '_table' → logprob: -3.071047782897949
    4. 'index' → logprob: -5.696047782897949
    5. '][' → logprob: -5.696047782897949
    6. '   ' → logprob: -5.946047782897949
    7. 'progress' → logprob: -6.196047782897949
    8. '       ' → logprob: -6.196047782897949
    9. '```' → logprob: -6.446047782897949
    10. ']' → logprob: -6.821047782897949

Token 530: ']
' (ID: 1592)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0987645387649536
    2. '<|end|>' → logprob: -1.0987645387649536
    3. ' %' → logprob: -1.7237645387649536
    4. ')' → logprob: -2.473764419555664
    5. '<|end|>' → logprob: -3.598764419555664
    6. ']' → logprob: -3.598764419555664
    7. ']%' → logprob: -4.973764419555664
    8. ')%' → logprob: -5.223764419555664
    9. '       ' → logprob: -6.973764419555664
    10. ' ]' → logprob: -7.098764419555664

Token 531: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16001509130001068
    2. '           ' → logprob: -2.535015106201172
    3. '<|end|>' → logprob: -3.535015106201172
    4. '       ' → logprob: -3.660015106201172
    5. '```' → logprob: -5.535015106201172
    6. ' %' → logprob: -5.910015106201172
    7. '<|end|>' → logprob: -6.160015106201172
    8. '%
' → logprob: -7.035015106201172
    9. '   ' → logprob: -7.285015106201172
    10. ')' → logprob: -7.285015106201172

Token 532: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7896053194999695
    2. '=' → logprob: -0.9146053194999695
    3. ' dp' → logprob: -2.5396053791046143
    4. ' =' → logprob: -4.039605140686035
    5. '%' → logprob: -4.539605140686035
    6. 'dp' (adapté à ' dp') → logprob: -4.664605140686035
    7. ' ' → logprob: -4.664605140686035
    8. ' %=' → logprob: -4.789605140686035
    9. '=
' → logprob: -6.789605140686035
    10. ' %' → logprob: -7.039605140686035

Token 533: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -6.392202976712724e-06
    2. 'table' → logprob: -12.625006675720215
    3. '[_' → logprob: -14.000006675720215
    4. '[current' → logprob: -14.125006675720215
    5. 'Table' → logprob: -14.250006675720215
    6. '_TABLE' → logprob: -14.875006675720215
    7. '```' → logprob: -16.0000057220459
    8. '[' → logprob: -16.1250057220459
    9. '_Table' → logprob: -16.3750057220459
    10. '<table' → logprob: -16.6250057220459

Token 534: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.3822154111694545e-05
    2. '_current' → logprob: -11.625043869018555
    3. '[' → logprob: -11.750043869018555
    4. '%' → logprob: -12.500043869018555
    5. '_index' → logprob: -12.500043869018555
    6. '```' → logprob: -12.500043869018555
    7. ',current' → logprob: -12.875043869018555
    8. 'current' → logprob: -13.125043869018555
    9. '[next' → logprob: -13.250043869018555
    10. '=current' → logprob: -13.250043869018555

Token 535: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.02069276198744774
    2. '+' → logprob: -3.895692825317383
    3. 'index' → logprob: -9.645692825317383
    4. ' +' → logprob: -9.645692825317383
    5. 'Index' → logprob: -12.145692825317383
    6. '1' → logprob: -12.645692825317383
    7. '_INDEX' → logprob: -12.770692825317383
    8. '```' → logprob: -12.770692825317383
    9. '][' → logprob: -13.645692825317383
    10. '   ' → logprob: -13.645692825317383

Token 536: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47446903586387634
    2. ' +' → logprob: -0.9744690656661987
    3. '][' → logprob: -7.849469184875488
    4. '   ' → logprob: -14.599469184875488
    5. '＋' → logprob: -14.974469184875488
    6. '[' → logprob: -15.099469184875488
    7. '[current' → logprob: -15.724469184875488
    8. '```' → logprob: -15.724469184875488
    9. '+[' → logprob: -16.224468231201172
    10. '[next' → logprob: -16.724468231201172

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20755839347839355
    2. 'current' → logprob: -2.5825583934783936
    3. 'abc' → logprob: -3.2075583934783936
    4. ' ' → logprob: -3.3325583934783936
    5. ' abc' → logprob: -3.7075583934783936
    6. ' current' → logprob: -5.457558631896973
    7. '```' → logprob: -6.582558631896973
    8. '3' → logprob: -6.707558631896973
    9. ']' → logprob: -6.707558631896973
    10. '0' → logprob: -7.082558631896973

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1611376404762268
    2. 'current' → logprob: -2.411137580871582
    3. 'abc' → logprob: -3.411137580871582
    4. '3' → logprob: -3.911137580871582
    5. ' ' → logprob: -6.286137580871582
    6. '2' → logprob: -6.911137580871582
    7. ' abc' → logprob: -7.536137580871582
    8. '```' → logprob: -7.536137580871582
    9. ']' → logprob: -7.786137580871582
    10. '[current' → logprob: -8.286137580871582

Token 539: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11605565249919891
    2. '[current' → logprob: -2.241055727005005
    3. ')[' → logprob: -6.491055488586426
    4. '[' → logprob: -6.616055488586426
    5. ' ][' → logprob: -9.366055488586426
    6. ']' → logprob: -9.491055488586426
    7. '}[' → logprob: -10.241055488586426
    8. '```' → logprob: -10.241055488586426
    9. ' [' → logprob: -10.366055488586426
    10. 'current' → logprob: -11.116055488586426

Token 540: 'abc' (ID: 26682)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2520163953304291
    2. 'abc' → logprob: -1.5020164251327515
    3. ' abc' → logprob: -10.877016067504883
    4. ' current' → logprob: -11.127016067504883
    5. '[current' → logprob: -11.127016067504883
    6. '```' → logprob: -11.252016067504883
    7. '_current' → logprob: -12.252016067504883
    8. 'xyz' → logprob: -12.252016067504883
    9. 'abcdef' → logprob: -12.627016067504883
    10. '[' → logprob: -12.627016067504883

Token 541: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.002238874090835452
    2. 'progress' → logprob: -6.127238750457764
    3. 'Progress' → logprob: -10.627239227294922
    4. '_index' → logprob: -11.127239227294922
    5. '_current' → logprob: -13.127239227294922
    6. 'index' → logprob: -13.127239227294922
    7. '_PROGRESS' → logprob: -13.377239227294922
    8. 'current' → logprob: -13.502239227294922
    9. '+' → logprob: -13.752239227294922
    10. '```' → logprob: -13.877239227294922

Token 542: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15905562043190002
    2. '%=' → logprob: -2.784055709838867
    3. ')' → logprob: -3.034055709838867
    4. '%' → logprob: -3.909055709838867
    5. ' %=' → logprob: -4.159055709838867
    6. ')%' → logprob: -7.034055709838867
    7. ']%' → logprob: -7.659055709838867
    8. ' ]' → logprob: -10.784055709838867
    9. ' %' → logprob: -10.909055709838867
    10. '```' → logprob: -11.159055709838867

Token 543: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0019331586081534624
    2. ' %=' → logprob: -6.5019330978393555
    3. '%' → logprob: -7.7519330978393555
    4. ')' → logprob: -15.126933097839355
    5. ')%' → logprob: -15.251933097839355
    6. ' ' → logprob: -16.126934051513672
    7. '```' → logprob: -16.251934051513672
    8. '	' → logprob: -16.626934051513672
    9. ' %' → logprob: -16.876934051513672
    10. '   ' → logprob: -17.251934051513672

Token 544: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '_MOD' → logprob: -21.250017166137695
    4. 'MO' → logprob: -23.750017166137695
    5. '.MOD' → logprob: -24.625017166137695
    6. '```' → logprob: -25.875017166137695
    7. '   ' → logprob: -26.500017166137695
    8. 'MD' → logprob: -26.750017166137695
    9. 'MODE' → logprob: -27.125017166137695
    10. 'mod' → logprob: -27.375017166137695

Token 545: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.043961912393569946
    2. 'O' → logprob: -3.168962001800537
    3. 'MOD' → logprob: -7.543962001800537
    4. 'UL' → logprob: -9.543961524963379
    5. 'ODO' → logprob: -9.668961524963379
    6. 'ULE' → logprob: -9.793961524963379
    7. 'U' → logprob: -10.043961524963379
    8. 'UDO' → logprob: -10.543961524963379
    9. 'UB' → logprob: -10.793961524963379
    10. 'LO' → logprob: -10.918961524963379

Token 546: '_DIV' (ID: 83128)
  Prédit: '_DIV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DIV' → logprob: -0.043499670922756195
    2. 'DIV' → logprob: -4.04349946975708
    3. '_MOD' → logprob: -4.41849946975708
    4. 'MOD' → logprob: -4.41849946975708
    5. 'div' → logprob: -7.16849946975708
    6. '_div' → logprob: -9.418499946594238
    7. 'Div' → logprob: -10.418499946594238
    8. '```' → logprob: -10.918499946594238
    9. '\' → logprob: -12.293499946594238
    10. '
' → logprob: -12.418499946594238

Token 547: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.005126784555613995
    2. 'SOR' → logprob: -5.630126953125
    3. 'OS' → logprob: -8.005126953125
    4. 'MOD' → logprob: -8.255126953125
    5. 'ISIBLE' → logprob: -8.255126953125
    6. 'OR' → logprob: -8.755126953125
    7. 'S' → logprob: -8.880126953125
    8. '_MOD' → logprob: -9.505126953125
    9. 'ULO' → logprob: -9.755126953125
    10. 'US' → logprob: -10.255126953125

Token 548: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.49300700426101685
    2. 'O' → logprob: -0.9930070042610168
    3. 'ULO' → logprob: -4.118007183074951
    4. 'U' → logprob: -7.368007183074951
    5. 'TOR' → logprob: -8.493006706237793
    6. 'OD' → logprob: -8.493006706237793
    7. 'MOD' → logprob: -8.618006706237793
    8. 'UL' → logprob: -8.743006706237793
    9. 'US' → logprob: -8.868006706237793
    10. 'L' → logprob: -8.868006706237793

Token 549: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04699292033910751
    2. '<|end|>' → logprob: -3.1719930171966553
    3. '```' → logprob: -6.421992778778076
    4. '	' → logprob: -7.421992778778076
    5. '<|end|>' → logprob: -7.546992778778076
    6. '        
' → logprob: -8.046993255615234
    7. '   ' → logprob: -8.046993255615234
    8. ' ' → logprob: -9.671993255615234
    9. '
' → logprob: -9.921993255615234
    10. ',' → logprob: -10.046993255615234

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006217439658939838
    2. '<|end|>' → logprob: -5.2562174797058105
    3. '   ' → logprob: -8.006217002868652
    4. ' if' → logprob: -8.756217002868652
    5. '        
' → logprob: -8.756217002868652
    6. '```' → logprob: -9.381217002868652
    7. 'if' → logprob: -9.881217002868652
    8. ' ' → logprob: -10.506217002868652
    9. '<|end|>' → logprob: -10.631217002868652
    10. ',' → logprob: -10.881217002868652

Token 551: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02718355506658554
    2. '       ' → logprob: -3.9021835327148438
    3. '```' → logprob: -5.652183532714844
    4. ' if' → logprob: -6.277183532714844
    5. '   ' → logprob: -7.027183532714844
    6. 'i' → logprob: -9.152183532714844
    7. 'elif' → logprob: -9.402183532714844
    8. ' ' → logprob: -10.902183532714844
    9. '`' → logprob: -11.277183532714844
    10. 'current' → logprob: -11.527183532714844

Token 552: ' Option' (ID: 17796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007106647826731205
    2. '#' → logprob: -5.257106781005859
    3. '       ' → logprob: -7.132106781005859
    4. 'next' → logprob: -7.257106781005859
    5. ' if' → logprob: -9.00710678100586
    6. 'option' → logprob: -9.13210678100586
    7. 'current' → logprob: -10.25710678100586
    8. 'token' → logprob: -10.63210678100586
    9. '   ' → logprob: -10.75710678100586
    10. 'Option' → logprob: -11.13210678100586

Token 553: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03203590214252472
    2. '1' → logprob: -4.407035827636719
    3. '=' → logprob: -4.657035827636719
    4. ' ' → logprob: -5.907035827636719
    5. ' =' → logprob: -5.907035827636719
    6. ' :' → logprob: -6.782035827636719
    7. '       ' → logprob: -7.532035827636719
    8. '   ' → logprob: -7.657035827636719
    9. '_token' → logprob: -8.032035827636719
    10. '_tokens' → logprob: -8.032035827636719

Token 554: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6710521578788757
    2. 'if' → logprob: -1.0460522174835205
    3. ':' → logprob: -2.5460522174835205
    4. '2' → logprob: -3.1710522174835205
    5. 'elif' → logprob: -5.046051979064941
    6. 'for' → logprob: -6.046051979064941
    7. '=' → logprob: -6.171051979064941
    8. '```' → logprob: -6.296051979064941
    9. '3' → logprob: -7.046051979064941
    10. 'to' → logprob: -7.171051979064941

Token 555: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01986476220190525
    2. ' =' → logprob: -5.144864559173584
    3. ' :' → logprob: -5.269864559173584
    4. '=' → logprob: -5.394864559173584
    5. '<|end|>' → logprob: -6.019864559173584
    6. '       ' → logprob: -7.019864559173584
    7. '   ' → logprob: -8.019865036010742
    8. ' if' → logprob: -8.519865036010742
    9. '<|end|>' → logprob: -9.769865036010742
    10. 'if' → logprob: -9.769865036010742

Token 556: ' Select' (ID: 13482)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05708649009466171
    2. ' if' → logprob: -2.93208646774292
    3. '#' → logprob: -7.55708646774292
    4. 'current' → logprob: -7.93208646774292
    5. 'char' → logprob: -7.93208646774292
    6. 'next' → logprob: -8.432086944580078
    7. '   ' → logprob: -8.557086944580078
    8. '       ' → logprob: -8.557086944580078
    9. '```' → logprob: -9.807086944580078
    10. ' next' → logprob: -9.807086944580078

Token 557: ' the' (ID: 290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06708851456642151
    2. ' current' → logprob: -3.1920886039733887
    3. '(current' → logprob: -4.067088603973389
    4. 'dp' → logprob: -6.067088603973389
    5. 'the' → logprob: -6.567088603973389
    6. '[current' → logprob: -7.067088603973389
    7. '_current' → logprob: -7.067088603973389
    8. '(' → logprob: -8.31708812713623
    9. '(dp' → logprob: -8.44208812713623
    10. '<|end|>' → logprob: -9.06708812713623

Token 558: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00018411019118502736
    2. ' current' → logprob: -8.875184059143066
    3. 'character' → logprob: -10.250184059143066
    4. 'next' → logprob: -12.500184059143066
    5. '[current' → logprob: -12.875184059143066
    6. 'char' → logprob: -14.125184059143066
    7. '.current' → logprob: -15.000184059143066
    8. '1' → logprob: -15.125184059143066
    9. '(current' → logprob: -15.250184059143066
    10. 'abc' → logprob: -15.625184059143066

Token 559: ' character' (ID: 5855)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.004470947198569775
    2. 'character' → logprob: -5.6294708251953125
    3. '_' → logprob: -7.1294708251953125
    4. ' character' → logprob: -9.879470825195312
    5. '_char' → logprob: -12.254470825195312
    6. '_current' → logprob: -13.129470825195312
    7. ' _' → logprob: -13.254470825195312
    8. ')' → logprob: -13.254470825195312
    9. '_token' → logprob: -13.504470825195312
    10. '_CHARACTER' → logprob: -13.629470825195312

Token 560: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6324189305305481
    2. ' if' → logprob: -1.1324188709259033
    3. '<|end|>' → logprob: -3.5074188709259033
    4. '   ' → logprob: -4.257419109344482
    5. ' and' → logprob: -4.382419109344482
    6. '           ' → logprob: -4.382419109344482
    7. '[' → logprob: -4.382419109344482
    8. '[current' → logprob: -4.757419109344482
    9. 'if' → logprob: -4.757419109344482
    10. '=' → logprob: -4.757419109344482

Token 561: ' valid' (ID: 4529)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.20304061472415924
    2. 'current' → logprob: -2.703040599822998
    3. '(' → logprob: -3.078040599822998
    4. '(current' → logprob: -3.453040599822998
    5. ' abc' → logprob: -3.828040599822998
    6. ' current' → logprob: -4.703040599822998
    7. ' (' → logprob: -5.453040599822998
    8. '((' → logprob: -6.453040599822998
    9. '(ab' → logprob: -7.703040599822998
    10. ' ' → logprob: -7.703040599822998

Token 562: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2244512438774109
    2. ' if' → logprob: -1.8494513034820557
    3. 'if' → logprob: -3.2244513034820557
    4. '           ' → logprob: -6.974451065063477
    5. '<|end|>' → logprob: -7.474451065063477
    6. '        ' → logprob: -7.849451065063477
    7. '        
' → logprob: -8.099451065063477
    8. '   ' → logprob: -8.099451065063477
    9. ' and' → logprob: -8.349451065063477
    10. ',' → logprob: -8.349451065063477

Token 563: ' the' (ID: 290)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.026082439348101616
    2. ' abc' → logprob: -4.026082515716553
    3. '(' → logprob: -5.276082515716553
    4. '0' → logprob: -7.651082515716553
    5. ' (' → logprob: -7.776082515716553
    6. 'current' → logprob: -7.776082515716553
    7. '1' → logprob: -8.276082038879395
    8. 'next' → logprob: -8.401082038879395
    9. ' current' → logprob: -8.651082038879395
    10. '"' → logprob: -8.776082038879395

Token 564: ' next' (ID: 2613)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.6778054237365723
    2. 'next' → logprob: -1.1778054237365723
    3. ' next' → logprob: -2.0528054237365723
    4. 'current' → logprob: -3.3028054237365723
    5. ' current' → logprob: -4.677805423736572
    6. ' abc' → logprob: -4.677805423736572
    7. '```' → logprob: -8.802804946899414
    8. 'if' → logprob: -8.927804946899414
    9. '`' → logprob: -10.677804946899414
    10. '(next' → logprob: -10.802804946899414

Token 565: ' letter' (ID: 10263)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.08491809666156769
    2. ' abc' → logprob: -2.7099180221557617
    3. 'character' → logprob: -4.959918022155762
    4. ' character' → logprob: -6.209918022155762
    5. 'token' → logprob: -6.459918022155762
    6. '_token' → logprob: -6.584918022155762
    7. 'char' → logprob: -7.209918022155762
    8. '_character' → logprob: -7.334918022155762
    9. '_' → logprob: -7.709918022155762
    10. '_char' → logprob: -8.334918022155762

Token 566: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2838144898414612
    2. ' in' → logprob: -2.9088144302368164
    3. '=' → logprob: -3.0338144302368164
    4. '<|end|>' → logprob: -3.0338144302368164
    5. ':' → logprob: -3.7838144302368164
    6. ' of' → logprob: -4.158814430236816
    7. '        ' → logprob: -4.408814430236816
    8. '   ' → logprob: -5.408814430236816
    9. ',' → logprob: -5.408814430236816
    10. '    ' → logprob: -5.533814430236816

Token 567: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006652730517089367
    2. ''' → logprob: -5.25665283203125
    3. 'ABC' → logprob: -7.50665283203125
    4. 'the' → logprob: -7.75665283203125
    5. ' "' → logprob: -9.00665283203125
    6. '"A' → logprob: -9.25665283203125
    7. 'sequence' → logprob: -10.25665283203125
    8. 'abc' → logprob: -10.50665283203125
    9. '```' → logprob: -10.63165283203125
    10. '   ' → logprob: -10.63165283203125

Token 568: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0323946550488472
    2. '"' → logprob: -3.6573946475982666
    3. 'abc' → logprob: -5.157394886016846
    4. ''' → logprob: -8.407394409179688
    5. ' ABC' → logprob: -10.657394409179688
    6. '```' → logprob: -11.032394409179688
    7. 'AB' → logprob: -11.407394409179688
    8. '")' → logprob: -11.532394409179688
    9. 'ABCDE' → logprob: -11.907394409179688
    10. '`' → logprob: -12.407394409179688

Token 569: '"
' (ID: 1092)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7867255210876465
    2. '"' → logprob: -0.9117255210876465
    3. '[current' → logprob: -2.2867255210876465
    4. ')' → logprob: -3.5367255210876465
    5. '[state' → logprob: -5.7867255210876465
    6. '       ' → logprob: -6.5367255210876465
    7. '   ' → logprob: -6.5367255210876465
    8. '```' → logprob: -6.6617255210876465
    9. '[next' → logprob: -7.1617255210876465
    10. '"[' → logprob: -7.2867255210876465

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23064027726650238
    2. '   ' → logprob: -2.230640172958374
    3. '<|end|>' → logprob: -3.605640172958374
    4. ' if' → logprob: -4.230640411376953
    5. 'if' → logprob: -4.605640411376953
    6. '[' → logprob: -4.855640411376953
    7. '[current' → logprob: -4.855640411376953
    8. '           ' → logprob: -5.480640411376953
    9. ':' → logprob: -5.605640411376953
    10. ',' → logprob: -5.980640411376953

Token 571: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.516554594039917
    2. ' if' → logprob: -1.266554594039917
    3. 'if' (adapté à ' if') → logprob: -2.266554594039917
    4. '        ' → logprob: -4.516554832458496
    5. '           ' → logprob: -5.891554832458496
    6. ' ' → logprob: -6.766554832458496
    7. '   ' → logprob: -6.891554832458496
    8. '    ' → logprob: -7.891554832458496
    9. 'current' → logprob: -8.766554832458496
    10. '               ' → logprob: -9.016554832458496

Token 572: ' abc' (ID: 75094)
  Prédit: ' abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abc' → logprob: -0.6536400318145752
    2. 'abc' → logprob: -0.7786400318145752
    3. ' current' → logprob: -4.528639793395996
    4. 'current' → logprob: -5.528639793395996
    5. ' (' → logprob: -5.653639793395996
    6. '(' → logprob: -6.528639793395996
    7. ' ' → logprob: -7.653639793395996
    8. '   ' → logprob: -8.028639793395996
    9. '(current' → logprob: -8.903639793395996
    10. '  ' → logprob: -9.778639793395996

Token 573: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -1.1041145626222715e-05
    2. 'progress' → logprob: -11.500011444091797
    3. '_pro' → logprob: -14.875011444091797
    4. '_' → logprob: -15.875011444091797
    5. '_prog' → logprob: -16.250011444091797
    6. 'Progress' → logprob: -16.750011444091797
    7. '	progress' → logprob: -16.875011444091797
    8. '_PROGRESS' → logprob: -16.875011444091797
    9. '_state' → logprob: -17.375011444091797
    10. '_current' → logprob: -18.125011444091797

Token 574: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3476744592189789
    2. ' <' → logprob: -1.5976744890213013
    3. '+' → logprob: -3.2226743698120117
    4. '==' → logprob: -3.8476743698120117
    5. ' ==' → logprob: -3.8476743698120117
    6. ' +' → logprob: -4.847674369812012
    7. '<=' → logprob: -7.972674369812012
    8. '!=' → logprob: -9.097674369812012
    9. ' <=' → logprob: -9.222674369812012
    10. '<len' → logprob: -9.347674369812012

Token 575: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011050650849938393
    2. 'number' → logprob: -4.511050701141357
    3. '4' → logprob: -13.8860502243042
    4. ' number' → logprob: -14.3860502243042
    5. ' ' → logprob: -14.5110502243042
    6. 'len' → logprob: -15.1360502243042
    7. '[number' → logprob: -15.7610502243042
    8. '=' → logprob: -16.261051177978516
    9. '```' → logprob: -16.386051177978516
    10. '   ' → logprob: -16.636051177978516

Token 576: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0024780353996902704
    2. 'number' → logprob: -6.002478122711182
    3. '4' → logprob: -13.252477645874023
    4. ' number' → logprob: -15.252477645874023
    5. ' ' → logprob: -16.252477645874023
    6. 'len' → logprob: -16.252477645874023
    7. '[number' → logprob: -16.752477645874023
    8. '=' → logprob: -17.002477645874023
    9. '```' → logprob: -17.627477645874023
    10. '(number' → logprob: -18.064977645874023

Token 577: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0027018047403544188
    2. 'and' → logprob: -6.002701759338379
    3. ':' → logprob: -9.002701759338379
    4. ':
' → logprob: -9.377701759338379
    5. '           ' → logprob: -12.252701759338379
    6. '       ' → logprob: -12.502701759338379
    7. '<|end|>' → logprob: -12.627701759338379
    8. '	and' → logprob: -13.377701759338379
    9. '        ' → logprob: -13.502701759338379
    10. '   ' → logprob: -14.252701759338379

Token 578: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09779801964759827
    2. '           ' → logprob: -2.8477981090545654
    3. ' if' → logprob: -4.472797870635986
    4. '<|end|>' → logprob: -4.597797870635986
    5. '        ' → logprob: -5.222797870635986
    6. ' and' → logprob: -5.847797870635986
    7. ',' → logprob: -6.347797870635986
    8. '   ' → logprob: -7.097797870635986
    9. '    ' → logprob: -7.722797870635986
    10. '               ' → logprob: -7.972797870635986

Token 579: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8688268661499023
    2. ' if' → logprob: -0.8688268661499023
    3. '           ' → logprob: -3.2438268661499023
    4. 'c' → logprob: -3.7438268661499023
    5. 'char' → logprob: -3.7438268661499023
    6. ' c' → logprob: -3.8688268661499023
    7. ' char' → logprob: -4.493826866149902
    8. 'next' → logprob: -4.618826866149902
    9. 'current' → logprob: -4.868826866149902
    10. '       ' → logprob: -5.368826866149902

Token 580: '_valid' (ID: 23321)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.6034867167472839
    2. 'current' → logprob: -1.2284867763519287
    3. ' current' → logprob: -2.6034867763519287
    4. '(input' → logprob: -3.7284867763519287
    5. ' (' → logprob: -3.9784867763519287
    6. '"' → logprob: -4.35348653793335
    7. 'True' → logprob: -5.72848653793335
    8. 'input' → logprob: -5.72848653793335
    9. '(' → logprob: -5.97848653793335
    10. ''' → logprob: -6.10348653793335

Token 581: '_selection' (ID: 56289)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3896372318267822
    2. '=' → logprob: -1.1396372318267822
    3. '_char' → logprob: -7.014636993408203
    4. ' and' → logprob: -7.139636993408203
    5. 'and' → logprob: -8.139636993408203
    6. '_token' → logprob: -8.514636993408203
    7. '_character' → logprob: -9.264636993408203
    8. 'current' → logprob: -9.764636993408203
    9. '=current' → logprob: -9.764636993408203
    10. '_' → logprob: -9.764636993408203

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008627340197563171
    2. '=' → logprob: -4.758627414703369
    3. ' and' → logprob: -12.258626937866211
    4. ' ' → logprob: -12.508626937866211
    5. ' =(' → logprob: -13.258626937866211
    6. '   ' → logprob: -14.633626937866211
    7. ' ' → logprob: -14.883626937866211
    8. '    ' → logprob: -15.008626937866211
    9. 'and' → logprob: -15.133626937866211
    10. '=(' → logprob: -15.258626937866211

Token 583: ' (
' (ID: 4112)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.07468866556882858
    2. 'False' → logprob: -3.949688673019409
    3. '(False' → logprob: -3.949688673019409
    4. 'current' → logprob: -4.07468843460083
    5. '(
' → logprob: -5.44968843460083
    6. '((' → logprob: -5.57468843460083
    7. ' (' → logprob: -5.82468843460083
    8. '   ' → logprob: -5.82468843460083
    9. '(True' → logprob: -6.82468843460083
    10. ' False' → logprob: -8.199688911437988

Token 584: '               ' (ID: 506)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.44168999791145325
    2. '(current' → logprob: -1.3166899681091309
    3. ' current' → logprob: -2.816689968109131
    4. ' (' → logprob: -4.566689968109131
    5. '               ' → logprob: -4.566689968109131
    6. '           ' → logprob: -5.566689968109131
    7. 'input' → logprob: -6.691689968109131
    8. '   ' → logprob: -6.941689968109131
    9. 'True' → logprob: -8.066690444946289
    10. '                   ' → logprob: -8.066690444946289

Token 585: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.255778431892395
    2. '(current' → logprob: -1.505778431892395
    3. ' current' → logprob: -6.0057783126831055
    4. '   ' → logprob: -7.3807783126831055
    5. ' (' → logprob: -8.130778312683105
    6. '           ' → logprob: -9.380778312683105
    7. '(' → logprob: -9.505778312683105
    8. 'abc' → logprob: -9.880778312683105
    9. '(
' → logprob: -10.255778312683105
    10. 'True' → logprob: -10.505778312683105

Token 586: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.00013035668234806508
    2. 'character' → logprob: -9.000130653381348
    3. '_string' → logprob: -12.625130653381348
    4. '_char' → logprob: -13.125130653381348
    5. 'Character' → logprob: -14.500130653381348
    6. '_' → logprob: -15.250130653381348
    7. '[' → logprob: -15.750130653381348
    8. '_CHARACTER' → logprob: -16.00012969970703
    9. '_index' → logprob: -16.12512969970703
    10. ' character' → logprob: -16.25012969970703

Token 587: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22124484181404114
    2. '==' → logprob: -1.7212448120117188
    3. ' in' → logprob: -4.096244812011719
    4. 'in' → logprob: -5.971244812011719
    5. '=='' → logprob: -7.846244812011719
    6. '==
' → logprob: -11.596244812011719
    7. ')' → logprob: -11.721244812011719
    8. ' ' → logprob: -11.846244812011719
    9. '            ' → logprob: -12.221244812011719
    10. '=="' → logprob: -12.346244812011719

Token 588: ' '?'' (ID: 192100)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2246141880750656
    2. '"' → logprob: -2.099614143371582
    3. '['' → logprob: -2.974614143371582
    4. '('' → logprob: -4.599614143371582
    5. ''A' → logprob: -4.849614143371582
    6. ''?' → logprob: -5.724614143371582
    7. '?' → logprob: -6.099614143371582
    8. '["' → logprob: -6.724614143371582
    9. '"A' → logprob: -7.224614143371582
    10. '"?' → logprob: -7.599614143371582

Token 589: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.023389896377921104
    2. 'or' → logprob: -3.7733898162841797
    3. '               ' → logprob: -9.14838981628418
    4. ')' → logprob: -11.14838981628418
    5. '            ' → logprob: -11.52338981628418
    6. '           ' → logprob: -11.77338981628418
    7. '                ' → logprob: -12.39838981628418
    8. '             ' → logprob: -14.64838981628418
    9. '              ' → logprob: -14.77338981628418
    10. '                   ' → logprob: -15.02338981628418

Token 590: '
' (ID: 198)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.28089699149131775
    2. '               ' → logprob: -2.4058969020843506
    3. 'current' → logprob: -2.6558969020843506
    4. ' "' → logprob: -3.1558969020843506
    5. ''' → logprob: -3.5308969020843506
    6. ' current' → logprob: -4.78089714050293
    7. ' '' → logprob: -6.53089714050293
    8. 'input' → logprob: -7.90589714050293
    9. '(current' → logprob: -8.15589714050293
    10. '"A' → logprob: -8.40589714050293

Token 591: '               ' (ID: 506)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10181554406881332
    2. '               ' → logprob: -3.2268154621124268
    3. 'current' → logprob: -3.4768154621124268
    4. ''' → logprob: -4.476815700531006
    5. '(current' → logprob: -5.226815700531006
    6. '("' → logprob: -5.601815700531006
    7. '["' → logprob: -6.351815700531006
    8. ' "' → logprob: -6.351815700531006
    9. '['' → logprob: -7.226815700531006
    10. ' current' → logprob: -7.726815700531006

Token 592: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20560455322265625
    2. '("' → logprob: -2.2056045532226562
    3. ''' → logprob: -3.4556045532226562
    4. 'current' → logprob: -4.455604553222656
    5. '(current' → logprob: -4.455604553222656
    6. '('' → logprob: -4.580604553222656
    7. ' "' → logprob: -6.080604553222656
    8. '["' → logprob: -6.205604553222656
    9. '(' (adapté à ' (') → logprob: -6.705604553222656
    10. '['' → logprob: -6.955604553222656

Token 593: 'current' (ID: 5804)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07211039960384369
    2. ''' → logprob: -3.572110414505005
    3. '("' → logprob: -3.572110414505005
    4. '('' → logprob: -5.197110176086426
    5. '["' → logprob: -6.072110176086426
    6. '['' → logprob: -6.197110176086426
    7. '(' → logprob: -6.947110176086426
    8. 'current' → logprob: -7.072110176086426
    9. ' "' → logprob: -7.947110176086426
    10. '(['' → logprob: -8.072110176086426

Token 594: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.0017760884948074818
    2. 'character' → logprob: -6.876776218414307
    3. '_string' → logprob: -7.251776218414307
    4. 'string' → logprob: -10.876775741577148
    5. 'Character' → logprob: -11.876775741577148
    6. '_char' → logprob: -12.751775741577148
    7. '_CHARACTER' → logprob: -13.001775741577148
    8. ' character' → logprob: -14.251775741577148
    9. '_index' → logprob: -15.251775741577148
    10. '_' → logprob: -15.376775741577148

Token 595: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03830093517899513
    2. '==' → logprob: -3.2883009910583496
    3. '[' → logprob: -9.413300514221191
    4. ')==' → logprob: -9.538300514221191
    5. ')' → logprob: -9.788300514221191
    6. ' ' → logprob: -11.288300514221191
    7. ' ==
' → logprob: -11.913300514221191
    8. ' in' → logprob: -12.163300514221191
    9. '==
' → logprob: -12.163300514221191
    10. '            ' → logprob: -12.913300514221191

Token 596: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2013353705406189
    2. ''' → logprob: -1.9513354301452637
    3. '['' → logprob: -3.8263354301452637
    4. '["' → logprob: -4.201335430145264
    5. ' "' → logprob: -6.701335430145264
    6. ' '' → logprob: -7.451335430145264
    7. ' ' → logprob: -8.076334953308105
    8. ' ['' → logprob: -8.076334953308105
    9. '('' → logprob: -8.576334953308105
    10. '("' → logprob: -8.576334953308105

Token 597: 'A' (ID: 32)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.0230482816696167
    2. '"' → logprob: -1.2730482816696167
    3. ''' → logprob: -1.5230482816696167
    4. 'A' → logprob: -2.1480484008789062
    5. ''A' → logprob: -4.398048400878906
    6. '"A' → logprob: -4.523048400878906
    7. '['' → logprob: -6.648048400878906
    8. '["' → logprob: -7.773048400878906
    9. ''"' → logprob: -8.523048400878906
    10. 'AB' → logprob: -8.898048400878906

Token 598: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20643043518066406
    2. 'B' → logprob: -2.581430435180664
    3. 'ABC' → logprob: -2.956430435180664
    4. '"' → logprob: -3.581430435180664
    5. ''[' → logprob: -4.081430435180664
    6. '')' → logprob: -5.706430435180664
    7. 'C' → logprob: -5.831430435180664
    8. '"[' → logprob: -6.331430435180664
    9. '[' → logprob: -6.581430435180664
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.706430435180664

Token 599: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20504583418369293
    2. ' or' → logprob: -2.3300459384918213
    3. 'and' → logprob: -2.7050459384918213
    4. ' if' → logprob: -4.580045700073242
    5. 'if' → logprob: -5.330045700073242
    6. ')' → logprob: -5.705045700073242
    7. 'or' → logprob: -6.705045700073242
    8. '               ' → logprob: -6.830045700073242
    9. '           ' → logprob: -8.330045700073242
    10. '   ' → logprob: -9.705045700073242

Token 600: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.007782169617712498
    2. ' abc' → logprob: -4.882781982421875
    3. '(' → logprob: -9.882781982421875
    4. '   ' → logprob: -10.257781982421875
    5. ''' → logprob: -10.757781982421875
    6. ' ' → logprob: -10.757781982421875
    7. ' (' → logprob: -11.007781982421875
    8. '"' → logprob: -12.132781982421875
    9. '  ' → logprob: -12.757781982421875
    10. '('' → logprob: -12.882781982421875

Token 601: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -1.9504606825648807e-05
    2. 'progress' → logprob: -10.875019073486328
    3. '_prog' → logprob: -16.125019073486328
    4. '_' → logprob: -16.500019073486328
    5. '_state' → logprob: -16.500019073486328
    6. '_pro' → logprob: -16.750019073486328
    7. '_PROGRESS' → logprob: -17.625019073486328
    8. 'Progress' → logprob: -17.625019073486328
    9. '	progress' → logprob: -18.500019073486328
    10. ' progress' → logprob: -19.000019073486328

Token 602: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04312661662697792
    2. ' ==' → logprob: -3.1681265830993652
    3. ')' → logprob: -9.543127059936523
    4. ')==' → logprob: -10.168127059936523
    5. '=' → logprob: -11.668127059936523
    6. '[' → logprob: -12.793127059936523
    7. ']==' → logprob: -13.668127059936523
    8. '==
' → logprob: -13.793127059936523
    9. '0' → logprob: -14.043127059936523
    10. ' ' → logprob: -14.293127059936523

Token 603: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -18.25002098083496
    4. '۰' → logprob: -19.62502098083496
    5. '   ' → logprob: -20.37502098083496
    6. '０' → logprob: -20.75002098083496
    7. ')' → logprob: -21.62502098083496
    8. '<|end|>' → logprob: -21.62502098083496
    9. '2' → logprob: -23.25002098083496
    10. '00' → logprob: -23.37502098083496

Token 604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '۰' → logprob: -19.750003814697266
    6. '０' → logprob: -20.125003814697266
    7. '00' → logprob: -22.062503814697266
    8. '           ' → logprob: -22.312503814697266
    9. '০' → logprob: -22.437503814697266
    10. ')' → logprob: -22.625003814697266

Token 605: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004103692714124918
    2. '               ' → logprob: -6.129103660583496
    3. ' or' → logprob: -6.379103660583496
    4. '           ' → logprob: -8.629103660583496
    5. 'or' → logprob: -11.504103660583496
    6. '                   ' → logprob: -11.629103660583496
    7. '              ' → logprob: -11.879103660583496
    8. ' )' → logprob: -12.379103660583496
    9. '                ' → logprob: -12.629103660583496
    10. ')
' → logprob: -12.879103660583496

Token 606: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02022709883749485
    2. '               ' → logprob: -4.520226955413818
    3. 'or' → logprob: -4.895226955413818
    4. ')' → logprob: -6.520226955413818
    5. '           ' → logprob: -8.770227432250977
    6. '                ' → logprob: -11.770227432250977
    7. '              ' → logprob: -12.020227432250977
    8. '                   ' → logprob: -12.895227432250977
    9. '	or' → logprob: -13.020227432250977
    10. '            ' → logprob: -13.395227432250977

Token 607: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016768930479884148
    2. '(current' → logprob: -4.391768932342529
    3. 'current' → logprob: -5.891768932342529
    4. ' current' → logprob: -6.641768932342529
    5. ' (' → logprob: -9.266768455505371
    6. '              ' → logprob: -10.141768455505371
    7. '                ' → logprob: -10.641768455505371
    8. '           ' → logprob: -12.016768455505371
    9. '                   ' → logprob: -12.141768455505371
    10. '(' → logprob: -12.391768455505371

Token 608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008672130294144154
    2. '(current' → logprob: -4.88367223739624
    3. 'current' → logprob: -7.25867223739624
    4. '              ' → logprob: -8.883671760559082
    5. ' (' → logprob: -9.508671760559082
    6. ' current' → logprob: -9.633671760559082
    7. '                ' → logprob: -10.383671760559082
    8. '(' → logprob: -11.008671760559082
    9. '                   ' → logprob: -11.508671760559082
    10. '```' → logprob: -11.508671760559082

Token 609: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.7220949530601501
    2. 'current' → logprob: -0.9720949530601501
    3. ' current' → logprob: -2.097095012664795
    4. '               ' → logprob: -4.722095012664795
    5. ' (' → logprob: -5.472095012664795
    6. '[current' → logprob: -10.347094535827637
    7. '(' (adapté à ' (') → logprob: -12.097094535827637
    8. '              ' → logprob: -12.472094535827637
    9. ',current' → logprob: -12.597094535827637
    10. '                ' → logprob: -12.597094535827637

Token 610: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004519719630479813
    2. ' current' → logprob: -5.629519939422607
    3. '(current' → logprob: -7.129519939422607
    4. '               ' → logprob: -9.12951946258545
    5. '           ' → logprob: -12.62951946258545
    6. 'abc' → logprob: -13.50451946258545
    7. '[current' → logprob: -13.62951946258545
    8. ' (' → logprob: -14.12951946258545
    9. '                   ' → logprob: -14.25451946258545
    10. '(' → logprob: -14.75451946258545

Token 611: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -5.037835580878891e-05
    2. 'character' → logprob: -10.00005054473877
    3. '_progress' → logprob: -12.62505054473877
    4. '_char' → logprob: -13.87505054473877
    5. 'Character' → logprob: -15.12505054473877
    6. '_' → logprob: -15.37505054473877
    7. '_CHARACTER' → logprob: -15.75005054473877
    8. '_index' → logprob: -17.625049591064453
    9. '_string' → logprob: -17.875049591064453
    10. ' character' → logprob: -18.500049591064453

Token 612: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0788973867893219
    2. '==' → logprob: -2.578897476196289
    3. '=='' → logprob: -12.328897476196289
    4. ' ' → logprob: -13.703897476196289
    5. '==
' → logprob: -14.203897476196289
    6. ')' → logprob: -15.078897476196289
    7. ')==' → logprob: -15.328897476196289
    8. ' =='' → logprob: -15.328897476196289
    9. '```' → logprob: -16.07889747619629
    10. '=="' → logprob: -16.07889747619629

Token 613: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004228697158396244
    2. ' '' → logprob: -5.504228591918945
    3. ''C' → logprob: -9.754228591918945
    4. ''A' → logprob: -10.379228591918945
    5. 'B' → logprob: -10.629228591918945
    6. ''S' → logprob: -11.379228591918945
    7. '"B' → logprob: -11.504228591918945
    8. ' ' → logprob: -12.754228591918945
    9. '('' → logprob: -13.504228591918945
    10. ''D' → logprob: -13.629228591918945

Token 614: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2817765772342682
    2. 'B' → logprob: -1.4067765474319458
    3. ''A' → logprob: -8.906776428222656
    4. ''C' → logprob: -8.906776428222656
    5. '"B' → logprob: -9.531776428222656
    6. 'current' → logprob: -9.781776428222656
    7. '`' → logprob: -10.156776428222656
    8. 'A' → logprob: -10.531776428222656
    9. ' '' → logprob: -10.656776428222656
    10. ' B' → logprob: -10.656776428222656

Token 615: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012513887137174606
    2. 'and' → logprob: -4.387514114379883
    3. ' ' → logprob: -13.012514114379883
    4. ')' → logprob: -14.262514114379883
    5. '            ' → logprob: -14.512514114379883
    6. '	and' → logprob: -15.762514114379883
    7. '        ' → logprob: -16.012514114379883
    8. '==' → logprob: -16.137514114379883
    9. '```' → logprob: -16.512514114379883
    10. '           ' → logprob: -16.637514114379883

Token 616: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018247341737151146
    2. 'and' → logprob: -4.018247127532959
    3. '==' → logprob: -9.893247604370117
    4. ' ==' → logprob: -11.018247604370117
    5. '            ' → logprob: -11.143247604370117
    6. ')' → logprob: -11.893247604370117
    7. '           ' → logprob: -12.768247604370117
    8. '        ' → logprob: -13.143247604370117
    9. ' ' → logprob: -13.643247604370117
    10. '    ' → logprob: -14.268247604370117

Token 617: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.38687339425086975
    2. ' abc' → logprob: -1.1368733644485474
    3. 'abcdef' → logprob: -14.011873245239258
    4. '           ' → logprob: -14.636873245239258
    5. ' ' → logprob: -15.511873245239258
    6. '```' → logprob: -16.011873245239258
    7. '            ' → logprob: -16.386873245239258
    8. '       ' → logprob: -16.636873245239258
    9. 'abcd' → logprob: -16.636873245239258
    10. '               ' → logprob: -16.636873245239258

Token 618: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.002188449027016759
    2. 'progress' → logprob: -6.127188682556152
    3. 'Progress' → logprob: -13.002188682556152
    4. '_PROGRESS' → logprob: -14.127188682556152
    5. '	progress' → logprob: -15.627188682556152
    6. '-progress' → logprob: -16.252187728881836
    7. ' progress' → logprob: -16.252187728881836
    8. '_prog' → logprob: -17.252187728881836
    9. '.progress' → logprob: -17.627187728881836
    10. '```' → logprob: -18.377187728881836

Token 619: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07890906929969788
    2. '==' → logprob: -2.578909158706665
    3. ')' → logprob: -11.578908920288086
    4. ' ' → logprob: -12.203908920288086
    5. ')==' → logprob: -13.203908920288086
    6. ' ' → logprob: -13.578908920288086
    7. '```' → logprob: -15.078908920288086
    8. '+' → logprob: -15.203908920288086
    9. '==
' → logprob: -15.578908920288086
    10. '=' → logprob: -15.578908920288086

Token 620: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006551355589181185
    2. '0' → logprob: -5.506551265716553
    3. ' ' → logprob: -6.006551265716553
    4. 'current' → logprob: -12.506551742553711
    5. 'abc' → logprob: -12.881551742553711
    6. ' current' → logprob: -15.381551742553711
    7. '   ' → logprob: -15.631551742553711
    8. ')' → logprob: -16.38155174255371
    9. ' abc' → logprob: -16.38155174255371
    10. '=' → logprob: -16.94405174255371

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005431781522929668
    2. '0' → logprob: -5.755431652069092
    3. 'abc' → logprob: -6.380431652069092
    4. ' ' → logprob: -7.755431652069092
    5. 'current' → logprob: -9.38043212890625
    6. ' abc' → logprob: -11.00543212890625
    7. '(' → logprob: -11.25543212890625
    8. '(current' → logprob: -12.63043212890625
    9. ' current' → logprob: -13.00543212890625
    10. ' (' → logprob: -13.38043212890625

Token 622: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008750165579840541
    2. ' or' → logprob: -8.000875473022461
    3. '           ' → logprob: -8.125875473022461
    4. '               ' → logprob: -8.500875473022461
    5. ' )' → logprob: -10.375875473022461
    6. '       ' → logprob: -12.500875473022461
    7. 'or' → logprob: -14.125875473022461
    8. ')
' → logprob: -14.500875473022461
    9. '            ' → logprob: -14.500875473022461
    10. '              ' → logprob: -14.500875473022461

Token 623: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002259452361613512
    2. 'or' → logprob: -7.002259254455566
    3. '               ' → logprob: -7.252259254455566
    4. ')' → logprob: -7.752259254455566
    5. '           ' → logprob: -9.002259254455566
    6. '<|end|>' → logprob: -9.877259254455566
    7. '	or' → logprob: -11.002259254455566
    8. '       ' → logprob: -12.627259254455566
    9. '            ' → logprob: -12.627259254455566
    10. '                ' → logprob: -13.377259254455566

Token 624: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02387913130223751
    2. '(current' → logprob: -3.773879051208496
    3. ' (' → logprob: -8.023879051208496
    4. '(' → logprob: -8.398879051208496
    5. '              ' → logprob: -9.898879051208496
    6. 'current' → logprob: -11.773879051208496
    7. '(
' → logprob: -12.023879051208496
    8. '                ' → logprob: -12.648879051208496
    9. '                   ' → logprob: -13.273879051208496
    10. '(c' → logprob: -13.273879051208496

Token 625: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010580805974313989
    2. '(current' → logprob: -9.375105857849121
    3. '              ' → logprob: -11.750105857849121
    4. '(' → logprob: -12.375105857849121
    5. ' (' → logprob: -12.625105857849121
    6. '                ' → logprob: -13.125105857849121
    7. '                   ' → logprob: -13.500105857849121
    8. '           ' → logprob: -14.125105857849121
    9. '(next' → logprob: -14.875105857849121
    10. '       ' → logprob: -15.750105857849121

Token 626: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.016252072528004646
    2. ' (' → logprob: -4.516252040863037
    3. '               ' → logprob: -5.266252040863037
    4. 'current' → logprob: -10.891252517700195
    5. '(' (adapté à ' (') → logprob: -12.766252517700195
    6. '[current' → logprob: -13.141252517700195
    7. '(next' → logprob: -13.641252517700195
    8. ' current' → logprob: -13.766252517700195
    9. '              ' → logprob: -14.516252517700195
    10. '                ' → logprob: -15.266252517700195

Token 627: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4763706624507904
    2. '(current' → logprob: -0.9763706922531128
    3. ' current' → logprob: -6.476370811462402
    4. '               ' → logprob: -7.351370811462402
    5. ' (' → logprob: -9.351370811462402
    6. '[current' → logprob: -11.476370811462402
    7. '           ' → logprob: -12.726370811462402
    8. '$current' → logprob: -13.101370811462402
    9. '                   ' → logprob: -13.601370811462402
    10. ',current' → logprob: -13.726370811462402

Token 628: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.04951435327529907
    2. '_progress' → logprob: -3.0495142936706543
    3. 'character' → logprob: -7.049514293670654
    4. 'progress' → logprob: -9.799514770507812
    5. '_char' → logprob: -13.424514770507812
    6. '_current' → logprob: -14.174514770507812
    7. '_' → logprob: -15.049514770507812
    8. 'Character' → logprob: -15.799514770507812
    9. 'Progress' → logprob: -15.799514770507812
    10. 'current' → logprob: -16.049514770507812

Token 629: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07890025526285172
    2. '==' → logprob: -2.5789003372192383
    3. '```' → logprob: -11.953900337219238
    4. ' ' → logprob: -13.703900337219238
    5. ')' → logprob: -14.578900337219238
    6. ' ' → logprob: -14.953900337219238
    7. ' ==
' → logprob: -15.078900337219238
    8. ')==' → logprob: -15.203900337219238
    9. '==
' → logprob: -15.453900337219238
    10. ']==' → logprob: -15.453900337219238

Token 630: ' '' (ID: 461)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016829170053824782
    2. ' ' → logprob: -6.501682758331299
    3. ''C' → logprob: -9.751683235168457
    4. ''' → logprob: -9.876683235168457
    5. ''A' → logprob: -9.876683235168457
    6. '   ' → logprob: -12.501683235168457
    7. 'C' → logprob: -13.126683235168457
    8. ''s' → logprob: -13.251683235168457
    9. '  ' → logprob: -13.376683235168457
    10. ' '' → logprob: -13.501683235168457

Token 631: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002554380800575018
    2. '2' → logprob: -6.127554416656494
    3. ''C' → logprob: -8.002553939819336
    4. ' C' → logprob: -11.252553939819336
    5. ' ' → logprob: -11.752553939819336
    6. 'c' → logprob: -12.502553939819336
    7. 'A' → logprob: -12.752553939819336
    8. ''' → logprob: -12.877553939819336
    9. '`' → logprob: -14.002553939819336
    10. '0' → logprob: -14.127553939819336

Token 632: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011901638470590115
    2. 'and' → logprob: -4.51190185546875
    3. ' ==' → logprob: -7.63690185546875
    4. ')' → logprob: -9.01190185546875
    5. ''' → logprob: -9.38690185546875
    6. '==' → logprob: -9.63690185546875
    7. '```' → logprob: -10.38690185546875
    8. '           ' → logprob: -10.63690185546875
    9. '            ' → logprob: -11.13690185546875
    10. '`' → logprob: -11.13690185546875

Token 633: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010926030576229095
    2. 'and' → logprob: -4.635926246643066
    3. ' ==' → logprob: -7.010926246643066
    4. '==' → logprob: -8.635926246643066
    5. '           ' → logprob: -10.260926246643066
    6. '            ' → logprob: -10.635926246643066
    7. ')' → logprob: -11.260926246643066
    8. '        ' → logprob: -12.010926246643066
    9. '```' → logprob: -12.260926246643066
    10. ' ' → logprob: -13.260926246643066

Token 634: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.4740980267524719
    2. ' abc' → logprob: -0.9740980267524719
    3. '           ' → logprob: -11.974098205566406
    4. '               ' → logprob: -12.224098205566406
    5. '                   ' → logprob: -12.349098205566406
    6. '            ' → logprob: -13.974098205566406
    7. '
' → logprob: -14.474098205566406
    8. ' ' → logprob: -14.849098205566406
    9. '```' → logprob: -14.849098205566406
    10. 'abcdef' → logprob: -14.974098205566406

Token 635: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.0024773201439529657
    2. 'progress' → logprob: -6.002477169036865
    3. 'Progress' → logprob: -14.127477645874023
    4. '_PROGRESS' → logprob: -15.877477645874023
    5. '_prog' → logprob: -16.127477645874023
    6. '-progress' → logprob: -16.502477645874023
    7. 'import' → logprob: -16.502477645874023
    8. '	progress' → logprob: -16.627477645874023
    9. 'prog' → logprob: -16.752477645874023
    10. '```' → logprob: -16.752477645874023

Token 636: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141927897930145
    2. '==' → logprob: -1.7014192342758179
    3. ')' → logprob: -12.82641887664795
    4. ')==' → logprob: -13.45141887664795
    5. ' ' → logprob: -14.57641887664795
    6. ']==' → logprob: -14.82641887664795
    7. '=' → logprob: -15.32641887664795
    8. '           ' → logprob: -15.57641887664795
    9. '```' → logprob: -15.57641887664795
    10. '==
' → logprob: -16.076419830322266

Token 637: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013908311957493424
    2. ' ' → logprob: -6.6263909339904785
    3. 'abc' → logprob: -9.87639045715332
    4. '   ' → logprob: -12.00139045715332
    5. ' abc' → logprob: -12.75139045715332
    6. '```' → logprob: -14.00139045715332
    7. '  ' → logprob: -14.12639045715332
    8. '       ' → logprob: -14.62639045715332
    9. '    ' → logprob: -14.68889045715332
    10. '           ' → logprob: -15.50139045715332

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -10.250060081481934
    3. 'abc' → logprob: -10.625060081481934
    4. '   ' → logprob: -15.875060081481934
    5. ' abc' → logprob: -16.12506103515625
    6. '```' → logprob: -16.62506103515625
    7. 'current' → logprob: -16.75006103515625
    8. '
' → logprob: -17.25006103515625
    9. '２' → logprob: -17.75006103515625
    10. '(' → logprob: -17.87506103515625

Token 639: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5837545990943909
    2. '       ' → logprob: -0.8337545990943909
    3. ')
' → logprob: -5.833754539489746
    4. '):
' → logprob: -6.333754539489746
    5. '):' → logprob: -6.458754539489746
    6. '           ' → logprob: -6.583754539489746
    7. '   ' → logprob: -9.708754539489746
    8. '               ' → logprob: -10.583754539489746
    9. ' )' → logprob: -11.333754539489746
    10. ')
' → logprob: -11.708754539489746

Token 640: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1145167425274849
    2. ':
' → logprob: -2.8645167350769043
    3. '):' → logprob: -3.6145167350769043
    4. '):
' → logprob: -3.8645167350769043
    5. '       ' → logprob: -5.989516735076904
    6. '           ' → logprob: -8.364517211914062
    7. ')' → logprob: -8.364517211914062
    8. ' and' → logprob: -9.364517211914062
    9. '   ' → logprob: -9.614517211914062
    10. '               ' → logprob: -9.989517211914062

Token 641: ' )
' (ID: 3270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.064974844455719
    2. '):' → logprob: -3.439974784851074
    3. '):
' → logprob: -3.564974784851074
    4. ')' → logprob: -6.314974784851074
    5. ':' → logprob: -7.814974784851074
    6. '           ' → logprob: -9.064974784851074
    7. '   ' → logprob: -9.064974784851074
    8. ':
' → logprob: -9.564974784851074
    9. ' ):
' → logprob: -11.939974784851074
    10. '):
' → logprob: -12.064974784851074

Token 642: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12105950713157654
    2. ':' → logprob: -2.6210594177246094
    3. '):' → logprob: -3.8710594177246094
    4. '               ' → logprob: -4.621059417724609
    5. '           ' → logprob: -4.871059417724609
    6. ')' → logprob: -6.871059417724609
    7. '<|end|>' → logprob: -7.371059417724609
    8. '```' → logprob: -7.496059417724609
    9. '):
' → logprob: -8.74605941772461
    10. ' and' → logprob: -9.74605941772461

Token 643: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3478547930717468
    2. '               ' → logprob: -1.8478548526763916
    3. '       ' → logprob: -2.4728548526763916
    4. 'if' (adapté à ' if') → logprob: -3.0978548526763916
    5. ' if' → logprob: -5.5978546142578125
    6. '                       ' → logprob: -6.9728546142578125
    7. '		' → logprob: -7.0978546142578125
    8. '                   ' → logprob: -7.5978546142578125
    9. '	       ' → logprob: -8.597854614257812
    10. '```' → logprob: -8.847854614257812

Token 644: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01820063218474388
    2. ' is' → logprob: -4.018200397491455
    3. '           ' → logprob: -10.268200874328613
    4. '   ' → logprob: -11.768200874328613
    5. '               ' → logprob: -12.268200874328613
    6. ' ' → logprob: -14.143200874328613
    7. '       ' → logprob: -14.518200874328613
    8. '                   ' → logprob: -14.518200874328613
    9. '	is' → logprob: -15.018200874328613
    10. '    ' → logprob: -15.143200874328613

Token 645: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -2.4987974029500037e-05
    2. 'valid' → logprob: -10.625024795532227
    3. '_selected' → logprob: -15.000024795532227
    4. '_' → logprob: -16.625024795532227
    5. 'Valid' → logprob: -16.625024795532227
    6. ' valid' → logprob: -16.875024795532227
    7. '	valid' → logprob: -17.250024795532227
    8. '_VALID' → logprob: -17.375024795532227
    9. '           ' → logprob: -17.750024795532227
    10. '_true' → logprob: -17.750024795532227

Token 646: '_selection' (ID: 56289)
  Prédit: '_selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -0.0010517460759729147
    2. 'selection' → logprob: -6.876051902770996
    3. 'Selection' → logprob: -12.376051902770996
    4. '
' → logprob: -12.876051902770996
    5. '_SELECTION' → logprob: -13.251051902770996
    6. '   ' → logprob: -13.376051902770996
    7. ' selection' → logprob: -13.501051902770996
    8. '_se' → logprob: -13.876051902770996
    9. '_choice' → logprob: -13.876051902770996
    10. ')' → logprob: -14.376051902770996

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021625787019729614
    2. ':
' → logprob: -3.8966257572174072
    3. '               ' → logprob: -6.896625995635986
    4. '           ' → logprob: -10.646625518798828
    5. '):' → logprob: -11.021625518798828
    6. '):
' → logprob: -11.646625518798828
    7. '[' → logprob: -12.271625518798828
    8. ')' → logprob: -12.521625518798828
    9. ',' → logprob: -12.646625518798828
    10. '       ' → logprob: -12.771625518798828

Token 648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038407891406677663
    2. ' dp' → logprob: -9.125384330749512
    3. 'dp' → logprob: -9.125384330749512
    4. '           ' → logprob: -9.625384330749512
    5. '       ' → logprob: -9.875384330749512
    6. '                
' → logprob: -11.875384330749512
    7. '              ' → logprob: -11.875384330749512
    8. '                   ' → logprob: -11.875384330749512
    9. '```' → logprob: -11.875384330749512
    10. '   ' → logprob: -12.375384330749512

Token 649: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.4028426706790924
    2. ' dp' → logprob: -1.15284264087677
    3. '               ' → logprob: -4.4028425216674805
    4. '                   ' → logprob: -5.6528425216674805
    5. '	dp' → logprob: -10.65284252166748
    6. '           ' → logprob: -10.90284252166748
    7. '                       ' → logprob: -11.15284252166748
    8. '   ' → logprob: -11.52784252166748
    9. '(dp' → logprob: -11.90284252166748
    10. '                ' → logprob: -12.15284252166748

Token 650: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.875001907348633
    3. '[_' → logprob: -15.625001907348633
    4. '_TABLE' → logprob: -16.250001907348633
    5. 'table' → logprob: -16.500001907348633
    6. 'Table' → logprob: -16.625001907348633
    7. '_tab' → logprob: -16.750001907348633
    8. '_Table' → logprob: -17.250001907348633
    9. '<table' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.375001907348633

Token 651: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.259079363080673e-05
    2. 'current' → logprob: -11.375012397766113
    3. ' [' → logprob: -14.750012397766113
    4. '[' → logprob: -14.875012397766113
    5. '[curr' → logprob: -16.00001335144043
    6. '[cur' → logprob: -16.87501335144043
    7. 'dp' → logprob: -17.00001335144043
    8. ' current' → logprob: -17.62501335144043
    9. '   ' → logprob: -17.87501335144043
    10. '[
' → logprob: -18.50001335144043

Token 652: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006527475197799504
    2. '+' → logprob: -8.625652313232422
    3. '_current' → logprob: -8.625652313232422
    4. '[current' → logprob: -9.000652313232422
    5. 'current' → logprob: -9.125652313232422
    6. 'index' → logprob: -10.625652313232422
    7. '```' → logprob: -10.875652313232422
    8. '][' → logprob: -11.750652313232422
    9. '   ' → logprob: -12.750652313232422
    10. 'Index' → logprob: -13.500652313232422

Token 653: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5249700546264648
    2. ' +' → logprob: -0.8999700546264648
    3. '][' → logprob: -6.524970054626465
    4. '[current' → logprob: -8.149970054626465
    5. '   ' → logprob: -10.399970054626465
    6. '[' → logprob: -10.399970054626465
    7. '[next' → logprob: -12.024970054626465
    8. '＋' → logprob: -12.149970054626465
    9. '```' → logprob: -12.774970054626465
    10. '[token' → logprob: -12.899970054626465

Token 654: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -14.500041007995605
    4. '   ' → logprob: -16.000041961669922
    5. '
' → logprob: -16.250041961669922
    6. '][' → logprob: -16.437541961669922
    7. ',' → logprob: -17.312541961669922
    8. ']' → logprob: -17.750041961669922
    9. '{' → logprob: -17.937541961669922
    10. '１' → logprob: -18.312541961669922

Token 655: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.349075556499884e-05
    2. ' ' → logprob: -9.7500638961792
    3. '
' → logprob: -13.6250638961792
    4. '```' → logprob: -14.0625638961792
    5. 'current' → logprob: -14.4375638961792
    6. '   ' → logprob: -14.5625638961792
    7. '[' → logprob: -15.5000638961792
    8. '][' → logprob: -16.375062942504883
    9. '3' → logprob: -16.437562942504883
    10. ']' → logprob: -16.500062942504883

Token 656: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00026979928952641785
    2. '[' → logprob: -8.375269889831543
    3. ']' → logprob: -10.750269889831543
    4. ' ][' → logprob: -12.125269889831543
    5. '[current' → logprob: -12.625269889831543
    6. '       ' → logprob: -13.375269889831543
    7. '[next' → logprob: -14.125269889831543
    8. '```' → logprob: -14.125269889831543
    9. '}[' → logprob: -14.250269889831543
    10. ')[' → logprob: -14.250269889831543

Token 657: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.0013013073476031423
    2. 'current' → logprob: -6.876301288604736
    3. ' abc' → logprob: -8.751301765441895
    4. 'dp' → logprob: -9.876301765441895
    5. '(' → logprob: -10.626301765441895
    6. '[' → logprob: -11.001301765441895
    7. 'abcdef' → logprob: -12.126301765441895
    8. '   ' → logprob: -12.876301765441895
    9. '```' → logprob: -13.001301765441895
    10. ' current' → logprob: -13.626301765441895

Token 658: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.0006334475474432111
    2. 'progress' → logprob: -7.375633239746094
    3. 'Progress' → logprob: -13.125633239746094
    4. '```' → logprob: -13.500633239746094
    5. '_PROGRESS' → logprob: -14.125633239746094
    6. '	progress' → logprob: -14.625633239746094
    7. '+' → logprob: -14.625633239746094
    8. '_prog' → logprob: -15.125633239746094
    9. ' прог' → logprob: -15.500633239746094
    10. '_state' → logprob: -15.875633239746094

Token 659: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020552517846226692
    2. ' +' → logprob: -3.895552635192871
    3. '+
' → logprob: -12.770552635192871
    4. '[' → logprob: -13.145552635192871
    5. ']' → logprob: -13.270552635192871
    6. '   ' → logprob: -13.895552635192871
    7. '+[' → logprob: -14.395552635192871
    8. '+]' → logprob: -14.645552635192871
    9. ']+' → logprob: -14.770552635192871
    10. '][' → logprob: -14.770552635192871

Token 660: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -18.875
    5. ']' → logprob: -20.375
    6. '`' → logprob: -20.5
    7. '
' → logprob: -20.875
    8. '<|end|>' → logprob: -21.4375
    9. '``' → logprob: -21.625
    10. '           ' → logprob: -22.1875

Token 661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -16.125
    4. '
' → logprob: -18.0
    5. '   ' → logprob: -18.375
    6. '' → logprob: -18.8125
    7. '`' → logprob: -19.0625
    8. 'def' → logprob: -19.0625
    9. '+' → logprob: -19.3125
    10. 'token' → logprob: -19.375

Token 662: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008619774132966995
    2. ']+=' → logprob: -4.758619785308838
    3. '           ' → logprob: -13.25861930847168
    4. '+=' → logprob: -14.13361930847168
    5. '```' → logprob: -14.13361930847168
    6. ' ]' → logprob: -14.25861930847168
    7. '   ' → logprob: -15.13361930847168
    8. ']+' → logprob: -15.38361930847168
    9. '       ' → logprob: -15.38361930847168
    10. ']=' → logprob: -15.75861930847168

Token 663: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.049503348767757416
    2. ' +=' → logprob: -3.0495033264160156
    3. ']+=' → logprob: -7.424503326416016
    4. '           ' → logprob: -8.549503326416016
    5. '               ' → logprob: -9.799503326416016
    6. '```' → logprob: -10.799503326416016
    7. '                   ' → logprob: -11.549503326416016
    8. '            ' → logprob: -11.924503326416016
    9. '=' → logprob: -12.049503326416016
    10. '[' → logprob: -12.424503326416016

Token 664: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019294669618830085
    2. ' dp' → logprob: -6.25192928314209
    3. '(dp' → logprob: -14.00192928314209
    4. '	dp' → logprob: -19.001930236816406
    5. '_dp' → logprob: -19.876930236816406
    6. '```' → logprob: -20.126930236816406
    7. '           ' → logprob: -21.251930236816406
    8. '   ' → logprob: -21.501930236816406
    9. '.dp' → logprob: -22.001930236816406
    10. '
' → logprob: -22.251930236816406

Token 665: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.3915141355246305e-05
    2. '[current' → logprob: -11.37502384185791
    3. 'table' → logprob: -12.25002384185791
    4. 'Table' → logprob: -13.00002384185791
    5. '_TABLE' → logprob: -13.12502384185791
    6. 'current' → logprob: -13.87502384185791
    7. '[_' → logprob: -14.00002384185791
    8. '```' → logprob: -14.25002384185791
    9. '_Table' → logprob: -15.37502384185791
    10. 'dp' → logprob: -16.000024795532227

Token 666: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.1888679839321412e-05
    2. 'current' → logprob: -10.750021934509277
    3. '```' → logprob: -15.250021934509277
    4. ' current' → logprob: -17.37502098083496
    5. '(current' → logprob: -17.50002098083496
    6. '_current' → logprob: -18.00002098083496
    7. '[' → logprob: -18.12502098083496
    8. '[cur' → logprob: -18.12502098083496
    9. '	current' → logprob: -18.37502098083496
    10. '$current' → logprob: -19.12502098083496

Token 667: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.3460400104522705
    2. 'current' → logprob: -1.3460400104522705
    3. '[current' → logprob: -3.5960400104522705
    4. '_current' → logprob: -5.971039772033691
    5. 'index' → logprob: -6.221039772033691
    6. '```' → logprob: -8.971039772033691
    7. '_character' → logprob: -9.596039772033691
    8. 'character' → logprob: -10.971039772033691
    9. '[index' → logprob: -10.971039772033691
    10. '_table' → logprob: -11.471039772033691

Token 668: '][' (ID: 2696)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00022022522171027958
    2. 'current' → logprob: -8.50022029876709
    3. '[' → logprob: -11.62522029876709
    4. ' current' → logprob: -12.62522029876709
    5. '```' → logprob: -13.50022029876709
    6. '_current' → logprob: -14.00022029876709
    7. '[curr' → logprob: -14.62522029876709
    8. '][' → logprob: -14.75022029876709
    9. ' [' → logprob: -14.75022029876709
    10. '[cur' → logprob: -15.50022029876709

Token 669: 'abc' (ID: 26682)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -6.630610641877865e-06
    2. ' current' → logprob: -12.000006675720215
    3. '[current' → logprob: -15.250006675720215
    4. '$current' → logprob: -16.5000057220459
    5. 'abc' → logprob: -17.0000057220459
    6. '(current' → logprob: -17.1250057220459
    7. '```' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.6250057220459
    9. '.current' → logprob: -18.0000057220459
    10. '	current' → logprob: -18.1250057220459

Token 670: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.04316383972764015
    2. '_index' → logprob: -3.418163776397705
    3. 'progress' → logprob: -5.668163776397705
    4. 'current' → logprob: -5.668163776397705
    5. '[current' → logprob: -6.918163776397705
    6. '_current' → logprob: -7.293163776397705
    7. '```' → logprob: -8.293164253234863
    8. 'index' → logprob: -8.668164253234863
    9. 'Progress' → logprob: -9.418164253234863
    10. '][' → logprob: -9.793164253234863

Token 671: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17716079950332642
    2. ' *' → logprob: -2.0521607398986816
    3. '<|end|>' → logprob: -3.9271607398986816
    4. ' ]' → logprob: -4.927160739898682
    5. '<|end|>' → logprob: -6.177160739898682
    6. '               ' → logprob: -6.427160739898682
    7. ']%' → logprob: -7.302160739898682
    8. '*' → logprob: -7.552160739898682
    9. '[' → logprob: -8.17716121673584
    10. '[token' → logprob: -8.42716121673584

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15753255784511566
    2. '%' → logprob: -2.1575324535369873
    3. '<|end|>' → logprob: -4.782532691955566
    4. ' %' → logprob: -4.907532691955566
    5. '```' → logprob: -5.032532691955566
    6. ')' → logprob: -6.657532691955566
    7. '                   ' → logprob: -7.032532691955566
    8. '%=' → logprob: -7.032532691955566
    9. ')%' → logprob: -7.032532691955566
    10. '                ' → logprob: -7.282532691955566

Token 673: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.43243470788002014
    2. ' dp' → logprob: -1.0574346780776978
    3. '               ' → logprob: -6.432434558868408
    4. '```' → logprob: -6.557434558868408
    5. '(dp' → logprob: -8.432435035705566
    6. '_dp' → logprob: -8.682435035705566
    7. '[' → logprob: -8.807435035705566
    8. '	dp' → logprob: -10.057435035705566
    9. '.dp' → logprob: -10.807435035705566
    10. '[
' → logprob: -11.182435035705566

Token 674: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -14.000001907348633
    3. '[_' → logprob: -14.250001907348633
    4. '_TABLE' → logprob: -15.375001907348633
    5. '_tab' → logprob: -16.500001907348633
    6. '_code' → logprob: -16.500001907348633
    7. 'table' → logprob: -16.625001907348633
    8. 'Table' → logprob: -16.750001907348633
    9. '\' → logprob: -17.250001907348633
    10. '_' → logprob: -17.500001907348633

Token 675: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.8624639324116288e-06
    2. '_current' → logprob: -13.875001907348633
    3. '```' → logprob: -14.625001907348633
    4. 'current' → logprob: -15.625001907348633
    5. '$current' → logprob: -17.250001907348633
    6. '[' → logprob: -17.250001907348633
    7. ',current' → logprob: -17.375001907348633
    8. ' [' → logprob: -17.750001907348633
    9. '(current' → logprob: -18.125001907348633
    10. '[next' → logprob: -18.125001907348633

Token 676: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0010257817339152098
    2. '+' → logprob: -7.751025676727295
    3. 'current' → logprob: -8.251026153564453
    4. 'index' → logprob: -8.376026153564453
    5. '_current' → logprob: -9.376026153564453
    6. '```' → logprob: -12.126026153564453
    7. 'Index' → logprob: -12.501026153564453
    8. '_INDEX' → logprob: -13.126026153564453
    9. ' +' → logprob: -13.251026153564453
    10. '[current' → logprob: -13.626026153564453

Token 677: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693157434463501
    2. ' +' → logprob: -0.693157434463501
    3. '][' → logprob: -11.568157196044922
    4. '[' → logprob: -15.318157196044922
    5. '[current' → logprob: -15.568157196044922
    6. '＋' → logprob: -15.693157196044922
    7. '+[' → logprob: -16.318157196044922
    8. '   ' → logprob: -16.568157196044922
    9. '```' → logprob: -16.818157196044922
    10. '[next' → logprob: -17.568157196044922

Token 678: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006806228775531054
    2. 'current' → logprob: -7.500680446624756
    3. ' ' → logprob: -9.500680923461914
    4. '```' → logprob: -10.875680923461914
    5. 'MOD' → logprob: -11.875680923461914
    6. '[current' → logprob: -12.125680923461914
    7. ' current' → logprob: -12.500680923461914
    8. '+' → logprob: -12.500680923461914
    9. '[' → logprob: -13.125680923461914
    10. '`' → logprob: -13.750680923461914

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.930552313453518e-05
    2. 'current' → logprob: -10.250049591064453
    3. ' ' → logprob: -11.625049591064453
    4. '```' → logprob: -13.937549591064453
    5. 'abc' → logprob: -14.250049591064453
    6. '+' → logprob: -14.625049591064453
    7. '0' → logprob: -14.875049591064453
    8. '   ' → logprob: -15.375049591064453
    9. 'MOD' → logprob: -15.562549591064453
    10. ' current' → logprob: -15.687549591064453

Token 680: '][' (ID: 2696)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0032534082420170307
    2. '][' → logprob: -5.75325345993042
    3. '[' → logprob: -10.503252983093262
    4. ')[' → logprob: -11.128252983093262
    5. '[cur' → logprob: -11.753252983093262
    6. '}[' → logprob: -11.753252983093262
    7. '[curr' → logprob: -12.003252983093262
    8. '```' → logprob: -12.753252983093262
    9. '[next' → logprob: -12.878252983093262
    10. 'current' → logprob: -13.878252983093262

Token 681: 'abc' (ID: 26682)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0002661039761733264
    2. 'abc' → logprob: -8.250266075134277
    3. ' current' → logprob: -13.250266075134277
    4. '[current' → logprob: -13.375266075134277
    5. '(current' → logprob: -14.500266075134277
    6. '+' → logprob: -15.250266075134277
    7. '_current' → logprob: -15.500266075134277
    8. '```' → logprob: -15.625266075134277
    9. '$current' → logprob: -16.250267028808594
    10. '[' → logprob: -16.875267028808594

Token 682: '_progress' (ID: 60853)
  Prédit: '_progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_progress' → logprob: -0.0029419248457998037
    2. '+' → logprob: -5.877942085266113
    3. 'progress' → logprob: -9.252942085266113
    4. 'Progress' → logprob: -10.877942085266113
    5. ' +' → logprob: -11.377942085266113
    6. '_PROGRESS' → logprob: -13.002942085266113
    7. '```' → logprob: -13.127942085266113
    8. '_index' → logprob: -13.252942085266113
    9. '_current' → logprob: -13.627942085266113
    10. '_plus' → logprob: -13.877942085266113

Token 683: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00414523808285594
    2. ' +' → logprob: -5.50414514541626
    3. '[' → logprob: -10.254145622253418
    4. '][' → logprob: -11.129145622253418
    5. '[current' → logprob: -11.754145622253418
    6. ']+' → logprob: -12.754145622253418
    7. ']' → logprob: -13.254145622253418
    8. 'current' → logprob: -13.879145622253418
    9. '```' → logprob: -13.879145622253418
    10. '+[' → logprob: -14.879145622253418

Token 684: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001721934968372807
    2. ' ' → logprob: -9.00017261505127
    3. 'abc' → logprob: -10.50017261505127
    4. '```' → logprob: -11.75017261505127
    5. 'current' → logprob: -12.50017261505127
    6. '   ' → logprob: -12.62517261505127
    7. '2' → logprob: -13.62517261505127
    8. ' abc' → logprob: -14.00017261505127
    9. '`' → logprob: -14.12517261505127
    10. '0' → logprob: -14.50017261505127

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -13.75000286102295
    3. 'abc' → logprob: -14.25000286102295
    4. '
' → logprob: -15.50000286102295
    5. ' ' → logprob: -15.87500286102295
    6. '   ' → logprob: -16.375001907348633
    7. '2' → logprob: -16.562501907348633
    8. '`' → logprob: -16.687501907348633
    9. '0' → logprob: -16.875001907348633
    10. '+' → logprob: -17.062501907348633

Token 686: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002459129551425576
    2. ']%' → logprob: -6.8774590492248535
    3. ')' → logprob: -7.2524590492248535
    4. '%=' → logprob: -7.8774590492248535
    5. ' %=' → logprob: -8.752459526062012
    6. '%' → logprob: -8.877459526062012
    7. '```' → logprob: -10.877459526062012
    8. ')%' → logprob: -11.377459526062012
    9. ' ]' → logprob: -12.377459526062012
    10. '}' → logprob: -13.752459526062012

Token 687: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0710664838552475
    2. ' %=' → logprob: -2.696066379547119
    3. '%' → logprob: -6.821066379547119
    4. ')' → logprob: -11.071066856384277
    5. ')%' → logprob: -11.446066856384277
    6. '```' → logprob: -11.571066856384277
    7. ' %' → logprob: -14.196066856384277
    8. '=' → logprob: -14.321066856384277
    9. ']%' → logprob: -15.071066856384277
    10. '   ' → logprob: -15.071066856384277

Token 688: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001234428636962548
    2. ' MOD' → logprob: -9.000123023986816
    3. '_MOD' → logprob: -20.250123977661133
    4. '```' → logprob: -20.500123977661133
    5. 'MO' → logprob: -22.250123977661133
    6. '.MOD' → logprob: -22.375123977661133
    7. '`' → logprob: -23.250123977661133
    8. '   ' → logprob: -25.500123977661133
    9. 'MODE' → logprob: -25.750123977661133
    10. 'MD' → logprob: -25.875123977661133

Token 689: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.00044008632539771497
    2. 'O' → logprob: -8.625439643859863
    3. 'MOD' → logprob: -8.625439643859863
    4. 'UL' → logprob: -9.750439643859863
    5. '```' → logprob: -12.500439643859863
    6. 'UTO' → logprob: -13.000439643859863
    7. 'ULE' → logprob: -13.250439643859863
    8. 'ERO' → logprob: -13.250439643859863
    9. 'US' → logprob: -13.500439643859863
    10. 'OL' → logprob: -13.625439643859863

Token 690: '_DIV' (ID: 83128)
  Prédit: '_DIV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DIV' → logprob: -0.007436366286128759
    2. 'DIV' → logprob: -5.132436275482178
    3. '_MOD' → logprob: -6.882436275482178
    4. 'div' → logprob: -8.257436752319336
    5. 'MOD' → logprob: -8.757436752319336
    6. '```' → logprob: -10.757436752319336
    7. '_div' → logprob: -11.132436752319336
    8. 'Div' → logprob: -11.257436752319336
    9. '   ' → logprob: -12.257436752319336
    10. '\' → logprob: -13.132436752319336

Token 691: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.07833550125360489
    2. 'SOR' → logprob: -2.9533355236053467
    3. 'OR' → logprob: -4.453335285186768
    4. 'ISIBLE' → logprob: -5.453335285186768
    5. 'ORS' → logprob: -6.078335285186768
    6. 'MOD' → logprob: -6.453335285186768
    7. 'OD' → logprob: -7.078335285186768
    8. 'UL' → logprob: -7.703335285186768
    9. 'OS' → logprob: -8.078335762023926
    10. 'S' → logprob: -8.328335762023926

Token 692: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -1.981667537620524e-06
    2. 'O' → logprob: -14.500001907348633
    3. 'SOR' → logprob: -14.750001907348633
    4. '_OR' → logprob: -15.375001907348633
    5. 'TOR' → logprob: -15.625001907348633
    6. 'OD' → logprob: -15.750001907348633
    7. 'MOD' → logprob: -16.125001907348633
    8. 'JOR' → logprob: -16.875001907348633
    9. 'ROR' → logprob: -16.875001907348633
    10. 'ORM' → logprob: -17.000001907348633

Token 693: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08009780943393707
    2. 'result' → logprob: -2.5800979137420654
    3. 'answer' → logprob: -6.955097675323486
    4. '```' → logprob: -8.955098152160645
    5. '
' → logprob: -9.955098152160645
    6. ')' → logprob: -10.080098152160645
    7. ')
' → logprob: -11.705098152160645
    8. 'return' → logprob: -11.705098152160645
    9. '  
' → logprob: -12.330098152160645
    10. '    
' → logprob: -13.330098152160645

Token 695: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. 'result' → logprob: -13.00000286102295
    3. 'answer' → logprob: -15.37500286102295
    4. ' print' → logprob: -17.250001907348633
    5. '```' → logprob: -18.625001907348633
    6. '
' → logprob: -20.625001907348633
    7. 'ans' → logprob: -20.750001907348633
    8. 'output' → logprob: -20.750001907348633
    9. 'total' → logprob: -21.625001907348633
    10. '#print' → logprob: -21.875001907348633

Token 696: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.250001907348633
    3. ' print' → logprob: -18.750001907348633
    4. '
' → logprob: -18.875001907348633
    5. '``' → logprob: -19.500001907348633
    6. '(print' → logprob: -22.125001907348633
    7. 'printf' → logprob: -23.500001907348633
    8. '.print' → logprob: -24.000001907348633
    9. '`' → logprob: -24.250001907348633
    10. 'println' → logprob: -24.500001907348633

Token 697: ' number' (ID: 2086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -16.75
    4. '
' → logprob: -16.875
    5. '``' → logprob: -22.125
    6. '(print' → logprob: -23.125
    7. 'printf' → logprob: -23.375
    8. '    
' → logprob: -23.875
    9. '#print' → logprob: -24.75
    10. '
' → logprob: -24.875

Token 698: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4533359706401825
    2. '_of' → logprob: -1.5783360004425049
    3. '=' → logprob: -2.453336000442505
    4. '_' → logprob: -3.328336000442505
    5. ' =' → logprob: -3.703336000442505
    6. 'of' → logprob: -5.828335762023926
    7. '_print' → logprob: -6.203335762023926
    8. '   ' → logprob: -6.203335762023926
    9. '(print' → logprob: -7.078335762023926
    10. '```' → logprob: -7.203335762023926

Token 699: ' ways' (ID: 6984)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5043586492538452
    2. 'ways' → logprob: -1.1293586492538452
    3. '_' → logprob: -3.0043587684631348
    4. 'dp' → logprob: -4.254358768463135
    5. ' ways' → logprob: -4.879358768463135
    6. '```' → logprob: -7.504358768463135
    7. ' print' → logprob: -8.004358291625977
    8. 's' → logprob: -9.379358291625977
    9. '_print' → logprob: -9.754358291625977
    10. 'characters' → logprob: -10.254358291625977

Token 700: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0206720617134124e-05
    2. '```' → logprob: -11.75001049041748
    3. '(print' → logprob: -13.12501049041748
    4. ' print' → logprob: -15.87501049041748
    5. '(' → logprob: -16.750009536743164
    6. '``' → logprob: -17.750009536743164
    7. '
' → logprob: -18.750009536743164
    8. '.print' → logprob: -19.250009536743164
    9. ')' → logprob: -19.500009536743164
    10. '#print' → logprob: -20.000009536743164

Token 701: ' select' (ID: 4736)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. ' print' → logprob: -11.000017166137695
    3. 'select' → logprob: -17.625017166137695
    4. '```' → logprob: -19.500017166137695
    5. 'produce' → logprob: -20.125017166137695
    6. '
' → logprob: -20.125017166137695
    7. 'output' → logprob: -20.375017166137695
    8. '#print' → logprob: -21.125017166137695
    9. '_print' → logprob: -21.750017166137695
    10. 'pr' → logprob: -22.250017166137695

Token 702: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00746571272611618
    2. 'print' → logprob: -5.257465839385986
    3. '(dp' → logprob: -6.132465839385986
    4. ' dp' → logprob: -10.882465362548828
    5. 'for' → logprob: -11.007465362548828
    6. '```' → logprob: -11.382465362548828
    7. '_dp' → logprob: -12.757465362548828
    8. 'to' → logprob: -12.882465362548828
    9. 'abc' → logprob: -13.257465362548828
    10. '3' → logprob: -13.757465362548828

Token 703: 'A' (ID: 32)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.35163989663124084
    2. '"' → logprob: -1.3516398668289185
    3. 'input' → logprob: -3.851639986038208
    4. 'print' → logprob: -4.976639747619629
    5. ''' → logprob: -5.726639747619629
    6. '"A' → logprob: -6.226639747619629
    7. 'dp' → logprob: -6.601639747619629
    8. '```' → logprob: -6.976639747619629
    9. 'A' → logprob: -7.101639747619629
    10. 'abc' → logprob: -7.476639747619629

Token 704: '",' (ID: 672)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009815588593482971
    2. 'BC' → logprob: -4.634815692901611
    3. ' B' → logprob: -10.259815216064453
    4. '"B' → logprob: -11.384815216064453
    5. 'BCD' → logprob: -11.509815216064453
    6. 'b' → logprob: -14.384815216064453
    7. 'BCC' → logprob: -14.634815216064453
    8. ''' → logprob: -14.884815216064453
    9. 'Ｂ' → logprob: -14.884815216064453
    10. '"' → logprob: -15.009815216064453

Token 705: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.395758718252182
    2. '"' → logprob: -1.1457587480545044
    3. 'B' → logprob: -5.520758628845215
    4. ' "' → logprob: -6.020758628845215
    5. ''' → logprob: -6.270758628845215
    6. '#' → logprob: -8.645758628845215
    7. ''b' → logprob: -9.520758628845215
    8. '   ' → logprob: -9.520758628845215
    9. ' ' → logprob: -9.895758628845215
    10. '`' → logprob: -10.270758628845215

Token 706: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00030924470047466457
    2. '"B' → logprob: -8.625308990478516
    3. ''' → logprob: -9.125308990478516
    4. '"' → logprob: -11.625308990478516
    5. ' B' → logprob: -12.000308990478516
    6. '`' → logprob: -13.750308990478516
    7. '
' → logprob: -14.125308990478516
    8. 'b' → logprob: -14.125308990478516
    9. '```' → logprob: -14.125308990478516
    10. '#' → logprob: -14.250308990478516

Token 707: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6728056073188782
    2. '[' → logprob: -1.9228055477142334
    3. '",' → logprob: -2.4228055477142334
    4. '"' → logprob: -3.0478055477142334
    5. 'C' → logprob: -3.1728055477142334
    6. ']' → logprob: -3.1728055477142334
    7. '")' → logprob: -3.2978055477142334
    8. ')' → logprob: -3.4228055477142334
    9. '```' → logprob: -3.6728055477142334
    10. '
' → logprob: -5.9228057861328125

Token 708: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.7629591822624207
    2. '#' → logprob: -1.0129592418670654
    3. '"' → logprob: -2.0129592418670654
    4. 'and' → logprob: -3.3879592418670654
    5. ''C' → logprob: -6.887959003448486
    6. ' and' → logprob: -7.012959003448486
    7. '#,' → logprob: -8.012959480285645
    8. '#"' → logprob: -8.387959480285645
    9. ' "' → logprob: -8.512959480285645
    10. ' #' → logprob: -8.887959480285645

Token 709: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004149391781538725
    2. 'and' → logprob: -5.754149436950684
    3. '"C' → logprob: -7.379149436950684
    4. ''C' → logprob: -8.129149436950684
    5. ' and' → logprob: -10.754149436950684
    6. '"' → logprob: -10.754149436950684
    7. '`' → logprob: -12.879149436950684
    8. 'or' → logprob: -13.254149436950684
    9. ' C' → logprob: -13.379149436950684
    10. ''' → logprob: -13.504149436950684

Token 710: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5359565019607544
    2. '[' → logprob: -2.035956382751465
    3. ' at' → logprob: -2.285956382751465
    4. ',' → logprob: -3.285956382751465
    5. '[-' → logprob: -3.660956382751465
    6. ']' → logprob: -3.910956382751465
    7. 'from' → logprob: -4.285956382751465
    8. ' in' → logprob: -4.535956382751465
    9. '[current' → logprob: -4.535956382751465
    10. '[state' → logprob: -5.035956382751465

Token 711: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.125
    3. '```' → logprob: -16.0
    4. ' print' → logprob: -18.125
    5. '(print' → logprob: -18.75
    6. '``' → logprob: -20.25
    7. 'for' → logprob: -20.375
    8. '#print' → logprob: -20.375
    9. ')
' → logprob: -20.875
    10. '.print' → logprob: -21.0

Token 712: ' order' (ID: 2569)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005881629418581724
    2. 'MOD' → logprob: -5.3808817863464355
    3. 'total' → logprob: -7.0058817863464355
    4. 'print' → logprob: -8.505881309509277
    5. 'the' → logprob: -9.005881309509277
    6. 'mod' → logprob: -11.755881309509277
    7. 'answer' → logprob: -12.255881309509277
    8. 'full' → logprob: -13.005881309509277
    9. '```' → logprob: -13.130881309509277
    10. ' dp' → logprob: -13.130881309509277

Token 713: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. ' print' → logprob: -17.625
    4. '
' → logprob: -18.375
    5. '``' → logprob: -21.0
    6. '(print' → logprob: -21.75
    7. '#print' → logprob: -22.125
    8. '.print' → logprob: -22.625
    9. 'printf' → logprob: -22.875
    10. '_print' → logprob: -24.125

Token 714: ' possibly' (ID: 14836)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.250000953674316
    3. ' print' → logprob: -14.500000953674316
    4. '```' → logprob: -17.375001907348633
    5. ')' → logprob: -22.500001907348633
    6. '``' → logprob: -22.875001907348633
    7. '

' → logprob: -22.875001907348633
    8. '   ' → logprob: -23.125001907348633
    9. '
' → logprob: -23.500001907348633
    10. '(print' → logprob: -23.625001907348633

Token 715: ' using' (ID: 2360)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012815415393561125
    2. 'with' → logprob: -6.87628173828125
    3. 'multip' → logprob: -9.62628173828125
    4. 'ending' → logprob: -10.25128173828125
    5. 'from' → logprob: -10.62628173828125
    6. 'cont' → logprob: -10.75128173828125
    7. '
' → logprob: -10.75128173828125
    8. '```' → logprob: -11.12628173828125
    9. 'including' → logprob: -11.25128173828125
    10. '#' → logprob: -11.50128173828125

Token 716: ' '?' (ID: 73818)
  Prédit: ''?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''?' → logprob: -0.4669429659843445
    2. ''' → logprob: -1.2169430255889893
    3. 'wild' → logprob: -3.9669430255889893
    4. '?' → logprob: -4.46694278717041
    5. 'question' → logprob: -4.46694278717041
    6. 'multip' → logprob: -4.59194278717041
    7. 'characters' → logprob: -4.71694278717041
    8. ''*' → logprob: -5.21694278717041
    9. 'the' → logprob: -5.46694278717041
    10. '`' → logprob: -6.09194278717041

Token 717: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019603055261541158
    2. '
' → logprob: -8.87519645690918
    3. ')' → logprob: -10.37519645690918
    4. ')
' → logprob: -10.87519645690918
    5. ' print' → logprob: -12.75019645690918
    6. ']' → logprob: -13.37519645690918
    7. '```' → logprob: -15.37519645690918
    8. ']
' → logprob: -15.50019645690918
    9. '[' → logprob: -15.75019645690918
    10. 'result' → logprob: -15.87519645690918

Token 718: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.250001907348633
    3. ' print' → logprob: -17.125001907348633
    4. '
' → logprob: -17.875001907348633
    5. '``' → logprob: -18.875001907348633
    6. '(print' → logprob: -22.750001907348633
    7. '.print' → logprob: -23.250001907348633
    8. '#print' → logprob: -23.625001907348633
    9. '  
' → logprob: -23.875001907348633
    10. 'printf' → logprob: -24.125001907348633

Token 719: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.625003814697266
    3. 'dp' → logprob: -15.750003814697266
    4. ' (' → logprob: -18.625003814697266
    5. '	dp' → logprob: -19.875003814697266
    6. '((' → logprob: -19.875003814697266
    7. '(
' → logprob: -20.000003814697266
    8. ' dp' → logprob: -20.125003814697266
    9. '(df' → logprob: -21.000003814697266
    10. '(dx' → logprob: -21.000003814697266

Token 720: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.9361264946837764e-07
    2. '_TABLE' → logprob: -17.125
    3. 'table' → logprob: -17.375
    4. 'print' → logprob: -18.0
    5. '_tab' → logprob: -19.125
    6. 'Table' → logprob: -19.5
    7. 'dp' → logprob: -19.625
    8. '_tables' → logprob: -19.875
    9. '_t' → logprob: -20.0
    10. '```' → logprob: -20.25

Token 721: '[number' (ID: 138194)
  Prédit: '[number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[number' → logprob: -0.0001495484757469967
    2. '[-' → logprob: -8.875149726867676
    3. '[current' → logprob: -12.000149726867676
    4. '[len' → logprob: -13.250149726867676
    5. 'number' → logprob: -13.625149726867676
    6. '(number' → logprob: -15.500149726867676
    7. '[input' → logprob: -16.25014877319336
    8. '[' → logprob: -16.87514877319336
    9. '[length' → logprob: -16.87514877319336
    10. '[num' → logprob: -17.25014877319336

Token 722: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.002193563850596547
    2. '_char' → logprob: -6.127193450927734
    3. '_number' → logprob: -12.627193450927734
    4. '_chars' → logprob: -13.377193450927734
    5. 'of' → logprob: -13.502193450927734
    6. 'Of' → logprob: -14.377193450927734
    7. '[number' → logprob: -14.877193450927734
    8. 'characters' → logprob: -15.002193450927734
    9. '_character' → logprob: -15.252193450927734
    10. '```' → logprob: -15.627193450927734

Token 723: '_char' (ID: 23398)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.3869301974773407
    2. '_char' → logprob: -1.136930227279663
    3. 'char' → logprob: -9.761930465698242
    4. 'character' → logprob: -14.011930465698242
    5. 'number' → logprob: -14.511930465698242
    6. ' characters' → logprob: -15.886930465698242
    7. '_CHAR' → logprob: -16.511930465698242
    8. '.characters' → logprob: -16.886930465698242
    9. '_character' → logprob: -17.136930465698242
    10. 'Characters' → logprob: -17.761930465698242

Token 724: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.0009050302323885262
    2. 'ters' → logprob: -7.6259050369262695
    3. 'ers' → logprob: -8.37590503692627
    4. 'characters' → logprob: -9.12590503692627
    5. 'ct' → logprob: -11.25090503692627
    6. '```' → logprob: -11.50090503692627
    7. '_char' → logprob: -12.12590503692627
    8. 'ents' → logprob: -12.25090503692627
    9. '-' → logprob: -12.37590503692627
    10. '+' → logprob: -12.37590503692627

Token 725: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002191660227254033
    2. '[' → logprob: -6.127191543579102
    3. ')[' → logprob: -12.502191543579102
    4. ']' → logprob: -13.377191543579102
    5. '3' → logprob: -14.127191543579102
    6. '```' → logprob: -15.502191543579102
    7. '}[' → logprob: -15.627191543579102
    8. ' ][' → logprob: -16.0021915435791
    9. '>[' → logprob: -16.8771915435791
    10. '][-' → logprob: -17.6271915435791

Token 726: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. 'number' → logprob: -17.875
    3. '```' → logprob: -19.75
    4. ' ' → logprob: -21.25
    5. '３' → logprob: -22.375
    6. '۳' → logprob: -22.625
    7. 'abc' → logprob: -23.5
    8. '[number' → logprob: -24.25
    9. '   ' → logprob: -24.5
    10. '`' → logprob: -24.5

Token 727: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31398868560791016
    2. ')' → logprob: -1.3139886856079102
    3. ']' → logprob: -7.31398868560791
    4. ')%' → logprob: -10.81398868560791
    5. ']%' → logprob: -11.06398868560791
    6. ')]' → logprob: -12.31398868560791
    7. '%' → logprob: -12.43898868560791
    8. ' ])' → logprob: -12.56398868560791
    9. ')])' → logprob: -12.68898868560791
    10. '%)' → logprob: -12.93898868560791


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 725
Tokens correctement prédits (1ère position, stricte): 333
Tokens correctement prédits (1ère position, avec adaptation): 345
Tokens correctement prédits (top 10): 598
Précision stricte (1ère position): 45.93%
Précision adaptée (1ère position): 47.59%
Précision (top 10): 82.48%
================================================================================
