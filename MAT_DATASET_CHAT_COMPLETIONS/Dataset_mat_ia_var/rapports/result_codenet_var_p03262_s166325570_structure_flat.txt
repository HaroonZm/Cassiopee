================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
n, x = map(int, input().split())
pos = [int(i) for i in input().split()]
pos.append(x)
pos = np.array(pos)
pos = pos - x
diff = np.abs(np.diff(pos))
import math
from functools import reduce
result = diff[0]
for d in diff[1:]:
    result = math.gcd(result, d)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.001180704333819449
    2. 'np' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.001180648803711
    4. ' numpy' → logprob: -12.376180648803711
    5. ' ' → logprob: -15.751180648803711
    6. '```' → logprob: -17.75118064880371
    7. 'numpy' → logprob: -17.87618064880371
    8. '_np' → logprob: -18.12618064880371
    9. '(np' → logprob: -18.50118064880371
    10. ' n' → logprob: -18.75118064880371

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01564916968345642
    2. '\n' → logprob: -5.140649318695068
    3. '\' → logprob: -6.015649318695068
    4. '```' → logprob: -6.140649318695068
    5. '<|end|>' → logprob: -6.890649318695068
    6. 'import' → logprob: -6.890649318695068
    7. 'newline' → logprob: -7.390649318695068
    8. '
' → logprob: -7.640649318695068
    9. '#' → logprob: -8.01564884185791
    10. '[' → logprob: -8.26564884185791

Token 6: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000599976978264749
    2. 'umpy' → logprob: -8.25059986114502
    3. 'u' → logprob: -8.75059986114502
    4. '.' → logprob: -9.37559986114502
    5. '_' → logprob: -11.00059986114502
    6. ' ' → logprob: -11.12559986114502
    7. '=' → logprob: -11.12559986114502
    8. 'um' → logprob: -11.62559986114502
    9. ' p' → logprob: -11.87559986114502
    10. ',' → logprob: -12.00059986114502

Token 7: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20392493903636932
    2. ' m' → logprob: -2.0789248943328857
    3. ' p' → logprob: -3.3289248943328857
    4. 'm' → logprob: -4.953925132751465
    5. ' =' → logprob: -5.703925132751465
    6. ' k' → logprob: -5.703925132751465
    7. ' np' → logprob: -6.078925132751465
    8. '=' → logprob: -6.578925132751465
    9. 'p' → logprob: -6.703925132751465
    10. '"' → logprob: -6.953925132751465

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16510771214962006
    2. '=' → logprob: -1.9151077270507812
    3. ',' → logprob: -5.415107727050781
    4. ' ' → logprob: -8.540107727050781
    5. ')' → logprob: -9.165107727050781
    6. '_' → logprob: -10.040107727050781
    7. ' ,' → logprob: -11.040107727050781
    8. '=np' → logprob: -11.415107727050781
    9. ' =
' → logprob: -11.540107727050781
    10. '[' → logprob: -11.540107727050781

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.36327064037323
    2. ' ' → logprob: -1.61327064037323
    3. 'map' → logprob: -1.98827064037323
    4. '10' → logprob: -2.1132707595825195
    5. '5' → logprob: -2.4882707595825195
    6. ' np' → logprob: -2.4882707595825195
    7. 'int' → logprob: -3.1132707595825195
    8. ' int' → logprob: -3.2382707595825195
    9. 'np' → logprob: -4.6132707595825195
    10. '0' → logprob: -4.7382707595825195

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.544671893119812
    2. '(int' → logprob: -1.044671893119812
    3. '(str' → logprob: -3.0446720123291016
    4. '(lambda' → logprob: -3.9196720123291016
    5. 'int' → logprob: -8.169672012329102
    6. '[int' → logprob: -9.919672012329102
    7. 'str' → logprob: -9.919672012329102
    8. '()' → logprob: -10.419672012329102
    9. '(np' → logprob: -10.419672012329102
    10. '(eval' → logprob: -10.794672012329102

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5297366380691528
    2. ')' → logprob: -1.0297366380691528
    3. 'input' → logprob: -3.2797365188598633
    4. '(' → logprob: -4.779736518859863
    5. ',input' → logprob: -5.279736518859863
    6. ',' → logprob: -6.779736518859863
    7. ' input' → logprob: -6.904736518859863
    8. '=input' → logprob: -8.404736518859863
    9. '),' → logprob: -8.779736518859863
    10. '[input' → logprob: -9.529736518859863

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061996594071388245
    2. ' input' → logprob: -2.8119966983795166
    3. ')' → logprob: -10.811996459960938
    4. '(input' → logprob: -11.811996459960938
    5. ',input' → logprob: -14.186996459960938
    6. '=input' → logprob: -15.561996459960938
    7. ' ' → logprob: -15.561996459960938
    8. ' )' → logprob: -16.186996459960938
    9. '<input' → logprob: -16.686996459960938
    10. 'raw' → logprob: -16.936996459960938

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7070087790489197
    2. '())' → logprob: -1.3320088386535645
    3. '().' → logprob: -1.7070088386535645
    4. ')' → logprob: -2.9570088386535645
    5. '(' → logprob: -5.3320088386535645
    6. '('' → logprob: -6.0820088386535645
    7. '());' → logprob: -7.4570088386535645
    8. '("' → logprob: -7.7070088386535645
    9. '(""))' → logprob: -8.207008361816406
    10. '("")' → logprob: -8.457008361816406

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015205761883407831
    2. 'strip' → logprob: -6.50152063369751
    3. 'rstrip' → logprob: -11.376520156860352
    4. ' split' → logprob: -12.001520156860352
    5. '(split' → logprob: -15.376520156860352
    6. ')' → logprob: -15.626520156860352
    7. 'read' → logprob: -16.12652015686035
    8. 'spl' → logprob: -17.37652015686035
    9. ' strip' → logprob: -17.37652015686035
    10. 'replace' → logprob: -17.87652015686035

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03650204464793205
    2. '))' → logprob: -3.5365021228790283
    3. '())' → logprob: -5.036501884460449
    4. '()' → logprob: -8.91150188446045
    5. '()))' → logprob: -10.41150188446045
    6. '`)' → logprob: -11.28650188446045
    7. ')`' → logprob: -11.53650188446045
    8. '(' → logprob: -11.66150188446045
    9. ')))' → logprob: -11.78650188446045
    10. '')' → logprob: -11.91150188446045

Token 16: 'pos' (ID: 1103)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6804245114326477
    2. 'a' → logprob: -0.8054245114326477
    3. 'data' → logprob: -4.180424690246582
    4. 'array' → logprob: -4.305424690246582
    5. 's' → logprob: -4.930424690246582
    6. 'result' → logprob: -6.555424690246582
    7. 'print' → logprob: -6.805424690246582
    8. 'ar' → logprob: -6.805424690246582
    9. ' arr' → logprob: -7.055424690246582
    10. 'values' → logprob: -7.055424690246582

Token 17: ' =' (ID: 314)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.31990236043930054
    2. 's' → logprob: -2.4449024200439453
    3. 'ition' → logprob: -2.6949024200439453
    4. 'itive' → logprob: -3.3199024200439453
    5. 'sible' → logprob: -3.4449024200439453
    6. 'itional' → logprob: -3.9449024200439453
    7. 'i' → logprob: -4.819902420043945
    8. ' =' → logprob: -5.069902420043945
    9. '_' → logprob: -5.319902420043945
    10. 'ibilities' → logprob: -5.944902420043945

Token 18: ' [' (ID: 723)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.455939918756485
    2. '[]' → logprob: -1.4559398889541626
    3. ' np' → logprob: -2.705940008163452
    4. '[np' → logprob: -3.455940008163452
    5. ' []' → logprob: -4.080939769744873
    6. '0' → logprob: -5.580939769744873
    7. '[' → logprob: -5.705939769744873
    8. ' [' → logprob: -5.830939769744873
    9. '[n' → logprob: -6.455939769744873
    10. '[x' → logprob: -6.955939769744873

Token 19: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5175159573554993
    2. 'i' → logprob: -1.0175158977508545
    3. '0' → logprob: -3.5175158977508545
    4. ']' → logprob: -5.142516136169434
    5. 'x' → logprob: -6.142516136169434
    6. 'float' → logprob: -6.517516136169434
    7. '1' → logprob: -7.392516136169434
    8. 'tuple' → logprob: -7.642516136169434
    9. 'xi' → logprob: -8.267516136169434
    10. '(i' → logprob: -8.517516136169434

Token 20: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2363411784172058
    2. '(x' → logprob: -1.9863412380218506
    3. '(' → logprob: -2.8613412380218506
    4. '(a' → logprob: -4.4863409996032715
    5. '(input' → logprob: -5.7363409996032715
    6. '(s' → logprob: -7.6113409996032715
    7. ']' → logprob: -8.61134147644043
    8. '(n' → logprob: -8.86134147644043
    9. '()]' → logprob: -8.98634147644043
    10. '(z' → logprob: -9.36134147644043

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. 'input' → logprob: -12.125022888183594
    3. 'for' → logprob: -12.375022888183594
    4. ' )' → logprob: -12.625022888183594
    5. '()' → logprob: -12.875022888183594
    6. '())' → logprob: -13.000022888183594
    7. ')]' → logprob: -13.500022888183594
    8. ' for' → logprob: -14.375022888183594
    9. '(input' → logprob: -14.875022888183594
    10. '(x' → logprob: -15.125022888183594

Token 22: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45317938923835754
    2. 'for' → logprob: -1.3281793594360352
    3. ')' → logprob: -2.328179359436035
    4. '()' → logprob: -6.703179359436035
    5. ',' → logprob: -8.453179359436035
    6. ']' → logprob: -9.078179359436035
    7. ')]' → logprob: -9.703179359436035
    8. '```' → logprob: -9.703179359436035
    9. '(x' → logprob: -9.703179359436035
    10. ' ' → logprob: -9.953179359436035

Token 23: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.024091990664601326
    2. 'input' → logprob: -3.899091958999634
    3. ' range' → logprob: -5.774092197418213
    4. ' ' → logprob: -8.024091720581055
    5. 'range' → logprob: -9.524091720581055
    6. '(' → logprob: -10.774091720581055
    7. '(input' → logprob: -12.274091720581055
    8. ' in' → logprob: -13.149091720581055
    9. '_' → logprob: -13.774091720581055
    10. ' (' → logprob: -14.024091720581055

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048779141157865524
    2. 'in' → logprob: -3.048779249191284
    3. 'input' → logprob: -8.923779487609863
    4. ' ' → logprob: -10.673779487609863
    5. 's' → logprob: -12.173779487609863
    6. ',' → logprob: -12.173779487609863
    7. 'import' → logprob: -12.548779487609863
    8. ')' → logprob: -12.673779487609863
    9. '.' → logprob: -12.798779487609863
    10. '  ' → logprob: -13.298779487609863

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18078875541687012
    2. ' input' → logprob: -1.8057887554168701
    3. 'range' → logprob: -7.305788993835449
    4. ' range' → logprob: -7.930788993835449
    5. ' ' → logprob: -12.18078899383545
    6. 'np' → logprob: -12.68078899383545
    7. '(input' → logprob: -13.68078899383545
    8. ' np' → logprob: -14.30578899383545
    9. 'list' → logprob: -14.55578899383545
    10. 'str' → logprob: -15.99328899383545

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05177910625934601
    2. '()' → logprob: -3.05177903175354
    3. '()]' → logprob: -6.176779270172119
    4. '())' → logprob: -7.426779270172119
    5. '(' → logprob: -7.676779270172119
    6. '()].' → logprob: -10.301778793334961
    7. '('' → logprob: -12.551778793334961
    8. '()[' → logprob: -13.301778793334961
    9. '()][' → logprob: -13.426778793334961
    10. '()).' → logprob: -13.426778793334961

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004341261519584805
    2. 'strip' → logprob: -7.750433921813965
    3. 'rstrip' → logprob: -12.750433921813965
    4. ' split' → logprob: -14.500433921813965
    5. '(split' → logprob: -16.62543487548828
    6. 'replace' → logprob: -17.25043487548828
    7. 'spl' → logprob: -17.87543487548828
    8. ')' → logprob: -20.00043487548828
    9. 'plit' → logprob: -20.12543487548828
    10. 's' → logprob: -20.12543487548828

Token 28: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0157760176807642
    2. '())' → logprob: -4.64077615737915
    3. '()' → logprob: -5.14077615737915
    4. '(' → logprob: -9.640775680541992
    5. ')]' → logprob: -10.140775680541992
    6. ']' → logprob: -11.015775680541992
    7. '()][' → logprob: -11.515775680541992
    8. '()],' → logprob: -12.640775680541992
    9. '('' → logprob: -12.765775680541992
    10. '()]
' → logprob: -13.515775680541992

Token 29: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18414990603923798
    2. 'count' → logprob: -3.309149980545044
    3. 'dp' → logprob: -3.684149980545044
    4. 'ans' → logprob: -4.059149742126465
    5. 's' → logprob: -4.309149742126465
    6. 'c' → logprob: -4.309149742126465
    7. 'for' → logprob: -5.309149742126465
    8. 'd' → logprob: -5.309149742126465
    9. 'cnt' → logprob: -5.309149742126465
    10. 'max' → logprob: -5.434149742126465

Token 30: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6377249360084534
    2. '<|end|>' → logprob: -1.0127248764038086
    3. '.' → logprob: -2.3877248764038086
    4. '.count' → logprob: -5.637724876403809
    5. '<|end|>' → logprob: -5.762724876403809
    6. '```' → logprob: -5.887724876403809
    7. '[:]' → logprob: -7.387724876403809
    8. '[np' → logprob: -7.387724876403809
    9. '[token' → logprob: -7.512724876403809
    10. '[n' → logprob: -7.512724876403809

Token 31: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008376275189220905
    2. '(x' → logprob: -5.508376121520996
    3. '((' → logprob: -5.633376121520996
    4. '(pos' → logprob: -8.133376121520996
    5. '(-' → logprob: -8.633376121520996
    6. '(np' → logprob: -9.383376121520996
    7. '(max' → logprob: -10.383376121520996
    8. '(len' → logprob: -10.508376121520996
    9. '(.' → logprob: -11.008376121520996
    10. '(None' → logprob: -11.008376121520996

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.702754474943504e-05
    2. ' )' → logprob: -10.50003719329834
    3. '))' → logprob: -11.87503719329834
    4. ')
' → logprob: -13.87503719329834
    5. '+' → logprob: -14.25003719329834
    6. ')`' → logprob: -16.125036239624023
    7. '`)' → logprob: -16.125036239624023
    8. '])' → logprob: -16.750036239624023
    9. ')return' → logprob: -17.000036239624023
    10. '')' → logprob: -17.125036239624023

Token 33: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0037239459343254566
    2. '
' → logprob: -6.503724098205566
    3. '\n' → logprob: -7.003724098205566
    4. '```' → logprob: -8.128724098205566
    5. 'sorted' → logprob: -8.628724098205566
    6. '.pos' → logprob: -8.753724098205566
    7. '\' → logprob: -9.128724098205566
    8. '.
' → logprob: -9.503724098205566
    9. '.' → logprob: -9.628724098205566
    10. ' pos' → logprob: -10.003724098205566

Token 34: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7091120481491089
    2. '.sort' → logprob: -0.7091120481491089
    3. '<|end|>' → logprob: -4.959112167358398
    4. '[' → logprob: -5.584112167358398
    5. '\n' → logprob: -6.834112167358398
    6. '
' → logprob: -7.584112167358398
    7. '```' → logprob: -7.584112167358398
    8. '.
' → logprob: -7.834112167358398
    9. '.sorted' → logprob: -8.084112167358398
    10. 'sort' → logprob: -8.834112167358398

Token 35: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -1.0397071838378906
    2. ' sorted' → logprob: -1.1647071838378906
    3. 'np' → logprob: -1.7897071838378906
    4. 'sorted' → logprob: -1.7897071838378906
    5. ' list' → logprob: -8.91470718383789
    6. ' ' → logprob: -9.03970718383789
    7. 'list' → logprob: -9.28970718383789
    8. '[np' → logprob: -10.78970718383789
    9. 's' → logprob: -11.85220718383789
    10. '(sorted' → logprob: -12.28970718383789

Token 36: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.09378353506326675
    2. '.sort' → logprob: -2.5937836170196533
    3. '.' → logprob: -5.093783378601074
    4. '.append' → logprob: -5.218783378601074
    5. '.asarray' → logprob: -6.593783378601074
    6. '.unique' → logprob: -7.093783378601074
    7. '.concatenate' → logprob: -7.218783378601074
    8. '.ndarray' → logprob: -9.468783378601074
    9. '.sorted' → logprob: -10.343783378601074
    10. '.arr' → logprob: -10.343783378601074

Token 37: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.006219455040991306
    2. '(' → logprob: -5.131219387054443
    3. '(np' → logprob: -8.631219863891602
    4. '(list' → logprob: -9.881219863891602
    5. '([' → logprob: -10.381219863891602
    6. '[pos' → logprob: -11.756219863891602
    7. '((' → logprob: -12.006219863891602
    8. 'pos' → logprob: -12.381219863891602
    9. '(Pos' → logprob: -12.381219863891602
    10. '([...' → logprob: -13.881219863891602

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027427079621702433
    2. ').' → logprob: -6.002742767333984
    3. '[' → logprob: -9.752742767333984
    4. ')
' → logprob: -10.002742767333984
    5. '.sort' → logprob: -10.002742767333984
    6. '))' → logprob: -10.252742767333984
    7. ' )' → logprob: -11.002742767333984
    8. '+' → logprob: -11.002742767333984
    9. '.reshape' → logprob: -11.877742767333984
    10. '-' → logprob: -12.252742767333984

Token 39: 'pos' (ID: 1103)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.16618792712688446
    2. 'pos' → logprob: -2.1661880016326904
    3. 'sort' → logprob: -4.041187763214111
    4. 'sorted' → logprob: -5.041187763214111
    5. '.' → logprob: -6.041187763214111
    6. '
' → logprob: -6.166187763214111
    7. '-sort' → logprob: -6.291187763214111
    8. '.reshape' → logprob: -6.416187763214111
    9. '[np' → logprob: -6.916187763214111
    10. '[pos' → logprob: -7.041187763214111

Token 40: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6112955808639526
    2. '+' → logprob: -1.8612955808639526
    3. '[' → logprob: -1.8612955808639526
    4. '.reshape' → logprob: -3.486295700073242
    5. '[np' → logprob: -3.986295700073242
    6. '.sort' → logprob: -4.111295700073242
    7. '```' → logprob: -4.361295700073242
    8. '<|end|>' → logprob: -4.611295700073242
    9. '0' → logprob: -4.861295700073242
    10. '-' → logprob: -4.986295700073242

Token 41: ' pos' (ID: 1253)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.25206899642944336
    2. 'np' → logprob: -1.5020689964294434
    3. 'pos' → logprob: -9.627069473266602
    4. ' pos' → logprob: -10.252069473266602
    5. '(np' → logprob: -10.502069473266602
    6. ' ' → logprob: -11.752069473266602
    7. '=np' → logprob: -13.752069473266602
    8. ',np' → logprob: -14.252069473266602
    9. '[np' → logprob: -15.252069473266602
    10. ' sorted' → logprob: -15.814569473266602

Token 42: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1331346035003662
    2. '.reshape' → logprob: -1.3831346035003662
    3. ' -' → logprob: -1.8831346035003662
    4. '[np' → logprob: -2.383134603500366
    5. '/' → logprob: -3.008134603500366
    6. '.sort' → logprob: -3.383134603500366
    7. '[' → logprob: -3.508134603500366
    8. ' /' → logprob: -4.258134841918945
    9. '-sort' → logprob: -4.383134841918945
    10. '-pos' → logprob: -4.508134841918945

Token 43: ' x' (ID: 1215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.29095447063446045
    2. 'np' → logprob: -1.7909544706344604
    3. 'x' → logprob: -2.91595458984375
    4. '1' → logprob: -4.04095458984375
    5. ' pos' → logprob: -5.29095458984375
    6. ' np' → logprob: -5.66595458984375
    7. 'n' → logprob: -6.04095458984375
    8. ' x' → logprob: -6.66595458984375
    9. '0' → logprob: -7.41595458984375
    10. 'min' → logprob: -7.79095458984375

Token 44: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7662162780761719
    2. '0' → logprob: -1.3912162780761719
    3. '<|end|>' → logprob: -1.8912162780761719
    4. '[np' → logprob: -2.891216278076172
    5. '1' → logprob: -4.391216278076172
    6. 'pos' → logprob: -4.391216278076172
    7. 'np' → logprob: -4.766216278076172
    8. '.' → logprob: -5.016216278076172
    9. '<|end|>' → logprob: -5.016216278076172
    10. '[pos' → logprob: -5.141216278076172

Token 45: 'diff' (ID: 31460)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2247952222824097
    2. '[np' → logprob: -1.5997952222824097
    3. 'pos' → logprob: -2.099795341491699
    4. '<|end|>' → logprob: -2.349795341491699
    5. '0' → logprob: -2.474795341491699
    6. '[pos' → logprob: -2.849795341491699
    7. 'x' → logprob: -3.224795341491699
    8. 'np' → logprob: -3.974795341491699
    9. '+' → logprob: -3.974795341491699
    10. '1' → logprob: -5.099795341491699

Token 46: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0059548718854784966
    2. '=' → logprob: -5.255954742431641
    3. ' =' → logprob: -7.505954742431641
    4. '=np' → logprob: -9.13095474243164
    5. '_' → logprob: -10.75595474243164
    6. '=s' → logprob: -10.88095474243164
    7. '_s' → logprob: -12.00595474243164
    8. 'er' → logprob: -12.25595474243164
    9. '_=' → logprob: -12.75595474243164
    10. '[' → logprob: -13.75595474243164

Token 47: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.10812713950872421
    2. ' np' → logprob: -2.6081271171569824
    3. 'pos' → logprob: -3.6081271171569824
    4. 'abs' → logprob: -6.983127117156982
    5. ' pos' → logprob: -7.483127117156982
    6. ' abs' → logprob: -9.35812759399414
    7. '(np' → logprob: -9.60812759399414
    8. '[np' → logprob: -11.23312759399414
    9. 'max' → logprob: -11.48312759399414
    10. '[pos' → logprob: -11.85812759399414

Token 48: '.abs' (ID: 29974)
  Prédit: '.diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.diff' → logprob: -0.008662551641464233
    2. '.abs' → logprob: -4.758662700653076
    3. 'diff' → logprob: -10.758662223815918
    4. '.' → logprob: -11.008662223815918
    5. '.absolute' → logprob: -12.758662223815918
    6. '.argmax' → logprob: -13.883662223815918
    7. '	diff' → logprob: -14.133662223815918
    8. '.ed' → logprob: -14.258662223815918
    9. '.concatenate' → logprob: -14.383662223815918
    10. '.append' → logprob: -14.508662223815918

Token 49: '(np' (ID: 21997)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.033527545630931854
    2. '(np' → logprob: -3.5335276126861572
    3. '(diff' → logprob: -5.908527374267578
    4. '(' → logprob: -6.908527374267578
    5. 'pos' → logprob: -10.283527374267578
    6. 'diff' → logprob: -12.158527374267578
    7. ' (' → logprob: -12.908527374267578
    8. 'np' → logprob: -13.033527374267578
    9. ',pos' → logprob: -13.158527374267578
    10. '(n' → logprob: -13.283527374267578

Token 50: '.diff' (ID: 97998)
  Prédit: '.diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.diff' → logprob: -0.02218828722834587
    2. 'diff' → logprob: -3.897188186645508
    3. '.' → logprob: -6.772188186645508
    4. '[:-' → logprob: -8.772188186645508
    5. '.argmax' → logprob: -9.147188186645508
    6. '(diff' → logprob: -10.022188186645508
    7. '-' → logprob: -10.022188186645508
    8. '.gradient' → logprob: -10.897188186645508
    9. '.subtract' → logprob: -11.147188186645508
    10. '.concatenate' → logprob: -11.272188186645508

Token 51: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.047134305234067e-05
    2. ',pos' → logprob: -11.375030517578125
    3. '(' → logprob: -11.625030517578125
    4. 'pos' → logprob: -12.125030517578125
    5. '(np' → logprob: -13.125030517578125
    6. ')' → logprob: -13.750030517578125
    7. ' (' → logprob: -14.625030517578125
    8. ' pos' → logprob: -14.875030517578125
    9. '(Pos' → logprob: -15.375030517578125
    10. '[pos' → logprob: -16.000030517578125

Token 52: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010331078432500362
    2. ')' → logprob: -5.010331153869629
    3. '()))' → logprob: -5.760331153869629
    4. '))
' → logprob: -8.260331153869629
    5. '())' → logprob: -9.760331153869629
    6. ' ))' → logprob: -9.885331153869629
    7. '(' → logprob: -10.760331153869629
    8. '()' → logprob: -10.760331153869629
    9. ')))' → logprob: -11.010331153869629
    10. '()))
' → logprob: -11.635331153869629

Token 53: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0740997791290283
    2. '[' → logprob: -1.4490997791290283
    3. '[np' → logprob: -2.3240997791290283
    4. ')' → logprob: -2.9490997791290283
    5. '(' → logprob: -3.0740997791290283
    6. 'max' → logprob: -3.1990997791290283
    7. 'min' → logprob: -3.3240997791290283
    8. '0' → logprob: -3.5740997791290283
    9. 'diff' → logprob: -3.6990997791290283
    10. '+' → logprob: -3.6990997791290283

Token 54: ' math' (ID: 13324)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.023325840011239052
    2. 'numpy' → logprob: -5.2733259201049805
    3. ' itertools' → logprob: -5.3983259201049805
    4. ' sys' → logprob: -5.6483259201049805
    5. ' matplotlib' → logprob: -6.1483259201049805
    6. ' math' → logprob: -6.2733259201049805
    7. ' ' → logprob: -6.5233259201049805
    8. ' ' → logprob: -6.5233259201049805
    9. ' pandas' → logprob: -6.7733259201049805
    10. ' scipy' → logprob: -7.2733259201049805

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3237967491149902
    2. 'max' → logprob: -2.0737967491149902
    3. 'print' → logprob: -2.1987967491149902
    4. 'diff' → logprob: -2.4487967491149902
    5. 'g' → logprob: -2.6987967491149902
    6. 'result' → logprob: -2.8237967491149902
    7. '\' → logprob: -3.4487967491149902
    8. 'min' → logprob: -3.6987967491149902
    9. '
' → logprob: -3.6987967491149902
    10. 'n' → logprob: -3.8237967491149902

Token 56: 'from' (ID: 2845)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7998880743980408
    2. 'd' → logprob: -1.2998881340026855
    3. 'm' → logprob: -2.4248881340026855
    4. 'k' → logprob: -3.2998881340026855
    5. 'max' → logprob: -3.2998881340026855
    6. 'l' → logprob: -4.1748881340026855
    7. 'c' → logprob: -4.4248881340026855
    8. '_' → logprob: -4.4248881340026855
    9. 'print' → logprob: -4.4248881340026855
    10. 'a' → logprob: -4.5498881340026855

Token 57: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0048397378996014595
    2. ' scipy' → logprob: -5.879839897155762
    3. 'math' → logprob: -6.879839897155762
    4. ' itertools' → logprob: -7.504839897155762
    5. 'cmath' → logprob: -9.254839897155762
    6. ' fractions' → logprob: -9.504839897155762
    7. ' collections' → logprob: -9.754839897155762
    8. '_' → logprob: -10.004839897155762
    9. '_math' → logprob: -10.004839897155762
    10. ' ' → logprob: -10.254839897155762

Token 58: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.33490535616874695
    2. 'import' → logprob: -1.3349053859710693
    3. '.' → logprob: -4.08490514755249
    4. '_' → logprob: -6.58490514755249
    5. '_import' → logprob: -6.95990514755249
    6. '<|end|>' → logprob: -7.08490514755249
    7. ' ' → logprob: -7.83490514755249
    8. ' .' → logprob: -7.95990514755249
    9. ' _' → logprob: -8.084905624389648
    10. '	import' → logprob: -8.709905624389648

Token 59: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.2534068822860718
    2. ' reduce' → logprob: -1.5034068822860718
    3. 'l' → logprob: -7.253407001495361
    4. ' l' → logprob: -7.503407001495361
    5. 'redu' → logprob: -9.378406524658203
    6. 'cmp' → logprob: -10.003406524658203
    7. 'partial' → logprob: -10.753406524658203
    8. '_reduce' → logprob: -10.878406524658203
    9. '.reduce' → logprob: -11.253406524658203
    10. 'cache' → logprob: -11.378406524658203

Token 60: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.110610008239746
    2. 'def' → logprob: -1.735610008239746
    3. 'result' → logprob: -2.235610008239746
    4. '*' → logprob: -2.860610008239746
    5. 'diff' → logprob: -2.985610008239746
    6. 'res' → logprob: -3.485610008239746
    7. 'distance' → logprob: -3.485610008239746
    8. 'import' → logprob: -3.485610008239746
    9. 'max' → logprob: -3.860610008239746
    10. ',
' → logprob: -3.985610008239746

Token 61: 'result' (ID: 2521)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1659454107284546
    2. 'def' → logprob: -2.665945529937744
    3. ',' → logprob: -3.915945529937744
    4. '_' → logprob: -4.415945529937744
    5. 'import' → logprob: -4.415945529937744
    6. '*' → logprob: -4.915945529937744
    7. ' gcd' → logprob: -5.165945529937744
    8. 'result' → logprob: -5.540945529937744
    9. ')' → logprob: -5.665945529937744
    10. '<|end|>' → logprob: -6.040945529937744

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16158276796340942
    2. '=' → logprob: -1.9115827083587646
    3. '_' → logprob: -7.036582946777344
    4. ' ' → logprob: -7.786582946777344
    5. '.' → logprob: -11.411582946777344
    6. '_=' → logprob: -11.411582946777344
    7. ')' → logprob: -12.036582946777344
    8. ' _' → logprob: -12.286582946777344
    9. ' =)' → logprob: -12.286582946777344
    10. '(' → logprob: -12.661582946777344

Token 63: ' diff' (ID: 8868)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6922622919082642
    2. 'reduce' → logprob: -1.5672622919082642
    3. ' reduce' → logprob: -1.8172622919082642
    4. 'math' → logprob: -2.0672621726989746
    5. 'lambda' → logprob: -7.067262172698975
    6. ' lambda' → logprob: -7.317262172698975
    7. '(math' → logprob: -9.317262649536133
    8. ' functools' → logprob: -9.442262649536133
    9. 'fun' → logprob: -10.067262649536133
    10. 'diff' → logprob: -10.192262649536133

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027528072241693735
    2. '.tolist' → logprob: -6.627752780914307
    3. '.reduce' → logprob: -7.627752780914307
    4. '<|end|>' → logprob: -8.002753257751465
    5. '[result' → logprob: -9.127753257751465
    6. '[
' → logprob: -9.377753257751465
    7. '[np' → logprob: -9.752753257751465
    8. '0' → logprob: -10.002753257751465
    9. '<|end|>' → logprob: -10.002753257751465
    10. ' ' → logprob: -10.252753257751465

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002681304467841983
    2. ' ' → logprob: -8.50026798248291
    3. ']' → logprob: -9.87526798248291
    4. '-' → logprob: -12.00026798248291
    5. '1' → logprob: -13.37526798248291
    6. '])' → logprob: -13.87526798248291
    7. '[' → logprob: -14.00026798248291
    8. ')' → logprob: -14.93776798248291
    9. '  ' → logprob: -15.06276798248291
    10. ']+' → logprob: -15.06276798248291

Token 66: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006473537068814039
    2. ' ]' → logprob: -5.131473541259766
    3. '<|end|>' → logprob: -8.256473541259766
    4. ']
' → logprob: -9.881473541259766
    5. ':]' → logprob: -10.256473541259766
    6. ')]' → logprob: -10.506473541259766
    7. ']int' → logprob: -10.506473541259766
    8. ')' → logprob: -10.756473541259766
    9. '])' → logprob: -10.881473541259766
    10. '<|end|>' → logprob: -11.131473541259766

Token 67: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10624905675649643
    2. ' d' → logprob: -2.8562490940093994
    3. 'i' → logprob: -3.2312490940093994
    4. 'd' → logprob: -5.73124885559082
    5. ' val' → logprob: -8.60624885559082
    6. '_' → logprob: -9.23124885559082
    7. ' ' → logprob: -9.48124885559082
    8. ' diff' → logprob: -9.60624885559082
    9. ' num' → logprob: -10.85624885559082
    10. ' value' → logprob: -10.98124885559082

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008961161598563194
    2. 'in' → logprob: -5.008961200714111
    3. ' ' → logprob: -6.133961200714111
    4. ' i' → logprob: -10.508960723876953
    5. '  ' → logprob: -11.383960723876953
    6. 'd' → logprob: -11.508960723876953
    7. ',' → logprob: -11.633960723876953
    8. '	in' → logprob: -12.508960723876953
    9. 's' → logprob: -12.633960723876953
    10. 'n' → logprob: -12.758960723876953

Token 70: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.062004320323467255
    2. 'diff' → logprob: -2.812004327774048
    3. '	diff' → logprob: -10.312004089355469
    4. ' dif' → logprob: -13.437004089355469
    5. '(diff' → logprob: -13.687004089355469
    6. '_diff' → logprob: -15.562004089355469
    7. '.diff' → logprob: -15.562004089355469
    8. ' range' → logprob: -15.937004089355469
    9. ' ' → logprob: -16.31200408935547
    10. 'd' → logprob: -17.06200408935547

Token 71: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016459064558148384
    2. '[' → logprob: -4.891458988189697
    3. ' :' → logprob: -5.641458988189697
    4. ',' → logprob: -5.766458988189697
    5. ' in' → logprob: -6.641458988189697
    6. ' ' → logprob: -8.141459465026855
    7. 'd' → logprob: -9.516459465026855
    8. ':
' → logprob: -9.891459465026855
    9. '1' → logprob: -10.016459465026855
    10. 's' → logprob: -10.141459465026855

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007304660510271788
    2. ':' → logprob: -5.507304668426514
    3. ']:' → logprob: -5.882304668426514
    4. ':]' → logprob: -8.382304191589355
    5. ' ' → logprob: -8.882304191589355
    6. '[' → logprob: -10.882304191589355
    7. '):' → logprob: -11.132304191589355
    8. ' :' → logprob: -12.257304191589355
    9. ']' → logprob: -12.382304191589355
    10. '(' → logprob: -12.632304191589355

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012752347392961383
    2. ' :' → logprob: -7.251275062561035
    3. ':]' → logprob: -7.751275062561035
    4. ']:' → logprob: -9.251275062561035
    5. ':],' → logprob: -10.876275062561035
    6. ':d' → logprob: -11.626275062561035
    7. ' :]' → logprob: -12.501275062561035
    8. '：' → logprob: -13.251275062561035
    9. ' ' → logprob: -14.251275062561035
    10. ':end' → logprob: -14.501275062561035

Token 74: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14719508588314056
    2. ']:
' → logprob: -2.0221951007843018
    3. ':' → logprob: -5.647194862365723
    4. ']:
' → logprob: -7.272194862365723
    5. ']' → logprob: -9.147194862365723
    6. ' ]' → logprob: -9.272194862365723
    7. ']:

' → logprob: -10.397194862365723
    8. ':
' → logprob: -10.647194862365723
    9. ':]' → logprob: -11.772194862365723
    10. ']:


' → logprob: -12.397194862365723

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5160096883773804
    2. ' result' → logprob: -1.0160096883773804
    3. 'result' → logprob: -3.39100980758667
    4. ' ' → logprob: -6.01600980758667
    5. '    
' → logprob: -6.39100980758667
    6. '```' → logprob: -7.14100980758667
    7. '	result' → logprob: -7.26600980758667
    8. '    ' → logprob: -7.89100980758667
    9. ' gcd' → logprob: -8.016009330749512
    10. ' 
' → logprob: -8.516009330749512

Token 76: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.1289019137620926
    2. 'result' (adapté à ' result') → logprob: -2.128901958465576
    3. '   ' → logprob: -6.378901958465576
    4. '       ' → logprob: -9.503901481628418
    5. '    
' → logprob: -9.878901481628418
    6. '
' → logprob: -10.128901481628418
    7. '    ' → logprob: -10.503901481628418
    8. ' 
' → logprob: -10.628901481628418
    9. '	result' → logprob: -10.753901481628418
    10. ' ' → logprob: -11.378901481628418

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889099419116974
    2. '=' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.703890800476074
    4. '=g' → logprob: -15.078890800476074
    5. ' *=' → logprob: -15.703890800476074
    6. '=int' → logprob: -16.32889175415039
    7. '＝' → logprob: -16.45389175415039
    8. '*=' → logprob: -17.07889175415039
    9. ' +=' → logprob: -17.57889175415039
    10. '=f' → logprob: -17.95389175415039

Token 78: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2014244645833969
    2. ' math' → logprob: -1.701424479484558
    3. '(math' → logprob: -11.951424598693848
    4. 'np' → logprob: -13.076424598693848
    5. ' ' → logprob: -13.576424598693848
    6. ' np' → logprob: -14.576424598693848
    7. 'Math' → logprob: -15.326424598693848
    8. '.math' → logprob: -15.701424598693848
    9. '  ' → logprob: -15.951424598693848
    10. '   ' → logprob: -16.32642364501953

Token 79: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -8.482821431243792e-05
    2. '.' → logprob: -9.50008487701416
    3. 'g' → logprob: -11.75008487701416
    4. ' .' → logprob: -14.50008487701416
    5. '#g' → logprob: -15.12508487701416
    6. '.f' → logprob: -16.000083923339844
    7. '.floor' → logprob: -16.000083923339844
    8. '.ceil' → logprob: -16.000083923339844
    9. '   ' → logprob: -16.250083923339844
    10. '```' → logprob: -16.500083923339844

Token 80: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.511406809295295e-06
    2. '_cd' → logprob: -13.625006675720215
    3. 'reat' → logprob: -13.750006675720215
    4. 'cdf' → logprob: -14.375006675720215
    5. 'cdn' → logprob: -14.500006675720215
    6. 'cf' → logprob: -14.625006675720215
    7. '```' → logprob: -14.750006675720215
    8. '{' → logprob: -14.875006675720215
    9. '	cd' → logprob: -15.000006675720215
    10. 'CD' → logprob: -15.375006675720215

Token 81: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0003370118502061814
    2. '(' → logprob: -8.000336647033691
    3. 'result' → logprob: -13.625336647033691
    4. '=result' → logprob: -16.250337600708008
    5. ',result' → logprob: -16.625337600708008
    6. '[result' → logprob: -16.750337600708008
    7. '(results' → logprob: -16.875337600708008
    8. '(res' → logprob: -17.000337600708008
    9. '(
' → logprob: -17.500337600708008
    10. ' result' → logprob: -17.750337600708008

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2519347369670868
    2. ',d' → logprob: -1.5019347667694092
    3. ' ,' → logprob: -12.251935005187988
    4. 'd' → logprob: -14.001935005187988
    5. ',
' → logprob: -17.251934051513672
    6. '，' → logprob: -18.751934051513672
    7. '   ' → logprob: -18.876934051513672
    8. ',D' → logprob: -19.251934051513672
    9. '‌,' → logprob: -19.751934051513672
    10. ' d' → logprob: -19.876934051513672

Token 83: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03804149478673935
    2. ' d' → logprob: -3.288041591644287
    3. '	d' → logprob: -17.413042068481445
    4. ')d' → logprob: -17.913042068481445
    5. '   ' → logprob: -19.163042068481445
    6. '_d' → logprob: -19.913042068481445
    7. ' ' → logprob: -20.413042068481445
    8. '    ' → logprob: -20.913042068481445
    9. '(d' → logprob: -21.288042068481445
    10. ')' → logprob: -21.663042068481445

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')`' → logprob: -17.375001907348633
    5. '))' → logprob: -18.000001907348633
    6. '),' → logprob: -18.125001907348633
    7. ')

' → logprob: -18.500001907348633
    8. '`)' → logprob: -18.500001907348633
    9. ')return' → logprob: -18.875001907348633
    10. '}' → logprob: -18.875001907348633

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.895480277715251e-06
    2. '\n' → logprob: -13.000008583068848
    3. '```' → logprob: -13.125008583068848
    4. '
' → logprob: -13.750008583068848
    5. 'result' → logprob: -13.875008583068848
    6. ' print' → logprob: -14.000008583068848
    7. '\' → logprob: -14.625008583068848
    8. '<|end|>' → logprob: -15.250008583068848
    9. '(print' → logprob: -15.750008583068848
    10. '#' → logprob: -16.125009536743164

Token 86: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005601192358881235
    2. '(result' → logprob: -5.755601406097412
    3. '("("' → logprob: -6.505601406097412
    4. '('' → logprob: -7.130601406097412
    5. '()' → logprob: -9.880600929260254
    6. '((' → logprob: -10.005600929260254
    7. '(len' → logprob: -12.255600929260254
    8. '("(' → logprob: -12.380600929260254
    9. '(`' → logprob: -12.880600929260254
    10. '(f' → logprob: -12.880600929260254

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.000003814697266
    3. '))' → logprob: -13.875003814697266
    4. ')
' → logprob: -15.000003814697266
    5. ')`' → logprob: -16.375003814697266
    6. '')' → logprob: -17.750003814697266
    7. ')#' → logprob: -18.000003814697266
    8. ')))' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.250003814697266
    10. '`)' → logprob: -18.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 42.35%
Précision adaptée (1ère position): 42.35%
Précision (top 10): 81.18%
================================================================================
