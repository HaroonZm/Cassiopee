================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def lire_liste_entiers():
    return list(map(int, sys.stdin.readline().split()))

def lire_entier():
    return int(sys.stdin.readline())

def fonction_C():
    def pgcd(a, b):
        while b != 0:
            a, b = b, a % b
        return a

    n, x = lire_liste_entiers()
    x_list = lire_liste_entiers()
    x_list.append(x)
    x_list.sort()
    reponse = x_list[1] - x_list[0]
    for i in range(1, n):
        diff = x_list[i + 1] - x_list[i]
        reponse = pgcd(reponse, diff)
    print(reponse)

if __name__ == '__main__':
    fonction_C()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12579083442687988
    2. 'import' → logprob: -3.25079083442688
    3. '\n' → logprob: -3.50079083442688
    4. '' → logprob: -4.250790596008301
    5. '<|end|>' → logprob: -4.625790596008301
    6. 'print' → logprob: -5.000790596008301
    7. '#' → logprob: -5.125790596008301
    8. '\' → logprob: -6.500790596008301
    9. ',' → logprob: -6.500790596008301
    10. '
' → logprob: -6.625790596008301

Token 4: ' lire' (ID: 46082)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25282472372055054
    2. '(' → logprob: -1.5028247833251953
    3. '_l' → logprob: -8.127824783325195
    4. ' (' → logprob: -8.627824783325195
    5. '_line' → logprob: -9.377824783325195
    6. '_par' → logprob: -10.252824783325195
    7. '_:' → logprob: -10.377824783325195
    8. '_(' → logprob: -10.377824783325195
    9. '_parent' → logprob: -10.377824783325195
    10. '_input' → logprob: -10.877824783325195

Token 6: 'iste' (ID: 4872)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.029864691197872162
    2. 'ignes' → logprob: -4.65486478805542
    3. '_' → logprob: -4.77986478805542
    4. 'ine' → logprob: -5.02986478805542
    5. 'ig' → logprob: -6.15486478805542
    6. 'e' → logprob: -6.90486478805542
    7. 'ire' → logprob: -7.27986478805542
    8. '()' → logprob: -8.279864311218262
    9. 'a' → logprob: -8.279864311218262
    10. 'ign' → logprob: -9.154864311218262

Token 7: '_ent' (ID: 66249)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03060697577893734
    2. '_' → logprob: -3.530606985092163
    3. '("("' → logprob: -8.655607223510742
    4. 's' → logprob: -9.280607223510742
    5. '```' → logprob: -9.280607223510742
    6. '_parent' → logprob: -9.280607223510742
    7. '<|end|>' → logprob: -9.655607223510742
    8. '(
' → logprob: -9.780607223510742
    9. ')' → logprob: -11.030607223510742
    10. '_list' → logprob: -11.030607223510742

Token 8: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002552242483943701
    2. 'ier' → logprob: -6.127552032470703
    3. 'i' → logprob: -8.252552032470703
    4. '```' → logprob: -10.502552032470703
    5. 'ieres' → logprob: -10.752552032470703
    6. 'ières' → logprob: -11.502552032470703
    7. '(i' → logprob: -11.752552032470703
    8. '_i' → logprob: -12.127552032470703
    9. ' i' → logprob: -12.127552032470703
    10. '(' → logprob: -12.252552032470703

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004259084234945476
    2. '():' → logprob: -9.250426292419434
    3. '_' → logprob: -9.375426292419434
    4. '("("' → logprob: -9.500426292419434
    5. '()' → logprob: -10.750426292419434
    6. '```' → logprob: -10.750426292419434
    7. ' (' → logprob: -10.875426292419434
    8. ':' → logprob: -11.000426292419434
    9. '('' → logprob: -11.125426292419434
    10. '(
' → logprob: -11.500426292419434

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1065019890666008
    2. '(' → logprob: -3.606502056121826
    3. ' ' → logprob: -4.481502056121826
    4. '    
' → logprob: -4.856502056121826
    5. '    ' → logprob: -4.856502056121826
    6. '\' → logprob: -5.106502056121826
    7. ':' → logprob: -5.231502056121826
    8. ' 
' → logprob: -5.356502056121826
    9. ' return' → logprob: -5.606502056121826
    10. '```' → logprob: -5.731502056121826

Token 11: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.2291851043701172
    2. 'n' → logprob: -1.4791851043701172
    3. ' return' → logprob: -1.7291851043701172
    4. '   ' → logprob: -2.104185104370117
    5. 'r' → logprob: -3.104185104370117
    6. 'ent' → logprob: -3.229185104370117
    7. ' ' → logprob: -3.854185104370117
    8. ' ent' → logprob: -4.479185104370117
    9. ' n' → logprob: -4.729185104370117
    10. 'liste' → logprob: -5.104185104370117

Token 12: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4894678294658661
    2. ' []' → logprob: -1.2394678592681885
    3. ' ' → logprob: -3.2394678592681885
    4. 'list' → logprob: -3.6144678592681885
    5. '[]' → logprob: -4.114467620849609
    6. ' [' → logprob: -4.489467620849609
    7. '[' → logprob: -6.114467620849609
    8. ' map' → logprob: -7.864467620849609
    9. ' sys' → logprob: -7.864467620849609
    10. '  ' → logprob: -8.23946762084961

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037801240105181932
    2. '(int' → logprob: -6.003779888153076
    3. '(map' → logprob: -6.878779888153076
    4. '(range' → logprob: -9.128780364990234
    5. '(eval' → logprob: -10.003780364990234
    6. '(s' → logprob: -10.628780364990234
    7. '(input' → logprob: -10.753780364990234
    8. '(sys' → logprob: -11.503780364990234
    9. '(filter' → logprob: -11.503780364990234
    10. '((' → logprob: -12.503780364990234

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001246185740455985
    2. '(' → logprob: -6.876245975494385
    3. 'int' → logprob: -8.626246452331543
    4. ' int' → logprob: -11.251246452331543
    5. '<int' → logprob: -11.376246452331543
    6. '=int' → logprob: -12.501246452331543
    7. ',int' → logprob: -13.376246452331543
    8. ' (' → logprob: -13.376246452331543
    9. '(
' → logprob: -14.126246452331543
    10. '[int' → logprob: -14.251246452331543

Token 15: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.19398871064186096
    2. '(' → logprob: -1.8189886808395386
    3. '(input' → logprob: -4.943988800048828
    4. ')' → logprob: -5.818988800048828
    5. '))' → logprob: -6.943988800048828
    6. '<|end|>' → logprob: -7.068988800048828
    7. 'sys' → logprob: -7.943988800048828
    8. '(stdin' → logprob: -8.568988800048828
    9. '<|end|>' → logprob: -8.943988800048828
    10. '=sys' → logprob: -9.068988800048828

Token 16: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0616023540496826
    2. ' input' → logprob: -1.1866023540496826
    3. 'sys' → logprob: -1.6866023540496826
    4. ' sys' → logprob: -1.8116023540496826
    5. '(sys' → logprob: -8.936602592468262
    6. '=sys' → logprob: -9.811602592468262
    7. ')' → logprob: -10.311602592468262
    8. 'stdin' → logprob: -11.436602592468262
    9. '(input' → logprob: -11.561602592468262
    10. '	sys' → logprob: -11.686602592468262

Token 17: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02064991556107998
    2. '.stdin' → logprob: -4.0206499099731445
    3. '.argv' → logprob: -6.0206499099731445
    4. ' .' → logprob: -10.395649909973145
    5. '.stdout' → logprob: -11.020649909973145
    6. '.readline' → logprob: -11.395649909973145
    7. '.)' → logprob: -13.145649909973145
    8. '.
' → logprob: -13.270649909973145
    9. '.std' → logprob: -13.770649909973145
    10. '.stderr' → logprob: -13.895649909973145

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025264339055866003
    2. '.' → logprob: -6.37752628326416
    3. '.read' → logprob: -7.12752628326416
    4. '.readlines' → logprob: -10.87752628326416
    5. ' .' → logprob: -14.25252628326416
    6. 'read' → logprob: -14.50252628326416
    7. ')' → logprob: -14.50252628326416
    8. ' readline' → logprob: -15.75252628326416
    9. '.)' → logprob: -16.002527236938477
    10. '.Read' → logprob: -16.002527236938477

Token 19: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.22027398645877838
    2. '().' → logprob: -2.595273971557617
    3. '())' → logprob: -2.595273971557617
    4. '()' → logprob: -3.095273971557617
    5. '())))' → logprob: -5.970273971557617
    6. '()));' → logprob: -7.970273971557617
    7. '(' → logprob: -9.595273971557617
    8. '))' → logprob: -10.095273971557617
    9. ' ())' → logprob: -10.470273971557617
    10. '());' → logprob: -10.595273971557617

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01558685302734375
    2. 'rstrip' → logprob: -4.265586853027344
    3. 'split' → logprob: -6.640586853027344
    4. ' strip' → logprob: -9.515586853027344
    5. ')' → logprob: -10.390586853027344
    6. 'read' → logprob: -11.515586853027344
    7. '(strip' → logprob: -15.265586853027344
    8. ' split' → logprob: -15.265586853027344
    9. '-strip' → logprob: -15.390586853027344
    10. '_strip' → logprob: -15.640586853027344

Token 21: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.051368243992328644
    2. '))' → logprob: -3.926368236541748
    3. '()' → logprob: -4.301368236541748
    4. '())))' → logprob: -4.801368236541748
    5. '())' → logprob: -5.301368236541748
    6. ')))' → logprob: -5.676368236541748
    7. ')' → logprob: -9.551368713378906
    8. '(' → logprob: -9.551368713378906
    9. '()))
' → logprob: -11.676368713378906
    10. '()));' → logprob: -12.051368713378906

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4323786795139313
    2. '
' → logprob: -2.0573787689208984
    3. '#' → logprob: -2.1823787689208984
    4. '\n' → logprob: -3.4323787689208984
    5. 'n' → logprob: -3.9323787689208984
    6. '

' → logprob: -3.9323787689208984
    7. '```' → logprob: -4.807378768920898
    8. '' → logprob: -4.932378768920898
    9. '\' → logprob: -4.932378768920898
    10. '    
' → logprob: -5.932378768920898

Token 23: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.927857518196106
    2. ' main' → logprob: -1.552857518196106
    3. '_' → logprob: -1.802857518196106
    4. ' saisir' → logprob: -2.8028573989868164
    5. ' test' → logprob: -3.5528573989868164
    6. ' ' → logprob: -3.8028573989868164
    7. ' espace' → logprob: -4.552857398986816
    8. ' factor' → logprob: -4.802857398986816
    9. ' somme' → logprob: -4.927857398986816
    10. ' ajouter' → logprob: -5.052857398986816

Token 24: '_ent' (ID: 66249)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6334365010261536
    2. '_l' → logprob: -0.7584365010261536
    3. '_ent' → logprob: -8.50843620300293
    4. '_t' → logprob: -9.38343620300293
    5. '_list' → logprob: -9.63343620300293
    6. '_a' → logprob: -9.88343620300293
    7. '_s' → logprob: -10.13343620300293
    8. '_c' → logprob: -10.38343620300293
    9. '_m' → logprob: -10.63343620300293
    10. '_n' → logprob: -10.63343620300293

Token 25: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.00011534435179783031
    2. 'iere' → logprob: -10.250115394592285
    3. 'iers' → logprob: -10.875115394592285
    4. '   ' → logprob: -11.000115394592285
    5. 'er' → logprob: -11.625115394592285
    6. '```' → logprob: -12.375115394592285
    7. ' ier' → logprob: -12.375115394592285
    8. 'iert' → logprob: -12.875115394592285
    9. 'i' → logprob: -12.875115394592285
    10. '  ' → logprob: -13.000115394592285

Token 26: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023381393402814865
    2. '()' → logprob: -3.773381471633911
    3. '()">' → logprob: -10.273381233215332
    4. '():
' → logprob: -11.148381233215332
    5. ' ()' → logprob: -11.148381233215332
    6. '(' → logprob: -11.273381233215332
    7. '()>' → logprob: -11.273381233215332
    8. ' ():' → logprob: -11.648381233215332
    9. '`()' → logprob: -12.398381233215332
    10. '```' → logprob: -12.648381233215332

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05294829234480858
    2. ' return' → logprob: -3.552948236465454
    3. 'return' → logprob: -4.302948474884033
    4. ' ' → logprob: -5.427948474884033
    5. '()' → logprob: -6.552948474884033
    6. '    ' → logprob: -6.677948474884033
    7. ' ()' → logprob: -7.302948474884033
    8. '  ' → logprob: -7.552948474884033
    9. 'int' → logprob: -8.052947998046875
    10. ' )' → logprob: -8.802947998046875

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4894871115684509
    2. 'return' (adapté à ' return') → logprob: -1.1144871711730957
    3. 'int' → logprob: -3.4894871711730957
    4. '   ' → logprob: -3.9894871711730957
    5. ' int' → logprob: -4.614487171173096
    6. ' ' → logprob: -10.989486694335938
    7. '    ' → logprob: -11.364486694335938
    8. '  ' → logprob: -12.614486694335938
    9. '=int' → logprob: -12.989486694335938
    10. '    
' → logprob: -13.239486694335938

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006744269747287035
    2. 'int' → logprob: -5.006744384765625
    3. ' ' → logprob: -10.506744384765625
    4. '(int' → logprob: -14.631744384765625
    5. ' in' → logprob: -15.131744384765625
    6. '  ' → logprob: -15.256744384765625
    7. '   ' → logprob: -15.381744384765625
    8. '<int' → logprob: -15.756744384765625
    9. ' ' → logprob: -16.381744384765625
    10. '	int' → logprob: -16.631744384765625

Token 30: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.02325887233018875
    2. '(' → logprob: -3.773258924484253
    3. ' (' → logprob: -12.023259162902832
    4. '(input' → logprob: -12.273259162902832
    5. '(s' → logprob: -14.023259162902832
    6. '(Sys' → logprob: -14.273259162902832
    7. '(system' → logprob: -14.648259162902832
    8. 'sys' → logprob: -15.273259162902832
    9. '(System' → logprob: -15.273259162902832
    10. '=sys' → logprob: -16.398258209228516

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04905499517917633
    2. '.' → logprob: -3.0490550994873047
    3. '.stdout' → logprob: -9.174055099487305
    4. '.readline' → logprob: -9.174055099487305
    5. 'stdin' → logprob: -9.424055099487305
    6. ' .' → logprob: -9.674055099487305
    7. '.argv' → logprob: -10.549055099487305
    8. '.std' → logprob: -10.799055099487305
    9. '.)' → logprob: -11.049055099487305
    10. ' stdin' → logprob: -11.924055099487305

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003933768020942807
    2. '.' → logprob: -7.875393390655518
    3. '.stdin' → logprob: -11.75039291381836
    4. '.)' → logprob: -13.00039291381836
    5. '.read' → logprob: -13.12539291381836
    6. ')' → logprob: -14.87539291381836
    7. '().' → logprob: -15.37539291381836
    8. '.readlines' → logprob: -15.50039291381836
    9. ').' → logprob: -15.75039291381836
    10. '.Read' → logprob: -16.75039291381836

Token 33: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02900223433971405
    2. '()))' → logprob: -3.9040021896362305
    3. '().' → logprob: -4.9040021896362305
    4. '()' → logprob: -7.2790021896362305
    5. ')' → logprob: -8.40400218963623
    6. '))' → logprob: -10.15400218963623
    7. '())
' → logprob: -10.77900218963623
    8. ' ())' → logprob: -10.90400218963623
    9. '()))
' → logprob: -12.02900218963623
    10. '()),' → logprob: -13.15400218963623

Token 34: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.773543119430542
    2. 'def' → logprob: -0.898543119430542
    3. '#' → logprob: -2.148543119430542
    4. 'n' → logprob: -5.273543357849121
    5. '\' → logprob: -5.898543357849121
    6. '
' → logprob: -6.523543357849121
    7. '```' → logprob: -6.898543357849121
    8. '' → logprob: -7.398543357849121
    9. 'a' → logprob: -7.398543357849121
    10. 'i' → logprob: -7.523543357849121

Token 35: ' fonction' (ID: 17610)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.0851330757141113
    2. ' main' → logprob: -1.3351330757141113
    3. ' calcul' → logprob: -1.7101330757141113
    4. ' lire' → logprob: -3.0851330757141113
    5. ' ' → logprob: -3.3351330757141113
    6. ' afficher' → logprob: -3.5851330757141113
    7. ' factor' → logprob: -4.085133075714111
    8. ' addition' → logprob: -4.210133075714111
    9. ' saisir' → logprob: -4.835133075714111
    10. ' ajouter' → logprob: -4.960133075714111

Token 36: '_C' (ID: 1720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0018894951790571213
    2. '(' → logprob: -6.376889705657959
    3. '_s' → logprob: -9.8768892288208
    4. '_util' → logprob: -10.3768892288208
    5. '_a' → logprob: -11.2518892288208
    6. '_(' → logprob: -11.8768892288208
    7. '__' → logprob: -12.1268892288208
    8. '_parent' → logprob: -12.2518892288208
    9. '_)' → logprob: -12.3768892288208
    10. ' _' → logprob: -12.6268892288208

Token 37: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017582837492227554
    2. '()' → logprob: -4.642582893371582
    3. '_' → logprob: -5.017582893371582
    4. '():' → logprob: -8.517582893371582
    5. '```' → logprob: -9.267582893371582
    6. '(a' → logprob: -9.392582893371582
    7. 'u' → logprob: -9.767582893371582
    8. '(_)' → logprob: -9.892582893371582
    9. 'a' → logprob: -10.017582893371582
    10. ' (' → logprob: -10.267582893371582

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31561246514320374
    2. ' ' → logprob: -2.065612554550171
    3. '    ' → logprob: -2.315612554550171
    4. '(' → logprob: -4.190612316131592
    5. '    
' → logprob: -4.565612316131592
    6. ' 
' → logprob: -5.315612316131592
    7. '\' → logprob: -5.565612316131592
    8. '<|end|>' → logprob: -6.315612316131592
    9. ' pass' → logprob: -6.940612316131592
    10. '\n' → logprob: -7.065612316131592

Token 39: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3248206377029419
    2. '(' → logprob: -2.6998205184936523
    3. '    ' → logprob: -2.6998205184936523
    4. 'r' → logprob: -2.8248205184936523
    5. 'n' → logprob: -3.4498205184936523
    6. '   ' → logprob: -4.199820518493652
    7. ' (' → logprob: -4.699820518493652
    8. ' pass' → logprob: -5.324820518493652
    9. 'a' → logprob: -5.699820518493652
    10. '#' → logprob: -5.824820518493652

Token 40: ' pg' (ID: 32259)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -1.1006603240966797
    2. ' ' → logprob: -1.2256603240966797
    3. '_' → logprob: -1.6006603240966797
    4. ' ' → logprob: -2.9756603240966797
    5. ' espace' → logprob: -3.4756603240966797
    6. ' _' → logprob: -4.22566032409668
    7. 'fonction' → logprob: -4.35066032409668
    8. '  ' → logprob: -4.72566032409668
    9. ' f' → logprob: -4.72566032409668
    10. '_c' → logprob: -4.85066032409668

Token 41: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00036787090357393026
    2. 'c' → logprob: -8.125368118286133
    3. 'dc' → logprob: -10.125368118286133
    4. '```' → logprob: -11.250368118286133
    5. 'reat' → logprob: -12.250368118286133
    6. 'g' → logprob: -13.375368118286133
    7. 'r' → logprob: -13.375368118286133
    8. 'cm' → logprob: -13.625368118286133
    9. 'cc' → logprob: -13.625368118286133
    10. 'cdn' → logprob: -13.750368118286133

Token 42: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009252701885998249
    2. '<|end|>' → logprob: -5.759252548217773
    3. '_' → logprob: -5.884252548217773
    4. '(a' → logprob: -6.509252548217773
    5. ' (' → logprob: -7.259252548217773
    6. '(x' → logprob: -8.384252548217773
    7. 'a' → logprob: -8.884252548217773
    8. '<|end|>' → logprob: -9.009252548217773
    9. '("("' → logprob: -9.259252548217773
    10. 's' → logprob: -9.384252548217773

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030686063109897077
    2. ' ,' → logprob: -8.375307083129883
    3. ',b' → logprob: -10.000307083129883
    4. ',a' → logprob: -10.875307083129883
    5. ',)' → logprob: -12.500307083129883
    6. ')' → logprob: -12.625307083129883
    7. 'a' → logprob: -14.125307083129883
    8. ',

' → logprob: -14.375307083129883
    9. ',n' → logprob: -14.625307083129883
    10. ',r' → logprob: -14.875307083129883

Token 44: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5760282874107361
    2. 'b' → logprob: -0.8260282874107361
    3. ' ' → logprob: -9.451027870178223
    4. ' ' → logprob: -12.076027870178223
    5. '<|end|>' → logprob: -13.326027870178223
    6. ',b' → logprob: -14.076027870178223
    7. ' )' → logprob: -14.576027870178223
    8. ')b' → logprob: -14.701027870178223
    9. '	b' → logprob: -14.826027870178223
    10. ' б' → logprob: -15.826027870178223

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006120019243098795
    2. ')' → logprob: -8.250612258911133
    3. '):
' → logprob: -8.500612258911133
    4. ',' → logprob: -9.625612258911133
    5. ' ):' → logprob: -10.125612258911133
    6. '   ' → logprob: -10.625612258911133
    7. ':' → logprob: -11.500612258911133
    8. ' ' → logprob: -13.625612258911133
    9. '=' → logprob: -14.250612258911133
    10. '  ' → logprob: -14.500612258911133

Token 46: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1862883567810059
    2. ':' → logprob: -1.3112883567810059
    3. ')' → logprob: -1.4362883567810059
    4. '   ' → logprob: -2.686288356781006
    5. '       ' → logprob: -3.311288356781006
    6. '(' → logprob: -3.436288356781006
    7. ' ' → logprob: -5.061288356781006
    8. '_' → logprob: -5.686288356781006
    9. '():' → logprob: -5.686288356781006
    10. '<|end|>' → logprob: -5.686288356781006

Token 47: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01815415732562542
    2. ' 
' → logprob: -5.268154144287109
    3. ' if' → logprob: -5.393154144287109
    4. '   ' → logprob: -6.393154144287109
    5. '    ' → logprob: -6.643154144287109
    6. ' while' → logprob: -7.268154144287109
    7. 'if' → logprob: -7.268154144287109
    8. '0' → logprob: -7.518154144287109
    9. ' )' → logprob: -7.768154144287109
    10. 'r' → logprob: -7.893154144287109

Token 48: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0176753681153059
    2. 'b' → logprob: -4.142675399780273
    3. ' a' → logprob: -6.767675399780273
    4. 'a' → logprob: -7.642675399780273
    5. ' ' → logprob: -11.642675399780273
    6. '	b' → logprob: -14.767675399780273
    7. '_b' → logprob: -15.142675399780273
    8. ' ' → logprob: -16.142675399780273
    9. ' б' → logprob: -16.642675399780273
    10. '	a' → logprob: -17.392675399780273

Token 49: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03210285305976868
    2. ':' → logprob: -4.282103061676025
    3. '!=' → logprob: -4.907103061676025
    4. ' ' → logprob: -5.907103061676025
    5. '<|end|>' → logprob: -6.157103061676025
    6. ' >' → logprob: -6.282103061676025
    7. ' :' → logprob: -6.782103061676025
    8. '>' → logprob: -7.407103061676025
    9. ' ' → logprob: -7.657103061676025
    10. ' and' → logprob: -7.782103061676025

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141518115997314
    2. '0' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.201415061950684
    4. '  ' → logprob: -18.076416015625
    5. '	' → logprob: -18.576416015625
    6. '۰' → logprob: -18.701416015625
    7. '   ' → logprob: -19.201416015625
    8. ' ' → logprob: -19.701416015625
    9. '```' → logprob: -19.701416015625
    10. ' ' → logprob: -21.138916015625

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. ' ' → logprob: -18.375179290771484
    4. '۰' → logprob: -19.875179290771484
    5. '  ' → logprob: -20.250179290771484
    6. '```' → logprob: -20.500179290771484
    7. '   ' → logprob: -21.000179290771484
    8. '00' → logprob: -21.625179290771484
    9. ' ' → logprob: -21.750179290771484
    10. '０' → logprob: -22.000179290771484

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002524768700823188
    2. ' :' → logprob: -6.7525248527526855
    3. '):' → logprob: -7.1275248527526855
    4. '<|end|>' → logprob: -8.377524375915527
    5. ':
' → logprob: -8.752524375915527
    6. '       ' → logprob: -9.627524375915527
    7. ')' → logprob: -10.752524375915527
    8. ',' → logprob: -10.752524375915527
    9. ':return' → logprob: -11.127524375915527
    10. '           ' → logprob: -11.502524375915527

Token 53: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6036778688430786
    2. ' :' → logprob: -1.6036778688430786
    3. '           ' → logprob: -1.7286778688430786
    4. ' ' → logprob: -3.478677749633789
    5. '<|end|>' → logprob: -3.978677749633789
    6. '       ' → logprob: -4.228677749633789
    7. ':
' → logprob: -6.353677749633789
    8. '        ' → logprob: -6.478677749633789
    9. '   ' → logprob: -6.728677749633789
    10. ')' → logprob: -6.853677749633789

Token 54: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8368761539459229
    2. 'a' (adapté à ' a') → logprob: -1.2118761539459229
    3. ' a' → logprob: -1.3368761539459229
    4. '            ' → logprob: -5.836875915527344
    5. '    ' → logprob: -6.836875915527344
    6. ' ' → logprob: -7.836875915527344
    7. ' 
' → logprob: -7.836875915527344
    8. '        ' → logprob: -8.336875915527344
    9. '<|end|>' → logprob: -8.336875915527344
    10. ' ```' → logprob: -8.586875915527344

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026464244350790977
    2. ' ,' → logprob: -4.276464462280273
    3. ' %=' → logprob: -4.776464462280273
    4. ' %' → logprob: -6.026464462280273
    5. '%' → logprob: -7.026464462280273
    6. ' =' → logprob: -8.526464462280273
    7. '<|end|>' → logprob: -9.026464462280273
    8. ' ' → logprob: -9.651464462280273
    9. '=' → logprob: -10.526464462280273
    10. ' %,' → logprob: -10.526464462280273

Token 56: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.17995324730873108
    2. 'b' → logprob: -1.8049532175064087
    3. ' ' → logprob: -8.929953575134277
    4. '<|end|>' → logprob: -9.554953575134277
    5. ' ' → logprob: -12.429953575134277
    6. '	b' → logprob: -14.679953575134277
    7. '<|end|>' → logprob: -14.679953575134277
    8. 'space' → logprob: -15.929953575134277
    9. 's' → logprob: -17.05495262145996
    10. '>b' → logprob: -17.17995262145996

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006729576736688614
    2. '=' → logprob: -5.006729602813721
    3. '<|end|>' → logprob: -11.756729125976562
    4. ',' → logprob: -12.756729125976562
    5. ' ' → logprob: -13.256729125976562
    6. ' =)' → logprob: -14.381729125976562
    7. ')' → logprob: -15.006729125976562
    8. ' =
' → logprob: -15.381729125976562
    9. ' %=' → logprob: -16.131729125976562
    10. '<|end|>' → logprob: -16.506729125976562

Token 58: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.014166564680635929
    2. 'b' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.264166831970215
    4. ' ' → logprob: -14.014166831970215
    5. '	b' → logprob: -15.764166831970215
    6. ' (' → logprob: -16.3891658782959
    7. '<|end|>' → logprob: -16.3891658782959
    8. ')b' → logprob: -16.6391658782959
    9. '(b' → logprob: -17.1391658782959
    10. '>b' → logprob: -17.3891658782959

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036612374242395163
    2. ' ,' → logprob: -5.628661155700684
    3. ' ' → logprob: -10.253661155700684
    4. ' a' → logprob: -11.628661155700684
    5. 'a' → logprob: -11.753661155700684
    6. ',a' → logprob: -12.503661155700684
    7. '<|end|>' → logprob: -13.378661155700684
    8. ' b' → logprob: -13.503661155700684
    9. ',
' → logprob: -14.128661155700684
    10. ',b' → logprob: -14.378661155700684

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519332468509674
    2. 'a' → logprob: -1.501933217048645
    3. ' ' → logprob: -13.126933097839355
    4. '	a' → logprob: -14.251933097839355
    5. '<|end|>' → logprob: -14.251933097839355
    6. ' ' → logprob: -14.501933097839355
    7. '>a' → logprob: -15.376933097839355
    8. '<|end|>' → logprob: -17.751934051513672
    9. '0' → logprob: -17.876934051513672
    10. '  ' → logprob: -18.126934051513672

Token 61: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759549736976624
    2. ' %' → logprob: -0.8259549736976624
    3. '%b' → logprob: -11.450955390930176
    4. ' ' → logprob: -13.325955390930176
    5. '%i' → logprob: -13.950955390930176
    6. 'a' → logprob: -14.700955390930176
    7. '%A' → logprob: -14.700955390930176
    8. ' ' → logprob: -14.825955390930176
    9. '%e' → logprob: -14.825955390930176
    10. '%c' → logprob: -15.825955390930176

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. ' ' → logprob: -19.878177642822266
    4. '	b' → logprob: -20.253177642822266
    5. '<|end|>' → logprob: -20.878177642822266
    6. '>b' → logprob: -21.503177642822266
    7. ')b' → logprob: -21.878177642822266
    8. '%b' → logprob: -22.628177642822266
    9. '```' → logprob: -22.628177642822266
    10. '_b' → logprob: -22.878177642822266

Token 63: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8824723958969116
    2. '<|end|>' → logprob: -1.0074723958969116
    3. '
' → logprob: -1.8824723958969116
    4. ')' → logprob: -3.007472515106201
    5. ' 
' → logprob: -5.007472515106201
    6. '<|end|>' → logprob: -5.632472515106201
    7. 'newline' → logprob: -6.007472515106201
    8. '\' → logprob: -6.132472515106201
    9. '```' → logprob: -7.007472515106201
    10. ' ' → logprob: -7.382472515106201

Token 64: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7891360521316528
    2. ' 
' → logprob: -1.5391360521316528
    3. '
' → logprob: -1.6641360521316528
    4. '<|end|>' → logprob: -2.7891359329223633
    5. '   ' → logprob: -3.7891359329223633
    6. ' ' → logprob: -4.539135932922363
    7. '\' → logprob: -4.789135932922363
    8. ')' → logprob: -5.039135932922363
    9. '    
' → logprob: -5.164135932922363
    10. 'newline' → logprob: -5.539135932922363

Token 65: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12114674597978592
    2. '       ' → logprob: -2.3711466789245605
    3. ' return' → logprob: -5.6211466789245605
    4. '    
' → logprob: -5.8711466789245605
    5. ' 
' → logprob: -5.8711466789245605
    6. '
' → logprob: -6.3711466789245605
    7. '<|end|>' → logprob: -6.3711466789245605
    8. 'return' (adapté à ' return') → logprob: -6.4961466789245605
    9. '    ' → logprob: -6.4961466789245605
    10. ' ' → logprob: -6.7461466789245605

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233882926404476
    2. ' a' → logprob: -5.2552337646484375
    3. '	a' → logprob: -16.255233764648438
    4. ' ' → logprob: -17.630233764648438
    5. ' ' → logprob: -18.505233764648438
    6. '_a' → logprob: -19.380233764648438
    7. 'abs' → logprob: -20.880233764648438
    8. 'а' → logprob: -21.005233764648438
    9. ''a' → logprob: -21.255233764648438
    10. '  ' → logprob: -22.005233764648438

Token 67: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37929683923721313
    2. '<|end|>' → logprob: -1.3792967796325684
    3. '   ' → logprob: -4.004296779632568
    4. '    
' → logprob: -4.254296779632568
    5. ' 
' → logprob: -4.379296779632568
    6. 'n' → logprob: -4.879296779632568
    7. '

' → logprob: -6.254296779632568
    8. '' → logprob: -6.504296779632568
    9. '<|end|>' → logprob: -6.629296779632568
    10. '\n' → logprob: -6.879296779632568

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6107573509216309
    2. '   ' → logprob: -0.9857573509216309
    3. '    
' → logprob: -3.485757350921631
    4. 'n' → logprob: -3.735757350921631
    5. 'def' → logprob: -4.485757350921631
    6. '  
' → logprob: -5.360757350921631
    7. ' 
' → logprob: -5.610757350921631
    8. '

' → logprob: -5.985757350921631
    9. '<|end|>' → logprob: -6.235757350921631
    10. ' 

' → logprob: -7.360757350921631

Token 69: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2847959101200104
    2. '   ' → logprob: -1.784795880317688
    3. 'def' → logprob: -3.2847959995269775
    4. 'a' → logprob: -3.7847959995269775
    5. 'x' → logprob: -4.409795761108398
    6. 't' → logprob: -6.284795761108398
    7. 'm' → logprob: -6.659795761108398
    8. 'N' → logprob: -7.284795761108398
    9. '    
' → logprob: -7.659795761108398
    10. ' n' → logprob: -7.659795761108398

Token 70: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0041217380203306675
    2. '=' → logprob: -5.504121780395508
    3. ',' → logprob: -10.629121780395508
    4. ' ' → logprob: -11.379121780395508
    5. ' ,' → logprob: -12.754121780395508
    6. '  ' → logprob: -13.629121780395508
    7. ' ' → logprob: -13.754121780395508
    8. ' =
' → logprob: -14.379121780395508
    9. ' =)' → logprob: -14.504121780395508
    10. '   ' → logprob: -14.879121780395508

Token 71: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1957591474056244
    2. 'k' → logprob: -2.0707590579986572
    3. ' m' → logprob: -3.8207590579986572
    4. 'a' → logprob: -4.945759296417236
    5. 'x' → logprob: -4.945759296417236
    6. ' k' → logprob: -5.445759296417236
    7. 'p' → logprob: -6.070759296417236
    8. 'd' → logprob: -6.445759296417236
    9. 't' → logprob: -6.570759296417236
    10. 'l' → logprob: -7.070759296417236

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10069011896848679
    2. '=' → logprob: -2.3506901264190674
    3. ',' → logprob: -7.725689888000488
    4. 's' → logprob: -10.600689888000488
    5. ')' → logprob: -12.225689888000488
    6. '<|end|>' → logprob: -12.725689888000488
    7. 'a' → logprob: -13.975689888000488
    8. '_' → logprob: -13.975689888000488
    9. '.' → logprob: -14.350689888000488
    10. '=int' → logprob: -14.663189888000488

Token 73: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.05317224562168121
    2. 'l' → logprob: -3.0531723499298096
    3. ' l' → logprob: -5.4281721115112305
    4. ' ' → logprob: -9.17817211151123
    5. '	l' → logprob: -11.05317211151123
    6. '  ' → logprob: -11.55317211151123
    7. ' lir' → logprob: -11.67817211151123
    8. '   ' → logprob: -11.80317211151123
    9. ' Lire' → logprob: -11.92817211151123
    10. 'Lire' → logprob: -12.42817211151123

Token 74: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.07075487822294235
    2. '_ent' → logprob: -3.0707547664642334
    3. '_' → logprob: -3.8207547664642334
    4. '_n' → logprob: -12.070755004882812
    5. '_en' → logprob: -14.195755004882812
    6. '_x' → logprob: -14.195755004882812
    7. '_s' → logprob: -14.320755004882812
    8. ' _' → logprob: -14.695755004882812
    9. '_a' → logprob: -14.820755004882812
    10. '_li' → logprob: -14.820755004882812

Token 75: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0004259084234945476
    2. 'ist' → logprob: -8.625426292419434
    3. 'ste' → logprob: -10.250426292419434
    4. 'istre' → logprob: -10.750426292419434
    5. 'ire' → logprob: -10.875426292419434
    6. '_' → logprob: -11.125426292419434
    7. 'ente' → logprob: -11.125426292419434
    8. '   ' → logprob: -11.250426292419434
    9. 'liste' → logprob: -11.250426292419434
    10. 'site' → logprob: -11.375426292419434

Token 76: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -2.0219828002154827e-05
    2. '_' → logprob: -10.875020027160645
    3. 'ent' → logprob: -14.125020027160645
    4. '_des' → logprob: -15.875020027160645
    5. '	ent' → logprob: -16.50002098083496
    6. '(ent' → logprob: -16.75002098083496
    7. '_int' → logprob: -16.75002098083496
    8. '```' → logprob: -17.12502098083496
    9. '_ENT' → logprob: -17.25002098083496
    10. '_en' → logprob: -17.37502098083496

Token 77: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0003346314188092947
    2. 't' → logprob: -8.625334739685059
    3. 'tiers' → logprob: -9.125334739685059
    4. 'ters' → logprob: -10.375334739685059
    5. 'gers' → logprob: -12.000334739685059
    6. 'ti' → logprob: -13.375334739685059
    7. 'ers' → logprob: -13.375334739685059
    8. '```' → logprob: -13.750334739685059
    9. 'ier' → logprob: -14.000334739685059
    10. 'tiens' → logprob: -14.625334739685059

Token 78: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.166338137816638e-05
    2. '()
' → logprob: -11.125031471252441
    3. '(' → logprob: -11.375031471252441
    4. ')' → logprob: -13.125031471252441
    5. ' ()' → logprob: -13.125031471252441
    6. '()\' → logprob: -15.000031471252441
    7. '()[' → logprob: -15.250031471252441
    8. '[' → logprob: -15.875031471252441
    9. '();' → logprob: -16.000032424926758
    10. ' ' → logprob: -16.250032424926758

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0542960166931152
    2. '
' → logprob: -1.1792960166931152
    3. '    
' → logprob: -1.8042960166931152
    4. '<|end|>' → logprob: -2.5542960166931152
    5. ' 
' → logprob: -3.1792960166931152
    6. '  
' → logprob: -3.5542960166931152
    7. '   
' → logprob: -4.304296016693115
    8. 'n' → logprob: -5.054296016693115
    9. ' ' → logprob: -6.554296016693115
    10. '```' → logprob: -6.679296016693115

Token 80: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6102520823478699
    2. 'lst' → logprob: -2.3602521419525146
    3. 'arr' → logprob: -2.7352521419525146
    4. 'val' → logprob: -3.4852521419525146
    5. 'v' → logprob: -3.6102521419525146
    6. 'values' → logprob: -3.8602521419525146
    7. 'm' → logprob: -3.8602521419525146
    8. 'l' → logprob: -3.8602521419525146
    9. 'div' → logprob: -3.9852521419525146
    10. 'res' → logprob: -4.2352519035339355

Token 81: '_list' (ID: 4162)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22066736221313477
    2. '%' → logprob: -1.8456673622131348
    3. ' =' → logprob: -4.220667362213135
    4. ' %=' → logprob: -4.720667362213135
    5. ' ' → logprob: -4.845667362213135
    6. '=' → logprob: -5.595667362213135
    7. ' //' → logprob: -6.345667362213135
    8. ',' → logprob: -6.720667362213135
    9. '_' → logprob: -6.970667362213135
    10. '[' → logprob: -8.970666885375977

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018257755786180496
    2. '=' → logprob: -4.0182576179504395
    3. ',' → logprob: -10.268258094787598
    4. '.append' → logprob: -10.893258094787598
    5. '.' → logprob: -11.268258094787598
    6. '[' → logprob: -11.268258094787598
    7. ' ' → logprob: -11.893258094787598
    8. '=[]' → logprob: -11.893258094787598
    9. '[:]' → logprob: -12.393258094787598
    10. ')' → logprob: -12.893258094787598

Token 83: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.11711909621953964
    2. ' []' → logprob: -2.742119073867798
    3. ' [' → logprob: -3.617119073867798
    4. 'l' → logprob: -4.742119312286377
    5. ' l' → logprob: -5.742119312286377
    6. '[]' → logprob: -5.742119312286377
    7. '[l' → logprob: -6.367119312286377
    8. '[' → logprob: -6.742119312286377
    9. ' ' → logprob: -8.367118835449219
    10. '   ' → logprob: -8.742118835449219

Token 84: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.860340752406046e-05
    2. '_ent' → logprob: -10.6250581741333
    3. '_list' → logprob: -11.0000581741333
    4. '_' → logprob: -11.1250581741333
    5. '_s' → logprob: -14.8750581741333
    6. '_la' → logprob: -14.8750581741333
    7. ' _' → logprob: -15.1250581741333
    8. '_li' → logprob: -15.5000581741333
    9. '_lst' → logprob: -15.6250581741333
    10. 'liste' → logprob: -15.6250581741333

Token 85: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.06379694491624832
    2. 'ist' → logprob: -2.8137969970703125
    3. 'ste' → logprob: -7.0637969970703125
    4. 'ent' → logprob: -7.9387969970703125
    5. '_' → logprob: -9.188796997070312
    6. 'site' → logprob: -9.813796997070312
    7. 'te' → logprob: -9.938796997070312
    8. 'ite' → logprob: -10.063796997070312
    9. '_ent' → logprob: -10.063796997070312
    10. 'liste' → logprob: -10.188796997070312

Token 86: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0005406428826972842
    2. 'ent' → logprob: -7.625540733337402
    3. '_' → logprob: -10.250540733337402
    4. '	ent' → logprob: -12.750540733337402
    5. '_ENT' → logprob: -13.000540733337402
    6. 's' → logprob: -13.375540733337402
    7. '(ent' → logprob: -13.375540733337402
    8. '_int' → logprob: -13.500540733337402
    9. '_des' → logprob: -14.250540733337402
    10. ''ent' → logprob: -14.250540733337402

Token 87: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.7372048862162046e-05
    2. 'ers' → logprob: -10.625027656555176
    3. 'ier' → logprob: -13.750027656555176
    4. 'gers' → logprob: -14.625027656555176
    5. '```' → logprob: -14.750027656555176
    6. 'i' → logprob: -15.000027656555176
    7. 'ieurs' → logprob: -16.25002670288086
    8. '[i' → logprob: -16.25002670288086
    9. '(i' → logprob: -16.50002670288086
    10. 'eurs' → logprob: -16.50002670288086

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.500009536743164
    3. '()
' → logprob: -13.250009536743164
    4. '()]' → logprob: -13.375009536743164
    5. '()

' → logprob: -14.500009536743164
    6. '()`' → logprob: -14.625009536743164
    7. ' ()' → logprob: -15.250009536743164
    8. '())' → logprob: -15.375009536743164
    9. '`()' → logprob: -15.875009536743164
    10. '();' → logprob: -16.000009536743164

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1565810739994049
    2. '
' → logprob: -2.531581163406372
    3. '    
' → logprob: -3.031581163406372
    4. 'n' → logprob: -5.281580924987793
    5. ' 
' → logprob: -6.531580924987793
    6. '   
' → logprob: -6.781580924987793
    7. '    ' → logprob: -6.906580924987793
    8. '  
' → logprob: -7.031580924987793
    9. 'x' → logprob: -7.156580924987793
    10. 's' → logprob: -7.281580924987793

Token 90: ' x' (ID: 1215)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1361584663391113
    2. '   ' → logprob: -1.3861584663391113
    3. 'n' → logprob: -2.3861584663391113
    4. '    
' → logprob: -2.7611584663391113
    5. ' 
' → logprob: -3.1361584663391113
    6. 'g' → logprob: -3.3861584663391113
    7. 'm' → logprob: -3.6361584663391113
    8. 'x' (adapté à ' x') → logprob: -3.6361584663391113
    9. 'r' → logprob: -3.7611584663391113
    10. 'c' → logprob: -3.8861584663391113

Token 91: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015378349926322699
    2. '[' → logprob: -7.376537799835205
    3. '_list' → logprob: -8.126538276672363
    4. '_x' → logprob: -9.001538276672363
    5. ' _' → logprob: -9.251538276672363
    6. 's' → logprob: -9.751538276672363
    7. '[:]' → logprob: -10.126538276672363
    8. '_=' → logprob: -10.501538276672363
    9. '=' → logprob: -10.751538276672363
    10. '_[' → logprob: -11.001538276672363

Token 92: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3158760666847229
    2. '.sort' → logprob: -2.065876007080078
    3. '[' → logprob: -2.690876007080078
    4. '[:]' → logprob: -3.315876007080078
    5. '<|end|>' → logprob: -4.315876007080078
    6. ',' → logprob: -4.690876007080078
    7. '=' → logprob: -4.940876007080078
    8. ' =' → logprob: -5.940876007080078
    9. '.append' → logprob: -6.065876007080078
    10. '.remove' → logprob: -6.565876007080078

Token 93: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31332114338874817
    2. '(' → logprob: -1.3133211135864258
    3. '(
' → logprob: -9.938321113586426
    4. '((' → logprob: -12.063321113586426
    5. '(s' → logprob: -13.563321113586426
    6. ' (' → logprob: -13.938321113586426
    7. '()' → logprob: -14.438321113586426
    8. '(n' → logprob: -14.813321113586426
    9. '(int' → logprob: -14.813321113586426
    10. '(

' → logprob: -14.813321113586426

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015881775179877877
    2. ' )' → logprob: -6.501588344573975
    3. ')
' → logprob: -10.001587867736816
    4. '-' → logprob: -11.126587867736816
    5. '*' → logprob: -12.126587867736816
    6. '+' → logprob: -12.251587867736816
    7. '))' → logprob: -12.626587867736816
    8. ' ' → logprob: -13.001587867736816
    9. ' -' → logprob: -13.876587867736816
    10. ')

' → logprob: -14.001587867736816

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1120181754231453
    2. '    
' → logprob: -2.86201810836792
    3. '   ' → logprob: -3.61201810836792
    4. ' 
' → logprob: -5.11201810836792
    5. '<|end|>' → logprob: -5.61201810836792
    6. '  
' → logprob: -5.98701810836792
    7. '' → logprob: -5.98701810836792
    8. '   
' → logprob: -6.61201810836792
    9. 'n' → logprob: -6.98701810836792
    10. '\n' → logprob: -7.11201810836792

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.3814563751220703
    2. '    
' → logprob: -1.3814563751220703
    3. '   ' → logprob: -1.6314563751220703
    4. '
' → logprob: -2.0064563751220703
    5. ' 
' → logprob: -2.6314563751220703
    6. 'n' → logprob: -4.13145637512207
    7. 's' → logprob: -4.25645637512207
    8. '_' → logprob: -4.63145637512207
    9. '   
' → logprob: -4.63145637512207
    10. ' x' → logprob: -4.88145637512207

Token 97: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4149908423423767
    2. '_list' → logprob: -1.4149909019470215
    3. '=' → logprob: -4.0399909019470215
    4. ')' → logprob: -4.0399909019470215
    5. ',' → logprob: -4.0399909019470215
    6. ' ' → logprob: -4.2899909019470215
    7. '<|end|>' → logprob: -4.4149909019470215
    8. ' =' → logprob: -5.2899909019470215
    9. '.' → logprob: -5.9149909019470215
    10. '*' → logprob: -6.2899909019470215

Token 98: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.035415876656770706
    2. '.' → logprob: -3.4104158878326416
    3. ',' → logprob: -7.1604156494140625
    4. ')' → logprob: -8.535415649414062
    5. '=' → logprob: -8.660415649414062
    6. 'sort' → logprob: -8.785415649414062
    7. '<|end|>' → logprob: -8.910415649414062
    8. '[' → logprob: -9.285415649414062
    9. '.pop' → logprob: -9.535415649414062
    10. '_sorted' → logprob: -10.035415649414062

Token 99: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007615390233695507
    2. '(' → logprob: -4.882615566253662
    3. '()
' → logprob: -13.132615089416504
    4. '();' → logprob: -13.507615089416504
    5. '()

' → logprob: -14.007615089416504
    6. '()>' → logprob: -14.382615089416504
    7. '(),' → logprob: -14.757615089416504
    8. '()</' → logprob: -14.757615089416504
    9. '()?' → logprob: -14.757615089416504
    10. '().' → logprob: -14.882615089416504

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.899405837059021
    2. '
' → logprob: -1.024405837059021
    3. '    
' → logprob: -2.0244059562683105
    4. '<|end|>' → logprob: -3.6494059562683105
    5. '  
' → logprob: -4.2744059562683105
    6. 'n' → logprob: -4.7744059562683105
    7. ',' → logprob: -4.8994059562683105
    8. ' ' → logprob: -4.8994059562683105
    9. ' 
' → logprob: -5.1494059562683105
    10. 'x' → logprob: -5.3994059562683105

Token 101: ' re' (ID: 322)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6148561835289001
    2. 'diff' → logprob: -1.989856243133545
    3. 'dif' → logprob: -2.114856243133545
    4. 'e' → logprob: -2.364856243133545
    5. 'g' → logprob: -3.114856243133545
    6. 'p' → logprob: -3.864856243133545
    7. 'm' → logprob: -4.989856243133545
    8. 'c' → logprob: -4.989856243133545
    9. 'result' → logprob: -4.989856243133545
    10. 'i' → logprob: -5.489856243133545

Token 102: 'ponse' (ID: 1439)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006338051171042025
    2. 'm' → logprob: -8.00063419342041
    3. 'su' → logprob: -9.25063419342041
    4. 'st' → logprob: -9.62563419342041
    5. 'sum' → logprob: -10.50063419342041
    6. 't' → logprob: -10.62563419342041
    7. 'p' → logprob: -10.62563419342041
    8. 'ponse' → logprob: -10.87563419342041
    9. 'turn' → logprob: -11.62563419342041
    10. 'd' → logprob: -11.75063419342041

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012073138728737831
    2. '=' → logprob: -4.637073040008545
    3. '_' → logprob: -6.637073040008545
    4. ' ' → logprob: -7.262073040008545
    5. 's' → logprob: -8.262073516845703
    6. 'es' → logprob: -11.262073516845703
    7. '  ' → logprob: -12.637073516845703
    8. 'e' → logprob: -12.887073516845703
    9. ' ' → logprob: -12.887073516845703
    10. '_space' → logprob: -13.012073516845703

Token 104: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8626155257225037
    2. ' ' → logprob: -0.9876155257225037
    3. ' x' → logprob: -1.8626155853271484
    4. 'x' → logprob: -3.4876155853271484
    5. ' float' → logprob: -4.862615585327148
    6. 'float' → logprob: -5.862615585327148
    7. '1' → logprob: -6.362615585327148
    8. 'abs' → logprob: -6.362615585327148
    9. ' abs' → logprob: -6.612615585327148
    10. '100' → logprob: -7.112615585327148

Token 105: '_list' (ID: 4162)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6281747817993164
    2. '<|end|>' → logprob: -1.2531747817993164
    3. '+' → logprob: -2.2531747817993164
    4. ' -' → logprob: -3.6281747817993164
    5. ' ' → logprob: -4.003174781799316
    6. '
' → logprob: -4.128174781799316
    7. '<|end|>' → logprob: -5.878174781799316
    8. 'for' → logprob: -6.003174781799316
    9. ' for' → logprob: -6.503174781799316
    10. '  
' → logprob: -6.878174781799316

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07892625778913498
    2. '[-' → logprob: -2.5789263248443604
    3. '[len' → logprob: -11.453926086425781
    4. '[:-' → logprob: -12.078926086425781
    5. '[:]' → logprob: -12.078926086425781
    6. '[n' → logprob: -12.203926086425781
    7. '[
' → logprob: -13.578926086425781
    8. '1' → logprob: -13.828926086425781
    9. '
' → logprob: -13.953926086425781
    10. '[]' → logprob: -14.203926086425781

Token 107: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2756393253803253
    2. '0' → logprob: -1.900639295578003
    3. '1' → logprob: -2.400639295578003
    4. ' -' → logprob: -7.650639533996582
    5. 'len' → logprob: -9.150639533996582
    6. '2' → logprob: -9.150639533996582
    7. ' ' → logprob: -10.025639533996582
    8. ']' → logprob: -11.150639533996582
    9. 'n' → logprob: -12.025639533996582
    10. '   ' → logprob: -12.838139533996582

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014751063426956534
    2. ']-' → logprob: -7.5014753341674805
    3. '-' → logprob: -8.00147533416748
    4. ' ]' → logprob: -8.12647533416748
    5. ' -' → logprob: -9.12647533416748
    6. '[' → logprob: -9.75147533416748
    7. ')' → logprob: -10.00147533416748
    8. ')]' → logprob: -10.50147533416748
    9. '"' → logprob: -11.25147533416748
    10. '']' → logprob: -11.87647533416748

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08923149108886719
    2. '-' → logprob: -2.464231491088867
    3. '<|end|>' → logprob: -8.214231491088867
    4. ' ' → logprob: -12.089231491088867
    5. ')' → logprob: -12.339231491088867
    6. ' ' → logprob: -13.214231491088867
    7. '0' → logprob: -13.964231491088867
    8. '   ' → logprob: -13.964231491088867
    9. '[' → logprob: -14.089231491088867
    10. 'diff' → logprob: -14.339231491088867

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006293982733041048
    2. ' x' → logprob: -7.375629425048828
    3. '0' → logprob: -12.875629425048828
    4. ' ' → logprob: -15.625629425048828
    5. '1' → logprob: -15.875629425048828
    6. '	x' → logprob: -16.625629425048828
    7. '  ' → logprob: -17.375629425048828
    8. '   ' → logprob: -18.000629425048828
    9. '2' → logprob: -20.125629425048828
    10. '(x' → logprob: -20.500629425048828

Token 111: '_list' (ID: 4162)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013788063079118729
    2. '0' → logprob: -6.626379013061523
    3. 's' → logprob: -11.001379013061523
    4. '[-' → logprob: -11.876379013061523
    5. '\[' → logprob: -12.751379013061523
    6. ' [' → logprob: -13.376379013061523
    7. ''[' → logprob: -13.438879013061523
    8. 'x' → logprob: -13.438879013061523
    9. '()[' → logprob: -13.563879013061523
    10. '1' → logprob: -13.563879013061523

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -17.625
    4. '-' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. '  ' → logprob: -18.1875
    7. '1' → logprob: -18.6875
    8. '[' → logprob: -19.1875
    9. '٠' → logprob: -19.3125
    10. '０' → logprob: -19.375

Token 114: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007780580781400204
    2. '<|end|>' → logprob: -7.3757781982421875
    3. ' )' → logprob: -10.250778198242188
    4. '   ' → logprob: -10.500778198242188
    5. ']' → logprob: -10.500778198242188
    6. ')
' → logprob: -11.000778198242188
    7. '
' → logprob: -11.000778198242188
    8. '<|end|>' → logprob: -11.625778198242188
    9. 'for' → logprob: -13.125778198242188
    10. '```' → logprob: -13.500778198242188

Token 115: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12170324474573135
    2. ' for' → logprob: -2.2467031478881836
    3. '<|end|>' → logprob: -4.871703147888184
    4. ')' → logprob: -7.746703147888184
    5. '```' → logprob: -8.746703147888184
    6. '
' → logprob: -9.121703147888184
    7. '1' → logprob: -9.371703147888184
    8. '   ' → logprob: -9.746703147888184
    9. 'i' → logprob: -9.746703147888184
    10. '	for' → logprob: -10.371703147888184

Token 117: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006760129705071449
    2. 'i' → logprob: -5.006760120391846
    3. ' ' → logprob: -10.256760597229004
    4. '	i' → logprob: -12.756760597229004
    5. ' ' → logprob: -12.881760597229004
    6. ' _' → logprob: -13.381760597229004
    7. '_' → logprob: -13.381760597229004
    8. '_i' → logprob: -14.506760597229004
    9. ' range' → logprob: -15.381760597229004
    10. '  ' → logprob: -15.506760597229004

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00184581708163023
    2. 'in' → logprob: -6.626845836639404
    3. ' ' → logprob: -7.626845836639404
    4. '	in' → logprob: -11.626845359802246
    5. '  ' → logprob: -11.876845359802246
    6. ' range' → logprob: -12.251845359802246
    7. ' i' → logprob: -12.376845359802246
    8. 'range' → logprob: -12.751845359802246
    9. ' ' → logprob: -14.001845359802246
    10. '<|end|>' → logprob: -14.126845359802246

Token 119: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015054593095555902
    2. 'range' → logprob: -6.501505374908447
    3. ' ' → logprob: -13.626505851745605
    4. '	range' → logprob: -14.001505851745605
    5. ' xrange' → logprob: -14.251505851745605
    6. '(range' → logprob: -15.126505851745605
    7. ' rang' → logprob: -16.87650489807129
    8. '  ' → logprob: -17.62650489807129
    9. ' ran' → logprob: -17.87650489807129
    10. ' ' → logprob: -18.00150489807129

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '(len' → logprob: -12.875003814697266
    3. '1' → logprob: -14.500003814697266
    4. '(
' → logprob: -15.000003814697266
    5. '   ' → logprob: -16.250003814697266
    6. ' (' → logprob: -16.625003814697266
    7. '	' → logprob: -17.750003814697266
    8. ' ' → logprob: -17.875003814697266
    9. 'len' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -19.750003814697266

Token 121: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07890962064266205
    2. '1' → logprob: -2.5789096355438232
    3. '   ' → logprob: -11.453909873962402
    4. ' ' → logprob: -12.203909873962402
    5. 'len' → logprob: -12.828909873962402
    6. '(' → logprob: -13.578909873962402
    7. '  ' → logprob: -16.328908920288086
    8. '
' → logprob: -17.203908920288086
    9. '    ' → logprob: -17.578908920288086
    10. '	' → logprob: -18.078908920288086

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007160511799156666
    2. ',len' → logprob: -5.257160663604736
    3. ' ,' → logprob: -6.632160663604736
    4. ' len' → logprob: -8.507160186767578
    5. '(len' → logprob: -8.882160186767578
    6. ' ' → logprob: -9.132160186767578
    7. 'len' → logprob: -9.757160186767578
    8. '<|end|>' → logprob: -10.132160186767578
    9. '   ' → logprob: -10.757160186767578
    10. '<len' → logprob: -10.882160186767578

Token 123: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16154909133911133
    2. ' len' → logprob: -1.9115490913391113
    3. ' n' → logprob: -7.286549091339111
    4. 'n' → logprob: -7.536549091339111
    5. '   ' → logprob: -9.286548614501953
    6. '(len' → logprob: -12.536548614501953
    7. '
' → logprob: -12.661548614501953
    8. ' ' → logprob: -12.786548614501953
    9. '	len' → logprob: -13.161548614501953
    10. 'l' → logprob: -14.911548614501953

Token 124: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007736989296972752
    2. ' +' → logprob: -4.882737159729004
    3. '):' → logprob: -9.132737159729004
    4. '):
' → logprob: -11.257737159729004
    5. '   ' → logprob: -12.007737159729004
    6. ')' → logprob: -13.507737159729004
    7. '+
' → logprob: -14.882737159729004
    8. '  ' → logprob: -15.007737159729004
    9. '):

' → logprob: -15.132737159729004
    10. ' ' → logprob: -15.382737159729004

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19670416414737701
    2. '   ' → logprob: -2.321704149246216
    3. ' ' → logprob: -3.321704149246216
    4. '    ' → logprob: -4.446704387664795
    5. ' re' → logprob: -5.071704387664795
    6. '<|end|>' → logprob: -5.321704387664795
    7. 're' → logprob: -5.446704387664795
    8. ' 
' → logprob: -5.571704387664795
    9. '  ' → logprob: -5.946704387664795
    10. '        
' → logprob: -6.321704387664795

Token 126: ' diff' (ID: 8868)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.6837295293807983
    2. ' diff' → logprob: -1.5587295293807983
    3. 'diff' (adapté à ' diff') → logprob: -1.6837295293807983
    4. '   ' → logprob: -3.433729648590088
    5. 're' → logprob: -3.808729648590088
    6. ' delta' → logprob: -4.058729648590088
    7. 'delta' → logprob: -4.558729648590088
    8. ' gap' → logprob: -5.433729648590088
    9. ' d' → logprob: -6.058729648590088
    10. '	diff' → logprob: -6.183729648590088

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007722675800323486
    2. '=' → logprob: -4.882722854614258
    3. 's' → logprob: -9.382722854614258
    4. ' ' → logprob: -10.632722854614258
    5. '	' → logprob: -13.132722854614258
    6. '   ' → logprob: -13.757722854614258
    7. ' =
' → logprob: -14.132722854614258
    8. '<|end|>' → logprob: -14.257722854614258
    9. '  ' → logprob: -14.382722854614258
    10. ')' → logprob: -14.382722854614258

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0380435548722744
    2. ' x' → logprob: -3.28804349899292
    3. '(x' → logprob: -13.913043975830078
    4. '	x' → logprob: -14.413043975830078
    5. '   ' → logprob: -14.663043975830078
    6. ' ' → logprob: -16.538043975830078
    7. 'abs' → logprob: -17.288043975830078
    8. '
' → logprob: -17.538043975830078
    9. ')x' → logprob: -17.788043975830078
    10. '"x' → logprob: -18.163043975830078

Token 129: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.15441757265944e-05
    2. '[i' → logprob: -10.625031471252441
    3. '_' → logprob: -12.625031471252441
    4. '[' → logprob: -13.625031471252441
    5. '_lst' → logprob: -14.125031471252441
    6. '[_' → logprob: -14.375031471252441
    7. '_li' → logprob: -15.250031471252441
    8. '_l' → logprob: -15.375031471252441
    9. 'List' → logprob: -15.875031471252441
    10. '_[' → logprob: -16.250032424926758

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004081009421497583
    2. '[' → logprob: -5.504080772399902
    3. '[
' → logprob: -13.504080772399902
    4. ' [' → logprob: -14.879080772399902
    5. 'i' → logprob: -15.754080772399902
    6. '[I' → logprob: -16.12908172607422
    7. '[j' → logprob: -16.25408172607422
    8. ' ' → logprob: -16.50408172607422
    9. '[n' → logprob: -16.50408172607422
    10. '[s' → logprob: -17.12908172607422

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016430921852588654
    2. ' +' → logprob: -4.641430854797363
    3. ']' → logprob: -5.016430854797363
    4. '1' → logprob: -11.891430854797363
    5. '   ' → logprob: -12.141430854797363
    6. '+]' → logprob: -12.391430854797363
    7. ' ' → logprob: -13.391430854797363
    8. '+
' → logprob: -14.141430854797363
    9. ']+' → logprob: -14.266430854797363
    10. '2' → logprob: -14.328930854797363

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016790216614026576
    2. ' ' → logprob: -8.750167846679688
    3. ']' → logprob: -11.875167846679688
    4. ' -' → logprob: -13.750167846679688
    5. '-' → logprob: -14.375167846679688
    6. '   ' → logprob: -14.500167846679688
    7. '  ' → logprob: -16.375167846679688
    8. '+' → logprob: -17.000167846679688
    9. '2' → logprob: -17.250167846679688
    10. '0' → logprob: -17.500167846679688

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. ' ' → logprob: -10.500048637390137
    3. '-' → logprob: -11.125048637390137
    4. ' -' → logprob: -12.625048637390137
    5. ']' → logprob: -13.375048637390137
    6. '2' → logprob: -15.625048637390137
    7. ')' → logprob: -15.750048637390137
    8. '0' → logprob: -15.875048637390137
    9. '   ' → logprob: -16.00004768371582
    10. '  ' → logprob: -16.12504768371582

Token 134: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07943210750818253
    2. '-' → logprob: -2.5794320106506348
    3. ' ' → logprob: -7.829432010650635
    4. ')' → logprob: -9.454432487487793
    5. '<|end|>' → logprob: -10.954432487487793
    6. ']' → logprob: -11.204432487487793
    7. ' ' → logprob: -11.579432487487793
    8. '   ' → logprob: -12.079432487487793
    9. '  ' → logprob: -12.454432487487793
    10. '	' → logprob: -12.704432487487793

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020887169986963272
    2. '-' → logprob: -3.8958871364593506
    3. ' ' → logprob: -8.64588737487793
    4. '<|end|>' → logprob: -9.52088737487793
    5. '        ' → logprob: -10.02088737487793
    6. '       ' → logprob: -11.14588737487793
    7. '   ' → logprob: -11.64588737487793
    8. '[' → logprob: -12.52088737487793
    9. '  ' → logprob: -12.64588737487793
    10. ')' → logprob: -12.77088737487793

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061972394585609436
    2. ' x' → logprob: -2.8119723796844482
    3. '	x' → logprob: -12.436972618103027
    4. '<|end|>' → logprob: -15.061972618103027
    5. '   ' → logprob: -15.811972618103027
    6. ' ' → logprob: -16.43697166442871
    7. ' ' → logprob: -16.68697166442871
    8. '    ' → logprob: -17.18697166442871
    9. '<|end|>' → logprob: -17.68697166442871
    10. '(x' → logprob: -17.81197166442871

Token 137: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00028612653841264546
    2. 'List' → logprob: -8.750286102294922
    3. '[i' → logprob: -9.250286102294922
    4. 'ist' → logprob: -11.625286102294922
    5. 'list' → logprob: -11.875286102294922
    6. '_LIST' → logprob: -12.500286102294922
    7. '_l' → logprob: -12.750286102294922
    8. '_List' → logprob: -13.250286102294922
    9. '_lists' → logprob: -13.500286102294922
    10. '_lst' → logprob: -13.750286102294922

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00022654302301816642
    2. '_list' → logprob: -8.750226974487305
    3. '[' → logprob: -10.875226974487305
    4. 's' → logprob: -11.375226974487305
    5. '[x' → logprob: -11.750226974487305
    6. '_[' → logprob: -12.625226974487305
    7. '```' → logprob: -12.625226974487305
    8. '][' → logprob: -12.750226974487305
    9. 'ist' → logprob: -12.750226974487305
    10. '`' → logprob: -12.875226974487305

Token 139: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04333508014678955
    2. ')
' → logprob: -3.2933349609375
    3. '
' → logprob: -6.2933349609375
    4. '<|end|>' → logprob: -6.6683349609375
    5. '   ' → logprob: -6.7933349609375
    6. '       ' → logprob: -7.1683349609375
    7. '<|end|>' → logprob: -9.4183349609375
    8. '    
' → logprob: -10.9183349609375
    9. ')
' → logprob: -11.1683349609375
    10. ' ' → logprob: -11.2933349609375

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051406051963567734
    2. '   ' → logprob: -3.676406145095825
    3. '
' → logprob: -3.926406145095825
    4. '<|end|>' → logprob: -5.676405906677246
    5. '        
' → logprob: -8.176405906677246
    6. '    
' → logprob: -8.426405906677246
    7. ' re' → logprob: -8.676405906677246
    8. 're' → logprob: -8.801405906677246
    9. '	re' → logprob: -9.176405906677246
    10. '  
' → logprob: -9.301405906677246

Token 141: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.44140541553497314
    2. '   ' → logprob: -1.8164054155349731
    3. ' if' → logprob: -2.0664052963256836
    4. 're' (adapté à ' re') → logprob: -2.8164052963256836
    5. '       ' → logprob: -5.816405296325684
    6. 'if' → logprob: -6.191405296325684
    7. '    ' → logprob: -6.691405296325684
    8. '           ' → logprob: -6.941405296325684
    9. '	re' → logprob: -8.316405296325684
    10. ' ' → logprob: -9.066405296325684

Token 142: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.00018577903392724693
    2. 's' → logprob: -8.8751859664917
    3. '_' → logprob: -10.6251859664917
    4. 'pon' → logprob: -11.7501859664917
    5. 'ponde' → logprob: -12.5001859664917
    6. '_response' → logprob: -13.0001859664917
    7. 'sp' → logprob: -13.3751859664917
    8. 'ponses' → logprob: -13.3751859664917
    9. 'response' → logprob: -14.1251859664917
    10. 'onse' → logprob: -14.3751859664917

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048645731061697006
    2. '=' → logprob: -3.0486457347869873
    3. ' ' → logprob: -10.673645973205566
    4. ' *=' → logprob: -11.173645973205566
    5. ' %=' → logprob: -11.548645973205566
    6. ' +=' → logprob: -12.298645973205566
    7. '%=' → logprob: -12.798645973205566
    8. ' ^=' → logprob: -14.298645973205566
    9. ' |=' → logprob: -14.423645973205566
    10. '	' → logprob: -14.673645973205566

Token 144: ' pg' (ID: 32259)
  Prédit: ' pg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pg' → logprob: -0.1430143266916275
    2. 'pg' → logprob: -2.018014430999756
    3. 'min' → logprob: -8.893013954162598
    4. ' min' → logprob: -9.018013954162598
    5. ' ' → logprob: -9.893013954162598
    6. '(pg' → logprob: -12.143013954162598
    7. '   ' → logprob: -12.768013954162598
    8. ' ' → logprob: -12.768013954162598
    9. '_pg' → logprob: -12.893013954162598
    10. ' max' → logprob: -13.018013954162598

Token 145: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00012594614236149937
    2. 'c' → logprob: -9.000125885009766
    3. '_cd' → logprob: -14.375125885009766
    4. '	cd' → logprob: -14.500125885009766
    5. 'cdf' → logprob: -15.000125885009766
    6. 'd' → logprob: -15.500125885009766
    7. 'cdn' → logprob: -15.625125885009766
    8. '	c' → logprob: -15.875125885009766
    9. 'cod' → logprob: -16.000125885009766
    10. '<|end|>' → logprob: -16.125125885009766

Token 146: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741089940071106
    2. '(re' → logprob: -0.9741089940071106
    3. ' (' → logprob: -11.349108695983887
    4. '(diff' → logprob: -11.849108695983887
    5. '(
' → logprob: -12.224108695983887
    6. '((' → logprob: -13.349108695983887
    7. 're' → logprob: -14.474108695983887
    8. '(s' → logprob: -14.599108695983887
    9. '(

' → logprob: -14.724108695983887
    10. '(res' → logprob: -14.849108695983887

Token 147: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.004140141885727644
    2. 's' → logprob: -5.504140377044678
    3. 'pon' → logprob: -10.12913990020752
    4. 'e' → logprob: -11.75413990020752
    5. 'pons' → logprob: -12.37913990020752
    6. 'es' → logprob: -13.25413990020752
    7. 'onse' → logprob: -13.50413990020752
    8. 'sp' → logprob: -13.62913990020752
    9. 'ponses' → logprob: -13.75413990020752
    10. 'ponde' → logprob: -14.37913990020752

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03857073560357094
    2. ',d' → logprob: -3.2885706424713135
    3. 'diff' → logprob: -8.413570404052734
    4. ' ,' → logprob: -8.538570404052734
    5. '(diff' → logprob: -9.538570404052734
    6. ' diff' → logprob: -10.413570404052734
    7. ',
' → logprob: -11.788570404052734
    8. '	diff' → logprob: -14.038570404052734
    9. ')' → logprob: -14.163570404052734
    10. '   ' → logprob: -16.538570404052734

Token 149: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.018190911039710045
    2. 'diff' → logprob: -4.018190860748291
    3. '(diff' → logprob: -10.89319133758545
    4. '	diff' → logprob: -11.26819133758545
    5. ' ' → logprob: -11.89319133758545
    6. ' ' → logprob: -13.76819133758545
    7. ' dif' → logprob: -14.01819133758545
    8. ' d' → logprob: -15.14319133758545
    9. ')' → logprob: -15.14319133758545
    10. 'd' → logprob: -16.268190383911133

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002988776541315019
    2. ')
' → logprob: -8.125298500061035
    3. ')return' → logprob: -13.875298500061035
    4. '   ' → logprob: -14.125298500061035
    5. ' )' → logprob: -14.250298500061035
    6. ')
' → logprob: -15.500298500061035
    7. ')

' → logprob: -16.50029945373535
    8. ')`' → logprob: -16.75029945373535
    9. ')**' → logprob: -17.75029945373535
    10. '),' → logprob: -18.00029945373535

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026997674256563187
    2. '
' → logprob: -4.7769975662231445
    3. '    
' → logprob: -5.2769975662231445
    4. '\n' → logprob: -5.7769975662231445
    5. '<|end|>' → logprob: -6.0269975662231445
    6. ' ' → logprob: -6.6519975662231445
    7. '  
' → logprob: -6.7769975662231445
    8. ' return' → logprob: -6.9019975662231445
    9. '	return' → logprob: -7.1519975662231445
    10. ')' → logprob: -7.2769975662231445

Token 152: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05559057742357254
    2. '\n' → logprob: -4.555590629577637
    3. 'return' → logprob: -4.805590629577637
    4. ' return' → logprob: -4.805590629577637
    5. ' ' → logprob: -5.180590629577637
    6. ')' → logprob: -5.430590629577637
    7. '	return' → logprob: -5.680590629577637
    8. ':return' → logprob: -6.055590629577637
    9. '<|end|>' → logprob: -6.180590629577637
    10. '    
' → logprob: -6.180590629577637

Token 153: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759997367858887
    2. '(re' → logprob: -0.8259997367858887
    3. '('' → logprob: -9.826000213623047
    4. ' (' → logprob: -12.826000213623047
    5. '()' → logprob: -14.326000213623047
    6. '("("' → logprob: -14.326000213623047
    7. '("' → logprob: -14.576000213623047
    8. '(res' → logprob: -14.826000213623047
    9. '((' → logprob: -14.951000213623047
    10. '(
' → logprob: -15.451000213623047

Token 154: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.00032724079210311174
    2. 'pon' → logprob: -8.625327110290527
    3. 's' → logprob: -8.875327110290527
    4. 'p' → logprob: -12.875327110290527
    5. 'ponde' → logprob: -13.000327110290527
    6. 'pons' → logprob: -13.125327110290527
    7. 'ponses' → logprob: -14.750327110290527
    8. 'onse' → logprob: -16.000328063964844
    9. 'sp' → logprob: -16.125328063964844
    10. 'pond' → logprob: -16.375328063964844

Token 155: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -14.875000953674316
    4. ')`' → logprob: -16.875001907348633
    5. '')' → logprob: -17.875001907348633
    6. '))' → logprob: -18.500001907348633
    7. '(' → logprob: -18.875001907348633
    8. '`)' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.375001907348633
    10. ')**' → logprob: -19.750001907348633

Token 156: 'if' (ID: 366)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5950663089752197
    2. '#' → logprob: -1.4700663089752197
    3. '\' → logprob: -2.8450663089752197
    4. '\n' → logprob: -3.0950663089752197
    5. 'i' → logprob: -3.4700663089752197
    6. '
' → logprob: -3.5950663089752197
    7. 'if' → logprob: -4.220066070556641
    8. 'n' → logprob: -4.845066070556641
    9. '```' → logprob: -4.845066070556641
    10. '<|end|>' → logprob: -4.845066070556641

Token 157: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02303476259112358
    2. ' ' → logprob: -4.273034572601318
    3. '__' → logprob: -4.773034572601318
    4. '_' → logprob: -8.648035049438477
    5. ' ' → logprob: -9.398035049438477
    6. ' ' → logprob: -9.523035049438477
    7. ' True' → logprob: -11.273035049438477
    8. ' _' → logprob: -11.898035049438477
    9. '​' → logprob: -12.523035049438477
    10. '  ' → logprob: -12.523035049438477

Token 158: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019484762102365494
    2. '_' → logprob: -4.144484996795654
    3. ' __' → logprob: -6.394484996795654
    4. ' ==' → logprob: -7.769484996795654
    5. '[' → logprob: -8.519484519958496
    6. '_name' → logprob: -8.769484519958496
    7. '.' → logprob: -9.019484519958496
    8. '_NAME' → logprob: -9.269484519958496
    9. '_main' → logprob: -9.394484519958496
    10. '___' → logprob: -9.394484519958496

Token 159: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.976922744186595e-05
    2. '==' → logprob: -10.750040054321289
    3. '_' → logprob: -11.750040054321289
    4. '__.__' → logprob: -11.750040054321289
    5. '___' → logprob: -14.125040054321289
    6. '____' → logprob: -14.125040054321289
    7. ' ==' → logprob: -15.000040054321289
    8. '__.' → logprob: -15.375040054321289
    9. '=="' → logprob: -15.625040054321289
    10. ' __' → logprob: -15.750040054321289

Token 160: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10863030701875687
    2. '==' → logprob: -2.858630418777466
    3. ' ==' → logprob: -3.108630418777466
    4. '[' → logprob: -8.358630180358887
    5. '_' → logprob: -8.858630180358887
    6. '=="' → logprob: -8.983630180358887
    7. '.__' → logprob: -9.233630180358887
    8. '['' → logprob: -9.483630180358887
    9. '.' → logprob: -9.608630180358887
    10. '["' → logprob: -9.733630180358887

Token 161: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759788751602173
    2. ''' → logprob: -0.8259788751602173
    3. ' "' → logprob: -10.825979232788086
    4. '__' → logprob: -11.575979232788086
    5. ' "__' → logprob: -12.075979232788086
    6. ' '' → logprob: -13.450979232788086
    7. '"user' → logprob: -13.700979232788086
    8. ' '__' → logprob: -14.950979232788086
    9. ''s' → logprob: -15.200979232788086
    10. '`' → logprob: -15.700979232788086

Token 162: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13211815059185028
    2. 'main' → logprob: -2.1321182250976562
    3. '_main' → logprob: -5.507118225097656
    4. 'name' → logprob: -7.507118225097656
    5. ''' → logprob: -8.632118225097656
    6. '__':
' → logprob: -9.382118225097656
    7. '___' → logprob: -9.507118225097656
    8. 'm' → logprob: -10.257118225097656
    9. '_name' → logprob: -10.382118225097656
    10. ' __' → logprob: -10.382118225097656

Token 163: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4052070081233978
    2. '__':
' → logprob: -1.1552070379257202
    3. '__:' → logprob: -4.03020715713501
    4. '__":
' → logprob: -8.155206680297852
    5. ':' → logprob: -9.905206680297852
    6. '__.' → logprob: -10.655206680297852
    7. '':' → logprob: -11.280206680297852
    8. '__('' → logprob: -11.905206680297852
    9. '_' → logprob: -12.405206680297852
    10. '('__' → logprob: -13.030206680297852

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1892579197883606
    2. 'fonction' → logprob: -2.939257860183716
    3. '	func' → logprob: -3.064257860183716
    4. '    
' → logprob: -3.939257860183716
    5. '<|end|>' → logprob: -4.189258098602295
    6. ' func' → logprob: -4.564258098602295
    7. '	f' → logprob: -4.814258098602295
    8. ' fonction' → logprob: -4.939258098602295
    9. 'func' → logprob: -5.314258098602295
    10. '```' → logprob: -6.814258098602295

Token 165: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' (adapté à ' fonction') → logprob: -0.018444662913680077
    2. ' fonction' → logprob: -4.018444538116455
    3. '   ' → logprob: -8.393445014953613
    4. 'fon' → logprob: -10.143445014953613
    5. 'func' → logprob: -11.143445014953613
    6. 'function' → logprob: -11.768445014953613
    7. ' fonctions' → logprob: -13.393445014953613
    8. 'fun' → logprob: -13.643445014953613
    9. ' fonctionnal' → logprob: -13.768445014953613
    10. 'funktion' → logprob: -14.018445014953613

Token 166: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.02326434850692749
    2. '_' → logprob: -3.7732644081115723
    3. '_F' → logprob: -12.273263931274414
    4. '_B' → logprob: -12.898263931274414
    5. '_A' → logprob: -13.023263931274414
    6. '```' → logprob: -13.023263931274414
    7. ' _' → logprob: -13.898263931274414
    8. '\' → logprob: -13.898263931274414
    9. '_c' → logprob: -14.023263931274414
    10. '_S' → logprob: -14.273263931274414

Token 167: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.500019073486328
    3. '()
' → logprob: -12.125019073486328
    4. '()`' → logprob: -13.875019073486328
    5. ' ()' → logprob: -14.000019073486328
    6. '()

' → logprob: -14.375019073486328
    7. '()">' → logprob: -14.750019073486328
    8. '();' → logprob: -14.875019073486328
    9. '()"' → logprob: -15.750019073486328
    10. '())' → logprob: -16.375019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 165
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 48.48%
Précision adaptée (1ère position): 51.52%
Précision (top 10): 84.24%
================================================================================
