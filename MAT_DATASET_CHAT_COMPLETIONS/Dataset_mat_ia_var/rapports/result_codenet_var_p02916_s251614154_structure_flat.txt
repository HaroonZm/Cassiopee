================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = list(map(int, input().split()))
m = 0
i = 0
while i < n:
    a_i = a[i] - 1
    m += b[a_i]
    if i > 0:
        if a[i] == a[i-1] + 1:
            m += c[a[i-1] - 1]
    i += 1
print(m)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5846242904663086
    2. ')' → logprob: -0.8346242904663086
    3. '()' → logprob: -5.209624290466309
    4. '())' → logprob: -6.209624290466309
    5. '(
' → logprob: -8.084624290466309
    6. '```' → logprob: -8.959624290466309
    7. '('' → logprob: -9.459624290466309
    8. '')' → logprob: -9.459624290466309
    9. '")' → logprob: -9.584624290466309
    10. '))' → logprob: -10.209624290466309

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009549600072205067
    2. '[i' → logprob: -6.009549617767334
    3. '[a' → logprob: -6.884549617767334
    4. ' =' → logprob: -6.884549617767334
    5. 'r' → logprob: -7.259549617767334
    6. 'a' → logprob: -7.634549617767334
    7. 'pp' → logprob: -7.884549617767334
    8. '[:]' → logprob: -7.884549617767334
    9. '=' → logprob: -8.009549140930176
    10. '+' → logprob: -8.259549140930176

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6180571913719177
    2. ' []' → logprob: -1.1180572509765625
    3. 'list' → logprob: -2.7430572509765625
    4. ' [' → logprob: -3.4930572509765625
    5. ' list' → logprob: -4.1180572509765625
    6. '[' → logprob: -4.6180572509765625
    7. '[input' → logprob: -5.6180572509765625
    8. '[int' → logprob: -6.1180572509765625
    9. '[n' → logprob: -6.3680572509765625
    10. 'input' → logprob: -6.3680572509765625

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003622793301474303
    2. '(a' → logprob: -8.625362396240234
    3. '()' → logprob: -9.375362396240234
    4. '(range' → logprob: -10.000362396240234
    5. '(input' → logprob: -11.125362396240234
    6. '(`' → logprob: -12.125362396240234
    7. 'a' → logprob: -12.500362396240234
    8. '(
' → logprob: -12.500362396240234
    9. '("("' → logprob: -13.000362396240234
    10. '((' → logprob: -13.000362396240234

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020117513835430145
    2. '(' → logprob: -4.145117282867432
    3. '(str' → logprob: -6.895117282867432
    4. '(input' → logprob: -7.020117282867432
    5. '(lambda' → logprob: -7.145117282867432
    6. '<int' → logprob: -7.770117282867432
    7. ')' → logprob: -8.52011775970459
    8. '[int' → logprob: -8.52011775970459
    9. 'int' → logprob: -8.64511775970459
    10. '```' → logprob: -9.02011775970459

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006978214252740145
    2. '(' → logprob: -5.5069780349731445
    3. ',input' → logprob: -6.6319780349731445
    4. 'input' → logprob: -7.1319780349731445
    5. '))' → logprob: -8.006978034973145
    6. ')' → logprob: -8.506978034973145
    7. '=input' → logprob: -9.881978034973145
    8. '`' → logprob: -10.256978034973145
    9. '[input' → logprob: -10.256978034973145
    10. ',' → logprob: -10.881978034973145

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014250003732740879
    2. ' input' → logprob: -4.264249801635742
    3. '(input' → logprob: -9.389249801635742
    4. ')' → logprob: -13.639249801635742
    5. ',input' → logprob: -14.264249801635742
    6. '=input' → logprob: -14.889249801635742
    7. '	input' → logprob: -16.014249801635742
    8. '))' → logprob: -16.139249801635742
    9. ' ' → logprob: -16.264249801635742
    10. '<input' → logprob: -16.514249801635742

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5443248152732849
    2. '()))' → logprob: -1.2943248748779297
    3. '()' → logprob: -2.4193248748779297
    4. '().' → logprob: -2.9193248748779297
    5. '()));' → logprob: -6.79432487487793
    6. '(' → logprob: -7.41932487487793
    7. '())))' → logprob: -8.04432487487793
    8. ')' → logprob: -8.16932487487793
    9. '());' → logprob: -8.91932487487793
    10. '()>' → logprob: -9.54432487487793

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004510493890848011
    2. 'strip' → logprob: -7.75045108795166
    3. 'rstrip' → logprob: -10.87545108795166
    4. ' split' → logprob: -13.62545108795166
    5. '(split' → logprob: -15.87545108795166
    6. 'spl' → logprob: -16.625450134277344
    7. ')' → logprob: -17.750450134277344
    8. 's' → logprob: -18.500450134277344
    9. 'sp' → logprob: -19.000450134277344
    10. 'replace' → logprob: -19.250450134277344

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3661315143108368
    2. ')' → logprob: -1.6161315441131592
    3. '()))' → logprob: -2.491131544113159
    4. '())' → logprob: -4.11613130569458
    5. '(' → logprob: -4.99113130569458
    6. '()' → logprob: -6.86613130569458
    7. ')))' → logprob: -7.36613130569458
    8. '('' → logprob: -9.116131782531738
    9. ''))' → logprob: -9.366131782531738
    10. '())))' → logprob: -10.366131782531738

Token 15: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5533328056335449
    2. 's' → logprob: -1.178332805633545
    3. 'c' → logprob: -3.178332805633545
    4. 'for' → logprob: -3.553332805633545
    5. 'sum' → logprob: -3.928332805633545
    6. 'b' → logprob: -5.303332805633545
    7. 'm' → logprob: -5.303332805633545
    8. 'count' → logprob: -5.678332805633545
    9. 'max' → logprob: -5.803332805633545
    10. 'd' → logprob: -6.303332805633545

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6444648504257202
    2. '=' → logprob: -1.3944648504257202
    3. '.' → logprob: -1.6444648504257202
    4. '[' → logprob: -3.5194649696350098
    5. ')' → logprob: -6.39446496963501
    6. '_' → logprob: -7.01946496963501
    7. ' ' → logprob: -7.76946496963501
    8. '[:]' → logprob: -7.76946496963501
    9. '[i' → logprob: -8.894464492797852
    10. 's' → logprob: -9.019464492797852

Token 17: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2518787682056427
    2. '[]' → logprob: -2.3768787384033203
    3. '[' → logprob: -3.1268787384033203
    4. ' list' → logprob: -3.5018787384033203
    5. ' []' → logprob: -3.7518787384033203
    6. ' [' → logprob: -4.37687873840332
    7. 'a' → logprob: -4.50187873840332
    8. '[a' → logprob: -5.25187873840332
    9. '[list' → logprob: -6.37687873840332
    10. ' a' → logprob: -6.87687873840332

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11429006606340408
    2. '(map' → logprob: -2.2392899990081787
    3. '(range' → logprob: -7.614290237426758
    4. '(int' → logprob: -8.489290237426758
    5. '((' → logprob: -8.614290237426758
    6. '(a' → logprob: -8.989290237426758
    7. '(list' → logprob: -9.489290237426758
    8. '(.' → logprob: -9.614290237426758
    9. '(
' → logprob: -9.739290237426758
    10. '(

' → logprob: -10.114290237426758

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25206345319747925
    2. '(' → logprob: -1.502063512802124
    3. '(lambda' → logprob: -10.002063751220703
    4. ' (' → logprob: -11.502063751220703
    5. '```' → logprob: -11.627063751220703
    6. 'int' → logprob: -11.627063751220703
    7. '(len' → logprob: -11.877063751220703
    8. '(str' → logprob: -12.002063751220703
    9. '[int' → logprob: -12.002063751220703
    10. '=int' → logprob: -12.002063751220703

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38063427805900574
    2. '(int' → logprob: -1.2556343078613281
    3. ',int' → logprob: -3.755634307861328
    4. '(' → logprob: -5.255634307861328
    5. 'int' → logprob: -6.005634307861328
    6. ',input' → logprob: -8.755634307861328
    7. '(input' → logprob: -9.005634307861328
    8. '```' → logprob: -9.255634307861328
    9. '<int' → logprob: -9.630634307861328
    10. '[int' → logprob: -10.005634307861328

Token 21: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2321729063987732
    2. 'input' → logprob: -2.107172966003418
    3. ' input' → logprob: -2.982172966003418
    4. ' int' → logprob: -3.357172966003418
    5. '(int' → logprob: -9.482172966003418
    6. 'str' → logprob: -12.732172966003418
    7. '[int' → logprob: -12.732172966003418
    8. '<int' → logprob: -12.857172966003418
    9. ',int' → logprob: -13.232172966003418
    10. '(input' → logprob: -13.357172966003418

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002308696275576949
    2. '()' → logprob: -6.1273088455200195
    3. '(' → logprob: -9.12730884552002
    4. '())' → logprob: -12.12730884552002
    5. '.' → logprob: -12.37730884552002
    6. '()))' → logprob: -13.12730884552002
    7. '(.' → logprob: -13.87730884552002
    8. '()`' → logprob: -14.75230884552002
    9. ' ().' → logprob: -14.87730884552002
    10. '()-' → logprob: -15.50230884552002

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ')' → logprob: -15.000001907348633
    4. ' split' → logprob: -15.125001907348633
    5. 'rstrip' → logprob: -17.500001907348633
    6. '(split' → logprob: -17.750001907348633
    7. 'spl' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. 'plit' → logprob: -19.000001907348633
    10. '.split' → logprob: -19.125001907348633

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.827244758605957
    2. '())' → logprob: -1.452244758605957
    3. ')' → logprob: -1.827244758605957
    4. '))' → logprob: -2.077244758605957
    5. '()' → logprob: -3.202244758605957
    6. '(' → logprob: -6.327244758605957
    7. '()))
' → logprob: -10.452244758605957
    8. '())
' → logprob: -11.702244758605957
    9. '()`' → logprob: -11.702244758605957
    10. ' ())' → logprob: -11.827244758605957

Token 25: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16184309124946594
    2. 'a' → logprob: -2.7868430614471436
    3. 's' → logprob: -3.1618430614471436
    4. ')' → logprob: -4.161843299865723
    5. 'd' → logprob: -4.411843299865723
    6. 'r' → logprob: -5.786843299865723
    7. 'p' → logprob: -6.286843299865723
    8. '=' → logprob: -6.661843299865723
    9. 'x' → logprob: -6.661843299865723
    10. 'for' → logprob: -6.661843299865723

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7854515314102173
    2. ' =' → logprob: -1.0354515314102173
    3. '.' → logprob: -1.9104515314102173
    4. '[' → logprob: -3.5354514122009277
    5. '_' → logprob: -5.160451412200928
    6. '[:]' → logprob: -6.035451412200928
    7. '(' → logprob: -7.035451412200928
    8. ')' → logprob: -7.285451412200928
    9. 's' → logprob: -7.785451412200928
    10. '[]' → logprob: -7.910451412200928

Token 27: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3856915235519409
    2. '[' → logprob: -2.0106916427612305
    3. ' []' → logprob: -2.1356916427612305
    4. ' a' → logprob: -3.8856916427612305
    5. '[]' → logprob: -4.1356916427612305
    6. ' list' → logprob: -4.2606916427612305
    7. 'a' → logprob: -4.8856916427612305
    8. '[a' → logprob: -5.6356916427612305
    9. 'list' → logprob: -6.0106916427612305
    10. ' b' → logprob: -6.2606916427612305

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001963881659321487
    2. '([' → logprob: -10.12519645690918
    3. '()' → logprob: -10.25019645690918
    4. '(
' → logprob: -10.62519645690918
    5. '(a' → logprob: -10.62519645690918
    6. '(range' → logprob: -11.87519645690918
    7. '((' → logprob: -11.87519645690918
    8. '[' → logprob: -11.87519645690918
    9. '(int' → logprob: -11.87519645690918
    10. '([]' → logprob: -12.00019645690918

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014287306112237275
    2. '(' → logprob: -8.875143051147461
    3. '<int' → logprob: -13.500143051147461
    4. 'int' → logprob: -14.625143051147461
    5. '=int' → logprob: -14.625143051147461
    6. '[int' → logprob: -15.750143051147461
    7. ')(' → logprob: -16.25014305114746
    8. '(str' → logprob: -16.50014305114746
    9. ',int' → logprob: -16.62514305114746
    10. ' (' → logprob: -16.87514305114746

Token 30: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012611017562448978
    2. '(' → logprob: -4.637610912322998
    3. ',' → logprob: -6.512610912322998
    4. ',int' → logprob: -6.887610912322998
    5. '```' → logprob: -9.137611389160156
    6. '=int' → logprob: -9.387611389160156
    7. '(input' → logprob: -10.512611389160156
    8. ')' → logprob: -10.637611389160156
    9. '<int' → logprob: -10.762611389160156
    10. 'int' → logprob: -10.762611389160156

Token 31: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031388550996780396
    2. ' int' → logprob: -6.003139019012451
    3. '(int' → logprob: -7.378139019012451
    4. 'input' → logprob: -10.378138542175293
    5. '[int' → logprob: -12.503138542175293
    6. ' input' → logprob: -14.253138542175293
    7. '<int' → logprob: -14.378138542175293
    8. '=int' → logprob: -14.378138542175293
    9. ',int' → logprob: -14.753138542175293
    10. 'str' → logprob: -14.753138542175293

Token 32: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.264727920293808
    2. '().' → logprob: -2.639727830886841
    3. '(int' → logprob: -2.764727830886841
    4. '()))' → logprob: -2.889727830886841
    5. '())' → logprob: -3.639727830886841
    6. '(' → logprob: -4.26472806930542
    7. '()(' → logprob: -6.63972806930542
    8. '()]' → logprob: -8.639727592468262
    9. '()`' → logprob: -9.139727592468262
    10. '(),' → logprob: -9.264727592468262

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.250001907348633
    3. ' split' → logprob: -15.125001907348633
    4. 'spl' → logprob: -15.500001907348633
    5. 'strip' → logprob: -15.625001907348633
    6. '(split' → logprob: -15.875001907348633
    7. '))' → logprob: -16.750001907348633
    8. '_split' → logprob: -18.750001907348633
    9. '())' → logprob: -18.875001907348633
    10. 's' → logprob: -19.000001907348633

Token 34: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7060756683349609
    2. '())' → logprob: -1.581075668334961
    3. '()))' → logprob: -1.706075668334961
    4. '))' → logprob: -2.456075668334961
    5. '()' → logprob: -3.456075668334961
    6. '(' → logprob: -6.456075668334961
    7. '()>' → logprob: -11.206075668334961
    8. '>' → logprob: -11.331075668334961
    9. ')>' → logprob: -11.331075668334961
    10. '())
' → logprob: -11.331075668334961

Token 35: 'm' (ID: 76)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5073493719100952
    2. 'dp' → logprob: -1.5073493719100952
    3. 's' → logprob: -3.1323494911193848
    4. 'ans' → logprob: -3.2573494911193848
    5. 'a' → logprob: -3.2573494911193848
    6. 'result' → logprob: -4.382349491119385
    7. 'res' → logprob: -4.382349491119385
    8. 'for' → logprob: -4.757349491119385
    9. 'r' → logprob: -5.382349491119385
    10. 'c' → logprob: -5.632349491119385

Token 36: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015580631792545319
    2. 'ap' → logprob: -5.515580654144287
    3. '_' → logprob: -5.765580654144287
    4. '[' → logprob: -6.265580654144287
    5. '=' → logprob: -6.765580654144287
    6. '_a' → logprob: -6.890580654144287
    7. ' =' → logprob: -7.265580654144287
    8. 'e' → logprob: -7.765580654144287
    9. 'p' → logprob: -7.765580654144287
    10. '(a' → logprob: -7.890580654144287

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6494618654251099
    2. '0' → logprob: -1.6494618654251099
    3. ' n' → logprob: -2.0244617462158203
    4. ' int' → logprob: -2.8994617462158203
    5. ' max' → logprob: -3.5244617462158203
    6. 'int' → logprob: -4.14946174621582
    7. 'max' → logprob: -4.39946174621582
    8. 'n' → logprob: -4.39946174621582
    9. 'a' → logprob: -4.89946174621582
    10. '10' → logprob: -5.27446174621582

Token 38: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009524564258754253
    2. ' int' → logprob: -4.759524345397949
    3. 'n' → logprob: -8.13452434539795
    4. '[int' → logprob: -8.38452434539795
    5. '0' → logprob: -9.13452434539795
    6. 'a' → logprob: -9.50952434539795
    7. 'sum' → logprob: -9.75952434539795
    8. 'max' → logprob: -10.00952434539795
    9. 'len' → logprob: -10.88452434539795
    10. ' n' → logprob: -11.63452434539795

Token 39: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2585846185684204
    2. '\n' → logprob: -2.258584499359131
    3. ' for' → logprob: -2.883584499359131
    4. '
' → logprob: -3.133584499359131
    5. ' ' → logprob: -5.133584499359131
    6. '<|end|>' → logprob: -5.258584499359131
    7. '' → logprob: -5.633584499359131
    8. '\' → logprob: -5.633584499359131
    9. ' 
' → logprob: -6.383584499359131
    10. 'n' → logprob: -6.633584499359131

Token 40: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02035173960030079
    2. 'f' → logprob: -4.895351886749268
    3. '\n' → logprob: -5.270351886749268
    4. 'i' → logprob: -6.270351886749268
    5. '
' → logprob: -6.520351886749268
    6. ' for' → logprob: -7.395351886749268
    7. '' → logprob: -7.395351886749268
    8. 'a' → logprob: -7.520351886749268
    9. 'n' → logprob: -7.770351886749268
    10. '```' → logprob: -8.02035140991211

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.054853916168213
    2. 'f' → logprob: -1.429853916168213
    3. 'n' → logprob: -1.679853916168213
    4. '+' → logprob: -1.804853916168213
    5. ' =' → logprob: -3.679853916168213
    6. ' ' → logprob: -3.679853916168213
    7. ' +=' → logprob: -4.929853916168213
    8. ' n' → logprob: -7.054853916168213
    9. ' +' → logprob: -7.554853916168213
    10. '+=' → logprob: -7.804853916168213

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2262796312570572
    2. ' ' → logprob: -1.601279616355896
    3. '1' → logprob: -7.7262797355651855
    4. ' n' → logprob: -8.351279258728027
    5. 'n' → logprob: -8.726279258728027
    6. 'a' → logprob: -12.226279258728027
    7. ' m' → logprob: -12.663779258728027
    8. '2' → logprob: -13.038779258728027
    9. 'm' → logprob: -13.226279258728027
    10. ' -' → logprob: -13.351279258728027

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005826533306390047
    2. ' ' → logprob: -5.255826473236084
    3. '1' → logprob: -7.630826473236084
    4. 'n' → logprob: -9.505826950073242
    5. ' n' → logprob: -11.755826950073242
    6. '2' → logprob: -12.130826950073242
    7. 'a' → logprob: -12.255826950073242
    8. 'i' → logprob: -12.505826950073242
    9. '-' → logprob: -13.380826950073242
    10. 'len' → logprob: -13.630826950073242

Token 44: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39148715138435364
    2. ' ' → logprob: -1.3914871215820312
    3. ' while' → logprob: -3.6414871215820312
    4. '
' → logprob: -3.8914871215820312
    5. 'w' → logprob: -4.641487121582031
    6. '<|end|>' → logprob: -5.016487121582031
    7. ' 
' → logprob: -5.641487121582031
    8. ',' → logprob: -6.266487121582031
    9. '+' → logprob: -6.641487121582031
    10. 'n' → logprob: -7.141487121582031

Token 45: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.033894870430231094
    2. ' while' → logprob: -4.408895015716553
    3. 'w' → logprob: -4.658895015716553
    4. ' ' → logprob: -5.158895015716553
    5. '+' → logprob: -6.658895015716553
    6. ',' → logprob: -6.908895015716553
    7. '
' → logprob: -7.283895015716553
    8. ':' → logprob: -7.658895015716553
    9. '```' → logprob: -7.658895015716553
    10. '.' → logprob: -8.158894538879395

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0047713955864310265
    2. 'i' → logprob: -5.3797712326049805
    3. ' n' → logprob: -9.50477123260498
    4. ' ' → logprob: -10.12977123260498
    5. ' m' → logprob: -10.75477123260498
    6. 'n' → logprob: -12.50477123260498
    7. ' ' → logprob: -12.62977123260498
    8. '	i' → logprob: -13.00477123260498
    9. '(i' → logprob: -13.25477123260498
    10. ' (' → logprob: -13.87977123260498

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0034629867877811193
    2. '<' → logprob: -6.003462791442871
    3. ' <=' → logprob: -7.378462791442871
    4. ' ' → logprob: -8.003462791442871
    5. ' <
' → logprob: -11.503462791442871
    6. ' !=' → logprob: -12.753462791442871
    7. '<n' → logprob: -12.878462791442871
    8. '<=' → logprob: -13.003462791442871
    9. '[' → logprob: -13.128462791442871
    10. ' ==' → logprob: -13.503462791442871

Token 48: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.251936137676239
    2. 'n' → logprob: -1.5019361972808838
    3. ' ' → logprob: -12.001935958862305
    4. 'len' → logprob: -15.126935958862305
    5. ' ' → logprob: -16.126935958862305
    6. '(n' → logprob: -16.376935958862305
    7. '	n' → logprob: -16.626935958862305
    8. 'a' → logprob: -16.751935958862305
    9. 'm' → logprob: -17.001935958862305
    10. ' len' → logprob: -17.126935958862305

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.76628842484206e-05
    2. ' :' → logprob: -9.875067710876465
    3. ':
' → logprob: -11.125067710876465
    4. '+:' → logprob: -14.750067710876465
    5. ':**' → logprob: -15.375067710876465
    6. '[' → logprob: -15.625067710876465
    7. '+' → logprob: -15.625067710876465
    8. ' and' → logprob: -16.00006675720215
    9. '[i' → logprob: -17.00006675720215
    10. '=' → logprob: -17.00006675720215

Token 50: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05136688053607941
    2. '   ' → logprob: -3.4263668060302734
    3. '    ' → logprob: -5.676366806030273
    4. ' 
' → logprob: -5.801366806030273
    5. ' if' → logprob: -6.676366806030273
    6. '  ' → logprob: -6.801366806030273
    7. ' ,' → logprob: -6.801366806030273
    8. '```' → logprob: -7.301366806030273
    9. '<|end|>' → logprob: -7.426366806030273
    10. 'if' → logprob: -7.551366806030273

Token 51: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9542087316513062
    2. ' ' → logprob: -1.8292087316513062
    3. 'a' (adapté à ' a') → logprob: -1.9542087316513062
    4. 'if' → logprob: -2.7042088508605957
    5. 'i' → logprob: -2.9542088508605957
    6. 'b' → logprob: -3.0792088508605957
    7. ' m' → logprob: -3.2042088508605957
    8. '   ' → logprob: -3.4542088508605957
    9. 'c' → logprob: -3.7042088508605957
    10. ' if' → logprob: -4.079208850860596

Token 52: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07011960446834564
    2. '[' → logprob: -2.695119619369507
    3. '[m' → logprob: -9.070119857788086
    4. '[a' → logprob: -10.445119857788086
    5. ' [' → logprob: -10.945119857788086
    6. '==' → logprob: -13.320119857788086
    7. '[]' → logprob: -13.320119857788086
    8. '[j' → logprob: -13.445119857788086
    9. 'i' → logprob: -13.570119857788086
    10. '>' → logprob: -13.695119857788086

Token 53: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6957534551620483
    2. '+' → logprob: -1.5707534551620483
    3. ' +=' → logprob: -2.570753574371338
    4. '>' → logprob: -2.695753574371338
    5. ' >' → logprob: -3.695753574371338
    6. ' +' → logprob: -3.820753574371338
    7. '=' → logprob: -4.070753574371338
    8. ' ==' → logprob: -4.070753574371338
    9. ']' → logprob: -4.195753574371338
    10. '+=' → logprob: -4.820753574371338

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011779663618654013
    2. ' a' → logprob: -6.751177787780762
    3. 'i' → logprob: -12.626177787780762
    4. 'b' → logprob: -13.001177787780762
    5. '[a' → logprob: -14.251177787780762
    6. '	a' → logprob: -15.001177787780762
    7. 'c' → logprob: -15.376177787780762
    8. '[i' → logprob: -15.626177787780762
    9. '   ' → logprob: -15.876177787780762
    10. ' ' → logprob: -16.251178741455078

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000528606993611902
    2. '[' → logprob: -7.625528812408447
    3. '[a' → logprob: -11.375528335571289
    4. '[m' → logprob: -11.500528335571289
    5. 'i' → logprob: -12.375528335571289
    6. '[c' → logprob: -13.000528335571289
    7. '[b' → logprob: -13.125528335571289
    8. ' [' → logprob: -13.250528335571289
    9. '```' → logprob: -13.375528335571289
    10. '[j' → logprob: -13.750528335571289

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005256764590740204
    2. '])' → logprob: -5.880256652832031
    3. ' ]' → logprob: -7.255256652832031
    4. ')' → logprob: -7.505256652832031
    5. ']+' → logprob: -7.755256652832031
    6. '[' → logprob: -8.005256652832031
    7. ']
' → logprob: -8.505256652832031
    8. '+' → logprob: -9.255256652832031
    9. '[i' → logprob: -10.130256652832031
    10. ']-' → logprob: -11.005256652832031

Token 57: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11551576107740402
    2. ' +' → logprob: -2.74051570892334
    3. 'if' → logprob: -4.24051570892334
    4. '-' → logprob: -4.74051570892334
    5. ' if' → logprob: -5.24051570892334
    6. '*' → logprob: -5.61551570892334
    7. '[' → logprob: -6.36551570892334
    8. ' ' → logprob: -6.49051570892334
    9. '=' → logprob: -6.49051570892334
    10. 'b' → logprob: -6.61551570892334

Token 58: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0059473514556885
    2. ' b' → logprob: -1.1309473514556885
    3. '1' → logprob: -1.7559473514556885
    4. ' c' → logprob: -2.7559473514556885
    5. 'c' → logprob: -3.5059473514556885
    6. ' ' → logprob: -3.7559473514556885
    7. ' i' → logprob: -4.755947113037109
    8. 'i' → logprob: -5.505947113037109
    9. ' m' → logprob: -6.005947113037109
    10. ' (' → logprob: -6.380947113037109

Token 59: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4631715714931488
    2. '1' → logprob: -1.2131716012954712
    3. 'c' → logprob: -2.8381714820861816
    4. 'm' → logprob: -4.713171482086182
    5. 'i' → logprob: -5.463171482086182
    6. '(i' → logprob: -7.838171482086182
    7. '(' → logprob: -8.33817195892334
    8. 'a' → logprob: -8.33817195892334
    9. 'max' → logprob: -8.33817195892334
    10. '(m' → logprob: -9.08817195892334

Token 60: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8861047029495239
    2. ')' → logprob: -1.261104702949524
    3. '<|end|>' → logprob: -1.886104702949524
    4. ' ' → logprob: -3.7611045837402344
    5. 'if' → logprob: -3.8861045837402344
    6. '   ' → logprob: -3.8861045837402344
    7. ' if' → logprob: -4.011104583740234
    8. 'b' → logprob: -4.136104583740234
    9. ' 
' → logprob: -4.761104583740234
    10. ',' → logprob: -5.136104583740234

Token 61: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.380711555480957
    2. ')' → logprob: -2.005711555480957
    3. '<|end|>' → logprob: -2.005711555480957
    4. ' if' → logprob: -2.255711555480957
    5. '   ' → logprob: -2.255711555480957
    6. ']' → logprob: -2.505711555480957
    7. ',' → logprob: -3.630711555480957
    8. ' 
' → logprob: -3.630711555480957
    9. 'b' → logprob: -3.630711555480957
    10. 'if' → logprob: -3.755711555480957

Token 62: ' m' (ID: 284)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2851991355419159
    2. ' ' → logprob: -2.6601991653442383
    3. ' if' → logprob: -3.0351991653442383
    4. 'if' → logprob: -3.5351991653442383
    5. '   ' → logprob: -3.9101991653442383
    6. ')' → logprob: -3.9101991653442383
    7. 'c' → logprob: -4.285199165344238
    8. ']' → logprob: -4.910199165344238
    9. 'm' (adapté à ' m') → logprob: -5.035199165344238
    10. ' b' → logprob: -5.160199165344238

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09796836972236633
    2. '+=' → logprob: -2.847968339920044
    3. ' =' → logprob: -3.847968339920044
    4. '=' → logprob: -5.097968578338623
    5. '+' → logprob: -5.347968578338623
    6. '[' → logprob: -6.472968578338623
    7. ' +' → logprob: -7.472968578338623
    8. ' ' → logprob: -8.472968101501465
    9. ',' → logprob: -8.722968101501465
    10. ' ==' → logprob: -8.972968101501465

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003033566987141967
    2. 'c' → logprob: -6.003033638000488
    3. ' b' → logprob: -7.628033638000488
    4. '1' → logprob: -10.253033638000488
    5. '   ' → logprob: -11.003033638000488
    6. ' c' → logprob: -11.878033638000488
    7. ' ' → logprob: -12.753033638000488
    8. 'a' → logprob: -12.753033638000488
    9. '	b' → logprob: -13.628033638000488
    10. 'max' → logprob: -14.378033638000488

Token 65: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.05607331171631813
    2. '[i' → logprob: -3.1810734272003174
    3. '[' → logprob: -4.431073188781738
    4. '[c' → logprob: -7.306073188781738
    5. 'a' → logprob: -8.431073188781738
    6. '[m' → logprob: -8.931073188781738
    7. '[b' → logprob: -10.806073188781738
    8. '[
' → logprob: -11.681073188781738
    9. ' [' → logprob: -12.181073188781738
    10. 'i' → logprob: -12.181073188781738

Token 66: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.022229203954339027
    2. '[i' → logprob: -4.147229194641113
    3. 'i' → logprob: -5.147229194641113
    4. 'a' → logprob: -9.272229194641113
    5. '[a' → logprob: -9.397229194641113
    6. '][' → logprob: -9.522229194641113
    7. ']' → logprob: -9.772229194641113
    8. '[_' → logprob: -11.147229194641113
    9. '[' → logprob: -11.647229194641113
    10. '])' → logprob: -12.272229194641113

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025147777050733566
    2. '[i' → logprob: -6.752514839172363
    3. '])' → logprob: -7.627514839172363
    4. '[' → logprob: -8.377514839172363
    5. ' ]' → logprob: -8.502514839172363
    6. ']+' → logprob: -8.752514839172363
    7. ']*' → logprob: -9.502514839172363
    8. '[c' → logprob: -9.502514839172363
    9. '[a' → logprob: -10.502514839172363
    10. ']
' → logprob: -10.502514839172363

Token 68: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7027370929718018
    2. 'if' → logprob: -1.0777370929718018
    3. '
' → logprob: -3.2027370929718018
    4. '+' → logprob: -3.2027370929718018
    5. ' 
' → logprob: -4.202736854553223
    6. '  
' → logprob: -4.577736854553223
    7. ' if' → logprob: -4.702736854553223
    8. '\n' → logprob: -4.702736854553223
    9. ' i' → logprob: -4.827736854553223
    10. '    
' → logprob: -4.952736854553223

Token 69: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20174464583396912
    2. 'if' (adapté à ' if') → logprob: -1.7017446756362915
    3. '
' → logprob: -8.45174503326416
    4. '   ' → logprob: -10.45174503326416
    5. '```' → logprob: -10.45174503326416
    6. ' i' → logprob: -11.07674503326416
    7. ' if' → logprob: -11.45174503326416
    8. '    
' → logprob: -11.70174503326416
    9. 'while' → logprob: -12.70174503326416
    10. 'n' → logprob: -12.70174503326416

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0330487489700317
    2. 'a' → logprob: -1.4080487489700317
    3. ' i' → logprob: -1.4080487489700317
    4. ' a' → logprob: -2.033048629760742
    5. 'c' → logprob: -4.408048629760742
    6. ' c' → logprob: -4.533048629760742
    7. '(i' → logprob: -8.408048629760742
    8. ' ' → logprob: -8.408048629760742
    9. '(a' → logprob: -8.408048629760742
    10. ' (' → logprob: -8.658048629760742

Token 71: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5520882606506348
    2. ' >' → logprob: -1.3020882606506348
    3. '+' → logprob: -2.3020882606506348
    4. '<' → logprob: -3.5520882606506348
    5. ' <' → logprob: -4.302088260650635
    6. ' +' → logprob: -5.302088260650635
    7. ' ' → logprob: -6.552088260650635
    8. '!=' → logprob: -6.802088260650635
    9. ' and' → logprob: -6.927088260650635
    10. 'and' → logprob: -7.552088260650635

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000386701402021572
    2. ' ' → logprob: -7.875386714935303
    3. '=' → logprob: -12.250386238098145
    4. '>' → logprob: -14.250386238098145
    5. '1' → logprob: -14.625386238098145
    6. 'n' → logprob: -15.750386238098145
    7. 'c' → logprob: -16.56288719177246
    8. 'm' → logprob: -16.68788719177246
    9. '<|end|>' → logprob: -16.68788719177246
    10. '```' → logprob: -16.93788719177246

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '1' → logprob: -15.000032424926758
    4. 'n' → logprob: -16.937532424926758
    5. '۰' → logprob: -17.062532424926758
    6. '=' → logprob: -17.187532424926758
    7. 'a' → logprob: -17.625032424926758
    8. '```' → logprob: -17.687532424926758
    9. '`' → logprob: -17.812532424926758
    10. 'c' → logprob: -17.875032424926758

Token 74: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048654705286026
    2. 'and' → logprob: -3.048654794692993
    3. ' ' → logprob: -10.173654556274414
    4. '   ' → logprob: -11.423654556274414
    5. '    ' → logprob: -11.673654556274414
    6. ':
' → logprob: -12.673654556274414
    7. ':' → logprob: -12.673654556274414
    8. ' ' → logprob: -13.548654556274414
    9. '	and' → logprob: -14.173654556274414
    10. '  ' → logprob: -14.548654556274414

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009722557850182056
    2. ' if' → logprob: -5.134722709655762
    3. '<|end|>' → logprob: -6.384722709655762
    4. ' ' → logprob: -7.134722709655762
    5. '    ' → logprob: -7.634722709655762
    6. '   ' → logprob: -7.884722709655762
    7. 'if' → logprob: -9.384722709655762
    8. '     ' → logprob: -9.509722709655762
    9. '        ' → logprob: -9.759722709655762
    10. '      ' → logprob: -10.259722709655762

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39154115319252014
    2. 'if' (adapté à ' if') → logprob: -1.2665411233901978
    3. '       ' → logprob: -3.2665412425994873
    4. ' ' → logprob: -5.891541004180908
    5. '   ' → logprob: -7.391541004180908
    6. '<|end|>' → logprob: -7.891541004180908
    7. '           ' → logprob: -9.516541481018066
    8. '    ' → logprob: -10.016541481018066
    9. 'm' → logprob: -10.141541481018066
    10. '	if' → logprob: -10.391541481018066

Token 77: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21652624011039734
    2. ' a' → logprob: -1.7165262699127197
    3. 'c' → logprob: -4.591526031494141
    4. ' c' → logprob: -5.341526031494141
    5. '   ' → logprob: -10.34152603149414
    6. ' ' → logprob: -10.84152603149414
    7. '	a' → logprob: -11.84152603149414
    8. '  ' → logprob: -12.59152603149414
    9. '    ' → logprob: -12.84152603149414
    10. 'b' → logprob: -13.09152603149414

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0059732310473918915
    2. '_i' → logprob: -5.1309733390808105
    3. '[a' → logprob: -10.505972862243652
    4. '[' → logprob: -11.380972862243652
    5. 'i' → logprob: -13.005972862243652
    6. '[_' → logprob: -13.380972862243652
    7. '```' → logprob: -14.880972862243652
    8. '[
' → logprob: -14.880972862243652
    9. 'a' → logprob: -15.255972862243652
    10. '[I' → logprob: -16.00597381591797

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07749775052070618
    2. ']==' → logprob: -2.952497720718384
    3. '-' → logprob: -3.827497720718384
    4. ' -' → logprob: -8.327497482299805
    5. '```' → logprob: -9.077497482299805
    6. '[i' → logprob: -9.702497482299805
    7. ']!=' → logprob: -10.077497482299805
    8. ' ]' → logprob: -10.327497482299805
    9. '[' → logprob: -10.577497482299805
    10. ' ' → logprob: -10.827497482299805

Token 80: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07009537518024445
    2. ' ==' → logprob: -2.8200953006744385
    3. '=' → logprob: -5.070095539093018
    4. ']==' → logprob: -7.070095539093018
    5. '-' → logprob: -8.19509506225586
    6. '!=' → logprob: -8.32009506225586
    7. '==
' → logprob: -8.57009506225586
    8. ' ' → logprob: -9.69509506225586
    9. '```' → logprob: -10.19509506225586
    10. '()==' → logprob: -10.32009506225586

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010534112807363272
    2. ' a' → logprob: -6.876053333282471
    3. 'c' → logprob: -11.376053810119629
    4. '   ' → logprob: -12.001053810119629
    5. ' ' → logprob: -13.501053810119629
    6. '	a' → logprob: -14.876053810119629
    7. '(a' → logprob: -15.501053810119629
    8. '    ' → logprob: -15.501053810119629
    9. '       ' → logprob: -15.626053810119629
    10. '     ' → logprob: -15.751053810119629

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000122608442325145
    2. 'i' → logprob: -9.125123023986816
    3. '[' → logprob: -11.375123023986816
    4. '_i' → logprob: -14.500123023986816
    5. ' [' → logprob: -14.875123023986816
    6. '```' → logprob: -15.250123023986816
    7. 'a' → logprob: -15.500123023986816
    8. '[
' → logprob: -15.750123023986816
    9. '[a' → logprob: -15.875123023986816
    10. '   ' → logprob: -15.875123023986816

Token 83: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33427345752716064
    2. '-' → logprob: -1.5842734575271606
    3. 'i' → logprob: -2.584273338317871
    4. ' -' → logprob: -6.834273338317871
    5. ' ' → logprob: -7.084273338317871
    6. '   ' → logprob: -7.459273338317871
    7. '[' → logprob: -8.084273338317871
    8. ' i' → logprob: -8.459273338317871
    9. '1' → logprob: -8.709273338317871
    10. '[-' → logprob: -9.209273338317871

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024810926988720894
    2. ']' → logprob: -4.024810791015625
    3. 'i' → logprob: -5.649810791015625
    4. ' ' → logprob: -6.774810791015625
    5. '-' → logprob: -7.149810791015625
    6. ']+' → logprob: -7.774810791015625
    7. '0' → logprob: -8.274810791015625
    8. ']-' → logprob: -8.524810791015625
    9. '   ' → logprob: -9.274810791015625
    10. '```' → logprob: -9.774810791015625

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5346599817276001
    2. ']:' → logprob: -1.0346599817276
    3. '-' → logprob: -3.7846598625183105
    4. ']-' → logprob: -4.4096598625183105
    5. ' ]' → logprob: -4.9096598625183105
    6. ']+' → logprob: -4.9096598625183105
    7. ']:
' → logprob: -5.6596598625183105
    8. ' -' → logprob: -6.2846598625183105
    9. ')' → logprob: -7.1596598625183105
    10. '):' → logprob: -7.4096598625183105

Token 86: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16009077429771423
    2. 'and' → logprob: -2.410090684890747
    3. ' and' → logprob: -4.160090923309326
    4. 'c' → logprob: -4.160090923309326
    5. '-' → logprob: -5.285090923309326
    6. '1' → logprob: -5.535090923309326
    7. ':c' → logprob: -5.535090923309326
    8. '   ' → logprob: -6.285090923309326
    9. ')c' → logprob: -6.410090923309326
    10. ']' → logprob: -6.785090923309326

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006717505399137735
    2. ' ' → logprob: -5.006717681884766
    3. '<|end|>' → logprob: -14.131717681884766
    4. '  ' → logprob: -14.881717681884766
    5. '0' → logprob: -14.881717681884766
    6. 'c' → logprob: -15.131717681884766
    7. ' c' → logprob: -15.881717681884766
    8. '2' → logprob: -16.006717681884766
    9. ' ' → logprob: -16.631717681884766
    10. '9' → logprob: -17.006717681884766

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010354319238103926
    2. ' ' → logprob: -9.250103950500488
    3. '0' → logprob: -12.375103950500488
    4. '  ' → logprob: -14.250103950500488
    5. '6' → logprob: -15.000103950500488
    6. '10' → logprob: -15.125103950500488
    7. '2' → logprob: -15.250103950500488
    8. '   ' → logprob: -15.500103950500488
    9. 'a' → logprob: -15.625103950500488
    10. '7' → logprob: -15.625103950500488

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011603388702496886
    2. ':
' → logprob: -7.376160144805908
    3. '):' → logprob: -7.626160144805908
    4. ')' → logprob: -10.876160621643066
    5. ' :' → logprob: -11.876160621643066
    6. '):
' → logprob: -12.376160621643066
    7. '   ' → logprob: -12.501160621643066
    8. '       ' → logprob: -13.251160621643066
    9. ']:' → logprob: -13.376160621643066
    10. ' and' → logprob: -13.626160621643066

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7533665299415588
    2. '       ' → logprob: -0.7533665299415588
    3. '           ' → logprob: -4.003366470336914
    4. '   ' → logprob: -4.378366470336914
    5. 'm' → logprob: -4.628366470336914
    6. '+' → logprob: -5.253366470336914
    7. ' ' → logprob: -5.378366470336914
    8. ':
' → logprob: -6.503366470336914
    9. ' +' → logprob: -6.503366470336914
    10. '<|end|>' → logprob: -7.003366470336914

Token 91: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00020532844064291567
    2. ' m' → logprob: -8.625205039978027
    3. '<|end|>' → logprob: -11.625205039978027
    4. '   ' → logprob: -12.375205039978027
    5. '	m' → logprob: -12.625205039978027
    6. '           ' → logprob: -12.875205039978027
    7. ' ' → logprob: -13.000205039978027
    8. '+' → logprob: -14.125205039978027
    9. '  ' → logprob: -14.250205039978027
    10. '    ' → logprob: -14.250205039978027

Token 92: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38697370886802673
    2. ' +=' → logprob: -1.1369737386703491
    3. '+' → logprob: -9.38697338104248
    4. ']+=' → logprob: -11.51197338104248
    5. ' +' → logprob: -13.01197338104248
    6. '+='' → logprob: -13.01197338104248
    7. ' ' → logprob: -13.76197338104248
    8. '+=(' → logprob: -14.13697338104248
    9. '   ' → logprob: -14.76197338104248
    10. '+="' → logprob: -14.76197338104248

Token 93: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00044032474397681653
    2. ' c' → logprob: -7.7504401206970215
    3. '	c' → logprob: -12.25044059753418
    4. ')c' → logprob: -13.00044059753418
    5. '   ' → logprob: -14.12544059753418
    6. ' ' → logprob: -14.62544059753418
    7. '  ' → logprob: -15.00044059753418
    8. 'd' → logprob: -15.75044059753418
    9. '```' → logprob: -16.00044059753418
    10. '_c' → logprob: -16.37544059753418

Token 94: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.03023810312151909
    2. 'a' → logprob: -3.530238151550293
    3. '[' → logprob: -7.655238151550293
    4. ' a' → logprob: -11.780238151550293
    5. '[
' → logprob: -13.280238151550293
    6. ' [' → logprob: -13.530238151550293
    7. '[i' → logprob: -13.905238151550293
    8. '(a' → logprob: -14.030238151550293
    9. '   ' → logprob: -14.780238151550293
    10. ' ' → logprob: -15.405238151550293

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01823562942445278
    2. '_i' → logprob: -4.018235683441162
    3. 'i' → logprob: -9.768235206604004
    4. '-' → logprob: -11.143235206604004
    5. '[' → logprob: -12.018235206604004
    6. '[a' → logprob: -13.518235206604004
    7. '```' → logprob: -13.643235206604004
    8. '[
' → logprob: -13.768235206604004
    9. '	i' → logprob: -14.268235206604004
    10. '   ' → logprob: -14.518235206604004

Token 96: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033802103251218796
    2. 'i' → logprob: -3.658802032470703
    3. '[i' → logprob: -5.533802032470703
    4. ' -' → logprob: -6.158802032470703
    5. ']' → logprob: -7.033802032470703
    6. '   ' → logprob: -8.783802032470703
    7. ' ' → logprob: -8.908802032470703
    8. '_i' → logprob: -9.908802032470703
    9. ' i' → logprob: -9.908802032470703
    10. '[' → logprob: -10.408802032470703

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.146429223008454e-05
    2. ']' → logprob: -10.12506103515625
    3. '2' → logprob: -11.62506103515625
    4. ' ' → logprob: -12.12506103515625
    5. 'i' → logprob: -12.50006103515625
    6. '-' → logprob: -13.62506103515625
    7. '   ' → logprob: -14.50006103515625
    8. '```' → logprob: -14.87506103515625
    9. '0' → logprob: -15.25006103515625
    10. ']]' → logprob: -16.00006103515625

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003948072553612292
    2. ' ]' → logprob: -8.375394821166992
    3. '-' → logprob: -9.375394821166992
    4. '])' → logprob: -10.250394821166992
    5. ' -' → logprob: -11.000394821166992
    6. ']]' → logprob: -11.250394821166992
    7. ')]' → logprob: -12.625394821166992
    8. ']-' → logprob: -12.625394821166992
    9. '   ' → logprob: -13.750394821166992
    10. '`]' → logprob: -13.875394821166992

Token 99: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000580792548134923
    2. ' ]' → logprob: -7.500580787658691
    3. '-' → logprob: -11.125580787658691
    4. '])' → logprob: -11.875580787658691
    5. ')' → logprob: -13.250580787658691
    6. ' -' → logprob: -14.000580787658691
    7. ']
' → logprob: -14.250580787658691
    8. '   ' → logprob: -14.750580787658691
    9. ' ' → logprob: -14.875580787658691
    10. '']' → logprob: -14.875580787658691

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. ']' → logprob: -15.000160217285156
    4. '<|end|>' → logprob: -15.187660217285156
    5. '```' → logprob: -15.437660217285156
    6. '１' → logprob: -15.750160217285156
    7. '۱' → logprob: -16.875160217285156
    8. '  ' → logprob: -17.000160217285156
    9. '`' → logprob: -17.062660217285156
    10. '"' → logprob: -17.187660217285156

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '１' → logprob: -15.750014305114746
    4. ']' → logprob: -16.00001335144043
    5. '```' → logprob: -16.25001335144043
    6. '۱' → logprob: -16.31251335144043
    7. '   ' → logprob: -16.43751335144043
    8. '<|end|>' → logprob: -16.56251335144043
    9. '2' → logprob: -16.68751335144043
    10. '१' → logprob: -17.18751335144043

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0300221499055624
    2. ']
' → logprob: -3.530022144317627
    3. ')' → logprob: -9.155022621154785
    4. ']
' → logprob: -9.155022621154785
    5. ' ]' → logprob: -10.655022621154785
    6. '   ' → logprob: -11.155022621154785
    7. ']

' → logprob: -12.030022621154785
    8. ')
' → logprob: -12.280022621154785
    9. '])' → logprob: -12.405022621154785
    10. '       ' → logprob: -12.905022621154785

Token 103: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.759960949420929
    2. '   ' → logprob: -0.884960949420929
    3. 'i' → logprob: -2.509960889816284
    4. '
' → logprob: -3.634960889816284
    5. ' 
' → logprob: -4.759961128234863
    6. '	i' → logprob: -6.634961128234863
    7. '    
' → logprob: -6.884961128234863
    8. '```' → logprob: -8.259961128234863
    9. '  
' → logprob: -8.759961128234863
    10. '   
' → logprob: -8.759961128234863

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0238001998513937
    2. ' i' → logprob: -3.7738001346588135
    3. '   ' → logprob: -7.523800373077393
    4. '
' → logprob: -12.023799896240234
    5. ' 
' → logprob: -12.773799896240234
    6. '	i' → logprob: -13.023799896240234
    7. '    
' → logprob: -13.773799896240234
    8. '```' → logprob: -13.898799896240234
    9. ' ' → logprob: -14.398799896240234
    10. '  
' → logprob: -14.898799896240234

Token 105: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7255315184593201
    2. '+=' → logprob: -0.9755315184593201
    3. ' +=' → logprob: -1.9755315780639648
    4. '++' → logprob: -8.850531578063965
    5. '=' → logprob: -9.475531578063965
    6. ' +' → logprob: -10.725531578063965
    7. ' ' → logprob: -12.600531578063965
    8. '+++' → logprob: -12.725531578063965
    9. '+='' → logprob: -13.225531578063965
    10. '+="' → logprob: -13.975531578063965

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.7500057220459
    4. '   ' → logprob: -20.0000057220459
    5. '１' → logprob: -20.5000057220459
    6. '+' → logprob: -21.3750057220459
    7. '`' → logprob: -21.9375057220459
    8. '۱' → logprob: -22.5000057220459
    9. '0' → logprob: -22.9375057220459
    10. '[' → logprob: -23.0000057220459

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.125
    4. '１' → logprob: -20.125
    5. '   ' → logprob: -20.125
    6. '۱' → logprob: -21.5625
    7. '+' → logprob: -21.8125
    8. '१' → logprob: -21.875
    9. '0' → logprob: -22.125
    10. '  ' → logprob: -22.4375

Token 108: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19674204289913177
    2. '<|end|>' → logprob: -1.946742057800293
    3. '#' → logprob: -4.071742057800293
    4. ')' → logprob: -4.946742057800293
    5. '```' → logprob: -4.946742057800293
    6. ' print' → logprob: -6.196742057800293
    7. '
' → logprob: -6.821742057800293
    8. '\n' → logprob: -7.696742057800293
    9. '#print' → logprob: -8.321742057800293
    10. ' ' → logprob: -9.196742057800293

Token 109: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602482944726944
    2. '(m' → logprob: -1.9102482795715332
    3. '('' → logprob: -11.535248756408691
    4. '()' → logprob: -11.785248756408691
    5. '("' → logprob: -13.160248756408691
    6. '("("' → logprob: -13.285248756408691
    7. '(`' → logprob: -13.910248756408691
    8. ' (' → logprob: -14.535248756408691
    9. '((' → logprob: -14.535248756408691
    10. '(
' → logprob: -15.035248756408691

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')`' → logprob: -16.375
    3. '))' → logprob: -16.5
    4. ' )' → logprob: -16.75
    5. ')
' → logprob: -17.0
    6. ')}' → logprob: -19.25
    7. '）' → logprob: -20.625
    8. '),' → logprob: -20.625
    9. '')' → logprob: -21.125
    10. '```' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 34.86%
Précision adaptée (1ère position): 36.70%
Précision (top 10): 87.16%
================================================================================
