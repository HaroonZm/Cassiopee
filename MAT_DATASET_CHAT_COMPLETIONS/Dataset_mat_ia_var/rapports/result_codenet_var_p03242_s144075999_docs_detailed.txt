================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calcul_difference():
    """
    Demande à l'utilisateur de saisir un nombre entier depuis l'entrée standard,
    convertit cette entrée en un entier, puis affiche la différence entre 1110 et ce nombre.

    La fonction ne prend pas d'arguments et ne retourne rien.
    Elle affiche directement le résultat à l'écran.
    """
    # Afficher un message pour inviter l'utilisateur à entrer un nombre entier
    valeur_str = input("Veuillez entrer un nombre entier : ")
    
    # Convertir la chaîne de caractères saisie en entier
    valeur = int(valeur_str)
    
    # Calculer la différence entre 1110 et le nombre entré
    difference = 1110 - valeur
    
    # Afficher le résultat
    print(difference)

# Appel de la fonction principale
calcul_difference()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calcul' (ID: 7559)
  → Token d'amorce (pas de prédiction)

Token 2: '_difference' (ID: 123771)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05998244509100914
    2. '(' → logprob: -2.9349825382232666
    3. '(_' → logprob: -6.5599822998046875
    4. '(a' → logprob: -6.6849822998046875
    5. '_:' → logprob: -7.1849822998046875
    6. '_(' → logprob: -8.059982299804688
    7. '(_:' → logprob: -8.184982299804688
    8. '_between' → logprob: -8.434982299804688
    9. 's' → logprob: -8.809982299804688
    10. '('_' → logprob: -8.934982299804688

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43346455693244934
    2. '\' → logprob: -1.933464527130127
    3. '\n' → logprob: -2.558464527130127
    4. '(' → logprob: -3.058464527130127
    5. '```' → logprob: -3.183464527130127
    6. '    ' → logprob: -4.308464527130127
    7. '    
' → logprob: -4.558464527130127
    8. ''' → logprob: -5.933464527130127
    9. ' 
' → logprob: -6.308464527130127
    10. ' ' → logprob: -6.308464527130127

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506863534450531
    2. 'return' → logprob: -2.131863594055176
    3. ' ' → logprob: -3.006863594055176
    4. '```' → logprob: -3.006863594055176
    5. '    ' → logprob: -3.506863594055176
    6. 'r' → logprob: -3.631863594055176
    7. 'x' → logprob: -3.881863594055176
    8. 'pass' → logprob: -4.006863594055176
    9. '\' → logprob: -4.131863594055176
    10. 'a' → logprob: -4.256863594055176

Token 6: '   ' (ID: 271)
  Prédit: 'Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calcul' → logprob: -0.4125315845012665
    2. 'Calculate' → logprob: -1.7875316143035889
    3. '"""' → logprob: -2.537531614303589
    4. ' Calculates' → logprob: -3.037531614303589
    5. '   ' → logprob: -4.03753137588501
    6. ' calculates' → logprob: -5.03753137588501
    7. 'Cal' → logprob: -5.28753137588501
    8. 'C' → logprob: -5.53753137588501
    9. ' Calculate' → logprob: -5.78753137588501
    10. ' Calcul' → logprob: -6.28753137588501

Token 7: ' Dem' (ID: 9458)
  Prédit: 'Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calcul' → logprob: -0.30966606736183167
    2. 'Calculate' → logprob: -2.309666156768799
    3. 'Cal' → logprob: -2.559666156768799
    4. '   ' → logprob: -3.309666156768799
    5. 'C' → logprob: -4.059666156768799
    6. '"""' → logprob: -4.434666156768799
    7. 'Retour' → logprob: -4.934666156768799
    8. 'R' → logprob: -5.559666156768799
    9. 'Return' → logprob: -5.934666156768799
    10. '       ' → logprob: -6.059666156768799

Token 8: 'ande' (ID: 4102)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02967504970729351
    2. 'a' → logprob: -3.654675006866455
    3. '   ' → logprob: -6.529675006866455
    4. 'r' → logprob: -8.029675483703613
    5. 'er' → logprob: -8.529675483703613
    6. 'ar' → logprob: -8.779675483703613
    7. 'u' → logprob: -8.904675483703613
    8. '```' → logprob: -8.904675483703613
    9. 'ure' → logprob: -9.154675483703613
    10. 't' → logprob: -9.279675483703613

Token 9: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5736377835273743
    2. '   ' → logprob: -1.1986377239227295
    3. 's' → logprob: -2.6986377239227295
    4. ' la' → logprob: -4.323637962341309
    5. '_' → logprob: -4.948637962341309
    6. 'r' → logprob: -5.073637962341309
    7. ' à' → logprob: -5.198637962341309
    8. '    ' → logprob: -5.323637962341309
    9. '(' → logprob: -5.448637962341309
    10. '  ' → logprob: -5.573637962341309

Token 10: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007715585641562939
    2. ' l' → logprob: -4.882715702056885
    3. 'la' → logprob: -9.882715225219727
    4. 'util' → logprob: -10.882715225219727
    5. ' ' → logprob: -11.757715225219727
    6. '	l' → logprob: -11.882715225219727
    7. 'user' → logprob: -12.382715225219727
    8. '   ' → logprob: -12.507715225219727
    9. 'de' → logprob: -12.507715225219727
    10. '```' → logprob: -13.257715225219727

Token 11: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03218182176351547
    2. 'a' → logprob: -3.782181739807129
    3. 'u' → logprob: -5.532181739807129
    4. ''' → logprob: -6.282181739807129
    5. 'util' → logprob: -7.032181739807129
    6. 'e' → logprob: -7.282181739807129
    7. ' utilisateur' → logprob: -7.907181739807129
    8. ''util' → logprob: -8.282181739807129
    9. ''us' → logprob: -8.282181739807129
    10. ''user' → logprob: -8.532181739807129

Token 12: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8371461033821106
    2. ' ' → logprob: -1.4621460437774658
    3. '   ' → logprob: -2.212146043777466
    4. ''' → logprob: -2.962146043777466
    5. '    ' → logprob: -3.712146043777466
    6. '```' → logprob: -3.962146043777466
    7. '"' → logprob: -4.212146282196045
    8. ' la' → logprob: -4.337146282196045
    9. 'e' → logprob: -4.462146282196045
    10. ' d' → logprob: -4.587146282196045

Token 13: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.3506854474544525
    2. 's' → logprob: -1.725685477256775
    3. ' calcul' → logprob: -2.6006853580474854
    4. 'calcul' → logprob: -4.2256855964660645
    5. ' entrer' → logprob: -4.3506855964660645
    6. ' rentrer' → logprob: -5.8506855964660645
    7. ' sais' → logprob: -6.2256855964660645
    8. 'entr' → logprob: -6.4756855964660645
    9. '   ' → logprob: -6.4756855964660645
    10. 'r' → logprob: -6.6006855964660645

Token 14: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9283890724182129
    2. ' ' → logprob: -1.303389072418213
    3. ' un' → logprob: -1.428389072418213
    4. 's' → logprob: -3.428389072418213
    5. ' une' → logprob: -3.803389072418213
    6. ' l' → logprob: -4.553389072418213
    7. 'l' → logprob: -4.803389072418213
    8. '   ' → logprob: -5.553389072418213
    9. ' le' → logprob: -5.803389072418213
    10. 'a' → logprob: -6.303389072418213

Token 15: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.13028419017791748
    2. 'nombre' → logprob: -2.255284309387207
    3. 'e' → logprob: -4.505284309387207
    4. ' ' → logprob: -6.380284309387207
    5. ' entier' → logprob: -6.505284309387207
    6. ' nombres' → logprob: -7.255284309387207
    7. ' espace' → logprob: -7.755284309387207
    8. 'é' → logprob: -8.130284309387207
    9. 'a' → logprob: -8.380284309387207
    10. '_nombre' → logprob: -8.505284309387207

Token 16: ' entier' (ID: 80473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9782942533493042
    2. ' ' → logprob: -1.1032942533493042
    3. 's' → logprob: -2.6032943725585938
    4. '\' → logprob: -2.9782943725585938
    5. '\n' → logprob: -3.1032943725585938
    6. ''' → logprob: -4.103294372558594
    7. ' \' → logprob: -4.478294372558594
    8. ')' → logprob: -4.603294372558594
    9. ',' → logprob: -4.603294372558594
    10. 'e' → logprob: -4.728294372558594

Token 17: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8930014371871948
    2. '\n' → logprob: -1.3930014371871948
    3. ' ' → logprob: -2.3930015563964844
    4. '\' → logprob: -2.5180015563964844
    5. ',' → logprob: -3.1430015563964844
    6. '    
' → logprob: -4.018001556396484
    7. ' \' → logprob: -4.018001556396484
    8. ' et' → logprob: -4.393001556396484
    9. '.' → logprob: -4.393001556396484
    10. '   
' → logprob: -4.893001556396484

Token 18: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.52901291847229
    2. ' input' → logprob: -1.40401291847229
    3. 'input' → logprob: -2.90401291847229
    4. ' l' → logprob: -3.15401291847229
    5. 'le' → logprob: -3.27901291847229
    6. ' le' → logprob: -4.404012680053711
    7. ' ' → logprob: -4.779012680053711
    8. '   ' → logprob: -6.029012680053711
    9. ' clavier' → logprob: -6.779012680053711
    10. ' la' → logprob: -7.029012680053711

Token 19: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08020145446062088
    2. ''utilisateur' → logprob: -3.3302013874053955
    3. ''' → logprob: -3.9552013874053955
    4. ''entrée' → logprob: -4.205201625823975
    5. 'e' → logprob: -5.705201625823975
    6. ''a' → logprob: -6.080201625823975
    7. 'input' → logprob: -7.705201625823975
    8. 'u' → logprob: -7.830201625823975
    9. ''util' → logprob: -8.955201148986816
    10. '   ' → logprob: -9.955201148986816

Token 20: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2992192506790161
    2. ' \' → logprob: -2.0492191314697266
    3. ' )' → logprob: -2.6742191314697266
    4. '.' → logprob: -2.6742191314697266
    5. ' ,' → logprob: -2.7992191314697266
    6. '   ' → logprob: -2.9242191314697266
    7. '\' → logprob: -3.1742191314697266
    8. ',' → logprob: -3.5492191314697266
    9. '`' → logprob: -3.6742191314697266
    10. ' et' → logprob: -3.6742191314697266

Token 21: ',
' (ID: 412)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.708504855632782
    2. '   ' → logprob: -1.3335049152374268
    3. '\' → logprob: -2.2085049152374268
    4. '    
' → logprob: -3.0835049152374268
    5. ' ' → logprob: -4.083504676818848
    6. '"' → logprob: -4.708504676818848
    7. ',' → logprob: -4.833504676818848
    8. ' 
' → logprob: -4.833504676818848
    9. '  
' → logprob: -4.833504676818848
    10. '.' → logprob: -5.083504676818848

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01800020970404148
    2. '    ' → logprob: -4.89300012588501
    3. ' ' → logprob: -5.64300012588501
    4. '    
' → logprob: -6.51800012588501
    5. 's' → logprob: -7.39300012588501
    6. '\n' → logprob: -7.51800012588501
    7. '\' → logprob: -7.64300012588501
    8. '       ' → logprob: -7.64300012588501
    9. 'et' → logprob: -7.76800012588501
    10. '     
' → logprob: -7.89300012588501

Token 23: ' convert' (ID: 8452)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7234809398651123
    2. '   ' → logprob: -0.8484809398651123
    3. 'p' → logprob: -2.8484809398651123
    4. 'et' → logprob: -5.223481178283691
    5. ' et' → logprob: -5.223481178283691
    6. '    
' → logprob: -5.973481178283691
    7. ' retourne' → logprob: -6.098481178283691
    8. 'ens' → logprob: -6.223481178283691
    9. '    ' → logprob: -6.348481178283691
    10. ' ' → logprob: -6.598481178283691

Token 24: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.015348093584179878
    2. 'i' → logprob: -4.265347957611084
    3. 'ir' → logprob: -7.390347957611084
    4. 'er' → logprob: -8.640348434448242
    5. 'ie' → logprob: -8.765348434448242
    6. 'is' → logprob: -9.640348434448242
    7. '   ' → logprob: -10.265348434448242
    8. 'e' → logprob: -10.265348434448242
    9. 'iert' → logprob: -10.515348434448242
    10. ' ' → logprob: -10.765348434448242

Token 25: ' cette' (ID: 7696)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.650057315826416
    2. ' le' → logprob: -1.400057315826416
    3. ' ' → logprob: -1.775057315826416
    4. '_' → logprob: -4.400057315826416
    5. 'l' → logprob: -4.525057315826416
    6. '_le' → logprob: -4.650057315826416
    7. ' la' → logprob: -4.900057315826416
    8. ' un' → logprob: -5.150057315826416
    9. '   ' → logprob: -5.525057315826416
    10. 'le' → logprob: -6.025057315826416

Token 26: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28446561098098755
    2. ' valeur' → logprob: -1.5344655513763428
    3. ' chaîne' → logprob: -3.9094655513763428
    4. ' entrée' → logprob: -5.284465789794922
    5. 's' → logprob: -6.284465789794922
    6. ' différence' → logprob: -7.284465789794922
    7. ' dernière' → logprob: -7.534465789794922
    8. ' espace' → logprob: -7.659465789794922
    9. 'entrée' → logprob: -7.784465789794922
    10. ' chaine' → logprob: -7.784465789794922

Token 27: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0031046310905367136
    2. ' ' → logprob: -6.0031046867370605
    3. 'en' → logprob: -7.5031046867370605
    4. ',' → logprob: -10.628104209899902
    5. ' ,' → logprob: -10.753104209899902
    6. '   ' → logprob: -11.878104209899902
    7. '  ' → logprob: -12.503104209899902
    8. '_en' → logprob: -12.503104209899902
    9. ' ' → logprob: -12.628104209899902
    10. ' et' → logprob: -13.128104209899902

Token 28: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2035980373620987
    2. ' ' → logprob: -1.8285980224609375
    3. ' entier' → logprob: -4.3285980224609375
    4. 'un' → logprob: -5.8285980224609375
    5. ' int' → logprob: -5.9535980224609375
    6. '   ' → logprob: -6.5785980224609375
    7. ' an' → logprob: -6.8285980224609375
    8. ' ' → logprob: -7.3285980224609375
    9. ' une' → logprob: -7.9535980224609375
    10. ' nombre' → logprob: -8.078598022460938

Token 29: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.5883285999298096
    2. ' ' → logprob: -1.9633285999298096
    3. ' nombre' → logprob: -2.0883285999298096
    4. ' espace' → logprob: -2.5883285999298096
    5. ' int' → logprob: -2.7133285999298096
    6. 'e' → logprob: -4.8383283615112305
    7. ' ' → logprob: -4.8383283615112305
    8. ' integer' → logprob: -5.2133283615112305
    9. '_' → logprob: -5.9633283615112305
    10. ' ent' → logprob: -6.0883283615112305

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04341018944978714
    2. ' ,' → logprob: -4.043410301208496
    3. '   ' → logprob: -4.043410301208496
    4. ' ' → logprob: -5.918410301208496
    5. ' et' → logprob: -7.168410301208496
    6. '.' → logprob: -7.168410301208496
    7. ')' → logprob: -7.543410301208496
    8. '    ' → logprob: -7.543410301208496
    9. ',
' → logprob: -7.668410301208496
    10. '\' → logprob: -8.293410301208496

Token 31: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.05778219550848007
    2. ' et' → logprob: -3.3077821731567383
    3. ' ' → logprob: -4.932782173156738
    4. '   ' → logprob: -5.182782173156738
    5. '    ' → logprob: -5.932782173156738
    6. ' calc' → logprob: -6.432782173156738
    7. ' retourne' → logprob: -7.057782173156738
    8. ',' → logprob: -7.932782173156738
    9. '<|end|>' → logprob: -8.932782173156738
    10. ' calculate' → logprob: -8.932782173156738

Token 32: ' affiche' (ID: 127479)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.4402008056640625
    2. '   ' → logprob: -1.6902008056640625
    3. ' calc' → logprob: -2.6902008056640625
    4. ' return' → logprob: -3.0652008056640625
    5. ' ren' → logprob: -3.3152008056640625
    6. ' calcul' → logprob: -5.6902008056640625
    7. 'return' → logprob: -5.8152008056640625
    8. ' compare' → logprob: -6.4402008056640625
    9. 'cal' → logprob: -6.6902008056640625
    10. 'ren' → logprob: -6.6902008056640625

Token 33: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5022040009498596
    2. ' l' → logprob: -1.5022039413452148
    3. ' ' → logprob: -2.127203941345215
    4. 's' → logprob: -3.627203941345215
    5. ' un' → logprob: -4.877203941345215
    6. 'l' → logprob: -5.252203941345215
    7. '"' → logprob: -5.377203941345215
    8. '  ' → logprob: -6.252203941345215
    9. ' ' → logprob: -7.002203941345215
    10. ' a' → logprob: -7.127203941345215

Token 34: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.17945654690265656
    2. 's' → logprob: -2.3044564723968506
    3. ' difference' → logprob: -3.6794564723968506
    4. ' valeur' → logprob: -4.55445671081543
    5. ' ' → logprob: -4.55445671081543
    6. ' s' → logprob: -5.05445671081543
    7. ' nombre' → logprob: -5.55445671081543
    8. ' quantité' → logprob: -6.55445671081543
    9. ' plus' → logprob: -7.05445671081543
    10. '   ' → logprob: -7.05445671081543

Token 35: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27218106389045715
    2. ' entre' → logprob: -1.7721810340881348
    3. 'entre' → logprob: -4.147181034088135
    4. ' between' → logprob: -4.522181034088135
    5. '   ' → logprob: -5.147181034088135
    6. ' \' → logprob: -5.272181034088135
    7. '  
' → logprob: -5.272181034088135
    8. '_' → logprob: -5.772181034088135
    9. '\' → logprob: -5.897181034088135
    10. 's' → logprob: -6.022181034088135

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0340921878814697
    2. 'l' → logprob: -1.9090921878814697
    3. ' la' → logprob: -2.1590921878814697
    4. ' l' → logprob: -2.6590921878814697
    5. ' le' → logprob: -2.6590921878814697
    6. 'de' → logprob: -2.7840921878814697
    7. '   ' → logprob: -2.7840921878814697
    8. 'le' → logprob: -3.7840921878814697
    9. 'n' → logprob: -3.9090921878814697
    10. '2' → logprob: -4.034091949462891

Token 37: '111' (ID: 8780)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.211667776107788
    2. 'de' → logprob: -1.586667776107788
    3. '2' → logprob: -1.836667776107788
    4. 'l' → logprob: -2.086667776107788
    5. ' ' → logprob: -3.336667776107788
    6. 'la' → logprob: -3.336667776107788
    7. 'ce' → logprob: -3.586667776107788
    8. ' le' → logprob: -3.836667776107788
    9. '1' → logprob: -4.086668014526367
    10. ' ce' → logprob: -4.461668014526367

Token 38: '0' (ID: 15)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7891298532485962
    2. '0' → logprob: -1.4141298532485962
    3. '-' → logprob: -1.9141298532485962
    4. '1' → logprob: -2.2891297340393066
    5. ' ' → logprob: -3.6641297340393066
    6. '7' → logprob: -5.414129734039307
    7. '4' → logprob: -5.414129734039307
    8. '9' → logprob: -5.664129734039307
    9. '2' → logprob: -5.914129734039307
    10. '5' → logprob: -6.039129734039307

Token 39: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.586374044418335
    2. ' et' → logprob: -0.836374044418335
    3. '   ' → logprob: -5.961374282836914
    4. '1' → logprob: -6.086374282836914
    5. 'et' → logprob: -6.711374282836914
    6. '  ' → logprob: -7.711374282836914
    7. '0' → logprob: -7.711374282836914
    8. '-' → logprob: -7.836374282836914
    9. ' and' → logprob: -7.836374282836914
    10. '    ' → logprob: -7.961374282836914

Token 40: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3987535536289215
    2. ' cet' → logprob: -1.6487535238265991
    3. ' ce' → logprob: -2.7737536430358887
    4. ' l' → logprob: -3.0237536430358887
    5. ' celui' → logprob: -4.773753643035889
    6. 'l' → logprob: -5.273753643035889
    7. ' le' → logprob: -6.148753643035889
    8. 'cet' → logprob: -6.273753643035889
    9. ' ' → logprob: -6.898753643035889
    10. ' la' → logprob: -7.148753643035889

Token 41: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.811316967010498
    2. ' nombre' → logprob: -0.811316967010498
    3. 'nombre' → logprob: -3.436316967010498
    4. 'n' → logprob: -3.686316967010498
    5. '   ' → logprob: -4.186316967010498
    6. ' que' → logprob: -5.061316967010498
    7. '_' → logprob: -5.311316967010498
    8. ' dernier' → logprob: -5.561316967010498
    9. '    ' → logprob: -5.936316967010498
    10. ' qui' → logprob: -6.061316967010498

Token 42: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.406353235244751
    2. '
' → logprob: -2.031353235244751
    3. '\n' → logprob: -2.031353235244751
    4. '\' → logprob: -3.531353235244751
    5. '    
' → logprob: -3.781353235244751
    6. '  
' → logprob: -5.531352996826172
    7. '```' → logprob: -5.906352996826172
    8. 'n' → logprob: -6.156352996826172
    9. ' ' → logprob: -6.406352996826172
    10. 'def' → logprob: -6.906352996826172

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02481534704566002
    2. '"""' → logprob: -3.899815320968628
    3. '```' → logprob: -5.899815559387207
    4. '"' → logprob: -7.524815559387207
    5. '"""
' → logprob: -7.524815559387207
    6. '""' → logprob: -8.774815559387207
    7. '    ' → logprob: -9.274815559387207
    8. ' """' → logprob: -10.274815559387207
    9. '`' → logprob: -10.524815559387207
    10. ')' → logprob: -10.649815559387207

Token 44: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019978117197752
    2. '"""' → logprob: -4.019978046417236
    3. '```' → logprob: -6.644978046417236
    4. '"""
' → logprob: -8.519978523254395
    5. '""' → logprob: -8.769978523254395
    6. '    ' → logprob: -9.894978523254395
    7. ' """' → logprob: -10.519978523254395
    8. '  ' → logprob: -11.269978523254395
    9. ' ' → logprob: -11.394978523254395
    10. '"' → logprob: -11.394978523254395

Token 45: ' fonction' (ID: 17610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4030700922012329
    2. ' fonction' → logprob: -1.903070092201233
    3. ' ' → logprob: -2.5280699729919434
    4. ' valeur' → logprob: -3.2780699729919434
    5. ' """' → logprob: -3.6530699729919434
    6. 'fonction' → logprob: -4.028069972991943
    7. ' function' → logprob: -5.528069972991943
    8. ' """
' → logprob: -5.653069972991943
    9. '  ' → logprob: -6.153069972991943
    10. 's' → logprob: -6.403069972991943

Token 46: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033397968858480453
    2. ' ' → logprob: -4.783398151397705
    3. ' retourne' → logprob: -5.283398151397705
    4. ' continue' → logprob: -5.658398151397705
    5. '    ' → logprob: -5.908398151397705
    6. ' def' → logprob: -6.658398151397705
    7. '  ' → logprob: -6.783398151397705
    8. ' est' → logprob: -6.908398151397705
    9. ' ' → logprob: -6.908398151397705
    10. ' return' → logprob: -7.033398151397705

Token 47: ' prend' (ID: 37463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4966023564338684
    2. ' retourne' → logprob: -1.9966022968292236
    3. ' return' → logprob: -2.9966022968292236
    4. '   ' → logprob: -3.1216022968292236
    5. 's' → logprob: -3.2466022968292236
    6. ''' → logprob: -3.4966022968292236
    7. ' prend' → logprob: -3.9966022968292236
    8. '"""' → logprob: -4.621602535247803
    9. ' s' → logprob: -5.121602535247803
    10. '_' → logprob: -5.121602535247803

Token 48: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.075608991086483
    2. 'pas' → logprob: -2.825608968734741
    3. ' aucun' → logprob: -4.70060920715332
    4. '   ' → logprob: -6.07560920715332
    5. ' ' → logprob: -6.82560920715332
    6. '_pas' → logprob: -8.45060920715332
    7. 's' → logprob: -8.57560920715332
    8. 'auc' → logprob: -8.95060920715332
    9. ' auc' → logprob: -9.07560920715332
    10. '_' → logprob: -9.20060920715332

Token 49: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4911712408065796
    2. 'de' → logprob: -1.8661712408065796
    3. 'd' → logprob: -2.616171360015869
    4. 'pas' → logprob: -2.866171360015869
    5. 's' → logprob: -3.366171360015869
    6. ' d' → logprob: -4.116171360015869
    7. ' pas' → logprob: -4.241171360015869
    8. ' aucun' → logprob: -4.491171360015869
    9. '   ' → logprob: -4.866171360015869
    10. ' ' → logprob: -5.366171360015869

Token 50: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05457112193107605
    2. '’' → logprob: -4.304571151733398
    3. 'arguments' → logprob: -4.554571151733398
    4. ''entrée' → logprob: -5.679571151733398
    5. '_arguments' → logprob: -5.679571151733398
    6. 'e' → logprob: -5.929571151733398
    7. '_' → logprob: -5.929571151733398
    8. 'param' → logprob: -6.054571151733398
    9. ' paramètres' → logprob: -6.554571151733398
    10. ''autres' → logprob: -6.554571151733398

Token 51: 'arguments' (ID: 34317)
  Prédit: 'arguments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arguments' → logprob: -0.6054014563560486
    2. 'argument' → logprob: -0.8554014563560486
    3. 'entrée' → logprob: -3.8554015159606934
    4. 'param' → logprob: -5.480401515960693
    5. '_arguments' → logprob: -7.355401515960693
    6. ' arguments' → logprob: -7.480401515960693
    7. 'a' → logprob: -7.730401515960693
    8. ''entrée' → logprob: -7.980401515960693
    9. 'ent' → logprob: -8.105401039123535
    10. '```' → logprob: -8.480401039123535

Token 52: ' et' (ID: 859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35223689675331116
    2. ':' → logprob: -1.8522368669509888
    3. '   ' → logprob: -2.8522369861602783
    4. ')' → logprob: -2.8522369861602783
    5. '.' → logprob: -4.977236747741699
    6. '\n' → logprob: -5.227236747741699
    7. ',' → logprob: -5.352236747741699
    8. ' :' → logprob: -5.977236747741699
    9. '):
' → logprob: -6.977236747741699
    10. '```' → logprob: -7.227236747741699

Token 53: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9080507755279541
    2. ' retourne' → logprob: -0.9080507755279541
    3. ' return' → logprob: -2.533050775527954
    4. ' ren' → logprob: -3.283050775527954
    5. 'ren' → logprob: -5.283050537109375
    6. ' ne' → logprob: -5.283050537109375
    7. '```' → logprob: -5.283050537109375
    8. ' affiche' → logprob: -5.408050537109375
    9. ' returns' → logprob: -5.408050537109375
    10. '    ' → logprob: -5.408050537109375

Token 54: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.663684070110321
    2. 'return' → logprob: -1.5386841297149658
    3. 'ret' → logprob: -1.7886841297149658
    4. '   ' → logprob: -2.538684129714966
    5. ' return' → logprob: -4.913683891296387
    6. 'ren' → logprob: -5.788683891296387
    7. 'rend' → logprob: -6.413683891296387
    8. ' ret' → logprob: -6.413683891296387
    9. '_return' → logprob: -6.663683891296387
    10. ' ren' → logprob: -6.788683891296387

Token 55: ' rien' (ID: 23082)
  Prédit: ' rien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rien' → logprob: -0.32527297735214233
    2. ' pas' → logprob: -1.450273036956787
    3. ' ' → logprob: -3.700273036956787
    4. ' aucun' → logprob: -4.700273036956787
    5. 'r' → logprob: -5.700273036956787
    6. ' aucune' → logprob: -6.200273036956787
    7. '   ' → logprob: -6.700273036956787
    8. ' None' → logprob: -7.075273036956787
    9. 'pas' → logprob: -7.075273036956787
    10. 's' → logprob: -7.950273036956787

Token 56: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05781381204724312
    2. '
' → logprob: -3.932813882827759
    3. '\n' → logprob: -4.05781364440918
    4. ':' → logprob: -4.80781364440918
    5. '```' → logprob: -5.18281364440918
    6. '    
' → logprob: -6.55781364440918
    7. '"""' → logprob: -7.05781364440918
    8. ':
' → logprob: -7.55781364440918
    9. '.' → logprob: -7.68281364440918
    10. '  
' → logprob: -7.80781364440918

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022321315482258797
    2. '"""' → logprob: -3.8973212242126465
    3. '```' → logprob: -6.7723212242126465
    4. '"""
' → logprob: -7.6473212242126465
    5. '""' → logprob: -9.522321701049805
    6. '"' → logprob: -9.897321701049805
    7. '
' → logprob: -11.147321701049805
    8. '    
' → logprob: -12.522321701049805
    9. 'def' → logprob: -13.022321701049805
    10. '  ' → logprob: -13.022321701049805

Token 58: ' Elle' (ID: 21300)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14837835729122162
    2. '"""' → logprob: -2.023378372192383
    3. '```' → logprob: -5.648378372192383
    4. '"""
' → logprob: -7.023378372192383
    5. '""' → logprob: -7.273378372192383
    6. '"' → logprob: -8.148378372192383
    7. 'def' → logprob: -9.523378372192383
    8. '\n' → logprob: -9.773378372192383
    9. ' """' → logprob: -10.148378372192383
    10. '
' → logprob: -10.523378372192383

Token 59: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00419889809563756
    2. ' continue' → logprob: -7.129199028015137
    3. ' demande' → logprob: -7.504199028015137
    4. ' def' → logprob: -8.004199028015137
    5. ' ' → logprob: -8.129199028015137
    6. '  ' → logprob: -8.379199028015137
    7. 'def' → logprob: -8.504199028015137
    8. ' utilise' → logprob: -8.504199028015137
    9. ' affiche' → logprob: -8.629199028015137
    10. '```' → logprob: -9.004199028015137

Token 60: ' directement' (ID: 52317)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.38290953636169434
    2. ' ' → logprob: -1.8829095363616943
    3. ' l' → logprob: -2.7579095363616943
    4. '(' → logprob: -3.3829095363616943
    5. '   ' → logprob: -4.257909774780273
    6. ' un' → logprob: -4.382909774780273
    7. '()' → logprob: -4.757909774780273
    8. '    ' → logprob: -5.132909774780273
    9. ' (' → logprob: -5.132909774780273
    10. ' ' → logprob: -5.257909774780273

Token 61: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3567270338535309
    2. '   ' → logprob: -1.6067270040512085
    3. ' l' → logprob: -3.106727123260498
    4. ' ' → logprob: -3.731727123260498
    5. 'l' → logprob: -4.481727123260498
    6. ' le' → logprob: -5.231727123260498
    7. '    ' → logprob: -5.356727123260498
    8. '(' → logprob: -6.106727123260498
    9. 'la' → logprob: -6.731727123260498
    10. '  ' → logprob: -6.981727123260498

Token 62: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.12433799356222153
    2. 'rés' → logprob: -2.874337911605835
    3. 's' → logprob: -3.749337911605835
    4. ' resultat' → logprob: -4.999338150024414
    5. '   ' → logprob: -5.124338150024414
    6. 'r' → logprob: -5.124338150024414
    7. ' rés' → logprob: -5.374338150024414
    8. ' result' → logprob: -6.124338150024414
    9. ' nombre' → logprob: -6.249338150024414
    10. 'result' → logprob: -6.624338150024414

Token 63: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2489323765039444
    2. '
' → logprob: -2.373932361602783
    3. '\n' → logprob: -2.623932361602783
    4. '    
' → logprob: -2.998932361602783
    5. '  
' → logprob: -6.623932361602783
    6. '   
' → logprob: -7.123932361602783
    7. '\' → logprob: -7.623932361602783
    8. ':' → logprob: -7.998932361602783
    9. '

' → logprob: -8.248932838439941
    10. '```' → logprob: -8.248932838439941

Token 64: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5331956148147583
    2. ' l' → logprob: -0.9081956148147583
    3. 'la' → logprob: -5.658195495605469
    4. ' la' → logprob: -6.283195495605469
    5. '   ' → logprob: -6.783195495605469
    6. ' ' → logprob: -7.158195495605469
    7. 'lac' → logprob: -7.408195495605469
    8. 'à' → logprob: -7.408195495605469
    9. '	l' → logprob: -7.533195495605469
    10. '```' → logprob: -8.033195495605469

Token 65: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.496596097946167
    2. 'a' → logprob: -1.621596097946167
    3. ''utilisateur' → logprob: -1.871596097946167
    4. ''' → logprob: -4.246596336364746
    5. 'e' → logprob: -4.246596336364746
    6. ''é' → logprob: -5.371596336364746
    7. ''entrée' → logprob: -5.996596336364746
    8. 'u' → logprob: -6.996596336364746
    9. ''a' → logprob: -7.621596336364746
    10. ''e' → logprob: -8.121596336364746

Token 66: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23165220022201538
    2. '
' → logprob: -2.23165225982666
    3. '\n' → logprob: -2.73165225982666
    4. '    
' → logprob: -3.60665225982666
    5. '  
' → logprob: -6.23165225982666
    6. '```' → logprob: -6.73165225982666
    7. '   
' → logprob: -6.98165225982666
    8. ':' → logprob: -7.35665225982666
    9. '"""' → logprob: -7.35665225982666
    10. '"""
' → logprob: -7.48165225982666

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27265194058418274
    2. '"""' → logprob: -1.5226519107818604
    3. '"""
' → logprob: -4.2726521492004395
    4. '"' → logprob: -5.3976521492004395
    5. '```' → logprob: -6.5226521492004395
    6. '""' → logprob: -7.6476521492004395
    7. ' """' → logprob: -10.647651672363281
    8. '"""

' → logprob: -11.647651672363281
    9. '
' → logprob: -11.772651672363281
    10. ' """
' → logprob: -11.772651672363281

Token 68: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.598334014415741
    2. '   ' → logprob: -0.848334014415741
    3. '"' → logprob: -4.598333835601807
    4. '"""
' (adapté à ' """
') → logprob: -5.098333835601807
    5. '```' → logprob: -5.348333835601807
    6. '""' → logprob: -6.973333835601807
    7. ' """' → logprob: -9.848334312438965
    8. '\n' → logprob: -9.848334312438965
    9. '
' → logprob: -9.848334312438965
    10. '`' → logprob: -10.473334312438965

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015611149370670319
    2. '
' → logprob: -4.765611171722412
    3. 'n' → logprob: -5.765611171722412
    4. '    
' → logprob: -6.015611171722412
    5. '\n' → logprob: -7.390611171722412
    6. '    ' → logprob: -7.890611171722412
    7. '```' → logprob: -8.890610694885254
    8. ' 
' → logprob: -9.890610694885254
    9. '\' → logprob: -10.390610694885254
    10. '   
' → logprob: -10.640610694885254

Token 70: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6425849199295044
    2. '   ' → logprob: -0.7675849199295044
    3. 'nombre' → logprob: -5.892584800720215
    4. 'number' → logprob: -6.142584800720215
    5. 'user' → logprob: -6.767584800720215
    6. ' n' → logprob: -6.892584800720215
    7. '    
' → logprob: -7.892584800720215
    8. '\n' → logprob: -8.017584800720215
    9. 'num' → logprob: -8.142584800720215
    10. '
' → logprob: -8.517584800720215

Token 71: ' Aff' (ID: 13741)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18679076433181763
    2. 'nombre' → logprob: -2.561790704727173
    3. '   ' → logprob: -3.436790704727173
    4. ' n' → logprob: -3.686790704727173
    5. ' nombre' → logprob: -4.436790943145752
    6. 'number' → logprob: -4.811790943145752
    7. ' number' → logprob: -5.186790943145752
    8. 'num' → logprob: -5.686790943145752
    9. 'x' → logprob: -6.561790943145752
    10. 'user' → logprob: -6.811790943145752

Token 72: 'icher' (ID: 13617)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.08400058001279831
    2. 'i' → logprob: -3.459000587463379
    3. 'ic' → logprob: -3.584000587463379
    4. 'icher' → logprob: -4.334000587463379
    5. '   ' → logprob: -6.334000587463379
    6. 'ichage' → logprob: -6.334000587463379
    7. 'e' → logprob: -6.709000587463379
    8. '#' → logprob: -6.959000587463379
    9. 'ich' → logprob: -7.334000587463379
    10. '\' → logprob: -8.084000587463379

Token 73: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6107340455055237
    2. ' ' → logprob: -1.110733985900879
    3. '(' → logprob: -3.610733985900879
    4. ' l' → logprob: -3.985733985900879
    5. ' "' → logprob: -4.360733985900879
    6. ' un' → logprob: -4.485733985900879
    7. 'l' → logprob: -4.735733985900879
    8. '"' → logprob: -4.860733985900879
    9. ' la' → logprob: -4.985733985900879
    10. '    ' → logprob: -4.985733985900879

Token 74: ' message' (ID: 3176)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49038392305374146
    2. ' ' → logprob: -1.2403838634490967
    3. ' message' → logprob: -3.8653838634490967
    4. ' nombre' → logprob: -4.240384101867676
    5. 'n' → logprob: -4.490384101867676
    6. '  ' → logprob: -4.615384101867676
    7. 'nombre' → logprob: -4.615384101867676
    8. '   ' → logprob: -4.865384101867676
    9. 'message' → logprob: -5.615384101867676
    10. ' "' → logprob: -6.115384101867676

Token 75: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00920746847987175
    2. '    ' → logprob: -5.384207248687744
    3. ' ' → logprob: -6.509207248687744
    4. '"' → logprob: -6.759207248687744
    5. ''' → logprob: -7.384207248687744
    6. '  ' → logprob: -7.759207248687744
    7. '    
' → logprob: -8.009207725524902
    8. '`' → logprob: -9.509207725524902
    9. '       ' → logprob: -9.634207725524902
    10. '(' → logprob: -9.884207725524902

Token 76: ' inviter' (ID: 173752)
  Prédit: ' demander'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' demander' → logprob: -0.5036066770553589
    2. ' inviter' → logprob: -1.1286066770553589
    3. ' saisir' → logprob: -4.003606796264648
    4. 'dem' → logprob: -4.253606796264648
    5. 's' → logprob: -5.128606796264648
    6. ' l' → logprob: -5.253606796264648
    7. ' inc' → logprob: -5.253606796264648
    8. 'l' → logprob: -5.503606796264648
    9. ' que' → logprob: -5.878606796264648
    10. ' ' → logprob: -6.003606796264648

Token 77: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.039155878126621246
    2. 'l' → logprob: -3.664155960083008
    3. ' à' → logprob: -4.664155960083008
    4. ' )' → logprob: -7.039155960083008
    5. '   ' → logprob: -7.539155960083008
    6. ' ' → logprob: -7.539155960083008
    7. 'à' → logprob: -8.289155960083008
    8. '  ' → logprob: -8.914155960083008
    9. 'user' → logprob: -8.914155960083008
    10. ')' → logprob: -8.914155960083008

Token 78: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0020731717813760042
    2. 'a' → logprob: -7.377073287963867
    3. '’utilisateur' → logprob: -7.877073287963867
    4. ''' → logprob: -8.127073287963867
    5. ''user' → logprob: -8.377073287963867
    6. 'u' → logprob: -8.877073287963867
    7. ''util' → logprob: -9.377073287963867
    8. ''us' → logprob: -9.627073287963867
    9. ''a' → logprob: -9.877073287963867
    10. 'util' → logprob: -10.127073287963867

Token 79: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9326663017272949
    2. ' ' → logprob: -1.432666301727295
    3. ' à' → logprob: -1.432666301727295
    4. '  ' → logprob: -2.557666301727295
    5. '    ' → logprob: -3.307666301727295
    6. 's' → logprob: -5.557666301727295
    7. ' a' → logprob: -6.307666301727295
    8. 'à' → logprob: -6.432666301727295
    9. 'a' → logprob: -6.557666301727295
    10. ' )' → logprob: -7.307666301727295

Token 80: ' entrer' (ID: 111917)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.011155937798321247
    2. ' entrer' → logprob: -5.13615608215332
    3. 's' → logprob: -5.51115608215332
    4. 'entr' → logprob: -7.63615608215332
    5. ' sais' → logprob: -8.01115608215332
    6. ' ' → logprob: -9.26115608215332
    7. ' input' → logprob: -9.26115608215332
    8. ' rentrer' → logprob: -10.26115608215332
    9. ' entr' → logprob: -10.38615608215332
    10. ' ' → logprob: -10.63615608215332

Token 81: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5886900424957275
    2. ' ' → logprob: -0.8386900424957275
    3. 'un' → logprob: -4.588689804077148
    4. ' u' → logprob: -7.713689804077148
    5. '  ' → logprob: -7.963689804077148
    6. 'n' → logprob: -8.088689804077148
    7. 'u' → logprob: -8.338689804077148
    8. ' a' → logprob: -8.713689804077148
    9. ' le' → logprob: -8.838689804077148
    10. 'l' → logprob: -8.963689804077148

Token 82: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.23255513608455658
    2. 'nombre' → logprob: -2.1075551509857178
    3. 'n' → logprob: -3.2325551509857178
    4. ' ' → logprob: -3.3575551509857178
    5. ' n' → logprob: -4.982554912567139
    6. ' ' → logprob: -7.107554912567139
    7. ' nomb' → logprob: -7.107554912567139
    8. ' entier' → logprob: -7.482554912567139
    9. '_nombre' → logprob: -7.857554912567139
    10. 'e' → logprob: -8.357555389404297

Token 83: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0786434412002563
    2. ' ' → logprob: -1.3286434412002563
    3. '   ' → logprob: -1.5786434412002563
    4. '\' → logprob: -2.953643321990967
    5. ' 
' → logprob: -3.203643321990967
    6. '\n' → logprob: -3.328643321990967
    7. '    
' → logprob: -3.703643321990967
    8. '    ' → logprob: -4.828643321990967
    9. ' \' → logprob: -4.953643321990967
    10. '     
' → logprob: -5.203643321990967

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4532923400402069
    2. 'n' → logprob: -1.4532923698425293
    3. '    
' → logprob: -3.0782923698425293
    4. ' 
' → logprob: -3.2032923698425293
    5. '\n' → logprob: -4.203292369842529
    6. ' ' → logprob: -4.953292369842529
    7. '
' → logprob: -5.203292369842529
    8. '\' → logprob: -5.453292369842529
    9. '  
' → logprob: -5.453292369842529
    10. '   
' → logprob: -6.078292369842529

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05136348307132721
    2. 'n' → logprob: -3.176363468170166
    3. '    
' → logprob: -5.676363468170166
    4. ' ' → logprob: -6.551363468170166
    5. ' 
' → logprob: -7.301363468170166
    6. '    ' → logprob: -7.676363468170166
    7. 's' → logprob: -7.926363468170166
    8. '\n' → logprob: -8.176363945007324
    9. '   
' → logprob: -8.301363945007324
    10. 'input' → logprob: -8.426363945007324

Token 86: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18258784711360931
    2. '   ' → logprob: -2.1825878620147705
    3. ' n' → logprob: -3.4325878620147705
    4. 'nombre' → logprob: -4.682587623596191
    5. 'print' → logprob: -5.932587623596191
    6. ' print' → logprob: -5.932587623596191
    7. ' nombre' → logprob: -5.932587623596191
    8. ' ' → logprob: -7.307587623596191
    9. 'input' → logprob: -7.432587623596191
    10. ' input' → logprob: -7.682587623596191

Token 87: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03235379233956337
    2. '_' → logprob: -3.9073538780212402
    3. '=' → logprob: -4.78235387802124
    4. '_util' → logprob: -6.53235387802124
    5. '_str' → logprob: -7.40735387802124
    6. '_input' → logprob: -7.78235387802124
    7. 's' → logprob: -8.282353401184082
    8. '=input' → logprob: -8.407353401184082
    9. '_ent' → logprob: -8.532353401184082
    10. ' ' → logprob: -10.157353401184082

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008627697825431824
    2. '=' → logprob: -4.758627891540527
    3. ' ' → logprob: -11.508627891540527
    4. '=input' → logprob: -13.883627891540527
    5. '_' → logprob: -14.133627891540527
    6. ' ' → logprob: -15.008627891540527
    7. ')' → logprob: -15.383627891540527
    8. 's' → logprob: -15.383627891540527
    9. ',' → logprob: -15.383627891540527
    10. '   ' → logprob: -16.13362693786621

Token 89: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0052350712940096855
    2. 'input' → logprob: -5.255235195159912
    3. '=input' → logprob: -14.130234718322754
    4. ' ' → logprob: -15.130234718322754
    5. '	input' → logprob: -16.25523567199707
    6. '(input' → logprob: -16.38023567199707
    7. ' ' → logprob: -16.38023567199707
    8. ' 입력' → logprob: -18.38023567199707
    9. '<input' → logprob: -18.38023567199707
    10. ' inp' → logprob: -18.75523567199707

Token 90: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03536662831902504
    2. '("("' → logprob: -3.4103665351867676
    3. '("' → logprob: -6.785366535186768
    4. '('' → logprob: -8.160367012023926
    5. '(
' → logprob: -8.910367012023926
    6. '("(' → logprob: -9.535367012023926
    7. '(">' → logprob: -9.660367012023926
    8. '("")' → logprob: -11.660367012023926
    9. '(

' → logprob: -12.285367012023926
    10. '("""' → logprob: -12.535367012023926

Token 91: 'Veuillez' (ID: 195510)
  Prédit: 'Ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.12099307030439377
    2. 'Veuillez' → logprob: -2.245993137359619
    3. 'Entr' → logprob: -5.870993137359619
    4. 'S' → logprob: -6.245993137359619
    5. 'ent' → logprob: -6.370993137359619
    6. 's' → logprob: -7.745993137359619
    7. 'Enter' → logprob: -8.120992660522461
    8. '")' → logprob: -8.745992660522461
    9. 'Entre' → logprob: -8.995992660522461
    10. 'Please' → logprob: -9.120992660522461

Token 92: ' entrer' (ID: 111917)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.3451754152774811
    2. ' entrer' → logprob: -1.3451753854751587
    3. ' ' → logprob: -3.4701755046844482
    4. ' enter' → logprob: -9.470175743103027
    5. ' rentrer' → logprob: -9.845175743103027
    6. 'entr' → logprob: -9.845175743103027
    7. ' entr' → logprob: -10.345175743103027
    8. '  ' → logprob: -10.845175743103027
    9. ' ' → logprob: -11.470175743103027
    10. 'enter' → logprob: -11.720175743103027

Token 93: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.004325791262090206
    2. ' ' → logprob: -5.504325866699219
    3. ' ' → logprob: -9.254325866699219
    4. 'un' → logprob: -9.379325866699219
    5. ' votre' → logprob: -10.754325866699219
    6. ' une' → logprob: -11.004325866699219
    7. ' le' → logprob: -11.504325866699219
    8. ' nombre' → logprob: -12.379325866699219
    9. ' )' → logprob: -12.629325866699219
    10. '_un' → logprob: -13.504325866699219

Token 94: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0753668025135994
    2. ' ' → logprob: -2.700366735458374
    3. 'nombre' → logprob: -5.575366973876953
    4. 'n' → logprob: -7.450366973876953
    5. ' entier' → logprob: -7.575366973876953
    6. ' ' → logprob: -8.825366973876953
    7. ' numéro' → logprob: -9.325366973876953
    8. '  ' → logprob: -10.075366973876953
    9. ' un' → logprob: -10.075366973876953
    10. ' n' → logprob: -10.075366973876953

Token 95: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.008221159689128399
    2. ' ' → logprob: -4.88322114944458
    3. ' entière' → logprob: -8.633221626281738
    4. ' ' → logprob: -8.883221626281738
    5. 'ent' → logprob: -8.883221626281738
    6. ' ent' → logprob: -9.383221626281738
    7. '  ' → logprob: -10.883221626281738
    8. ' enti' → logprob: -11.133221626281738
    9. ' integer' → logprob: -11.383221626281738
    10. '   ' → logprob: -11.883221626281738

Token 96: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.14342555403709412
    2. ':' → logprob: -2.018425464630127
    3. '")' → logprob: -7.393425464630127
    4. ' ' → logprob: -9.518425941467285
    5. ')' → logprob: -10.518425941467285
    6. ' ' → logprob: -10.893425941467285
    7. '\"' → logprob: -12.768425941467285
    8. '"' → logprob: -13.268425941467285
    9. '')' → logprob: -13.268425941467285
    10. ' ")' → logprob: -13.268425941467285

Token 97: ' ")
' (ID: 31232)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003902775060851127
    2. '")
' → logprob: -8.37539005279541
    3. ' ")' → logprob: -9.12539005279541
    4. ')' → logprob: -10.62539005279541
    5. '"' → logprob: -11.12539005279541
    6. '")
' → logprob: -11.62539005279541
    7. '")

' → logprob: -14.37539005279541
    8. ')")' → logprob: -14.50039005279541
    9. '')' → logprob: -15.12539005279541
    10. ' ' → logprob: -15.62539005279541

Token 98: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8172087073326111
    2. '   ' → logprob: -0.9422087073326111
    3. '    
' → logprob: -2.442208766937256
    4. 'val' → logprob: -2.692208766937256
    5. '   
' → logprob: -5.192208766937256
    6. '  
' → logprob: -5.692208766937256
    7. ' 
' → logprob: -6.067208766937256
    8. '  ' → logprob: -7.692208766937256
    9. '\n' → logprob: -7.817208766937256
    10. '     
' → logprob: -7.817208766937256

Token 99: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02442709170281887
    2. '   ' → logprob: -3.7744271755218506
    3. 'try' → logprob: -7.3994269371032715
    4. ' val' → logprob: -8.64942741394043
    5. ' valeur' → logprob: -8.77442741394043
    6. '    
' → logprob: -9.02442741394043
    7. '
' → logprob: -9.77442741394043
    8. ' try' → logprob: -11.02442741394043
    9. '	val' → logprob: -11.77442741394043
    10. ' ' → logprob: -12.14942741394043

Token 100: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004706614650785923
    2. 'try' → logprob: -5.379706382751465
    3. '#' (adapté à ' #') → logprob: -9.754706382751465
    4. '   ' → logprob: -10.754706382751465
    5. '    
' → logprob: -14.004706382751465
    6. '```' → logprob: -14.004706382751465
    7. ' try' → logprob: -14.129706382751465
    8. 'value' → logprob: -14.129706382751465
    9. 'vale' → logprob: -14.504706382751465
    10. ' val' → logprob: -14.504706382751465

Token 101: ' Convert' (ID: 15629)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0967794731259346
    2. 'try' → logprob: -2.4717795848846436
    3. ' try' → logprob: -5.5967793464660645
    4. '#' → logprob: -5.9717793464660645
    5. ' val' → logprob: -7.7217793464660645
    6. ' valeur' → logprob: -7.8467793464660645
    7. 'value' → logprob: -8.596779823303223
    8. '   ' → logprob: -8.846779823303223
    9. 'ess' → logprob: -9.846779823303223
    10. 'convert' → logprob: -10.096779823303223

Token 102: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.996530294418335
    2. 'ir' → logprob: -1.121530294418335
    3. 'er' → logprob: -1.496530294418335
    4. 'tion' → logprob: -2.996530294418335
    5. 'val' → logprob: -4.746530532836914
    6. 'issez' → logprob: -5.371530532836914
    7. 'i' → logprob: -5.496530532836914
    8. ' valeur' → logprob: -5.996530532836914
    9. 'r' → logprob: -6.496530532836914
    10. 'valuer' → logprob: -6.996530532836914

Token 103: ' la' (ID: 557)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.46142324805259705
    2. ' ' → logprob: -1.8364232778549194
    3. ' la' → logprob: -2.21142315864563
    4. 'val' → logprob: -2.33642315864563
    5. ' val' → logprob: -6.836423397064209
    6. ' ' → logprob: -7.336423397064209
    7. ' l' → logprob: -8.21142292022705
    8. 'la' → logprob: -8.21142292022705
    9. 'int' → logprob: -8.33642292022705
    10. '<|end|>' → logprob: -8.71142292022705

Token 104: ' chaîne' (ID: 89288)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015991295222193003
    2. ' valeur' → logprob: -6.501599311828613
    3. ' val' → logprob: -10.626599311828613
    4. ' chaîne' → logprob: -10.626599311828613
    5. 'chaine' → logprob: -10.751599311828613
    6. 'entrée' → logprob: -12.501599311828613
    7. 'string' → logprob: -12.626599311828613
    8. ' chaine' → logprob: -12.751599311828613
    9. 'value' → logprob: -12.876599311828613
    10. '```' → logprob: -13.001599311828613

Token 105: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07567354291677475
    2. ' ' → logprob: -4.200673580169678
    3. 'en' → logprob: -4.200673580169678
    4. 'val' → logprob: -4.575673580169678
    5. '_val' → logprob: -4.950673580169678
    6. ' valeur' → logprob: -5.325673580169678
    7. '_en' → logprob: -5.450673580169678
    8. '_' → logprob: -5.575673580169678
    9. ' de' → logprob: -5.575673580169678
    10. 'de' → logprob: -6.450673580169678

Token 106: ' caractères' (ID: 183106)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0067248344421387
    2. 'car' → logprob: -1.0067248344421387
    3. ' caractères' → logprob: -1.3817248344421387
    4. ' caract' → logprob: -5.381724834442139
    5. ' valeur' → logprob: -5.631724834442139
    6. ' car' → logprob: -5.756724834442139
    7. ' caractère' → logprob: -5.881724834442139
    8. ' caracteres' → logprob: -6.381724834442139
    9. ' val' → logprob: -6.756724834442139
    10. 'entrée' → logprob: -8.131725311279297

Token 107: ' sais' (ID: 30010)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.10235362499952316
    2. 'en' → logprob: -2.977353572845459
    3. 'val' → logprob: -3.352353572845459
    4. ' ' → logprob: -5.227353572845459
    5. ' val' → logprob: -5.727353572845459
    6. '   ' → logprob: -6.602353572845459
    7. ' valeur' → logprob: -7.102353572845459
    8. '_val' → logprob: -8.727354049682617
    9. '_en' → logprob: -8.852354049682617
    10. '_' → logprob: -9.852354049682617

Token 108: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0006296366918832064
    2. 'i' → logprob: -8.125629425048828
    3. ' ie' → logprob: -8.750629425048828
    4. 'sie' → logprob: -10.250629425048828
    5. '   ' → logprob: -10.375629425048828
    6. 'e' → logprob: -10.375629425048828
    7. 'ue' → logprob: -11.625629425048828
    8. 'is' → logprob: -11.875629425048828
    9. '
' → logprob: -12.000629425048828
    10. 'isie' → logprob: -12.250629425048828

Token 109: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.31047844886779785
    2. 'en' → logprob: -1.4354784488677979
    3. 'val' → logprob: -3.685478448867798
    4. '_val' → logprob: -6.060478210449219
    5. '_en' → logprob: -7.560478210449219
    6. ' val' → logprob: -7.560478210449219
    7. ' ' → logprob: -8.185478210449219
    8. ' valeur' → logprob: -9.810478210449219
    9. '   ' → logprob: -10.310478210449219
    10. ' in' → logprob: -10.935478210449219

Token 110: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0853540897369385
    2. ' entier' → logprob: -1.3353540897369385
    3. 'int' → logprob: -1.5853540897369385
    4. ' int' → logprob: -2.0853540897369385
    5. 'ent' → logprob: -2.8353540897369385
    6. 'un' → logprob: -4.960353851318359
    7. ' ent' → logprob: -6.585353851318359
    8. ' ' → logprob: -6.835353851318359
    9. 'val' → logprob: -7.460353851318359
    10. ' nombre' → logprob: -7.710353851318359

Token 111: '
' (ID: 198)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.051607489585876465
    2. '   ' → logprob: -3.801607608795166
    3. '    
' → logprob: -4.176607608795166
    4. '
' → logprob: -5.176607608795166
    5. ' valeur' → logprob: -5.176607608795166
    6. ' val' → logprob: -8.426607131958008
    7. '     
' → logprob: -8.551607131958008
    8. ' ' → logprob: -8.676607131958008
    9. '	val' → logprob: -9.176607131958008
    10. '   
' → logprob: -9.426607131958008

Token 112: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16620378196239471
    2. '   ' → logprob: -1.9162037372589111
    3. ' valeur' → logprob: -5.79120397567749
    4. '    
' → logprob: -6.41620397567749
    5. ' val' → logprob: -6.91620397567749
    6. '	val' → logprob: -9.916203498840332
    7. '
' → logprob: -10.166203498840332
    8. ' ' → logprob: -10.791203498840332
    9. '_val' → logprob: -11.041203498840332
    10. '     
' → logprob: -11.041203498840332

Token 113: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3135109841823578
    2. ' valeur' → logprob: -1.3135110139846802
    3. ' val' → logprob: -9.18851089477539
    4. '   ' → logprob: -9.18851089477539
    5. ' ' → logprob: -11.43851089477539
    6. 'value' → logprob: -11.68851089477539
    7. 'nombre' → logprob: -12.18851089477539
    8. ' vale' → logprob: -12.68851089477539
    9. ' nombre' → logprob: -12.68851089477539
    10. '```' → logprob: -13.06351089477539

Token 114: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10190641134977341
    2. ' =' → logprob: -2.4769062995910645
    3. '_int' → logprob: -4.7269062995910645
    4. '=' → logprob: -5.9769062995910645
    5. '_ent' → logprob: -6.9769062995910645
    6. '=int' → logprob: -8.101906776428223
    7. '_val' → logprob: -8.976906776428223
    8. '_num' → logprob: -10.226906776428223
    9. '_=' → logprob: -10.476906776428223
    10. '_str' → logprob: -10.976906776428223

Token 115: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00523719098418951
    2. 'int' → logprob: -5.255237102508545
    3. ' ' → logprob: -12.880237579345703
    4. '=int' → logprob: -14.880237579345703
    5. '	int' → logprob: -15.380237579345703
    6. '[int' → logprob: -16.380237579345703
    7. '(int' → logprob: -16.630237579345703
    8. '<int' → logprob: -16.880237579345703
    9. '```' → logprob: -17.380237579345703
    10. ' ' → logprob: -17.755237579345703

Token 116: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. 'val' → logprob: -13.62503719329834
    4. ' (' → logprob: -16.750036239624023
    5. '[val' → logprob: -16.750036239624023
    6. '(valor' → logprob: -16.875036239624023
    7. '(v' → logprob: -18.125036239624023
    8. '(
' → logprob: -18.750036239624023
    9. '(var' → logprob: -19.375036239624023
    10. ',val' → logprob: -19.375036239624023

Token 117: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.00014251544780563563
    2. 'uer' → logprob: -9.375142097473145
    3. 'e' → logprob: -11.375142097473145
    4. 'eurs' → logprob: -11.375142097473145
    5. 'ueur' → logprob: -11.875142097473145
    6. 'reur' → logprob: -12.000142097473145
    7. 'er' → logprob: -12.250142097473145
    8. 'leur' → logprob: -12.500142097473145
    9. 'val' → logprob: -13.125142097473145
    10. 'ale' → logprob: -13.625142097473145

Token 118: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.010153618641197681
    2. ')' → logprob: -4.635153770446777
    3. '_)' → logprob: -8.510153770446777
    4. '_' → logprob: -9.510153770446777
    5. '_val' → logprob: -10.010153770446777
    6. ' )' → logprob: -10.635153770446777
    7. 'str' → logprob: -10.885153770446777
    8. '   ' → logprob: -11.010153770446777
    9. '))' → logprob: -12.885153770446777
    10. ')_' → logprob: -13.260153770446777

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005327790859155357
    2. ' )' → logprob: -7.625532627105713
    3. ')
' → logprob: -10.625533103942871
    4. '   ' → logprob: -10.875533103942871
    5. '))' → logprob: -14.625533103942871
    6. ' ' → logprob: -14.875533103942871
    7. ' )
' → logprob: -15.625533103942871
    8. ')

' → logprob: -15.875533103942871
    9. ')
' → logprob: -16.375532150268555
    10. ')`' → logprob: -16.375532150268555

Token 120: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7290083169937134
    2. '   ' → logprob: -1.1040083169937134
    3. '
' → logprob: -1.8540083169937134
    4. 'result' → logprob: -4.104008197784424
    5. '  
' → logprob: -5.479008197784424
    6. 'diff' → logprob: -5.854008197784424
    7. '   
' → logprob: -6.104008197784424
    8. ' result' → logprob: -7.229008197784424
    9. 'difference' → logprob: -7.729008197784424
    10. '```' → logprob: -7.729008197784424

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2552948296070099
    2. 'result' → logprob: -2.6302947998046875
    3. 'diff' → logprob: -2.6302947998046875
    4. '    
' → logprob: -2.8802947998046875
    5. 'difference' → logprob: -4.0052947998046875
    6. 'rés' → logprob: -6.2552947998046875
    7. '
' → logprob: -6.8802947998046875
    8. ' result' → logprob: -7.2552947998046875
    9. '#' → logprob: -7.3802947998046875
    10. ' résultat' → logprob: -7.6302947998046875

Token 122: ' #' (ID: 1069)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.6867470145225525
    2. 'diff' → logprob: -1.1867470741271973
    3. 'result' → logprob: -1.6867470741271973
    4. 'print' → logprob: -5.936747074127197
    5. '#' (adapté à ' #') → logprob: -6.811747074127197
    6. '   ' → logprob: -7.061747074127197
    7. ' difference' → logprob: -7.686747074127197
    8. 'rés' → logprob: -8.061746597290039
    9. ' resultat' → logprob: -8.186746597290039
    10. 'd' → logprob: -8.561746597290039

Token 123: ' Calcul' (ID: 57243)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -1.1514561176300049
    2. 'diff' → logprob: -1.2764561176300049
    3. ' difference' → logprob: -1.9014561176300049
    4. ' différence' → logprob: -2.526456117630005
    5. 'result' → logprob: -3.401456117630005
    6. ' resultat' → logprob: -3.401456117630005
    7. ' result' → logprob: -3.526456117630005
    8. ' diff' → logprob: -3.776456117630005
    9. ' résultat' → logprob: -3.901456117630005
    10. '#' → logprob: -4.151455879211426

Token 124: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.031244546175003052
    2. '   ' → logprob: -3.7812445163726807
    3. 'difference' → logprob: -5.78124475479126
    4. 'diff' → logprob: -6.65624475479126
    5. ' difference' → logprob: -6.65624475479126
    6. '_difference' → logprob: -6.90624475479126
    7. '    
' → logprob: -8.031244277954102
    8. ' différence' → logprob: -8.906244277954102
    9. ' er' → logprob: -9.281244277954102
    10. ' =' → logprob: -9.281244277954102

Token 125: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.004940681625157595
    2. ' ' → logprob: -6.004940509796143
    3. ' l' → logprob: -6.504940509796143
    4. 'la' → logprob: -8.0049409866333
    5. ' ' → logprob: -8.8799409866333
    6. ' le' → logprob: -9.2549409866333
    7. 'difference' → logprob: -9.5049409866333
    8. ' difference' → logprob: -9.7549409866333
    9. '   ' → logprob: -9.8799409866333
    10. '_la' → logprob: -10.0049409866333

Token 126: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3921694755554199
    2. ' différence' → logprob: -1.39216947555542
    3. 'difference' → logprob: -2.64216947555542
    4. ' difference' → logprob: -6.01716947555542
    5. 'd' → logprob: -6.39216947555542
    6. ' diff' → logprob: -8.267169952392578
    7. 'dif' → logprob: -9.017169952392578
    8. ' ' → logprob: -9.642169952392578
    9. 'val' → logprob: -10.892169952392578
    10. ' différ' → logprob: -11.267169952392578

Token 127: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4755261540412903
    2. 'diff' → logprob: -1.7255260944366455
    3. '   ' → logprob: -2.1005260944366455
    4. ' entre' → logprob: -3.4755260944366455
    5. 'difference' → logprob: -3.8505260944366455
    6. '    
' → logprob: -5.475526332855225
    7. 'result' → logprob: -5.600526332855225
    8. ' between' → logprob: -5.725526332855225
    9. ' différence' → logprob: -6.100526332855225
    10. ' difference' → logprob: -6.225526332855225

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.062174826860427856
    2. '111' → logprob: -2.8121747970581055
    3. ' ' → logprob: -8.687174797058105
    4. '   ' → logprob: -11.437174797058105
    5. '110' → logprob: -12.687174797058105
    6. ' la' → logprob: -12.812174797058105
    7. '  ' → logprob: -12.812174797058105
    8. ' l' → logprob: -13.124674797058105
    9. '```' → logprob: -13.374674797058105
    10. ' `' → logprob: -13.374674797058105

Token 129: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.006743200588971376
    2. ' ' → logprob: -5.006743431091309
    3. '```' → logprob: -11.631743431091309
    4. ' ' → logprob: -12.631743431091309
    5. '`' → logprob: -12.756743431091309
    6. '1' → logprob: -12.819243431091309
    7. '   ' → logprob: -12.819243431091309
    8. '110' → logprob: -13.256743431091309
    9. '11' → logprob: -13.881743431091309
    10. '(' → logprob: -14.131743431091309

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -11.000021934509277
    3. 'o' → logprob: -13.625021934509277
    4. '۰' → logprob: -13.875021934509277
    5. '０' → logprob: -14.375021934509277
    6. '1' → logprob: -14.500021934509277
    7. '-' → logprob: -14.937521934509277
    8. '   ' → logprob: -15.000021934509277
    9. 'O' → logprob: -15.375021934509277
    10. '٠' → logprob: -15.437521934509277

Token 131: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.06910551339387894
    2. ' ' → logprob: -3.194105625152588
    3. ' -' → logprob: -4.069105625152588
    4. '-' → logprob: -5.444105625152588
    5. 'et' → logprob: -5.819105625152588
    6. ' and' → logprob: -7.444105625152588
    7. '   ' → logprob: -7.819105625152588
    8. ' ' → logprob: -9.19410514831543
    9. 'val' → logprob: -9.44410514831543
    10. '  ' → logprob: -9.94410514831543

Token 132: ' le' (ID: 505)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.25440657138824463
    2. 'val' → logprob: -1.5044065713882446
    3. ' ' → logprob: -6.129406452178955
    4. ' la' → logprob: -8.754406929016113
    5. ' val' → logprob: -9.629406929016113
    6. ' ' → logprob: -10.004406929016113
    7. 'la' → logprob: -11.129406929016113
    8. ' valeurs' → logprob: -12.754406929016113
    9. '```' → logprob: -13.129406929016113
    10. '	val' → logprob: -13.504406929016113

Token 133: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8267217874526978
    2. 'val' → logprob: -1.0767217874526978
    3. 'nombre' → logprob: -1.7017217874526978
    4. ' valeur' → logprob: -3.326721668243408
    5. ' ' → logprob: -6.451721668243408
    6. 'value' → logprob: -8.076722145080566
    7. '   ' → logprob: -8.201722145080566
    8. 'a' → logprob: -8.201722145080566
    9. ' val' → logprob: -9.326722145080566
    10. 'n' → logprob: -9.326722145080566

Token 134: ' entr' (ID: 7072)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.3161531388759613
    2. ' entr' → logprob: -2.191153049468994
    3. '   ' → logprob: -2.441153049468994
    4. 'val' → logprob: -3.941153049468994
    5. 's' → logprob: -4.191153049468994
    6. 'entr' → logprob: -4.316153049468994
    7. ' sais' → logprob: -5.066153049468994
    8. ' valeur' → logprob: -5.566153049468994
    9. ' ' → logprob: -5.691153049468994
    10. '    
' → logprob: -5.941153049468994

Token 135: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.003275745315477252
    2. 'er' → logprob: -5.8782758712768555
    3. 'ré' → logprob: -8.128275871276855
    4. 'ée' → logprob: -10.503275871276855
    5. '   ' → logprob: -10.628275871276855
    6. ' é' → logprob: -10.628275871276855
    7. ' ' → logprob: -10.753275871276855
    8. 'ered' → logprob: -11.503275871276855
    9. 'éré' → logprob: -11.628275871276855
    10. 'e' → logprob: -12.253275871276855

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30891650915145874
    2. '    
' → logprob: -1.5589165687561035
    3. 'val' → logprob: -4.3089165687561035
    4. '     
' → logprob: -4.5589165687561035
    5. '    ' → logprob: -4.9339165687561035
    6. 'diff' → logprob: -5.0589165687561035
    7. '   
' → logprob: -5.5589165687561035
    8. 'result' → logprob: -5.8089165687561035
    9. '  
' → logprob: -6.4339165687561035
    10. ' 
' → logprob: -6.4339165687561035

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13851317763328552
    2. '    
' → logprob: -3.0135130882263184
    3. 'diff' → logprob: -3.2635130882263184
    4. 'result' → logprob: -4.888513088226318
    5. ' resultat' → logprob: -4.888513088226318
    6. ' result' → logprob: -5.013513088226318
    7. ' résultat' → logprob: -5.138513088226318
    8. 'difference' → logprob: -5.388513088226318
    9. ' différence' → logprob: -5.763513088226318
    10. ' diff' → logprob: -6.388513088226318

Token 138: ' difference' (ID: 9809)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.157962679862976
    2. 'difference' (adapté à ' difference') → logprob: -1.407962679862976
    3. ' difference' → logprob: -2.0329627990722656
    4. '   ' → logprob: -2.0329627990722656
    5. ' resultat' → logprob: -2.7829627990722656
    6. ' result' → logprob: -3.2829627990722656
    7. 'result' → logprob: -3.5329627990722656
    8. ' diff' → logprob: -3.7829627990722656
    9. ' différence' → logprob: -4.782962799072266
    10. '111' → logprob: -4.782962799072266

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01674032397568226
    2. '=' → logprob: -4.141740322113037
    3. '_' → logprob: -7.266740322113037
    4. ' ' → logprob: -12.766740798950195
    5. ' ' → logprob: -13.141740798950195
    6. '	' → logprob: -13.391740798950195
    7. 's' → logprob: -15.016740798950195
    8. '   ' → logprob: -15.391740798950195
    9. ' =
' → logprob: -15.891740798950195
    10. '_=' → logprob: -16.141740798950195

Token 140: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03366955742239952
    2. '111' → logprob: -3.4086694717407227
    3. ' ' → logprob: -10.783669471740723
    4. '   ' → logprob: -14.408669471740723
    5. ' (' → logprob: -14.783669471740723
    6. '`' → logprob: -14.908669471740723
    7. '110' → logprob: -14.908669471740723
    8. '1' → logprob: -15.346169471740723
    9. '  ' → logprob: -15.408669471740723
    10. '```' → logprob: -15.596169471740723

Token 141: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '110' → logprob: -14.000018119812012
    4. '(' → logprob: -15.750018119812012
    5. '1' → logprob: -16.625017166137695
    6. '```' → logprob: -17.375017166137695
    7. '   ' → logprob: -17.500017166137695
    8. '11' → logprob: -17.625017166137695
    9. '112' → logprob: -17.750017166137695
    10. ' ' → logprob: -18.562517166137695

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010759611177491024
    2. ' -' → logprob: -10.125107765197754
    3. ' ' → logprob: -10.250107765197754
    4. '-' → logprob: -10.375107765197754
    5. '   ' → logprob: -15.500107765197754
    6. '```' → logprob: -16.125106811523438
    7. '  ' → logprob: -16.250106811523438
    8. '    ' → logprob: -16.312606811523438
    9. '_' → logprob: -16.500106811523438
    10. '۰' → logprob: -16.750106811523438

Token 143: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013863088097423315
    2. '-' → logprob: -6.6263861656188965
    3. '-val' → logprob: -9.751386642456055
    4. ' ' → logprob: -13.501386642456055
    5. '-value' → logprob: -14.876386642456055
    6. 'val' → logprob: -15.001386642456055
    7. ' -
' → logprob: -16.376386642456055
    8. ' val' → logprob: -16.751386642456055
    9. ' ' → logprob: -16.751386642456055
    10. ' valeur' → logprob: -17.626386642456055

Token 144: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014208168722689152
    2. ' valeur' → logprob: -4.2642083168029785
    3. ' val' → logprob: -10.13920783996582
    4. ' vale' → logprob: -13.13920783996582
    5. ' valeurs' → logprob: -13.88920783996582
    6. '	val' → logprob: -14.13920783996582
    7. ' ' → logprob: -15.13920783996582
    8. 'value' → logprob: -15.13920783996582
    9. 'vale' → logprob: -15.26420783996582
    10. ' ' → logprob: -15.26420783996582

Token 145: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2692660689353943
    2. '    
' → logprob: -1.769266128540039
    3. '   ' → logprob: -2.769266128540039
    4. 'print' → logprob: -6.269266128540039
    5. '
' → logprob: -8.019266128540039
    6. '  
' → logprob: -8.394266128540039
    7. '```' → logprob: -8.644266128540039
    8. '   
' → logprob: -9.269266128540039
    9. '\n' → logprob: -10.144266128540039
    10. '    
    
' → logprob: -10.519266128540039

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012152987532317638
    2. 'print' → logprob: -4.762153148651123
    3. '    
' → logprob: -5.762153148651123
    4. ' print' → logprob: -8.512152671813965
    5. '
' → logprob: -8.637152671813965
    6. '```' → logprob: -12.637152671813965
    7. '   
' → logprob: -13.387152671813965
    8. '  
' → logprob: -13.512152671813965
    9. '    ' → logprob: -14.137152671813965
    10. ' 
' → logprob: -14.387152671813965

Token 147: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009919938631355762
    2. '   ' → logprob: -4.634920120239258
    3. ' print' → logprob: -8.759920120239258
    4. '    
' → logprob: -13.009920120239258
    5. '```' → logprob: -13.009920120239258
    6. '
' → logprob: -13.759920120239258
    7. '#' (adapté à ' #') → logprob: -14.134920120239258
    8. '	print' → logprob: -15.634920120239258
    9. '#print' → logprob: -15.634920120239258
    10. '  ' → logprob: -15.634920120239258

Token 148: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2520226538181305
    2. ' print' → logprob: -1.502022624015808
    3. '   ' → logprob: -9.377022743225098
    4. '#' → logprob: -13.002022743225098
    5. 'Afficher' → logprob: -13.377022743225098
    6. 'aff' → logprob: -13.627022743225098
    7. 'Print' → logprob: -14.002022743225098
    8. '```' → logprob: -14.127022743225098
    9. ' afficher' → logprob: -14.502022743225098
    10. '	print' → logprob: -15.002022743225098

Token 149: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.002565906848758459
    2. 'cher' → logprob: -6.127565860748291
    3. '#' → logprob: -8.37756633758545
    4. '   ' → logprob: -10.00256633758545
    5. 'iche' → logprob: -10.37756633758545
    6. 'ichage' → logprob: -10.37756633758545
    7. 'ic' → logprob: -10.62756633758545
    8. 'ich' → logprob: -12.00256633758545
    9. 'icer' → logprob: -12.25256633758545
    10. 'ichier' → logprob: -12.87756633758545

Token 150: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18355576694011688
    2. '("' → logprob: -1.8085557222366333
    3. ' la' → logprob: -6.058555603027344
    4. '(f' → logprob: -7.308555603027344
    5. '('' → logprob: -8.058555603027344
    6. ' ("' → logprob: -8.683555603027344
    7. ' ' → logprob: -8.808555603027344
    8. ' (' → logprob: -9.183555603027344
    9. '()' → logprob: -11.558555603027344
    10. '(l' → logprob: -11.808555603027344

Token 151: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.09986550360918045
    2. ' difference' → logprob: -2.974865436553955
    3. 'difference' → logprob: -3.974865436553955
    4. ' resultat' → logprob: -4.599865436553955
    5. ' différence' → logprob: -4.974865436553955
    6. 'rés' → logprob: -5.849865436553955
    7. ' result' → logprob: -6.099865436553955
    8. 'result' → logprob: -7.474865436553955
    9. 'r' → logprob: -7.474865436553955
    10. '"' → logprob: -7.974865436553955

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05230940505862236
    2. 'print' → logprob: -3.802309513092041
    3. ' print' → logprob: -4.177309513092041
    4. '
' → logprob: -4.677309513092041
    5. '    
' → logprob: -5.552309513092041
    6. '
' → logprob: -10.427309036254883
    7. ' 
' → logprob: -11.177309036254883
    8. '    
' → logprob: -11.677309036254883
    9. '  
' → logprob: -11.677309036254883
    10. ',' → logprob: -11.802309036254883

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2020488679409027
    2. ' print' → logprob: -1.952048897743225
    3. 'print' → logprob: -3.2020487785339355
    4. '    
' → logprob: -8.452049255371094
    5. '
' → logprob: -10.077049255371094
    6. '```' → logprob: -11.952049255371094
    7. '	print' → logprob: -12.202049255371094
    8. '    ' → logprob: -12.452049255371094
    9. ' 
' → logprob: -12.577049255371094
    10. '   ' → logprob: -13.702049255371094

Token 154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0024924222379922867
    2. ' print' → logprob: -6.002492427825928
    3. '   ' → logprob: -11.00249195098877
    4. '```' → logprob: -15.75249195098877
    5. '	print' → logprob: -18.752492904663086
    6. '    
' → logprob: -19.877492904663086
    7. 'Print' → logprob: -20.377492904663086
    8. '`' → logprob: -20.377492904663086
    9. '    ' → logprob: -20.502492904663086
    10. '.print' → logprob: -20.752492904663086

Token 155: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014855816261842847
    2. '(d' → logprob: -7.251485347747803
    3. '("' → logprob: -7.626485347747803
    4. '(f' → logprob: -8.501485824584961
    5. '("("' → logprob: -9.501485824584961
    6. '()' → logprob: -12.501485824584961
    7. '('' → logprob: -12.626485824584961
    8. '("")' → logprob: -14.126485824584961
    9. ' (' → logprob: -14.376485824584961
    10. '(
' → logprob: -14.376485824584961

Token 156: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -0.1006569117307663
    2. 'iff' → logprob: -2.3506569862365723
    3. 'if' → logprob: -7.975656986236572
    4. 'iffer' → logprob: -9.725656509399414
    5. 'iffe' → logprob: -10.725656509399414
    6. 'férence' → logprob: -11.850656509399414
    7. 'difference' → logprob: -12.475656509399414
    8. 'ifferent' → logprob: -12.725656509399414
    9. 'i' → logprob: -12.850656509399414
    10. 'ff' → logprob: -13.225656509399414

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. '")' → logprob: -17.5
    4. ')
' → logprob: -17.5
    5. '')' → logprob: -18.5
    6. ')`' → logprob: -18.5
    7. '))' → logprob: -19.0
    8. '`)' → logprob: -19.75
    9. '()' → logprob: -20.375
    10. '）' → logprob: -20.5

Token 158: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8409264087677002
    2. '<|end|>' → logprob: -1.4659264087677002
    3. '#' → logprob: -1.9659264087677002
    4. '\n' → logprob: -2.2159264087677
    5. '```' → logprob: -3.5909264087677
    6. '\' → logprob: -4.090926170349121
    7. '(' → logprob: -4.840926170349121
    8. ')' → logprob: -5.090926170349121
    9. 'def' → logprob: -5.215926170349121
    10. '' → logprob: -5.465926170349121

Token 159: ' App' (ID: 2583)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.44527292251586914
    2. 'calcul' → logprob: -1.0702729225158691
    3. 'cal' → logprob: -4.320272922515869
    4. '#' → logprob: -6.820272922515869
    5. ' calcul' → logprob: -7.195272922515869
    6. 'calc' → logprob: -8.195272445678711
    7. '
' → logprob: -8.570272445678711
    8. '```' → logprob: -8.945272445678711
    9. 'Calcul' → logprob: -9.195272445678711
    10. 'calculate' → logprob: -9.195272445678711

Token 160: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.033453650772571564
    2. 'eler' → logprob: -3.5334537029266357
    3. 'l' → logprob: -5.783453464508057
    4. 'elé' → logprob: -8.658453941345215
    5. '#' → logprob: -8.908453941345215
    6. '_' → logprob: -10.158453941345215
    7. 'ler' → logprob: -10.158453941345215
    8. 'ell' → logprob: -10.658453941345215
    9. 'elle' → logprob: -10.658453941345215
    10. 'le' → logprob: -10.658453941345215

Token 161: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052281804382801056
    2. '_' → logprob: -3.3022818565368652
    3. 'calcul' → logprob: -5.552281856536865
    4. ' (' → logprob: -6.177281856536865
    5. '()' → logprob: -6.177281856536865
    6. ' ' → logprob: -6.302281856536865
    7. ' calcul' → logprob: -6.302281856536865
    8. '_cal' → logprob: -6.802281856536865
    9. 'def' → logprob: -7.802281856536865
    10. '(cal' → logprob: -8.552281379699707

Token 162: ' la' (ID: 557)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1002226322889328
    2. 'calcul' → logprob: -2.350222587585449
    3. 'cal' → logprob: -12.22522258758545
    4. ' ' → logprob: -12.60022258758545
    5. ' calcula' → logprob: -13.60022258758545
    6. ' calculate' → logprob: -13.72522258758545
    7. '_' → logprob: -13.85022258758545
    8. 'calculate' → logprob: -14.10022258758545
    9. '_cal' → logprob: -14.10022258758545
    10. ' ' → logprob: -14.22522258758545

Token 163: ' fonction' (ID: 17610)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.08951231092214584
    2. ' calcul' → logprob: -2.464512348175049
    3. 'def' → logprob: -8.21451187133789
    4. 'fonction' → logprob: -8.58951187133789
    5. 'cal' → logprob: -9.46451187133789
    6. 'calculate' → logprob: -10.96451187133789
    7. ' fonction' → logprob: -11.71451187133789
    8. '```' → logprob: -12.96451187133789
    9. ' function' → logprob: -13.08951187133789
    10. 'function' → logprob: -13.08951187133789

Token 164: ' principale' (ID: 68926)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.008189238607883453
    2. '()
' → logprob: -5.0081892013549805
    3. '
' → logprob: -7.2581892013549805
    4. ' calcul' → logprob: -7.5081892013549805
    5. 'cal' → logprob: -9.13318920135498
    6. '(
' → logprob: -10.50818920135498
    7. 'Calcul' → logprob: -10.75818920135498
    8. 'def' → logprob: -11.25818920135498
    9. '()' → logprob: -11.50818920135498
    10. 'calculate' → logprob: -11.63318920135498

Token 165: '
' (ID: 198)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.08039408922195435
    2. '
' → logprob: -2.5803940296173096
    3. 'cal' → logprob: -8.08039379119873
    4. '
' → logprob: -8.08039379119873
    5. ' calcul' → logprob: -8.08039379119873
    6. '

' → logprob: -8.20539379119873
    7. '()
' → logprob: -9.20539379119873
    8. '\' → logprob: -10.08039379119873
    9. '' → logprob: -10.20539379119873
    10. 'Calcul' → logprob: -10.45539379119873

Token 166: 'calcul' (ID: 157994)
  Prédit: 'calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -7.896309739408025e-07
    2. 'calc' → logprob: -14.625000953674316
    3. ' calcul' → logprob: -16.25
    4. 'cal' → logprob: -16.75
    5. 'calculate' → logprob: -17.125
    6. 'Calcul' → logprob: -17.75
    7. 'calculator' → logprob: -19.25
    8. 'c' → logprob: -19.5
    9. 'comput' → logprob: -19.75
    10. 'def' → logprob: -20.5

Token 167: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.0007509016431868076
    2. '_' → logprob: -7.25075101852417
    3. 'difference' → logprob: -10.750750541687012
    4. '_diff' → logprob: -11.000750541687012
    5. ' difference' → logprob: -13.875750541687012
    6. '_d' → logprob: -14.125750541687012
    7. '__' → logprob: -15.250750541687012
    8. 'Difference' → logprob: -15.375750541687012
    9. '_distance' → logprob: -15.625750541687012
    10. ' différence' → logprob: -16.250751495361328

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003556039300747216
    2. '(' → logprob: -8.00035572052002
    3. '()
' → logprob: -11.00035572052002
    4. '()

' → logprob: -14.00035572052002
    5. '();' → logprob: -14.12535572052002
    6. '()`' → logprob: -14.25035572052002
    7. ' ()' → logprob: -14.50035572052002
    8. '(
' → logprob: -16.250354766845703
    9. '()"' → logprob: -16.375354766845703
    10. '()\' → logprob: -16.500354766845703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 126
Précision stricte (1ère position): 40.96%
Précision adaptée (1ère position): 41.57%
Précision (top 10): 75.90%
================================================================================
