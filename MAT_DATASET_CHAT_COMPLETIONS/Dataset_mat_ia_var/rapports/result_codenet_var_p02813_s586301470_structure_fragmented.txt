================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input()), list(map(int, input().split())), list(map(int, input().split()))

def sort_list(lst):
    return sorted(lst)

def convert_to_tuple(lst):
    return tuple(lst)

def generate_permutations(lst):
    from itertools import permutations
    return list(permutations(lst))

def find_index_in_permutations(perms, target):
    return perms.index(target)

def compute_absolute_difference(a, b):
    return abs(a - b)

def process_input(N, p, q):
    sorted_p = sort_list(p)
    sorted_q = sort_list(q)
    perms_p = generate_permutations(sorted_p)
    perms_q = generate_permutations(sorted_q)
    tuple_p = convert_to_tuple(p)
    tuple_q = convert_to_tuple(q)
    index_p = find_index_in_permutations(perms_p, tuple_p)
    index_q = find_index_in_permutations(perms_q, tuple_q)
    return compute_absolute_difference(index_p, index_q)

def main():
    N, p, q = read_input()
    result = process_input(N, p, q)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8140061497688293
    2. '\' → logprob: -1.6890060901641846
    3. '\n' → logprob: -1.8140060901641846
    4. '   ' → logprob: -1.8140060901641846
    5. ':' → logprob: -5.064006328582764
    6. '``' → logprob: -5.189006328582764
    7. '<|end|>' → logprob: -5.189006328582764
    8. '    
' → logprob: -5.314006328582764
    9. '
' → logprob: -5.814006328582764
    10. '    ' → logprob: -5.939006328582764

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34299758076667786
    2. 'input' → logprob: -2.0929975509643555
    3. '"' → logprob: -2.4679975509643555
    4. ' input' → logprob: -2.7179975509643555
    5. ''' → logprob: -4.3429975509643555
    6. '  ' → logprob: -6.8429975509643555
    7. ' "' → logprob: -7.8429975509643555
    8. '(input' → logprob: -8.092997550964355
    9. ' []' → logprob: -8.217997550964355
    10. ' '' → logprob: -8.717997550964355

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012866636971011758
    2. '('' → logprob: -6.876286506652832
    3. ''' → logprob: -9.126286506652832
    4. '("("' → logprob: -10.001286506652832
    5. '`' → logprob: -10.876286506652832
    6. '```' → logprob: -11.126286506652832
    7. '(
' → logprob: -11.501286506652832
    8. ' (' → logprob: -11.626286506652832
    9. '"' → logprob: -11.876286506652832
    10. '40' → logprob: -12.001286506652832

Token 8: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6092395186424255
    2. '(' → logprob: -0.9842395186424255
    3. '()' → logprob: -2.9842395782470703
    4. ')' → logprob: -3.8592395782470703
    5. '()))' → logprob: -4.73423957824707
    6. '('' → logprob: -7.23423957824707
    7. '))' → logprob: -7.35923957824707
    8. '(""))' → logprob: -8.85923957824707
    9. '(()' → logprob: -9.10923957824707
    10. ' ())' → logprob: -9.10923957824707

Token 9: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4450578689575195
    2. '<|end|>' → logprob: -1.4450578689575195
    3. 'def' → logprob: -1.5700578689575195
    4. ')' → logprob: -2.4450578689575195
    5. '\n' → logprob: -2.8200578689575195
    6. 'input' → logprob: -3.0700578689575195
    7. '_' → logprob: -3.3200578689575195
    8. '[' → logprob: -4.1950578689575195
    9. '0' → logprob: -4.4450578689575195
    10. '(' → logprob: -4.8200578689575195

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006268949946388602
    2. '[' → logprob: -8.000626564025879
    3. '(range' → logprob: -9.000626564025879
    4. '(
' → logprob: -10.625626564025879
    5. ' (' → logprob: -11.000626564025879
    6. '()' → logprob: -11.125626564025879
    7. '[(' → logprob: -11.250626564025879
    8. '(input' → logprob: -11.500626564025879
    9. '<|end|>' → logprob: -11.500626564025879
    10. '(

' → logprob: -11.750626564025879

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1828540861606598
    2. '(' → logprob: -1.8078540563583374
    3. 'int' → logprob: -6.557854175567627
    4. '(str' → logprob: -7.307854175567627
    5. '(lambda' → logprob: -7.557854175567627
    6. ' int' → logprob: -9.307853698730469
    7. '<int' → logprob: -9.432853698730469
    8. '(
' → logprob: -9.682853698730469
    9. '=int' → logprob: -9.682853698730469
    10. '(ord' → logprob: -10.182853698730469

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008501697331666946
    2. '(' → logprob: -5.1335015296936035
    3. ',input' → logprob: -6.2585015296936035
    4. ')' → logprob: -8.008502006530762
    5. 'input' → logprob: -9.008502006530762
    6. '))' → logprob: -9.633502006530762
    7. ' (' → logprob: -10.133502006530762
    8. ',' → logprob: -10.633502006530762
    9. '=input' → logprob: -11.258502006530762
    10. ' input' → logprob: -11.258502006530762

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14271028339862823
    2. ' input' → logprob: -2.0177102088928223
    3. '(input' → logprob: -10.51771068572998
    4. '	input' → logprob: -13.26771068572998
    5. '=input' → logprob: -13.39271068572998
    6. ',input' → logprob: -13.39271068572998
    7. ')' → logprob: -13.89271068572998
    8. ' ' → logprob: -14.01771068572998
    9. '<input' → logprob: -14.26771068572998
    10. '[input' → logprob: -15.39271068572998

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6742660999298096
    2. '())' → logprob: -0.7992660999298096
    3. '()' → logprob: -3.4242660999298096
    4. '().' → logprob: -5.5492658615112305
    5. ')' → logprob: -6.9242658615112305
    6. '())))' → logprob: -7.1742658615112305
    7. '))' → logprob: -7.4242658615112305
    8. '()),' → logprob: -7.4242658615112305
    9. '()));' → logprob: -7.7992658615112305
    10. ' ())' → logprob: -8.04926586151123

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02334156446158886
    2. 'strip' → logprob: -3.773341655731201
    3. 'rstrip' → logprob: -9.273341178894043
    4. ' split' → logprob: -13.273341178894043
    5. '(split' → logprob: -15.398341178894043
    6. 'read' → logprob: -15.523341178894043
    7. ' strip' → logprob: -16.39834213256836
    8. 'replace' → logprob: -18.14834213256836
    9. 'spl' → logprob: -18.64834213256836
    10. ')' → logprob: -20.14834213256836

Token 16: '()' (ID: 416)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3907662332057953
    2. '()))' → logprob: -1.1407662630081177
    3. '())' → logprob: -6.515766143798828
    4. ')' → logprob: -7.265766143798828
    5. ')))' → logprob: -7.265766143798828
    6. '()' → logprob: -7.515766143798828
    7. '(' → logprob: -7.890766143798828
    8. '())))' → logprob: -9.640766143798828
    9. '()))
' → logprob: -11.390766143798828
    10. ''))' → logprob: -12.640766143798828

Token 17: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018275899812579155
    2. ')' → logprob: -4.018275737762451
    3. ')))' → logprob: -9.01827621459961
    4. '),' → logprob: -13.51827621459961
    5. ' ))' → logprob: -13.76827621459961
    6. '))
' → logprob: -14.14327621459961
    7. '()))' → logprob: -14.26827621459961
    8. ''))' → logprob: -15.26827621459961
    9. '[' → logprob: -16.51827621459961
    10. ')),' → logprob: -16.51827621459961

Token 18: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35140109062194824
    2. '[]' → logprob: -2.7264010906219482
    3. '(' → logprob: -3.3514010906219482
    4. '0' → logprob: -3.4764010906219482
    5. ' ' → logprob: -3.7264010906219482
    6. 'def' → logprob: -3.9764010906219482
    7. 'input' → logprob: -3.9764010906219482
    8. '[int' → logprob: -4.101401329040527
    9. 'list' → logprob: -4.351401329040527
    10. '<|end|>' → logprob: -4.351401329040527

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004843407776206732
    2. '(map' → logprob: -5.504843235015869
    3. '(range' → logprob: -8.254843711853027
    4. '(int' → logprob: -8.254843711853027
    5. '([' → logprob: -10.129843711853027
    6. '(
' → logprob: -10.129843711853027
    7. ' (' → logprob: -10.379843711853027
    8. '<|end|>' → logprob: -10.879843711853027
    9. '((' → logprob: -11.004843711853027
    10. '(

' → logprob: -11.129843711853027

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008699189871549606
    2. '(' → logprob: -4.758699417114258
    3. '<int' → logprob: -9.883699417114258
    4. ' (' → logprob: -11.258699417114258
    5. '=int' → logprob: -11.883699417114258
    6. '```' → logprob: -12.883699417114258
    7. '[int' → logprob: -13.008699417114258
    8. '(str' → logprob: -13.008699417114258
    9. '(lambda' → logprob: -13.508699417114258
    10. '<|end|>' → logprob: -13.633699417114258

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2634132504463196
    2. '(' → logprob: -1.8884131908416748
    3. '(input' → logprob: -3.138413190841675
    4. ')' → logprob: -4.013413429260254
    5. ',input' → logprob: -4.263413429260254
    6. '```' → logprob: -6.763413429260254
    7. '))' → logprob: -7.388413429260254
    8. '),' → logprob: -7.513413429260254
    9. ' (' → logprob: -7.888413429260254
    10. ' ,' → logprob: -8.013413429260254

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2062813639640808
    2. 'input' → logprob: -1.7062814235687256
    3. '(input' → logprob: -5.3312811851501465
    4. '=input' → logprob: -11.706281661987305
    5. ',input' → logprob: -12.081281661987305
    6. '_input' → logprob: -13.331281661987305
    7. '[input' → logprob: -13.956281661987305
    8. ')' → logprob: -14.081281661987305
    9. '(' → logprob: -14.581281661987305
    10. '<input' → logprob: -15.331281661987305

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1168239638209343
    2. '()' → logprob: -2.49182391166687
    3. '()))' → logprob: -4.116824150085449
    4. '())' → logprob: -4.741824150085449
    5. '())))' → logprob: -7.741824150085449
    6. '(' → logprob: -7.991824150085449
    7. '`()' → logprob: -8.49182415008545
    8. '())).' → logprob: -8.74182415008545
    9. '()));' → logprob: -8.86682415008545
    10. '.' → logprob: -9.11682415008545

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.816093228830141e-06
    2. 'strip' → logprob: -13.25000286102295
    3. ' split' → logprob: -14.00000286102295
    4. 'rstrip' → logprob: -16.250001907348633
    5. '(split' → logprob: -17.000001907348633
    6. 'startswith' → logprob: -17.750001907348633
    7. 'plit' → logprob: -18.625001907348633
    8. ')' → logprob: -18.750001907348633
    9. 'read' → logprob: -18.875001907348633
    10. 'spl' → logprob: -19.000001907348633

Token 25: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.040761739015579224
    2. '()' → logprob: -3.665761709213257
    3. '())' → logprob: -4.415761947631836
    4. '))' → logprob: -6.165761947631836
    5. ')' → logprob: -9.790761947631836
    6. '())))' → logprob: -9.915761947631836
    7. '()));' → logprob: -10.540761947631836
    8. '(' → logprob: -11.040761947631836
    9. '()),' → logprob: -12.290761947631836
    10. '())).' → logprob: -12.415761947631836

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29917091131210327
    2. '
' → logprob: -1.924170970916748
    3. '```' → logprob: -2.424170970916748
    4. '\n' → logprob: -4.674170970916748
    5. '\' → logprob: -4.674170970916748
    6. '<|end|>' → logprob: -6.799170970916748
    7. '  
' → logprob: -7.424170970916748
    8. '``' → logprob: -7.549170970916748
    9. '' → logprob: -7.799170970916748
    10. ' 
' → logprob: -8.04917049407959

Token 27: ' sort' (ID: 4506)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.24482285976409912
    2. ' main' → logprob: -2.6198229789733887
    3. ' calculate' → logprob: -2.9948229789733887
    4. ' process' → logprob: -3.7448229789733887
    5. ' find' → logprob: -3.8698229789733887
    6. ' solution' → logprob: -4.994822978973389
    7. ' space' → logprob: -5.244822978973389
    8. ' compute' → logprob: -5.369822978973389
    9. ' analyze' → logprob: -5.744822978973389
    10. ' sort' → logprob: -5.994822978973389

Token 28: '_list' (ID: 4162)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.4136384725570679
    2. '_' → logprob: -1.5386384725570679
    3. '_items' → logprob: -1.7886384725570679
    4. '_arrays' → logprob: -1.7886384725570679
    5. '_data' → logprob: -3.0386385917663574
    6. '_elements' → logprob: -3.5386385917663574
    7. '_list' → logprob: -3.6636385917663574
    8. '(' → logprob: -4.038638591766357
    9. '_lists' → logprob: -4.038638591766357
    10. '_values' → logprob: -4.538638591766357

Token 29: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06490814685821533
    2. 's' → logprob: -3.314908027648926
    3. '_by' → logprob: -4.689908027648926
    4. '_' → logprob: -5.314908027648926
    5. '(s' → logprob: -5.314908027648926
    6. '_items' → logprob: -6.564908027648926
    7. '(lst' → logprob: -6.939908027648926
    8. '(_' → logprob: -7.439908027648926
    9. '_list' → logprob: -7.814908027648926
    10. '_s' → logprob: -7.814908027648926

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005493783857673407
    2. ')' → logprob: -5.880493640899658
    3. ',' → logprob: -6.255493640899658
    4. '(lst' → logprob: -8.505494117736816
    5. '):
' → logprob: -8.880494117736816
    6. ' ):' → logprob: -9.130494117736816
    7. '(' → logprob: -9.505494117736816
    8. '[]):' → logprob: -9.505494117736816
    9. '   ' → logprob: -10.255494117736816
    10. ')):' → logprob: -10.380494117736816

Token 31: '   ' (ID: 271)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.9474639892578125
    2. '(sorted' → logprob: -1.3224639892578125
    3. 'sorted' → logprob: -1.5724639892578125
    4. '(' → logprob: -2.3224639892578125
    5. 'lst' → logprob: -4.1974639892578125
    6. '_sorted' → logprob: -4.6974639892578125
    7. '[' → logprob: -5.4474639892578125
    8. '[:]' → logprob: -5.5724639892578125
    9. '(
' → logprob: -6.3224639892578125
    10. ' sorted' → logprob: -6.5724639892578125

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2474249303340912
    2. ' sorted' → logprob: -2.497424840927124
    3. 'return' (adapté à ' return') → logprob: -2.872424840927124
    4. '   ' → logprob: -2.997424840927124
    5. ' lst' → logprob: -3.872424840927124
    6. 'sorted' → logprob: -4.997425079345703
    7. 'lst' → logprob: -5.872425079345703
    8. '```' → logprob: -11.497425079345703
    9. ' ' → logprob: -11.997425079345703
    10. '    ' → logprob: -12.372425079345703

Token 33: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.009763529524207115
    2. ' sorted' → logprob: -4.634763717651367
    3. '(sorted' → logprob: -12.759763717651367
    4. '   ' → logprob: -13.009763717651367
    5. ' ' → logprob: -14.134763717651367
    6. '[' → logprob: -14.259763717651367
    7. '.sorted' → logprob: -15.009763717651367
    8. '[]' → logprob: -15.634763717651367
    9. '  ' → logprob: -15.759763717651367
    10. 'lst' → logprob: -16.009763717651367

Token 34: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47412726283073425
    2. '(lst' → logprob: -0.9741272926330566
    3. '(ls' → logprob: -10.974126815795898
    4. '(list' → logprob: -11.224126815795898
    5. '(

' → logprob: -11.849126815795898
    6. '(
' → logprob: -12.599126815795898
    7. '((' → logprob: -13.224126815795898
    8. '(l' → logprob: -13.349126815795898
    9. ' (' → logprob: -13.974126815795898
    10. 'lst' → logprob: -14.349126815795898

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. '))' → logprob: -10.75002384185791
    3. ')))' → logprob: -14.87502384185791
    4. ' )' → logprob: -14.87502384185791
    5. '())' → logprob: -15.12502384185791
    6. '   ' → logprob: -15.25002384185791
    7. ')}' → logprob: -15.37502384185791
    8. ',' → logprob: -15.75002384185791
    9. '(lst' → logprob: -16.250022888183594
    10. '[' → logprob: -16.750022888183594

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08725577592849731
    2. '<|end|>' → logprob: -2.8372557163238525
    3. '

' → logprob: -4.962255954742432
    4. '(' → logprob: -5.337255954742432
    5. '```' → logprob: -5.837255954742432
    6. '
' → logprob: -6.087255954742432
    7. '()' → logprob: -6.712255954742432
    8. '[' → logprob: -6.712255954742432
    9. '<|end|>' → logprob: -6.712255954742432
    10. '(
' → logprob: -6.962255954742432

Token 37: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10464224964380264
    2. ' sort' → logprob: -2.479642152786255
    3. ' process' → logprob: -5.354642391204834
    4. ' merge' → logprob: -5.479642391204834
    5. 'sort' → logprob: -6.354642391204834
    6. ' compare' → logprob: -7.229642391204834
    7. ' solve' → logprob: -7.354642391204834
    8. ' calculate' → logprob: -7.479642391204834
    9. ' reverse' → logprob: -7.604642391204834
    10. ' read' → logprob: -7.729642391204834

Token 38: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.2133394032716751
    2. '_list' → logprob: -1.7133394479751587
    3. '_' → logprob: -4.963339328765869
    4. '_array' → logprob: -6.213339328765869
    5. '_case' → logprob: -6.963339328765869
    6. '_lst' → logprob: -7.963339328765869
    7. '(_' → logprob: -8.338339805603027
    8. '_string' → logprob: -8.588339805603027
    9. '_tuple' → logprob: -9.213339805603027
    10. '_lists' → logprob: -9.213339805603027

Token 39: '_tuple' (ID: 53371)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.19745784997940063
    2. '_list' → logprob: -2.447457790374756
    3. '_int' → logprob: -3.072457790374756
    4. '_' → logprob: -3.947457790374756
    5. '_str' → logprob: -4.822457790374756
    6. '_strings' → logprob: -4.947457790374756
    7. '_lower' → logprob: -6.072457790374756
    8. '_set' → logprob: -6.072457790374756
    9. '_binary' → logprob: -6.572457790374756
    10. '_bytes' → logprob: -7.072457790374756

Token 40: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.2333552986383438
    2. '(' → logprob: -1.9833552837371826
    3. '(s' → logprob: -2.8583552837371826
    4. 's' → logprob: -4.358355522155762
    5. '(ls' → logprob: -8.733355522155762
    6. '(list' → logprob: -9.733355522155762
    7. ' (' → logprob: -10.233355522155762
    8. '(l' → logprob: -10.733355522155762
    9. '_lst' → logprob: -11.358355522155762
    10. '(arr' → logprob: -11.983355522155762

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009775519138202071
    2. ')' → logprob: -7.125977516174316
    3. '):
' → logprob: -8.750977516174316
    4. '(lst' → logprob: -12.000977516174316
    5. ' ):' → logprob: -13.000977516174316
    6. '   ' → logprob: -13.000977516174316
    7. '):
' → logprob: -13.250977516174316
    8. 'lst' → logprob: -14.625977516174316
    9. ')):' → logprob: -14.750977516174316
    10. '_lst' → logprob: -14.875977516174316

Token 42: '   ' (ID: 271)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -1.163351058959961
    2. '   ' → logprob: -1.413351058959961
    3. 'return' → logprob: -1.538351058959961
    4. ' return' → logprob: -2.163351058959961
    5. ' tuple' → logprob: -3.038351058959961
    6. '(lst' → logprob: -3.163351058959961
    7. 'tuple' → logprob: -3.913351058959961
    8. '(' → logprob: -5.788351058959961
    9. ' (' → logprob: -7.663351058959961
    10. 'lst' → logprob: -7.788351058959961

Token 43: ' return' (ID: 622)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.17626559734344482
    2. 'return' (adapté à ' return') → logprob: -2.4262657165527344
    3. ' tuple' → logprob: -2.6762657165527344
    4. '(tuple' → logprob: -5.676265716552734
    5. ' return' → logprob: -6.926265716552734
    6. '   ' → logprob: -11.926265716552734
    7. 'tu' → logprob: -13.801265716552734
    8. '_tuple' → logprob: -13.926265716552734
    9. 'Tuple' → logprob: -14.676265716552734
    10. 'tpl' → logprob: -14.926265716552734

Token 44: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.497935950756073
    2. 'tuple' → logprob: -0.997935950756073
    3. '(tuple' → logprob: -3.7479360103607178
    4. ' (' → logprob: -11.872936248779297
    5. '(' → logprob: -13.247936248779297
    6. '_tuple' → logprob: -14.247936248779297
    7. '   ' → logprob: -14.622936248779297
    8. 'Tuple' → logprob: -15.872936248779297
    9. ' tuples' → logprob: -16.247936248779297
    10. ' ' → logprob: -16.872936248779297

Token 45: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.011054890230298042
    2. '(' → logprob: -4.511054992675781
    3. '(ls' → logprob: -12.261054992675781
    4. '(
' → logprob: -14.386054992675781
    5. '(list' → logprob: -14.886054992675781
    6. '(l' → logprob: -15.011054992675781
    7. ' (' → logprob: -15.261054992675781
    8. '((' → logprob: -15.761054992675781
    9. '(

' → logprob: -15.761054992675781
    10. '(len' → logprob: -16.01105499267578

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ' )' → logprob: -15.875000953674316
    5. ')))' → logprob: -16.875
    6. '   ' → logprob: -17.375
    7. ')return' → logprob: -17.625
    8. ')`' → logprob: -18.375
    9. ')}}' → logprob: -18.75
    10. '<|end|>' → logprob: -19.0

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008856110507622361
    2. 'for' → logprob: -8.500885963439941
    3. 'data' → logprob: -8.500885963439941
    4. '<|end|>' → logprob: -9.500885963439941
    5. 'lst' → logprob: -9.625885963439941
    6. 'result' → logprob: -9.625885963439941
    7. '```' → logprob: -10.000885963439941
    8. '
' → logprob: -10.125885963439941
    9. 'if' → logprob: -10.500885963439941
    10. 'print' → logprob: -10.625885963439941

Token 48: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04866775497794151
    2. ' process' → logprob: -3.5486676692962646
    3. ' sort' → logprob: -5.548667907714844
    4. ' combine' → logprob: -5.798667907714844
    5. ' merge' → logprob: -5.798667907714844
    6. ' reverse' → logprob: -6.173667907714844
    7. ' calculate' → logprob: -6.173667907714844
    8. 'main' → logprob: -7.298667907714844
    9. ' compare' → logprob: -7.423667907714844
    10. ' factorial' → logprob: -7.923667907714844

Token 49: '_per' (ID: 10938)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0492254495620728
    2. '_numbers' → logprob: -2.049225330352783
    3. '_' → logprob: -2.174225330352783
    4. '_array' → logprob: -3.174225330352783
    5. '_output' → logprob: -3.299225330352783
    6. '_tuple' → logprob: -3.424225330352783
    7. '_sorted' → logprob: -3.549225330352783
    8. '_sequence' → logprob: -3.549225330352783
    9. '_result' → logprob: -3.674225330352783
    10. '_unique' → logprob: -4.174225330352783

Token 50: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.025035811588168144
    2. 'mutation' → logprob: -3.900035858154297
    3. 'm' → logprob: -5.525035858154297
    4. 'ms' → logprob: -8.900035858154297
    5. 'mu' → logprob: -9.150035858154297
    6. 'mute' → logprob: -9.275035858154297
    7. '_mut' → logprob: -10.525035858154297
    8. 'utations' → logprob: -10.900035858154297
    9. '```' → logprob: -10.900035858154297
    10. 's' → logprob: -11.525035858154297

Token 51: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00829446129500866
    2. 'ation' → logprob: -5.383294582366943
    3. 'utations' → logprob: -5.633294582366943
    4. 'at' → logprob: -10.258294105529785
    5. 'utation' → logprob: -11.508294105529785
    6. 'ut' → logprob: -11.508294105529785
    7. 't' → logprob: -11.758294105529785
    8. 'utions' → logprob: -11.883294105529785
    9. 'ator' → logprob: -12.383294105529785
    10. '   ' → logprob: -12.383294105529785

Token 52: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.11421158164739609
    2. '(' → logprob: -2.2392115592956543
    3. '(ls' → logprob: -7.364211559295654
    4. ' (' → logprob: -8.614212036132812
    5. '(list' → logprob: -8.989212036132812
    6. '(s' → logprob: -9.239212036132812
    7. '(lista' → logprob: -9.739212036132812
    8. '(l' → logprob: -9.864212036132812
    9. '(n' → logprob: -9.989212036132812
    10. '_' → logprob: -10.489212036132812

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016636352520436049
    2. ',' → logprob: -6.876663684844971
    3. ')' → logprob: -8.251663208007812
    4. '):
' → logprob: -8.501663208007812
    5. '   ' → logprob: -9.751663208007812
    6. '(lst' → logprob: -10.001663208007812
    7. ' ):' → logprob: -10.251663208007812
    8. '):
' → logprob: -11.501663208007812
    9. '_list' → logprob: -12.126663208007812
    10. '_lst' → logprob: -12.751663208007812

Token 54: '   ' (ID: 271)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.231787919998169
    2. '   ' → logprob: -1.356787919998169
    3. 'from' → logprob: -1.481787919998169
    4. 'import' → logprob: -2.481787919998169
    5. ' itertools' → logprob: -2.606787919998169
    6. ' import' → logprob: -3.356787919998169
    7. ' permutations' → logprob: -3.856787919998169
    8. ' return' → logprob: -4.73178768157959
    9. 'return' → logprob: -7.60678768157959
    10. ' ' → logprob: -8.73178768157959

Token 55: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.16343051195144653
    2. 'import' → logprob: -1.9134304523468018
    3. ' from' → logprob: -5.913430690765381
    4. ' permutations' → logprob: -8.538430213928223
    5. 'per' → logprob: -8.788430213928223
    6. ' import' → logprob: -9.788430213928223
    7. ' itertools' → logprob: -9.913430213928223
    8. 'it' → logprob: -10.913430213928223
    9. 'return' → logprob: -11.413430213928223
    10. '   ' → logprob: -11.913430213928223

Token 56: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -4.596781946020201e-05
    2. 'it' → logprob: -10.000045776367188
    3. 'import' → logprob: -15.375045776367188
    4. ' math' → logprob: -16.000045776367188
    5. ' ' → logprob: -16.000045776367188
    6. '   ' → logprob: -18.125045776367188
    7. ' iter' → logprob: -18.250045776367188
    8. ' import' → logprob: -18.375045776367188
    9. ' ' → logprob: -18.875045776367188
    10. '_it' → logprob: -19.000045776367188

Token 57: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026591593399643898
    2. 'import' → logprob: -3.7765915393829346
    3. '.' → logprob: -6.276591777801514
    4. '	import' → logprob: -7.151591777801514
    5. '.import' → logprob: -7.901591777801514
    6. ' itertools' → logprob: -8.901591300964355
    7. ' .' → logprob: -9.651591300964355
    8. '<|end|>' → logprob: -10.151591300964355
    9. '.im' → logprob: -10.651591300964355
    10. 'ertools' → logprob: -11.526591300964355

Token 58: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.3868764638900757
    2. 'per' → logprob: -1.1368764638900757
    3. '	per' → logprob: -13.011876106262207
    4. '.per' → logprob: -13.511876106262207
    5. 'perm' → logprob: -14.011876106262207
    6. '-per' → logprob: -14.761876106262207
    7. '_per' → logprob: -14.886876106262207
    8. 'product' → logprob: -16.136877059936523
    9. ' ' → logprob: -17.011877059936523
    10. '(per' → logprob: -17.011877059936523

Token 59: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6776434183120728
    2. '(lst' → logprob: -1.3026434183120728
    3. '   ' → logprob: -1.5526434183120728
    4. 'lst' → logprob: -6.052643299102783
    5. ')' → logprob: -6.552643299102783
    6. '(
' → logprob: -6.802643299102783
    7. ' ' → logprob: -7.177643299102783
    8. 'def' → logprob: -7.427643299102783
    9. ',' → logprob: -7.802643299102783
    10. '    
' → logprob: -7.927643299102783

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028466172516345978
    2. '(lst' → logprob: -4.65346622467041
    3. '(' → logprob: -5.15346622467041
    4. '
' → logprob: -5.40346622467041
    5. ' return' → logprob: -5.77846622467041
    6. 'return' → logprob: -6.52846622467041
    7. 'lst' → logprob: -6.90346622467041
    8. 'def' → logprob: -7.90346622467041
    9. '	return' → logprob: -7.90346622467041
    10. '    
' → logprob: -7.90346622467041

Token 61: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4610026776790619
    2. 'return' (adapté à ' return') → logprob: -1.3360027074813843
    3. ' return' → logprob: -2.3360025882720947
    4. '
' → logprob: -4.961002826690674
    5. '    
' → logprob: -7.461002826690674
    6. '(' → logprob: -7.961002826690674
    7. ' for' → logprob: -8.461002349853516
    8. ' ' → logprob: -8.461002349853516
    9. 'for' → logprob: -8.461002349853516
    10. '(lst' → logprob: -8.461002349853516

Token 62: ' list' (ID: 1562)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6141860485076904
    2. ' list' → logprob: -1.1141860485076904
    3. 'list' → logprob: -2.1141860485076904
    4. 'per' → logprob: -4.6141862869262695
    5. '(per' → logprob: -10.11418628692627
    6. ' perm' → logprob: -10.73918628692627
    7. '(list' → logprob: -11.61418628692627
    8. 'perm' → logprob: -12.11418628692627
    9. ' permutation' → logprob: -12.36418628692627
    10. ' perms' → logprob: -12.61418628692627

Token 63: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.023249205201864243
    2. '(' → logprob: -3.7732491493225098
    3. 'per' → logprob: -13.898249626159668
    4. '(

' → logprob: -14.773249626159668
    5. '	per' → logprob: -14.898249626159668
    6. '(paren' → logprob: -14.898249626159668
    7. '((' → logprob: -15.148249626159668
    8. '_per' → logprob: -15.273249626159668
    9. '(
' → logprob: -15.273249626159668
    10. ' (' → logprob: -15.648249626159668

Token 64: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0005772201111540198
    2. 'r' → logprob: -7.625577449798584
    3. 'm' → logprob: -10.375576972961426
    4. 'utations' → logprob: -11.000576972961426
    5. 'mu' → logprob: -11.125576972961426
    6. 't' → logprob: -11.250576972961426
    7. 'missions' → logprob: -12.125576972961426
    8. 'rm' → logprob: -12.250576972961426
    9. 'nut' → logprob: -13.750576972961426
    10. 'rt' → logprob: -14.875576972961426

Token 65: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -9.77022064034827e-05
    2. 't' → logprob: -9.250097274780273
    3. 'lations' → logprob: -14.750097274780273
    4. 'utations' → logprob: -15.250097274780273
    5. 'at' → logprob: -15.625097274780273
    6. 'a' → logprob: -15.625097274780273
    7. '   ' → logprob: -15.875097274780273
    8. 's' → logprob: -16.250097274780273
    9. 'r' → logprob: -16.750097274780273
    10. 'ation' → logprob: -17.125097274780273

Token 66: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0046451459638774395
    2. '(' → logprob: -5.379645347595215
    3. '(
' → logprob: -12.129645347595215
    4. ')' → logprob: -12.129645347595215
    5. ' (' → logprob: -12.254645347595215
    6. '(ls' → logprob: -12.254645347595215
    7. '(lhs' → logprob: -13.629645347595215
    8. '(len' → logprob: -14.129645347595215
    9. '(lista' → logprob: -14.504645347595215
    10. ')(' → logprob: -15.004645347595215

Token 67: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.623244553338736e-05
    2. ')))' → logprob: -10.000065803527832
    3. ')' → logprob: -11.375065803527832
    4. '))
' → logprob: -12.875065803527832
    5. ',' → logprob: -13.000065803527832
    6. '()))' → logprob: -13.250065803527832
    7. ' ))' → logprob: -13.375065803527832
    8. '   ' → logprob: -15.000065803527832
    9. ''))' → logprob: -15.375065803527832
    10. '))

' → logprob: -15.625065803527832

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04240145534276962
    2. '(' → logprob: -3.4174015522003174
    3. '()' → logprob: -6.167401313781738
    4. '(
' → logprob: -6.417401313781738
    5. '<|end|>' → logprob: -6.417401313781738
    6. '[' → logprob: -7.292401313781738
    7. '```' → logprob: -7.542401313781738
    8. ')' → logprob: -7.542401313781738
    9. '\' → logprob: -8.417401313781738
    10. '
' → logprob: -8.542401313781738

Token 69: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.017127923667430878
    2. ' sort' → logprob: -5.017127990722656
    3. ' factorial' → logprob: -5.517127990722656
    4. ' solve' → logprob: -5.892127990722656
    5. 'main' → logprob: -6.767127990722656
    6. ' process' → logprob: -7.642127990722656
    7. ' calculate' → logprob: -7.642127990722656
    8. ' find' → logprob: -8.142127990722656
    9. ' _' → logprob: -8.767127990722656
    10. 'sort' → logprob: -8.892127990722656

Token 70: '_index' (ID: 7748)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.20054280757904053
    2. '_' → logprob: -1.9505428075790405
    3. '_min' → logprob: -5.20054292678833
    4. '_best' → logprob: -5.20054292678833
    5. '_sub' → logprob: -5.45054292678833
    6. '_all' → logprob: -5.57554292678833
    7. '_unique' → logprob: -5.70054292678833
    8. '_missing' → logprob: -5.95054292678833
    9. '_duplicates' → logprob: -6.20054292678833
    10. '_indices' → logprob: -6.70054292678833

Token 71: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015699759824201465
    2. 's' → logprob: -7.376569747924805
    3. '_' → logprob: -8.001569747924805
    4. ' (' → logprob: -8.126569747924805
    5. '<|end|>' → logprob: -10.126569747924805
    6. '(s' → logprob: -10.376569747924805
    7. '("("' → logprob: -10.376569747924805
    8. '(
' → logprob: -11.126569747924805
    9. '('' → logprob: -11.126569747924805
    10. '_of' → logprob: -11.251569747924805

Token 72: '_per' (ID: 10938)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0066050030291080475
    2. '_lst' → logprob: -5.38160514831543
    3. 'lst' → logprob: -7.38160514831543
    4. '_tuple' → logprob: -7.38160514831543
    5. 'list' → logprob: -7.75660514831543
    6. '_' → logprob: -8.75660514831543
    7. '_sorted' → logprob: -10.13160514831543
    8. '(lst' → logprob: -10.63160514831543
    9. '_array' → logprob: -11.00660514831543
    10. ' list' → logprob: -11.25660514831543

Token 73: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.014922809787094593
    2. 'm' → logprob: -4.889922618865967
    3. 'mutation' → logprob: -5.639922618865967
    4. 'ms' → logprob: -6.139922618865967
    5. 'mu' → logprob: -7.014922618865967
    6. '_mut' → logprob: -8.639923095703125
    7. '```' → logprob: -8.889923095703125
    8. 'mute' → logprob: -8.889923095703125
    9. ' mutations' → logprob: -10.514923095703125
    10. 't' → logprob: -10.639923095703125

Token 74: 'ations' (ID: 929)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.5209985375404358
    2. 'ations' → logprob: -1.270998477935791
    3. 'utation' → logprob: -2.770998477935791
    4. 'ation' → logprob: -2.770998477935791
    5. 'ut' → logprob: -8.27099895477295
    6. 'uts' → logprob: -11.02099895477295
    7. 'ed' → logprob: -11.14599895477295
    8. 's' → logprob: -11.89599895477295
    9. 'uted' → logprob: -11.89599895477295
    10. 'utions' → logprob: -12.39599895477295

Token 75: '(per' (ID: 96497)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025242918636649847
    2. '(lst' → logprob: -6.627524375915527
    3. 's' → logprob: -8.127524375915527
    4. '("("' → logprob: -8.627524375915527
    5. '(_' → logprob: -9.127524375915527
    6. '_' → logprob: -9.127524375915527
    7. '('' → logprob: -9.752524375915527
    8. '(s' → logprob: -10.002524375915527
    9. '(per' → logprob: -10.502524375915527
    10. ' (' → logprob: -10.502524375915527

Token 76: 'ms' (ID: 1782)
  Prédit: 'mut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.044651854783296585
    2. 'mutation' → logprob: -3.669651746749878
    3. 'm' → logprob: -4.669651985168457
    4. 'ms' → logprob: -5.169651985168457
    5. 'mu' → logprob: -6.544651985168457
    6. 'missions' → logprob: -7.294651985168457
    7. '```' → logprob: -8.169651985168457
    8. 't' → logprob: -9.169651985168457
    9. 'r' → logprob: -9.669651985168457
    10. 'utations' → logprob: -9.669651985168457

Token 77: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31689685583114624
    2. ',' → logprob: -2.191896915435791
    3. '(' → logprob: -2.816896915435791
    4. '_of' → logprob: -3.316896915435791
    5. '):' → logprob: -4.566896915435791
    6. '_' → logprob: -4.816896915435791
    7. 's' → logprob: -4.816896915435791
    8. ')_' → logprob: -4.816896915435791
    9. '_list' → logprob: -5.191896915435791
    10. ',_' → logprob: -5.316896915435791

Token 78: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.28339239954948425
    2. 'target' → logprob: -1.5333924293518066
    3. ' item' → logprob: -5.158392429351807
    4. ' tup' → logprob: -5.283392429351807
    5. 'perm' → logprob: -5.533392429351807
    6. ' val' → logprob: -6.033392429351807
    7. ' perm' → logprob: -6.158392429351807
    8. 'item' → logprob: -6.283392429351807
    9. ' tuple' → logprob: -6.658392429351807
    10. ' lst' → logprob: -6.783392429351807

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033453749492764473
    2. ',' → logprob: -6.503345489501953
    3. ')' → logprob: -6.878345489501953
    4. '_' → logprob: -7.753345489501953
    5. ' ):' → logprob: -8.628345489501953
    6. '):
' → logprob: -9.503345489501953
    7. '(' → logprob: -9.628345489501953
    8. ' ' → logprob: -11.253345489501953
    9. '=' → logprob: -11.878345489501953
    10. '_list' → logprob: -12.003345489501953

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14906708896160126
    2. ':' → logprob: -2.3990671634674072
    3. '(' → logprob: -3.1490671634674072
    4. ':
' → logprob: -6.399066925048828
    5. ' for' → logprob: -7.024066925048828
    6. 'for' → logprob: -7.649066925048828
    7. '```' → logprob: -7.899066925048828
    8. '):' → logprob: -8.649066925048828
    9. ' (' → logprob: -9.024066925048828
    10. ')' → logprob: -9.024066925048828

Token 81: ' return' (ID: 622)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0869581326842308
    2. 'for' → logprob: -2.961958169937134
    3. '   ' → logprob: -3.461958169937134
    4. ' return' → logprob: -8.961957931518555
    5. '```' → logprob: -10.336957931518555
    6. ' try' → logprob: -11.086957931518555
    7. 'return' (adapté à ' return') → logprob: -11.461957931518555
    8. '``' → logprob: -12.086957931518555
    9. 'try' → logprob: -12.711957931518555
    10. 'def' → logprob: -14.336957931518555

Token 82: ' perms' (ID: 189933)
  Prédit: ' perms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perms' → logprob: -0.08992847055196762
    2. 'per' → logprob: -2.464928388595581
    3. ' next' → logprob: -7.58992862701416
    4. ' [' → logprob: -9.08992862701416
    5. '[' → logprob: -9.08992862701416
    6. ' perm' → logprob: -9.46492862701416
    7. ' permutations' → logprob: -9.96492862701416
    8. 'perm' → logprob: -10.33992862701416
    9. 'next' → logprob: -10.71492862701416
    10. ' per' → logprob: -10.96492862701416

Token 83: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.0325924449716695e-05
    2. 'index' → logprob: -12.12501049041748
    3. '.' → logprob: -12.75001049041748
    4. '.find' → logprob: -13.37501049041748
    5. '.Index' → logprob: -15.37501049041748
    6. ' index' → logprob: -16.375009536743164
    7. '#index' → logprob: -17.375009536743164
    8. ' .' → logprob: -17.875009536743164
    9. '_index' → logprob: -18.000009536743164
    10. '.count' → logprob: -18.250009536743164

Token 84: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.006805960554629564
    2. '(' → logprob: -5.006805896759033
    3. '((' → logprob: -9.881806373596191
    4. '(tuple' → logprob: -10.631806373596191
    5. ' (' → logprob: -11.631806373596191
    6. '(
' → logprob: -13.131806373596191
    7. '("("' → logprob: -13.631806373596191
    8. '('' → logprob: -13.881806373596191
    9. '(token' → logprob: -14.256806373596191
    10. 'target' → logprob: -14.381806373596191

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. '))' → logprob: -14.500001907348633
    4. ' )' → logprob: -14.750001907348633
    5. '())' → logprob: -17.750001907348633
    6. ')}' → logprob: -18.125001907348633
    7. ')`' → logprob: -18.125001907348633
    8. '()' → logprob: -18.250001907348633
    9. ')return' → logprob: -18.500001907348633
    10. '`)' → logprob: -18.875001907348633

Token 86: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5499644875526428
    2. 'def' → logprob: -1.049964427947998
    3. '()' → logprob: -3.424964427947998
    4. 'n' → logprob: -3.924964427947998
    5. '(
' → logprob: -4.924964427947998
    6. '(n' → logprob: -5.174964427947998
    7. '```' → logprob: -5.549964427947998
    8. '\' → logprob: -7.049964427947998
    9. '#' → logprob: -7.424964427947998
    10. '\n' → logprob: -7.799964427947998

Token 87: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00042149791261181235
    2. ' solve' → logprob: -8.875421524047852
    3. 'main' → logprob: -9.250421524047852
    4. ' process' → logprob: -9.875421524047852
    5. ' find' → logprob: -10.000421524047852
    6. ' def' → logprob: -10.250421524047852
    7. ' sort' → logprob: -11.000421524047852
    8. ' calculate' → logprob: -11.000421524047852
    9. ' compare' → logprob: -11.500421524047852
    10. ' check' → logprob: -13.500421524047852

Token 88: '_absolute' (ID: 131930)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.0300248861312866
    2. '(' → logprob: -1.7800248861312866
    3. '_result' → logprob: -2.030025005340576
    4. '_sum' → logprob: -2.405025005340576
    5. '_' → logprob: -3.030025005340576
    6. '_difference' → logprob: -3.155025005340576
    7. '_max' → logprob: -3.655025005340576
    8. '_final' → logprob: -3.905025005340576
    9. '_possible' → logprob: -4.655025005340576
    10. '_sorted' → logprob: -4.780025005340576

Token 89: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.5382645130157471
    2. '_value' → logprob: -0.9132645130157471
    3. '_diff' → logprob: -4.538264274597168
    4. '_d' → logprob: -6.538264274597168
    5. '(' → logprob: -6.913264274597168
    6. '_distance' → logprob: -7.288264274597168
    7. '_sum' → logprob: -7.913264274597168
    8. '_de' → logprob: -8.663264274597168
    9. '_delta' → logprob: -8.663264274597168
    10. 'value' → logprob: -9.538264274597168

Token 90: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48830392956733704
    2. '(a' → logprob: -0.9883038997650146
    3. ' (' → logprob: -5.988304138183594
    4. '(x' → logprob: -6.738304138183594
    5. '(index' → logprob: -6.738304138183594
    6. '(num' → logprob: -6.863304138183594
    7. '(first' → logprob: -6.988304138183594
    8. '(per' → logprob: -6.988304138183594
    9. '(prev' → logprob: -6.988304138183594
    10. '(value' → logprob: -7.488304138183594

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016267085447907448
    2. ',b' → logprob: -4.3912672996521
    3. ' ,' → logprob: -6.0162672996521
    4. 'b' → logprob: -7.6412672996521
    5. '_b' → logprob: -8.391266822814941
    6. '_,' → logprob: -8.391266822814941
    7. '[' → logprob: -9.016266822814941
    8. ')' → logprob: -9.391266822814941
    9. '1' → logprob: -10.016266822814941
    10. ' ' → logprob: -10.641266822814941

Token 92: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014218121767044
    2. ' b' → logprob: -1.701421856880188
    3. '   ' → logprob: -12.576421737670898
    4. ' ' → logprob: -13.826421737670898
    5. '    ' → logprob: -14.951421737670898
    6. ')' → logprob: -15.201421737670898
    7. '2' → logprob: -15.201421737670898
    8. '  ' → logprob: -15.201421737670898
    9. ',b' → logprob: -15.576421737670898
    10. 'B' → logprob: -15.576421737670898

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07906472682952881
    2. ')' → logprob: -2.5790648460388184
    3. ' ):' → logprob: -9.82906436920166
    4. '(a' → logprob: -10.57906436920166
    5. '):
' → logprob: -10.70406436920166
    6. 'a' → logprob: -10.70406436920166
    7. ':' → logprob: -11.57906436920166
    8. ',' → logprob: -11.57906436920166
    9. '(' → logprob: -11.95406436920166
    10. ' )' → logprob: -12.32906436920166

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007300871890038252
    2. ' return' → logprob: -5.132300853729248
    3. ' abs' → logprob: -7.382300853729248
    4. 'abs' → logprob: -7.882300853729248
    5. 'return' → logprob: -8.007301330566406
    6. '    ' → logprob: -10.757301330566406
    7. ' ' → logprob: -12.757301330566406
    8. '  ' → logprob: -12.757301330566406
    9. '(abs' → logprob: -12.757301330566406
    10. '       ' → logprob: -12.882301330566406

Token 95: ' return' (ID: 622)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.29546353220939636
    2. 'abs' → logprob: -1.5454635620117188
    3. '   ' → logprob: -3.4204635620117188
    4. ' return' → logprob: -4.795463562011719
    5. 'return' (adapté à ' return') → logprob: -6.420463562011719
    6. ' ' → logprob: -12.795463562011719
    7. '    ' → logprob: -13.295463562011719
    8. '  ' → logprob: -13.795463562011719
    9. '(abs' → logprob: -14.170463562011719
    10. '    
' → logprob: -14.670463562011719

Token 96: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03804263845086098
    2. ' abs' → logprob: -3.2880425453186035
    3. '(abs' → logprob: -14.163043022155762
    4. '   ' → logprob: -14.788043022155762
    5. 'a' → logprob: -18.163042068481445
    6. ' ' → logprob: -18.288042068481445
    7. ' ' → logprob: -18.413042068481445
    8. '.abs' → logprob: -18.538042068481445
    9. '  ' → logprob: -19.163042068481445
    10. '_abs' → logprob: -19.913042068481445

Token 97: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16023072600364685
    2. '(' → logprob: -1.9102307558059692
    3. 'a' → logprob: -12.41023063659668
    4. '(
' → logprob: -13.16023063659668
    5. '((' → logprob: -15.16023063659668
    6. '(b' → logprob: -16.41023063659668
    7. '(

' → logprob: -17.66023063659668
    8. '(abs' → logprob: -18.03523063659668
    9. '(A' → logprob: -18.03523063659668
    10. '(s' → logprob: -18.28523063659668

Token 98: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2052365094423294
    2. ' -' → logprob: -1.705236554145813
    3. '-b' → logprob: -5.580236434936523
    4. ' ' → logprob: -10.080236434936523
    5. '   ' → logprob: -14.330236434936523
    6. ' b' → logprob: -14.455236434936523
    7. 'b' → logprob: -14.580236434936523
    8. ',' → logprob: -15.955236434936523
    9. ')' → logprob: -16.205236434936523
    10. '  ' → logprob: -16.205236434936523

Token 99: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. ' b' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. ' ' → logprob: -17.503177642822266
    5. ')b' → logprob: -18.503177642822266
    6. '  ' → logprob: -19.503177642822266
    7. ' б' → logprob: -20.378177642822266
    8. '    ' → logprob: -20.753177642822266
    9. '>b' → logprob: -20.878177642822266
    10. '	b' → logprob: -21.003177642822266

Token 100: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.750003814697266
    3. '))' → logprob: -14.375003814697266
    4. ' )' → logprob: -15.125003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ')))' → logprob: -17.500003814697266
    7. ')return' → logprob: -17.625003814697266
    8. ')`' → logprob: -18.375003814697266
    9. ')}' → logprob: -18.500003814697266
    10. '}' → logprob: -18.500003814697266

Token 101: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.172891830326989e-05
    2. 'n' → logprob: -10.500082015991211
    3. 'a' → logprob: -10.625082015991211
    4. 'if' → logprob: -11.500082015991211
    5. '```' → logprob: -12.125082015991211
    6. '#' → logprob: -12.750082015991211
    7. '<|end|>' → logprob: -12.750082015991211
    8. 'print' → logprob: -12.875082015991211
    9. '(' → logprob: -13.375082015991211
    10. 'for' → logprob: -14.000082015991211

Token 102: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01951831579208374
    2. 'main' → logprob: -4.2695183753967285
    3. ' calculate' → logprob: -6.0195183753967285
    4. ' solve' → logprob: -6.7695183753967285
    5. ' find' → logprob: -7.6445183753967285
    6. ' compute' → logprob: -8.39451789855957
    7. 'calculate' → logprob: -8.39451789855957
    8. ' minimize' → logprob: -8.64451789855957
    9. 'solve' → logprob: -9.26951789855957
    10. ' process' → logprob: -9.26951789855957

Token 103: '_input' (ID: 12507)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.114733338356018
    2. '_input' → logprob: -1.114733338356018
    3. '(' → logprob: -1.614733338356018
    4. '_lists' → logprob: -3.4897332191467285
    5. '_data' → logprob: -3.6147332191467285
    6. '_output' → logprob: -3.9897332191467285
    7. '(lst' → logprob: -4.7397332191467285
    8. '_' → logprob: -4.9897332191467285
    9. '_result' → logprob: -5.1147332191467285
    10. '_values' → logprob: -5.2397332191467285

Token 104: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01883161999285221
    2. '(' → logprob: -4.393831729888916
    3. '(a' → logprob: -6.143831729888916
    4. '(lst' → logprob: -6.393831729888916
    5. '(input' → logprob: -7.268831729888916
    6. '(data' → logprob: -7.893831729888916
    7. ' ():' → logprob: -8.018831253051758
    8. '()' → logprob: -8.018831253051758
    9. '()(' → logprob: -8.518831253051758
    10. '(x' → logprob: -9.893831253051758

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -12.25001049041748
    3. '):' → logprob: -12.62501049041748
    4. ',n' → logprob: -14.87501049041748
    5. ',a' → logprob: -15.25001049041748
    6. ',num' → logprob: -15.87501049041748
    7. '‌,' → logprob: -16.000009536743164
    8. ',l' → logprob: -16.000009536743164
    9. ',list' → logprob: -16.250009536743164
    10. ',
' → logprob: -16.375009536743164

Token 106: ' p' (ID: 275)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8737983107566833
    2. 'lst' → logprob: -1.1237983703613281
    3. 'arr' → logprob: -2.748798370361328
    4. 'a' → logprob: -3.123798370361328
    5. ' A' → logprob: -3.373798370361328
    6. ' lst' → logprob: -4.373798370361328
    7. 'M' → logprob: -4.623798370361328
    8. 'L' → logprob: -4.811298370361328
    9. 'P' → logprob: -4.936298370361328
    10. 'perm' → logprob: -5.186298370361328

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18207617104053497
    2. '):' → logprob: -2.8070762157440186
    3. 'erm' → logprob: -3.1820762157440186
    4. 'ermut' → logprob: -3.3070762157440186
    5. 'erms' → logprob: -4.6820759773254395
    6. '1' → logprob: -4.6820759773254395
    7. '_list' → logprob: -6.0570759773254395
    8. '):
' → logprob: -6.4320759773254395
    9. 's' → logprob: -6.6820759773254395
    10. '_lst' → logprob: -7.3070759773254395

Token 108: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.037501730024814606
    2. 'x' → logprob: -4.537501811981201
    3. ' q' → logprob: -4.912501811981201
    4. 'a' → logprob: -5.162501811981201
    5. 's' → logprob: -5.787501811981201
    6. 'k' → logprob: -6.412501811981201
    7. 'c' → logprob: -6.662501811981201
    8. 'r' → logprob: -7.162501811981201
    9. 'b' → logprob: -7.162501811981201
    10. 'm' → logprob: -7.412501811981201

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008665391243994236
    2. '):
' → logprob: -4.758665561676025
    3. '):
' → logprob: -10.258665084838867
    4. ')' → logprob: -12.133665084838867
    5. ',' → logprob: -12.383665084838867
    6. ' ):' → logprob: -12.633665084838867
    7. '):

' → logprob: -14.133665084838867
    8. '   ' → logprob: -14.258665084838867
    9. ':' → logprob: -14.633665084838867
    10. ' ' → logprob: -15.508665084838867

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042500621639192104
    2. '
' → logprob: -6.8792500495910645
    3. ' sorted' → logprob: -7.3792500495910645
    4. '```' → logprob: -7.5042500495910645
    5. 'per' → logprob: -8.004250526428223
    6. 'sorted' → logprob: -8.379250526428223
    7. ' permutations' → logprob: -8.504250526428223
    8. '    
' → logprob: -8.629250526428223
    9. ' perms' → logprob: -8.754250526428223
    10. ' perm' → logprob: -9.129250526428223

Token 111: ' sorted' (ID: 20099)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5016752481460571
    2. 'per' → logprob: -1.6266752481460571
    3. '   ' → logprob: -2.5016751289367676
    4. ' p' → logprob: -3.1266751289367676
    5. ' perms' → logprob: -3.6266751289367676
    6. 'sorted' (adapté à ' sorted') → logprob: -3.8766751289367676
    7. 'import' → logprob: -5.001675128936768
    8. 'perm' → logprob: -5.501675128936768
    9. 'all' → logprob: -6.001675128936768
    10. 'from' → logprob: -6.126675128936768

Token 112: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.013915725983679295
    2. '_list' → logprob: -4.388915538787842
    3. 'p' → logprob: -7.013915538787842
    4. '_lst' → logprob: -8.388916015625
    5. '=' → logprob: -9.388916015625
    6. '_q' → logprob: -10.138916015625
    7. 'list' → logprob: -10.888916015625
    8. ' =' → logprob: -11.013916015625
    9. '_' → logprob: -11.263916015625
    10. '_s' → logprob: -11.388916015625

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812120020389557
    2. '=' → logprob: -1.4062119722366333
    3. ',' → logprob: -10.031211853027344
    4. 'p' → logprob: -12.031211853027344
    5. '=p' → logprob: -12.156211853027344
    6. ')' → logprob: -13.406211853027344
    7. '_' → logprob: -13.406211853027344
    8. ' p' → logprob: -14.656211853027344
    9. ' =
' → logprob: -14.906211853027344
    10. 's' → logprob: -15.156211853027344

Token 114: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.07088648527860641
    2. ' sort' → logprob: -2.6958863735198975
    3. 'sorted' → logprob: -7.820886611938477
    4. 'convert' → logprob: -8.070886611938477
    5. ' sorted' → logprob: -9.070886611938477
    6. ' convert' → logprob: -10.320886611938477
    7. ' p' → logprob: -10.570886611938477
    8. '(sort' → logprob: -11.070886611938477
    9. 'tuple' → logprob: -11.445886611938477
    10. ' ' → logprob: -11.570886611938477

Token 115: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0010044663213193417
    2. '(p' → logprob: -7.501004695892334
    3. '_p' → logprob: -7.876004695892334
    4. '(_' → logprob: -10.376004219055176
    5. '_' → logprob: -10.876004219055176
    6. '(' → logprob: -11.001004219055176
    7. 'p' → logprob: -14.126004219055176
    8. '_set' → logprob: -14.751004219055176
    9. '_sorted' → logprob: -14.751004219055176
    10. '_l' → logprob: -15.001004219055176

Token 116: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0019402962643653154
    2. '(' → logprob: -6.2519402503967285
    3. '(q' → logprob: -11.751940727233887
    4. ' (' → logprob: -13.251940727233887
    5. 'p' → logprob: -14.626940727233887
    6. '(
' → logprob: -14.626940727233887
    7. '((' → logprob: -14.751940727233887
    8. '(list' → logprob: -15.251940727233887
    9. '(s' → logprob: -16.00193977355957
    10. '([' → logprob: -16.12693977355957

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036857128143310547
    2. ')
' → logprob: -5.62868595123291
    3. ' )' → logprob: -9.87868595123291
    4. ')
' → logprob: -10.87868595123291
    5. ')

' → logprob: -11.87868595123291
    6. ' )
' → logprob: -13.12868595123291
    7. ' ' → logprob: -13.37868595123291
    8. '   ' → logprob: -13.37868595123291
    9. ')p' → logprob: -13.37868595123291
    10. '),' → logprob: -15.00368595123291

Token 118: '   ' (ID: 271)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3597623407840729
    2. '   ' → logprob: -1.2347623109817505
    3. ' sorted' → logprob: -5.359762191772461
    4. 'converted' → logprob: -6.234762191772461
    5. 'q' → logprob: -6.359762191772461
    6. ',' → logprob: -6.359762191772461
    7. ' ' → logprob: -7.984762191772461
    8. ' q' → logprob: -8.984762191772461
    9. '(sorted' → logprob: -9.359762191772461
    10. '
' → logprob: -9.609762191772461

Token 119: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' (adapté à ' sorted') → logprob: -0.03303426504135132
    2. '   ' → logprob: -3.658034324645996
    3. ' sorted' → logprob: -5.533034324645996
    4. 'converted' → logprob: -6.533034324645996
    5. 'q' → logprob: -7.408034324645996
    6. 'per' → logprob: -8.283034324645996
    7. 'import' → logprob: -9.908034324645996
    8. ' ' → logprob: -10.283034324645996
    9. 'p' → logprob: -10.283034324645996
    10. ' q' → logprob: -10.658034324645996

Token 120: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.000193527273950167
    2. 'q' → logprob: -9.37519359588623
    3. '_p' → logprob: -9.37519359588623
    4. '(' → logprob: -12.12519359588623
    5. ' =' → logprob: -12.50019359588623
    6. '_' → logprob: -12.50019359588623
    7. '(q' → logprob: -12.62519359588623
    8. '=' → logprob: -12.75019359588623
    9. 'def' → logprob: -14.00019359588623
    10. ' q' → logprob: -14.37519359588623

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407910227775574
    2. ' =' → logprob: -0.9740791320800781
    3. ')' → logprob: -13.974079132080078
    4. ',' → logprob: -14.474079132080078
    5. 'sorted' → logprob: -15.224079132080078
    6. '_' → logprob: -15.349079132080078
    7. 's' → logprob: -17.224079132080078
    8. '[' → logprob: -17.349079132080078
    9. '_sorted' → logprob: -17.349079132080078
    10. ' =
' → logprob: -17.474079132080078

Token 122: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.04508393630385399
    2. ' sort' → logprob: -3.170083999633789
    3. 'q' → logprob: -6.795083999633789
    4. ' q' → logprob: -7.920083999633789
    5. '(sort' → logprob: -8.045083999633789
    6. '(q' → logprob: -8.295083999633789
    7. '(' → logprob: -11.920083999633789
    8. 'sorted' → logprob: -12.045083999633789
    9. '.sort' → logprob: -12.545083999633789
    10. '	sort' → logprob: -12.545083999633789

Token 123: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.599403423024341e-05
    2. 'list' → logprob: -9.875065803527832
    3. '_q' → logprob: -12.125065803527832
    4. 'q' → logprob: -12.625065803527832
    5. '(q' → logprob: -12.625065803527832
    6. 'sort' → logprob: -13.500065803527832
    7. 'List' → logprob: -14.750065803527832
    8. '[q' → logprob: -15.625065803527832
    9. 'sorted' → logprob: -15.750065803527832
    10. 'Q' → logprob: -16.87506675720215

Token 124: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. 'q' → logprob: -14.750003814697266
    4. ' (' → logprob: -17.000003814697266
    5. '(Q' → logprob: -18.875003814697266
    6. '(list' → logprob: -19.750003814697266
    7. '(s' → logprob: -20.875003814697266
    8. '	q' → logprob: -21.125003814697266
    9. '(query' → logprob: -21.250003814697266
    10. '[q' → logprob: -21.250003814697266

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021249841898679733
    2. ')
' → logprob: -3.896249771118164
    3. ' )' → logprob: -8.021249771118164
    4. '   ' → logprob: -8.146249771118164
    5. ' )
' → logprob: -10.146249771118164
    6. ')

' → logprob: -10.646249771118164
    7. ' ' → logprob: -11.646249771118164
    8. ')
' → logprob: -11.646249771118164
    9. '))' → logprob: -13.646249771118164
    10. 'def' → logprob: -13.646249771118164

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09070959687232971
    2. '
' → logprob: -2.465709686279297
    3. '    
' → logprob: -6.590709686279297
    4. 'per' → logprob: -9.215709686279297
    5. ' permutations' → logprob: -9.965709686279297
    6. ',' → logprob: -10.340709686279297
    7. 'p' → logprob: -10.340709686279297
    8. ',
' → logprob: -10.340709686279297
    9. '  
' → logprob: -10.715709686279297
    10. '```' → logprob: -10.965709686279297

Token 127: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.24806685745716095
    2. 'p' → logprob: -2.6230669021606445
    3. '   ' → logprob: -2.7480669021606445
    4. 'all' → logprob: -3.4980669021606445
    5. 'sorted' → logprob: -3.7480669021606445
    6. 'perm' → logprob: -4.4980669021606445
    7. 'from' → logprob: -5.1230669021606445
    8. 'tuple' → logprob: -5.7480669021606445
    9. 'import' → logprob: -6.4980669021606445
    10. 'target' → logprob: -7.1230669021606445

Token 128: '_p' (ID: 1359)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39730027318000793
    2. ' =' → logprob: -1.1473002433776855
    3. '_p' → logprob: -5.2723002433776855
    4. '_' → logprob: -6.0223002433776855
    5. '(' → logprob: -6.6473002433776855
    6. 's' → logprob: -7.3973002433776855
    7. '(sorted' → logprob: -7.8973002433776855
    8. '_sorted' → logprob: -8.022300720214844
    9. '(p' → logprob: -10.272300720214844
    10. '_list' → logprob: -10.397300720214844

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366725519299507
    2. '=' → logprob: -3.4086673259735107
    3. 's' → logprob: -11.90866756439209
    4. '   ' → logprob: -12.15866756439209
    5. ',' → logprob: -12.65866756439209
    6. '_' → logprob: -13.15866756439209
    7. ' ' → logprob: -13.90866756439209
    8. 'enerate' → logprob: -14.03366756439209
    9. '_p' → logprob: -14.65866756439209
    10. 'p' → logprob: -14.78366756439209

Token 130: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.0007108822464942932
    2. ' generate' → logprob: -7.250710964202881
    3. 'list' → logprob: -14.375710487365723
    4. '   ' → logprob: -15.625710487365723
    5. '(generate' → logprob: -16.37571144104004
    6. '.generate' → logprob: -18.12571144104004
    7. 'enerate' → logprob: -18.62571144104004
    8. '
' → logprob: -19.00071144104004
    9. ' ' → logprob: -19.25071144104004
    10. 'gener' → logprob: -19.37571144104004

Token 131: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -5.32392441527918e-05
    2. '_p' → logprob: -10.125053405761719
    3. '_' → logprob: -11.750053405761719
    4. 's' → logprob: -13.250053405761719
    5. '_pres' → logprob: -14.375053405761719
    6. 'per' → logprob: -14.375053405761719
    7. '(per' → logprob: -14.750053405761719
    8. '(p' → logprob: -14.875053405761719
    9. '_s' → logprob: -15.500053405761719
    10. ''_' → logprob: -15.750053405761719

Token 132: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0014153540832921863
    2. 'utations' → logprob: -6.626415252685547
    3. 'ut' → logprob: -9.751415252685547
    4. 'm' → logprob: -10.751415252685547
    5. '(' → logprob: -13.376415252685547
    6. 'put' → logprob: -13.501415252685547
    7. '_mut' → logprob: -13.751415252685547
    8. 'um' → logprob: -13.876415252685547
    9. '(mut' → logprob: -14.126415252685547
    10. 'per' → logprob: -14.376415252685547

Token 133: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -5.180879816180095e-05
    2. 'utations' → logprob: -9.875051498413086
    3. 'utions' → logprob: -16.000051498413086
    4. 'a' → logprob: -16.250051498413086
    5. 'p' → logprob: -17.125051498413086
    6. 's' → logprob: -17.375051498413086
    7. '(' → logprob: -18.125051498413086
    8. 't' → logprob: -18.375051498413086
    9. 'lations' → logprob: -18.375051498413086
    10. 'at' → logprob: -18.625051498413086

Token 134: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00010223194840364158
    2. '(p' → logprob: -9.875102043151855
    3. '(' → logprob: -10.625102043151855
    4. '(s' → logprob: -11.750102043151855
    5. '(sort' → logprob: -11.875102043151855
    6. '(list' → logprob: -12.875102043151855
    7. 'sorted' → logprob: -13.000102043151855
    8. '(lst' → logprob: -13.125102043151855
    9. '((' → logprob: -13.375102043151855
    10. '(tuple' → logprob: -13.875102043151855

Token 135: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0001577698567416519
    2. 'p' → logprob: -8.875157356262207
    3. '(p' → logprob: -11.625157356262207
    4. ')' → logprob: -12.750157356262207
    5. '(' → logprob: -13.125157356262207
    6. '(sorted' → logprob: -13.500157356262207
    7. '_q' → logprob: -14.250157356262207
    8. 's' → logprob: -14.750157356262207
    9. '_' → logprob: -14.875157356262207
    10. '_per' → logprob: -15.000157356262207

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06209529936313629
    2. ')
' → logprob: -2.8120954036712646
    3. '   ' → logprob: -10.187095642089844
    4. '(' → logprob: -10.812095642089844
    5. ')
' → logprob: -10.812095642089844
    6. ',' → logprob: -11.187095642089844
    7. ')

' → logprob: -11.187095642089844
    8. '(p' → logprob: -11.562095642089844
    9. ' ' → logprob: -12.812095642089844
    10. ' )' → logprob: -12.937095642089844

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6983196139335632
    2. 'per' → logprob: -0.6983196139335632
    3. ' perms' → logprob: -5.448319435119629
    4. 'perm' → logprob: -8.823319435119629
    5. '
' → logprob: -9.073319435119629
    6. '    
' → logprob: -9.198319435119629
    7. ',' → logprob: -9.198319435119629
    8. '	per' → logprob: -9.323319435119629
    9. ' per' → logprob: -9.573319435119629
    10. '(per' → logprob: -9.823319435119629

Token 138: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.13485141098499298
    2. 'index' → logprob: -2.1348514556884766
    3. '   ' → logprob: -6.009851455688477
    4. ' perms' → logprob: -6.134851455688477
    5. ' index' → logprob: -6.259851455688477
    6. 'idx' → logprob: -7.134851455688477
    7. 'target' → logprob: -8.259851455688477
    8. 'perm' → logprob: -9.134851455688477
    9. 'pos' → logprob: -10.509851455688477
    10. '       ' → logprob: -10.884851455688477

Token 139: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -7.362307223957032e-05
    2. '_p' → logprob: -9.875073432922363
    3. '_' → logprob: -11.125073432922363
    4. 'q' → logprob: -11.875073432922363
    5. '=' → logprob: -15.375073432922363
    6. 's' → logprob: -17.62507438659668
    7. ' =' → logprob: -17.87507438659668
    8. '_a' → logprob: -18.25007438659668
    9. '	q' → logprob: -18.37507438659668
    10. '_r' → logprob: -18.62507438659668

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.923587799072266
    4. ')' → logprob: -15.923587799072266
    5. ',' → logprob: -16.173587799072266
    6. ' ' → logprob: -16.298587799072266
    7. ' =)' → logprob: -16.423587799072266
    8. ' =
' → logprob: -17.048587799072266
    9. '(' → logprob: -17.798587799072266
    10. 's' → logprob: -18.673587799072266

Token 141: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.020579494535923004
    2. ' generate' → logprob: -3.8955795764923096
    3. '(generate' → logprob: -10.39557933807373
    4. '.generate' → logprob: -12.14557933807373
    5. '_generate' → logprob: -14.02057933807373
    6. 'enerate' → logprob: -15.14557933807373
    7. ' ' → logprob: -16.020580291748047
    8. 'generated' → logprob: -16.020580291748047
    9. '   ' → logprob: -16.145580291748047
    10. 'list' → logprob: -16.270580291748047

Token 142: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.000374546303646639
    2. 'per' → logprob: -8.125374794006348
    3. 's' → logprob: -9.750374794006348
    4. '_p' → logprob: -11.250374794006348
    5. '(per' → logprob: -12.750374794006348
    6. '(s' → logprob: -13.625374794006348
    7. '(sorted' → logprob: -14.250374794006348
    8. 'p' → logprob: -14.500374794006348
    9. '(generate' → logprob: -14.625374794006348
    10. '_list' → logprob: -15.000374794006348

Token 143: 'mut' (ID: 10522)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.13374732434749603
    2. 'mut' → logprob: -2.2587473392486572
    3. 'ut' → logprob: -3.8837473392486572
    4. 'ulations' → logprob: -10.133747100830078
    5. '(' → logprob: -10.508747100830078
    6. 't' → logprob: -11.508747100830078
    7. 'ations' → logprob: -11.633747100830078
    8. 'm' → logprob: -11.758747100830078
    9. 'uts' → logprob: -12.133747100830078
    10. '[(' → logprob: -12.383747100830078

Token 144: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.4140441635390744e-05
    2. '(per' → logprob: -12.375014305114746
    3. 's' → logprob: -12.625014305114746
    4. 'ate' → logprob: -12.750014305114746
    5. '(' → logprob: -13.625014305114746
    6. '_per' → logprob: -14.250014305114746
    7. 'per' → logprob: -14.750014305114746
    8. '(p' → logprob: -15.000014305114746
    9. '((' → logprob: -15.875014305114746
    10. 'p' → logprob: -15.875014305114746

Token 145: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.500003814697266
    3. '(sort' → logprob: -13.625003814697266
    4. 'sorted' → logprob: -14.250003814697266
    5. '(convert' → logprob: -17.625003814697266
    6. '(s' → logprob: -18.125003814697266
    7. '(tuple' → logprob: -18.750003814697266
    8. '(list' → logprob: -19.750003814697266
    9. ' sorted' → logprob: -19.875003814697266
    10. ' (' → logprob: -20.250003814697266

Token 146: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.019037488847970963
    2. '_p' → logprob: -4.01903772354126
    3. '_sorted' → logprob: -7.14403772354126
    4. 'sorted' → logprob: -9.269037246704102
    5. '(sorted' → logprob: -13.519037246704102
    6. 'q' → logprob: -13.644037246704102
    7. '_s' → logprob: -14.644037246704102
    8. ')' → logprob: -16.0190372467041
    9. '_' → logprob: -16.6440372467041
    10. 'Sorted' → logprob: -17.0190372467041

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00277979695238173
    2. ')
' → logprob: -6.002779960632324
    3. '   ' → logprob: -8.127779960632324
    4. ')
' → logprob: -12.627779960632324
    5. ' )' → logprob: -12.877779960632324
    6. ')

' → logprob: -13.627779960632324
    7. ' ' → logprob: -14.752779960632324
    8. '))' → logprob: -14.752779960632324
    9. 'def' → logprob: -16.002779006958008
    10. '
' → logprob: -16.377779006958008

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12620188295841217
    2. 'target' → logprob: -3.126201868057251
    3. 'p' → logprob: -3.626201868057251
    4. ' p' → logprob: -4.25120210647583
    5. '
' → logprob: -4.37620210647583
    6. ' target' → logprob: -4.62620210647583
    7. 't' → logprob: -5.50120210647583
    8. '    
' → logprob: -5.75120210647583
    9. 'idx' → logprob: -7.25120210647583
    10. '(' → logprob: -7.62620210647583

Token 149: ' tuple' (ID: 31311)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7403388619422913
    2. 'index' → logprob: -1.3653388023376465
    3. 'target' → logprob: -1.6153388023376465
    4. 'p' → logprob: -3.2403388023376465
    5. 'a' → logprob: -4.7403388023376465
    6. 't' → logprob: -5.2403388023376465
    7. 'tuple' (adapté à ' tuple') → logprob: -5.4903388023376465
    8. 'ip' → logprob: -5.8653388023376465
    9. 'i' → logprob: -5.8653388023376465
    10. '   ' → logprob: -6.1153388023376465

Token 150: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -8.351697033504024e-05
    2. '_q' → logprob: -9.750083923339844
    3. 'p' → logprob: -11.000083923339844
    4. '_' → logprob: -12.000083923339844
    5. '_target' → logprob: -13.250083923339844
    6. 'q' → logprob: -15.750083923339844
    7. '(p' → logprob: -16.125083923339844
    8. '_r' → logprob: -17.000083923339844
    9. '_t' → logprob: -17.000083923339844
    10. '(' → logprob: -17.500083923339844

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6058598756790161
    2. ' =' → logprob: -0.9808598756790161
    3. '_p' → logprob: -2.9808597564697266
    4. '_' → logprob: -3.6058597564697266
    5. '(' → logprob: -6.730859756469727
    6. 'p' → logprob: -8.855859756469727
    7. '(p' → logprob: -9.730859756469727
    8. '_q' → logprob: -10.230859756469727
    9. '=_' → logprob: -10.855859756469727
    10. 's' → logprob: -11.355859756469727

Token 152: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.09150076657533646
    2. 'convert' → logprob: -2.466500759124756
    3. '(convert' → logprob: -6.091500759124756
    4. ' tuple' → logprob: -8.216501235961914
    5. 'tuple' → logprob: -11.591501235961914
    6. '_convert' → logprob: -11.841501235961914
    7. ' (' → logprob: -12.716501235961914
    8. '(tuple' → logprob: -12.966501235961914
    9. '.convert' → logprob: -13.591501235961914
    10. ' p' → logprob: -14.216501235961914

Token 153: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0014861776726320386
    2. '_' → logprob: -6.626486301422119
    3. '_p' → logprob: -9.626485824584961
    4. '_t' → logprob: -9.876485824584961
    5. '(' → logprob: -11.126485824584961
    6. '('_' → logprob: -12.251485824584961
    7. '(_' → logprob: -12.626485824584961
    8. ' _' → logprob: -13.001485824584961
    9. 'To' → logprob: -13.001485824584961
    10. '```' → logprob: -13.126485824584961

Token 154: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.020114591345191002
    2. '(tuple' → logprob: -4.395114421844482
    3. '_tuple' → logprob: -5.395114421844482
    4. '(p' → logprob: -6.270114421844482
    5. ' tuple' → logprob: -7.770114421844482
    6. 'p' → logprob: -8.02011489868164
    7. 'list' → logprob: -8.77011489868164
    8. 'per' → logprob: -9.64511489868164
    9. 'sorted' → logprob: -10.02011489868164
    10. '(sorted' → logprob: -10.14511489868164

Token 155: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0007944972603581846
    2. '(sorted' → logprob: -8.000794410705566
    3. 'p' → logprob: -8.500794410705566
    4. '(' → logprob: -8.750794410705566
    5. '(s' → logprob: -10.625794410705566
    6. '(q' → logprob: -10.750794410705566
    7. '(per' → logprob: -11.375794410705566
    8. '(tuple' → logprob: -11.625794410705566
    9. ' (' → logprob: -11.750794410705566
    10. '(list' → logprob: -11.875794410705566

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004122092388570309
    2. ')
' → logprob: -5.504122257232666
    3. ')

' → logprob: -10.879121780395508
    4. ')
' → logprob: -11.004121780395508
    5. ' )' → logprob: -13.129121780395508
    6. '   ' → logprob: -13.504121780395508
    7. ')p' → logprob: -13.879121780395508
    8. ' ' → logprob: -14.379121780395508
    9. '(' → logprob: -14.379121780395508
    10. '(p' → logprob: -14.504121780395508

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15506213903427124
    2. '   ' → logprob: -2.030062198638916
    3. ' tuple' → logprob: -4.780062198638916
    4. ' 
' → logprob: -6.780062198638916
    5. '    
' → logprob: -6.905062198638916
    6. '(tuple' → logprob: -7.780062198638916
    7. 'tuple' → logprob: -7.905062198638916
    8. '<|end|>' → logprob: -8.655061721801758
    9. '
' → logprob: -8.905061721801758
    10. ' ' → logprob: -9.155061721801758

Token 158: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.2293776124715805
    2. 'tuple' (adapté à ' tuple') → logprob: -1.6043776273727417
    3. '   ' → logprob: -5.604377746582031
    4. '
' → logprob: -8.729377746582031
    5. '(tuple' → logprob: -10.354377746582031
    6. '       ' → logprob: -10.604377746582031
    7. 'q' → logprob: -11.229377746582031
    8. ' ' → logprob: -11.354377746582031
    9. 't' → logprob: -12.479377746582031
    10. '    ' → logprob: -12.479377746582031

Token 159: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.00036049127811565995
    2. '_' → logprob: -8.250360488891602
    3. '_p' → logprob: -9.250360488891602
    4. 'q' → logprob: -14.500360488891602
    5. '_a' → logprob: -14.625360488891602
    6. '_c' → logprob: -14.875360488891602
    7. '_s' → logprob: -15.375360488891602
    8. '('_' → logprob: -15.750360488891602
    9. '_t' → logprob: -15.875360488891602
    10. '_u' → logprob: -16.0003604888916

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024696826934814
    2. ' =' → logprob: -1.9102469682693481
    3. '(' → logprob: -11.160246849060059
    4. '(q' → logprob: -12.285246849060059
    5. '=q' → logprob: -13.285246849060059
    6. ')' → logprob: -13.785246849060059
    7. '(convert' → logprob: -15.535246849060059
    8. '(p' → logprob: -15.785246849060059
    9. 'q' → logprob: -15.785246849060059
    10. '_' → logprob: -16.035247802734375

Token 161: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.6931487321853638
    2. 'convert' → logprob: -0.6931487321853638
    3. '(convert' → logprob: -13.568148612976074
    4. '_convert' → logprob: -15.568148612976074
    5. '.convert' → logprob: -16.31814956665039
    6. 'Convert' → logprob: -19.06814956665039
    7. ' convertir' → logprob: -19.69314956665039
    8. 'q' → logprob: -19.69314956665039
    9. '`' → logprob: -20.56814956665039
    10. 'space' → logprob: -20.69314956665039

Token 162: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. 'to' → logprob: -15.500000953674316
    3. '_q' → logprob: -15.500000953674316
    4. '_tuple' → logprob: -15.625000953674316
    5. '_t' → logprob: -17.125
    6. '##_' → logprob: -17.375
    7. 'To' → logprob: -17.75
    8. '_' → logprob: -18.125
    9. ''_' → logprob: -18.125
    10. '(tuple' → logprob: -18.25

Token 163: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006463001482188702
    2. 'convert' → logprob: -5.631463050842285
    3. '_tuple' → logprob: -5.881463050842285
    4. ' tuple' → logprob: -9.756463050842285
    5. 'q' → logprob: -12.631463050842285
    6. 'tu' → logprob: -12.881463050842285
    7. '(tuple' → logprob: -13.006463050842285
    8. 't' → logprob: -13.631463050842285
    9. 'Tuple' → logprob: -15.381463050842285
    10. ' convert' → logprob: -15.506463050842285

Token 164: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -18.000017166137695
    4. '(Q' → logprob: -18.125017166137695
    5. 'q' → logprob: -18.375017166137695
    6. '(
' → logprob: -18.750017166137695
    7. '(query' → logprob: -19.375017166137695
    8. '?q' → logprob: -20.500017166137695
    9. '(u' → logprob: -20.750017166137695
    10. '(x' → logprob: -20.875017166137695

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016073787584900856
    2. ')
' → logprob: -4.141073703765869
    3. 'q' → logprob: -11.766074180603027
    4. '   ' → logprob: -11.891074180603027
    5. ')

' → logprob: -11.891074180603027
    6. ')
' → logprob: -11.891074180603027
    7. '))' → logprob: -12.391074180603027
    8. ' )' → logprob: -13.016074180603027
    9. ' ' → logprob: -14.266074180603027
    10. ')`' → logprob: -14.391074180603027

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13363470137119293
    2. '
' → logprob: -2.2586348056793213
    3. ' idx' → logprob: -5.008634567260742
    4. 'idx' → logprob: -5.758634567260742
    5. ' index' → logprob: -5.883634567260742
    6. 'index' → logprob: -6.133634567260742
    7. ' a' → logprob: -7.383634567260742
    8. ' p' → logprob: -7.508634567260742
    9. ' i' → logprob: -7.633634567260742
    10. 'a' → logprob: -7.633634567260742

Token 167: ' index' (ID: 3472)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.186105728149414
    2. 'index' (adapté à ' index') → logprob: -1.311105728149414
    3. ' idx' → logprob: -1.686105728149414
    4. ' index' → logprob: -1.936105728149414
    5. '   ' → logprob: -2.436105728149414
    6. 'i' → logprob: -6.311105728149414
    7. 'a' → logprob: -7.061105728149414
    8. ' i' → logprob: -7.061105728149414
    9. '```' → logprob: -7.186105728149414
    10. 'p' → logprob: -7.311105728149414

Token 168: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.1041145626222715e-05
    2. '_' → logprob: -11.875011444091797
    3. '_in' → logprob: -13.250011444091797
    4. '_a' → logprob: -14.625011444091797
    5. '_pi' → logprob: -14.625011444091797
    6. ' _' → logprob: -14.750011444091797
    7. '_q' → logprob: -15.250011444091797
    8. '_s' → logprob: -15.500011444091797
    9. '_per' → logprob: -16.000011444091797
    10. '1' → logprob: -17.000011444091797

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08902616798877716
    2. '=' → logprob: -2.4640262126922607
    3. '_' → logprob: -9.71402645111084
    4. ' ' → logprob: -11.21402645111084
    5. '_p' → logprob: -12.46402645111084
    6. 's' → logprob: -12.96402645111084
    7. ')' → logprob: -13.33902645111084
    8. ' _' → logprob: -13.96402645111084
    9. '(' → logprob: -14.08902645111084
    10. 'p' → logprob: -14.21402645111084

Token 170: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20144042372703552
    2. 'find' → logprob: -1.701440453529358
    3. '(find' → logprob: -10.701440811157227
    4. '	find' → logprob: -13.451440811157227
    5. ' perms' → logprob: -13.951440811157227
    6. '=find' → logprob: -13.951440811157227
    7. ' finds' → logprob: -14.701440811157227
    8. '_find' → logprob: -15.201440811157227
    9. ' ' → logprob: -15.576440811157227
    10. '.find' → logprob: -15.701440811157227

Token 171: '_index' (ID: 7748)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.48145791888237
    2. '_index' → logprob: -0.9814579486846924
    3. '(per' → logprob: -5.231457710266113
    4. '_per' → logprob: -6.231457710266113
    5. '(p' → logprob: -11.356457710266113
    6. '(' → logprob: -11.856457710266113
    7. 'in' → logprob: -12.231457710266113
    8. 'per' → logprob: -12.356457710266113
    9. 's' → logprob: -12.731457710266113
    10. '(_' → logprob: -13.731457710266113

Token 172: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -7.896309739408025e-07
    2. 'in' → logprob: -15.250000953674316
    3. 'In' → logprob: -15.375000953674316
    4. '_IN' → logprob: -17.375
    5. '(' → logprob: -17.5
    6. '```' → logprob: -17.875
    7. 's' → logprob: -18.25
    8. ' in' → logprob: -18.5
    9. '_i' → logprob: -18.5
    10. '`' → logprob: -18.625

Token 173: '_per' (ID: 10938)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.5366578698158264
    2. '_per' → logprob: -1.1616578102111816
    3. '(per' → logprob: -2.2866578102111816
    4. '(' → logprob: -8.91165828704834
    5. 'perm' → logprob: -9.16165828704834
    6. '(p' → logprob: -9.16165828704834
    7. 'p' → logprob: -9.28665828704834
    8. '```' → logprob: -9.28665828704834
    9. '_p' → logprob: -9.91165828704834
    10. '	per' → logprob: -9.91165828704834

Token 174: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.1276535987854004
    2. 'utations' → logprob: -2.1276535987854004
    3. 's' → logprob: -7.8776535987854
    4. 'ut' → logprob: -8.502653121948242
    5. 'm' → logprob: -10.127653121948242
    6. 'ms' → logprob: -10.127653121948242
    7. 'put' → logprob: -11.502653121948242
    8. 'um' → logprob: -12.127653121948242
    9. 'utions' → logprob: -12.252653121948242
    10. 'r' → logprob: -12.377653121948242

Token 175: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -7.100059156073257e-05
    2. 'utations' → logprob: -9.875070571899414
    3. 's' → logprob: -11.125070571899414
    4. 'utions' → logprob: -13.125070571899414
    5. 't' → logprob: -13.375070571899414
    6. 'a' → logprob: -14.875070571899414
    7. 'ation' → logprob: -15.375070571899414
    8. '(' → logprob: -16.125070571899414
    9. 'otions' → logprob: -16.375070571899414
    10. 'p' → logprob: -17.000070571899414

Token 176: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.875011444091797
    3. 'per' → logprob: -13.125011444091797
    4. ' (' → logprob: -13.375011444091797
    5. '(p' → logprob: -14.625011444091797
    6. '(
' → logprob: -15.125011444091797
    7. '(paren' → logprob: -16.375011444091797
    8. '(pl' → logprob: -16.375011444091797
    9. '```' → logprob: -16.500011444091797
    10. '	per' → logprob: -16.875011444091797

Token 177: 'ms' (ID: 1782)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004693088121712208
    2. '_p' → logprob: -5.754693031311035
    3. '_per' → logprob: -7.254693031311035
    4. 'ps' → logprob: -8.379693031311035
    5. 'tuple' → logprob: -8.379693031311035
    6. 'ms' → logprob: -8.504693031311035
    7. 'per' → logprob: -9.879693031311035
    8. 'p' → logprob: -10.754693031311035
    9. '(tuple' → logprob: -10.879693031311035
    10. '(per' → logprob: -11.504693031311035

Token 178: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.8312570318812504e-05
    2. 'p' → logprob: -11.250018119812012
    3. 's' → logprob: -13.250018119812012
    4. '(p' → logprob: -14.000018119812012
    5. ',' → logprob: -14.125018119812012
    6. ',p' → logprob: -14.250018119812012
    7. '_q' → logprob: -14.500018119812012
    8. ')' → logprob: -14.875018119812012
    9. '(' → logprob: -15.875018119812012
    10. '_per' → logprob: -17.375019073486328

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3878026604652405
    2. '(tuple' → logprob: -1.1378026008605957
    3. '(' → logprob: -7.262802600860596
    4. ' ,' → logprob: -8.637803077697754
    5. 'tuple' → logprob: -10.762803077697754
    6. ' tuple' → logprob: -10.887803077697754
    7. ' (' → logprob: -12.512803077697754
    8. '(',' → logprob: -13.387803077697754
    9. ',t' → logprob: -13.762803077697754
    10. ')' → logprob: -13.762803077697754

Token 180: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.38691094517707825
    2. 'tuple' → logprob: -1.1369109153747559
    3. '(tuple' → logprob: -10.136911392211914
    4. 'tu' → logprob: -15.386911392211914
    5. ')' → logprob: -17.011911392211914
    6. '_tuple' → logprob: -18.136911392211914
    7. '
' → logprob: -18.761911392211914
    8. ' tu' → logprob: -18.761911392211914
    9. '```' → logprob: -18.761911392211914
    10. 't' → logprob: -18.761911392211914

Token 181: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -7.896309739408025e-07
    2. '_q' → logprob: -14.375000953674316
    3. 'p' → logprob: -15.875000953674316
    4. ')' → logprob: -18.875
    5. '(p' → logprob: -18.875
    6. '(' → logprob: -19.0
    7. '```' → logprob: -19.5
    8. '_' → logprob: -19.625
    9. 's' → logprob: -20.0
    10. '(_' → logprob: -20.25

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.584861744660884e-05
    2. ')
' → logprob: -10.125045776367188
    3. ')

' → logprob: -12.875045776367188
    4. ',' → logprob: -13.625045776367188
    5. ' )' → logprob: -13.750045776367188
    6. '),' → logprob: -14.750045776367188
    7. '   ' → logprob: -15.625045776367188
    8. ')
' → logprob: -16.375045776367188
    9. ',)' → logprob: -16.625045776367188
    10. '))' → logprob: -16.875045776367188

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6493018269538879
    2. 'index' → logprob: -0.8993018269538879
    3. ' index' → logprob: -2.649301767349243
    4. '
' → logprob: -11.399301528930664
    5. '	index' → logprob: -11.899301528930664
    6. '    
' → logprob: -12.024301528930664
    7. '    ' → logprob: -13.274301528930664
    8. '_index' → logprob: -13.399301528930664
    9. '#index' → logprob: -13.399301528930664
    10. '  ' → logprob: -13.774301528930664

Token 184: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.13010887801647186
    2. ' index' → logprob: -2.1301088333129883
    3. '   ' → logprob: -5.755108833312988
    4. '	index' → logprob: -13.380108833312988
    5. '    ' → logprob: -13.630108833312988
    6. '
' → logprob: -13.630108833312988
    7. '       ' → logprob: -13.755108833312988
    8. ' ' → logprob: -14.130108833312988
    9. '```' → logprob: -14.130108833312988
    10. '[index' → logprob: -14.505108833312988

Token 185: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -12.375008583068848
    3. '_p' → logprob: -12.500008583068848
    4. ' _' → logprob: -16.00000762939453
    5. '_a' → logprob: -16.75000762939453
    6. '_c' → logprob: -17.75000762939453
    7. '_
' → logprob: -17.87500762939453
    8. '```' → logprob: -17.87500762939453
    9. '_

' → logprob: -17.87500762939453
    10. '_f' → logprob: -18.37500762939453

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602245420217514
    2. '=' → logprob: -1.9102245569229126
    3. ')' → logprob: -16.28522491455078
    4. '=find' → logprob: -16.28522491455078
    5. ',' → logprob: -16.41022491455078
    6. ' =
' → logprob: -17.16022491455078
    7. ' =)' → logprob: -17.28522491455078
    8. '<|end|>' → logprob: -17.53522491455078
    9. '_' → logprob: -17.66022491455078
    10. '_=' → logprob: -18.28522491455078

Token 187: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.006716079078614712
    2. 'find' → logprob: -5.006716251373291
    3. '(find' → logprob: -15.256715774536133
    4. '	find' → logprob: -15.381715774536133
    5. '=find' → logprob: -15.756715774536133
    6. ' ' → logprob: -17.256715774536133
    7. '.find' → logprob: -17.756715774536133
    8. ')find' → logprob: -18.256715774536133
    9. '_find' → logprob: -18.506715774536133
    10. ' ' → logprob: -18.881715774536133

Token 188: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.20392997562885284
    2. '_in' → logprob: -1.7039300203323364
    3. '(per' → logprob: -6.828929901123047
    4. '(find' → logprob: -7.203929901123047
    5. '_per' → logprob: -7.703929901123047
    6. 'Index' → logprob: -9.203929901123047
    7. '_q' → logprob: -10.078929901123047
    8. 'find' → logprob: -10.828929901123047
    9. '(p' → logprob: -11.328929901123047
    10. 'in' → logprob: -11.703929901123047

Token 189: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.000518482003826648
    2. '(per' → logprob: -8.250518798828125
    3. '_per' → logprob: -8.500518798828125
    4. 'In' → logprob: -10.125518798828125
    5. 'in' → logprob: -11.500518798828125
    6. 'per' → logprob: -12.875518798828125
    7. 's' → logprob: -14.750518798828125
    8. '```' → logprob: -15.375518798828125
    9. '_of' → logprob: -16.625518798828125
    10. '_for' → logprob: -16.875518798828125

Token 190: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.12696170806884766
    2. 'per' → logprob: -2.1269617080688477
    3. '(per' → logprob: -10.501961708068848
    4. 'perm' → logprob: -12.251961708068848
    5. ' permutations' → logprob: -14.376961708068848
    6. '	per' → logprob: -15.376961708068848
    7. 'p' → logprob: -15.501961708068848
    8. '_p' → logprob: -16.12696075439453
    9. 'find' → logprob: -16.62696075439453
    10. 'Perm' → logprob: -16.62696075439453

Token 191: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.00011450992315076292
    2. 'utations' → logprob: -9.500114440917969
    3. 'm' → logprob: -10.875114440917969
    4. 'ms' → logprob: -11.125114440917969
    5. 'put' → logprob: -12.875114440917969
    6. '_mut' → logprob: -14.250114440917969
    7. 'um' → logprob: -14.500114440917969
    8. 'per' → logprob: -14.750114440917969
    9. 'mun' → logprob: -14.875114440917969
    10. 'mu' → logprob: -15.375114440917969

Token 192: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00012797261297237128
    2. 'utations' → logprob: -9.375127792358398
    3. 's' → logprob: -10.375127792358398
    4. 't' → logprob: -11.875127792358398
    5. 'utions' → logprob: -12.375127792358398
    6. '(' → logprob: -15.875127792358398
    7. 'ions' → logprob: -16.0001277923584
    8. 'ons' → logprob: -16.5001277923584
    9. 'q' → logprob: -16.7501277923584
    10. 'ut' → logprob: -16.8751277923584

Token 193: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -3.976922744186595e-05
    2. 'per' → logprob: -10.250040054321289
    3. '(' → logprob: -12.375040054321289
    4. '	per' → logprob: -16.87504005432129
    5. '(
' → logprob: -17.00004005432129
    6. ' (' → logprob: -17.62504005432129
    7. '(p' → logprob: -18.12504005432129
    8. ' perms' → logprob: -18.62504005432129
    9. '(pre' → logprob: -18.75004005432129
    10. '_per' → logprob: -19.37504005432129

Token 194: 'ms' (ID: 1782)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2581138610839844
    2. 'ms' → logprob: -1.5081138610839844
    3. '_q' → logprob: -5.633113861083984
    4. 'rs' → logprob: -6.508113861083984
    5. 'qs' → logprob: -7.508113861083984
    6. 'q' → logprob: -7.883113861083984
    7. 'ims' → logprob: -10.133113861083984
    8. 'ns' → logprob: -10.883113861083984
    9. 'm' → logprob: -11.008113861083984
    10. 'ls' → logprob: -11.133113861083984

Token 195: '_q' (ID: 19384)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001722188200801611
    2. '_q' → logprob: -7.00172233581543
    3. 'per' → logprob: -7.50172233581543
    4. 'q' → logprob: -9.12672233581543
    5. '_s' → logprob: -9.75172233581543
    6. '_p' → logprob: -10.00172233581543
    7. 'p' → logprob: -11.00172233581543
    8. '(per' → logprob: -11.12672233581543
    9. '_per' → logprob: -11.75172233581543
    10. 'qs' → logprob: -12.87672233581543

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.518582762917504e-05
    2. ' ,' → logprob: -9.87508487701416
    3. '(' → logprob: -11.00008487701416
    4. '(tuple' → logprob: -11.37508487701416
    5. ')' → logprob: -12.37508487701416
    6. ',
' → logprob: -14.75008487701416
    7. '),' → logprob: -16.125085830688477
    8. ' ' → logprob: -16.375085830688477
    9. 's' → logprob: -16.375085830688477
    10. '',' → logprob: -16.750085830688477

Token 197: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.575944185256958
    2. ' tuple' → logprob: -0.825944185256958
    3. '(tuple' → logprob: -12.325943946838379
    4. 'tu' → logprob: -15.450943946838379
    5. 'tensor' → logprob: -17.325944900512695
    6. ')' → logprob: -17.825944900512695
    7. 't' → logprob: -17.825944900512695
    8. '_tuple' → logprob: -18.200944900512695
    9. '
' → logprob: -18.200944900512695
    10. '    ' → logprob: -18.325944900512695

Token 198: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.003170344978570938
    2. 'q' → logprob: -6.253170490264893
    3. '(tuple' → logprob: -6.878170490264893
    4. 'tuple' → logprob: -8.503170013427734
    5. ')' → logprob: -12.503170013427734
    6. ' tuple' → logprob: -13.253170013427734
    7. '_' → logprob: -13.878170013427734
    8. '_p' → logprob: -14.753170013427734
    9. '(' → logprob: -14.753170013427734
    10. '_tuple' → logprob: -15.003170013427734

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04878493398427963
    2. ')
' → logprob: -3.0487849712371826
    3. '   ' → logprob: -8.548785209655762
    4. ')
' → logprob: -13.048785209655762
    5. ' )' → logprob: -14.423785209655762
    6. ')

' → logprob: -14.548785209655762
    7. ' )
' → logprob: -15.423785209655762
    8. ')return' → logprob: -15.798785209655762
    9. ' ' → logprob: -15.923785209655762
    10. 'def' → logprob: -17.673784255981445

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034988581319339573
    2. '
' → logprob: -8.750349998474121
    3. 'return' → logprob: -8.875349998474121
    4. ' return' → logprob: -10.125349998474121
    5. '    
' → logprob: -11.750349998474121
    6. '	return' → logprob: -13.625349998474121
    7. '       ' → logprob: -14.125349998474121
    8. '```' → logprob: -14.625349998474121
    9. '<|end|>' → logprob: -14.875349998474121
    10. '    ' → logprob: -15.000349998474121

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6085414886474609
    2. '   ' → logprob: -0.8585414886474609
    3. 'print' → logprob: -3.608541488647461
    4. ' return' → logprob: -5.483541488647461
    5. 'result' → logprob: -7.733541488647461
    6. 'diff' → logprob: -8.358541488647461
    7. '
' → logprob: -10.108541488647461
    8. ' print' → logprob: -10.108541488647461
    9. '```' → logprob: -10.233541488647461
    10. 'difference' → logprob: -10.858541488647461

Token 202: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.011052774265408516
    2. ' compute' → logprob: -4.51105260848999
    3. 'abs' → logprob: -12.386053085327148
    4. '   ' → logprob: -14.511053085327148
    5. ' abs' → logprob: -16.38605308532715
    6. 'computer' → logprob: -17.01105308532715
    7. '(com' → logprob: -17.76105308532715
    8. 'com' → logprob: -19.26105308532715
    9. 'computed' → logprob: -19.76105308532715
    10. '```' → logprob: -19.76105308532715

Token 203: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -4.320199877838604e-07
    2. 'absolute' → logprob: -15.5
    3. '_abs' → logprob: -16.125
    4. '_' → logprob: -17.0
    5. '```' → logprob: -17.5
    6. '_difference' → logprob: -18.375
    7. '_integer' → logprob: -18.75
    8. '_unsigned' → logprob: -19.125
    9. '_constant' → logprob: -19.5
    10. '_exact' → logprob: -19.875

Token 204: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -3.15441757265944e-05
    2. 'difference' → logprob: -10.375031471252441
    3. '_distance' → logprob: -15.625031471252441
    4. ' difference' → logprob: -17.000032424926758
    5. 'Difference' → logprob: -17.375032424926758
    6. 'ifference' → logprob: -18.000032424926758
    7. 'd' → logprob: -18.250032424926758
    8. '_diff' → logprob: -18.625032424926758
    9. '差' → logprob: -19.875032424926758
    10. '```' → logprob: -20.000032424926758

Token 205: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.375014305114746
    3. ' (' → logprob: -13.625014305114746
    4. 'index' → logprob: -14.125014305114746
    5. '(
' → logprob: -15.125014305114746
    6. ',index' → logprob: -17.25001335144043
    7. '#index' → logprob: -17.50001335144043
    8. '(ind' → logprob: -17.62501335144043
    9. '(idx' → logprob: -18.62501335144043
    10. '(Index' → logprob: -19.25001335144043

Token 206: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0001817297888919711
    2. '_q' → logprob: -8.625182151794434
    3. '_' → logprob: -13.500182151794434
    4. '```' → logprob: -15.500182151794434
    5. '_i' → logprob: -15.750182151794434
    6. ' _' → logprob: -17.000181198120117
    7. 'p' → logprob: -17.250181198120117
    8. '(_' → logprob: -17.375181198120117
    9. '_s' → logprob: -17.375181198120117
    10. ')_' → logprob: -17.375181198120117

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024615535512566566
    2. ',index' → logprob: -3.774615526199341
    3. ' ,' → logprob: -7.02461576461792
    4. 'index' → logprob: -7.77461576461792
    5. '(index' → logprob: -9.899615287780762
    6. ',
' → logprob: -12.274615287780762
    7. ' index' → logprob: -12.899615287780762
    8. '(' → logprob: -14.524615287780762
    9. '_,' → logprob: -14.774615287780762
    10. '=index' → logprob: -15.024615287780762

Token 208: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6931554675102234
    2. ' index' → logprob: -0.6931554675102234
    3. '   ' → logprob: -11.943155288696289
    4. '(index' → logprob: -14.318155288696289
    5. '    ' → logprob: -14.443155288696289
    6. '	index' → logprob: -15.568155288696289
    7. ' ' → logprob: -16.44315528869629
    8. '=index' → logprob: -17.19315528869629
    9. ',index' → logprob: -17.31815528869629
    10. '  ' → logprob: -17.31815528869629

Token 209: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -5.080963092041202e-06
    2. '_p' → logprob: -12.250004768371582
    3. '_' → logprob: -15.625004768371582
    4. 'q' → logprob: -16.2500057220459
    5. '_u' → logprob: -17.7500057220459
    6. ')' → logprob: -18.7500057220459
    7. ' _' → logprob: -19.1250057220459
    8. '_)' → logprob: -19.5000057220459
    9. '```' → logprob: -19.8750057220459
    10. '_n' → logprob: -20.0000057220459

Token 210: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -15.500001907348633
    4. '())' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '()' → logprob: -16.500001907348633
    7. '))' → logprob: -16.625001907348633
    8. ')`' → logprob: -17.000001907348633
    9. ')return' → logprob: -17.625001907348633
    10. '(' → logprob: -18.000001907348633

Token 211: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4825707674026489
    2. 'def' → logprob: -0.9825707674026489
    3. 'print' → logprob: -4.982570648193359
    4. '
' → logprob: -7.107570648193359
    5. 'n' → logprob: -7.982570648193359
    6. '```' → logprob: -8.60757064819336
    7. '#' → logprob: -9.60757064819336
    8. ' if' → logprob: -10.10757064819336
    9. '\n' → logprob: -10.48257064819336
    10. '\' → logprob: -10.60757064819336

Token 212: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0024821963161230087
    2. 'main' → logprob: -6.0024824142456055
    3. ' run' → logprob: -12.002482414245605
    4. ' solve' → logprob: -15.252482414245605
    5. ' __' → logprob: -16.50248146057129
    6. ' solution' → logprob: -16.75248146057129
    7. 'run' → logprob: -17.12748146057129
    8. '__' → logprob: -17.37748146057129
    9. '_main' → logprob: -17.50248146057129
    10. ' process' → logprob: -17.50248146057129

Token 213: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1875571544806007e-05
    2. '():
' → logprob: -11.500011444091797
    3. ' ():' → logprob: -13.625011444091797
    4. '()' → logprob: -14.875011444091797
    5. '(' → logprob: -16.125011444091797
    6. '():
' → logprob: -17.250011444091797
    7. ':' → logprob: -18.000011444091797
    8. '():

' → logprob: -18.625011444091797
    9. '(":' → logprob: -18.750011444091797
    10. '(:' → logprob: -19.750011444091797

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09342941641807556
    2. 'N' → logprob: -2.4684293270111084
    3. ' N' → logprob: -5.8434295654296875
    4. 'n' → logprob: -7.0934295654296875
    5. '(N' → logprob: -8.093429565429688
    6. '	N' → logprob: -8.718429565429688
    7. '    
' → logprob: -8.968429565429688
    8. '()' → logprob: -9.343429565429688
    9. '
' → logprob: -10.843429565429688
    10. '(' → logprob: -11.468429565429688

Token 215: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.004267985001206398
    2. ' N' → logprob: -5.504268169403076
    3. '   ' → logprob: -8.754267692565918
    4. 'n' → logprob: -10.379267692565918
    5. ' ' → logprob: -15.379267692565918
    6. '
' → logprob: -15.629267692565918
    7. '	N' → logprob: -15.879267692565918
    8. ' n' → logprob: -16.254268646240234
    9. '    
' → logprob: -18.004268646240234
    10. '  ' → logprob: -18.004268646240234

Token 216: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6803802251815796
    2. ',' → logprob: -1.1803802251815796
    3. '=' → logprob: -1.6803802251815796
    4. '   ' → logprob: -9.680379867553711
    5. ',N' → logprob: -11.430379867553711
    6. ')' → logprob: -12.180379867553711
    7. '=int' → logprob: -12.180379867553711
    8. ' ,' → logprob: -12.305379867553711
    9. '    ' → logprob: -12.555379867553711
    10. '=N' → logprob: -12.805379867553711

Token 217: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012511532753705978
    2. ' p' → logprob: -4.387511730194092
    3. 'P' → logprob: -13.262511253356934
    4. '_p' → logprob: -17.01251220703125
    5. 'a' → logprob: -17.63751220703125
    6. '<|end|>' → logprob: -17.76251220703125
    7. '   ' → logprob: -17.88751220703125
    8. ',' → logprob: -18.01251220703125
    9. 'input' → logprob: -18.26251220703125
    10. ',p' → logprob: -18.26251220703125

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -11.375036239624023
    3. ' =' → logprob: -11.625036239624023
    4. '=' → logprob: -11.875036239624023
    5. ',p' → logprob: -11.875036239624023
    6. '<|end|>' → logprob: -14.750036239624023
    7. 'p' → logprob: -14.875036239624023
    8. ',q' → logprob: -15.125036239624023
    9. '_,' → logprob: -15.375036239624023
    10. '‌,' → logprob: -15.500036239624023

Token 219: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005532711511477828
    2. ' q' → logprob: -7.500553131103516
    3. '	q' → logprob: -15.875553131103516
    4. '   ' → logprob: -17.125553131103516
    5. '    ' → logprob: -17.375553131103516
    6. '<|end|>' → logprob: -17.750553131103516
    7. '  ' → logprob: -18.750553131103516
    8. ' ' → logprob: -18.750553131103516
    9. 'qml' → logprob: -19.500553131103516
    10. '[q' → logprob: -19.625553131103516

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689595460891724
    2. ' =' → logprob: -1.1368958950042725
    3. '   ' → logprob: -10.636896133422852
    4. ')' → logprob: -14.761896133422852
    5. ',' → logprob: -16.01189613342285
    6. ' ' → logprob: -16.13689613342285
    7. '  ' → logprob: -16.63689613342285
    8. ' =
' → logprob: -16.63689613342285
    9. '    ' → logprob: -16.63689613342285
    10. 'p' → logprob: -16.76189613342285

Token 221: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2014133334159851
    2. ' read' → logprob: -1.7014133930206299
    3. '	read' → logprob: -18.826414108276367
    4. '   ' → logprob: -19.451414108276367
    5. '(read' → logprob: -19.951414108276367
    6. '_read' → logprob: -22.076414108276367
    7. '.read' → logprob: -22.951414108276367
    8. ' ' → logprob: -23.576414108276367
    9. 'Read' → logprob: -23.826414108276367
    10. '  ' → logprob: -24.326414108276367

Token 222: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005200279993005097
    2. '()' → logprob: -7.7505202293396
    3. '_' → logprob: -9.625519752502441
    4. 'input' → logprob: -11.500519752502441
    5. '()
' → logprob: -12.125519752502441
    6. '_inputs' → logprob: -13.000519752502441
    7. '_output' → logprob: -13.500519752502441
    8. '(' → logprob: -13.875519752502441
    9. '_line' → logprob: -13.875519752502441
    10. ')' → logprob: -14.750519752502441

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18088078498840332
    2. '()
' → logprob: -1.8058807849884033
    3. '
' → logprob: -7.055880546569824
    4. '   ' → logprob: -8.805880546569824
    5. '()\' → logprob: -10.305880546569824
    6. '(
' → logprob: -10.680880546569824
    7. '();' → logprob: -11.555880546569824
    8. '():
' → logprob: -11.680880546569824
    9. '(' → logprob: -11.680880546569824
    10. '    
' → logprob: -11.930880546569824

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02395268715918064
    2. 'result' → logprob: -3.8989527225494385
    3. ' result' → logprob: -5.773952484130859
    4. 'print' → logprob: -8.27395248413086
    5. ' print' → logprob: -10.77395248413086
    6. '```' → logprob: -11.52395248413086
    7. '
' → logprob: -12.89895248413086
    8. '    
' → logprob: -12.89895248413086
    9. 'diff' → logprob: -13.52395248413086
    10. 'res' → logprob: -13.52395248413086

Token 225: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20483681559562683
    2. 'print' → logprob: -1.7048368453979492
    3. '   ' → logprob: -6.204836845397949
    4. ' result' → logprob: -6.829836845397949
    5. ' print' → logprob: -8.57983684539795
    6. 'answer' → logprob: -9.82983684539795
    7. 'res' → logprob: -10.20483684539795
    8. '
' → logprob: -11.57983684539795
    9. 'diff' → logprob: -11.57983684539795
    10. 'difference' → logprob: -11.70483684539795

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488476902246475
    2. '=' → logprob: -2.929884672164917
    3. ' ' → logprob: -14.179884910583496
    4. ')' → logprob: -14.179884910583496
    5. '   ' → logprob: -15.179884910583496
    6. ' =
' → logprob: -15.304884910583496
    7. ' =)' → logprob: -15.429884910583496
    8. '_' → logprob: -15.804884910583496
    9. '	' → logprob: -16.42988395690918
    10. ' ' → logprob: -16.80488395690918

Token 227: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5759395360946655
    2. 'process' → logprob: -0.8259395360946655
    3. '(process' → logprob: -16.325939178466797
    4. '	process' → logprob: -18.700939178466797
    5. '   ' → logprob: -19.075939178466797
    6. ' proces' → logprob: -19.575939178466797
    7. '_process' → logprob: -20.825939178466797
    8. '.process' → logprob: -21.575939178466797
    9. 'proces' → logprob: -22.700939178466797
    10. 'Process' → logprob: -23.450939178466797

Token 228: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.625007629394531
    3. '_output' → logprob: -12.750007629394531
    4. '_result' → logprob: -15.000007629394531
    5. '_inputs' → logprob: -15.500007629394531
    6. 'input' → logprob: -15.625007629394531
    7. '```' → logprob: -16.00000762939453
    8. ' _' → logprob: -16.00000762939453
    9. '_
' → logprob: -16.62500762939453
    10. '_main' → logprob: -17.50000762939453

Token 229: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016754455282352865
    2. '(' → logprob: -8.750167846679688
    3. ' (' → logprob: -11.625167846679688
    4. ' ' → logprob: -17.375167846679688
    5. '(
' → logprob: -17.625167846679688
    6. '(I' → logprob: -17.750167846679688
    7. '```' → logprob: -17.750167846679688
    8. '((' → logprob: -18.125167846679688
    9. '(n' → logprob: -18.375167846679688
    10. '   ' → logprob: -18.500167846679688

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. ',p' → logprob: -10.750030517578125
    3. ' ,' → logprob: -11.625030517578125
    4. '   ' → logprob: -16.250030517578125
    5. '(' → logprob: -16.875030517578125
    6. '(p' → logprob: -17.000030517578125
    7. ',
' → logprob: -17.250030517578125
    8. ',q' → logprob: -17.625030517578125
    9. ')' → logprob: -17.750030517578125
    10. '`,' → logprob: -18.125030517578125

Token 231: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002068892121315
    2. ' p' → logprob: -2.3502068519592285
    3. '   ' → logprob: -16.10020637512207
    4. ' ' → logprob: -16.72520637512207
    5. '    ' → logprob: -18.10020637512207
    6. ')' → logprob: -18.10020637512207
    7. '	p' → logprob: -18.85020637512207
    8. '  ' → logprob: -19.10020637512207
    9. '(p' → logprob: -19.35020637512207
    10. 'q' → logprob: -19.35020637512207

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. ' ,' → logprob: -11.125028610229492
    3. ',q' → logprob: -11.250028610229492
    4. ',
' → logprob: -15.750028610229492
    5. '   ' → logprob: -16.500028610229492
    6. ',result' → logprob: -16.625028610229492
    7. '‌,' → logprob: -17.250028610229492
    8. ',p' → logprob: -17.625028610229492
    9. ')' → logprob: -18.250028610229492
    10. '`,' → logprob: -18.375028610229492

Token 233: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1002098023891449
    2. ' q' → logprob: -2.3502097129821777
    3. '   ' → logprob: -13.350210189819336
    4. ' ' → logprob: -14.225210189819336
    5. '    ' → logprob: -14.850210189819336
    6. '	q' → logprob: -15.225210189819336
    7. '  ' → logprob: -15.725210189819336
    8. '     ' → logprob: -16.600210189819336
    9. '       ' → logprob: -16.725210189819336
    10. '
' → logprob: -17.100210189819336

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3896760642528534
    2. ')' → logprob: -1.1396760940551758
    3. '   ' → logprob: -5.889676094055176
    4. ')
' → logprob: -10.889676094055176
    5. '())
' → logprob: -12.389676094055176
    6. '()' → logprob: -12.514676094055176
    7. ' )
' → logprob: -12.889676094055176
    8. '()
' → logprob: -13.264676094055176
    9. ' )' → logprob: -14.764676094055176
    10. ' ' → logprob: -14.764676094055176

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021045351400971413
    2. 'print' → logprob: -4.021045207977295
    3. '
' → logprob: -6.146045207977295
    4. ' print' → logprob: -7.271045207977295
    5. '```' → logprob: -10.146045684814453
    6. '    
' → logprob: -11.271045684814453
    7. '	print' → logprob: -14.771045684814453
    8. 'return' → logprob: -15.146045684814453
    9. '\n' → logprob: -15.271045684814453
    10. '`' → logprob: -15.396045684814453

Token 236: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004344429355114698
    2. ' print' → logprob: -5.754344463348389
    3. '   ' → logprob: -6.754344463348389
    4. '```' → logprob: -15.75434398651123
    5. '	print' → logprob: -16.879344940185547
    6. '
' → logprob: -17.629344940185547
    7. 'return' → logprob: -19.129344940185547
    8. '`' → logprob: -20.129344940185547
    9. '(print' → logprob: -20.254344940185547
    10. '_print' → logprob: -20.379344940185547

Token 237: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47408080101013184
    2. '(result' → logprob: -0.9740808010101318
    3. '(
' → logprob: -13.724081039428711
    4. '('' → logprob: -14.349081039428711
    5. '(f' → logprob: -14.474081039428711
    6. '()' → logprob: -14.724081039428711
    7. ' (' → logprob: -14.724081039428711
    8. '(results' → logprob: -15.224081039428711
    9. '(

' → logprob: -16.09908103942871
    10. '(res' → logprob: -16.22408103942871

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.125
    4. '()' → logprob: -16.25
    5. ')`' → logprob: -16.75
    6. '())' → logprob: -18.0
    7. '))' → logprob: -18.375
    8. '`)' → logprob: -18.5
    9. '')' → logprob: -19.5
    10. '(' → logprob: -20.25

Token 239: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014223448000848293
    2. 'main' → logprob: -4.264223575592041
    3. ' if' → logprob: -10.389223098754883
    4. '#' → logprob: -11.889223098754883
    5. '```' → logprob: -12.014223098754883
    6. ' main' → logprob: -12.139223098754883
    7. '(main' → logprob: -12.389223098754883
    8. '
' → logprob: -12.764223098754883
    9. '_' → logprob: -14.389223098754883
    10. '\' → logprob: -14.514223098754883

Token 240: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 238
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 124
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 48.74%
Précision adaptée (1ère position): 52.10%
Précision (top 10): 87.82%
================================================================================
