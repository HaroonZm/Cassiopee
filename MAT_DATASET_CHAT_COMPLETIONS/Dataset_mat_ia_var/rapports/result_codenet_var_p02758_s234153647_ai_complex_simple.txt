================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10 ** 7)
input = sys.stdin.readline
from bisect import bisect_left as bl

from collections import defaultdict
from functools import reduce, lru_cache
from itertools import accumulate, chain, product, islice, groupby
from operator import mul

N = int((lambda s: int(s()))(input))
XD = list(map(lambda l: list(map(int, l.split())), map(str.rstrip, (input() for _ in range(N)))))
XD.sort()
MOD = 998244353

def make():
    # Build edge and parent using obscure manipulations
    indices = list(range(N-1, -1, -1))
    edge = defaultdict(list)
    parent = [-1] * N
    MAXIDX = [N]

    Xs = tuple(map(lambda p: p[0], XD))

    def within_bounds(x):  # Artificial function for min boundary
        return x if x < MAXIDX[0] else MAXIDX[0]

    for i in indices:
        lim = bl(Xs, XD[i][0] + XD[i][1])
        _ = [parent.__setitem__(j, i) for j in range(i+1, within_bounds(lim)) if parent[j] < 0]
        if lim >= MAXIDX[0]:
            MAXIDX[0] = i + 1
    # Double iteration just for fun
    [edge[par].append(i) for i, par in enumerate(parent) if par >= 0]
    edges_list = [edge.get(i, []) for i in range(N)]
    return parent, edges_list

parent, edge = make()

@lru_cache(None)
def cnt(node):
    # Aggressively use functional constructs
    branches = edge[node]
    if not branches:
        return 2
    res = reduce(lambda x, y: (x * y) % MOD, (cnt(v) for v in branches), 1)
    return (res + 1) % MOD

def main():
    roots = filter(lambda x: parent[x] < 0, range(N))
    print(reduce(lambda a, b: a * b % MOD, (cnt(i) for i in roots), 1))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4338620901107788
    2. '.' → logprob: -1.1838620901107788
    3. 'import' → logprob: -4.183862209320068
    4. '\' → logprob: -4.433862209320068
    5. 'newline' → logprob: -5.183862209320068
    6. '<|end|>' → logprob: -5.558862209320068
    7. '
' → logprob: -5.933862209320068
    8. '```' → logprob: -6.558862209320068
    9. '' → logprob: -7.058862209320068
    10. '<|end|>' → logprob: -7.183862209320068

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.607391408877447e-05
    2. ' .' → logprob: -11.500036239624023
    3. '.import' → logprob: -12.250036239624023
    4. '[' → logprob: -12.750036239624023
    5. '.readline' → logprob: -13.125036239624023
    6. '.user' → logprob: -13.375036239624023
    7. '.`' → logprob: -13.375036239624023
    8. '.stdout' → logprob: -13.750036239624023
    9. '.exit' → logprob: -14.000036239624023
    10. '```' → logprob: -14.125036239624023

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001044243574142456
    2. 'ursive' → logprob: -7.001044273376465
    3. 'ur' → logprob: -10.251044273376465
    4. 'urs' → logprob: -10.626044273376465
    5. 'limit' → logprob: -10.626044273376465
    6. '_limit' → logprob: -11.626044273376465
    7. '_' → logprob: -11.876044273376465
    8. 'ursor' → logprob: -12.251044273376465
    9. 'urf' → logprob: -12.251044273376465
    10. 'urse' → logprob: -12.376044273376465

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.016521787270903587
    2. '_limit' → logprob: -4.26652193069458
    3. 'depth' → logprob: -6.64152193069458
    4. '_depth' → logprob: -7.51652193069458
    5. '(' → logprob: -8.391521453857422
    6. ' limit' → logprob: -9.141521453857422
    7. 'error' → logprob: -10.391521453857422
    8. '(limit' → logprob: -10.641521453857422
    9. 'lim' → logprob: -11.141521453857422
    10. '('' → logprob: -11.391521453857422

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.875012397766113
    3. '(
' → logprob: -12.625012397766113
    4. '(

' → logprob: -13.375012397766113
    5. '("("' → logprob: -15.375012397766113
    6. '((' → logprob: -15.750012397766113
    7. '('' → logprob: -15.875012397766113
    8. '(.' → logprob: -16.75001335144043
    9. '(
' → logprob: -17.12501335144043
    10. '()' → logprob: -17.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3134221136569977
    2. '100' → logprob: -1.3134220838546753
    3. '300' → logprob: -9.938422203063965
    4. '500' → logprob: -10.063422203063965
    5. ' ' → logprob: -10.688422203063965
    6. '150' → logprob: -11.063422203063965
    7. '999' → logprob: -11.188422203063965
    8. '200' → logprob: -11.563422203063965
    9. '1' → logprob: -12.938422203063965
    10. '   ' → logprob: -13.813422203063965

Token 10: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01279427856206894
    2. '9' → logprob: -5.387794494628906
    3. '8' → logprob: -5.387794494628906
    4. '6' → logprob: -5.637794494628906
    5. ' ' → logprob: -11.762794494628906
    6. '```' → logprob: -15.762794494628906
    7. '10' → logprob: -17.887794494628906
    8. '5' → logprob: -18.012794494628906
    9. '4' → logprob: -18.887794494628906
    10. '``' → logprob: -19.012794494628906

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.012140856124460697
    2. '6' → logprob: -4.76214075088501
    3. '9' → logprob: -5.76214075088501
    4. '8' → logprob: -7.88714075088501
    5. '```' → logprob: -16.13714027404785
    6. '**' → logprob: -18.63714027404785
    7. ' ' → logprob: -18.88714027404785
    8. '4' → logprob: -20.51214027404785
    9. '``' → logprob: -20.76214027404785
    10. ')' → logprob: -21.01214027404785

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ' )' → logprob: -12.125012397766113
    3. ')
' → logprob: -12.250012397766113
    4. '))' → logprob: -13.750012397766113
    5. ')
' → logprob: -15.125012397766113
    6. ')`' → logprob: -15.125012397766113
    7. ')

' → logprob: -15.500012397766113
    8. '```' → logprob: -16.25001335144043
    9. '*' → logprob: -16.50001335144043
    10. '`)' → logprob: -17.00001335144043

Token 14: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4197455048561096
    2. 'def' → logprob: -2.169745445251465
    3. '(' → logprob: -2.544745445251465
    4. ')' → logprob: -3.169745445251465
    5. '\' → logprob: -3.419745445251465
    6. '\n' → logprob: -3.919745445251465
    7. '
' → logprob: -4.044745445251465
    8. '()' → logprob: -4.919745445251465
    9. '

' → logprob: -5.169745445251465
    10. '' → logprob: -5.294745445251465

Token 15: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03554277867078781
    2. '()' → logprob: -3.4105427265167236
    3. '40' → logprob: -7.285542964935303
    4. '.' → logprob: -8.535542488098145
    5. '('' → logprob: -8.535542488098145
    6. '("("' → logprob: -8.910542488098145
    7. '().' → logprob: -9.285542488098145
    8. ')' → logprob: -9.535542488098145
    9. '("")' → logprob: -9.660542488098145
    10. '```' → logprob: -9.660542488098145

Token 16: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2514757812023163
    2. ' input' → logprob: -1.7514758110046387
    3. ' sys' → logprob: -3.5014758110046387
    4. 'sys' → logprob: -4.001475811004639
    5. ' lambda' → logprob: -9.12647533416748
    6. 'lambda' → logprob: -9.12647533416748
    7. '```' → logprob: -10.00147533416748
    8. '=input' → logprob: -10.12647533416748
    9. 'open' → logprob: -11.25147533416748
    10. '=sys' → logprob: -11.37647533416748

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0497177392244339
    2. '.' → logprob: -3.299717664718628
    3. '.readline' → logprob: -4.549717903137207
    4. '.stdout' → logprob: -7.549717903137207
    5. ' .' → logprob: -8.549717903137207
    6. '.std' → logprob: -9.299717903137207
    7. '.argv' → logprob: -9.549717903137207
    8. '.input' → logprob: -10.174717903137207
    9. '.stderr' → logprob: -10.924717903137207
    10. '.exit' → logprob: -10.924717903137207

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004495277069509029
    2. '.read' → logprob: -5.504495143890381
    3. 'read' → logprob: -8.254495620727539
    4. '.' → logprob: -8.879495620727539
    5. '.Read' → logprob: -11.254495620727539
    6. '.buffer' → logprob: -13.254495620727539
    7. '.readlines' → logprob: -13.629495620727539
    8. 'buffer' → logprob: -14.379495620727539
    9. ' readline' → logprob: -15.379495620727539
    10. '_read' → logprob: -15.629495620727539

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6046270728111267
    2. 'def' → logprob: -1.3546271324157715
    3. '()

' → logprob: -3.2296271324157715
    4. '()
' → logprob: -3.3546271324157715
    5. '\n' → logprob: -3.4796271324157715
    6. '(' → logprob: -3.8546271324157715
    7. 'n' → logprob: -3.9796271324157715
    8. '(n' → logprob: -4.1046271324157715
    9. '
' → logprob: -4.4796271324157715
    10. '\' → logprob: -4.9796271324157715

Token 20: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5252676606178284
    2. 'def' → logprob: -0.9002676606178284
    3. '\' → logprob: -7.650267601013184
    4. '(n' → logprob: -7.775267601013184
    5. 'N' → logprob: -8.025267601013184
    6. 'd' → logprob: -8.150267601013184
    7. '\n' → logprob: -8.775267601013184
    8. 'class' → logprob: -8.775267601013184
    9. 't' → logprob: -9.025267601013184
    10. '
' → logprob: -9.775267601013184

Token 21: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.12472530454397202
    2. ' math' → logprob: -2.374725341796875
    3. 'collections' → logprob: -3.749725341796875
    4. 'math' → logprob: -7.749725341796875
    5. ' typing' → logprob: -8.999725341796875
    6. ' itertools' → logprob: -9.749725341796875
    7. ' functools' → logprob: -9.999725341796875
    8. ' os' → logprob: -11.499725341796875
    9. ' sys' → logprob: -11.499725341796875
    10. '_math' → logprob: -12.374725341796875

Token 22: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.2948405128554441e-05
    2. 'e' → logprob: -11.75001335144043
    3. 't' → logprob: -13.25001335144043
    4. 'import' → logprob: -13.75001335144043
    5. 'ector' → logprob: -14.00001335144043
    6. 'ectl' → logprob: -15.25001335144043
    7. 'ec' → logprob: -15.37501335144043
    8. 'ected' → logprob: -15.37501335144043
    9. 'ection' → logprob: -15.62501335144043
    10. 'ort' → logprob: -16.00001335144043

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012523310258984566
    2. 'import' → logprob: -4.387523174285889
    3. '_import' → logprob: -11.762523651123047
    4. '	import' → logprob: -12.262523651123047
    5. ' ' → logprob: -14.137523651123047
    6. ' importar' → logprob: -15.762523651123047
    7. ' im' → logprob: -15.887523651123047
    8. ' Import' → logprob: -17.137523651123047
    9. ' ' → logprob: -17.387523651123047
    10. ' impor' → logprob: -17.512523651123047

Token 24: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.08575665950775146
    2. 'bis' → logprob: -2.585756778717041
    3. 'ins' → logprob: -5.210756778717041
    4. ' ins' → logprob: -6.585756778717041
    5. 'b' → logprob: -13.460756301879883
    6. 'import' → logprob: -13.710756301879883
    7. ' ' → logprob: -14.085756301879883
    8. '```' → logprob: -14.460756301879883
    9. 'bl' → logprob: -14.835756301879883
    10. '_ins' → logprob: -15.210756301879883

Token 25: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.034592388459714e-06
    2. 'e' → logprob: -12.125005722045898
    3. 'ec' → logprob: -15.625005722045898
    4. 'ectl' → logprob: -15.750005722045898
    5. 'ected' → logprob: -16.7500057220459
    6. 'ection' → logprob: -17.3750057220459
    7. '```' → logprob: -17.7500057220459
    8. 'earch' → logprob: -18.2500057220459
    9. 'ext' → logprob: -18.5000057220459
    10. 'ecta' → logprob: -18.6250057220459

Token 26: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.11317536234855652
    2. '_' → logprob: -2.363175392150879
    3. '_right' → logprob: -4.363175392150879
    4. 'left' → logprob: -10.238175392150879
    5. '```' → logprob: -10.613175392150879
    6. 'Left' → logprob: -11.113175392150879
    7. '_ins' → logprob: -11.613175392150879
    8. ')' → logprob: -11.988175392150879
    9. '_LEFT' → logprob: -11.988175392150879
    10. '(' → logprob: -12.363175392150879

Token 27: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.445556104183197
    2. '
' → logprob: -1.3205561637878418
    3. '

' → logprob: -3.945556163787842
    4. 'import' → logprob: -3.945556163787842
    5. '\n' → logprob: -4.570556163787842
    6. '' → logprob: -4.695556163787842
    7. 'from' → logprob: -5.195556163787842
    8. 'n' → logprob: -5.320556163787842
    9. '(' → logprob: -5.820556163787842
    10. ',' → logprob: -5.945556163787842

Token 28: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.17037604749202728
    2. 'bis' → logprob: -1.9203760623931885
    3. 'b' → logprob: -5.170375823974609
    4. ' bis' → logprob: -5.670375823974609
    5. ' bl' → logprob: -8.04537582397461
    6. 'bli' → logprob: -8.42037582397461
    7. 'bi' → logprob: -8.92037582397461
    8. '`' → logprob: -10.04537582397461
    9. ' ' → logprob: -10.29537582397461
    10. 'ins' → logprob: -10.67037582397461

Token 29: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0851117372512817
    2. '
' → logprob: -1.5851117372512817
    3. '' → logprob: -2.460111618041992
    4. ')' → logprob: -2.710111618041992
    5. '\' → logprob: -2.710111618041992
    6. '\n' → logprob: -2.960111618041992
    7. 'def' → logprob: -3.085111618041992
    8. '(' → logprob: -3.085111618041992
    9. 'n' → logprob: -3.835111618041992
    10. '_
' → logprob: -3.835111618041992

Token 30: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6146261692047119
    2. 'n' → logprob: -0.9896261692047119
    3. 'class' → logprob: -3.364626169204712
    4. 'a' → logprob: -3.864626169204712
    5. '
' → logprob: -4.364625930786133
    6. 'N' → logprob: -4.739625930786133
    7. 'from' → logprob: -5.989625930786133
    8. 'd' → logprob: -6.614625930786133
    9. '#' → logprob: -6.989625930786133
    10. '\' → logprob: -7.239625930786133

Token 31: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.909118115901947
    2. ' itertools' → logprob: -1.0341181755065918
    3. ' math' → logprob: -1.5341181755065918
    4. ' heap' → logprob: -4.534118175506592
    5. 'collections' → logprob: -4.909118175506592
    6. ' typing' → logprob: -5.284118175506592
    7. ' bis' → logprob: -7.034118175506592
    8. 'math' → logprob: -7.284118175506592
    9. ' sys' → logprob: -7.909118175506592
    10. 'heap' → logprob: -8.534117698669434

Token 32: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12701062858104706
    2. ' import' → logprob: -2.1270105838775635
    3. 'port' → logprob: -10.752010345458984
    4. ' defaultdict' → logprob: -11.002010345458984
    5. 'm' → logprob: -12.002010345458984
    6. '	import' → logprob: -12.127010345458984
    7. 'ort' → logprob: -12.502010345458984
    8. '```' → logprob: -12.752010345458984
    9. '.' → logprob: -12.877010345458984
    10. '.Counter' → logprob: -13.002010345458984

Token 33: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.12392880767583847
    2. 'deque' → logprob: -2.6239287853240967
    3. ' defaultdict' → logprob: -3.1239287853240967
    4. 'de' → logprob: -10.248929023742676
    5. 'default' → logprob: -11.623929023742676
    6. ' de' → logprob: -12.123929023742676
    7. ' Counter' → logprob: -12.873929023742676
    8. ' named' → logprob: -13.873929023742676
    9. '.de' → logprob: -13.998929023742676
    10. 'Deque' → logprob: -14.248929023742676

Token 34: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.1657307147979736
    2. 'def' → logprob: -1.5407307147979736
    3. '
' → logprob: -1.6657307147979736
    4. 'd' → logprob: -2.5407307147979736
    5. 'default' → logprob: -2.5407307147979736
    6. '' → logprob: -3.9157307147979736
    7. 'import' → logprob: -4.0407304763793945
    8. '
' → logprob: -4.1657304763793945
    9. ' defaultdict' → logprob: -4.1657304763793945
    10. 'graph' → logprob: -4.6657304763793945

Token 35: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8174894452095032
    2. 'graph' → logprob: -1.9424893856048584
    3. 'd' → logprob: -2.3174893856048584
    4. '

' → logprob: -2.4424893856048584
    5. 'def' → logprob: -2.5674893856048584
    6. 'default' → logprob: -2.9424893856048584
    7. 'import' → logprob: -3.8174893856048584
    8. 'data' → logprob: -4.3174896240234375
    9. '' → logprob: -5.0674896240234375
    10. 'deque' → logprob: -5.1924896240234375

Token 36: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8120026588439941
    2. ' heap' → logprob: -1.0620026588439941
    3. ' math' → logprob: -2.312002658843994
    4. ' typing' → logprob: -2.937002658843994
    5. 'heap' → logprob: -3.812002658843994
    6. ' queue' → logprob: -5.187002658843994
    7. ' functools' → logprob: -5.187002658843994
    8. ' collections' → logprob: -5.312002658843994
    9. 'math' → logprob: -5.562002658843994
    10. ' sys' → logprob: -5.687002658843994

Token 37: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05507048964500427
    2. 'import' → logprob: -2.930070400238037
    3. ' ' → logprob: -8.930070877075195
    4. '	import' → logprob: -10.055070877075195
    5. '_import' → logprob: -12.055070877075195
    6. ' ' → logprob: -12.805070877075195
    7. '<|end|>' → logprob: -14.555070877075195
    8. ' imports' → logprob: -14.805070877075195
    9. '_' → logprob: -14.930070877075195
    10. ' importar' → logprob: -15.180070877075195

Token 38: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010452601127326488
    2. ' l' → logprob: -4.635452747344971
    3. 'reduce' → logprob: -7.635452747344971
    4. 'cache' → logprob: -9.135452270507812
    5. 'wrap' → logprob: -9.635452270507812
    6. 'cmp' → logprob: -10.635452270507812
    7. 'partial' → logprob: -11.885452270507812
    8. 'import' → logprob: -12.385452270507812
    9. ' reduce' → logprob: -13.760452270507812
    10. '```' → logprob: -13.885452270507812

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.347252756357193
    2. 'import' → logprob: -1.4722527265548706
    3. 'from' → logprob: -3.97225284576416
    4. ',
' → logprob: -4.22225284576416
    5. '
' → logprob: -4.59725284576416
    6. 'def' → logprob: -4.97225284576416
    7. ' ' → logprob: -5.47225284576416
    8. ' ,' → logprob: -6.34725284576416
    9. '<|end|>' → logprob: -6.47225284576416
    10. ' as' → logprob: -6.59725284576416

Token 40: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6087104678153992
    2. 'l' → logprob: -0.8587104678153992
    3. 'cmp' → logprob: -3.858710527420044
    4. 'wrap' → logprob: -5.233710289001465
    5. ' l' → logprob: -5.483710289001465
    6. ' partial' → logprob: -6.983710289001465
    7. 'cache' → logprob: -7.983710289001465
    8. ' cmp' → logprob: -9.108710289001465
    9. 'reduce' → logprob: -9.483710289001465
    10. ' wraps' → logprob: -9.983710289001465

Token 41: 'ru' (ID: 1942)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.015496591106057167
    2. 'ru' → logprob: -4.515496730804443
    3. 'amb' → logprob: -6.265496730804443
    4. 'en' → logprob: -6.515496730804443
    5. 'am' → logprob: -7.265496730804443
    6. 'a' → logprob: -8.640496253967285
    7. 'operator' → logprob: -10.140496253967285
    8. 'n' → logprob: -10.640496253967285
    9. 'ist' → logprob: -10.890496253967285
    10. 'partial' → logprob: -11.015496253967285

Token 42: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.5289053320884705
    2. '_cache' → logprob: -0.9039053320884705
    3. 'c' → logprob: -5.278905391693115
    4. 'cached' → logprob: -7.528905391693115
    5. 'Cache' → logprob: -10.153904914855957
    6. '```' → logprob: -10.653904914855957
    7. '_cached' → logprob: -10.903904914855957
    8. ' cache' → logprob: -11.028904914855957
    9. '	cache' → logprob: -12.278904914855957
    10. '_CACHE' → logprob: -12.403904914855957

Token 43: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.8997982144355774
    2. '
' → logprob: -1.5247981548309326
    3. 'import' → logprob: -1.6497981548309326
    4. '

' → logprob: -2.6497981548309326
    5. 'def' → logprob: -3.2747981548309326
    6. 'from' → logprob: -3.3997981548309326
    7. ',' → logprob: -4.274798393249512
    8. '\n' → logprob: -5.024798393249512
    9. ',
' → logprob: -5.774798393249512
    10. '@
' → logprob: -5.774798393249512

Token 44: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7177276015281677
    2. 'def' → logprob: -1.4677276611328125
    3. '
' → logprob: -1.8427276611328125
    4. '

' → logprob: -2.7177276611328125
    5. 'from' → logprob: -3.7177276611328125
    6. 'class' → logprob: -4.5927276611328125
    7. '\n' → logprob: -4.9677276611328125
    8. '@' → logprob: -5.9677276611328125
    9. '\' → logprob: -6.0927276611328125
    10. '```' → logprob: -6.2177276611328125

Token 45: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.09378182888031
    2. ' itertools' → logprob: -1.09378182888031
    3. ' operator' → logprob: -1.59378182888031
    4. 'math' → logprob: -2.4687819480895996
    5. 'operator' → logprob: -3.3437819480895996
    6. ' heap' → logprob: -5.7187819480896
    7. ' typing' → logprob: -6.3437819480896
    8. 'heap' → logprob: -6.7187819480896
    9. 'it' → logprob: -7.9687819480896
    10. ' ' → logprob: -9.093781471252441

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023295091465115547
    2. 'import' → logprob: -3.7732951641082764
    3. '	import' → logprob: -10.023295402526855
    4. ' ' → logprob: -13.898295402526855
    5. '_import' → logprob: -13.898295402526855
    6. ' itertools' → logprob: -14.023295402526855
    7. ' importar' → logprob: -14.523295402526855
    8. '.import' → logprob: -15.023295402526855
    9. '.' → logprob: -15.148295402526855
    10. 'ertools' → logprob: -15.398295402526855

Token 47: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.2689063847064972
    2. ' permutations' → logprob: -2.518906354904175
    3. ' combinations' → logprob: -2.893906354904175
    4. 'acc' → logprob: -3.143906354904175
    5. ' product' → logprob: -3.643906354904175
    6. ' group' → logprob: -4.268906593322754
    7. 'com' → logprob: -5.143906593322754
    8. ' chain' → logprob: -5.518906593322754
    9. 'product' → logprob: -5.643906593322754
    10. 'group' → logprob: -6.768906593322754

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5672878623008728
    2. 'import' → logprob: -1.0672879219055176
    3. '
' → logprob: -3.3172879219055176
    4. 'from' → logprob: -4.317287921905518
    5. '<|end|>' → logprob: -4.692287921905518
    6. '\n' → logprob: -5.192287921905518
    7. ' ' → logprob: -5.192287921905518
    8. ',
' → logprob: -5.692287921905518
    9. '

' → logprob: -5.817287921905518
    10. 'def' → logprob: -5.942287921905518

Token 49: ' chain' (ID: 13464)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8260872960090637
    2. 'com' → logprob: -1.451087236404419
    3. 'group' → logprob: -1.826087236404419
    4. 'per' → logprob: -2.951087236404419
    5. 'chain' → logprob: -3.326087236404419
    6. ' product' → logprob: -3.826087236404419
    7. ' permutations' → logprob: -3.826087236404419
    8. 'count' → logprob: -4.201087474822998
    9. ' group' → logprob: -4.451087474822998
    10. ' chain' → logprob: -5.576087474822998

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03404732793569565
    2. 'import' → logprob: -3.9090473651885986
    3. 'from' → logprob: -5.1590471267700195
    4. '
' → logprob: -5.5340471267700195
    5. ',
' → logprob: -7.1590471267700195
    6. '<|end|>' → logprob: -7.1590471267700195
    7. '

' → logprob: -7.6590471267700195
    8. '\' → logprob: -8.28404712677002
    9. '\n' → logprob: -8.40904712677002
    10. ' ' → logprob: -8.53404712677002

Token 51: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11006974428892136
    2. 'product' → logprob: -2.860069751739502
    3. ' product' → logprob: -4.235069751739502
    4. 'group' → logprob: -4.485069751739502
    5. ' permutations' → logprob: -5.235069751739502
    6. ' combinations' → logprob: -5.485069751739502
    7. ' group' → logprob: -5.735069751739502
    8. 'cycle' → logprob: -5.860069751739502
    9. 'compress' → logprob: -6.360069751739502
    10. 'per' → logprob: -6.985069751739502

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11629127711057663
    2. 'import' → logprob: -3.3662912845611572
    3. '
' → logprob: -3.8662912845611572
    4. 'from' → logprob: -4.116291046142578
    5. '\n' → logprob: -4.241291046142578
    6. ',
' → logprob: -4.241291046142578
    7. '<|end|>' → logprob: -6.116291046142578
    8. ')' → logprob: -7.241291046142578
    9. '#' → logprob: -7.241291046142578
    10. 'def' → logprob: -7.366291046142578

Token 53: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.12215087562799454
    2. 'per' → logprob: -3.2471508979797363
    3. 'st' → logprob: -3.4971508979797363
    4. ' permutations' → logprob: -3.9971508979797363
    5. 'repeat' → logprob: -4.372150897979736
    6. 'group' → logprob: -5.997150897979736
    7. 'compress' → logprob: -5.997150897979736
    8. 'cycle' → logprob: -6.247150897979736
    9. 'is' → logprob: -6.497150897979736
    10. 'take' → logprob: -6.622150897979736

Token 54: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -2.6060808522743173e-05
    2. 'l' → logprob: -11.000025749206543
    3. 'lic' → logprob: -12.250025749206543
    4. 'li' → logprob: -14.000025749206543
    5. 'ervice' → logprob: -14.875025749206543
    6. '```' → logprob: -14.875025749206543
    7. '

' → logprob: -15.000025749206543
    8. '
' → logprob: -15.000025749206543
    9. 'land' → logprob: -15.250025749206543
    10. 'a' → logprob: -15.250025749206543

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07061003893613815
    2. 'import' → logprob: -3.6956100463867188
    3. 'from' → logprob: -4.195610046386719
    4. '
' → logprob: -5.195610046386719
    5. ' ' → logprob: -5.195610046386719
    6. '<|end|>' → logprob: -5.195610046386719
    7. ',
' → logprob: -5.320610046386719
    8. ' ,' → logprob: -6.445610046386719
    9. '\n' → logprob: -6.820610046386719
    10. '' → logprob: -6.820610046386719

Token 56: ' group' (ID: 3566)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.975271463394165
    2. 'st' → logprob: -1.100271463394165
    3. 'per' → logprob: -2.350271463394165
    4. 'take' → logprob: -2.475271463394165
    5. ' permutations' → logprob: -4.100271224975586
    6. 'repeat' → logprob: -4.225271224975586
    7. 'group' → logprob: -4.225271224975586
    8. 'zip' → logprob: -4.350271224975586
    9. 'cycle' → logprob: -4.600271224975586
    10. ' st' → logprob: -4.725271224975586

Token 57: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -4.191489642835222e-05
    2. 'y' → logprob: -10.125041961669922
    3. 'b' → logprob: -13.875041961669922
    4. 'ed' → logprob: -15.125041961669922
    5. 'py' → logprob: -15.500041961669922
    6. 's' → logprob: -16.125041961669922
    7. 'ing' → logprob: -16.125041961669922
    8. ' by' → logprob: -16.875041961669922
    9. 'by's' → logprob: -17.375041961669922
    10. 'byt' → logprob: -17.500041961669922

Token 58: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.163763627409935
    2. 'from' → logprob: -3.1637635231018066
    3. 'import' → logprob: -3.1637635231018066
    4. '
' → logprob: -3.6637635231018066
    5. '<|end|>' → logprob: -3.9137635231018066
    6. '\n' → logprob: -5.038763523101807
    7. ',
' → logprob: -5.038763523101807
    8. 'def' → logprob: -7.038763523101807
    9. '' → logprob: -7.288763523101807
    10. '

' → logprob: -7.288763523101807

Token 59: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4250894784927368
    2. '
' → logprob: -1.5500894784927368
    3. 'import' → logprob: -1.8000894784927368
    4. '

' → logprob: -2.0500893592834473
    5. 'def' → logprob: -2.3000893592834473
    6. '<|end|>' → logprob: -2.8000893592834473
    7. 'from' → logprob: -3.8000893592834473
    8. '\n' → logprob: -3.9250893592834473
    9. 'n' → logprob: -4.800089359283447
    10. '#' → logprob: -4.925089359283447

Token 60: ' operator' (ID: 11019)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.06189271807670593
    2. 'operator' → logprob: -3.5618927478790283
    3. 'heap' → logprob: -3.8118927478790283
    4. ' math' → logprob: -4.811892509460449
    5. ' operator' → logprob: -7.061892509460449
    6. 'collections' → logprob: -8.81189250946045
    7. ' heap' → logprob: -8.93689250946045
    8. 'typing' → logprob: -9.06189250946045
    9. 'fra' → logprob: -10.06189250946045
    10. 'copy' → logprob: -10.68689250946045

Token 61: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10111740231513977
    2. 'import' → logprob: -2.3511173725128174
    3. ' as' → logprob: -7.4761176109313965
    4. '<|end|>' → logprob: -8.351117134094238
    5. '	import' → logprob: -9.976117134094238
    6. ' ' → logprob: -9.976117134094238
    7. '<|end|>' → logprob: -11.976117134094238
    8. 'as' → logprob: -12.851117134094238
    9. '_import' → logprob: -13.101117134094238
    10. ',' → logprob: -14.351117134094238

Token 62: ' mul' (ID: 9975)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0510849803686142
    2. ' item' → logprob: -3.3010849952697754
    3. 'mul' → logprob: -5.676084995269775
    4. 'getitem' → logprob: -6.051084995269775
    5. 'add' → logprob: -6.176084995269775
    6. 'attr' → logprob: -6.301084995269775
    7. 'import' → logprob: -6.426084995269775
    8. ' mul' → logprob: -7.926084995269775
    9. 'icon' → logprob: -8.051084518432617
    10. ' ' → logprob: -8.551084518432617

Token 63: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1325877904891968
    2. 'import' → logprob: -1.5075877904891968
    3. '
' → logprob: -1.6325877904891968
    4. 'def' → logprob: -2.2575879096984863
    5. '

' → logprob: -2.5075879096984863
    6. 'from' → logprob: -3.3825879096984863
    7. '\n' → logprob: -4.257587909698486
    8. '#' → logprob: -5.382587909698486
    9. ',
' → logprob: -5.632587909698486
    10. '
' → logprob: -5.882587909698486

Token 64: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4445927143096924
    2. 'n' → logprob: -1.6945927143096924
    3. '
' → logprob: -2.3195927143096924
    4. '

' → logprob: -3.3195927143096924
    5. 'import' → logprob: -4.444592475891113
    6. '#' → logprob: -4.444592475891113
    7. 'class' → logprob: -5.819592475891113
    8. '\n' → logprob: -5.944592475891113
    9. 'd' → logprob: -6.319592475891113
    10. '\' → logprob: -6.444592475891113

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32418516278266907
    2. '=' → logprob: -1.4491851329803467
    3. ',' → logprob: -3.8241851329803467
    4. ' ' → logprob: -3.9491851329803467
    5. '<|end|>' → logprob: -7.949185371398926
    6. ' ,' → logprob: -8.074185371398926
    7. ')' → logprob: -9.074185371398926
    8. '  ' → logprob: -9.699185371398926
    9. '.' → logprob: -9.824185371398926
    10. '>' → logprob: -10.824185371398926

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.024579135701060295
    2. 'int' → logprob: -3.7745790481567383
    3. ' ' → logprob: -6.649579048156738
    4. '10' → logprob: -11.024579048156738
    5. '=int' → logprob: -12.399579048156738
    6. '[int' → logprob: -12.899579048156738
    7. ' bl' → logprob: -13.024579048156738
    8. '0' → logprob: -13.024579048156738
    9. '20' → logprob: -13.274579048156738
    10. '<int' → logprob: -13.524579048156738

Token 67: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47438594698905945
    2. '(input' → logprob: -0.9743859767913818
    3. 'input' → logprob: -8.349386215209961
    4. '('' → logprob: -9.974386215209961
    5. ' (' → logprob: -11.974386215209961
    6. '()' → logprob: -11.974386215209961
    7. '(sys' → logprob: -12.349386215209961
    8. '(
' → logprob: -13.599386215209961
    9. '(`' → logprob: -13.974386215209961
    10. '("' → logprob: -13.974386215209961

Token 68: 'lambda' (ID: 35280)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005284865386784077
    2. ' input' → logprob: -5.255284786224365
    3. ')' → logprob: -10.130285263061523
    4. 'sys' → logprob: -12.505285263061523
    5. '(input' → logprob: -12.755285263061523
    6. ' ' → logprob: -12.880285263061523
    7. '=input' → logprob: -14.130285263061523
    8. '	input' → logprob: -15.005285263061523
    9. ' sys' → logprob: -15.130285263061523
    10. ' )' → logprob: -15.380285263061523

Token 69: ' s' (ID: 265)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2919009327888489
    2. ' input' → logprob: -1.541900873184204
    3. ':' → logprob: -3.666900873184204
    4. ')' → logprob: -5.041901111602783
    5. ' ' → logprob: -6.291901111602783
    6. 'x' → logprob: -6.541901111602783
    7. ' )' → logprob: -7.041901111602783
    8. 'sys' → logprob: -7.541901111602783
    9. '):' → logprob: -7.666901111602783
    10. ' x' → logprob: -8.416900634765625

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022367941215634346
    2. 's' → logprob: -4.27236795425415
    3. 'input' → logprob: -6.27236795425415
    4. ':s' → logprob: -6.64736795425415
    5. ' :' → logprob: -6.64736795425415
    6. '=sys' → logprob: -6.89736795425415
    7. 'sys' → logprob: -7.02236795425415
    8. ' s' → logprob: -7.14736795425415
    9. ':int' → logprob: -7.77236795425415
    10. ' input' → logprob: -8.897367477416992

Token 71: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8931992053985596
    2. 's' → logprob: -1.5181992053985596
    3. ' int' → logprob: -1.7681992053985596
    4. ' s' → logprob: -1.7681992053985596
    5. ' sys' → logprob: -4.8931989669799805
    6. 'sys' → logprob: -5.0181989669799805
    7. ' list' → logprob: -5.2681989669799805
    8. 'list' → logprob: -5.8931989669799805
    9. 'input' → logprob: -6.6431989669799805
    10. ' map' → logprob: -7.0181989669799805

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009991057449951768
    2. 's' → logprob: -7.1259989738464355
    3. '(' → logprob: -9.375999450683594
    4. ')(' → logprob: -9.500999450683594
    5. ')' → logprob: -10.500999450683594
    6. ')s' → logprob: -13.000999450683594
    7. ' (' → logprob: -13.250999450683594
    8. ' s' → logprob: -13.750999450683594
    9. '(sys' → logprob: -14.000999450683594
    10. '(input' → logprob: -14.375999450683594

Token 73: '()))' (ID: 16829)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.028108665719628334
    2. 'strip' → logprob: -4.403108596801758
    3. '))' → logprob: -5.403108596801758
    4. '().' → logprob: -6.153108596801758
    5. '.rstrip' → logprob: -6.153108596801758
    6. ')))' → logprob: -6.403108596801758
    7. ')' → logprob: -6.653108596801758
    8. '.split' → logprob: -6.653108596801758
    9. '.replace' → logprob: -7.028108596801758
    10. '()))' → logprob: -7.653108596801758

Token 74: '(' (ID: 7)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.557148277759552
    2. '(input' → logprob: -1.4321482181549072
    3. ')(' → logprob: -1.9321482181549072
    4. ')' → logprob: -3.4321482181549072
    5. '(' → logprob: -4.682148456573486
    6. ' (' → logprob: -7.057148456573486
    7. 'sys' → logprob: -7.807148456573486
    8. 'input' → logprob: -8.432147979736328
    9. '))' → logprob: -9.932147979736328
    10. '=sys' → logprob: -9.932147979736328

Token 75: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00034964739461429417
    2. ' input' → logprob: -8.125349998474121
    3. 'sys' → logprob: -9.875349998474121
    4. ' ' → logprob: -14.375349998474121
    5. ')' → logprob: -15.000349998474121
    6. '(input' → logprob: -15.125349998474121
    7. 'stdin' → logprob: -15.250349998474121
    8. '<input' → logprob: -15.750349998474121
    9. ' sys' → logprob: -15.750349998474121
    10. '))' → logprob: -15.750349998474121

Token 76: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023280538618564606
    2. ')' → logprob: -3.773280620574951
    3. ')))' → logprob: -11.398280143737793
    4. '))
' → logprob: -11.523280143737793
    5. '()))' → logprob: -12.273280143737793
    6. ' ))' → logprob: -12.773280143737793
    7. ')
' → logprob: -13.148280143737793
    8. '))

' → logprob: -13.898280143737793
    9. ' ' → logprob: -14.398280143737793
    10. '),' → logprob: -14.523280143737793

Token 77: 'XD' (ID: 96737)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09589379280805588
    2. '
' → logprob: -3.3458938598632812
    3. '<|end|>' → logprob: -3.5958938598632812
    4. '#' → logprob: -4.220893859863281
    5. '\n' → logprob: -5.845893859863281
    6. 'def' → logprob: -6.095893859863281
    7. ' ' → logprob: -6.345893859863281
    8. '```' → logprob: -6.845893859863281
    9. '.' → logprob: -7.095893859863281
    10. '*' → logprob: -7.595893859863281

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1193048357963562
    2. '=' → logprob: -2.369304895401001
    3. '=[]' → logprob: -4.369304656982422
    4. 'S' → logprob: -5.869304656982422
    5. 'C' → logprob: -7.619304656982422
    6. '_' → logprob: -7.744304656982422
    7. 'L' → logprob: -8.119304656982422
    8. '_list' → logprob: -8.119304656982422
    9. '=[' → logprob: -8.369304656982422
    10. ')' → logprob: -8.369304656982422

Token 79: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3911738693714142
    2. '[' → logprob: -1.1411738395690918
    3. '[array' → logprob: -6.516173839569092
    4. '[x' → logprob: -7.516173839569092
    5. '[int' → logprob: -7.766173839569092
    6. '[List' → logprob: -7.891173839569092
    7. '[input' → logprob: -8.14117431640625
    8. ' [' → logprob: -8.51617431640625
    9. '[line' → logprob: -8.76617431640625
    10. '[i' → logprob: -9.14117431640625

Token 80: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04513007774949074
    2. '(' → logprob: -3.5451300144195557
    3. '(chain' → logprob: -4.295130252838135
    4. '(zip' → logprob: -7.670130252838135
    5. '(int' → logprob: -7.920130252838135
    6. '(tuple' → logprob: -8.170129776000977
    7. '(product' → logprob: -8.545129776000977
    8. '(range' → logprob: -8.920129776000977
    9. '()' → logprob: -9.795129776000977
    10. '(lambda' → logprob: -10.670129776000977

Token 81: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034595211036503315
    2. '(' → logprob: -8.625346183776855
    3. '(lambda' → logprob: -9.250346183776855
    4. 'int' → logprob: -10.000346183776855
    5. ')' → logprob: -11.875346183776855
    6. 'list' → logprob: -12.625346183776855
    7. '(tuple' → logprob: -12.750346183776855
    8. ')(' → logprob: -13.250346183776855
    9. '(str' → logprob: -13.250346183776855
    10. ',int' → logprob: -13.375346183776855

Token 82: ' l' (ID: 305)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4175107479095459
    2. ' int' → logprob: -1.167510747909546
    3. '(int' → logprob: -3.542510747909546
    4. ' lambda' → logprob: -7.667510986328125
    5. 'lambda' → logprob: -7.917510986328125
    6. ':int' → logprob: -8.792510986328125
    7. ',int' → logprob: -10.042510986328125
    8. '(lambda' → logprob: -10.167510986328125
    9. '<int' → logprob: -10.292510986328125
    10. '[int' → logprob: -10.542510986328125

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019619399681687355
    2. ' :' → logprob: -7.001961708068848
    3. ':l' → logprob: -7.626961708068848
    4. ':list' → logprob: -7.876961708068848
    5. ':int' → logprob: -9.001961708068848
    6. 'l' → logprob: -10.626961708068848
    7. 's' → logprob: -11.001961708068848
    8. ':
' → logprob: -12.376961708068848
    9. ' l' → logprob: -13.001961708068848
    10. ':str' → logprob: -13.001961708068848

Token 84: ' list' (ID: 1562)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2992613911628723
    2. 'list' → logprob: -1.7992613315582275
    3. 'tuple' → logprob: -3.0492613315582275
    4. 'int' → logprob: -3.5492613315582275
    5. ' lambda' → logprob: -4.174261569976807
    6. ' tuple' → logprob: -7.299261569976807
    7. ' list' → logprob: -7.424261569976807
    8. '(lambda' → logprob: -8.424261093139648
    9. ' int' → logprob: -9.674261093139648
    10. 'map' → logprob: -10.049261093139648

Token 85: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000365259445970878
    2. '(int' → logprob: -8.125365257263184
    3. 'map' → logprob: -10.250365257263184
    4. '(' → logprob: -10.625365257263184
    5. '(lambda' → logprob: -11.750365257263184
    6. '(input' → logprob: -14.500365257263184
    7. ',map' → logprob: -15.125365257263184
    8. ' map' → logprob: -15.250365257263184
    9. '	map' → logprob: -15.375365257263184
    10. 'int' → logprob: -16.0003662109375

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023035754566080868
    2. 'int' → logprob: -8.50023078918457
    3. '(' → logprob: -10.75023078918457
    4. ',int' → logprob: -13.00023078918457
    5. ')' → logprob: -14.75023078918457
    6. '<int' → logprob: -14.75023078918457
    7. '	int' → logprob: -14.87523078918457
    8. '=int' → logprob: -15.12523078918457
    9. '[int' → logprob: -15.25023078918457
    10. ']int' → logprob: -15.25023078918457

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5328569412231445
    2. ',l' → logprob: -0.9078569412231445
    3. ',input' → logprob: -5.1578569412231445
    4. '(l' → logprob: -6.2828569412231445
    5. 'l' → logprob: -6.7828569412231445
    6. ' ,' → logprob: -7.9078569412231445
    7. ',line' → logprob: -9.032856941223145
    8. ',(' → logprob: -9.532856941223145
    9. '(' → logprob: -9.657856941223145
    10. 'input' → logprob: -9.907856941223145

Token 88: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22558701038360596
    2. 'l' → logprob: -1.725587010383606
    3. ' input' → logprob: -3.8505868911743164
    4. ' l' → logprob: -6.100586891174316
    5. '(input' → logprob: -9.225586891174316
    6. ')' → logprob: -9.850586891174316
    7. ' ' → logprob: -9.975586891174316
    8. '	input' → logprob: -10.100586891174316
    9. 'lambda' → logprob: -10.225586891174316
    10. ',input' → logprob: -11.225586891174316

Token 89: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015082990750670433
    2. 'input' → logprob: -4.265082836151123
    3. '.split' → logprob: -7.765082836151123
    4. '(input' → logprob: -8.765083312988281
    5. 'split' → logprob: -9.265083312988281
    6. '()' → logprob: -9.890083312988281
    7. ' input' → logprob: -10.140083312988281
    8. '=input' → logprob: -10.765083312988281
    9. '.readline' → logprob: -11.015083312988281
    10. '.' → logprob: -11.015083312988281

Token 90: '()' (ID: 416)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.6526963710784912
    2. '()' → logprob: -1.0276963710784912
    3. '()))' → logprob: -2.152696371078491
    4. '())' → logprob: -6.77769660949707
    5. ')))' → logprob: -6.77769660949707
    6. '())))
' → logprob: -6.90269660949707
    7. '())),
' → logprob: -7.15269660949707
    8. '()),' → logprob: -7.65269660949707
    9. '()));' → logprob: -8.27769660949707
    10. '('' → logprob: -8.65269660949707

Token 91: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4503670036792755
    2. '()),' → logprob: -1.0753669738769531
    3. 'input' → logprob: -4.825366973876953
    4. '()' → logprob: -5.325366973876953
    5. ')),' → logprob: -5.575366973876953
    6. '(input' → logprob: -6.450366973876953
    7. ')' → logprob: -6.575366973876953
    8. '())' → logprob: -6.950366973876953
    9. ' ),' → logprob: -9.075366973876953
    10. '(),' → logprob: -9.075366973876953

Token 92: ' map' (ID: 4014)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4003029763698578
    2. 'sys' → logprob: -2.4003028869628906
    3. 'input' → logprob: -2.5253028869628906
    4. '[input' → logprob: -2.6503028869628906
    5. '[' → logprob: -3.0253028869628906
    6. '(is' → logprob: -4.400302886962891
    7. 'list' → logprob: -4.775302886962891
    8. 'chain' → logprob: -5.900302886962891
    9. '(sys' → logprob: -5.900302886962891
    10. ' is' → logprob: -6.275302886962891

Token 93: '(str' (ID: 7946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00027599421446211636
    2. 'input' → logprob: -8.250275611877441
    3. '(lambda' → logprob: -11.750275611877441
    4. '(' → logprob: -13.125275611877441
    5. '(sys' → logprob: -13.750275611877441
    6. ',input' → logprob: -13.875275611877441
    7. '=input' → logprob: -14.000275611877441
    8. ' input' → logprob: -14.375275611877441
    9. '<input' → logprob: -14.625275611877441
    10. '(str' → logprob: -14.875275611877441

Token 94: '.rstrip' (ID: 161629)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.30454370379447937
    2. '.strip' → logprob: -1.6795437335968018
    3. 'ipped' → logprob: -3.1795437335968018
    4. 'input' → logprob: -4.054543495178223
    5. '(input' → logprob: -5.054543495178223
    6. 'strip' → logprob: -5.804543495178223
    7. 'ip' → logprob: -5.929543495178223
    8. ',' → logprob: -6.304543495178223
    9. '.rstrip' → logprob: -6.554543495178223
    10. 'ipt' → logprob: -7.304543495178223

Token 95: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6339538097381592
    2. ',' → logprob: -0.7589538097381592
    3. 'input' → logprob: -7.133954048156738
    4. ' ,' → logprob: -7.883954048156738
    5. '(input' → logprob: -9.008954048156738
    6. ' input' → logprob: -10.883954048156738
    7. 'sys' → logprob: -11.383954048156738
    8. ' ' → logprob: -13.008954048156738
    9. 'import' → logprob: -13.258954048156738
    10. '  ' → logprob: -13.258954048156738

Token 96: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.28982052206993103
    2. 'input' → logprob: -1.6648205518722534
    3. 'is' → logprob: -3.039820432662964
    4. ' sys' → logprob: -5.164820671081543
    5. '(sys' → logprob: -5.539820671081543
    6. 'open' → logprob: -6.664820671081543
    7. '[' → logprob: -7.414820671081543
    8. 'iter' → logprob: -7.414820671081543
    9. ' input' → logprob: -7.664820671081543
    10. 'list' → logprob: -8.039820671081543

Token 97: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.055332425981760025
    2. 'sys' → logprob: -3.8053324222564697
    3. '[input' → logprob: -4.180332660675049
    4. 'is' → logprob: -4.555332660675049
    5. '(input' → logprob: -5.555332660675049
    6. '[' → logprob: -6.930332660675049
    7. ' input' → logprob: -8.18033218383789
    8. '(sys' → logprob: -8.30533218383789
    9. 'list' → logprob: -9.68033218383789
    10. 'open' → logprob: -10.30533218383789

Token 98: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3076736032962799
    2. ')' → logprob: -1.9326735734939575
    3. ' for' → logprob: -2.682673692703247
    4. 'for' → logprob: -3.057673692703247
    5. ')))' → logprob: -6.182673454284668
    6. '))))' → logprob: -7.057673454284668
    7. '))' → logprob: -7.307673454284668
    8. '()))' → logprob: -8.432673454284668
    9. '())' → logprob: -8.432673454284668
    10. ' ()' → logprob: -9.307673454284668

Token 99: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6542651057243347
    2. ' for' → logprob: -1.1542651653289795
    3. 'for' → logprob: -2.2792651653289795
    4. ')' → logprob: -2.7792651653289795
    5. '
' → logprob: -9.404265403747559
    6. ' ' → logprob: -9.529265403747559
    7. '))' → logprob: -9.654265403747559
    8. ' ()' → logprob: -10.029265403747559
    9. ')))' → logprob: -10.029265403747559
    10. '

' → logprob: -11.029265403747559

Token 100: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02981077879667282
    2. ' range' → logprob: -3.529810667037964
    3. '_' → logprob: -10.279810905456543
    4. '(range' → logprob: -11.154810905456543
    5. '	range' → logprob: -12.404810905456543
    6. ' ' → logprob: -12.904810905456543
    7. '  ' → logprob: -13.279810905456543
    8. '_range' → logprob: -13.529810905456543
    9. '   ' → logprob: -13.654810905456543
    10. ' xrange' → logprob: -14.904810905456543

Token 101: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02326737530529499
    2. ' range' → logprob: -3.7732672691345215
    3. '(range' → logprob: -11.14826774597168
    4. 'in' → logprob: -12.64826774597168
    5. ' in' → logprob: -12.77326774597168
    6. '	range' → logprob: -14.27326774597168
    7. ' ' → logprob: -14.89826774597168
    8. '  ' → logprob: -15.39826774597168
    9. ')' → logprob: -16.14826774597168
    10. '.range' → logprob: -17.14826774597168

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00030566859641112387
    2. ' range' → logprob: -8.125306129455566
    3. '(range' → logprob: -11.750306129455566
    4. '[' → logprob: -13.750306129455566
    5. '	range' → logprob: -14.750306129455566
    6. ')' → logprob: -16.25030517578125
    7. ' xrange' → logprob: -17.50030517578125
    8. 'x' → logprob: -17.50030517578125
    9. 'r' → logprob: -17.75030517578125
    10. '.range' → logprob: -18.12530517578125

Token 103: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0040887282229959965
    2. 'N' → logprob: -5.504088878631592
    3. '(' → logprob: -11.754088401794434
    4. ' N' → logprob: -14.004088401794434
    5. '	N' → logprob: -15.004088401794434
    6. ' (' → logprob: -15.129088401794434
    7. '   ' → logprob: -15.254088401794434
    8. ' ' → logprob: -15.379088401794434
    9. '  ' → logprob: -15.879088401794434
    10. '(n' → logprob: -16.12908935546875

Token 104: ')))))
' (ID: 190633)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.046133749186992645
    2. '))' → logprob: -3.2961337566375732
    3. ')))' → logprob: -4.921133518218994
    4. ')' → logprob: -7.546133518218994
    5. ')))))
' → logprob: -8.546133995056152
    6. '))))
' → logprob: -10.671133995056152
    7. '))))

' → logprob: -11.421133995056152
    8. ')))),' → logprob: -11.921133995056152
    9. ' ))' → logprob: -13.171133995056152
    10. ')))));
' → logprob: -13.546133995056152

Token 105: 'XD' (ID: 96737)
  Prédit: 'XD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.8718900680541992
    2. 'dp' → logprob: -1.6218900680541992
    3. 'DP' → logprob: -1.8718900680541992
    4. '#' → logprob: -3.496890068054199
    5. 'D' → logprob: -3.746890068054199
    6. 'd' → logprob: -3.871890068054199
    7. 'X' → logprob: -3.996890068054199
    8. 'def' → logprob: -4.121890068054199
    9. 'sorted' → logprob: -4.246890068054199
    10. '
' → logprob: -4.246890068054199

Token 106: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07900138199329376
    2. '(key' → logprob: -2.5790014266967773
    3. '(reverse' → logprob: -9.704001426696777
    4. '()
' → logprob: -10.579001426696777
    5. 'key' → logprob: -11.329001426696777
    6. '(lambda' → logprob: -12.204001426696777
    7. '(' → logprob: -12.204001426696777
    8. '();' → logprob: -14.454001426696777
    9. ' ()' → logprob: -14.579001426696777
    10. 'reverse' → logprob: -15.454001426696777

Token 108: 'MOD' (ID: 52135)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05971689894795418
    2. 'ans' → logprob: -4.309716701507568
    3. 'd' → logprob: -5.059716701507568
    4. 'answer' → logprob: -5.309716701507568
    5. 'dist' → logprob: -5.434716701507568
    6. 'D' → logprob: -5.559716701507568
    7. 'DP' → logprob: -5.684716701507568
    8. 'X' → logprob: -6.184716701507568
    9. 'x' → logprob: -6.309716701507568
    10. 'def' → logprob: -6.309716701507568

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018154622986912727
    2. '=' → logprob: -4.018154621124268
    3. ' ' → logprob: -12.643155097961426
    4. ' =
' → logprob: -13.768155097961426
    5. ' =)' → logprob: -15.268155097961426
    6. ',' → logprob: -16.51815414428711
    7. ' ' → logprob: -17.01815414428711
    8. ')' → logprob: -17.14315414428711
    9. ' ,' → logprob: -18.01815414428711
    10. '＝' → logprob: -18.39315414428711

Token 110: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01532132551074028
    2. ' ' → logprob: -4.515321254730225
    3. '100' → logprob: -5.515321254730225
    4. '998' → logprob: -8.390321731567383
    5. '1' → logprob: -11.890321731567383
    6. 'pow' → logprob: -13.015321731567383
    7. '(' → logprob: -14.015321731567383
    8. '999' → logprob: -14.640321731567383
    9. '200' → logprob: -15.015321731567383
    10. '123' → logprob: -15.140321731567383

Token 111: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.020714372396469116
    2. '100' → logprob: -4.520714282989502
    3. '998' → logprob: -4.645714282989502
    4. 'pow' → logprob: -11.64571475982666
    5. '1' → logprob: -12.14571475982666
    6. '(' → logprob: -13.64571475982666
    7. ' ' → logprob: -14.14571475982666
    8. 'int' → logprob: -14.77071475982666
    9. '200' → logprob: -15.52071475982666
    10. '2' → logprob: -15.89571475982666

Token 112: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.75000286102295
    3. '247' → logprob: -14.62500286102295
    4. '243' → logprob: -14.75000286102295
    5. ''' → logprob: -15.87500286102295
    6. '245' → logprob: -16.000001907348633
    7. '```' → logprob: -16.750001907348633
    8. '254' → logprob: -16.875001907348633
    9. '457' → logprob: -16.875001907348633
    10. '344' → logprob: -17.250001907348633

Token 113: '353' (ID: 32996)
  Prédit: '853'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '853' → logprob: -0.3886382579803467
    2. '353' → logprob: -1.1386382579803467
    3. '857' → logprob: -6.638638496398926
    4. '53' → logprob: -8.763638496398926
    5. '253' → logprob: -9.388638496398926
    6. '257' → logprob: -9.513638496398926
    7. '85' → logprob: -9.763638496398926
    8. '273' → logprob: -10.888638496398926
    9. '553' → logprob: -11.513638496398926
    10. '457' → logprob: -11.513638496398926

Token 114: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026890575885772705
    2. '
' → logprob: -4.776890754699707
    3. 'DP' → logprob: -4.776890754699707
    4. 'def' → logprob: -6.401890754699707
    5. ' dp' → logprob: -6.526890754699707
    6. 'x' → logprob: -6.901890754699707
    7. 'X' → logprob: -7.026890754699707
    8. ' 
' → logprob: -7.151890754699707
    9. 'd' → logprob: -7.276890754699707
    10. '#' → logprob: -7.901890754699707

Token 115: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013503242284059525
    2. '@' → logprob: -5.763503074645996
    3. 'class' → logprob: -6.638503074645996
    4. 'x' → logprob: -6.763503074645996
    5. 'd' → logprob: -7.263503074645996
    6. 'dist' → logprob: -7.263503074645996
    7. 'DP' → logprob: -7.388503074645996
    8. 'max' → logprob: -7.388503074645996
    9. 'a' → logprob: -7.513503074645996
    10. 'def' → logprob: -7.638503074645996

Token 116: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.45040205121040344
    2. ' dfs' → logprob: -1.700402021408081
    3. ' solve' → logprob: -1.950402021408081
    4. ' dp' → logprob: -4.95040225982666
    5. ' f' → logprob: -4.95040225982666
    6. ' factorial' → logprob: -5.20040225982666
    7. ' pow' → logprob: -5.32540225982666
    8. ' count' → logprob: -6.07540225982666
    9. ' calc' → logprob: -6.20040225982666
    10. 'solve' → logprob: -6.32540225982666

Token 117: '():
' (ID: 8595)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.09555776417255402
    2. '_factor' → logprob: -3.345557689666748
    3. '_segment' → logprob: -4.470557689666748
    4. '_array' → logprob: -5.220557689666748
    5. '_div' → logprob: -5.220557689666748
    6. '_list' → logprob: -5.345557689666748
    7. '_' → logprob: -5.345557689666748
    8. '_cache' → logprob: -5.470557689666748
    9. '_comb' → logprob: -6.220557689666748
    10. '_dist' → logprob: -6.720557689666748

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09985277056694031
    2. '<|end|>' → logprob: -2.8498528003692627
    3. '    
' → logprob: -4.349852561950684
    4. ' pass' → logprob: -4.599852561950684
    5. 'pass' → logprob: -5.349852561950684
    6. 'n' → logprob: -6.099852561950684
    7. '    ' → logprob: -6.349852561950684
    8. 'dp' → logprob: -6.849852561950684
    9. ' ' → logprob: -7.974852561950684
    10. '	pass' → logprob: -8.099852561950684

Token 119: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24135901033878326
    2. ' dp' → logprob: -1.616358995437622
    3. '   ' → logprob: -6.116359233856201
    4. ' pass' → logprob: -6.116359233856201
    5. 'd' → logprob: -6.616359233856201
    6. 'pass' → logprob: -6.991359233856201
    7. 'n' → logprob: -7.241359233856201
    8. ' f' → logprob: -7.491359233856201
    9. ' ans' → logprob: -7.491359233856201
    10. 'f' → logprob: -7.741359233856201

Token 120: ' Build' (ID: 10885)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.45551133155822754
    2. 'dp' → logprob: -1.4555113315582275
    3. ' pass' → logprob: -2.3305113315582275
    4. 'pass' → logprob: -4.580511093139648
    5. ' ans' → logprob: -6.455511093139648
    6. '...' → logprob: -6.455511093139648
    7. ' from' → logprob: -6.455511093139648
    8. '   ' → logprob: -6.580511093139648
    9. 'd' → logprob: -6.705511093139648
    10. 'DP' → logprob: -6.955511093139648

Token 121: ' edge' (ID: 11165)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6459800004959106
    2. ' dp' → logprob: -0.7709800004959106
    3. ' a' → logprob: -5.645979881286621
    4. ' pass' → logprob: -6.520979881286621
    5. ' the' → logprob: -7.020979881286621
    6. '_dp' → logprob: -7.270979881286621
    7. ' graph' → logprob: -7.520979881286621
    8. 'd' → logprob: -7.645979881286621
    9. '(dp' → logprob: -7.895979881286621
    10. '   ' → logprob: -8.145979881286621

Token 122: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020175233657937497
    2. '_list' → logprob: -8.875202178955078
    3. '[]' → logprob: -11.125202178955078
    4. 'list' → logprob: -11.250202178955078
    5. ' s' → logprob: -11.750202178955078
    6. 'ss' → logprob: -12.375202178955078
    7. '_s' → logprob: -12.875202178955078
    8. 'List' → logprob: -13.125202178955078
    9. 'S' → logprob: -13.750202178955078
    10. '_lists' → logprob: -13.875202178955078

Token 123: ' parent' (ID: 5980)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.3696284294128418
    2. 'dist' → logprob: -1.9946284294128418
    3. 'cost' → logprob: -1.9946284294128418
    4. 'node' → logprob: -2.119628429412842
    5. 'graph' → logprob: -2.244628429412842
    6. ' graph' → logprob: -2.869628429412842
    7. 'dp' → logprob: -2.869628429412842
    8. 'weight' → logprob: -3.619628429412842
    9. 'neighbor' → logprob: -4.244628429412842
    10. 'def' → logprob: -4.244628429412842

Token 124: ' using' (ID: 2360)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35539475083351135
    2. ' lists' → logprob: -2.2303948402404785
    3. '[]' → logprob: -2.7303948402404785
    4. '_list' → logprob: -2.9803948402404785
    5. 'lists' → logprob: -3.6053948402404785
    6. 'list' → logprob: -3.9803948402404785
    7. '_lists' → logprob: -4.1053948402404785
    8. '=[]' → logprob: -5.6053948402404785
    9. ' list' → logprob: -6.8553948402404785
    10. 'def' → logprob: -6.8553948402404785

Token 125: ' obscure' (ID: 77331)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.9027067422866821
    2. 'dfs' → logprob: -2.1527066230773926
    3. '[]' → logprob: -2.2777066230773926
    4. 'DFS' → logprob: -2.6527066230773926
    5. ' defaultdict' → logprob: -3.2777066230773926
    6. 'XD' → logprob: -3.2777066230773926
    7. ' DFS' → logprob: -3.4027066230773926
    8. 'b' → logprob: -3.6527066230773926
    9. 'union' → logprob: -4.027706623077393
    10. 'depth' → logprob: -4.402706623077393

Token 126: ' manip' (ID: 20526)
  Prédit: ' logic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.7952882647514343
    2. ' code' → logprob: -1.420288324356079
    3. ' dynamic' → logprob: -3.545288324356079
    4. 'dfs' → logprob: -3.670288324356079
    5. ' data' → logprob: -3.795288324356079
    6. ' adjacency' → logprob: -3.795288324356079
    7. ' recursion' → logprob: -3.920288324356079
    8. ' variable' → logprob: -4.0452880859375
    9. 'd' → logprob: -4.4202880859375
    10. ' graph' → logprob: -4.4202880859375

Token 127: 'ulations' (ID: 14571)
  Prédit: 'ulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -0.5817914605140686
    2. 'def' → logprob: -1.0817914009094238
    3. 'ulate' → logprob: -2.831791400909424
    4. 'ulations' → logprob: -4.831791400909424
    5. 'ent' → logprob: -4.956791400909424
    6. 'le' → logprob: -5.331791400909424
    7. 'lation' → logprob: -5.581791400909424
    8. 'entation' → logprob: -5.706791400909424
    9. 'ulated' → logprob: -5.831791400909424
    10. 'ule' → logprob: -5.831791400909424

Token 128: '
' (ID: 198)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3182520568370819
    2. ':' → logprob: -1.5682520866394043
    3. '()' → logprob: -3.3182520866394043
    4. '   ' → logprob: -5.068252086639404
    5. 'def' → logprob: -5.318252086639404
    6. '(' → logprob: -5.443252086639404
    7. '<|end|>' → logprob: -6.193252086639404
    8. '():
' → logprob: -6.318252086639404
    9. '.' → logprob: -7.068252086639404
    10. '):' → logprob: -7.068252086639404

Token 129: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8499749898910522
    2. '   ' → logprob: -1.3499749898910522
    3. 'def' → logprob: -1.7249749898910522
    4. '<|end|>' → logprob: -2.974975109100342
    5. '():' → logprob: -3.474975109100342
    6. '
' → logprob: -4.724975109100342
    7. ',' → logprob: -4.974975109100342
    8. '):' → logprob: -5.474975109100342
    9. ' for' → logprob: -5.599975109100342
    10. ':
' → logprob: -5.599975109100342

Token 130: ' indices' (ID: 30378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5678362846374512
    2. 'edges' → logprob: -2.567836284637451
    3. ' edges' → logprob: -2.567836284637451
    4. ' pass' → logprob: -3.317836284637451
    5. ' graph' → logprob: -3.442836284637451
    6. 'dp' → logprob: -3.567836284637451
    7. 'edge' → logprob: -3.567836284637451
    8. ' edge' → logprob: -3.942836284637451
    9. 'graph' → logprob: -4.192836284637451
    10. '<|end|>' → logprob: -4.317836284637451

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6369507312774658
    2. '=' → logprob: -0.7619507312774658
    3. ',' → logprob: -5.636950492858887
    4. ')' → logprob: -7.761950492858887
    5. '<|end|>' → logprob: -9.386950492858887
    6. '=[]' → logprob: -10.011950492858887
    7. '<|end|>' → logprob: -10.136950492858887
    8. '_' → logprob: -11.011950492858887
    9. ']' → logprob: -11.136950492858887
    10. '[' → logprob: -11.261950492858887

Token 132: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21558400988578796
    2. '[' → logprob: -2.5905840396881104
    3. 'range' → logprob: -2.5905840396881104
    4. '[list' → logprob: -4.465583801269531
    5. 'default' → logprob: -4.965583801269531
    6. ' list' → logprob: -5.090583801269531
    7. '{' → logprob: -5.215583801269531
    8. ' range' → logprob: -5.840583801269531
    9. '[]' → logprob: -5.840583801269531
    10. ' [' → logprob: -6.215583801269531

Token 133: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.618001053633634e-05
    2. 'range' → logprob: -11.125025749206543
    3. '(chain' → logprob: -11.625025749206543
    4. '(map' → logprob: -13.625025749206543
    5. '(' → logprob: -13.750025749206543
    6. ' range' → logprob: -16.62502670288086
    7. '()' → logprob: -16.62502670288086
    8. '({' → logprob: -17.62502670288086
    9. '(sorted' → logprob: -17.62502670288086
    10. '	range' → logprob: -17.75002670288086

Token 134: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011967786122113466
    2. '(len' → logprob: -7.50119686126709
    3. 'N' → logprob: -8.00119686126709
    4. '(' → logprob: -8.25119686126709
    5. 'len' → logprob: -10.62619686126709
    6. '(n' → logprob: -11.25119686126709
    7. ')' → logprob: -13.37619686126709
    8. '1' → logprob: -13.75119686126709
    9. '(X' → logprob: -14.00119686126709
    10. '(-' → logprob: -14.00119686126709

Token 135: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003912764601409435
    2. '))
' → logprob: -5.628912925720215
    3. ')' → logprob: -8.878912925720215
    4. '))

' → logprob: -10.003912925720215
    5. ' ))' → logprob: -10.253912925720215
    6. '-' → logprob: -10.378912925720215
    7. ')))' → logprob: -10.753912925720215
    8. '+' → logprob: -11.128912925720215
    9. '[' → logprob: -12.253912925720215
    10. '));' → logprob: -12.378912925720215

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. '2' → logprob: -13.500012397766113
    4. '-' → logprob: -15.750012397766113
    5. '```' → logprob: -16.250011444091797
    6. ')' → logprob: -16.750011444091797
    7. '3' → logprob: -17.187511444091797
    8. '(' → logprob: -17.250011444091797
    9. '0' → logprob: -17.500011444091797
    10. '4' → logprob: -17.625011444091797

Token 137: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011823695385828614
    2. ',' → logprob: -7.626182556152344
    3. ' ))' → logprob: -8.376182556152344
    4. ')' → logprob: -8.501182556152344
    5. '))
' → logprob: -8.751182556152344
    6. '+' → logprob: -10.126182556152344
    7. ')))' → logprob: -11.126182556152344
    8. '))

' → logprob: -11.126182556152344
    9. '));' → logprob: -11.751182556152344
    10. '-' → logprob: -11.876182556152344

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.040649693459272385
    2. ' -' → logprob: -3.290649652481079
    3. '0' → logprob: -6.040649890899658
    4. ' ' → logprob: -8.4156494140625
    5. '
' → logprob: -13.7906494140625
    6. '-n' → logprob: -15.0406494140625
    7. '-d' → logprob: -15.1656494140625
    8. '1' → logprob: -15.1656494140625
    9. '-N' → logprob: -15.4156494140625
    10. '```' → logprob: -15.6656494140625

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -14.687501907348633
    3. '2' → logprob: -14.937501907348633
    4. ' ' → logprob: -14.937501907348633
    5. '```' → logprob: -15.312501907348633
    6. 'len' → logprob: -16.250001907348633
    7. 'N' → logprob: -16.250001907348633
    8. '0' → logprob: -16.437501907348633
    9. '

' → logprob: -16.562501907348633
    10. ' -' → logprob: -16.625001907348633

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020255891140550375
    2. '-' → logprob: -6.377025604248047
    3. ',-' → logprob: -8.127025604248047
    4. ' ,' → logprob: -11.627025604248047
    5. ')' → logprob: -12.002025604248047
    6. ' -' → logprob: -12.002025604248047
    7. '```' → logprob: -13.627025604248047
    8. 'step' → logprob: -13.877025604248047
    9. 'Step' → logprob: -13.877025604248047
    10. ',
' → logprob: -13.877025604248047

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019288709154352546
    2. ' -' → logprob: -6.251928806304932
    3. '1' → logprob: -15.50192928314209
    4. ' ' → logprob: -16.876928329467773
    5. '```' → logprob: -18.376928329467773
    6. '   ' → logprob: -18.626928329467773
    7. ')' → logprob: -19.001928329467773
    8. '
' → logprob: -19.251928329467773
    9. '-step' → logprob: -19.376928329467773
    10. '0' → logprob: -19.626928329467773

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '2' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '```' → logprob: -16.312503814697266
    5. '
' → logprob: -16.375003814697266
    6. '3' → logprob: -16.500003814697266
    7. '-' → logprob: -16.562503814697266
    8. '0' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.062503814697266
    10. ')' → logprob: -17.125003814697266

Token 143: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07028840482234955
    2. ')' → logprob: -2.6952884197235107
    3. '):' → logprob: -8.57028865814209
    4. '))
' → logprob: -10.07028865814209
    5. ')):' → logprob: -10.19528865814209
    6. ')))' → logprob: -10.94528865814209
    7. ',' → logprob: -11.07028865814209
    8. ' ))' → logprob: -11.57028865814209
    9. '))

' → logprob: -12.07028865814209
    10. '));' → logprob: -12.07028865814209

Token 144: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23418784141540527
    2. '<|end|>' → logprob: -2.7341878414154053
    3. '
' → logprob: -2.9841878414154053
    4. ' for' → logprob: -3.8591878414154053
    5. '   ' → logprob: -3.8591878414154053
    6. 'def' → logprob: -4.234188079833984
    7. 'for' → logprob: -4.359188079833984
    8. ':' → logprob: -5.359188079833984
    9. ' ' → logprob: -5.484188079833984
    10. '):' → logprob: -6.359188079833984

Token 145: ' edge' (ID: 11165)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5477972030639648
    2. ' stack' → logprob: -1.6727972030639648
    3. 'stack' → logprob: -2.172797203063965
    4. '   ' → logprob: -2.797797203063965
    5. ' parent' → logprob: -3.047797203063965
    6. 'edge' (adapté à ' edge') → logprob: -3.297797203063965
    7. ' edge' → logprob: -3.297797203063965
    8. 'prev' → logprob: -3.547797203063965
    9. 'parent' → logprob: -3.672797203063965
    10. ' edges' → logprob: -3.672797203063965

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36046862602233887
    2. ' =' → logprob: -1.2354686260223389
    3. 's' → logprob: -4.485468864440918
    4. '=[]' → logprob: -7.860468864440918
    5. ',' → logprob: -8.360468864440918
    6. ')' → logprob: -11.360468864440918
    7. ' ' → logprob: -11.485468864440918
    8. '=[]
' → logprob: -12.235468864440918
    9. '_' → logprob: -12.235468864440918
    10. '[' → logprob: -12.485468864440918

Token 147: ' defaultdict' (ID: 107098)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9412575364112854
    2. '[' → logprob: -1.1912574768066406
    3. 'default' → logprob: -1.1912574768066406
    4. '[[' → logprob: -6.941257476806641
    5. ' [[]' → logprob: -7.566257476806641
    6. ' defaultdict' → logprob: -9.19125747680664
    7. '{' → logprob: -9.44125747680664
    8. '[-' → logprob: -9.44125747680664
    9. ' []' → logprob: -9.56625747680664
    10. '[]}' → logprob: -9.69125747680664

Token 148: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.043905109167099
    2. 'list' → logprob: -3.168905019760132
    3. '(set' → logprob: -7.293905258178711
    4. '(lambda' → logprob: -9.418905258178711
    5. 'set' → logprob: -9.668905258178711
    6. '(<' → logprob: -10.293905258178711
    7. '(int' → logprob: -11.168905258178711
    8. ':list' → logprob: -11.168905258178711
    9. '(' → logprob: -12.418905258178711
    10. 'int' → logprob: -12.668905258178711

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07029340416193008
    2. ')
' → logprob: -2.695293426513672
    3. '   ' → logprob: -8.195293426513672
    4. ')

' → logprob: -10.320293426513672
    5. '())' → logprob: -11.195293426513672
    6. ')
' → logprob: -11.695293426513672
    7. '())
' → logprob: -12.320293426513672
    8. 'def' → logprob: -12.570293426513672
    9. ' )' → logprob: -12.570293426513672
    10. '()' → logprob: -12.695293426513672

Token 150: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.52301025390625
    2. 'for' → logprob: -1.14801025390625
    3. '   ' → logprob: -3.02301025390625
    4. '<|end|>' → logprob: -4.02301025390625
    5. ')' → logprob: -4.52301025390625
    6. 'parent' → logprob: -5.52301025390625
    7. 'def' → logprob: -6.89801025390625
    8. 'stack' → logprob: -6.89801025390625
    9. 'prev' → logprob: -7.02301025390625
    10. 'p' → logprob: -7.52301025390625

Token 151: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.46539461612701416
    2. 'stack' → logprob: -1.5903946161270142
    3. 'for' → logprob: -2.3403944969177246
    4. 'par' → logprob: -3.2153944969177246
    5. 'parents' → logprob: -4.340394496917725
    6. 'p' → logprob: -5.215394496917725
    7. 'edge' → logprob: -5.965394496917725
    8. 'paren' → logprob: -6.590394496917725
    9. 'stk' → logprob: -7.090394496917725
    10. 'depth' → logprob: -7.215394496917725

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004623918328434229
    2. ' =' → logprob: -5.379623889923096
    3. '=[]' → logprob: -13.254624366760254
    4. '={}' → logprob: -14.254624366760254
    5. ')' → logprob: -14.379624366760254
    6. '[' → logprob: -14.629624366760254
    7. '   ' → logprob: -16.129623413085938
    8. ':' → logprob: -16.504623413085938
    9. ']' → logprob: -16.754623413085938
    10. ' ' → logprob: -17.004623413085938

Token 153: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.15926983952522278
    2. '[' → logprob: -2.0342698097229004
    3. 'default' → logprob: -4.7842698097229
    4. '{}' → logprob: -5.7842698097229
    5. '[N' → logprob: -6.0342698097229
    6. '{' → logprob: -6.1592698097229
    7. ' [-' → logprob: -8.909270286560059
    8. '{-' → logprob: -9.159270286560059
    9. 'dict' → logprob: -9.534270286560059
    10. 'list' → logprob: -9.784270286560059

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '2' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '10' → logprob: -16.3750057220459
    5. 'N' → logprob: -17.2500057220459
    6. '-' → logprob: -17.2500057220459
    7. '(' → logprob: -17.8750057220459
    8. '   ' → logprob: -17.8750057220459
    9. '
' → logprob: -18.3750057220459
    10. '11' → logprob: -18.9375057220459

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017199289053678513
    2. ' for' → logprob: -4.392199516296387
    3. 'for' → logprob: -6.267199516296387
    4. ']*(' → logprob: -6.267199516296387
    5. ']*' → logprob: -7.267199516296387
    6. ' ]' → logprob: -8.767199516296387
    7. ')' → logprob: -11.017199516296387
    8. ')]' → logprob: -12.392199516296387
    9. ']+' → logprob: -12.892199516296387
    10. ',' → logprob: -13.517199516296387

Token 156: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4066021740436554
    2. 'for' → logprob: -1.156602144241333
    3. ' *' → logprob: -4.906602382659912
    4. '*' → logprob: -5.531602382659912
    5. '(N' → logprob: -6.531602382659912
    6. ']' → logprob: -6.656602382659912
    7. '*(' → logprob: -6.906602382659912
    8. '[N' → logprob: -7.156602382659912
    9. '+' → logprob: -7.281602382659912
    10. '*N' → logprob: -7.531602382659912

Token 157: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00019626895664259791
    2. '(N' → logprob: -8.62519645690918
    3. '(' → logprob: -11.37519645690918
    4. ' N' → logprob: -12.50019645690918
    5. ' (' → logprob: -14.12519645690918
    6. '
' → logprob: -15.37519645690918
    7. '   ' → logprob: -15.75019645690918
    8. '((' → logprob: -16.25019645690918
    9. ' ' → logprob: -17.12519645690918
    10. '	N' → logprob: -17.37519645690918

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17193374037742615
    2. ' for' → logprob: -2.546933650970459
    3. 'for' → logprob: -3.296933650970459
    4. '
' → logprob: -3.796933650970459
    5. '<|end|>' → logprob: -4.546933650970459
    6. '    
' → logprob: -5.171933650970459
    7. 'def' → logprob: -6.546933650970459
    8. ')' → logprob: -7.421933650970459
    9. '	for' → logprob: -7.921933650970459
    10. 'indices' → logprob: -8.921934127807617

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4287165701389313
    2. ' for' → logprob: -1.6787165403366089
    3. 'for' → logprob: -2.3037166595458984
    4. '<|end|>' → logprob: -3.3037166595458984
    5. '    
' → logprob: -4.553716659545898
    6. ')' → logprob: -5.928716659545898
    7. '    ' → logprob: -6.178716659545898
    8. 'def' → logprob: -6.303716659545898
    9. '
' → logprob: -6.428716659545898
    10. ' ' → logprob: -6.428716659545898

Token 160: ' MAX' (ID: 16960)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09491343051195145
    2. 'stack' → logprob: -2.4699134826660156
    3. ' for' → logprob: -5.469913482666016
    4. '   ' → logprob: -7.594913482666016
    5. ' stack' → logprob: -8.469913482666016
    6. 'depth' → logprob: -8.594913482666016
    7. 'dp' → logprob: -9.094913482666016
    8. 'return' → logprob: -9.469913482666016
    9. 'i' → logprob: -9.594913482666016
    10. 'def' → logprob: -9.844913482666016

Token 161: 'IDX' (ID: 107492)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5186367034912109
    2. '_DIST' → logprob: -2.018636703491211
    3. '_D' → logprob: -2.893636703491211
    4. 'd' → logprob: -3.143636703491211
    5. ' =' → logprob: -3.518636703491211
    6. 'DIST' → logprob: -3.643636703491211
    7. 'dist' → logprob: -4.018636703491211
    8. '_VAL' → logprob: -4.143636703491211
    9. 'X' → logprob: -4.268636703491211
    10. '_X' → logprob: -4.393636703491211

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523347795009613
    2. ' =' → logprob: -0.898347795009613
    3. ']' → logprob: -9.023347854614258
    4. ')' → logprob: -10.023347854614258
    5. '   ' → logprob: -10.898347854614258
    6. ',' → logprob: -11.523347854614258
    7. '_' → logprob: -12.398347854614258
    8. ' ' → logprob: -12.398347854614258
    9. '-' → logprob: -12.523347854614258
    10. 'idx' → logprob: -12.648347854614258

Token 163: ' [' (ID: 723)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22811231017112732
    2. '10' → logprob: -1.8531123399734497
    3. 'float' → logprob: -4.35311222076416
    4. '0' → logprob: -4.47811222076416
    5. '100' → logprob: -5.22811222076416
    6. '1' → logprob: -5.60311222076416
    7. '2' → logprob: -5.85311222076416
    8. ' ' → logprob: -5.97811222076416
    9. '35' → logprob: -6.47811222076416
    10. ' N' → logprob: -6.47811222076416

Token 164: 'N' (ID: 45)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47874903678894043
    2. '0' → logprob: -1.1037490367889404
    3. 'N' → logprob: -3.3537490367889404
    4. 'float' → logprob: -4.8537492752075195
    5. 'XD' → logprob: -5.9787492752075195
    6. '10' → logprob: -6.8537492752075195
    7. '-N' → logprob: -7.4787492752075195
    8. 'None' → logprob: -7.8537492752075195
    9. '[' → logprob: -8.47874927520752
    10. '[-' → logprob: -8.85374927520752

Token 165: ']

' (ID: 3144)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34556204080581665
    2. ']' → logprob: -1.3455619812011719
    3. ' -' → logprob: -3.470561981201172
    4. ']*' → logprob: -7.845561981201172
    5. ')' → logprob: -9.470561981201172
    6. '0' → logprob: -9.845561981201172
    7. '*' → logprob: -10.220561981201172
    8. ' ]' → logprob: -10.845561981201172
    9. '+' → logprob: -10.970561981201172
    10. '1' → logprob: -11.095561981201172

Token 166: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7283269166946411
    2. '   ' → logprob: -0.8533269166946411
    3. '<|end|>' → logprob: -3.2283267974853516
    4. 'def' → logprob: -3.8533267974853516
    5. ' for' → logprob: -4.603326797485352
    6. '    
' → logprob: -4.728326797485352
    7. 'for' → logprob: -5.853326797485352
    8. ')' → logprob: -5.853326797485352
    9. '  
' → logprob: -6.853326797485352
    10. '[' → logprob: -7.478326797485352

Token 167: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.146793007850647
    2. 'for' → logprob: -1.146793007850647
    3. ' for' → logprob: -1.396793007850647
    4. ')' → logprob: -2.3967928886413574
    5. 'def' → logprob: -4.271792888641357
    6. ']' → logprob: -5.896792888641357
    7. 'stack' → logprob: -6.646792888641357
    8. '    
' → logprob: -6.896792888641357
    9. ')
' → logprob: -7.396792888641357
    10. ' def' → logprob: -7.521792888641357

Token 168: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8427167534828186
    2. ' =' → logprob: -0.9677167534828186
    3. '=' → logprob: -1.8427166938781738
    4. 'D' → logprob: -5.092716693878174
    5. 'prev' → logprob: -5.717716693878174
    6. 's' → logprob: -5.967716693878174
    7. 'for' → logprob: -6.217716693878174
    8. ')' → logprob: -6.342716693878174
    9. 'idx' → logprob: -6.592716693878174
    10. '_idx' → logprob: -6.592716693878174

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16174869239330292
    2. ' =' → logprob: -2.1617486476898193
    3. ',' → logprob: -3.4117486476898193
    4. ')' → logprob: -6.911748886108398
    5. '=[]' → logprob: -9.786748886108398
    6. '   ' → logprob: -10.786748886108398
    7. ']' → logprob: -10.786748886108398
    8. ' ,' → logprob: -11.036748886108398
    9. ')=' → logprob: -11.161748886108398
    10. '[' → logprob: -11.161748886108398

Token 170: ' tuple' (ID: 31311)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23169627785682678
    2. '[list' → logprob: -1.9816962480545044
    3. '[X' → logprob: -3.481696367263794
    4. ' [' → logprob: -3.981696367263794
    5. 'list' → logprob: -4.231696128845215
    6. '[x' → logprob: -5.856696128845215
    7. '[i' → logprob: -7.856696128845215
    8. 'set' → logprob: -8.481696128845215
    9. '[len' → logprob: -8.481696128845215
    10. '[N' → logprob: -8.981696128845215

Token 171: '(map' (ID: 16946)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05754442512989044
    2. 'x' → logprob: -3.057544469833374
    3. 'd' → logprob: -5.682544231414795
    4. '(d' → logprob: -6.182544231414795
    5. '(map' → logprob: -6.557544231414795
    6. '([' → logprob: -7.557544231414795
    7. 'map' → logprob: -7.682544231414795
    8. 'xd' → logprob: -7.932544231414795
    9. '(zip' → logprob: -8.682544708251953
    10. 'XD' → logprob: -9.307544708251953

Token 172: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0024978946894407272
    2. '(operator' → logprob: -6.002497673034668
    3. '(int' → logprob: -11.502497673034668
    4. '(' → logprob: -12.377497673034668
    5. '(item' → logprob: -12.877497673034668
    6. 'lambda' → logprob: -13.252497673034668
    7. '((' → logprob: -13.377497673034668
    8. '(list' → logprob: -14.377497673034668
    9. '(tuple' → logprob: -14.627497673034668
    10. '=lambda' → logprob: -15.502497673034668

Token 173: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010421930812299252
    2. ' lambda' → logprob: -4.7604217529296875
    3. '(lambda' → logprob: -6.6354217529296875
    4. 'operator' → logprob: -7.7604217529296875
    5. 'l' → logprob: -10.885421752929688
    6. 'item' → logprob: -11.385421752929688
    7. 'x' → logprob: -11.635421752929688
    8. '   ' → logprob: -12.385421752929688
    9. ' ' → logprob: -12.760421752929688
    10. 'idx' → logprob: -12.760421752929688

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003047343110665679
    2. 'p' → logprob: -6.253047466278076
    3. ' p' → logprob: -7.503047466278076
    4. ':p' → logprob: -7.753047466278076
    5. ' :' → logprob: -9.253046989440918
    6. '[' → logprob: -11.253046989440918
    7. 'X' → logprob: -12.003046989440918
    8. 's' → logprob: -12.753046989440918
    9. ':X' → logprob: -12.753046989440918
    10. ':
' → logprob: -12.878046989440918

Token 175: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004104523453861475
    2. ' p' → logprob: -5.5041046142578125
    3. 'lambda' → logprob: -10.754104614257812
    4. ' lambda' → logprob: -13.379104614257812
    5. 'int' → logprob: -14.004104614257812
    6. 'operator' → logprob: -14.504104614257812
    7. ')p' → logprob: -15.504104614257812
    8. 'XD' → logprob: -15.504104614257812
    9. '	p' → logprob: -15.629104614257812
    10. '(p' → logprob: -15.754104614257812

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09346155822277069
    2. ':' → logprob: -2.718461513519287
    3. 'p' → logprob: -3.968461513519287
    4. '0' → logprob: -5.968461513519287
    5. ' p' → logprob: -6.843461513519287
    6. '__' → logprob: -8.593461990356445
    7. ' :' → logprob: -8.843461990356445
    8. ' ' → logprob: -9.593461990356445
    9. 's' → logprob: -9.968461990356445
    10. '__[' → logprob: -10.218461990356445

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.625033378601074
    3. '[' → logprob: -12.875033378601074
    4. '1' → logprob: -12.875033378601074
    5. '
' → logprob: -13.125033378601074
    6. 'lambda' → logprob: -14.875033378601074
    7. ':' → logprob: -15.125033378601074
    8. '   ' → logprob: -15.250033378601074
    9. '```' → logprob: -15.750033378601074
    10. ')' → logprob: -15.875033378601074

Token 178: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004088966641575098
    2. '],' → logprob: -6.379088878631592
    3. '),' → logprob: -6.629088878631592
    4. ' ,' → logprob: -7.754088878631592
    5. '   ' → logprob: -8.37908935546875
    6. ',X' → logprob: -8.62908935546875
    7. ',p' → logprob: -9.12908935546875
    8. ',
' → logprob: -10.75408935546875
    9. '  ' → logprob: -11.25408935546875
    10. ',x' → logprob: -11.50408935546875

Token 179: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.0011745095252990723
    2. ' XD' → logprob: -6.751174449920654
    3. 'Xd' → logprob: -13.001174926757812
    4. 'X' → logprob: -14.751174926757812
    5. 'xd' → logprob: -14.751174926757812
    6. '
' → logprob: -15.251174926757812
    7. '   ' → logprob: -15.376174926757812
    8. ' ' → logprob: -15.501174926757812
    9. 'QD' → logprob: -15.751174926757812
    10. ')' → logprob: -16.876174926757812

Token 180: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002625278721097857
    2. '))
' → logprob: -8.375262260437012
    3. ')' → logprob: -11.125262260437012
    4. ' ))' → logprob: -11.750262260437012
    5. ')))' → logprob: -12.625262260437012
    6. '))

' → logprob: -13.125262260437012
    7. '));' → logprob: -13.875262260437012
    8. '),' → logprob: -14.375262260437012
    9. '()))' → logprob: -14.375262260437012
    10. ' ' → logprob: -14.500262260437012

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6463215947151184
    2. ')' → logprob: -0.7713215947151184
    3. '
' → logprob: -5.271321773529053
    4. '<|end|>' → logprob: -6.146321773529053
    5. '    
' → logprob: -6.396321773529053
    6. ')
' → logprob: -6.646321773529053
    7. ' )' → logprob: -6.896321773529053
    8. 'def' → logprob: -7.146321773529053
    9. ' for' → logprob: -7.896321773529053
    10. '  
' → logprob: -8.396321296691895

Token 182: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5413002967834473
    2. ' for' → logprob: -1.1663002967834473
    3. '   ' → logprob: -3.1663002967834473
    4. 'stack' → logprob: -3.5413002967834473
    5. 'dp' → logprob: -5.291300296783447
    6. ' stack' → logprob: -5.416300296783447
    7. ')' → logprob: -5.541300296783447
    8. 'def' (adapté à ' def') → logprob: -5.666300296783447
    9. 'prev' → logprob: -5.666300296783447
    10. 'last' → logprob: -6.041300296783447

Token 183: ' within' (ID: 3518)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5307233333587646
    2. 'dfs' → logprob: -1.9057233333587646
    3. ' find' → logprob: -2.6557233333587646
    4. ' binary' → logprob: -3.5307233333587646
    5. ' l' → logprob: -3.9057233333587646
    6. ' search' → logprob: -4.405723571777344
    7. ' rec' → logprob: -4.655723571777344
    8. ' get' → logprob: -4.655723571777344
    9. ' dist' → logprob: -4.905723571777344
    10. ' f' → logprob: -4.905723571777344

Token 184: '_bounds' (ID: 90408)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3220033049583435
    2. '(p' → logprob: -1.5720033645629883
    3. '(' → logprob: -4.197003364562988
    4. '(i' → logprob: -4.697003364562988
    5. 'x' → logprob: -5.072003364562988
    6. 'distance' → logprob: -5.072003364562988
    7. 'def' → logprob: -5.447003364562988
    8. '(a' → logprob: -5.822003364562988
    9. '(pos' → logprob: -6.322003364562988
    10. 'd' → logprob: -6.447003364562988

Token 185: '(x' (ID: 4061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.706130862236023
    2. '(x' → logprob: -0.706130862236023
    3. '(idx' → logprob: -4.7061309814453125
    4. '(' → logprob: -6.4561309814453125
    5. '(l' → logprob: -7.0811309814453125
    6. '(pos' → logprob: -7.0811309814453125
    7. '(a' → logprob: -8.581130981445312
    8. '(p' → logprob: -9.081130981445312
    9. '(ix' → logprob: -9.081130981445312
    10. '(X' → logprob: -10.081130981445312

Token 186: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035506547428667545
    2. '):' → logprob: -5.8785505294799805
    3. ' ,' → logprob: -7.6285505294799805
    4. ',x' → logprob: -9.50355052947998
    5. ',y' → logprob: -10.25355052947998
    6. '):
' → logprob: -10.25355052947998
    7. ',i' → logprob: -10.50355052947998
    8. ',pos' → logprob: -11.00355052947998
    9. ':' → logprob: -11.50355052947998
    10. ',k' → logprob: -12.00355052947998

Token 187: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022935036569833755
    2. '<|end|>' → logprob: -4.272934913635254
    3. ' return' → logprob: -5.147934913635254
    4. '   ' → logprob: -6.272934913635254
    5. ' ' → logprob: -8.147934913635254
    6. '    ' → logprob: -8.272934913635254
    7. ' 
' → logprob: -9.397934913635254
    8. 'return' → logprob: -9.397934913635254
    9. '	return' → logprob: -9.772934913635254
    10. '<|end|>' → logprob: -9.897934913635254

Token 188: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6399449110031128
    2. ' return' → logprob: -0.8899449110031128
    3. '       ' → logprob: -3.0149450302124023
    4. '   ' → logprob: -4.514945030212402
    5. '	return' → logprob: -6.389945030212402
    6. ' x' → logprob: -9.264945030212402
    7. '    ' → logprob: -9.389945030212402
    8. 'x' → logprob: -10.264945030212402
    9. '<|end|>' → logprob: -10.389945030212402
    10. ' ' → logprob: -10.889945030212402

Token 189: ' Artificial' (ID: 79912)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2737824618816376
    2. 'return' → logprob: -1.64878249168396
    3. '   ' → logprob: -3.14878249168396
    4. '       ' → logprob: -5.648782253265381
    5. ' x' → logprob: -8.398782730102539
    6. '	return' → logprob: -8.398782730102539
    7. '    ' → logprob: -8.773782730102539
    8. ' ' → logprob: -10.273782730102539
    9. ' for' → logprob: -10.273782730102539
    10. 'x' → logprob: -10.273782730102539

Token 190: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3298964500427246
    2. '   ' → logprob: -1.8298964500427246
    3. ')' → logprob: -3.0798964500427246
    4. ' def' → logprob: -3.4548964500427246
    5. ' limit' → logprob: -4.079896450042725
    6. 'ly' → logprob: -5.204896450042725
    7. 'limit' → logprob: -5.704896450042725
    8. ' limits' → logprob: -6.204896450042725
    9. ' )' → logprob: -6.329896450042725
    10. ' function' → logprob: -6.704896450042725

Token 191: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1708418130874634
    2. '(x' → logprob: -1.4208418130874634
    3. '<|end|>' → logprob: -1.5458418130874634
    4. '(' → logprob: -2.045841693878174
    5. '   ' → logprob: -2.795841693878174
    6. '(token' → logprob: -4.420841693878174
    7. ':
' → logprob: -5.295841693878174
    8. '):' → logprob: -5.670841693878174
    9. '<|end|>' → logprob: -5.670841693878174
    10. '(
' → logprob: -5.795841693878174

Token 192: ' min' (ID: 1349)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17437785863876343
    2. ' x' → logprob: -2.049377918243408
    3. 'def' → logprob: -5.299377918243408
    4. 'checking' → logprob: -5.549377918243408
    5. ' checking' → logprob: -5.674377918243408
    6. '   ' → logprob: -5.799377918243408
    7. 'return' → logprob: -6.424377918243408
    8. '0' → logprob: -6.549377918243408
    9. 'True' → logprob: -6.549377918243408
    10. ')' → logprob: -6.549377918243408

Token 193: ' boundary' (ID: 35021)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7560492753982544
    2. 'def' → logprob: -1.5060492753982544
    3. ',' → logprob: -2.631049156188965
    4. '   ' → logprob: -3.256049156188965
    5. 'x' → logprob: -3.256049156188965
    6. 'max' → logprob: -3.381049156188965
    7. '_x' → logprob: -3.506049156188965
    8. 'and' → logprob: -3.881049156188965
    9. '(x' → logprob: -4.506049156188965
    10. 'idx' → logprob: -4.631049156188965

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1494596302509308
    2. '(x' → logprob: -2.7744596004486084
    3. '<|end|>' → logprob: -4.2744598388671875
    4. '):' → logprob: -4.3994598388671875
    5. 'x' → logprob: -4.8994598388671875
    6. ':' → logprob: -5.0244598388671875
    7. 'def' → logprob: -5.0244598388671875
    8. '):
' → logprob: -5.1494598388671875
    9. ')' → logprob: -5.2744598388671875
    10. ' ' → logprob: -6.1494598388671875

Token 195: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5290629863739014
    2. '       ' → logprob: -1.2790629863739014
    3. '<|end|>' → logprob: -2.9040629863739014
    4. ':' → logprob: -3.2790629863739014
    5. ' ' → logprob: -4.2790632247924805
    6. ')' → logprob: -4.7790632247924805
    7. '    ' → logprob: -5.4040632247924805
    8. '(' → logprob: -6.0290632247924805
    9. '):' → logprob: -6.4040632247924805
    10. ':
' → logprob: -6.5290632247924805

Token 196: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6773390769958496
    2. ' return' → logprob: -0.9273390769958496
    3. 'return' (adapté à ' return') → logprob: -2.5523390769958496
    4. '       ' → logprob: -4.05233907699585
    5. ' if' → logprob: -7.67733907699585
    6. '    ' → logprob: -8.052339553833008
    7. ' for' → logprob: -9.052339553833008
    8. '	return' → logprob: -9.677339553833008
    9. 'if' → logprob: -10.177339553833008
    10. ' x' → logprob: -10.677339553833008

Token 197: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3377116918563843
    2. 'max' → logprob: -2.087711811065674
    3. ' max' → logprob: -2.837711811065674
    4. 'x' → logprob: -3.587711811065674
    5. 'min' → logprob: -3.587711811065674
    6. ' ' → logprob: -4.087711811065674
    7. ' min' → logprob: -4.212711811065674
    8. ' x' → logprob: -4.587711811065674
    9. 'X' → logprob: -6.337711811065674
    10. '-' → logprob: -7.212711811065674

Token 198: ' if' (ID: 538)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7381299734115601
    2. '>=' → logprob: -0.7381299734115601
    3. '<=' → logprob: -3.9881300926208496
    4. ' <=' → logprob: -4.11313009262085
    5. ' <' → logprob: -5.98813009262085
    6. '<' → logprob: -5.98813009262085
    7. '+' → logprob: -7.11313009262085
    8. '>' → logprob: -7.23813009262085
    9. '[' → logprob: -7.23813009262085
    10. ' >' → logprob: -7.98813009262085

Token 199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08525421470403671
    2. ' x' → logprob: -2.585254192352295
    3. '0' → logprob: -5.085254192352295
    4. ' ' → logprob: -8.960254669189453
    5. '(x' → logprob: -11.835254669189453
    6. '1' → logprob: -12.585254669189453
    7. ' isinstance' → logprob: -12.710254669189453
    8. '-' → logprob: -13.085254669189453
    9. 'min' → logprob: -13.460254669189453
    10. 'max' → logprob: -13.710254669189453

Token 200: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8999083638191223
    2. '<' → logprob: -1.3999083042144775
    3. ' <' → logprob: -2.1499083042144775
    4. ' >=' → logprob: -2.3999083042144775
    5. '<=' → logprob: -2.5249083042144775
    6. '>' → logprob: -3.5249083042144775
    7. ' <=' → logprob: -4.024908542633057
    8. 'else' → logprob: -5.649908542633057
    9. '<len' → logprob: -5.899908542633057
    10. ' >' → logprob: -6.024908542633057

Token 201: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0867958515882492
    2. 'N' → logprob: -2.7117958068847656
    3. ' MAX' → logprob: -4.461795806884766
    4. ' N' → logprob: -6.711795806884766
    5. 'X' → logprob: -6.961795806884766
    6. '0' → logprob: -6.961795806884766
    7. '100' → logprob: -7.336795806884766
    8. 'len' → logprob: -7.836795806884766
    9. '10' → logprob: -7.961795806884766
    10. 'Xs' → logprob: -8.586795806884766

Token 202: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -2.2723104848410003e-05
    2. 'idx' → logprob: -10.875022888183594
    3. 'INDEX' → logprob: -13.000022888183594
    4. 'X' → logprob: -14.625022888183594
    5. ' IDX' → logprob: -15.000022888183594
    6. '_IDX' → logprob: -15.750022888183594
    7. ')' → logprob: -16.250022888183594
    8. '```' → logprob: -16.625022888183594
    9. '
' → logprob: -16.750022888183594
    10. '   ' → logprob: -17.250022888183594

Token 203: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0407877154648304
    2. 'else' → logprob: -3.915787696838379
    3. ' else' → logprob: -3.915787696838379
    4. '[-' → logprob: -9.665787696838379
    5. '[]' → logprob: -10.665787696838379
    6. '0' → logprob: -11.415787696838379
    7. ' ' → logprob: -11.915787696838379
    8. 'and' → logprob: -12.165787696838379
    9. '   ' → logprob: -12.665787696838379
    10. ' and' → logprob: -14.040787696838379

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.500018119812012
    3. ']' → logprob: -13.125018119812012
    4. '-' → logprob: -13.875018119812012
    5. '
' → logprob: -13.875018119812012
    6. '   ' → logprob: -13.875018119812012
    7. '[' → logprob: -14.125018119812012
    8. 'N' → logprob: -14.250018119812012
    9. '(' → logprob: -14.937518119812012
    10. 'len' → logprob: -15.562518119812012

Token 205: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0485999770462513
    2. 'else' → logprob: -3.0485999584198
    3. ' ' → logprob: -12.173600196838379
    4. ' and' → logprob: -12.923600196838379
    5. ')' → logprob: -12.923600196838379
    6. '-' → logprob: -14.298600196838379
    7. 'and' → logprob: -14.298600196838379
    8. '	else' → logprob: -15.173600196838379
    9. '[' → logprob: -15.423600196838379
    10. '0' → logprob: -16.173599243164062

Token 206: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25193095207214355
    2. 'else' → logprob: -1.5019309520721436
    3. '	else' → logprob: -14.251931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '
' → logprob: -15.626931190490723
    6. '    ' → logprob: -15.751931190490723
    7. '   ' → logprob: -16.126930236816406
    8. 'and' → logprob: -16.126930236816406
    9. ' and' → logprob: -16.376930236816406
    10. '        ' → logprob: -16.501930236816406

Token 207: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.024819884449243546
    2. ' MAX' → logprob: -4.024819850921631
    3. 'N' → logprob: -5.649819850921631
    4. 'None' → logprob: -7.399819850921631
    5. 'MIN' → logprob: -7.399819850921631
    6. '0' → logprob: -7.524819850921631
    7. '   ' → logprob: -8.149820327758789
    8. ' N' → logprob: -8.774820327758789
    9. 'max' → logprob: -8.899820327758789
    10. 'x' → logprob: -9.024820327758789

Token 208: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.001350234029814601
    2. 'idx' → logprob: -6.751350402832031
    3. 'INDEX' → logprob: -10.001350402832031
    4. 'IND' → logprob: -10.126350402832031
    5. 'INT' → logprob: -10.501350402832031
    6. '_IDX' → logprob: -10.501350402832031
    7. ')' → logprob: -11.751350402832031
    8. 'X' → logprob: -12.251350402832031
    9. ' IDX' → logprob: -12.376350402832031
    10. '999' → logprob: -12.501350402832031

Token 209: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5765479803085327
    2. '[' → logprob: -0.8265479803085327
    3. ' ' → logprob: -8.201547622680664
    4. ')' → logprob: -9.451547622680664
    5. '<|end|>' → logprob: -9.451547622680664
    6. 'def' → logprob: -9.951547622680664
    7. ']' → logprob: -10.701547622680664
    8. 's' → logprob: -11.201547622680664
    9. '   ' → logprob: -11.701547622680664
    10. '```' → logprob: -11.826547622680664

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004822697374038398
    2. '[' → logprob: -7.750482082366943
    3. ' ' → logprob: -10.625482559204102
    4. ']' → logprob: -11.375482559204102
    5. '```' → logprob: -13.000482559204102
    6. '-' → logprob: -13.062982559204102
    7. '#' → logprob: -13.187982559204102
    8. ')' → logprob: -13.500482559204102
    9. '   ' → logprob: -13.500482559204102
    10. '])' → logprob: -13.562982559204102

Token 211: ']

' (ID: 3144)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5272815823554993
    2. '<|end|>' → logprob: -1.2772815227508545
    3. ')' → logprob: -2.6522815227508545
    4. ' -' → logprob: -3.1522815227508545
    5. ']' → logprob: -4.527281761169434
    6. '<|end|>' → logprob: -5.402281761169434
    7. 'def' → logprob: -6.652281761169434
    8. '[' → logprob: -8.402281761169434
    9. '   ' → logprob: -8.652281761169434
    10. '
' → logprob: -9.152281761169434

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4531276226043701
    2. '<|end|>' → logprob: -1.3281276226043701
    3. ')' → logprob: -3.07812762260437
    4. '
' → logprob: -3.20312762260437
    5. '    
' → logprob: -5.578127861022949
    6. ' ' → logprob: -5.703127861022949
    7. '<|end|>' → logprob: -6.828127861022949
    8. '  ' → logprob: -6.953127861022949
    9. '    ' → logprob: -7.328127861022949
    10. 'def' → logprob: -7.453127861022949

Token 213: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08847050368785858
    2. ')' → logprob: -3.213470458984375
    3. 'def' → logprob: -4.213470458984375
    4. ' for' → logprob: -4.713470458984375
    5. '<|end|>' → logprob: -4.713470458984375
    6. 'for' (adapté à ' for') → logprob: -5.713470458984375
    7. 'x' → logprob: -6.463470458984375
    8. '    
' → logprob: -6.463470458984375
    9. '
' → logprob: -7.338470458984375
    10. 'max' → logprob: -7.463470458984375

Token 214: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25370901823043823
    2. ' i' → logprob: -1.503709077835083
    3. 'x' → logprob: -7.753708839416504
    4. '(i' → logprob: -8.878708839416504
    5. 'u' → logprob: -9.003708839416504
    6. 'idx' → logprob: -9.003708839416504
    7. 'j' → logprob: -9.128708839416504
    8. 'd' → logprob: -9.503708839416504
    9. ' x' → logprob: -9.503708839416504
    10. '_i' → logprob: -9.503708839416504

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3135536015033722
    2. 'in' → logprob: -1.3135535717010498
    3. ',' → logprob: -8.313553810119629
    4. ' ' → logprob: -11.313553810119629
    5. ' ,' → logprob: -11.563553810119629
    6. 'n' → logprob: -11.938553810119629
    7. '_in' → logprob: -12.938553810119629
    8. '	in' → logprob: -12.938553810119629
    9. '_' → logprob: -13.188553810119629
    10. '0' → logprob: -13.688553810119629

Token 216: ' indices' (ID: 30378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1340561807155609
    2. ' range' → logprob: -2.1340560913085938
    3. 'indices' → logprob: -5.009056091308594
    4. 're' → logprob: -8.634056091308594
    5. ' indices' → logprob: -8.759056091308594
    6. ' reversed' → logprob: -11.009056091308594
    7. ' ' → logprob: -11.259056091308594
    8. ' xrange' → logprob: -11.509056091308594
    9. 'X' → logprob: -11.634056091308594
    10. '   ' → logprob: -11.884056091308594

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025866006035357714
    2. ':
' → logprob: -6.002586364746094
    3. ' :' → logprob: -9.627586364746094
    4. '):' → logprob: -10.877586364746094
    5. ',' → logprob: -11.752586364746094
    6. '   ' → logprob: -11.877586364746094
    7. '[:-' → logprob: -13.252586364746094
    8. '[' → logprob: -13.627586364746094
    9. '[::-' → logprob: -13.627586364746094
    10. ')' → logprob: -14.127586364746094

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015241492539644241
    2. '   ' → logprob: -4.640241622924805
    3. ' if' → logprob: -5.640241622924805
    4. ' for' → logprob: -6.890241622924805
    5. ' x' → logprob: -8.265241622924805
    6. '    ' → logprob: -9.015241622924805
    7. 'x' → logprob: -9.265241622924805
    8. '<|end|>' → logprob: -9.390241622924805
    9. ',' → logprob: -9.640241622924805
    10. 'if' → logprob: -10.140241622924805

Token 219: ' lim' (ID: 3147)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5302881598472595
    2. 'j' → logprob: -1.7802882194519043
    3. ' x' → logprob: -2.6552882194519043
    4. 'pos' → logprob: -2.7802882194519043
    5. ' j' → logprob: -3.0302882194519043
    6. 'for' → logprob: -4.530288219451904
    7. '   ' → logprob: -4.655288219451904
    8. ' pos' → logprob: -4.655288219451904
    9. 'idx' → logprob: -5.280288219451904
    10. 'while' → logprob: -5.530288219451904

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1276758462190628
    2. '=' → logprob: -2.127675771713257
    3. 'it' → logprob: -7.502676010131836
    4. '=int' → logprob: -9.502676010131836
    5. '=i' → logprob: -9.877676010131836
    6. '=max' → logprob: -11.252676010131836
    7. 't' → logprob: -11.502676010131836
    8. 'idx' → logprob: -11.877676010131836
    9. 'i' → logprob: -12.127676010131836
    10. '   ' → logprob: -12.127676010131836

Token 221: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5675227642059326
    2. 'XD' → logprob: -1.5675227642059326
    3. 'bis' → logprob: -1.5675227642059326
    4. ' bis' → logprob: -5.942523002624512
    5. 'XS' → logprob: -6.067523002624512
    6. 'i' → logprob: -6.192523002624512
    7. 'within' → logprob: -6.192523002624512
    8. ' XD' → logprob: -6.692523002624512
    9. 'X' → logprob: -6.817523002624512
    10. 'Xd' → logprob: -6.942523002624512

Token 222: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -4.334533878136426e-05
    2. 'X' → logprob: -10.375042915344238
    3. 'Xs' → logprob: -12.000042915344238
    4. '(' → logprob: -12.500042915344238
    5. '(
' → logprob: -14.375042915344238
    6. ')' → logprob: -15.000042915344238
    7. ' X' → logprob: -15.750042915344238
    8. '(M' → logprob: -15.875042915344238
    9. '   ' → logprob: -16.250043869018555
    10. ',X' → logprob: -16.250043869018555

Token 223: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.125001907348633
    3. 'S' → logprob: -15.500001907348633
    4. '(X' → logprob: -15.750001907348633
    5. ' s' → logprob: -16.375001907348633
    6. '=' → logprob: -16.750001907348633
    7. '(s' → logprob: -17.250001907348633
    8. 'd' → logprob: -17.250001907348633
    9. ')s' → logprob: -17.250001907348633
    10. 'Xs' → logprob: -17.250001907348633

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009879115968942642
    2. '(X' → logprob: -7.500988006591797
    3. ',X' → logprob: -8.375988006591797
    4. ' ,' → logprob: -9.000988006591797
    5. ',(' → logprob: -10.375988006591797
    6. ',[' → logprob: -11.000988006591797
    7. ',
' → logprob: -11.750988006591797
    8. '),' → logprob: -12.375988006591797
    9. ',i' → logprob: -12.750988006591797
    10. '(' → logprob: -12.875988006591797

Token 225: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.10339847952127457
    2. ' XD' → logprob: -2.353398561477661
    3. 'Xd' → logprob: -6.228398323059082
    4. 'X' → logprob: -8.228398323059082
    5. 'XS' → logprob: -8.353398323059082
    6. 'Xs' → logprob: -8.478398323059082
    7. ' X' → logprob: -8.978398323059082
    8. '(X' → logprob: -9.103398323059082
    9. '   ' → logprob: -10.103398323059082
    10. 'within' → logprob: -10.478398323059082

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.215330409351736e-05
    2. '[' → logprob: -10.125041961669922
    3. ')' → logprob: -14.125041961669922
    4. ')[' → logprob: -15.500041961669922
    5. 'i' → logprob: -15.625041961669922
    6. '[I' → logprob: -15.750041961669922
    7. '[j' → logprob: -15.875041961669922
    8. ' [' → logprob: -16.000041961669922
    9. '[N' → logprob: -16.125041961669922
    10. ')i' → logprob: -16.375041961669922

Token 227: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06243044137954712
    2. '[' → logprob: -2.8124303817749023
    3. '][' → logprob: -7.687430381774902
    4. '[j' → logprob: -13.812430381774902
    5. 'i' → logprob: -14.187430381774902
    6. '[-' → logprob: -14.937430381774902
    7. '[N' → logprob: -15.187430381774902
    8. ']' → logprob: -15.312430381774902
    9. ' [' → logprob: -15.562430381774902
    10. '[I' → logprob: -15.687430381774902

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18021082878112793
    2. 'i' → logprob: -1.805210828781128
    3. ' i' → logprob: -8.055211067199707
    4. '(i' → logprob: -10.055211067199707
    5. '	i' → logprob: -10.930211067199707
    6. ' ' → logprob: -10.930211067199707
    7. '
' → logprob: -11.055211067199707
    8. '   ' → logprob: -11.305211067199707
    9. '1' → logprob: -11.805211067199707
    10. ':i' → logprob: -11.930211067199707

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26777106523513794
    2. ']+' → logprob: -1.6427710056304932
    3. '[' → logprob: -4.017771244049072
    4. '[i' → logprob: -4.142771244049072
    5. '+' → logprob: -6.017771244049072
    6. ']*' → logprob: -6.142771244049072
    7. '])' → logprob: -6.892771244049072
    8. '*' → logprob: -7.142771244049072
    9. ' +' → logprob: -8.392770767211914
    10. ']))' → logprob: -8.517770767211914

Token 230: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6703205704689026
    2. ' +' → logprob: -1.4203205108642578
    3. '[i' → logprob: -1.7953205108642578
    4. ',' → logprob: -3.295320510864258
    5. ')' → logprob: -3.545320510864258
    6. '))' → logprob: -5.295320510864258
    7. '+i' → logprob: -5.795320510864258
    8. ')+' → logprob: -6.045320510864258
    9. '(i' → logprob: -7.045320510864258
    10. '),' → logprob: -7.670320510864258

Token 231: ' XD' (ID: 85251)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6471369862556458
    2. 'XD' → logprob: -0.8971369862556458
    3. 'i' → logprob: -4.02213716506958
    4. '2' → logprob: -4.39713716506958
    5. '5' → logprob: -5.52213716506958
    6. '3' → logprob: -5.64713716506958
    7. '100' → logprob: -5.64713716506958
    8. '0' → logprob: -5.64713716506958
    9. '10' → logprob: -5.77213716506958
    10. 'D' → logprob: -6.14713716506958

Token 232: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.388769103679806e-05
    2. '[' → logprob: -9.500093460083008
    3. 'i' → logprob: -11.500093460083008
    4. ')' → logprob: -13.750093460083008
    5. ' i' → logprob: -13.875093460083008
    6. '(i' → logprob: -14.125093460083008
    7. '{i' → logprob: -14.250093460083008
    8. '[
' → logprob: -14.250093460083008
    9. '```' → logprob: -14.375093460083008
    10. ',i' → logprob: -14.500093460083008

Token 233: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008785098791122437
    2. '[' → logprob: -4.883785247802734
    3. '][' → logprob: -7.133785247802734
    4. 'i' → logprob: -8.008785247802734
    5. '(i' → logprob: -11.383785247802734
    6. '```' → logprob: -11.633785247802734
    7. '1' → logprob: -12.133785247802734
    8. ',i' → logprob: -12.383785247802734
    9. ']' → logprob: -12.633785247802734
    10. '	i' → logprob: -13.883785247802734

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.634907066822052
    2. 'i' → logprob: -0.759907066822052
    3. '[i' → logprob: -6.759907245635986
    4. ' i' → logprob: -7.384907245635986
    5. '(i' → logprob: -9.009906768798828
    6. '	i' → logprob: -9.134906768798828
    7. '0' → logprob: -9.634906768798828
    8. '```' → logprob: -10.009906768798828
    9. '   ' → logprob: -10.759906768798828
    10. '[' → logprob: -10.759906768798828

Token 235: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010620344430208206
    2. ')
' → logprob: -4.8856201171875
    3. ' )' → logprob: -6.7606201171875
    4. ')+' → logprob: -7.0106201171875
    5. '))' → logprob: -7.2606201171875
    6. ',' → logprob: -9.3856201171875
    7. ')`' → logprob: -10.1356201171875
    8. '   ' → logprob: -10.5106201171875
    9. ' )
' → logprob: -10.8856201171875
    10. '+' → logprob: -10.8856201171875

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013377031311392784
    2. ')' → logprob: -4.5133771896362305
    3. '
' → logprob: -7.5133771896362305
    4. ' if' → logprob: -7.6383771896362305
    5. ')
' → logprob: -7.7633771896362305
    6. ' for' → logprob: -8.51337718963623
    7. ',' → logprob: -8.51337718963623
    8. '        
' → logprob: -9.13837718963623
    9. ' )' → logprob: -9.51337718963623
    10. '   ' → logprob: -9.88837718963623

Token 237: ' _' (ID: 1175)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1434316635131836
    2. ' if' → logprob: -2.6434316635131836
    3. ' for' → logprob: -4.018431663513184
    4. ')' → logprob: -4.768431663513184
    5. ' parent' → logprob: -4.768431663513184
    6. 'if' → logprob: -5.268431663513184
    7. 'parent' → logprob: -5.268431663513184
    8. '
' → logprob: -5.518431663513184
    9. '   ' → logprob: -5.768431663513184
    10. '        
' → logprob: -6.018431663513184

Token 238: ' =' (ID: 314)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.41000911593437195
    2. ' =' → logprob: -1.5350091457366943
    3. '=' → logprob: -2.6600091457366943
    4. 'edge' → logprob: -4.035008907318115
    5. 'max' → logprob: -4.285008907318115
    6. 'for' → logprob: -4.660008907318115
    7. 'if' → logprob: -6.035008907318115
    8. 'idx' → logprob: -6.910008907318115
    9. '_parent' → logprob: -7.160008907318115
    10. 'edges' → logprob: -7.535008907318115

Token 239: ' [' (ID: 723)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.5759493708610535
    2. 'parent' → logprob: -2.2009494304656982
    3. 'max' → logprob: -2.4509494304656982
    4. 'min' → logprob: -3.0759494304656982
    5. ' parent' → logprob: -3.5759494304656982
    6. ' lim' → logprob: -3.5759494304656982
    7. 'i' → logprob: -3.7009494304656982
    8. 'edge' → logprob: -4.200949192047119
    9. 'bl' → logprob: -4.325949192047119
    10. ' i' → logprob: -4.450949192047119

Token 240: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.1861037015914917
    2. 'edge' → logprob: -1.9361037015914917
    3. '(parent' → logprob: -4.561103820800781
    4. ' parent' → logprob: -5.311103820800781
    5. '(edge' → logprob: -5.561103820800781
    6. '(' → logprob: -6.186103820800781
    7. '   ' → logprob: -6.811103820800781
    8. '(lambda' → logprob: -6.936103820800781
    9. ' edge' → logprob: -7.311103820800781
    10. 'lambda' → logprob: -7.686103820800781

Token 241: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.25840961933135986
    2. '.append' → logprob: -2.8834095001220703
    3. '[i' → logprob: -3.0084095001220703
    4. '[' → logprob: -3.2584095001220703
    5. '[j' → logprob: -3.5084095001220703
    6. '.insert' → logprob: -4.13340950012207
    7. '.setdefault' → logprob: -4.50840950012207
    8. '[_' → logprob: -5.00840950012207
    9. ']' → logprob: -5.38340950012207
    10. '[parent' → logprob: -5.88340950012207

Token 242: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.6656825866666622e-05
    2. 'sets' → logprob: -11.00002670288086
    3. 'getitem' → logprob: -11.62502670288086
    4. 'del' → logprob: -15.12502670288086
    5. ' set' → logprob: -15.50002670288086
    6. '_set' → logprob: -16.25002670288086
    7. '```' → logprob: -16.50002670288086
    8. 'sett' → logprob: -16.87502670288086
    9. '
' → logprob: -16.87502670288086
    10. 'setz' → logprob: -17.37502670288086

Token 243: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -5.796184723294573e-06
    2. 'attr' → logprob: -12.125005722045898
    3. ' item' → logprob: -15.875005722045898
    4. '_item' → logprob: -16.1250057220459
    5. '(item' → logprob: -17.5000057220459
    6. '__' → logprob: -18.1250057220459
    7. '__(' → logprob: -18.3750057220459
    8. 'items' → logprob: -18.8750057220459
    9. 'Item' → logprob: -19.0000057220459
    10. '[item' → logprob: -19.0000057220459

Token 244: '__(' (ID: 8241)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.208653162000701e-05
    2. '(' → logprob: -9.500082015991211
    3. ' (' → logprob: -12.250082015991211
    4. '(
' → logprob: -13.750082015991211
    5. ']' → logprob: -14.750082015991211
    6. '(index' → logprob: -15.375082015991211
    7. '](' → logprob: -15.500082015991211
    8. '((' → logprob: -15.875082015991211
    9. '(ii' → logprob: -16.50008201599121
    10. ',' → logprob: -16.75008201599121

Token 245: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10441794246435165
    2. 'lim' → logprob: -3.2294180393218994
    3. 'indices' → logprob: -3.8544180393218994
    4. ')' → logprob: -4.22941780090332
    5. '(i' → logprob: -4.60441780090332
    6. 'bl' → logprob: -5.72941780090332
    7. ' i' → logprob: -6.85441780090332
    8. 'idx' → logprob: -6.97941780090332
    9. 'edge' → logprob: -7.10441780090332
    10. 'parent' → logprob: -7.10441780090332

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018514160765334964
    2. ',i' → logprob: -6.751851558685303
    3. ',j' → logprob: -7.876851558685303
    4. ' ,' → logprob: -8.501851081848145
    5. 'i' → logprob: -10.251851081848145
    6. ' i' → logprob: -10.626851081848145
    7. ')' → logprob: -11.376851081848145
    8. 'j' → logprob: -11.501851081848145
    9. ',
' → logprob: -12.251851081848145
    10. '(i' → logprob: -12.626851081848145

Token 247: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011959441471844912
    2. ' i' → logprob: -6.751195907592773
    3. '   ' → logprob: -11.126195907592773
    4. ' ' → logprob: -12.251195907592773
    5. ')' → logprob: -13.001195907592773
    6. '  ' → logprob: -13.251195907592773
    7. '
' → logprob: -14.501195907592773
    8. '    ' → logprob: -14.501195907592773
    9. '	i' → logprob: -15.501195907592773
    10. ')i' → logprob: -15.501195907592773

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057078052312135696
    2. 'for' → logprob: -3.5570781230926514
    3. ' for' → logprob: -3.8070781230926514
    4. ' )' → logprob: -5.432077884674072
    5. ',' → logprob: -9.18207836151123
    6. '   ' → logprob: -9.68207836151123
    7. '    ' → logprob: -10.30707836151123
    8. '       ' → logprob: -10.30707836151123
    9. '           ' → logprob: -10.43207836151123
    10. ' ' → logprob: -10.93207836151123

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3133437931537628
    2. 'for' → logprob: -1.3133437633514404
    3. ')' → logprob: -9.93834400177002
    4. '           ' → logprob: -11.81334400177002
    5. ' ' → logprob: -12.31334400177002
    6. '   ' → logprob: -12.56334400177002
    7. '	for' → logprob: -12.68834400177002
    8. '    ' → logprob: -12.68834400177002
    9. '          ' → logprob: -13.18834400177002
    10. '       ' → logprob: -13.31334400177002

Token 250: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.030291765928268433
    2. ' j' → logprob: -3.655291795730591
    3. 'range' → logprob: -5.780291557312012
    4. ' range' → logprob: -7.030291557312012
    5. ' in' → logprob: -12.530291557312012
    6. ')' → logprob: -13.155291557312012
    7. ']' → logprob: -13.905291557312012
    8. '	j' → logprob: -13.905291557312012
    9. '```' → logprob: -14.280291557312012
    10. '_j' → logprob: -15.155291557312012

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033684659749269485
    2. 'in' → logprob: -3.408684730529785
    3. 'range' → logprob: -10.658684730529785
    4. ' ' → logprob: -12.033684730529785
    5. ' range' → logprob: -12.658684730529785
    6. ')' → logprob: -12.908684730529785
    7. '	in' → logprob: -14.408684730529785
    8. '<|end|>' → logprob: -14.908684730529785
    9. 'inx' → logprob: -15.408684730529785
    10. '...' → logprob: -15.533684730529785

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '(range' → logprob: -16.003177642822266
    4. '	range' → logprob: -16.503177642822266
    5. 'list' → logprob: -17.378177642822266
    6. 're' → logprob: -17.753177642822266
    7. '   ' → logprob: -18.753177642822266
    8. '
' → logprob: -18.753177642822266
    9. ' ' → logprob: -19.003177642822266
    10. 'rang' → logprob: -19.128177642822266

Token 253: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008235238492488861
    2. '(i' → logprob: -4.883235454559326
    3. ' i' → logprob: -7.758235454559326
    4. '   ' → logprob: -10.008234977722168
    5. 'N' → logprob: -10.008234977722168
    6. 'bl' → logprob: -10.883234977722168
    7. 'lim' → logprob: -11.133234977722168
    8. '(N' → logprob: -11.508234977722168
    9. '_i' → logprob: -11.633234977722168
    10. ')' → logprob: -11.758234977722168

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08909214287996292
    2. ' +' → logprob: -2.464092254638672
    3. ',' → logprob: -8.839092254638672
    4. ' ,' → logprob: -12.214092254638672
    5. '   ' → logprob: -13.589092254638672
    6. ' ' → logprob: -15.214092254638672
    7. '+,' → logprob: -15.339092254638672
    8. '＋' → logprob: -15.714092254638672
    9. ')+' → logprob: -15.964092254638672
    10. ',
' → logprob: -15.964092254638672

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003079334564972669
    2. ' ' → logprob: -8.1253080368042
    3. '   ' → logprob: -12.2503080368042
    4. '
' → logprob: -13.1253080368042
    5. '       ' → logprob: -14.6253080368042
    6. '0' → logprob: -14.6878080368042
    7. '  ' → logprob: -14.8753080368042
    8. ',' → logprob: -15.0003080368042
    9. '```' → logprob: -15.0628080368042
    10. '           ' → logprob: -15.1253080368042

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007056408794596791
    2. ' ,' → logprob: -7.375705718994141
    3. ',len' → logprob: -10.00070571899414
    4. ',l' → logprob: -11.50070571899414
    5. '   ' → logprob: -11.75070571899414
    6. ',to' → logprob: -12.62570571899414
    7. ',n' → logprob: -13.00070571899414
    8. ',length' → logprob: -13.50070571899414
    9. '       ' → logprob: -13.75070571899414
    10. ',m' → logprob: -13.87570571899414

Token 257: ' within' (ID: 3518)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -1.6405310816480778e-05
    2. '   ' → logprob: -12.000016212463379
    3. ' lim' → logprob: -12.125016212463379
    4. '    ' → logprob: -13.375016212463379
    5. 'min' → logprob: -13.625016212463379
    6. '  ' → logprob: -14.250016212463379
    7. 'lin' → logprob: -15.250016212463379
    8. 'limit' → logprob: -15.375016212463379
    9. ' ' → logprob: -15.625016212463379
    10. '     ' → logprob: -16.000017166137695

Token 258: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.0018227392574772239
    2. '(l' → logprob: -7.3768229484558105
    3. 'lim' → logprob: -7.6268229484558105
    4. '_limits' → logprob: -8.001822471618652
    5. 'bounds' → logprob: -8.376822471618652
    6. '(i' → logprob: -9.501822471618652
    7. '(j' → logprob: -10.751822471618652
    8. '_bound' → logprob: -11.751822471618652
    9. '(' → logprob: -12.376822471618652
    10. '(_' → logprob: -12.501822471618652

Token 259: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00843076966702938
    2. '(i' → logprob: -5.3834309577941895
    3. '(j' → logprob: -6.3834309577941895
    4. '(bl' → logprob: -6.5084309577941895
    5. '(' → logprob: -8.008430480957031
    6. '(limit' → logprob: -9.133430480957031
    7. ')' → logprob: -10.008430480957031
    8. '(max' → logprob: -10.758430480957031
    9. '(len' → logprob: -10.758430480957031
    10. ' (' → logprob: -10.883430480957031

Token 260: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.03267758712172508
    2. '(i' → logprob: -3.65767765045166
    3. 'i' → logprob: -5.28267765045166
    4. '(im' → logprob: -7.90767765045166
    5. '(j' → logprob: -8.28267765045166
    6. 'lim' → logprob: -9.03267765045166
    7. '[i' → logprob: -9.53267765045166
    8. ')' → logprob: -9.78267765045166
    9. '(' → logprob: -10.03267765045166
    10. '))' → logprob: -10.15767765045166

Token 261: '))' (ID: 915)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03321175277233124
    2. '))' → logprob: -3.6582117080688477
    3. '()' → logprob: -6.158211708068848
    4. '())' → logprob: -6.283211708068848
    5. '[' → logprob: -7.158211708068848
    6. '()[' → logprob: -7.158211708068848
    7. '))]
' → logprob: -7.783211708068848
    8. '(' → logprob: -8.033211708068848
    9. '()))
' → logprob: -8.658211708068848
    10. '(i' → logprob: -8.908211708068848

Token 262: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1281295269727707
    2. ')]' → logprob: -2.128129482269287
    3. ' ]' → logprob: -7.378129482269287
    4. ']
' → logprob: -7.878129482269287
    5. ')' → logprob: -9.628129959106445
    6. '()]' → logprob: -10.003129959106445
    7. '       ' → logprob: -10.128129959106445
    8. '   ' → logprob: -11.253129959106445
    9. '])' → logprob: -11.753129959106445
    10. ')]
' → logprob: -11.878129959106445

Token 263: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0028638429939746857
    2. ' parent' → logprob: -5.877863883972168
    3. '(parent' → logprob: -10.877863883972168
    4. '   ' → logprob: -11.627863883972168
    5. 'edge' → logprob: -12.127863883972168
    6. 'XD' → logprob: -12.377863883972168
    7. 'within' → logprob: -12.502863883972168
    8. '	parent' → logprob: -12.752863883972168
    9. '_parent' → logprob: -12.877863883972168
    10. '_' → logprob: -13.127863883972168

Token 264: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. '[i' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '[
' → logprob: -18.75
    6. ' [' → logprob: -18.875
    7. '
' → logprob: -19.75
    8. 'j' → logprob: -20.0
    9. '][' → logprob: -20.125
    10. '[parent' → logprob: -20.125

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48121094703674316
    2. ']==' → logprob: -0.9812109470367432
    3. '==' → logprob: -5.481210708618164
    4. '==-' → logprob: -6.231210708618164
    5. ' ==' → logprob: -7.856210708618164
    6. '[' → logprob: -8.356210708618164
    7. '[j' → logprob: -8.981210708618164
    8. ' ]' → logprob: -9.356210708618164
    9. ']<' → logprob: -9.981210708618164
    10. '<' → logprob: -10.481210708618164

Token 266: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0694214254617691
    2. ' ==' → logprob: -3.4444215297698975
    3. '==-' → logprob: -3.5694215297698975
    4. ']==' → logprob: -5.694421291351318
    5. '<' → logprob: -5.944421291351318
    6. ']' → logprob: -7.444421291351318
    7. '[' → logprob: -8.569421768188477
    8. ')' → logprob: -9.194421768188477
    9. ')==' → logprob: -10.444421768188477
    10. '===' → logprob: -10.569421768188477

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014370749704539776
    2. 'i' → logprob: -9.375144004821777
    3. ' ' → logprob: -9.750144004821777
    4. ' i' → logprob: -14.750144004821777
    5. '   ' → logprob: -16.50014305114746
    6. '1' → logprob: -17.50014305114746
    7. '
' → logprob: -17.87514305114746
    8. '```' → logprob: -17.87514305114746
    9. '  ' → logprob: -18.31264305114746
    10. 'j' → logprob: -18.56264305114746

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016606442630290985
    2. 'i' → logprob: -4.141606330871582
    3. ' ' → logprob: -7.516606330871582
    4. ' i' → logprob: -10.766606330871582
    5. 'j' → logprob: -13.391606330871582
    6. '```' → logprob: -13.766606330871582
    7. '   ' → logprob: -14.329106330871582
    8. '1' → logprob: -14.391606330871582
    9. '
' → logprob: -15.266606330871582
    10. '=' → logprob: -15.454106330871582

Token 269: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0898367241024971
    2. ')]' → logprob: -2.464836835861206
    3. ' ]' → logprob: -7.839836597442627
    4. ']
' → logprob: -8.214837074279785
    5. ')' → logprob: -8.589837074279785
    6. '   ' → logprob: -11.589837074279785
    7. '()]' → logprob: -11.589837074279785
    8. '       ' → logprob: -11.589837074279785
    9. ')]
' → logprob: -12.464837074279785
    10. '])' → logprob: -12.964837074279785

Token 270: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.3391079306602478
    2. ' lim' → logprob: -2.7141079902648926
    3. 'XD' → logprob: -2.7141079902648926
    4. 'parent' → logprob: -3.2141079902648926
    5. ' XD' → logprob: -3.3391079902648926
    6. ' parent' → logprob: -3.8391079902648926
    7. 'i' → logprob: -4.339107990264893
    8. ' i' → logprob: -4.714107990264893
    9. 'MAX' → logprob: -5.214107990264893
    10. '_' → logprob: -5.464107990264893

Token 273: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.29612526297569275
    2. '>' → logprob: -1.4211252927780151
    3. ' ==' → logprob: -5.671125411987305
    4. ')' → logprob: -5.796125411987305
    5. ' <' → logprob: -6.296125411987305
    6. '==' → logprob: -6.421125411987305
    7. ':' → logprob: -6.546125411987305
    8. ' <=' → logprob: -7.171125411987305
    9. '=' → logprob: -7.671125411987305
    10. '<' → logprob: -7.671125411987305

Token 274: ' MAX' (ID: 16960)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20316410064697266
    2. '0' → logprob: -2.2031641006469727
    3. 'MAX' → logprob: -3.2031641006469727
    4. 'i' → logprob: -3.4531641006469727
    5. 'len' → logprob: -7.453164100646973
    6. ' ' → logprob: -8.328164100646973
    7. ' N' → logprob: -8.953164100646973
    8. ' i' → logprob: -10.703164100646973
    9. 'max' → logprob: -10.828164100646973
    10. '1' → logprob: -10.953164100646973

Token 275: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.00012892624363303185
    2. 'idx' → logprob: -9.000128746032715
    3. 'INDEX' → logprob: -13.125128746032715
    4. ' IDX' → logprob: -13.375128746032715
    5. 'X' → logprob: -14.375128746032715
    6. '_IDX' → logprob: -14.750128746032715
    7. '   ' → logprob: -15.250128746032715
    8. 'IND' → logprob: -15.250128746032715
    9. '[idx' → logprob: -16.12512969970703
    10. '(idx' → logprob: -17.25012969970703

Token 276: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000467730569653213
    2. ':' → logprob: -8.125467300415039
    3. '0' → logprob: -9.000467300415039
    4. ':
' → logprob: -10.875467300415039
    5. '   ' → logprob: -11.500467300415039
    6. '       ' → logprob: -11.750467300415039
    7. ' ' → logprob: -12.375467300415039
    8. ' [' → logprob: -13.875467300415039
    9. '```' → logprob: -14.000467300415039
    10. 'and' → logprob: -14.250467300415039

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014090436743572354
    2. '[' → logprob: -6.62640905380249
    3. ' ' → logprob: -9.751408576965332
    4. '   ' → logprob: -11.876408576965332
    5. ']' → logprob: -13.188908576965332
    6. '```' → logprob: -13.376408576965332
    7. ')' → logprob: -13.813908576965332
    8. '.' → logprob: -14.001408576965332
    9. '=' → logprob: -14.063908576965332
    10. '       ' → logprob: -14.063908576965332

Token 278: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7241057753562927
    2. ':
' → logprob: -0.7241057753562927
    3. '):
' → logprob: -4.0991058349609375
    4. '):' → logprob: -4.3491058349609375
    5. ' and' → logprob: -7.8491058349609375
    6. '       ' → logprob: -8.599105834960938
    7. '   ' → logprob: -8.849105834960938
    8. ')' → logprob: -9.724105834960938
    9. 'and' → logprob: -10.224105834960938
    10. '[' → logprob: -10.349105834960938

Token 279: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013351396657526493
    2. 'MAX' → logprob: -4.7633514404296875
    3. '           ' → logprob: -5.5133514404296875
    4. ' MAX' → logprob: -7.6383514404296875
    5. '   ' → logprob: -8.763351440429688
    6. ' break' → logprob: -11.263351440429688
    7. 'break' → logprob: -11.513351440429688
    8. '_MAX' → logprob: -11.763351440429688
    9. 'MOD' → logprob: -12.888351440429688
    10. ',' → logprob: -13.013351440429688

Token 280: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' (adapté à ' MAX') → logprob: -0.19582413136959076
    2. '       ' → logprob: -2.195824146270752
    3. '   ' → logprob: -3.570824146270752
    4. '           ' → logprob: -4.445824146270752
    5. 'break' → logprob: -4.570824146270752
    6. ' MAX' → logprob: -4.695824146270752
    7. ' break' → logprob: -5.070824146270752
    8. 'return' → logprob: -8.570823669433594
    9. 'parent' → logprob: -8.695823669433594
    10. 'max' → logprob: -9.070823669433594

Token 281: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -6.704273118884885e-07
    2. 'idx' → logprob: -14.875000953674316
    3. 'INDEX' → logprob: -15.625000953674316
    4. ' IDX' → logprob: -15.750000953674316
    5. '_IDX' → logprob: -18.125
    6. '[' → logprob: -19.75
    7. 'IND' → logprob: -19.875
    8. '[idx' → logprob: -20.5
    9. '=' → logprob: -22.375
    10. 'Idx' → logprob: -23.0

Token 282: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011034219060093164
    2. '=' → logprob: -6.876103401184082
    3. '0' → logprob: -11.001103401184082
    4. '.append' → logprob: -11.251103401184082
    5. '.' → logprob: -11.501103401184082
    6. '.pop' → logprob: -11.751103401184082
    7. '```' → logprob: -12.001103401184082
    8. '.__' → logprob: -12.626103401184082
    9. '   ' → logprob: -12.876103401184082
    10. '.clear' → logprob: -13.001103401184082

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -11.12502670288086
    3. '=' → logprob: -12.50002670288086
    4. '
' → logprob: -12.62502670288086
    5. '[' → logprob: -13.12502670288086
    6. ']' → logprob: -14.00002670288086
    7. ':' → logprob: -14.25002670288086
    8. ')' → logprob: -15.37502670288086
    9. ']=' → logprob: -16.12502670288086
    10. '__' → logprob: -16.18752670288086

Token 284: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009803309105336666
    2. ' =' → logprob: -4.634803295135498
    3. ')' → logprob: -10.634803771972656
    4. '-=' → logprob: -11.759803771972656
    5. ']' → logprob: -12.134803771972656
    6. ')=' → logprob: -12.384803771972656
    7. ']=' → logprob: -12.759803771972656
    8. '=i' → logprob: -13.634803771972656
    9. ' -=' → logprob: -14.634803771972656
    10. '   ' → logprob: -14.884803771972656

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011705794604495168
    2. ' =' → logprob: -6.751170635223389
    3. '-=' → logprob: -15.87617015838623
    4. '=max' → logprob: -15.87617015838623
    5. '+=' → logprob: -16.501171112060547
    6. '=i' → logprob: -16.751171112060547
    7. '.=' → logprob: -17.126171112060547
    8. '   ' → logprob: -18.126171112060547
    9. '=min' → logprob: -18.126171112060547
    10. '=int' → logprob: -18.626171112060547

Token 286: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005774584715254605
    2. ' i' → logprob: -7.500577449798584
    3. '   ' → logprob: -10.875577926635742
    4. 'N' → logprob: -13.625577926635742
    5. '    ' → logprob: -13.750577926635742
    6. ' ' → logprob: -14.000577926635742
    7. '  ' → logprob: -14.000577926635742
    8. '	i' → logprob: -14.250577926635742
    9. 'parent' → logprob: -15.250577926635742
    10. 'min' → logprob: -16.000577926635742

Token 287: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048262736527249217
    2. ' ' → logprob: -8.125482559204102
    3. '0' → logprob: -8.625482559204102
    4. '2' → logprob: -13.125482559204102
    5. 'XD' → logprob: -13.250482559204102
    6. '+' → logprob: -14.312982559204102
    7. '   ' → logprob: -14.937982559204102
    8. '[' → logprob: -15.375482559204102
    9. '...' → logprob: -15.875482559204102
    10. '-' → logprob: -16.0629825592041

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.625015258789062
    3. '0' → logprob: -12.375015258789062
    4. '2' → logprob: -13.875015258789062
    5. 'XD' → logprob: -14.375015258789062
    6. '[' → logprob: -15.625015258789062
    7. '+' → logprob: -15.687515258789062
    8. '   ' → logprob: -16.312515258789062
    9. '-' → logprob: -17.187515258789062
    10. '```' → logprob: -17.250015258789062

Token 290: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' Double' (ID: 11646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7210055589675903
    2. 'return' → logprob: -0.7210055589675903
    3. ' return' → logprob: -3.596005439758301
    4. ' ' → logprob: -11.4710054397583
    5. '	return' → logprob: -11.5960054397583
    6. 'def' → logprob: -12.2210054397583
    7. '  ' → logprob: -12.7210054397583
    8. '<|end|>' → logprob: -13.2210054397583
    9. '    
' → logprob: -13.4710054397583
    10. 'import' → logprob: -13.5960054397583

Token 294: ' iteration' (ID: 43155)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17829233407974243
    2. 'edge' → logprob: -2.0532922744750977
    3. ' for' → logprob: -3.8032922744750977
    4. 'def' → logprob: -5.928292274475098
    5. '#' → logprob: -6.178292274475098
    6. '_edge' → logprob: -6.553292274475098
    7. ' edge' → logprob: -7.053292274475098
    8. 'return' → logprob: -7.178292274475098
    9. '_' → logprob: -7.303292274475098
    10. 'end' → logprob: -7.303292274475098

Token 295: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06992731243371964
    2. ' for' → logprob: -2.819927215576172
    3. 'for' → logprob: -5.069927215576172
    4. '<|end|>' → logprob: -6.444927215576172
    5. '
' → logprob: -10.444927215576172
    6. '<|end|>' → logprob: -11.819927215576172
    7. '    
' → logprob: -12.319927215576172
    8. ',' → logprob: -12.944927215576172
    9. '	for' → logprob: -12.944927215576172
    10. ' ' → logprob: -13.069927215576172

Token 296: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46687227487564087
    2. ' for' → logprob: -1.841872215270996
    3. ' return' → logprob: -2.591872215270996
    4. 'for' → logprob: -2.966872215270996
    5. 'return' → logprob: -2.966872215270996
    6. ' to' → logprob: -4.466872215270996
    7. 'pass' → logprob: -4.716872215270996
    8. ' after' → logprob: -5.716872215270996
    9. 'after' → logprob: -6.091872215270996
    10. ' ' → logprob: -6.716872215270996

Token 297: ' fun' (ID: 2827)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5589273571968079
    2. 'i' → logprob: -2.058927297592163
    3. ' _' → logprob: -2.308927297592163
    4. ' i' → logprob: -2.558927297592163
    5. ' edge' → logprob: -3.558927297592163
    6. ' parent' → logprob: -3.933927297592163
    7. 'edge' → logprob: -4.558927536010742
    8. 'parent' → logprob: -4.933927536010742
    9. ' j' → logprob: -4.933927536010742
    10. ')' → logprob: -5.183927536010742

Token 298: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0215356033295393
    2. ' for' → logprob: -4.021535396575928
    3. 'for' → logprob: -5.896535396575928
    4. '<|end|>' → logprob: -7.521535396575928
    5. '
' → logprob: -9.771535873413086
    6. '    
' → logprob: -11.771535873413086
    7. '    ' → logprob: -12.396535873413086
    8. 'return' → logprob: -12.771535873413086
    9. ' return' → logprob: -12.771535873413086
    10. 'def' → logprob: -13.021535873413086

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013120223768055439
    2. ' for' → logprob: -4.763120174407959
    3. 'for' → logprob: -5.763120174407959
    4. '<|end|>' → logprob: -6.763120174407959
    5. '
' → logprob: -8.888120651245117
    6. '    
' → logprob: -10.513120651245117
    7. '```' → logprob: -11.138120651245117
    8. 'def' → logprob: -12.263120651245117
    9. '<|end|>' → logprob: -12.638120651245117
    10. '    ' → logprob: -13.513120651245117

Token 300: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6690172553062439
    2. '   ' → logprob: -1.2940173149108887
    3. ' for' → logprob: -1.5440173149108887
    4. 'return' → logprob: -9.91901683807373
    5. 'def' → logprob: -11.29401683807373
    6. '	for' → logprob: -11.66901683807373
    7. ' return' → logprob: -11.66901683807373
    8. '
' → logprob: -12.16901683807373
    9. '    
' → logprob: -12.54401683807373
    10. ' ' → logprob: -13.29401683807373

Token 301: 'edge' (ID: 13457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9503282308578491
    2. 'parent' → logprob: -1.4503282308578491
    3. '_' → logprob: -1.8253282308578491
    4. 'edge' → logprob: -2.0753283500671387
    5. '(parent' → logprob: -4.075328350067139
    6. '[' → logprob: -4.325328350067139
    7. ' for' → logprob: -4.700328350067139
    8. '_[' → logprob: -4.700328350067139
    9. '(edge' → logprob: -4.700328350067139
    10. ' parent' → logprob: -5.450328350067139

Token 302: '[' (ID: 58)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.0793427973985672
    2. '[i' → logprob: -2.704342842102051
    3. '[' → logprob: -5.454342842102051
    4. '.__' → logprob: -5.704342842102051
    5. '.setdefault' → logprob: -7.454342842102051
    6. '[_' → logprob: -8.32934284210205
    7. '.append' → logprob: -8.45434284210205
    8. 'parent' → logprob: -9.57934284210205
    9. '[p' → logprob: -9.57934284210205
    10. '[x' → logprob: -9.82934284210205

Token 303: 'par' (ID: 796)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.008876909501850605
    2. 'i' → logprob: -4.883876800537109
    3. ' parent' → logprob: -7.383876800537109
    4. 'p' → logprob: -8.38387680053711
    5. 'j' → logprob: -9.38387680053711
    6. 'x' → logprob: -10.00887680053711
    7. '_]' → logprob: -10.00887680053711
    8. '(parent' → logprob: -10.13387680053711
    9. '
' → logprob: -10.13387680053711
    10. ']' → logprob: -10.38387680053711

Token 304: '].' (ID: 1651)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07034185528755188
    2. 'nt' → logprob: -3.3203418254852295
    3. '].' → logprob: -3.8203418254852295
    4. 'ent' → logprob: -4.695342063903809
    5. '][' → logprob: -8.070342063903809
    6. ']' → logprob: -8.070342063903809
    7. '[' → logprob: -9.570342063903809
    8. '[t' → logprob: -11.195342063903809
    9. '],' → logprob: -12.820342063903809
    10. ',' → logprob: -13.195342063903809

Token 305: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0026358263567090034
    2. 'extend' → logprob: -6.002635955810547
    3. ' append' → logprob: -8.752635955810547
    4. '.append' → logprob: -13.377635955810547
    5. ' extend' → logprob: -15.752635955810547
    6. '.extend' → logprob: -16.127635955810547
    7. '```' → logprob: -16.127635955810547
    8. '
' → logprob: -16.377635955810547
    9. '	append' → logprob: -16.502635955810547
    10. 'appen' → logprob: -16.752635955810547

Token 306: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3125093877315521
    2. 'child' → logprob: -2.062509298324585
    3. '(child' → logprob: -2.937509298324585
    4. 'i' → logprob: -2.937509298324585
    5. 'ch' → logprob: -3.937509298324585
    6. '(ch' → logprob: -4.437509536743164
    7. '(' → logprob: -6.312509536743164
    8. 'chi' → logprob: -6.937509536743164
    9. 'chil' → logprob: -7.187509536743164
    10. '(idx' → logprob: -9.437509536743164

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.794061770662665e-05
    2. ' )' → logprob: -9.62509822845459
    3. ')
' → logprob: -11.25009822845459
    4. 'for' → logprob: -11.87509822845459
    5. '   ' → logprob: -12.25009822845459
    6. ' for' → logprob: -13.37509822845459
    7. '       ' → logprob: -13.50009822845459
    8. ' ' → logprob: -13.87509822845459
    9. ']' → logprob: -14.00009822845459
    10. '[' → logprob: -15.00009822845459

Token 308: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07907727360725403
    2. 'for' → logprob: -2.5790772438049316
    3. ')' → logprob: -9.32907772064209
    4. '   ' → logprob: -9.95407772064209
    5. '       ' → logprob: -10.20407772064209
    6. '    ' → logprob: -11.95407772064209
    7. '	for' → logprob: -12.70407772064209
    8. ' ' → logprob: -13.45407772064209
    9. '        ' → logprob: -13.70407772064209
    10. ']' → logprob: -14.45407772064209

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006198607385158539
    2. ' i' → logprob: -5.256198406219482
    3. 'range' → logprob: -7.131198406219482
    4. ' range' → logprob: -9.13119888305664
    5. 'idx' → logprob: -10.63119888305664
    6. 'parent' → logprob: -11.75619888305664
    7. ',' → logprob: -11.88119888305664
    8. ' in' → logprob: -12.50619888305664
    9. 'in' → logprob: -12.63119888305664
    10. '(i' → logprob: -13.38119888305664

Token 310: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6341759562492371
    2. ' in' → logprob: -0.7591759562492371
    3. ',' → logprob: -7.134175777435303
    4. ',parent' → logprob: -7.759175777435303
    5. 'parent' → logprob: -8.134176254272461
    6. ' ' → logprob: -10.884176254272461
    7. ' parent' → logprob: -11.134176254272461
    8. ' ,' → logprob: -11.384176254272461
    9. '[parent' → logprob: -12.259176254272461
    10. ')' → logprob: -13.134176254272461

Token 311: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.20350825786590576
    2. 'p' → logprob: -1.7035082578659058
    3. ' par' → logprob: -6.453508377075195
    4. ' p' → logprob: -8.203508377075195
    5. 'pa' → logprob: -9.328508377075195
    6. 'parent' → logprob: -9.328508377075195
    7. 'in' → logprob: -10.453508377075195
    8. 'val' → logprob: -11.328508377075195
    9. 'pr' → logprob: -11.953508377075195
    10. ' in' → logprob: -12.328508377075195

Token 312: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25195297598838806
    2. ' in' → logprob: -1.5019530057907104
    3. ')' → logprob: -10.876953125
    4. 'enumer' → logprob: -13.376953125
    5. '
' → logprob: -13.626953125
    6. ' ' → logprob: -14.501953125
    7. '```' → logprob: -14.626953125
    8. '	in' → logprob: -15.251953125
    9. '_in' → logprob: -15.501953125
    10. 'import' → logprob: -15.876953125

Token 313: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009115827269852161
    2. ' enumerate' → logprob: -7.000911712646484
    3. 'enum' → logprob: -16.750911712646484
    4. 'en' → logprob: -16.750911712646484
    5. '```' → logprob: -18.375911712646484
    6. '
' → logprob: -19.375911712646484
    7. 'in' → logprob: -19.750911712646484
    8. '(en' → logprob: -19.875911712646484
    9. 'Enumer' → logprob: -20.625911712646484
    10. '.enumer' → logprob: -20.625911712646484

Token 314: '(parent' (ID: 24729)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.011259548366069794
    2. ' parent' → logprob: -4.88625955581665
    3. 'enumer' → logprob: -6.01125955581665
    4. '(parent' → logprob: -6.76125955581665
    5. 'range' → logprob: -10.886259078979492
    6. ' enumerate' → logprob: -11.386259078979492
    7. ',parent' → logprob: -12.761259078979492
    8. '(' → logprob: -13.511259078979492
    9. ')' → logprob: -14.261259078979492
    10. ' range' → logprob: -14.386259078979492

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006229649879969656
    2. 'if' → logprob: -7.875622749328613
    3. ' if' → logprob: -8.750622749328613
    4. '()' → logprob: -10.125622749328613
    5. ' )' → logprob: -10.500622749328613
    6. ')
' → logprob: -12.125622749328613
    7. '   ' → logprob: -13.000622749328613
    8. ' ' → logprob: -13.250622749328613
    9. '())' → logprob: -13.375622749328613
    10. '):' → logprob: -13.500622749328613

Token 316: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0054367585107684135
    2. 'if' → logprob: -5.255436897277832
    3. ')' → logprob: -8.630436897277832
    4. ' ' → logprob: -11.255436897277832
    5. '   ' → logprob: -12.130436897277832
    6. '  ' → logprob: -13.380436897277832
    7. '    ' → logprob: -13.380436897277832
    8. '()' → logprob: -14.005436897277832
    9. ' )' → logprob: -14.505436897277832
    10. '	if' → logprob: -14.630436897277832

Token 317: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.47410714626312256
    2. ' par' → logprob: -0.9741071462631226
    3. '0' → logprob: -10.974106788635254
    4. ' ' → logprob: -12.349106788635254
    5. '(par' → logprob: -12.599106788635254
    6. '	par' → logprob: -12.849106788635254
    7. 'parent' → logprob: -13.974106788635254
    8. 'paren' → logprob: -14.474106788635254
    9. '   ' → logprob: -15.349106788635254
    10. 'not' → logprob: -15.474106788635254

Token 318: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2626761496067047
    2. ' >=' → logprob: -1.7626761198043823
    3. ' !=' → logprob: -3.762676239013672
    4. '!=' → logprob: -4.137676239013672
    5. '>' → logprob: -4.262676239013672
    6. '!=-' → logprob: -6.137676239013672
    7. '0' → logprob: -6.637676239013672
    8. ' >' → logprob: -6.762676239013672
    9. ' not' → logprob: -7.887676239013672
    10. ')' → logprob: -8.012676239013672

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.254077911376953
    4. '1' → logprob: -17.629077911376953
    5. '
' → logprob: -18.629077911376953
    6. '  ' → logprob: -18.879077911376953
    7. ' ' → logprob: -18.879077911376953
    8. '۰' → logprob: -18.879077911376953
    9. '```' → logprob: -19.254077911376953
    10. '０' → logprob: -19.504077911376953

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -15.87523078918457
    4. '1' → logprob: -18.12523078918457
    5. '۰' → logprob: -18.37523078918457
    6. '   ' → logprob: -18.50023078918457
    7. ')' → logprob: -18.87523078918457
    8. '```' → logprob: -19.12523078918457
    9. '=' → logprob: -19.50023078918457
    10. 'def' → logprob: -19.75023078918457

Token 321: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035467357374727726
    2. ')]' → logprob: -5.753546714782715
    3. ' ]' → logprob: -8.003546714782715
    4. '()]' → logprob: -11.128546714782715
    5. ')' → logprob: -11.628546714782715
    6. ']
' → logprob: -12.253546714782715
    7. '])' → logprob: -13.128546714782715
    8. '   ' → logprob: -13.128546714782715
    9. ' and' → logprob: -14.628546714782715
    10. ']

' → logprob: -15.128546714782715

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027731329202651978
    2. 'return' → logprob: -3.777731418609619
    3. '<|end|>' → logprob: -5.527731418609619
    4. ' return' → logprob: -8.152730941772461
    5. ')' → logprob: -9.902730941772461
    6. 'def' → logprob: -10.402730941772461
    7. '	return' → logprob: -10.902730941772461
    8. '[]' → logprob: -11.152730941772461
    9. '```' → logprob: -11.152730941772461
    10. '
' → logprob: -11.152730941772461

Token 323: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09279035031795502
    2. 'return' → logprob: -2.467790365219116
    3. '<|end|>' → logprob: -6.092790126800537
    4. ' return' → logprob: -6.967790126800537
    5. 'def' → logprob: -8.092790603637695
    6. ')' → logprob: -8.717790603637695
    7. '	return' → logprob: -9.467790603637695
    8. '    
' → logprob: -11.092790603637695
    9. '    ' → logprob: -11.217790603637695
    10. ' ' → logprob: -11.342790603637695

Token 324: '_list' (ID: 4162)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759536027908325
    2. '=' → logprob: -0.8259536027908325
    3. '=[]' → logprob: -11.825953483581543
    4. ',' → logprob: -12.700953483581543
    5. '<|end|>' → logprob: -14.075953483581543
    6. ' =
' → logprob: -14.325953483581543
    7. ' ' → logprob: -14.450953483581543
    8. '=
' → logprob: -14.700953483581543
    9. '＝' → logprob: -15.200953483581543
    10. '=[]
' → logprob: -15.325953483581543

Token 326: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8026772141456604
    2. '[(' → logprob: -1.9276771545410156
    3. '[' → logprob: -2.0526771545410156
    4. ' list' → logprob: -2.3026771545410156
    5. '[list' → logprob: -2.4276771545410156
    6. 'edge' → logprob: -3.1776771545410156
    7. ' [' → logprob: -3.9276771545410156
    8. '[]
' → logprob: -4.552677154541016
    9. '[]' → logprob: -4.927677154541016
    10. ' [(' → logprob: -5.802677154541016

Token 327: 'edge' (ID: 13457)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.5432875752449036
    2. '(i' → logprob: -1.6682875156402588
    3. ']' → logprob: -2.793287515640259
    4. '(' → logprob: -2.918287515640259
    5. 'edge' → logprob: -2.918287515640259
    6. '(parent' → logprob: -4.043287754058838
    7. '[]' → logprob: -4.668287754058838
    8. '(v' → logprob: -5.418287754058838
    9. '(x' → logprob: -5.418287754058838
    10. ' (' → logprob: -5.543287754058838

Token 328: '.get' (ID: 775)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5186153650283813
    2. ']' → logprob: -1.0186153650283813
    3. '[parent' → logprob: -4.893615245819092
    4. '.keys' → logprob: -5.143615245819092
    5. 'for' → logprob: -5.518615245819092
    6. 'i' → logprob: -5.518615245819092
    7. '.get' → logprob: -5.768615245819092
    8. ')' → logprob: -5.893615245819092
    9. '[' → logprob: -5.893615245819092
    10. ' for' → logprob: -6.643615245819092

Token 329: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18680264055728912
    2. 'i' → logprob: -1.811802625656128
    3. '(k' → logprob: -5.936802864074707
    4. ' i' → logprob: -6.811802864074707
    5. '(' → logprob: -7.061802864074707
    6. '(-' → logprob: -7.561802864074707
    7. 'k' → logprob: -7.561802864074707
    8. ']' → logprob: -7.686802864074707
    9. '(x' → logprob: -8.811802864074707
    10. '(_)' → logprob: -8.811802864074707

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ' ,' → logprob: -10.250055313110352
    3. ')' → logprob: -11.375055313110352
    4. '[],' → logprob: -12.750055313110352
    5. '[]' → logprob: -13.500055313110352
    6. ',
' → logprob: -13.625055313110352
    7. '([]' → logprob: -14.625055313110352
    8. ',i' → logprob: -14.625055313110352
    9. ']' → logprob: -15.125055313110352
    10. 'for' → logprob: -15.125055313110352

Token 331: ' [])' (ID: 95430)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.004097993019968271
    2. '[]' → logprob: -5.504097938537598
    3. ' [])' → logprob: -11.629097938537598
    4. ')' → logprob: -11.629097938537598
    5. '[])
' → logprob: -13.504097938537598
    6. '[]
' → logprob: -15.129097938537598
    7. ')]' → logprob: -17.004098892211914
    8. '[]):' → logprob: -17.004098892211914
    9. 'list' → logprob: -17.129098892211914
    10. '[]

' → logprob: -17.379098892211914

Token 332: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08400639146566391
    2. 'for' → logprob: -2.5840063095092773
    3. ')' → logprob: -5.584006309509277
    4. '   ' → logprob: -7.209006309509277
    5. '()' → logprob: -7.584006309509277
    6. ']' → logprob: -9.959006309509277
    7. ' ' → logprob: -10.584006309509277
    8. '[:]' → logprob: -11.709006309509277
    9. '    ' → logprob: -12.459006309509277
    10. ' )' → logprob: -12.584006309509277

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018360992893576622
    2. ' i' → logprob: -4.0183610916137695
    3. 'range' → logprob: -8.89336109161377
    4. ' range' → logprob: -9.51836109161377
    5. ' ' → logprob: -16.643360137939453
    6. '_' → logprob: -17.268360137939453
    7. ' in' → logprob: -17.643360137939453
    8. '_i' → logprob: -18.018360137939453
    9. '   ' → logprob: -18.018360137939453
    10. '  ' → logprob: -18.643360137939453

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048612114042043686
    2. 'in' → logprob: -3.048612117767334
    3. 'i' → logprob: -11.673611640930176
    4. 'range' → logprob: -11.798611640930176
    5. ' ' → logprob: -12.298611640930176
    6. ' i' → logprob: -13.798611640930176
    7. 'n' → logprob: -13.923611640930176
    8. ')' → logprob: -14.423611640930176
    9. ' range' → logprob: -14.423611640930176
    10. '  ' → logprob: -15.048611640930176

Token 335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.76104736328125
    4. '	range' → logprob: -16.88604736328125
    5. '(range' → logprob: -17.26104736328125
    6. ' ' → logprob: -17.38604736328125
    7. '  ' → logprob: -17.88604736328125
    8. '
' → logprob: -18.38604736328125
    9. 'N' → logprob: -18.88604736328125
    10. '```' → logprob: -19.76104736328125

Token 336: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00016945181414484978
    2. '(N' → logprob: -9.00016975402832
    3. ' N' → logprob: -10.25016975402832
    4. '   ' → logprob: -11.62516975402832
    5. '(' → logprob: -13.37516975402832
    6. ' (' → logprob: -16.37516975402832
    7. ' ' → logprob: -17.25016975402832
    8. '0' → logprob: -17.87516975402832
    9. 'len' → logprob: -17.87516975402832
    10. ',' → logprob: -18.00016975402832

Token 337: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021402664424385875
    2. ')]
' → logprob: -8.625213623046875
    3. ')' → logprob: -10.750213623046875
    4. ']' → logprob: -12.125213623046875
    5. '   ' → logprob: -13.250213623046875
    6. '+' → logprob: -13.750213623046875
    7. ')])' → logprob: -14.000213623046875
    8. ')]

' → logprob: -14.125213623046875
    9. '])]' → logprob: -14.125213623046875
    10. ')]
' → logprob: -14.250213623046875

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026081625372171402
    2. '<|end|>' → logprob: -3.9010815620422363
    3. '
' → logprob: -5.526081562042236
    4. 'return' → logprob: -7.026081562042236
    5. '    
' → logprob: -8.401082038879395
    6. ' return' → logprob: -8.776082038879395
    7. ')' → logprob: -8.776082038879395
    8. '```' → logprob: -10.651082038879395
    9. '<|end|>' → logprob: -10.651082038879395
    10. '	return' → logprob: -10.901082038879395

Token 339: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01655837520956993
    2. 'return' (adapté à ' return') → logprob: -4.1415581703186035
    3. ' return' → logprob: -8.266558647155762
    4. '<|end|>' → logprob: -9.016558647155762
    5. '
' → logprob: -9.391558647155762
    6. '    
' → logprob: -10.391558647155762
    7. '	return' → logprob: -11.516558647155762
    8. ')' → logprob: -12.016558647155762
    9. 'def' → logprob: -12.516558647155762
    10. '```' → logprob: -12.641558647155762

Token 340: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3946472704410553
    2. 'edges' → logprob: -1.269647240638733
    3. 'edge' → logprob: -3.3946473598480225
    4. ' parent' → logprob: -5.394647121429443
    5. 'indices' → logprob: -5.769647121429443
    6. ' edges' → logprob: -6.519647121429443
    7. 'N' → logprob: -6.644647121429443
    8. '(parent' → logprob: -7.644647121429443
    9. 'parents' → logprob: -8.769647598266602
    10. '(edges' → logprob: -9.269647598266602

Token 341: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6244308352470398
    2. ' edges' → logprob: -1.4994308948516846
    3. 'edge' → logprob: -1.6244308948516846
    4. ' edge' → logprob: -3.1244308948516846
    5. 'XD' → logprob: -10.124430656433105
    6. '   ' → logprob: -10.374430656433105
    7. ' XD' → logprob: -10.749430656433105
    8. 'X' → logprob: -11.124430656433105
    9. 'Xd' → logprob: -11.874430656433105
    10. 'indices' → logprob: -11.936930656433105

Token 343: '_list' (ID: 4162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5993886590003967
    2. 'st' → logprob: -0.9743886590003967
    3. '_list' → logprob: -2.724388599395752
    4. ',' → logprob: -6.224388599395752
    5. '_' → logprob: -6.849388599395752
    6. '[' → logprob: -6.849388599395752
    7. 'sts' → logprob: -6.849388599395752
    8. 'List' → logprob: -7.474388599395752
    9. 'return' → logprob: -7.599388599395752
    10. 's' → logprob: -7.724388599395752

Token 344: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: 'parent' (ID: 4903)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' edge' (ID: 11165)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.061487793922424316
    2. ' edges' → logprob: -3.3114876747131348
    3. 'edge' → logprob: -3.8114876747131348
    4. 'make' → logprob: -7.186487674713135
    5. ' edge' → logprob: -8.936488151550293
    6. ' make' → logprob: -9.811488151550293
    7. '_edges' → logprob: -10.186488151550293
    8. 'children' → logprob: -10.811488151550293
    9. 'adj' → logprob: -11.186488151550293
    10. 'ed' → logprob: -11.186488151550293

Token 348: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3905133903026581
    2. '=' → logprob: -1.8905134201049805
    3. ' =' → logprob: -2.6405134201049805
    4. '<|end|>' → logprob: -2.7655134201049805
    5. ')' → logprob: -3.8905134201049805
    6. '_list' → logprob: -5.2655134201049805
    7. 's' → logprob: -6.1405134201049805
    8. ']' → logprob: -6.5155134201049805
    9. '(' → logprob: -6.5155134201049805
    10. '[' → logprob: -6.6405134201049805

Token 349: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.006715728435665369
    2. ' make' → logprob: -5.006715774536133
    3. '(make' → logprob: -15.006715774536133
    4. '	make' → logprob: -16.131715774536133
    5. '   ' → logprob: -18.256715774536133
    6. ' ' → logprob: -18.756715774536133
    7. '  ' → logprob: -20.131715774536133
    8. '_make' → logprob: -20.381715774536133
    9. '.make' → logprob: -20.506715774536133
    10. '    ' → logprob: -21.756715774536133

Token 350: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6720954179763794
    2. 'def' → logprob: -1.4220954179763794
    3. '<|end|>' → logprob: -1.5470954179763794
    4. '()' → logprob: -4.04709529876709
    5. '```' → logprob: -5.17209529876709
    6. '(
' → logprob: -5.79709529876709
    7. '()
' → logprob: -5.92209529876709
    8. '

' → logprob: -6.67209529876709
    9. ')' → logprob: -7.04709529876709
    10. 'for' → logprob: -7.17209529876709

Token 351: '@' (ID: 31)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04546193778514862
    2. 'for' → logprob: -3.295461893081665
    3. ')' → logprob: -5.795462131500244
    4. '#' → logprob: -6.795462131500244
    5. '[' → logprob: -7.545462131500244
    6. '```' → logprob: -7.670462131500244
    7. 'dp' → logprob: -8.420461654663086
    8. '[]' → logprob: -8.420461654663086
    9. 'DP' → logprob: -8.920461654663086
    10. '<|end|>' → logprob: -8.920461654663086

Token 352: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.392202976712724e-06
    2. 'dat' → logprob: -12.125006675720215
    3. 'cache' → logprob: -14.750006675720215
    4. 'staticmethod' → logprob: -14.875006675720215
    5. '@' → logprob: -16.1250057220459
    6. ' l' → logprob: -17.5000057220459
    7. 'classmethod' → logprob: -18.0000057220459
    8. '__' → logprob: -18.1250057220459
    9. '```' → logprob: -19.0000057220459
    10. '@@' → logprob: -19.1250057220459

Token 353: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.008615988306701183
    2. 'r' → logprob: -4.758615970611572
    3. '@' → logprob: -14.25861644744873
    4. 'rl' → logprob: -15.25861644744873
    5. 'RU' → logprob: -16.008615493774414
    6. 'ambda' → logprob: -16.008615493774414
    7. 'def' → logprob: -16.383615493774414
    8. 'a' → logprob: -17.258615493774414
    9. '1' → logprob: -17.258615493774414
    10. '```' → logprob: -17.258615493774414

Token 354: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0001126026691053994
    2. 'cache' → logprob: -9.500112533569336
    3. '_cached' → logprob: -10.250112533569336
    4. 'cached' → logprob: -14.125112533569336
    5. '_c' → logprob: -14.500112533569336
    6. '_' → logprob: -14.875112533569336
    7. '_CACHE' → logprob: -15.125112533569336
    8. '_cash' → logprob: -16.250112533569336
    9. '_wrap' → logprob: -16.500112533569336
    10. 'Cache' → logprob: -16.625112533569336

Token 355: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.1531493365764618
    2. 'def' → logprob: -2.278149366378784
    3. '(max' → logprob: -3.278149366378784
    4. 'None' → logprob: -7.653149127960205
    5. '()' → logprob: -7.778149127960205
    6. '(' → logprob: -8.403149604797363
    7. '
' → logprob: -8.528149604797363
    8. '(def' → logprob: -8.778149604797363
    9. '(int' → logprob: -9.153149604797363
    10. '()
' → logprob: -9.278149604797363

Token 356: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019512351602315903
    2. ')' → logprob: -4.019512176513672
    3. 'def' → logprob: -6.769512176513672
    4. ')
' → logprob: -9.144512176513672
    5. '())
' → logprob: -9.394512176513672
    6. '
' → logprob: -11.519512176513672
    7. '()
' → logprob: -12.144512176513672
    8. ' )
' → logprob: -13.144512176513672
    9. '()' → logprob: -13.519512176513672
    10. '(' → logprob: -14.269512176513672

Token 357: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0040830280631780624
    2. '
' → logprob: -5.504083156585693
    3. ' def' → logprob: -12.504082679748535
    4. '(def' → logprob: -15.004082679748535
    5. '    
' → logprob: -15.879082679748535
    6. '
' → logprob: -16.62908363342285
    7. '0' → logprob: -16.62908363342285
    8. '8' → logprob: -16.87908363342285
    9. '(' → logprob: -16.87908363342285
    10. '

' → logprob: -17.37908363342285

Token 358: ' cnt' (ID: 27340)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.6417331695556641
    2. 'dp' → logprob: -0.7667331695556641
    3. 'f' → logprob: -5.266733169555664
    4. 'solve' → logprob: -5.891733169555664
    5. 'count' → logprob: -8.016733169555664
    6. ' dfs' → logprob: -8.141733169555664
    7. 'rec' → logprob: -9.266733169555664
    8. 'func' → logprob: -9.391733169555664
    9. 'calc' → logprob: -9.391733169555664
    10. 'depth' → logprob: -9.891733169555664

Token 359: '(node' (ID: 13356)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2130214422941208
    2. '(' → logprob: -2.9630215167999268
    3. '(node' → logprob: -2.9630215167999268
    4. '(u' → logprob: -3.4630215167999268
    5. '(s' → logprob: -4.463021278381348
    6. '(k' → logprob: -4.463021278381348
    7. '(x' → logprob: -4.588021278381348
    8. '(n' → logprob: -4.713021278381348
    9. '(parent' → logprob: -5.463021278381348
    10. '(v' → logprob: -5.463021278381348

Token 360: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007914528250694275
    2. ',' → logprob: -5.3829145431518555
    3. '):
' → logprob: -5.7579145431518555
    4. ')' → logprob: -9.382914543151855
    5. ' ):' → logprob: -10.882914543151855
    6. ':' → logprob: -11.632914543151855
    7. '=' → logprob: -11.757914543151855
    8. '   ' → logprob: -12.382914543151855
    9. '):
' → logprob: -13.382914543151855
    10. ' ' → logprob: -13.632914543151855

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4406932294368744
    2. ' res' → logprob: -1.8156932592391968
    3. 'res' → logprob: -2.4406931400299072
    4. ' if' → logprob: -2.6906931400299072
    5. 'if' → logprob: -3.4406931400299072
    6. 'ret' → logprob: -6.440693378448486
    7. '0' → logprob: -6.565693378448486
    8. ' ans' → logprob: -6.940693378448486
    9. ' ret' → logprob: -7.565693378448486
    10. 'total' → logprob: -7.940693378448486

Token 362: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11389122903347015
    2. 'if' → logprob: -2.488891124725342
    3. '0' → logprob: -4.238891124725342
    4. ' res' → logprob: -5.113891124725342
    5. '1' → logprob: -6.738891124725342
    6. ' if' → logprob: -6.988891124725342
    7. 'total' → logprob: -7.238891124725342
    8. '   ' → logprob: -7.613891124725342
    9. 'dp' → logprob: -8.4888916015625
    10. 'ret' → logprob: -8.8638916015625

Token 363: ' Agg' (ID: 88220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39193686842918396
    2. 'if' → logprob: -1.1419368982315063
    3. ' if' → logprob: -6.016936779022217
    4. ' res' → logprob: -6.391936779022217
    5. '   ' → logprob: -8.016937255859375
    6. 'ret' → logprob: -8.141937255859375
    7. 'ans' → logprob: -9.766937255859375
    8. 'total' → logprob: -9.891937255859375
    9. 'return' → logprob: -9.891937255859375
    10. 'dp' → logprob: -9.891937255859375

Token 364: 'ress' (ID: 799)
  Prédit: 'reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reg' → logprob: -0.6137881278991699
    2. 'def' → logprob: -0.8637881278991699
    3. '=' → logprob: -4.23878812789917
    4. '   ' → logprob: -5.11378812789917
    5. 'reate' → logprob: -5.61378812789917
    6. 'rega' → logprob: -5.73878812789917
    7. 'umulate' → logprob: -6.36378812789917
    8. ' =' → logprob: -6.36378812789917
    9. 're' → logprob: -7.48878812789917
    10. '+=' → logprob: -7.73878812789917

Token 365: 'ively' (ID: 5861)
  Prédit: 'reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reg' → logprob: -0.6862262487411499
    2. '   ' → logprob: -1.93622624874115
    3. 'ressive' → logprob: -2.4362263679504395
    4. ' ' → logprob: -2.8112263679504395
    5. '=' → logprob: -2.9362263679504395
    6. 'def' → logprob: -3.0612263679504395
    7. 'reate' → logprob: -3.5612263679504395
    8. '  ' → logprob: -4.1862263679504395
    9. 'ress' → logprob: -4.3112263679504395
    10. ')' → logprob: -4.8112263679504395

Token 366: ' use' (ID: 1199)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1805278062820435
    2. ' return' → logprob: -1.3055278062820435
    3. 'return' → logprob: -1.9305278062820435
    4. '   ' → logprob: -3.180527687072754
    5. ' res' → logprob: -3.430527687072754
    6. ' def' → logprob: -3.680527687072754
    7. 'result' → logprob: -3.680527687072754
    8. ' result' → logprob: -3.805527687072754
    9. 'res' → logprob: -3.930527687072754
    10. 'sum' → logprob: -3.930527687072754

Token 367: ' functional' (ID: 20483)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5996654629707336
    2. 'len' → logprob: -1.5996654033660889
    3. '1' → logprob: -1.9746654033660889
    4. 'sum' → logprob: -3.474665403366089
    5. 'max' → logprob: -4.099665641784668
    6. 'def' → logprob: -4.099665641784668
    7. ' edge' → logprob: -5.099665641784668
    8. 'node' → logprob: -5.349665641784668
    9. 'cnt' → logprob: -5.349665641784668
    10. '0' → logprob: -5.474665641784668

Token 368: ' constructs' (ID: 116854)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.48309311270713806
    2. 'def' → logprob: -1.8580931425094604
    3. 'lambda' → logprob: -2.108093023300171
    4. '
' → logprob: -4.10809326171875
    5. 'node' → logprob: -4.60809326171875
    6. '(node' → logprob: -4.60809326171875
    7. '_cnt' → logprob: -4.73309326171875
    8. ' ' → logprob: -4.85809326171875
    9. '(lambda' → logprob: -4.85809326171875
    10. ' programming' → logprob: -5.23309326171875

Token 369: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5225659608840942
    2. ':' → logprob: -1.2725659608840942
    3. '(
' → logprob: -2.8975658416748047
    4. ':
' → logprob: -3.8975658416748047
    5. '(' → logprob: -4.272565841674805
    6. ',' → logprob: -5.022565841674805
    7. ' :' → logprob: -5.147565841674805
    8. '():' → logprob: -5.147565841674805
    9. '):' → logprob: -5.647565841674805
    10. '=' → logprob: -6.147565841674805

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11130448430776596
    2. ' res' → logprob: -2.861304521560669
    3. ' if' → logprob: -3.486304521560669
    4. 'if' → logprob: -4.61130428314209
    5. 'res' → logprob: -5.36130428314209
    6. ':' → logprob: -7.23630428314209
    7. 'return' → logprob: -8.23630428314209
    8. 'ret' → logprob: -8.61130428314209
    9. 'children' → logprob: -8.73630428314209
    10. 'result' → logprob: -8.86130428314209

Token 371: ' branches' (ID: 34625)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03046325035393238
    2. 'if' → logprob: -3.780463218688965
    3. ' res' → logprob: -6.155463218688965
    4. 'total' → logprob: -6.530463218688965
    5. 'return' → logprob: -6.655463218688965
    6. 'child' → logprob: -7.280463218688965
    7. 'children' → logprob: -7.405463218688965
    8. '   ' → logprob: -7.780463218688965
    9. 'ret' → logprob: -9.030463218688965
    10. ' if' → logprob: -9.155463218688965

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047846369445323944
    2. ' =' → logprob: -3.1728463172912598
    3. '=node' → logprob: -5.67284631729126
    4. '   ' → logprob: -6.92284631729126
    5. '(node' → logprob: -8.297846794128418
    6. '[node' → logprob: -9.672846794128418
    7. ',' → logprob: -10.047846794128418
    8. ')' → logprob: -11.047846794128418
    9. ')=' → logprob: -11.672846794128418
    10. ',node' → logprob: -11.672846794128418

Token 373: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.35198575258255005
    2. 'tuple' → logprob: -2.6019856929779053
    3. 'map' → logprob: -2.7269856929779053
    4. '[' → logprob: -2.8519856929779053
    5. 'list' → logprob: -2.8519856929779053
    6. '(edge' → logprob: -3.6019856929779053
    7. ' edge' → logprob: -5.851985931396484
    8. 'chain' → logprob: -6.476985931396484
    9. 'sum' → logprob: -6.476985931396484
    10. '(map' → logprob: -6.726985931396484

Token 374: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.001173321157693863
    2. '(node' → logprob: -6.751173496246338
    3. '.get' → logprob: -12.75117301940918
    4. '[' → logprob: -16.00117301940918
    5. 'node' → logprob: -16.50117301940918
    6. '=node' → logprob: -17.62617301940918
    7. '[token' → logprob: -18.00117301940918
    8. 'get' → logprob: -18.00117301940918
    9. ',node' → logprob: -18.37617301940918
    10. '()[' → logprob: -19.25117301940918

Token 375: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.28177550435066223
    2. ']' → logprob: -1.4067754745483398
    3. '])' → logprob: -8.90677547454834
    4. ')
' → logprob: -9.28177547454834
    5. '   ' → logprob: -9.53177547454834
    6. '])
' → logprob: -9.90677547454834
    7. '()]
' → logprob: -10.03177547454834
    8. ')' → logprob: -10.15677547454834
    9. ']

' → logprob: -10.15677547454834
    10. '()]' → logprob: -10.40677547454834

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3479314148426056
    2. 'res' → logprob: -2.347931385040283
    3. 'if' → logprob: -2.347931385040283
    4. ' if' → logprob: -2.722931385040283
    5. ' res' → logprob: -4.597931385040283
    6. 'result' → logprob: -4.972931385040283
    7. '
' → logprob: -5.222931385040283
    8. 'return' → logprob: -5.597931385040283
    9. 'ret' → logprob: -5.722931385040283
    10. 'total' → logprob: -5.972931385040283

Token 377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4617500603199005
    2. 'res' → logprob: -1.3367500305175781
    3. 'return' → logprob: -2.336750030517578
    4. '   ' → logprob: -5.961750030517578
    5. 'ret' → logprob: -6.086750030517578
    6. ' if' → logprob: -6.461750030517578
    7. 'result' → logprob: -6.711750030517578
    8. 'ans' → logprob: -7.461750030517578
    9. 'total' → logprob: -7.461750030517578
    10. ' res' → logprob: -7.836750030517578

Token 378: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05517596751451492
    2. 'not' → logprob: -2.930176019668579
    3. ' len' → logprob: -8.55517578125
    4. 'len' → logprob: -9.30517578125
    5. ' node' → logprob: -12.18017578125
    6. '!' → logprob: -13.43017578125
    7. 'node' → logprob: -13.93017578125
    8. '   ' → logprob: -14.05517578125
    9. ' branches' → logprob: -14.30517578125
    10. ' ' → logprob: -14.93017578125

Token 379: ' branches' (ID: 34625)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.1602267622947693
    2. ' branches' → logprob: -1.910226821899414
    3. 'edges' → logprob: -13.785226821899414
    4. 'b' → logprob: -14.285226821899414
    5. 'branch' → logprob: -15.285226821899414
    6. 'br' → logprob: -15.285226821899414
    7. 'edge' → logprob: -15.660226821899414
    8. ' ' → logprob: -16.035226821899414
    9. ' edges' → logprob: -16.160226821899414
    10. '   ' → logprob: -16.410226821899414

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022224606946110725
    2. ':
' → logprob: -6.127222537994385
    3. ':return' → logprob: -10.252222061157227
    4. '):' → logprob: -13.627222061157227
    5. ' :' → logprob: -14.877222061157227
    6. '   ' → logprob: -15.002222061157227
    7. ':
' → logprob: -16.627222061157227
    8. ')' → logprob: -16.877222061157227
    9. ':`' → logprob: -17.627222061157227
    10. '):
' → logprob: -17.752222061157227

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33892422914505005
    2. '   ' → logprob: -1.5889241695404053
    3. 'return' → logprob: -2.9639241695404053
    4. ' return' → logprob: -3.5889241695404053
    5. '
' → logprob: -6.213924407958984
    6. ':return' → logprob: -6.838924407958984
    7. ':
' → logprob: -7.588924407958984
    8. ':' → logprob: -8.338924407958984
    9. '	return' → logprob: -9.838924407958984
    10. ',' → logprob: -10.213924407958984

Token 382: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022482690401375294
    2. ' return' → logprob: -6.502248287200928
    3. '1' → logprob: -7.252248287200928
    4. '   ' → logprob: -10.37724781036377
    5. '       ' → logprob: -12.25224781036377
    6. '
' → logprob: -14.37724781036377
    7. ':return' → logprob: -15.87724781036377
    8. '           ' → logprob: -16.377248764038086
    9. ' ' → logprob: -16.377248764038086
    10. '0' → logprob: -16.877248764038086

Token 383: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004583135014399886
    2. '(' → logprob: -9.125458717346191
    3. 'XD' → logprob: -9.125458717346191
    4. '[' → logprob: -9.375458717346191
    5. ' ' → logprob: -9.875458717346191
    6. '2' → logprob: -9.875458717346191
    7. '0' → logprob: -10.250458717346191
    8. 'pow' → logprob: -12.375458717346191
    9. 'Xd' → logprob: -13.500458717346191
    10. '(X' → logprob: -13.625458717346191

Token 384: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038125456776469946
    2. 'XD' → logprob: -6.503812313079834
    3. '(' → logprob: -6.753812313079834
    4. '2' → logprob: -7.503812313079834
    5. '[' → logprob: -8.003812789916992
    6. '0' → logprob: -8.628812789916992
    7. '(X' → logprob: -11.378812789916992
    8. 'pow' → logprob: -11.378812789916992
    9. '[(' → logprob: -12.253812789916992
    10. 'xd' → logprob: -12.378812789916992

Token 385: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019094686955213547
    2. '   ' → logprob: -4.519094467163086
    3. '\n' → logprob: -5.394094467163086
    4. '    
' → logprob: -6.269094467163086
    5. '  
' → logprob: -7.269094467163086
    6. ' 
' → logprob: -8.019094467163086
    7. ' ' → logprob: -9.519094467163086
    8. 'return' → logprob: -9.519094467163086
    9. '
' → logprob: -9.644094467163086
    10. ' return' → logprob: -10.019094467163086

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09546999633312225
    2. '
' → logprob: -2.7204699516296387
    3. '    
' → logprob: -3.8454699516296387
    4. '  
' → logprob: -6.095469951629639
    5. ' 
' → logprob: -7.220469951629639
    6. '   
' → logprob: -7.845469951629639
    7. ' ' → logprob: -9.595470428466797
    8. '```' → logprob: -9.845470428466797
    9. '	
' → logprob: -10.345470428466797
    10. '2' → logprob: -10.345470428466797

Token 387: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.10830055922269821
    2. 'return' → logprob: -2.7333004474639893
    3. '   ' → logprob: -4.233300685882568
    4. 'ret' → logprob: -4.858300685882568
    5. 'total' → logprob: -5.108300685882568
    6. ' res' → logprob: -5.733300685882568
    7. 's' → logprob: -6.108300685882568
    8. 'result' → logprob: -6.608300685882568
    9. 'r' → logprob: -6.983300685882568
    10. 'ans' → logprob: -8.10830020904541

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '   ' → logprob: -16.076414108276367
    4. ',' → logprob: -16.201414108276367
    5. ' *=' → logprob: -16.826414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '=
' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.451414108276367
    9. '*=' → logprob: -18.576414108276367
    10. '    ' → logprob: -18.701414108276367

Token 389: ' reduce' (ID: 10389)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33943042159080505
    2. 'reduce' → logprob: -1.3394304513931274
    3. 'sum' → logprob: -4.839430332183838
    4. '   ' → logprob: -5.214430332183838
    5. 'prod' → logprob: -5.464430332183838
    6. '2' → logprob: -5.589430332183838
    7. 'pow' → logprob: -6.214430332183838
    8. '0' → logprob: -7.464430332183838
    9. ' ' → logprob: -7.589430332183838
    10. 'mul' → logprob: -8.339430809020996

Token 390: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.030811747536063194
    2. '(lambda' → logprob: -3.5308117866516113
    3. '(operator' → logprob: -6.905811786651611
    4. '(' → logprob: -10.405811309814453
    5. 'mul' → logprob: -11.030811309814453
    6. '```' → logprob: -12.905811309814453
    7. '(mu' → logprob: -13.155811309814453
    8. '(
' → logprob: -13.405811309814453
    9. '   ' → logprob: -13.655811309814453
    10. '((' → logprob: -14.030811309814453

Token 391: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5995620489120483
    2. 'mul' → logprob: -0.8495620489120483
    3. ' lambda' → logprob: -4.474562168121338
    4. '   ' → logprob: -5.474562168121338
    5. 'x' → logprob: -5.724562168121338
    6. '(lambda' → logprob: -5.849562168121338
    7. ' mul' → logprob: -7.099562168121338
    8. ' ' → logprob: -7.849562168121338
    9. ' x' → logprob: -8.47456169128418
    10. '  ' → logprob: -9.97456169128418

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31723135709762573
    2. 'lambda' → logprob: -1.3172314167022705
    3. '(lambda' → logprob: -6.442231178283691
    4. ' lambda' → logprob: -6.942231178283691
    5. 'mul' → logprob: -6.942231178283691
    6. '=lambda' → logprob: -8.317231178283691
    7. '   ' → logprob: -9.817231178283691
    8. ' ,' → logprob: -10.192231178283691
    9. ',m' → logprob: -10.442231178283691
    10. ' ' → logprob: -11.067231178283691

Token 393: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.62718665599823
    2. 'lambda' → logprob: -0.87718665599823
    3. 'mul' → logprob: -3.2521867752075195
    4. '   ' → logprob: -5.7521867752075195
    5. ' lambda' → logprob: -5.7521867752075195
    6. ' y' → logprob: -6.0021867752075195
    7. 'a' → logprob: -7.2521867752075195
    8. 'x' → logprob: -7.5021867752075195
    9. '    ' → logprob: -8.00218677520752
    10. '  ' → logprob: -8.62718677520752

Token 394: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1106913760304451
    2. 'lambda' → logprob: -2.3606913089752197
    3. ':' → logprob: -5.610691547393799
    4. '(lambda' → logprob: -6.110691547393799
    5. 'x' → logprob: -6.235691547393799
    6. ' lambda' → logprob: -7.235691547393799
    7. '   ' → logprob: -7.485691547393799
    8. '=lambda' → logprob: -7.610691547393799
    9. 'mul' → logprob: -8.11069107055664
    10. ',x' → logprob: -8.73569107055664

Token 395: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7057263851165771
    2. 'x' → logprob: -0.8307263851165771
    3. ' (' → logprob: -3.705726385116577
    4. ' x' → logprob: -3.955726385116577
    5. 'mul' → logprob: -3.955726385116577
    6. '(lambda' → logprob: -5.580726623535156
    7. '(' → logprob: -6.205726623535156
    8. '   ' → logprob: -7.580726623535156
    9. '(m' → logprob: -7.705726623535156
    10. 'lambda' → logprob: -7.955726623535156

Token 396: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003916207235306501
    2. '(x' → logprob: -5.753916263580322
    3. ' x' → logprob: -7.378916263580322
    4. '(' → logprob: -9.628915786743164
    5. ' (' → logprob: -11.253915786743164
    6. 'mul' → logprob: -11.503915786743164
    7. '(lambda' → logprob: -11.628915786743164
    8. '   ' → logprob: -11.628915786743164
    9. 'lambda' → logprob: -12.253915786743164
    10. ' ' → logprob: -14.128915786743164

Token 397: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20177944004535675
    2. ' *' → logprob: -1.8267794847488403
    3. '*y' → logprob: -3.826779365539551
    4. '*(' → logprob: -12.57677936553955
    5. '**' → logprob: -13.07677936553955
    6. '*x' → logprob: -13.57677936553955
    7. ' ' → logprob: -13.82677936553955
    8. '   ' → logprob: -14.07677936553955
    9. ' ' → logprob: -14.32677936553955
    10. 'y' → logprob: -14.70177936553955

Token 398: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008214304223656654
    2. ' y' → logprob: -5.133214473724365
    3. 'cnt' → logprob: -6.133214473724365
    4. '(y' → logprob: -9.883213996887207
    5. ' cnt' → logprob: -10.383213996887207
    6. '(cnt' → logprob: -11.008213996887207
    7. '   ' → logprob: -12.133213996887207
    8. '(' → logprob: -13.258213996887207
    9. '2' → logprob: -13.883213996887207
    10. ' (' → logprob: -13.883213996887207

Token 399: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7319456338882446
    2. ',' → logprob: -1.4819456338882446
    3. '%' → logprob: -1.9819456338882446
    4. ')%' → logprob: -1.9819456338882446
    5. ' %' → logprob: -4.981945514678955
    6. '(cnt' → logprob: -5.981945514678955
    7. 'cnt' → logprob: -6.356945514678955
    8. '()%' → logprob: -6.856945514678955
    9. '(),' → logprob: -6.981945514678955
    10. '),' → logprob: -7.481945514678955

Token 400: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16704802215099335
    2. ',' → logprob: -2.5420479774475098
    3. ' %' → logprob: -2.9170479774475098
    4. '(cnt' → logprob: -4.79204797744751
    5. ')' → logprob: -5.29204797744751
    6. 'cnt' → logprob: -6.16704797744751
    7. '(' → logprob: -6.29204797744751
    8. '(res' → logprob: -6.79204797744751
    9. ')%' → logprob: -7.04204797744751
    10. 'res' → logprob: -7.91704797744751

Token 401: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08071370422840118
    2. '2' → logprob: -2.8307137489318848
    3. '998' → logprob: -4.205713748931885
    4. '(' → logprob: -6.955713748931885
    5. '100' → logprob: -7.205713748931885
    6. 'y' → logprob: -7.580713748931885
    7. ' ' → logprob: -7.955713748931885
    8. 'cnt' → logprob: -8.205713272094727
    9. ' MOD' → logprob: -8.830713272094727
    10. '999' → logprob: -8.955713272094727

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06303378939628601
    2. '(cnt' → logprob: -3.0630338191986084
    3. 'cnt' → logprob: -4.938033580780029
    4. ' ,' → logprob: -6.188033580780029
    5. '(res' → logprob: -6.938033580780029
    6. '   ' → logprob: -7.188033580780029
    7. '(' → logprob: -7.313033580780029
    8. ',
' → logprob: -7.438033580780029
    9. ')' → logprob: -7.438033580780029
    10. ',res' → logprob: -8.188034057617188

Token 403: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.6271417140960693
    2. 'cnt' → logprob: -0.8771417140960693
    3. 'map' → logprob: -3.3771417140960693
    4. '[cnt' → logprob: -4.877141952514648
    5. ' cnt' → logprob: -5.752141952514648
    6. '(map' → logprob: -6.002141952514648
    7. ' (' → logprob: -7.127141952514648
    8. '(c' → logprob: -7.377141952514648
    9. '[' → logprob: -8.127141952514648
    10. '(' → logprob: -8.252141952514648

Token 404: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011274637654423714
    2. '(cnt' → logprob: -4.511274814605713
    3. ' cnt' → logprob: -8.511274337768555
    4. '[cnt' → logprob: -11.011274337768555
    5. '(' → logprob: -13.136274337768555
    6. ' (' → logprob: -13.636274337768555
    7. 'pow' → logprob: -13.761274337768555
    8. 'count' → logprob: -13.886274337768555
    9. '
' → logprob: -14.136274337768555
    10. '	cnt' → logprob: -14.261274337768555

Token 405: '(v' (ID: 6932)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.013608015142381191
    2. '(branch' → logprob: -4.513607978820801
    3. '(child' → logprob: -6.263607978820801
    4. '(c' → logprob: -8.0136079788208
    5. '(i' → logprob: -8.7636079788208
    6. '(br' → logprob: -9.1386079788208
    7. '(x' → logprob: -11.0136079788208
    8. '(ch' → logprob: -11.5136079788208
    9. '(e' → logprob: -11.6386079788208
    10. '(n' → logprob: -12.2636079788208

Token 406: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1554570198059082
    2. '()' → logprob: -1.2804570198059082
    3. '(node' → logprob: -1.2804570198059082
    4. '(v' → logprob: -2.780457019805908
    5. '(' → logprob: -3.030457019805908
    6. ' for' → logprob: -4.655457019805908
    7. 'for' → logprob: -6.405457019805908
    8. '   ' → logprob: -6.905457019805908
    9. ' ' → logprob: -7.030457019805908
    10. '(branch' → logprob: -7.155457019805908

Token 407: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3174807131290436
    2. ' for' → logprob: -1.8174806833267212
    3. 'for' → logprob: -2.3174808025360107
    4. '(' → logprob: -5.192480564117432
    5. ')' → logprob: -5.817480564117432
    6. '(node' → logprob: -6.442480564117432
    7. ' ' → logprob: -7.442480564117432
    8. '   ' → logprob: -8.81748104095459
    9. '  ' → logprob: -9.81748104095459
    10. ' ()' → logprob: -9.94248104095459

Token 408: ' v' (ID: 323)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.007655369583517313
    2. ' branches' → logprob: -4.882655143737793
    3. '   ' → logprob: -10.257655143737793
    4. 'v' → logprob: -12.257655143737793
    5. ' ' → logprob: -12.882655143737793
    6. 'branch' → logprob: -13.632655143737793
    7. 'br' → logprob: -14.007655143737793
    8. '       ' → logprob: -14.257655143737793
    9. '  ' → logprob: -14.507655143737793
    10. ' v' → logprob: -14.632655143737793

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5767881870269775
    2. 'in' → logprob: -0.8267881870269775
    3. ')' → logprob: -7.201787948608398
    4. '(branch' → logprob: -10.076787948608398
    5. ' ' → logprob: -10.826787948608398
    6. 'branches' → logprob: -11.576787948608398
    7. '),' → logprob: -11.951787948608398
    8. ' branches' → logprob: -12.201787948608398
    9. ' )' → logprob: -12.201787948608398
    10. 'v' → logprob: -12.326787948608398

Token 410: ' branches' (ID: 34625)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.002493968466296792
    2. ' branches' → logprob: -6.002493858337402
    3. '   ' → logprob: -11.502493858337402
    4. 'edges' → logprob: -12.752493858337402
    5. ' ' → logprob: -13.502493858337402
    6. 'branch' → logprob: -14.252493858337402
    7. 'br' → logprob: -14.377493858337402
    8. '       ' → logprob: -14.752493858337402
    9. '[' → logprob: -15.252493858337402
    10. '
' → logprob: -15.377493858337402

Token 411: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.038596540689468384
    2. ' +' → logprob: -4.2885966300964355
    3. '+' → logprob: -4.7885966300964355
    4. ')' → logprob: -5.1635966300964355
    5. '))' → logprob: -5.2885966300964355
    6. ' ),' → logprob: -5.9135966300964355
    7. ')+' → logprob: -6.6635966300964355
    8. '   ' → logprob: -7.1635966300964355
    9. '  ' → logprob: -9.163596153259277
    10. ',' → logprob: -9.538596153259277

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009837782941758633
    2. '2' → logprob: -4.634837627410889
    3. '3' → logprob: -9.759838104248047
    4. ' ' → logprob: -10.759838104248047
    5. '   ' → logprob: -13.259838104248047
    6. '  ' → logprob: -15.259838104248047
    7. ')' → logprob: -16.009838104248047
    8. '(' → logprob: -16.009838104248047
    9. '```' → logprob: -16.009838104248047
    10. '
' → logprob: -16.134838104248047

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004632572643458843
    2. '2' → logprob: -5.379632472991943
    3. ' ' → logprob: -11.879632949829102
    4. '3' → logprob: -13.129632949829102
    5. '   ' → logprob: -13.754632949829102
    6. ')' → logprob: -13.879632949829102
    7. '```' → logprob: -15.067132949829102
    8. '(' → logprob: -15.754632949829102
    9. '  ' → logprob: -15.879632949829102
    10. '`' → logprob: -16.3796329498291

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23462603986263275
    2. ')
' → logprob: -1.609626054763794
    3. '   ' → logprob: -5.359625816345215
    4. '*' → logprob: -7.109625816345215
    5. ' *' → logprob: -7.109625816345215
    6. ',' → logprob: -7.609625816345215
    7. ')*' → logprob: -7.609625816345215
    8. '+' → logprob: -8.109625816345215
    9. ' +' → logprob: -8.234625816345215
    10. ')
' → logprob: -8.359625816345215

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023754572495818138
    2. '+' → logprob: -4.148754596710205
    3. ' +' → logprob: -6.398754596710205
    4. ')' → logprob: -6.398754596710205
    5. '
' → logprob: -6.523754596710205
    6. '*' → logprob: -7.648754596710205
    7. ' return' → logprob: -7.898754596710205
    8. '+
' → logprob: -7.898754596710205
    9. ' ' → logprob: -8.148754119873047
    10. 'return' → logprob: -8.273754119873047

Token 416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28668901324272156
    2. '   ' → logprob: -1.536689043045044
    3. 'res' → logprob: -3.786689043045044
    4. ' return' → logprob: -4.536688804626465
    5. ' res' → logprob: -7.661688804626465
    6. '```' → logprob: -9.036688804626465
    7. '	return' → logprob: -10.036688804626465
    8. '  ' → logprob: -10.536688804626465
    9. '    
' → logprob: -10.786688804626465
    10. '
' → logprob: -10.911688804626465

Token 417: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.4384935796260834
    2. 'res' → logprob: -1.1884936094284058
    3. '(' → logprob: -3.688493490219116
    4. ' (' → logprob: -4.063493728637695
    5. ' res' → logprob: -4.938493728637695
    6. '2' → logprob: -7.063493728637695
    7. '   ' → logprob: -10.063493728637695
    8. '
' → logprob: -11.688493728637695
    9. ' ' → logprob: -11.688493728637695
    10. '3' → logprob: -12.313493728637695

Token 418: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005262930411845446
    2. '(res' → logprob: -5.505262851715088
    3. '2' → logprob: -7.130262851715088
    4. '(' → logprob: -8.255263328552246
    5. ' res' → logprob: -9.880263328552246
    6. '1' → logprob: -10.130263328552246
    7. 'cnt' → logprob: -11.380263328552246
    8. '3' → logprob: -11.880263328552246
    9. '
' → logprob: -13.005263328552246
    10. ' (' → logprob: -13.255263328552246

Token 419: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7873648405075073
    2. '+' → logprob: -1.2873648405075073
    3. '*' → logprob: -1.7873648405075073
    4. ' *' → logprob: -2.287364959716797
    5. '   ' → logprob: -11.412364959716797
    6. ' ' → logprob: -12.912364959716797
    7. '```' → logprob: -13.287364959716797
    8. '2' → logprob: -13.412364959716797
    9. '<<' → logprob: -13.412364959716797
    10. ' ' → logprob: -13.537364959716797

Token 420: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05239628255367279
    2. '1' → logprob: -3.302396297454834
    3. ' res' → logprob: -4.552396297454834
    4. 'reduce' → logprob: -6.802396297454834
    5. 'cnt' → logprob: -6.802396297454834
    6. '(res' → logprob: -7.552396297454834
    7. ' ' → logprob: -8.552395820617676
    8. '0' → logprob: -8.802395820617676
    9. ' cnt' → logprob: -8.927395820617676
    10. ' reduce' → logprob: -9.427395820617676

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3392827808856964
    2. 'res' → logprob: -1.339282751083374
    3. 'cnt' → logprob: -3.839282751083374
    4. 'reduce' → logprob: -5.839282989501953
    5. '0' → logprob: -7.839282989501953
    6. ' res' → logprob: -8.839282989501953
    7. ' cnt' → logprob: -9.089282989501953
    8. ' ' → logprob: -9.089282989501953
    9. '(res' → logprob: -9.089282989501953
    10. '(' → logprob: -9.714282989501953

Token 422: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004715514834970236
    2. ')%' → logprob: -5.379715442657471
    3. ' )' → logprob: -9.879715919494629
    4. '%' → logprob: -11.254715919494629
    5. ')
' → logprob: -11.254715919494629
    6. '   ' → logprob: -11.379715919494629
    7. '```' → logprob: -13.254715919494629
    8. '<|end|>' → logprob: -13.504715919494629
    9. ')return' → logprob: -14.504715919494629
    10. '*' → logprob: -14.879715919494629

Token 423: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.023300331085920334
    2. ' %' → logprob: -3.7733004093170166
    3. ')' → logprob: -10.523300170898438
    4. '<|end|>' → logprob: -11.148300170898438
    5. ')%' → logprob: -11.398300170898438
    6. '```' → logprob: -13.898300170898438
    7. '%B' → logprob: -15.023300170898438
    8. '%
' → logprob: -15.523300170898438
    9. '
' → logprob: -15.648300170898438
    10. ' ' → logprob: -16.273300170898438

Token 424: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.700132997939363e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '998' → logprob: -15.250017166137695
    4. '_MOD' → logprob: -20.000017166137695
    5. ' ' → logprob: -21.625017166137695
    6. '.MOD' → logprob: -22.000017166137695
    7. '(M' → logprob: -22.875017166137695
    8. '999' → logprob: -23.125017166137695
    9. '```' → logprob: -23.750017166137695
    10. 'MO' → logprob: -24.625017166137695

Token 425: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015717383939772844
    2. 'result' → logprob: -9.125157356262207
    3. 'answer' → logprob: -10.875157356262207
    4. 'res' → logprob: -11.625157356262207
    5. 'ans' → logprob: -11.875157356262207
    6. 'for' → logprob: -12.000157356262207
    7. 'if' → logprob: -12.375157356262207
    8. '_' → logprob: -13.875157356262207
    9. '```' → logprob: -14.000157356262207
    10. 'r' → logprob: -14.750157356262207

Token 427: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038048259913921356
    2. ' main' → logprob: -3.288048267364502
    3. 'solve' → logprob: -12.038047790527344
    4. 'print' → logprob: -14.913047790527344
    5. ' solve' → logprob: -16.038047790527344
    6. '	main' → logprob: -16.038047790527344
    7. 'answer' → logprob: -16.288047790527344
    8. 'result' → logprob: -16.913047790527344
    9. 'parent' → logprob: -17.038047790527344
    10. 'resolve' → logprob: -17.288047790527344

Token 428: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.77627644513268e-06
    2. '():
' → logprob: -12.000008583068848
    3. '()' → logprob: -13.375008583068848
    4. ' ():' → logprob: -14.000008583068848
    5. '(' → logprob: -16.750009536743164
    6. ':' → logprob: -17.000009536743164
    7. '():
' → logprob: -17.500009536743164
    8. '_' → logprob: -17.750009536743164
    9. '()>' → logprob: -17.875009536743164
    10. '().' → logprob: -18.625009536743164

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6431055665016174
    2. 'print' → logprob: -1.3931055068969727
    3. 'result' → logprob: -1.5181055068969727
    4. ' result' → logprob: -6.393105506896973
    5. '```' → logprob: -6.393105506896973
    6. 'res' → logprob: -6.643105506896973
    7. ' res' → logprob: -7.768105506896973
    8. 'for' → logprob: -7.768105506896973
    9. ' print' → logprob: -8.393105506896973
    10. 'return' → logprob: -8.393105506896973

Token 430: ' roots' (ID: 29895)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1174246072769165
    2. 'root' → logprob: -1.2424246072769165
    3. 'print' → logprob: -1.4924246072769165
    4. 'result' → logprob: -2.492424488067627
    5. 'parent' → logprob: -3.117424488067627
    6. '   ' → logprob: -4.617424488067627
    7. 'ans' → logprob: -4.742424488067627
    8. 'total' → logprob: -5.117424488067627
    9. 'dp' → logprob: -5.617424488067627
    10. 'answer' → logprob: -6.617424488067627

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08920881152153015
    2. '=' → logprob: -2.4642088413238525
    3. '()' → logprob: -8.714208602905273
    4. '=[]' → logprob: -9.589208602905273
    5. ',' → logprob: -11.964208602905273
    6. '   ' → logprob: -12.589208602905273
    7. '(' → logprob: -13.464208602905273
    8. '_' → logprob: -13.464208602905273
    9. '=[]
' → logprob: -13.464208602905273
    10. '[]' → logprob: -13.464208602905273

Token 432: ' filter' (ID: 6690)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0035347328521311283
    2. '[parent' → logprob: -6.25353479385376
    3. '[' → logprob: -7.00353479385376
    4. '[node' → logprob: -8.003534317016602
    5. '[p' → logprob: -9.253534317016602
    6. '[x' → logprob: -9.628534317016602
    7. '[v' → logprob: -9.753534317016602
    8. '[root' → logprob: -10.503534317016602
    9. '[idx' → logprob: -10.753534317016602
    10. '[n' → logprob: -11.128534317016602

Token 433: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0009117019944824278
    2. 'lambda' → logprob: -7.000911712646484
    3. '=lambda' → logprob: -16.500911712646484
    4. '   ' → logprob: -16.750911712646484
    5. '(' → logprob: -17.250911712646484
    6. '(part' → logprob: -17.750911712646484
    7. '```' → logprob: -18.500911712646484
    8. ' (' → logprob: -18.625911712646484
    9. '(None' → logprob: -19.000911712646484
    10. ' lambda' → logprob: -19.000911712646484

Token 434: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.025122644379734993
    2. '(lambda' → logprob: -4.27512264251709
    3. ' lambda' → logprob: -4.52512264251709
    4. 'par' → logprob: -10.15012264251709
    5. 'parent' → logprob: -11.40012264251709
    6. '   ' → logprob: -12.02512264251709
    7. 'paren' → logprob: -12.52512264251709
    8. 'x' → logprob: -12.90012264251709
    9. ' par' → logprob: -13.02512264251709
    10. '=lambda' → logprob: -14.77512264251709

Token 435: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.11680488288402557
    2. '(lambda' → logprob: -2.366804838180542
    3. ' lambda' → logprob: -4.116805076599121
    4. 'parent' → logprob: -9.241805076599121
    5. '=lambda' → logprob: -9.741805076599121
    6. ':' → logprob: -12.491805076599121
    7. '   ' → logprob: -13.616805076599121
    8. ' parent' → logprob: -13.741805076599121
    9. ' (' → logprob: -13.866805076599121
    10. ',' → logprob: -13.991805076599121

Token 436: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.27814215421676636
    2. 'x' → logprob: -1.9031422138214111
    3. 'lambda' → logprob: -2.403142213821411
    4. ' parent' → logprob: -6.278141975402832
    5. ' x' → logprob: -7.528141975402832
    6. ' lambda' → logprob: -7.528141975402832
    7. '(lambda' → logprob: -8.528141975402832
    8. '(parent' → logprob: -9.153141975402832
    9. '   ' → logprob: -11.528141975402832
    10. 'paren' → logprob: -12.778141975402832

Token 437: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.2536659240722656
    2. 'x' → logprob: -1.6286659240722656
    3. 'lambda' → logprob: -3.8786659240722656
    4. '(x' → logprob: -5.628665924072266
    5. '[' → logprob: -7.253665924072266
    6. '==' → logprob: -7.503665924072266
    7. '(lambda' → logprob: -7.878665924072266
    8. ' x' → logprob: -8.003665924072266
    9. '=lambda' → logprob: -8.003665924072266
    10. ' lambda' → logprob: -8.503665924072266

Token 438: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6431059837341309
    2. ' ==' → logprob: -1.3931059837341309
    3. '==' → logprob: -1.6431059837341309
    4. ' <' → logprob: -3.643105983734131
    5. '==-' → logprob: -5.143105983734131
    6. ')' → logprob: -8.268106460571289
    7. ']==' → logprob: -9.518106460571289
    8. 'x' → logprob: -9.643106460571289
    9. ')==' → logprob: -9.768106460571289
    10. '[' → logprob: -10.268106460571289

Token 439: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20666740834712982
    2. '==' → logprob: -1.956667423248291
    3. ' ==' → logprob: -3.456667423248291
    4. ' <' → logprob: -4.331667423248291
    5. '==-' → logprob: -7.456667423248291
    6. ')' → logprob: -9.956666946411133
    7. '[' → logprob: -11.081666946411133
    8. ' ' → logprob: -11.456666946411133
    9. 'x' → logprob: -11.581666946411133
    10. ')==' → logprob: -11.706666946411133

Token 440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006272526225075126
    2. ' ' → logprob: -7.375627040863037
    3. '=' → logprob: -15.375627517700195
    4. '   ' → logprob: -15.500627517700195
    5. '1' → logprob: -16.000627517700195
    6. '```' → logprob: -16.250627517700195
    7. '  ' → logprob: -17.188127517700195
    8. '>' → logprob: -17.813127517700195
    9. '۰' → logprob: -18.000627517700195
    10. ' ' → logprob: -18.000627517700195

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '1' → logprob: -14.000432014465332
    4. '   ' → logprob: -15.125432014465332
    5. '  ' → logprob: -16.18793296813965
    6. 'zero' → logprob: -16.62543296813965
    7. '=' → logprob: -16.87543296813965
    8. ' ' → logprob: -17.06293296813965
    9. '۰' → logprob: -17.43793296813965
    10. '```' → logprob: -17.43793296813965

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -10.750028610229492
    3. ',list' → logprob: -13.000028610229492
    4. '   ' → logprob: -13.125028610229492
    5. ',
' → logprob: -13.750028610229492
    6. ',parent' → logprob: -13.750028610229492
    7. ',node' → logprob: -14.625028610229492
    8. ')' → logprob: -15.000028610229492
    9. ',[' → logprob: -16.500028610229492
    10. '(),' → logprob: -16.625028610229492

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.750045776367188
    4. '	range' → logprob: -19.250045776367188
    5. '(range' → logprob: -19.750045776367188
    6. '  ' → logprob: -22.500045776367188
    7. ' ' → logprob: -23.125045776367188
    8. 'Range' → logprob: -23.625045776367188
    9. 'rang' → logprob: -23.750045776367188
    10. '    ' → logprob: -23.750045776367188

Token 444: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00594017468392849
    2. 'N' → logprob: -5.130939960479736
    3. '(' → logprob: -11.630940437316895
    4. '   ' → logprob: -13.880940437316895
    5. ',N' → logprob: -14.755940437316895
    6. '	N' → logprob: -15.255940437316895
    7. ' N' → logprob: -15.255940437316895
    8. '(
' → logprob: -15.380940437316895
    9. ')' → logprob: -15.505940437316895
    10. ' (' → logprob: -16.005939483642578

Token 445: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08528245985507965
    2. ')' → logprob: -2.585282564163208
    3. '))
' → logprob: -5.085282325744629
    4. ')
' → logprob: -8.835282325744629
    5. ')))' → logprob: -10.960282325744629
    6. '   ' → logprob: -11.460282325744629
    7. ' ))' → logprob: -12.460282325744629
    8. '))

' → logprob: -12.835282325744629
    9. ' )' → logprob: -13.460282325744629
    10. ' ' → logprob: -13.960282325744629

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21377642452716827
    2. 'res' → logprob: -2.3387763500213623
    3. 'result' → logprob: -2.4637763500213623
    4. 'total' → logprob: -5.213776588439941
    5. 'for' → logprob: -5.838776588439941
    6. '```' → logprob: -6.838776588439941
    7. ' res' → logprob: -7.963776588439941
    8. '    
' → logprob: -8.088776588439941
    9. 'ret' → logprob: -8.588776588439941
    10. 'count' → logprob: -8.963776588439941

Token 447: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.15705406665802
    2. 'result' → logprob: -1.15705406665802
    3. '   ' → logprob: -1.65705406665802
    4. 'ans' → logprob: -1.90705406665802
    5. 'total' → logprob: -3.6570539474487305
    6. 'print' (adapté à ' print') → logprob: -5.9070539474487305
    7. 'answer' → logprob: -6.0320539474487305
    8. 'r' → logprob: -8.15705394744873
    9. 'ret' → logprob: -8.53205394744873
    10. ' ans' → logprob: -9.15705394744873

Token 448: '(re' (ID: 8178)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.03657158464193344
    2. '(cnt' → logprob: -3.536571502685547
    3. '((' → logprob: -5.661571502685547
    4. '(re' → logprob: -5.786571502685547
    5. 'sum' → logprob: -8.911571502685547
    6. '(pow' → logprob: -9.911571502685547
    7. '(f' → logprob: -10.911571502685547
    8. '(' → logprob: -11.161571502685547
    9. '(next' → logprob: -11.411571502685547
    10. '(c' → logprob: -11.661571502685547

Token 449: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.01419888436794281
    2. 'd' → logprob: -4.2641987800598145
    3. 'ad' → logprob: -11.764199256896973
    4. 'du' → logprob: -12.014199256896973
    5. 'duc' → logprob: -12.139199256896973
    6. 'dc' → logprob: -12.264199256896973
    7. 'duct' → logprob: -12.639199256896973
    8. 'duced' → logprob: -13.514199256896973
    9. 'dux' → logprob: -13.764199256896973
    10. '(' → logprob: -13.889199256896973

Token 450: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0007061177166178823
    2. '(' → logprob: -7.625706195831299
    3. '(operator' → logprob: -9.00070571899414
    4. '(cnt' → logprob: -9.87570571899414
    5. '((' → logprob: -10.87570571899414
    6. '(int' → logprob: -11.87570571899414
    7. '```' → logprob: -12.62570571899414
    8. ')' → logprob: -12.62570571899414
    9. ' (' → logprob: -12.87570571899414
    10. 'lambda' → logprob: -12.87570571899414

Token 451: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3284914791584015
    2. '(lambda' → logprob: -1.328491449356079
    3. ' lambda' → logprob: -4.578491687774658
    4. 'x' → logprob: -5.453491687774658
    5. ' x' → logprob: -7.703491687774658
    6. 'mul' → logprob: -9.7034912109375
    7. '   ' → logprob: -10.4534912109375
    8. ' (' → logprob: -11.7034912109375
    9. '(x' → logprob: -12.4534912109375
    10. ' ' → logprob: -13.3284912109375

Token 452: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5267174243927002
    2. ' lambda' → logprob: -1.2767174243927002
    3. '(lambda' → logprob: -2.1517174243927
    4. '=lambda' → logprob: -4.776717185974121
    5. ',' → logprob: -5.276717185974121
    6. '   ' → logprob: -7.526717185974121
    7. 'a' → logprob: -9.276717185974121
    8. ' (' → logprob: -11.276717185974121
    9. '```' → logprob: -11.776717185974121
    10. 'x' → logprob: -11.901717185974121

Token 453: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36569708585739136
    2. 'a' → logprob: -1.6156971454620361
    3. 'lambda' → logprob: -2.490697145462036
    4. ' lambda' → logprob: -4.490696907043457
    5. ' x' → logprob: -4.615696907043457
    6. ' a' → logprob: -6.365696907043457
    7. '   ' → logprob: -7.365696907043457
    8. '(lambda' → logprob: -7.615696907043457
    9. 'b' → logprob: -7.740696907043457
    10. '    ' → logprob: -8.990696907043457

Token 454: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22211413085460663
    2. '(lambda' → logprob: -2.097114086151123
    3. 'lambda' → logprob: -3.472114086151123
    4. ' lambda' → logprob: -4.097114086151123
    5. ' ,' → logprob: -4.722114086151123
    6. '=lambda' → logprob: -5.222114086151123
    7. 'a' → logprob: -5.347114086151123
    8. ' (' → logprob: -5.472114086151123
    9. '   ' → logprob: -6.097114086151123
    10. ':' → logprob: -6.472114086151123

Token 455: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16929763555526733
    2. ' (' → logprob: -2.044297695159912
    3. 'a' → logprob: -3.669297695159912
    4. ' a' → logprob: -7.544297695159912
    5. '(lambda' → logprob: -9.044297218322754
    6. '   ' → logprob: -9.669297218322754
    7. '(' → logprob: -10.044297218322754
    8. '  ' → logprob: -12.419297218322754
    9. '((' → logprob: -12.419297218322754
    10. ' ' → logprob: -12.419297218322754

Token 456: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9777690768241882
    2. ' (' → logprob: -0.9777690768241882
    3. '(a' → logprob: -2.477769136428833
    4. '*' → logprob: -2.727769136428833
    5. ' *' → logprob: -3.602769136428833
    6. '(lambda' → logprob: -3.977769136428833
    7. '+' → logprob: -4.352768898010254
    8. 'a' → logprob: -4.352768898010254
    9. '(' → logprob: -4.852768898010254
    10. '(x' → logprob: -5.477768898010254

Token 457: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010617982596158981
    2. ' b' → logprob: -4.760618209838867
    3. 'cnt' → logprob: -6.885618209838867
    4. '(b' → logprob: -8.135618209838867
    5. '(cnt' → logprob: -8.135618209838867
    6. '(' → logprob: -8.260618209838867
    7. ' cnt' → logprob: -9.635618209838867
    8. ' (' → logprob: -9.885618209838867
    9. '((' → logprob: -11.635618209838867
    10. '   ' → logprob: -12.885618209838867

Token 458: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2749624252319336
    2. '(cnt' → logprob: -2.0249624252319336
    3. ' %' → logprob: -2.6499624252319336
    4. '%' → logprob: -4.024962425231934
    5. ' ,' → logprob: -5.149962425231934
    6. '%c' → logprob: -5.524962425231934
    7. ',c' → logprob: -5.899962425231934
    8. ',b' → logprob: -6.649962425231934
    9. '%b' → logprob: -6.649962425231934
    10. '(c' → logprob: -7.274962425231934

Token 459: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5585278868675232
    2. 'b' → logprob: -0.9335278868675232
    3. 'cnt' → logprob: -3.683527946472168
    4. ' MOD' → logprob: -5.433527946472168
    5. ' b' → logprob: -6.308527946472168
    6. '998' → logprob: -6.433527946472168
    7. '(cnt' → logprob: -7.933527946472168
    8. '(' → logprob: -8.058527946472168
    9. ' cnt' → logprob: -8.183527946472168
    10. '(b' → logprob: -8.558527946472168

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005875463597476482
    2. ' ,' → logprob: -5.505875587463379
    3. '(cnt' → logprob: -6.755875587463379
    4. ',
' → logprob: -8.505875587463379
    5. ',c' → logprob: -8.630875587463379
    6. '(' → logprob: -10.005875587463379
    7. 'cnt' → logprob: -10.255875587463379
    8. ',b' → logprob: -10.630875587463379
    9. ',(' → logprob: -10.880875587463379
    10. '   ' → logprob: -11.005875587463379

Token 461: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.03181271627545357
    2. '(map' → logprob: -3.5318126678466797
    3. 'map' → logprob: -6.90681266784668
    4. '[cnt' → logprob: -7.90681266784668
    5. '(c' → logprob: -8.03181266784668
    6. ' (' → logprob: -8.15681266784668
    7. 'cnt' → logprob: -9.78181266784668
    8. '(ct' → logprob: -11.65681266784668
    9. ' map' → logprob: -12.78181266784668
    10. '(count' → logprob: -12.90681266784668

Token 462: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -5.319370302458992e-06
    2. '(cnt' → logprob: -12.375005722045898
    3. ' cnt' → logprob: -13.875005722045898
    4. '[cnt' → logprob: -17.2500057220459
    5. 'count' → logprob: -17.8750057220459
    6. '	cnt' → logprob: -18.8750057220459
    7. '   ' → logprob: -19.3750057220459
    8. 'cn' → logprob: -19.5000057220459
    9. '
' → logprob: -19.7500057220459
    10. '(' → logprob: -21.3750057220459

Token 463: '(i' (ID: 3649)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023894954472780228
    2. '(root' → logprob: -3.773895025253296
    3. '(x' → logprob: -8.023895263671875
    4. 'r' → logprob: -9.023895263671875
    5. '(i' → logprob: -9.023895263671875
    6. 'root' → logprob: -9.523895263671875
    7. '(node' → logprob: -12.398895263671875
    8. '(rt' → logprob: -13.398895263671875
    9. '(' → logprob: -14.148895263671875
    10. '(n' → logprob: -14.398895263671875

Token 464: ')' (ID: 8)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004554730840027332
    2. 'for' → logprob: -6.129554748535156
    3. '()' → logprob: -6.754554748535156
    4. ' for' → logprob: -7.379554748535156
    5. ')' → logprob: -7.629554748535156
    6. '(root' → logprob: -10.129554748535156
    7. '(' → logprob: -11.004554748535156
    8. '(x' → logprob: -11.629554748535156
    9. 'i' → logprob: -12.129554748535156
    10. '```' → logprob: -12.254554748535156

Token 465: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48276934027671814
    2. ' for' → logprob: -0.9827693700790405
    3. '()' → logprob: -4.98276948928833
    4. ')' → logprob: -6.35776948928833
    5. '   ' → logprob: -11.107769012451172
    6. '(i' → logprob: -11.732769012451172
    7. ' ' → logprob: -12.232769012451172
    8. ' )' → logprob: -12.357769012451172
    9. '    ' → logprob: -12.607769012451172
    10. ' ()' → logprob: -12.607769012451172

Token 466: ' i' (ID: 575)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.12694048881530762
    2. ' roots' → logprob: -2.1269404888153076
    3. 'root' → logprob: -11.626940727233887
    4. ' ' → logprob: -13.876940727233887
    5. ' ' → logprob: -14.251940727233887
    6. ' root' → logprob: -14.501940727233887
    7. 'ro' → logprob: -15.626940727233887
    8. 'Roots' → logprob: -15.876940727233887
    9. '   ' → logprob: -16.00193977355957
    10. '
' → logprob: -16.12693977355957

Token 467: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2583823502063751
    2. 'in' → logprob: -1.5083823204040527
    3. 'roots' → logprob: -5.633382320404053
    4. ' roots' → logprob: -5.883382320404053
    5. '   ' → logprob: -10.758382797241211
    6. '(' → logprob: -11.133382797241211
    7. ' ' → logprob: -12.008382797241211
    8. 'root' → logprob: -12.633382797241211
    9. ',' → logprob: -12.758382797241211
    10. ')' → logprob: -12.758382797241211

Token 468: ' roots' (ID: 29895)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.0005544631858356297
    2. ' roots' → logprob: -7.50055456161499
    3. 'root' → logprob: -13.625554084777832
    4. '   ' → logprob: -16.62555503845215
    5. 'parents' → logprob: -16.75055503845215
    6. 'ro' → logprob: -16.87555503845215
    7. 'list' → logprob: -17.00055503845215
    8. ' ' → logprob: -17.50055503845215
    9. 'filter' → logprob: -17.50055503845215
    10. '```' → logprob: -18.00055503845215

Token 469: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05261549726128578
    2. ',' → logprob: -3.0526154041290283
    3. '))' → logprob: -6.302615642547607
    4. ')))' → logprob: -6.552615642547607
    5. ' ),' → logprob: -7.802615642547607
    6. ')),' → logprob: -8.80261516571045
    7. ' ,' → logprob: -9.42761516571045
    8. ')' → logprob: -9.92761516571045
    9. '   ' → logprob: -10.30261516571045
    10. ',),' → logprob: -10.42761516571045

Token 470: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. '2' → logprob: -13.000015258789062
    4. '   ' → logprob: -15.500015258789062
    5. ')' → logprob: -17.500015258789062
    6. '  ' → logprob: -18.875015258789062
    7. '```' → logprob: -19.250015258789062
    8. '    ' → logprob: -19.625015258789062
    9. '
' → logprob: -19.875015258789062
    10. '`' → logprob: -20.500015258789062

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.000001907348633
    5. ')' → logprob: -19.000001907348633
    6. '```' → logprob: -19.125001907348633
    7. '  ' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.750001907348633
    9. '    ' → logprob: -21.250001907348633
    10. '     ' → logprob: -21.375001907348633

Token 472: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048645615577697754
    2. ')' → logprob: -3.048645496368408
    3. '))
' → logprob: -10.548645973205566
    4. ')))' → logprob: -11.048645973205566
    5. ' ))' → logprob: -11.798645973205566
    6. '   ' → logprob: -12.298645973205566
    7. ')
' → logprob: -13.673645973205566
    8. '),' → logprob: -13.923645973205566
    9. ' )' → logprob: -14.173645973205566
    10. '()))' → logprob: -14.673645973205566

Token 473: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008677801117300987
    2. 'main' → logprob: -4.758677959442139
    3. '(main' → logprob: -10.88367748260498
    4. '```' → logprob: -11.50867748260498
    5. '<|end|>' → logprob: -11.63367748260498
    6. '
' → logprob: -12.00867748260498
    7. 'print' → logprob: -12.13367748260498
    8. '\n' → logprob: -12.50867748260498
    9. ' if' → logprob: -12.50867748260498
    10. '\' → logprob: -13.38367748260498

Token 474: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20144130289554596
    2. '__' → logprob: -1.7014412879943848
    3. '_name' → logprob: -11.951441764831543
    4. ' ' → logprob: -12.076441764831543
    5. '___' → logprob: -12.076441764831543
    6. 'name' → logprob: -12.326441764831543
    7. '_' → logprob: -13.451441764831543
    8. 'Name' → logprob: -13.576441764831543
    9. '/__' → logprob: -13.951441764831543
    10. ' ' → logprob: -13.951441764831543

Token 475: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006260681431740522
    2. ' ==' → logprob: -6.006260871887207
    3. '==' → logprob: -6.256260871887207
    4. 'name' → logprob: -7.256260871887207
    5. ' __' → logprob: -7.756260871887207
    6. '__.__' → logprob: -8.131260871887207
    7. 'if' → logprob: -9.381260871887207
    8. '.__' → logprob: -9.881260871887207
    9. '```' → logprob: -9.881260871887207
    10. 'main' → logprob: -10.381260871887207

Token 476: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003235463285818696
    2. '==' → logprob: -5.753235340118408
    3. ' ==' → logprob: -10.628235816955566
    4. '=="' → logprob: -10.753235816955566
    5. '__.__' → logprob: -12.253235816955566
    6. '___' → logprob: -13.253235816955566
    7. '=='' → logprob: -13.628235816955566
    8. '===' → logprob: -14.253235816955566
    9. '____' → logprob: -14.503235816955566
    10. '_' → logprob: -14.628235816955566

Token 477: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4128245413303375
    2. ' ==' → logprob: -1.7878245115280151
    3. '=="' → logprob: -1.9128245115280151
    4. '=='' → logprob: -4.287824630737305
    5. '__' → logprob: -4.662824630737305
    6. '===' → logprob: -11.287824630737305
    7. '==
' → logprob: -11.287824630737305
    8. '=' → logprob: -11.412824630737305
    9. '==="' → logprob: -11.787824630737305
    10. '==='' → logprob: -12.537824630737305

Token 478: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023366153240204
    2. ''' → logprob: -1.9102336168289185
    3. '__' → logprob: -11.660233497619629
    4. ' "__' → logprob: -14.160233497619629
    5. ' '__' → logprob: -16.785234451293945
    6. '"user' → logprob: -18.160234451293945
    7. ''post' → logprob: -18.160234451293945
    8. '`' → logprob: -18.785234451293945
    9. '('__' → logprob: -18.910234451293945
    10. ''default' → logprob: -18.910234451293945

Token 479: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006087934598326683
    2. 'name' → logprob: -5.131087779998779
    3. '_main' → logprob: -9.881088256835938
    4. '__' → logprob: -9.881088256835938
    5. 'file' → logprob: -10.631088256835938
    6. 'print' → logprob: -12.506088256835938
    7. '"' → logprob: -13.006088256835938
    8. '```' → logprob: -13.131088256835938
    9. 'run' → logprob: -13.256088256835938
    10. 'root' → logprob: -13.381088256835938

Token 480: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25255638360977173
    2. '__' → logprob: -1.502556324005127
    3. '__':
' → logprob: -7.502556324005127
    4. '__.' → logprob: -10.002556800842285
    5. '__.__' → logprob: -11.377556800842285
    6. '__["' → logprob: -11.627556800842285
    7. '__
' → logprob: -12.752556800842285
    8. '__
' → logprob: -13.127556800842285
    9. '__:' → logprob: -13.377556800842285
    10. '```' → logprob: -13.502556800842285

Token 481: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.044206470251083374
    2. '   ' → logprob: -3.794206380844116
    3. '	main' → logprob: -3.919206380844116
    4. ' main' → logprob: -7.044206619262695
    5. '    
' → logprob: -12.544206619262695
    6. '_main' → logprob: -12.544206619262695
    7. ' ' → logprob: -13.419206619262695
    8. '   ' → logprob: -13.669206619262695
    9. '__' → logprob: -14.044206619262695
    10. '(main' → logprob: -14.419206619262695

Token 482: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. 'sys' → logprob: -15.000000953674316
    3. ' main' → logprob: -16.25
    4. 'import' → logprob: -16.75
    5. '	main' → logprob: -18.75
    6. '   ' → logprob: -19.875
    7. '(main' → logprob: -22.0
    8. '.main' → logprob: -23.75
    9. '_main' → logprob: -23.75
    10. 'Main' → logprob: -25.125

Token 483: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 481
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 172
Tokens correctement prédits (top 10): 368
Précision stricte (1ère position): 34.30%
Précision adaptée (1ère position): 35.76%
Précision (top 10): 76.51%
================================================================================
