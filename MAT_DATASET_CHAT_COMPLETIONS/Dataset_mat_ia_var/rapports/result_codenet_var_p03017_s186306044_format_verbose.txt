================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import re

number_of_cells, starting_position_A, starting_position_B, target_position_C, target_position_D = map(int, input().split())

track_state_string = input()

# Indices correction: converting to 0-based index as Python strings use 0-based indexing
# starting_position_A, starting_position_B, target_position_C, target_position_D = map(lambda x: x - 1, [a, b, c, d])

# Check if a blocked cell ('##') exists between the current position and the farthest target
maximum_target_position = max(target_position_B, target_position_D)
blocked_path_pattern = r'##'
substring_to_check_blockages = track_state_string[starting_position_A - 1 : maximum_target_position]

if re.search(blocked_path_pattern, substring_to_check_blockages):
    print('No')
else:
    if target_position_C > target_position_D:
        # In case overtaking is needed, check for at least 3 consecutive free cells ('...')
        overtaking_position_start = starting_position_B - 2
        overtaking_position_end = target_position_D + 1
        overtaking_pattern = r'\.{3,}'
        substring_to_check_overtaking = track_state_string[overtaking_position_start : overtaking_position_end]
        if re.search(overtaking_pattern, substring_to_check_overtaking):
            print('Yes')
        else:
            print('No')
    else:
        print('Yes')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' re' (ID: 322)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'number' (ID: 8096)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7441650629043579
    2. '.' → logprob: -1.369165062904358
    3. '[' → logprob: -2.7441649436950684
    4. '```' → logprob: -2.9941649436950684
    5. '\.' → logprob: -3.3691649436950684
    6. '\' → logprob: -3.6191649436950684
    7. '\b' → logprob: -3.9941649436950684
    8. '(' → logprob: -4.244164943695068
    9. '#' → logprob: -4.494164943695068
    10. '\[' → logprob: -5.119164943695068

Token 4: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22519926726818085
    2. '_' → logprob: -2.3501992225646973
    3. ')' → logprob: -2.6001992225646973
    4. '.' → logprob: -3.9751992225646973
    5. ' =' → logprob: -5.725199222564697
    6. '[' → logprob: -5.850199222564697
    7. '(' → logprob: -6.100199222564697
    8. '=' → logprob: -6.100199222564697
    9. ' ' → logprob: -6.850199222564697
    10. '_s' → logprob: -8.225199699401855

Token 5: '_cells' (ID: 93468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004590807482600212
    2. '_s' → logprob: -6.12959098815918
    3. '_spaces' → logprob: -7.37959098815918
    4. '_lines' → logprob: -8.12959098815918
    5. 's' → logprob: -8.12959098815918
    6. '_words' → logprob: -8.25459098815918
    7. '_items' → logprob: -8.37959098815918
    8. '_numbers' → logprob: -8.62959098815918
    9. '_users' → logprob: -9.25459098815918
    10. '_matches' → logprob: -9.87959098815918

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5194886922836304
    2. '_' → logprob: -1.7694886922836304
    3. '=' → logprob: -2.14448881149292
    4. ' =' → logprob: -3.26948881149292
    5. '[' → logprob: -3.26948881149292
    6. '(' → logprob: -3.64448881149292
    7. ' ' → logprob: -5.14448881149292
    8. '.' → logprob: -5.51948881149292
    9. 's' → logprob: -6.76948881149292
    10. ',' → logprob: -6.89448881149292

Token 7: ' starting' (ID: 8601)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6551376581192017
    2. 'number' → logprob: -1.4051376581192017
    3. ' ' → logprob: -2.780137538909912
    4. ' cells' → logprob: -2.905137538909912
    5. ' cell' → logprob: -3.655137538909912
    6. 'total' → logprob: -4.280137538909912
    7. ' total' → logprob: -4.405137538909912
    8. 'data' → logprob: -5.155137538909912
    9. ' max' → logprob: -5.405137538909912
    10. ' =' → logprob: -5.405137538909912

Token 8: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08157622814178467
    2. '=' → logprob: -2.706576347351074
    3. ' =' → logprob: -5.706576347351074
    4. '_number' → logprob: -6.331576347351074
    5. '_cells' → logprob: -6.581576347351074
    6. '_space' → logprob: -7.081576347351074
    7. '_=' → logprob: -7.081576347351074
    8. '_value' → logprob: -7.081576347351074
    9. '_cell' → logprob: -7.831576347351074
    10. ')' → logprob: -7.956576347351074

Token 9: '_A' (ID: 6829)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09201160073280334
    2. '=' → logprob: -2.4670116901397705
    3. ',' → logprob: -6.092011451721191
    4. '_' → logprob: -7.592011451721191
    5. ')' → logprob: -8.842011451721191
    6. ' ' → logprob: -9.967011451721191
    7. '_space' → logprob: -10.217011451721191
    8. 'space' → logprob: -10.967011451721191
    9. ' ,' → logprob: -11.092011451721191
    10. 's' → logprob: -11.217011451721191

Token 10: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6969655156135559
    2. ' =' → logprob: -0.6969655156135559
    3. ',' → logprob: -6.19696569442749
    4. ')' → logprob: -6.94696569442749
    5. '_' → logprob: -7.19696569442749
    6. ' ' → logprob: -10.446965217590332
    7. ' ,' → logprob: -11.821965217590332
    8. 's' → logprob: -12.196965217590332
    9. '.' → logprob: -12.696965217590332
    10. '_space' → logprob: -12.821965217590332

Token 11: ' starting' (ID: 8601)
  Prédit: ' starting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starting' → logprob: -0.21164529025554657
    2. 'starting' → logprob: -2.2116453647613525
    3. ' number' → logprob: -3.4616453647613525
    4. ' ending' → logprob: -3.9616453647613525
    5. 'number' → logprob: -4.836645126342773
    6. ' target' → logprob: -4.836645126342773
    7. 'target' → logprob: -5.836645126342773
    8. 'ending' → logprob: -6.336645126342773
    9. ' finishing' → logprob: -6.336645126342773
    10. '_' → logprob: -6.461645126342773

Token 12: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.31728145480155945
    2. '_' → logprob: -1.3172814846038818
    3. '_positions' → logprob: -6.067281246185303
    4. '_of' → logprob: -7.942281246185303
    5. '_location' → logprob: -8.067281723022461
    6. '_number' → logprob: -8.317281723022461
    7. '_token' → logprob: -8.942281723022461
    8. '_Position' → logprob: -9.692281723022461
    9. '```' → logprob: -9.817281723022461
    10. ' _' → logprob: -10.067281723022461

Token 13: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16748057305812836
    2. '_B' → logprob: -1.9174805879592896
    3. '_=' → logprob: -5.66748046875
    4. 'B' → logprob: -6.79248046875
    5. '_A' → logprob: -7.04248046875
    6. '=' → logprob: -7.29248046875
    7. '_b' → logprob: -8.66748046875
    8. '_C' → logprob: -8.91748046875
    9. ' =' → logprob: -9.16748046875
    10. '_,' → logprob: -9.16748046875

Token 14: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6955620050430298
    2. ' =' → logprob: -0.6955620050430298
    3. ',' → logprob: -6.07056188583374
    4. ')' → logprob: -9.695562362670898
    5. '<|end|>' → logprob: -11.695562362670898
    6. ' ' → logprob: -11.820562362670898
    7. '_' → logprob: -12.320562362670898
    8. ' ,' → logprob: -12.445562362670898
    9. 'space' → logprob: -12.945562362670898
    10. 's' → logprob: -12.945562362670898

Token 15: ' target' (ID: 3783)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.808769941329956
    2. ' ' → logprob: -2.433769941329956
    3. ' =' → logprob: -2.433769941329956
    4. ' target' → logprob: -2.683769941329956
    5. ' starting' → logprob: -2.933769941329956
    6. ' current' → logprob: -3.058769941329956
    7. ' ending' → logprob: -3.433769941329956
    8. ' finishing' → logprob: -3.683769941329956
    9. ',' → logprob: -3.933769941329956
    10. ' next' → logprob: -4.308770179748535

Token 16: '_position' (ID: 23739)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14032000303268433
    2. ' =' → logprob: -2.765320062637329
    3. '_' → logprob: -3.265320062637329
    4. '_positions' → logprob: -3.765320062637329
    5. '_position' → logprob: -5.76531982421875
    6. ')' → logprob: -6.76531982421875
    7. ',' → logprob: -7.26531982421875
    8. '_=' → logprob: -7.39031982421875
    9. 's' → logprob: -8.51531982421875
    10. '_s' → logprob: -9.64031982421875

Token 17: '_C' (ID: 1720)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28772878646850586
    2. '=' → logprob: -1.4127287864685059
    3. ',' → logprob: -5.287728786468506
    4. '_' → logprob: -6.787728786468506
    5. 's' → logprob: -8.537729263305664
    6. ')' → logprob: -8.912729263305664
    7. ' ' → logprob: -11.162729263305664
    8. ' ,' → logprob: -12.287729263305664
    9. '_space' → logprob: -12.662729263305664
    10. '  ' → logprob: -12.912729263305664

Token 18: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2823072373867035
    2. ' =' → logprob: -1.4073072671890259
    3. ',' → logprob: -6.782307147979736
    4. ')' → logprob: -11.907307624816895
    5. ' ' → logprob: -12.532307624816895
    6. '_' → logprob: -12.782307624816895
    7. '<|end|>' → logprob: -13.782307624816895
    8. ' =
' → logprob: -13.907307624816895
    9. '.' → logprob: -14.032307624816895
    10. '=

' → logprob: -14.157307624816895

Token 19: ' target' (ID: 3783)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2288314551115036
    2. '=' → logprob: -2.7288315296173096
    3. ' number' → logprob: -2.9788315296173096
    4. ' ' → logprob: -3.7288315296173096
    5. ' target' → logprob: -4.1038312911987305
    6. ' starting' → logprob: -4.4788312911987305
    7. ' current' → logprob: -4.9788312911987305
    8. 'number' → logprob: -5.2288312911987305
    9. ',' → logprob: -5.9788312911987305
    10. ' final' → logprob: -6.1038312911987305

Token 20: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.5210870504379272
    2. '_' → logprob: -1.2710870504379272
    3. '_positions' → logprob: -2.146087169647217
    4. '_number' → logprob: -5.646087169647217
    5. '=' → logprob: -6.396087169647217
    6. '_s' → logprob: -8.146086692810059
    7. '_location' → logprob: -8.271086692810059
    8. '_pos' → logprob: -8.396086692810059
    9. ' =' → logprob: -8.771086692810059
    10. '_=' → logprob: -8.771086692810059

Token 21: '_D' (ID: 2958)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08557797968387604
    2. '_' → logprob: -3.085577964782715
    3. ' =' → logprob: -3.960577964782715
    4. ',' → logprob: -4.710577964782715
    5. '_=' → logprob: -5.335577964782715
    6. 's' → logprob: -7.210577964782715
    7. '_A' → logprob: -7.460577964782715
    8. '_,' → logprob: -8.085577964782715
    9. '_C' → logprob: -8.085577964782715
    10. 'A' → logprob: -8.085577964782715

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3214116096496582
    2. '=' → logprob: -1.3214116096496582
    3. ',' → logprob: -4.821411609649658
    4. ')' → logprob: -10.6964111328125
    5. '<|end|>' → logprob: -11.5714111328125
    6. ' ,' → logprob: -11.9464111328125
    7. ' ' → logprob: -12.0714111328125
    8. 'space' → logprob: -13.1964111328125
    9. 's' → logprob: -13.3214111328125
    10. ' =
' → logprob: -13.6964111328125

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4151204228401184
    2. 'map' → logprob: -1.1651203632354736
    3. 'input' → logprob: -4.415120601654053
    4. '0' → logprob: -5.165120601654053
    5. ' input' → logprob: -5.165120601654053
    6. 're' → logprob: -6.665120601654053
    7. ' ' → logprob: -6.790120601654053
    8. ' [' → logprob: -7.665120601654053
    9. ' list' → logprob: -8.165120124816895
    10. '[' → logprob: -8.165120124816895

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021071378141641617
    2. '(' → logprob: -3.896071434020996
    3. 'int' → logprob: -8.896071434020996
    4. '(lambda' → logprob: -9.021071434020996
    5. '[int' → logprob: -9.771071434020996
    6. '(input' → logprob: -10.021071434020996
    7. '<int' → logprob: -10.146071434020996
    8. '(str' → logprob: -10.146071434020996
    9. '(list' → logprob: -10.271071434020996
    10. '(
' → logprob: -10.521071434020996

Token 25: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.142947256565094
    2. ' input' → logprob: -2.017947196960449
    3. ')' → logprob: -8.26794719696045
    4. '(input' → logprob: -11.51794719696045
    5. ' )' → logprob: -14.01794719696045
    6. '<input' → logprob: -14.14294719696045
    7. '=input' → logprob: -14.26794719696045
    8. ',input' → logprob: -14.76794719696045
    9. '	input' → logprob: -14.89294719696045
    10. '```' → logprob: -14.89294719696045

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2232513278722763
    2. '()' → logprob: -1.7232513427734375
    3. '())' → logprob: -4.4732513427734375
    4. '(' → logprob: -4.8482513427734375
    5. ')' → logprob: -6.4732513427734375
    6. '());' → logprob: -8.348251342773438
    7. '(()' → logprob: -9.348251342773438
    8. '();' → logprob: -9.723251342773438
    9. '();)' → logprob: -9.723251342773438
    10. '('').' → logprob: -10.223251342773438

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015278366627171636
    2. 'strip' → logprob: -6.501527786254883
    3. ' split' → logprob: -11.376527786254883
    4. 'rstrip' → logprob: -11.376527786254883
    5. ')' → logprob: -13.626527786254883
    6. '(split' → logprob: -14.376527786254883
    7. 'spl' → logprob: -14.876527786254883
    8. 'read' → logprob: -15.251527786254883
    9. '```' → logprob: -16.251527786254883
    10. 'startswith' → logprob: -16.876527786254883

Token 29: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0361006073653698
    2. '())' → logprob: -3.7861006259918213
    3. '(' → logprob: -5.036100387573242
    4. '))' → logprob: -5.786100387573242
    5. '('' → logprob: -6.536100387573242
    6. '()' → logprob: -7.036100387573242
    7. '(','' → logprob: -8.536100387573242
    8. '`)' → logprob: -9.411100387573242
    9. ')(' → logprob: -9.411100387573242
    10. '')' → logprob: -9.536100387573242

Token 30: 'track' (ID: 22792)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.47699931263923645
    2. 'cells' → logprob: -2.851999282836914
    3. 'graph' → logprob: -2.976999282836914
    4. 'while' → logprob: -3.351999282836914
    5. 'matrix' → logprob: -3.601999282836914
    6. 'positions' → logprob: -3.976999282836914
    7. 'def' → logprob: -4.101999282836914
    8. 'map' → logprob: -4.351999282836914
    9. 'field' → logprob: -4.351999282836914
    10. 's' → logprob: -4.476999282836914

Token 31: '_state' (ID: 9479)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6111704707145691
    2. '_length' → logprob: -1.2361705303192139
    3. ' =' → logprob: -2.236170530319214
    4. '[' → logprob: -3.486170530319214
    5. '=' → logprob: -4.236170291900635
    6. '_lengths' → logprob: -5.736170291900635
    7. 's' → logprob: -5.986170291900635
    8. '[:]' → logprob: -6.111170291900635
    9. '[]' → logprob: -6.361170291900635
    10. '_positions' → logprob: -6.611170291900635

Token 32: '_string' (ID: 8609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2247156798839569
    2. '[' → logprob: -2.5997157096862793
    3. '_' → logprob: -2.7247157096862793
    4. '=' → logprob: -2.9747157096862793
    5. '[:]' → logprob: -5.599715709686279
    6. 's' → logprob: -6.474715709686279
    7. ' ' → logprob: -6.599715709686279
    8. '[]' → logprob: -6.849715709686279
    9. ',' → logprob: -7.599715709686279
    10. '.' → logprob: -7.724715709686279

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14529970288276672
    2. '=' → logprob: -2.0202996730804443
    3. ')' → logprob: -6.895299911499023
    4. '[' → logprob: -7.270299911499023
    5. '_' → logprob: -8.145299911499023
    6. '[:]' → logprob: -8.895299911499023
    7. ' ' → logprob: -9.020299911499023
    8. 's' → logprob: -9.020299911499023
    9. ',' → logprob: -9.270299911499023
    10. '.' → logprob: -10.270299911499023

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22773048281669617
    2. 'input' → logprob: -1.6027305126190186
    3. '"' → logprob: -6.8527302742004395
    4. ' "' → logprob: -7.2277302742004395
    5. ' ' → logprob: -8.602730751037598
    6. ' '' → logprob: -9.227730751037598
    7. ''' → logprob: -9.477730751037598
    8. '""' → logprob: -9.477730751037598
    9. ' ""' → logprob: -10.102730751037598
    10. '"""' → logprob: -11.727730751037598

Token 35: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3498120903968811
    2. '(' → logprob: -1.2248120307922363
    3. '('' → logprob: -8.099812507629395
    4. '```' → logprob: -8.224812507629395
    5. ')' → logprob: -8.474812507629395
    6. '().' → logprob: -8.974812507629395
    7. ' ()' → logprob: -9.599812507629395
    8. ''' → logprob: -9.724812507629395
    9. '`()' → logprob: -9.974812507629395
    10. ' (' → logprob: -10.474812507629395

Token 36: '#' (ID: 2)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.3646453619003296
    2. 'if' → logprob: -2.614645481109619
    3. 'positions' → logprob: -2.739645481109619
    4. '_' → logprob: -2.864645481109619
    5. 'cells' → logprob: -2.989645481109619
    6. '#' → logprob: -3.114645481109619
    7. 'position' → logprob: -3.114645481109619
    8. 'def' → logprob: -3.239645481109619
    9. 's' → logprob: -3.364645481109619
    10. 'current' → logprob: -3.364645481109619

Token 37: ' Ind' (ID: 2761)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9334387183189392
    2. ' #' → logprob: -2.433438777923584
    3. 't' → logprob: -3.058438777923584
    4. ' track' → logprob: -3.308438777923584
    5. 'n' → logprob: -3.433438777923584
    6. '_' → logprob: -3.558438777923584
    7. 'track' → logprob: -3.683438777923584
    8. 'for' → logprob: -3.808438777923584
    9. ' ' → logprob: -3.933438777923584
    10. ' cells' → logprob: -4.058438777923584

Token 38: 'ices' (ID: 1386)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.013658237643539906
    2. 'ent' → logprob: -4.388658046722412
    3. 'e' → logprob: -7.513658046722412
    4. 'ented' → logprob: -8.38865852355957
    5. 'entation' → logprob: -8.76365852355957
    6. '#' → logprob: -10.13865852355957
    7. 'et' → logprob: -10.51365852355957
    8. 'ef' → logprob: -10.76365852355957
    9. 'expl' → logprob: -10.76365852355957
    10. 'ed' → logprob: -10.88865852355957

Token 39: ' correction' (ID: 43745)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06823460757732391
    2. '=' → logprob: -3.06823468208313
    3. '_' → logprob: -4.193234443664551
    4. ' ' → logprob: -6.818234443664551
    5. '_of' → logprob: -7.193234443664551
    6. ',' → logprob: -7.693234443664551
    7. ' of' → logprob: -8.06823444366455
    8. ':' → logprob: -8.31823444366455
    9. '_to' → logprob: -8.69323444366455
    10. '_indices' → logprob: -8.69323444366455

Token 40: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8172965049743652
    2. ' ' → logprob: -1.4422965049743652
    3. '_' → logprob: -2.5672965049743652
    4. 's' → logprob: -3.0672965049743652
    5. '[' → logprob: -3.4422965049743652
    6. ' =' → logprob: -3.5672965049743652
    7. ' #' → logprob: -3.9422965049743652
    8. ')' → logprob: -4.192296504974365
    9. ' for' → logprob: -4.567296504974365
    10. 'for' → logprob: -4.692296504974365

Token 41: ' converting' (ID: 55111)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7184624671936035
    2. '#' → logprob: -1.8434624671936035
    3. ' #' → logprob: -1.8434624671936035
    4. ' starting' → logprob: -3.0934624671936035
    5. ' track' → logprob: -3.0934624671936035
    6. ' for' → logprob: -3.3434624671936035
    7. ' _' → logprob: -3.4684624671936035
    8. '_' → logprob: -3.5934624671936035
    9. 'track' → logprob: -3.5934624671936035
    10. 'A' → logprob: -3.5934624671936035

Token 42: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.160099983215332
    2. ' to' → logprob: -1.285099983215332
    3. ' track' → logprob: -2.035099983215332
    4. ' ' → logprob: -2.660099983215332
    5. 'the' → logprob: -2.910099983215332
    6. 'track' → logprob: -3.160099983215332
    7. 'to' → logprob: -3.785099983215332
    8. ' all' → logprob: -4.285099983215332
    9. ' starting' → logprob: -4.785099983215332
    10. ' positions' → logprob: -4.785099983215332

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5510387420654297
    2. ' zero' → logprob: -1.3010387420654297
    3. ' ' → logprob: -1.9260387420654297
    4. 'zero' → logprob: -5.17603874206543
    5. ' a' → logprob: -12.42603874206543
    6. ' Python' → logprob: -12.55103874206543
    7. 'python' → logprob: -12.55103874206543
    8. ' python' → logprob: -12.80103874206543
    9. '```' → logprob: -13.17603874206543
    10. ' the' → logprob: -13.67603874206543

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0072431182488799095
    2. 'zero' → logprob: -5.0072431564331055
    3. ' zero' → logprob: -7.7572431564331055
    4. ' ' → logprob: -9.507243156433105
    5. '-' → logprob: -11.007243156433105
    6. '-zero' → logprob: -12.132243156433105
    7. 'index' → logprob: -14.007243156433105
    8. 'python' → logprob: -14.132243156433105
    9. 'a' → logprob: -14.882243156433105
    10. 'the' → logprob: -15.007243156433105

Token 45: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08765291422605515
    2. ' -' → logprob: -2.8376529216766357
    3. '-' → logprob: -4.087652683258057
    4. 'based' → logprob: -5.212652683258057
    5. '-base' → logprob: -6.462652683258057
    6. '-index' → logprob: -7.212652683258057
    7. ' based' → logprob: -7.712652683258057
    8. '_based' → logprob: -8.212653160095215
    9. 'base' → logprob: -10.587653160095215
    10. '-Based' → logprob: -10.712653160095215

Token 46: ' index' (ID: 3472)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7885167002677917
    2. '_' → logprob: -1.6635167598724365
    3. '_positions' → logprob: -2.4135167598724365
    4. 'starting' → logprob: -2.7885167598724365
    5. 'number' → logprob: -3.1635167598724365
    6. ' positions' → logprob: -3.2885167598724365
    7. 'position' → logprob: -3.7885167598724365
    8. 'indices' → logprob: -4.038516521453857
    9. ' starting' → logprob: -4.163516521453857
    10. '\' → logprob: -4.663516521453857

Token 47: ' as' (ID: 472)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.8696645498275757
    2. 's' → logprob: -1.1196645498275757
    3. '```' → logprob: -2.7446646690368652
    4. 'number' → logprob: -3.1196646690368652
    5. '<|end|>' → logprob: -3.1196646690368652
    6. ' starting' → logprob: -3.2446646690368652
    7. 'positions' → logprob: -4.494664669036865
    8. '_' → logprob: -4.869664669036865
    9. 'start' → logprob: -5.119664669036865
    10. '
' → logprob: -5.244664669036865

Token 48: ' Python' (ID: 26534)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0449810028076172
    2. ' in' → logprob: -1.4199810028076172
    3. ' per' → logprob: -1.6699810028076172
    4. 'the' → logprob: -3.419981002807617
    5. ' Python' → logprob: -3.919981002807617
    6. ' given' → logprob: -4.544981002807617
    7. 'in' → logprob: -4.669981002807617
    8. ' track' → logprob: -4.669981002807617
    9. ' python' → logprob: -4.794981002807617
    10. ' positions' → logprob: -4.794981002807617

Token 49: ' strings' (ID: 18279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' use' (ID: 1199)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4931141138076782
    2. '<|end|>' → logprob: -1.6181141138076782
    3. ' indices' → logprob: -3.1181139945983887
    4. '0' → logprob: -3.1181139945983887
    5. '<|end|>' → logprob: -3.2431139945983887
    6. ' for' → logprob: -4.243113994598389
    7. ' the' → logprob: -4.993113994598389
    8. ' to' → logprob: -5.243113994598389
    9. '```' → logprob: -5.243113994598389
    10. ' indexing' → logprob: -5.493113994598389

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009200616739690304
    2. '-' → logprob: -5.884200572967529
    3. ' zero' → logprob: -6.134200572967529
    4. 'zero' → logprob: -6.134200572967529
    5. ' ' → logprob: -6.634200572967529
    6. 'indices' → logprob: -8.384201049804688
    7. 'index' → logprob: -8.759201049804688
    8. ' -' → logprob: -9.759201049804688
    9. '```' → logprob: -9.759201049804688
    10. '-zero' → logprob: -9.884201049804688

Token 53: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.010260054841637611
    2. '-' → logprob: -5.135260105133057
    3. ' -' → logprob: -5.635260105133057
    4. 'based' → logprob: -8.135259628295898
    5. '-index' → logprob: -8.760259628295898
    6. '-base' → logprob: -9.635259628295898
    7. '<|end|>' → logprob: -9.885259628295898
    8. ')-' → logprob: -10.385259628295898
    9. '-Based' → logprob: -10.760259628295898
    10. '#' → logprob: -11.010259628295898

Token 54: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.5781309604644775
    2. ' indices' → logprob: -1.8281309604644775
    3. 'indices' → logprob: -2.2031309604644775
    4. '<|end|>' → logprob: -2.4531309604644775
    5. 'index' → logprob: -3.3281309604644775
    6. '<|end|>' → logprob: -4.203130722045898
    7. '```' → logprob: -4.953130722045898
    8. ')' → logprob: -5.328130722045898
    9. ' index' → logprob: -5.953130722045898
    10. 'ing' → logprob: -5.953130722045898

Token 55: '
' (ID: 198)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.8872761130332947
    2. '
' → logprob: -2.0122761726379395
    3. '```' → logprob: -2.7622761726379395
    4. 'number' → logprob: -2.7622761726379395
    5. 's' → logprob: -3.0122761726379395
    6. 'start' → logprob: -3.1372761726379395
    7. 'position' → logprob: -3.1372761726379395
    8. 'current' → logprob: -3.6372761726379395
    9. ' starting' → logprob: -3.6372761726379395
    10. ',' → logprob: -4.2622761726379395

Token 56: '#' (ID: 2)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.1871456503868103
    2. 'A' → logprob: -2.687145709991455
    3. ' starting' → logprob: -3.437145709991455
    4. 'number' → logprob: -3.687145709991455
    5. 'start' → logprob: -3.937145709991455
    6. 'position' → logprob: -4.812145709991455
    7. 'a' → logprob: -5.437145709991455
    8. 'positions' → logprob: -5.437145709991455
    9. '```' → logprob: -6.062145709991455
    10. '_' → logprob: -7.062145709991455

Token 57: ' starting' (ID: 8601)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.5189580321311951
    2. 'A' → logprob: -1.6439580917358398
    3. ' starting' → logprob: -2.39395809173584
    4. 'start' → logprob: -3.01895809173584
    5. 'position' → logprob: -3.89395809173584
    6. 'number' → logprob: -4.51895809173584
    7. ' A' → logprob: -4.64395809173584
    8. 'a' → logprob: -4.89395809173584
    9. ' start' → logprob: -5.64395809173584
    10. 'i' → logprob: -6.14395809173584

Token 58: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08685563504695892
    2. '_position' → logprob: -2.83685564994812
    3. '_positions' → logprob: -3.71185564994812
    4. '_pos' → logprob: -9.8368558883667
    5. '_index' → logprob: -10.0868558883667
    6. '_number' → logprob: -11.2118558883667
    7. ' _' → logprob: -11.3368558883667
    8. '_indices' → logprob: -11.9618558883667
    9. '_p' → logprob: -12.7118558883667
    10. 'positions' → logprob: -13.7118558883667

Token 59: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18174044787883759
    2. '_A' → logprob: -1.806740403175354
    3. ' _' → logprob: -7.9317402839660645
    4. '-' → logprob: -8.056740760803223
    5. 'A' → logprob: -8.431740760803223
    6. '_a' → logprob: -8.431740760803223
    7. '<|end|>' → logprob: -8.681740760803223
    8. 's' → logprob: -9.306740760803223
    9. ' =' → logprob: -9.306740760803223
    10. ' -' → logprob: -9.431740760803223

Token 60: ',' (ID: 11)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.018412364646792412
    2. ' =' → logprob: -4.2684125900268555
    3. ',' → logprob: -6.5184125900268555
    4. '-' → logprob: -6.7684125900268555
    5. ' -' → logprob: -7.0184125900268555
    6. '-=' → logprob: -7.7684125900268555
    7. '=' → logprob: -9.268412590026855
    8. ' +=' → logprob: -9.643412590026855
    9. ' ' → logprob: -9.643412590026855
    10. ' ,' → logprob: -10.018412590026855

Token 61: ' starting' (ID: 8601)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.0070756361819803715
    2. ' starting' → logprob: -5.132075786590576
    3. '-' → logprob: -7.007075786590576
    4. ')' → logprob: -9.007075309753418
    5. 'Starting' → logprob: -10.507075309753418
    6. '<|end|>' → logprob: -10.757075309753418
    7. 'number' → logprob: -11.132075309753418
    8. ' -' → logprob: -11.382075309753418
    9. '_' → logprob: -11.632075309753418
    10. 'target' → logprob: -11.757075309753418

Token 62: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.01000786479562521
    2. '_' → logprob: -5.010007858276367
    3. '_positions' → logprob: -5.760007858276367
    4. '_index' → logprob: -10.260007858276367
    5. '_POSITION' → logprob: -10.635007858276367
    6. '_pos' → logprob: -11.260007858276367
    7. '_Position' → logprob: -11.635007858276367
    8. '```' → logprob: -11.635007858276367
    9. 'position' → logprob: -11.760007858276367
    10. '_token' → logprob: -12.135007858276367

Token 63: '_B' (ID: 3201)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.7183975577354431
    2. '_C' → logprob: -1.093397617340088
    3. '_E' → logprob: -2.593397617340088
    4. 'A' → logprob: -3.093397617340088
    5. 'C' → logprob: -3.593397617340088
    6. 'E' → logprob: -3.968397617340088
    7. '_B' → logprob: -5.093397617340088
    8. 's' → logprob: -6.218397617340088
    9. '_D' → logprob: -7.093397617340088
    10. '_' → logprob: -7.718397617340088

Token 64: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4453651010990143
    2. ' -=' → logprob: -1.320365071296692
    3. ',' → logprob: -2.4453651905059814
    4. '=' → logprob: -5.820364952087402
    5. '-' → logprob: -6.820364952087402
    6. ' -' → logprob: -7.695364952087402
    7. ' +=' → logprob: -7.695364952087402
    8. '-=' → logprob: -7.945364952087402
    9. ' ,' → logprob: -9.070364952087402
    10. ' ' → logprob: -9.570364952087402

Token 65: ' target' (ID: 3783)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.3757466673851013
    2. 'target' → logprob: -1.250746726989746
    3. ' starting' → logprob: -4.250746726989746
    4. ' and' → logprob: -4.875746726989746
    5. ' target' → logprob: -6.250746726989746
    6. 'and' → logprob: -6.500746726989746
    7. ' ' → logprob: -7.375746726989746
    8. '-' → logprob: -8.375746726989746
    9. 'number' → logprob: -8.750746726989746
    10. '<|end|>' → logprob: -9.000746726989746

Token 66: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.23995575308799744
    2. '_' → logprob: -2.2399556636810303
    3. '_positions' → logprob: -2.2399556636810303
    4. '```' → logprob: -8.86495590209961
    5. '_POSITION' → logprob: -9.48995590209961
    6. '_indices' → logprob: -10.11495590209961
    7. '_Position' → logprob: -10.23995590209961
    8. '_pos' → logprob: -11.11495590209961
    9. 'position' → logprob: -11.48995590209961
    10. '_index' → logprob: -11.98995590209961

Token 67: '_C' (ID: 1720)
  Prédit: '_E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.4431043267250061
    2. '_C' → logprob: -1.4431042671203613
    3. '_A' → logprob: -2.1931042671203613
    4. '_' → logprob: -5.193104267120361
    5. 's' → logprob: -5.568104267120361
    6. '_D' → logprob: -8.56810474395752
    7. '```' → logprob: -8.81810474395752
    8. '_positions' → logprob: -9.56810474395752
    9. '_S' → logprob: -9.94310474395752
    10. 'E' → logprob: -10.06810474395752

Token 68: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6740536093711853
    2. ',' → logprob: -0.7990536093711853
    3. '=' → logprob: -3.29905366897583
    4. ' -=' → logprob: -5.92405366897583
    5. ' ,' → logprob: -8.424053192138672
    6. ')' → logprob: -8.549053192138672
    7. ' +=' → logprob: -9.174053192138672
    8. '-' → logprob: -9.174053192138672
    9. ' ' → logprob: -9.424053192138672
    10. '-=' → logprob: -9.674053192138672

Token 69: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.26291346549987793
    2. 'starting' → logprob: -1.887913465499878
    3. ' target' → logprob: -3.512913465499878
    4. ' starting' → logprob: -4.262913703918457
    5. ' and' → logprob: -4.387913703918457
    6. ' =' → logprob: -4.762913703918457
    7. '<|end|>' → logprob: -5.512913703918457
    8. ' ' → logprob: -5.762913703918457
    9. '=' → logprob: -6.387913703918457
    10. 'and' → logprob: -6.637913703918457

Token 70: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.008220454677939415
    2. '_' → logprob: -5.258220672607422
    3. '_positions' → logprob: -5.883220672607422
    4. '```' → logprob: -10.008220672607422
    5. '_POSITION' → logprob: -10.633220672607422
    6. '_of' → logprob: -10.633220672607422
    7. '_pos' → logprob: -11.133220672607422
    8. 'position' → logprob: -11.258220672607422
    9. '_code' → logprob: -11.383220672607422
    10. '_Position' → logprob: -11.508220672607422

Token 71: '_D' (ID: 2958)
  Prédit: '_E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.050514139235019684
    2. '_A' → logprob: -3.1755142211914062
    3. '_D' → logprob: -5.300514221191406
    4. '_' → logprob: -6.550514221191406
    5. 'E' → logprob: -7.800514221191406
    6. '_C' → logprob: -8.175514221191406
    7. '```' → logprob: -8.925514221191406
    8. '_B' → logprob: -9.925514221191406
    9. 's' → logprob: -10.175514221191406
    10. 'A' → logprob: -10.425514221191406

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055706266313791275
    2. ' -=' → logprob: -3.555706262588501
    3. '=' → logprob: -3.680706262588501
    4. '-=' → logprob: -8.430706024169922
    5. ' +=' → logprob: -9.430706024169922
    6. '-' → logprob: -9.805706024169922
    7. ' =[' → logprob: -11.305706024169922
    8. ' ' → logprob: -11.555706024169922
    9. ',' → logprob: -11.555706024169922
    10. '[' → logprob: -12.055706024169922

Token 73: ' map' (ID: 4014)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.253257155418396
    2. 'starting' → logprob: -1.378257155418396
    3. ' starting' → logprob: -1.753257155418396
    4. '[number' → logprob: -1.878257155418396
    5. ' [' → logprob: -2.8782572746276855
    6. '[' → logprob: -2.8782572746276855
    7. '[int' → logprob: -4.7532572746276855
    8. 'number' → logprob: -4.8782572746276855
    9. ' number' → logprob: -6.2532572746276855
    10. '[
' → logprob: -7.1282572746276855

Token 74: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5982837677001953
    2. '(' → logprob: -0.8482837677001953
    3. '(int' → logprob: -3.8482837677001953
    4. '(
' → logprob: -8.348283767700195
    5. '(str' → logprob: -8.473283767700195
    6. '```' → logprob: -8.598283767700195
    7. '[int' → logprob: -10.473283767700195
    8. '[' → logprob: -10.723283767700195
    9. '=lambda' → logprob: -10.973283767700195
    10. 'lambda' → logprob: -11.098283767700195

Token 75: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.585626482963562
    2. ' lambda' → logprob: -0.835626482963562
    3. 'x' → logprob: -5.210626602172852
    4. ' x' → logprob: -5.710626602172852
    5. '(lambda' → logprob: -7.085626602172852
    6. ':' → logprob: -11.335626602172852
    7. 'l' → logprob: -11.710626602172852
    8. '=lambda' → logprob: -11.960626602172852
    9. 'index' → logprob: -13.085626602172852
    10. ' index' → logprob: -14.210626602172852

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018577228765934706
    2. 'lambda' → logprob: -6.751857757568359
    3. ' :' → logprob: -8.62685775756836
    4. ' lambda' → logprob: -8.75185775756836
    5. '(lambda' → logprob: -9.00185775756836
    6. 'x' → logprob: -9.37685775756836
    7. ':int' → logprob: -9.87685775756836
    8. ' x' → logprob: -10.00185775756836
    9. 'int' → logprob: -11.50185775756836
    10. '=lambda' → logprob: -11.62685775756836

Token 77: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3922548294067383
    2. ' x' → logprob: -1.1422548294067383
    3. ' lambda' → logprob: -5.892254829406738
    4. 'lambda' → logprob: -6.142254829406738
    5. 'int' → logprob: -7.767254829406738
    6. '(lambda' → logprob: -11.142254829406738
    7. ' int' → logprob: -11.267254829406738
    8. ' ' → logprob: -13.517254829406738
    9. ' (' → logprob: -13.767254829406738
    10. '(x' → logprob: -13.892254829406738

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3490595519542694
    2. ' -' → logprob: -1.2240595817565918
    3. ':' → logprob: -7.474059581756592
    4. ' ' → logprob: -11.224059104919434
    5. 'lambda' → logprob: -11.349059104919434
    6. ')' → logprob: -12.474059104919434
    7. 'x' → logprob: -12.724059104919434
    8. 's' → logprob: -13.099059104919434
    9. ' :' → logprob: -13.474059104919434
    10. '()-' → logprob: -13.599059104919434

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05489322170615196
    2. ' ' → logprob: -2.9298932552337646
    3. ' lambda' → logprob: -11.929893493652344
    4. 'lambda' → logprob: -13.179893493652344
    5. ')' → logprob: -13.679893493652344
    6. ' x' → logprob: -15.804893493652344
    7. '```' → logprob: -15.804893493652344
    8. '(' → logprob: -16.054893493652344
    9. '0' → logprob: -16.179893493652344
    10. ',' → logprob: -16.304893493652344

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.25004005432129
    4. 'int' → logprob: -16.75004005432129
    5. 'lambda' → logprob: -17.75004005432129
    6. '`' → logprob: -19.25004005432129
    7. ' lambda' → logprob: -19.62504005432129
    8. ')' → logprob: -20.62504005432129
    9. '<|end|>' → logprob: -20.62504005432129
    10. '   ' → logprob: -21.06254005432129

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06254185736179352
    2. ')' → logprob: -2.812541961669922
    3. ',)' → logprob: -8.562541961669922
    4. '),' → logprob: -8.937541961669922
    5. '))' → logprob: -9.437541961669922
    6. ',line' → logprob: -10.312541961669922
    7. ' ,' → logprob: -10.437541961669922
    8. '(' → logprob: -10.812541961669922
    9. ',x' → logprob: -11.312541961669922
    10. ',
' → logprob: -11.687541961669922

Token 82: ' [' (ID: 723)
  Prédit: '[number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[number' → logprob: -0.35430243611335754
    2. '[start' → logprob: -1.3543024063110352
    3. '[' → logprob: -3.854302406311035
    4. '(number' → logprob: -4.479302406311035
    5. '(range' → logprob: -6.354302406311035
    6. '[int' → logprob: -6.729302406311035
    7. '(start' → logprob: -6.729302406311035
    8. ' [' → logprob: -6.979302406311035
    9. 'range' → logprob: -7.479302406311035
    10. '[str' → logprob: -7.729302406311035

Token 83: 'a' (ID: 64)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.1602746844291687
    2. 'starting' → logprob: -1.9102747440338135
    3. ' starting' → logprob: -10.285274505615234
    4. ' number' → logprob: -11.035274505615234
    5. '[number' → logprob: -16.035274505615234
    6. 'numbers' → logprob: -16.535274505615234
    7. 'start' → logprob: -17.035274505615234
    8. 'Starting' → logprob: -17.535274505615234
    9. 'num' → logprob: -17.660274505615234
    10. '(number' → logprob: -17.785274505615234

Token 84: ',' (ID: 11)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.23850895464420319
    2. ',' → logprob: -1.863508939743042
    3. 'number' → logprob: -3.863508939743042
    4. '_,' → logprob: -4.363509178161621
    5. '_' → logprob: -4.613509178161621
    6. ',_' → logprob: -4.988509178161621
    7. ')' → logprob: -5.988509178161621
    8. '_)' → logprob: -7.863509178161621
    9. '_numbers' → logprob: -7.863509178161621
    10. ' ,' → logprob: -8.238509178161621

Token 85: ' b' (ID: 287)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.0007538817590102553
    2. ' number' → logprob: -7.625753879547119
    3. 'starting' → logprob: -8.250754356384277
    4. 'b' → logprob: -12.875754356384277
    5. ' starting' → logprob: -13.500754356384277
    6. '	number' → logprob: -16.25075340270996
    7. ' ' → logprob: -16.37575340270996
    8. 'start' → logprob: -16.37575340270996
    9. '[number' → logprob: -16.75075340270996
    10. '```' → logprob: -16.75075340270996

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004738063144031912
    2. ' ,' → logprob: -8.000473976135254
    3. ',c' → logprob: -9.875473976135254
    4. 'c' → logprob: -10.625473976135254
    5. ')' → logprob: -11.750473976135254
    6. 'starting' → logprob: -12.125473976135254
    7. ',start' → logprob: -12.250473976135254
    8. ',f' → logprob: -12.375473976135254
    9. 'number' → logprob: -12.625473976135254
    10. ',
' → logprob: -12.750473976135254

Token 87: ' c' (ID: 274)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.27286794781684875
    2. 'c' → logprob: -1.5228679180145264
    3. ' number' → logprob: -4.6478681564331055
    4. 'starting' → logprob: -4.6478681564331055
    5. ' c' → logprob: -7.2728681564331055
    6. ' starting' → logprob: -7.7728681564331055
    7. 'start' → logprob: -9.147868156433105
    8. 'target' → logprob: -9.522868156433105
    9. ' ' → logprob: -10.460368156433105
    10. 'n' → logprob: -10.710368156433105

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003009041247423738
    2. ' ,' → logprob: -8.750301361083984
    3. '])' → logprob: -10.000301361083984
    4. ')' → logprob: -10.625301361083984
    5. '_,' → logprob: -11.500301361083984
    6. ',d' → logprob: -11.875301361083984
    7. ',f' → logprob: -12.250301361083984
    8. ',

' → logprob: -12.250301361083984
    9. ',)' → logprob: -12.250301361083984
    10. ' ' → logprob: -12.375301361083984

Token 89: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001455236109904945
    2. ' d' → logprob: -6.626455307006836
    3. 'number' → logprob: -9.001455307006836
    4. ' number' → logprob: -13.251455307006836
    5. 'starting' → logprob: -13.626455307006836
    6. ' ' → logprob: -13.876455307006836
    7. 'start' → logprob: -14.126455307006836
    8. '_d' → logprob: -14.626455307006836
    9. '_' → logprob: -15.876455307006836
    10. ' starting' → logprob: -16.001455307006836

Token 90: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04438403248786926
    2. ')' → logprob: -3.294384002685547
    3. ')])' → logprob: -5.419384002685547
    4. '))' → logprob: -6.794384002685547
    5. ']))' → logprob: -7.794384002685547
    6. ' ])' → logprob: -8.794384002685547
    7. ')]' → logprob: -9.169384002685547
    8. ']' → logprob: -9.919384002685547
    9. ',' → logprob: -11.794384002685547
    10. ' )' → logprob: -11.919384002685547

Token 91: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16938579082489014
    2. 'a' → logprob: -2.4193859100341797
    3. 'A' → logprob: -4.54438591003418
    4. 'starting' → logprob: -4.54438591003418
    5. 'number' → logprob: -4.66938591003418
    6. '
' → logprob: -4.91938591003418
    7. 'if' → logprob: -5.29438591003418
    8. '<|end|>' → logprob: -5.41938591003418
    9. ' ' → logprob: -5.91938591003418
    10. 's' → logprob: -5.91938591003418

Token 92: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5258779525756836
    2. 'starting' → logprob: -1.5258779525756836
    3. 'a' → logprob: -1.9008779525756836
    4. 'start' → logprob: -4.400877952575684
    5. 'def' → logprob: -4.900877952575684
    6. 'A' → logprob: -5.400877952575684
    7. 'correct' → logprob: -5.400877952575684
    8. 'number' → logprob: -5.525877952575684
    9. 'if' → logprob: -5.900877952575684
    10. 'track' → logprob: -6.525877952575684

Token 93: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0053410530090332
    2. ' ' → logprob: -1.1303410530090332
    3. 'if' → logprob: -2.130341053009033
    4. '_' → logprob: -2.755341053009033
    5. 's' → logprob: -3.630341053009033
    6. '#' → logprob: -3.880341053009033
    7. '=' → logprob: -4.255341053009033
    8. 'i' → logprob: -4.380341053009033
    9. '[' → logprob: -5.380341053009033
    10. ' for' → logprob: -5.380341053009033

Token 94: ' a' (ID: 261)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.5972231030464172
    2. ''' → logprob: -1.9722230434417725
    3. ' starting' → logprob: -2.4722230434417725
    4. 'target' → logprob: -2.9722230434417725
    5. ' '' → logprob: -3.0972230434417725
    6. 'track' → logprob: -3.2222230434417725
    7. '"' → logprob: -3.9722230434417725
    8. ' track' → logprob: -4.597223281860352
    9. 're' → logprob: -4.847223281860352
    10. ''s' → logprob: -4.972223281860352

Token 95: ' blocked' (ID: 35275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20688407123088837
    2. ''' → logprob: -3.2068841457366943
    3. ' is' → logprob: -3.7068841457366943
    4. ' '' → logprob: -4.081883907318115
    5. ' cells' → logprob: -4.456883907318115
    6. ''s' → logprob: -4.581883907318115
    7. 'n' → logprob: -4.706883907318115
    8. ' "' → logprob: -4.831883907318115
    9. '"' → logprob: -4.956883907318115
    10. ' number' → logprob: -5.456883907318115

Token 96: ' cell' (ID: 4206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14678426086902618
    2. '_' → logprob: -2.2717843055725098
    3. ' space' → logprob: -4.02178430557251
    4. 'space' → logprob: -4.64678430557251
    5. '<|end|>' → logprob: -7.14678430557251
    6. '_space' → logprob: -7.27178430557251
    7. ' "' → logprob: -7.39678430557251
    8. ')' → logprob: -7.64678430557251
    9. ' _' → logprob: -7.77178430557251
    10. ' )' → logprob: -7.89678430557251

Token 97: ' ('' (ID: 9906)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.369965523481369
    2. ' ' → logprob: -1.7449655532836914
    3. 's' → logprob: -3.1199655532836914
    4. ' =' → logprob: -3.2449655532836914
    5. '[' → logprob: -4.244965553283691
    6. ':' → logprob: -4.869965553283691
    7. '(' → logprob: -4.994965553283691
    8. ' _' → logprob: -4.994965553283691
    9. ' (' → logprob: -5.744965553283691
    10. '=' → logprob: -5.744965553283691

Token 98: '##' (ID: 877)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6660794615745544
    2. '#' → logprob: -0.7910794615745544
    3. ''' → logprob: -4.041079521179199
    4. '')' → logprob: -4.666079521179199
    5. ')' → logprob: -6.666079521179199
    6. ''#' → logprob: -6.666079521179199
    7. 's' → logprob: -8.2910795211792
    8. 'R' → logprob: -8.4160795211792
    9. '█' → logprob: -8.5410795211792
    10. '.' → logprob: -8.5410795211792

Token 99: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.09020920842885971
    2. '#' → logprob: -3.3402092456817627
    3. ' ')' → logprob: -3.3402092456817627
    4. ')' → logprob: -4.965209007263184
    5. ''' → logprob: -5.215209007263184
    6. 's' → logprob: -7.715209007263184
    7. ''s' → logprob: -7.840209007263184
    8. '")' → logprob: -7.965209007263184
    9. '##' → logprob: -8.652709007263184
    10. '['' → logprob: -9.152709007263184

Token 100: ' exists' (ID: 13031)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02099410817027092
    2. 's' → logprob: -5.770994186401367
    3. ' '' → logprob: -5.895994186401367
    4. ' "' → logprob: -5.895994186401367
    5. ' is' → logprob: -6.145994186401367
    6. ' in' → logprob: -6.520994186401367
    7. '<|end|>' → logprob: -6.645994186401367
    8. ' =' → logprob: -7.020994186401367
    9. ' i' → logprob: -7.145994186401367
    10. ')' → logprob: -7.145994186401367

Token 101: ' between' (ID: 2870)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10023513436317444
    2. '<|end|>' → logprob: -3.8502352237701416
    3. 'if' → logprob: -4.1002349853515625
    4. ''' → logprob: -4.7252349853515625
    5. 'for' → logprob: -4.8502349853515625
    6. ')' → logprob: -4.9752349853515625
    7. 's' → logprob: -4.9752349853515625
    8. ' if' → logprob: -5.8502349853515625
    9. ' for' → logprob: -5.8502349853515625
    10. '"' → logprob: -5.9752349853515625

Token 102: ' the' (ID: 290)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.05507614091038704
    2. ' starting' → logprob: -2.9300761222839355
    3. 'the' → logprob: -9.555076599121094
    4. ' the' → logprob: -9.805076599121094
    5. 'number' → logprob: -10.305076599121094
    6. ' ' → logprob: -11.680076599121094
    7. 'a' → logprob: -12.430076599121094
    8. ' number' → logprob: -12.555076599121094
    9. 'str' → logprob: -12.555076599121094
    10. 'Starting' → logprob: -12.805076599121094

Token 103: ' current' (ID: 2208)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.051623787730932236
    2. ' starting' → logprob: -3.051623821258545
    3. 'start' → logprob: -6.176623821258545
    4. 'A' → logprob: -7.801623821258545
    5. 'positions' → logprob: -9.051623344421387
    6. 'number' → logprob: -9.301623344421387
    7. 'target' → logprob: -9.551623344421387
    8. 'a' → logprob: -10.301623344421387
    9. 'min' → logprob: -10.801623344421387
    10. 'first' → logprob: -10.926623344421387

Token 104: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8311192393302917
    2. ' positions' → logprob: -1.0811192989349365
    3. ' position' → logprob: -2.5811192989349365
    4. 'position' → logprob: -2.5811192989349365
    5. ' and' → logprob: -3.3311192989349365
    6. '_positions' → logprob: -5.081119060516357
    7. ' track' → logprob: -5.206119060516357
    8. 'and' → logprob: -5.581119060516357
    9. '_position' → logprob: -5.581119060516357
    10. ' cells' → logprob: -5.956119060516357

Token 105: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4951435625553131
    2. 's' → logprob: -1.2451435327529907
    3. ',' → logprob: -2.8701436519622803
    4. ' s' → logprob: -4.870143413543701
    5. ' ,' → logprob: -4.995143413543701
    6. ''' → logprob: -5.370143413543701
    7. '.' → logprob: -5.620143413543701
    8. ':' → logprob: -5.745143413543701
    9. '_' → logprob: -5.870143413543701
    10. '#' → logprob: -5.870143413543701

Token 106: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5686414241790771
    2. 'the' → logprob: -1.5686414241790771
    3. 'target' → logprob: -1.8186414241790771
    4. ' target' → logprob: -2.943641424179077
    5. ' next' → logprob: -5.818641662597656
    6. 'next' → logprob: -6.693641662597656
    7. ' ' → logprob: -6.693641662597656
    8. '#' → logprob: -6.693641662597656
    9. '<|end|>' → logprob: -7.068641662597656
    10. 'starting' → logprob: -7.443641662597656

Token 107: ' far' (ID: 4150)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.18452046811580658
    2. ' target' → logprob: -1.9345204830169678
    3. 'next' → logprob: -4.559520244598389
    4. ' next' → logprob: -4.559520244598389
    5. 'destination' → logprob: -7.309520244598389
    6. 'desired' → logprob: -7.559520244598389
    7. 'starting' → logprob: -7.559520244598389
    8. 'goal' → logprob: -8.059520721435547
    9. ' starting' → logprob: -9.059520721435547
    10. 'start' → logprob: -9.059520721435547

Token 108: 'thest' (ID: 129300)
  Prédit: 'ther'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ther' → logprob: -0.7195764183998108
    2. 'thest' → logprob: -0.7195764183998108
    3. 'est' → logprob: -4.469576358795166
    4. 'er' → logprob: -5.469576358795166
    5. 'mer' → logprob: -5.719576358795166
    6. 'st' → logprob: -6.094576358795166
    7. '```' → logprob: -6.094576358795166
    8. 'test' → logprob: -7.844576358795166
    9. 'ter' → logprob: -8.219576835632324
    10. 'rest' → logprob: -8.344576835632324

Token 109: ' target' (ID: 3783)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5251604318618774
    2. ' cells' → logprob: -1.9001604318618774
    3. 'positions' → logprob: -2.275160312652588
    4. 'cells' → logprob: -2.525160312652588
    5. ' positions' → logprob: -3.150160312652588
    6. '_' → logprob: -3.275160312652588
    7. ' cell' → logprob: -3.275160312652588
    8. 'cell' → logprob: -3.525160312652588
    9. 'position' → logprob: -4.025160312652588
    10. ''' → logprob: -4.150160312652588

Token 110: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0784897804260254
    2. '#' → logprob: -1.4534897804260254
    3. '.' → logprob: -2.4534897804260254
    4. ' ' → logprob: -2.5784897804260254
    5. 'for' → logprob: -2.8284897804260254
    6. 's' → logprob: -3.0784897804260254
    7. 'if' → logprob: -3.5784897804260254
    8. ',' → logprob: -3.5784897804260254
    9. '<|end|>' → logprob: -3.7034897804260254
    10. ' for' → logprob: -4.578489780426025

Token 111: 'maximum' (ID: 78601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4079328179359436
    2. '<|end|>' → logprob: -2.282932758331299
    3. ':' → logprob: -2.907932758331299
    4. 'if' → logprob: -3.032932758331299
    5. 'for' → logprob: -3.282932758331299
    6. '<|end|>' → logprob: -4.282932758331299
    7. ',' → logprob: -4.657932758331299
    8. 'i' → logprob: -4.907932758331299
    9. 's' → logprob: -5.157932758331299
    10. '```' → logprob: -5.157932758331299

Token 112: '_target' (ID: 24705)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.19694441556930542
    2. '_' → logprob: -2.44694447517395
    3. '_distance' → logprob: -3.57194447517395
    4. '_re' → logprob: -3.69694447517395
    5. '_index' → logprob: -4.196944236755371
    6. '_possible' → logprob: -4.946944236755371
    7. '_target' → logprob: -5.321944236755371
    8. '_block' → logprob: -5.946944236755371
    9. '_pos' → logprob: -6.071944236755371
    10. '_cell' → logprob: -6.821944236755371

Token 113: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.3699636161327362
    2. '_' → logprob: -1.8699636459350586
    3. '=' → logprob: -1.9949636459350586
    4. '_index' → logprob: -5.119963645935059
    5. ' =' → logprob: -5.244963645935059
    6. '_distance' → logprob: -5.744963645935059
    7. '_pos' → logprob: -6.244963645935059
    8. '_=' → logprob: -6.869963645935059
    9. '_target' → logprob: -7.244963645935059
    10. '_positions' → logprob: -7.994963645935059

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11371047049760818
    2. '=' → logprob: -2.238710403442383
    3. ',' → logprob: -7.113710403442383
    4. '_' → logprob: -9.863710403442383
    5. 's' → logprob: -12.363710403442383
    6. ')' → logprob: -12.363710403442383
    7. ' ' → logprob: -12.613710403442383
    8. ' ,' → logprob: -13.613710403442383
    9. '=int' → logprob: -13.613710403442383
    10. '_=' → logprob: -14.113710403442383

Token 115: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.061973292380571365
    2. ' max' → logprob: -2.8119733333587646
    3. 'target' → logprob: -12.561973571777344
    4. '(max' → logprob: -14.061973571777344
    5. 'min' → logprob: -14.561973571777344
    6. ' ' → logprob: -14.936973571777344
    7. ' target' → logprob: -15.436973571777344
    8. '	max' → logprob: -16.311973571777344
    9. '[max' → logprob: -16.686973571777344
    10. 'maximum' → logprob: -17.561973571777344

Token 116: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.018245233222842216
    2. '(start' → logprob: -4.018245220184326
    3. '(' → logprob: -10.143245697021484
    4. 'target' → logprob: -10.643245697021484
    5. '([' → logprob: -11.143245697021484
    6. 'starting' → logprob: -11.643245697021484
    7. '(number' → logprob: -12.393245697021484
    8. '((' → logprob: -13.768245697021484
    9. '(t' → logprob: -14.393245697021484
    10. ' (' → logprob: -14.643245697021484

Token 117: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.9862216504407115e-05
    2. 'position' → logprob: -11.000020027160645
    3. '_positions' → logprob: -13.625020027160645
    4. '_number' → logprob: -14.500020027160645
    5. '_' → logprob: -14.750020027160645
    6. '_of' → logprob: -15.250020027160645
    7. 'Position' → logprob: -15.500020027160645
    8. '```' → logprob: -15.875020027160645
    9. '_POSITION' → logprob: -16.125019073486328
    10. ')' → logprob: -16.250019073486328

Token 118: '_B' (ID: 3201)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0011843960965052247
    2. '_A' → logprob: -6.751184463500977
    3. '```' → logprob: -12.251184463500977
    4. 'C' → logprob: -12.376184463500977
    5. '_B' → logprob: -13.376184463500977
    6. '_D' → logprob: -13.626184463500977
    7. ')' → logprob: -14.626184463500977
    8. 's' → logprob: -14.751184463500977
    9. 'A' → logprob: -14.876184463500977
    10. '_' → logprob: -15.376184463500977

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35228896141052246
    2. '_C' → logprob: -2.2272889614105225
    3. '_,' → logprob: -2.3522889614105225
    4. ')' → logprob: -3.8522889614105225
    5. '_D' → logprob: -4.102289199829102
    6. '_' → logprob: -4.227289199829102
    7. '_B' → logprob: -4.352289199829102
    8. ' ,' → logprob: -4.602289199829102
    9. '_A' → logprob: -4.852289199829102
    10. '-' → logprob: -5.477289199829102

Token 120: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.008145954459905624
    2. 'starting' → logprob: -5.008145809173584
    3. ' target' → logprob: -7.383145809173584
    4. 'number' → logprob: -7.508145809173584
    5. 'C' → logprob: -8.633146286010742
    6. ' starting' → logprob: -10.633146286010742
    7. '_target' → logprob: -11.758146286010742
    8. '_C' → logprob: -11.758146286010742
    9. ')' → logprob: -11.883146286010742
    10. 'D' → logprob: -12.258146286010742

Token 121: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.20287637412548065
    2. '_C' → logprob: -1.702876329421997
    3. '_A' → logprob: -7.202876567840576
    4. 'position' → logprob: -8.077876091003418
    5. '_D' → logprob: -8.577876091003418
    6. 'C' → logprob: -9.952876091003418
    7. '_positions' → logprob: -10.077876091003418
    8. '_number' → logprob: -10.952876091003418
    9. '_' → logprob: -11.077876091003418
    10. ')' → logprob: -11.452876091003418

Token 122: '_D' (ID: 2958)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.22558720409870148
    2. '_A' → logprob: -1.850587248802185
    3. 'C' → logprob: -3.7255871295928955
    4. 'A' → logprob: -3.9755871295928955
    5. ')' → logprob: -7.350587368011475
    6. '_D' → logprob: -7.725587368011475
    7. '_B' → logprob: -7.850587368011475
    8. '```' → logprob: -9.350586891174316
    9. '_c' → logprob: -10.225586891174316
    10. '_number' → logprob: -10.350586891174316

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010297117987647653
    2. ' )' → logprob: -7.7510294914245605
    3. ')+' → logprob: -8.001029968261719
    4. '+' → logprob: -8.876029968261719
    5. ',' → logprob: -9.626029968261719
    6. ' +' → logprob: -11.251029968261719
    7. '))' → logprob: -11.626029968261719
    8. '),' → logprob: -12.251029968261719
    9. ')
' → logprob: -12.376029968261719
    10. '-' → logprob: -13.126029968261719

Token 124: 'blocked' (ID: 114537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13343891501426697
    2. ')' → logprob: -2.7584388256073
    3. '_number' → logprob: -3.5084388256073
    4. 'number' → logprob: -4.133439064025879
    5. '_A' → logprob: -5.133439064025879
    6. '_)' → logprob: -6.008439064025879
    7. 'A' → logprob: -6.258439064025879
    8. '=' → logprob: -6.883439064025879
    9. '_a' → logprob: -7.758439064025879
    10. '_B' → logprob: -7.883439064025879

Token 125: '_path' (ID: 5558)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.9240857362747192
    2. '_' → logprob: -1.4240857362747192
    3. '_cells' → logprob: -2.4240856170654297
    4. '_indices' → logprob: -2.5490856170654297
    5. '_position' → logprob: -2.5490856170654297
    6. '_index' → logprob: -3.1740856170654297
    7. '_pos' → logprob: -4.04908561706543
    8. '_exists' → logprob: -4.17408561706543
    9. '_cell' → logprob: -4.79908561706543
    10. '_in' → logprob: -5.17408561706543

Token 126: '_pattern' (ID: 50002)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.4160217046737671
    2. ' =' → logprob: -1.666021704673767
    3. '=' → logprob: -2.9160218238830566
    4. '_index' → logprob: -3.6660218238830566
    5. '_found' → logprob: -4.041021823883057
    6. '_string' → logprob: -4.041021823883057
    7. 's' → logprob: -4.666021823883057
    8. '_indices' → logprob: -4.666021823883057
    9. '_' → logprob: -4.916021823883057
    10. '_exist' → logprob: -5.166021823883057

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762110188603401
    2. '=' → logprob: -4.634762287139893
    3. 's' → logprob: -12.134761810302734
    4. ' ' → logprob: -15.134761810302734
    5. ' =
' → logprob: -16.384761810302734
    6. '```' → logprob: -16.384761810302734
    7. ')' → logprob: -16.759761810302734
    8. ' ' → logprob: -17.009761810302734
    9. ' ='' → logprob: -17.509761810302734
    10. '<|end|>' → logprob: -17.759761810302734

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6874404549598694
    2. '"' → logprob: -1.3124403953552246
    3. ''' → logprob: -1.6874403953552246
    4. 're' → logprob: -3.9374403953552246
    5. ' r' → logprob: -4.562440395355225
    6. ''r' → logprob: -5.187440395355225
    7. ' '' → logprob: -5.687440395355225
    8. ' "' → logprob: -6.187440395355225
    9. ' re' → logprob: -7.187440395355225
    10. ''re' → logprob: -8.312440872192383

Token 129: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17512567341327667
    2. '"' → logprob: -2.0501255989074707
    3. ''\' → logprob: -4.175125598907471
    4. '##' → logprob: -5.050125598907471
    5. '"\' → logprob: -5.550125598907471
    6. ''#' → logprob: -5.800125598907471
    7. ''(' → logprob: -7.050125598907471
    8. '"#' → logprob: -7.175125598907471
    9. ' '' → logprob: -7.300125598907471
    10. '\' → logprob: -8.550126075744629

Token 130: '##' (ID: 877)
  Prédit: '##'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '##' → logprob: -0.06317871063947678
    2. ''' → logprob: -3.188178777694702
    3. '\' → logprob: -4.188178539276123
    4. '"' → logprob: -6.063178539276123
    5. ''#' → logprob: -7.188178539276123
    6. '#' → logprob: -7.313178539276123
    7. ''\' → logprob: -8.563179016113281
    8. '"#' → logprob: -8.938179016113281
    9. '##
' → logprob: -8.938179016113281
    10. '##

' → logprob: -9.688179016113281

Token 131: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10006581991910934
    2. ')' → logprob: -2.4750657081604004
    3. ''' → logprob: -5.3500657081604
    4. '[' → logprob: -6.2250657081604
    5. '<|end|>' → logprob: -6.3500657081604
    6. '',' → logprob: -7.6000657081604
    7. ',' → logprob: -7.9750657081604
    8. '<|end|>' → logprob: -8.600066184997559
    9. '[start' → logprob: -8.725066184997559
    10. '")' → logprob: -8.725066184997559

Token 132: 'substring' (ID: 61719)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30128243565559387
    2. '=' → logprob: -1.5512824058532715
    3. '_to' → logprob: -3.0512824058532715
    4. '_start' → logprob: -7.9262824058532715
    5. 'to' → logprob: -8.05128288269043
    6. '_' → logprob: -10.05128288269043
    7. '_between' → logprob: -10.17628288269043
    8. '_range' → logprob: -11.17628288269043
    9. '=start' → logprob: -11.30128288269043
    10. 'To' → logprob: -11.80128288269043

Token 134: '_check' (ID: 15847)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.0099453926086426
    2. '_search' → logprob: -1.2599453926086426
    3. '_check' → logprob: -1.6349453926086426
    4. 'check' → logprob: -3.0099453926086426
    5. 'rch' → logprob: -3.0099453926086426
    6. '_match' → logprob: -3.6349453926086426
    7. 'match' → logprob: -4.634945392608643
    8. 'find' → logprob: -5.259945392608643
    9. '_find' → logprob: -5.509945392608643
    10. 'earch' → logprob: -5.884945392608643

Token 135: '_block' (ID: 15644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023468971252441
    2. '=' → logprob: -1.9102346897125244
    3. ' ' → logprob: -12.285234451293945
    4. ')' → logprob: -13.785234451293945
    5. '<|end|>' → logprob: -13.910234451293945
    6. '=end' → logprob: -14.535234451293945
    7. '=start' → logprob: -14.785234451293945
    8. 's' → logprob: -14.785234451293945
    9. '=index' → logprob: -14.910234451293945
    10. '=cut' → logprob: -15.410234451293945

Token 136: 'ages' (ID: 1461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2033093422651291
    2. ' =' → logprob: -1.7033092975616455
    3. 'ing' → logprob: -8.078309059143066
    4. 'e' → logprob: -8.328309059143066
    5. '='' → logprob: -8.578309059143066
    6. '_' → logprob: -8.828309059143066
    7. 's' → logprob: -8.953309059143066
    8. '_check' → logprob: -9.078309059143066
    9. '='_' → logprob: -9.078309059143066
    10. '="_' → logprob: -9.453309059143066

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868785798549652
    2. '=' → logprob: -1.1368786096572876
    3. 's' → logprob: -12.761878967285156
    4. '_' → logprob: -13.511878967285156
    5. ' ' → logprob: -13.761878967285156
    6. '=

' → logprob: -14.761878967285156
    7. ',' → logprob: -15.386878967285156
    8. ' ' → logprob: -15.511878967285156
    9. '_start' → logprob: -15.511878967285156
    10. ')' → logprob: -15.636878967285156

Token 138: ' track' (ID: 5290)
  Prédit: ' track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.25237080454826355
    2. 'track' → logprob: -1.502370834350586
    3. '(track' → logprob: -8.002370834350586
    4. ' ' → logprob: -9.752370834350586
    5. ' f' → logprob: -11.877370834350586
    6. ' number' → logprob: -12.877370834350586
    7. '"' → logprob: -12.939870834350586
    8. 'tracking' → logprob: -13.064870834350586
    9. 'number' → logprob: -13.064870834350586
    10. ' ' → logprob: -13.252370834350586

Token 139: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.27099974633893e-05
    2. '_string' → logprob: -11.375012397766113
    3. 'state' → logprob: -14.750012397766113
    4. '[' → logprob: -15.750012397766113
    5. '[_' → logprob: -15.750012397766113
    6. '_' → logprob: -16.00001335144043
    7. '_STATE' → logprob: -16.62501335144043
    8. 'State' → logprob: -17.12501335144043
    9. '_State' → logprob: -17.37501335144043
    10. '_states' → logprob: -17.50001335144043

Token 140: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -4.4418171455617994e-05
    2. 'string' → logprob: -10.125044822692871
    3. 'String' → logprob: -13.125044822692871
    4. '_' → logprob: -13.875044822692871
    5. 's' → logprob: -14.625044822692871
    6. '[' → logprob: -15.625044822692871
    7. '_STRING' → logprob: -15.750044822692871
    8. 'tring' → logprob: -16.125043869018555
    9. '_String' → logprob: -16.250043869018555
    10. '_strings' → logprob: -16.375043869018555

Token 141: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.02684926986694336
    2. '[' → logprob: -4.026849269866943
    3. '[min' → logprob: -4.901849269866943
    4. '[
' → logprob: -7.401849269866943
    5. '[number' → logprob: -8.151849746704102
    6. '[max' → logprob: -8.776849746704102
    7. 'starting' → logprob: -10.276849746704102
    8. '[current' → logprob: -11.026849746704102
    9. '[:' → logprob: -11.526849746704102
    10. '[int' → logprob: -11.776849746704102

Token 142: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.004151887726038694
    2. 'starting' → logprob: -6.879151821136475
    3. 'ting' → logprob: -7.004151821136475
    4. 'art' → logprob: -7.254151821136475
    5. '_position' → logprob: -8.004152297973633
    6. 'ring' → logprob: -8.504152297973633
    7. 'ning' → logprob: -8.629152297973633
    8. 'position' → logprob: -9.254152297973633
    9. ':' → logprob: -9.379152297973633
    10. '[' → logprob: -9.754152297973633

Token 143: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.190178904333152e-05
    2. '_' → logprob: -10.875031471252441
    3. '_positions' → logprob: -11.750031471252441
    4. 'position' → logprob: -12.625031471252441
    5. '_index' → logprob: -15.000031471252441
    6. '_Position' → logprob: -15.250031471252441
    7. '_number' → logprob: -15.375031471252441
    8. ')' → logprob: -15.625031471252441
    9. '_POSITION' → logprob: -15.875031471252441
    10. '```' → logprob: -15.875031471252441

Token 144: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.07238565385341644
    2. '_B' → logprob: -2.697385549545288
    3. '_' → logprob: -6.322385787963867
    4. 'A' → logprob: -7.697385787963867
    5. '_C' → logprob: -9.572385787963867
    6. ')' → logprob: -10.697385787963867
    7. 'B' → logprob: -10.947385787963867
    8. '-' → logprob: -11.322385787963867
    9. '_D' → logprob: -11.572385787963867
    10. '```' → logprob: -11.697385787963867

Token 145: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016110315918922424
    2. ' :' → logprob: -6.501611232757568
    3. '+' → logprob: -9.37661075592041
    4. ':]' → logprob: -12.00161075592041
    5. ' ' → logprob: -12.37661075592041
    6. '+:' → logprob: -12.75161075592041
    7. ' +' → logprob: -13.50161075592041
    8. ':max' → logprob: -13.50161075592041
    9. ':

' → logprob: -14.00161075592041
    10. ':
' → logprob: -14.12661075592041

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010596063220873475
    2. ' ' → logprob: -6.876059532165527
    3. '2' → logprob: -11.376059532165527
    4. 'starting' → logprob: -12.626059532165527
    5. '3' → logprob: -13.501059532165527
    6. '-' → logprob: -13.626059532165527
    7. '10' → logprob: -13.938559532165527
    8. '100' → logprob: -14.001059532165527
    9. '0' → logprob: -14.063559532165527
    10. '5' → logprob: -14.126059532165527

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019705044105648994
    2. ' ' → logprob: -6.876970291137695
    3. '2' → logprob: -7.626970291137695
    4. 'starting' → logprob: -9.001970291137695
    5. '3' → logprob: -9.501970291137695
    6. '10' → logprob: -9.876970291137695
    7. '5' → logprob: -10.314470291137695
    8. '20' → logprob: -10.814470291137695
    9. '100' → logprob: -10.876970291137695
    10. '0' → logprob: -10.939470291137695

Token 148: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026315970346331596
    2. ' :' → logprob: -3.651315927505493
    3. ':]' → logprob: -12.901315689086914
    4. ' ' → logprob: -13.276315689086914
    5. 'starting' → logprob: -13.526315689086914
    6. 'start' → logprob: -13.651315689086914
    7. '+' → logprob: -13.776315689086914
    8. ']' → logprob: -14.151315689086914
    9. ':
' → logprob: -14.151315689086914
    10. 'max' → logprob: -14.151315689086914

Token 149: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.007717947941273451
    2. ' maximum' → logprob: -4.882718086242676
    3. 'target' → logprob: -9.757718086242676
    4. 'starting' → logprob: -10.257718086242676
    5. 'max' → logprob: -11.382718086242676
    6. 'number' → logprob: -13.007718086242676
    7. '.maximum' → logprob: -13.757718086242676
    8. ' starting' → logprob: -14.007718086242676
    9. ' ' → logprob: -14.257718086242676
    10. ' target' → logprob: -14.632718086242676

Token 150: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.05505853891372681
    2. 'target' → logprob: -2.930058479309082
    3. '(target' → logprob: -9.680058479309082
    4. '_position' → logprob: -9.805058479309082
    5. '_' → logprob: -11.180058479309082
    6. '_of' → logprob: -11.805058479309082
    7. ' target' → logprob: -11.930058479309082
    8. 'Target' → logprob: -12.055058479309082
    9. 'of' → logprob: -12.180058479309082
    10. 'position' → logprob: -12.930058479309082

Token 151: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.038214996457099915
    2. 'position' → logprob: -3.288214921951294
    3. '_target' → logprob: -10.038214683532715
    4. '_positions' → logprob: -10.413214683532715
    5. 'target' → logprob: -10.913214683532715
    6. '_' → logprob: -11.038214683532715
    7. ' position' → logprob: -11.413214683532715
    8. '+' → logprob: -11.788214683532715
    9. '```' → logprob: -12.038214683532715
    10. 'A' → logprob: -12.538214683532715

Token 152: ']

' (ID: 3144)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07384147495031357
    2. ' +' → logprob: -2.8238415718078613
    3. ']' → logprob: -4.448841571807861
    4. '+]' → logprob: -10.323841094970703
    5. ' ]' → logprob: -10.323841094970703
    6. ']+' → logprob: -10.698841094970703
    7. ')' → logprob: -12.073841094970703
    8. '<|end|>' → logprob: -12.073841094970703
    9. ')]' → logprob: -12.698841094970703
    10. '+"]' → logprob: -13.073841094970703

Token 153: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6824320554733276
    2. 'if' → logprob: -1.9324320554733276
    3. '.' → logprob: -2.432432174682617
    4. ']' → logprob: -2.557432174682617
    5. '[' → logprob: -2.807432174682617
    6. '=' → logprob: -3.557432174682617
    7. ' if' → logprob: -3.682432174682617
    8. '#' → logprob: -4.557432174682617
    9. ':' → logprob: -4.682432174682617
    10. ' ' → logprob: -4.682432174682617

Token 154: ' re' (ID: 322)
  Prédit: ' blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocked' → logprob: -0.5874882340431213
    2. 'blocked' → logprob: -1.4624881744384766
    3. ' re' → logprob: -1.8374881744384766
    4. 're' → logprob: -2.9624881744384766
    5. ''' → logprob: -6.837488174438477
    6. ' '' → logprob: -8.337488174438477
    7. ''re' → logprob: -9.337488174438477
    8. 'block' → logprob: -10.212488174438477
    9. ' block' → logprob: -10.212488174438477
    10. '(re' → logprob: -10.212488174438477

Token 155: '.search' (ID: 16718)
  Prédit: '.search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.search' → logprob: -0.00040993880247697234
    2. '.findall' → logprob: -8.000410079956055
    3. '.' → logprob: -10.000410079956055
    4. '.match' → logprob: -10.625410079956055
    5. '.full' → logprob: -13.250410079956055
    6. 'search' → logprob: -13.250410079956055
    7. '.find' → logprob: -14.625410079956055
    8. '\.' → logprob: -15.125410079956055
    9. '```' → logprob: -16.250410079956055
    10. '.compile' → logprob: -16.375410079956055

Token 156: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.625096321105957
    3. '(r' → logprob: -10.875096321105957
    4. '\(' → logprob: -12.125096321105957
    5. 'blocked' → logprob: -12.625096321105957
    6. '('(' → logprob: -14.375096321105957
    7. ' (' → logprob: -14.625096321105957
    8. '('\' → logprob: -14.750096321105957
    9. '(bl' → logprob: -15.000096321105957
    10. '('' → logprob: -15.125096321105957

Token 157: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0030575692653656006
    2. '_path' → logprob: -6.253057479858398
    3. 'locked' → logprob: -7.253057479858398
    4. 'ocked' → logprob: -8.503057479858398
    5. 'lock' → logprob: -10.003057479858398
    6. 'path' → logprob: -10.503057479858398
    7. 'blocked' → logprob: -10.628057479858398
    8. '_pattern' → logprob: -11.003057479858398
    9. 'ded' → logprob: -11.003057479858398
    10. 'led' → logprob: -11.253057479858398

Token 158: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.2855416066013277e-05
    2. 'path' → logprob: -11.000032424926758
    3. '_pattern' → logprob: -11.250032424926758
    4. '_pat' → logprob: -13.875032424926758
    5. 'pattern' → logprob: -14.375032424926758
    6. '```' → logprob: -15.250032424926758
    7. ')' → logprob: -15.500032424926758
    8. '_' → logprob: -15.500032424926758
    9. '\' → logprob: -15.750032424926758
    10. '_block' → logprob: -15.875032424926758

Token 159: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -3.166338137816638e-05
    2. 'pattern' → logprob: -10.625031471252441
    3. '_p' → logprob: -12.625031471252441
    4. '_pat' → logprob: -13.625031471252441
    5. '_' → logprob: -14.125031471252441
    6. ')' → logprob: -15.000031471252441
    7. 'r' → logprob: -15.125031471252441
    8. '```' → logprob: -15.250031471252441
    9. '_PATTERN' → logprob: -15.750031471252441
    10. ')_' → logprob: -15.750031471252441

Token 160: ',' (ID: 11)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.30539512634277344
    2. ',' → logprob: -1.8053951263427734
    3. '):' → logprob: -3.0553951263427734
    4. ')' → logprob: -3.5553951263427734
    5. '(' → logprob: -4.180395126342773
    6. 'substring' → logprob: -5.305395126342773
    7. ')>' → logprob: -7.805395126342773
    8. '):
' → logprob: -7.805395126342773
    9. '(block' → logprob: -7.930395126342773
    10. ')==' → logprob: -8.055395126342773

Token 161: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.2254454344511032
    2. ' substring' → logprob: -1.6004453897476196
    3. 'sub' → logprob: -10.975445747375488
    4. ' ' → logprob: -12.225445747375488
    5. 'substr' → logprob: -12.350445747375488
    6. 'Substring' → logprob: -13.100445747375488
    7. '   ' → logprob: -13.475445747375488
    8. '	sub' → logprob: -14.100445747375488
    9. '  ' → logprob: -14.850445747375488
    10. '(sub' → logprob: -14.975445747375488

Token 162: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -12.12501049041748
    3. ')_' → logprob: -12.25001049041748
    4. ')>' → logprob: -16.375011444091797
    5. '```' → logprob: -16.875011444091797
    6. '))' → logprob: -17.000011444091797
    7. 'to' → logprob: -17.375011444091797
    8. ' _' → logprob: -17.500011444091797
    9. '<|end|>' → logprob: -17.500011444091797
    10. '_' → logprob: -17.500011444091797

Token 163: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.012264394201338291
    2. 'search' → logprob: -4.762264251708984
    3. '_check' → logprob: -5.637264251708984
    4. ' check' → logprob: -10.512264251708984
    5. 'string' → logprob: -11.012264251708984
    6. 'find' → logprob: -11.512264251708984
    7. '_search' → logprob: -11.762264251708984
    8. 'che' → logprob: -12.512264251708984
    9. 'heck' → logprob: -12.762264251708984
    10. 'match' → logprob: -13.137264251708984

Token 164: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.416837602853775
    2. 'substring' → logprob: -1.7918375730514526
    3. 'block' → logprob: -2.541837692260742
    4. 'blocked' → logprob: -2.666837692260742
    5. 'string' → logprob: -4.791837692260742
    6. '_path' → logprob: -5.166837692260742
    7. ')' → logprob: -5.166837692260742
    8. '_string' → logprob: -5.791837692260742
    9. 'check' → logprob: -7.666837692260742
    10. '_check' → logprob: -7.666837692260742

Token 165: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.1093083918094635
    2. 'age' → logprob: -2.3593084812164307
    3. 'ed' → logprob: -4.734308242797852
    4. ')' → logprob: -9.609308242797852
    5. '```' → logprob: -10.734308242797852
    6. 'adge' → logprob: -10.984308242797852
    7. 'ades' → logprob: -11.234308242797852
    8. 'aged' → logprob: -11.359308242797852
    9. 'ock' → logprob: -11.484308242797852
    10. 'ance' → logprob: -11.609308242797852

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05575203895568848
    2. ')' → logprob: -2.9307520389556885
    3. '):
' → logprob: -7.305751800537109
    4. ' ):' → logprob: -8.68075180053711
    5. ')==' → logprob: -11.43075180053711
    6. ' )' → logprob: -12.05575180053711
    7. ')>' → logprob: -13.05575180053711
    8. ')is' → logprob: -13.55575180053711
    9. ':' → logprob: -13.68075180053711
    10. ' is' → logprob: -13.68075180053711

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016500094905495644
    2. ' print' → logprob: -4.391499996185303
    3. 'print' → logprob: -5.766499996185303
    4. ':' → logprob: -7.891499996185303
    5. '    
' → logprob: -9.016500473022461
    6. '	print' → logprob: -10.016500473022461
    7. '
' → logprob: -10.141500473022461
    8. ':
' → logprob: -10.141500473022461
    9. '   ' → logprob: -10.141500473022461
    10. ')' → logprob: -10.141500473022461

Token 168: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007134697865694761
    2. ' print' → logprob: -5.007134914398193
    3. '
' → logprob: -8.382134437561035
    4. '   ' → logprob: -8.632134437561035
    5. '```' → logprob: -13.007134437561035
    6. '	print' → logprob: -13.257134437561035
    7. '    ' → logprob: -13.632134437561035
    8. '    
' → logprob: -13.882134437561035
    9. '
' → logprob: -14.507134437561035
    10. ' ' → logprob: -14.507134437561035

Token 169: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03075576201081276
    2. '(' → logprob: -3.7807557582855225
    3. '('' → logprob: -5.155755996704102
    4. '(-' → logprob: -6.405755996704102
    5. '(False' → logprob: -10.530755996704102
    6. '()' → logprob: -11.030755996704102
    7. '("")' → logprob: -11.405755996704102
    8. '(True' → logprob: -12.155755996704102
    9. '("-' → logprob: -14.030755996704102
    10. '(":' → logprob: -14.155755996704102

Token 170: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.02882215939462185
    2. 'Impossible' → logprob: -4.02882194519043
    3. 'NO' → logprob: -5.65382194519043
    4. 'Cannot' → logprob: -6.15382194519043
    5. 'Blocked' → logprob: -6.27882194519043
    6. 'Yes' → logprob: -7.40382194519043
    7. 'Fail' → logprob: -7.65382194519043
    8. '#' → logprob: -7.77882194519043
    9. 'Game' → logprob: -8.02882194519043
    10. 'Path' → logprob: -8.40382194519043

Token 171: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0008232106338255107
    2. ')' → logprob: -7.375823020935059
    3. '")' → logprob: -9.250823020935059
    4. '')
' → logprob: -10.875823020935059
    5. ''' → logprob: -11.000823020935059
    6. '!' → logprob: -11.250823020935059
    7. ' solution' → logprob: -11.500823020935059
    8. 't' → logprob: -12.250823020935059
    9. ',' → logprob: -12.375823020935059
    10. '#' → logprob: -12.500823020935059

Token 172: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0003422567679081112
    2. 'elif' → logprob: -8.25034236907959
    3. ' else' → logprob: -9.75034236907959
    4. '<|end|>' → logprob: -10.87534236907959
    5. ')' → logprob: -13.00034236907959
    6. '_else' → logprob: -14.62534236907959
    7. '```' → logprob: -15.00034236907959
    8. 'elser' → logprob: -15.75034236907959
    9. '#else' → logprob: -15.87534236907959
    10. 'Else' → logprob: -16.500341415405273

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013274075172375888
    2. ':
' → logprob: -9.00013256072998
    3. ' :' → logprob: -12.37513256072998
    4. '   ' → logprob: -12.62513256072998
    5. ',' → logprob: -15.00013256072998
    6. ':

' → logprob: -15.37513256072998
    7. '{' → logprob: -15.50013256072998
    8. '<|end|>' → logprob: -15.87513256072998
    9. 'print' → logprob: -16.000133514404297
    10. '.' → logprob: -16.250133514404297

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25341686606407166
    2. ' if' → logprob: -1.628416895866394
    3. 'if' → logprob: -3.7534167766571045
    4. 'print' → logprob: -6.503417015075684
    5. ' print' → logprob: -6.753417015075684
    6. ' #' → logprob: -8.378417015075684
    7. '```' → logprob: -8.753417015075684
    8. ' for' → logprob: -8.878417015075684
    9. ' ' → logprob: -9.128417015075684
    10. ' max' → logprob: -9.253417015075684

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8080764412879944
    2. ' if' → logprob: -1.4330763816833496
    3. 'print' → logprob: -1.5580763816833496
    4. '#' → logprob: -3.3080763816833496
    5. '   ' → logprob: -3.6830763816833496
    6. ' print' → logprob: -3.9330763816833496
    7. ' #' → logprob: -4.93307638168335
    8. 'for' → logprob: -5.43307638168335
    9. ' for' → logprob: -6.05807638168335
    10. 'substring' → logprob: -6.05807638168335

Token 176: ' target' (ID: 3783)
  Prédit: ' starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starting' → logprob: -0.9362656474113464
    2. 'starting' → logprob: -1.0612657070159912
    3. 're' → logprob: -2.686265707015991
    4. 'target' → logprob: -2.811265707015991
    5. ' target' → logprob: -3.436265707015991
    6. ''' → logprob: -3.686265707015991
    7. ' maximum' → logprob: -4.311265468597412
    8. ' re' → logprob: -4.561265468597412
    9. 'max' → logprob: -4.811265468597412
    10. 'maximum' → logprob: -4.811265468597412

Token 177: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.069664333248511e-05
    2. '_positions' → logprob: -11.750020980834961
    3. '_' → logprob: -12.125020980834961
    4. 'position' → logprob: -12.500020980834961
    5. '_number' → logprob: -13.375020980834961
    6. '_code' → logprob: -14.875020980834961
    7. '```' → logprob: -15.125020980834961
    8. '_of' → logprob: -15.125020980834961
    9. 'Position' → logprob: -15.375020980834961
    10. '_POSITION' → logprob: -15.500020980834961

Token 178: '_C' (ID: 1720)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.370322048664093
    2. '_C' → logprob: -1.8703219890594482
    3. '_B' → logprob: -1.8703219890594482
    4. '_D' → logprob: -7.370322227478027
    5. 'A' → logprob: -7.620322227478027
    6. '_' → logprob: -9.495322227478027
    7. 'C' → logprob: -9.745322227478027
    8. 'B' → logprob: -10.745322227478027
    9. '<|end|>' → logprob: -11.495322227478027
    10. '>' → logprob: -11.620322227478027

Token 179: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.034183841198682785
    2. '>' → logprob: -3.5341837406158447
    3. ' >=' → logprob: -6.034183979034424
    4. ' <' → logprob: -6.784183979034424
    5. ' <=' → logprob: -8.034183502197266
    6. '<|end|>' → logprob: -8.534183502197266
    7. '>=' → logprob: -9.284183502197266
    8. ' ' → logprob: -9.409183502197266
    9. '[' → logprob: -9.659183502197266
    10. '<' → logprob: -10.409183502197266

Token 180: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.05975654348731041
    2. 'starting' → logprob: -3.0597565174102783
    3. ' target' → logprob: -4.809756755828857
    4. 'start' → logprob: -7.184756755828857
    5. 'maximum' → logprob: -7.309756755828857
    6. 'max' → logprob: -7.684756755828857
    7. ' starting' → logprob: -7.809756755828857
    8. ' ' → logprob: -8.6847562789917
    9. 'track' → logprob: -8.8097562789917
    10. '=' → logprob: -9.1847562789917

Token 181: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00043472214019857347
    2. 'position' → logprob: -7.875434875488281
    3. 'Position' → logprob: -11.750434875488281
    4. '_B' → logprob: -11.750434875488281
    5. 'B' → logprob: -12.250434875488281
    6. '_' → logprob: -12.250434875488281
    7. '_positions' → logprob: -12.375434875488281
    8. 'A' → logprob: -12.625434875488281
    9. '_number' → logprob: -12.625434875488281
    10. '_of' → logprob: -12.750434875488281

Token 182: '_D' (ID: 2958)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.07711023837327957
    2. '_D' → logprob: -3.0771102905273438
    3. '_A' → logprob: -3.7021102905273438
    4. '_C' → logprob: -6.202110290527344
    5. 'B' → logprob: -6.702110290527344
    6. 'A' → logprob: -9.202110290527344
    7. 'D' → logprob: -9.577110290527344
    8. '```' → logprob: -11.702110290527344
    9. '_' → logprob: -12.452110290527344
    10. 'C' → logprob: -12.952110290527344

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00222780997864902
    2. ' :' → logprob: -6.377227783203125
    3. ':
' → logprob: -8.002227783203125
    4. ' and' → logprob: -9.252227783203125
    5. '):' → logprob: -9.502227783203125
    6. '   ' → logprob: -12.377227783203125
    7. ' :
' → logprob: -12.627227783203125
    8. 'and' → logprob: -12.752227783203125
    9. ',' → logprob: -13.502227783203125
    10. '<|end|>' → logprob: -13.627227783203125

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22434712946414948
    2. '   ' → logprob: -2.3493471145629883
    3. '<|end|>' → logprob: -2.3493471145629883
    4. '    ' → logprob: -6.349347114562988
    5. ' ' → logprob: -6.849347114562988
    6. '    
' → logprob: -6.974347114562988
    7. ' if' → logprob: -7.099347114562988
    8. '        
' → logprob: -7.099347114562988
    9. ')' → logprob: -7.349347114562988
    10. '
' → logprob: -7.474347114562988

Token 185: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.5847195386886597
    2. 'print' → logprob: -1.5847195386886597
    3. 'substring' → logprob: -1.7097195386886597
    4. 'if' → logprob: -2.084719657897949
    5. '   ' → logprob: -2.334719657897949
    6. 'pass' → logprob: -2.709719657897949
    7. 'sub' → logprob: -3.709719657897949
    8. ' #' → logprob: -4.334719657897949
    9. '...' → logprob: -4.459719657897949
    10. ' if' → logprob: -4.584719657897949

Token 186: ' In' (ID: 730)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8117430210113525
    2. 'substring' → logprob: -0.8117430210113525
    3. 'if' → logprob: -3.1867430210113525
    4. '   ' → logprob: -4.311742782592773
    5. 'pass' → logprob: -4.436742782592773
    6. 'sub' → logprob: -4.561742782592773
    7. 'path' → logprob: -4.936742782592773
    8. ' substring' → logprob: -5.061742782592773
    9. ' #' → logprob: -6.061742782592773
    10. 'passing' → logprob: -6.686742782592773

Token 187: ' case' (ID: 1890)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2206135988235474
    2. ' range' → logprob: -1.4706135988235474
    3. 'substring' → logprob: -1.7206135988235474
    4. ' substring' → logprob: -2.595613479614258
    5. '#' → logprob: -3.345613479614258
    6. 'starting' → logprob: -3.595613479614258
    7. ' the' → logprob: -3.720613479614258
    8. ' starting' → logprob: -3.845613479614258
    9. 'target' → logprob: -3.845613479614258
    10. 'the' → logprob: -3.970613479614258

Token 188: ' overt' (ID: 64535)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7684708833694458
    2. '       ' → logprob: -1.5184708833694458
    3. ' the' → logprob: -2.8934707641601562
    4. 'starting' → logprob: -2.8934707641601562
    5. ' starting' → logprob: -3.0184707641601562
    6. 'the' → logprob: -3.5184707641601562
    7. '   ' → logprob: -3.8934707641601562
    8. 'of' → logprob: -3.8934707641601562
    9. '           ' → logprob: -4.518470764160156
    10. ' there' → logprob: -4.643470764160156

Token 189: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.4746270477771759
    2. 'ake' → logprob: -0.9746270179748535
    3. 'aken' → logprob: -9.099627494812012
    4. 'ak' → logprob: -9.974627494812012
    5. '#' → logprob: -10.037127494812012
    6. 'akes' → logprob: -10.037127494812012
    7. '```' → logprob: -10.037127494812012
    8. 'take' → logprob: -10.099627494812012
    9. 'taking' → logprob: -10.662127494812012
    10. ' ake' → logprob: -10.724627494812012

Token 190: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6695237755775452
    2. '   ' → logprob: -1.4195237159729004
    3. ':' → logprob: -3.0445237159729004
    4. '       ' → logprob: -3.5445237159729004
    5. '...' → logprob: -3.7945237159729004
    6. '<|end|>' → logprob: -3.9195237159729004
    7. '  ' → logprob: -4.2945237159729
    8. ' ,' → logprob: -4.5445237159729
    9. 'if' → logprob: -4.6695237159729
    10. ' ' → logprob: -4.9195237159729

Token 191: ' needed' (ID: 6118)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.366296648979187
    2. 'needed' → logprob: -1.616296648979187
    3. 'necessary' → logprob: -3.1162967681884766
    4. ' required' → logprob: -3.2412967681884766
    5. 'possible' → logprob: -4.491296768188477
    6. 'allowed' → logprob: -5.366296768188477
    7. ' needed' → logprob: -5.616296768188477
    8. ' necessary' → logprob: -6.366296768188477
    9. 'True' → logprob: -6.866296768188477
    10. 'not' → logprob: -6.866296768188477

Token 192: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.924375057220459
    2. ':' → logprob: -1.299375057220459
    3. '<|end|>' → logprob: -2.174375057220459
    4. ',' → logprob: -2.299375057220459
    5. '   ' → logprob: -3.049375057220459
    6. ' if' → logprob: -4.299375057220459
    7. ':
' → logprob: -4.549375057220459
    8. '
' → logprob: -4.674375057220459
    9. '           ' → logprob: -5.174375057220459
    10. 'if' → logprob: -5.424375057220459

Token 193: ' check' (ID: 2371)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.2129933089017868
    2. ' substring' → logprob: -1.8379932641983032
    3. '   ' → logprob: -4.587993144989014
    4. '#' → logprob: -4.712993144989014
    5. 'pass' → logprob: -6.212993144989014
    6. ' pass' → logprob: -6.462993144989014
    7. ' #' → logprob: -6.712993144989014
    8. 'if' → logprob: -6.962993144989014
    9. ' if' → logprob: -7.087993144989014
    10. 'sub' → logprob: -7.212993144989014

Token 194: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40453076362609863
    2. ' for' → logprob: -1.9045307636260986
    3. 'if' → logprob: -2.0295307636260986
    4. 'for' → logprob: -3.2795307636260986
    5. ' the' → logprob: -4.5295305252075195
    6. ' whether' → logprob: -6.7795305252075195
    7. 'the' → logprob: -7.1545305252075195
    8. ' substring' → logprob: -7.1545305252075195
    9. 'substring' → logprob: -7.4045305252075195
    10. 'whether' → logprob: -8.27953052520752

Token 195: ' at' (ID: 540)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11072541773319244
    2. ''.' → logprob: -3.8607254028320312
    3. '...' → logprob: -4.235725402832031
    4. 'r' → logprob: -4.360725402832031
    5. ''r' → logprob: -4.360725402832031
    6. ''re' → logprob: -4.860725402832031
    7. ''s' → logprob: -4.985725402832031
    8. 'starting' → logprob: -5.235725402832031
    9. 're' → logprob: -5.610725402832031
    10. 'track' → logprob: -5.735725402832031

Token 196: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.01633194088935852
    2. ' least' → logprob: -4.266332149505615
    3. 'arget' → logprob: -7.516332149505615
    4. 'r' → logprob: -7.516332149505615
    5. '_le' → logprob: -8.516331672668457
    6. '-le' → logprob: -8.891331672668457
    7. 'lease' → logprob: -9.141331672668457
    8. 'le' → logprob: -9.516331672668457
    9. 'ree' → logprob: -9.766331672668457
    10. 'rack' → logprob: -9.891331672668457

Token 197: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.050019409507513046
    2. 'three' → logprob: -3.0500195026397705
    3. ' three' → logprob: -6.800019264221191
    4. '_three' → logprob: -9.550019264221191
    5. '
' → logprob: -10.050019264221191
    6. '   ' → logprob: -10.175019264221191
    7. ' ' → logprob: -10.300019264221191
    8. ''' → logprob: -10.550019264221191
    9. 'one' → logprob: -11.050019264221191
    10. '2' → logprob: -11.425019264221191

Token 198: '3' (ID: 18)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.37674838304519653
    2. '3' → logprob: -1.2517483234405518
    3. ''' → logprob: -3.7517483234405518
    4. 'one' → logprob: -6.001748561859131
    5. ' three' → logprob: -7.626748561859131
    6. '"' → logprob: -7.626748561859131
    7. 'a' → logprob: -8.501748085021973
    8. ''s' → logprob: -9.001748085021973
    9. '"""' → logprob: -9.126748085021973
    10. '###' → logprob: -9.751748085021973

Token 199: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.1599634885787964
    2. ''.' → logprob: -2.784963607788086
    3. ' consecutive' → logprob: -3.159963607788086
    4. ''' → logprob: -4.909963607788086
    5. '...' → logprob: -5.034963607788086
    6. ''#' → logprob: -5.159963607788086
    7. '#' → logprob: -5.284963607788086
    8. '.' → logprob: -5.409963607788086
    9. ' '.'' → logprob: -5.659963607788086
    10. ' '#'' → logprob: -5.784963607788086

Token 200: ' free' (ID: 2240)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.311455637216568
    2. 'dots' → logprob: -1.9364556074142456
    3. 'open' → logprob: -3.061455726623535
    4. '...' → logprob: -3.936455726623535
    5. '.' → logprob: -4.436455726623535
    6. ''' → logprob: -4.686455726623535
    7. 'dot' → logprob: -4.811455726623535
    8. 'free' → logprob: -5.061455726623535
    9. ' dots' → logprob: -5.436455726623535
    10. ' '.'' → logprob: -5.436455726623535

Token 201: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.42879924178123474
    2. ''.' → logprob: -1.5537992715835571
    3. '.' → logprob: -2.4287991523742676
    4. '...' → logprob: -4.553799152374268
    5. 'positions' → logprob: -4.553799152374268
    6. 'spaces' → logprob: -4.803799152374268
    7. ' cells' → logprob: -5.178799152374268
    8. '..' → logprob: -5.928799152374268
    9. 'track' → logprob: -6.803799152374268
    10. 'dots' → logprob: -6.803799152374268

Token 202: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6009748578071594
    2. ' '' → logprob: -2.3509747982025146
    3. '   ' → logprob: -2.3509747982025146
    4. ' (' → logprob: -3.1009747982025146
    5. '('' → logprob: -3.4759747982025146
    6. ',' → logprob: -3.6009747982025146
    7. ''s' → logprob: -3.6009747982025146
    8. '  ' → logprob: -3.9759747982025146
    9. '(' → logprob: -4.100975036621094
    10. '...' → logprob: -4.975975036621094

Token 203: '...')
' (ID: 123215)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.009958774782717228
    2. '.' → logprob: -5.634958744049072
    3. '\.' → logprob: -6.634958744049072
    4. '.')' → logprob: -6.759958744049072
    5. '...)' → logprob: -6.884958744049072
    6. '..' → logprob: -7.134958744049072
    7. '...'' → logprob: -7.634958744049072
    8. '....' → logprob: -8.00995922088623
    9. '')' → logprob: -8.13495922088623
    10. '...
' → logprob: -8.13495922088623

Token 204: '       ' (ID: 309)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.7966316342353821
    2. '   ' → logprob: -1.2966315746307373
    3. '       ' → logprob: -2.0466315746307373
    4. '.' → logprob: -3.1716315746307373
    5. ':' → logprob: -3.4216315746307373
    6. ' if' → logprob: -4.421631813049316
    7. ' .' → logprob: -4.546631813049316
    8. '  ' → logprob: -5.421631813049316
    9. ')' → logprob: -5.421631813049316
    10. '<|end|>' → logprob: -5.421631813049316

Token 205: ' overt' (ID: 64535)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.42146211862564087
    2. 'free' → logprob: -1.421462059020996
    3. 'if' → logprob: -3.546462059020996
    4. 'pass' → logprob: -3.921462059020996
    5. ' free' → logprob: -3.921462059020996
    6. '   ' → logprob: -5.171462059020996
    7. 'safe' → logprob: -5.546462059020996
    8. '...' → logprob: -5.921462059020996
    9. ' overt' → logprob: -5.921462059020996
    10. 'open' → logprob: -6.046462059020996

Token 206: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.03474530205130577
    2. 'ake' → logprob: -3.409745216369629
    3. 'aken' → logprob: -8.034745216369629
    4. 'ak' → logprob: -8.284745216369629
    5. 'a' → logprob: -8.909745216369629
    6. '_' → logprob: -9.284745216369629
    7. '```' → logprob: -9.659745216369629
    8. '   ' → logprob: -10.409745216369629
    9. ' aking' → logprob: -11.034745216369629
    10. '_a' → logprob: -11.159745216369629

Token 207: '_position' (ID: 23739)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.2216823399066925
    2. '_required' → logprob: -2.22168231010437
    3. '_cells' → logprob: -3.97168231010437
    4. '_possible' → logprob: -4.096682548522949
    5. '_path' → logprob: -4.221682548522949
    6. '_needed' → logprob: -4.346682548522949
    7. '_' → logprob: -4.971682548522949
    8. '_space' → logprob: -5.471682548522949
    9. '_condition' → logprob: -6.096682548522949
    10. '_sp' → logprob: -6.096682548522949

Token 208: '_start' (ID: 10949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9002609848976135
    2. '_' → logprob: -1.0252609252929688
    3. '_pattern' → logprob: -2.2752609252929688
    4. '=' → logprob: -2.9002609252929688
    5. '_index' → logprob: -3.1502609252929688
    6. 's' → logprob: -4.025260925292969
    7. '_start' → logprob: -5.775260925292969
    8. '_match' → logprob: -6.275260925292969
    9. '_range' → logprob: -6.400260925292969
    10. '_search' → logprob: -6.900260925292969

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1006038710474968
    2. '=' → logprob: -2.3506038188934326
    3. ',' → logprob: -8.725604057312012
    4. 's' → logprob: -8.975604057312012
    5. '_index' → logprob: -10.350604057312012
    6. ' ' → logprob: -11.100604057312012
    7. ')' → logprob: -11.225604057312012
    8. '_idx' → logprob: -11.225604057312012
    9. '_' → logprob: -11.850604057312012
    10. 'index' → logprob: -11.975604057312012

Token 210: ' starting' (ID: 8601)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.49336859583854675
    2. 'target' → logprob: -0.9933686256408691
    3. 'max' → logprob: -4.493368625640869
    4. 'maximum' → logprob: -5.243368625640869
    5. ' starting' → logprob: -6.743368625640869
    6. ' target' → logprob: -7.493368625640869
    7. 'track' → logprob: -7.743368625640869
    8. 'start' → logprob: -8.493368148803711
    9. 'substring' → logprob: -9.368368148803711
    10. 'minimum' → logprob: -9.743368148803711

Token 211: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.857719275401905e-05
    2. 'position' → logprob: -10.625038146972656
    3. '_positions' → logprob: -11.375038146972656
    4. '_' → logprob: -13.875038146972656
    5. 'Position' → logprob: -14.500038146972656
    6. '```' → logprob: -15.000038146972656
    7. 'A' → logprob: -15.375038146972656
    8. '_A' → logprob: -15.500038146972656
    9. '_POSITION' → logprob: -15.750038146972656
    10. '_Position' → logprob: -16.375038146972656

Token 212: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.24898377060890198
    2. '_A' → logprob: -1.7489837408065796
    3. '_C' → logprob: -3.123983860015869
    4. '_D' → logprob: -6.123983860015869
    5. 'A' → logprob: -9.123983383178711
    6. 'B' → logprob: -9.248983383178711
    7. '```' → logprob: -10.373983383178711
    8. 'C' → logprob: -10.748983383178711
    9. '_E' → logprob: -12.248983383178711
    10. '_' → logprob: -12.498983383178711

Token 213: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1388065814971924
    2. '+' → logprob: -1.3888065814971924
    3. '-' → logprob: -1.5138065814971924
    4. ' +' → logprob: -1.7638065814971924
    5. '<|end|>' → logprob: -3.3888065814971924
    6. '<|end|>' → logprob: -5.513806343078613
    7. ':' → logprob: -7.763806343078613
    8. ' ' → logprob: -8.888806343078613
    9. '[' → logprob: -9.013806343078613
    10. '...' → logprob: -9.888806343078613

Token 214: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39614325761795044
    2. '1' → logprob: -1.2711431980133057
    3. ' ' → logprob: -3.1461431980133057
    4. '3' → logprob: -5.646143436431885
    5. '4' → logprob: -11.208642959594727
    6. '5' → logprob: -12.333642959594727
    7. '```' → logprob: -13.021142959594727
    8. '   ' → logprob: -13.458642959594727
    9. '6' → logprob: -14.333642959594727
    10. '  ' → logprob: -14.521142959594727

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04310161620378494
    2. '1' → logprob: -3.1681015491485596
    3. '3' → logprob: -9.41810131072998
    4. ' ' → logprob: -12.04310131072998
    5. '```' → logprob: -12.41810131072998
    6. '

' → logprob: -12.98060131072998
    7. '   ' → logprob: -13.73060131072998
    8. '(' → logprob: -13.91810131072998
    9. '
' → logprob: -14.23060131072998
    10. '{' → logprob: -14.79310131072998

Token 216: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' overt' (ID: 64535)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6601259112358093
    2. ' if' → logprob: -1.410125970840454
    3. ' overt' → logprob: -3.160125970840454
    4. 'o' → logprob: -3.410125970840454
    5. ' track' → logprob: -3.410125970840454
    6. 'track' → logprob: -3.535125970840454
    7. '...' → logprob: -3.910125970840454
    8. 'substring' → logprob: -4.035125732421875
    9. 'print' → logprob: -4.535125732421875
    10. '       ' → logprob: -4.535125732421875

Token 219: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.0003519086167216301
    2. 'taking' → logprob: -8.000351905822754
    3. 'a' → logprob: -12.750351905822754
    4. 'Taking' → logprob: -13.000351905822754
    5. 'aken' → logprob: -13.250351905822754
    6. 'ak' → logprob: -13.375351905822754
    7. 'ake' → logprob: -13.875351905822754
    8. 'asking' → logprob: -13.875351905822754
    9. '-taking' → logprob: -14.250351905822754
    10. 'ing' → logprob: -14.250351905822754

Token 220: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.004059048369526863
    2. '_positions' → logprob: -5.754058837890625
    3. '_pos' → logprob: -8.379058837890625
    4. '_start' → logprob: -8.504058837890625
    5. '_' → logprob: -8.754058837890625
    6. '```' → logprob: -10.254058837890625
    7. '_tokens' → logprob: -10.379058837890625
    8. '_token' → logprob: -10.504058837890625
    9. '_possible' → logprob: -10.754058837890625
    10. '_s' → logprob: -10.879058837890625

Token 221: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.2460675686597824
    2. '_start' → logprob: -1.6210675239562988
    3. ' =' → logprob: -4.496067523956299
    4. '=' → logprob: -4.996067523956299
    5. '_stop' → logprob: -7.246067523956299
    6. '_' → logprob: -7.496067523956299
    7. '_finish' → logprob: -7.871067523956299
    8. '_s' → logprob: -8.371068000793457
    9. '_check' → logprob: -9.746068000793457
    10. '_continue' → logprob: -9.996068000793457

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054887134581804276
    2. '=' → logprob: -2.929887056350708
    3. ':' → logprob: -13.179886817932129
    4. ' ' → logprob: -14.554886817932129
    5. ')' → logprob: -14.679886817932129
    6. '<|end|>' → logprob: -14.679886817932129
    7. ' =
' → logprob: -15.054886817932129
    8. 's' → logprob: -15.304886817932129
    9. '   ' → logprob: -15.804886817932129
    10. ',' → logprob: -15.929886817932129

Token 223: ' target' (ID: 3783)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.2823152244091034
    2. ' starting' → logprob: -1.4073152542114258
    3. 'target' → logprob: -7.032315254211426
    4. ' target' → logprob: -8.782315254211426
    5. 'start' → logprob: -10.907315254211426
    6. ' ' → logprob: -10.907315254211426
    7. 'maximum' → logprob: -10.907315254211426
    8. 'o' → logprob: -11.157315254211426
    9. ' maximum' → logprob: -11.157315254211426
    10. 'max' → logprob: -11.282315254211426

Token 224: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -4.4849443838757e-06
    2. 'position' → logprob: -12.500004768371582
    3. '_positions' → logprob: -14.750004768371582
    4. '```' → logprob: -16.625003814697266
    5. '_POSITION' → logprob: -16.750003814697266
    6. '	position' → logprob: -17.000003814697266
    7. '_number' → logprob: -17.000003814697266
    8. 'Position' → logprob: -17.000003814697266
    9. '_' → logprob: -17.125003814697266
    10. '\' → logprob: -17.750003814697266

Token 225: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.07495380192995071
    2. '_C' → logprob: -2.69995379447937
    3. '_B' → logprob: -5.449954032897949
    4. '_A' → logprob: -7.574954032897949
    5. 'D' → logprob: -9.07495403289795
    6. 'C' → logprob: -10.19995403289795
    7. '```' → logprob: -11.07495403289795
    8. '_' → logprob: -11.63745403289795
    9. '_E' → logprob: -13.63745403289795
    10. '	D' → logprob: -13.76245403289795

Token 226: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42880523204803467
    2. '+' → logprob: -1.0538052320480347
    3. ' +
' → logprob: -10.553805351257324
    4. '       ' → logprob: -11.053805351257324
    5. '+
' → logprob: -11.303805351257324
    6. '[' → logprob: -11.678805351257324
    7. '<|end|>' → logprob: -11.678805351257324
    8. '-' → logprob: -12.053805351257324
    9. ' -' → logprob: -12.428805351257324
    10. '   ' → logprob: -12.678805351257324

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10023967176675797
    2. '2' → logprob: -2.3502397537231445
    3. '3' → logprob: -10.725239753723145
    4. ' ' → logprob: -11.850239753723145
    5. '```' → logprob: -12.975239753723145
    6. '+' → logprob: -14.850239753723145
    7. '(' → logprob: -16.100238800048828
    8. '
' → logprob: -16.225238800048828
    9. '１' → logprob: -16.350238800048828
    10. '``' → logprob: -16.475238800048828

Token 228: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326124668121338
    2. '1' → logprob: -0.7576124668121338
    3. '3' → logprob: -11.507612228393555
    4. '```' → logprob: -13.757612228393555
    5. '

' → logprob: -14.945112228393555
    6. '``' → logprob: -15.132612228393555
    7. ' ' → logprob: -15.382612228393555
    8. '
' → logprob: -15.570112228393555
    9. '(' → logprob: -16.257612228393555
    10. '+' → logprob: -16.320112228393555

Token 229: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19711826741695404
    2. '<|end|>' → logprob: -2.6971182823181152
    3. '):' → logprob: -2.8221182823181152
    4. ')' → logprob: -3.9471182823181152
    5. '       ' → logprob: -4.447118282318115
    6. '   ' → logprob: -5.197118282318115
    7. ':
' → logprob: -5.572118282318115
    8. ']' → logprob: -6.072118282318115
    9. '[' → logprob: -6.197118282318115
    10. ' if' → logprob: -6.947118282318115

Token 230: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16897331178188324
    2. '       ' → logprob: -2.668973207473755
    3. '<|end|>' → logprob: -3.168973207473755
    4. ':
' → logprob: -4.043973445892334
    5. '   ' → logprob: -4.168973445892334
    6. '):' → logprob: -6.043973445892334
    7. '[' → logprob: -6.543973445892334
    8. '
' → logprob: -6.793973445892334
    9. ')' → logprob: -6.918973445892334
    10. ' if' → logprob: -7.043973445892334

Token 231: ' overt' (ID: 64535)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.6074499487876892
    2. '       ' → logprob: -1.732450008392334
    3. ' substring' → logprob: -2.357450008392334
    4. ' if' → logprob: -2.482450008392334
    5. 'if' → logprob: -2.732450008392334
    6. 'sub' → logprob: -4.982450008392334
    7. '   ' → logprob: -5.232450008392334
    8. '
' → logprob: -5.482450008392334
    9. '        
' → logprob: -6.232450008392334
    10. 'space' → logprob: -6.607450008392334

Token 232: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.00016563729150220752
    2. 'taking' → logprob: -8.750165939331055
    3. 'aken' → logprob: -13.500165939331055
    4. '-taking' → logprob: -13.625165939331055
    5. 'ak' → logprob: -13.750165939331055
    6. 'king' → logprob: -14.000165939331055
    7. ' aking' → logprob: -14.875165939331055
    8. 'ing' → logprob: -15.000165939331055
    9. 'ake' → logprob: -15.125165939331055
    10. 'Taking' → logprob: -15.250165939331055

Token 233: '_pattern' (ID: 50002)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00818580761551857
    2. '_positions' → logprob: -5.508185863494873
    3. '_' → logprob: -5.633185863494873
    4. '_path' → logprob: -8.258185386657715
    5. '_pos' → logprob: -9.758185386657715
    6. 'position' → logprob: -10.383185386657715
    7. '```' → logprob: -10.633185386657715
    8. '_possible' → logprob: -11.133185386657715
    9. '_cells' → logprob: -11.258185386657715
    10. '_code' → logprob: -11.258185386657715

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994698941707611
    2. '=' → logprob: -2.6949470043182373
    3. 's' → logprob: -12.069947242736816
    4. ' ' → logprob: -13.694947242736816
    5. '<|end|>' → logprob: -14.319947242736816
    6. '```' → logprob: -14.444947242736816
    7. ')' → logprob: -14.569947242736816
    8. '`' → logprob: -14.819947242736816
    9. 'token' → logprob: -15.444947242736816
    10. '='' → logprob: -15.444947242736816

Token 235: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016677843406796455
    2. ' r' → logprob: -4.1416778564453125
    3. ''' → logprob: -8.141677856445312
    4. ''r' → logprob: -9.016677856445312
    5. ''\' → logprob: -9.391677856445312
    6. '\.' → logprob: -9.766677856445312
    7. '...' → logprob: -10.141677856445312
    8. '[r' → logprob: -11.016677856445312
    9. '(r' → logprob: -11.266677856445312
    10. '\' → logprob: -12.016677856445312

Token 236: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.12400821596384048
    2. ''' → logprob: -2.2490081787109375
    3. '\.' → logprob: -4.7490081787109375
    4. '\' → logprob: -6.8740081787109375
    5. '...' → logprob: -7.2490081787109375
    6. '"\' → logprob: -7.8740081787109375
    7. '"' → logprob: -9.374008178710938
    8. 'r' → logprob: -9.624008178710938
    9. '...\' → logprob: -10.124008178710938
    10. '[' → logprob: -10.499008178710938

Token 237: '.{' (ID: 43968)
  Prédit: '.\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.\' → logprob: -0.30402013659477234
    2. '...' → logprob: -2.1790201663970947
    3. '...\' → logprob: -2.1790201663970947
    4. '.{' → logprob: -3.4290201663970947
    5. '.' → logprob: -6.054019927978516
    6. '\.' → logprob: -6.929019927978516
    7. '.+' → logprob: -10.179019927978516
    8. '....' → logprob: -10.804019927978516
    9. '.*' → logprob: -10.929019927978516
    10. '...
' → logprob: -12.054019927978516

Token 238: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010404328349977732
    2. '{' → logprob: -6.876040458679199
    3. '...' → logprob: -12.6260404586792
    4. '}' → logprob: -13.0010404586792
    5. '}{' → logprob: -13.6260404586792
    6. '```' → logprob: -15.2510404586792
    7. ' ' → logprob: -16.126039505004883
    8. ',' → logprob: -16.376039505004883
    9. ')' → logprob: -17.001039505004883
    10. '³' → logprob: -17.126039505004883

Token 239: ',' (ID: 11)
  Prédit: '}''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.003835471346974373
    2. '}' → logprob: -5.878835678100586
    3. ''' → logprob: -7.128835678100586
    4. '}'
' → logprob: -9.003835678100586
    5. ''}' → logprob: -10.628835678100586
    6. ',' → logprob: -10.878835678100586
    7. '*' → logprob: -11.378835678100586
    8. '+' → logprob: -11.753835678100586
    9. ')'' → logprob: -11.878835678100586
    10. '}')' → logprob: -12.003835678100586

Token 240: '}'
' (ID: 96587)
  Prédit: '}''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.0069892224855721
    2. '}' → logprob: -5.006989002227783
    3. '}'
' → logprob: -9.506989479064941
    4. ''' → logprob: -9.631989479064941
    5. ''}' → logprob: -10.631989479064941
    6. '}')' → logprob: -11.506989479064941
    7. ')'' → logprob: -11.631989479064941
    8. ' }' → logprob: -11.631989479064941
    9. ',' → logprob: -11.756989479064941
    10. '}\' → logprob: -11.756989479064941

Token 241: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' (adapté à ' substring') → logprob: -0.4643174707889557
    2. 'if' → logprob: -1.4643174409866333
    3. ' if' → logprob: -2.464317560195923
    4. ' substring' → logprob: -3.089317560195923
    5. 'o' → logprob: -5.589317321777344
    6. '   ' → logprob: -6.089317321777344
    7. 'import' → logprob: -7.464317321777344
    8. 'match' → logprob: -7.589317321777344
    9. ' o' → logprob: -7.964317321777344
    10. 'sub' → logprob: -8.214317321777344

Token 243: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.04501567408442497
    2. '=' → logprob: -3.170015573501587
    3. 'to' → logprob: -6.795015811920166
    4. ' =' → logprob: -7.295015811920166
    5. 'To' → logprob: -8.670015335083008
    6. ' to' → logprob: -11.295015335083008
    7. '_=' → logprob: -11.295015335083008
    8. '_' → logprob: -11.795015335083008
    9. '<|end|>' → logprob: -12.795015335083008
    10. '=
' → logprob: -13.170015335083008

Token 244: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0011620076838880777
    2. '_check' → logprob: -6.876162052154541
    3. ' check' → logprob: -9.001161575317383
    4. 'find' → logprob: -12.501161575317383
    5. 'search' → logprob: -14.376161575317383
    6. '```' → logprob: -14.501161575317383
    7. 'Check' → logprob: -15.876161575317383
    8. '	check' → logprob: -15.876161575317383
    9. '-check' → logprob: -16.001161575317383
    10. 'continue' → logprob: -16.251161575317383

Token 245: '_o' (ID: 28960)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815140187740326
    2. ' =' → logprob: -1.406514048576355
    3. '<|end|>' → logprob: -8.781514167785645
    4. '=sub' → logprob: -9.906514167785645
    5. '_to' → logprob: -10.406514167785645
    6. '_' → logprob: -11.031514167785645
    7. '[start' → logprob: -11.406514167785645
    8. '[' → logprob: -11.531514167785645
    9. '=o' → logprob: -11.781514167785645
    10. '=subprocess' → logprob: -11.781514167785645

Token 246: 'vert' (ID: 2339)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5344530344009399
    2. 'heck' → logprob: -0.9094530344009399
    3. '_check' → logprob: -4.90945291519165
    4. 'n' → logprob: -6.65945291519165
    5. 'ck' → logprob: -6.78445291519165
    6. 'track' → logprob: -7.28445291519165
    7. 'h' → logprob: -7.65945291519165
    8. 'he' → logprob: -9.534453392028809
    9. 'b' → logprob: -10.034453392028809
    10. 'f' → logprob: -10.534453392028809

Token 247: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.47630539536476135
    2. 'ake' → logprob: -0.976305365562439
    3. 'ak' → logprob: -6.8513054847717285
    4. 'akings' → logprob: -8.35130500793457
    5. 'taking' → logprob: -8.60130500793457
    6. 'aken' → logprob: -8.85130500793457
    7. 'take' → logprob: -9.47630500793457
    8. '```' → logprob: -9.47630500793457
    9. 'akes' → logprob: -9.72630500793457
    10. 'a' → logprob: -10.28880500793457

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08896073698997498
    2. ' =' → logprob: -2.463960647583008
    3. '<|end|>' → logprob: -11.713960647583008
    4. ')' → logprob: -12.213960647583008
    5. ']' → logprob: -13.088960647583008
    6. '[' → logprob: -13.213960647583008
    7. 's' → logprob: -13.963960647583008
    8. ' ' → logprob: -14.213960647583008
    9. '[start' → logprob: -14.338960647583008
    10. '.' → logprob: -15.463960647583008

Token 249: ' track' (ID: 5290)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.016038239002227783
    2. ' track' → logprob: -4.141038417816162
    3. '(track' → logprob: -13.391037940979004
    4. '   ' → logprob: -13.891037940979004
    5. ' ' → logprob: -14.141037940979004
    6. 'tracking' → logprob: -15.891037940979004
    7. '  ' → logprob: -16.01603889465332
    8. '.track' → logprob: -16.76603889465332
    9. 'train' → logprob: -17.14103889465332
    10. '[' → logprob: -17.39103889465332

Token 250: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.630610641877865e-06
    2. 'state' → logprob: -12.000006675720215
    3. '_position' → logprob: -16.2500057220459
    4. 'State' → logprob: -16.2500057220459
    5. '_' → logprob: -16.8750057220459
    6. '```' → logprob: -16.8750057220459
    7. '_STATE' → logprob: -17.5000057220459
    8. '_string' → logprob: -18.2500057220459
    9. '_status' → logprob: -18.2500057220459
    10. '_to' → logprob: -18.3750057220459

Token 251: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0006351164192892611
    2. 'string' → logprob: -7.375635147094727
    3. 'String' → logprob: -11.875635147094727
    4. '_state' → logprob: -14.125635147094727
    5. 'tring' → logprob: -15.125635147094727
    6. 'A' → logprob: -15.750635147094727
    7. '```' → logprob: -15.875635147094727
    8. '_STRING' → logprob: -16.375635147094727
    9. ' string' → logprob: -17.125635147094727
    10. '-string' → logprob: -17.500635147094727

Token 252: '[o' (ID: 112563)
  Prédit: '[o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[o' → logprob: -0.0005583931924775243
    2. '[start' → logprob: -7.750558376312256
    3. '[' → logprob: -9.125558853149414
    4. '[
' → logprob: -11.500558853149414
    5. 'o' → logprob: -12.625558853149414
    6. 'starting' → logprob: -14.000558853149414
    7. 'start' → logprob: -14.000558853149414
    8. '=o' → logprob: -14.375558853149414
    9. '\[' → logprob: -14.375558853149414
    10. '```' → logprob: -15.125558853149414

Token 253: 'vert' (ID: 2339)
  Prédit: 'vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.0298769548535347
    2. 'ver' → logprob: -4.654877185821533
    3. 'ert' → logprob: -4.779877185821533
    4. 'starting' → logprob: -5.029877185821533
    5. 'verting' → logprob: -6.029877185821533
    6. 'o' → logprob: -7.029877185821533
    7. 'start' → logprob: -8.154876708984375
    8. 'verd' → logprob: -8.529876708984375
    9. 'vertr' → logprob: -8.529876708984375
    10. 'verte' → logprob: -8.654876708984375

Token 254: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.21288704872131348
    2. 'ert' → logprob: -1.8378870487213135
    3. 'taking' → logprob: -3.5878870487213135
    4. 'tak' → logprob: -6.712886810302734
    5. 'er' → logprob: -6.962886810302734
    6. 'r' → logprob: -6.962886810302734
    7. 'ver' → logprob: -8.462886810302734
    8. 'ating' → logprob: -8.462886810302734
    9. 't' → logprob: -8.712886810302734
    10. 'ak' → logprob: -8.962886810302734

Token 255: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.009500827640295029
    2. 'position' → logprob: -5.634500980377197
    3. 'B' → logprob: -6.134500980377197
    4. 'o' → logprob: -6.634500980377197
    5. 'A' → logprob: -7.259500980377197
    6. '_o' → logprob: -7.634500980377197
    7. 'Position' → logprob: -8.134500503540039
    8. 'starting' → logprob: -8.134500503540039
    9. '_B' → logprob: -8.509500503540039
    10. '_start' → logprob: -8.634500503540039

Token 256: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.31642231345176697
    2. 'B' → logprob: -2.5664222240448
    3. '_B' → logprob: -2.5664222240448
    4. '_end' → logprob: -3.0664222240448
    5. 'A' → logprob: -3.4414222240448
    6. 'start' → logprob: -3.5664222240448
    7. '_A' → logprob: -5.441422462463379
    8. 'end' → logprob: -6.566422462463379
    9. '```' → logprob: -6.941422462463379
    10. '_' → logprob: -7.066422462463379

Token 257: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7107340097427368
    2. ':o' → logprob: -0.7107340097427368
    3. ' :' → logprob: -4.085733890533447
    4. '+' → logprob: -8.460734367370605
    5. 'o' → logprob: -9.210734367370605
    6. ':

' → logprob: -9.835734367370605
    7. ':]' → logprob: -10.585734367370605
    8. ' o' → logprob: -10.585734367370605
    9. ';o' → logprob: -10.585734367370605
    10. '	o' → logprob: -10.585734367370605

Token 258: ' overt' (ID: 64535)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0017202809685841203
    2. ' overt' → logprob: -6.376720428466797
    3. '(o' → logprob: -11.876720428466797
    4. '	o' → logprob: -12.751720428466797
    5. '-o' → logprob: -13.376720428466797
    6. ' o' → logprob: -13.501720428466797
    7. '
' → logprob: -13.751720428466797
    8. '/o' → logprob: -14.626720428466797
    9. '[o' → logprob: -14.626720428466797
    10. '=o' → logprob: -14.626720428466797

Token 259: 'aking' (ID: 5016)
  Prédit: 'taking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taking' → logprob: -0.31429755687713623
    2. 'aking' → logprob: -1.3142975568771362
    3. 'tak' → logprob: -7.814297676086426
    4. '-taking' → logprob: -8.314297676086426
    5. 't' → logprob: -8.564297676086426
    6. 'Taking' → logprob: -9.939297676086426
    7. 'o' → logprob: -10.189297676086426
    8. 'ating' → logprob: -10.564297676086426
    9. 'asking' → logprob: -10.689297676086426
    10. 'taken' → logprob: -11.189297676086426

Token 260: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.5868760943412781
    2. 'position' → logprob: -0.8368760943412781
    3. 'o' → logprob: -4.586875915527344
    4. '_end' → logprob: -8.086875915527344
    5. '_o' → logprob: -8.711875915527344
    6. 'end' → logprob: -10.086875915527344
    7. '```' → logprob: -10.586875915527344
    8. 'D' → logprob: -10.836875915527344
    9. '_' → logprob: -11.336875915527344
    10. '
' → logprob: -11.711875915527344

Token 261: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.03805273771286011
    2. 'end' → logprob: -3.288052797317505
    3. 'End' → logprob: -12.163052558898926
    4. '+' → logprob: -13.913052558898926
    5. ']' → logprob: -14.288052558898926
    6. '_END' → logprob: -14.288052558898926
    7. '@end' → logprob: -14.413052558898926
    8. '_start' → logprob: -14.538052558898926
    9. 'END' → logprob: -14.538052558898926
    10. 'D' → logprob: -15.038052558898926

Token 262: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010711929644457996
    2. ']
' → logprob: -9.750106811523438
    3. ' ]' → logprob: -10.875106811523438
    4. ']

' → logprob: -11.125106811523438
    5. ')' → logprob: -11.875106811523438
    6. '<|end|>' → logprob: -12.875106811523438
    7. '   ' → logprob: -13.500106811523438
    8. '])' → logprob: -14.250106811523438
    9. '']' → logprob: -14.375106811523438
    10. ']==' → logprob: -14.625106811523438

Token 263: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1799798309803009
    2. '   ' → logprob: -2.6799798011779785
    3. '):' → logprob: -3.0549798011779785
    4. '       ' → logprob: -3.9299798011779785
    5. '[' → logprob: -4.6799798011779785
    6. ')' → logprob: -5.0549798011779785
    7. ':
' → logprob: -5.4299798011779785
    8. '<|end|>' → logprob: -5.4299798011779785
    9. '[:' → logprob: -7.1799798011779785
    10. ' if' → logprob: -7.3049798011779785

Token 264: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.057512011379003525
    2. ' if' → logprob: -3.057512044906616
    3. '   ' → logprob: -5.057511806488037
    4. '       ' → logprob: -6.057511806488037
    5. ')' → logprob: -9.932512283325195
    6. ':' → logprob: -10.057512283325195
    7. '           ' → logprob: -11.057512283325195
    8. '	if' → logprob: -11.182512283325195
    9. ' ' → logprob: -11.682512283325195
    10. '
' → logprob: -11.932512283325195

Token 265: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.42976588010787964
    2. 're' → logprob: -1.0547659397125244
    3. ' not' → logprob: -7.054765701293945
    4. 'not' → logprob: -8.679765701293945
    5. '   ' → logprob: -10.804765701293945
    6. ' ' → logprob: -12.304765701293945
    7. '(re' → logprob: -13.429765701293945
    8. '  ' → logprob: -13.929765701293945
    9. '	re' → logprob: -13.929765701293945
    10. 'len' → logprob: -14.179765701293945

Token 266: '.search' (ID: 16718)
  Prédit: '.search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.search' → logprob: -4.68022444692906e-05
    2. 'search' → logprob: -10.000046730041504
    3. '.' → logprob: -14.375046730041504
    4. '.match' → logprob: -14.500046730041504
    5. '\.' → logprob: -16.87504768371582
    6. '_search' → logprob: -17.00004768371582
    7. '.findall' → logprob: -17.00004768371582
    8. '.full' → logprob: -17.25004768371582
    9. '```' → logprob: -18.25004768371582
    10. ' search' → logprob: -18.75004768371582

Token 267: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -6.575563020305708e-05
    2. '(' → logprob: -10.000065803527832
    3. '\(' → logprob: -11.875065803527832
    4. '(over' → logprob: -12.375065803527832
    5. ' (' → logprob: -12.500065803527832
    6. '(r' → logprob: -12.750065803527832
    7. 'o' → logprob: -14.750065803527832
    8. '/o' → logprob: -15.000065803527832
    9. '	o' → logprob: -15.125065803527832
    10. '(
' → logprob: -15.500065803527832

Token 268: 'vert' (ID: 2339)
  Prédit: 'vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.008120184764266014
    2. 'ver' → logprob: -5.008120059967041
    3. 'verted' → logprob: -7.508120059967041
    4. 'o' → logprob: -7.883120059967041
    5. ''o' → logprob: -9.0081205368042
    6. 'verd' → logprob: -10.0081205368042
    7. 'vertr' → logprob: -10.1331205368042
    8. ' overt' → logprob: -10.2581205368042
    9. 'at' → logprob: -10.5081205368042
    10. 'vet' → logprob: -10.6331205368042

Token 269: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.006755155511200428
    2. 'taking' → logprob: -5.006755352020264
    3. 'Taking' → logprob: -11.131754875183105
    4. 'aken' → logprob: -11.881754875183105
    5. 'tak' → logprob: -12.631754875183105
    6. 'ating' → logprob: -12.631754875183105
    7. '-taking' → logprob: -12.631754875183105
    8. 'akings' → logprob: -13.131754875183105
    9. 'ak' → logprob: -13.631754875183105
    10. 'king' → logprob: -14.131754875183105

Token 270: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.008344000205397606
    2. '_position' → logprob: -4.8833441734313965
    3. 'o' → logprob: -7.6333441734313965
    4. 'pattern' → logprob: -8.883343696594238
    5. '_o' → logprob: -9.258343696594238
    6. '```' → logprob: -12.633343696594238
    7. '_pat' → logprob: -13.008343696594238
    8. 'Pattern' → logprob: -13.258343696594238
    9. '(o' → logprob: -13.508343696594238
    10. '_p' → logprob: -13.633343696594238

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15417736768722534
    2. '(sub' → logprob: -2.40417742729187
    3. '):' → logprob: -3.40417742729187
    4. ')' → logprob: -4.154177188873291
    5. '(substr' → logprob: -6.654177188873291
    6. 'substring' → logprob: -7.529177188873291
    7. '):
' → logprob: -7.654177188873291
    8. '<|end|>' → logprob: -8.02917766571045
    9. '(' → logprob: -8.27917766571045
    10. ')==' → logprob: -9.27917766571045

Token 272: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.34846940636634827
    2. 'substring' → logprob: -1.2234693765640259
    3. 'sub' → logprob: -11.598469734191895
    4. 'Substring' → logprob: -12.723469734191895
    5. ')' → logprob: -12.848469734191895
    6. ' ' → logprob: -13.348469734191895
    7. '               ' → logprob: -13.348469734191895
    8. 'substr' → logprob: -13.973469734191895
    9. '   ' → logprob: -14.223469734191895
    10. '(sub' → logprob: -14.348469734191895

Token 273: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.004696090007201e-05
    2. '_string' → logprob: -10.750069618225098
    3. ')' → logprob: -11.000069618225098
    4. '```' → logprob: -11.500069618225098
    5. '_state' → logprob: -12.250069618225098
    6. '._' → logprob: -12.625069618225098
    7. '):
' → logprob: -13.125069618225098
    8. 'To' → logprob: -13.125069618225098
    9. 'to' → logprob: -13.750069618225098
    10. '_code' → logprob: -13.875069618225098

Token 274: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.43663355708122253
    2. '_check' → logprob: -1.186633586883545
    3. 'substring' → logprob: -3.061633586883545
    4. 'Check' → logprob: -7.311633586883545
    5. ')' → logprob: -7.936633586883545
    6. 'string' → logprob: -8.186633110046387
    7. '```' → logprob: -9.311633110046387
    8. 'track' → logprob: -9.561633110046387
    9. ' substring' → logprob: -9.561633110046387
    10. 'sub' → logprob: -10.811633110046387

Token 275: '_o' (ID: 28960)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.12776605784893036
    2. '_o' → logprob: -2.7527661323547363
    3. 'o' → logprob: -3.3777661323547363
    4. '(sub' → logprob: -4.377766132354736
    5. '_to' → logprob: -4.877766132354736
    6. ')' → logprob: -7.002766132354736
    7. ' substring' → logprob: -8.252765655517578
    8. 'sub' → logprob: -8.502765655517578
    9. '```' → logprob: -9.127765655517578
    10. '_sub' → logprob: -9.502765655517578

Token 276: 'vert' (ID: 2339)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.03982488065958023
    2. 'heck' → logprob: -3.539824962615967
    3. '_check' → logprob: -5.789824962615967
    4. 'vert' → logprob: -6.664824962615967
    5. 'b' → logprob: -7.039824962615967
    6. 'h' → logprob: -7.414824962615967
    7. 'ch' → logprob: -7.539824962615967
    8. 'substring' → logprob: -7.789824962615967
    9. '.check' → logprob: -7.914824962615967
    10. 'block' → logprob: -7.914824962615967

Token 277: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.004613945726305246
    2. 'taking' → logprob: -5.504613876342773
    3. 'akings' → logprob: -8.504613876342773
    4. 'king' → logprob: -9.504613876342773
    5. 'oking' → logprob: -10.004613876342773
    6. 'ak' → logprob: -10.129613876342773
    7. 'Taking' → logprob: -10.254613876342773
    8. 'acking' → logprob: -11.129613876342773
    9. 'alking' → logprob: -11.129613876342773
    10. '```' → logprob: -11.754613876342773

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018318621441721916
    2. '):
' → logprob: -4.6433186531066895
    3. ')' → logprob: -4.7683186531066895
    4. ')==' → logprob: -11.143318176269531
    5. ' ):' → logprob: -12.393318176269531
    6. ':' → logprob: -12.893318176269531
    7. '):

' → logprob: -12.893318176269531
    8. '   ' → logprob: -13.143318176269531
    9. '):
' → logprob: -13.518318176269531
    10. ''):' → logprob: -13.893318176269531

Token 279: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4907150864601135
    2. '           ' → logprob: -1.8657150268554688
    3. ':
' → logprob: -2.3657150268554688
    4. '       ' → logprob: -2.6157150268554688
    5. '<|end|>' → logprob: -2.9907150268554688
    6. '[' → logprob: -5.740715026855469
    7. ')' → logprob: -6.365715026855469
    8. '):
' → logprob: -6.490715026855469
    9. '<|end|>' → logprob: -6.490715026855469
    10. '   ' → logprob: -6.740715026855469

Token 280: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8591565489768982
    2. '           ' → logprob: -1.234156608581543
    3. ' print' → logprob: -1.859156608581543
    4. '       ' → logprob: -2.609156608581543
    5. '               ' → logprob: -3.234156608581543
    6. '   ' → logprob: -4.109156608581543
    7. '	print' → logprob: -9.609156608581543
    8. ' ' → logprob: -9.859156608581543
    9. '	       ' → logprob: -10.609156608581543
    10. '                   ' → logprob: -11.609156608581543

Token 281: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0021080286242067814
    2. '(' → logprob: -6.252108097076416
    3. '("' → logprob: -8.627107620239258
    4. '(
' → logprob: -16.377107620239258
    5. '()' → logprob: -17.252107620239258
    6. '(True' → logprob: -17.252107620239258
    7. '(('' → logprob: -18.002107620239258
    8. ' ('' → logprob: -18.127107620239258
    9. '(\'' → logprob: -18.252107620239258
    10. '(`' → logprob: -18.377107620239258

Token 282: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -8.709308167453855e-05
    2. ''' → logprob: -9.375086784362793
    3. '('' → logprob: -14.125086784362793
    4. 'No' → logprob: -14.500086784362793
    5. 'YES' → logprob: -14.500086784362793
    6. ' Yes' → logprob: -16.25008773803711
    7. 'Ye' → logprob: -16.87508773803711
    8. 'Yeah' → logprob: -16.87508773803711
    9. 'Sure' → logprob: -17.00008773803711
    10. 'Possible' → logprob: -17.00008773803711

Token 283: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32165631651878357
    2. '')' → logprob: -1.321656346321106
    3. '')
' → logprob: -5.196656227111816
    4. ')
' → logprob: -5.946656227111816
    5. '       ' → logprob: -9.321656227111816
    6. '")' → logprob: -9.696656227111816
    7. 'else' → logprob: -11.321656227111816
    8. '   ' → logprob: -11.321656227111816
    9. '```' → logprob: -11.321656227111816
    10. ' )' → logprob: -12.196656227111816

Token 284: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09195104986429214
    2. '       ' → logprob: -2.8419511318206787
    3. ' else' → logprob: -3.5919511318206787
    4. '	else' → logprob: -7.3419508934021
    5. '   ' → logprob: -8.216951370239258
    6. '```' → logprob: -8.341951370239258
    7. ')' → logprob: -8.466951370239258
    8. '           ' → logprob: -8.466951370239258
    9. 'elif' → logprob: -8.466951370239258
    10. ':
' → logprob: -9.716951370239258

Token 285: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3152150511741638
    2. 'else' (adapté à ' else') → logprob: -1.3152151107788086
    3. ' else' → logprob: -6.690215110778809
    4. '   ' → logprob: -7.315215110778809
    5. '	else' → logprob: -10.690215110778809
    6. '	' → logprob: -11.940215110778809
    7. '```' → logprob: -12.315215110778809
    8. '           ' → logprob: -12.440215110778809
    9. 'elif' → logprob: -13.065215110778809
    10. ')' → logprob: -13.315215110778809

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11986057460308075
    2. ':
' → logprob: -2.4948606491088867
    3. '           ' → logprob: -3.4948606491088867
    4. '       ' → logprob: -10.619860649108887
    5. '          ' → logprob: -11.119860649108887
    6. 'print' → logprob: -11.119860649108887
    7. '   ' → logprob: -11.119860649108887
    8. '               ' → logprob: -11.619860649108887
    9. '         ' → logprob: -12.619860649108887
    10. '):
' → logprob: -13.119860649108887

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04895465075969696
    2. 'print' → logprob: -3.048954725265503
    3. ' print' → logprob: -8.298954963684082
    4. '   ' → logprob: -9.923954963684082
    5. '```' → logprob: -10.048954963684082
    6. '               ' → logprob: -10.923954963684082
    7. '       ' → logprob: -11.923954963684082
    8. ' ' → logprob: -15.173954963684082
    9. '	       ' → logprob: -15.298954963684082
    10. '          ' → logprob: -15.298954963684082

Token 288: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008783506345935166
    2. ' print' → logprob: -7.25087833404541
    3. '           ' → logprob: -9.12587833404541
    4. '   ' → logprob: -9.75087833404541
    5. '       ' → logprob: -14.25087833404541
    6. '	print' → logprob: -15.00087833404541
    7. ' ' → logprob: -15.37587833404541
    8. '```' → logprob: -16.625879287719727
    9. '  ' → logprob: -17.125879287719727
    10. '               ' → logprob: -17.625879287719727

Token 289: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023247109726071358
    2. '(' → logprob: -3.773247003555298
    3. '("' → logprob: -13.773246765136719
    4. '(\'' → logprob: -16.39824676513672
    5. '(False' → logprob: -16.52324676513672
    6. '(
' → logprob: -16.52324676513672
    7. '()' → logprob: -16.64824676513672
    8. '(None' → logprob: -17.02324676513672
    9. '(('' → logprob: -17.27324676513672
    10. '(

' → logprob: -17.64824676513672

Token 290: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.547789674485102e-05
    2. ''' → logprob: -10.250035285949707
    3. ' No' → logprob: -17.500036239624023
    4. 'Yes' → logprob: -18.125036239624023
    5. '"No' → logprob: -18.625036239624023
    6. '```' → logprob: -20.000036239624023
    7. '_No' → logprob: -20.625036239624023
    8. '
' → logprob: -20.875036239624023
    9. 'NO' → logprob: -21.000036239624023
    10. '')' → logprob: -21.125036239624023

Token 291: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16060784459114075
    2. '')' → logprob: -1.9106078147888184
    3. ')
' → logprob: -8.535608291625977
    4. '')
' → logprob: -9.285608291625977
    5. '")' → logprob: -10.660608291625977
    6. '       ' → logprob: -10.785608291625977
    7. '<|end|>' → logprob: -11.160608291625977
    8. '```' → logprob: -11.285608291625977
    9. '   ' → logprob: -11.410608291625977
    10. '`)' → logprob: -12.285608291625977

Token 292: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.32875287532806396
    2. '   ' → logprob: -1.953752875328064
    3. '<|end|>' → logprob: -2.7037529945373535
    4. '```' → logprob: -2.8287529945373535
    5. ' else' → logprob: -5.5787529945373535
    6. 'elif' → logprob: -5.8287529945373535
    7. ')' → logprob: -5.9537529945373535
    8. ':
' → logprob: -7.4537529945373535
    9. '	else' → logprob: -8.203752517700195
    10. '<|end|>' → logprob: -8.203752517700195

Token 293: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0721001923084259
    2. '   ' → logprob: -2.8221001625061035
    3. ' else' → logprob: -4.8221001625061035
    4. '       ' → logprob: -6.9471001625061035
    5. '	else' → logprob: -7.4471001625061035
    6. ':' → logprob: -8.572100639343262
    7. 'elif' → logprob: -9.072100639343262
    8. '<|end|>' → logprob: -9.322100639343262
    9. ')' → logprob: -10.572100639343262
    10. '```' → logprob: -10.572100639343262

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11057012528181076
    2. ':
' → logprob: -2.485570192337036
    3. '       ' → logprob: -3.860570192337036
    4. '   ' → logprob: -8.110569953918457
    5. 'print' → logprob: -10.610569953918457
    6. '{' → logprob: -12.610569953918457
    7. '<|end|>' → logprob: -13.235569953918457
    8. '     ' → logprob: -13.485569953918457
    9. ':

' → logprob: -13.610569953918457
    10. '           ' → logprob: -13.610569953918457

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005469490308314562
    2. 'print' → logprob: -5.25546932220459
    3. '   ' → logprob: -8.63046932220459
    4. '           ' → logprob: -10.13046932220459
    5. ' print' → logprob: -11.00546932220459
    6. '```' → logprob: -15.50546932220459
    7. '	print' → logprob: -16.005470275878906
    8. '     ' → logprob: -16.880470275878906
    9. '
' → logprob: -16.880470275878906
    10. '               ' → logprob: -17.130470275878906

Token 296: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006793115753680468
    2. '   ' → logprob: -8.000679016113281
    3. ' print' → logprob: -8.250679016113281
    4. '       ' → logprob: -9.750679016113281
    5. 'if' → logprob: -10.750679016113281
    6. '           ' → logprob: -13.250679016113281
    7. ' ' → logprob: -14.750679016113281
    8. ' if' → logprob: -15.125679016113281
    9. '	print' → logprob: -15.125679016113281
    10. '  ' → logprob: -16.00067901611328

Token 297: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011724866926670074
    2. '(' → logprob: -6.7511725425720215
    3. '("' → logprob: -13.001172065734863
    4. '('(' → logprob: -18.00117301940918
    5. '(('' → logprob: -18.25117301940918
    6. '()' → logprob: -18.37617301940918
    7. '(
' → logprob: -19.25117301940918
    8. '(True' → logprob: -19.37617301940918
    9. ' ('' → logprob: -19.50117301940918
    10. '("("' → logprob: -20.00117301940918

Token 298: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.006847861688584089
    2. ''' → logprob: -5.006847858428955
    3. '('' → logprob: -9.006848335266113
    4. 'No' → logprob: -13.006848335266113
    5. '"' → logprob: -13.131848335266113
    6. '(' → logprob: -13.506848335266113
    7. ' Yes' → logprob: -13.631848335266113
    8. ')' → logprob: -13.756848335266113
    9. 'YES' → logprob: -14.381848335266113
    10. '   ' → logprob: -14.631848335266113

Token 299: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028418414294719696
    2. '')' → logprob: -5.877841949462891
    3. '")' → logprob: -10.87784194946289
    4. ')
' → logprob: -11.62784194946289
    5. ' )' → logprob: -12.62784194946289
    6. '`)' → logprob: -12.87784194946289
    7. '```' → logprob: -13.25284194946289
    8. '<|end|>' → logprob: -14.50284194946289
    9. '}' → logprob: -15.37784194946289
    10. '())' → logprob: -15.62784194946289


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 297
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 228
Précision stricte (1ère position): 38.05%
Précision adaptée (1ère position): 41.08%
Précision (top 10): 76.77%
================================================================================
