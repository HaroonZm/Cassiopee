================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la variable R comme un alias de range pour simplifier l'écriture ultérieure.
R = range

# Lecture de deux entiers depuis l'entrée standard, séparés par un espace.
# map applique int à chaque élément obtenu via input().split(), ce qui récupère N et K.
N, K = map(int, input().split())

# Création de la séquence Q, qui sera utilisée pour itérer de 0 à N, inclus.
# range(N+1) génère les entiers de 0 à N inclus.
Q = R(N+1)

# Création d'une liste "d" contenant N+1 sous-listes.
# Chaque sous-liste a une longueur de 2 à la puissance de son indice 'i' (c’est-à-dire 2**i).
# Chaque sous-liste de "d" est remplie de zéros au départ.
d = [[0]*2**i for i in Q]

# Création d'une autre liste "f", de mêmes dimensions et initialement remplie de zéros.
f = [[0]*2**i for i in Q]

# Remplissage de la table "d" à partir de l'entrée de l'utilisateur.
for i in Q:
    # On lit une chaîne de caractères pour la ligne i.
    # 'enumerate(input())' parcourt chaque caractère de la chaîne avec son index 'j'.
    for j, c in enumerate(input()):
        # Conversion du caractère c en entier (vaudra 0 ou 1 car on suppose l'entrée binaire).
        # Stockage dans d[i][j].
        d[i][j] = int(c)

# Remplissage de la table "f", qui pré-calcule une information sur les motifs binaires des indices.
# Pour chaque i de 1 à N, on examine chaque nombre binaire possible sur i bits.
for i in R(1, N+1):
    # Pour chaque entier j dont la représentation binaire tient sur i bits (de 0 à 2^i - 1), on va calculer f[i][j].
    for j in R(1 << i):
        # Détermination de la valeur du bit à l’indice (i-1) dans j.
        # >> décale de (i-1) bits vers la droite, &1 extrait le bit de poids faible.
        t = (j >> (i-1)) & 1
        # Initialisation de r à zéro. r va compter le nombre de bits consécutifs égaux à t, à partir du haut.
        r = 0
        # On incrémente r tant que les bits extraits successivement correspondent à t.
        while r < i and ((j >> (i-1-r)) & 1) == t:
            r += 1
        # On enregistre la valeur trouvée dans f[i][j].
        f[i][j] = r

# Traitement principal sur la table "d" pour combiner les données et y accumuler des compteurs.
for i in Q:
    # On considère chaque sous-table de taille correspondante à i.
    for k in R(i+1, N+1):
        # Calcul de la distance z entre les deux niveaux de tables i et k.
        z = k - i
        # m est un masque binaire de z bits à 1 (exemple : si z=3, m=0b111=7).
        m = (1 << z) - 1
        # Pour tout indice binaire j sur k bits.
        for j in R(1 << k):
            # On ajoute la valeur d[k][j] à l'entrée correspondante de d[i] après décale à droite de z bits.
            d[i][j >> z] += d[k][j]
            # r est le nombre de bits consécutifs au début (sur z bits) valant le même bit (0 ou 1).
            r = f[z][j & m]
            # Si r n’atteint pas z (c’est-à-dire qu’il s’arrête avant la fin),
            # on redistribue d[k][j] dans une table d’au niveau k-r, à l’indice construit ainsi :
            # - On prend les bits de haut poids de j (au-delà des z bits) et on les décale
            # - On ajoute les bits de faible poids de j (jusqu’au bit z-r-1)
            if r != z:
                d[k-r][(j >> z) << (z-r) | (j & ((1 << (z-r)) - 1))] += d[k][j]
    # Recherche du premier indice (j) dans d[i] dont la valeur dépasse ou égale à K.
    for j in R(1 << i):
        if d[i][j] >= K:
            I = i  # On mémorise la valeur de i, la taille de la sous-table.
            J = j  # On mémorise l’indice j.
            break  # On arrête dès qu’on a trouvé le premier.

# Affichage du résultat final.
# Si I==0 et J==0, on affiche la chaîne vide ''.
# Sinon, on convertit J en binaire, omettant le préfixe '0b', et on complète à gauche par des zéros pour obtenir un mot de I bits.
print('' if I == J == 0 else bin(J)[2:].zfill(I))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.02890322357416153
    2. 'i' → logprob: -4.403903007507324
    3. 'ition' → logprob: -5.153903007507324
    4. 't' → logprob: -6.528903007507324
    5. 'ini' → logprob: -6.528903007507324
    6. 'ine' → logprob: -6.528903007507324
    7. '#' → logprob: -6.778903007507324
    8. 'in' → logprob: -7.403903007507324
    9. 'init' → logprob: -7.653903007507324
    10. '```' → logprob: -7.778903007507324

Token 4: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8323707580566406
    2. ' ' → logprob: -1.8323707580566406
    3. ' de' → logprob: -2.3323707580566406
    4. ' d' → logprob: -2.4573707580566406
    5. ' :' → logprob: -2.4573707580566406
    6. '_' → logprob: -2.7073707580566406
    7. 's' → logprob: -3.2073707580566406
    8. ' =' → logprob: -5.207370758056641
    9. '```' → logprob: -5.332370758056641
    10. 'd' → logprob: -5.582370758056641

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2920582592487335
    2. 'la' → logprob: -2.542058229446411
    3. 'l' → logprob: -2.917058229446411
    4. 'une' → logprob: -3.792058229446411
    5. ' ' → logprob: -4.16705846786499
    6. 'class' → logprob: -4.29205846786499
    7. 'classe' → logprob: -4.29205846786499
    8. ' l' → logprob: -4.54205846786499
    9. ' ' → logprob: -4.91705846786499
    10. '_' → logprob: -4.91705846786499

Token 6: ' variable' (ID: 11076)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.42250609397888184
    2. 'classe' → logprob: -1.5475060939788818
    3. 'class' → logprob: -2.922506093978882
    4. 'f' → logprob: -3.047506093978882
    5. ' ' → logprob: -4.672506332397461
    6. 'function' → logprob: -5.047506332397461
    7. ' fonction' → logprob: -6.047506332397461
    8. 'c' → logprob: -6.422506332397461
    9. 'fon' → logprob: -6.547506332397461
    10. ' ' → logprob: -6.672506332397461

Token 7: ' R' (ID: 460)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27128303050994873
    2. 'variable' → logprob: -2.8962831497192383
    3. 'v' → logprob: -3.2712831497192383
    4. 's' → logprob: -3.5212831497192383
    5. 'x' → logprob: -4.146283149719238
    6. ' =' → logprob: -4.146283149719238
    7. ' ' → logprob: -4.646283149719238
    8. 'a' → logprob: -4.646283149719238
    9. 'space' → logprob: -4.771283149719238
    10. '=' → logprob: -4.771283149719238

Token 8: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24907049536705017
    2. '=' → logprob: -1.7490705251693726
    3. '_' → logprob: -3.249070405960083
    4. ' ' → logprob: -5.874070644378662
    5. 'R' → logprob: -6.374070644378662
    6. 's' → logprob: -6.749070644378662
    7. 'e' → logprob: -8.124070167541504
    8. 'a' → logprob: -8.249070167541504
    9. 'u' → logprob: -8.499070167541504
    10. 'i' → logprob: -8.874070167541504

Token 9: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8312422633171082
    2. 'R' → logprob: -2.331242322921753
    3. 'la' → logprob: -2.456242322921753
    4. '=' → logprob: -2.581242322921753
    5. '"' → logprob: -2.831242322921753
    6. '```' → logprob: -3.206242322921753
    7. ' la' → logprob: -3.331242322921753
    8. 'int' → logprob: -3.581242322921753
    9. ' une' → logprob: -3.706242322921753
    10. ' =' → logprob: -3.956242322921753

Token 10: ' alias' (ID: 26026)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1564056873321533
    2. 'nombre' → logprob: -1.2814056873321533
    3. 'e' → logprob: -1.9064056873321533
    4. 'string' → logprob: -3.1564056873321533
    5. 'é' → logprob: -3.5314056873321533
    6. 'vect' → logprob: -3.5314056873321533
    7. ' entier' → logprob: -3.6564056873321533
    8. 'float' → logprob: -4.156405448913574
    9. 'int' → logprob: -4.406405448913574
    10. ' nombre' → logprob: -4.781405448913574

Token 11: ' de' (ID: 334)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12929438054561615
    2. '=' → logprob: -2.6292943954467773
    3. ' =' → logprob: -3.6292943954467773
    4. 'r' → logprob: -5.129294395446777
    5. ':' → logprob: -5.629294395446777
    6. '_' → logprob: -5.629294395446777
    7. '_R' → logprob: -6.004294395446777
    8. ' R' → logprob: -6.129294395446777
    9. '```' → logprob: -6.379294395446777
    10. '`' → logprob: -6.504294395446777

Token 12: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9849832057952881
    2. '`' → logprob: -1.859983205795288
    3. 'R' → logprob: -2.234983205795288
    4. 'numpy' → logprob: -2.609983205795288
    5. 'np' → logprob: -3.234983205795288
    6. 'Range' → logprob: -3.359983205795288
    7. 'math' → logprob: -3.609983205795288
    8. '```' → logprob: -3.734983205795288
    9. ' range' → logprob: -4.109983444213867
    10. 'la' → logprob: -4.109983444213867

Token 13: ' pour' (ID: 1930)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.41610780358314514
    2. '(' → logprob: -1.9161077737808228
    3. ' =' → logprob: -2.7911078929901123
    4. '=' → logprob: -3.1661078929901123
    5. 'r' → logprob: -3.6661078929901123
    6. ' R' → logprob: -3.9161078929901123
    7. '_' → logprob: -3.9161078929901123
    8. '(R' → logprob: -4.166107654571533
    9. ':' → logprob: -6.041107654571533
    10. '[' → logprob: -6.791107654571533

Token 14: ' simpl' (ID: 15693)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9036092758178711
    2. ' la' → logprob: -1.278609275817871
    3. 'range' → logprob: -2.028609275817871
    4. 'r' → logprob: -2.528609275817871
    5. ' les' → logprob: -4.653609275817871
    6. ' iter' → logprob: -4.653609275817871
    7. 'x' → logprob: -4.778609275817871
    8. ' l' → logprob: -4.903609275817871
    9. ' ' → logprob: -5.028609275817871
    10. ' x' → logprob: -5.028609275817871

Token 15: 'ifier' (ID: 4550)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011582007631659508
    2. 'es' → logprob: -5.761581897735596
    3. 'ifier' → logprob: -6.386581897735596
    4. '```' → logprob: -6.511581897735596
    5. 'ification' → logprob: -7.136581897735596
    6. 'R' → logprob: -7.261581897735596
    7. 'ify' → logprob: -7.386581897735596
    8. '(R' → logprob: -7.761581897735596
    9. 'ified' → logprob: -8.011582374572754
    10. '()' → logprob: -8.011582374572754

Token 16: ' l' (ID: 305)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2476481944322586
    2. '(' → logprob: -2.247648239135742
    3. '(R' → logprob: -2.747648239135742
    4. '(range' → logprob: -3.997648239135742
    5. ' R' → logprob: -4.372648239135742
    6. 'range' → logprob: -5.622648239135742
    7. '(
' → logprob: -5.997648239135742
    8. '`' → logprob: -6.122648239135742
    9. '```' → logprob: -6.122648239135742
    10. ' =' → logprob: -6.372648239135742

Token 17: ''é' (ID: 12728)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17761074006557465
    2. 'e' → logprob: -1.9276107549667358
    3. ')' → logprob: -5.927610874176025
    4. 'ange' → logprob: -5.927610874176025
    5. 'ist' → logprob: -6.052610874176025
    6. '')' → logprob: -6.427610874176025
    7. 'i' → logprob: -6.427610874176025
    8. 'range' → logprob: -6.927610874176025
    9. 'iste' → logprob: -7.052610874176025
    10. 'isting' → logprob: -8.302610397338867

Token 18: 'criture' (ID: 103247)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4127870798110962
    2. '(' → logprob: -1.9127870798110962
    3. 'q' → logprob: -1.9127870798110962
    4. 'space' → logprob: -2.1627869606018066
    5. ')' → logprob: -2.2877869606018066
    6. ' =' → logprob: -3.2877869606018066
    7. 'x' → logprob: -3.7877869606018066
    8. 'range' → logprob: -4.037786960601807
    9. 'criture' → logprob: -4.037786960601807
    10. 'chelle' → logprob: -4.287786960601807

Token 19: ' ult' (ID: 11619)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0552164688706398
    2. 'r' → logprob: -3.6802165508270264
    3. ' R' → logprob: -4.180216312408447
    4. '(' → logprob: -5.555216312408447
    5. ' =' → logprob: -5.805216312408447
    6. ' ' → logprob: -6.555216312408447
    7. '(R' → logprob: -6.930216312408447
    8. '=' → logprob: -7.680216312408447
    9. '_' → logprob: -7.805216312408447
    10. ':' → logprob: -7.805216312408447

Token 20: 'érieure' (ID: 45836)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08113104104995728
    2. 'e' → logprob: -3.2061309814453125
    3. 'ge' → logprob: -4.0811309814453125
    4. 'ange' → logprob: -4.7061309814453125
    5. 'an' → logprob: -5.9561309814453125
    6. '=' → logprob: -6.0811309814453125
    7. 'g' → logprob: -6.4561309814453125
    8. 'u' → logprob: -6.9561309814453125
    9. 'ang' → logprob: -7.0811309814453125
    10. 'r' → logprob: -7.5811309814453125

Token 21: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.015160716138780117
    2. 'r' → logprob: -5.26516056060791
    3. '(' → logprob: -5.64016056060791
    4. ' R' → logprob: -5.89016056060791
    5. ' =' → logprob: -7.26516056060791
    6. '(R' → logprob: -7.26516056060791
    7. '=' → logprob: -7.64016056060791
    8. '```' → logprob: -8.01516056060791
    9. ':' → logprob: -8.26516056060791
    10. 'range' → logprob: -8.39016056060791

Token 22: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.36385729908943176
    2. ' R' → logprob: -1.4888572692871094
    3. ' =' → logprob: -2.9888572692871094
    4. 'r' → logprob: -4.988857269287109
    5. '=' → logprob: -5.113857269287109
    6. 'range' → logprob: -5.613857269287109
    7. '(range' → logprob: -5.988857269287109
    8. '(' → logprob: -6.238857269287109
    9. '(R' → logprob: -6.613857269287109
    10. 'Range' → logprob: -6.738857269287109

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3509474992752075
    2. 'ange' → logprob: -1.4759474992752075
    3. '=' → logprob: -2.725947380065918
    4. 'ANGE' → logprob: -7.225947380065918
    5. 'anges' → logprob: -7.975947380065918
    6. '(' → logprob: -8.350947380065918
    7. '(range' → logprob: -9.225947380065918
    8. 'anged' → logprob: -9.225947380065918
    9. ' ange' → logprob: -9.725947380065918
    10. ',' → logprob: -9.850947380065918

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868999183177948
    2. ' range' → logprob: -1.1368999481201172
    3. '	range' → logprob: -11.261899948120117
    4. ' rang' → logprob: -11.886899948120117
    5. 'rang' → logprob: -13.261899948120117
    6. 'r' → logprob: -13.636899948120117
    7. '```' → logprob: -13.761899948120117
    8. '(range' → logprob: -13.886899948120117
    9. ' ' → logprob: -14.011899948120117
    10. '`' → logprob: -14.011899948120117

Token 25: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014776040916331112
    2. '(
' → logprob: -9.375147819519043
    3. ' (' → logprob: -11.250147819519043
    4. '(len' → logprob: -11.375147819519043
    5. '(

' → logprob: -11.500147819519043
    6. '<|end|>' → logprob: -11.875147819519043
    7. '40' → logprob: -12.750147819519043
    8. '(n' → logprob: -12.750147819519043
    9. '()' → logprob: -12.875147819519043
    10. '((' → logprob: -13.125147819519043

Token 26: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001137947037932463
    2. '(
' → logprob: -9.375113487243652
    3. ' (' → logprob: -11.875113487243652
    4. ',' → logprob: -12.625113487243652
    5. '(

' → logprob: -12.625113487243652
    6. ')' → logprob: -13.000113487243652
    7. '_' → logprob: -13.250113487243652
    8. '.' → logprob: -13.500113487243652
    9. '(len' → logprob: -13.625113487243652
    10. '[' → logprob: -13.625113487243652

Token 27: ' Lecture' (ID: 106534)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2869158685207367
    2. ' ' → logprob: -2.0369157791137695
    3. 'def' → logprob: -3.4119157791137695
    4. ' for' → logprob: -3.6619157791137695
    5. 'for' → logprob: -3.9119157791137695
    6. ' n' → logprob: -4.9119157791137695
    7. '(' → logprob: -5.0369157791137695
    8. ' def' → logprob: -5.0369157791137695
    9. '100' → logprob: -5.1619157791137695
    10. 'n' → logprob: -5.7869157791137695

Token 28: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027092962991446257
    2. ' (' → logprob: -6.12770938873291
    3. '()' → logprob: -9.25270938873291
    4. '('' → logprob: -9.50270938873291
    5. ')' → logprob: -9.75270938873291
    6. '(
' → logprob: -9.87770938873291
    7. 's' → logprob: -9.87770938873291
    8. '_' → logprob: -10.50270938873291
    9. ' ' → logprob: -10.62770938873291
    10. '[' → logprob: -10.75270938873291

Token 29: ' deux' (ID: 10301)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09462413191795349
    2. '()' → logprob: -3.4696240425109863
    3. ' ' → logprob: -3.8446240425109863
    4. 'l' → logprob: -4.844624042510986
    5. 'int' → logprob: -4.969624042510986
    6. 'n' → logprob: -5.094624042510986
    7. '(int' → logprob: -5.219624042510986
    8. 'input' → logprob: -5.844624042510986
    9. 's' → logprob: -5.969624042510986
    10. '(n' → logprob: -6.469624042510986

Token 30: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08605344593524933
    2. ' nombres' → logprob: -2.9610533714294434
    3. ' espaces' → logprob: -4.961053371429443
    4. ' ent' → logprob: -5.086053371429443
    5. ' integers' → logprob: -5.336053371429443
    6. ' valeurs' → logprob: -5.711053371429443
    7. '_' → logprob: -5.961053371429443
    8. ' lignes' → logprob: -6.336053371429443
    9. ' nombre' → logprob: -6.836053371429443
    10. 'nombre' → logprob: -7.336053371429443

Token 31: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01690642721951008
    2. 'r' → logprob: -4.516906261444092
    3. 'ières' → logprob: -6.266906261444092
    4. 'ri' → logprob: -6.266906261444092
    5. 'i' → logprob: -6.766906261444092
    6. 'ier' → logprob: -8.14190673828125
    7. 'ers' → logprob: -8.51690673828125
    8. 'ées' → logprob: -9.26690673828125
    9. 'ries' → logprob: -9.51690673828125
    10. 'ires' → logprob: -10.26690673828125

Token 32: ' depuis' (ID: 16277)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6716461181640625
    2. 'a' → logprob: -2.0466461181640625
    3. 'n' → logprob: -2.0466461181640625
    4. '(' → logprob: -2.5466461181640625
    5. ' ' → logprob: -2.7966461181640625
    6. '()' → logprob: -3.5466461181640625
    7. '(n' → logprob: -3.6716461181640625
    8. ' a' → logprob: -3.9216461181640625
    9. 's' → logprob: -5.6716461181640625
    10. ' (' → logprob: -6.2966461181640625

Token 33: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5712195634841919
    2. 'input' → logprob: -1.696219563484192
    3. 'l' → logprob: -1.946219563484192
    4. ' l' → logprob: -3.0712194442749023
    5. ' la' → logprob: -3.5712194442749023
    6. ' ' → logprob: -4.071219444274902
    7. 'la' → logprob: -4.821219444274902
    8. '(input' → logprob: -6.196219444274902
    9. '=input' → logprob: -6.196219444274902
    10. '_' → logprob: -7.196219444274902

Token 34: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5240082144737244
    2. ''' → logprob: -1.7740082740783691
    3. ''entrée' → logprob: -2.024008274078369
    4. ''utilisateur' → logprob: -2.399008274078369
    5. 'u' → logprob: -5.149008274078369
    6. 'input' → logprob: -5.899008274078369
    7. 'e' → logprob: -6.399008274078369
    8. ''a' → logprob: -6.774008274078369
    9. '’utilisateur' → logprob: -7.649008274078369
    10. 'es' → logprob: -7.899008274078369

Token 35: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06676609069108963
    2. 's' → logprob: -3.5667660236358643
    3. 'n' → logprob: -4.441766262054443
    4. 'user' → logprob: -5.691766262054443
    5. '(' → logprob: -5.816766262054443
    6. 'a' → logprob: -6.191766262054443
    7. ' ' → logprob: -6.316766262054443
    8. 'input' → logprob: -6.441766262054443
    9. 'r' → logprob: -7.066766262054443
    10. '(
' → logprob: -7.316766262054443

Token 36: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5272080898284912
    2. '(' → logprob: -2.152208089828491
    3. 'a' → logprob: -2.277208089828491
    4. '()' → logprob: -3.402208089828491
    5. 's' → logprob: -3.402208089828491
    6. 'input' → logprob: -3.527208089828491
    7. 'r' → logprob: -4.40220832824707
    8. 'x' → logprob: -4.52720832824707
    9. '(n' → logprob: -5.02720832824707
    10. 'i' → logprob: -5.15220832824707

Token 37: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9366951584815979
    2. ' ' → logprob: -2.061695098876953
    3. 'n' → logprob: -2.436695098876953
    4. ' input' → logprob: -2.686695098876953
    5. 'input' → logprob: -2.686695098876953
    6. ' n' → logprob: -2.811695098876953
    7. ' a' → logprob: -3.561695098876953
    8. 'x' → logprob: -3.686695098876953
    9. 'r' → logprob: -4.061695098876953
    10. ' ' → logprob: -4.186695098876953

Token 38: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01944326050579548
    2. 'é' → logprob: -4.394443035125732
    3. 'ée' → logprob: -5.019443035125732
    4. 'ées' → logprob: -8.51944351196289
    5. 'es' → logprob: -10.76944351196289
    6. 'ès' → logprob: -10.89444351196289
    7. 'er' → logprob: -11.14444351196289
    8. 's' → logprob: -11.26944351196289
    9. 'ateur' → logprob: -11.39444351196289
    10. 'e' → logprob: -11.89444351196289

Token 39: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.020791666582226753
    2. 'par' → logprob: -3.89579176902771
    3. '_par' → logprob: -9.145792007446289
    4. '=' → logprob: -10.520792007446289
    5. ' ' → logprob: -10.895792007446289
    6. ' by' → logprob: -11.020792007446289
    7. 'e' → logprob: -11.895792007446289
    8. ')' → logprob: -11.895792007446289
    9. '  ' → logprob: -11.895792007446289
    10. 'es' → logprob: -12.020792007446289

Token 40: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6498088836669922
    2. 'un' → logprob: -1.3998088836669922
    3. ''un' → logprob: -2.524808883666992
    4. ' une' → logprob: -3.149808883666992
    5. ''' → logprob: -3.649808883666992
    6. ' ' → logprob: -3.774808883666992
    7. 'space' → logprob: -4.274808883666992
    8. 'une' → logprob: -4.649808883666992
    9. ''une' → logprob: -4.774808883666992
    10. 'l' → logprob: -5.274808883666992

Token 41: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.2582821846008301
    2. 'es' → logprob: -1.63328218460083
    3. ' ' → logprob: -4.38328218460083
    4. ''espace' → logprob: -4.63328218460083
    5. 'esp' → logprob: -5.00828218460083
    6. ' espaces' → logprob: -7.13328218460083
    7. 'space' → logprob: -7.63328218460083
    8. 'e' → logprob: -7.75828218460083
    9. ' space' → logprob: -8.008281707763672
    10. '’espace' → logprob: -8.258281707763672

Token 42: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13697455823421478
    2. 'x' → logprob: -2.386974573135376
    3. 'n' → logprob: -3.386974573135376
    4. ' a' → logprob: -6.886974334716797
    5. 'l' → logprob: -8.136974334716797
    6. 'A' → logprob: -8.636974334716797
    7. 'L' → logprob: -8.886974334716797
    8. ' x' → logprob: -9.261974334716797
    9. 's' → logprob: -9.386974334716797
    10. 'i' → logprob: -9.636974334716797

Token 43: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.031053762882947922
    2. 'x' → logprob: -3.9060537815093994
    3. 'A' → logprob: -5.03105354309082
    4. 'n' → logprob: -5.90605354309082
    5. ' a' → logprob: -7.65605354309082
    6. 'L' → logprob: -8.03105354309082
    7. 'l' → logprob: -9.28105354309082
    8. 'N' → logprob: -9.90605354309082
    9. '```' → logprob: -9.90605354309082
    10. 'i' → logprob: -10.28105354309082

Token 44: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061763182282447815
    2. 'x' → logprob: -3.186763286590576
    3. ' a' → logprob: -4.561763286590576
    4. 'n' → logprob: -5.061763286590576
    5. ' x' → logprob: -7.436763286590576
    6. 'l' → logprob: -7.936763286590576
    7. ' n' → logprob: -8.686762809753418
    8. 'L' → logprob: -9.061762809753418
    9. 'start' → logprob: -9.436762809753418
    10. 'input' → logprob: -9.686762809753418

Token 45: ' applique' (ID: 180579)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5281710028648376
    2. '(' → logprob: -0.9031710028648376
    3. '(lambda' → logprob: -5.653171062469482
    4. '(str' → logprob: -7.153171062469482
    5. '(
' → logprob: -7.903171062469482
    6. 'int' → logprob: -9.278170585632324
    7. '=int' → logprob: -9.653170585632324
    8. '(input' → logprob: -9.903170585632324
    9. '<int' → logprob: -10.278170585632324
    10. '(list' → logprob: -10.278170585632324

Token 46: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09569156169891357
    2. '(' → logprob: -2.595691680908203
    3. '(lambda' → logprob: -4.845691680908203
    4. '(str' → logprob: -4.970691680908203
    5. 'int' → logprob: -6.970691680908203
    6. ' int' → logprob: -7.845691680908203
    7. '()' → logprob: -9.220691680908203
    8. '(R' → logprob: -9.345691680908203
    9. 'R' → logprob: -9.595691680908203
    10. '=int' → logprob: -9.970691680908203

Token 47: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.561084508895874
    2. '<|end|>' → logprob: -1.561084508895874
    3. '(int' → logprob: -2.061084508895874
    4. '()' → logprob: -2.936084508895874
    5. '(str' → logprob: -4.436084747314453
    6. '(input' → logprob: -4.811084747314453
    7. '(lambda' → logprob: -5.436084747314453
    8. 's' → logprob: -5.686084747314453
    9. ')' → logprob: -5.811084747314453
    10. '<|end|>' → logprob: -6.561084747314453

Token 48: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04366869106888771
    2. ' input' → logprob: -3.168668746948242
    3. '(input' → logprob: -7.918668746948242
    4. 'l' → logprob: -8.793668746948242
    5. 'str' → logprob: -9.793668746948242
    6. '	input' → logprob: -10.668668746948242
    7. '```' → logprob: -11.418668746948242
    8. ',input' → logprob: -11.668668746948242
    9. ' ' → logprob: -11.793668746948242
    10. 's' → logprob: -12.043668746948242

Token 49: ' élément' (ID: 99627)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2962731122970581
    2. '(' → logprob: -2.0462732315063477
    3. 'input' → logprob: -2.4212732315063477
    4. '<|end|>' → logprob: -4.046273231506348
    5. ' input' → logprob: -4.546273231506348
    6. '(str' → logprob: -6.421273231506348
    7. '(token' → logprob: -6.796273231506348
    8. '(split' → logprob: -6.921273231506348
    9. '(
' → logprob: -7.546273231506348
    10. 'entrée' → logprob: -7.796273231506348

Token 50: ' obtenu' (ID: 117330)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10973192006349564
    2. 'input' → logprob: -2.859731912612915
    3. '(' → logprob: -3.234731912612915
    4. ' input' → logprob: -5.109732151031494
    5. '(
' → logprob: -7.984732151031494
    6. ' de' → logprob: -8.609731674194336
    7. '```' → logprob: -9.109731674194336
    8. ' (' → logprob: -9.359731674194336
    9. '(stdin' → logprob: -9.734731674194336
    10. 's' → logprob: -9.859731674194336

Token 51: ' via' (ID: 4493)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29754573106765747
    2. '(input' → logprob: -1.4225456714630127
    3. ' par' → logprob: -5.922545909881592
    4. ' de' → logprob: -5.922545909881592
    5. 'input' → logprob: -6.297545909881592
    6. '(par' → logprob: -6.422545909881592
    7. 'par' → logprob: -6.547545909881592
    8. 'from' → logprob: -6.922545909881592
    9. '(
' → logprob: -7.422545909881592
    10. 'de' → logprob: -7.422545909881592

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2824406921863556
    2. ' input' → logprob: -1.4074406623840332
    3. '(input' → logprob: -7.282440662384033
    4. 'l' → logprob: -7.782440662384033
    5. ' l' → logprob: -9.782441139221191
    6. '=input' → logprob: -10.407441139221191
    7. '```' → logprob: -10.532441139221191
    8. '	input' → logprob: -10.782441139221191
    9. ' ' → logprob: -11.032441139221191
    10. 'split' → logprob: -11.657441139221191

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.055547840893268585
    2. '()' → logprob: -2.9305479526519775
    3. '(' → logprob: -7.555547714233398
    4. '.' → logprob: -9.680547714233398
    5. '('').' → logprob: -11.680547714233398
    6. '(),' → logprob: -11.805547714233398
    7. '("").' → logprob: -11.930547714233398
    8. '('' → logprob: -11.930547714233398
    9. ' ().' → logprob: -12.180547714233398
    10. '()`' → logprob: -12.555547714233398

Token 54: 'split' (ID: 13627)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7802081108093262
    2. '()' → logprob: -1.6552081108093262
    3. '(*' → logprob: -1.7802081108093262
    4. 's' → logprob: -3.155208110809326
    5. 'map' → logprob: -3.405208110809326
    6. 'input' → logprob: -3.780208110809326
    7. '().' → logprob: -4.530208110809326
    8. '(int' → logprob: -4.655208110809326
    9. '(*)' → logprob: -4.905208110809326
    10. 'a' → logprob: -5.155208110809326

Token 55: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17161878943443298
    2. '(' → logprob: -1.9216188192367554
    3. '(
' → logprob: -5.546618938446045
    4. ')' → logprob: -5.796618938446045
    5. '())' → logprob: -6.796618938446045
    6. '().' → logprob: -7.171618938446045
    7. '()
' → logprob: -7.421618938446045
    8. '(),' → logprob: -8.046618461608887
    9. '#' → logprob: -8.171618461608887
    10. '()

' → logprob: -8.546618461608887

Token 56: ' ce' (ID: 2357)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.211686611175537
    2. ' R' → logprob: -1.586686611175537
    3. ' puis' → logprob: -2.086686611175537
    4. ' ce' → logprob: -2.586686611175537
    5. 'r' → logprob: -2.961686611175537
    6. '*' → logprob: -3.336686611175537
    7. '()' → logprob: -3.711686611175537
    8. 'input' → logprob: -4.086686611175537
    9. ' et' → logprob: -4.086686611175537
    10. 'list' → logprob: -4.211686611175537

Token 57: ' qui' (ID: 2780)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.2392114400863647
    2. 'int' → logprob: -1.6142114400863647
    3. 'qui' → logprob: -2.4892115592956543
    4. 's' → logprob: -2.6142115592956543
    5. ' R' → logprob: -2.8642115592956543
    6. '#' → logprob: -3.3642115592956543
    7. ')' → logprob: -3.6142115592956543
    8. '()' → logprob: -3.6142115592956543
    9. 'n' → logprob: -3.7392115592956543
    10. '=' → logprob: -4.239211559295654

Token 58: ' récup' (ID: 62856)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.6931143999099731
    2. 'per' → logprob: -0.8181143999099731
    3. ' crée' → logprob: -3.3181142807006836
    4. ' transforme' → logprob: -5.443114280700684
    5. 'don' → logprob: -5.943114280700684
    6. 'convert' → logprob: -6.068114280700684
    7. 'perm' → logprob: -6.943114280700684
    8. ' rend' → logprob: -7.068114280700684
    9. ' est' → logprob: -7.068114280700684
    10. ' permettra' → logprob: -7.068114280700684

Token 59: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.002895928919315338
    2. '`' → logprob: -7.002895832061768
    3. '\' → logprob: -7.877895832061768
    4. 'ere' → logprob: -8.252896308898926
    5. 'ére' → logprob: -9.002896308898926
    6. '**' → logprob: -9.002896308898926
    7. 'è' → logprob: -9.252896308898926
    8. '```' → logprob: -9.377896308898926
    9. '"' → logprob: -9.502896308898926
    10. '	' → logprob: -9.502896308898926

Token 60: ' N' (ID: 478)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7969201803207397
    2. ' deux' → logprob: -1.1719201803207397
    3. 'les' → logprob: -2.1719202995300293
    4. ' la' → logprob: -3.0469202995300293
    5. 'de' → logprob: -3.9219202995300293
    6. ' two' → logprob: -4.296920299530029
    7. ' une' → logprob: -5.046920299530029
    8. '()' → logprob: -5.046920299530029
    9. ' ' → logprob: -5.421920299530029
    10. 'l' → logprob: -5.421920299530029

Token 61: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.19980841875076294
    2. ',' → logprob: -2.324808359146118
    3. ' ,' → logprob: -3.574808359146118
    4. 'et' → logprob: -3.824808359146118
    5. ' and' → logprob: -3.949808359146118
    6. ')' → logprob: -5.824808597564697
    7. 's' → logprob: -5.949808597564697
    8. ' ' → logprob: -6.199808597564697
    9. ' )' → logprob: -6.574808597564697
    10. '()' → logprob: -6.699808597564697

Token 62: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.34301629662513733
    2. 'M' → logprob: -1.343016266822815
    3. ' K' → logprob: -3.8430163860321045
    4. 'K' → logprob: -5.093016147613525
    5. ' ' → logprob: -6.718016147613525
    6. ' T' → logprob: -9.718016624450684
    7. ' S' → logprob: -9.905516624450684
    8. 'S' → logprob: -10.030516624450684
    9. 'Q' → logprob: -10.155516624450684
    10. 'X' → logprob: -10.218016624450684

Token 63: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.936179757118225
    2. 'N' → logprob: -1.936179757118225
    3. ')' → logprob: -2.1861796379089355
    4. ' =' → logprob: -2.1861796379089355
    5. '=' → logprob: -2.3111796379089355
    6. ',' → logprob: -2.4361796379089355
    7. '(N' → logprob: -2.4361796379089355
    8. '()' → logprob: -2.5611796379089355
    9. '(
' → logprob: -2.5611796379089355
    10. '#' → logprob: -5.0611796379089355

Token 64: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.017773045226931572
    2. '
' → logprob: -4.267773151397705
    3. 'n' → logprob: -6.142773151397705
    4. '(N' → logprob: -7.642773151397705
    5. ' N' → logprob: -8.142772674560547
    6. '
' → logprob: -8.392772674560547
    7. '

' → logprob: -9.392772674560547
    8. '#' → logprob: -9.642772674560547
    9. '(
' → logprob: -10.142772674560547
    10. ',' → logprob: -10.267772674560547

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018077615823131055
    2. ',K' → logprob: -8.625181198120117
    3. ' ,' → logprob: -14.000181198120117
    4. ',k' → logprob: -15.250181198120117
    5. 'K' → logprob: -16.500181198120117
    6. ',
' → logprob: -18.125181198120117
    7. '，' → logprob: -18.625181198120117
    8. ',

' → logprob: -19.000181198120117
    9. '،' → logprob: -19.000181198120117
    10. '‌,' → logprob: -19.125181198120117

Token 66: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.007297335658222437
    2. 'K' → logprob: -5.507297515869141
    3. ' ' → logprob: -5.757297515869141
    4. '  ' → logprob: -10.88229751586914
    5. ' ' → logprob: -10.88229751586914
    6. '<|end|>' → logprob: -11.50729751586914
    7. ' ' → logprob: -13.13229751586914
    8. '=' → logprob: -13.88229751586914
    9. ' =' → logprob: -14.00729751586914
    10. 'space' → logprob: -14.75729751586914

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. ',' → logprob: -13.450942039489746
    4. '=input' → logprob: -13.950942039489746
    5. '=int' → logprob: -15.450942039489746
    6. '＝' → logprob: -15.825942039489746
    7. ')' → logprob: -16.450942993164062
    8. '=list' → logprob: -16.700942993164062
    9. '=

' → logprob: -17.450942993164062
    10. ' =
' → logprob: -17.825942993164062

Token 68: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005257595330476761
    2. 'map' → logprob: -5.255257606506348
    3. ' ' → logprob: -11.380257606506348
    4. ' ' → logprob: -12.255257606506348
    5. ' list' → logprob: -12.505257606506348
    6. '	map' → logprob: -13.005257606506348
    7. 'm' → logprob: -14.755257606506348
    8. ' m' → logprob: -15.255257606506348
    9. ' ma' → logprob: -15.255257606506348
    10. '   ' → logprob: -15.505257606506348

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00671940203756094
    2. '(' → logprob: -5.006719589233398
    3. ' (' → logprob: -13.881719589233398
    4. ' int' → logprob: -14.006719589233398
    5. 'int' → logprob: -14.131719589233398
    6. '(
' → logprob: -14.381719589233398
    7. '<int' → logprob: -14.631719589233398
    8. '=int' → logprob: -16.0067195892334
    9. '	int' → logprob: -16.5067195892334
    10. '(str' → logprob: -16.7567195892334

Token 70: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023540576919913292
    2. ',input' → logprob: -4.273540496826172
    3. 'input' → logprob: -4.898540496826172
    4. ',' → logprob: -7.023540496826172
    5. '(' → logprob: -7.773540496826172
    6. ')' → logprob: -8.523540496826172
    7. ' input' → logprob: -8.648540496826172
    8. ' (' → logprob: -9.023540496826172
    9. '=input' → logprob: -9.898540496826172
    10. '<input' → logprob: -12.023540496826172

Token 71: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048592593520879745
    2. ' input' → logprob: -3.0485925674438477
    3. ')' → logprob: -12.923592567443848
    4. '(input' → logprob: -13.673592567443848
    5. ' ' → logprob: -14.298592567443848
    6. '<input' → logprob: -14.923592567443848
    7. ',input' → logprob: -15.548592567443848
    8. '=input' → logprob: -16.048593521118164
    9. '	input' → logprob: -16.048593521118164
    10. '   ' → logprob: -16.798593521118164

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014120421838015318
    2. '()' → logprob: -8.875141143798828
    3. ' ().' → logprob: -13.875141143798828
    4. '(' → logprob: -15.750141143798828
    5. '())' → logprob: -16.250141143798828
    6. ')' → logprob: -17.125141143798828
    7. ' ()' → logprob: -18.750141143798828
    8. '.' → logprob: -19.375141143798828
    9. '()[' → logprob: -19.375141143798828
    10. '()
' → logprob: -19.500141143798828

Token 73: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. ' split' → logprob: -13.25000286102295
    3. 'strip' → logprob: -14.37500286102295
    4. ')' → logprob: -16.000001907348633
    5. '(split' → logprob: -16.875001907348633
    6. 'spl' → logprob: -18.000001907348633
    7. '```' → logprob: -18.500001907348633
    8. '.split' → logprob: -18.750001907348633
    9. 'rstrip' → logprob: -19.000001907348633
    10. 'plit' → logprob: -19.500001907348633

Token 74: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01050108764320612
    2. ')' → logprob: -5.135500907897949
    3. '()' → logprob: -5.635500907897949
    4. '()))' → logprob: -7.010500907897949
    5. '))' → logprob: -9.76050090789795
    6. ' ())' → logprob: -11.63550090789795
    7. '(' → logprob: -11.76050090789795
    8. '())
' → logprob: -12.01050090789795
    9. '());' → logprob: -12.63550090789795
    10. '();)' → logprob: -13.76050090789795

Token 75: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3114584684371948
    2. '[' → logprob: -2.0614585876464844
    3. ')' → logprob: -2.1864585876464844
    4. 'for' → logprob: -2.1864585876464844
    5. 'a' → logprob: -3.0614585876464844
    6. '\n' → logprob: -3.1864585876464844
    7. '#' → logprob: -3.4364585876464844
    8. 'n' → logprob: -3.6864585876464844
    9. ' 
' → logprob: -3.6864585876464844
    10. 's' → logprob: -3.6864585876464844

Token 76: ' Cré' (ID: 109203)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.431855320930481
    2. 'dp' → logprob: -1.681855320930481
    3. 'for' → logprob: -2.3068552017211914
    4. '#' → logprob: -2.5568552017211914
    5. 's' → logprob: -2.6818552017211914
    6. ' result' → logprob: -3.1818552017211914
    7. 'lst' → logprob: -3.1818552017211914
    8. 'def' → logprob: -3.5568552017211914
    9. 'A' → logprob: -3.5568552017211914
    10. 'count' → logprob: -3.8068552017211914

Token 77: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00025394887779839337
    2. '#' → logprob: -8.750253677368164
    3. 'er' → logprob: -10.000253677368164
    4. 'a' → logprob: -10.500253677368164
    5. 'at' → logprob: -12.000253677368164
    6. ' at' → logprob: -12.125253677368164
    7. 'ate' → logprob: -12.500253677368164
    8. '```' → logprob: -12.625253677368164
    9. 'lation' → logprob: -14.625253677368164
    10. 'tion' → logprob: -14.875253677368164

Token 78: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1221742033958435
    2. 'd' → logprob: -2.2471742630004883
    3. '(' → logprob: -6.497174263000488
    4. '[' → logprob: -6.497174263000488
    5. '[]' → logprob: -6.497174263000488
    6. '#' → logprob: -6.622174263000488
    7. '()' → logprob: -7.122174263000488
    8. ')' → logprob: -7.247174263000488
    9. ' de' → logprob: -7.622174263000488
    10. ' ' → logprob: -7.872174263000488

Token 79: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.486162394285202
    2. '[]' → logprob: -2.2361624240875244
    3. ' la' → logprob: -2.4861624240875244
    4. 'une' → logprob: -2.8611624240875244
    5. ' un' → logprob: -2.9861624240875244
    6. '[' → logprob: -3.7361624240875244
    7. ' [' → logprob: -4.236162185668945
    8. 'a' → logprob: -4.236162185668945
    9. 'la' → logprob: -5.111162185668945
    10. 'l' → logprob: -5.361162185668945

Token 80: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.13057683408260345
    2. ' liste' → logprob: -2.3805768489837646
    3. 'list' → logprob: -4.1305766105651855
    4. 'table' → logprob: -4.8805766105651855
    5. 's' → logprob: -7.1305766105651855
    6. ' table' → logprob: -7.5055766105651855
    7. '```' → logprob: -7.5055766105651855
    8. 'lst' → logprob: -7.5055766105651855
    9. 'lista' → logprob: -7.8805766105651855
    10. 'Liste' → logprob: -8.005577087402344

Token 81: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.2843226194381714
    2. 'quence' → logprob: -1.4093226194381714
    3. 'ries' → logprob: -6.909322738647461
    4. 'q' → logprob: -7.409322738647461
    5. 'quences' → logprob: -8.284322738647461
    6. '#' → logprob: -8.284322738647461
    7. 'lection' → logprob: -8.534322738647461
    8. 't' → logprob: -8.659322738647461
    9. 'qu' → logprob: -9.159322738647461
    10. 'r' → logprob: -9.409322738647461

Token 82: ' Q' (ID: 1486)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8322378993034363
    2. 's' → logprob: -1.207237958908081
    3. 'a' → logprob: -3.207237958908081
    4. 'lst' → logprob: -3.832237958908081
    5. 'A' → logprob: -3.957237958908081
    6. ' R' → logprob: -4.082237720489502
    7. '_' → logprob: -4.082237720489502
    8. 'd' → logprob: -4.207237720489502
    9. '[' → logprob: -4.707237720489502
    10. 'R' → logprob: -4.707237720489502

Token 83: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0012869019992649555
    2. '=' → logprob: -7.00128698348999
    3. 's' → logprob: -8.376286506652832
    4. '_' → logprob: -10.251286506652832
    5. '=[]' → logprob: -10.626286506652832
    6. ',' → logprob: -10.876286506652832
    7. '[]' → logprob: -11.251286506652832
    8. ' ' → logprob: -12.001286506652832
    9. 'Q' → logprob: -12.126286506652832
    10. '1' → logprob: -12.501286506652832

Token 84: ' qui' (ID: 2780)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0664570331573486
    2. ' [' → logprob: -1.1914570331573486
    3. '[' → logprob: -2.4414570331573486
    4. ' []' → logprob: -2.4414570331573486
    5. 'Q' → logprob: -3.0664570331573486
    6. ' Q' → logprob: -3.1914570331573486
    7. ' R' → logprob: -4.0664567947387695
    8. ' une' → logprob: -4.3164567947387695
    9. ' qui' → logprob: -4.9414567947387695
    10. 'R' → logprob: -5.0664567947387695

Token 85: ' sera' (ID: 15511)
  Prédit: ' contient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -1.0631399154663086
    2. ' est' → logprob: -1.4381399154663086
    3. ' représente' → logprob: -2.1881399154663086
    4. ' sera' → logprob: -2.5631399154663086
    5. 'cont' → logprob: -2.5631399154663086
    6. ' cont' → logprob: -3.3131399154663086
    7. 'est' → logprob: -3.6881399154663086
    8. ' commence' → logprob: -4.063139915466309
    9. ' correspond' → logprob: -4.313139915466309
    10. 's' → logprob: -4.938139915466309

Token 86: ' utilisée' (ID: 106548)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0308996438980103
    2. ' une' → logprob: -1.5308996438980103
    3. ' [' → logprob: -2.1558995246887207
    4. ' []' → logprob: -2.4058995246887207
    5. '[' → logprob: -2.6558995246887207
    6. '[N' → logprob: -3.7808995246887207
    7. 'list' → logprob: -3.9058995246887207
    8. ' list' → logprob: -3.9058995246887207
    9. '[R' → logprob: -4.155899524688721
    10. ' utilisée' → logprob: -4.280899524688721

Token 87: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.1649462878704071
    2. 'pour' → logprob: -2.2899463176727295
    3. 'dans' → logprob: -3.9149463176727295
    4. ' dans' → logprob: -4.28994607925415
    5. 'for' → logprob: -5.28994607925415
    6. ' for' → logprob: -5.78994607925415
    7. '[]' → logprob: -5.91494607925415
    8. '<|end|>' → logprob: -6.78994607925415
    9. ' comme' → logprob: -7.41494607925415
    10. 'comme' → logprob: -7.41494607925415

Token 88: ' it' (ID: 480)
  Prédit: ' sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sim' → logprob: -1.3537821769714355
    2. ' stock' → logprob: -1.3537821769714355
    3. ' déterminer' → logprob: -2.8537821769714355
    4. ' la' → logprob: -3.1037821769714355
    5. ' représ' → logprob: -3.1037821769714355
    6. ' calcul' → logprob: -3.1037821769714355
    7. ' les' → logprob: -3.2287821769714355
    8. ' génér' → logprob: -3.3537821769714355
    9. 'calcul' → logprob: -3.4787821769714355
    10. ' effectuer' → logprob: -3.6037821769714355

Token 89: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.004405313171446323
    2. 'er' → logprob: -6.629405498504639
    3. 'ér' → logprob: -6.629405498504639
    4. 'é' → logprob: -6.754405498504639
    5. 'erer' → logprob: -8.62940502166748
    6. 'rer' → logprob: -9.87940502166748
    7. 'égr' → logprob: -10.00440502166748
    8. 'e' → logprob: -10.12940502166748
    9. 'è' → logprob: -10.25440502166748
    10. '   ' → logprob: -10.62940502166748

Token 90: ' de' (ID: 334)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.5646495223045349
    2. '(' → logprob: -1.0646495819091797
    3. '(N' → logprob: -2.9396495819091797
    4. '(K' → logprob: -4.81464958190918
    5. '(range' → logprob: -4.93964958190918
    6. 'R' → logprob: -5.93964958190918
    7. 'dans' → logprob: -6.06464958190918
    8. '(
' → logprob: -6.43964958190918
    9. '(i' → logprob: -6.43964958190918
    10. ' dans' → logprob: -6.68964958190918

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9654809236526489
    2. ' K' → logprob: -1.215480923652649
    3. '0' → logprob: -2.2154808044433594
    4. ' ' → logprob: -2.3404808044433594
    5. 'K' → logprob: -2.4654808044433594
    6. ' i' → logprob: -4.590480804443359
    7. 'i' → logprob: -5.090480804443359
    8. ' N' → logprob: -5.590480804443359
    9. '2' → logprob: -5.840480804443359
    10. 'N' → logprob: -5.965480804443359

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6475936770439148
    2. '1' → logprob: -1.6475937366485596
    3. 'K' → logprob: -1.8975937366485596
    4. ' K' → logprob: -3.2725937366485596
    5. 'i' → logprob: -3.5225937366485596
    6. 'R' → logprob: -4.0225934982299805
    7. ' ' → logprob: -4.1475934982299805
    8. 'k' → logprob: -5.0225934982299805
    9. ' i' → logprob: -5.0225934982299805
    10. '2' → logprob: -5.2725934982299805

Token 93: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16475854814052582
    2. 'à' → logprob: -2.4147584438323975
    3. ',' → logprob: -3.5397584438323975
    4. ' jusqu' → logprob: -4.039758682250977
    5. ' jusque' → logprob: -5.789758682250977
    6. ')' → logprob: -6.164758682250977
    7. 'K' → logprob: -6.289758682250977
    8. 'a' → logprob: -6.414758682250977
    9. ' a' → logprob: -6.539758682250977
    10. ' K' → logprob: -7.039758682250977

Token 94: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.983540415763855
    2. 'N' → logprob: -0.983540415763855
    3. ' K' → logprob: -1.733540415763855
    4. ' N' → logprob: -2.6085405349731445
    5. ' ' → logprob: -6.7335405349731445
    6. 'Q' → logprob: -8.983540534973145
    7. ',' → logprob: -10.233540534973145
    8. 'R' → logprob: -10.296040534973145
    9. '1' → logprob: -10.421040534973145
    10. 'n' → logprob: -10.608540534973145

Token 95: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06944243609905243
    2. ')' → logprob: -3.9444425106048584
    3. '(' → logprob: -4.319442272186279
    4. '-' → logprob: -4.319442272186279
    5. ' +' → logprob: -4.319442272186279
    6. '.' → logprob: -6.194442272186279
    7. '()' → logprob: -6.194442272186279
    8. ' (' → logprob: -7.319442272186279
    9. '(N' → logprob: -7.819442272186279
    10. '()+' → logprob: -7.819442272186279

Token 96: ' inclus' (ID: 11891)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.35459229350090027
    2. ' N' → logprob: -1.6045923233032227
    3. 'K' → logprob: -2.8545923233032227
    4. 'N' → logprob: -3.7295923233032227
    5. ' ' → logprob: -4.604592323303223
    6. ' step' → logprob: -6.854592323303223
    7. ' inclusive' → logprob: -7.979592323303223
    8. ' soit' → logprob: -8.104592323303223
    9. ' ce' → logprob: -8.104592323303223
    10. ' n' → logprob: -8.292092323303223

Token 97: '.
' (ID: 558)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6191646456718445
    2. '(' → logprob: -0.8691646456718445
    3. '+' → logprob: -3.8691647052764893
    4. '(
' → logprob: -4.74416446685791
    5. 'N' → logprob: -6.11916446685791
    6. ')' → logprob: -6.11916446685791
    7. '(n' → logprob: -6.49416446685791
    8. ',' → logprob: -6.49416446685791
    9. 'Q' → logprob: -6.61916446685791
    10. '(R' → logprob: -7.49416446685791

Token 98: '#' (ID: 2)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019699118565768003
    2. ' Q' → logprob: -6.501969814300537
    3. 'N' → logprob: -8.126970291137695
    4. '(Q' → logprob: -9.626970291137695
    5. '(N' → logprob: -10.001970291137695
    6. 'q' → logprob: -11.126970291137695
    7. '(' → logprob: -11.751970291137695
    8. ')' → logprob: -12.001970291137695
    9. ' =' → logprob: -12.251970291137695
    10. ' N' → logprob: -12.751970291137695

Token 99: ' range' (ID: 3352)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.12717682123184204
    2. ' Q' → logprob: -2.1271767616271973
    3. 'list' → logprob: -9.752177238464355
    4. '[' → logprob: -10.002177238464355
    5. ' list' → logprob: -10.127177238464355
    6. ' [' → logprob: -10.502177238464355
    7. 'R' → logprob: -11.377177238464355
    8. '#' → logprob: -11.877177238464355
    9. 'q' → logprob: -11.877177238464355
    10. ' ' → logprob: -12.002177238464355

Token 100: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5248056054115295
    2. '(' → logprob: -0.8998056054115295
    3. '(R' → logprob: -7.274805545806885
    4. '(Q' → logprob: -7.774805545806885
    5. '(
' → logprob: -8.149806022644043
    6. '(K' → logprob: -9.399806022644043
    7. '(n' → logprob: -9.774806022644043
    8. '(L' → logprob: -10.899806022644043
    9. 's' → logprob: -11.149806022644043
    10. ')' → logprob: -11.399806022644043

Token 101: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03416150063276291
    2. ' +' → logprob: -3.4091615676879883
    3. '(N' → logprob: -8.159161567687988
    4. '(' → logprob: -9.284161567687988
    5. ')' → logprob: -9.409161567687988
    6. ',' → logprob: -10.909161567687988
    7. '(+' → logprob: -11.659161567687988
    8. '1' → logprob: -12.409161567687988
    9. ' ' → logprob: -12.534161567687988
    10. 'plus' → logprob: -13.034161567687988

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. ')' → logprob: -14.750020027160645
    4. '

' → logprob: -15.500020027160645
    5. '2' → logprob: -16.812519073486328
    6. '=' → logprob: -16.937519073486328
    7. '(' → logprob: -17.437519073486328
    8. '
' → logprob: -17.437519073486328
    9. '```' → logprob: -17.687519073486328
    10. '  ' → logprob: -17.875019073486328

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003230686706956476
    2. ' )' → logprob: -8.625323295593262
    3. '))' → logprob: -9.375323295593262
    4. '),' → logprob: -10.375323295593262
    5. '())' → logprob: -12.375323295593262
    6. ',' → logprob: -12.500323295593262
    7. '()' → logprob: -12.625323295593262
    8. '(' → logprob: -13.125323295593262
    9. '+' → logprob: -13.250323295593262
    10. '):' → logprob: -13.375323295593262

Token 104: ' gén' (ID: 15330)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034015290439128876
    2. 'Q' → logprob: -3.90901517868042
    3. '<|end|>' → logprob: -5.03401517868042
    4. '()' → logprob: -5.78401517868042
    5. '#' → logprob: -6.53401517868042
    6. '<|end|>' → logprob: -7.40901517868042
    7. '(' → logprob: -7.78401517868042
    8. '(Q' → logprob: -8.034015655517578
    9. ' )' → logprob: -8.534015655517578
    10. 'for' → logprob: -8.534015655517578

Token 105: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.012264274060726166
    2. 'er' → logprob: -4.512264251708984
    3. 'èr' → logprob: -7.262264251708984
    4. 'ere' → logprob: -8.762264251708984
    5. 'n' → logprob: -9.637264251708984
    6. '```' → logprob: -10.137264251708984
    7. '`' → logprob: -10.387264251708984
    8. '=' → logprob: -10.387264251708984
    9. 'è' → logprob: -10.512264251708984
    10. 'r' → logprob: -10.637264251708984

Token 106: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.1286597102880478
    2. ' un' → logprob: -3.628659725189209
    3. ' la' → logprob: -3.628659725189209
    4. 'N' → logprob: -4.378659725189209
    5. 'une' → logprob: -4.378659725189209
    6. ' les' → logprob: -4.378659725189209
    7. ' des' → logprob: -5.003659725189209
    8. ' N' → logprob: -5.128659725189209
    9. '0' → logprob: -5.628659725189209
    10. '<|end|>' → logprob: -5.878659725189209

Token 107: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8916910290718079
    2. ' nombres' → logprob: -0.8916910290718079
    3. ' ent' → logprob: -2.016690969467163
    4. 'n' → logprob: -4.016691207885742
    5. ' indices' → logprob: -4.516691207885742
    6. 'indices' → logprob: -4.641691207885742
    7. ' valeurs' → logprob: -5.391691207885742
    8. 'nombre' → logprob: -6.391691207885742
    9. 'num' → logprob: -7.391691207885742
    10. 'val' → logprob: -7.641691207885742

Token 108: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.13171416521072388
    2. 'ières' → logprob: -2.506714105606079
    3. 'i' → logprob: -3.381714105606079
    4. 'ière' → logprob: -6.881714344024658
    5. 'um' → logprob: -7.131714344024658
    6. 'ier' → logprob: -7.381714344024658
    7. 'ités' → logprob: -7.506714344024658
    8. 't' → logprob: -7.506714344024658
    9. 'ers' → logprob: -7.631714344024658
    10. 's' → logprob: -7.881714344024658

Token 109: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16321617364883423
    2. '(' → logprob: -2.4132161140441895
    3. 'de' → logprob: -3.2882161140441895
    4. '(N' → logprob: -5.0382161140441895
    5. '0' → logprob: -5.1632161140441895
    6. ' jusqu' → logprob: -5.1632161140441895
    7. ' allant' → logprob: -6.0382161140441895
    8. ')' → logprob: -7.5382161140441895
    9. ' ' → logprob: -7.6632161140441895
    10. 'N' → logprob: -7.9132161140441895

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1158362329006195
    2. 'N' → logprob: -3.1158361434936523
    3. ' ' → logprob: -3.3658361434936523
    4. ' N' → logprob: -3.4908361434936523
    5. '1' → logprob: -10.865836143493652
    6. 'n' → logprob: -12.740836143493652
    7. '(N' → logprob: -13.115836143493652
    8. ' n' → logprob: -14.240836143493652
    9. '```' → logprob: -14.365836143493652
    10. ' ' → logprob: -14.740836143493652

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005938040092587471
    2. ' ' → logprob: -5.1309380531311035
    3. 'N' → logprob: -12.005937576293945
    4. ' N' → logprob: -12.880937576293945
    5. '1' → logprob: -15.505937576293945
    6. '```' → logprob: -15.630937576293945
    7. ' ' → logprob: -16.380937576293945
    8. '[' → logprob: -16.630937576293945
    9. '`' → logprob: -17.880937576293945
    10. ',' → logprob: -17.943437576293945

Token 112: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4094327390193939
    2. ' à' → logprob: -1.5344327688217163
    3. ',' → logprob: -2.1594326496124268
    4. ')' → logprob: -6.284432888031006
    5. 'a' → logprob: -6.909432888031006
    6. 'À' → logprob: -7.409432888031006
    7. ' jusqu' → logprob: -7.784432888031006
    8. 'jus' → logprob: -8.284432411193848
    9. ''à' → logprob: -8.534432411193848
    10. ' ,' → logprob: -8.784432411193848

Token 113: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3868733048439026
    2. ' N' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.636873245239258
    4. ' ' → logprob: -14.886873245239258
    5. '	N' → logprob: -15.261873245239258
    6. 'n' → logprob: -15.511873245239258
    7. ',N' → logprob: -16.636873245239258
    8. '>N' → logprob: -16.761873245239258
    9. ',' → logprob: -17.011873245239258
    10. '_N' → logprob: -17.386873245239258

Token 114: ' inclus' (ID: 11891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008839339949190617
    2. 'Q' → logprob: -5.258839130401611
    3. '()' → logprob: -6.008839130401611
    4. '(' → logprob: -7.883839130401611
    5. ').' → logprob: -9.00883960723877
    6. ' )' → logprob: -9.25883960723877
    7. '(Q' → logprob: -9.50883960723877
    8. '):' → logprob: -9.63383960723877
    9. '())' → logprob: -9.75883960723877
    10. '#' → logprob: -9.88383960723877

Token 115: '.
' (ID: 558)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5928239226341248
    2. ')' → logprob: -0.8428239226341248
    3. '()' → logprob: -4.7178239822387695
    4. '(' → logprob: -5.8428239822387695
    5. '(Q' → logprob: -6.4678239822387695
    6. ')
' → logprob: -7.4678239822387695
    7. '#' → logprob: -7.4678239822387695
    8. 'q' → logprob: -7.8428239822387695
    9. 'for' → logprob: -7.9678239822387695
    10. ' )' → logprob: -8.09282398223877

Token 116: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -4.7755875129951164e-05
    2. ' Q' → logprob: -10.00004768371582
    3. ')' → logprob: -13.62504768371582
    4. 'for' → logprob: -15.12504768371582
    5. '
' → logprob: -15.87504768371582
    6. 'q' → logprob: -16.12504768371582
    7. '(Q' → logprob: -16.12504768371582
    8. '#' → logprob: -16.25004768371582
    9. ']' → logprob: -16.75004768371582
    10. ':' → logprob: -17.00004768371582

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021012276411057
    2. '=' → logprob: -2.350210189819336
    3. ' ' → logprob: -12.975210189819336
    4. '(' → logprob: -14.225210189819336
    5. ' ' → logprob: -16.475210189819336
    6. ')' → logprob: -16.725210189819336
    7. '＝' → logprob: -16.850210189819336
    8. '=N' → logprob: -17.100210189819336
    9. ' =
' → logprob: -17.225210189819336
    10. ' =(' → logprob: -17.350210189819336

Token 118: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.42050015926361084
    2. ' R' → logprob: -1.2955001592636108
    3. 'range' → logprob: -3.0455002784729004
    4. ' range' → logprob: -4.0455002784729
    5. 'list' → logprob: -6.0455002784729
    6. ' list' → logprob: -6.5455002784729
    7. '(R' → logprob: -7.7955002784729
    8. '[R' → logprob: -9.545499801635742
    9. '(range' → logprob: -9.545499801635742
    10. 'r' → logprob: -10.295499801635742

Token 119: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015099779702723026
    2. '(' → logprob: -6.501510143280029
    3. ' (' → logprob: -12.126509666442871
    4. '((' → logprob: -13.876509666442871
    5. '(n' → logprob: -14.001509666442871
    6. '(
' → logprob: -15.126509666442871
    7. '(Q' → logprob: -16.501510620117188
    8. '(K' → logprob: -17.251510620117188
    9. '(R' → logprob: -17.501510620117188
    10. '(M' → logprob: -18.626510620117188

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234713666141033
    2. ' +' → logprob: -5.255234718322754
    3. ')' → logprob: -14.255234718322754
    4. ')+' → logprob: -15.630234718322754
    5. '+)' → logprob: -17.755233764648438
    6. '()+' → logprob: -18.130233764648438
    7. '＋' → logprob: -18.630233764648438
    8. '+
' → logprob: -18.630233764648438
    9. '1' → logprob: -19.005233764648438
    10. ' ' → logprob: -19.380233764648438

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. ')' → logprob: -14.750004768371582
    4. '+' → logprob: -17.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '```' → logprob: -18.750003814697266
    7. '

' → logprob: -18.875003814697266
    8. '2' → logprob: -19.000003814697266
    9. '-' → logprob: -19.500003814697266
    10. '(' → logprob: -19.687503814697266

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '),' → logprob: -16.875001907348633
    5. ')#' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.875001907348633
    7. ')
' → logprob: -18.125001907348633
    8. '()' → logprob: -18.375001907348633
    9. ')))' → logprob: -18.625001907348633
    10. ')

' → logprob: -19.375001907348633

Token 123: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6157026290893555
    2. '#' → logprob: -2.3657026290893555
    3. 'dp' → logprob: -2.9907026290893555
    4. 'S' → logprob: -3.2407026290893555
    5. 'sum' → logprob: -3.2407026290893555
    6. 'count' → logprob: -3.3657026290893555
    7. 's' → logprob: -3.4907026290893555
    8. 'A' → logprob: -3.6157026290893555
    9. 'print' → logprob: -3.7407026290893555
    10. 'result' → logprob: -3.8657026290893555

Token 124: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0465582609176636
    2. 'result' → logprob: -1.1715582609176636
    3. 'count' → logprob: -2.296558380126953
    4. 'S' → logprob: -3.421558380126953
    5. 's' → logprob: -3.546558380126953
    6. 'dp' → logprob: -3.671558380126953
    7. '#' → logprob: -3.796558380126953
    8. 'if' → logprob: -4.046558380126953
    9. 'total' → logprob: -4.171558380126953
    10. 'res' → logprob: -4.296558380126953

Token 125: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.006059978622943163
    2. 'er' → logprob: -5.3810601234436035
    3. '#' → logprob: -7.2560601234436035
    4. 'at' → logprob: -7.7560601234436035
    5. 'ate' → logprob: -9.131059646606445
    6. 'a' → logprob: -10.381059646606445
    7. 'lation' → logprob: -10.756059646606445
    8. '```' → logprob: -10.881059646606445
    9. 'tion' → logprob: -11.006059646606445
    10. 'atement' → logprob: -11.381059646606445

Token 126: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9886046051979065
    2. ' =' → logprob: -1.9886045455932617
    3. '(' → logprob: -2.3636045455932617
    4. '_' → logprob: -2.6136045455932617
    5. ' de' → logprob: -2.9886045455932617
    6. '=' → logprob: -3.2386045455932617
    7. 'd' → logprob: -3.3636045455932617
    8. '[]' → logprob: -3.4886045455932617
    9. 'de' → logprob: -3.4886045455932617
    10. 's' → logprob: -3.6136045455932617

Token 127: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.8630472421646118
    2. 'a' → logprob: -1.6130472421646118
    3. '[]' → logprob: -1.9880472421646118
    4. 'e' → logprob: -2.3630471229553223
    5. 'une' → logprob: -2.4880471229553223
    6. ''un' → logprob: -3.2380471229553223
    7. '[' → logprob: -4.488047122955322
    8. 'es' → logprob: -5.613047122955322
    9. '=[]' → logprob: -5.738047122955322
    10. '_' → logprob: -6.738047122955322

Token 128: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1087251603603363
    2. ' liste' → logprob: -2.358725070953369
    3. 'list' → logprob: -5.483725070953369
    4. '#' → logprob: -5.858725070953369
    5. 's' → logprob: -8.108725547790527
    6. 'fonction' → logprob: -8.983725547790527
    7. 'Liste' → logprob: -8.983725547790527
    8. '```' → logprob: -9.108725547790527
    9. 'import' → logprob: -9.358725547790527
    10. 'variable' → logprob: -9.483725547790527

Token 129: ' "' (ID: 392)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.175218105316162
    2. 's' → logprob: -1.800218105316162
    3. 'des' → logprob: -2.425218105316162
    4. '[' → logprob: -2.800218105316162
    5. ' =' → logprob: -2.925218105316162
    6. 'scores' → logprob: -2.925218105316162
    7. 'd' → logprob: -3.425218105316162
    8. '[]' → logprob: -3.550218105316162
    9. 'de' → logprob: -3.800218105316162
    10. '=[]' → logprob: -4.050218105316162

Token 130: 'd' (ID: 67)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2083176374435425
    2. 'L' → logprob: -2.333317756652832
    3. 'res' → logprob: -2.708317756652832
    4. 's' → logprob: -2.833317756652832
    5. 'results' → logprob: -2.833317756652832
    6. 'lst' → logprob: -3.208317756652832
    7. 'answers' → logprob: -3.333317756652832
    8. 'c' → logprob: -3.458317756652832
    9. ' L' → logprob: -3.458317756652832
    10. 'A' → logprob: -3.583317756652832

Token 131: '"' (ID: 1)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.136529341340065
    2. 'ef' → logprob: -3.0115294456481934
    3. '=[]' → logprob: -4.136529445648193
    4. 'es' → logprob: -4.511529445648193
    5. '[]' → logprob: -5.011529445648193
    6. '[i' → logprob: -5.261529445648193
    7. 'é' → logprob: -5.261529445648193
    8. '[' → logprob: -5.761529445648193
    9. 'iff' → logprob: -5.886529445648193
    10. 'éf' → logprob: -6.136529445648193

Token 132: ' contenant' (ID: 131049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03055158071219921
    2. '=' → logprob: -4.155551433563232
    3. '=[]' → logprob: -4.905551433563232
    4. 'd' → logprob: -5.280551433563232
    5. '[' → logprob: -7.155551433563232
    6. '=[' → logprob: -7.780551433563232
    7. '[]' → logprob: -8.53055191040039
    8. '_d' → logprob: -9.15555191040039
    9. ' d' → logprob: -9.28055191040039
    10. ' =[' → logprob: -9.65555191040039

Token 133: ' N' (ID: 478)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.2642756998538971
    2. '[' → logprob: -1.6392756700515747
    3. ' [' → logprob: -3.8892757892608643
    4. '(N' → logprob: -5.014275550842285
    5. ' zeros' → logprob: -5.764275550842285
    6. 'N' → logprob: -6.514275550842285
    7. 'zeros' → logprob: -7.014275550842285
    8. '0' → logprob: -7.139275550842285
    9. '[K' → logprob: -7.264275550842285
    10. '[]' → logprob: -7.389275550842285

Token 134: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13887733221054077
    2. '[' → logprob: -2.7638773918151855
    3. ' +' → logprob: -3.7638773918151855
    4. '*[' → logprob: -4.0138773918151855
    5. ' zeros' → logprob: -5.0138773918151855
    6. ')' → logprob: -5.3888773918151855
    7. '*' → logprob: -5.6388773918151855
    8. ' [' → logprob: -6.3888773918151855
    9. 'zeros' → logprob: -6.5138773918151855
    10. '[N' → logprob: -6.5138773918151855

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008858494111336768
    2. '+' → logprob: -7.500885963439941
    3. ' ' → logprob: -9.250885963439941
    4. '(N' → logprob: -9.500885963439941
    5. '(' → logprob: -10.000885963439941
    6. '(K' → logprob: -10.750885963439941
    7. '[' → logprob: -10.875885963439941
    8. '2' → logprob: -10.875885963439941
    9. '
' → logprob: -11.125885963439941
    10. 'K' → logprob: -11.500885963439941

Token 136: ' sous' (ID: 14487)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.613398015499115
    2. ' zeros' → logprob: -1.3633980751037598
    3. '0' → logprob: -2.4883980751037598
    4. ' éléments' → logprob: -3.3633980751037598
    5. 'zeros' → logprob: -3.6133980751037598
    6. ' [' → logprob: -3.9883980751037598
    7. ' z' → logprob: -4.23839807510376
    8. ' elements' → logprob: -4.73839807510376
    9. ' espaces' → logprob: -5.11339807510376
    10. 'elements' → logprob: -5.86339807510376

Token 137: '-list' (ID: 18463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0322272963821888
    2. 'd' → logprob: -3.9072272777557373
    3. 'z' → logprob: -5.532227516174316
    4. '[' → logprob: -6.657227516174316
    5. '#' → logprob: -6.782227516174316
    6. ' ' → logprob: -7.407227516174316
    7. ' z' → logprob: -7.532227516174316
    8. 'Q' → logprob: -7.657227516174316
    9. '100' → logprob: -7.907227516174316
    10. 'list' → logprob: -7.907227516174316

Token 138: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.1858009248971939
    2. 'es' → logprob: -1.8108009099960327
    3. 'ist' → logprob: -6.310801029205322
    4. 'tes' → logprob: -7.060801029205322
    5. 's' → logprob: -7.810801029205322
    6. 'iste' → logprob: -7.810801029205322
    7. 'stes' → logprob: -7.935801029205322
    8. 'ists' → logprob: -8.185800552368164
    9. '=[]' → logprob: -8.310800552368164
    10. '#' → logprob: -8.435800552368164

Token 139: '.
' (ID: 558)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2173528671264648
    2. '([]' → logprob: -1.2173528671264648
    3. '[' → logprob: -1.5923528671264648
    4. '=[]' → logprob: -2.342352867126465
    5. ' =' → logprob: -2.967352867126465
    6. ',' → logprob: -4.092352867126465
    7. '=' → logprob: -4.092352867126465
    8. '([' → logprob: -4.592352867126465
    9. '[:]' → logprob: -5.342352867126465
    10. '(' → logprob: -6.342352867126465

Token 140: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.447520911693573
    2. 'd' → logprob: -1.5725209712982178
    3. '[]' → logprob: -2.3225209712982178
    4. ' [[]' → logprob: -3.8225209712982178
    5. '[d' → logprob: -3.9475209712982178
    6. ' d' → logprob: -4.822520732879639
    7. ' [' → logprob: -5.947520732879639
    8. ' =' → logprob: -6.572520732879639
    9. ' []' → logprob: -6.822520732879639
    10. '[
' → logprob: -8.197521209716797

Token 141: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.562030553817749
    2. '[' → logprob: -0.937030553817749
    3. '[]' → logprob: -4.562030792236328
    4. ' d' → logprob: -4.687030792236328
    5. '[d' → logprob: -5.062030792236328
    6. ' [[]' → logprob: -5.062030792236328
    7. '[
' → logprob: -5.812030792236328
    8. ' [' → logprob: -6.687030792236328
    9. '[[' → logprob: -6.937030792236328
    10. '[]
' → logprob: -7.937030792236328

Token 142: ' sous' (ID: 14487)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8921141028404236
    2. 'd' → logprob: -1.2671141624450684
    3. ' d' → logprob: -2.6421141624450684
    4. 's' → logprob: -2.7671141624450684
    5. 'sub' → logprob: -3.1421141624450684
    6. ' []' → logprob: -3.2671141624450684
    7. '[' → logprob: -3.6421141624450684
    8. '_' → logprob: -3.8921141624450684
    9. ' sous' → logprob: -3.8921141624450684
    10. ' sub' → logprob: -4.642114162445068

Token 143: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5128313302993774
    2. 'd' → logprob: -1.6378313302993774
    3. '[]' → logprob: -1.6378313302993774
    4. '-l' → logprob: -2.137831211090088
    5. 'liste' → logprob: -2.137831211090088
    6. '=[]' → logprob: -2.512831211090088
    7. '_d' → logprob: -3.512831211090088
    8. '-list' → logprob: -5.012831211090088
    9. ']' → logprob: -5.012831211090088
    10. 'list' → logprob: -5.387831211090088

Token 144: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.002411446301266551
    2. 'ist' → logprob: -6.627411365509033
    3. '#' → logprob: -8.252411842346191
    4. 'is' → logprob: -8.627411842346191
    5. '[]' → logprob: -9.002411842346191
    6. 'liste' → logprob: -9.002411842346191
    7. '```' → logprob: -9.377411842346191
    8. '[' → logprob: -9.377411842346191
    9. '=[]' → logprob: -9.502411842346191
    10. 'istes' → logprob: -10.377411842346191

Token 145: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.143007293343544
    2. '=' → logprob: -2.268007278442383
    3. '=[]' → logprob: -3.768007278442383
    4. '[]' → logprob: -5.268007278442383
    5. ' est' → logprob: -8.018007278442383
    6. '[' → logprob: -8.143007278442383
    7. ' []' → logprob: -8.518007278442383
    8. ' représente' → logprob: -9.018007278442383
    9. '[:]' → logprob: -9.518007278442383
    10. 'd' → logprob: -9.643007278442383

Token 146: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12310891598463058
    2. ' []' → logprob: -2.8731088638305664
    3. '[' → logprob: -3.6231088638305664
    4. ' une' → logprob: -4.248108863830566
    5. ' [' → logprob: -4.498108863830566
    6. ' ' → logprob: -5.623108863830566
    7. '0' → logprob: -7.123108863830566
    8. 'une' → logprob: -7.123108863830566
    9. '[:]' → logprob: -7.498108863830566
    10. '=[]' → logprob: -8.498108863830566

Token 147: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.6884406208992004
    2. 'tail' → logprob: -1.0634405612945557
    3. ' taille' → logprob: -2.4384405612945557
    4. 'long' → logprob: -3.3134405612945557
    5. 'liste' → logprob: -4.938440799713135
    6. 'val' → logprob: -5.313440799713135
    7. '[]' → logprob: -5.438440799713135
    8. 'cap' → logprob: -6.438440799713135
    9. ' liste' → logprob: -6.438440799713135
    10. ' capacité' → logprob: -6.563440799713135

Token 148: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10718955099582672
    2. 'de' → logprob: -2.982189655303955
    3. 'K' → logprob: -3.607189655303955
    4. ' ég' → logprob: -4.982189655303955
    5. ' de' → logprob: -5.232189655303955
    6. ' =' → logprob: -5.357189655303955
    7. '=N' → logprob: -6.107189655303955
    8. ' K' → logprob: -6.357189655303955
    9. 'N' → logprob: -6.857189655303955
    10. '0' → logprob: -7.357189655303955

Token 149: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16792230308055878
    2. 'N' → logprob: -2.292922258377075
    3. '2' → logprob: -4.417922496795654
    4. '0' → logprob: -4.417922496795654
    5. ' K' → logprob: -4.917922496795654
    6. '(N' → logprob: -5.292922496795654
    7. '(K' → logprob: -5.667922496795654
    8. '10' → logprob: -6.167922496795654
    9. '1' → logprob: -6.542922496795654
    10. '3' → logprob: -6.792922496795654

Token 150: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1896531581878662
    2. 'N' → logprob: -2.564653158187866
    3. '2' → logprob: -3.439653158187866
    4. '(K' → logprob: -3.939653158187866
    5. '(N' → logprob: -4.189653396606445
    6. ' K' → logprob: -5.064653396606445
    7. '3' → logprob: -5.314653396606445
    8. '(' → logprob: -5.689653396606445
    9. '10' → logprob: -5.939653396606445
    10. '4' → logprob: -6.314653396606445

Token 151: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08608472347259521
    2. 'd' → logprob: -3.4610848426818848
    3. ')' → logprob: -3.9610848426818848
    4. 'N' → logprob: -4.836084842681885
    5. '[N' → logprob: -5.086084842681885
    6. ']' → logprob: -5.461084842681885
    7. ' ,' → logprob: -6.086084842681885
    8. ' et' → logprob: -6.211084842681885
    9. ' d' → logprob: -6.586084842681885
    10. '*N' → logprob: -6.711084842681885

Token 152: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1341792345046997
    2. '0' → logprob: -1.3841792345046997
    3. '[' → logprob: -2.25917911529541
    4. 'K' → logprob: -2.38417911529541
    5. ' ' → logprob: -3.13417911529541
    6. 'N' → logprob: -3.25917911529541
    7. '[N' → logprob: -3.50917911529541
    8. '[K' → logprob: -3.63417911529541
    9. 'de' → logprob: -3.75917911529541
    10. ' K' → logprob: -4.00917911529541

Token 153: ' puissance' (ID: 63494)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7016667127609253
    2. 'K' → logprob: -0.9516667127609253
    3. '(K' → logprob: -2.201666831970215
    4. ' (' → logprob: -6.326666831970215
    5. '[K' → logprob: -6.576666831970215
    6. ' puissance' → logprob: -6.826666831970215
    7. '(' → logprob: -6.951666831970215
    8. '(N' → logprob: -7.451666831970215
    9. '2' → logprob: -7.826666831970215
    10. 'power' → logprob: -8.576666831970215

Token 154: ' de' (ID: 334)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.022533124312758446
    2. ' K' → logprob: -4.272532939910889
    3. '(K' → logprob: -5.272532939910889
    4. '(' → logprob: -6.522532939910889
    5. ' (' → logprob: -6.647532939910889
    6. '2' → logprob: -9.147533416748047
    7. '(N' → logprob: -9.272533416748047
    8. ' ' → logprob: -9.397533416748047
    9. 'N' → logprob: -10.272533416748047
    10. 'k' → logprob: -10.647533416748047

Token 155: ' son' (ID: 2391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08288867026567459
    2. '(K' → logprob: -2.832888603210449
    3. ' K' → logprob: -4.832888603210449
    4. '(N' → logprob: -5.457888603210449
    5. 'N' → logprob: -5.707888603210449
    6. ' (' → logprob: -5.832888603210449
    7. '(' → logprob: -6.332888603210449
    8. ' ' → logprob: -8.58288860321045
    9. 'k' → logprob: -10.33288860321045
    10. '16' → logprob: -10.83288860321045

Token 156: ' indice' (ID: 90848)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9710598587989807
    2. '(N' → logprob: -0.9710598587989807
    3. 'i' → logprob: -2.346059799194336
    4. 'K' → logprob: -2.471059799194336
    5. '(i' → logprob: -3.971059799194336
    6. ' (' → logprob: -4.846059799194336
    7. '(K' → logprob: -4.846059799194336
    8. '(' → logprob: -4.971059799194336
    9. 'Q' → logprob: -5.221059799194336
    10. ' i' → logprob: -5.346059799194336

Token 157: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2870998978614807
    2. ',' → logprob: -2.037099838256836
    3. ' d' → logprob: -2.662099838256836
    4. '**' → logprob: -3.912099838256836
    5. ' =' → logprob: -4.912099838256836
    6. 'N' → logprob: -5.787099838256836
    7. ']' → logprob: -6.162099838256836
    8. '[i' → logprob: -6.287099838256836
    9. '[' → logprob: -6.537099838256836
    10. '2' → logprob: -6.662099838256836

Token 158: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.479854941368103
    2. ' i' → logprob: -1.604854941368103
    3. '(N' → logprob: -2.7298550605773926
    4. 'N' → logprob: -3.3548550605773926
    5. ' (' → logprob: -3.7298550605773926
    6. 'Q' → logprob: -4.604855060577393
    7. '(i' → logprob: -4.604855060577393
    8. ' N' → logprob: -4.729855060577393
    9. '(Q' → logprob: -4.979855060577393
    10. '(' → logprob: -5.354855060577393

Token 159: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.328658938407898
    2. ')' → logprob: -1.453658938407898
    3. ',' → logprob: -1.703658938407898
    4. 'd' → logprob: -2.4536590576171875
    5. ')
' → logprob: -2.5786590576171875
    6. '**' → logprob: -3.4536590576171875
    7. '])' → logprob: -3.7036590576171875
    8. '[i' → logprob: -4.3286590576171875
    9. '])
' → logprob: -4.3286590576171875
    10. '],' → logprob: -4.4536590576171875

Token 160: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18768076598644257
    2. ' =' → logprob: -2.437680721282959
    3. ',' → logprob: -3.562680721282959
    4. '=' → logprob: -3.687680721282959
    5. ' d' → logprob: -4.437680721282959
    6. '=[' → logprob: -5.312680721282959
    7. '[d' → logprob: -5.437680721282959
    8. '=d' → logprob: -5.437680721282959
    9. 's' → logprob: -7.062680721282959
    10. ']' → logprob: -7.187680721282959

Token 161: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13175469636917114
    2. '),' → logprob: -2.7567546367645264
    3. ',' → logprob: -4.2567548751831055
    4. ' )' → logprob: -5.0067548751831055
    5. '):' → logprob: -5.2567548751831055
    6. '=' → logprob: -5.5067548751831055
    7. ').' → logprob: -5.5067548751831055
    8. '+' → logprob: -5.7567548751831055
    9. ')
' → logprob: -6.1317548751831055
    10. '):
' → logprob: -6.2567548751831055

Token 162: '’est' (ID: 6838)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13930179178714752
    2. ' =' → logprob: -2.7643017768859863
    3. '=i' → logprob: -4.389301776885986
    4. 'i' → logprob: -4.514301776885986
    5. '[i' → logprob: -4.514301776885986
    6. '=[' → logprob: -5.139301776885986
    7. 'for' → logprob: -5.764301776885986
    8. 'e' → logprob: -5.764301776885986
    9. '#' → logprob: -6.264301776885986
    10. ')' → logprob: -6.264301776885986

Token 163: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7817433476448059
    2. '2' → logprob: -2.031743288040161
    3. ' [' → logprob: -2.531743288040161
    4. ')' → logprob: -3.031743288040161
    5. '[' → logprob: -3.156743288040161
    6. ' i' → logprob: -3.281743288040161
    7. 'i' → logprob: -3.281743288040161
    8. '   ' → logprob: -3.656743288040161
    9. ']' → logprob: -4.03174352645874
    10. '**' → logprob: -4.03174352645874

Token 164: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.0621678829193115
    2. 'à' → logprob: -2.0621678829193115
    3. 'jà' → logprob: -2.5621678829193115
    4. '#' → logprob: -2.6871678829193115
    5. '1' → logprob: -2.8121678829193115
    6. '-' → logprob: -3.1871678829193115
    7. 'p' → logprob: -3.4371678829193115
    8. 'g' → logprob: -3.6871678829193115
    9. '2' → logprob: -3.6871678829193115
    10. 't' → logprob: -3.8121678829193115

Token 165: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2888643741607666
    2. '[' → logprob: -2.4138643741607666
    3. ' ' → logprob: -2.4138643741607666
    4. '[i' → logprob: -3.1638643741607666
    5. ' [' → logprob: -4.4138641357421875
    6. '0' → logprob: -5.2888641357421875
    7. ' R' → logprob: -6.1638641357421875
    8. 'i' → logprob: -6.2888641357421875
    9. 'R' → logprob: -6.4138641357421875
    10. ' i' → logprob: -6.6638641357421875

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3692474067211151
    2. '[' → logprob: -1.2442474365234375
    3. ' ' → logprob: -4.9942474365234375
    4. ' [' → logprob: -4.9942474365234375
    5. '[R' → logprob: -6.2442474365234375
    6. '1' → logprob: -6.3692474365234375
    7. '[i' → logprob: -6.3692474365234375
    8. '0' → logprob: -7.8692474365234375
    9. '[
' → logprob: -8.119247436523438
    10. 'R' → logprob: -8.119247436523438

Token 167: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2664088010787964
    2. '[i' → logprob: -1.5164088010787964
    3. ' **' → logprob: -4.641408920288086
    4. '[' → logprob: -6.891408920288086
    5. '*i' → logprob: -6.891408920288086
    6. ' i' → logprob: -7.516408920288086
    7. '
' → logprob: -7.641408920288086
    8. ')' → logprob: -8.141408920288086
    9. 'i' → logprob: -8.266408920288086
    10. ']' → logprob: -8.766408920288086

Token 168: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003187339985743165
    2. ' i' → logprob: -5.75318717956543
    3. '(i' → logprob: -13.25318717956543
    4. 'Q' → logprob: -13.37818717956543
    5. '
' → logprob: -14.00318717956543
    6. 'R' → logprob: -14.12818717956543
    7. ' ' → logprob: -14.25318717956543
    8. ' (' → logprob: -14.25318717956543
    9. '[i' → logprob: -14.25318717956543
    10. '```' → logprob: -14.37818717956543

Token 169: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030219366773962975
    2. ').' → logprob: -3.905219316482544
    3. '),' → logprob: -4.905219554901123
    4. ',' → logprob: -7.655219554901123
    5. ')
' → logprob: -7.655219554901123
    6. 'd' → logprob: -7.780219554901123
    7. ' )' → logprob: -7.905219554901123
    8. '))' → logprob: -9.030219078063965
    9. '])' → logprob: -9.655219078063965
    10. '):' → logprob: -10.155219078063965

Token 170: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.703443770878948e-06
    2. '[
' → logprob: -12.750007629394531
    3. ' d' → logprob: -13.625007629394531
    4. '[' → logprob: -13.875007629394531
    5. ']' → logprob: -14.375007629394531
    6. '
' → logprob: -14.750007629394531
    7. ' =' → logprob: -15.000007629394531
    8. '```' → logprob: -15.250007629394531
    9. '[]
' → logprob: -15.875007629394531
    10. '#' → logprob: -16.12500762939453

Token 171: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5570885807392187e-05
    2. ' d' → logprob: -11.125015258789062
    3. '
' → logprob: -15.125015258789062
    4. '```' → logprob: -15.625015258789062
    5. '#' → logprob: -16.375015258789062
    6. '[' → logprob: -16.875015258789062
    7. '_d' → logprob: -17.250015258789062
    8. '[
' → logprob: -17.500015258789062
    9. 'D' → logprob: -17.625015258789062
    10. '[d' → logprob: -17.625015258789062

Token 172: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.22380568087100983
    2. 's' → logprob: -2.2238056659698486
    3. ' élément' → logprob: -3.8488056659698486
    4. '[i' → logprob: -4.223805904388428
    5. ' element' → logprob: -4.473805904388428
    6. 'sub' → logprob: -4.473805904388428
    7. 'elem' → logprob: -5.223805904388428
    8. 'element' → logprob: -5.223805904388428
    9. 'élé' → logprob: -5.348805904388428
    10. ' sub' → logprob: -5.473805904388428

Token 173: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.07617416977882385
    2. 'liste' → logprob: -3.076174259185791
    3. '-' → logprob: -5.076174259185791
    4. '-list' → logprob: -5.326174259185791
    5. '_l' → logprob: -5.576174259185791
    6. '[' → logprob: -5.576174259185791
    7. '[-' → logprob: -5.826174259185791
    8. '_list' → logprob: -6.826174259185791
    9. '[]' → logprob: -6.951174259185791
    10. 'd' → logprob: -6.951174259185791

Token 174: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.05843973532319069
    2. 'd' → logprob: -4.1834397315979
    3. '=[]' → logprob: -4.8084397315979
    4. '[]' → logprob: -5.0584397315979
    5. 'ist' → logprob: -5.0584397315979
    6. '[' → logprob: -5.1834397315979
    7. 'liste' → logprob: -5.3084397315979
    8. '#' → logprob: -5.6834397315979
    9. '=[' → logprob: -7.3084397315979
    10. 'e' → logprob: -7.4334397315979

Token 175: ' de' (ID: 334)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5000982284545898
    2. ' =' → logprob: -1.2500982284545898
    3. ' contient' → logprob: -2.87509822845459
    4. '=' → logprob: -3.50009822845459
    5. '[' → logprob: -4.87509822845459
    6. ' ' → logprob: -6.37509822845459
    7. 'compr' → logprob: -6.50009822845459
    8. ' d' → logprob: -7.00009822845459
    9. ' rempli' → logprob: -7.12509822845459
    10. ' [' → logprob: -7.12509822845459

Token 176: ' "' (ID: 392)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21531058847904205
    2. '0' → logprob: -1.9653105735778809
    3. ' [' → logprob: -3.215310573577881
    4. ' ' → logprob: -4.840310573577881
    5. ' zeros' → logprob: -6.715310573577881
    6. ' z' → logprob: -6.840310573577881
    7. '[N' → logprob: -7.465310573577881
    8. 'zeros' → logprob: -7.590310573577881
    9. 'd' → logprob: -7.715310573577881
    10. 'z' → logprob: -8.090311050415039

Token 177: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027666280046105385
    2. ' d' → logprob: -3.6526663303375244
    3. '[d' → logprob: -7.777666091918945
    4. '[' → logprob: -8.277666091918945
    5. 'Q' → logprob: -8.527666091918945
    6. '0' → logprob: -8.902666091918945
    7. '"d' → logprob: -9.902666091918945
    8. ' [' → logprob: -10.027666091918945
    9. ' ' → logprob: -10.027666091918945
    10. 'range' → logprob: -10.777666091918945

Token 178: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.735000491142273
    2. '"' → logprob: -0.985000491142273
    3. '=' → logprob: -1.985000491142273
    4. '=[' → logprob: -6.2350006103515625
    5. ' est' → logprob: -6.2350006103515625
    6. ' contient' → logprob: -6.8600006103515625
    7. ' "' → logprob: -6.9850006103515625
    8. '[' → logprob: -7.3600006103515625
    9. '="' → logprob: -7.8600006103515625
    10. ')' → logprob: -7.9850006103515625

Token 179: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387009859085083
    2. '=' → logprob: -1.137009859085083
    3. '=[' → logprob: -9.762009620666504
    4. '=[]' → logprob: -10.262009620666504
    5. ' est' → logprob: -11.137009620666504
    6. ' =[' → logprob: -12.262009620666504
    7. 's' → logprob: -12.387009620666504
    8. ' ' → logprob: -12.762009620666504
    9. ']' → logprob: -12.887009620666504
    10. '[:]' → logprob: -13.012009620666504

Token 180: ' rempl' (ID: 66326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7382818460464478
    2. ' [' → logprob: -1.1132818460464478
    3. ' rempl' → logprob: -2.238281726837158
    4. '[]' → logprob: -3.613281726837158
    5. ' initial' → logprob: -3.613281726837158
    6. 'initial' → logprob: -4.613281726837158
    7. ' []' → logprob: -4.738281726837158
    8. ' rempli' → logprob: -5.738281726837158
    9. '[:]' → logprob: -6.363281726837158
    10. ' ' → logprob: -6.363281726837158

Token 181: 'ie' (ID: 396)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.43727704882621765
    2. '[' → logprob: -2.56227707862854
    3. 'ée' → logprob: -2.56227707862854
    4. '=' → logprob: -3.06227707862854
    5. 'de' → logprob: -3.31227707862854
    6. ' avec' → logprob: -3.93727707862854
    7. '[:]' → logprob: -4.312276840209961
    8. '#' → logprob: -4.687276840209961
    9. 'ue' → logprob: -5.187276840209961
    10. ')' → logprob: -5.312276840209961

Token 182: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.060609474778175354
    2. 'de' → logprob: -3.1856095790863037
    3. ' avec' → logprob: -4.560609340667725
    4. '[' → logprob: -6.185609340667725
    5. ' par' → logprob: -6.685609340667725
    6. ',' → logprob: -7.185609340667725
    7. '(' → logprob: -7.310609340667725
    8. 'avec' → logprob: -7.435609340667725
    9. ' ' → logprob: -7.810609340667725
    10. ' d' → logprob: -8.060609817504883

Token 183: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11478789895772934
    2. ' ' → logprob: -2.3647878170013428
    3. 'False' → logprob: -5.489788055419922
    4. ' z' → logprob: -6.114788055419922
    5. '-' → logprob: -6.239788055419922
    6. ' zeros' → logprob: -6.239788055419922
    7. 'z' → logprob: -6.739788055419922
    8. ' False' → logprob: -7.364788055419922
    9. '[' → logprob: -7.364788055419922
    10. '-z' → logprob: -7.614788055419922

Token 184: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.009343652985990047
    2. 'eros' → logprob: -5.25934362411499
    3. 'éro' → logprob: -5.88434362411499
    4. 'é' → logprob: -6.88434362411499
    5. 'ero' → logprob: -9.509344100952148
    6. '#' → logprob: -10.134344100952148
    7. '[' → logprob: -10.384344100952148
    8. 'e' → logprob: -10.384344100952148
    9. 'ér' → logprob: -10.509344100952148
    10. '"' → logprob: -10.634344100952148

Token 185: ' au' (ID: 2791)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09896095842123032
    2. ' =' → logprob: -2.4739608764648438
    3. '
' → logprob: -5.598960876464844
    4. '=' → logprob: -5.848960876464844
    5. ' d' → logprob: -6.348960876464844
    6. ',' → logprob: -7.598960876464844
    7. ']' → logprob: -7.973960876464844
    8. '=d' → logprob: -8.473960876464844
    9. ']
' → logprob: -9.098960876464844
    10. '[d' → logprob: -9.973960876464844

Token 186: ' départ' (ID: 32693)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7999759316444397
    2. ' ' → logprob: -2.674975872039795
    3. '2' → logprob: -2.799975872039795
    4. '```' → logprob: -2.924975872039795
    5. ' zeros' → logprob: -3.174975872039795
    6. '[' → logprob: -3.299975872039795
    7. ' départ' → logprob: -3.549975872039795
    8. 'x' → logprob: -3.799975872039795
    9. ' K' → logprob: -3.799975872039795
    10. '100' → logprob: -3.924975872039795

Token 187: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008976875804364681
    2. ' =' → logprob: -5.883976936340332
    3. ' d' → logprob: -5.883976936340332
    4. ']' → logprob: -6.633976936340332
    5. ',' → logprob: -6.883976936340332
    6. ']
' → logprob: -8.008976936340332
    7. '
' → logprob: -9.008976936340332
    8. ',d' → logprob: -9.258976936340332
    9. '=' → logprob: -9.383976936340332
    10. 'for' → logprob: -9.508976936340332

Token 188: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1472419600977446e-06
    2. ' d' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.250000953674316
    4. '
' → logprob: -15.500000953674316
    5. '```' → logprob: -16.500001907348633
    6. '[' → logprob: -16.750001907348633
    7. '[]
' → logprob: -17.875001907348633
    8. ' =' → logprob: -18.000001907348633
    9. '  
' → logprob: -18.125001907348633
    10. '[d' → logprob: -18.250001907348633

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198001280426979
    2. '=' → logprob: -2.8119800090789795
    3. ' =[' → logprob: -11.936980247497559
    4. '=[' → logprob: -12.561980247497559
    5. '[' → logprob: -13.811980247497559
    6. ' ' → logprob: -14.686980247497559
    7. '=[]' → logprob: -14.936980247497559
    8. ' ' → logprob: -15.686980247497559
    9. '＝' → logprob: -16.186979293823242
    10. 'd' → logprob: -16.811979293823242

Token 190: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45166850090026855
    2. '[[' → logprob: -1.2016685009002686
    3. ' [' → logprob: -2.9516685009002686
    4. ' [[' → logprob: -4.701668739318848
    5. '[d' → logprob: -7.576668739318848
    6. ' [[]' → logprob: -8.076668739318848
    7. '[R' → logprob: -8.201668739318848
    8. '[
' → logprob: -8.951668739318848
    9. '[i' → logprob: -9.326668739318848
    10. '[list' → logprob: -10.326668739318848

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. '
' → logprob: -17.37502098083496
    5. '۰' → logprob: -18.12502098083496
    6. '  ' → logprob: -18.37502098083496
    7. '00' → logprob: -18.75002098083496
    8. '000' → logprob: -18.81252098083496
    9. '    ' → logprob: -19.43752098083496
    10. '

' → logprob: -19.50002098083496

Token 192: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16157039999961853
    2. ']*' → logprob: -2.4115703105926514
    3. ']*(' → logprob: -3.6615703105926514
    4. ' for' → logprob: -3.9115703105926514
    5. 'for' → logprob: -4.2865705490112305
    6. '*' → logprob: -10.91157054901123
    7. ']+' → logprob: -11.53657054901123
    8. ')' → logprob: -11.91157054901123
    9. '0' → logprob: -12.03657054901123
    10. ' ' → logprob: -12.16157054901123

Token 193: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007593614282086492
    2. '(K' → logprob: -7.500759124755859
    3. '(R' → logprob: -9.75075912475586
    4. '2' → logprob: -9.87575912475586
    5. ' (' → logprob: -10.00075912475586
    6. '(N' → logprob: -10.25075912475586
    7. '((' → logprob: -11.25075912475586
    8. '(pow' → logprob: -14.12575912475586
    9. 'K' → logprob: -14.62575912475586
    10. '(Q' → logprob: -15.00075912475586

Token 194: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.3782830137643032e-05
    2. '*i' → logprob: -11.25001335144043
    3. 'i' → logprob: -14.87501335144043
    4. '```' → logprob: -16.25001335144043
    5. '[i' → logprob: -16.37501335144043
    6. ' **' → logprob: -16.75001335144043
    7. '*' → logprob: -17.25001335144043
    8. '(i' → logprob: -17.87501335144043
    9. '**
' → logprob: -19.25001335144043
    10. ' i' → logprob: -19.50001335144043

Token 195: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.35706390615087e-05
    2. ' i' → logprob: -10.375033378601074
    3. '_i' → logprob: -13.875033378601074
    4. '(i' → logprob: -14.000033378601074
    5. '0' → logprob: -15.750033378601074
    6. '(' → logprob: -16.12503433227539
    7. '```' → logprob: -17.00003433227539
    8. 'I' → logprob: -17.00003433227539
    9. 'R' → logprob: -17.25003433227539
    10. 'K' → logprob: -17.50003433227539

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3868729770183563
    2. ' for' → logprob: -1.1368730068206787
    3. '   ' → logprob: -14.011873245239258
    4. '	for' → logprob: -14.261873245239258
    5. ' ' → logprob: -14.761873245239258
    6. ')' → logprob: -16.511873245239258
    7. '  ' → logprob: -17.511873245239258
    8. ']' → logprob: -18.261873245239258
    9. ' ' → logprob: -18.636873245239258
    10. '    ' → logprob: -19.511873245239258

Token 197: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07934687286615372
    2. ' i' → logprob: -2.5793468952178955
    3. ' range' → logprob: -8.204346656799316
    4. 'Q' → logprob: -9.704346656799316
    5. 'R' → logprob: -9.829346656799316
    6. 'range' → logprob: -10.579346656799316
    7. ' R' → logprob: -10.829346656799316
    8. ' Q' → logprob: -11.829346656799316
    9. 'd' → logprob: -12.204346656799316
    10. ' in' → logprob: -12.704346656799316

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326764225959778
    2. 'in' → logprob: -0.7576764225959778
    3. 'd' → logprob: -9.757676124572754
    4. 'R' → logprob: -11.882676124572754
    5. 'Q' → logprob: -13.007676124572754
    6. ' R' → logprob: -13.257676124572754
    7. ' ' → logprob: -13.382676124572754
    8. 'range' → logprob: -13.882676124572754
    9. ')' → logprob: -14.132676124572754
    10. ' range' → logprob: -14.382676124572754

Token 199: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.044938743114471436
    2. ' Q' → logprob: -3.544938802719116
    3. 'R' → logprob: -4.419938564300537
    4. ' range' → logprob: -6.419938564300537
    5. ' R' → logprob: -7.169938564300537
    6. 'range' → logprob: -7.419938564300537
    7. '(Q' → logprob: -10.669939041137695
    8. ' ' → logprob: -11.794939041137695
    9. 'N' → logprob: -12.169939041137695
    10. 'd' → logprob: -13.544939041137695

Token 200: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.546478935983032e-05
    2. ')]' → logprob: -10.750025749206543
    3. ' ]' → logprob: -12.625025749206543
    4. ']
' → logprob: -14.625025749206543
    5. ')' → logprob: -16.000024795532227
    6. ']

' → logprob: -16.875024795532227
    7. '])' → logprob: -17.250024795532227
    8. '()]' → logprob: -17.375024795532227
    9. ']
' → logprob: -17.375024795532227
    10. '],' → logprob: -18.750024795532227

Token 201: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6639652848243713
    2. 'for' → logprob: -1.2889652252197266
    3. 'd' → logprob: -2.6639652252197266
    4. ']' → logprob: -3.4139652252197266
    5. '<|end|>' → logprob: -3.5389652252197266
    6. ')' → logprob: -3.5389652252197266
    7. 'i' → logprob: -4.163965225219727
    8. 'Q' → logprob: -4.788965225219727
    9. ' for' → logprob: -5.413965225219727
    10. 'K' → logprob: -5.413965225219727

Token 202: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10700929909944534
    2. 'd' → logprob: -2.6070094108581543
    3. 'Q' → logprob: -4.982009410858154
    4. 'print' → logprob: -5.232009410858154
    5. 'i' → logprob: -5.607009410858154
    6. '#' → logprob: -5.732009410858154
    7. 'def' → logprob: -6.107009410858154
    8. 'dp' → logprob: -6.232009410858154
    9. 'result' → logprob: -7.607009410858154
    10. 'K' → logprob: -7.607009410858154

Token 203: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0009821972344070673
    2. 'é' → logprob: -7.625982284545898
    3. '#' → logprob: -8.625982284545898
    4. '```' → logprob: -8.875982284545898
    5. 'tion' → logprob: -10.125982284545898
    6. 'a' → logprob: -10.250982284545898
    7. 'er' → logprob: -10.625982284545898
    8. 'd' → logprob: -10.875982284545898
    9. 'e' → logprob: -11.250982284545898
    10. 'ption' → logprob: -11.375982284545898

Token 204: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0226788017898798
    2. ' d' → logprob: -3.897678852081299
    3. 'de' → logprob: -6.897678852081299
    4. '#' → logprob: -7.147678852081299
    5. ' de' → logprob: -9.14767837524414
    6. ' of' → logprob: -9.52267837524414
    7. 'of' → logprob: -10.02267837524414
    8. 'des' → logprob: -10.27267837524414
    9. 'du' → logprob: -10.52267837524414
    10. '=' → logprob: -11.27267837524414

Token 205: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.4657370448112488
    2. 'e' → logprob: -1.3407371044158936
    3. ''un' → logprob: -3.3407371044158936
    4. '_' → logprob: -3.3407371044158936
    5. ''' → logprob: -4.2157368659973145
    6. 'une' → logprob: -4.5907368659973145
    7. 'u' → logprob: -5.3407368659973145
    8. 'a' → logprob: -5.7157368659973145
    9. 'es' → logprob: -6.0907368659973145
    10. '=' → logprob: -6.5907368659973145

Token 206: ' autre' (ID: 20278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44717520475387573
    2. 'dp' → logprob: -1.9471752643585205
    3. 'deque' → logprob: -3.0721752643585205
    4. 'd' → logprob: -3.1971752643585205
    5. 'tmp' → logprob: -4.197175025939941
    6. 'result' → logprob: -4.822175025939941
    7. 'copy' → logprob: -4.822175025939941
    8. 'range' → logprob: -4.947175025939941
    9. 'default' → logprob: -5.072175025939941
    10. 'counter' → logprob: -5.072175025939941

Token 207: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0786471739411354
    2. 'd' → logprob: -3.3286471366882324
    3. 'list' → logprob: -4.578647136688232
    4. '[' → logprob: -4.703647136688232
    5. 'Q' → logprob: -5.203647136688232
    6. ' liste' → logprob: -5.703647136688232
    7. 'range' → logprob: -6.203647136688232
    8. 'ligne' → logprob: -6.578647136688232
    9. '=' → logprob: -6.703647136688232
    10. '#' → logprob: -7.078647136688232

Token 208: ' "' (ID: 392)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3176170289516449
    2. '[' → logprob: -1.9426170587539673
    3. ' =' → logprob: -2.5676169395446777
    4. '=' → logprob: -4.442616939544678
    5. ',' → logprob: -5.067616939544678
    6. '[[' → logprob: -5.567616939544678
    7. '=[' → logprob: -5.817616939544678
    8. '"' → logprob: -5.817616939544678
    9. '=[[' → logprob: -5.942616939544678
    10. 's' → logprob: -6.067616939544678

Token 209: 'f' (ID: 69)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8273193836212158
    2. 'e' → logprob: -1.8273193836212158
    3. 'c' → logprob: -1.9523193836212158
    4. 'dp' → logprob: -2.077319383621216
    5. 'a' → logprob: -2.452319383621216
    6. 'ans' → logprob: -3.202319383621216
    7. 'D' → logprob: -3.577319383621216
    8. 'b' → logprob: -3.577319383621216
    9. 'f' → logprob: -3.827319383621216
    10. 's' → logprob: -4.327319145202637

Token 210: '",' (ID: 672)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20628611743450165
    2. '=' → logprob: -1.706286072731018
    3. '=[' → logprob: -5.9562859535217285
    4. '=[[' → logprob: -6.8312859535217285
    5. '[' → logprob: -8.081286430358887
    6. ' =[' → logprob: -8.706286430358887
    7. 'd' → logprob: -8.831286430358887
    8. '[[' → logprob: -9.081286430358887
    9. ']' → logprob: -9.081286430358887
    10. '=[]' → logprob: -9.831286430358887

Token 211: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03228454664349556
    2. '[[' → logprob: -3.9072844982147217
    3. ' [' → logprob: -4.532284736633301
    4. '[N' → logprob: -7.907284736633301
    5. '[-' → logprob: -8.7822847366333
    6. '[]' → logprob: -8.9072847366333
    7. '[(' → logprob: -10.2822847366333
    8. '[i' → logprob: -10.4072847366333
    9. ' [[' → logprob: -10.6572847366333
    10. 'Q' → logprob: -10.6572847366333

Token 212: ' mêmes' (ID: 71634)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.2350703775882721
    2. '[' → logprob: -1.6100703477859497
    3. ' [' → logprob: -5.73507022857666
    4. '[[' → logprob: -6.11007022857666
    5. 'N' → logprob: -6.73507022857666
    6. 'size' → logprob: -7.48507022857666
    7. '0' → logprob: -7.61007022857666
    8. '[R' → logprob: -7.86007022857666
    9. 'len' → logprob: -8.73507022857666
    10. '[size' → logprob: -8.86007022857666

Token 213: ' dimensions' (ID: 23995)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5160351991653442
    2. 'dimensions' → logprob: -1.2660351991653442
    3. 'long' → logprob: -2.3910350799560547
    4. 'compr' → logprob: -4.766035079956055
    5. '[N' → logprob: -5.141035079956055
    6. 'N' → logprob: -5.641035079956055
    7. 'dimension' → logprob: -6.016035079956055
    8. '[' → logprob: -6.391035079956055
    9. 'len' → logprob: -6.516035079956055
    10. 'dim' → logprob: -6.891035079956055

Token 214: ' et' (ID: 859)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.42972028255462646
    2. ',' → logprob: -1.8047202825546265
    3. ' que' → logprob: -2.929720401763916
    4. '[[' → logprob: -3.304720401763916
    5. '=' → logprob: -3.679720401763916
    6. '[d' → logprob: -3.679720401763916
    7. 'que' → logprob: -4.054720401763916
    8. '=[[' → logprob: -5.429720401763916
    9. 'f' → logprob: -5.554720401763916
    10. '=d' → logprob: -5.554720401763916

Token 215: ' initial' (ID: 4871)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.01566794514656067
    2. 'd' → logprob: -5.390667915344238
    3. 'values' → logprob: -5.640667915344238
    4. 'val' → logprob: -6.890667915344238
    5. 'dtype' → logprob: -6.890667915344238
    6. '[' → logprob: -7.265667915344238
    7. ' [[' → logprob: -7.390667915344238
    8. 'same' → logprob: -7.640667915344238
    9. 'structure' → logprob: -7.765667915344238
    10. '0' → logprob: -8.015667915344238

Token 216: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.27629461884498596
    2. 'isées' → logprob: -1.6512945890426636
    3. 'is' → logprob: -4.026294708251953
    4. 'ialis' → logprob: -5.151294708251953
    5. 'isation' → logprob: -5.151294708251953
    6. 'isés' → logprob: -5.526294708251953
    7. 'isé' → logprob: -5.651294708251953
    8. '=' → logprob: -6.151294708251953
    9. 'ized' → logprob: -6.276294708251953
    10. '=[[' → logprob: -6.401294708251953

Token 217: ' rempl' (ID: 66326)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.009167898446321487
    2. 'd' → logprob: -4.759167671203613
    3. ' [[' → logprob: -8.884167671203613
    4. '[' → logprob: -8.884167671203613
    5. '0' → logprob: -9.134167671203613
    6. '=[[' → logprob: -9.759167671203613
    7. 'f' → logprob: -10.009167671203613
    8. '=' → logprob: -10.884167671203613
    9. 'zeros' → logprob: -11.009167671203613
    10. ' d' → logprob: -12.134167671203613

Token 218: 'ie' (ID: 396)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.2426972389221191
    2. '=[[' → logprob: -1.6176972389221191
    3. 'de' → logprob: -1.7426972389221191
    4. '[' → logprob: -1.8676972389221191
    5. '=' → logprob: -2.242697238922119
    6. ' de' → logprob: -3.367697238922119
    7. 'e' → logprob: -3.492697238922119
    8. ']' → logprob: -5.367697238922119
    9. '[[' → logprob: -6.242697238922119
    10. ' =' → logprob: -7.492697238922119

Token 219: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20498968660831451
    2. ' de' → logprob: -2.5799896717071533
    3. '=[[' → logprob: -2.9549896717071533
    4. '=' → logprob: -3.0799896717071533
    5. 'd' → logprob: -5.329989910125732
    6. '=[' → logprob: -5.704989910125732
    7. ' =' → logprob: -6.329989910125732
    8. 'avec' → logprob: -7.454989910125732
    9. '[[' → logprob: -8.829989433288574
    10. '[' → logprob: -9.329989433288574

Token 220: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16605062782764435
    2. '[' → logprob: -2.291050672531128
    3. '[[' → logprob: -3.416050672531128
    4. 'zeros' → logprob: -4.541050434112549
    5. 'False' → logprob: -4.916050434112549
    6. ' ' → logprob: -7.791050434112549
    7. ' zeros' → logprob: -8.541050910949707
    8. 'z' → logprob: -9.166050910949707
    9. 'zero' → logprob: -10.041050910949707
    10. 'd' → logprob: -10.291050910949707

Token 221: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.001751103438436985
    2. 'eros' → logprob: -6.376750946044922
    3. 'é' → logprob: -10.626750946044922
    4. '[' → logprob: -11.626750946044922
    5. 'éro' → logprob: -12.001750946044922
    6. 'ér' → logprob: -13.001750946044922
    7. '0' → logprob: -13.126750946044922
    8. 'e' → logprob: -13.626750946044922
    9. 'eux' → logprob: -13.876750946044922
    10. '{' → logprob: -14.126750946044922

Token 222: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37082457542419434
    2. 'f' → logprob: -1.3708245754241943
    3. ']' → logprob: -3.7458245754241943
    4. 'for' → logprob: -4.495824813842773
    5. ' =' → logprob: -5.120824813842773
    6. '=' → logprob: -5.745824813842773
    7. '=[[' → logprob: -5.870824813842773
    8. ']
' → logprob: -6.120824813842773
    9. ' for' → logprob: -6.120824813842773
    10. ',' → logprob: -6.245824813842773

Token 223: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.339278580620885e-06
    2. 'd' → logprob: -13.125001907348633
    3. ' f' → logprob: -15.125001907348633
    4. '=' → logprob: -17.750001907348633
    5. ' =' → logprob: -17.875001907348633
    6. '[' → logprob: -18.125001907348633
    7. '[f' → logprob: -19.000001907348633
    8. '```' → logprob: -19.375001907348633
    9. '
' → logprob: -19.625001907348633
    10. '[[' → logprob: -19.625001907348633

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868998885154724
    2. ' =' → logprob: -1.1368999481201172
    3. '=[[' → logprob: -10.636899948120117
    4. '=[' → logprob: -12.511899948120117
    5. ' =[' → logprob: -14.511899948120117
    6. '=[]' → logprob: -14.761899948120117
    7. ' ' → logprob: -15.761899948120117
    8. '=d' → logprob: -16.761899948120117
    9. '＝' → logprob: -17.261899948120117
    10. ' ' → logprob: -18.136899948120117

Token 225: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -6.2729995988775045e-06
    2. ' [[' → logprob: -12.000006675720215
    3. '[' → logprob: -18.3750057220459
    4. '[d' → logprob: -20.2500057220459
    5. 'd' → logprob: -20.7500057220459
    6. '([[' → logprob: -22.3750057220459
    7. ' ' → logprob: -22.3750057220459
    8. '[
' → logprob: -23.3750057220459
    9. '[['' → logprob: -23.3750057220459
    10. '0' → logprob: -25.0000057220459

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.250019073486328
    3. '[' → logprob: -12.125019073486328
    4. ' [' → logprob: -16.000019073486328
    5. '   ' → logprob: -16.000019073486328
    6. '  ' → logprob: -17.375019073486328
    7. 'False' → logprob: -17.500019073486328
    8. '
' → logprob: -18.000019073486328
    9. '(' → logprob: -18.625019073486328
    10. '    ' → logprob: -18.937519073486328

Token 227: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -6.635164754698053e-05
    2. ']' → logprob: -9.875066757202148
    3. ']*(' → logprob: -11.250066757202148
    4. ' ]' → logprob: -14.500066757202148
    5. 'for' → logprob: -14.875066757202148
    6. ']+' → logprob: -15.000066757202148
    7. ' for' → logprob: -15.375066757202148
    8. '*' → logprob: -15.375066757202148
    9. ')*' → logprob: -16.62506675720215
    10. '0' → logprob: -16.87506675720215

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000643095700070262
    2. '(' → logprob: -7.375643253326416
    3. '[' → logprob: -11.625642776489258
    4. ' ' → logprob: -12.125642776489258
    5. '0' → logprob: -14.375642776489258
    6. '1' → logprob: -14.500642776489258
    7. ' (' → logprob: -15.000642776489258
    8. 'len' → logprob: -15.625642776489258
    9. 'd' → logprob: -15.875642776489258
    10. '
' → logprob: -16.125642776489258

Token 229: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.9875325708417222e-05
    2. '*i' → logprob: -10.750029563903809
    3. 'i' → logprob: -12.375029563903809
    4. '[i' → logprob: -13.125029563903809
    5. '*' → logprob: -13.750029563903809
    6. '```' → logprob: -15.000029563903809
    7. 'for' → logprob: -15.375029563903809
    8. '(N' → logprob: -15.625029563903809
    9. '^' → logprob: -16.000030517578125
    10. '(i' → logprob: -16.250030517578125

Token 230: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.875008583068848
    3. ' i' → logprob: -13.500008583068848
    4. 'R' → logprob: -14.000008583068848
    5. 'Q' → logprob: -14.000008583068848
    6. 'N' → logprob: -14.125008583068848
    7. '```' → logprob: -14.625008583068848
    8. '(i' → logprob: -14.875008583068848
    9. '[i' → logprob: -15.000008583068848
    10. 'f' → logprob: -15.625008583068848

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061967797577381134
    2. ' for' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. '   ' → logprob: -17.061967849731445
    5. '	for' → logprob: -17.311967849731445
    6. '  ' → logprob: -18.811967849731445
    7. 'fo' → logprob: -20.311967849731445
    8. '
' → logprob: -20.436967849731445
    9. '    ' → logprob: -20.561967849731445
    10. ')' → logprob: -21.061967849731445

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08943916857242584
    2. ' i' → logprob: -2.4644391536712646
    3. 'Q' → logprob: -7.839439392089844
    4. ' Q' → logprob: -9.714439392089844
    5. 'R' → logprob: -10.839439392089844
    6. ' ' → logprob: -11.464439392089844
    7. ' R' → logprob: -12.214439392089844
    8. ' range' → logprob: -12.589439392089844
    9. ' ' → logprob: -13.464439392089844
    10. '   ' → logprob: -13.714439392089844

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4068749248981476
    2. 'in' → logprob: -1.5318748950958252
    3. 'Q' → logprob: -2.406874895095825
    4. 'i' → logprob: -3.656874895095825
    5. ' Q' → logprob: -7.406875133514404
    6. ' i' → logprob: -7.531875133514404
    7. 'd' → logprob: -7.531875133514404
    8. '(Q' → logprob: -7.906875133514404
    9. ' ' → logprob: -10.156874656677246
    10. 'e' → logprob: -10.156874656677246

Token 234: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0002334568416699767
    2. ' Q' → logprob: -8.37523365020752
    3. 'range' → logprob: -13.75023365020752
    4. 'R' → logprob: -13.87523365020752
    5. ' range' → logprob: -14.50023365020752
    6. '(Q' → logprob: -15.75023365020752
    7. ' ' → logprob: -16.125232696533203
    8. '   ' → logprob: -16.375232696533203
    9. '	Q' → logprob: -17.125232696533203
    10. 'N' → logprob: -18.000232696533203

Token 235: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.371605948312208e-05
    2. ')]' → logprob: -10.125053405761719
    3. ' ]' → logprob: -11.375053405761719
    4. ')' → logprob: -13.625053405761719
    5. ']
' → logprob: -14.750053405761719
    6. '])' → logprob: -14.750053405761719
    7. '()]' → logprob: -16.50005340576172
    8. ']

' → logprob: -17.00005340576172
    9. ']
' → logprob: -17.87505340576172
    10. ']]' → logprob: -18.25005340576172

Token 236: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9058306217193604
    2. '#' → logprob: -1.0308306217193604
    3. '[' → logprob: -2.4058306217193604
    4. 'f' → logprob: -3.2808306217193604
    5. ']' → logprob: -4.280830383300781
    6. 'for' → logprob: -4.655830383300781
    7. 'Q' → logprob: -4.780830383300781
    8. 'K' → logprob: -4.780830383300781
    9. 'i' → logprob: -4.780830383300781
    10. 'a' → logprob: -4.905830383300781

Token 237: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7501221895217896
    2. 'd' → logprob: -2.0001220703125
    3. 'dp' → logprob: -2.6251220703125
    4. '#' → logprob: -3.1251220703125
    5. 'x' → logprob: -3.3751220703125
    6. 'f' → logprob: -3.5001220703125
    7. 'S' → logprob: -3.8751220703125
    8. 'a' → logprob: -4.1251220703125
    9. 's' → logprob: -4.1251220703125
    10. 'result' → logprob: -4.2501220703125

Token 238: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0017809720011427999
    2. 'p' → logprob: -6.376780986785889
    3. 'placement' → logprob: -10.00178050994873
    4. 'plit' → logprob: -12.12678050994873
    5. 'pir' → logprob: -12.12678050994873
    6. 'pla' → logprob: -12.37678050994873
    7. 'ple' → logprob: -12.62678050994873
    8. 'placer' → logprob: -12.62678050994873
    9. 'pli' → logprob: -13.25178050994873
    10. '#' → logprob: -13.62678050994873

Token 239: 'issage' (ID: 63863)
  Prédit: 'issage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issage' → logprob: -0.0012198820477351546
    2. 'ir' → logprob: -7.626219749450684
    3. 'iss' → logprob: -9.001219749450684
    4. 'er' → logprob: -9.001219749450684
    5. 'pl' → logprob: -9.251219749450684
    6. 'issement' → logprob: -9.376219749450684
    7. '#' → logprob: -9.876219749450684
    8. 'a' → logprob: -10.001219749450684
    9. 'age' → logprob: -10.501219749450684
    10. 'r' → logprob: -10.626219749450684

Token 240: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05416197329759598
    2. ' for' → logprob: -3.05416202545166
    3. '<|end|>' → logprob: -5.55416202545166
    4. 'd' → logprob: -7.42916202545166
    5. '[' → logprob: -8.30416202545166
    6. '#' → logprob: -8.67916202545166
    7. ' of' → logprob: -8.80416202545166
    8. '<|end|>' → logprob: -9.30416202545166
    9. ' d' → logprob: -9.92916202545166
    10. ' =' → logprob: -9.92916202545166

Token 241: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.48269879817962646
    2. 'd' → logprob: -0.9826987981796265
    3. 'for' → logprob: -5.732698917388916
    4. ' f' → logprob: -5.982698917388916
    5. ' d' → logprob: -6.607698917388916
    6. 'range' → logprob: -7.107698917388916
    7. 'Q' → logprob: -7.857698917388916
    8. '[' → logprob: -9.357698440551758
    9. ' for' → logprob: -10.482698440551758
    10. ' ' → logprob: -10.482698440551758

Token 242: ' table' (ID: 3293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4733639061450958
    2. 'f' → logprob: -1.0983638763427734
    3. 'for' → logprob: -3.3483638763427734
    4. 'Q' → logprob: -5.473363876342773
    5. ' d' → logprob: -6.598363876342773
    6. ' f' → logprob: -6.973363876342773
    7. 'range' → logprob: -7.348363876342773
    8. ' for' → logprob: -7.973363876342773
    9. 's' → logprob: -9.348363876342773
    10. 'input' → logprob: -9.723363876342773

Token 243: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8445965647697449
    2. 'd' → logprob: -1.0945966243743896
    3. 'for' → logprob: -1.9695966243743896
    4. ' f' → logprob: -3.0945966243743896
    5. ' for' → logprob: -3.4695966243743896
    6. ' d' → logprob: -3.9695966243743896
    7. 'dp' → logprob: -8.094596862792969
    8. '#' → logprob: -8.719596862792969
    9. 's' → logprob: -8.844596862792969
    10. '[' → logprob: -10.594596862792969

Token 244: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18122076988220215
    2. 'f' → logprob: -1.8062207698822021
    3. ' d' → logprob: -7.056221008300781
    4. ' f' → logprob: -8.181221008300781
    5. 'for' → logprob: -8.431221008300781
    6. 'dp' → logprob: -10.306221008300781
    7. '`' → logprob: -11.181221008300781
    8. ']' → logprob: -11.681221008300781
    9. '```' → logprob: -11.806221008300781
    10. '#' → logprob: -11.806221008300781

Token 245: '"' (ID: 1)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005406996235251427
    2. ']' → logprob: -6.130406856536865
    3. 'for' → logprob: -6.630406856536865
    4. '[i' → logprob: -7.880406856536865
    5. '
' → logprob: -8.005407333374023
    6. '][' → logprob: -8.130407333374023
    7. ' for' → logprob: -8.755407333374023
    8. '#' → logprob: -8.755407333374023
    9. 'd' → logprob: -9.380407333374023
    10. ' d' → logprob: -9.880407333374023

Token 246: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043855130672454834
    2. 'd' → logprob: -3.5438551902770996
    3. ' for' → logprob: -4.4188551902771
    4. '<|end|>' → logprob: -6.7938551902771
    5. '[' → logprob: -7.7938551902771
    6. '
' → logprob: -8.418854713439941
    7. '#' → logprob: -9.668854713439941
    8. ':' → logprob: -10.793854713439941
    9. '=' → logprob: -10.793854713439941
    10. ',' → logprob: -10.918854713439941

Token 247: ' partir' (ID: 12100)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.046837326139211655
    2. 'Q' → logprob: -4.421837329864502
    3. '0' → logprob: -4.671837329864502
    4. 'l' → logprob: -4.796837329864502
    5. 'i' → logprob: -5.546837329864502
    6. ' l' → logprob: -5.921837329864502
    7. ' Q' → logprob: -6.171837329864502
    8. '[i' → logprob: -6.671837329864502
    9. ' ' → logprob: -6.796837329864502
    10. 'd' → logprob: -7.046837329864502

Token 248: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9101934432983398
    2. 'd' → logprob: -1.5351934432983398
    3. ' i' → logprob: -2.53519344329834
    4. '0' → logprob: -2.66019344329834
    5. ' d' → logprob: -2.66019344329834
    6. 'range' → logprob: -3.03519344329834
    7. '[' → logprob: -3.78519344329834
    8. ' range' → logprob: -4.28519344329834
    9. ' la' → logprob: -4.41019344329834
    10. '1' → logprob: -4.53519344329834

Token 249: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9670382142066956
    2. '1' → logprob: -1.2170381546020508
    3. ' i' → logprob: -2.592038154602051
    4. 'd' → logprob: -2.717038154602051
    5. '0' → logprob: -2.967038154602051
    6. 'Q' → logprob: -3.342038154602051
    7. ' ' → logprob: -3.467038154602051
    8. ' d' → logprob: -3.717038154602051
    9. ' Q' → logprob: -4.592038154602051
    10. 'f' → logprob: -5.217038154602051

Token 250: ''entrée' (ID: 115820)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35120680928230286
    2. 'i' → logprob: -2.1012067794799805
    3. 'input' → logprob: -3.1012067794799805
    4. '0' → logprob: -3.2262067794799805
    5. ' input' → logprob: -4.1012067794799805
    6. ' ' → logprob: -4.4762067794799805
    7. 'Q' → logprob: -4.7262067794799805
    8. 'user' → logprob: -5.1012067794799805
    9. '2' → logprob: -5.1012067794799805
    10. '#' → logprob: -5.3512067794799805

Token 251: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05953541398048401
    2. '
' → logprob: -3.059535503387451
    3. ' for' → logprob: -4.559535503387451
    4. 'd' → logprob: -8.809535026550293
    5. '[' → logprob: -10.559535026550293
    6. ' 
' → logprob: -10.684535026550293
    7. ':
' → logprob: -10.684535026550293
    8. '[
' → logprob: -10.684535026550293
    9. ':' → logprob: -10.934535026550293
    10. '

' → logprob: -11.059535026550293

Token 252: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0897308588027954
    2. 'range' → logprob: -2.214730739593506
    3. 'for' → logprob: -2.464730739593506
    4. '1' → logprob: -2.714730739593506
    5. 'i' → logprob: -2.839730739593506
    6. 'f' → logprob: -2.839730739593506
    7. 'K' → logprob: -2.839730739593506
    8. '0' → logprob: -2.839730739593506
    9. 'la' → logprob: -3.339730739593506
    10. 'd' → logprob: -3.464730739593506

Token 253: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.22398921847343445
    2. ''entrée' → logprob: -2.973989248275757
    3. 'a' → logprob: -3.098989248275757
    4. 'e' → logprob: -3.723989248275757
    5. 'es' → logprob: -4.473989009857178
    6. '0' → logprob: -4.473989009857178
    7. '’utilisateur' → logprob: -4.598989009857178
    8. 'range' → logprob: -4.848989009857178
    9. 'entrée' → logprob: -5.473989009857178
    10. 'input' → logprob: -5.473989009857178

Token 254: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038300611777231097
    2. 'd' → logprob: -8.375383377075195
    3. ' for' → logprob: -9.250383377075195
    4. '
' → logprob: -10.000383377075195
    5. 'f' → logprob: -12.000383377075195
    6. 'i' → logprob: -13.750383377075195
    7. '#' → logprob: -14.750383377075195
    8. 'Q' → logprob: -15.000383377075195
    9. ',
' → logprob: -15.250383377075195
    10. 'D' → logprob: -15.250383377075195

Token 255: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011033025803044438
    2. 'd' → logprob: -7.001103401184082
    3. 'a' → logprob: -9.251103401184082
    4. ' for' → logprob: -9.751103401184082
    5. 'A' → logprob: -10.751103401184082
    6. 'x' → logprob: -12.126103401184082
    7. 'data' → logprob: -13.626103401184082
    8. 'v' → logprob: -13.626103401184082
    9. 's' → logprob: -13.876103401184082
    10. 'f' → logprob: -14.001103401184082

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25794532895088196
    2. ' i' → logprob: -1.5079452991485596
    3. '_' → logprob: -5.882945537567139
    4. 'x' → logprob: -6.632945537567139
    5. ' _' → logprob: -7.257945537567139
    6. '_i' → logprob: -7.632945537567139
    7. ' x' → logprob: -8.13294506072998
    8. 'a' → logprob: -8.88294506072998
    9. 'k' → logprob: -10.00794506072998
    10. 'I' → logprob: -10.50794506072998

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015029937028885
    2. 'in' → logprob: -1.701503038406372
    3. ' ' → logprob: -10.201502799987793
    4. 'd' → logprob: -11.201502799987793
    5. '_' → logprob: -11.451502799987793
    6. ',' → logprob: -11.951502799987793
    7. 'In' → logprob: -12.826502799987793
    8. '_in' → logprob: -12.951502799987793
    9. '1' → logprob: -13.576502799987793
    10. '	in' → logprob: -13.576502799987793

Token 258: ' Q' (ID: 1486)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.13791289925575256
    2. 'Q' → logprob: -2.2629129886627197
    3. 'range' → logprob: -4.387912750244141
    4. ' range' → logprob: -4.637912750244141
    5. ' R' → logprob: -6.012912750244141
    6. ' Q' → logprob: -8.63791275024414
    7. 'Range' → logprob: -11.26291275024414
    8. 'N' → logprob: -12.13791275024414
    9. ' ' → logprob: -12.82541275024414
    10. 'K' → logprob: -12.88791275024414

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031129494309425354
    2. ':
' → logprob: -6.00311279296875
    3. ' :' → logprob: -7.37811279296875
    4. '   ' → logprob: -12.25311279296875
    5. '=' → logprob: -13.25311279296875
    6. ':
' → logprob: -13.62811279296875
    7. ',' → logprob: -13.62811279296875
    8. ' :
' → logprob: -13.75311279296875
    9. ':i' → logprob: -14.50311279296875
    10. ' =' → logprob: -15.25311279296875

Token 260: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1831410825252533
    2. '   ' → logprob: -2.308140993118286
    3. 'd' → logprob: -2.933140993118286
    4. ' data' → logprob: -5.183141231536865
    5. ' if' → logprob: -5.933141231536865
    6. ' ' → logprob: -6.308141231536865
    7. ':' → logprob: -6.933141231536865
    8. ' input' → logprob: -7.058141231536865
    9. ' f' → logprob: -7.558141231536865
    10. ' values' → logprob: -8.058140754699707

Token 261: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2188590168952942
    2. ' d' → logprob: -2.5938589572906494
    3. '   ' → logprob: -2.8438589572906494
    4. 'a' → logprob: -3.9688589572906494
    5. 'x' → logprob: -4.8438591957092285
    6. 'val' → logprob: -5.0938591957092285
    7. 'data' → logprob: -5.2188591957092285
    8. 'for' → logprob: -5.3438591957092285
    9. 'values' → logprob: -5.8438591957092285
    10. ' a' → logprob: -6.0938591957092285

Token 262: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30071353912353516
    2. 'if' → logprob: -1.6757135391235352
    3. 'for' → logprob: -3.550713539123535
    4. 'val' → logprob: -4.550713539123535
    5. 'x' → logprob: -4.800713539123535
    6. ' if' → logprob: -4.925713539123535
    7. 'a' → logprob: -5.050713539123535
    8. ' d' → logprob: -5.425713539123535
    9. '   ' → logprob: -6.175713539123535
    10. 'value' → logprob: -6.800713539123535

Token 263: ' lit' (ID: 11980)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2562593221664429
    2. ' =' → logprob: -1.3812593221664429
    3. ' d' → logprob: -1.3812593221664429
    4. '   ' → logprob: -2.0062594413757324
    5. '=' → logprob: -3.7562594413757324
    6. ' data' → logprob: -4.256259441375732
    7. ' s' → logprob: -5.256259441375732
    8. 's' → logprob: -5.381259441375732
    9. ' for' → logprob: -5.381259441375732
    10. ' a' → logprob: -6.006259441375732

Token 264: ' une' (ID: 2463)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.48477837443351746
    2. 'd' → logprob: -1.7347784042358398
    3. ' la' → logprob: -2.48477840423584
    4. ' une' → logprob: -3.23477840423584
    5. ' f' → logprob: -3.85977840423584
    6. ' les' → logprob: -4.73477840423584
    7. ' l' → logprob: -5.10977840423584
    8. 'f' → logprob: -5.23477840423584
    9. ' a' → logprob: -5.35977840423584
    10. ' ' → logprob: -5.35977840423584

Token 265: ' chaîne' (ID: 89288)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.8600611686706543
    2. 'ligne' → logprob: -0.8600611686706543
    3. 'val' → logprob: -2.3600611686706543
    4. 'liste' → logprob: -3.9850611686706543
    5. ' liste' → logprob: -4.110061168670654
    6. ' valeur' → logprob: -4.360061168670654
    7. ' ' → logprob: -6.235061168670654
    8. 'entrée' → logprob: -6.485061168670654
    9. ' val' → logprob: -6.610061168670654
    10. 'l' → logprob: -7.110061168670654

Token 266: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.732520341873169
    2. 'de' → logprob: -1.732520341873169
    3. 's' → logprob: -2.232520341873169
    4. '   ' → logprob: -2.482520341873169
    5. '()' → logprob: -3.107520341873169
    6. '=' → logprob: -3.232520341873169
    7. ' de' → logprob: -3.607520341873169
    8. '    
' → logprob: -4.73252010345459
    9. ' s' → logprob: -5.23252010345459
    10. 'd' → logprob: -5.48252010345459

Token 267: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07476732134819031
    2. ' caractères' → logprob: -2.8247673511505127
    3. 'input' → logprob: -4.824767112731934
    4. 'chars' → logprob: -5.824767112731934
    5. 'entrée' → logprob: -6.824767112731934
    6. '0' → logprob: -8.699767112731934
    7. 's' → logprob: -9.449767112731934
    8. 'bits' → logprob: -9.574767112731934
    9. ' caracteres' → logprob: -9.574767112731934
    10. 'char' → logprob: -9.949767112731934

Token 268: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24915708601474762
    2. ' =' → logprob: -1.8741570711135864
    3. 's' → logprob: -3.249157190322876
    4. '=' → logprob: -4.874156951904297
    5. 'd' → logprob: -5.374156951904297
    6. '()' → logprob: -5.374156951904297
    7. ',' → logprob: -5.374156951904297
    8. ' s' → logprob: -6.249156951904297
    9. '    ' → logprob: -7.374156951904297
    10. ' d' → logprob: -7.499156951904297

Token 269: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2064285278320312
    2. ' i' → logprob: -1.3314285278320312
    3. ' chaque' → logprob: -1.9564285278320312
    4. 'i' → logprob: -2.4564285278320312
    5. ' la' → logprob: -2.9564285278320312
    6. ' j' → logprob: -2.9564285278320312
    7. ' d' → logprob: -3.3314285278320312
    8. ' _' → logprob: -3.9564285278320312
    9. 'd' → logprob: -4.581428527832031
    10. ' f' → logprob: -4.831428527832031

Token 270: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9194428324699402
    2. 'val' → logprob: -1.669442892074585
    3. 'ligne' → logprob: -2.044442892074585
    4. 'liste' → logprob: -2.919442892074585
    5. 'd' → logprob: -3.294442892074585
    6. 'entrée' → logprob: -3.544442892074585
    7. ' i' → logprob: -4.044442653656006
    8. 'range' → logprob: -4.169442653656006
    9. 'chaine' → logprob: -4.294442653656006
    10. 'f' → logprob: -4.419442653656006

Token 271: ' i' (ID: 575)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6318147778511047
    2. '   ' → logprob: -1.38181471824646
    3. 'd' → logprob: -2.13181471824646
    4. ' =' → logprob: -3.13181471824646
    5. 's' → logprob: -3.75681471824646
    6. ' de' → logprob: -4.881814956665039
    7. ' s' → logprob: -5.506814956665039
    8. '    
' → logprob: -5.631814956665039
    9. 'de' → logprob: -5.881814956665039
    10. '[i' → logprob: -6.256814956665039

Token 272: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015483199618756771
    2. ':' → logprob: -4.765483379364014
    3. ',' → logprob: -6.015483379364014
    4. ' =' → logprob: -6.265483379364014
    5. 'd' → logprob: -7.515483379364014
    6. 's' → logprob: -7.640483379364014
    7. '.' → logprob: -7.890483379364014
    8. ' :' → logprob: -7.890483379364014
    9. ' d' → logprob: -8.890482902526855
    10. '=' → logprob: -9.015482902526855

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002795014763250947
    2. ' d' → logprob: -6.377795219421387
    3. 'd' → logprob: -7.877795219421387
    4. ' s' → logprob: -8.002795219421387
    5. 's' → logprob: -9.252795219421387
    6. '    
' → logprob: -9.377795219421387
    7. 'data' → logprob: -9.877795219421387
    8. ' data' → logprob: -10.252795219421387
    9. ':' → logprob: -10.752795219421387
    10. ' line' → logprob: -11.252795219421387

Token 274: ' #' (ID: 1069)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7410390973091125
    2. 's' → logprob: -0.9910390973091125
    3. ' d' → logprob: -3.2410390377044678
    4. 'd' → logprob: -3.3660390377044678
    5. '   ' → logprob: -3.3660390377044678
    6. ' line' → logprob: -4.366039276123047
    7. ' S' → logprob: -4.991039276123047
    8. 'S' → logprob: -5.616039276123047
    9. ' ' → logprob: -5.866039276123047
    10. 'a' → logprob: -5.866039276123047

Token 275: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10218939930200577
    2. 'S' → logprob: -3.477189302444458
    3. ' s' → logprob: -3.602189302444458
    4. 'line' → logprob: -3.727189302444458
    5. ' line' → logprob: -5.477189540863037
    6. ' S' → logprob: -5.977189540863037
    7. 'a' → logprob: -6.352189540863037
    8. 'd' → logprob: -6.352189540863037
    9. 'row' → logprob: -6.727189540863037
    10. 'x' → logprob: -7.602189540863037

Token 276: 'enumer' (ID: 90985)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1645488440990448
    2. 'line' → logprob: -2.539548873901367
    3. 'S' → logprob: -3.414548873901367
    4. ' s' → logprob: -4.539548873901367
    5. 'ligne' → logprob: -4.789548873901367
    6. 'row' → logprob: -5.414548873901367
    7. ' line' → logprob: -5.914548873901367
    8. 'a' → logprob: -6.539548873901367
    9. 'data' → logprob: -6.539548873901367
    10. 'x' → logprob: -6.789548873901367

Token 277: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.9361264946837764e-07
    2. 'ated' → logprob: -16.875
    3. 'rate' → logprob: -17.125
    4. 'te' → logprob: -17.625
    5. 'er' → logprob: -17.875
    6. 'e' → logprob: -19.125
    7. 'ATE' → logprob: -19.25
    8. '(' → logprob: -19.25
    9. 'd' → logprob: -19.75
    10. 'a' → logprob: -19.875

Token 278: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04680080711841583
    2. '(' → logprob: -3.7968008518218994
    3. '('' → logprob: -4.92180061340332
    4. ''' → logprob: -5.92180061340332
    5. '(
' → logprob: -6.29680061340332
    6. '(line' → logprob: -6.42180061340332
    7. '(range' → logprob: -6.54680061340332
    8. '(en' → logprob: -6.54680061340332
    9. '(',' → logprob: -6.79680061340332
    10. '(d' → logprob: -6.92180061340332

Token 279: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08586136251688004
    2. '().' → logprob: -2.8358614444732666
    3. '()' → logprob: -4.3358612060546875
    4. '(),' → logprob: -4.5858612060546875
    5. '()):
' → logprob: -9.335861206054688
    6. '()[' → logprob: -10.210861206054688
    7. '():' → logprob: -10.835861206054688
    8. '())
' → logprob: -10.835861206054688
    9. '()),' → logprob: -10.835861206054688
    10. '()`' → logprob: -10.835861206054688

Token 280: ''' (ID: 6)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7559084892272949
    2. 'for' → logprob: -1.755908489227295
    3. ':' → logprob: -1.880908489227295
    4. ',' → logprob: -2.380908489227295
    5. ')' → logprob: -3.130908489227295
    6. '():' → logprob: -3.255908489227295
    7. ' for' → logprob: -4.630908489227295
    8. '()' → logprob: -4.880908489227295
    9. '   ' → logprob: -4.880908489227295
    10. '):
' → logprob: -6.755908489227295

Token 281: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6547626852989197
    2. ':' → logprob: -1.6547627449035645
    3. 'for' → logprob: -1.6547627449035645
    4. ',' → logprob: -2.9047627449035645
    5. '<|end|>' → logprob: -3.9047627449035645
    6. '   ' → logprob: -4.7797627449035645
    7. ':
' → logprob: -4.9047627449035645
    8. ')' → logprob: -6.1547627449035645
    9. ' :' → logprob: -6.9047627449035645
    10. '<|end|>' → logprob: -7.0297627449035645

Token 282: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.001082471339032054
    2. 'ours' → logprob: -7.501082420349121
    3. 'oure' → logprob: -7.626082420349121
    4. 'our' → logprob: -10.876082420349121
    5. 'orre' → logprob: -11.126082420349121
    6. 'court' → logprob: -13.001082420349121
    7. 'ourse' → logprob: -13.126082420349121
    8. 'or' → logprob: -13.126082420349121
    9. '#' → logprob: -15.251082420349121
    10. 'ore' → logprob: -15.251082420349121

Token 283: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.014480710029602
    2. ' enumerate' → logprob: -2.0144805908203125
    3. 'enumer' → logprob: -2.3894805908203125
    4. '(' → logprob: -2.6394805908203125
    5. 'input' → logprob: -2.6394805908203125
    6. ' ' → logprob: -2.6394805908203125
    7. ' (' → logprob: -2.7644805908203125
    8. ')' → logprob: -3.5144805908203125
    9. '(input' → logprob: -3.8894805908203125
    10. ' i' → logprob: -4.0144805908203125

Token 284: ' caractère' (ID: 80509)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.0822471380233765
    2. ' _,' → logprob: -1.5822471380233765
    3. ' j' → logprob: -1.8322471380233765
    4. ' ,' → logprob: -2.832247257232666
    5. 'index' → logprob: -3.457247257232666
    6. 'car' → logprob: -3.582247257232666
    7. '_,' → logprob: -3.707247257232666
    8. 'char' → logprob: -3.832247257232666
    9. ' caract' → logprob: -4.082247257232666
    10. ' (' → logprob: -4.082247257232666

Token 285: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05665472149848938
    2. '   ' → logprob: -3.931654691696167
    3. ' ,' → logprob: -4.931654930114746
    4. ' for' → logprob: -5.056654930114746
    5. '(en' → logprob: -5.306654930114746
    6. ' de' → logprob: -5.431654930114746
    7. '(i' → logprob: -6.056654930114746
    8. ' en' → logprob: -6.056654930114746
    9. 'for' → logprob: -6.931654930114746
    10. '()' → logprob: -6.931654930114746

Token 286: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34902697801589966
    2. ' input' → logprob: -1.2240269184112549
    3. 'enumer' → logprob: -7.724027156829834
    4. ' enumerate' → logprob: -10.099026679992676
    5. '(input' → logprob: -10.599026679992676
    6. ' la' → logprob: -10.724026679992676
    7. ' ' → logprob: -10.974026679992676
    8. 'l' → logprob: -11.224026679992676
    9. ' l' → logprob: -11.974026679992676
    10. 'la' → logprob: -12.599026679992676

Token 287: ' chaîne' (ID: 89288)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28015077114105225
    2. ' input' → logprob: -1.6551507711410522
    3. 'ligne' → logprob: -3.655150890350342
    4. 'chaine' → logprob: -4.530150890350342
    5. ' ligne' → logprob: -4.655150890350342
    6. 'enumer' → logprob: -6.155150890350342
    7. 'entrée' → logprob: -6.280150890350342
    8. ' chaîne' → logprob: -6.780150890350342
    9. 'line' → logprob: -6.905150890350342
    10. 'string' → logprob: -7.905150890350342

Token 288: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3186810314655304
    2. '   ' → logprob: -1.818681001663208
    3. ' for' → logprob: -2.693681001663208
    4. 'for' → logprob: -4.193681240081787
    5. ' ,' → logprob: -4.443681240081787
    6. ' pour' → logprob: -4.818681240081787
    7. ' en' → logprob: -6.193681240081787
    8. ' et' → logprob: -6.943681240081787
    9. ')' → logprob: -7.193681240081787
    10. 'pour' → logprob: -7.818681240081787

Token 289: ' son' (ID: 2391)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.7405937314033508
    2. ' j' → logprob: -1.365593671798706
    3. ' sa' → logprob: -1.990593671798706
    4. ' son' → logprob: -2.990593671798706
    5. ' la' → logprob: -3.740593671798706
    6. 'j' → logprob: -4.490593910217285
    7. 'index' → logprob: -4.615593910217285
    8. ' indice' → logprob: -5.115593910217285
    9. ' idx' → logprob: -5.240593910217285
    10. 'indice' → logprob: -5.615593910217285

Token 290: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.10370414704084396
    2. ' indice' → logprob: -2.7287042140960693
    3. 'indice' → logprob: -3.9787042140960693
    4. 'index' → logprob: -4.35370397567749
    5. ' idx' → logprob: -6.97870397567749
    6. ' ' → logprob: -8.228704452514648
    7. ' position' → logprob: -9.353704452514648
    8. ' i' → logprob: -9.603704452514648
    9. ' ind' → logprob: -9.978704452514648
    10. 'ind' → logprob: -10.103704452514648

Token 291: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0331776142120361
    2. 'for' → logprob: -1.0331776142120361
    3. ' for' → logprob: -1.9081776142120361
    4. ',' → logprob: -2.033177614212036
    5. ':' → logprob: -5.658177375793457
    6. ' ,' → logprob: -6.658177375793457
    7. ' pour' → logprob: -6.658177375793457
    8. 'pour' → logprob: -7.908177375793457
    9. '(i' → logprob: -8.158177375793457
    10. '  ' → logprob: -8.408177375793457

Token 292: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009382619522511959
    2. 'x' → logprob: -5.759382724761963
    3. ' j' → logprob: -6.009382724761963
    4. 'idx' → logprob: -6.884382724761963
    5. 'k' → logprob: -7.134382724761963
    6. 'i' → logprob: -7.634382724761963
    7. 'c' → logprob: -7.759382724761963
    8. 'e' → logprob: -8.634382247924805
    9. 'a' → logprob: -8.634382247924805
    10. 'index' → logprob: -8.884382247924805

Token 293: ''.
' (ID: 49980)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2416786551475525
    2. ',' → logprob: -2.2416787147521973
    3. '   ' → logprob: -2.7416787147521973
    4. ':' → logprob: -3.7416787147521973
    5. ')' → logprob: -4.116678714752197
    6. '),' → logprob: -6.491678714752197
    7. '):
' → logprob: -6.991678714752197
    8. 'for' → logprob: -7.741678714752197
    9. ' for' → logprob: -8.116678237915039
    10. ' :' → logprob: -8.491678237915039

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015586259542033076
    2. 'for' → logprob: -9.500155448913574
    3. ' for' → logprob: -9.750155448913574
    4. '       ' → logprob: -11.375155448913574
    5. '   ' → logprob: -11.500155448913574
    6. ',' → logprob: -15.125155448913574
    7. '    
' → logprob: -15.625155448913574
    8. ' ' → logprob: -15.875155448913574
    9. '```' → logprob: -16.12515640258789
    10. '
' → logprob: -16.25015640258789

Token 295: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03783100098371506
    2. 'for' (adapté à ' for') → logprob: -3.5378310680389404
    3. ' for' → logprob: -4.912830829620361
    4. '       ' → logprob: -8.16283130645752
    5. '   ' → logprob: -8.28783130645752
    6. ' ' → logprob: -9.03783130645752
    7. ' ' → logprob: -11.66283130645752
    8. ' ' → logprob: -12.03783130645752
    9. '	for' → logprob: -12.16283130645752
    10. '  ' → logprob: -12.41283130645752

Token 296: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693366408348083
    2. ' j' → logprob: -2.1269335746765137
    3. '	j' → logprob: -12.251934051513672
    4. ' ' → logprob: -15.001934051513672
    5. ',j' → logprob: -15.501934051513672
    6. ' ' → logprob: -16.001934051513672
    7. '   ' → logprob: -16.126934051513672
    8. ',' → logprob: -16.626934051513672
    9. '  ' → logprob: -17.876934051513672
    10. '(j' → logprob: -18.251934051513672

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02613331750035286
    2. ' in' → logprob: -4.2761335372924805
    3. 'in' → logprob: -4.5261335372924805
    4. ' ,' → logprob: -7.0261335372924805
    5. ',n' → logprob: -10.15113353729248
    6. ',_' → logprob: -10.77613353729248
    7. ',in' → logprob: -11.02613353729248
    8. ',c' → logprob: -11.15113353729248
    9. ',v' → logprob: -11.27613353729248
    10. ' ' → logprob: -11.52613353729248

Token 298: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04508359357714653
    2. 'ch' → logprob: -3.295083522796631
    3. 'x' → logprob: -5.670083522796631
    4. ' c' → logprob: -6.670083522796631
    5. 'bit' → logprob: -7.420083522796631
    6. 'v' → logprob: -7.670083522796631
    7. 'char' → logprob: -8.045083999633789
    8. 's' → logprob: -8.045083999633789
    9. 'b' → logprob: -8.545083999633789
    10. 'car' → logprob: -9.545083999633789

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061991553753614426
    2. 'in' → logprob: -2.8119914531707764
    3. ',' → logprob: -11.561991691589355
    4. ' ' → logprob: -12.311991691589355
    5. 'enumer' → logprob: -13.186991691589355
    6. '  ' → logprob: -13.311991691589355
    7. '	in' → logprob: -13.811991691589355
    8. ')' → logprob: -14.061991691589355
    9. '   ' → logprob: -14.561991691589355
    10. 's' → logprob: -14.686991691589355

Token 300: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.2519381642341614
    2. ' enumerate' → logprob: -1.5019381046295166
    3. 'R' → logprob: -12.751937866210938
    4. 'enum' → logprob: -12.876937866210938
    5. 'en' → logprob: -13.876937866210938
    6. '(en' → logprob: -14.001937866210938
    7. ' R' → logprob: -14.251937866210938
    8. ' ' → logprob: -15.251937866210938
    9. ' enumer' → logprob: -15.501937866210938
    10. 'Q' → logprob: -16.001937866210938

Token 301: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5978184342384338
    2. '(input' → logprob: -0.8478184342384338
    3. ' input' → logprob: -3.847818374633789
    4. ' (' → logprob: -8.222818374633789
    5. ',input' → logprob: -10.597818374633789
    6. '(' → logprob: -11.722818374633789
    7. '=input' → logprob: -12.222818374633789
    8. '   ' → logprob: -13.222818374633789
    9. ' ' → logprob: -13.472818374633789
    10. '	input' → logprob: -13.847818374633789

Token 302: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001753714750520885
    2. '()):
' → logprob: -7.001753807067871
    3. '():' → logprob: -7.751753807067871
    4. '())' → logprob: -8.001753807067871
    5. ' (' → logprob: -10.751753807067871
    6. '):' → logprob: -10.876753807067871
    7. '(' → logprob: -11.001753807067871
    8. ' ()' → logprob: -12.126753807067871
    9. '().' → logprob: -12.126753807067871
    10. '(),' → logprob: -13.251753807067871

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002149802603526041
    2. ':' → logprob: -9.500214576721191
    3. 'd' → logprob: -9.875214576721191
    4. '   ' → logprob: -10.625214576721191
    5. ' if' → logprob: -10.875214576721191
    6. '        
' → logprob: -11.125214576721191
    7. 'if' → logprob: -11.625214576721191
    8. ',' → logprob: -12.375214576721191
    9. 'f' → logprob: -13.000214576721191
    10. '      ' → logprob: -13.125214576721191

Token 304: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9544256329536438
    2. 'd' → logprob: -1.454425573348999
    3. ' d' → logprob: -1.579425573348999
    4. ' if' → logprob: -2.079425573348999
    5. '       ' → logprob: -3.329425573348999
    6. 'if' → logprob: -4.329425811767578
    7. '   ' → logprob: -7.079425811767578
    8. ' ' → logprob: -8.579425811767578
    9. ' f' → logprob: -9.579425811767578
    10. '               ' → logprob: -10.079425811767578

Token 305: ' Conversion' (ID: 74433)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.035996995866298676
    2. 'if' → logprob: -3.535996913909912
    3. ' d' → logprob: -5.410996913909912
    4. ' if' → logprob: -6.535996913909912
    5. '       ' → logprob: -8.41099739074707
    6. '           ' → logprob: -9.78599739074707
    7. '   ' → logprob: -10.91099739074707
    8. ' ' → logprob: -12.53599739074707
    9. 'f' → logprob: -12.66099739074707
    10. '	d' → logprob: -13.78599739074707

Token 306: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.921120822429657
    2. 'd' → logprob: -1.6711208820343018
    3. '           ' → logprob: -1.7961208820343018
    4. ' de' → logprob: -2.2961208820343018
    5. '       ' → logprob: -3.5461208820343018
    6. '   ' → logprob: -3.6711208820343018
    7. 'int' → logprob: -3.7961208820343018
    8. '[int' → logprob: -4.671120643615723
    9. 'de' → logprob: -4.796120643615723
    10. ' =' → logprob: -5.046120643615723

Token 307: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.46232885122299194
    2. 'd' → logprob: -1.5873289108276367
    3. 'int' → logprob: -1.9623289108276367
    4. 'ent' → logprob: -5.212328910827637
    5. ' int' → logprob: -5.462328910827637
    6. ' c' → logprob: -5.462328910827637
    7. 'code' → logprob: -5.587328910827637
    8. 'char' → logprob: -6.212328910827637
    9. 'car' → logprob: -6.337328910827637
    10. '1' → logprob: -7.462328910827637

Token 308: ' c' (ID: 274)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07372830808162689
    2. 'en' → logprob: -3.073728322982788
    3. ' into' → logprob: -4.948728084564209
    4. '<|end|>' → logprob: -5.073728084564209
    5. '   ' → logprob: -6.073728084564209
    6. ' c' → logprob: -6.448728084564209
    7. ' in' → logprob: -6.448728084564209
    8. ')' → logprob: -6.948728084564209
    9. ' ' → logprob: -6.948728084564209
    10. ' de' → logprob: -7.823728084564209

Token 309: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.20635925233364105
    2. '==' → logprob: -2.9563591480255127
    3. ' ==' → logprob: -3.4563591480255127
    4. ' into' → logprob: -3.5813591480255127
    5. 'en' → logprob: -3.7063591480255127
    6. ')' → logprob: -4.456359386444092
    7. '   ' → logprob: -4.831359386444092
    8. '-' → logprob: -4.956359386444092
    9. ' in' → logprob: -5.456359386444092
    10. '=' → logprob: -5.581359386444092

Token 310: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.26422709226608276
    2. ' int' → logprob: -1.5142271518707275
    3. '1' → logprob: -4.764226913452148
    4. '0' → logprob: -5.639226913452148
    5. ' ' → logprob: -10.014226913452148
    6. ' entier' → logprob: -10.139226913452148
    7. 'ent' → logprob: -11.139226913452148
    8. '(int' → logprob: -12.139226913452148
    9. 'd' → logprob: -12.264226913452148
    10. '   ' → logprob: -12.264226913452148

Token 311: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9685770273208618
    2. ':' → logprob: -1.5935770273208618
    3. '           ' → logprob: -2.0935769081115723
    4. 'd' → logprob: -2.3435769081115723
    5. ' d' → logprob: -2.7185769081115723
    6. ' =' → logprob: -2.7185769081115723
    7. ' :' → logprob: -3.8435769081115723
    8. ',' → logprob: -4.718576908111572
    9. '(d' → logprob: -4.843576908111572
    10. '=' → logprob: -5.218576908111572

Token 312: 'va' (ID: 2873)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2446010261774063
    2. 'c' → logprob: -1.9946010112762451
    3. 'd' → logprob: -3.369601011276245
    4. ' int' → logprob: -3.494601011276245
    5. '1' → logprob: -5.494601249694824
    6. '           ' → logprob: -5.619601249694824
    7. ')' → logprob: -5.744601249694824
    8. ' c' → logprob: -5.869601249694824
    9. ')c' → logprob: -6.869601249694824
    10. ' d' → logprob: -7.494601249694824

Token 313: 'ud' (ID: 527)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.35899439454078674
    2. ' int' → logprob: -1.8589943647384644
    3. '=int' → logprob: -2.608994483947754
    4. '   ' → logprob: -3.858994483947754
    5. ')' → logprob: -4.483994483947754
    6. ' =' → logprob: -4.608994483947754
    7. '[int' → logprob: -5.108994483947754
    8. '=' → logprob: -5.233994483947754
    9. 'd' → logprob: -5.858994483947754
    10. 'al' → logprob: -6.108994483947754

Token 314: 'ra' (ID: 614)
  Prédit: 'oir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oir' → logprob: -0.6546446681022644
    2. 'ir' → logprob: -0.7796446681022644
    3. 'ant' → logprob: -4.90464448928833
    4. 'int' → logprob: -5.65464448928833
    5. 'er' → logprob: -6.02964448928833
    6. 'e' → logprob: -6.15464448928833
    7. 'eur' → logprob: -6.15464448928833
    8. '0' → logprob: -6.65464448928833
    9. 'ra' → logprob: -7.27964448928833
    10. 'r' → logprob: -7.40464448928833

Token 315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5599136352539062
    2. ' ' → logprob: -0.9349136352539062
    3. ' int' → logprob: -3.5599136352539062
    4. '1' → logprob: -5.559913635253906
    5. 'int' → logprob: -5.809913635253906
    6. ' soit' → logprob: -7.934913635253906
    7. ' either' → logprob: -8.934913635253906
    8. ' )' → logprob: -9.559913635253906
    9. ' c' → logprob: -9.684913635253906
    10. '   ' → logprob: -9.809913635253906

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03221263736486435
    2. ' ' → logprob: -4.032212734222412
    3. 'int' → logprob: -5.032212734222412
    4. '1' → logprob: -5.282212734222412
    5. ' int' → logprob: -6.282212734222412
    6. ' soit' → logprob: -8.157212257385254
    7. ' either' → logprob: -9.407212257385254
    8. 'either' → logprob: -10.532212257385254
    9. 'c' → logprob: -10.782212257385254
    10. '   ' → logprob: -11.157212257385254

Token 317: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.04891117289662361
    2. 'ou' → logprob: -3.1739110946655273
    3. ' or' → logprob: -6.298911094665527
    4. ')' → logprob: -6.423911094665527
    5. 'if' → logprob: -6.798911094665527
    6. 'or' → logprob: -7.548911094665527
    7. ' if' → logprob: -8.173911094665527
    8. ',' → logprob: -8.423911094665527
    9. '+' → logprob: -8.798911094665527
    10. '1' → logprob: -10.923911094665527

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47410649061203003
    2. ' ' → logprob: -0.97410649061203
    3. ' ' → logprob: -10.474106788635254
    4. ' ' → logprob: -15.099106788635254
    5. ',' → logprob: -15.786606788635254
    6. 's' → logprob: -16.099105834960938
    7. '  ' → logprob: -16.099105834960938
    8. ')' → logprob: -16.161605834960938
    9. '   ' → logprob: -16.411605834960938
    10. 'e' → logprob: -17.036605834960938

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.000204086303711
    4. '
' → logprob: -17.37520408630371
    5. '   ' → logprob: -17.37520408630371
    6. ')' → logprob: -17.93770408630371
    7. '  ' → logprob: -18.56270408630371
    8. ',' → logprob: -18.93770408630371
    9. '

' → logprob: -19.00020408630371
    10. '```' → logprob: -19.06270408630371

Token 320: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00516710476949811
    2. ')
' → logprob: -5.880167007446289
    3. '       ' → logprob: -6.630167007446289
    4. '),' → logprob: -7.255167007446289
    5. ' )' → logprob: -9.005167007446289
    6. '):' → logprob: -9.505167007446289
    7. '           ' → logprob: -9.755167007446289
    8. '):
' → logprob: -11.130167007446289
    9. ')
' → logprob: -11.255167007446289
    10. ',' → logprob: -11.630167007446289

Token 321: ' on' (ID: 402)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11290132254362106
    2. 'c' → logprob: -2.237901210784912
    3. ' ' → logprob: -10.98790168762207
    4. ' ' → logprob: -11.23790168762207
    5. ' le' → logprob: -11.73790168762207
    6. '(c' → logprob: -12.36290168762207
    7. ' isinstance' → logprob: -12.36290168762207
    8. ' il' → logprob: -12.36290168762207
    9. ' (' → logprob: -12.61290168762207
    10. ' la' → logprob: -12.98790168762207

Token 322: ' suppose' (ID: 35968)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6451422572135925
    2. ' attend' → logprob: -1.6451423168182373
    3. ' suppose' → logprob: -2.0201423168182373
    4. 's' → logprob: -3.0201423168182373
    5. 'c' → logprob: -3.8951423168182373
    6. ' est' → logprob: -4.145142078399658
    7. ' assume' → logprob: -4.520142078399658
    8. 'att' → logprob: -5.645142078399658
    9. ' c' → logprob: -5.645142078399658
    10. ')' → logprob: -5.895142078399658

Token 323: ' l' (ID: 305)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3813830018043518
    2. ' c' → logprob: -2.506382942199707
    3. ' une' → logprob: -2.631382942199707
    4. 'b' → logprob: -2.881382942199707
    5. 'c' → logprob: -3.006382942199707
    6. ' un' → logprob: -4.131382942199707
    7. 'que' → logprob: -4.756382942199707
    8. ' qu' → logprob: -5.006382942199707
    9. ' b' → logprob: -5.131382942199707
    10. 'binary' → logprob: -5.381382942199707

Token 324: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2510240972042084
    2. 'e' → logprob: -1.6260241270065308
    3. ''entrée' → logprob: -5.37602424621582
    4. ''utilisateur' → logprob: -5.75102424621582
    5. ''a' → logprob: -6.37602424621582
    6. 'à' → logprob: -6.62602424621582
    7. 'ue' → logprob: -6.62602424621582
    8. 'c' → logprob: -6.62602424621582
    9. ''' → logprob: -6.62602424621582
    10. '#' → logprob: -6.87602424621582

Token 325: ' b' (ID: 287)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7885892987251282
    2. ' b' → logprob: -1.1635892391204834
    3. 'b' → logprob: -2.6635892391204834
    4. ' binary' → logprob: -2.9135892391204834
    5. ')' → logprob: -3.5385892391204834
    6. ' bin' → logprob: -3.9135892391204834
    7. ' )' → logprob: -4.1635894775390625
    8. '   ' → logprob: -4.9135894775390625
    9. 'binary' → logprob: -5.1635894775390625
    10. ' valid' → logprob: -5.7885894775390625

Token 326: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.012913253158330917
    2. 'in' → logprob: -4.387913227081299
    3. 'inary' → logprob: -8.387913703918457
    4. 'inar' → logprob: -9.262913703918457
    5. 'iné' → logprob: -11.137913703918457
    6. 'ina' → logprob: -11.637913703918457
    7. '"' → logprob: -12.137913703918457
    8. 'i' → logprob: -12.262913703918457
    9. '[in' → logprob: -12.262913703918457
    10. '#' → logprob: -12.262913703918457

Token 327: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014821222983300686
    2. '       ' → logprob: -5.1398210525512695
    3. ')
' → logprob: -5.5148210525512695
    4. '),' → logprob: -5.5148210525512695
    5. '           ' → logprob: -8.26482105255127
    6. '):' → logprob: -8.88982105255127
    7. ' )' → logprob: -9.01482105255127
    8. '):
' → logprob: -9.13982105255127
    9. ',' → logprob: -10.51482105255127
    10. ')d' → logprob: -10.76482105255127

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14692680537700653
    2. '           ' → logprob: -2.1469268798828125
    3. 'd' → logprob: -4.3969268798828125
    4. ' d' → logprob: -5.0219268798828125
    5. ':' → logprob: -8.646926879882812
    6. ' if' → logprob: -8.771926879882812
    7. ',' → logprob: -9.021926879882812
    8. '        
' → logprob: -9.771926879882812
    9. ' =' → logprob: -10.021926879882812
    10. '            
' → logprob: -10.146926879882812

Token 329: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005204708781093359
    2. ' d' → logprob: -5.630204677581787
    3. 'val' → logprob: -7.380204677581787
    4. '       ' → logprob: -7.505204677581787
    5. '           ' → logprob: -8.505205154418945
    6. 'value' → logprob: -9.505205154418945
    7. 'v' → logprob: -10.005205154418945
    8. ' val' → logprob: -10.130205154418945
    9. 'x' → logprob: -10.630205154418945
    10. 'num' → logprob: -11.505205154418945

Token 330: ' Stock' (ID: 16382)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1676575094461441
    2. ' d' → logprob: -1.917657494544983
    3. '       ' → logprob: -5.542657375335693
    4. 'if' → logprob: -6.667657375335693
    5. '           ' → logprob: -6.917657375335693
    6. ' if' → logprob: -7.042657375335693
    7. '   ' → logprob: -9.542657852172852
    8. ' ' → logprob: -10.167657852172852
    9. 'val' → logprob: -10.292657852172852
    10. '        ' → logprob: -10.292657852172852

Token 331: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.021861642599105835
    2. ' d' → logprob: -5.021861553192139
    3. 'e' → logprob: -5.396861553192139
    4. '=' → logprob: -5.896861553192139
    5. '[i' → logprob: -6.146861553192139
    6. ' =' → logprob: -6.271861553192139
    7. 'd' → logprob: -6.771861553192139
    8. '       ' → logprob: -7.396861553192139
    9. 'age' → logprob: -7.521861553192139
    10. '[' → logprob: -7.896861553192139

Token 332: ' dans' (ID: 2671)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2081194669008255
    2. 'd' → logprob: -1.833119511604309
    3. '           ' → logprob: -4.3331193923950195
    4. '       ' → logprob: -4.8331193923950195
    5. ' dans' → logprob: -5.4581193923950195
    6. '   ' → logprob: -7.2081193923950195
    7. '        ' → logprob: -8.33311939239502
    8. '          ' → logprob: -8.45811939239502
    9. ' de' → logprob: -8.70811939239502
    10. ' in' → logprob: -8.70811939239502

Token 333: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04858975484967232
    2. ' d' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.923589706420898
    4. ' ' → logprob: -13.923589706420898
    5. '	d' → logprob: -15.298589706420898
    6. '[d' → logprob: -16.6735897064209
    7. '  ' → logprob: -16.7985897064209
    8. '    ' → logprob: -16.7985897064209
    9. ')d' → logprob: -16.9235897064209
    10. '
' → logprob: -16.9235897064209

Token 334: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. ' [' → logprob: -12.875005722045898
    3. '[d' → logprob: -14.125005722045898
    4. '[' → logprob: -14.625005722045898
    5. '[I' → logprob: -14.750005722045898
    6. 'd' → logprob: -14.875005722045898
    7. '   ' → logprob: -15.250005722045898
    8. '[j' → logprob: -15.250005722045898
    9. 'i' → logprob: -16.1250057220459
    10. '```' → logprob: -16.6250057220459

Token 335: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012666800990700722
    2. '[i' → logprob: -4.387666702270508
    3. ' ][' → logprob: -9.387666702270508
    4. ']' → logprob: -10.387666702270508
    5. '[' → logprob: -11.137666702270508
    6. 'i' → logprob: -11.387666702270508
    7. '   ' → logprob: -12.262666702270508
    8. ''][' → logprob: -13.012666702270508
    9. '[I' → logprob: -13.137666702270508
    10. '"][' → logprob: -13.387666702270508

Token 336: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.465036105713807e-06
    2. ' j' → logprob: -12.500007629394531
    3. '0' → logprob: -13.250007629394531
    4. '
' → logprob: -13.875007629394531
    5. '   ' → logprob: -14.500007629394531
    6. ' ' → logprob: -15.500007629394531
    7. '][' → logprob: -16.25000762939453
    8. ']' → logprob: -16.37500762939453
    9. '2' → logprob: -17.12500762939453
    10. '[j' → logprob: -17.25000762939453

Token 337: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020708413794636726
    2. ']=' → logprob: -3.8957083225250244
    3. ' ]' → logprob: -8.895708084106445
    4. '=' → logprob: -10.895708084106445
    5. ']+=' → logprob: -13.145708084106445
    6. ']=(' → logprob: -13.145708084106445
    7. '[j' → logprob: -13.645708084106445
    8. '   ' → logprob: -13.770708084106445
    9. '[i' → logprob: -14.270708084106445
    10. ' =' → logprob: -14.395708084106445

Token 338: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2808677554130554
    2. ' =' → logprob: -2.2808678150177
    3. '       ' → logprob: -2.9058678150177
    4. '=' → logprob: -3.0308678150177
    5. ' d' → logprob: -3.7808678150177
    6. '           ' → logprob: -4.155867576599121
    7. '=d' → logprob: -8.280867576599121
    8. '               ' → logprob: -8.405867576599121
    9. '   ' → logprob: -9.030867576599121
    10. '=
' → logprob: -9.405867576599121

Token 339: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0035812994465231895
    2. ' d' → logprob: -5.753581523895264
    3. '       ' → logprob: -8.253581047058105
    4. '           ' → logprob: -8.878581047058105
    5. '   ' → logprob: -13.003581047058105
    6. '               ' → logprob: -14.503581047058105
    7. '	d' → logprob: -14.503581047058105
    8. '        ' → logprob: -16.128582000732422
    9. '          ' → logprob: -16.253582000732422
    10. ' ' → logprob: -16.253582000732422

Token 340: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[I' → logprob: -13.50000286102295
    3. ' [' → logprob: -14.12500286102295
    4. '[' → logprob: -14.50000286102295
    5. '][' → logprob: -15.62500286102295
    6. ')[' → logprob: -16.250003814697266
    7. '```' → logprob: -17.375003814697266
    8. '[int' → logprob: -18.000003814697266
    9. '[j' → logprob: -18.375003814697266
    10. 'i' → logprob: -18.500003814697266

Token 341: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020306356600485742
    2. ']' → logprob: -8.875203132629395
    3. '[i' → logprob: -9.875203132629395
    4. ' ][' → logprob: -12.000203132629395
    5. '[j' → logprob: -12.500203132629395
    6. '[' → logprob: -13.875203132629395
    7. '"][' → logprob: -15.375203132629395
    8. '   ' → logprob: -15.750203132629395
    9. ''][' → logprob: -16.000202178955078
    10. ')[' → logprob: -16.250202178955078

Token 342: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.939851037808694e-05
    2. ' j' → logprob: -10.500029563903809
    3. '[j' → logprob: -14.500029563903809
    4. ']' → logprob: -14.750029563903809
    5. ')' → logprob: -15.375029563903809
    6. 'int' → logprob: -16.250028610229492
    7. '	j' → logprob: -16.500028610229492
    8. ' ' → logprob: -16.625028610229492
    9. '][' → logprob: -16.750028610229492
    10. '=j' → logprob: -16.750028610229492

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008941899868659675
    2. ']=' → logprob: -7.125894069671631
    3. '=' → logprob: -9.375894546508789
    4. ' ]' → logprob: -12.375894546508789
    5. ' =' → logprob: -14.500894546508789
    6. ')' → logprob: -15.375894546508789
    7. ']
' → logprob: -18.00089454650879
    8. ']+=' → logprob: -18.00089454650879
    9. 'd' → logprob: -18.50089454650879
    10. ']

' → logprob: -18.75089454650879

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049824766814709
    2. ' =' → logprob: -4.511049747467041
    3. ']' → logprob: -14.1360502243042
    4. '=int' → logprob: -14.1360502243042
    5. ']=' → logprob: -14.7610502243042
    6. '=

' → logprob: -16.511049270629883
    7. '＝' → logprob: -16.636049270629883
    8. '=
' → logprob: -17.136049270629883
    9. ')=' → logprob: -17.636049270629883
    10. ')' → logprob: -17.636049270629883

Token 345: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008616461418569088
    2. ' int' → logprob: -4.7586164474487305
    3. '1' → logprob: -13.75861644744873
    4. 'c' → logprob: -14.25861644744873
    5. '0' → logprob: -15.75861644744873
    6. '(int' → logprob: -17.258617401123047
    7. ' ' → logprob: -17.258617401123047
    8. '   ' → logprob: -18.008617401123047
    9. ' c' → logprob: -18.008617401123047
    10. '	int' → logprob: -18.133617401123047

Token 346: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. 'c' → logprob: -14.251171112060547
    4. '(
' → logprob: -14.751171112060547
    5. ')c' → logprob: -15.751171112060547
    6. ' (' → logprob: -16.376171112060547
    7. '(

' → logprob: -18.001171112060547
    8. '(C' → logprob: -19.001171112060547
    9. '(d' → logprob: -19.376171112060547
    10. '((' → logprob: -19.376171112060547

Token 347: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ' )' → logprob: -11.750008583068848
    3. ')
' → logprob: -14.500008583068848
    4. '))' → logprob: -15.375008583068848
    5. '())' → logprob: -16.125009536743164
    6. ')#' → logprob: -17.000009536743164
    7. '<|end|>' → logprob: -17.250009536743164
    8. ']' → logprob: -17.375009536743164
    9. ')`' → logprob: -17.375009536743164
    10. '   ' → logprob: -17.750009536743164

Token 348: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6784301996231079
    2. '<|end|>' → logprob: -1.178430199623108
    3. '#' → logprob: -2.6784300804138184
    4. 'f' → logprob: -2.9284300804138184
    5. 'if' → logprob: -4.428430080413818
    6. ' for' → logprob: -4.553430080413818
    7. '
' → logprob: -4.678430080413818
    8. 'd' → logprob: -4.803430080413818
    9. ' ' → logprob: -5.428430080413818
    10. ')' → logprob: -5.428430080413818

Token 349: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03133038058876991
    2. 'f' → logprob: -4.656330585479736
    3. '#' → logprob: -5.031330585479736
    4. 'if' → logprob: -5.531330585479736
    5. 'R' → logprob: -5.906330585479736
    6. 'def' → logprob: -5.906330585479736
    7. 'dp' → logprob: -6.406330585479736
    8. 'Q' → logprob: -7.156330585479736
    9. 'd' → logprob: -7.406330585479736
    10. 'result' → logprob: -7.656330585479736

Token 350: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.03754743933677673
    2. 'placer' → logprob: -4.287547588348389
    3. 'placement' → logprob: -4.537547588348389
    4. 'p' → logprob: -4.787547588348389
    5. '#' → logprob: -7.162547588348389
    6. 'pla' → logprob: -7.287547588348389
    7. 'place' → logprob: -7.412547588348389
    8. 'er' → logprob: -7.537547588348389
    9. 'plit' → logprob: -7.787547588348389
    10. 'arque' → logprob: -8.03754711151123

Token 351: 'issage' (ID: 63863)
  Prédit: 'issage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issage' → logprob: -0.06712832301855087
    2. 'pl' → logprob: -2.8171284198760986
    3. 'p' → logprob: -6.1921281814575195
    4. '#' → logprob: -7.5671281814575195
    5. 'ir' → logprob: -7.9421281814575195
    6. 'er' → logprob: -8.19212818145752
    7. 'l' → logprob: -8.19212818145752
    8. 'plement' → logprob: -8.44212818145752
    9. 'issement' → logprob: -8.56712818145752
    10. 'ar' → logprob: -8.56712818145752

Token 352: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03476821258664131
    2. ' for' → logprob: -3.4097681045532227
    3. ' de' → logprob: -7.784768104553223
    4. ' of' → logprob: -8.034768104553223
    5. 'de' → logprob: -9.034768104553223
    6. '#' → logprob: -9.409768104553223
    7. 'of' → logprob: -10.034768104553223
    8. '<|end|>' → logprob: -10.284768104553223
    9. 'd' → logprob: -10.659768104553223
    10. '(' → logprob: -11.284768104553223

Token 353: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2196267694234848
    2. 'for' → logprob: -2.8446266651153564
    3. ' f' → logprob: -2.9696266651153564
    4. 'R' → logprob: -3.7196266651153564
    5. 'd' → logprob: -3.8446266651153564
    6. ' for' → logprob: -4.5946269035339355
    7. 'Q' → logprob: -4.7196269035339355
    8. ' R' → logprob: -4.8446269035339355
    9. 'range' → logprob: -4.9696269035339355
    10. ' range' → logprob: -5.8446269035339355

Token 354: ' table' (ID: 3293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.261546790599823
    2. 'f' → logprob: -1.6365468502044678
    3. 'd' → logprob: -3.8865468502044678
    4. 'R' → logprob: -4.761546611785889
    5. 'Q' → logprob: -5.136546611785889
    6. ' for' → logprob: -8.761547088623047
    7. '#' → logprob: -8.886547088623047
    8. 'range' → logprob: -9.136547088623047
    9. '```' → logprob: -10.011547088623047
    10. ' f' → logprob: -10.886547088623047

Token 355: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21310900151729584
    2. ' for' → logprob: -1.963109016418457
    3. 'f' → logprob: -3.088109016418457
    4. ' f' → logprob: -5.213109016418457
    5. 'd' → logprob: -8.213109016418457
    6. 's' → logprob: -10.338109016418457
    7. '	for' → logprob: -10.338109016418457
    8. '#' → logprob: -10.463109016418457
    9. '<|end|>' → logprob: -10.713109016418457
    10. ' ' → logprob: -11.088109016418457

Token 356: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2029743641614914
    2. 'd' → logprob: -1.7029743194580078
    3. ' f' → logprob: -6.827974319458008
    4. ' d' → logprob: -7.827974319458008
    5. 'for' → logprob: -9.952974319458008
    6. 'a' → logprob: -12.202974319458008
    7. ' ' → logprob: -12.327974319458008
    8. '```' → logprob: -12.577974319458008
    9. '   ' → logprob: -12.702974319458008
    10. 's' → logprob: -12.827974319458008

Token 357: '",' (ID: 672)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11377664655447006
    2. '[' → logprob: -2.363776683807373
    3. ' for' → logprob: -4.738776683807373
    4. ' =' → logprob: -5.863776683807373
    5. ']' → logprob: -7.363776683807373
    6. '
' → logprob: -7.863776683807373
    7. '=' → logprob: -8.363776206970215
    8. '#' → logprob: -8.488776206970215
    9. '[i' → logprob: -8.738776206970215
    10. '0' → logprob: -9.363776206970215

Token 358: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030806085094809532
    2. 'f' → logprob: -3.530806064605713
    3. '0' → logprob: -7.780806064605713
    4. '#' → logprob: -8.030806541442871
    5. ' for' → logprob: -8.530806541442871
    6. '
' → logprob: -9.405806541442871
    7. ' f' → logprob: -11.905806541442871
    8. '1' → logprob: -12.530806541442871
    9. 'i' → logprob: -12.780806541442871
    10. 'K' → logprob: -12.780806541442871

Token 359: ' pré' (ID: 9424)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028031587600708008
    2. '[N' → logprob: -4.778031349182129
    3. '[i' → logprob: -5.028031349182129
    4. ' =' → logprob: -5.528031349182129
    5. '=' → logprob: -6.028031349182129
    6. '#' → logprob: -6.528031349182129
    7. 'for' → logprob: -6.778031349182129
    8. '[-' → logprob: -6.903031349182129
    9. '0' → logprob: -7.153031349182129
    10. 'def' → logprob: -8.153031349182129

Token 360: '-c' (ID: 3452)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.09552189707756042
    2. 's' → logprob: -3.095521926879883
    3. 'c' → logprob: -3.345521926879883
    4. 'serve' → logprob: -5.970521926879883
    5. 'sent' → logprob: -6.470521926879883
    6. 'sum' → logprob: -6.595521926879883
    7. 'side' → logprob: -7.470521926879883
    8. 'parent' → logprob: -7.595521926879883
    9. 'figure' → logprob: -7.595521926879883
    10. 'par' → logprob: -7.720521926879883

Token 361: 'alc' (ID: 27187)
  Prédit: 'alc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alc' → logprob: -0.15090066194534302
    2. 'al' → logprob: -2.1509006023406982
    3. 'om' → logprob: -5.025900840759277
    4. 'pare' → logprob: -5.150900840759277
    5. 'c' → logprob: -5.775900840759277
    6. 'omp' → logprob: -6.775900840759277
    7. 'alculate' → logprob: -6.775900840759277
    8. 'ise' → logprob: -6.900900840759277
    9. '```' → logprob: -7.275900840759277
    10. '#' → logprob: -7.525900840759277

Token 362: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.012829115614295006
    2. 'ul' → logprob: -5.637829303741455
    3. 'alc' → logprob: -5.762829303741455
    4. 'al' → logprob: -6.637829303741455
    5. 'c' → logprob: -7.262829303741455
    6. 'u' → logprob: -7.262829303741455
    7. '[' → logprob: -7.512829303741455
    8. '_' → logprob: -7.762829303741455
    9. '**' → logprob: -8.262828826904297
    10. '#' → logprob: -8.262828826904297

Token 363: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9429858326911926
    2. 'les' → logprob: -1.0679857730865479
    3. ' les' → logprob: -2.567985773086548
    4. 'f' → logprob: -2.567985773086548
    5. ' for' → logprob: -3.942985773086548
    6. '#' → logprob: -4.192986011505127
    7. 'la' → logprob: -4.317986011505127
    8. ')' → logprob: -4.442986011505127
    9. ' la' → logprob: -4.442986011505127
    10. ' f' → logprob: -4.692986011505127

Token 364: ' information' (ID: 2164)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9017983078956604
    2. 'fonction' → logprob: -1.7767982482910156
    3. 'part' → logprob: -2.5267982482910156
    4. 's' → logprob: -2.5267982482910156
    5. 'pro' → logprob: -3.1517982482910156
    6. 'prob' → logprob: -3.4017982482910156
    7. 'for' → logprob: -3.9017982482910156
    8. ' somme' → logprob: -4.026798248291016
    9. 'certain' → logprob: -4.151798248291016
    10. 'pu' → logprob: -4.276798248291016

Token 365: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6248204112052917
    2. 'pour' → logprob: -2.1248204708099365
    3. ' pour' → logprob: -2.3748204708099365
    4. 'sur' → logprob: -2.6248204708099365
    5. 'import' → logprob: -2.7498204708099365
    6. ' for' → logprob: -3.2498204708099365
    7. ' sur' → logprob: -3.6248204708099365
    8. '#' → logprob: -3.8748204708099365
    9. ':' → logprob: -4.874820232391357
    10. '   ' → logprob: -5.374820232391357

Token 366: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6589264869689941
    2. ' la' → logprob: -2.283926486968994
    3. 'les' → logprob: -2.533926486968994
    4. 'la' → logprob: -2.658926486968994
    5. ' d' → logprob: -2.908926486968994
    6. 'f' → logprob: -3.408926486968994
    7. '#' → logprob: -3.533926486968994
    8. ' les' → logprob: -3.783926486968994
    9. 'i' → logprob: -3.908926486968994
    10. 'l' → logprob: -3.908926486968994

Token 367: ' motifs' (ID: 89637)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09744197130203247
    2. 'i' → logprob: -3.9724419116973877
    3. 'Q' → logprob: -4.972442150115967
    4. 'segments' → logprob: -4.972442150115967
    5. 'sub' → logprob: -5.097442150115967
    6. 'K' → logprob: -5.097442150115967
    7. 'ranges' → logprob: -5.222442150115967
    8. '0' → logprob: -5.472442150115967
    9. 's' → logprob: -5.597442150115967
    10. 'bits' → logprob: -5.722442150115967

Token 368: ' bin' (ID: 6958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005173751153051853
    2. ' for' → logprob: -5.880173683166504
    3. 'pour' → logprob: -6.130173683166504
    4. '#' → logprob: -9.130173683166504
    5. ' pour' → logprob: -9.630173683166504
    6. '   ' → logprob: -12.630173683166504
    7. 'de' → logprob: -12.755173683166504
    8. ' ' → logprob: -12.880173683166504
    9. '
' → logprob: -13.505173683166504
    10. '.' → logprob: -14.255173683166504

Token 369: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0031929241959005594
    2. 'patterns' → logprob: -6.753192901611328
    3. 'def' → logprob: -7.253192901611328
    4. 'for' → logprob: -7.628192901611328
    5. ' patterns' → logprob: -8.878192901611328
    6. 'aux' → logprob: -9.003192901611328
    7. 'ômes' → logprob: -9.253192901611328
    8. 'om' → logprob: -9.378192901611328
    9. '#' → logprob: -9.628192901611328
    10. 'omes' → logprob: -9.753192901611328

Token 370: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018191847950220108
    2. ' for' → logprob: -4.018191814422607
    3. '   ' → logprob: -10.893192291259766
    4. '#' → logprob: -11.268192291259766
    5. '
' → logprob: -12.393192291259766
    6. ':' → logprob: -13.393192291259766
    7. '	for' → logprob: -14.393192291259766
    8. '=' → logprob: -14.393192291259766
    9. '[' → logprob: -14.518192291259766
    10. '```' → logprob: -14.518192291259766

Token 371: ' indices' (ID: 30378)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06448196619749069
    2. 'Q' → logprob: -4.189481735229492
    3. ' sequences' → logprob: -4.689481735229492
    4. 'i' → logprob: -5.064481735229492
    5. 'sub' → logprob: -5.064481735229492
    6. 'indices' → logprob: -5.439481735229492
    7. ' d' → logprob: -6.064481735229492
    8. 'ranges' → logprob: -6.439481735229492
    9. 'range' → logprob: -6.564481735229492
    10. 'f' → logprob: -6.689481735229492

Token 372: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027467617765069008
    2. ' for' → logprob: -3.652467727661133
    3. '   ' → logprob: -6.902467727661133
    4. 'pour' → logprob: -9.277467727661133
    5. ':' → logprob: -11.152467727661133
    6. ' pour' → logprob: -11.402467727661133
    7. ' ' → logprob: -12.027467727661133
    8. '.' → logprob: -12.152467727661133
    9. 'i' → logprob: -12.402467727661133
    10. '#' → logprob: -12.402467727661133

Token 373: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003377695567905903
    2. ' for' → logprob: -5.753377914428711
    3. '   ' → logprob: -9.253377914428711
    4. 'R' → logprob: -9.753377914428711
    5. '```' → logprob: -10.253377914428711
    6. 'i' → logprob: -12.503377914428711
    7. '0' → logprob: -13.753377914428711
    8. '	for' → logprob: -14.128377914428711
    9. ' ' → logprob: -14.253377914428711
    10. '=' → logprob: -14.378377914428711

Token 374: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002814624458551407
    2. 'f' → logprob: -5.877814769744873
    3. 'def' → logprob: -12.127814292907715
    4. ' for' → logprob: -13.127814292907715
    5. '#' → logprob: -14.002814292907715
    6. 'i' → logprob: -14.752814292907715
    7. '
' → logprob: -15.377814292907715
    8. '0' → logprob: -15.752814292907715
    9. '```' → logprob: -15.877814292907715
    10. 'from' → logprob: -16.00281524658203

Token 375: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00040004486800171435
    2. 'k' → logprob: -8.125399589538574
    3. 'l' → logprob: -10.125399589538574
    4. ' i' → logprob: -11.375399589538574
    5. 'j' → logprob: -11.500399589538574
    6. 'length' → logprob: -11.625399589538574
    7. 'p' → logprob: -12.125399589538574
    8. 'x' → logprob: -12.375399589538574
    9. 'L' → logprob: -12.625399589538574
    10. 'h' → logprob: -12.875399589538574

Token 376: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009427884360775352
    2. 'k' → logprob: -7.500942707061768
    3. ' i' → logprob: -8.000943183898926
    4. 'p' → logprob: -11.250943183898926
    5. 'l' → logprob: -11.625943183898926
    6. 'length' → logprob: -11.750943183898926
    7. 'j' → logprob: -11.875943183898926
    8. 't' → logprob: -12.875943183898926
    9. 'level' → logprob: -13.375943183898926
    10. 'd' → logprob: -13.625943183898926

Token 377: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602610945701599
    2. 'in' → logprob: -1.9102611541748047
    3. ' ' → logprob: -10.535261154174805
    4. '   ' → logprob: -13.035261154174805
    5. 'd' → logprob: -14.035261154174805
    6. ',' → logprob: -14.035261154174805
    7. 'i' → logprob: -14.285261154174805
    8. 'for' → logprob: -14.410261154174805
    9. '>' → logprob: -14.535261154174805
    10. '  ' → logprob: -14.535261154174805

Token 378: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1384112536907196
    2. 'Q' → logprob: -2.638411283493042
    3. 'range' → logprob: -2.888411283493042
    4. ' range' → logprob: -6.263411045074463
    5. ' R' → logprob: -8.888411521911621
    6. '(Q' → logprob: -11.138411521911621
    7. '(R' → logprob: -11.138411521911621
    8. '1' → logprob: -11.388411521911621
    9. ' Q' → logprob: -11.888411521911621
    10. '(' → logprob: -11.888411521911621

Token 379: '1' (ID: 16)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2707159221172333
    2. 'Q' → logprob: -1.5207159519195557
    3. 'range' → logprob: -4.020715713500977
    4. ' range' → logprob: -7.645715713500977
    5. ' R' → logprob: -9.395715713500977
    6. '(Q' → logprob: -10.395715713500977
    7. '1' → logprob: -10.645715713500977
    8. '(R' → logprob: -11.020715713500977
    9. ' Q' → logprob: -11.645715713500977
    10. 'RQ' → logprob: -11.645715713500977

Token 380: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4571642279624939
    2. ',' → logprob: -1.0821642875671387
    3. ' in' → logprob: -3.5821642875671387
    4. 'to' → logprob: -9.33216381072998
    5. '   ' → logprob: -10.45716381072998
    6. 'import' → logprob: -10.70716381072998
    7. ' ' → logprob: -10.95716381072998
    8. ' ,' → logprob: -11.20716381072998
    9. ',N' → logprob: -11.20716381072998
    10. '```' → logprob: -11.45716381072998

Token 381: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00023512568441219628
    2. ' N' → logprob: -8.500235557556152
    3. '1' → logprob: -10.375235557556152
    4. 'n' → logprob: -15.250235557556152
    5. ' ' → logprob: -16.125234603881836
    6. 'R' → logprob: -18.000234603881836
    7. '```' → logprob: -18.000234603881836
    8. 'i' → logprob: -18.250234603881836
    9. '   ' → logprob: -18.375234603881836
    10. '	N' → logprob: -18.625234603881836

Token 382: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38309794664382935
    2. ' in' → logprob: -1.7580978870391846
    3. 'for' → logprob: -2.3830978870391846
    4. ',' → logprob: -4.133098125457764
    5. ' for' → logprob: -4.383098125457764
    6. ':
' → logprob: -4.383098125457764
    7. ':' → logprob: -5.133098125457764
    8. '(' → logprob: -5.883098125457764
    9. '[' → logprob: -6.508098125457764
    10. 'R' → logprob: -7.133098125457764

Token 383: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02334342710673809
    2. ' for' → logprob: -3.773343324661255
    3. '   ' → logprob: -9.273343086242676
    4. '
' → logprob: -13.023343086242676
    5. '	for' → logprob: -13.773343086242676
    6. 'i' → logprob: -14.898343086242676
    7. ')' → logprob: -16.023344039916992
    8. ' ' → logprob: -16.898344039916992
    9. 'R' → logprob: -16.898344039916992
    10. '```' → logprob: -16.898344039916992

Token 384: ' examine' (ID: 28035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.501047670841217
    2. 'R' → logprob: -1.1260476112365723
    3. ' for' → logprob: -3.7510476112365723
    4. ' R' → logprob: -4.001047611236572
    5. 'in' → logprob: -4.876047611236572
    6. 'range' → logprob: -4.876047611236572
    7. ' range' → logprob: -5.001047611236572
    8. ' in' → logprob: -5.376047611236572
    9. ' ' → logprob: -7.376047611236572
    10. '   ' → logprob: -7.751047611236572

Token 385: ' chaque' (ID: 21194)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.23776160180568695
    2. ' R' → logprob: -2.3627614974975586
    3. 'Q' → logprob: -2.8627614974975586
    4. ' range' → logprob: -3.7377614974975586
    5. 'range' → logprob: -4.112761497497559
    6. 'i' → logprob: -4.987761497497559
    7. 'd' → logprob: -5.487761497497559
    8. 'for' → logprob: -5.987761497497559
    9. ' Q' → logprob: -6.237761497497559
    10. ' i' → logprob: -7.237761497497559

Token 386: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12912864983081818
    2. ' i' → logprob: -2.1291286945343018
    3. 'k' → logprob: -7.004128456115723
    4. ' k' → logprob: -8.379128456115723
    5. 'j' → logprob: -8.629128456115723
    6. ' ' → logprob: -9.004128456115723
    7. 'd' → logprob: -9.629128456115723
    8. '_' → logprob: -9.879128456115723
    9. 'a' → logprob: -9.879128456115723
    10. 'x' → logprob: -9.941628456115723

Token 387: ' b' (ID: 287)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7299759387969971
    2. 'i' → logprob: -0.9799759387969971
    3. 'in' → logprob: -2.604975938796997
    4. ' in' → logprob: -4.104975700378418
    5. '(R' → logprob: -4.479975700378418
    6. 'R' → logprob: -4.729975700378418
    7. 'd' → logprob: -5.104975700378418
    8. '(' → logprob: -5.354975700378418
    9. 'for' → logprob: -5.479975700378418
    10. ' i' → logprob: -5.604975700378418

Token 388: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6615565419197083
    2. ' in' → logprob: -0.7865565419197083
    3. 'i' → logprob: -4.411556720733643
    4. ')' → logprob: -4.911556720733643
    5. ',' → logprob: -5.911556720733643
    6. '=' → logprob: -6.536556720733643
    7. ' =' → logprob: -6.911556720733643
    8. ' i' → logprob: -6.911556720733643
    9. 'R' → logprob: -7.786556720733643
    10. '(' → logprob: -8.036556243896484

Token 389: ' possible' (ID: 4149)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6857191324234009
    2. ' in' → logprob: -0.9357191324234009
    3. 'i' → logprob: -3.1857190132141113
    4. 'for' → logprob: -3.5607190132141113
    5. '(i' → logprob: -4.185719013214111
    6. ' i' → logprob: -5.185719013214111
    7. ' for' → logprob: -5.310719013214111
    8. '[i' → logprob: -5.810719013214111
    9. 'd' → logprob: -6.310719013214111
    10. '(' → logprob: -7.060719013214111

Token 390: ' sur' (ID: 1512)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0813932865858078
    2. ' in' → logprob: -2.706393241882324
    3. 'for' → logprob: -4.956393241882324
    4. '   ' → logprob: -6.456393241882324
    5. ',' → logprob: -7.456393241882324
    6. ' for' → logprob: -7.831393241882324
    7. 'i' → logprob: -8.206393241882324
    8. 'dans' → logprob: -8.331393241882324
    9. 'from' → logprob: -8.831393241882324
    10. 'd' → logprob: -8.956393241882324

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2987801432609558
    2. ' i' → logprob: -1.5487802028656006
    3. 'R' → logprob: -3.6737802028656006
    4. ' R' → logprob: -4.9237799644470215
    5. 'Q' → logprob: -5.2987799644470215
    6. ' range' → logprob: -5.6737799644470215
    7. 'range' → logprob: -6.0487799644470215
    8. '[i' → logprob: -6.7987799644470215
    9. ' Q' → logprob: -7.5487799644470215
    10. ' ' → logprob: -8.54878044128418

Token 392: ' bits' (ID: 18189)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018980644643306732
    2. ':' → logprob: -4.143980503082275
    3. '[' → logprob: -7.518980503082275
    4. ' +' → logprob: -7.518980503082275
    5. 'in' → logprob: -7.643980503082275
    6. 'range' → logprob: -8.518980979919434
    7. '):' → logprob: -8.643980979919434
    8. ',' → logprob: -8.768980979919434
    9. '+:' → logprob: -9.018980979919434
    10. '(' → logprob: -9.268980979919434

Token 393: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9654977321624756
    2. ' for' → logprob: -1.0904977321624756
    3. '   ' → logprob: -1.3404977321624756
    4. ':' → logprob: -4.090497970581055
    5. ',' → logprob: -6.090497970581055
    6. ' in' → logprob: -6.840497970581055
    7. ':
' → logprob: -7.090497970581055
    8. 'in' → logprob: -8.090497970581055
    9. ' :' → logprob: -9.715497970581055
    10. ' ' → logprob: -9.715497970581055

Token 394: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05642828345298767
    2. ' for' → logprob: -2.9314281940460205
    3. '   ' → logprob: -6.5564284324646
    4. '	for' → logprob: -9.931427955627441
    5. '```' → logprob: -10.431427955627441
    6. 'i' → logprob: -10.431427955627441
    7. 'R' → logprob: -12.431427955627441
    8. ' ' → logprob: -13.056427955627441
    9. ' i' → logprob: -13.431427955627441
    10. ' 
' → logprob: -13.556427955627441

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00408932426944375
    2. ' i' → logprob: -5.50408935546875
    3. ' ' → logprob: -13.00408935546875
    4. 'I' → logprob: -13.12908935546875
    5. 'k' → logprob: -13.37908935546875
    6. '	i' → logprob: -14.00408935546875
    7. 'K' → logprob: -14.12908935546875
    8. '   ' → logprob: -14.12908935546875
    9. 'j' → logprob: -14.25408935546875
    10. 'x' → logprob: -14.87908935546875

Token 396: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05492245405912399
    2. ' in' → logprob: -2.929922342300415
    3. ' ' → logprob: -11.179922103881836
    4. 'In' → logprob: -12.179922103881836
    5. 'R' → logprob: -12.429922103881836
    6. '	in' → logprob: -13.304922103881836
    7. 'not' → logprob: -13.304922103881836
    8. 'I' → logprob: -13.429922103881836
    9. '   ' → logprob: -13.554922103881836
    10. '_in' → logprob: -13.554922103881836

Token 397: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.036308251321315765
    2. 'range' → logprob: -4.286308288574219
    3. ' R' → logprob: -4.411308288574219
    4. 'Q' → logprob: -5.161308288574219
    5. ' range' → logprob: -5.536308288574219
    6. ' Q' → logprob: -10.286308288574219
    7. '1' → logprob: -10.661308288574219
    8. ' ' → logprob: -11.536308288574219
    9. 'Range' → logprob: -11.661308288574219
    10. '(' → logprob: -12.911308288574219

Token 398: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(
' → logprob: -18.625
    5. '2' → logprob: -21.0
    6. '   ' → logprob: -22.25
    7. '((' → logprob: -22.625
    8. '
' → logprob: -22.625
    9. '(N' → logprob: -22.625
    10. ' ' → logprob: -22.75

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890983670949936
    2. '(' → logprob: -2.5789098739624023
    3. ' ' → logprob: -11.078909873962402
    4. ' (' → logprob: -13.328909873962402
    5. '   ' → logprob: -13.328909873962402
    6. ')' → logprob: -14.453909873962402
    7. ',' → logprob: -15.203909873962402
    8. '
' → logprob: -15.328909873962402
    9. '2' → logprob: -16.578908920288086
    10. '

' → logprob: -16.953908920288086

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007881888188421726
    2. ',N' → logprob: -5.007882118225098
    3. '(N' → logprob: -6.882882118225098
    4. ' ,' → logprob: -9.257882118225098
    5. '(' → logprob: -10.132882118225098
    6. 'N' → logprob: -12.757882118225098
    7. ',n' → logprob: -13.882882118225098
    8. ' (' → logprob: -15.257882118225098
    9. ',K' → logprob: -15.257882118225098
    10. ',
' → logprob: -15.257882118225098

Token 401: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005541055579669774
    2. ' N' → logprob: -7.500554084777832
    3. '(N' → logprob: -14.125554084777832
    4. '   ' → logprob: -14.875554084777832
    5. '	N' → logprob: -16.87555503845215
    6. ' ' → logprob: -18.00055503845215
    7. ',N' → logprob: -18.25055503845215
    8. 'K' → logprob: -18.62555503845215
    9. ',' → logprob: -19.12555503845215
    10. ')' → logprob: -19.37555503845215

Token 402: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005552975926548243
    2. ' +' → logprob: -7.500555515289307
    3. '(' → logprob: -14.250555038452148
    4. '+
' → logprob: -14.625555038452148
    5. '()+' → logprob: -14.750555038452148
    6. '1' → logprob: -15.125555038452148
    7. '+i' → logprob: -15.375555038452148
    8. '   ' → logprob: -15.750555038452148
    9. '):
' → logprob: -16.25055503845215
    10. '(i' → logprob: -17.00055503845215

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. ')' → logprob: -16.25000762939453
    4. '   ' → logprob: -16.87500762939453
    5. '```' → logprob: -17.37500762939453
    6. '2' → logprob: -18.00000762939453
    7. '):
' → logprob: -18.37500762939453
    8. '
' → logprob: -18.75000762939453
    9. '۱' → logprob: -18.87500762939453
    10. '+' → logprob: -19.12500762939453

Token 404: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06211791932582855
    2. '):
' → logprob: -2.8121178150177
    3. ':' → logprob: -9.062117576599121
    4. '):
' → logprob: -10.437117576599121
    5. ')' → logprob: -12.687117576599121
    6. ' ):' → logprob: -14.312117576599121
    7. '):

' → logprob: -14.562117576599121
    8. '   ' → logprob: -14.937117576599121
    9. ':
' → logprob: -15.312117576599121
    10. ',' → logprob: -16.312118530273438

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055766813457012177
    2. 'for' → logprob: -3.5557668209075928
    3. ' for' → logprob: -3.6807668209075928
    4. '	for' → logprob: -7.680766582489014
    5. '   ' → logprob: -11.430767059326172
    6. '       ' → logprob: -13.180767059326172
    7. ' ' → logprob: -13.805767059326172
    8. ' ' → logprob: -14.930767059326172
    9. '   ' → logprob: -15.055767059326172
    10. '	   ' → logprob: -15.430767059326172

Token 406: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025391044095158577
    2. ' for' → logprob: -3.775391101837158
    3. '   ' → logprob: -6.150391101837158
    4. ' ' → logprob: -12.150390625
    5. 'j' → logprob: -13.150390625
    6. '	for' → logprob: -13.275390625
    7. '
' → logprob: -15.025390625
    8. 'b' → logprob: -15.275390625
    9. '0' → logprob: -15.525390625
    10. 'f' → logprob: -15.650390625

Token 407: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7491250875755213e-05
    2. ' for' → logprob: -11.250027656555176
    3. 'f' → logprob: -11.750027656555176
    4. 'mask' → logprob: -12.500027656555176
    5. 'm' → logprob: -14.500027656555176
    6. 'b' → logprob: -14.625027656555176
    7. '   ' → logprob: -14.625027656555176
    8. 'x' → logprob: -15.250027656555176
    9. 'prev' → logprob: -15.250027656555176
    10. 'j' → logprob: -15.500027656555176

Token 408: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07597675174474716
    2. 'b' → logprob: -2.700976848602295
    3. ' j' → logprob: -5.200976848602295
    4. ' b' → logprob: -7.825976848602295
    5. 'k' → logprob: -10.075976371765137
    6. 'x' → logprob: -10.700976371765137
    7. 'c' → logprob: -11.700976371765137
    8. 'a' → logprob: -12.200976371765137
    9. '   ' → logprob: -12.888476371765137
    10. '0' → logprob: -13.075976371765137

Token 409: ' entier' (ID: 80473)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4146464765071869
    2. 'j' → logprob: -1.4146465063095093
    3. 'x' → logprob: -3.0396463871002197
    4. 'm' → logprob: -4.289646625518799
    5. 'k' → logprob: -4.414646625518799
    6. 'a' → logprob: -5.039646625518799
    7. 'mask' → logprob: -5.539646625518799
    8. 'v' → logprob: -6.164646625518799
    9. 'c' → logprob: -6.164646625518799
    10. 's' → logprob: -6.664646625518799

Token 410: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7053852081298828
    2. 'b' → logprob: -0.8303852081298828
    3. ' j' → logprob: -3.205385208129883
    4. ' b' → logprob: -3.705385208129883
    5. 'x' → logprob: -6.455385208129883
    6. 'k' → logprob: -7.205385208129883
    7. ' in' → logprob: -7.205385208129883
    8. '   ' → logprob: -7.330385208129883
    9. 'a' → logprob: -7.580385208129883
    10. ' x' → logprob: -8.830385208129883

Token 411: ' dont' (ID: 11562)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17994190752506256
    2. ' in' → logprob: -1.8049418926239014
    3. '   ' → logprob: -9.55494213104248
    4. ')' → logprob: -10.30494213104248
    5. 'R' → logprob: -10.42994213104248
    6. ',' → logprob: -10.92994213104248
    7. ' ' → logprob: -11.42994213104248
    8. '  ' → logprob: -11.92994213104248
    9. 'd' → logprob: -12.17994213104248
    10. 'dans' → logprob: -12.30494213104248

Token 412: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.053334783762693405
    2. '0' → logprob: -4.178334712982178
    3. ' j' → logprob: -4.678334712982178
    4. 'range' → logprob: -4.803334712982178
    5. 'R' → logprob: -4.928334712982178
    6. 'la' → logprob: -5.428334712982178
    7. 'Q' → logprob: -6.553334712982178
    8. '2' → logprob: -6.678334712982178
    9. ' range' → logprob: -6.678334712982178
    10. ' la' → logprob: -6.678334712982178

Token 413: ' représentation' (ID: 162614)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3623888492584229
    2. 'j' → logprob: -1.4873888492584229
    3. 'val' → logprob: -1.9873888492584229
    4. 'R' → logprob: -2.112388849258423
    5. ' range' → logprob: -2.362388849258423
    6. ' longueur' → logprob: -3.237388849258423
    7. ' j' → logprob: -3.987388849258423
    8. 'long' → logprob: -4.487388610839844
    9. 'pl' → logprob: -4.612388610839844
    10. '2' → logprob: -4.612388610839844

Token 414: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7729379534721375
    2. ' en' → logprob: -1.5229380130767822
    3. 'en' → logprob: -2.2729380130767822
    4. ' b' → logprob: -2.8979380130767822
    5. 'bin' → logprob: -3.1479380130767822
    6. 'binary' → logprob: -3.6479380130767822
    7. ' j' → logprob: -4.147937774658203
    8. 'j' → logprob: -4.397937774658203
    9. ' i' → logprob: -4.647937774658203
    10. 'i' → logprob: -4.772937774658203

Token 415: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.014228851534426212
    2. 'in' → logprob: -4.514228820800781
    3. 'it' → logprob: -6.764228820800781
    4. 'its' → logprob: -8.139228820800781
    5. 'inary' → logprob: -8.139228820800781
    6. 'i' → logprob: -8.264228820800781
    7. 'b' → logprob: -8.389228820800781
    8. '[j' → logprob: -9.139228820800781
    9. 'j' → logprob: -9.889228820800781
    10. '```' → logprob: -9.889228820800781

Token 416: ' tient' (ID: 69541)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.3029261827468872
    2. 'sur' → logprob: -1.4279261827468872
    3. 'a' → logprob: -1.5529261827468872
    4. ' sur' → logprob: -2.5529260635375977
    5. ' est' → logprob: -2.6779260635375977
    6. 'length' → logprob: -3.0529260635375977
    7. ' a' → logprob: -4.302926063537598
    8. 'se' → logprob: -4.802926063537598
    9. 'in' → logprob: -5.177926063537598
    10. 'en' → logprob: -5.302926063537598

Token 417: ' sur' (ID: 1512)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.157783642411232
    2. 'i' → logprob: -2.7827837467193604
    3. 'j' → logprob: -3.4077837467193604
    4. ' dans' → logprob: -4.157783508300781
    5. 'sur' → logprob: -4.157783508300781
    6. 'à' → logprob: -5.657783508300781
    7. '[i' → logprob: -5.657783508300781
    8. ' i' → logprob: -5.782783508300781
    9. ' sur' → logprob: -6.032783508300781
    10. 'in' → logprob: -6.157783508300781

Token 418: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054915569722652435
    2. ' i' → logprob: -2.9299156665802
    3. 'j' → logprob: -11.804915428161621
    4. ' ' → logprob: -12.304915428161621
    5. '(i' → logprob: -12.304915428161621
    6. '[i' → logprob: -12.554915428161621
    7. '```' → logprob: -12.679915428161621
    8. '{i' → logprob: -13.304915428161621
    9. 'space' → logprob: -13.929915428161621
    10. '2' → logprob: -14.179915428161621

Token 419: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.15164372324943542
    2. 'bits' → logprob: -2.026643753051758
    3. ' espaces' → logprob: -5.526643753051758
    4. '+' → logprob: -6.651643753051758
    5. ' tokens' → logprob: -7.276643753051758
    6. '_bits' → logprob: -7.401643753051758
    7. 'tokens' → logprob: -7.651643753051758
    8. '):
' → logprob: -7.776643753051758
    9. ' spaces' → logprob: -7.901643753051758
    10. 'spaces' → logprob: -8.526643753051758

Token 420: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4589410722255707
    2. ':' → logprob: -2.0839409828186035
    3. ' for' → logprob: -2.2089409828186035
    4. 'for' → logprob: -2.4589409828186035
    5. ':
' → logprob: -3.3339409828186035
    6. 'in' → logprob: -5.4589409828186035
    7. ',' → logprob: -5.5839409828186035
    8. ' in' → logprob: -5.7089409828186035
    9. '):
' → logprob: -8.083941459655762
    10. ' :' → logprob: -8.583941459655762

Token 421: 'de' (ID: 613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13106097280979156
    2. ' j' → logprob: -2.38106107711792
    3. '   ' → logprob: -4.88106107711792
    4. ')' → logprob: -5.38106107711792
    5. '2' → logprob: -5.38106107711792
    6. '):
' → logprob: -5.88106107711792
    7. '0' → logprob: -6.13106107711792
    8. 'R' → logprob: -6.25606107711792
    9. '       ' → logprob: -6.50606107711792
    10. ' ' → logprob: -6.75606107711792

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003985077608376741
    2. '2' → logprob: -6.1289849281311035
    3. ' ' → logprob: -6.3789849281311035
    4. 'R' → logprob: -9.753985404968262
    5. ' R' → logprob: -11.128985404968262
    6. ' range' → logprob: -11.628985404968262
    7. '   ' → logprob: -12.003985404968262
    8. 'range' → logprob: -12.003985404968262
    9. ')' → logprob: -12.503985404968262
    10. '(' → logprob: -14.378985404968262

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000826421775855124
    2. '2' → logprob: -7.250826358795166
    3. ' ' → logprob: -9.375826835632324
    4. 'R' → logprob: -10.625826835632324
    5. ')' → logprob: -12.875826835632324
    6. 'range' → logprob: -13.500826835632324
    7. '`' → logprob: -14.375826835632324
    8. '(' → logprob: -14.750826835632324
    9. '1' → logprob: -14.875826835632324
    10. ' R' → logprob: -15.125826835632324

Token 424: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015056940028443933
    2. ' ,' → logprob: -6.8765058517456055
    3. ',j' → logprob: -8.376505851745605
    4. ' à' → logprob: -9.876505851745605
    5. ')' → logprob: -10.126505851745605
    6. '   ' → logprob: -10.376505851745605
    7. ',i' → logprob: -10.376505851745605
    8. ' ' → logprob: -10.501505851745605
    9. '2' → logprob: -10.876505851745605
    10. '(' → logprob: -11.751505851745605

Token 425: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005329693201929331
    2. ' ' → logprob: -5.255329608917236
    3. '(' → logprob: -9.380330085754395
    4. ' (' → logprob: -11.755330085754395
    5. ')' → logprob: -13.630330085754395
    6. '   ' → logprob: -13.755330085754395
    7. '
' → logprob: -14.255330085754395
    8. '```' → logprob: -14.380330085754395
    9. '1' → logprob: -15.880330085754395
    10. '`' → logprob: -16.630329132080078

Token 426: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020091790065634996
    2. '(' → logprob: -8.625201225280762
    3. ' ' → logprob: -11.250201225280762
    4. '```' → logprob: -12.250201225280762
    5. ')' → logprob: -13.625201225280762
    6. '1' → logprob: -14.000201225280762
    7. '
' → logprob: -14.125201225280762
    8. '`' → logprob: -15.750201225280762
    9. '   ' → logprob: -15.875201225280762
    10. ' (' → logprob: -15.875201225280762

Token 427: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -5.12127808178775e-05
    2. '(i' → logprob: -10.750051498413086
    3. '```' → logprob: -11.125051498413086
    4. ' **' → logprob: -11.625051498413086
    5. '[i' → logprob: -12.250051498413086
    6. 'i' → logprob: -14.375051498413086
    7. '*i' → logprob: -15.125051498413086
    8. '`' → logprob: -16.250051498413086
    9. '(' → logprob: -16.625051498413086
    10. '
' → logprob: -16.750051498413086

Token 428: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004659425176214427
    2. '**' → logprob: -7.7504658699035645
    3. ' i' → logprob: -10.750466346740723
    4. '```' → logprob: -11.375466346740723
    5. 'j' → logprob: -14.375466346740723
    6. '_i' → logprob: -14.750466346740723
    7. '
' → logprob: -15.125466346740723
    8. '*i' → logprob: -15.250466346740723
    9. '​' → logprob: -15.500466346740723
    10. '(i' → logprob: -15.625466346740723

Token 429: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3378547430038452
    2. 'j' → logprob: -2.0878548622131348
    3. '[i' → logprob: -2.9628548622131348
    4. '[j' → logprob: -3.2128548622131348
    5. '(j' → logprob: -3.7128548622131348
    6. '(i' → logprob: -3.8378548622131348
    7. '-' → logprob: -5.212854862213135
    8. ')-' → logprob: -5.212854862213135
    9. ')' → logprob: -5.587854862213135
    10. ' -' → logprob: -5.962854862213135

Token 430: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018341094255447388
    2. '(' → logprob: -4.643341064453125
    3. '(i' → logprob: -5.268341064453125
    4. ')' → logprob: -6.893341064453125
    5. '1' → logprob: -7.018341064453125
    6. 'j' → logprob: -8.143341064453125
    7. ' i' → logprob: -8.143341064453125
    8. '2' → logprob: -8.393341064453125
    9. ' (' → logprob: -8.643341064453125
    10. ')i' → logprob: -8.643341064453125

Token 431: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022420852910727262
    2. '1' → logprob: -6.502242088317871
    3. '(i' → logprob: -8.502242088317871
    4. ' i' → logprob: -8.752242088317871
    5. 'j' → logprob: -8.877242088317871
    6. ')' → logprob: -9.252242088317871
    7. ')i' → logprob: -9.502242088317871
    8. '(' → logprob: -10.002242088317871
    9. '```' → logprob: -11.752242088317871
    10. '{i' → logprob: -12.877242088317871

Token 432: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.636934220790863
    2. '):' → logprob: -0.761934220790863
    3. '   ' → logprob: -5.761934280395508
    4. ':' → logprob: -7.011934280395508
    5. '):
' → logprob: -8.761934280395508
    6. ')' → logprob: -9.636934280395508
    7. '+' → logprob: -11.636934280395508
    8. '       ' → logprob: -11.636934280395508
    9. ':
' → logprob: -11.636934280395508
    10. ' ):
' → logprob: -12.136934280395508

Token 433: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0657843351364136
    2. 'for' → logprob: -1.1907843351364136
    3. '   ' → logprob: -1.4407843351364136
    4. '       ' → logprob: -2.190784454345703
    5. 'j' → logprob: -6.815784454345703
    6. ' j' → logprob: -7.065784454345703
    7. ' R' → logprob: -8.440784454345703
    8. '    ' → logprob: -8.440784454345703
    9. ' ' → logprob: -9.065784454345703
    10. 'R' → logprob: -9.065784454345703

Token 434: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18735246360301971
    2. ' for' → logprob: -1.8123524188995361
    3. 'in' → logprob: -5.312352657318115
    4. ' in' → logprob: -6.937352657318115
    5. '   ' → logprob: -7.187352657318115
    6. 'range' → logprob: -8.562352180480957
    7. ':' → logprob: -8.687352180480957
    8. 'R' → logprob: -8.812352180480957
    9. ' R' → logprob: -9.062352180480957
    10. ' ' → logprob: -9.687352180480957

Token 435: ' calcul' (ID: 7559)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1182326152920723
    2. ' R' → logprob: -2.8682327270507812
    3. 'j' → logprob: -3.3682327270507812
    4. 'd' → logprob: -5.618232727050781
    5. 'for' → logprob: -5.618232727050781
    6. 'range' → logprob: -5.618232727050781
    7. ' j' → logprob: -5.868232727050781
    8. ' range' → logprob: -6.243232727050781
    9. 'f' → logprob: -6.493232727050781
    10. ' for' → logprob: -6.618232727050781

Token 436: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.213857963681221
    2. 'ter' → logprob: -1.9638580083847046
    3. 'r' → logprob: -3.088857889175415
    4. 'R' → logprob: -5.963858127593994
    5. 'rer' → logprob: -6.463858127593994
    6. 'ater' → logprob: -7.463858127593994
    7. 'for' → logprob: -7.588858127593994
    8. 'ner' → logprob: -7.963858127593994
    9. 'iter' → logprob: -8.713857650756836
    10. 'e' → logprob: -8.713857650756836

Token 437: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9418346881866455
    2. ' f' → logprob: -1.4418346881866455
    3. '   ' → logprob: -1.6918346881866455
    4. 'for' → logprob: -2.4418346881866455
    5. ' for' → logprob: -2.9418346881866455
    6. '       ' → logprob: -4.441834449768066
    7. 'j' → logprob: -5.066834449768066
    8. '(' → logprob: -5.066834449768066
    9. ' (' → logprob: -5.316834449768066
    10. ' j' → logprob: -5.566834449768066

Token 438: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0033965865150094032
    2. '   ' → logprob: -5.878396511077881
    3. '[j' → logprob: -8.128396987915039
    4. '[' → logprob: -9.503396987915039
    5. 'i' → logprob: -10.003396987915039
    6. 'for' → logprob: -10.378396987915039
    7. ' [' → logprob: -10.503396987915039
    8. '```' → logprob: -11.253396987915039
    9. ' =' → logprob: -11.503396987915039
    10. '=' → logprob: -11.503396987915039

Token 439: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008703093975782394
    2. '[j' → logprob: -4.883703231811523
    3. ']' → logprob: -7.008703231811523
    4. '])' → logprob: -10.008703231811523
    5. '[' → logprob: -10.133703231811523
    6. ' ][' → logprob: -10.133703231811523
    7. '   ' → logprob: -10.758703231811523
    8. '-' → logprob: -11.758703231811523
    9. 'j' → logprob: -11.883703231811523
    10. '[i' → logprob: -12.258703231811523

Token 440: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1279553291387856e-05
    2. ' j' → logprob: -11.875011444091797
    3. ']' → logprob: -12.750011444091797
    4. '   ' → logprob: -14.250011444091797
    5. '```' → logprob: -14.875011444091797
    6. '
' → logprob: -16.125011444091797
    7. '[j' → logprob: -16.375011444091797
    8. '][' → logprob: -16.375011444091797
    9. ' ' → logprob: -16.750011444091797
    10. ')' → logprob: -17.250011444091797

Token 441: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04601501673460007
    2. ']=' → logprob: -3.2960150241851807
    3. ' ]' → logprob: -5.796014785766602
    4. ']+=' → logprob: -6.046014785766602
    5. '   ' → logprob: -7.046014785766602
    6. '=' → logprob: -7.171014785766602
    7. ']+' → logprob: -7.671014785766602
    8. ' =' → logprob: -9.046014785766602
    9. '+' → logprob: -9.546014785766602
    10. ']=(' → logprob: -10.171014785766602

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17118391394615173
    2. 'for' → logprob: -2.6711838245391846
    3. ' for' → logprob: -2.6711838245391846
    4. '       ' → logprob: -4.046184062957764
    5. '	for' → logprob: -6.546184062957764
    6. ' ' → logprob: -10.421183586120605
    7. '```' → logprob: -11.671183586120605
    8. '    ' → logprob: -12.171183586120605
    9. '	   ' → logprob: -12.171183586120605
    10. '[' → logprob: -12.546183586120605

Token 443: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04755064472556114
    2. '   ' → logprob: -3.547550678253174
    3. ' for' → logprob: -4.047550678253174
    4. 'f' → logprob: -9.172550201416016
    5. ' ' → logprob: -10.422550201416016
    6. '       ' → logprob: -10.922550201416016
    7. ' f' → logprob: -12.047550201416016
    8. '	for' → logprob: -12.297550201416016
    9. '```' → logprob: -12.672550201416016
    10. 'j' → logprob: -12.797550201416016

Token 444: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3868812620639801
    2. ' j' → logprob: -1.1368812322616577
    3. ' ' → logprob: -12.636880874633789
    4. '   ' → logprob: -12.761880874633789
    5. '	j' → logprob: -13.136880874633789
    6. 'R' → logprob: -14.886880874633789
    7. '    ' → logprob: -15.136880874633789
    8. ' R' → logprob: -15.261880874633789
    9. '```' → logprob: -15.761880874633789
    10. '  ' → logprob: -15.761880874633789

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28118374943733215
    2. 'in' → logprob: -1.4061837196350098
    3. ' ' → logprob: -11.156184196472168
    4. 'n' → logprob: -12.406184196472168
    5. ',' → logprob: -12.781184196472168
    6. ')' → logprob: -12.906184196472168
    7. 'd' → logprob: -13.156184196472168
    8. 'R' → logprob: -13.531184196472168
    9. 'In' → logprob: -13.906184196472168
    10. 'import' → logprob: -13.906184196472168

Token 446: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.09218566119670868
    2. ' R' → logprob: -2.4671857357025146
    3. 'range' → logprob: -6.3421854972839355
    4. ' range' → logprob: -6.5921854972839355
    5. ' ' → logprob: -9.842185974121094
    6. 'Q' → logprob: -10.342185974121094
    7. 'Range' → logprob: -12.217185974121094
    8. 'd' → logprob: -12.217185974121094
    9. 'r' → logprob: -12.717185974121094
    10. '0' → logprob: -12.842185974121094

Token 447: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.531315314830863e-06
    2. '((' → logprob: -12.875003814697266
    3. '2' → logprob: -14.625003814697266
    4. '(
' → logprob: -15.500003814697266
    5. ' (' → logprob: -15.875003814697266
    6. '0' → logprob: -17.500003814697266
    7. '(d' → logprob: -18.750003814697266
    8. '(pow' → logprob: -19.125003814697266
    9. '(f' → logprob: -19.250003814697266
    10. '(-' → logprob: -19.625003814697266

Token 448: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12913839519023895
    2. '0' → logprob: -2.129138469696045
    3. '(' → logprob: -6.129138469696045
    4. ' ' → logprob: -10.504137992858887
    5. '1' → logprob: -13.504137992858887
    6. ')' → logprob: -15.254137992858887
    7. '   ' → logprob: -15.504137992858887
    8. ' (' → logprob: -16.004138946533203
    9. '`' → logprob: -17.379138946533203
    10. '(i' → logprob: -17.504138946533203

Token 449: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014451147289946675
    2. '(' → logprob: -7.501445293426514
    3. '2' → logprob: -7.876445293426514
    4. '<<' → logprob: -8.376444816589355
    5. ' ,' → logprob: -9.001444816589355
    6. '0' → logprob: -9.126444816589355
    7. ',
' → logprob: -11.001444816589355
    8. ',(' → logprob: -11.501444816589355
    9. ' ' → logprob: -12.626444816589355
    10. ' <<' → logprob: -12.751444816589355

Token 450: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00024965754710137844
    2. ' i' → logprob: -8.375249862670898
    3. '(i' → logprob: -11.375249862670898
    4. '   ' → logprob: -12.375249862670898
    5. ' ' → logprob: -13.625249862670898
    6. '(' → logprob: -13.875249862670898
    7. '```' → logprob: -15.250249862670898
    8. '	i' → logprob: -15.625249862670898
    9. ' (' → logprob: -15.625249862670898
    10. '_i' → logprob: -15.875249862670898

Token 451: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030267592519521713
    2. '):
' → logprob: -3.5302674770355225
    3. '):
' → logprob: -8.030267715454102
    4. ' ):' → logprob: -9.405267715454102
    5. '()' → logprob: -10.280267715454102
    6. '()):
' → logprob: -11.030267715454102
    7. '(' → logprob: -11.155267715454102
    8. ')' → logprob: -11.655267715454102
    9. '(i' → logprob: -11.655267715454102
    10. '():' → logprob: -12.280267715454102

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002006672555580735
    2. ':' → logprob: -7.127006530761719
    3. 'if' → logprob: -8.127006530761719
    4. ' if' → logprob: -8.377006530761719
    5. ' f' → logprob: -8.627006530761719
    6. 'f' → logprob: -9.502006530761719
    7. '   ' → logprob: -9.627006530761719
    8. '=' → logprob: -9.752006530761719
    9. '           ' → logprob: -9.877006530761719
    10. '):
' → logprob: -10.002006530761719

Token 453: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1278412342071533
    2. 'if' → logprob: -1.1278412342071533
    3. '           ' → logprob: -1.8778412342071533
    4. '0' → logprob: -2.6278412342071533
    5. ' if' → logprob: -3.0028412342071533
    6. '       ' → logprob: -3.1278412342071533
    7. ' f' → logprob: -3.6278412342071533
    8. 'k' → logprob: -5.877840995788574
    9. 'for' → logprob: -6.627840995788574
    10. '=' → logprob: -7.127840995788574

Token 454: ' Dé' (ID: 27247)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22242461144924164
    2. 'if' → logprob: -1.9724246263504028
    3. '       ' → logprob: -4.222424507141113
    4. 'prev' → logprob: -4.597424507141113
    5. 'mask' → logprob: -5.222424507141113
    6. 'x' → logprob: -5.597424507141113
    7. 's' → logprob: -5.597424507141113
    8. 'bit' → logprob: -5.722424507141113
    9. ' f' → logprob: -5.972424507141113
    10. 'p' → logprob: -6.097424507141113

Token 455: 'termination' (ID: 173292)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04096806421875954
    2. 'if' → logprob: -3.415968179702759
    3. 'd' → logprob: -5.91596794128418
    4. 'r' → logprob: -6.54096794128418
    5. '   ' → logprob: -6.54096794128418
    6. '#' → logprob: -7.66596794128418
    7. 'termin' → logprob: -8.04096794128418
    8. 'term' → logprob: -8.41596794128418
    9. 'c' → logprob: -9.29096794128418
    10. 'termination' → logprob: -9.54096794128418

Token 456: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3323441743850708
    2. '       ' → logprob: -1.9573441743850708
    3. ' de' → logprob: -3.2073440551757812
    4. ' =' → logprob: -3.9573440551757812
    5. ' of' → logprob: -4.082344055175781
    6. 's' → logprob: -4.582344055175781
    7. 'if' → logprob: -4.707344055175781
    8. ' (' → logprob: -4.707344055175781
    9. '=' → logprob: -4.957344055175781
    10. ':' → logprob: -5.582344055175781

Token 457: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10908939689397812
    2. ' f' → logprob: -2.4840893745422363
    3. ' (' → logprob: -5.609089374542236
    4. 'j' → logprob: -5.859089374542236
    5. '(f' → logprob: -6.109089374542236
    6. ')' → logprob: -6.359089374542236
    7. 'd' → logprob: -6.734089374542236
    8. '(' → logprob: -6.734089374542236
    9. 'k' → logprob: -7.109089374542236
    10. '(i' → logprob: -7.234089374542236

Token 458: ' valeur' (ID: 41664)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.48375779390335083
    2. 'i' → logprob: -2.358757734298706
    3. 'j' → logprob: -3.358757734298706
    4. ' f' → logprob: -3.733757734298706
    5. 'value' → logprob: -3.733757734298706
    6. '1' → logprob: -4.233757972717285
    7. '(i' → logprob: -4.233757972717285
    8. 'k' → logprob: -4.483757972717285
    9. 'val' → logprob: -4.483757972717285
    10. 'par' → logprob: -4.608757972717285

Token 459: ' du' (ID: 1462)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2669360041618347
    2. '=' → logprob: -2.1419360637664795
    3. ' f' → logprob: -3.0169360637664795
    4. ' =' → logprob: -4.0169358253479
    5. '       ' → logprob: -4.1419358253479
    6. ' de' → logprob: -4.5169358253479
    7. 's' → logprob: -5.6419358253479
    8. 'd' → logprob: -5.8919358253479
    9. '[' → logprob: -5.8919358253479
    10. 'de' → logprob: -5.8919358253479

Token 460: ' bit' (ID: 3546)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002733785891905427
    2. 'j' → logprob: -6.5027337074279785
    3. ' f' → logprob: -7.2527337074279785
    4. 'd' → logprob: -8.627734184265137
    5. 'max' → logprob: -10.002734184265137
    6. 'i' → logprob: -10.127734184265137
    7. 'c' → logprob: -10.252734184265137
    8. 'minimum' → logprob: -10.377734184265137
    9. '(' → logprob: -10.502734184265137
    10. ''f' → logprob: -10.627734184265137

Token 461: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4861310720443726
    2. ' =' → logprob: -1.6111310720443726
    3. '=' → logprob: -2.236131191253662
    4. '[' → logprob: -2.486131191253662
    5. 'j' → logprob: -2.486131191253662
    6. ' i' → logprob: -2.611131191253662
    7. 'i' → logprob: -2.861131191253662
    8. ' j' → logprob: -3.111131191253662
    9. '[i' → logprob: -3.986131191253662
    10. '           ' → logprob: -4.361131191253662

Token 462: ' l' (ID: 305)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005910431034862995
    2. ' (' → logprob: -6.130910396575928
    3. '(j' → logprob: -6.380910396575928
    4. 'i' → logprob: -6.880910396575928
    5. '(' → logprob: -7.755910396575928
    6. '0' → logprob: -8.255910873413086
    7. 'j' → logprob: -8.755910873413086
    8. '((' → logprob: -9.630910873413086
    9. '1' → logprob: -10.130910873413086
    10. ' i' → logprob: -11.380910873413086

Token 463: '’ind' (ID: 65649)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08703398704528809
    2. 'i' → logprob: -2.587033987045288
    3. '[i' → logprob: -5.712034225463867
    4. 'j' → logprob: -6.462034225463867
    5. ' (' → logprob: -6.587034225463867
    6. '(j' → logprob: -7.212034225463867
    7. '```' → logprob: -8.587034225463867
    8. '`' → logprob: -8.712034225463867
    9. '((' → logprob: -9.087034225463867
    10. ' i' → logprob: -9.212034225463867

Token 464: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.16083450615406036
    2. 'ice' → logprob: -2.285834550857544
    3. 'ices' → logprob: -3.785834550857544
    4. '(i' → logprob: -4.910834312438965
    5. 'i' → logprob: -5.160834312438965
    6. 'dex' → logprob: -5.160834312438965
    7. 'e' → logprob: -6.160834312438965
    8. '=i' → logprob: -7.660834312438965
    9. 'x' → logprob: -8.035834312438965
    10. 'é' → logprob: -8.035834312438965

Token 465: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.531920313835144
    2. ' (' → logprob: -1.781920313835144
    3. '(i' → logprob: -2.1569204330444336
    4. ' i' → logprob: -2.5319204330444336
    5. '[i' → logprob: -3.5319204330444336
    6. 'j' → logprob: -4.906920433044434
    7. '       ' → logprob: -5.531920433044434
    8. '0' → logprob: -6.156920433044434
    9. ' j' → logprob: -6.406920433044434
    10. ' ' → logprob: -6.531920433044434

Token 466: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008874193765223026
    2. ' i' → logprob: -5.508874416351318
    3. 'j' → logprob: -6.133874416351318
    4. '0' → logprob: -6.133874416351318
    5. '(i' → logprob: -9.13387393951416
    6. '       ' → logprob: -9.63387393951416
    7. '```' → logprob: -9.75887393951416
    8. ' (' → logprob: -10.25887393951416
    9. ' ' → logprob: -10.25887393951416
    10. '`' → logprob: -10.25887393951416

Token 467: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017646668711677194
    2. ' -' → logprob: -6.37676477432251
    3. ')' → logprob: -10.251764297485352
    4. ')-' → logprob: -10.876764297485352
    5. '   ' → logprob: -12.751764297485352
    6. '       ' → logprob: -13.126764297485352
    7. ' ' → logprob: -13.126764297485352
    8. '1' → logprob: -15.501764297485352
    9. '
' → logprob: -15.626764297485352
    10. '           ' → logprob: -15.751764297485352

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005728095420636237
    2. '-' → logprob: -8.12557315826416
    3. ' ' → logprob: -8.25057315826416
    4. '   ' → logprob: -12.00057315826416
    5. ' -' → logprob: -12.50057315826416
    6. ')' → logprob: -12.75057315826416
    7. '```' → logprob: -14.25057315826416
    8. '
' → logprob: -14.50057315826416
    9. '       ' → logprob: -14.75057315826416
    10. 'j' → logprob: -15.12557315826416

Token 469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010341230779886246
    2. ')>>' → logprob: -5.885341167449951
    3. ')&' → logprob: -5.885341167449951
    4. ' )' → logprob: -6.135341167449951
    5. 'j' → logprob: -7.760341167449951
    6. '-' → logprob: -7.885341167449951
    7. ',' → logprob: -7.885341167449951
    8. ' ' → logprob: -8.51034164428711
    9. ' j' → logprob: -8.51034164428711
    10. ')
' → logprob: -8.63534164428711

Token 470: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7916900515556335
    2. ' =' → logprob: -1.6666901111602783
    3. ')' → logprob: -2.1666901111602783
    4. '=' → logprob: -2.4166901111602783
    5. 'j' → logprob: -3.5416901111602783
    6. ']' → logprob: -3.6666901111602783
    7. ',' → logprob: -4.166689872741699
    8. ' j' → logprob: -4.291689872741699
    9. '   ' → logprob: -4.541689872741699
    10. 'f' → logprob: -5.041689872741699

Token 471: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0022568334825336933
    2. ' j' → logprob: -6.377256870269775
    3. '(j' → logprob: -7.627256870269775
    4. ' (' → logprob: -9.877256393432617
    5. '(' → logprob: -12.002256393432617
    6. 'f' → logprob: -12.377256393432617
    7. ' ' → logprob: -13.377256393432617
    8. '   ' → logprob: -13.502256393432617
    9. '((' → logprob: -14.002256393432617
    10. '(f' → logprob: -15.127256393432617

Token 472: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06347020715475082
    2. ' =' → logprob: -2.8134701251983643
    3. ')' → logprob: -8.313469886779785
    4. '       ' → logprob: -8.563469886779785
    5. 'f' → logprob: -8.813469886779785
    6. '(' → logprob: -8.938469886779785
    7. '   ' → logprob: -9.313469886779785
    8. '((' → logprob: -9.313469886779785
    9. '(j' → logprob: -9.438469886779785
    10. ' (' → logprob: -9.563469886779785

Token 473: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12041270732879639
    2. '=' → logprob: -3.120412826538086
    3. '       ' → logprob: -3.245412826538086
    4. 'bit' → logprob: -4.870412826538086
    5. ' if' → logprob: -5.120412826538086
    6. 'if' → logprob: -5.245412826538086
    7. ' bit' → logprob: -6.245412826538086
    8. 'b' → logprob: -6.245412826538086
    9. ' (' → logprob: -6.620412826538086
    10. 'f' → logprob: -6.995412826538086

Token 474: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.9821766018867493
    2. 'b' → logprob: -1.4821765422821045
    3. ' bit' → logprob: -1.6071765422821045
    4. ' b' → logprob: -2.2321765422821045
    5. '       ' → logprob: -3.6071765422821045
    6. 'k' → logprob: -4.357176780700684
    7. 'x' → logprob: -4.732176780700684
    8. 'v' → logprob: -4.982176780700684
    9. 'if' → logprob: -5.232176780700684
    10. 'mask' → logprob: -5.607176780700684

Token 475: ' >>' (ID: 6832)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.18950039148330688
    2. 'b' → logprob: -2.564500331878662
    3. ' bit' → logprob: -2.814500331878662
    4. 'f' → logprob: -4.689500331878662
    5. 'x' → logprob: -5.064500331878662
    6. ' b' → logprob: -5.314500331878662
    7. 'v' → logprob: -5.564500331878662
    8. 'val' → logprob: -5.814500331878662
    9. '       ' → logprob: -6.189500331878662
    10. ' f' → logprob: -6.314500331878662

Token 476: ' déc' (ID: 8498)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9912106990814209
    2. '(i' → logprob: -1.241210699081421
    3. '1' → logprob: -2.241210699081421
    4. ' i' → logprob: -2.616210699081421
    5. '(' → logprob: -2.866210699081421
    6. ' ' → logprob: -2.991210699081421
    7. 'i' → logprob: -3.491210699081421
    8. 'j' → logprob: -4.6162109375
    9. ' j' → logprob: -5.3662109375
    10. '(j' → logprob: -5.4912109375

Token 477: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.41175633668899536
    2. 'ale' → logprob: -1.9117562770843506
    3. '>>' → logprob: -2.5367562770843506
    4. 'ales' → logprob: -3.6617562770843506
    5. '=' → logprob: -4.03675651550293
    6. '(i' → logprob: -4.41175651550293
    7. '(' → logprob: -4.53675651550293
    8. 'oder' → logprob: -4.78675651550293
    9. 'alez' → logprob: -4.91175651550293
    10. ' >>' → logprob: -5.28675651550293

Token 478: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00510413758456707
    2. ' j' → logprob: -5.505104064941406
    3. '(j' → logprob: -7.880104064941406
    4. '1' → logprob: -8.005104064941406
    5. ' (' → logprob: -9.130104064941406
    6. 'i' → logprob: -9.755104064941406
    7. ' ' → logprob: -9.880104064941406
    8. ')' → logprob: -10.755104064941406
    9. '(' → logprob: -11.005104064941406
    10. '
' → logprob: -11.130104064941406

Token 479: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05157680809497833
    2. '1' → logprob: -3.426576852798462
    3. ' (' → logprob: -4.176576614379883
    4. 'i' → logprob: -6.176576614379883
    5. ' ' → logprob: -8.301576614379883
    6. ' i' → logprob: -9.426576614379883
    7. '(' → logprob: -11.801576614379883
    8. '[i' → logprob: -13.176576614379883
    9. '```' → logprob: -13.926576614379883
    10. ' ' → logprob: -14.176576614379883

Token 480: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5753411650657654
    2. '1' → logprob: -1.3253412246704102
    3. 'i' → logprob: -1.9503412246704102
    4. ' (' → logprob: -3.82534122467041
    5. ' i' → logprob: -5.07534122467041
    6. ' ' → logprob: -6.57534122467041
    7. '(' → logprob: -9.95034122467041
    8. ' ' → logprob: -11.07534122467041
    9. '   ' → logprob: -12.20034122467041
    10. '[i' → logprob: -12.45034122467041

Token 481: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015097079798579216
    2. ' -' → logprob: -4.265097141265869
    3. '1' → logprob: -7.015097141265869
    4. ')' → logprob: -10.765096664428711
    5. '   ' → logprob: -12.640096664428711
    6. ' ' → logprob: -12.765096664428711
    7. ')-' → logprob: -13.265096664428711
    8. 's' → logprob: -13.765096664428711
    9. '       ' → logprob: -14.015096664428711
    10. '[' → logprob: -14.390096664428711

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '           ' → logprob: -16.875024795532227
    5. '
' → logprob: -17.125024795532227
    6. '-' → logprob: -17.750024795532227
    7. '```' → logprob: -17.750024795532227
    8. '       ' → logprob: -18.000024795532227
    9. '１' → logprob: -18.875024795532227
    10. ' ' → logprob: -19.250024795532227

Token 483: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020958955865353346
    2. ')&' → logprob: -6.252095699310303
    3. '1' → logprob: -9.502096176147461
    4. ' )' → logprob: -9.752096176147461
    5. ')>>' → logprob: -11.377096176147461
    6. '')' → logprob: -12.127096176147461
    7. '-' → logprob: -12.877096176147461
    8. '```' → logprob: -13.002096176147461
    9. ')i' → logprob: -13.377096176147461
    10. ' ' → logprob: -14.002096176147461

Token 484: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21011652052402496
    2. ')&' → logprob: -2.0851166248321533
    3. ' &' → logprob: -3.5851166248321533
    4. '&' → logprob: -3.8351166248321533
    5. '1' → logprob: -4.960116386413574
    6. 'j' → logprob: -5.335116386413574
    7. '(j' → logprob: -6.960116386413574
    8. ' j' → logprob: -7.085116386413574
    9. '       ' → logprob: -8.210116386413574
    10. '```' → logprob: -8.460116386413574

Token 485: ' vers' (ID: 3640)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022750580683350563
    2. ')&' → logprob: -4.522750377655029
    3. '       ' → logprob: -5.647750377655029
    4. ')>>' → logprob: -5.772750377655029
    5. '(j' → logprob: -6.397750377655029
    6. 'j' → logprob: -6.522750377655029
    7. '>>' → logprob: -7.522750377655029
    8. '>>>' → logprob: -8.897750854492188
    9. ' j' → logprob: -8.897750854492188
    10. ' )' → logprob: -8.897750854492188

Token 486: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7213751077651978
    2. 'i' → logprob: -1.3463751077651978
    3. 'right' → logprob: -1.8463751077651978
    4. 'j' → logprob: -2.596374988555908
    5. ' droite' → logprob: -4.721374988555908
    6. '<|end|>' → logprob: -6.346374988555908
    7. ' i' → logprob: -6.471374988555908
    8. ' j' → logprob: -6.846374988555908
    9. 'l' → logprob: -6.846374988555908
    10. '_right' → logprob: -7.096374988555908

Token 487: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6330076456069946
    2. '1' → logprob: -1.0080076456069946
    3. ' droite' → logprob: -2.633007526397705
    4. 'i' → logprob: -4.758007526397705
    5. '(i' → logprob: -5.258007526397705
    6. ' right' → logprob: -5.633007526397705
    7. '-' → logprob: -6.008007526397705
    8. 'd' → logprob: -6.258007526397705
    9. '>>>' → logprob: -6.508007526397705
    10. '_right' → logprob: -6.508007526397705

Token 488: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07708706706762314
    2. '       ' → logprob: -2.952087163925171
    3. 'j' → logprob: -5.327086925506592
    4. ')&' → logprob: -5.702086925506592
    5. 'b' → logprob: -6.077086925506592
    6. '(j' → logprob: -6.327086925506592
    7. ',' → logprob: -6.452086925506592
    8. ')>>' → logprob: -6.452086925506592
    9. ')
' → logprob: -6.827086925506592
    10. '   ' → logprob: -7.452086925506592

Token 489: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0666692852973938
    2. '1' → logprob: -3.566669225692749
    3. ' &' → logprob: -3.691669225692749
    4. 'j' → logprob: -5.691669464111328
    5. ')' → logprob: -6.066669464111328
    6. '       ' → logprob: -6.566669464111328
    7. 'b' → logprob: -6.691669464111328
    8. 'et' → logprob: -7.941669464111328
    9. '           ' → logprob: -7.941669464111328
    10. ' ' → logprob: -8.066669464111328

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06262046843767166
    2. ' ' → logprob: -2.8126204013824463
    3. '(' → logprob: -7.562620639801025
    4. ' (' → logprob: -8.937620162963867
    5. ' ' → logprob: -13.562620162963867
    6. '   ' → logprob: -16.062620162963867
    7. '&' → logprob: -16.562620162963867
    8. '```' → logprob: -17.187620162963867
    9. '((' → logprob: -17.312620162963867
    10. '  ' → logprob: -17.562620162963867

Token 491: ' extrait' (ID: 194006)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00656225997954607
    2. ')==' → logprob: -5.506562232971191
    3. ')&' → logprob: -7.381562232971191
    4. ' =' → logprob: -7.756562232971191
    5. ' ==' → logprob: -8.506562232971191
    6. '=' → logprob: -9.006562232971191
    7. ' )' → logprob: -9.131562232971191
    8. '))' → logprob: -9.381562232971191
    9. '(j' → logprob: -9.381562232971191
    10. 'f' → logprob: -9.631562232971191

Token 492: ' le' (ID: 505)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0977964997291565
    2. '((' → logprob: -2.9727964401245117
    3. ' (' → logprob: -3.7227964401245117
    4. '1' → logprob: -4.972796440124512
    5. '(' → logprob: -5.222796440124512
    6. ' ((' → logprob: -6.347796440124512
    7. 'j' → logprob: -6.722796440124512
    8. 'le' → logprob: -7.347796440124512
    9. ' j' → logprob: -8.097796440124512
    10. ' le' → logprob: -8.097796440124512

Token 493: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0478835329413414
    2. 'bit' → logprob: -3.2978835105895996
    3. ' bit' → logprob: -4.7978835105896
    4. '(' → logprob: -7.4228835105896
    5. ' ' → logprob: -7.6728835105896
    6. '((' → logprob: -8.922883987426758
    7. ' (' → logprob: -9.297883987426758
    8. '(bit' → logprob: -9.797883987426758
    9. '```' → logprob: -10.047883987426758
    10. 'next' → logprob: -10.172883987426758

Token 494: ' de' (ID: 334)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.9244418740272522
    2. '(i' → logprob: -1.1744418144226074
    3. '((' → logprob: -1.4244418144226074
    4. ' (' → logprob: -4.049441814422607
    5. ' ((' → logprob: -4.924441814422607
    6. '       ' → logprob: -5.049441814422607
    7. '1' → logprob: -5.174441814422607
    8. '(' → logprob: -5.424441814422607
    9. '   ' → logprob: -5.674441814422607
    10. 'j' → logprob: -5.924441814422607

Token 495: ' poids' (ID: 56058)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12064085155725479
    2. ' j' → logprob: -2.370640754699707
    3. 'position' → logprob: -4.995640754699707
    4. 'i' → logprob: -5.995640754699707
    5. '<|end|>' → logprob: -5.995640754699707
    6. 'l' → logprob: -5.995640754699707
    7. '(j' → logprob: -6.495640754699707
    8. ' ' → logprob: -6.995640754699707
    9. ' position' → logprob: -7.245640754699707
    10. ' (' → logprob: -7.245640754699707

Token 496: ' faible' (ID: 75786)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.83952796459198
    2. 'fort' → logprob: -1.21452796459198
    3. 'fa' → logprob: -1.71452796459198
    4. ' faible' → logprob: -3.2145280838012695
    5. '1' → logprob: -3.8395280838012695
    6. ' fort' → logprob: -5.3395280838012695
    7. 'i' → logprob: -5.4645280838012695
    8. '   ' → logprob: -5.7145280838012695
    9. '0' → logprob: -5.8395280838012695
    10. '(i' → logprob: -6.0895280838012695

Token 497: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28375962376594543
    2. '((' → logprob: -3.033759593963623
    3. ' (' → logprob: -3.158759593963623
    4. ')' → logprob: -3.283759593963623
    5. ' =' → logprob: -3.658759593963623
    6. 'b' → logprob: -4.283759593963623
    7. 'f' → logprob: -4.408759593963623
    8. '(j' → logprob: -4.533759593963623
    9. '           ' → logprob: -4.908759593963623
    10. '(f' → logprob: -5.158759593963623

Token 498: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.47912025451660156
    2. 'b' → logprob: -1.4791202545166016
    3. '       ' → logprob: -2.8541202545166016
    4. ' bit' → logprob: -3.4791202545166016
    5. 'x' → logprob: -4.229120254516602
    6. 'val' → logprob: -4.729120254516602
    7. 'v' → logprob: -4.979120254516602
    8. 'k' → logprob: -5.104120254516602
    9. ' b' → logprob: -5.354120254516602
    10. 'f' → logprob: -5.479120254516602

Token 499: ' t' (ID: 260)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5365869402885437
    2. 'b' → logprob: -1.4115869998931885
    3. 'f' → logprob: -2.1615869998931885
    4. 'x' → logprob: -4.161586761474609
    5. 'val' → logprob: -4.911586761474609
    6. 'v' → logprob: -4.911586761474609
    7. 'a' → logprob: -5.411586761474609
    8. 'k' → logprob: -5.661586761474609
    9. 'd' → logprob: -5.786586761474609
    10. 'c' → logprob: -6.411586761474609

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931576728820801
    2. ' =' → logprob: -0.6931576728820801
    3. ' ' → logprob: -12.443157196044922
    4. '=j' → logprob: -13.818157196044922
    5. 't' → logprob: -13.943157196044922
    6. '=
' → logprob: -14.193157196044922
    7. '	' → logprob: -14.568157196044922
    8. '=(' → logprob: -14.568157196044922
    9. '=t' → logprob: -14.693157196044922
    10. ',' → logprob: -14.693157196044922

Token 501: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0038487708661705256
    2. ' (' → logprob: -5.878848552703857
    3. 'j' → logprob: -6.878848552703857
    4. '(' → logprob: -11.878849029541016
    5. ' j' → logprob: -12.378849029541016
    6. '[j' → logprob: -13.753849029541016
    7. '(d' → logprob: -14.753849029541016
    8. '((' → logprob: -15.003849029541016
    9. ' ' → logprob: -15.253849029541016
    10. '
' → logprob: -15.503849029541016

Token 502: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4974866644479334e-05
    2. ' j' → logprob: -11.125015258789062
    3. '(j' → logprob: -15.875015258789062
    4. '   ' → logprob: -16.500015258789062
    5. '[j' → logprob: -16.875015258789062
    6. '	j' → logprob: -17.250015258789062
    7. ')' → logprob: -18.500015258789062
    8. ' ' → logprob: -18.875015258789062
    9. '$j' → logprob: -18.875015258789062
    10. '_j' → logprob: -19.125015258789062

Token 503: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.04942290112376213
    2. ' >>' → logprob: -3.0494229793548584
    3. '>>(' → logprob: -7.174422740936279
    4. '>' → logprob: -9.799423217773438
    5. ' ' → logprob: -12.799423217773438
    6. ')' → logprob: -12.924423217773438
    7. '>>
' → logprob: -13.299423217773438
    8. '>>>' → logprob: -13.549423217773438
    9. ')>>' → logprob: -13.549423217773438
    10. ' ' → logprob: -14.299423217773438

Token 504: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.253090865968261e-06
    2. ' (' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.625009536743164
    4. '1' → logprob: -13.750009536743164
    5. '(' → logprob: -14.875009536743164
    6. '(I' → logprob: -15.375009536743164
    7. '0' → logprob: -16.875009536743164
    8. '[i' → logprob: -17.250009536743164
    9. '   ' → logprob: -17.750009536743164
    10. '(
' → logprob: -18.000009536743164

Token 505: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06198561564087868
    2. '(i' → logprob: -2.811985731124878
    3. ' i' → logprob: -11.686985969543457
    4. ' (' → logprob: -12.311985969543457
    5. '1' → logprob: -13.061985969543457
    6. '[i' → logprob: -14.061985969543457
    7. '{i' → logprob: -14.061985969543457
    8. '   ' → logprob: -14.436985969543457
    9. '	i' → logprob: -15.686985969543457
    10. ',i' → logprob: -16.06198501586914

Token 506: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015240294160321355
    2. '1' → logprob: -6.501523971557617
    3. ' -' → logprob: -10.751523971557617
    4. '   ' → logprob: -16.001523971557617
    5. '−' → logprob: -16.626523971557617
    6. ' ' → logprob: -16.751523971557617
    7. 'minus' → logprob: -18.126523971557617
    8. '[' → logprob: -18.251523971557617
    9. '–' → logprob: -18.376523971557617
    10. '       ' → logprob: -18.501523971557617

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '
' → logprob: -19.625001907348633
    6. '```' → logprob: -19.625001907348633
    7. '...' → logprob: -20.500001907348633
    8. '<|end|>' → logprob: -21.000001907348633
    9. '１' → logprob: -21.375001907348633
    10. '[' → logprob: -21.500001907348633

Token 508: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008528703474439681
    2. '))' → logprob: -7.250853061676025
    3. ')&' → logprob: -8.875852584838867
    4. ' )' → logprob: -12.875852584838867
    5. '1' → logprob: -15.000852584838867
    6. '')' → logprob: -16.250852584838867
    7. ')
' → logprob: -16.500852584838867
    8. '")' → logprob: -16.750852584838867
    9. '   ' → logprob: -17.250852584838867
    10. '0' → logprob: -17.625852584838867

Token 509: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0015159345930442214
    2. ' &' → logprob: -6.501515865325928
    3. ')&' → logprob: -12.001516342163086
    4. '&amp' → logprob: -12.376516342163086
    5. ')' → logprob: -13.376516342163086
    6. '&
' → logprob: -13.376516342163086
    7. '1' → logprob: -16.876516342163086
    8. '&nbsp' → logprob: -17.001516342163086
    9. '&t' → logprob: -17.626516342163086
    10. '   ' → logprob: -18.376516342163086

Token 510: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.125085830688477
    4. '```' → logprob: -19.625085830688477
    5. '`' → logprob: -19.875085830688477
    6. '
' → logprob: -20.000085830688477
    7. '  ' → logprob: -20.500085830688477
    8. '01' → logprob: -20.625085830688477
    9. ' ' → logprob: -20.625085830688477
    10. '' → logprob: -21.125085830688477

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '`' → logprob: -20.375
    4. '```' → logprob: -20.5
    5. '
' → logprob: -21.0
    6. '01' → logprob: -21.625
    7. '0' → logprob: -21.875
    8. '' → logprob: -22.0
    9. '

' → logprob: -22.125
    10. '   ' → logprob: -22.125

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12249423563480377
    2. '
' → logprob: -2.6224942207336426
    3. 'f' → logprob: -3.8724942207336426
    4. ')' → logprob: -4.747494220733643
    5. '        
' → logprob: -5.747494220733643
    6. '#' → logprob: -6.122494220733643
    7. '<|end|>' → logprob: -6.372494220733643
    8. 'if' → logprob: -6.372494220733643
    9. ' if' → logprob: -6.997494220733643
    10. 'u' → logprob: -7.122494220733643

Token 513: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8847256302833557
    2. '       ' → logprob: -1.384725570678711
    3. ' f' → logprob: -1.509725570678711
    4. '<|end|>' → logprob: -2.509725570678711
    5. ')' → logprob: -4.384725570678711
    6. '
' → logprob: -4.509725570678711
    7. ' if' → logprob: -5.884725570678711
    8. 'if' → logprob: -6.509725570678711
    9. '#' → logprob: -6.634725570678711
    10. ' +' → logprob: -6.759725570678711

Token 514: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21117518842220306
    2. '       ' → logprob: -2.3361752033233643
    3. ' f' → logprob: -2.5861752033233643
    4. 'if' → logprob: -4.711174964904785
    5. ')' → logprob: -5.586174964904785
    6. ' if' → logprob: -6.211174964904785
    7. '
' → logprob: -6.461174964904785
    8. 's' → logprob: -7.711174964904785
    9. '        
' → logprob: -8.461174964904785
    10. ',' → logprob: -8.711174964904785

Token 515: ' Initial' (ID: 9209)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003334393841214478
    2. 'if' → logprob: -8.500333786010742
    3. ' f' → logprob: -9.250333786010742
    4. '       ' → logprob: -11.625333786010742
    5. 'for' → logprob: -12.625333786010742
    6. 'x' → logprob: -13.000333786010742
    7. '
' → logprob: -13.000333786010742
    8. 'p' → logprob: -13.000333786010742
    9. '#' → logprob: -13.375333786010742
    10. 's' → logprob: -13.750333786010742

Token 516: 'isation' (ID: 6993)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6758862733840942
    2. 'e' → logprob: -2.0508861541748047
    3. 'isation' → logprob: -2.5508861541748047
    4. 'ement' → logprob: -2.6758861541748047
    5. 'ization' → logprob: -2.8008861541748047
    6. '       ' → logprob: -2.9258861541748047
    7. '   ' → logprob: -3.6758861541748047
    8. '#' → logprob: -3.8008861541748047
    9. '=' → logprob: -4.300886154174805
    10. 'ial' → logprob: -5.175886154174805

Token 517: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9516140222549438
    2. 'f' → logprob: -1.0766140222549438
    3. ' =' → logprob: -1.7016140222549438
    4. '       ' → logprob: -2.7016139030456543
    5. ' f' → logprob: -4.326613903045654
    6. '(f' → logprob: -5.701613903045654
    7. '=f' → logprob: -6.576613903045654
    8. ')' → logprob: -6.826613903045654
    9. 's' → logprob: -7.076613903045654
    10. '#' → logprob: -7.826613903045654

Token 518: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007813635282218456
    2. ' f' → logprob: -4.882813453674316
    3. '(f' → logprob: -9.757813453674316
    4. '0' → logprob: -10.382813453674316
    5. ')' → logprob: -10.757813453674316
    6. '[' → logprob: -11.507813453674316
    7. '(' → logprob: -11.632813453674316
    8. '#' → logprob: -11.757813453674316
    9. ' (' → logprob: -11.757813453674316
    10. '1' → logprob: -11.882813453674316

Token 519: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859713837504387
    2. '=' → logprob: -3.0485970973968506
    3. 'f' → logprob: -12.42359733581543
    4. ' ' → logprob: -13.17359733581543
    5. ' =
' → logprob: -14.17359733581543
    6. '=
' → logprob: -14.17359733581543
    7. 's' → logprob: -14.42359733581543
    8. '=f' → logprob: -14.67359733581543
    9. '=r' → logprob: -15.42359733581543
    10. ',' → logprob: -15.79859733581543

Token 520: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3381277620792389
    2. 'f' → logprob: -2.338127851486206
    3. 'd' → logprob: -2.463127851486206
    4. 't' → logprob: -3.088127851486206
    5. '1' → logprob: -3.588127851486206
    6. ' ' → logprob: -4.963127613067627
    7. ' d' → logprob: -5.338127613067627
    8. ' f' → logprob: -5.588127613067627
    9. 'j' → logprob: -6.213127613067627
    10. 'int' → logprob: -6.213127613067627

Token 521: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4966992735862732
    2. 'r' → logprob: -1.371699333190918
    3. ' =' → logprob: -2.121699333190918
    4. '=' → logprob: -4.121699333190918
    5. ' r' → logprob: -6.621699333190918
    6. ',' → logprob: -8.871699333190918
    7. '   ' → logprob: -9.621699333190918
    8. '	' → logprob: -9.746699333190918
    9. '        
' → logprob: -9.996699333190918
    10. '
' → logprob: -11.121699333190918

Token 522: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029990334063768387
    2. '       ' → logprob: -3.5299904346466064
    3. ' r' → logprob: -8.404990196228027
    4. '   ' → logprob: -11.154990196228027
    5. '```' → logprob: -14.904990196228027
    6. ' ' → logprob: -15.029990196228027
    7. '      ' → logprob: -15.154990196228027
    8. '           ' → logprob: -15.404990196228027
    9. '	r' → logprob: -15.404990196228027
    10. '	' → logprob: -16.029991149902344

Token 523: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246178403496742
    2. ' =' → logprob: -3.7732462882995605
    3. ',' → logprob: -15.148245811462402
    4. '=
' → logprob: -15.773245811462402
    5. ' ' → logprob: -16.52324676513672
    6. ')' → logprob: -16.89824676513672
    7. 's' → logprob: -17.02324676513672
    8. '+=' → logprob: -17.27324676513672
    9. '   ' → logprob: -17.52324676513672
    10. '<|end|>' → logprob: -17.77324676513672

Token 524: ' compter' (ID: 81694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07750514149665833
    2. '0' → logprob: -3.327505111694336
    3. ' =' → logprob: -3.827505111694336
    4. 'r' → logprob: -4.452505111694336
    5. ' ' → logprob: -5.952505111694336
    6. '+=' → logprob: -7.327505111694336
    7. 't' → logprob: -7.452505111694336
    8. ' r' → logprob: -7.827505111694336
    9. '=r' → logprob: -8.827505111694336
    10. 'd' → logprob: -8.827505111694336

Token 525: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25753289461135864
    2. 'r' → logprob: -1.5075328350067139
    3. '1' → logprob: -6.507533073425293
    4. 'd' → logprob: -6.632533073425293
    5. 't' → logprob: -6.757533073425293
    6. ' ' → logprob: -7.507533073425293
    7. 'f' → logprob: -7.757533073425293
    8. ' r' → logprob: -8.007533073425293
    9. '=' → logprob: -9.382533073425293
    10. ' d' → logprob: -10.257533073425293

Token 526: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6699090003967285
    2. '0' → logprob: -1.2949090003967285
    3. '1' → logprob: -2.1699090003967285
    4. ' r' → logprob: -3.7949090003967285
    5. 't' → logprob: -4.0449090003967285
    6. ' ' → logprob: -4.7949090003967285
    7. 'max' → logprob: -4.9199090003967285
    8. 'f' → logprob: -5.1699090003967285
    9. ' max' → logprob: -5.1699090003967285
    10. ' t' → logprob: -5.4199090003967285

Token 527: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.36372604966163635
    2. '=' → logprob: -2.3637261390686035
    3. '<|end|>' → logprob: -2.4887261390686035
    4. ' =' → logprob: -2.6137261390686035
    5. '       ' → logprob: -3.6137261390686035
    6. ' r' → logprob: -4.9887261390686035
    7. 'd' → logprob: -5.3637261390686035
    8. ' d' → logprob: -5.7387261390686035
    9. '<|end|>' → logprob: -6.4887261390686035
    10. '   ' → logprob: -6.7387261390686035

Token 528: ' bits' (ID: 18189)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12010597437620163
    2. 'r' → logprob: -2.8701059818267822
    3. ' ' → logprob: -3.6201059818267822
    4. 'f' → logprob: -4.745105743408203
    5. '0' → logprob: -4.995105743408203
    6. 't' → logprob: -5.870105743408203
    7. ' f' → logprob: -5.995105743408203
    8. ' r' → logprob: -5.995105743408203
    9. ' t' → logprob: -6.995105743408203
    10. 'k' → logprob: -7.245105743408203

Token 529: ' cons' (ID: 1473)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2936168909072876
    2. '1' → logprob: -1.6686168909072876
    3. ' ' → logprob: -2.043616771697998
    4. ' =' → logprob: -2.168616771697998
    5. '=' → logprob: -2.668616771697998
    6. '   ' → logprob: -3.418616771697998
    7. '       ' → logprob: -3.418616771697998
    8. '<|end|>' → logprob: -3.543616771697998
    9. ' set' → logprob: -3.793616771697998
    10. '0' → logprob: -4.293616771697998

Token 530: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.22172464430332184
    2. '1' → logprob: -2.22172474861145
    3. 'é' → logprob: -3.09672474861145
    4. 'ecut' → logprob: -4.346724510192871
    5. 't' → logprob: -4.471724510192871
    6. 'éc' → logprob: -5.596724510192871
    7. 'u' → logprob: -5.596724510192871
    8. 'e' → logprob: -6.096724510192871
    9. ' ' → logprob: -6.346724510192871
    10. 'équ' → logprob: -6.346724510192871

Token 531: 'ifs' (ID: 14119)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2397027015686035
    2. '   ' → logprob: -1.9897027015686035
    3. ' ' → logprob: -1.9897027015686035
    4. 's' → logprob: -2.3647027015686035
    5. 'r' → logprob: -2.7397027015686035
    6. '0' → logprob: -2.7397027015686035
    7. 'e' → logprob: -3.4897027015686035
    8. 'u' → logprob: -3.7397027015686035
    9. ' à' → logprob: -3.7397027015686035
    10. '_' → logprob: -4.2397027015686035

Token 532: ' ég' (ID: 33150)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.432279109954834
    2. ' cons' → logprob: -2.057279109954834
    3. ' r' → logprob: -3.432279109954834
    4. '1' → logprob: -3.557279109954834
    5. ' ' → logprob: -3.682279109954834
    6. '       ' → logprob: -3.682279109954834
    7. '0' → logprob: -3.682279109954834
    8. '   ' → logprob: -4.182279109954834
    9. '=' → logprob: -4.807279109954834
    10. 'd' → logprob: -4.807279109954834

Token 533: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0032669571228325367
    2. 'al' → logprob: -5.75326681137085
    3. 'a' → logprob: -10.378267288208008
    4. 'ale' → logprob: -10.378267288208008
    5. 'ales' → logprob: -11.628267288208008
    6. '```' → logprob: -12.378267288208008
    7. '0' → logprob: -12.753267288208008
    8. 'à' → logprob: -12.878267288208008
    9. 'als' → logprob: -13.003267288208008
    10. '=' → logprob: -14.003267288208008

Token 534: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4370086193084717
    2. ' à' → logprob: -1.4370086193084717
    3. 'à' → logprob: -1.5620086193084717
    4. '0' → logprob: -2.9370086193084717
    5. '1' → logprob: -2.9370086193084717
    6. '       ' → logprob: -3.0620086193084717
    7. 't' → logprob: -3.0620086193084717
    8. 'au' → logprob: -3.6870086193084717
    9. ' ' → logprob: -3.8120086193084717
    10. '   ' → logprob: -4.312008857727051

Token 535: ' t' (ID: 260)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7454366087913513
    2. 't' → logprob: -0.8704366087913513
    3. '0' → logprob: -2.370436668395996
    4. ' ' → logprob: -4.745436668395996
    5. ' t' → logprob: -5.495436668395996
    6. 'f' → logprob: -8.495436668395996
    7. 'c' → logprob: -8.870436668395996
    8. '(t' → logprob: -10.745436668395996
    9. 'd' → logprob: -11.120436668395996
    10. 'r' → logprob: -11.370436668395996

Token 536: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5902820229530334
    2. 'r' → logprob: -0.8402820229530334
    3. ',' → logprob: -5.090281963348389
    4. '.' → logprob: -5.590281963348389
    5. '=' → logprob: -6.590281963348389
    6. ' =' → logprob: -6.965281963348389
    7. ' r' → logprob: -7.965281963348389
    8. '
' → logprob: -8.590282440185547
    9. '   ' → logprob: -8.590282440185547
    10. ' dans' → logprob: -8.590282440185547

Token 537: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12245985120534897
    2. '       ' → logprob: -2.247459888458252
    3. ' r' → logprob: -5.372459888458252
    4. '0' → logprob: -5.747459888458252
    5. ' ' → logprob: -7.747459888458252
    6. '   ' → logprob: -7.747459888458252
    7. '#' → logprob: -8.497459411621094
    8. '           ' → logprob: -9.122459411621094
    9. '
' → logprob: -9.497459411621094
    10. ' ' → logprob: -9.497459411621094

Token 538: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26020002365112305
    2. '1' → logprob: -1.510200023651123
    3. 'r' → logprob: -5.260200023651123
    4. ' ' → logprob: -6.260200023651123
    5. 'l' → logprob: -7.635200023651123
    6. 't' → logprob: -8.760200500488281
    7. 'i' → logprob: -8.885200500488281
    8. 'zero' → logprob: -9.260200500488281
    9. ' zéro' → logprob: -9.510200500488281
    10. '#' → logprob: -10.010200500488281

Token 539: ' du' (ID: 1462)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21239110827445984
    2. 'r' → logprob: -2.2123911380767822
    3. '       ' → logprob: -3.0873911380767822
    4. '   ' → logprob: -4.337390899658203
    5. 'de' → logprob: -4.837390899658203
    6. ' de' → logprob: -6.087390899658203
    7. 'z' → logprob: -6.212390899658203
    8. '           ' → logprob: -6.212390899658203
    9. ' ' → logprob: -6.212390899658203
    10. '1' → logprob: -6.212390899658203

Token 540: ' haut' (ID: 28223)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36967670917510986
    2. '0' → logprob: -1.3696767091751099
    3. 'r' → logprob: -4.11967658996582
    4. 'j' → logprob: -5.24467658996582
    5. 't' → logprob: -5.74467658996582
    6. '1' → logprob: -5.74467658996582
    7. '```' → logprob: -5.74467658996582
    8. 'd' → logprob: -5.86967658996582
    9. ' i' → logprob: -5.99467658996582
    10. '...' → logprob: -6.24467658996582

Token 541: '.
' (ID: 558)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.058390602469444275
    2. '       ' → logprob: -3.1833906173706055
    3. '=' → logprob: -4.6833906173706055
    4. ' =' → logprob: -5.9333906173706055
    5. ' r' → logprob: -6.8083906173706055
    6. ',' → logprob: -7.3083906173706055
    7. '   ' → logprob: -7.6833906173706055
    8. ' ' → logprob: -8.683390617370605
    9. '
' → logprob: -8.808390617370605
    10. 'd' → logprob: -9.308390617370605

Token 542: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20144470036029816
    2. '       ' → logprob: -1.7014447450637817
    3. ' r' → logprob: -10.576444625854492
    4. '	' → logprob: -13.076444625854492
    5. '   ' → logprob: -13.451444625854492
    6. '```' → logprob: -13.701444625854492
    7. '	r' → logprob: -14.826444625854492
    8. ' ' → logprob: -15.701444625854492
    9. '      ' → logprob: -15.951444625854492
    10. '        
' → logprob: -16.451444625854492

Token 543: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0001129602751461789
    2. '       ' → logprob: -9.125112533569336
    3. ' r' → logprob: -12.500112533569336
    4. '   ' → logprob: -15.750112533569336
    5. '```' → logprob: -17.250112533569336
    6. '           ' → logprob: -17.875112533569336
    7. '0' → logprob: -17.875112533569336
    8. '	r' → logprob: -18.125112533569336
    9. '#' → logprob: -19.125112533569336
    10. '      ' → logprob: -19.125112533569336

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ',' → logprob: -16.061967849731445
    4. ' ' → logprob: -17.436967849731445
    5. '0' → logprob: -18.561967849731445
    6. '=
' → logprob: -18.686967849731445
    7. '＝' → logprob: -19.436967849731445
    8. '=int' → logprob: -19.561967849731445
    9. '=

' → logprob: -19.686967849731445
    10. '=r' → logprob: -19.811967849731445

Token 545: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08150602877140045
    2. '1' → logprob: -2.5815060138702393
    3. ' ' → logprob: -5.956506252288818
    4. 'f' → logprob: -11.33150577545166
    5. 'd' → logprob: -11.95650577545166
    6. 't' → logprob: -13.83150577545166
    7. '(' → logprob: -14.08150577545166
    8. 'r' → logprob: -14.14400577545166
    9. '   ' → logprob: -14.14400577545166
    10. ' f' → logprob: -14.89400577545166

Token 546: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2819078862667084
    2. '1' → logprob: -1.4069079160690308
    3. ' ' → logprob: -7.78190803527832
    4. 'f' → logprob: -8.03190803527832
    5. 'd' → logprob: -11.40690803527832
    6. ' f' → logprob: -13.40690803527832
    7. '(f' → logprob: -14.28190803527832
    8. '(' → logprob: -14.40690803527832
    9. 'r' → logprob: -14.40690803527832
    10. '   ' → logprob: -15.28190803527832

Token 547: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8855760097503662
    2. 'while' → logprob: -0.8855760097503662
    3. ' while' → logprob: -1.8855760097503662
    4. '<|end|>' → logprob: -4.385576248168945
    5. 'if' → logprob: -5.260576248168945
    6. ' if' → logprob: -6.260576248168945
    7. '	while' → logprob: -6.635576248168945
    8. '	' → logprob: -7.135576248168945
    9. 'for' → logprob: -7.635576248168945
    10. '   ' → logprob: -7.885576248168945

Token 549: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.024820003658533096
    2. ' while' → logprob: -4.024819850921631
    3. 'if' → logprob: -5.774819850921631
    4. '       ' → logprob: -6.024819850921631
    5. 'for' → logprob: -7.274819850921631
    6. 'r' → logprob: -9.149820327758789
    7. '<|end|>' → logprob: -9.399820327758789
    8. '	while' → logprob: -9.774820327758789
    9. ' if' → logprob: -10.149820327758789
    10. 'k' → logprob: -10.274820327758789

Token 550: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0009371895575895905
    2. 'for' → logprob: -7.125936985015869
    3. 'k' → logprob: -9.375937461853027
    4. ' while' → logprob: -11.500937461853027
    5. 'x' → logprob: -11.625937461853027
    6. 'u' → logprob: -12.500937461853027
    7. '       ' → logprob: -12.625937461853027
    8. 'p' → logprob: -12.875937461853027
    9. 'm' → logprob: -13.000937461853027
    10. '   ' → logprob: -13.125937461853027

Token 551: ' incr' (ID: 52395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08046184480190277
    2. ' while' → logprob: -2.5804617404937744
    3. 'for' → logprob: -6.9554619789123535
    4. 'j' → logprob: -8.580461502075195
    5. ' for' → logprob: -8.955461502075195
    6. '=' → logprob: -9.580461502075195
    7. '       ' → logprob: -9.580461502075195
    8. '   ' → logprob: -10.080461502075195
    9. 'if' → logprob: -10.330461502075195
    10. 'i' → logprob: -10.830461502075195

Token 552: 'é' (ID: 377)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4195908308029175
    2. 'rement' → logprob: -1.2945908308029175
    3. 'é' → logprob: -4.419590950012207
    4. 't' → logprob: -4.794590950012207
    5. '=' → logprob: -4.919590950012207
    6. 'i' → logprob: -5.169590950012207
    7. 'ément' → logprob: -5.419590950012207
    8. 'cre' → logprob: -5.419590950012207
    9. '+=' → logprob: -5.419590950012207
    10. 'crement' → logprob: -5.544590950012207

Token 553: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0034863892942667007
    2. 'ment' → logprob: -5.753486156463623
    3. 'mentation' → logprob: -8.878486633300781
    4. 'nte' → logprob: -9.878486633300781
    5. 'r' → logprob: -10.003486633300781
    6. 'mental' → logprob: -11.003486633300781
    7. 'mented' → logprob: -11.503486633300781
    8. 'ments' → logprob: -11.753486633300781
    9. 'm' → logprob: -11.878486633300781
    10. 'n' → logprob: -12.253486633300781

Token 554: ' r' (ID: 428)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4814053177833557
    2. ' while' → logprob: -1.106405258178711
    3. 'j' → logprob: -3.231405258178711
    4. 'r' → logprob: -4.731405258178711
    5. ' j' → logprob: -6.481405258178711
    6. '       ' → logprob: -7.481405258178711
    7. ' r' → logprob: -8.481405258178711
    8. '   ' → logprob: -8.856405258178711
    9. 'f' → logprob: -9.606405258178711
    10. ' ' → logprob: -9.731405258178711

Token 555: ' tant' (ID: 16235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04322754591703415
    2. 'que' → logprob: -3.168227434158325
    3. ' qu' → logprob: -8.668227195739746
    4. 'qu' → logprob: -10.918227195739746
    5. '#' → logprob: -11.543227195739746
    6. '   ' → logprob: -12.293227195739746
    7. 'Que' → logprob: -12.668227195739746
    8. 't' → logprob: -12.668227195739746
    9. 'ôt' → logprob: -12.918227195739746
    10. 'q' → logprob: -13.293227195739746

Token 557: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3235476613044739
    2. 'j' → logprob: -1.573547601699829
    3. '(r' → logprob: -3.948547601699829
    4. '(j' → logprob: -4.073547840118408
    5. '((' → logprob: -4.448547840118408
    6. 'f' → logprob: -5.073547840118408
    7. ' r' → logprob: -5.448547840118408
    8. ' j' → logprob: -5.823547840118408
    9. 't' → logprob: -6.198547840118408
    10. ' (' → logprob: -6.323547840118408

Token 558: ' bits' (ID: 18189)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8891147375106812
    2. 'r' → logprob: -1.5141147375106812
    3. ' (' → logprob: -2.0141148567199707
    4. ' j' → logprob: -2.5141148567199707
    5. '(j' → logprob: -3.1391148567199707
    6. '(r' → logprob: -3.7641148567199707
    7. ' r' → logprob: -4.014114856719971
    8. 'f' → logprob: -4.139114856719971
    9. '((' → logprob: -4.264114856719971
    10. 't' → logprob: -4.889114856719971

Token 559: ' extr' (ID: 15674)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7759223580360413
    2. 'r' → logprob: -1.9009222984313965
    3. '[i' → logprob: -2.2759222984313965
    4. '((' → logprob: -2.2759222984313965
    5. ' and' → logprob: -2.7759222984313965
    6. '[j' → logprob: -3.9009222984313965
    7. '(i' → logprob: -4.0259222984313965
    8. 'i' → logprob: -4.1509222984313965
    9. '[((' → logprob: -4.1509222984313965
    10. ' (' → logprob: -4.6509222984313965

Token 560: 'aits' (ID: 46641)
  Prédit: 'êmes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êmes' → logprob: -0.19742703437805176
    2. '(i' → logprob: -3.1974270343780518
    3. 'aits' → logprob: -3.3224270343780518
    4. 'é' → logprob: -3.6974270343780518
    5. 'érieurs' → logprob: -3.8224270343780518
    6. '[i' → logprob: -4.322426795959473
    7. 'êmement' → logprob: -4.572426795959473
    8. 'i' → logprob: -4.822426795959473
    9. 'ême' → logprob: -5.447426795959473
    10. 'èmes' → logprob: -5.822426795959473

Token 561: ' success' (ID: 3505)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.951900064945221
    2. '(j' → logprob: -1.7019000053405762
    3. ' and' → logprob: -1.9519000053405762
    4. '[j' → logprob: -2.951900005340576
    5. '[(' → logprob: -3.201900005340576
    6. 'from' → logprob: -3.326900005340576
    7. 'r' → logprob: -3.576900005340576
    8. 'and' → logprob: -4.326900005340576
    9. '<|end|>' → logprob: -4.326900005340576
    10. ' (' → logprob: -4.576900005340576

Token 562: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.30302923917770386
    2. 'êmement' → logprob: -3.1780292987823486
    3. 'i' → logprob: -3.3030292987823486
    4. 'è' → logprob: -3.5530292987823486
    5. '((' → logprob: -3.9280292987823486
    6. '(i' → logprob: -4.1780290603637695
    7. '```' → logprob: -4.1780290603637695
    8. '`' → logprob: -4.4280290603637695
    9. 'érieure' → logprob: -4.5530290603637695
    10. 'érieurs' → logprob: -4.5530290603637695

Token 563: ' correspondent' (ID: 86218)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.255124807357788
    2. '[j' → logprob: -1.755124807357788
    3. 'from' → logprob: -2.005124807357788
    4. 'r' → logprob: -3.005124807357788
    5. ',' → logprob: -3.380124807357788
    6. '((' → logprob: -3.505124807357788
    7. '[(' → logprob: -3.505124807357788
    8. '==' → logprob: -3.755124807357788
    9. '=' → logprob: -4.255125045776367
    10. ' from' → logprob: -4.255125045776367

Token 564: ' à' (ID: 1221)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.040433645248413
    2. 'and' → logprob: -1.165433645248413
    3. '       ' → logprob: -2.040433645248413
    4. 'to' → logprob: -3.665433645248413
    5. '==' → logprob: -3.790433645248413
    6. 'while' → logprob: -3.790433645248413
    7. '(j' → logprob: -3.915433645248413
    8. ' to' → logprob: -3.915433645248413
    9. 'r' → logprob: -4.290433883666992
    10. 'à' → logprob: -4.790433883666992

Token 565: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003205400425940752
    2. ' t' → logprob: -5.753205299377441
    3. '(t' → logprob: -10.878205299377441
    4. ' ' → logprob: -13.003205299377441
    5. ' (' → logprob: -13.503205299377441
    6. '(' → logprob: -13.503205299377441
    7. '   ' → logprob: -13.878205299377441
    8. '`t' → logprob: -14.128205299377441
    9. '((' → logprob: -14.503205299377441
    10. '	t' → logprob: -14.753205299377441

Token 566: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3983171880245209
    2. '       ' → logprob: -1.1483172178268433
    3. ' while' → logprob: -5.398317337036133
    4. ',' → logprob: -5.648317337036133
    5. 'and' → logprob: -6.898317337036133
    6. 'while' → logprob: -6.898317337036133
    7. '<|end|>' → logprob: -7.148317337036133
    8. '	' → logprob: -9.523317337036133
    9. ':' → logprob: -9.773317337036133
    10. '   ' → logprob: -9.898317337036133

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10770013928413391
    2. ' while' → logprob: -2.7327001094818115
    3. 'while' → logprob: -3.3577001094818115
    4. '	while' → logprob: -6.857700347900391
    5. '	' → logprob: -6.982700347900391
    6. '	   ' → logprob: -9.23270034790039
    7. '<|end|>' → logprob: -9.60770034790039
    8. '   ' → logprob: -10.48270034790039
    9. ',' → logprob: -10.73270034790039
    10. '           ' → logprob: -11.85770034790039

Token 568: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.004262888804078102
    2. '       ' → logprob: -5.504262924194336
    3. ' while' → logprob: -8.629262924194336
    4. '	while' → logprob: -12.879262924194336
    5. 'for' → logprob: -13.004262924194336
    6. 'k' → logprob: -14.754262924194336
    7. '   ' → logprob: -15.379262924194336
    8. 'While' → logprob: -15.754262924194336
    9. 'j' → logprob: -17.754262924194336
    10. '```' → logprob: -18.129262924194336

Token 569: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.48242199420928955
    2. 'j' → logprob: -2.107421875
    3. '(j' → logprob: -2.232421875
    4. '((' → logprob: -2.732421875
    5. '(r' → logprob: -3.607421875
    6. ' (' → logprob: -3.982421875
    7. ' r' → logprob: -3.982421875
    8. ' j' → logprob: -4.732421875
    9. 't' → logprob: -5.357421875
    10. ' ((' → logprob: -5.482421875

Token 570: ' <' (ID: 464)
  Prédit: '<i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<i' → logprob: -0.22842949628829956
    2. ' <' → logprob: -1.9784295558929443
    3. '<' → logprob: -2.7284295558929443
    4. '<len' → logprob: -7.728429317474365
    5. '<n' → logprob: -9.978429794311523
    6. '<N' → logprob: -10.478429794311523
    7. 'i' → logprob: -10.728429794311523
    8. '<=' → logprob: -11.228429794311523
    9. '<size' → logprob: -11.478429794311523
    10. '<t' → logprob: -11.728429794311523

Token 571: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0026314230635762215
    2. ' i' → logprob: -6.627631187438965
    3. '(' → logprob: -7.127631187438965
    4. '(i' → logprob: -7.752631187438965
    5. ' (' → logprob: -9.877631187438965
    6. 'N' → logprob: -12.127631187438965
    7. ' ' → logprob: -12.127631187438965
    8. '
' → logprob: -13.252631187438965
    9. 'len' → logprob: -13.252631187438965
    10. 'j' → logprob: -13.877631187438965

Token 572: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020990669727325
    2. 'and' → logprob: -2.350209951400757
    3. '        ' → logprob: -14.100210189819336
    4. '       ' → logprob: -14.350210189819336
    5. '           ' → logprob: -14.600210189819336
    6. ' ' → logprob: -15.100210189819336
    7. '	and' → logprob: -15.225210189819336
    8. '    ' → logprob: -15.475210189819336
    9. ' и' → logprob: -15.850210189819336
    10. '   ' → logprob: -15.975210189819336

Token 573: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.007260043174028397
    2. '(((' → logprob: -5.007259845733643
    3. 't' → logprob: -7.882259845733643
    4. '(j' → logprob: -9.8822603225708
    5. ' ((' → logprob: -10.2572603225708
    6. '(' → logprob: -10.2572603225708
    7. '(t' → logprob: -10.3822603225708
    8. '[((' → logprob: -12.1322603225708
    9. 'f' → logprob: -13.0072603225708
    10. '((((' → logprob: -13.1322603225708

Token 574: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.11456596106290817
    2. 'j' → logprob: -2.239565849304199
    3. '((' → logprob: -6.489565849304199
    4. ' (' → logprob: -8.7395658493042
    5. '[j' → logprob: -10.9895658493042
    6. ' j' → logprob: -11.3645658493042
    7. '(' → logprob: -11.7395658493042
    8. '   ' → logprob: -11.9895658493042
    9. '(((' → logprob: -12.4895658493042
    10. ',j' → logprob: -12.8645658493042

Token 575: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.05411092936992645
    2. ' >>' → logprob: -3.0541110038757324
    3. '>>(' → logprob: -5.304111003875732
    4. '>' → logprob: -7.679111003875732
    5. '&' → logprob: -10.179110527038574
    6. ' ' → logprob: -11.679110527038574
    7. ' >' → logprob: -12.054110527038574
    8. ')' → logprob: -12.179110527038574
    9. ' &' → logprob: -12.179110527038574
    10. '>>
' → logprob: -12.304110527038574

Token 576: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4447096586227417
    2. '(r' → logprob: -1.0697096586227417
    3. '(i' → logprob: -4.194709777832031
    4. '(' → logprob: -8.069709777832031
    5. ' (' → logprob: -8.194709777832031
    6. '((' → logprob: -10.069709777832031
    7. ' r' → logprob: -10.444709777832031
    8. '(I' → logprob: -10.444709777832031
    9. '(j' → logprob: -10.569709777832031
    10. 'i' → logprob: -11.444709777832031

Token 577: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40752947330474854
    2. 'r' → logprob: -1.5325294733047485
    3. '(r' → logprob: -2.157529354095459
    4. 'i' → logprob: -6.282529354095459
    5. '(' → logprob: -7.532529354095459
    6. ' (' → logprob: -7.532529354095459
    7. '((' → logprob: -10.032529830932617
    8. ' r' → logprob: -10.157529830932617
    9. '(I' → logprob: -10.782529830932617
    10. ')' → logprob: -10.907529830932617

Token 578: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09639773517847061
    2. '1' → logprob: -2.471397638320923
    3. 'r' → logprob: -5.346397876739502
    4. '-r' → logprob: -6.596397876739502
    5. '(' → logprob: -7.346397876739502
    6. ' -' → logprob: -7.721397876739502
    7. ')' → logprob: -8.971397399902344
    8. ' ' → logprob: -10.846397399902344
    9. '#' → logprob: -11.471397399902344
    10. '(r' → logprob: -11.596397399902344

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003313288791105151
    2. 'r' → logprob: -5.753313064575195
    3. '(' → logprob: -9.128313064575195
    4. '(r' → logprob: -11.128313064575195
    5. '   ' → logprob: -12.253313064575195
    6. ' ' → logprob: -12.503313064575195
    7. ' r' → logprob: -13.878313064575195
    8. '
' → logprob: -14.128313064575195
    9. '2' → logprob: -14.253313064575195
    10. '  ' → logprob: -15.503313064575195

Token 580: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.40353924036026
    2. ')' → logprob: -1.4035391807556152
    3. '-' → logprob: -2.6535391807556152
    4. ' -' → logprob: -4.153539180755615
    5. '   ' → logprob: -9.403539657592773
    6. 'r' → logprob: -9.653539657592773
    7. ')-' → logprob: -10.403539657592773
    8. '-)' → logprob: -11.403539657592773
    9. ' ' → logprob: -12.028539657592773
    10. ' )' → logprob: -12.153539657592773

Token 581: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032640635618008673
    2. ')&' → logprob: -8.250326156616211
    3. ' )' → logprob: -9.875326156616211
    4. '))' → logprob: -11.250326156616211
    5. '&' → logprob: -15.125326156616211
    6. ')==' → logprob: -16.00032615661621
    7. '&)' → logprob: -16.37532615661621
    8. '')' → logprob: -17.37532615661621
    9. '())' → logprob: -17.50032615661621
    10. '")' → logprob: -17.62532615661621

Token 582: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24363473057746887
    2. '==' → logprob: -1.6186347007751465
    3. ')==' → logprob: -4.3686347007751465
    4. ' ==' → logprob: -5.2436347007751465
    5. ' )' → logprob: -9.493635177612305
    6. '&' → logprob: -10.743635177612305
    7. '=' → logprob: -12.493635177612305
    8. ' ' → logprob: -13.243635177612305
    9. ']==' → logprob: -13.493635177612305
    10. '()==' → logprob: -14.868635177612305

Token 583: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. 't' → logprob: -17.375019073486328
    4. '   ' → logprob: -17.750019073486328
    5. '１' → logprob: -19.000019073486328
    6. '
' → logprob: -19.625019073486328
    7. '```' → logprob: -19.750019073486328
    8. '`' → logprob: -19.875019073486328
    9. '' → logprob: -20.125019073486328
    10. ' ' → logprob: -20.250019073486328

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. 't' → logprob: -15.625027656555176
    4. '   ' → logprob: -16.625028610229492
    5. '
' → logprob: -18.000028610229492
    6. '  ' → logprob: -18.312528610229492
    7. '' → logprob: -18.625028610229492
    8. '

' → logprob: -18.687528610229492
    9. '```' → logprob: -18.687528610229492
    10. '１' → logprob: -18.750028610229492

Token 585: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010314215905964375
    2. ')==' → logprob: -4.635313987731934
    3. '==' → logprob: -7.510313987731934
    4. ' ==' → logprob: -12.135313987731934
    5. ' )' → logprob: -12.385313987731934
    6. '=' → logprob: -15.135313987731934
    7. '())' → logprob: -15.510313987731934
    8. '）' → logprob: -15.885313987731934
    9. 't' → logprob: -16.38531494140625
    10. ')
' → logprob: -16.63531494140625

Token 586: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0005464801797643304
    2. ' ==' → logprob: -7.750546455383301
    3. ')==' → logprob: -10.0005464553833
    4. '==
' → logprob: -10.1255464553833
    5. '=' → logprob: -10.6255464553833
    6. ')' → logprob: -12.7505464553833
    7. '()==' → logprob: -13.0005464553833
    8. ']==' → logprob: -14.2505464553833
    9. '===' → logprob: -15.3755464553833
    10. '```' → logprob: -17.625547409057617

Token 587: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0040785204619169235
    2. ' t' → logprob: -5.504078388214111
    3. '	t' → logprob: -16.254077911376953
    4. ' ' → logprob: -18.129077911376953
    5. '`t' → logprob: -18.254077911376953
    6. ' ' → logprob: -18.629077911376953
    7. '   ' → logprob: -20.629077911376953
    8. '(t' → logprob: -20.754077911376953
    9. '_t' → logprob: -20.879077911376953
    10. '
' → logprob: -21.379077911376953

Token 588: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08921873569488525
    2. ':' → logprob: -2.4642186164855957
    3. '           ' → logprob: -8.714219093322754
    4. '       ' → logprob: -9.839219093322754
    5. '):
' → logprob: -10.589219093322754
    6. '   ' → logprob: -11.089219093322754
    7. ':
' → logprob: -11.214219093322754
    8. 'r' → logprob: -12.464219093322754
    9. ' :
' → logprob: -14.089219093322754
    10. ':r' → logprob: -14.464219093322754

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6872339844703674
    2. 'r' → logprob: -0.9372339844703674
    3. '       ' → logprob: -3.1872339248657227
    4. ' r' → logprob: -3.1872339248657227
    5. '   ' → logprob: -3.8122339248657227
    6. '```' → logprob: -8.562233924865723
    7. '
' → logprob: -8.812233924865723
    8. '               ' → logprob: -9.062233924865723
    9. '	   ' → logprob: -9.562233924865723
    10. ':
' → logprob: -11.062233924865723

Token 590: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.02711544558405876
    2. '           ' → logprob: -4.027115345001221
    3. ' r' → logprob: -4.777115345001221
    4. '               ' → logprob: -7.777115345001221
    5. '   ' → logprob: -9.777115821838379
    6. '                   ' → logprob: -11.902115821838379
    7. '		' → logprob: -11.902115821838379
    8. '       ' → logprob: -12.402115821838379
    9. '	r' → logprob: -12.527115821838379
    10. '```' → logprob: -13.152115821838379

Token 591: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011708177626132965
    2. ' +=' → logprob: -6.751170635223389
    3. '=' → logprob: -14.626171112060547
    4. '+' → logprob: -16.126171112060547
    5. ']+=' → logprob: -16.126171112060547
    6. '   ' → logprob: -19.376171112060547
    7. '+='' → logprob: -20.501171112060547
    8. '+="' → logprob: -21.126171112060547
    9. '+=(' → logprob: -21.126171112060547
    10. 'r' → logprob: -21.251171112060547

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -19.50001335144043
    4. '   ' → logprob: -19.75001335144043
    5. '۱' → logprob: -21.06251335144043
    6. '0' → logprob: -21.43751335144043
    7. '１' → logprob: -21.50001335144043
    8. ' ' → logprob: -21.68751335144043
    9. 'r' → logprob: -22.18751335144043
    10. 's' → logprob: -22.50001335144043

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -21.5
    5. '۱' → logprob: -21.625
    6. '１' → logprob: -21.875
    7. 'r' → logprob: -22.75
    8. '0' → logprob: -22.875
    9. '
' → logprob: -22.9375
    10. '' → logprob: -23.0625

Token 594: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01867835223674774
    2. '<|end|>' → logprob: -4.143678188323975
    3. '	' → logprob: -6.393678188323975
    4. '
' → logprob: -7.893678188323975
    5. '   ' → logprob: -9.393678665161133
    6. ')' → logprob: -9.643678665161133
    7. '<|end|>' → logprob: -9.768678665161133
    8. '        
' → logprob: -9.768678665161133
    9. '           ' → logprob: -10.018678665161133
    10. '	   ' → logprob: -10.143678665161133

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1456172615289688
    2. '<|end|>' → logprob: -2.0206172466278076
    3. ')' → logprob: -6.895617485046387
    4. '	' → logprob: -7.645617485046387
    5. '#' → logprob: -8.020617485046387
    6. ' ' → logprob: -8.770617485046387
    7. '<|end|>' → logprob: -8.770617485046387
    8. '   ' → logprob: -9.270617485046387
    9. '.' → logprob: -9.395617485046387
    10. '        
' → logprob: -9.395617485046387

Token 596: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30749332904815674
    2. 'f' → logprob: -1.4324933290481567
    3. ' f' → logprob: -3.682493209838867
    4. ')' → logprob: -8.807493209838867
    5. '           ' → logprob: -8.932493209838867
    6. '   ' → logprob: -9.182493209838867
    7. 'if' → logprob: -9.307493209838867
    8. ' if' → logprob: -9.307493209838867
    9. '        
' → logprob: -10.057493209838867
    10. '	f' → logprob: -10.182493209838867

Token 597: ' On' (ID: 2160)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00013536323967855424
    2. 'if' → logprob: -9.25013542175293
    3. ' f' → logprob: -10.25013542175293
    4. '       ' → logprob: -12.62513542175293
    5. '#' → logprob: -15.50013542175293
    6. ' if' → logprob: -15.87513542175293
    7. '	f' → logprob: -16.87513542175293
    8. 'for' → logprob: -17.00013542175293
    9. '   ' → logprob: -17.25013542175293
    10. '           ' → logprob: -17.50013542175293

Token 598: ' en' (ID: 469)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12360755354166031
    2. ' f' → logprob: -2.623607635498047
    3. ' if' → logprob: -3.873607635498047
    4. 'if' → logprob: -4.248607635498047
    5. '       ' → logprob: -4.873607635498047
    6. '#' → logprob: -7.873607635498047
    7. '
' → logprob: -8.998607635498047
    8. ' #' → logprob: -9.373607635498047
    9. '=' → logprob: -9.498607635498047
    10. ' =' → logprob: -9.623607635498047

Token 599: 'registre' (ID: 77466)
  Prédit: 'registre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'registre' → logprob: -0.41274648904800415
    2. 'f' → logprob: -1.4127464294433594
    3. 'reg' → logprob: -2.6627464294433594
    4. 'd' → logprob: -4.287746429443359
    5. 't' → logprob: -5.662746429443359
    6. 'code' → logprob: -6.537746429443359
    7. 'voie' → logprob: -6.787746429443359
    8. 'range' → logprob: -7.037746429443359
    9. 'chaine' → logprob: -7.412746429443359
    10. '#' → logprob: -7.537746429443359

Token 600: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007622223347425461
    2. ' r' → logprob: -7.375761985778809
    3. 'f' → logprob: -9.000761985778809
    4. '       ' → logprob: -11.875761985778809
    5. '
' → logprob: -13.875761985778809
    6. '           ' → logprob: -14.000761985778809
    7. 'max' → logprob: -14.125761985778809
    8. ' f' → logprob: -14.250761985778809
    9. '(r' → logprob: -14.375761985778809
    10. '0' → logprob: -15.375761985778809

Token 601: ' valeur' (ID: 41664)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.057062968611717224
    2. 'f' → logprob: -3.807062864303589
    3. 'max' → logprob: -4.057063102722168
    4. 'val' → logprob: -4.557063102722168
    5. ' r' → logprob: -6.557063102722168
    6. 'maximum' → logprob: -6.932063102722168
    7. 'long' → logprob: -7.307063102722168
    8. 'value' → logprob: -7.682063102722168
    9. ' valeur' → logprob: -8.057063102722168
    10. ' f' → logprob: -8.432063102722168

Token 602: ' trouv' (ID: 40254)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.016176775097846985
    2. '       ' → logprob: -4.516176700592041
    3. '=' → logprob: -5.766176700592041
    4. '[j' → logprob: -7.141176700592041
    5. ' =' → logprob: -7.766176700592041
    6. '[i' → logprob: -8.3911771774292
    7. ' f' → logprob: -9.0161771774292
    8. '           ' → logprob: -9.0161771774292
    9. '[f' → logprob: -9.2661771774292
    10. '[' → logprob: -9.3911771774292

Token 603: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.02829189971089363
    2. 'f' → logprob: -4.528291702270508
    3. 'u' → logprob: -4.653291702270508
    4. 'ée' → logprob: -5.528291702270508
    5. 'rée' → logprob: -6.903291702270508
    6. 'r' → logprob: -7.153291702270508
    7. '       ' → logprob: -7.278291702270508
    8. '=' → logprob: -7.903291702270508
    9. 'uée' → logprob: -8.653291702270508
    10. '   ' → logprob: -8.778291702270508

Token 604: ' dans' (ID: 2671)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.769743800163269
    2. '       ' → logprob: -0.894743800163269
    3. ' =' → logprob: -2.3947439193725586
    4. '=' → logprob: -3.6447439193725586
    5. ' f' → logprob: -4.644743919372559
    6. '[f' → logprob: -7.644743919372559
    7. '=f' → logprob: -8.394743919372559
    8. '[' → logprob: -8.769743919372559
    9. '           ' → logprob: -9.269743919372559
    10. '
' → logprob: -9.769743919372559

Token 605: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004884536610916257
    2. ' f' → logprob: -7.62548828125
    3. '
' → logprob: -15.37548828125
    4. '[f' → logprob: -16.62548828125
    5. '       ' → logprob: -16.75048828125
    6. '   ' → logprob: -17.37548828125
    7. '	f' → logprob: -17.87548828125
    8. '           ' → logprob: -18.37548828125
    9. '(f' → logprob: -18.62548828125
    10. '#' → logprob: -18.62548828125

Token 606: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '```' → logprob: -15.875000953674316
    5. ' [' → logprob: -16.125001907348633
    6. '[f' → logprob: -16.250001907348633
    7. '[I' → logprob: -16.375001907348633
    8. '[j' → logprob: -16.875001907348633
    9. '][' → logprob: -17.000001907348633
    10. 'f' → logprob: -17.250001907348633

Token 607: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.244413766078651e-05
    2. '[j' → logprob: -9.500082015991211
    3. ']' → logprob: -12.250082015991211
    4. ' ][' → logprob: -13.125082015991211
    5. '[i' → logprob: -15.250082015991211
    6. '   ' → logprob: -15.375082015991211
    7. '"][' → logprob: -16.75008201599121
    8. 'j' → logprob: -17.00008201599121
    9. '       ' → logprob: -17.12508201599121
    10. '[' → logprob: -17.37508201599121

Token 608: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. '[j' → logprob: -15.25
    3. ' j' → logprob: -16.625
    4. '```' → logprob: -19.625
    5. '	j' → logprob: -19.75
    6. '
' → logprob: -19.875
    7. '   ' → logprob: -20.125
    8. '$j' → logprob: -20.5
    9. ']' → logprob: -21.75
    10. ',j' → logprob: -22.25

Token 609: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037404601462185383
    2. ']=' → logprob: -5.628740310668945
    3. '=' → logprob: -9.003740310668945
    4. ' ]' → logprob: -11.628740310668945
    5. ' =' → logprob: -12.628740310668945
    6. '[j' → logprob: -13.003740310668945
    7. '[' → logprob: -13.878740310668945
    8. '       ' → logprob: -14.378740310668945
    9. ']+=' → logprob: -14.503740310668945
    10. '   ' → logprob: -15.628740310668945

Token 610: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7630965709686279
    2. 'f' → logprob: -0.7630965709686279
    3. ' =' → logprob: -3.263096570968628
    4. ' f' → logprob: -3.763096570968628
    5. '=f' → logprob: -5.513096809387207
    6. '       ' → logprob: -6.763096809387207
    7. ')' → logprob: -7.638096809387207
    8. '(f' → logprob: -8.388096809387207
    9. '	f' → logprob: -10.388096809387207
    10. '[' → logprob: -10.513096809387207

Token 611: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -7.584239938296378e-06
    2. ' f' → logprob: -12.500007629394531
    3. '       ' → logprob: -12.500007629394531
    4. '	f' → logprob: -19.75000762939453
    5. '   ' → logprob: -20.25000762939453
    6. '
' → logprob: -20.50000762939453
    7. '```' → logprob: -20.50000762939453
    8. '_f' → logprob: -21.75000762939453
    9. '           ' → logprob: -22.00000762939453
    10. '        
' → logprob: -22.37500762939453

Token 612: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.0
    3. '][' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. '[' → logprob: -17.625
    6. '
' → logprob: -17.875
    7. ')[' → logprob: -18.25
    8. '[I' → logprob: -18.625
    9. 'i' → logprob: -18.75
    10. '   ' → logprob: -19.125

Token 613: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007426840020343661
    2. '[j' → logprob: -7.3757429122924805
    3. ']' → logprob: -9.12574291229248
    4. '[' → logprob: -12.87574291229248
    5. ' ][' → logprob: -12.87574291229248
    6. '[i' → logprob: -14.50074291229248
    7. '```' → logprob: -14.87574291229248
    8. '   ' → logprob: -15.25074291229248
    9. ',j' → logprob: -15.37574291229248
    10. ']][' → logprob: -15.75074291229248

Token 614: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -15.375
    3. '[j' → logprob: -16.625
    4. '   ' → logprob: -17.625
    5. '	j' → logprob: -17.75
    6. ']' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. ':j' → logprob: -19.125
    9. '0' → logprob: -19.25
    10. '$j' → logprob: -19.75

Token 615: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012976066500414163
    2. ']=' → logprob: -9.000129699707031
    3. '=' → logprob: -12.000129699707031
    4. ' ]' → logprob: -17.12512969970703
    5. 'r' → logprob: -17.25012969970703
    6. '=r' → logprob: -18.75012969970703
    7. ')' → logprob: -19.25012969970703
    8. ']+=' → logprob: -19.50012969970703
    9. ']
' → logprob: -19.62512969970703
    10. '[r' → logprob: -20.25012969970703

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000553151941858232
    2. ' =' → logprob: -7.500553131103516
    3. '=f' → logprob: -16.625553131103516
    4. '+=' → logprob: -17.625553131103516
    5. '=r' → logprob: -18.125553131103516
    6. '.=' → logprob: -20.500553131103516
    7. '＝' → logprob: -20.625553131103516
    8. '=j' → logprob: -20.625553131103516
    9. '=i' → logprob: -20.875553131103516
    10. '=s' → logprob: -21.000553131103516

Token 617: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010392407421022654
    2. 'max' → logprob: -6.876039028167725
    3. ' r' → logprob: -12.501039505004883
    4. 'f' → logprob: -14.001039505004883
    5. ' ' → logprob: -15.376039505004883
    6. ' max' → logprob: -15.376039505004883
    7. 'min' → logprob: -15.501039505004883
    8. '0' → logprob: -15.626039505004883
    9. '	r' → logprob: -15.626039505004883
    10. '(r' → logprob: -15.751039505004883

Token 618: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' Trait' (ID: 146188)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1699693202972412
    2. 'ans' → logprob: -1.2949693202972412
    3. 'res' → logprob: -1.9199693202972412
    4. 'answer' → logprob: -1.9199693202972412
    5. 'result' → logprob: -2.794969320297241
    6. 'max' → logprob: -4.66996955871582
    7. 'dp' → logprob: -4.79496955871582
    8. 'ret' → logprob: -5.04496955871582
    9. '#' → logprob: -5.41996955871582
    10. 's' → logprob: -5.54496955871582

Token 621: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.017781829461455345
    2. 'for' → logprob: -4.767781734466553
    3. 'ment' → logprob: -5.642781734466553
    4. '#' → logprob: -6.017781734466553
    5. 'ements' → logprob: -6.642781734466553
    6. 'e' → logprob: -7.642781734466553
    7. 'er' → logprob: -7.767781734466553
    8. ' for' → logprob: -7.892781734466553
    9. '```' → logprob: -8.892782211303711
    10. 'em' → logprob: -9.017782211303711

Token 622: ' principal' (ID: 10589)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2336115837097168
    2. 'result' → logprob: -2.608611583709717
    3. '#' → logprob: -2.858611583709717
    4. 'answer' → logprob: -3.483611583709717
    5. 'ans' → logprob: -3.733611583709717
    6. 'res' → logprob: -4.483611583709717
    7. 'max' → logprob: -5.108611583709717
    8. '=' → logprob: -6.983611583709717
    9. '```' → logprob: -7.733611583709717
    10. '...' → logprob: -7.858611583709717

Token 623: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5557777881622314
    2. 'answer' → logprob: -1.9307777881622314
    3. 'result' → logprob: -2.1807777881622314
    4. 'ans' → logprob: -2.3057777881622314
    5. 'res' → logprob: -2.9307777881622314
    6. 'dp' → logprob: -5.055777549743652
    7. 'max' → logprob: -5.430777549743652
    8. 'answers' → logprob: -7.430777549743652
    9. 'count' → logprob: -7.680777549743652
    10. 'total' → logprob: -7.805777549743652

Token 624: ' la' (ID: 557)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.28416574001312256
    2. 'range' → logprob: -2.159165859222412
    3. 'R' → logprob: -2.409165859222412
    4. 'K' → logprob: -4.034165859222412
    5. 'for' → logprob: -4.534165859222412
    6. ' range' → logprob: -5.034165859222412
    7. 'f' → logprob: -6.159165859222412
    8. 'la' → logprob: -6.659165859222412
    9. ' Q' → logprob: -7.034165859222412
    10. '#' → logprob: -7.284165859222412

Token 625: ' table' (ID: 3293)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.41490450501441956
    2. 'for' → logprob: -1.5399044752120972
    3. 'd' → logprob: -3.1649045944213867
    4. 'f' → logprob: -3.4149045944213867
    5. 'R' → logprob: -3.9149045944213867
    6. '#' → logprob: -4.539904594421387
    7. 'range' → logprob: -4.664904594421387
    8. 'K' → logprob: -5.664904594421387
    9. '...' → logprob: -6.539904594421387
    10. '```' → logprob: -6.789904594421387

Token 626: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0709824338555336
    2. 'max' → logprob: -3.9459824562072754
    3. 'ans' → logprob: -4.445982456207275
    4. 'answer' → logprob: -4.445982456207275
    5. 'res' → logprob: -5.195982456207275
    6. 'dp' → logprob: -5.570982456207275
    7. 'result' → logprob: -5.695982456207275
    8. 'f' → logprob: -6.445982456207275
    9. '#' → logprob: -6.570982456207275
    10. '=' → logprob: -6.695982456207275

Token 627: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010158692486584187
    2. 'f' → logprob: -4.635158538818359
    3. 'Q' → logprob: -8.13515853881836
    4. ' d' → logprob: -10.63515853881836
    5. 'for' → logprob: -10.76015853881836
    6. ']' → logprob: -11.26015853881836
    7. '```' → logprob: -11.51015853881836
    8. '#' → logprob: -12.13515853881836
    9. 'N' → logprob: -12.26015853881836
    10. '`' → logprob: -12.38515853881836

Token 628: '"' (ID: 1)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009908250533044338
    2. '=' → logprob: -5.134908199310303
    3. ':' → logprob: -6.884908199310303
    4. ' for' → logprob: -7.009908199310303
    5. ' =' → logprob: -7.884908199310303
    6. '#' → logprob: -8.009908676147461
    7. ']' → logprob: -8.134908676147461
    8. '[' → logprob: -8.259908676147461
    9. '[i' → logprob: -8.384908676147461
    10. ':
' → logprob: -9.134908676147461

Token 629: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00031627772841602564
    2. ' for' → logprob: -9.250316619873047
    3. 'i' → logprob: -9.375316619873047
    4. ')' → logprob: -10.250316619873047
    5. '=' → logprob: -10.375316619873047
    6. '#' → logprob: -10.750316619873047
    7. '```' → logprob: -11.000316619873047
    8. ']' → logprob: -11.750316619873047
    9. 'max' → logprob: -12.500316619873047
    10. 'f' → logprob: -12.625316619873047

Token 630: ' comb' (ID: 4134)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23704999685287476
    2. 'for' → logprob: -1.9870500564575195
    3. 'R' → logprob: -2.6120500564575195
    4. ' i' → logprob: -8.86205005645752
    5. '_' → logprob: -9.48705005645752
    6. ' for' → logprob: -9.73705005645752
    7. '```' → logprob: -9.73705005645752
    8. ' R' → logprob: -9.98705005645752
    9. 'r' → logprob: -10.48705005645752
    10. 'N' → logprob: -10.48705005645752

Token 631: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.02167874574661255
    2. 'ine' → logprob: -3.8966786861419678
    3. 'ler' → logprob: -7.771678924560547
    4. 'in' → logprob: -8.021678924560547
    5. 'iné' → logprob: -8.646678924560547
    6. '#' → logprob: -9.771678924560547
    7. 'le' → logprob: -10.521678924560547
    8. '```' → logprob: -10.521678924560547
    9. 'îner' → logprob: -10.771678924560547
    10. 'er' → logprob: -11.146678924560547

Token 632: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12213020026683807
    2. 'i' → logprob: -2.3721301555633545
    3. ' for' → logprob: -3.8721301555633545
    4. ' i' → logprob: -8.372130393981934
    5. '```' → logprob: -8.372130393981934
    6. '#' → logprob: -8.497130393981934
    7. ']' → logprob: -9.747130393981934
    8. ')' → logprob: -10.622130393981934
    9. '...' → logprob: -11.122130393981934
    10. 'l' → logprob: -11.372130393981934

Token 633: ' données' (ID: 30580)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04563141614198685
    2. 'i' → logprob: -5.045631408691406
    3. 'tables' → logprob: -5.170631408691406
    4. 'N' → logprob: -5.295631408691406
    5. 'ranges' → logprob: -5.420631408691406
    6. 'd' → logprob: -5.545631408691406
    7. 'f' → logprob: -5.670631408691406
    8. 'val' → logprob: -6.295631408691406
    9. 'indices' → logprob: -6.295631408691406
    10. 'layers' → logprob: -6.670631408691406

Token 634: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.625006675720215
    3. '#' → logprob: -14.125006675720215
    4. '=' → logprob: -14.375006675720215
    5. '```' → logprob: -14.375006675720215
    6. ')' → logprob: -14.750006675720215
    7. 'i' → logprob: -15.125006675720215
    8. ']' → logprob: -15.750006675720215
    9. '
' → logprob: -15.875006675720215
    10. 'from' → logprob: -16.3750057220459

Token 635: ' y' (ID: 342)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3587459921836853
    2. '#' → logprob: -1.60874605178833
    3. 'for' → logprob: -2.48374605178833
    4. ' f' → logprob: -4.98374605178833
    5. 'calcul' → logprob: -5.10874605178833
    6. ' #' → logprob: -6.48374605178833
    7. ' for' → logprob: -7.10874605178833
    8. ' obtenir' → logprob: -7.60874605178833
    9. 'K' → logprob: -7.98374605178833
    10. 'produ' → logprob: -8.483745574951172

Token 636: ' accum' (ID: 23148)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3782045543193817
    2. 'for' → logprob: -1.378204584121704
    3. ' appliquer' → logprob: -4.503204345703125
    4. 'apply' → logprob: -4.628204345703125
    5. ' for' → logprob: -4.628204345703125
    6. 'f' → logprob: -5.128204345703125
    7. 'mettre' → logprob: -5.253204345703125
    8. ' #' → logprob: -6.003204345703125
    9. 'ap' → logprob: -6.003204345703125
    10. '=' → logprob: -6.628204345703125

Token 637: 'uler' (ID: 11802)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2790200412273407
    2. 'iner' → logprob: -2.029020071029663
    3. 'erm' → logprob: -3.279020071029663
    4. 'e' → logprob: -3.654020071029663
    5. 'u' → logprob: -4.404019832611084
    6. 'in' → logprob: -5.404019832611084
    7. 'uler' → logprob: -5.404019832611084
    8. 'pler' → logprob: -5.779019832611084
    9. 'ler' → logprob: -6.029019832611084
    10. 'ant' → logprob: -6.154019832611084

Token 638: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37431883811950684
    2. 'results' → logprob: -2.749318838119507
    3. '0' → logprob: -2.874318838119507
    4. 'f' → logprob: -3.249318838119507
    5. 'i' → logprob: -3.249318838119507
    6. 'K' → logprob: -3.374318838119507
    7. '#' → logprob: -4.624319076538086
    8. '1' → logprob: -4.874319076538086
    9. ' for' → logprob: -5.249319076538086
    10. 'd' → logprob: -5.249319076538086

Token 639: ' compte' (ID: 19657)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.18373613059520721
    2. 'val' → logprob: -2.8087360858917236
    3. 'result' → logprob: -3.1837360858917236
    4. ' résultats' → logprob: -3.4337360858917236
    5. 'for' → logprob: -4.183736324310303
    6. 'res' → logprob: -4.433736324310303
    7. 's' → logprob: -6.433736324310303
    8. '#' → logprob: -6.683736324310303
    9. 'results' → logprob: -6.683736324310303
    10. 'ré' → logprob: -7.933736324310303

Token 640: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -1.0240013599395752
    2. 'ments' → logprob: -1.3990013599395752
    3. 's' → logprob: -1.6490013599395752
    4. 'r' → logprob: -2.149001359939575
    5. 'for' → logprob: -2.899001359939575
    6. 'nts' → logprob: -4.649001121520996
    7. 'es' → logprob: -4.774001121520996
    8. 'd' → logprob: -5.524001121520996
    9. 'rs' → logprob: -6.024001121520996
    10. 'ur' → logprob: -6.149001121520996

Token 641: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7252845029579476e-05
    2. ' for' → logprob: -10.625027656555176
    3. '```' → logprob: -13.500027656555176
    4. ':' → logprob: -14.250027656555176
    5. '
' → logprob: -15.000027656555176
    6. '=' → logprob: -15.000027656555176
    7. 'i' → logprob: -16.50002670288086
    8. '	for' → logprob: -17.00002670288086
    9. '#' → logprob: -17.25002670288086
    10. ':
' → logprob: -17.50002670288086

Token 642: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -13.12500286102295
    3. 'R' → logprob: -15.25000286102295
    4. ' for' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.375001907348633
    6. '
' → logprob: -17.375001907348633
    7. 'from' → logprob: -17.500001907348633
    8. '#' → logprob: -18.375001907348633
    9. '``' → logprob: -18.875001907348633
    10. '   ' → logprob: -18.875001907348633

Token 643: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019543254747986794
    2. 'k' → logprob: -7.001954555511475
    3. ' i' → logprob: -7.751954555511475
    4. 'l' → logprob: -8.126954078674316
    5. 'x' → logprob: -9.126954078674316
    6. 'length' → logprob: -9.751954078674316
    7. 'j' → logprob: -10.501954078674316
    8. 'h' → logprob: -11.251954078674316
    9. 'a' → logprob: -11.251954078674316
    10. 'K' → logprob: -11.251954078674316

Token 644: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026220977306366
    2. 'in' → logprob: -2.35026216506958
    3. ' ' → logprob: -10.600262641906738
    4. '   ' → logprob: -11.725262641906738
    5. '	in' → logprob: -12.100262641906738
    6. '1' → logprob: -12.225262641906738
    7. ',' → logprob: -12.600262641906738
    8. '```' → logprob: -13.100262641906738
    9. '0' → logprob: -14.100262641906738
    10. '_' → logprob: -14.350262641906738

Token 645: ' Q' (ID: 1486)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.013771584257483482
    2. 'range' → logprob: -4.3887715339660645
    3. ' range' → logprob: -7.0137715339660645
    4. ' R' → logprob: -8.263772010803223
    5. 'Q' → logprob: -9.263772010803223
    6. 'N' → logprob: -12.638772010803223
    7. '1' → logprob: -12.888772010803223
    8. 'Range' → logprob: -13.638772010803223
    9. 'r' → logprob: -14.513772010803223
    10. '(R' → logprob: -15.388772010803223

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3809104263782501
    2. '   ' → logprob: -1.6309103965759277
    3. ':
' → logprob: -2.1309103965759277
    4. ' for' → logprob: -6.255910396575928
    5. 'for' → logprob: -8.630910873413086
    6. '[' → logprob: -9.630910873413086
    7. '	for' → logprob: -9.755910873413086
    8. ',' → logprob: -10.380910873413086
    9. ' :' → logprob: -11.755910873413086
    10. ':
' → logprob: -12.630910873413086

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6113525032997131
    2. 'for' → logprob: -0.8613525032997131
    3. ' for' → logprob: -3.3613524436950684
    4. 'if' → logprob: -9.611352920532227
    5. ' ' → logprob: -11.361352920532227
    6. '	for' → logprob: -11.611352920532227
    7. 'j' → logprob: -12.361352920532227
    8. 'f' → logprob: -12.736352920532227
    9. ' if' → logprob: -12.736352920532227
    10. '```' → logprob: -12.736352920532227

Token 648: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001860688324086368
    2. 'if' → logprob: -6.876860618591309
    3. '   ' → logprob: -7.626860618591309
    4. ' for' → logprob: -8.001860618591309
    5. 'f' → logprob: -13.501860618591309
    6. ' ' → logprob: -13.751860618591309
    7. 'j' → logprob: -14.001860618591309
    8. '```' → logprob: -14.626860618591309
    9. '	for' → logprob: -14.626860618591309
    10. ' if' → logprob: -15.001860618591309

Token 649: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02638123743236065
    2. 'if' → logprob: -3.651381254196167
    3. 'f' → logprob: -10.401381492614746
    4. '   ' → logprob: -10.901381492614746
    5. 'j' → logprob: -11.401381492614746
    6. ' for' → logprob: -12.276381492614746
    7. 'm' → logprob: -12.401381492614746
    8. 'print' → logprob: -13.151381492614746
    9. 'continue' → logprob: -13.401381492614746
    10. 'pass' → logprob: -14.276381492614746

Token 650: ' considère' (ID: 176437)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7182459235191345
    2. ' if' → logprob: -1.2182459831237793
    3. 'for' → logprob: -2.3432459831237793
    4. '   ' → logprob: -2.5932459831237793
    5. ' for' → logprob: -3.0932459831237793
    6. ' range' → logprob: -9.093245506286621
    7. 'range' → logprob: -9.593245506286621
    8. ' ' → logprob: -9.593245506286621
    9. 'f' → logprob: -10.343245506286621
    10. 't' → logprob: -10.468245506286621

Token 651: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5818836688995361
    2. 'i' → logprob: -1.8318836688995361
    3. ' for' → logprob: -2.956883668899536
    4. '0' → logprob: -2.956883668899536
    5. ' i' → logprob: -3.206883668899536
    6. '   ' → logprob: -3.581883668899536
    7. 'range' → logprob: -3.581883668899536
    8. 'j' → logprob: -3.706883668899536
    9. ' range' → logprob: -3.831883668899536
    10. '1' → logprob: -4.456883430480957

Token 652: ' sous' (ID: 14487)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34068605303764343
    2. 'for' → logprob: -1.4656860828399658
    3. ' for' → logprob: -3.840686082839966
    4. ' j' → logprob: -3.840686082839966
    5. 'if' → logprob: -5.090685844421387
    6. 'k' → logprob: -5.215685844421387
    7. 'i' → logprob: -6.715685844421387
    8. 'range' → logprob: -8.090685844421387
    9. '1' → logprob: -8.465685844421387
    10. 'l' → logprob: -8.590685844421387

Token 653: '-table' (ID: 35909)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20021021366119385
    2. 'i' → logprob: -2.9502100944519043
    3. 'liste' → logprob: -3.0752100944519043
    4. '_l' → logprob: -3.7002100944519043
    5. 'list' → logprob: -3.8252100944519043
    6. '_list' → logprob: -4.325210094451904
    7. 'l' → logprob: -4.575210094451904
    8. '-l' → logprob: -5.325210094451904
    9. '[i' → logprob: -6.075210094451904
    10. '_i' → logprob: -6.450210094451904

Token 654: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5186427235603333
    2. ' for' → logprob: -1.0186426639556885
    3. 'if' → logprob: -3.7686426639556885
    4. ' if' → logprob: -5.268642902374268
    5. 'i' → logprob: -5.518642902374268
    6. ' i' → logprob: -5.768642902374268
    7. 'ur' → logprob: -5.893642902374268
    8. 'au' → logprob: -6.518642902374268
    9. '   ' → logprob: -6.643642902374268
    10. '[i' → logprob: -7.018642902374268

Token 655: ' taille' (ID: 41644)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2797205448150635
    2. 'f' → logprob: -1.7797205448150635
    3. 'range' → logprob: -2.9047205448150635
    4. 'R' → logprob: -4.529720306396484
    5. ' range' → logprob: -5.279720306396484
    6. 'Q' → logprob: -6.154720306396484
    7. 'j' → logprob: -7.154720306396484
    8. 'for' → logprob: -7.404720306396484
    9. ' d' → logprob: -7.404720306396484
    10. ' f' → logprob: -8.154720306396484

Token 656: ' correspond' (ID: 11095)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7532228827476501
    2. '2' → logprob: -1.378222942352295
    3. 'i' → logprob: -1.753222942352295
    4. '(' → logprob: -3.503222942352295
    5. 'd' → logprob: -4.253222942352295
    6. '0' → logprob: -4.503222942352295
    7. 'len' → logprob: -4.628222942352295
    8. 'for' → logprob: -4.753222942352295
    9. ' ' → logprob: -5.253222942352295
    10. '   ' → logprob: -5.378222942352295

Token 657: 'ante' (ID: 2116)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2657352685928345
    2. 'ente' → logprob: -1.6407352685928345
    3. 'a' → logprob: -2.390735149383545
    4. '   ' → logprob: -2.640735149383545
    5. 'à' → logprob: -2.765735149383545
    6. '[i' → logprob: -2.765735149383545
    7. 'ent' → logprob: -3.015735149383545
    8. 'ante' → logprob: -3.515735149383545
    9. 'ant' → logprob: -3.640735149383545
    10. 'ur' → logprob: -3.890735149383545

Token 658: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09966752678155899
    2. ':' → logprob: -2.974667549133301
    3. ' for' → logprob: -3.849667549133301
    4. 'for' → logprob: -4.349667549133301
    5. ' if' → logprob: -5.724667549133301
    6. ',' → logprob: -6.599667549133301
    7. 'if' → logprob: -6.599667549133301
    8. ':
' → logprob: -6.849667549133301
    9. ' in' → logprob: -7.974667549133301
    10. ' ' → logprob: -8.0996675491333

Token 659: ' i' (ID: 575)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5467379093170166
    2. '2' → logprob: -1.2967379093170166
    3. 'i' → logprob: -2.7967379093170166
    4. '(' → logprob: -3.1717379093170166
    5. '1' → logprob: -4.0467376708984375
    6. '(len' → logprob: -4.6717376708984375
    7. '(i' → logprob: -4.9217376708984375
    8. 'd' → logprob: -6.0467376708984375
    9. 'N' → logprob: -6.1717376708984375
    10. '0' → logprob: -6.5467376708984375

Token 660: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28964072465896606
    2. ':' → logprob: -1.7896406650543213
    3. ' for' → logprob: -3.6646406650543213
    4. ' if' → logprob: -3.9146406650543213
    5. 'for' → logprob: -4.0396409034729
    6. 'if' → logprob: -4.4146409034729
    7. ':
' → logprob: -4.9146409034729
    8. ',' → logprob: -7.1646409034729
    9. ' and' → logprob: -7.9146409034729
    10. ' :' → logprob: -8.539640426635742

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10445819795131683
    2. 'for' → logprob: -2.7294580936431885
    3. ' for' → logprob: -3.8544580936431885
    4. 'if' → logprob: -4.854458332061768
    5. ' if' → logprob: -5.604458332061768
    6. '```' → logprob: -6.729458332061768
    7. ' ' → logprob: -9.97945785522461
    8. '   ' → logprob: -11.47945785522461
    9. '       ' → logprob: -11.85445785522461
    10. '  ' → logprob: -12.47945785522461

Token 662: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06070403382182121
    2. 'if' → logprob: -2.935703992843628
    3. ' for' → logprob: -5.810704231262207
    4. '   ' → logprob: -5.935704231262207
    5. ' if' → logprob: -8.810704231262207
    6. 'f' → logprob: -11.810704231262207
    7. 'j' → logprob: -12.435704231262207
    8. ' ' → logprob: -13.435704231262207
    9. '```' → logprob: -13.685704231262207
    10. '	for' → logprob: -14.685704231262207

Token 663: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021583528723567724
    2. 'k' → logprob: -6.377158164978027
    3. 'x' → logprob: -8.752158164978027
    4. 'mask' → logprob: -9.502158164978027
    5. 'b' → logprob: -10.252158164978027
    6. ' j' → logprob: -10.502158164978027
    7. 'l' → logprob: -10.752158164978027
    8. 'a' → logprob: -10.877158164978027
    9. 'm' → logprob: -11.127158164978027
    10. 's' → logprob: -11.252158164978027

Token 664: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4288076162338257
    2. 'in' → logprob: -1.0538076162338257
    3. ',' → logprob: -10.553807258605957
    4. '```' → logprob: -11.053807258605957
    5. ' ' → logprob: -11.428807258605957
    6. ')' → logprob: -11.678807258605957
    7. 'k' → logprob: -11.803807258605957
    8. '0' → logprob: -12.178807258605957
    9. '	in' → logprob: -12.178807258605957
    10. '   ' → logprob: -12.678807258605957

Token 665: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06304732710123062
    2. 'Q' → logprob: -3.438047409057617
    3. 'range' → logprob: -3.563047409057617
    4. ' range' → logprob: -7.563047409057617
    5. ' R' → logprob: -9.438047409057617
    6. 'K' → logprob: -12.563047409057617
    7. 'd' → logprob: -12.563047409057617
    8. ' Q' → logprob: -12.688047409057617
    9. 'Range' → logprob: -12.813047409057617
    10. 'r' → logprob: -12.938047409057617

Token 666: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022228388115763664
    2. '(i' → logprob: -4.647228240966797
    3. '(len' → logprob: -5.147228240966797
    4. '((' → logprob: -6.022228240966797
    5. '(K' → logprob: -6.147228240966797
    6. '2' → logprob: -7.022228240966797
    7. '(d' → logprob: -7.772228240966797
    8. '(f' → logprob: -7.772228240966797
    9. '(k' → logprob: -9.022228240966797
    10. '(N' → logprob: -9.522228240966797

Token 667: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4225204586982727
    2. '+' → logprob: -1.547520399093628
    3. '):
' → logprob: -2.047520399093628
    4. '   ' → logprob: -7.172520637512207
    5. ' +' → logprob: -7.422520637512207
    6. '-' → logprob: -7.672520637512207
    7. '//' → logprob: -8.172520637512207
    8. ',' → logprob: -9.172520637512207
    9. '1' → logprob: -9.297520637512207
    10. '):
' → logprob: -9.672520637512207

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.198043699143454e-05
    2. ' ' → logprob: -9.875091552734375
    3. '2' → logprob: -10.375091552734375
    4. '(' → logprob: -12.750091552734375
    5. 'k' → logprob: -13.250091552734375
    6. '(i' → logprob: -13.375091552734375
    7. '   ' → logprob: -14.125091552734375
    8. 'i' → logprob: -14.125091552734375
    9. '(k' → logprob: -14.875091552734375
    10. '```' → logprob: -15.437591552734375

Token 669: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34910014271736145
    2. '):
' → logprob: -1.224100112915039
    3. '):
' → logprob: -8.099100112915039
    4. '   ' → logprob: -8.599100112915039
    5. '+' → logprob: -9.724100112915039
    6. '       ' → logprob: -9.974100112915039
    7. '(i' → logprob: -11.099100112915039
    8. '):

' → logprob: -11.599100112915039
    9. '():' → logprob: -11.849100112915039
    10. '():
' → logprob: -12.099100112915039

Token 670: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03700925409793854
    2. 'i' → logprob: -3.4120092391967773
    3. 'K' → logprob: -6.287009239196777
    4. ' N' → logprob: -7.662009239196777
    5. '1' → logprob: -7.912009239196777
    6. '2' → logprob: -8.037009239196777
    7. '(i' → logprob: -9.662009239196777
    8. 'len' → logprob: -10.037009239196777
    9. 'min' → logprob: -10.162009239196777
    10. '(N' → logprob: -10.287009239196777

Token 671: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.113290095934644e-05
    2. ' +' → logprob: -9.875081062316895
    3. '-' → logprob: -10.875081062316895
    4. '+i' → logprob: -12.625081062316895
    5. '):' → logprob: -13.000081062316895
    6. '):
' → logprob: -13.375081062316895
    7. '-i' → logprob: -14.000081062316895
    8. '   ' → logprob: -14.250081062316895
    9. '1' → logprob: -14.750081062316895
    10. ' -' → logprob: -15.125081062316895

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.375003814697266
    3. '+' → logprob: -13.875003814697266
    4. '2' → logprob: -14.625003814697266
    5. '```' → logprob: -15.500003814697266
    6. '(' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '(i' → logprob: -16.750003814697266
    9. '{' → logprob: -17.750003814697266
    10. '`' → logprob: -17.937503814697266

Token 673: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004792753607034683
    2. '):
' → logprob: -5.3797926902771
    3. ':' → logprob: -8.754793167114258
    4. '):
' → logprob: -12.629793167114258
    5. '+' → logprob: -12.879793167114258
    6. ')' → logprob: -12.879793167114258
    7. '   ' → logprob: -12.879793167114258
    8. '       ' → logprob: -14.004793167114258
    9. '():' → logprob: -14.004793167114258
    10. ']:' → logprob: -14.254793167114258

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022922223433852196
    2. ':' → logprob: -3.8979222774505615
    3. '   ' → logprob: -6.772922039031982
    4. '<|end|>' → logprob: -8.39792251586914
    5. ' for' → logprob: -8.52292251586914
    6. '[' → logprob: -9.02292251586914
    7. ' :' → logprob: -9.27292251586914
    8. ':
' → logprob: -9.52292251586914
    9. '):' → logprob: -9.64792251586914
    10. '           ' → logprob: -9.89792251586914

Token 675: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7150388956069946
    2. '           ' → logprob: -1.3400388956069946
    3. ' for' → logprob: -2.090038776397705
    4. '       ' → logprob: -2.840038776397705
    5. 'if' → logprob: -2.965038776397705
    6. ' if' → logprob: -4.840038776397705
    7. '   ' → logprob: -5.965038776397705
    8. 'f' → logprob: -7.090038776397705
    9. 's' → logprob: -7.340038776397705
    10. '[' → logprob: -7.715038776397705

Token 676: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010014358907938004
    2. 'if' → logprob: -5.135014533996582
    3. 'm' → logprob: -7.010014533996582
    4. 'mask' → logprob: -7.135014533996582
    5. 's' → logprob: -7.885014533996582
    6. 'x' → logprob: -8.010014533996582
    7. 'shift' → logprob: -8.135014533996582
    8. 'l' → logprob: -8.260014533996582
    9. 'd' → logprob: -8.885014533996582
    10. 'step' → logprob: -9.135014533996582

Token 677: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.934660792350769
    2. 'd' → logprob: -1.309660792350769
    3. 'for' → logprob: -2.0596609115600586
    4. '       ' → logprob: -2.8096609115600586
    5. ' =' → logprob: -3.3096609115600586
    6. 'f' → logprob: -3.4346609115600586
    7. '           ' → logprob: -3.8096609115600586
    8. 's' → logprob: -4.309660911560059
    9. ' d' → logprob: -4.934660911560059
    10. '#' → logprob: -5.434660911560059

Token 678: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8933091759681702
    2. 'f' → logprob: -0.8933091759681702
    3. 'for' → logprob: -2.7683091163635254
    4. '2' → logprob: -3.1433091163635254
    5. 'j' → logprob: -4.393309116363525
    6. 'len' → logprob: -4.518309116363525
    7. 'l' → logprob: -4.643309116363525
    8. 'max' → logprob: -5.268309116363525
    9. 't' → logprob: -5.393309116363525
    10. 'x' → logprob: -5.393309116363525

Token 679: ' distance' (ID: 9324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8216898441314697
    2. 'x' → logprob: -2.0716898441314697
    3. 'f' → logprob: -2.3216898441314697
    4. 'val' → logprob: -2.4466898441314697
    5. 'd' → logprob: -2.9466898441314697
    6. 'min' → logprob: -3.0716898441314697
    7. 'm' → logprob: -3.0716898441314697
    8. 'j' → logprob: -3.3216898441314697
    9. 'max' → logprob: -3.3216898441314697
    10. '2' → logprob: -3.4466898441314697

Token 680: ' z' (ID: 579)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.783373236656189
    2. '=' → logprob: -0.908373236656189
    3. 'd' → logprob: -3.0333733558654785
    4. 'k' → logprob: -3.2833733558654785
    5. 'dist' → logprob: -5.0333733558654785
    6. 'diff' → logprob: -5.0333733558654785
    7. '(k' → logprob: -5.1583733558654785
    8. 's' → logprob: -5.1583733558654785
    9. '[k' → logprob: -5.2833733558654785
    10. 'l' → logprob: -5.5333733558654785

Token 681: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06206190586090088
    2. '=' → logprob: -2.8120617866516113
    3. '=k' → logprob: -9.68706226348877
    4. ',' → logprob: -12.31206226348877
    5. ' ' → logprob: -12.43706226348877
    6. 's' → logprob: -12.43706226348877
    7. '=i' → logprob: -13.31206226348877
    8. '   ' → logprob: -13.43706226348877
    9. 'k' → logprob: -13.43706226348877
    10. 'd' → logprob: -13.43706226348877

Token 682: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00414891866967082
    2. '2' → logprob: -6.879148960113525
    3. ' k' → logprob: -6.879148960113525
    4. 'N' → logprob: -7.629148960113525
    5. '(k' → logprob: -7.629148960113525
    6. 'i' → logprob: -7.879148960113525
    7. 'j' → logprob: -8.379148483276367
    8. '1' → logprob: -9.379148483276367
    9. '(' → logprob: -9.379148483276367
    10. '0' → logprob: -10.004148483276367

Token 683: ' deux' (ID: 10301)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0022332824300974607
    2. 'i' → logprob: -6.627233505249023
    3. 'j' → logprob: -8.752233505249023
    4. '0' → logprob: -8.877233505249023
    5. ' k' → logprob: -8.877233505249023
    6. 'N' → logprob: -8.877233505249023
    7. '2' → logprob: -9.002233505249023
    8. '(k' → logprob: -9.502233505249023
    9. 'z' → logprob: -10.627233505249023
    10. '#' → logprob: -11.252233505249023

Token 684: ' niveaux' (ID: 88262)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03359360992908478
    2. 'i' → logprob: -4.408593654632568
    3. 'indices' → logprob: -4.658593654632568
    4. ' indices' → logprob: -5.908593654632568
    5. '(k' → logprob: -6.783593654632568
    6. '^' → logprob: -7.033593654632568
    7. ' k' → logprob: -7.283593654632568
    8. '[k' → logprob: -7.283593654632568
    9. 'z' → logprob: -7.283593654632568
    10. '1' → logprob: -7.408593654632568

Token 685: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4290754795074463
    2. ' =' → logprob: -1.0540754795074463
    3. '       ' → logprob: -9.054075241088867
    4. 'z' → logprob: -9.804075241088867
    5. '           ' → logprob: -9.929075241088867
    6. '=k' → logprob: -10.304075241088867
    7. '   ' → logprob: -10.554075241088867
    8. 'k' → logprob: -10.929075241088867
    9. ' ' → logprob: -11.054075241088867
    10. '-' → logprob: -11.554075241088867

Token 686: ' tables' (ID: 16584)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0025622190441936255
    2. 'i' → logprob: -6.502562046051025
    3. 'f' → logprob: -8.252562522888184
    4. 'indices' → logprob: -8.377562522888184
    5. ' k' → logprob: -8.627562522888184
    6. 'N' → logprob: -9.252562522888184
    7. 'j' → logprob: -9.377562522888184
    8. 'd' → logprob: -9.752562522888184
    9. 'l' → logprob: -10.252562522888184
    10. '2' → logprob: -10.877562522888184

Token 687: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09072604030370712
    2. '=' → logprob: -2.465726137161255
    3. '       ' → logprob: -6.590725898742676
    4. '           ' → logprob: -8.340725898742676
    5. 'z' → logprob: -9.465725898742676
    6. '   ' → logprob: -10.465725898742676
    7. ',' → logprob: -11.090725898742676
    8. '               ' → logprob: -11.965725898742676
    9. '```' → logprob: -12.215725898742676
    10. '
' → logprob: -12.465725898742676

Token 688: ' et' (ID: 859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29305991530418396
    2. ' -' → logprob: -1.5430599451065063
    3. '-k' → logprob: -4.543059825897217
    4. '       ' → logprob: -4.918059825897217
    5. '=' → logprob: -5.168059825897217
    6. ')' → logprob: -5.793059825897217
    7. ' =' → logprob: -5.793059825897217
    8. '-i' → logprob: -6.043059825897217
    9. '   ' → logprob: -6.418059825897217
    10. ',' → logprob: -6.543059825897217

Token 689: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003023345780093223
    2. ' k' → logprob: -8.1253023147583
    3. 'i' → logprob: -12.7503023147583
    4. 'N' → logprob: -13.6253023147583
    5. '   ' → logprob: -14.7503023147583
    6. '```' → logprob: -14.7503023147583
    7. '(k' → logprob: -14.7503023147583
    8. 'j' → logprob: -15.8753023147583
    9. ' ' → logprob: -16.125303268432617
    10. ',k' → logprob: -16.125303268432617

Token 690: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06496702134609222
    2. '=' → logprob: -2.814966917037964
    3. '       ' → logprob: -5.939967155456543
    4. 'z' → logprob: -9.064967155456543
    5. '           ' → logprob: -9.189967155456543
    6. '   ' → logprob: -10.439967155456543
    7. ',' → logprob: -10.564967155456543
    8. '[' → logprob: -11.064967155456543
    9. 's' → logprob: -11.564967155456543
    10. ' ' → logprob: -11.814967155456543

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2745761275291443
    2. 'z' → logprob: -1.774576187133789
    3. ' z' → logprob: -3.274576187133789
    4. '           ' → logprob: -4.149576187133789
    5. '   ' → logprob: -5.774576187133789
    6. '```' → logprob: -5.899576187133789
    7. ' for' → logprob: -6.024576187133789
    8. '        ' → logprob: -6.649576187133789
    9. ' =' → logprob: -6.774576187133789
    10. '[' → logprob: -6.899576187133789

Token 692: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.004741622135043144
    2. '2' → logprob: -6.504741668701172
    3. 'shift' → logprob: -7.379741668701172
    4. ' z' → logprob: -7.754741668701172
    5. '   ' → logprob: -7.754741668701172
    6. 'd' → logprob: -7.754741668701172
    7. '       ' → logprob: -8.004741668701172
    8. 'diff' → logprob: -8.379741668701172
    9. 'dist' → logprob: -8.879741668701172
    10. 's' → logprob: -9.254741668701172

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688185811042786
    2. ' =' → logprob: -1.1368818283081055
    3. '=k' → logprob: -11.636881828308105
    4. '=i' → logprob: -13.761881828308105
    5. ',' → logprob: -15.511881828308105
    6. '=
' → logprob: -15.761881828308105
    7. '=(' → logprob: -16.636882781982422
    8. '=j' → logprob: -16.636882781982422
    9. '=z' → logprob: -16.761882781982422
    10. '=n' → logprob: -16.886882781982422

Token 694: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4528401494026184
    2. '1' → logprob: -1.2028400897979736
    3. '2' → logprob: -3.3278400897979736
    4. '(' → logprob: -3.9528400897979736
    5. 'K' → logprob: -5.577840328216553
    6. '(k' → logprob: -5.702840328216553
    7. 'N' → logprob: -6.702840328216553
    8. '(N' → logprob: -8.827839851379395
    9. ' ' → logprob: -9.327839851379395
    10. ' k' → logprob: -9.827839851379395

Token 695: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3303930163383484
    2. ' -' → logprob: -1.3303930759429932
    3. '-i' → logprob: -4.080392837524414
    4. '   ' → logprob: -9.705392837524414
    5. ' i' → logprob: -11.955392837524414
    6. ' ' → logprob: -12.205392837524414
    7. 'i' → logprob: -12.205392837524414
    8. '-(' → logprob: -13.080392837524414
    9. '#' → logprob: -14.080392837524414
    10. '−' → logprob: -14.330392837524414

Token 696: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5822400857578032e-05
    2. ' i' → logprob: -11.000025749206543
    3. '1' → logprob: -11.625025749206543
    4. '   ' → logprob: -16.75002670288086
    5. '(i' → logprob: -17.50002670288086
    6. '(' → logprob: -18.25002670288086
    7. '_i' → logprob: -18.75002670288086
    8. ' ' → logprob: -18.75002670288086
    9. '	i' → logprob: -18.75002670288086
    10. 'k' → logprob: -18.87502670288086

Token 697: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05331725999712944
    2. '<|end|>' → logprob: -3.1783173084259033
    3. 'if' → logprob: -6.178317070007324
    4. ' if' → logprob: -6.303317070007324
    5. 'for' → logprob: -6.678317070007324
    6. '#' → logprob: -6.678317070007324
    7. ')' → logprob: -6.928317070007324
    8. '+' → logprob: -7.178317070007324
    9. ' for' → logprob: -7.428317070007324
    10. 's' → logprob: -8.053317070007324

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02818017639219761
    2. 'for' → logprob: -4.278180122375488
    3. '#' → logprob: -5.653180122375488
    4. 'if' → logprob: -5.778180122375488
    5. ' for' → logprob: -6.028180122375488
    6. ' if' → logprob: -6.653180122375488
    7. '<|end|>' → logprob: -6.653180122375488
    8. '
' → logprob: -7.028180122375488
    9. 's' → logprob: -8.278180122375488
    10. '        
' → logprob: -8.653180122375488

Token 699: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011406653560698032
    2. '       ' → logprob: -5.011406421661377
    3. 'if' → logprob: -5.761406421661377
    4. ' for' → logprob: -6.636406421661377
    5. '#' (adapté à ' #') → logprob: -9.261406898498535
    6. ')' → logprob: -10.761406898498535
    7. 'x' → logprob: -10.761406898498535
    8. 'mask' → logprob: -11.761406898498535
    9. 's' → logprob: -12.011406898498535
    10. '```' → logprob: -12.136406898498535

Token 700: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.073596548754722e-05
    2. 'mask' → logprob: -10.87505054473877
    3. 'm' → logprob: -11.37505054473877
    4. ' for' → logprob: -12.50005054473877
    5. 'if' → logprob: -12.75005054473877
    6. 'x' → logprob: -13.00005054473877
    7. 'p' → logprob: -13.87505054473877
    8. 's' → logprob: -13.87505054473877
    9. '#' → logprob: -14.00005054473877
    10. 'u' → logprob: -14.12505054473877

Token 701: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45298847556114197
    2. '=' → logprob: -1.3279885053634644
    3. 'for' → logprob: -3.077988386154175
    4. 'ax' → logprob: -3.327988386154175
    5. 'ask' → logprob: -4.577988624572754
    6. '=j' → logprob: -7.202988624572754
    7. 'a' → logprob: -7.327988624572754
    8. 'sk' → logprob: -7.327988624572754
    9. 'ult' → logprob: -7.327988624572754
    10. 'od' → logprob: -7.577988624572754

Token 702: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6714603900909424
    2. '2' → logprob: -1.2964603900909424
    3. '1' → logprob: -1.7964603900909424
    4. '0' → logprob: -3.9214603900909424
    5. 'z' → logprob: -4.921460151672363
    6. 'min' → logprob: -4.921460151672363
    7. '(i' → logprob: -5.546460151672363
    8. '(z' → logprob: -5.796460151672363
    9. 'len' → logprob: -6.546460151672363
    10. '(min' → logprob: -7.046460151672363

Token 703: ' masque' (ID: 128511)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7103280425071716
    2. '(' → logprob: -0.8353280425071716
    3. 'min' → logprob: -4.210328102111816
    4. 'R' → logprob: -4.585328102111816
    5. '0' → logprob: -4.710328102111816
    6. 'z' → logprob: -4.835328102111816
    7. '(i' → logprob: -5.335328102111816
    8. '2' → logprob: -5.460328102111816
    9. ' (' → logprob: -5.710328102111816
    10. 'k' → logprob: -5.835328102111816

Token 704: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027828602120280266
    2. ' =' → logprob: -3.9028286933898926
    3. '(' → logprob: -5.277828693389893
    4. '=(' → logprob: -7.027828693389893
    5. '((' → logprob: -7.777828693389893
    6. 'z' → logprob: -8.027828216552734
    7. ' (' → logprob: -8.652828216552734
    8. '(z' → logprob: -8.902828216552734
    9. 'm' → logprob: -9.652828216552734
    10. '           ' → logprob: -10.652828216552734

Token 705: 'inaire' (ID: 41465)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03627306967973709
    2. ' =' → logprob: -4.661273002624512
    3. '=(' → logprob: -5.411273002624512
    4. '(' → logprob: -5.536273002624512
    5. 'm' → logprob: -5.536273002624512
    6. '=z' → logprob: -5.536273002624512
    7. '&' → logprob: -5.911273002624512
    8. '(z' → logprob: -6.161273002624512
    9. 'z' → logprob: -6.536273002624512
    10. '=k' → logprob: -7.161273002624512

Token 706: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20162586867809296
    2. ' =' → logprob: -1.7016258239746094
    3. '=(' → logprob: -9.45162582397461
    4. 'm' → logprob: -9.95162582397461
    5. '       ' → logprob: -10.20162582397461
    6. '(' → logprob: -11.70162582397461
    7. '=((' → logprob: -12.20162582397461
    8. '&' → logprob: -12.57662582397461
    9. '=m' → logprob: -12.57662582397461
    10. '   ' → logprob: -12.57662582397461

Token 707: ' z' (ID: 579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48780831694602966
    2. '(z' → logprob: -0.987808346748352
    3. '((' → logprob: -4.7378082275390625
    4. 'z' → logprob: -6.3628082275390625
    5. ' (' → logprob: -6.3628082275390625
    6. '(R' → logprob: -6.9878082275390625
    7. '(i' → logprob: -8.362808227539062
    8. '(Q' → logprob: -9.112808227539062
    9. '(k' → logprob: -9.737808227539062
    10. ' ((' → logprob: -10.987808227539062

Token 708: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.5015900135040283
    2. '=' → logprob: -1.7515900135040283
    3. ')-' → logprob: -2.0015900135040283
    4. '-' → logprob: -2.0015900135040283
    5. '1' → logprob: -2.8765900135040283
    6. '_bits' → logprob: -3.1265900135040283
    7. '(' → logprob: -3.2515900135040283
    8. 'm' → logprob: -3.3765900135040283
    9. ')' → logprob: -3.3765900135040283
    10. ' =' → logprob: -3.8765900135040283

Token 709: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14651237428188324
    2. ' =' → logprob: -2.021512269973755
    3. 'm' → logprob: -6.396512508392334
    4. '(' → logprob: -7.021512508392334
    5. '=(' → logprob: -8.021512031555176
    6. ')' → logprob: -8.396512031555176
    7. '       ' → logprob: -8.521512031555176
    8. ' (' → logprob: -8.646512031555176
    9. '-' → logprob: -9.646512031555176
    10. '           ' → logprob: -9.896512031555176

Token 710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023190150037407875
    2. 'm' → logprob: -5.148190021514893
    3. 'z' → logprob: -5.273190021514893
    4. 'la' → logprob: -6.148190021514893
    5. 'ones' → logprob: -6.273190021514893
    6. '((' → logprob: -6.273190021514893
    7. 'un' → logprob: -6.273190021514893
    8. 'moins' → logprob: -6.648190021514893
    9. 'l' → logprob: -7.148190021514893
    10. '```' → logprob: -7.898190021514893

Token 711: '1' (ID: 16)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.7642000913619995
    2. '1' → logprob: -1.2642000913619995
    3. 'z' → logprob: -1.8892000913619995
    4. '((' → logprob: -2.639200210571289
    5. 'm' → logprob: -4.889200210571289
    6. 'l' → logprob: -5.389200210571289
    7. '(' → logprob: -5.514200210571289
    8. 'moins' → logprob: -5.639200210571289
    9. 'k' → logprob: -6.389200210571289
    10. 'la' → logprob: -6.639200210571289

Token 712: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8250097036361694
    2. 'm' → logprob: -1.3250097036361694
    3. ' =' → logprob: -1.3250097036361694
    4. '(' → logprob: -4.700009822845459
    5. '       ' → logprob: -4.700009822845459
    6. '=(' → logprob: -5.575009822845459
    7. ' (' → logprob: -5.700009822845459
    8. ' m' → logprob: -6.575009822845459
    9. '((' → logprob: -6.700009822845459
    10. '(m' → logprob: -6.700009822845459

Token 713: 'ex' (ID: 490)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010166482999920845
    2. ' (' → logprob: -4.635166645050049
    3. '(z' → logprob: -7.885166645050049
    4. ')' → logprob: -10.76016616821289
    5. 'z' → logprob: -11.88516616821289
    6. '((' → logprob: -13.13516616821289
    7. 'm' → logprob: -13.51016616821289
    8. '
' → logprob: -14.38516616821289
    9. ',' → logprob: -15.01016616821289
    10. ' z' → logprob: -15.51016616821289

Token 714: 'emple' (ID: 55259)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.306301236152649
    2. '```' → logprob: -1.556301236152649
    3. '(' → logprob: -2.0563011169433594
    4. '<<' → logprob: -2.3063011169433594
    5. '=' → logprob: -2.4313011169433594
    6. 'm' → logprob: -3.1813011169433594
    7. 'pected' → logprob: -3.4313011169433594
    8. '=(' → logprob: -4.556301116943359
    9. 'x' → logprob: -4.681301116943359
    10. '``' → logprob: -4.681301116943359

Token 715: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5847679376602173
    2. 'm' → logprob: -1.7097679376602173
    3. '(' → logprob: -1.8347679376602173
    4. '=' → logprob: -1.9597679376602173
    5. '((' → logprob: -2.4597678184509277
    6. ')' → logprob: -2.4597678184509277
    7. ' (' → logprob: -2.5847678184509277
    8. '=(' → logprob: -3.5847678184509277
    9. ' ((' → logprob: -4.584767818450928
    10. ' m' → logprob: -4.709767818450928

Token 716: ' si' (ID: 1784)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008578622946515679
    2. ' (' → logprob: -7.500857830047607
    3. '(z' → logprob: -8.125858306884766
    4. 'm' → logprob: -12.750858306884766
    5. 'z' → logprob: -12.750858306884766
    6. '((' → logprob: -14.375858306884766
    7. '1' → logprob: -15.125858306884766
    8. ')' → logprob: -15.250858306884766
    9. '
' → logprob: -15.375858306884766
    10. '﻿' → logprob: -15.500858306884766

Token 717: ' z' (ID: 579)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.31238600611686707
    2. 'z' → logprob: -1.4373860359191895
    3. '(' → logprob: -4.1873860359191895
    4. ' (' → logprob: -4.6873860359191895
    5. ' z' → logprob: -5.0623860359191895
    6. '(k' → logprob: -11.937385559082031
    7. '```' → logprob: -12.187385559082031
    8. '	z' → logprob: -13.312385559082031
    9. '[z' → logprob: -13.312385559082031
    10. 'k' → logprob: -13.687385559082031

Token 718: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14646191895008087
    2. ' =' → logprob: -3.1464619636535645
    3. '==' → logprob: -3.1464619636535645
    4. '<' → logprob: -4.5214619636535645
    5. '+' → logprob: -4.5214619636535645
    6. ')' → logprob: -5.0214619636535645
    7. ' ==' → logprob: -5.0214619636535645
    8. '=z' → logprob: -5.7714619636535645
    9. 'z' → logprob: -6.0214619636535645
    10. '>' → logprob: -6.5214619636535645

Token 719: '3' (ID: 18)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.29282429814338684
    2. '0' → logprob: -1.5428242683410645
    3. ' z' → logprob: -4.0428242683410645
    4. '3' → logprob: -4.0428242683410645
    5. '4' → logprob: -6.5428242683410645
    6. ' ' → logprob: -6.6678242683410645
    7. '1' → logprob: -7.0428242683410645
    8. '2' → logprob: -7.6678242683410645
    9. 'k' → logprob: -8.292824745178223
    10. '5' → logprob: -8.667824745178223

Token 720: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0778708457946777
    2. ')' → logprob: -1.0778708457946777
    3. ' (' → logprob: -1.4528708457946777
    4. ',' → logprob: -3.0778708457946777
    5. ':' → logprob: -4.452870845794678
    6. '=' → logprob: -5.077870845794678
    7. ' ' → logprob: -5.452870845794678
    8. '(z' → logprob: -5.577870845794678
    9. ' =' → logprob: -6.202870845794678
    10. ')
' → logprob: -6.327870845794678

Token 721: ' m' (ID: 284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004253150429576635
    2. ' (' → logprob: -5.629253387451172
    3. '(z' → logprob: -7.504253387451172
    4. 'm' → logprob: -9.504253387451172
    5. '(m' → logprob: -11.254253387451172
    6. '1' → logprob: -12.004253387451172
    7. 'z' → logprob: -12.879253387451172
    8. '2' → logprob: -13.504253387451172
    9. '(R' → logprob: -14.004253387451172
    10. '((' → logprob: -14.379253387451172

Token 722: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199143826961517
    2. ' =' → logprob: -2.8119914531707764
    3. '=(' → logprob: -10.686991691589355
    4. ')' → logprob: -15.436991691589355
    5. 's' → logprob: -15.436991691589355
    6. 'm' → logprob: -15.936991691589355
    7. '=((' → logprob: -16.06199073791504
    8. '=
' → logprob: -16.18699073791504
    9. ' =(' → logprob: -16.18699073791504
    10. '=

' → logprob: -17.31199073791504

Token 723: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033889797050505877
    2. '7' → logprob: -6.00338888168335
    3. ' (' → logprob: -7.00338888168335
    4. '0' → logprob: -13.003389358520508
    5. ' ' → logprob: -13.628389358520508
    6. '(z' → logprob: -15.253389358520508
    7. '2' → logprob: -16.128389358520508
    8. '(k' → logprob: -16.378389358520508
    9. '8' → logprob: -16.628389358520508
    10. '```' → logprob: -17.003389358520508

Token 724: 'b' (ID: 65)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014237902127206326
    2. ' (' → logprob: -4.264237880706787
    3. '7' → logprob: -9.639238357543945
    4. '=' → logprob: -12.764238357543945
    5. ' ' → logprob: -13.514238357543945
    6. '(z' → logprob: -13.764238357543945
    7. '=(' → logprob: -13.764238357543945
    8. '((' → logprob: -13.889238357543945
    9. '(k' → logprob: -15.014238357543945
    10. '
' → logprob: -15.139238357543945

Token 725: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.17097999155521393
    2. '(' → logprob: -2.1709799766540527
    3. '7' → logprob: -3.1709799766540527
    4. '0' → logprob: -7.795979976654053
    5. '((' → logprob: -8.295980453491211
    6. ' (' → logprob: -8.420980453491211
    7. '011' → logprob: -8.920980453491211
    8. ' ' → logprob: -9.920980453491211
    9. '```' → logprob: -10.170980453491211
    10. '000' → logprob: -11.545980453491211

Token 726: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027264518663287163
    2. ' (' → logprob: -4.527264595031738
    3. ' =' → logprob: -5.652264595031738
    4. '(' → logprob: -5.777264595031738
    5. ')
' → logprob: -5.777264595031738
    6. 'm' → logprob: -6.027264595031738
    7. '=' → logprob: -6.402264595031738
    8. ' )' → logprob: -6.652264595031738
    9. ' ' → logprob: -9.027264595031738
    10. '(m' → logprob: -9.027264595031738

Token 727: '7' (ID: 22)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015606891829520464
    2. ' (' → logprob: -6.501560688018799
    3. '(z' → logprob: -9.751561164855957
    4. '2' → logprob: -17.25156021118164
    5. ' ' → logprob: -17.37656021118164
    6. '(k' → logprob: -17.62656021118164
    7. '(R' → logprob: -17.87656021118164
    8. '(q' → logprob: -18.12656021118164
    9. '7' → logprob: -18.37656021118164
    10. '   ' → logprob: -18.87656021118164

Token 728: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47456425428390503
    2. 'm' → logprob: -1.7245643138885498
    3. ' (' → logprob: -2.22456431388855
    4. '(' → logprob: -2.72456431388855
    5. '(m' → logprob: -4.599564075469971
    6. '
' → logprob: -5.599564075469971
    7. ')
' → logprob: -5.849564075469971
    8. '((' → logprob: -6.474564075469971
    9. '       ' → logprob: -6.599564075469971
    10. '=' → logprob: -6.849564075469971

Token 729: '       ' (ID: 309)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.722539834911004e-05
    2. '       ' → logprob: -9.625097274780273
    3. ' m' → logprob: -10.750097274780273
    4. '```' → logprob: -11.750097274780273
    5. '   ' → logprob: -13.750097274780273
    6. '           ' → logprob: -15.500097274780273
    7. '(m' → logprob: -16.000097274780273
    8. '(' → logprob: -16.375097274780273
    9. '``' → logprob: -16.875097274780273
    10. ' ' → logprob: -16.875097274780273

Token 730: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.625033378601074
    3. '       ' → logprob: -12.250033378601074
    4. ' m' → logprob: -12.750033378601074
    5. '(m' → logprob: -14.250033378601074
    6. '```' → logprob: -14.875033378601074
    7. '((' → logprob: -15.500033378601074
    8. '   ' → logprob: -16.00003433227539
    9. ' (' → logprob: -16.50003433227539
    10. '           ' → logprob: -17.50003433227539

Token 731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. '=(' → logprob: -13.57594108581543
    4. ' =(' → logprob: -14.45094108581543
    5. ' ' → logprob: -17.32594108581543
    6. ')' → logprob: -17.57594108581543
    7. '＝' → logprob: -18.70094108581543
    8. '=((' → logprob: -19.07594108581543
    9. ' ' → logprob: -19.45094108581543
    10. ',' → logprob: -19.57594108581543

Token 732: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02975454181432724
    2. ' (' → logprob: -3.529754638671875
    3. '(z' → logprob: -13.404754638671875
    4. ' ' → logprob: -13.529754638671875
    5. '2' → logprob: -15.404754638671875
    6. '((' → logprob: -15.779754638671875
    7. '   ' → logprob: -15.904754638671875
    8. '(R' → logprob: -15.904754638671875
    9. '1' → logprob: -16.154754638671875
    10. '0' → logprob: -16.404754638671875

Token 733: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008618712425231934
    2. '1' → logprob: -4.7586188316345215
    3. ' (' → logprob: -12.383618354797363
    4. ' ' → logprob: -16.63361930847168
    5. '2' → logprob: -18.50861930847168
    6. ')' → logprob: -18.75861930847168
    7. '[' → logprob: -19.25861930847168
    8. '((' → logprob: -19.50861930847168
    9. '   ' → logprob: -20.13361930847168
    10. '﻿' → logprob: -20.63361930847168

Token 734: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0019297054968774319
    2. ' <<' → logprob: -6.251929759979248
    3. '<<(' → logprob: -14.00192928314209
    4. '<' → logprob: -15.75192928314209
    5. '   ' → logprob: -17.001930236816406
    6. '```' → logprob: -17.376930236816406
    7. '1' → logprob: -17.501930236816406
    8. '<<<' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.376930236816406
    10. ' ' → logprob: -18.501930236816406

Token 735: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.451116051815916e-05
    2. ' z' → logprob: -10.625024795532227
    3. '	z' → logprob: -16.625024795532227
    4. '(z' → logprob: -17.125024795532227
    5. 'k' → logprob: -18.250024795532227
    6. '   ' → logprob: -20.375024795532227
    7. '```' → logprob: -20.750024795532227
    8. ''z' → logprob: -21.125024795532227
    9. '3' → logprob: -21.125024795532227
    10. '[z' → logprob: -21.500024795532227

Token 736: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019185843120794743
    2. ')-' → logprob: -8.875191688537598
    3. ' )' → logprob: -9.875191688537598
    4. 'm' → logprob: -15.125191688537598
    5. ' ' → logprob: -17.000192642211914
    6. '）' → logprob: -17.000192642211914
    7. '#' → logprob: -17.250192642211914
    8. '')' → logprob: -17.375192642211914
    9. 'z' → logprob: -17.875192642211914
    10. 's' → logprob: -17.875192642211914

Token 737: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5205919146537781
    2. ')-' → logprob: -1.0205919742584229
    3. '-' → logprob: -3.145591974258423
    4. ' -' → logprob: -6.270591735839844
    5. ']-' → logprob: -7.895591735839844
    6. ']' → logprob: -9.395591735839844
    7. ' )' → logprob: -10.645591735839844
    8. '()-' → logprob: -11.645591735839844
    9. '}-' → logprob: -11.770591735839844
    10. '-)' → logprob: -12.270591735839844

Token 738: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.875011444091797
    4. '۱' → logprob: -20.375011444091797
    5. '```' → logprob: -20.750011444091797
    6. ')' → logprob: -21.125011444091797
    7. '１' → logprob: -21.937511444091797
    8. '  ' → logprob: -22.187511444091797
    9. '১' → logprob: -22.312511444091797
    10. '(' → logprob: -22.437511444091797

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -18.2500057220459
    4. '۱' → logprob: -19.0625057220459
    5. '   ' → logprob: -19.2500057220459
    6. '<|end|>' → logprob: -19.8750057220459
    7. '১' → logprob: -20.1250057220459
    8. ')' → logprob: -20.8125057220459
    9. '﻿' → logprob: -20.9375057220459
    10. '
' → logprob: -21.0000057220459

Token 740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10036087036132812
    2. '<|end|>' → logprob: -2.475360870361328
    3. ' for' → logprob: -4.975360870361328
    4. 'for' → logprob: -5.725360870361328
    5. '        
' → logprob: -8.725360870361328
    6. '#' → logprob: -8.725360870361328
    7. ')' → logprob: -8.850360870361328
    8. '
' → logprob: -8.975360870361328
    9. '<|end|>' → logprob: -9.100360870361328
    10. '[' → logprob: -9.475360870361328

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12621910870075226
    2. 'for' → logprob: -2.3762190341949463
    3. ' for' → logprob: -3.8762190341949463
    4. '<|end|>' → logprob: -5.501219272613525
    5. '```' → logprob: -8.126218795776367
    6. '	' → logprob: -9.001218795776367
    7. '	for' → logprob: -9.376218795776367
    8. '   ' → logprob: -9.501218795776367
    9. 'if' → logprob: -9.876218795776367
    10. '#' → logprob: -10.001218795776367

Token 742: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06918662041425705
    2. '       ' → logprob: -2.8191866874694824
    3. ' for' → logprob: -4.944186687469482
    4. '```' → logprob: -10.569186210632324
    5. '#' (adapté à ' #') → logprob: -11.194186210632324
    6. '   ' → logprob: -11.819186210632324
    7. '           ' → logprob: -11.944186210632324
    8. '	for' → logprob: -12.444186210632324
    9. 'if' → logprob: -12.694186210632324
    10. '        
' → logprob: -13.569186210632324

Token 743: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.034592388459714e-06
    2. 'f' → logprob: -13.250005722045898
    3. ' for' → logprob: -13.500005722045898
    4. 'mask' → logprob: -14.375005722045898
    5. 'm' → logprob: -14.750005722045898
    6. 'fo' → logprob: -15.500005722045898
    7. '   ' → logprob: -15.500005722045898
    8. 'x' → logprob: -15.625005722045898
    9. '```' → logprob: -15.875005722045898
    10. 'if' → logprob: -16.0000057220459

Token 744: ' tout' (ID: 5501)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08908528089523315
    2. ' j' → logprob: -2.464085340499878
    3. 'x' → logprob: -9.964085578918457
    4. 'l' → logprob: -10.464085578918457
    5. '_j' → logprob: -11.839085578918457
    6. ' x' → logprob: -12.089085578918457
    7. ' l' → logprob: -12.214085578918457
    8. 'y' → logprob: -12.401585578918457
    9. '   ' → logprob: -12.464085578918457
    10. 'k' → logprob: -12.526585578918457

Token 745: ' indice' (ID: 90848)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011836143210530281
    2. ' j' → logprob: -4.761836051940918
    3. 'x' → logprob: -6.136836051940918
    4. 'l' → logprob: -8.011836051940918
    5. 'i' → logprob: -8.511836051940918
    6. 'k' → logprob: -9.511836051940918
    7. 'b' → logprob: -9.886836051940918
    8. 'v' → logprob: -10.011836051940918
    9. 'a' → logprob: -10.011836051940918
    10. 'p' → logprob: -10.136836051940918

Token 746: ' b' (ID: 287)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07199470698833466
    2. ' j' → logprob: -2.6969947814941406
    3. ' in' → logprob: -6.446994781494141
    4. 'in' → logprob: -8.32199478149414
    5. 'x' → logprob: -9.44699478149414
    6. '   ' → logprob: -9.94699478149414
    7. '```' → logprob: -10.82199478149414
    8. 'l' → logprob: -10.94699478149414
    9. ' x' → logprob: -11.57199478149414
    10. 'a' → logprob: -11.69699478149414

Token 747: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38704755902290344
    2. ' in' → logprob: -1.137047529220581
    3. ')' → logprob: -9.51204776763916
    4. ',' → logprob: -10.51204776763916
    5. '```' → logprob: -10.63704776763916
    6. 'b' → logprob: -10.88704776763916
    7. '   ' → logprob: -12.01204776763916
    8. ' ' → logprob: -12.26204776763916
    9. 'n' → logprob: -12.88704776763916
    10. '0' → logprob: -13.13704776763916

Token 748: ' j' (ID: 441)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1612238734960556
    2. ' in' → logprob: -1.9112238883972168
    3. ',' → logprob: -7.786223888397217
    4. 'j' → logprob: -8.661223411560059
    5. 'b' → logprob: -8.661223411560059
    6. '```' → logprob: -8.911223411560059
    7. ',j' → logprob: -10.661223411560059
    8. '   ' → logprob: -10.911223411560059
    9. ')' → logprob: -10.911223411560059
    10. 'for' → logprob: -11.536223411560059

Token 749: ' sur' (ID: 1512)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16029754281044006
    2. 'in' → logprob: -1.9102975130081177
    3. ')' → logprob: -10.410297393798828
    4. ',' → logprob: -11.160297393798828
    5. '   ' → logprob: -11.285297393798828
    6. '       ' → logprob: -12.410297393798828
    7. '```' → logprob: -12.785297393798828
    8. ' ' → logprob: -13.785297393798828
    9. ' ,' → logprob: -13.910297393798828
    10. '[' → logprob: -14.285297393798828

Token 750: ' k' (ID: 372)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10058943182229996
    2. '(' → logprob: -2.9755895137786865
    3. '1' → logprob: -3.4755895137786865
    4. '2' → logprob: -4.975589275360107
    5. 'Q' → logprob: -5.600589275360107
    6. 'j' → logprob: -6.975589275360107
    7. '```' → logprob: -7.475589275360107
    8. '0' → logprob: -7.600589275360107
    9. 'z' → logprob: -8.225589752197266
    10. ' R' → logprob: -8.225589752197266

Token 751: ' bits' (ID: 18189)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15060630440711975
    2. 'R' → logprob: -2.650606393814087
    3. ' in' → logprob: -3.900606393814087
    4. '(' → logprob: -4.025606155395508
    5. '(R' → logprob: -4.150606155395508
    6. ')' → logprob: -4.775606155395508
    7. '):
' → logprob: -6.025606155395508
    8. '+' → logprob: -6.400606155395508
    9. '(k' → logprob: -7.525606155395508
    10. '(Q' → logprob: -7.900606155395508

Token 752: '.
' (ID: 558)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0821419954299927
    2. ':' → logprob: -1.2071419954299927
    3. 'in' → logprob: -1.7071419954299927
    4. ':
' → logprob: -2.207141876220703
    5. 'for' → logprob: -3.207141876220703
    6. ' for' → logprob: -4.332141876220703
    7. '       ' → logprob: -4.832141876220703
    8. '   ' → logprob: -5.832141876220703
    9. ',' → logprob: -6.707141876220703
    10. ')' → logprob: -6.707141876220703

Token 753: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04370953515172005
    2. ' for' → logprob: -3.1687095165252686
    3. '       ' → logprob: -7.418709754943848
    4. '   ' → logprob: -9.168709754943848
    5. '	for' → logprob: -12.793709754943848
    6. '```' → logprob: -13.668709754943848
    7. '           ' → logprob: -14.418709754943848
    8. 'j' → logprob: -14.793709754943848
    9. ' ' → logprob: -15.168709754943848
    10. '[' → logprob: -15.543709754943848

Token 754: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008973917923867702
    2. ' for' → logprob: -4.883974075317383
    3. '       ' → logprob: -6.633974075317383
    4. '   ' → logprob: -10.883974075317383
    5. 'j' → logprob: -11.008974075317383
    6. 'range' → logprob: -12.258974075317383
    7. 'R' → logprob: -12.883974075317383
    8. '```' → logprob: -13.008974075317383
    9. 'in' → logprob: -13.258974075317383
    10. '           ' → logprob: -13.883974075317383

Token 755: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0789790153503418
    2. ' j' → logprob: -2.578979015350342
    3. 'R' → logprob: -9.9539794921875
    4. ' R' → logprob: -11.5789794921875
    5. '	j' → logprob: -11.9539794921875
    6. 'b' → logprob: -12.0789794921875
    7. 'k' → logprob: -12.7039794921875
    8. ' ' → logprob: -12.9539794921875
    9. '```' → logprob: -13.0789794921875
    10. '$j' → logprob: -13.4539794921875

Token 756: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06994343549013138
    2. ' in' → logprob: -2.694943428039551
    3. '   ' → logprob: -12.94494342803955
    4. ')' → logprob: -14.31994342803955
    5. ' ' → logprob: -14.31994342803955
    6. 'R' → logprob: -14.31994342803955
    7. 'import' → logprob: -14.44494342803955
    8. '  ' → logprob: -14.81994342803955
    9. 'In' → logprob: -14.81994342803955
    10. '```' → logprob: -15.06994342803955

Token 757: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01262007188051939
    2. ' R' → logprob: -4.887619972229004
    3. 'range' → logprob: -5.512619972229004
    4. ' range' → logprob: -7.012619972229004
    5. '(' → logprob: -10.512619972229004
    6. 'Q' → logprob: -10.762619972229004
    7. '(R' → logprob: -11.637619972229004
    8. 'Range' → logprob: -13.262619972229004
    9. ' ' → logprob: -14.012619972229004
    10. '(range' → logprob: -14.012619972229004

Token 758: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029812170192599297
    2. '1' → logprob: -3.5298120975494385
    3. '0' → logprob: -9.77981185913086
    4. '((' → logprob: -13.40481185913086
    5. ' (' → logprob: -13.65481185913086
    6. '   ' → logprob: -13.90481185913086
    7. ' ' → logprob: -14.27981185913086
    8. '(k' → logprob: -15.40481185913086
    9. '```' → logprob: -15.52981185913086
    10. '2' → logprob: -15.90481185913086

Token 759: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01604469306766987
    2. '(' → logprob: -4.141044616699219
    3. '0' → logprob: -11.766044616699219
    4. ' ' → logprob: -14.266044616699219
    5. '```' → logprob: -14.266044616699219
    6. '`' → logprob: -14.641044616699219
    7. '[' → logprob: -15.016044616699219
    8. '   ' → logprob: -15.391044616699219
    9. ')' → logprob: -15.891044616699219
    10. ' (' → logprob: -16.14104461669922

Token 760: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3871164917945862
    2. ' <<' → logprob: -1.1371164321899414
    3. '<<(' → logprob: -8.387116432189941
    4. ',' → logprob: -11.012116432189941
    5. '<<<' → logprob: -15.137116432189941
    6. '   ' → logprob: -15.637116432189941
    7. '(' → logprob: -15.887116432189941
    8. '<<"' → logprob: -16.012117385864258
    9. '	' → logprob: -16.387117385864258
    10. ' ' → logprob: -16.512117385864258

Token 761: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.015305552864447e-05
    2. 'i' → logprob: -10.500060081481934
    3. 'j' → logprob: -11.000060081481934
    4. ' k' → logprob: -11.625060081481934
    5. '(k' → logprob: -12.250060081481934
    6. '(' → logprob: -14.375060081481934
    7. 'z' → logprob: -14.750060081481934
    8. '(i' → logprob: -15.250060081481934
    9. '   ' → logprob: -15.250060081481934
    10. 'N' → logprob: -15.375060081481934

Token 762: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28230947256088257
    2. '):' → logprob: -1.4073095321655273
    3. '):
' → logprob: -6.907309532165527
    4. ':' → logprob: -9.407309532165527
    5. '       ' → logprob: -10.282309532165527
    6. '   ' → logprob: -11.157309532165527
    7. '):

' → logprob: -12.032309532165527
    8. '():
' → logprob: -12.157309532165527
    9. '[' → logprob: -12.782309532165527
    10. ')' → logprob: -12.907309532165527

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13340720534324646
    2. 'if' → logprob: -2.7584071159362793
    3. ' if' → logprob: -2.8834071159362793
    4. '       ' → logprob: -6.133407115936279
    5. '<|end|>' → logprob: -6.883407115936279
    6. '#' → logprob: -7.383407115936279
    7. 't' → logprob: -7.633407115936279
    8. '```' → logprob: -7.758407115936279
    9. '               ' → logprob: -9.133407592773438
    10. ' f' → logprob: -9.383407592773438

Token 764: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7427806854248047
    2. 'if' → logprob: -1.4927806854248047
    3. 's' → logprob: -2.2427806854248047
    4. 'f' → logprob: -2.8677806854248047
    5. '           ' → logprob: -3.3677806854248047
    6. 'x' → logprob: -3.9927806854248047
    7. '               ' → logprob: -4.117780685424805
    8. 'b' → logprob: -4.242780685424805
    9. ' if' → logprob: -4.367780685424805
    10. 'u' → logprob: -4.367780685424805

Token 765: ' On' (ID: 2160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.391597867012024
    2. 'if' → logprob: -1.516597867012024
    3. 'b' → logprob: -2.0165977478027344
    4. 'f' → logprob: -2.2665977478027344
    5. 'x' → logprob: -2.2665977478027344
    6. 's' → logprob: -2.3915977478027344
    7. 'u' → logprob: -3.1415977478027344
    8. 'p' → logprob: -3.6415977478027344
    9. 'v' → logprob: -5.266597747802734
    10. 'a' → logprob: -5.391597747802734

Token 766: ' ajoute' (ID: 91611)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0790818929672241
    2. 'if' → logprob: -1.2040818929672241
    3. ' if' → logprob: -1.8290818929672241
    4. ' t' → logprob: -3.3290820121765137
    5. 's' → logprob: -3.4540820121765137
    6. '           ' → logprob: -3.7040820121765137
    7. 'x' → logprob: -3.7040820121765137
    8. 'b' → logprob: -4.329082012176514
    9. ' s' → logprob: -4.579082012176514
    10. '#' → logprob: -4.704082012176514

Token 767: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.13475681841373444
    2. ' f' → logprob: -2.3847568035125732
    3. 'd' → logprob: -3.6347568035125732
    4. ' d' → logprob: -5.259757041931152
    5. '           ' → logprob: -6.509757041931152
    6. '(f' → logprob: -7.759757041931152
    7. ' (' → logprob: -9.509757041931152
    8. '               ' → logprob: -9.759757041931152
    9. '(d' → logprob: -9.884757041931152
    10. '0' → logprob: -10.009757041931152

Token 768: ' valeur' (ID: 41664)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0875687226653099
    2. 'd' → logprob: -2.587568759918213
    3. ' f' → logprob: -5.587568759918213
    4. '(f' → logprob: -6.587568759918213
    5. '(' → logprob: -6.962568759918213
    6. ' d' → logprob: -7.587568759918213
    7. '(d' → logprob: -7.587568759918213
    8. '((' → logprob: -8.087568283081055
    9. ' (' → logprob: -8.462568283081055
    10. 'int' → logprob: -8.587568283081055

Token 769: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12551191449165344
    2. 'd' → logprob: -2.625511884689331
    3. ' f' → logprob: -3.500511884689331
    4. ' d' → logprob: -5.00051212310791
    5. '           ' → logprob: -5.37551212310791
    6. '(f' → logprob: -6.00051212310791
    7. '=' → logprob: -8.37551212310791
    8. ' =' → logprob: -8.50051212310791
    9. '               ' → logprob: -8.62551212310791
    10. '[f' → logprob: -8.75051212310791

Token 770: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010484571568667889
    2. 'i' → logprob: -4.88548469543457
    3. '[k' → logprob: -6.38548469543457
    4. 'f' → logprob: -8.26048469543457
    5. ' [' → logprob: -8.38548469543457
    6. '[' → logprob: -8.63548469543457
    7. 'k' → logprob: -9.01048469543457
    8. '[j' → logprob: -9.26048469543457
    9. ' i' → logprob: -9.38548469543457
    10. '[f' → logprob: -9.76048469543457

Token 771: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007057761307805777
    2. '-' → logprob: -5.5070576667785645
    3. '[j' → logprob: -6.5070576667785645
    4. ' -' → logprob: -8.007058143615723
    5. '-j' → logprob: -8.132058143615723
    6. ']' → logprob: -8.382058143615723
    7. '[' → logprob: -9.007058143615723
    8. ' ][' → logprob: -9.382058143615723
    9. '-m' → logprob: -9.507058143615723
    10. '[i' → logprob: -9.632058143615723

Token 772: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01208868995308876
    2. '(j' → logprob: -4.637088775634766
    3. '[j' → logprob: -7.012088775634766
    4. '((' → logprob: -7.637088775634766
    5. ' j' → logprob: -8.387088775634766
    6. '(' → logprob: -8.887088775634766
    7. ' (' → logprob: -9.012088775634766
    8. ']' → logprob: -9.387088775634766
    9. '][' → logprob: -9.512088775634766
    10. 'd' → logprob: -9.762088775634766

Token 773: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.034761879593133926
    2. '[j' → logprob: -4.284761905670166
    3. '-' → logprob: -4.534761905670166
    4. ' -' → logprob: -6.034761905670166
    5. ']' → logprob: -6.284761905670166
    6. '-j' → logprob: -6.284761905670166
    7. '-z' → logprob: -7.534761905670166
    8. '[z' → logprob: -7.909761905670166
    9. '-m' → logprob: -8.284761428833008
    10. '[m' → logprob: -8.284761428833008

Token 774: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.316573977470398
    2. '+=' → logprob: -1.441573977470398
    3. 'd' → logprob: -1.691573977470398
    4. '           ' → logprob: -2.1915740966796875
    5. '[i' → logprob: -2.5665740966796875
    6. ']+=' → logprob: -3.1915740966796875
    7. ']' → logprob: -3.4415740966796875
    8. '][' → logprob: -4.3165740966796875
    9. 'f' → logprob: -4.6915740966796875
    10. '               ' → logprob: -5.3165740966796875

Token 775: ' l' (ID: 305)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05555877462029457
    2. 'd' → logprob: -2.930558681488037
    3. ' f' → logprob: -7.555558681488037
    4. ' d' → logprob: -10.055559158325195
    5. '   ' → logprob: -10.180559158325195
    6. '           ' → logprob: -10.180559158325195
    7. '       ' → logprob: -11.180559158325195
    8. '               ' → logprob: -12.680559158325195
    9. '                   ' → logprob: -13.305559158325195
    10. '     ' → logprob: -13.305559158325195

Token 776: ''entrée' (ID: 115820)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0566827692091465
    2. 'd' → logprob: -2.931682825088501
    3. ' f' → logprob: -6.931682586669922
    4. ' d' → logprob: -7.931682586669922
    5. ']' → logprob: -8.556682586669922
    6. '[i' → logprob: -9.806682586669922
    7. '][' → logprob: -10.181682586669922
    8. 'i' → logprob: -10.431682586669922
    9. '`' → logprob: -10.681682586669922
    10. '+' → logprob: -11.056682586669922

Token 777: ' correspond' (ID: 11095)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005475059617310762
    2. '[i' → logprob: -6.130475044250488
    3. ' f' → logprob: -6.380475044250488
    4. 'i' → logprob: -6.630475044250488
    5. '           ' → logprob: -8.880475044250488
    6. '[f' → logprob: -10.130475044250488
    7. '   ' → logprob: -10.630475044250488
    8. '```' → logprob: -10.880475044250488
    9. ' i' → logprob: -11.505475044250488
    10. 'd' → logprob: -11.630475044250488

Token 778: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.10668972879648209
    2. '           ' → logprob: -2.356689691543579
    3. 'ente' → logprob: -5.856689929962158
    4. '               ' → logprob: -6.856689929962158
    5. 'f' → logprob: -7.106689929962158
    6. 'ent' → logprob: -7.356689929962158
    7. '   ' → logprob: -8.731689453125
    8. '[' → logprob: -9.356689453125
    9. 'ant' → logprob: -9.356689453125
    10. 'a' → logprob: -9.481689453125

Token 779: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4627058207988739
    2. 'd' → logprob: -1.9627058506011963
    3. 'f' → logprob: -1.9627058506011963
    4. '[i' → logprob: -2.9627058506011963
    5. ' d' → logprob: -4.462705612182617
    6. '               ' → logprob: -4.962705612182617
    7. '```' → logprob: -5.462705612182617
    8. ' f' → logprob: -5.587705612182617
    9. '       ' → logprob: -5.712705612182617
    10. '   ' → logprob: -5.837705612182617

Token 780: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6373183131217957
    2. 'd' → logprob: -0.7623183131217957
    3. ' f' → logprob: -5.887318134307861
    4. ' d' → logprob: -6.262318134307861
    5. '   ' → logprob: -11.13731861114502
    6. ' ' → logprob: -12.63731861114502
    7. '```' → logprob: -13.38731861114502
    8. '`' → logprob: -13.88731861114502
    9. '           ' → logprob: -14.01231861114502
    10. '  ' → logprob: -14.13731861114502

Token 781: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007829011417925358
    2. 'i' → logprob: -4.882829189300537
    3. 'd' → logprob: -9.257828712463379
    4. ' [' → logprob: -10.257828712463379
    5. '           ' → logprob: -10.757828712463379
    6. ' i' → logprob: -11.132828712463379
    7. '   ' → logprob: -11.257828712463379
    8. '[' → logprob: -11.382828712463379
    9. '[k' → logprob: -12.007828712463379
    10. '[d' → logprob: -12.132828712463379

Token 782: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.909333023941144e-05
    2. ']' → logprob: -10.500068664550781
    3. '[j' → logprob: -11.250068664550781
    4. '[' → logprob: -12.250068664550781
    5. '   ' → logprob: -12.625068664550781
    6. ' ][' → logprob: -12.625068664550781
    7. '[(' → logprob: -12.875068664550781
    8. ']][' → logprob: -13.000068664550781
    9. '       ' → logprob: -13.250068664550781
    10. '           ' → logprob: -13.375068664550781

Token 783: ' après' (ID: 16460)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3485535681247711
    2. '[d' → logprob: -1.5985535383224487
    3. '           ' → logprob: -2.7235536575317383
    4. '[j' → logprob: -3.8485536575317383
    5. 'd' → logprob: -6.098553657531738
    6. '[' → logprob: -6.598553657531738
    7. '][' → logprob: -7.723553657531738
    8. ' [' → logprob: -8.598553657531738
    9. '       ' → logprob: -8.598553657531738
    10. '               ' → logprob: -8.723553657531738

Token 784: ' déc' (ID: 8498)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9714452028274536
    2. 'j' → logprob: -1.4714452028274536
    3. '[(' → logprob: -2.596445083618164
    4. '(j' → logprob: -2.596445083618164
    5. '((' → logprob: -2.971445083618164
    6. 'd' → logprob: -2.971445083618164
    7. ' (' → logprob: -3.971445083618164
    8. '[' → logprob: -4.096445083618164
    9. ' j' → logprob: -4.596445083618164
    10. 'm' → logprob: -4.596445083618164

Token 785: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.010668708942830563
    2. 'ale' → logprob: -4.885668754577637
    3. 'aler' → logprob: -6.510668754577637
    4. 'alc' → logprob: -7.135668754577637
    5. '>>' → logprob: -9.010668754577637
    6. 'alez' → logprob: -9.010668754577637
    7. 'allage' → logprob: -9.760668754577637
    8. 'a' → logprob: -9.760668754577637
    9. '[j' → logprob: -10.010668754577637
    10. 'à' → logprob: -10.135668754577637

Token 786: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05564920976758003
    2. 'ment' → logprob: -3.3056492805480957
    3. 'ments' → logprob: -5.930649280548096
    4. '   ' → logprob: -6.055649280548096
    5. '[i' → logprob: -6.055649280548096
    6. '[j' → logprob: -6.055649280548096
    7. '[' → logprob: -6.680649280548096
    8. '>>' → logprob: -6.680649280548096
    9. ' >>' → logprob: -6.680649280548096
    10. ' d' → logprob: -7.555649280548096

Token 787: ' droite' (ID: 61428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9707745909690857
    2. '[j' → logprob: -1.3457746505737305
    3. ' j' → logprob: -1.9707746505737305
    4. 'z' → logprob: -2.2207746505737305
    5. ' (' → logprob: -3.7207746505737305
    6. 'b' → logprob: -4.3457746505737305
    7. ' z' → logprob: -4.5957746505737305
    8. 'k' → logprob: -4.8457746505737305
    9. '[z' → logprob: -4.9707746505737305
    10. '(j' → logprob: -5.0957746505737305

Token 788: ' de' (ID: 334)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.275712490081787
    2. ' (' → logprob: -1.400712490081787
    3. '           ' → logprob: -1.900712490081787
    4. '[' → logprob: -2.775712490081787
    5. ' j' → logprob: -2.900712490081787
    6. '>>' → logprob: -3.150712490081787
    7. ' >>' → logprob: -3.650712490081787
    8. '(j' → logprob: -3.650712490081787
    9. ' de' → logprob: -3.775712490081787
    10. ' [' → logprob: -3.900712490081787

Token 789: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.005356620531529188
    2. ' z' → logprob: -5.630356788635254
    3. '(z' → logprob: -6.505356788635254
    4. 'm' → logprob: -8.755356788635254
    5. 'j' → logprob: -10.380356788635254
    6. '[z' → logprob: -11.005356788635254
    7. ' (' → logprob: -11.130356788635254
    8. '```' → logprob: -11.755356788635254
    9. 'k' → logprob: -11.880356788635254
    10. 'b' → logprob: -12.255356788635254

Token 790: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0847398117184639
    2. 'j' → logprob: -3.834739923477173
    3. ']' → logprob: -4.334739685058594
    4. 'tokens' → logprob: -4.834739685058594
    5. '[j' → logprob: -5.084739685058594
    6. ' j' → logprob: -5.459739685058594
    7. '(j' → logprob: -6.209739685058594
    8. ' ' → logprob: -6.209739685058594
    9. ' )' → logprob: -6.209739685058594
    10. ' ' → logprob: -6.209739685058594

Token 791: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032292742282152176
    2. 'd' → logprob: -4.40729284286499
    3. ' d' → logprob: -5.03229284286499
    4. '[j' → logprob: -5.65729284286499
    5. '][' → logprob: -6.53229284286499
    6. '[i' → logprob: -6.65729284286499
    7. '               ' → logprob: -6.78229284286499
    8. ']' → logprob: -6.78229284286499
    9. '[d' → logprob: -7.28229284286499
    10. '[' → logprob: -7.28229284286499

Token 792: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5138722062110901
    2. ' d' → logprob: -1.1388721466064453
    3. '           ' → logprob: -2.5138721466064453
    4. '```' → logprob: -8.388872146606445
    5. '   ' → logprob: -9.263872146606445
    6. '               ' → logprob: -9.388872146606445
    7. '       ' → logprob: -9.763872146606445
    8. '                   ' → logprob: -10.388872146606445
    9. '[d' → logprob: -10.388872146606445
    10. '          ' → logprob: -10.513872146606445

Token 793: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.47419196367263794
    2. ' d' → logprob: -0.9741919636726379
    3. '           ' → logprob: -9.099191665649414
    4. '               ' → logprob: -13.849191665649414
    5. '	d' → logprob: -13.974191665649414
    6. '   ' → logprob: -14.599191665649414
    7. '_d' → logprob: -15.474191665649414
    8. ' ' → logprob: -15.474191665649414
    9. ' ' → logprob: -16.349191665649414
    10. '                   ' → logprob: -16.349191665649414

Token 794: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -14.125001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'i' → logprob: -15.875001907348633
    5. '```' → logprob: -16.000001907348633
    6. '[j' → logprob: -16.750001907348633
    7. '[k' → logprob: -16.750001907348633
    8. '[I' → logprob: -17.000001907348633
    9. '\[' → logprob: -18.250001907348633
    10. '[d' → logprob: -18.375001907348633

Token 795: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038558345288038254
    2. '[j' → logprob: -3.2885582447052
    3. '[' → logprob: -8.038558006286621
    4. ']' → logprob: -9.413558006286621
    5. ' ][' → logprob: -10.288558006286621
    6. '   ' → logprob: -11.163558006286621
    7. '[(' → logprob: -11.413558006286621
    8. '[d' → logprob: -11.913558006286621
    9. '[i' → logprob: -12.163558006286621
    10. '[k' → logprob: -12.288558006286621

Token 796: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001424045069143176
    2. '(j' → logprob: -6.7514238357543945
    3. ' j' → logprob: -9.001423835754395
    4. '[j' → logprob: -9.126423835754395
    5. '   ' → logprob: -11.626423835754395
    6. ' (' → logprob: -12.751423835754395
    7. '	j' → logprob: -13.126423835754395
    8. ' ' → logprob: -13.376423835754395
    9. '((' → logprob: -13.626423835754395
    10. '```' → logprob: -13.626423835754395

Token 797: ' >>' (ID: 6832)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33185651898384094
    2. '>>' → logprob: -1.3318564891815186
    3. '[' → logprob: -4.706856727600098
    4. ']+=' → logprob: -5.831856727600098
    5. ' >>' → logprob: -5.956856727600098
    6. '=' → logprob: -6.581856727600098
    7. '   ' → logprob: -7.456856727600098
    8. '>' → logprob: -7.956856727600098
    9. ' >>=' → logprob: -7.956856727600098
    10. ' ]' → logprob: -8.706856727600098

Token 798: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -5.3120038501219824e-05
    2. ' z' → logprob: -10.000053405761719
    3. '(z' → logprob: -11.875053405761719
    4. '	z' → logprob: -15.625053405761719
    5. '[z' → logprob: -15.875053405761719
    6. 'm' → logprob: -16.12505340576172
    7. '```' → logprob: -16.25005340576172
    8. '(' → logprob: -16.50005340576172
    9. ''z' → logprob: -18.00005340576172
    10. 'k' → logprob: -18.00005340576172

Token 799: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004687156993895769
    2. ']+=' → logprob: -5.379687309265137
    3. ' ]' → logprob: -10.379687309265137
    4. ']+' → logprob: -10.379687309265137
    5. '+=' → logprob: -14.004687309265137
    6. '   ' → logprob: -14.129687309265137
    7. '+]' → logprob: -14.379687309265137
    8. '       ' → logprob: -14.629687309265137
    9. '           ' → logprob: -15.004687309265137
    10. '[' → logprob: -15.254687309265137

Token 800: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0045346771366894245
    2. ' +=' → logprob: -5.504534721374512
    3. ']+=' → logprob: -7.754534721374512
    4. '+' → logprob: -11.129534721374512
    5. '   ' → logprob: -12.379534721374512
    6. '=' → logprob: -12.879534721374512
    7. '[' → logprob: -13.129534721374512
    8. ']' → logprob: -13.129534721374512
    9. '    ' → logprob: -14.254534721374512
    10. '	' → logprob: -14.754534721374512

Token 801: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00038837024476379156
    2. ' d' → logprob: -7.875388145446777
    3. '           ' → logprob: -12.375388145446777
    4. '   ' → logprob: -12.625388145446777
    5. '       ' → logprob: -15.625388145446777
    6. '  ' → logprob: -15.750388145446777
    7. '               ' → logprob: -16.250389099121094
    8. '	d' → logprob: -16.375389099121094
    9. ' ' → logprob: -16.625389099121094
    10. '          ' → logprob: -16.750389099121094

Token 802: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0007113590254448354
    2. 'k' → logprob: -7.250711441040039
    3. '```' → logprob: -14.125711441040039
    4. '[' → logprob: -15.625711441040039
    5. '{k' → logprob: -16.50071144104004
    6. '[d' → logprob: -17.12571144104004
    7. '[j' → logprob: -17.12571144104004
    8. '[
' → logprob: -17.37571144104004
    9. '=k' → logprob: -17.37571144104004
    10. '	k' → logprob: -17.37571144104004

Token 803: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.016093024984002113
    2. '][' → logprob: -4.1410932540893555
    3. '[' → logprob: -10.766093254089355
    4. 'j' → logprob: -10.766093254089355
    5. ')[' → logprob: -12.891093254089355
    6. '```' → logprob: -13.141093254089355
    7. '}[' → logprob: -13.266093254089355
    8. ']' → logprob: -13.641093254089355
    9. ' [' → logprob: -13.641093254089355
    10. '[i' → logprob: -13.766093254089355

Token 804: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.0590548703912646e-05
    2. ' j' → logprob: -10.500030517578125
    3. '[j' → logprob: -13.500030517578125
    4. '(j' → logprob: -13.500030517578125
    5. '   ' → logprob: -16.000030517578125
    6. '	j' → logprob: -17.125030517578125
    7. ' ' → logprob: -17.625030517578125
    8. '(' → logprob: -17.875030517578125
    9. '```' → logprob: -18.000030517578125
    10. ' (' → logprob: -18.125030517578125

Token 805: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007902132347226143
    2. '])' → logprob: -7.250790119171143
    3. ' ]' → logprob: -9.6257905960083
    4. ')' → logprob: -11.8757905960083
    5. ']
' → logprob: -12.3757905960083
    6. ')]' → logprob: -14.2507905960083
    7. ']]' → logprob: -15.1257905960083
    8. '   ' → logprob: -15.2507905960083
    9. ']

' → logprob: -15.6257905960083
    10. ' ])' → logprob: -15.6257905960083

Token 806: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20210051536560059
    2. 'if' → logprob: -1.7021005153656006
    3. '           ' → logprob: -8.45210075378418
    4. 'd' → logprob: -9.20210075378418
    5. 's' → logprob: -9.82710075378418
    6. ' if' → logprob: -10.07710075378418
    7. 'for' → logprob: -10.20210075378418
    8. 'm' → logprob: -10.32710075378418
    9. 'val' → logprob: -10.57710075378418
    10. ' f' → logprob: -10.82710075378418

Token 809: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1448572427034378
    2. '=' → logprob: -2.019857168197632
    3. '[i' → logprob: -6.394857406616211
    4. '=i' → logprob: -8.269857406616211
    5. ' ' → logprob: -9.894857406616211
    6. 'f' → logprob: -10.519857406616211
    7. '   ' → logprob: -11.019857406616211
    8. ',' → logprob: -11.144857406616211
    9. ' +=' → logprob: -11.519857406616211
    10. 's' → logprob: -11.519857406616211

Token 810: ' le' (ID: 505)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12180076539516449
    2. ' f' → logprob: -2.246800661087036
    3. '(f' → logprob: -4.996800899505615
    4. ' (' → logprob: -6.996800899505615
    5. '(' → logprob: -8.121800422668457
    6. '0' → logprob: -8.371800422668457
    7. '           ' → logprob: -9.246800422668457
    8. 'd' → logprob: -9.496800422668457
    9. 'r' → logprob: -9.496800422668457
    10. '((' → logprob: -10.121800422668457

Token 811: ' nombre' (ID: 9733)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05172828212380409
    2. '(f' → logprob: -4.051728248596191
    3. '(j' → logprob: -4.801728248596191
    4. '(' → logprob: -4.926728248596191
    5. ' f' → logprob: -5.176728248596191
    6. '(r' → logprob: -6.176728248596191
    7. 'r' → logprob: -6.301728248596191
    8. '((' → logprob: -6.676728248596191
    9. '(t' → logprob: -6.801728248596191
    10. ' (' → logprob: -6.926728248596191

Token 812: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1948016732931137
    2. ' =' → logprob: -2.4448015689849854
    3. 'f' → logprob: -3.3198015689849854
    4. '           ' → logprob: -3.4448015689849854
    5. 'r' → logprob: -4.5698018074035645
    6. '=f' → logprob: -5.9448018074035645
    7. 't' → logprob: -6.0698018074035645
    8. 'd' → logprob: -6.0698018074035645
    9. 'de' → logprob: -6.5698018074035645
    10. ' de' → logprob: -6.6948018074035645

Token 813: ' bits' (ID: 18189)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01680421642959118
    2. ' f' → logprob: -4.641804218292236
    3. '(f' → logprob: -5.641804218292236
    4. 'r' → logprob: -7.016804218292236
    5. '(' → logprob: -7.266804218292236
    6. '((' → logprob: -7.516804218292236
    7. ' (' → logprob: -8.391803741455078
    8. '(t' → logprob: -8.516803741455078
    9. ' bits' → logprob: -8.516803741455078
    10. 't' → logprob: -8.766803741455078

Token 814: ' cons' (ID: 1473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9453903436660767
    2. 'f' → logprob: -1.3203903436660767
    3. ' =' → logprob: -1.8203903436660767
    4. 'r' → logprob: -2.445390224456787
    5. 't' → logprob: -3.695390224456787
    6. 'con' → logprob: -3.945390224456787
    7. '=f' → logprob: -4.070390224456787
    8. ' f' → logprob: -4.695390224456787
    9. 'cons' → logprob: -5.195390224456787
    10. '(f' → logprob: -5.320390224456787

Token 815: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0020503359846770763
    2. 'ecut' → logprob: -6.752050399780273
    3. 'cut' → logprob: -7.627050399780273
    4. 'éc' → logprob: -8.877050399780273
    5. 'secut' → logprob: -9.002050399780273
    6. '```' → logprob: -9.377050399780273
    7. 't' → logprob: -11.252050399780273
    8. '   ' → logprob: -12.377050399780273
    9. 'secutive' → logprob: -12.377050399780273
    10. 'cons' → logprob: -12.502050399780273

Token 816: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -1.370831847190857
    2. '   ' → logprob: -1.745831847190857
    3. 'ég' → logprob: -2.2458319664001465
    4. 'if' → logprob: -2.4958319664001465
    5. 'ents' → logprob: -2.7458319664001465
    6. '```' → logprob: -2.9958319664001465
    7. 'uits' → logprob: -3.6208319664001465
    8. 'cuits' → logprob: -3.7458319664001465
    9. '       ' → logprob: -3.7458319664001465
    10. 'atifs' → logprob: -3.8708319664001465

Token 817: ' au' (ID: 2791)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9823597073554993
    2. ' =' → logprob: -1.6073596477508545
    3. '=' → logprob: -1.8573596477508545
    4. 't' → logprob: -2.6073596477508545
    5. ' ég' → logprob: -2.6073596477508545
    6. ' f' → logprob: -2.8573596477508545
    7. 'r' → logprob: -4.607359886169434
    8. '==' → logprob: -4.732359886169434
    9. 'cons' → logprob: -4.857359886169434
    10. ' t' → logprob: -4.857359886169434

Token 818: ' début' (ID: 29589)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.226206436753273
    2. 'f' → logprob: -2.7262065410614014
    3. 't' → logprob: -3.7262065410614014
    4. ' (' → logprob: -3.7262065410614014
    5. 'k' → logprob: -4.476206302642822
    6. '(t' → logprob: -4.726206302642822
    7. '(' → logprob: -4.726206302642822
    8. '(k' → logprob: -4.851206302642822
    9. '((' → logprob: -4.976206302642822
    10. 'r' → logprob: -5.226206302642822

Token 819: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.697934091091156
    2. '=' → logprob: -0.947934091091156
    3. 'f' → logprob: -2.947934150695801
    4. 't' → logprob: -3.322934150695801
    5. 'r' → logprob: -4.947934150695801
    6. '=f' → logprob: -5.197934150695801
    7. '(f' → logprob: -5.697934150695801
    8. ' f' → logprob: -5.822934150695801
    9. '(i' → logprob: -6.947934150695801
    10. '(t' → logprob: -6.947934150695801

Token 820: 'sur' (ID: 26617)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5304685235023499
    2. '(i' → logprob: -2.280468463897705
    3. 'k' → logprob: -2.405468463897705
    4. '(j' → logprob: -2.405468463897705
    5. 'j' → logprob: -3.280468463897705
    6. '(k' → logprob: -3.655468463897705
    7. 't' → logprob: -3.905468463897705
    8. ' (' → logprob: -4.530468463897705
    9. '           ' → logprob: -4.905468463897705
    10. 'i' → logprob: -5.155468463897705

Token 821: ' z' (ID: 579)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.39956915378570557
    2. 'i' → logprob: -1.5245691537857056
    3. 'j' → logprob: -3.649569034576416
    4. 'z' → logprob: -3.774569034576416
    5. 'l' → logprob: -4.274569034576416
    6. 'f' → logprob: -4.649569034576416
    7. 't' → logprob: -4.899569034576416
    8. 'r' → logprob: -4.899569034576416
    9. '(i' → logprob: -4.899569034576416
    10. ' (' → logprob: -5.274569034576416

Token 822: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2735607624053955
    2. 'bits' → logprob: -2.0235607624053955
    3. ' bits' → logprob: -2.8985607624053955
    4. '+' → logprob: -4.273560523986816
    5. '-' → logprob: -4.273560523986816
    6. '```' → logprob: -5.273560523986816
    7. '-bit' → logprob: -5.398560523986816
    8. ')-' → logprob: -6.523560523986816
    9. 'positions' → logprob: -6.898560523986816
    10. ')+' → logprob: -7.023560523986816

Token 823: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051712773740291595
    2. 't' → logprob: -4.801712989807129
    3. '           ' → logprob: -4.926712989807129
    4. ')+' → logprob: -5.676712989807129
    5. '```' → logprob: -5.676712989807129
    6. '+' → logprob: -5.801712989807129
    7. ']' → logprob: -5.926712989807129
    8. ')==' → logprob: -5.926712989807129
    9. ',' → logprob: -6.051712989807129
    10. ' à' → logprob: -6.426712989807129

Token 824: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15957270562648773
    2. ' =' → logprob: -2.1595726013183594
    3. '=' → logprob: -4.034572601318359
    4. 't' → logprob: -5.159572601318359
    5. 'r' → logprob: -5.409572601318359
    6. '       ' → logprob: -6.284572601318359
    7. ' t' → logprob: -7.534572601318359
    8. ' at' → logprob: -7.784572601318359
    9. ',' → logprob: -8.15957260131836
    10. ' à' → logprob: -8.90957260131836

Token 825: 'ant' (ID: 493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29237306118011475
    2. ' =' → logprob: -1.7923730611801147
    3. 'ue' → logprob: -2.9173731803894043
    4. 'ues' → logprob: -3.6673731803894043
    5. 'u' → logprob: -5.792373180389404
    6. 't' → logprob: -7.292373180389404
    7. 'eur' → logprob: -7.542373180389404
    8. 'or' → logprob: -8.167372703552246
    9. '==' → logprob: -8.167372703552246
    10. '=(' → logprob: -8.292372703552246

Token 826: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02818620763719082
    2. ' t' → logprob: -3.653186321258545
    3. 'f' → logprob: -7.153186321258545
    4. '(t' → logprob: -7.278186321258545
    5. ' f' → logprob: -9.028185844421387
    6. ' ' → logprob: -9.528185844421387
    7. ' (' → logprob: -9.903185844421387
    8. 'm' → logprob: -9.903185844421387
    9. '`t' → logprob: -10.778185844421387
    10. '=' → logprob: -11.028185844421387

Token 827: ' même' (ID: 9679)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0016465028747916222
    2. 'm' → logprob: -7.001646518707275
    3. '1' → logprob: -8.001646041870117
    4. '0' → logprob: -8.876646041870117
    5. '(t' → logprob: -9.626646041870117
    6. 'bit' → logprob: -9.626646041870117
    7. '(' → logprob: -10.251646041870117
    8. 'f' → logprob: -10.626646041870117
    9. ' t' → logprob: -11.251646041870117
    10. 'val' → logprob: -11.501646041870117

Token 828: ' bit' (ID: 3546)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3030807375907898
    2. 'bit' → logprob: -1.8030807971954346
    3. '(t' → logprob: -3.3030807971954346
    4. 'f' → logprob: -4.4280805587768555
    5. 'd' → logprob: -5.0530805587768555
    6. '1' → logprob: -5.3030805587768555
    7. '(' → logprob: -5.4280805587768555
    8. ' bit' → logprob: -5.4280805587768555
    9. '((' → logprob: -5.5530805587768555
    10. 'r' → logprob: -5.9280805587768555

Token 829: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5512562394142151
    2. '           ' → logprob: -1.1762561798095703
    3. ' =' → logprob: -3.0512561798095703
    4. '=' → logprob: -3.1762561798095703
    5. 'r' → logprob: -4.67625617980957
    6. ' t' → logprob: -5.05125617980957
    7. '       ' → logprob: -5.42625617980957
    8. '```' → logprob: -6.55125617980957
    9. '=t' → logprob: -7.05125617980957
    10. ' at' → logprob: -7.05125617980957

Token 830: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1321352869272232
    2. ' (' → logprob: -2.7571353912353516
    3. 't' → logprob: -3.7571353912353516
    4. '(f' → logprob: -4.507135391235352
    5. ' f' → logprob: -4.757135391235352
    6. ')' → logprob: -5.007135391235352
    7. '(j' → logprob: -5.132135391235352
    8. '(t' → logprob: -6.382135391235352
    9. '((' → logprob: -7.132135391235352
    10. 'd' → logprob: -7.882135391235352

Token 831: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09145322442054749
    2. ' or' → logprob: -3.0914533138275146
    3. '           ' → logprob: -3.9664533138275146
    4. 'or' → logprob: -5.0914530754089355
    5. '=' → logprob: -5.3414530754089355
    6. ' if' → logprob: -5.7164530754089355
    7. '       ' → logprob: -6.3414530754089355
    8. '|' → logprob: -6.9664530754089355
    9. ' =' → logprob: -7.0914530754089355
    10. 't' → logprob: -7.3414530754089355

Token 832: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007195893209427595
    2. 't' → logprob: -5.007195949554443
    3. ' ' → logprob: -8.007195472717285
    4. ' t' → logprob: -10.507195472717285
    5. 'd' → logprob: -10.632195472717285
    6. '   ' → logprob: -11.132195472717285
    7. 'r' → logprob: -11.257195472717285
    8. 'f' → logprob: -11.382195472717285
    9. 'm' → logprob: -11.507195472717285
    10. '           ' → logprob: -11.632195472717285

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '```' → logprob: -15.000008583068848
    4. 'r' → logprob: -15.250008583068848
    5. 'j' → logprob: -15.250008583068848
    6. 'd' → logprob: -15.375008583068848
    7. '   ' → logprob: -15.375008583068848
    8. 'm' → logprob: -15.750008583068848
    9. 't' → logprob: -15.875008583068848
    10. '
' → logprob: -16.25000762939453

Token 834: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.065220907330513
    2. ')
' → logprob: -3.815220832824707
    3. '           ' → logprob: -3.815220832824707
    4. 't' → logprob: -4.815220832824707
    5. ')t' → logprob: -5.065220832824707
    6. '       ' → logprob: -5.940220832824707
    7. '),' → logprob: -7.940220832824707
    8. ')=' → logprob: -8.065220832824707
    9. '):
' → logprob: -8.315220832824707
    10. ' t' → logprob: -8.565220832824707

Token 835: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47498297691345215
    2. '           ' → logprob: -0.9749829769134521
    3. '=' → logprob: -7.849983215332031
    4. ' =' → logprob: -8.349983215332031
    5. ' r' → logprob: -8.724983215332031
    6. 't' → logprob: -9.849983215332031
    7. '       ' → logprob: -10.349983215332031
    8. '```' → logprob: -11.099983215332031
    9. '   ' → logprob: -11.724983215332031
    10. '          ' → logprob: -12.974983215332031

Token 836: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -5.240481914370321e-05
    2. '           ' → logprob: -9.875052452087402
    3. ' r' → logprob: -14.000052452087402
    4. '```' → logprob: -17.250051498413086
    5. '       ' → logprob: -17.875051498413086
    6. '   ' → logprob: -18.750051498413086
    7. 'f' → logprob: -20.375051498413086
    8. '          ' → logprob: -20.500051498413086
    9. 't' → logprob: -20.750051498413086
    10. '               ' → logprob: -20.875051498413086

Token 837: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713080883026
    2. '=' → logprob: -1.136871337890625
    3. '=f' → logprob: -16.136871337890625
    4. ' ' → logprob: -16.886871337890625
    5. ',' → logprob: -17.261871337890625
    6. '=(' → logprob: -17.511871337890625
    7. ')' → logprob: -17.636871337890625
    8. '＝' → logprob: -17.761871337890625
    9. '	' → logprob: -18.011871337890625
    10. ' ' → logprob: -18.136871337890625

Token 838: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017964430153369904
    2. ' f' → logprob: -7.126796245574951
    3. '(f' → logprob: -8.00179672241211
    4. '((' → logprob: -9.00179672241211
    5. 'min' → logprob: -9.12679672241211
    6. '(K' → logprob: -9.62679672241211
    7. '(z' → logprob: -9.75179672241211
    8. '(j' → logprob: -9.87679672241211
    9. '0' → logprob: -9.87679672241211
    10. '(k' → logprob: -10.25179672241211

Token 839: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.1270904242992401
    2. '[k' → logprob: -2.1270904541015625
    3. 'k' → logprob: -9.627090454101562
    4. '(z' → logprob: -9.877090454101562
    5. '(k' → logprob: -10.627090454101562
    6. 'z' → logprob: -11.127090454101562
    7. '[' → logprob: -13.002090454101562
    8. '```' → logprob: -13.377090454101562
    9. '[i' → logprob: -13.752090454101562
    10. '[j' → logprob: -15.377090454101562

Token 840: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5121899843215942
    2. '[j' → logprob: -1.2621899843215942
    3. '][' → logprob: -2.2621898651123047
    4. 'k' → logprob: -4.762189865112305
    5. '[i' → logprob: -5.887189865112305
    6. '[' → logprob: -6.887189865112305
    7. ']' → logprob: -7.887189865112305
    8. 'j' → logprob: -8.137189865112305
    9. '[z' → logprob: -8.887189865112305
    10. ',k' → logprob: -9.512189865112305

Token 841: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009232277981936932
    2. '(j' → logprob: -5.259232044219971
    3. 'm' → logprob: -5.634232044219971
    4. '(m' → logprob: -8.384232521057129
    5. '((' → logprob: -9.259232521057129
    6. ' j' → logprob: -9.509232521057129
    7. '(' → logprob: -11.634232521057129
    8. '[j' → logprob: -12.259232521057129
    9. ' (' → logprob: -12.884232521057129
    10. ' m' → logprob: -14.634232521057129

Token 842: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.647229790687561
    2. '[j' → logprob: -1.147229790687561
    3. '[m' → logprob: -2.5222296714782715
    4. '>>' → logprob: -3.5222296714782715
    5. '&(' → logprob: -4.5222296714782715
    6. '&m' → logprob: -4.5222296714782715
    7. '][' → logprob: -4.8972296714782715
    8. ' &' → logprob: -5.0222296714782715
    9. ']' → logprob: -5.2722296714782715
    10. '[' → logprob: -6.0222296714782715

Token 843: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.848420551046729e-05
    2. ' m' → logprob: -9.7500581741333
    3. '(m' → logprob: -16.875059127807617
    4. '           ' → logprob: -17.250059127807617
    5. '   ' → logprob: -17.250059127807617
    6. '[m' → logprob: -17.875059127807617
    7. ' ' → logprob: -18.250059127807617
    8. '	m' → logprob: -18.250059127807617
    9. '       ' → logprob: -18.500059127807617
    10. '```' → logprob: -19.625059127807617

Token 844: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02064337767660618
    2. ']
' → logprob: -3.895643472671509
    3. ']
' → logprob: -9.64564323425293
    4. '])' → logprob: -11.14564323425293
    5. '           ' → logprob: -11.89564323425293
    6. '       ' → logprob: -12.77064323425293
    7. ')' → logprob: -12.89564323425293
    8. ']+' → logprob: -13.02064323425293
    9. '#' → logprob: -13.39564323425293
    10. ']

' → logprob: -13.39564323425293

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018047726480290294
    2. '<|end|>' → logprob: -7.251804828643799
    3. 'if' → logprob: -7.751804828643799
    4. '```' → logprob: -8.37680435180664
    5. ' if' → logprob: -8.62680435180664
    6. '+' → logprob: -10.25180435180664
    7. '		' → logprob: -10.25180435180664
    8. '          ' → logprob: -10.75180435180664
    9. '               ' → logprob: -10.87680435180664
    10. '	       ' → logprob: -11.00180435180664

Token 846: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5374657511711121
    2. 'if' → logprob: -1.4124658107757568
    3. 'd' → logprob: -1.9124658107757568
    4. ' if' → logprob: -3.912465810775757
    5. 'for' → logprob: -6.662465572357178
    6. '       ' → logprob: -6.662465572357178
    7. '+' → logprob: -7.162465572357178
    8. ' d' → logprob: -7.787465572357178
    9. '```' → logprob: -8.912466049194336
    10. ' for' → logprob: -9.037466049194336

Token 847: ' Si' (ID: 7832)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31725314259529114
    2. 'if' → logprob: -1.3172531127929688
    3. 'for' → logprob: -6.192253112792969
    4. 'f' → logprob: -6.692253112792969
    5. 'bit' → logprob: -8.692253112792969
    6. 'c' → logprob: -9.067253112792969
    7. 's' → logprob: -9.567253112792969
    8. '           ' → logprob: -9.692253112792969
    9. 'b' → logprob: -9.942253112792969
    10. 'val' → logprob: -10.067253112792969

Token 848: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2532845437526703
    2. ' r' → logprob: -1.5032845735549927
    3. 'd' → logprob: -8.003284454345703
    4. ' d' → logprob: -8.503284454345703
    5. 't' → logprob: -9.128284454345703
    6. '(r' → logprob: -9.253284454345703
    7. ' t' → logprob: -9.378284454345703
    8. 'j' → logprob: -9.503284454345703
    9. 'f' → logprob: -9.503284454345703
    10. ' j' → logprob: -9.753284454345703

Token 849: ' n' (ID: 297)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.026317834854126
    2. ' <=' → logprob: -2.026317834854126
    3. '==' → logprob: -2.151317834854126
    4. ' >=' → logprob: -2.276317834854126
    5. ' >' → logprob: -2.276317834854126
    6. '>' → logprob: -2.401317834854126
    7. '<=' → logprob: -3.026317834854126
    8. '>=' → logprob: -3.151317834854126
    9. ' <' → logprob: -5.776317596435547
    10. '<' → logprob: -6.651317596435547

Token 850: '’' (ID: 438)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8393609523773193
    2. ' >' → logprob: -1.3393609523773193
    3. ' >=' → logprob: -2.2143609523773193
    4. '>=' → logprob: -2.7143609523773193
    5. ' <=' → logprob: -2.9643609523773193
    6. '<=' → logprob: -3.5893609523773193
    7. ' <' → logprob: -4.214361190795898
    8. '<' → logprob: -4.214361190795898
    9. ' ==' → logprob: -4.839361190795898
    10. '==' → logprob: -4.964361190795898

Token 851: 'atte' (ID: 23975)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06312869489192963
    2. '==' → logprob: -4.063128471374512
    3. '<=' → logprob: -4.063128471374512
    4. ' >' → logprob: -4.813128471374512
    5. '=' → logprob: -4.813128471374512
    6. ' ==' → logprob: -5.813128471374512
    7. '>=' → logprob: -5.813128471374512
    8. ' <=' → logprob: -6.313128471374512
    9. '<' → logprob: -6.313128471374512
    10. ' >=' → logprob: -8.063128471374512

Token 852: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0456065870821476
    2. 't' → logprob: -3.5456066131591797
    3. 'a' → logprob: -5.92060661315918
    4. 'r' → logprob: -6.29560661315918
    5. 'ut' → logprob: -6.54560661315918
    6. 'ant' → logprob: -6.67060661315918
    7. 'ait' → logprob: -6.79560661315918
    8. 'pas' → logprob: -6.79560661315918
    9. 'nt' → logprob: -7.67060661315918
    10. 'it' → logprob: -7.92060661315918

Token 853: ' pas' (ID: 2173)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3394986689090729
    2. 'z' → logprob: -1.4644986391067505
    3. ' r' → logprob: -3.96449875831604
    4. ' z' → logprob: -4.339498519897461
    5. 'i' → logprob: -4.964498519897461
    6. '==' → logprob: -5.339498519897461
    7. '<' → logprob: -5.964498519897461
    8. '>' → logprob: -6.214498519897461
    9. '=' → logprob: -6.589498519897461
    10. ' i' → logprob: -6.839498519897461

Token 854: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.09279501438140869
    2. ' z' → logprob: -2.717794895172119
    3. 'i' → logprob: -4.092794895172119
    4. 'k' → logprob: -5.967794895172119
    5. ' i' → logprob: -6.717794895172119
    6. '0' → logprob: -7.342794895172119
    7. 'r' → logprob: -7.717794895172119
    8. '1' → logprob: -8.342795372009277
    9. '=' → logprob: -8.842795372009277
    10. ' ' → logprob: -9.217795372009277

Token 855: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5131704211235046
    2. ' ==' → logprob: -1.8881704807281494
    3. '==' → logprob: -1.8881704807281494
    4. '           ' → logprob: -3.1381704807281494
    5. ' and' → logprob: -3.6381704807281494
    6. ':
' → logprob: -4.13817024230957
    7. '>' → logprob: -5.38817024230957
    8. 'and' → logprob: -6.51317024230957
    9. ' !=' → logprob: -6.63817024230957
    10. ' >' → logprob: -6.88817024230957

Token 856: 'c' (ID: 66)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.872979998588562
    2. '           ' → logprob: -1.247979998588562
    3. '):' → logprob: -1.872979998588562
    4. ')' → logprob: -2.9979801177978516
    5. '):
' → logprob: -3.6229801177978516
    6. 'if' → logprob: -4.247980117797852
    7. ' and' → logprob: -4.247980117797852
    8. '==' → logprob: -5.372980117797852
    9. '               ' → logprob: -5.372980117797852
    10. ' !=' → logprob: -5.497980117797852

Token 857: '’est' (ID: 6838)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3760026693344116
    2. 'u' → logprob: -2.001002788543701
    3. 'ont' → logprob: -2.126002788543701
    4. ')' → logprob: -2.251002788543701
    5. '>' → logprob: -2.251002788543701
    6. '#' → logprob: -2.626002788543701
    7. '=' → logprob: -3.376002788543701
    8. '```' → logprob: -3.626002788543701
    9. ''est' → logprob: -4.126002788543701
    10. 'e' → logprob: -4.251002788543701

Token 858: '-à' (ID: 56297)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.17662791907787323
    2. 'pas' → logprob: -2.1766278743743896
    3. '-à' → logprob: -4.051628112792969
    4. 'à' → logprob: -4.926628112792969
    5. 'False' → logprob: -5.551628112792969
    6. 'Pas' → logprob: -5.801628112792969
    7. 'r' → logprob: -5.801628112792969
    8. ')' → logprob: -5.926628112792969
    9. '=' → logprob: -6.426628112792969
    10. '   ' → logprob: -6.426628112792969

Token 859: '-dire' (ID: 76064)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.05264558643102646
    2. '1' → logprob: -4.427645683288574
    3. '0' → logprob: -4.552645683288574
    4. '#' → logprob: -4.677645683288574
    5. 'Pas' → logprob: -5.052645683288574
    6. ' pas' → logprob: -5.552645683288574
    7. 't' → logprob: -5.802645683288574
    8. 'n' → logprob: -6.427645683288574
    9. 'p' → logprob: -7.552645683288574
    10. 'r' → logprob: -8.302645683288574

Token 860: ' qu' (ID: 474)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4901036024093628
    2. 'r' → logprob: -0.9901036024093628
    3. ' z' → logprob: -5.365103721618652
    4. 'z' → logprob: -6.115103721618652
    5. ' <' → logprob: -6.115103721618652
    6. ' not' → logprob: -6.240103721618652
    7. '0' → logprob: -6.365103721618652
    8. '<' → logprob: -7.115103721618652
    9. 'not' → logprob: -7.740103721618652
    10. ' ' → logprob: -7.990103721618652

Token 861: '’il' (ID: 14828)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.28542283177375793
    2. 'r' → logprob: -1.4104228019714355
    3. ' not' → logprob: -5.9104228019714355
    4. ' j' → logprob: -7.5354228019714355
    5. 'not' → logprob: -8.160423278808594
    6. 'j' → logprob: -9.035423278808594
    7. ' ' → logprob: -9.285423278808594
    8. ' t' → logprob: -9.410423278808594
    9. 't' → logprob: -9.410423278808594
    10. ' f' → logprob: -9.660423278808594

Token 862: ' s' (ID: 265)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2670424282550812
    2. '!=' → logprob: -2.267042398452759
    3. ' !=' → logprob: -2.642042398452759
    4. ' <' → logprob: -2.892042398452759
    5. ')' → logprob: -6.892042636871338
    6. '<n' → logprob: -6.892042636871338
    7. '>' → logprob: -7.642042636871338
    8. '<len' → logprob: -7.642042636871338
    9. '=' → logprob: -8.39204216003418
    10. ']' → logprob: -8.89204216003418

Token 863: '’arr' (ID: 51821)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.6460250616073608
    2. '#' → logprob: -1.8960250616073608
    3. '<n' → logprob: -1.8960250616073608
    4. ''agit' → logprob: -2.6460251808166504
    5. ' !=' → logprob: -2.8960251808166504
    6. '!=' → logprob: -3.1460251808166504
    7. ''est' → logprob: -3.1460251808166504
    8. 'r' → logprob: -3.2710251808166504
    9. 'e' → logprob: -3.3960251808166504
    10. '=' → logprob: -3.6460251808166504

Token 864: 'ête' (ID: 16808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.351007342338562
    2. 'et' → logprob: -1.476007342338562
    3. 'ête' → logprob: -2.4760074615478516
    4. ''arrêt' → logprob: -2.6010074615478516
    5. ''arr' → logprob: -2.6010074615478516
    6. 't' → logprob: -3.1010074615478516
    7. '#' → logprob: -3.2260074615478516
    8. 'ont' → logprob: -3.6010074615478516
    9. 'êt' → logprob: -3.7260074615478516
    10. ''agit' → logprob: -3.9760074615478516

Token 865: ' avant' (ID: 13339)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16996629536151886
    2. ' <' → logprob: -2.169966220855713
    3. '<n' → logprob: -4.544966220855713
    4. '!=' → logprob: -4.669966220855713
    5. '==' → logprob: -4.919966220855713
    6. '<t' → logprob: -5.544966220855713
    7. ' !=' → logprob: -5.669966220855713
    8. '<p' → logprob: -6.294966220855713
    9. ' ==' → logprob: -6.794966220855713
    10. '=' → logprob: -7.169966220855713

Token 866: ' la' (ID: 557)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.014797265641391277
    2. ' z' → logprob: -4.514797210693359
    3. 'r' → logprob: -5.764797210693359
    4. '(z' → logprob: -9.26479721069336
    5. '           ' → logprob: -9.51479721069336
    6. 'le' → logprob: -9.63979721069336
    7. '```' → logprob: -9.76479721069336
    8. '   ' → logprob: -10.13979721069336
    9. 'j' → logprob: -10.13979721069336
    10. 'True' → logprob: -10.38979721069336

Token 867: ' fin' (ID: 2131)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0007678175461478531
    2. 'r' → logprob: -7.625767707824707
    3. ' z' → logprob: -8.625767707824707
    4. '```' → logprob: -10.500767707824707
    5. 'k' → logprob: -11.250767707824707
    6. '#' → logprob: -12.000767707824707
    7. 'tail' → logprob: -12.000767707824707
    8. 'last' → logprob: -12.250767707824707
    9. 't' → logprob: -12.375767707824707
    10. 'i' → logprob: -12.750767707824707

Token 868: '),
' (ID: 2313)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9533520936965942
    2. '):' → logprob: -1.4533520936965942
    3. '),' → logprob: -1.7033520936965942
    4. ' of' → logprob: -2.9533519744873047
    5. ')' → logprob: -2.9533519744873047
    6. 'de' → logprob: -3.7033519744873047
    7. ' du' → logprob: -3.8283519744873047
    8. '):
' → logprob: -4.203351974487305
    9. 'r' → logprob: -5.078351974487305
    10. ',' → logprob: -5.328351974487305

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14909450709819794
    2. '               ' → logprob: -2.149094581604004
    3. ' if' → logprob: -4.149094581604004
    4. 'if' → logprob: -5.149094581604004
    5. '                   ' → logprob: -9.399094581604004
    6. '```' → logprob: -9.524094581604004
    7. '              ' → logprob: -10.899094581604004
    8. '                       ' → logprob: -10.899094581604004
    9. '            ' → logprob: -11.024094581604004
    10. '   ' → logprob: -11.149094581604004

Token 870: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8213613629341125
    2. 'if' → logprob: -1.4463613033294678
    3. '               ' → logprob: -1.8213613033294678
    4. ' if' → logprob: -1.8213613033294678
    5. '```' → logprob: -8.696361541748047
    6. '                   ' → logprob: -8.821361541748047
    7. '              ' → logprob: -9.321361541748047
    8. '#' (adapté à ' #') → logprob: -9.321361541748047
    9. 'd' → logprob: -9.571361541748047
    10. '   ' → logprob: -9.571361541748047

Token 871: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.042335864156484604
    2. '           ' → logprob: -3.4173357486724854
    3. ' if' → logprob: -5.4173359870910645
    4. '               ' → logprob: -6.4173359870910645
    5. 'd' → logprob: -6.6673359870910645
    6. 'continue' → logprob: -7.5423359870910645
    7. '#' → logprob: -7.6673359870910645
    8. 'else' → logprob: -10.042335510253906
    9. '   ' → logprob: -10.167335510253906
    10. 's' → logprob: -10.167335510253906

Token 872: ' redis' (ID: 14270)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8685798645019531
    2. 'continue' → logprob: -1.1185798645019531
    3. '           ' → logprob: -1.9935798645019531
    4. 'd' → logprob: -2.743579864501953
    5. ' continue' → logprob: -3.618579864501953
    6. ' if' → logprob: -4.118579864501953
    7. '#' → logprob: -5.743579864501953
    8. '       ' → logprob: -7.118579864501953
    9. 'f' → logprob: -7.243579864501953
    10. ' d' → logprob: -7.493579864501953

Token 873: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.012999623082578182
    2. 'patch' → logprob: -4.512999534606934
    3. 'tribute' → logprob: -7.012999534606934
    4. 't' → logprob: -7.512999534606934
    5. 'tribut' → logprob: -9.262999534606934
    6. 'tr' → logprob: -9.637999534606934
    7. 'continue' → logprob: -9.637999534606934
    8. 'd' → logprob: -9.762999534606934
    9. 'tributing' → logprob: -10.512999534606934
    10. 'f' → logprob: -10.637999534606934

Token 874: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0021146931685507298
    2. 'u' → logprob: -6.877114772796631
    3. 'uer' → logprob: -7.002114772796631
    4. 'uez' → logprob: -9.752114295959473
    5. 'e' → logprob: -10.502114295959473
    6. 'ues' → logprob: -11.127114295959473
    7. 'ué' → logprob: -11.377114295959473
    8. 'r' → logprob: -11.752114295959473
    9. '#' → logprob: -12.252114295959473
    10. 'ution' → logprob: -12.377114295959473

Token 875: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08542037755250931
    2. ' d' → logprob: -2.5854203701019287
    3. '           ' → logprob: -5.085420608520508
    4. '               ' → logprob: -9.585420608520508
    5. '                   ' → logprob: -10.460420608520508
    6. '                       ' → logprob: -10.585420608520508
    7. '(d' → logprob: -10.710420608520508
    8. '   ' → logprob: -10.835420608520508
    9. '          ' → logprob: -11.335420608520508
    10. '(' → logprob: -11.335420608520508

Token 876: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009069374646060169
    2. 'i' → logprob: -7.625906944274902
    3. '[k' → logprob: -8.125906944274902
    4. '[' → logprob: -10.375906944274902
    5. 'd' → logprob: -10.875906944274902
    6. 'k' → logprob: -11.375906944274902
    7. '[z' → logprob: -11.375906944274902
    8. '[j' → logprob: -11.625906944274902
    9. '   ' → logprob: -11.750906944274902
    10. '[d' → logprob: -12.000906944274902

Token 877: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11329629272222519
    2. '[i' → logprob: -2.2382962703704834
    3. '[k' → logprob: -9.363296508789062
    4. ' ][' → logprob: -9.363296508789062
    5. '   ' → logprob: -9.988296508789062
    6. '[' → logprob: -9.988296508789062
    7. '[z' → logprob: -10.363296508789062
    8. '[j' → logprob: -10.613296508789062
    9. '           ' → logprob: -10.613296508789062
    10. ')[' → logprob: -10.863296508789062

Token 878: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008941899868659675
    2. '[j' → logprob: -7.125894069671631
    3. ']' → logprob: -10.250894546508789
    4. '][' → logprob: -10.875894546508789
    5. '```' → logprob: -11.375894546508789
    6. '[' → logprob: -12.250894546508789
    7. '(j' → logprob: -12.375894546508789
    8. 'k' → logprob: -12.500894546508789
    9. ' j' → logprob: -12.625894546508789
    10. '[(' → logprob: -13.875894546508789

Token 879: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38444218039512634
    2. ']' → logprob: -1.7594422101974487
    3. '[r' → logprob: -3.134442090988159
    4. 'r' → logprob: -3.509442090988159
    5. ']*(' → logprob: -4.384442329406738
    6. '<<' → logprob: -4.509442329406738
    7. '>>' → logprob: -4.634442329406738
    8. ']*' → logprob: -4.884442329406738
    9. '[j' → logprob: -5.009442329406738
    10. '[' → logprob: -5.259442329406738

Token 880: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28728747367858887
    2. '[r' → logprob: -2.662287473678589
    3. ' d' → logprob: -3.037287473678589
    4. '[d' → logprob: -3.162287473678589
    5. 'd' → logprob: -3.537287473678589
    6. '[j' → logprob: -4.537287712097168
    7. '[' → logprob: -4.537287712097168
    8. ' to' → logprob: -4.662287712097168
    9. '               ' → logprob: -5.537287712097168
    10. ' into' → logprob: -5.537287712097168

Token 881: ' une' (ID: 2463)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01619941182434559
    2. 'f' → logprob: -4.141199588775635
    3. ' d' → logprob: -9.266199111938477
    4. '   ' → logprob: -10.516199111938477
    5. '           ' → logprob: -11.266199111938477
    6. ' ' → logprob: -11.891199111938477
    7. '       ' → logprob: -12.016199111938477
    8. ' f' → logprob: -12.266199111938477
    9. '     ' → logprob: -13.016199111938477
    10. '  ' → logprob: -13.266199111938477

Token 882: ' table' (ID: 3293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16329625248908997
    2. 'f' → logprob: -2.1632962226867676
    3. '[' → logprob: -4.788296222686768
    4. 'for' → logprob: -4.913296222686768
    5. ']' → logprob: -5.788296222686768
    6. 'r' → logprob: -6.538296222686768
    7. '[j' → logprob: -6.663296222686768
    8. ' d' → logprob: -6.788296222686768
    9. '1' → logprob: -7.163296222686768
    10. '][' → logprob: -7.413296222686768

Token 883: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8325562477111816
    2. 'd' → logprob: -1.3325562477111816
    3. '[i' → logprob: -2.3325562477111816
    4. '   ' → logprob: -3.0825562477111816
    5. ' d' → logprob: -3.3325562477111816
    6. ' différente' → logprob: -3.7075562477111816
    7. 'different' → logprob: -3.7075562477111816
    8. '           ' → logprob: -3.9575562477111816
    9. ' different' → logprob: -4.957556247711182
    10. 'diff' → logprob: -5.082556247711182

Token 884: '’au' (ID: 61371)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21034438908100128
    2. '[k' → logprob: -2.7103443145751953
    3. '[r' → logprob: -2.8353443145751953
    4. '[z' → logprob: -2.8353443145751953
    5. '[f' → logprob: -6.085344314575195
    6. 'f' → logprob: -7.335344314575195
    7. 'i' → logprob: -7.710344314575195
    8. 'r' → logprob: -7.835344314575195
    9. '[t' → logprob: -7.960344314575195
    10. '[' → logprob: -7.960344314575195

Token 885: ' niveau' (ID: 21708)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14086326956748962
    2. 'r' → logprob: -2.2658631801605225
    3. '[i' → logprob: -4.640863418579102
    4. 'k' → logprob: -5.515863418579102
    5. 'index' → logprob: -6.265863418579102
    6. '[r' → logprob: -6.265863418579102
    7. 'f' → logprob: -6.390863418579102
    8. 'range' → logprob: -7.015863418579102
    9. '1' → logprob: -7.015863418579102
    10. 'j' → logprob: -7.140863418579102

Token 886: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1801230907440186
    2. '[i' → logprob: -1.3051230907440186
    3. 'i' → logprob: -1.4301230907440186
    4. 'd' → logprob: -2.9301230907440186
    5. '[r' → logprob: -2.9301230907440186
    6. '           ' → logprob: -3.9301230907440186
    7. '   ' → logprob: -4.055123329162598
    8. '       ' → logprob: -4.180123329162598
    9. '(i' → logprob: -5.430123329162598
    10. '+' → logprob: -5.555123329162598

Token 887: '-r' (ID: 6335)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2084185630083084
    2. '][' → logprob: -2.458418607711792
    3. '           ' → logprob: -3.083418607711792
    4. '[r' → logprob: -3.708418607711792
    5. '[' → logprob: -5.083418369293213
    6. '[k' → logprob: -5.208418369293213
    7. '[j' → logprob: -5.333418369293213
    8. '       ' → logprob: -5.583418369293213
    9. ']' → logprob: -6.458418369293213
    10. '   ' → logprob: -6.458418369293213

Token 888: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2885494530200958
    2. '           ' → logprob: -2.1635494232177734
    3. '[k' → logprob: -3.0385494232177734
    4. '-' → logprob: -4.038549423217773
    5. '[' → logprob: -4.038549423217773
    6. '               ' → logprob: -4.663549423217773
    7. '][' → logprob: -4.788549423217773
    8. '```' → logprob: -4.913549423217773
    9. '[r' → logprob: -5.288549423217773
    10. 'if' → logprob: -5.663549423217773

Token 889: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13526789844036102
    2. '           ' → logprob: -2.635267972946167
    3. '                   ' → logprob: -3.885267972946167
    4. '               ' → logprob: -4.135267734527588
    5. 'for' → logprob: -5.010267734527588
    6. '                       ' → logprob: -5.385267734527588
    7. ' d' → logprob: -6.010267734527588
    8. 'f' → logprob: -6.510267734527588
    9. '       ' → logprob: -7.385267734527588
    10. '                           ' → logprob: -7.385267734527588

Token 890: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5647021532058716
    2. 'd' → logprob: -1.1897021532058716
    3. '[j' → logprob: -3.439702033996582
    4. 'f' → logprob: -3.939702033996582
    5. 'k' → logprob: -4.064702033996582
    6. 'l' → logprob: -4.189702033996582
    7. 'r' → logprob: -4.439702033996582
    8. 'indices' → logprob: -5.314702033996582
    9. 'i' → logprob: -5.439702033996582
    10. '[(' → logprob: -5.689702033996582

Token 891: '’ind' (ID: 65649)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.327864646911621
    2. 'j' → logprob: -1.452864646911621
    3. 'i' → logprob: -1.827864646911621
    4. 'indice' → logprob: -2.327864646911621
    5. 'index' → logprob: -3.077864646911621
    6. 'd' → logprob: -3.077864646911621
    7. '[i' → logprob: -3.452864646911621
    8. 'indices' → logprob: -4.077864646911621
    9. '[' → logprob: -4.327864646911621
    10. '`' → logprob: -4.577864646911621

Token 892: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2573947608470917
    2. 'ex' → logprob: -1.507394790649414
    3. 'ices' → logprob: -5.882394790649414
    4. 'i' → logprob: -7.132394790649414
    5. '#' → logprob: -7.382394790649414
    6. 'dex' → logprob: -7.757394790649414
    7. 'ce' → logprob: -8.257394790649414
    8. '```' → logprob: -9.257394790649414
    9. '...' → logprob: -9.757394790649414
    10. '...
' → logprob: -9.882394790649414

Token 893: ' construit' (ID: 119882)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1341480016708374
    2. '[j' → logprob: -1.1341480016708374
    3. '[(' → logprob: -1.8841480016708374
    4. '(j' → logprob: -1.8841480016708374
    5. '((' → logprob: -3.509148120880127
    6. ' (' → logprob: -4.509148120880127
    7. ' j' → logprob: -6.134148120880127
    8. 'd' → logprob: -6.259148120880127
    9. '[((' → logprob: -6.259148120880127
    10. '   ' → logprob: -6.884148120880127

Token 894: ' ainsi' (ID: 16371)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.971126914024353
    2. '[(' → logprob: -1.096126914024353
    3. '((' → logprob: -2.2211270332336426
    4. '(j' → logprob: -2.8461270332336426
    5. '=' → logprob: -2.9711270332336426
    6. '=(' → logprob: -3.4711270332336426
    7. '=((' → logprob: -4.221127033233643
    8. '[((' → logprob: -4.846127033233643
    9. '(((' → logprob: -6.096127033233643
    10. ' =' → logprob: -6.096127033233643

Token 895: ' :
' (ID: 10039)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5062795281410217
    2. '[(' → logprob: -1.756279468536377
    3. '((' → logprob: -2.506279468536377
    4. '(j' → logprob: -2.881279468536377
    5. '           ' → logprob: -3.881279468536377
    6. 'd' → logprob: -4.381279468536377
    7. '=' → logprob: -4.631279468536377
    8. ' =' → logprob: -5.506279468536377
    9. ':' → logprob: -5.506279468536377
    10. '               ' → logprob: -5.631279468536377

Token 896: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3787401914596558
    2. '           ' → logprob: -1.8787401914596558
    3. 'd' → logprob: -2.0037403106689453
    4. 'k' → logprob: -2.5037403106689453
    5. ' (' → logprob: -2.5037403106689453
    6. ' d' → logprob: -2.7537403106689453
    7. ' j' → logprob: -2.8787403106689453
    8. '               ' → logprob: -3.3787403106689453
    9. ' k' → logprob: -4.003740310668945
    10. '(' → logprob: -4.253740310668945

Token 897: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4162256717681885
    2. '((' → logprob: -2.0412256717681885
    3. 'k' → logprob: -2.7912256717681885
    4. 'd' → logprob: -2.7912256717681885
    5. '(j' → logprob: -3.1662256717681885
    6. '(k' → logprob: -3.9162256717681885
    7. '(' → logprob: -4.291225433349609
    8. '(((' → logprob: -5.291225433349609
    9. '(d' → logprob: -6.666225433349609
    10. '[j' → logprob: -6.791225433349609

Token 898: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.593409538269043
    2. '((' → logprob: -1.593409538269043
    3. '(j' → logprob: -1.593409538269043
    4. '(k' → logprob: -1.593409538269043
    5. 'k' → logprob: -1.843409538269043
    6. '(i' → logprob: -5.093409538269043
    7. 'd' → logprob: -5.343409538269043
    8. '(' → logprob: -5.343409538269043
    9. '(((' → logprob: -5.593409538269043
    10. ' (' → logprob: -5.718409538269043

Token 899: ' On' (ID: 2160)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.33712828159332275
    2. '(j' → logprob: -1.7121282815933228
    3. '(((' → logprob: -3.212128162384033
    4. '(k' → logprob: -3.462128162384033
    5. ' ((' → logprob: -4.337128162384033
    6. 'j' → logprob: -5.462128162384033
    7. 'k' → logprob: -5.587128162384033
    8. ' (' → logprob: -5.587128162384033
    9. '(i' → logprob: -5.837128162384033
    10. '(d' → logprob: -6.337128162384033

Token 900: ' prend' (ID: 37463)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6166989803314209
    2. 'k' → logprob: -1.866698980331421
    3. '[k' → logprob: -2.116698980331421
    4. 'i' → logprob: -2.616698980331421
    5. '[j' → logprob: -3.241698980331421
    6. 'd' → logprob: -3.866698980331421
    7. '|' → logprob: -4.74169921875
    8. 'j' → logprob: -5.11669921875
    9. 'for' → logprob: -5.36669921875
    10. 'continue' → logprob: -5.99169921875

Token 901: ' les' (ID: 1341)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.7217919826507568
    2. '((' → logprob: -1.3467919826507568
    3. '(k' → logprob: -2.596791982650757
    4. '(i' → logprob: -2.721791982650757
    5. ' (' → logprob: -3.346791982650757
    6. 'j' → logprob: -3.721791982650757
    7. '(d' → logprob: -4.096792221069336
    8. '(((' → logprob: -4.346792221069336
    9. '(' → logprob: -5.096792221069336
    10. ' ((' → logprob: -5.221792221069336

Token 902: ' bits' (ID: 18189)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7458155155181885
    2. '(k' → logprob: -1.7458155155181885
    3. '(i' → logprob: -1.7458155155181885
    4. 'i' → logprob: -1.9958155155181885
    5. 'j' → logprob: -2.1208155155181885
    6. '(j' → logprob: -2.2458155155181885
    7. '((' → logprob: -2.3708155155181885
    8. '(((' → logprob: -4.870815277099609
    9. 'r' → logprob: -5.995815277099609
    10. 'd' → logprob: -5.995815277099609

Token 903: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9840283393859863
    2. '[j' → logprob: -1.4840283393859863
    3. 'k' → logprob: -1.7340283393859863
    4. '[k' → logprob: -2.6090283393859863
    5. 'i' → logprob: -3.1090283393859863
    6. '[i' → logprob: -3.1090283393859863
    7. '=' → logprob: -4.734028339385986
    8. '```' → logprob: -5.109028339385986
    9. '<<' → logprob: -5.359028339385986
    10. '(k' → logprob: -5.609028339385986

Token 904: ' haut' (ID: 28223)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5535892844200134
    2. 'j' → logprob: -0.9285892844200134
    3. 'i' → logprob: -4.053589344024658
    4. '(k' → logprob: -5.303589344024658
    5. '(j' → logprob: -5.678589344024658
    6. '(i' → logprob: -6.178589344024658
    7. 'd' → logprob: -7.178589344024658
    8. '((' → logprob: -7.928589344024658
    9. '```' → logprob: -7.928589344024658
    10. ' j' → logprob: -8.9285888671875

Token 905: ' poids' (ID: 56058)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1332797259092331
    2. '(k' → logprob: -2.133279800415039
    3. '(i' → logprob: -6.383279800415039
    4. 'er' → logprob: -6.633279800415039
    5. '```' → logprob: -6.883279800415039
    6. '(' → logprob: -8.258279800415039
    7. 'r' → logprob: -8.383279800415039
    8. 'i' → logprob: -8.508279800415039
    9. '[k' → logprob: -8.508279800415039
    10. '{k' → logprob: -8.633279800415039

Token 906: ' de' (ID: 334)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.8788331151008606
    2. '```' → logprob: -1.8788330554962158
    3. '           ' → logprob: -2.253833055496216
    4. '(i' → logprob: -3.378833055496216
    5. '          ' → logprob: -3.378833055496216
    6. '               ' → logprob: -3.628833055496216
    7. '(k' → logprob: -3.878833055496216
    8. 'k' → logprob: -3.878833055496216
    9. ' (' → logprob: -4.003833293914795
    10. ')' → logprob: -4.003833293914795

Token 907: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013650237582623959
    2. 'k' → logprob: -4.388650417327881
    3. ' j' → logprob: -7.388650417327881
    4. '(j' → logprob: -8.513649940490723
    5. '```' → logprob: -9.263649940490723
    6. '(k' → logprob: -10.263649940490723
    7. 'd' → logprob: -10.388649940490723
    8. 'l' → logprob: -10.388649940490723
    9. 'i' → logprob: -10.638649940490723
    10. '   ' → logprob: -10.763649940490723

Token 908: ' (' (ID: 350)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7969317436218262
    2. ' >>' → logprob: -0.9219317436218262
    3. '>>(' → logprob: -3.171931743621826
    4. '(j' → logprob: -4.421931743621826
    5. ' jusqu' → logprob: -4.421931743621826
    6. ' ^' → logprob: -4.546931743621826
    7. '^(' → logprob: -4.921931743621826
    8. '[j' → logprob: -5.046931743621826
    9. '           ' → logprob: -5.171931743621826
    10. '&' → logprob: -5.296931743621826

Token 909: 'au' (ID: 753)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08737080544233322
    2. 'k' → logprob: -2.7123708724975586
    3. '(j' → logprob: -5.087370872497559
    4. '(k' → logprob: -5.087370872497559
    5. '>>' → logprob: -5.837370872497559
    6. ' j' → logprob: -7.837370872497559
    7. '>>>' → logprob: -7.962370872497559
    8. '>>(' → logprob: -7.962370872497559
    9. '```' → logprob: -8.462370872497559
    10. ')' → logprob: -8.712370872497559

Token 910: '-delà' (ID: 94644)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3267502188682556
    2. 'k' → logprob: -1.3267502784729004
    3. '(j' → logprob: -5.2017502784729
    4. 'z' → logprob: -6.0767502784729
    5. 'j' → logprob: -6.3267502784729
    6. '(i' → logprob: -6.4517502784729
    7. '(z' → logprob: -6.7017502784729
    8. '```' → logprob: -8.201749801635742
    9. 'r' → logprob: -8.326749801635742
    10. '(' → logprob: -9.701749801635742

Token 911: ' des' (ID: 731)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.7399294972419739
    2. 'z' → logprob: -1.489929437637329
    3. '(k' → logprob: -1.864929437637329
    4. 'k' → logprob: -2.364929437637329
    5. ' (' → logprob: -4.239929676055908
    6. '(j' → logprob: -4.364929676055908
    7. '(i' → logprob: -4.989929676055908
    8. ' z' → logprob: -5.739929676055908
    9. 'j' → logprob: -5.864929676055908
    10. '(r' → logprob: -6.364929676055908

Token 912: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.20562393963336945
    2. 'r' → logprob: -1.705623984336853
    3. '(z' → logprob: -5.955624103546143
    4. '(r' → logprob: -7.205624103546143
    5. 'k' → logprob: -7.705624103546143
    6. ' z' → logprob: -9.080623626708984
    7. '(k' → logprob: -9.830623626708984
    8. 'm' → logprob: -9.955623626708984
    9. '(i' → logprob: -10.580623626708984
    10. ' r' → logprob: -10.580623626708984

Token 913: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2071363627910614
    2. ' bits' → logprob: -1.8321363925933838
    3. ')' → logprob: -3.707136392593384
    4. 'r' → logprob: -6.457136154174805
    5. '),' → logprob: -8.957136154174805
    6. '(bits' → logprob: -9.332136154174805
    7. '_bits' → logprob: -9.332136154174805
    8. ' ' → logprob: -9.457136154174805
    9. 'z' → logprob: -9.582136154174805
    10. '```' → logprob: -9.707136154174805

Token 914: ')' (ID: 8)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.29224783182144165
    2. ')' → logprob: -1.9172477722167969
    3. '),' → logprob: -3.167247772216797
    4. ' -' → logprob: -4.167247772216797
    5. '-' → logprob: -4.542247772216797
    6. '-z' → logprob: -4.792247772216797
    7. 'r' → logprob: -5.167247772216797
    8. '-k' → logprob: -5.417247772216797
    9. ')<<' → logprob: -5.917247772216797
    10. '>>' → logprob: -6.417247772216797

Token 915: ' et' (ID: 859)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.36065196990966797
    2. ' |' → logprob: -2.235651969909668
    3. '<<' → logprob: -2.860651969909668
    4. '>>' → logprob: -3.485651969909668
    5. '           ' → logprob: -3.860651969909668
    6. '|(' → logprob: -3.860651969909668
    7. '((' → logprob: -4.860651969909668
    8. '+' → logprob: -4.985651969909668
    9. ',' → logprob: -5.110651969909668
    10. ' +' → logprob: -5.235651969909668

Token 916: ' on' (ID: 402)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.2090579867362976
    2. '((' → logprob: -2.9590580463409424
    3. ' (' → logprob: -3.5840580463409424
    4. '(m' → logprob: -3.7090580463409424
    5. '(r' → logprob: -3.8340580463409424
    6. '|' → logprob: -4.084057807922363
    7. '(k' → logprob: -4.834057807922363
    8. '(i' → logprob: -5.209057807922363
    9. '(d' → logprob: -5.334057807922363
    10. 'j' → logprob: -5.709057807922363

Token 917: ' les' (ID: 1341)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.509320080280304
    2. '(j' → logprob: -1.0093200206756592
    3. '(k' → logprob: -3.884320020675659
    4. ' ((' → logprob: -5.259320259094238
    5. '(((' → logprob: -5.509320259094238
    6. '(i' → logprob: -6.509320259094238
    7. '(r' → logprob: -6.634320259094238
    8. '(' → logprob: -7.509320259094238
    9. '(m' → logprob: -7.509320259094238
    10. 'k' → logprob: -8.634320259094238

Token 918: ' déc' (ID: 8498)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.49681755900382996
    2. '<<' → logprob: -1.9968175888061523
    3. '((' → logprob: -2.3718175888061523
    4. '|' → logprob: -2.8718175888061523
    5. '(k' → logprob: -3.4968175888061523
    6. '(i' → logprob: -3.6218175888061523
    7. '|(' → logprob: -3.7468175888061523
    8. 'shift' → logprob: -4.496817588806152
    9. '(' → logprob: -5.996817588806152
    10. '<<(' → logprob: -6.246817588806152

Token 919: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.024640079587697983
    2. 'ale' → logprob: -3.8996400833129883
    3. 'aler' → logprob: -6.399640083312988
    4. 'alez' → logprob: -6.774640083312988
    5. '#' → logprob: -8.649640083312988
    6. '```' → logprob: -9.024640083312988
    7. '   ' → logprob: -9.149640083312988
    8. 'alc' → logprob: -9.524640083312988
    9. 'alet' → logprob: -9.649640083312988
    10. '<' → logprob: -9.774640083312988

Token 920: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.887725830078125
    2. '>>' → logprob: -1.512725830078125
    3. '<<' → logprob: -2.387725830078125
    4. '```' → logprob: -2.387725830078125
    5. '>>(' → logprob: -2.512725830078125
    6. '>>>' → logprob: -3.637725830078125
    7. '           ' → logprob: -4.012725830078125
    8. '(r' → logprob: -4.387725830078125
    9. '<<(' → logprob: -4.512725830078125
    10. '(' → logprob: -4.887725830078125

Token 921: '           ' (ID: 352)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.41826131939888
    2. '>>(' → logprob: -1.4182612895965576
    3. '           ' → logprob: -3.5432612895965576
    4. '```' → logprob: -3.7932612895965576
    5. '(' → logprob: -4.418261528015137
    6. '               ' → logprob: -4.793261528015137
    7. '<<' → logprob: -5.043261528015137
    8. '(j' → logprob: -5.793261528015137
    9. '>' → logprob: -5.793261528015137
    10. '(k' → logprob: -6.043261528015137

Token 922: ' #' (ID: 1069)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7845635414123535
    2. 'r' → logprob: -1.5345635414123535
    3. '>>(' → logprob: -2.5345635414123535
    4. '```' → logprob: -2.7845635414123535
    5. '(' → logprob: -3.1595635414123535
    6. '((' → logprob: -3.4095635414123535
    7. '(r' → logprob: -3.5345635414123535
    8. '(z' → logprob: -4.2845635414123535
    9. '<<' → logprob: -4.2845635414123535
    10. '           ' → logprob: -4.6595635414123535

Token 923: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8216092586517334
    2. '>>' → logprob: -1.8216092586517334
    3. '```' → logprob: -2.3216092586517334
    4. '(' → logprob: -2.9466092586517334
    5. 'z' → logprob: -3.0716092586517334
    6. '((' → logprob: -3.1966092586517334
    7. '(r' → logprob: -3.4466092586517334
    8. ' (' → logprob: -3.5716092586517334
    9. '(z' → logprob: -4.0716094970703125
    10. '<<' → logprob: -4.1966094970703125

Token 924: ' On' (ID: 2160)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.5633604526519775
    2. ' (' → logprob: -2.0633604526519775
    3. '((' → logprob: -2.3133604526519775
    4. '(' → logprob: -2.6883604526519775
    5. ' ((' → logprob: -3.8133604526519775
    6. '(m' → logprob: -4.313360214233398
    7. '(j' → logprob: -4.313360214233398
    8. 'r' → logprob: -4.438360214233398
    9. ' |' → logprob: -4.563360214233398
    10. '+' → logprob: -4.688360214233398

Token 925: ' ajoute' (ID: 91611)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.23728585243225098
    2. 'or' → logprob: -2.362285852432251
    3. '(' → logprob: -4.237285614013672
    4. 'r' → logprob: -4.237285614013672
    5. '((' → logprob: -4.362285614013672
    6. '|(' → logprob: -4.987285614013672
    7. '(|' → logprob: -5.112285614013672
    8. 'k' → logprob: -5.237285614013672
    9. ' |' → logprob: -5.237285614013672
    10. '(j' → logprob: -5.362285614013672

Token 926: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9951735734939575
    2. ' (' → logprob: -1.2451735734939575
    3. '((' → logprob: -1.3701735734939575
    4. '(r' → logprob: -3.620173454284668
    5. ' ((' → logprob: -3.745173454284668
    6. '1' → logprob: -4.620173454284668
    7. '(t' → logprob: -4.620173454284668
    8. '(j' → logprob: -4.745173454284668
    9. 'r' → logprob: -5.495173454284668
    10. '(((' → logprob: -6.245173454284668

Token 927: ' bits' (ID: 18189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17276421189308167
    2. '((' → logprob: -2.422764301300049
    3. 'r' → logprob: -3.922764301300049
    4. ' (' → logprob: -4.172764301300049
    5. '(j' → logprob: -4.547764301300049
    6. '(r' → logprob: -4.672764301300049
    7. '1' → logprob: -5.172764301300049
    8. '0' → logprob: -6.547764301300049
    9. ' ((' → logprob: -6.547764301300049
    10. '(k' → logprob: -6.547764301300049

Token 928: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31742238998413086
    2. '((' → logprob: -2.567422389984131
    3. '<<' → logprob: -3.317422389984131
    4. ' (' → logprob: -3.442422389984131
    5. '[j' → logprob: -3.942422389984131
    6. '(j' → logprob: -4.067422389984131
    7. '(r' → logprob: -4.192422389984131
    8. '&' → logprob: -4.317422389984131
    9. '[(' → logprob: -4.567422389984131
    10. '[r' → logprob: -4.942422389984131

Token 929: ' faible' (ID: 75786)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1003726720809937
    2. '(r' → logprob: -1.4753726720809937
    3. '(j' → logprob: -1.6003726720809937
    4. 'm' → logprob: -2.725372791290283
    5. '(m' → logprob: -2.975372791290283
    6. 'j' → logprob: -3.100372791290283
    7. '((' → logprob: -3.475372791290283
    8. '(k' → logprob: -4.225372791290283
    9. '(i' → logprob: -4.975372791290283
    10. '(z' → logprob: -5.100372791290283

Token 930: ' poids' (ID: 56058)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6083182692527771
    2. ' poids' → logprob: -1.2333183288574219
    3. 'weight' → logprob: -2.483318328857422
    4. '```' → logprob: -3.483318328857422
    5. 'z' → logprob: -3.608318328857422
    6. 'po' → logprob: -4.608318328857422
    7. 'bits' → logprob: -5.483318328857422
    8. ' weight' → logprob: -6.483318328857422
    9. ' r' → logprob: -6.483318328857422
    10. 'ordre' → logprob: -6.983318328857422

Token 931: ' de' (ID: 334)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.104932188987732
    2. '((' → logprob: -1.229932188987732
    3. '<<' → logprob: -2.2299323081970215
    4. 'r' → logprob: -2.4799323081970215
    5. '|' → logprob: -3.2299323081970215
    6. '[j' → logprob: -3.3549323081970215
    7. '(r' → logprob: -3.8549323081970215
    8. '>>' → logprob: -3.8549323081970215
    9. '[(' → logprob: -4.1049323081970215
    10. '+' → logprob: -4.3549323081970215

Token 932: ' j' (ID: 441)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0157034397125244
    2. 'm' → logprob: -1.5157034397125244
    3. '(r' → logprob: -2.1407034397125244
    4. '(j' → logprob: -2.5157034397125244
    5. '(m' → logprob: -2.6407034397125244
    6. 'j' → logprob: -2.6407034397125244
    7. '((' → logprob: -3.3907034397125244
    8. '(k' → logprob: -4.390703201293945
    9. 'z' → logprob: -4.640703201293945
    10. '(z' → logprob: -4.640703201293945

Token 933: ' (' (ID: 350)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.7716534733772278
    2. ' &' → logprob: -1.271653413772583
    3. '>>' → logprob: -1.646653413772583
    4. ' >>' → logprob: -3.646653413772583
    5. '>>(' → logprob: -5.021653652191162
    6. '           ' → logprob: -5.396653652191162
    7. '&(' → logprob: -5.521653652191162
    8. '<<' → logprob: -5.521653652191162
    9. '[j' → logprob: -5.771653652191162
    10. '((' → logprob: -6.021653652191162

Token 934: 'jus' (ID: 56271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5820508003234863
    2. '0' → logprob: -1.9570508003234863
    3. '(m' → logprob: -2.0820508003234863
    4. 'j' → logprob: -3.4570508003234863
    5. 'z' → logprob: -3.4570508003234863
    6. '&m' → logprob: -3.9570508003234863
    7. 'r' → logprob: -4.082050800323486
    8. '&' → logprob: -4.082050800323486
    9. ':' → logprob: -4.832050800323486
    10. '(j' → logprob: -4.957050800323486

Token 935: 'qu' (ID: 351)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.103111743927002
    2. '>>' → logprob: -1.353111743927002
    3. 'm' → logprob: -1.728111743927002
    4. 'r' → logprob: -2.478111743927002
    5. '>>>' → logprob: -3.478111743927002
    6. '```' → logprob: -3.978111743927002
    7. '<<' → logprob: -4.103111743927002
    8. '>>(' → logprob: -4.228111743927002
    9. 'j' → logprob: -4.978111743927002
    10. 'qu' → logprob: -5.103111743927002

Token 936: '’au' (ID: 61371)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06595094501972198
    2. '(r' → logprob: -3.815950870513916
    3. 'à' → logprob: -4.065950870513916
    4. 'z' → logprob: -5.065950870513916
    5. 'au' → logprob: -5.440950870513916
    6. '           ' → logprob: -5.815950870513916
    7. '(z' → logprob: -6.065950870513916
    8. '          ' → logprob: -6.065950870513916
    9. '         ' → logprob: -6.940950870513916
    10. ' à' → logprob: -7.315950870513916

Token 937: ' bit' (ID: 3546)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008585256524384022
    2. 'z' → logprob: -5.508585453033447
    3. '(r' → logprob: -5.883585453033447
    4. '(z' → logprob: -6.883585453033447
    5. 'm' → logprob: -8.133584976196289
    6. '(' → logprob: -8.633584976196289
    7. '(m' → logprob: -9.133584976196289
    8. ' (' → logprob: -10.133584976196289
    9. ' r' → logprob: -11.008584976196289
    10. '```' → logprob: -11.633584976196289

Token 938: ' z' (ID: 579)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02392905205488205
    2. '(r' → logprob: -4.148929119110107
    3. 'z' → logprob: -6.023929119110107
    4. '(z' → logprob: -6.273929119110107
    5. ' (' → logprob: -6.648929119110107
    6. '(' → logprob: -7.023929119110107
    7. ' r' → logprob: -8.02392864227295
    8. '(m' → logprob: -8.14892864227295
    9. 'm' → logprob: -8.52392864227295
    10. '0' → logprob: -8.89892864227295

Token 939: '-r' (ID: 6335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.642466127872467
    2. ')' → logprob: -1.0174660682678223
    3. '])' → logprob: -3.5174660682678223
    4. ' -' → logprob: -3.6424660682678223
    5. '-r' → logprob: -4.017466068267822
    6. 'r' → logprob: -4.142466068267822
    7. ']' → logprob: -5.392466068267822
    8. ' )' → logprob: -5.892466068267822
    9. '+' → logprob: -6.017466068267822
    10. ')]' → logprob: -6.017466068267822

Token 940: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5756919384002686
    2. ')' → logprob: -1.2006919384002686
    3. '-' → logprob: -2.9506919384002686
    4. '+r' → logprob: -3.7006919384002686
    5. '+m' → logprob: -3.8256919384002686
    6. ' +' → logprob: -3.9506919384002686
    7. ']' → logprob: -6.075692176818848
    8. '])' → logprob: -6.200692176818848
    9. ')]' → logprob: -6.325692176818848
    10. '```' → logprob: -6.575692176818848

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00459044985473156
    2. 'r' → logprob: -5.5045905113220215
    3. ' ' → logprob: -8.379590034484863
    4. '```' → logprob: -8.879590034484863
    5. 'm' → logprob: -9.879590034484863
    6. ' r' → logprob: -10.379590034484863
    7. 'z' → logprob: -10.629590034484863
    8. '-' → logprob: -11.129590034484863
    9. '2' → logprob: -12.254590034484863
    10. '`' → logprob: -13.129590034484863

Token 942: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04675472900271416
    2. ' )' → logprob: -3.546754837036133
    3. ']' → logprob: -5.671754837036133
    4. ')]' → logprob: -6.171754837036133
    5. '])' → logprob: -6.296754837036133
    6. '<<' → logprob: -6.671754837036133
    7. '```' → logprob: -6.921754837036133
    8. '-' → logprob: -7.046754837036133
    9. ' >>' → logprob: -7.296754837036133
    10. '+' → logprob: -7.296754837036133

Token 943: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2523210644721985
    2. '+' → logprob: -2.1273210048675537
    3. '(j' → logprob: -3.5023210048675537
    4. ' |' → logprob: -4.002321243286133
    5. '((' → logprob: -4.377321243286133
    6. '|' → logprob: -4.627321243286133
    7. '[j' → logprob: -5.127321243286133
    8. ' (' → logprob: -5.502321243286133
    9. ' >>' → logprob: -5.752321243286133
    10. '(' → logprob: -6.002321243286133

Token 944: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7792301177978516
    2. ' +' → logprob: -0.7792301177978516
    3. '|' → logprob: -3.9042301177978516
    4. ' |' → logprob: -4.279230117797852
    5. '((' → logprob: -4.654230117797852
    6. '(j' → logprob: -4.904230117797852
    7. '(' → logprob: -5.154230117797852
    8. ' (' → logprob: -5.279230117797852
    9. ']' → logprob: -6.029230117797852
    10. 'j' → logprob: -6.279230117797852

Token 945: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018186349421739578
    2. ' r' → logprob: -4.018186569213867
    3. 'not' → logprob: -11.018186569213867
    4. ' not' → logprob: -11.393186569213867
    5. '(r' → logprob: -12.643186569213867
    6. '   ' → logprob: -13.143186569213867
    7. ' ' → logprob: -13.893186569213867
    8. 'j' → logprob: -14.518186569213867
    9. '0' → logprob: -15.018186569213867
    10. 'f' → logprob: -15.018186569213867

Token 946: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6577425003051758
    2. ' <' → logprob: -0.7827425003051758
    3. ' !=' → logprob: -4.032742500305176
    4. '!=' → logprob: -5.032742500305176
    5. '<n' → logprob: -7.907742500305176
    6. '<len' → logprob: -9.407742500305176
    7. '<int' → logprob: -10.157742500305176
    8. '<i' → logprob: -11.282742500305176
    9. '<N' → logprob: -11.907742500305176
    10. '<size' → logprob: -12.032742500305176

Token 947: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.048178140074014664
    2. ' z' → logprob: -3.173178195953369
    3. '0' → logprob: -5.298178195953369
    4. ' ' → logprob: -8.798177719116211
    5. '	z' → logprob: -12.173177719116211
    6. '   ' → logprob: -12.798177719116211
    7. 'r' → logprob: -13.548177719116211
    8. 'k' → logprob: -13.798177719116211
    9. '```' → logprob: -13.923177719116211
    10. '       ' → logprob: -14.298177719116211

Token 948: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023357518017292023
    2. ':
' → logprob: -3.773357629776001
    3. '           ' → logprob: -10.273357391357422
    4. ' and' → logprob: -10.523357391357422
    5. ' :' → logprob: -10.523357391357422
    6. ':
' → logprob: -11.273357391357422
    7. '               ' → logprob: -12.898357391357422
    8. '=' → logprob: -13.148357391357422
    9. ' :
' → logprob: -13.398357391357422
    10. '       ' → logprob: -14.023357391357422

Token 949: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2020001858472824
    2. ' d' → logprob: -2.577000141143799
    3. 'd' → logprob: -3.202000141143799
    4. '           ' → logprob: -3.452000141143799
    5. ' k' → logprob: -4.327000141143799
    6. 'k' → logprob: -4.327000141143799
    7. '```' → logprob: -6.202000141143799
    8. '   ' → logprob: -6.452000141143799
    9. '                   ' → logprob: -6.827000141143799
    10. ' s' → logprob: -8.327000617980957

Token 950: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.008870658464729786
    2. ' d' → logprob: -4.758870601654053
    3. 'idx' → logprob: -9.258871078491211
    4. '           ' → logprob: -10.133871078491211
    5. '   ' → logprob: -10.883871078491211
    6. '               ' → logprob: -11.133871078491211
    7. ' idx' → logprob: -11.133871078491211
    8. 'k' → logprob: -11.508871078491211
    9. 'f' → logprob: -11.758871078491211
    10. 'index' → logprob: -11.883871078491211

Token 951: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004450892156455666
    2. '[i' → logprob: -8.125445365905762
    3. 'k' → logprob: -9.250445365905762
    4. ' [' → logprob: -11.000445365905762
    5. '   ' → logprob: -11.375445365905762
    6. '[' → logprob: -11.375445365905762
    7. '[z' → logprob: -12.375445365905762
    8. '           ' → logprob: -13.375445365905762
    9. '[r' → logprob: -13.375445365905762
    10. '       ' → logprob: -14.250445365905762

Token 952: '-r' (ID: 6335)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2503455579280853
    2. '[j' → logprob: -1.6253455877304077
    3. '[k' → logprob: -3.750345468521118
    4. '[' → logprob: -7.375345706939697
    5. ']' → logprob: -8.250345230102539
    6. ' ][' → logprob: -9.875345230102539
    7. '   ' → logprob: -10.125345230102539
    8. '[i' → logprob: -10.500345230102539
    9. 'k' → logprob: -10.875345230102539
    10. 'j' → logprob: -10.875345230102539

Token 953: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02657766081392765
    2. '[j' → logprob: -3.6515777111053467
    3. '[(' → logprob: -9.151577949523926
    4. '[' → logprob: -9.651577949523926
    5. ']' → logprob: -9.776577949523926
    6. ' ][' → logprob: -10.651577949523926
    7. '   ' → logprob: -11.651577949523926
    8. 'j' → logprob: -12.651577949523926
    9. '[((' → logprob: -13.401577949523926
    10. '[[' → logprob: -13.526577949523926

Token 954: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3951137959957123
    2. '(j' → logprob: -1.1451138257980347
    3. '(((' → logprob: -5.145113945007324
    4. 'j' → logprob: -6.895113945007324
    5. ' ((' → logprob: -7.645113945007324
    6. ' (' → logprob: -7.645113945007324
    7. '(' → logprob: -8.020113945007324
    8. '   ' → logprob: -10.770113945007324
    9. '((((' → logprob: -11.020113945007324
    10. ' ' → logprob: -11.395113945007324

Token 955: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23494693636894226
    2. '(j' → logprob: -1.6099469661712646
    3. '((' → logprob: -4.7349467277526855
    4. '(' → logprob: -8.109947204589844
    5. ' (' → logprob: -8.609947204589844
    6. ' j' → logprob: -8.984947204589844
    7. '(((' → logprob: -9.859947204589844
    8. ' ((' → logprob: -11.359947204589844
    9. '   ' → logprob: -11.859947204589844
    10. '(k' → logprob: -12.859947204589844

Token 956: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.1852816641330719
    2. '<<' → logprob: -2.810281753540039
    3. '>>(' → logprob: -2.935281753540039
    4. '&' → logprob: -3.560281753540039
    5. ' >>' → logprob: -4.685281753540039
    6. ']' → logprob: -5.310281753540039
    7. '(j' → logprob: -5.560281753540039
    8. ')' → logprob: -6.685281753540039
    9. '(' → logprob: -6.935281753540039
    10. ' &' → logprob: -7.310281753540039

Token 957: ' z' (ID: 579)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.19091996550559998
    2. 'r' → logprob: -1.8159199953079224
    3. '(z' → logprob: -4.690919876098633
    4. '(m' → logprob: -6.940919876098633
    5. 'z' → logprob: -7.940919876098633
    6. ' (' → logprob: -8.190919876098633
    7. '(' → logprob: -8.315919876098633
    8. 'm' → logprob: -10.690919876098633
    9. ' r' → logprob: -11.440919876098633
    10. '           ' → logprob: -11.815919876098633

Token 958: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06008684262633324
    2. ')<<' → logprob: -3.435086727142334
    3. ')+(' → logprob: -4.685086727142334
    4. '<<' → logprob: -4.935086727142334
    5. ')+' → logprob: -5.935086727142334
    6. 'r' → logprob: -6.810086727142334
    7. ')][' → logprob: -6.810086727142334
    8. '[r' → logprob: -7.310086727142334
    9. '(r' → logprob: -7.560086727142334
    10. ']<<' → logprob: -7.810086727142334

Token 959: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0103691928088665
    2. ']<<' → logprob: -5.885369300842285
    3. '<<(' → logprob: -6.010369300842285
    4. ')<<' → logprob: -6.260369300842285
    5. ' <<' → logprob: -6.760369300842285
    6. '|' → logprob: -7.010369300842285
    7. ')' → logprob: -7.760369300842285
    8. ']' → logprob: -8.385369300842285
    9. '|(' → logprob: -9.260369300842285
    10. '((' → logprob: -9.260369300842285

Token 960: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.007085453253239393
    2. 'r' → logprob: -5.13208532333374
    3. ' (' → logprob: -7.50708532333374
    4. '(' → logprob: -7.63208532333374
    5. '(z' → logprob: -9.257085800170898
    6. '((' → logprob: -12.257085800170898
    7. '           ' → logprob: -12.507085800170898
    8. '(m' → logprob: -12.507085800170898
    9. '(k' → logprob: -13.257085800170898
    10. ' r' → logprob: -13.257085800170898

Token 961: 'z' (ID: 89)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16676181554794312
    2. 'r' → logprob: -2.041761875152588
    3. '(z' → logprob: -3.791761875152588
    4. 'z' → logprob: -7.666761875152588
    5. '(k' → logprob: -8.41676139831543
    6. '(' → logprob: -8.54176139831543
    7. ' (' → logprob: -8.79176139831543
    8. '(i' → logprob: -8.91676139831543
    9. '(j' → logprob: -10.79176139831543
    10. 'k' → logprob: -11.54176139831543

Token 962: '-r' (ID: 6335)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13433709740638733
    2. '(r' → logprob: -2.3843371868133545
    3. ')' → logprob: -4.634336948394775
    4. '-r' → logprob: -5.384336948394775
    5. '(' → logprob: -5.509336948394775
    6. '+' → logprob: -5.634336948394775
    7. ' (' → logprob: -5.884336948394775
    8. '(z' → logprob: -6.384336948394775
    9. ')+' → logprob: -6.759336948394775
    10. '-' → logprob: -7.134336948394775

Token 963: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20324784517288208
    2. ']' → logprob: -2.7032477855682373
    3. ')+' → logprob: -3.0782477855682373
    4. ')+(' → logprob: -3.2032477855682373
    5. ']+' → logprob: -4.203248023986816
    6. '|' → logprob: -4.453248023986816
    7. 'r' → logprob: -6.703248023986816
    8. '+' → logprob: -7.453248023986816
    9. '][' → logprob: -7.953248023986816
    10. ' )' → logprob: -8.078248023986816

Token 964: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.003915018867701292
    2. ' |' → logprob: -5.878914833068848
    3. '+' → logprob: -7.503914833068848
    4. ')' → logprob: -8.253914833068848
    5. ')+' → logprob: -8.878914833068848
    6. '|(' → logprob: -10.003914833068848
    7. ')+(' → logprob: -10.253914833068848
    8. ' +' → logprob: -10.753914833068848
    9. ']+' → logprob: -11.378914833068848
    10. '```' → logprob: -11.628914833068848

Token 965: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.024219881743192673
    2. '((' → logprob: -4.274219989776611
    3. ' (' → logprob: -4.649219989776611
    4. 'j' → logprob: -8.274219512939453
    5. ' ((' → logprob: -9.024219512939453
    6. '(' → logprob: -10.524219512939453
    7. '(m' → logprob: -10.774219512939453
    8. ' j' → logprob: -11.899219512939453
    9. '(((' → logprob: -12.524219512939453
    10. '[j' → logprob: -14.399219512939453

Token 966: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.035504236817359924
    2. '(j' → logprob: -3.5355043411254883
    3. 'm' → logprob: -5.410504341125488
    4. '(m' → logprob: -6.910504341125488
    5. ' j' → logprob: -9.160504341125488
    6. '((' → logprob: -9.410504341125488
    7. ' (' → logprob: -9.660504341125488
    8. '(' → logprob: -12.285504341125488
    9. '   ' → logprob: -12.910504341125488
    10. '0' → logprob: -13.285504341125488

Token 967: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.067206010222435
    2. '&m' → logprob: -3.4422059059143066
    3. ' &' → logprob: -3.5672059059143066
    4. '&(' → logprob: -6.192205905914307
    5. '&r' → logprob: -6.942205905914307
    6. '(m' → logprob: -7.192205905914307
    7. '>>' → logprob: -8.067206382751465
    8. '>>(' → logprob: -8.817206382751465
    9. '&amp' → logprob: -8.942206382751465
    10. '<<' → logprob: -9.442206382751465

Token 968: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00023798657639417797
    2. ' ((' → logprob: -8.500238418579102
    3. '(m' → logprob: -11.125238418579102
    4. 'm' → logprob: -11.375238418579102
    5. '(' → logprob: -12.375238418579102
    6. '(((' → logprob: -12.875238418579102
    7. ' ' → logprob: -13.750238418579102
    8. '   ' → logprob: -16.0002384185791
    9. ' m' → logprob: -16.2502384185791
    10. '  ' → logprob: -17.0002384185791

Token 969: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.531315314830863e-06
    2. '((' → logprob: -13.625003814697266
    3. ' (' → logprob: -13.875003814697266
    4. '1' → logprob: -14.250003814697266
    5. '           ' → logprob: -15.250003814697266
    6. '               ' → logprob: -15.500003814697266
    7. '   ' → logprob: -16.125003814697266
    8. '       ' → logprob: -17.375003814697266
    9. '                   ' → logprob: -17.500003814697266
    10. '         ' → logprob: -18.625003814697266

Token 970: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3722915053367615
    2. '(' → logprob: -1.4972915649414062
    3. '<<(' → logprob: -3.2472915649414062
    4. '1' → logprob: -3.3722915649414062
    5. ' <<' → logprob: -4.872291564941406
    6. '((' → logprob: -5.247291564941406
    7. ' (' → logprob: -7.247291564941406
    8. '   ' → logprob: -9.747291564941406
    9. '<(' → logprob: -9.747291564941406
    10. '           ' → logprob: -10.622291564941406

Token 971: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -2.8444881536415778e-05
    2. '(r' → logprob: -10.750028610229492
    3. ' (' → logprob: -12.500028610229492
    4. 'z' → logprob: -12.875028610229492
    5. '(' → logprob: -15.750028610229492
    6. '(j' → logprob: -15.875028610229492
    7. '(k' → logprob: -16.000028610229492
    8. '(q' → logprob: -16.125028610229492
    9. '((' → logprob: -16.750028610229492
    10. '[z' → logprob: -17.125028610229492

Token 972: 'z' (ID: 89)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -7.624555291840807e-05
    2. 'z' → logprob: -9.500076293945312
    3. ' (' → logprob: -13.750076293945312
    4. '(' → logprob: -15.500076293945312
    5. '(r' → logprob: -16.375076293945312
    6. ' z' → logprob: -17.500076293945312
    7. '[z' → logprob: -18.250076293945312
    8. '           ' → logprob: -19.000076293945312
    9. '(q' → logprob: -19.500076293945312
    10. '(j' → logprob: -19.750076293945312

Token 973: '-r' (ID: 6335)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.784699022769928
    2. 'r' → logprob: -1.2846989631652832
    3. '(r' → logprob: -1.4096989631652832
    4. 'z' → logprob: -4.034698963165283
    5. '           ' → logprob: -6.284698963165283
    6. ' (' → logprob: -6.784698963165283
    7. '               ' → logprob: -7.409698963165283
    8. '       ' → logprob: -7.784698963165283
    9. '   ' → logprob: -8.659699440002441
    10. '(j' → logprob: -8.784699440002441

Token 974: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3875129520893097
    2. ')-' → logprob: -1.1375129222869873
    3. ' )' → logprob: -8.887513160705566
    4. 'r' → logprob: -8.887513160705566
    5. '-' → logprob: -9.262513160705566
    6. '0' → logprob: -9.637513160705566
    7. '1' → logprob: -10.012513160705566
    8. 'z' → logprob: -10.137513160705566
    9. '   ' → logprob: -10.762513160705566
    10. '```' → logprob: -10.887513160705566

Token 975: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9072439670562744
    2. ')-' → logprob: -1.1572439670562744
    3. ')' → logprob: -1.4072439670562744
    4. '1' → logprob: -3.4072439670562744
    5. ' -' → logprob: -5.907243728637695
    6. '(' → logprob: -7.157243728637695
    7. 'r' → logprob: -8.282243728637695
    8. ')-(' → logprob: -9.782243728637695
    9. ' ' → logprob: -10.282243728637695
    10. '-r' → logprob: -10.407243728637695

Token 976: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '(' → logprob: -20.0
    4. '0' → logprob: -20.375
    5. '```' → logprob: -21.375
    6. '   ' → logprob: -21.625
    7. '((' → logprob: -21.75
    8. '１' → logprob: -22.25
    9. '``' → logprob: -22.25
    10. '           ' → logprob: -22.5

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.75
    5. '0' → logprob: -19.125
    6. '2' → logprob: -19.125
    7. '۱' → logprob: -19.125
    8. ')' → logprob: -19.125
    9. '11' → logprob: -19.625
    10. '``' → logprob: -19.75

Token 978: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.025107532739639282
    2. '))' → logprob: -3.9001076221466064
    3. ')' → logprob: -5.525107383728027
    4. ')])' → logprob: -7.900107383728027
    5. ' )' → logprob: -9.525107383728027
    6. ')))' → logprob: -9.775107383728027
    7. ')]
' → logprob: -11.150107383728027
    8. '               ' → logprob: -11.400107383728027
    9. '])]' → logprob: -11.775107383728027
    10. ')}' → logprob: -12.150107383728027

Token 979: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002032253658398986
    2. ']+=' → logprob: -6.252032279968262
    3. ' ]' → logprob: -10.002032279968262
    4. ')]' → logprob: -10.877032279968262
    5. ']+' → logprob: -10.877032279968262
    6. '               ' → logprob: -11.877032279968262
    7. '           ' → logprob: -12.627032279968262
    8. '+]' → logprob: -12.752032279968262
    9. ')' → logprob: -13.377032279968262
    10. '+=' → logprob: -13.627032279968262

Token 980: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038149360567331314
    2. ' +=' → logprob: -3.288149356842041
    3. ']+=' → logprob: -10.4131498336792
    4. '   ' → logprob: -10.5381498336792
    5. '               ' → logprob: -10.7881498336792
    6. '                   ' → logprob: -11.0381498336792
    7. '           ' → logprob: -12.6631498336792
    8. '```' → logprob: -13.0381498336792
    9. '+' → logprob: -13.2881498336792
    10. '                ' → logprob: -13.6631498336792

Token 981: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04860054701566696
    2. ' d' → logprob: -3.048600435256958
    3. '                   ' → logprob: -12.173600196838379
    4. '               ' → logprob: -12.673600196838379
    5. '   ' → logprob: -13.548600196838379
    6. ' ' → logprob: -13.923600196838379
    7. '                       ' → logprob: -14.298600196838379
    8. '	d' → logprob: -14.673600196838379
    9. '           ' → logprob: -15.173600196838379
    10. 'k' → logprob: -15.173600196838379

Token 982: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.004628772847354412
    2. 'k' → logprob: -5.379628658294678
    3. '```' → logprob: -12.504629135131836
    4. '{k' → logprob: -13.379629135131836
    5. '(k' → logprob: -13.504629135131836
    6. ' k' → logprob: -14.004629135131836
    7. '
' → logprob: -15.254629135131836
    8. ' [' → logprob: -15.629629135131836
    9. '	k' → logprob: -15.754629135131836
    10. '][' → logprob: -16.379629135131836

Token 983: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.583736002445221
    2. '][' → logprob: -0.833736002445221
    3. '[j' → logprob: -4.958735942840576
    4. '[r' → logprob: -8.083736419677734
    5. '[' → logprob: -9.083736419677734
    6. ']' → logprob: -9.958736419677734
    7. 'k' → logprob: -10.083736419677734
    8. '-k' → logprob: -10.208736419677734
    9. ')[' → logprob: -10.458736419677734
    10. '   ' → logprob: -10.833736419677734

Token 984: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. ' j' → logprob: -14.500000953674316
    3. '[j' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -18.375
    6. '	j' → logprob: -18.5
    7. ']' → logprob: -19.75
    8. ' ' → logprob: -20.875
    9. '`' → logprob: -21.125
    10. '[' → logprob: -21.25

Token 985: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 986: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 987: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 988: ' Recherche' (ID: 114815)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: ' du' (ID: 1462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7311769723892212
    2. 'for' → logprob: -1.4811769723892212
    3. ' for' → logprob: -2.3561768531799316
    4. ' max' → logprob: -2.8561768531799316
    5. ' =' → logprob: -3.2311768531799316
    6. '   ' → logprob: -3.9811768531799316
    7. '=' → logprob: -4.106176853179932
    8. 's' → logprob: -4.731176853179932
    9. 'count' → logprob: -5.356176853179932
    10. '```' → logprob: -5.356176853179932

Token 990: ' premier' (ID: 15506)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03989453241229057
    2. 'K' → logprob: -3.7898945808410645
    3. 'i' → logprob: -5.2898945808410645
    4. 'maximum' → logprob: -5.6648945808410645
    5. 'ans' → logprob: -6.6648945808410645
    6. 'N' → logprob: -7.0398945808410645
    7. ' max' → logprob: -7.1648945808410645
    8. 'best' → logprob: -7.1648945808410645
    9. 'answer' → logprob: -7.2898945808410645
    10. 'res' → logprob: -7.4148945808410645

Token 991: ' indice' (ID: 90848)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8525707721710205
    2. 'k' → logprob: -1.8525707721710205
    3. 'for' → logprob: -1.9775707721710205
    4. 'j' → logprob: -2.3525707721710205
    5. ' i' → logprob: -3.2275707721710205
    6. ' for' → logprob: -3.6025707721710205
    7. 'b' → logprob: -4.352570533752441
    8. 'x' → logprob: -4.352570533752441
    9. '```' → logprob: -4.602570533752441
    10. ' j' → logprob: -4.727570533752441

Token 992: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5389822721481323
    2. ' i' → logprob: -1.5389822721481323
    3. 'j' → logprob: -2.413982391357422
    4. 'k' → logprob: -3.413982391357422
    5. ' j' → logprob: -3.538982391357422
    6. 'for' → logprob: -4.663982391357422
    7. ' for' → logprob: -5.038982391357422
    8. 'x' → logprob: -5.288982391357422
    9. ' k' → logprob: -5.538982391357422
    10. '   ' → logprob: -5.663982391357422

Token 993: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5355583429336548
    2. 'i' → logprob: -2.0355582237243652
    3. 'k' → logprob: -2.9105582237243652
    4. ' j' → logprob: -2.9105582237243652
    5. 'x' → logprob: -3.2855582237243652
    6. 'b' → logprob: -3.4105582237243652
    7. ' i' → logprob: -4.160558223724365
    8. '0' → logprob: -4.410558223724365
    9. 'l' → logprob: -4.410558223724365
    10. 'for' → logprob: -4.660558223724365

Token 994: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.347107172012329
    2. 'in' → logprob: -1.472107172012329
    3. ' in' → logprob: -1.472107172012329
    4. 'for' → logprob: -1.597107172012329
    5. ' for' → logprob: -2.972107172012329
    6. '   ' → logprob: -4.47210693359375
    7. ')' → logprob: -4.84710693359375
    8. 'dans' → logprob: -6.09710693359375
    9. ' ,' → logprob: -7.22210693359375
    10. ',j' → logprob: -7.47210693359375

Token 995: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0747250318527222
    2. '```' → logprob: -1.0747250318527222
    3. 'for' → logprob: -2.0747251510620117
    4. ' in' → logprob: -2.9497251510620117
    5. ' for' → logprob: -3.1997251510620117
    6. ')' → logprob: -3.6997251510620117
    7. '=' → logprob: -3.9497251510620117
    8. 'dans' → logprob: -4.449725151062012
    9. ' =' → logprob: -4.949725151062012
    10. '[' → logprob: -4.949725151062012

Token 996: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6893912553787231
    2. 'R' → logprob: -1.3143912553787231
    3. 'Q' → logprob: -1.5643912553787231
    4. 'range' → logprob: -3.9393911361694336
    5. 'f' → logprob: -7.314391136169434
    6. ' range' → logprob: -10.189391136169434
    7. '0' → logprob: -11.064391136169434
    8. 'j' → logprob: -11.564391136169434
    9. '```' → logprob: -11.689391136169434
    10. 'Range' → logprob: -11.689391136169434

Token 997: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004727380350232124
    2. 'i' → logprob: -5.379727363586426
    3. '[' → logprob: -9.379727363586426
    4. '[N' → logprob: -11.504727363586426
    5. ' i' → logprob: -12.379727363586426
    6. ' [' → logprob: -13.629727363586426
    7. '0' → logprob: -13.629727363586426
    8. '   ' → logprob: -13.754727363586426
    9. '```' → logprob: -14.004727363586426
    10. '{i' → logprob: -14.504727363586426

Token 998: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0432429313659668
    2. ']' → logprob: -1.7932429313659668
    3. '[j' → logprob: -1.9182429313659668
    4. ')' → logprob: -2.043242931365967
    5. '[i' → logprob: -2.543242931365967
    6. 'for' → logprob: -3.168242931365967
    7. '```' → logprob: -4.043242931365967
    8. 'indices' → logprob: -4.543242931365967
    9. '[]' → logprob: -4.668242931365967
    10. ' for' → logprob: -4.793242931365967

Token 999: ' dont' (ID: 11562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016157887876033783
    2. ' for' → logprob: -5.141158103942871
    3. '```' → logprob: -5.641158103942871
    4. '   ' → logprob: -5.891158103942871
    5. 'with' → logprob: -7.141158103942871
    6. '[j' → logprob: -7.391158103942871
    7. 'in' → logprob: -8.016158103942871
    8. 'range' → logprob: -8.141158103942871
    9. '[' → logprob: -8.391158103942871
    10. '=' → logprob: -8.391158103942871

Token 1000: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022305480670183897
    2. ' d' → logprob: -6.127230644226074
    3. 'Q' → logprob: -10.877230644226074
    4. ' ' → logprob: -11.627230644226074
    5. 'j' → logprob: -12.252230644226074
    6. 'len' → logprob: -12.752230644226074
    7. '   ' → logprob: -13.002230644226074
    8. '```' → logprob: -13.252230644226074
    9. 'R' → logprob: -13.377230644226074
    10. '1' → logprob: -14.502230644226074

Token 1001: ' valeur' (ID: 41664)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7181293368339539
    2. 'd' → logprob: -0.8431293368339539
    3. 'val' → logprob: -2.7181293964385986
    4. ' value' → logprob: -4.3431291580200195
    5. ' valeur' → logprob: -6.8431291580200195
    6. 'f' → logprob: -7.5931291580200195
    7. ' d' → logprob: -7.8431291580200195
    8. 'for' → logprob: -8.71812915802002
    9. '>' → logprob: -8.96812915802002
    10. 'v' → logprob: -9.09312915802002

Token 1002: ' dépasse' (ID: 165701)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018984613940119743
    2. ' >' → logprob: -4.393984794616699
    3. '[' → logprob: -6.643984794616699
    4. '!=' → logprob: -6.768984794616699
    5. 's' → logprob: -7.518984794616699
    6. ' !=' → logprob: -7.893984794616699
    7. '>=' → logprob: -8.1439847946167
    8. ')' → logprob: -8.2689847946167
    9. 'for' → logprob: -8.2689847946167
    10. '```' → logprob: -8.2689847946167

Token 1003: ' ou' (ID: 2031)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05462000146508217
    2. ' ' → logprob: -3.1796200275421143
    3. 'K' → logprob: -5.304619789123535
    4. '1' → logprob: -5.804619789123535
    5. ' K' → logprob: -6.304619789123535
    6. '=' → logprob: -6.804619789123535
    7. '100' → logprob: -7.679619789123535
    8. '```' → logprob: -9.304619789123535
    9. '10' → logprob: -10.804619789123535
    10. ' =' → logprob: -11.054619789123535

Token 1004: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006763351848348975
    2. '0' → logprob: -8.125676155090332
    3. '=#' → logprob: -8.875676155090332
    4. '=j' → logprob: -10.250676155090332
    5. '```' → logprob: -10.250676155090332
    6. '==' → logprob: -10.500676155090332
    7. '>=' → logprob: -10.625676155090332
    8. '#' → logprob: -10.750676155090332
    9. '=i' → logprob: -11.000676155090332
    10. 'égal' → logprob: -11.375676155090332

Token 1005: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.003093220293521881
    2. 'al' → logprob: -6.128093242645264
    3. '=' → logprob: -7.503093242645264
    4. '```' → logprob: -9.003092765808105
    5. 'l' → logprob: -9.753092765808105
    6. 'gal' → logprob: -10.253092765808105
    7. 'de' → logprob: -11.003092765808105
    8. 't' → logprob: -11.253092765808105
    9. 'q' → logprob: -11.378092765808105
    10. 'alde' → logprob: -11.378092765808105

Token 1006: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8701420426368713
    2. '1' → logprob: -1.1201419830322266
    3. '100' → logprob: -2.4951419830322266
    4. '2' → logprob: -3.4951419830322266
    5. '=' → logprob: -3.8701419830322266
    6. '(' → logprob: -3.8701419830322266
    7. ' ' → logprob: -3.8701419830322266
    8. '>=' → logprob: -4.120141983032227
    9. '10' → logprob: -4.495141983032227
    10. ' K' → logprob: -4.745141983032227

Token 1007: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011764398775994778
    2. '1' → logprob: -4.5117645263671875
    3. ' K' → logprob: -7.6367645263671875
    4. '2' → logprob: -8.636764526367188
    5. ' ' → logprob: -10.886764526367188
    6. '```' → logprob: -11.386764526367188
    7. '0' → logprob: -11.761764526367188
    8. '100' → logprob: -12.011764526367188
    9. '   ' → logprob: -12.136764526367188
    10. '10' → logprob: -13.261764526367188

Token 1008: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06876181066036224
    2. ' for' → logprob: -2.8187618255615234
    3. '   ' → logprob: -5.943761825561523
    4. '```' → logprob: -6.068761825561523
    5. '
' → logprob: -6.818761825561523
    6. ':' → logprob: -8.193761825561523
    7. '    
' → logprob: -8.193761825561523
    8. ':
' → logprob: -9.943761825561523
    9. ' 
' → logprob: -10.693761825561523
    10. '=' → logprob: -10.693761825561523

Token 1009: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002922206884250045
    2. ' for' → logprob: -6.252922058105469
    3. '```' → logprob: -7.002922058105469
    4. '   ' → logprob: -9.752922058105469
    5. '``' → logprob: -10.752922058105469
    6. 'j' → logprob: -13.127922058105469
    7. '    
' → logprob: -14.127922058105469
    8. '
' → logprob: -14.502922058105469
    9. '	for' → logprob: -15.502922058105469
    10. '       ' → logprob: -15.627922058105469

Token 1010: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006967080407775939
    2. ' for' → logprob: -8.125697135925293
    3. '```' → logprob: -8.125697135925293
    4. '   ' → logprob: -9.500697135925293
    5. '
' → logprob: -11.250697135925293
    6. '``' → logprob: -11.875697135925293
    7. '    
' → logprob: -12.125697135925293
    8. 'j' → logprob: -12.500697135925293
    9. '  
' → logprob: -15.375697135925293
    10. 'R' → logprob: -15.750697135925293

Token 1011: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019287518225610256
    2. ' j' → logprob: -6.251928806304932
    3. '```' → logprob: -16.376928329467773
    4. '	j' → logprob: -17.376928329467773
    5. 'd' → logprob: -17.626928329467773
    6. 'i' → logprob: -18.251928329467773
    7. ' ' → logprob: -18.376928329467773
    8. '0' → logprob: -18.501928329467773
    9. '$j' → logprob: -18.626928329467773
    10. '`' → logprob: -19.876928329467773

Token 1012: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04859020933508873
    2. ' in' → logprob: -3.0485901832580566
    3. '   ' → logprob: -14.548590660095215
    4. ' ' → logprob: -14.548590660095215
    5. ',' → logprob: -14.923590660095215
    6. '  ' → logprob: -14.923590660095215
    7. '	in' → logprob: -15.423590660095215
    8. ')' → logprob: -15.548590660095215
    9. 'In' → logprob: -15.798590660095215
    10. '```' → logprob: -16.1735897064209

Token 1013: ' R' (ID: 460)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.014438135549426079
    2. 'd' → logprob: -4.764438152313232
    3. 'R' → logprob: -5.264438152313232
    4. 'range' → logprob: -7.389438152313232
    5. ' Q' → logprob: -11.889437675476074
    6. ' range' → logprob: -12.889437675476074
    7. '(Q' → logprob: -13.139437675476074
    8. '`' → logprob: -13.264437675476074
    9. 'Range' → logprob: -13.889437675476074
    10. 'f' → logprob: -14.889437675476074

Token 1014: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.012530489824712276
    2. '(' → logprob: -4.387530326843262
    3. 'len' → logprob: -11.387530326843262
    4. '[len' → logprob: -13.012530326843262
    5. '((' → logprob: -13.387530326843262
    6. '0' → logprob: -13.512530326843262
    7. '(length' → logprob: -13.637530326843262
    8. '<len' → logprob: -14.387530326843262
    9. '```' → logprob: -14.512530326843262
    10. '(size' → logprob: -14.887530326843262

Token 1015: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2888471484184265
    2. '2' → logprob: -1.6638472080230713
    3. '1' → logprob: -3.6638472080230713
    4. '(' → logprob: -3.9138472080230713
    5. '0' → logprob: -4.788846969604492
    6. '(len' → logprob: -4.913846969604492
    7. ' len' → logprob: -8.788846969604492
    8. '`' → logprob: -11.663846969604492
    9. '```' → logprob: -11.788846969604492
    10. ' ' → logprob: -12.163846969604492

Token 1016: ' <<' (ID: 2256)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.35645899176597595
    2. '(len' → logprob: -1.7314590215682983
    3. '(' → logprob: -3.231458902359009
    4. '<<' → logprob: -3.231458902359009
    5. '):' → logprob: -4.106459140777588
    6. ')' → logprob: -4.356459140777588
    7. '[i' → logprob: -4.731459140777588
    8. '):
' → logprob: -6.106459140777588
    9. '   ' → logprob: -7.231459140777588
    10. ' <<' → logprob: -7.481459140777588

Token 1017: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5332478142227046e-05
    2. '(i' → logprob: -11.875015258789062
    3. ' i' → logprob: -12.750015258789062
    4. 'j' → logprob: -12.750015258789062
    5. '   ' → logprob: -14.750015258789062
    6. '(' → logprob: -14.750015258789062
    7. '1' → logprob: -15.000015258789062
    8. '0' → logprob: -15.000015258789062
    9. 'N' → logprob: -15.250015258789062
    10. '```' → logprob: -15.625015258789062

Token 1018: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02347082458436489
    2. '):' → logprob: -3.773470878601074
    3. '):
' → logprob: -9.273470878601074
    4. '   ' → logprob: -9.523470878601074
    5. ')' → logprob: -11.148470878601074
    6. ':' → logprob: -11.273470878601074
    7. '():
' → logprob: -11.523470878601074
    8. '       ' → logprob: -12.023470878601074
    9. ':
' → logprob: -12.273470878601074
    10. '):

' → logprob: -12.398470878601074

Token 1019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2323966920375824
    2. 'if' → logprob: -1.6073967218399048
    3. ' if' → logprob: -5.482396602630615
    4. '```' → logprob: -6.482396602630615
    5. '   ' → logprob: -6.732396602630615
    6. '<|end|>' → logprob: -10.857397079467773
    7. '``' → logprob: -11.357397079467773
    8. '	if' → logprob: -11.482397079467773
    9. '@if' → logprob: -11.857397079467773
    10. ' ' → logprob: -12.357397079467773

Token 1020: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006830069469287992
    2. '       ' → logprob: -7.625682830810547
    3. '           ' → logprob: -9.375682830810547
    4. ' if' → logprob: -9.375682830810547
    5. '```' → logprob: -10.625682830810547
    6. '   ' → logprob: -14.000682830810547
    7. '@if' → logprob: -15.750682830810547
    8. 'If' → logprob: -16.875682830810547
    9. '	if' → logprob: -17.125682830810547
    10. '``' → logprob: -17.500682830810547

Token 1021: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6932635307312012
    2. ' d' → logprob: -0.6932635307312012
    3. '       ' → logprob: -9.31826400756836
    4. '(d' → logprob: -11.69326400756836
    5. '           ' → logprob: -11.94326400756836
    6. '	d' → logprob: -11.94326400756836
    7. '   ' → logprob: -12.69326400756836
    8. ' ' → logprob: -14.94326400756836
    9. ')d' → logprob: -14.94326400756836
    10. '        ' → logprob: -15.19326400756836

Token 1022: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2471589798224159e-05
    2. 'i' → logprob: -11.500012397766113
    3. '[' → logprob: -13.625012397766113
    4. ' [' → logprob: -15.250012397766113
    5. '[j' → logprob: -15.250012397766113
    6. '```' → logprob: -15.625012397766113
    7. ' i' → logprob: -15.875012397766113
    8. '(i' → logprob: -16.00001335144043
    9. '{i' → logprob: -17.12501335144043
    10. '[
' → logprob: -17.75001335144043

Token 1023: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.457669562427327e-05
    2. '][' → logprob: -9.87507438659668
    3. '[' → logprob: -11.00007438659668
    4. '[i' → logprob: -12.87507438659668
    5. ')[' → logprob: -13.50007438659668
    6. 'j' → logprob: -14.12507438659668
    7. '```' → logprob: -14.50007438659668
    8. ' [' → logprob: -14.62507438659668
    9. ']' → logprob: -15.87507438659668
    10. '   ' → logprob: -16.00007438659668

Token 1024: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.961759259458631e-06
    2. '[j' → logprob: -13.125004768371582
    3. ' j' → logprob: -13.250004768371582
    4. '```' → logprob: -14.625004768371582
    5. '   ' → logprob: -14.875004768371582
    6. '][' → logprob: -16.0000057220459
    7. ']' → logprob: -16.8750057220459
    8. '	j' → logprob: -17.3750057220459
    9. '
' → logprob: -17.5000057220459
    10. 'i' → logprob: -17.5000057220459

Token 1025: ']' (ID: 60)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.9591597318649292
    2. ' >=' → logprob: -1.4591597318649292
    3. '>=' → logprob: -1.4591597318649292
    4. ']' → logprob: -1.9591597318649292
    5. '           ' → logprob: -5.459159851074219
    6. ')>=' → logprob: -5.584159851074219
    7. '       ' → logprob: -6.834159851074219
    8. ')' → logprob: -7.084159851074219
    9. '[' → logprob: -7.459159851074219
    10. ' ]' → logprob: -9.084159851074219

Token 1026: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.01112587470561266
    2. ' >=' → logprob: -4.5111260414123535
    3. '   ' → logprob: -9.886125564575195
    4. '>' → logprob: -11.636125564575195
    5. ']>=' → logprob: -11.761125564575195
    6. ')>=' → logprob: -12.386125564575195
    7. '≥' → logprob: -13.386125564575195
    8. '       ' → logprob: -13.761125564575195
    9. '           ' → logprob: -14.011125564575195
    10. '==' → logprob: -14.136125564575195

Token 1027: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -9.615255839889869e-05
    2. ' K' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.50009536743164
    4. '       ' → logprob: -17.75009536743164
    5. '	K' → logprob: -19.12509536743164
    6. '           ' → logprob: -19.25009536743164
    7. ' ' → logprob: -20.87509536743164
    8. '  ' → logprob: -21.62509536743164
    9. '    ' → logprob: -21.62509536743164
    10. '
' → logprob: -22.00009536743164

Token 1028: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05268912389874458
    2. ':
' → logprob: -3.0526890754699707
    3. '           ' → logprob: -5.552689075469971
    4. ':return' → logprob: -9.427689552307129
    5. '       ' → logprob: -9.927689552307129
    6. ' and' → logprob: -10.802689552307129
    7. ' :' → logprob: -11.177689552307129
    8. '):' → logprob: -11.427689552307129
    9. '```' → logprob: -12.052689552307129
    10. '):
' → logprob: -12.177689552307129

Token 1029: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16191568970680237
    2. '           ' → logprob: -1.91191565990448
    3. ' print' → logprob: -7.2869157791137695
    4. '       ' → logprob: -7.6619157791137695
    5. '```' → logprob: -7.6619157791137695
    6. '   ' → logprob: -10.53691577911377
    7. '``' → logprob: -11.66191577911377
    8. 'break' → logprob: -11.78691577911377
    9. '#' → logprob: -12.16191577911377
    10. '#print' → logprob: -12.28691577911377

Token 1030: ' I' (ID: 357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010596063220873475
    2. '           ' → logprob: -7.251059532165527
    3. ' print' → logprob: -8.001059532165527
    4. '```' → logprob: -11.251059532165527
    5. '       ' → logprob: -14.751059532165527
    6. 'break' → logprob: -15.251059532165527
    7. 'result' → logprob: -15.501059532165527
    8. '``' → logprob: -15.751059532165527
    9. '   ' → logprob: -16.126060485839844
    10. '               ' → logprob: -16.501060485839844

Token 1031: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348926842212677
    2. '=' → logprob: -1.2239267826080322
    3. '=i' → logprob: -7.848927021026611
    4. ',' → logprob: -10.723926544189453
    5. '[i' → logprob: -10.973926544189453
    6. 'n' → logprob: -11.473926544189453
    7. 'nt' → logprob: -11.973926544189453
    8. '   ' → logprob: -12.348926544189453
    9. 'f' → logprob: -12.348926544189453
    10. ' ' → logprob: -12.473926544189453

Token 1032: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5244433283805847
    2. 'i' → logprob: -0.8994433283805847
    3. ' j' → logprob: -7.27444314956665
    4. ' i' → logprob: -7.39944314956665
    5. '   ' → logprob: -11.524443626403809
    6. '(i' → logprob: -13.899443626403809
    7. ' ' → logprob: -14.649443626403809
    8. ' ' → logprob: -14.774443626403809
    9. '```' → logprob: -14.899443626403809
    10. '	i' → logprob: -15.399443626403809

Token 1033: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015680687502026558
    2. '
' → logprob: -7.376567840576172
    3. '<|end|>' → logprob: -8.626567840576172
    4. '               ' → logprob: -8.751567840576172
    5. '                   ' → logprob: -9.001567840576172
    6. '                           ' → logprob: -9.126567840576172
    7. '       ' → logprob: -9.626567840576172
    8. '                       ' → logprob: -9.626567840576172
    9. '```' → logprob: -10.501567840576172
    10. '                                   ' → logprob: -10.501567840576172

Token 1034: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001217813478433527
    2. '<|end|>' → logprob: -9.6251220703125
    3. 'break' → logprob: -11.1251220703125
    4. '		' → logprob: -11.2501220703125
    5. '
' → logprob: -11.7501220703125
    6. ' break' → logprob: -12.1251220703125
    7. ';' → logprob: -12.6251220703125
    8. '#' → logprob: -13.5001220703125
    9. '            
' → logprob: -13.7501220703125
    10. 'j' → logprob: -13.8751220703125

Token 1035: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006570079363882542
    2. '           ' → logprob: -5.506569862365723
    3. ' break' → logprob: -6.006569862365723
    4. '
' → logprob: -11.131569862365723
    5. 'BREAK' → logprob: -12.631569862365723
    6. '_break' → logprob: -13.131569862365723
    7. '-break' → logprob: -13.756569862365723
    8. 'Break' → logprob: -13.881569862365723
    9. 'I' → logprob: -14.006569862365723
    10. '            
' → logprob: -14.256569862365723

Token 1036: ' mém' (ID: 136981)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.002980790799483657
    2. ' break' → logprob: -6.127980709075928
    3. '           ' → logprob: -7.627980709075928
    4. '=' → logprob: -8.502981185913086
    5. 'I' → logprob: -9.627981185913086
    6. ' =' → logprob: -11.252981185913086
    7. '
' → logprob: -11.752981185913086
    8. '_break' → logprob: -12.002981185913086
    9. '#' → logprob: -12.502981185913086
    10. '            
' → logprob: -13.002981185913086

Token 1037: 'or' (ID: 267)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.5614463090896606
    2. 'or' → logprob: -2.686446189880371
    3. 'n' → logprob: -2.686446189880371
    4. '=' → logprob: -3.061446189880371
    5. 'rite' → logprob: -3.061446189880371
    6. 'r' → logprob: -3.186446189880371
    7. 'ore' → logprob: -3.311446189880371
    8. '#' → logprob: -3.311446189880371
    9. 'th' → logprob: -3.436446189880371
    10. 'x' → logprob: -3.686446189880371

Token 1038: 'ise' (ID: 1096)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5744397640228271
    2. 'r' → logprob: -1.8244397640228271
    3. 'ize' → logprob: -1.9494397640228271
    4. 'ise' → logprob: -2.949439764022827
    5. 't' → logprob: -3.199439764022827
    6. 'te' → logprob: -4.324440002441406
    7. 'n' → logprob: -6.074440002441406
    8. 'rite' → logprob: -6.074440002441406
    9. 'ze' → logprob: -6.199440002441406
    10. '```' → logprob: -6.324440002441406

Token 1039: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.1093578804284334e-05
    2. ' i' → logprob: -10.000051498413086
    3. 'I' → logprob: -13.000051498413086
    4. 'j' → logprob: -13.375051498413086
    5. '           ' → logprob: -14.500051498413086
    6. '	i' → logprob: -14.750051498413086
    7. '=i' → logprob: -15.250051498413086
    8. ')i' → logprob: -16.000051498413086
    9. '   ' → logprob: -16.250051498413086
    10. '
' → logprob: -16.500051498413086

Token 1040: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038658250123262405
    2. 'j' → logprob: -3.2886581420898438
    3. 'I' → logprob: -7.538658142089844
    4. ' i' → logprob: -9.538658142089844
    5. 'break' → logprob: -12.413658142089844
    6. ' j' → logprob: -12.663658142089844
    7. 'indice' → logprob: -13.788658142089844
    8. 'index' → logprob: -14.288658142089844
    9. '   ' → logprob: -14.913658142089844
    10. ' ' → logprob: -15.163658142089844

Token 1041: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006060097366571426
    2. '=' → logprob: -6.0060601234436035
    3. '<|end|>' → logprob: -6.8810601234436035
    4. ' =' → logprob: -7.1310601234436035
    5. 'I' → logprob: -7.3810601234436035
    6. '            ' → logprob: -8.506059646606445
    7. '               ' → logprob: -8.881059646606445
    8. 'i' → logprob: -9.131059646606445
    9. '          ' → logprob: -9.256059646606445
    10. '		' → logprob: -9.631059646606445

Token 1042: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.289473822107539e-05
    2. ' i' → logprob: -9.750062942504883
    3. 'I' → logprob: -12.375062942504883
    4. 'j' → logprob: -15.000062942504883
    5. ' ' → logprob: -18.500062942504883
    6. '	i' → logprob: -20.125062942504883
    7. '   ' → logprob: -20.875062942504883
    8. '`' → logprob: -21.000062942504883
    9. '```' → logprob: -21.375062942504883
    10. ' ' → logprob: -21.625062942504883

Token 1043: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002004410926019773
    2. '<|end|>' → logprob: -8.625200271606445
    3. '               ' → logprob: -12.250200271606445
    4. '		' → logprob: -12.500200271606445
    5. '            
' → logprob: -13.250200271606445
    6. '       ' → logprob: -13.250200271606445
    7. '```' → logprob: -13.625200271606445
    8. '                   ' → logprob: -13.875200271606445
    9. '<|end|>' → logprob: -13.875200271606445
    10. '   ' → logprob: -14.000200271606445

Token 1044: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05942489206790924
    2. 'break' → logprob: -2.934424877166748
    3. 'j' → logprob: -6.059424877166748
    4. ' break' → logprob: -6.434424877166748
    5. 'J' → logprob: -7.559424877166748
    6. '       ' → logprob: -11.684425354003906
    7. '               ' → logprob: -11.684425354003906
    8. ' j' → logprob: -11.809425354003906
    9. '   ' → logprob: -11.809425354003906
    10. 'Q' → logprob: -12.559425354003906

Token 1045: ' taille' (ID: 41644)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0007549546426162124
    2. ' break' → logprob: -8.375755310058594
    3. 'I' → logprob: -8.500755310058594
    4. '           ' → logprob: -9.375755310058594
    5. '#' → logprob: -9.875755310058594
    6. '   ' → logprob: -10.000755310058594
    7. '
' → logprob: -10.125755310058594
    8. '       ' → logprob: -10.500755310058594
    9. 'j' → logprob: -11.000755310058594
    10. 'val' → logprob: -12.000755310058594

Token 1046: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07279616594314575
    2. '<|end|>' → logprob: -3.197796106338501
    3. '=' → logprob: -5.94779634475708
    4. 'i' → logprob: -6.07279634475708
    5. '            ' → logprob: -6.19779634475708
    6. '       ' → logprob: -6.19779634475708
    7. '               ' → logprob: -6.44779634475708
    8. ')' → logprob: -6.57279634475708
    9. '          ' → logprob: -6.57279634475708
    10. ' =' → logprob: -6.69779634475708

Token 1047: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.39178338646888733
    2. 'l' → logprob: -1.266783356666565
    3. 's' → logprob: -3.7667834758758545
    4. 'I' → logprob: -5.266783237457275
    5. 'segment' → logprob: -5.766783237457275
    6. 'pattern' → logprob: -5.766783237457275
    7. 'j' → logprob: -6.016783237457275
    8. ' la' → logprob: -6.516783237457275
    9. 'mot' → logprob: -7.016783237457275
    10. 'i' → logprob: -7.266783237457275

Token 1048: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44797489047050476
    2. 'mot' → logprob: -1.5729749202728271
    3. 'sé' → logprob: -2.947974920272827
    4. 'plus' → logprob: -3.822974920272827
    5. 'suite' → logprob: -4.072974681854248
    6. 'sequence' → logprob: -4.072974681854248
    7. 'pattern' → logprob: -4.447974681854248
    8. 'chaine' → logprob: -4.697974681854248
    9. 'mas' → logprob: -5.447974681854248
    10. 'fen' → logprob: -5.822974681854248

Token 1049: '-table' (ID: 35909)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -1.2556653022766113
    2. '_s' → logprob: -1.6306653022766113
    3. 'sequence' → logprob: -1.6306653022766113
    4. 's' → logprob: -1.8806653022766113
    5. 'chaine' → logprob: -2.6306653022766113
    6. '_sequence' → logprob: -2.8806653022766113
    7. 'suite' → logprob: -4.005665302276611
    8. '-s' → logprob: -4.880665302276611
    9. ' sé' → logprob: -5.005665302276611
    10. ' sequence' → logprob: -6.255665302276611

Token 1050: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -12.750006675720215
    3. '               ' → logprob: -14.125006675720215
    4. '       ' → logprob: -14.500006675720215
    5. '		' → logprob: -15.000006675720215
    6. '.' → logprob: -15.000006675720215
    7. ',' → logprob: -15.000006675720215
    8. '<|end|>' → logprob: -15.250006675720215
    9. '*' → logprob: -15.500006675720215
    10. '                   ' → logprob: -15.625006675720215

Token 1051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.507972572464496e-05
    2. '```' → logprob: -9.75009536743164
    3. 'break' → logprob: -10.87509536743164
    4. '       ' → logprob: -11.87509536743164
    5. '``' → logprob: -13.25009536743164
    6. '   ' → logprob: -13.37509536743164
    7. '		' → logprob: -13.62509536743164
    8. '               ' → logprob: -13.87509536743164
    9. '                   ' → logprob: -14.00009536743164
    10. '\' → logprob: -14.00009536743164

Token 1052: ' J' (ID: 643)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.22697435319423676
    2. '           ' → logprob: -1.601974368095398
    3. ' break' → logprob: -7.1019744873046875
    4. 'J' (adapté à ' J') → logprob: -8.101974487304688
    5. '```' → logprob: -8.351974487304688
    6. '       ' → logprob: -10.101974487304688
    7. 'print' → logprob: -10.226974487304688
    8. 'B' → logprob: -10.351974487304688
    9. 'b' → logprob: -11.101974487304688
    10. '``' → logprob: -11.351974487304688

Token 1053: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143312215805054
    2. ' =' → logprob: -1.7014331817626953
    3. '=j' → logprob: -11.076433181762695
    4. '[' → logprob: -13.951433181762695
    5. '[j' → logprob: -14.451433181762695
    6. ' +=' → logprob: -14.951433181762695
    7. '           ' → logprob: -15.076433181762695
    8. '+=' → logprob: -15.201433181762695
    9. ' j' → logprob: -15.326433181762695
    10. '   ' → logprob: -15.326433181762695

Token 1054: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009115827269852161
    2. ' j' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.125911712646484
    4. '	j' → logprob: -17.250911712646484
    5. '$j' → logprob: -18.000911712646484
    6. ' ' → logprob: -18.875911712646484
    7. '[j' → logprob: -19.250911712646484
    8. ' ' → logprob: -19.500911712646484
    9. '_j' → logprob: -19.875911712646484
    10. '=j' → logprob: -20.125911712646484

Token 1055: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.011373155459296e-05
    2. '<|end|>' → logprob: -11.000030517578125
    3. '               ' → logprob: -12.750030517578125
    4. '            
' → logprob: -13.250030517578125
    5. '		' → logprob: -13.375030517578125
    6. '```' → logprob: -13.500030517578125
    7. '                   ' → logprob: -13.750030517578125
    8. '                           ' → logprob: -14.250030517578125
    9. 'break' → logprob: -14.250030517578125
    10. '<|end|>' → logprob: -14.375030517578125

Token 1056: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.676292231422849e-05
    2. '
' → logprob: -12.250017166137695
    3. '		' → logprob: -12.750017166137695
    4. 'break' → logprob: -12.750017166137695
    5. '            
' → logprob: -13.500017166137695
    6. '	       ' → logprob: -13.625017166137695
    7. '               ' → logprob: -14.250017166137695
    8. '<|end|>' → logprob: -14.500017166137695
    9. '                   ' → logprob: -14.625017166137695
    10. '       ' → logprob: -14.750017166137695

Token 1057: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0001637300301808864
    2. '           ' → logprob: -8.750164031982422
    3. ' break' → logprob: -12.250164031982422
    4. '       ' → logprob: -15.250164031982422
    5. '	break' → logprob: -16.000164031982422
    6. '   ' → logprob: -16.500164031982422
    7. '#' → logprob: -17.375164031982422
    8. 'Break' → logprob: -17.625164031982422
    9. 'BREAK' → logprob: -18.250164031982422
    10. '_break' → logprob: -19.375164031982422

Token 1058: ' mém' (ID: 136981)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.013614602386951447
    2. '=' → logprob: -4.513614654541016
    3. ' break' → logprob: -6.263614654541016
    4. 'I' → logprob: -8.013614654541016
    5. '#' → logprob: -9.263614654541016
    6. '+=' → logprob: -9.388614654541016
    7. ' =' → logprob: -10.013614654541016
    8. '
' → logprob: -10.263614654541016
    9. 'print' → logprob: -11.138614654541016
    10. '           ' → logprob: -11.388614654541016

Token 1059: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.019190816208720207
    2. 'oris' → logprob: -4.519190788269043
    3. 'ar' → logprob: -5.894190788269043
    4. 'orie' → logprob: -6.769190788269043
    5. 'oriz' → logprob: -7.019190788269043
    6. 'orse' → logprob: -7.769190788269043
    7. 'os' → logprob: -7.769190788269043
    8. 'OR' → logprob: -8.019190788269043
    9. 'orat' → logprob: -8.019190788269043
    10. 'mor' → logprob: -8.394190788269043

Token 1060: 'ise' (ID: 1096)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.09529010951519012
    2. 'ize' → logprob: -2.720290184020996
    3. 'ise' → logprob: -5.470290184020996
    4. 'aj' → logprob: -6.345290184020996
    5. 'isez' → logprob: -6.345290184020996
    6. 'aise' → logprob: -6.345290184020996
    7. 'oz' → logprob: -6.595290184020996
    8. 'at' → logprob: -7.095290184020996
    9. 'ar' → logprob: -7.095290184020996
    10. 'iser' → logprob: -7.095290184020996

Token 1061: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00030686063109897077
    2. ' j' → logprob: -8.125307083129883
    3. '   ' → logprob: -12.750307083129883
    4. '           ' → logprob: -12.750307083129883
    5. '```' → logprob: -13.250307083129883
    6. 'i' → logprob: -14.000307083129883
    7. '    ' → logprob: -14.500307083129883
    8. '	j' → logprob: -14.625307083129883
    9. '          ' → logprob: -15.375307083129883
    10. ')' → logprob: -15.500307083129883

Token 1062: '’ind' (ID: 65649)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03278430178761482
    2. 'i' → logprob: -3.5327842235565186
    3. ' j' → logprob: -6.407784461975098
    4. ' i' → logprob: -7.657784461975098
    5. 'J' → logprob: -8.032784461975098
    6. '   ' → logprob: -9.657784461975098
    7. '[i' → logprob: -9.907784461975098
    8. '           ' → logprob: -9.907784461975098
    9. '=i' → logprob: -9.907784461975098
    10. '```' → logprob: -9.907784461975098

Token 1063: 'ice' (ID: 603)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5271953344345093
    2. 'dex' → logprob: -1.0271953344345093
    3. 'ice' → logprob: -4.402195453643799
    4. 'di' → logprob: -4.527195453643799
    5. 'dice' → logprob: -4.777195453643799
    6. 'indice' → logprob: -5.027195453643799
    7. 'ex' → logprob: -5.527195453643799
    8. 'dé' → logprob: -5.777195453643799
    9. 'de' → logprob: -5.902195453643799
    10. 't' → logprob: -6.777195453643799

Token 1064: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010091898031532764
    2. '<|end|>' → logprob: -4.635091781616211
    3. '<|end|>' → logprob: -9.135091781616211
    4. '		' → logprob: -9.510091781616211
    5. '            ' → logprob: -10.760091781616211
    6. '          ' → logprob: -11.010091781616211
    7. '               ' → logprob: -11.135091781616211
    8. '```' → logprob: -11.260091781616211
    9. '            
' → logprob: -11.635091781616211
    10. '
' → logprob: -11.635091781616211

Token 1065: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2020991056924686e-05
    2. '<|end|>' → logprob: -10.625032424926758
    3. '            
' → logprob: -13.375032424926758
    4. '               ' → logprob: -13.625032424926758
    5. '<|end|>' → logprob: -13.625032424926758
    6. '		' → logprob: -14.375032424926758
    7. '                   ' → logprob: -14.625032424926758
    8. '
' → logprob: -14.875032424926758
    9. '          ' → logprob: -15.125032424926758
    10. ',' → logprob: -15.125032424926758

Token 1066: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026986654847860336
    2. 'break' → logprob: -3.651986598968506
    3. '```' → logprob: -8.151987075805664
    4. 'print' → logprob: -8.526987075805664
    5. '       ' → logprob: -9.276987075805664
    6. ' break' → logprob: -10.026987075805664
    7. '   ' → logprob: -10.776987075805664
    8. '#' → logprob: -11.526987075805664
    9. '               ' → logprob: -12.401987075805664
    10. '            
' → logprob: -12.526987075805664

Token 1067: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009787374176084995
    2. 'break' (adapté à ' break') → logprob: -4.634787559509277
    3. ' break' → logprob: -10.759787559509277
    4. '       ' → logprob: -12.759787559509277
    5. '            
' → logprob: -13.009787559509277
    6. '               ' → logprob: -13.384787559509277
    7. '```' → logprob: -13.759787559509277
    8. '		' → logprob: -14.259787559509277
    9. '	break' → logprob: -15.009787559509277
    10. '   ' → logprob: -15.259787559509277

Token 1068: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01356604602187872
    2. '   ' → logprob: -4.763566017150879
    3. ' else' → logprob: -6.263566017150879
    4. 'if' → logprob: -6.638566017150879
    5. '           ' → logprob: -6.888566017150879
    6. '       ' → logprob: -7.888566017150879
    7. '```' → logprob: -8.263566017150879
    8. '#' → logprob: -10.638566017150879
    9. '<|end|>' → logprob: -11.763566017150879
    10. '.' → logprob: -11.888566017150879

Token 1069: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15826110541820526
    2. '<|end|>' → logprob: -2.1582610607147217
    3. '   ' → logprob: -4.158261299133301
    4. ' else' → logprob: -5.033261299133301
    5. '```' → logprob: -5.158261299133301
    6. '
' → logprob: -7.158261299133301
    7. '       ' → logprob: -7.283261299133301
    8. 'if' → logprob: -8.1582612991333
    9. '#' → logprob: -8.4082612991333
    10. '           ' → logprob: -8.5332612991333

Token 1070: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3470796048641205
    2. 'else' → logprob: -1.5970796346664429
    3. '   ' → logprob: -2.9720795154571533
    4. '       ' → logprob: -4.222079753875732
    5. 'continue' → logprob: -5.097079753875732
    6. '           ' → logprob: -5.222079753875732
    7. '#' → logprob: -5.847079753875732
    8. 'exit' → logprob: -5.847079753875732
    9. '<|end|>' → logprob: -6.472079753875732
    10. 'print' → logprob: -6.472079753875732

Token 1071: ' arr' (ID: 1724)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1307118833065033
    2. '           ' → logprob: -2.130711793899536
    3. '       ' → logprob: -6.505712032318115
    4. 'continue' → logprob: -7.005712032318115
    5. '   ' → logprob: -7.505712032318115
    6. '               ' → logprob: -8.380711555480957
    7. ' break' → logprob: -8.505711555480957
    8. '=' → logprob: -9.005711555480957
    9. 'exit' → logprob: -9.880711555480957
    10. '```' → logprob: -10.130711555480957

Token 1072: 'ête' (ID: 16808)
  Prédit: 'ak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ak' → logprob: -0.04806169494986534
    2. 'ive' → logprob: -4.173061847686768
    3. 'aise' → logprob: -4.423061847686768
    4. '       ' → logprob: -5.548061847686768
    5. 'ai' → logprob: -5.923061847686768
    6. 'vez' → logprob: -6.298061847686768
    7. 'ieve' → logprob: -6.673061847686768
    8. 'ez' → logprob: -6.798061847686768
    9. 'ack' → logprob: -7.048061847686768
    10. 'ake' → logprob: -7.048061847686768

Token 1073: ' dès' (ID: 37926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1074: ' qu' (ID: 474)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8507170677185059
    2. '           ' → logprob: -0.8507170677185059
    3. 'la' → logprob: -2.475717067718506
    4. 'l' → logprob: -3.850717067718506
    5. '       ' → logprob: -4.225717067718506
    6. 'True' → logprob: -4.600717067718506
    7. '   ' → logprob: -4.975717067718506
    8. '               ' → logprob: -5.600717067718506
    9. '```' → logprob: -6.225717067718506
    10. '                   ' → logprob: -7.100717067718506

Token 1075: '’on' (ID: 25036)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03680302947759628
    2. 'le' → logprob: -3.5368030071258545
    3. '   ' → logprob: -6.036803245544434
    4. 'la' → logprob: -6.411803245544434
    5. '       ' → logprob: -6.536803245544434
    6. '               ' → logprob: -7.286803245544434
    7. ' le' → logprob: -8.411803245544434
    8. 'l' → logprob: -9.286803245544434
    9. ' la' → logprob: -9.411803245544434
    10. '```' → logprob: -9.661803245544434

Token 1076: ' a' (ID: 261)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.010309021919965744
    2. ' trouve' → logprob: -4.760309219360352
    3. '```' → logprob: -6.760309219360352
    4. 'le' → logprob: -8.135309219360352
    5. 'find' → logprob: -9.885309219360352
    6. 'd' → logprob: -10.385309219360352
    7. 'ren' → logprob: -10.510309219360352
    8. 'found' → logprob: -10.760309219360352
    9. '#' → logprob: -10.760309219360352
    10. 'l' → logprob: -11.635309219360352

Token 1077: ' trouvé' (ID: 60081)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.002013932913541794
    2. 'found' → logprob: -6.87701416015625
    3. ' trouvé' → logprob: -7.25201416015625
    4. '           ' → logprob: -8.75201416015625
    5. '       ' → logprob: -10.50201416015625
    6. ' trouv' → logprob: -10.62701416015625
    7. 'find' → logprob: -11.25201416015625
    8. '#' → logprob: -11.75201416015625
    9. 'dé' → logprob: -11.87701416015625
    10. 'break' → logprob: -12.12701416015625

Token 1078: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1079: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.07880694419145584
    2. 'token' → logprob: -3.4538068771362305
    3. 'first' → logprob: -3.8288068771362305
    4. ' premier' → logprob: -4.0788068771362305
    5. ' first' → logprob: -6.7038068771362305
    6. 'solution' → logprob: -6.8288068771362305
    7. 'result' → logprob: -7.2038068771362305
    8. '```' → logprob: -7.5788068771362305
    9. 'found' → logprob: -8.32880687713623
    10. 'suite' → logprob: -8.45380687713623

Token 1080: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1081: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.013099518604576588
    2. 'print' → logprob: -4.763099670410156
    3. 'if' → logprob: -5.638099670410156
    4. '#' → logprob: -7.638099670410156
    5. '```' → logprob: -8.263099670410156
    6. 'break' → logprob: -9.013099670410156
    7. ' else' → logprob: -10.638099670410156
    8. '   ' → logprob: -11.513099670410156
    9. 'result' → logprob: -11.888099670410156
    10. '           ' → logprob: -12.013099670410156

Token 1082: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005511255003511906
    2. 'if' → logprob: -7.750551223754883
    3. '#' → logprob: -9.625551223754883
    4. 'result' → logprob: -10.750551223754883
    5. 'I' → logprob: -11.250551223754883
    6. 'mask' → logprob: -12.125551223754883
    7. 'for' → logprob: -12.875551223754883
    8. '```' → logprob: -13.125551223754883
    9. 'pr' → logprob: -13.750551223754883
    10. 'R' → logprob: -13.750551223754883

Token 1083: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.12476561218500137
    2. '#' → logprob: -2.749765634536743
    3. 'print' → logprob: -3.124765634536743
    4. 'ich' → logprob: -4.874765396118164
    5. 'icher' → logprob: -7.499765396118164
    6. 'f' → logprob: -7.749765396118164
    7. 'iche' → logprob: -7.874765396118164
    8. '```' → logprob: -8.499765396118164
    9. '#print' → logprob: -9.624765396118164
    10. 'for' → logprob: -9.749765396118164

Token 1084: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.250001907348633
    3. '``' → logprob: -19.250001907348633
    4. 'if' → logprob: -19.250001907348633
    5. ' print' → logprob: -19.875001907348633
    6. 'for' → logprob: -20.750001907348633
    7. 'I' → logprob: -21.000001907348633
    8. '#' → logprob: -21.500001907348633
    9. '(print' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.500001907348633

Token 1085: ' résultat' (ID: 62556)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0011587966000661254
    2. '(I' → logprob: -7.126158714294434
    3. 'J' → logprob: -9.251158714294434
    4. 'i' → logprob: -9.376158714294434
    5. 'f' → logprob: -9.626158714294434
    6. ' I' → logprob: -10.001158714294434
    7. 'bin' → logprob: -10.876158714294434
    8. '"{' → logprob: -11.876158714294434
    9. '"' → logprob: -12.001158714294434
    10. '(' → logprob: -12.251158714294434

Token 1086: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.000001907348633
    3. 'if' → logprob: -17.125001907348633
    4. '``' → logprob: -18.750001907348633
    5. ' print' → logprob: -19.375001907348633
    6. 'for' → logprob: -21.875001907348633
    7. '
' → logprob: -23.125001907348633
    8. 'I' → logprob: -23.625001907348633
    9. '#print' → logprob: -24.000001907348633
    10. '#' → logprob: -24.125001907348633

Token 1087: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8087270038668066e-05
    2. '```' → logprob: -10.500027656555176
    3. ' print' → logprob: -15.500027656555176
    4. '``' → logprob: -15.625027656555176
    5. 'if' → logprob: -16.125028610229492
    6. '
' → logprob: -20.375028610229492
    7. 'for' → logprob: -20.500028610229492
    8. 'I' → logprob: -21.500028610229492
    9. '`
' → logprob: -22.250028610229492
    10. '`' → logprob: -22.375028610229492

Token 1088: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -12.250004768371582
    3. '``' → logprob: -17.0000057220459
    4. ' print' → logprob: -18.6250057220459
    5. 'if' → logprob: -21.3750057220459
    6. 'for' → logprob: -21.8750057220459
    7. '
' → logprob: -22.0000057220459
    8. '#' → logprob: -24.6250057220459
    9. 'printf' → logprob: -24.7500057220459
    10. '#print' → logprob: -24.7500057220459

Token 1089: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3856492842023727e-06
    2. 'if' → logprob: -13.625000953674316
    3. '```' → logprob: -16.500001907348633
    4. 'result' → logprob: -18.625001907348633
    5. ' print' → logprob: -19.000001907348633
    6. 'for' → logprob: -19.250001907348633
    7. '#' → logprob: -19.375001907348633
    8. '
' → logprob: -19.750001907348633
    9. '#print' → logprob: -20.000001907348633
    10. 'I' → logprob: -20.250001907348633

Token 1090: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.29857057332992554
    2. ''I' → logprob: -1.5485706329345703
    3. 'd' → logprob: -4.04857063293457
    4. ''' → logprob: -4.42357063293457
    5. ''d' → logprob: -4.92357063293457
    6. ' I' → logprob: -6.04857063293457
    7. 'K' → logprob: -6.29857063293457
    8. ''i' → logprob: -6.29857063293457
    9. ' '' → logprob: -7.42357063293457
    10. ' d' → logprob: -7.42357063293457

Token 1091: '==' (ID: 560)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.81803959608078
    2. ' <=' → logprob: -1.9430396556854248
    3. '==' → logprob: -2.193039655685425
    4. ' <' → logprob: -2.443039655685425
    5. '>=' → logprob: -2.568039655685425
    6. '<' → logprob: -2.693039655685425
    7. ' ==' → logprob: -3.193039655685425
    8. ' >=' → logprob: -4.193039417266846
    9. '>' → logprob: -4.693039417266846
    10. '!=' → logprob: -6.318039417266846

Token 1092: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029651200398802757
    2. 'N' → logprob: -3.654651165008545
    3. 'I' → logprob: -7.029651165008545
    4. ' ' → logprob: -7.154651165008545
    5. 'i' → logprob: -7.404651165008545
    6. '-' → logprob: -7.529651165008545
    7. '=' → logprob: -8.154651641845703
    8. 'J' → logprob: -9.404651641845703
    9. 'Q' → logprob: -10.154651641845703
    10. '1' → logprob: -10.529651641845703

Token 1093: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5153910517692566
    2. ':
' → logprob: -1.1403911113739014
    3. '==' → logprob: -2.6403911113739014
    4. 'print' → logprob: -5.140390872955322
    5. ' ==' → logprob: -5.390390872955322
    6. 'if' → logprob: -7.640390872955322
    7. '   ' → logprob: -8.39039134979248
    8. ' and' → logprob: -8.64039134979248
    9. 'and' → logprob: -9.01539134979248
    10. ' print' → logprob: -9.14039134979248

Token 1094: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.16212138533592224
    2. 'K' → logprob: -1.9121214151382446
    3. ' J' → logprob: -7.287121295928955
    4. 'd' → logprob: -7.412121295928955
    5. 'not' → logprob: -8.412121772766113
    6. 'I' → logprob: -8.912121772766113
    7. ' K' → logprob: -9.287121772766113
    8. 'N' → logprob: -9.537121772766113
    9. 'j' → logprob: -10.662121772766113
    10. '0' → logprob: -11.537121772766113

Token 1095: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14709310233592987
    2. ' ==' → logprob: -2.0220930576324463
    3. '!=' → logprob: -6.147093296051025
    4. '>' → logprob: -6.772093296051025
    5. ' !=' → logprob: -7.272093296051025
    6. ' >' → logprob: -9.022092819213867
    7. '>=' → logprob: -9.272092819213867
    8. '=' → logprob: -9.772092819213867
    9. '[' → logprob: -10.022092819213867
    10. ':' → logprob: -10.772092819213867

Token 1096: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017031522002071142
    2. ' ' → logprob: -6.376703262329102
    3. '=' → logprob: -14.126703262329102
    4. '-' → logprob: -16.3767032623291
    5. ' =' → logprob: -17.1267032623291
    6. '(' → logprob: -17.2517032623291
    7. ' -' → logprob: -17.3767032623291
    8. '  ' → logprob: -17.6267032623291
    9. 'None' → logprob: -17.8767032623291
    10. 'I' → logprob: -18.0017032623291

Token 1097: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22724924981594086
    2. ':
' → logprob: -1.977249264717102
    3. 'print' → logprob: -3.2272491455078125
    4. ':' → logprob: -3.9772491455078125
    5. 'I' → logprob: -5.4772491455078125
    6. '   ' → logprob: -7.4772491455078125
    7. 'and' → logprob: -7.8522491455078125
    8. ' if' → logprob: -7.9772491455078125
    9. '
' → logprob: -8.227249145507812
    10. ' and' → logprob: -8.352249145507812

Token 1098: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.053663838654756546
    2. ' print' → logprob: -3.303663730621338
    3. '   ' → logprob: -4.178663730621338
    4. 'if' → logprob: -8.928664207458496
    5. '0' → logprob: -10.928664207458496
    6. '```' → logprob: -11.678664207458496
    7. 'I' → logprob: -12.303664207458496
    8. ' if' → logprob: -12.428664207458496
    9. ' ' → logprob: -12.678664207458496
    10. '	print' → logprob: -12.678664207458496

Token 1099: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017360743135213852
    2. ' print' → logprob: -4.517360687255859
    3. '   ' → logprob: -5.267360687255859
    4. 'if' → logprob: -7.892360687255859
    5. 'else' → logprob: -8.14236068725586
    6. '#' → logprob: -8.76736068725586
    7. '```' → logprob: -9.01736068725586
    8. 'continue' → logprob: -10.26736068725586
    9. 'elif' → logprob: -10.26736068725586
    10. 'raise' → logprob: -11.14236068725586

Token 1100: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15778231620788574
    2. '-' → logprob: -2.4077823162078857
    3. '"' → logprob: -3.6577823162078857
    4. 'print' → logprob: -3.7827823162078857
    5. '(' → logprob: -5.907782554626465
    6. ''' → logprob: -6.157782554626465
    7. '(-' → logprob: -8.032782554626465
    8. '"-' → logprob: -8.032782554626465
    9. 'I' → logprob: -8.157782554626465
    10. '("' → logprob: -8.407782554626465

Token 1101: ' chaîne' (ID: 89288)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019122191006317735
    2. '"' → logprob: -7.0019121170043945
    3. 'print' → logprob: -8.126912117004395
    4. 'I' → logprob: -8.501912117004395
    5. ''' → logprob: -8.751912117004395
    6. '-' → logprob: -9.126912117004395
    7. ' ' → logprob: -9.876912117004395
    8. 'J' → logprob: -10.501912117004395
    9. '1' → logprob: -11.001912117004395
    10. 'N' → logprob: -11.126912117004395

Token 1102: ' vide' (ID: 21835)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.49386686086654663
    2. '""' → logprob: -1.2438669204711914
    3. 'if' → logprob: -3.8688669204711914
    4. ''' → logprob: -3.8688669204711914
    5. '("' → logprob: -4.243866920471191
    6. '"I' → logprob: -4.368866920471191
    7. 'print' → logprob: -4.618866920471191
    8. '0' → logprob: -5.368866920471191
    9. '''' → logprob: -5.743866920471191
    10. '(' → logprob: -5.868866920471191

Token 1103: ' ''' (ID: 8686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08653590828180313
    2. 'print' → logprob: -2.586535930633545
    3. '
' → logprob: -5.211535930633545
    4. 'I' → logprob: -6.336535930633545
    5. ' if' → logprob: -8.336535453796387
    6. '```' → logprob: -9.336535453796387
    7. '""' → logprob: -10.586535453796387
    8. '``' → logprob: -11.711535453796387
    9. '  
' → logprob: -11.836535453796387
    10. '
' → logprob: -12.086535453796387

Token 1104: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.256814569234848
    2. 'print' → logprob: -1.5068145990371704
    3. 'I' → logprob: -5.881814479827881
    4. '
' → logprob: -6.631814479827881
    5. '```' → logprob: -8.381814956665039
    6. 'else' → logprob: -8.506814956665039
    7. ' if' → logprob: -8.631814956665039
    8. '''' → logprob: -10.006814956665039
    9. '``' → logprob: -10.631814956665039
    10. '""' → logprob: -10.881814956665039

Token 1105: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023488644510507584
    2. 'if' → logprob: -3.773488759994507
    3. 'I' → logprob: -8.398488998413086
    4. '```' → logprob: -11.273488998413086
    5. '
' → logprob: -13.023488998413086
    6. ' print' → logprob: -13.523488998413086
    7. ' if' → logprob: -14.273488998413086
    8. '``' → logprob: -14.273488998413086
    9. '""' → logprob: -16.523488998413086
    10. 'result' → logprob: -17.023488998413086

Token 1106: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38687992095947266
    2. 'if' → logprob: -1.1368799209594727
    3. 'I' → logprob: -12.011879920959473
    4. ' if' → logprob: -13.386879920959473
    5. 'result' → logprob: -14.011879920959473
    6. ' print' → logprob: -15.386879920959473
    7. '```' → logprob: -15.886879920959473
    8. 'try' → logprob: -16.386878967285156
    9. '
' → logprob: -17.261878967285156
    10. 'for' → logprob: -17.886878967285156

Token 1107: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008362088352441788
    2. ' print' → logprob: -5.008362293243408
    3. 'if' → logprob: -6.508362293243408
    4. '   ' → logprob: -9.38336181640625
    5. ' if' → logprob: -9.75836181640625
    6. '           ' → logprob: -11.50836181640625
    7. '```' → logprob: -13.75836181640625
    8. '       ' → logprob: -14.00836181640625
    9. '
' → logprob: -15.25836181640625
    10. 'I' → logprob: -15.75836181640625

Token 1108: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8193366486229934e-05
    2. ' print' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.000018119812012
    4. 'if' → logprob: -14.375018119812012
    5. 'for' → logprob: -17.750019073486328
    6. '```' → logprob: -20.000019073486328
    7. '       ' → logprob: -20.125019073486328
    8. 'result' → logprob: -20.250019073486328
    9. '
' → logprob: -20.500019073486328
    10. 'I' → logprob: -20.500019073486328

Token 1109: ' convert' (ID: 8452)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013958304189145565
    2. ' print' → logprob: -6.6263957023620605
    3. 'for' → logprob: -9.876396179199219
    4. '
' → logprob: -11.876396179199219
    5. '```' → logprob: -13.001396179199219
    6. '#' → logprob: -13.126396179199219
    7. '   ' → logprob: -13.251396179199219
    8. ' for' → logprob: -13.876396179199219
    9. 'python' → logprob: -13.876396179199219
    10. 'printf' → logprob: -14.251396179199219

Token 1110: 'it' (ID: 278)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.13704939186573029
    2. 'i' → logprob: -3.887049436569214
    3. 'e' → logprob: -4.012049198150635
    4. 'te' → logprob: -4.012049198150635
    5. 'it' → logprob: -4.262049198150635
    6. 'print' → logprob: -4.512049198150635
    7. ' I' → logprob: -4.637049198150635
    8. 'ate' → logprob: -5.012049198150635
    9. 't' → logprob: -5.012049198150635
    10. '(I' → logprob: -5.137049198150635

Token 1111: ' J' (ID: 643)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.010362698696553707
    2. 'format' → logprob: -4.63536262512207
    3. ' bin' → logprob: -7.63536262512207
    4. ' format' → logprob: -10.51036262512207
    5. '''' → logprob: -10.63536262512207
    6. '   ' → logprob: -10.76036262512207
    7. '(bin' → logprob: -10.76036262512207
    8. ''' → logprob: -11.76036262512207
    9. 'J' → logprob: -12.51036262512207
    10. '('' → logprob: -12.63536262512207

Token 1112: ' en' (ID: 469)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14679454267024994
    2. '>>' → logprob: -2.896794557571411
    3. 'bin' → logprob: -3.896794557571411
    4. 'I' → logprob: -4.021794319152832
    5. '[I' → logprob: -4.771794319152832
    6. ',' → logprob: -4.896794319152832
    7. 'into' → logprob: -4.896794319152832
    8. '```' → logprob: -5.271794319152832
    9. '[:' → logprob: -6.021794319152832
    10. ' to' → logprob: -6.271794319152832

Token 1113: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0004658233083318919
    2. 'format' → logprob: -7.7504658699035645
    3. ' bin' → logprob: -10.625465393066406
    4. 'f' → logprob: -11.750465393066406
    5. ''{' → logprob: -13.750465393066406
    6. '(bin' → logprob: -13.875465393066406
    7. ' format' → logprob: -14.875465393066406
    8. '"{' → logprob: -15.250465393066406
    9. '   ' → logprob: -16.375465393066406
    10. '/bin' → logprob: -16.750465393066406

Token 1114: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.008550510741770267
    2. 'inary' → logprob: -5.008550643920898
    3. 'bin' → logprob: -6.633550643920898
    4. 'inaire' → logprob: -8.633550643920898
    5. ''' → logprob: -9.133550643920898
    6. 'ina' → logprob: -9.633550643920898
    7. 'inar' → logprob: -10.008550643920898
    8. '(bin' → logprob: -10.508550643920898
    9. 'format' → logprob: -10.883550643920898
    10. ''in' → logprob: -11.133550643920898

Token 1115: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8882149457931519
    2. 'print' → logprob: -1.1382149457931519
    3. 'bin' → logprob: -1.6382149457931519
    4. ' if' → logprob: -4.013215065002441
    5. 'format' → logprob: -4.263215065002441
    6. ',' → logprob: -4.263215065002441
    7. '(bin' → logprob: -4.638215065002441
    8. '```' → logprob: -5.388215065002441
    9. 'I' → logprob: -6.388215065002441
    10. '
' → logprob: -6.888215065002441

Token 1116: ' om' (ID: 2030)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.005357787013053894
    2. ' bin' → logprob: -5.63035774230957
    3. '[' → logprob: -7.50535774230957
    4. '2' → logprob: -8.63035774230957
    5. 'b' → logprob: -8.63035774230957
    6. '(bin' → logprob: -8.75535774230957
    7. '```' → logprob: -8.88035774230957
    8. 'format' → logprob: -9.13035774230957
    9. '   ' → logprob: -9.50535774230957
    10. '1' → logprob: -9.50535774230957

Token 1117: 'ett' (ID: 5608)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3152029812335968
    2. '```' → logprob: -1.5652029514312744
    3. '   ' → logprob: -3.6902029514312744
    4. 'b' → logprob: -5.4402031898498535
    5. 'print' → logprob: -5.8152031898498535
    6. '#' → logprob: -5.8152031898498535
    7. ''''
' → logprob: -5.9402031898498535
    8. 's' → logprob: -6.0652031898498535
    9. 'inaire' → logprob: -6.0652031898498535
    10. 'î' → logprob: -6.1902031898498535

Token 1118: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.14587804675102234
    2. 'print' → logprob: -3.7708780765533447
    3. 'ett' → logprob: -4.145877838134766
    4. 'issant' → logprob: -4.145877838134766
    5. '   ' → logprob: -4.520877838134766
    6. '```' → logprob: -4.645877838134766
    7. 'J' → logprob: -5.020877838134766
    8. 'ifiant' → logprob: -5.145877838134766
    9. 'p' → logprob: -5.270877838134766
    10. 'enant' → logprob: -5.270877838134766

Token 1119: ' le' (ID: 505)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.30592474341392517
    2. '[' → logprob: -1.6809247732162476
    3. 'b' → logprob: -3.555924654006958
    4. ' bin' → logprob: -3.930924654006958
    5. '```' → logprob: -4.180924892425537
    6. '(bin' → logprob: -5.055924892425537
    7. '[I' → logprob: -6.305924892425537
    8. 'f' → logprob: -7.055924892425537
    9. '`' → logprob: -7.305924892425537
    10. '
' → logprob: -7.430924892425537

Token 1120: ' pré' (ID: 9424)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.20636525750160217
    2. 'b' → logprob: -1.7063652276992798
    3. '0' → logprob: -6.70636510848999
    4. ' bin' → logprob: -6.83136510848999
    5. '[' → logprob: -6.95636510848999
    6. 'I' → logprob: -7.08136510848999
    7. ''' → logprob: -7.95636510848999
    8. ''b' → logprob: -8.206365585327148
    9. 'format' → logprob: -9.956365585327148
    10. '```' → logprob: -10.331365585327148

Token 1121: 'fix' (ID: 11853)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5613549947738647
    2. 'z' → logprob: -1.4363549947738647
    3. 'fix' → logprob: -2.6863551139831543
    4. 'b' → logprob: -2.9363551139831543
    5. 's' → logprob: -3.5613551139831543
    6. 'x' → logprob: -3.8113551139831543
    7. 'c' → logprob: -4.686355113983154
    8. 'bin' → logprob: -5.686355113983154
    9. 'sent' → logprob: -6.186355113983154
    10. 'cision' → logprob: -6.686355113983154

Token 1122: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.3375556170940399
    2. 'x' → logprob: -1.9625556468963623
    3. 'f' → logprob: -2.2125556468963623
    4. 'ix' → logprob: -4.087555408477783
    5. 'ixe' → logprob: -5.212555408477783
    6. '0' → logprob: -5.337555408477783
    7. 'b' → logprob: -5.837555408477783
    8. 'if' → logprob: -6.587555408477783
    9. 'n' → logprob: -7.212555408477783
    10. '```' → logprob: -7.212555408477783

Token 1123: ' '' (ID: 461)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.27095189690589905
    2. '(bin' → logprob: -1.5209518671035767
    3. ' bin' → logprob: -5.020951747894287
    4. '('' → logprob: -5.520951747894287
    5. '[' → logprob: -5.770951747894287
    6. ''' → logprob: -6.145951747894287
    7. ''b' → logprob: -7.020951747894287
    8. 'b' → logprob: -7.395951747894287
    9. '```' → logprob: -8.145952224731445
    10. '[:-' → logprob: -8.520952224731445

Token 1124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4010191261768341
    2. 'bin' → logprob: -1.1510190963745117
    3. ''' → logprob: -4.651019096374512
    4. 'b' → logprob: -5.526019096374512
    5. ' bin' → logprob: -7.776019096374512
    6. ''b' → logprob: -9.901019096374512
    7. '2' → logprob: -11.276019096374512
    8. '"' → logprob: -11.401019096374512
    9. '1' → logprob: -12.026019096374512
    10. '(bin' → logprob: -12.151019096374512

Token 1125: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.20734242349863e-05
    2. 'bin' → logprob: -9.625072479248047
    3. '```' → logprob: -12.500072479248047
    4. '
' → logprob: -14.000072479248047
    5. '[b' → logprob: -14.625072479248047
    6. '   ' → logprob: -15.250072479248047
    7. ''b' → logprob: -15.500072479248047
    8. '`' → logprob: -16.250072479248047
    9. '``' → logprob: -16.250072479248047
    10. '	b' → logprob: -16.875072479248047

Token 1126: '',' (ID: 787)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7383460402488708
    2. ',' → logprob: -1.3633460998535156
    3. 'print' → logprob: -2.1133460998535156
    4. '(bin' → logprob: -2.8633460998535156
    5. '[I' → logprob: -3.6133460998535156
    6. '+' → logprob: -3.8633460998535156
    7. 'format' → logprob: -4.613346099853516
    8. ' bin' → logprob: -4.738346099853516
    9. '[' → logprob: -4.863346099853516
    10. '   ' → logprob: -5.488346099853516

Token 1127: ' et' (ID: 859)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.29176944494247437
    2. 'print' → logprob: -1.4167695045471191
    3. ' bin' → logprob: -4.791769504547119
    4. '   ' → logprob: -6.916769504547119
    5. 'format' → logprob: -7.291769504547119
    6. '(bin' → logprob: -8.541769027709961
    7. ' print' → logprob: -9.166769027709961
    8. '           ' → logprob: -9.166769027709961
    9. '```' → logprob: -10.291769027709961
    10. '       ' → logprob: -10.416769027709961

Token 1128: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020425561524461955
    2. ' print' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '           ' → logprob: -15.250204086303711
    5. '
' → logprob: -16.12520408630371
    6. '       ' → logprob: -16.25020408630371
    7. '```' → logprob: -18.50020408630371
    8. '            
' → logprob: -19.25020408630371
    9. ')' → logprob: -19.50020408630371
    10. 'for' → logprob: -19.62520408630371

Token 1129: ' complète' (ID: 75660)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9027791495318525e-05
    2. ' print' → logprob: -10.875019073486328
    3. '
' → logprob: -17.375019073486328
    4. 'z' → logprob: -17.750019073486328
    5. 'printf' → logprob: -18.875019073486328
    6. 'write' → logprob: -19.250019073486328
    7. 'fill' → logprob: -19.375019073486328
    8. 'pad' → logprob: -19.375019073486328
    9. '```' → logprob: -19.500019073486328
    10. '   ' → logprob: -19.500019073486328

Token 1130: ' à' (ID: 1221)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.5632901191711426
    2. '(bin' → logprob: -1.5632901191711426
    3. '```' → logprob: -2.4382901191711426
    4. '(I' → logprob: -2.4382901191711426
    5. 'bin' → logprob: -2.5632901191711426
    6. '(J' → logprob: -2.8132901191711426
    7. '('' → logprob: -2.9382901191711426
    8. ' with' → logprob: -3.5632901191711426
    9. '(z' → logprob: -3.6882901191711426
    10. '(' → logprob: -3.8132901191711426

Token 1131: ' gauche' (ID: 58367)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03524741530418396
    2. 'z' → logprob: -4.410247325897217
    3. ' I' → logprob: -5.285247325897217
    4. '0' → logprob: -5.285247325897217
    5. '>I' → logprob: -5.535247325897217
    6. '(I' → logprob: -6.535247325897217
    7. ''I' → logprob: -6.660247325897217
    8. '.I' → logprob: -7.035247325897217
    9. '>' → logprob: -7.535247325897217
    10. 'l' → logprob: -7.535247325897217

Token 1132: ' par' (ID: 686)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.977043867111206
    2. 'z' → logprob: -2.102043867111206
    3. 'print' → logprob: -2.102043867111206
    4. ' avec' → logprob: -2.102043867111206
    5. ' with' → logprob: -2.727043867111206
    6. '('' → logprob: -2.977043867111206
    7. 'avec' → logprob: -3.477043867111206
    8. '.z' → logprob: -3.727043867111206
    9. '.fill' → logprob: -4.477044105529785
    10. '.' → logprob: -4.977044105529785

Token 1133: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0077928174287080765
    2. ' '' → logprob: -6.007792949676514
    3. ' zeros' → logprob: -6.132792949676514
    4. '0' → logprob: -6.257792949676514
    5. 'zeros' → logprob: -7.507792949676514
    6. ' leading' → logprob: -9.257792472839355
    7. ''l' → logprob: -9.257792472839355
    8. ''z' → logprob: -9.382792472839355
    9. 'str' → logprob: -9.632792472839355
    10. '"' → logprob: -9.882792472839355

Token 1134: ' z' (ID: 579)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026950225234031677
    2. '0' → logprob: -3.6519501209259033
    3. 'zeros' → logprob: -8.401949882507324
    4. ' zeros' → logprob: -8.901949882507324
    5. '`' → logprob: -9.151949882507324
    6. '"' → logprob: -9.526949882507324
    7. ' '' → logprob: -10.026949882507324
    8. ''z' → logprob: -10.401949882507324
    9. '('' → logprob: -12.526949882507324
    10. 'z' → logprob: -12.526949882507324

Token 1135: 'éros' (ID: 120888)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0610172748565674
    2. 'eros' → logprob: -1.4360172748565674
    3. 'zeros' → logprob: -2.1860172748565674
    4. 'er' → logprob: -2.6860172748565674
    5. ''' → logprob: -2.8110172748565674
    6. '0' → logprob: -2.9360172748565674
    7. 'fill' → logprob: -3.0610172748565674
    8. ''z' → logprob: -4.186017036437988
    9. 'ero' → logprob: -4.561017036437988
    10. 'éro' → logprob: -5.311017036437988

Token 1136: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02620624005794525
    2. 'z' → logprob: -5.276206016540527
    3. ',' → logprob: -5.651206016540527
    4. '           ' → logprob: -5.901206016540527
    5. ').' → logprob: -6.276206016540527
    6. '.z' → logprob: -6.276206016540527
    7. '+' → logprob: -6.526206016540527
    8. '.' → logprob: -6.901206016540527
    9. 'J' → logprob: -7.151206016540527
    10. '.print' → logprob: -7.276206016540527

Token 1137: ' obtenir' (ID: 54423)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.474473476409912
    2. 'I' → logprob: -1.599473476409912
    3. 'N' → logprob: -1.724473476409912
    4. 'l' → logprob: -2.224473476409912
    5. 'fill' → logprob: -2.474473476409912
    6. 'print' → logprob: -2.474473476409912
    7. 'f' → logprob: -4.224473476409912
    8. ' length' → logprob: -4.224473476409912
    9. 'len' → logprob: -4.724473476409912
    10. 'make' → logprob: -4.974473476409912

Token 1138: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.134291172027588
    2. 'f' → logprob: -1.759291172027588
    3. ''I' → logprob: -2.009291172027588
    4. 'bin' → logprob: -2.509291172027588
    5. '0' → logprob: -2.884291172027588
    6. 'b' → logprob: -3.009291172027588
    7. ' f' → logprob: -3.134291172027588
    8. 'I' → logprob: -3.134291172027588
    9. '{' → logprob: -3.259291172027588
    10. ' '' → logprob: -4.759291172027588

Token 1139: ' mot' (ID: 3598)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2183822393417358
    2. 'I' → logprob: -1.3433822393417358
    3. 'b' → logprob: -1.3433822393417358
    4. 'bin' → logprob: -2.4683823585510254
    5. 'f' → logprob: -3.3433823585510254
    6. 'binary' → logprob: -4.218382358551025
    7. 'print' → logprob: -4.468382358551025
    8. ''' → logprob: -5.343382358551025
    9. ''I' → logprob: -5.468382358551025
    10. '{' → logprob: -5.718382358551025

Token 1140: ' de' (ID: 334)
  Prédit: '.z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.32043662667274475
    2. 'z' → logprob: -1.4454365968704224
    3. '.' → logprob: -3.820436716079712
    4. '=' → logprob: -6.320436477661133
    5. ' .' → logprob: -6.320436477661133
    6. 'I' → logprob: -6.445436477661133
    7. ' =' → logprob: -6.570436477661133
    8. '0' → logprob: -6.945436477661133
    9. 'bin' → logprob: -6.945436477661133
    10. '```' → logprob: -6.945436477661133

Token 1141: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014954171143472195
    2. 'i' → logprob: -4.639954090118408
    3. 'length' → logprob: -5.639954090118408
    4. ' I' → logprob: -7.139954090118408
    5. '{i' → logprob: -8.389954566955566
    6. ''I' → logprob: -8.889954566955566
    7. ' i' → logprob: -9.389954566955566
    8. 'width' → logprob: -9.514954566955566
    9. ' length' → logprob: -9.514954566955566
    10. '_I' → logprob: -9.764954566955566

Token 1142: ' bits' (ID: 18189)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.357893943786621
    2. 'b' → logprob: -1.482893943786621
    3. '0' → logprob: -1.857893943786621
    4. 's' → logprob: -2.357893943786621
    5. ' .' → logprob: -2.857893943786621
    6. '.z' → logprob: -3.107893943786621
    7. '.fill' → logprob: -3.732893943786621
    8. 'bits' → logprob: -3.857893943786621
    9. 'I' → logprob: -4.357893943786621
    10. '_bits' → logprob: -4.607893943786621

Token 1143: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015906770713627338
    2. '
' → logprob: -6.501590728759766
    3. 'if' → logprob: -9.376590728759766
    4. ' print' → logprob: -13.501590728759766
    5. 'result' → logprob: -13.876590728759766
    6. 'for' → logprob: -14.876590728759766
    7. '   ' → logprob: -15.376590728759766
    8. '           ' → logprob: -15.626590728759766
    9. ')
' → logprob: -15.751590728759766
    10. '
' → logprob: -16.501590728759766

Token 1144: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018158255144953728
    2. 'if' → logprob: -4.018158435821533
    3. '```' → logprob: -12.268157958984375
    4. 'result' → logprob: -13.518157958984375
    5. '
' → logprob: -13.643157958984375
    6. ' print' → logprob: -14.268157958984375
    7. ' if' → logprob: -14.893157958984375
    8. 'output' → logprob: -17.143157958984375
    9. '``' → logprob: -17.643157958984375
    10. '  
' → logprob: -19.143157958984375

Token 1145: '('' (ID: 706)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.03137335181236267
    2. '(f' → logprob: -3.7813732624053955
    3. '(format' → logprob: -5.281373500823975
    4. '('' → logprob: -6.156373500823975
    5. 'bin' → logprob: -7.656373500823975
    6. '(('' → logprob: -8.906373023986816
    7. '((' → logprob: -9.156373023986816
    8. '(' → logprob: -9.281373023986816
    9. '(""' → logprob: -10.656373023986816
    10. '('{' → logprob: -11.281373023986816

Token 1146: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.239730104804039
    2. '0' → logprob: -1.8647301197052002
    3. '{' → logprob: -3.2397301197052
    4. '{:' → logprob: -4.614729881286621
    5. '''' → logprob: -5.489729881286621
    6. '"' → logprob: -6.989729881286621
    7. 'bin' → logprob: -7.114729881286621
    8. '"{' → logprob: -7.239729881286621
    9. 'I' → logprob: -7.364729881286621
    10. '""' → logprob: -7.864729881286621

Token 1147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41618335247039795
    2. ' if' → logprob: -1.166183352470398
    3. '.z' → logprob: -3.9161834716796875
    4. ')' → logprob: -5.2911834716796875
    5. 'z' → logprob: -5.7911834716796875
    6. '.r' → logprob: -8.666183471679688
    7. 'bin' → logprob: -8.666183471679688
    8. ',' → logprob: -8.916183471679688
    9. ')
' → logprob: -10.041183471679688
    10. 'f' → logprob: -10.041183471679688

Token 1148: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.012584060430526733
    2. '(I' → logprob: -5.012584209442139
    3. ''I' → logprob: -5.387584209442139
    4. 'not' → logprob: -7.262584209442139
    5. ''' → logprob: -8.13758373260498
    6. 'N' → logprob: -8.88758373260498
    7. ' I' → logprob: -10.51258373260498
    8. 'd' → logprob: -10.63758373260498
    9. '(not' → logprob: -10.88758373260498
    10. 'K' → logprob: -11.13758373260498

Token 1149: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014051388017833233
    2. ' ==' → logprob: -4.38905143737793
    3. '!=' → logprob: -6.51405143737793
    4. ' !=' → logprob: -10.13905143737793
    5. '>' → logprob: -11.51405143737793
    6. '<' → logprob: -13.38905143737793
    7. '=' → logprob: -13.38905143737793
    8. 'else' → logprob: -13.38905143737793
    9. ' ' → logprob: -14.26405143737793
    10. '0' → logprob: -14.26405143737793

Token 1150: ' J' (ID: 643)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '
' → logprob: -18.50007438659668
    4. ' ' → logprob: -19.12507438659668
    5. '=' → logprob: -19.37507438659668
    6. '```' → logprob: -19.50007438659668
    7. '۰' → logprob: -19.75007438659668
    8. '  ' → logprob: -20.00007438659668
    9. '   ' → logprob: -20.25007438659668
    10. ' ' → logprob: -20.37507438659668

Token 1151: ' ==' (ID: 951)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33520516753196716
    2. ' else' → logprob: -1.3352051973342896
    3. '==' → logprob: -3.835205078125
    4. '0' → logprob: -10.210205078125
    5. ' ==' → logprob: -10.460205078125
    6. ' ' → logprob: -10.960205078125
    7. '!=' → logprob: -10.960205078125
    8. '
' → logprob: -12.960205078125
    9. ')' → logprob: -13.335205078125
    10. 'and' → logprob: -14.210205078125

Token 1152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. ' ' → logprob: -21.875
    4. '=' → logprob: -22.125
    5. '۰' → logprob: -22.125
    6. '０' → logprob: -22.875
    7. '
' → logprob: -23.0
    8. '```' → logprob: -23.125
    9. '   ' → logprob: -23.5
    10. '00' → logprob: -23.75

Token 1153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -22.25
    4. '０' → logprob: -23.625
    5. '=' → logprob: -24.0
    6. ' ' → logprob: -24.125
    7. '
' → logprob: -24.25
    8. '```' → logprob: -24.75
    9. '00' → logprob: -24.875
    10. '`' → logprob: -25.0

Token 1154: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0011705794604495168
    2. ' else' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.50117015838623
    4. '
' → logprob: -16.001171112060547
    5. '```' → logprob: -16.876171112060547
    6. ' ' → logprob: -17.126171112060547
    7. '     ' → logprob: -17.501171112060547
    8. '	else' → logprob: -18.751171112060547
    9. '    ' → logprob: -19.376171112060547
    10. '  ' → logprob: -19.501171112060547

Token 1155: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.011078352108597755
    2. 'format' → logprob: -4.511078357696533
    3. 'f' → logprob: -11.011077880859375
    4. ' bin' → logprob: -11.511077880859375
    5. '(bin' → logprob: -13.011077880859375
    6. ' format' → logprob: -13.261077880859375
    7. '/bin' → logprob: -17.261077880859375
    8. '   ' → logprob: -17.511077880859375
    9. 'str' → logprob: -17.886077880859375
    10. '(format' → logprob: -18.386077880859375

Token 1156: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -1.4259644558478612e-05
    2. '[J' → logprob: -12.250014305114746
    3. '(j' → logprob: -12.625014305114746
    4. 'J' → logprob: -12.875014305114746
    5. '(I' → logprob: -13.000014305114746
    6. '(' → logprob: -13.750014305114746
    7. '(Q' → logprob: -16.37501335144043
    8. '(
' → logprob: -17.12501335144043
    9. ' (' → logprob: -17.25001335144043
    10. ' J' → logprob: -17.87501335144043

Token 1157: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -9.078839502763003e-05
    2. '[I' → logprob: -10.125090599060059
    3. ').' → logprob: -10.250090599060059
    4. '(I' → logprob: -12.250090599060059
    5. ' )[' → logprob: -12.750090599060059
    6. '())[' → logprob: -12.875090599060059
    7. 'I' → logprob: -13.375090599060059
    8. '')[' → logprob: -13.750090599060059
    9. ')' → logprob: -13.875090599060059
    10. '
' → logprob: -15.500090599060059

Token 1158: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ':' → logprob: -12.875004768371582
    3. 'I' → logprob: -13.625004768371582
    4. '
' → logprob: -14.375004768371582
    5. ':I' → logprob: -15.500004768371582
    6. '][' → logprob: -16.6250057220459
    7. ' ' → logprob: -16.6250057220459
    8. '```' → logprob: -16.7500057220459
    9. '

' → logprob: -17.8750057220459
    10. '-' → logprob: -18.1250057220459

Token 1159: ':].' (ID: 193388)
  Prédit: ':].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.0003055493871215731
    2. '.' → logprob: -8.87530517578125
    3. '].' → logprob: -9.87530517578125
    4. ':' → logprob: -10.12530517578125
    5. ':I' → logprob: -10.25030517578125
    6. ').' → logprob: -11.00030517578125
    7. '.z' → logprob: -11.25030517578125
    8. ':z' → logprob: -13.50030517578125
    9. ''].' → logprob: -13.75030517578125
    10. '```' → logprob: -13.87530517578125

Token 1160: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06198056787252426
    2. 'r' → logprob: -2.8119804859161377
    3. '.z' → logprob: -11.311980247497559
    4. ' z' → logprob: -14.436980247497559
    5. '```' → logprob: -16.561981201171875
    6. 'rstrip' → logprob: -17.811981201171875
    7. '
' → logprob: -18.436981201171875
    8. ' r' → logprob: -18.561981201171875
    9. '.r' → logprob: -18.686981201171875
    10. 'zr' → logprob: -19.436981201171875

Token 1161: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.00014048899174667895
    2. 'filled' → logprob: -9.750140190124512
    3. '```' → logprob: -10.625140190124512
    4. 'pad' → logprob: -10.875140190124512
    5. 'ff' → logprob: -11.625140190124512
    6. 'ip' → logprob: -12.000140190124512
    7. 'p' → logprob: -12.875140190124512
    8. 'fff' → logprob: -13.000140190124512
    9. 'ed' → logprob: -13.000140190124512
    10. '...' → logprob: -13.125140190124512

Token 1162: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.0040785204619169235
    2. 'I' → logprob: -5.504078388214111
    3. '(i' → logprob: -16.504077911376953
    4. '(' → logprob: -17.379077911376953
    5. '[I' → logprob: -18.004077911376953
    6. '```' → logprob: -18.754077911376953
    7. ' I' → logprob: -19.504077911376953
    8. '   ' → logprob: -20.129077911376953
    9. '	I' → logprob: -20.754077911376953
    10. ' (' → logprob: -20.879077911376953

Token 1163: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007125511183403432
    2. ')' → logprob: -7.2507123947143555
    3. ')))' → logprob: -13.250712394714355
    4. '()))' → logprob: -15.000712394714355
    5. '))
' → logprob: -15.875712394714355
    6. ''))' → logprob: -16.375713348388672
    7. ' ))' → logprob: -16.375713348388672
    8. '})' → logprob: -18.000713348388672
    9. '])' → logprob: -18.125713348388672
    10. '),' → logprob: -18.250713348388672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1161
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 273
Tokens correctement prédits (top 10): 619
Précision stricte (1ère position): 22.22%
Précision adaptée (1ère position): 23.51%
Précision (top 10): 53.32%
================================================================================
