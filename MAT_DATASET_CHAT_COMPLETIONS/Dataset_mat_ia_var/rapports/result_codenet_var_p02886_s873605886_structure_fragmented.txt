================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lire_entier():
    return int(input())

def lire_liste_entiers():
    return list(map(int, input().split()))

def calculer_carre(valeur):
    return valeur ** 2

def calculer_carres(liste):
    return [calculer_carre(x) for x in liste]

def somme_liste(liste):
    return sum(liste)

def calculer_produit(valeur1, valeur2):
    return valeur1 * valeur2

def calculer_difference(valeur1, valeur2):
    return valeur1 - valeur2

def division_entiere(valeur, diviseur):
    return valeur // diviseur

def afficher_resultat(resultat):
    print(resultat)

def main():
    n = lire_entier()
    d = lire_liste_entiers()
    dd = calculer_carres(d)
    somme_d = somme_liste(d)
    somme_dd = somme_liste(dd)
    prod = calculer_produit(somme_d, somme_d)
    diff = calculer_difference(prod, somme_dd)
    resultat = division_entiere(diff, 2)
    afficher_resultat(resultat)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' lire' (ID: 46082)
  → Token d'amorce (pas de prédiction)

Token 2: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 3: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.06404968351125717
    2. '_' → logprob: -3.43904972076416
    3. 'r' → logprob: -4.56404972076416
    4. '()' → logprob: -5.31404972076416
    5. '(' → logprob: -5.56404972076416
    6. 'er' → logprob: -5.68904972076416
    7. 'ree' → logprob: -5.93904972076416
    8. 'e' → logprob: -7.06404972076416
    9. '_r' → logprob: -7.06404972076416
    10. 're' → logprob: -7.43904972076416

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023383046500384808
    2. '_' → logprob: -6.252338409423828
    3. '```' → logprob: -8.627338409423828
    4. '():' → logprob: -8.877338409423828
    5. ' (' → logprob: -10.502338409423828
    6. ':' → logprob: -11.377338409423828
    7. '(_' → logprob: -12.127338409423828
    8. '("("' → logprob: -12.127338409423828
    9. '[' → logprob: -12.377338409423828
    10. '()' → logprob: -12.502338409423828

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7052956223487854
    2. '(' → logprob: -1.2052955627441406
    3. '():' → logprob: -3.0802955627441406
    4. '   ' → logprob: -3.4552955627441406
    5. ':' → logprob: -3.4552955627441406
    6. ''' → logprob: -3.8302955627441406
    7. '\' → logprob: -4.080295562744141
    8. '``' → logprob: -4.705295562744141
    9. '    
' → logprob: -5.205295562744141
    10. '()' → logprob: -5.205295562744141

Token 6: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2926714420318604
    2. 'n' → logprob: -1.5426714420318604
    3. 'return' (adapté à ' return') → logprob: -1.5426714420318604
    4. ' ' → logprob: -2.5426714420318604
    5. 'try' → logprob: -2.6676714420318604
    6. '```' → logprob: -3.0426714420318604
    7. 'x' → logprob: -3.6676714420318604
    8. 'i' → logprob: -4.042671203613281
    9. ' return' → logprob: -4.417671203613281
    10. '    ' → logprob: -4.917671203613281

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06349191069602966
    2. ' ' → logprob: -3.0634918212890625
    3. 'int' → logprob: -4.4384918212890625
    4. ' ' → logprob: -7.5634918212890625
    5. ' input' → logprob: -7.6884918212890625
    6. '(int' → logprob: -7.6884918212890625
    7. '0' → logprob: -7.8134918212890625
    8. '  ' → logprob: -8.063491821289062
    9. 'input' → logprob: -8.938491821289062
    10. ' )' → logprob: -9.188491821289062

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01803170144557953
    2. '(input' → logprob: -4.143031597137451
    3. '('' → logprob: -7.018031597137451
    4. '()' → logprob: -7.768031597137451
    5. 'input' → logprob: -8.14303207397461
    6. '```' → logprob: -8.89303207397461
    7. ''' → logprob: -9.64303207397461
    8. ' (' → logprob: -10.01803207397461
    9. '("("' → logprob: -10.76803207397461
    10. '("")' → logprob: -11.14303207397461

Token 9: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022113965824246407
    2. ')' → logprob: -7.127211570739746
    3. '('' → logprob: -7.377211570739746
    4. '("("' → logprob: -7.627211570739746
    5. '(""))' → logprob: -9.377211570739746
    6. '(
' → logprob: -10.127211570739746
    7. ' (' → logprob: -10.502211570739746
    8. ''' → logprob: -10.502211570739746
    9. '()' → logprob: -10.877211570739746
    10. '())' → logprob: -11.002211570739746

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6383901834487915
    2. '()' → logprob: -1.8883901834487915
    3. '\n' → logprob: -2.638390064239502
    4. '(
' → logprob: -2.638390064239502
    5. 'def' → logprob: -2.638390064239502
    6. '#' → logprob: -3.638390064239502
    7. '<|end|>' → logprob: -4.013390064239502
    8. ')' → logprob: -4.263390064239502
    9. '\' → logprob: -4.763390064239502
    10. '
' → logprob: -5.013390064239502

Token 11: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -1.333571434020996
    2. ' espace' → logprob: -1.333571434020996
    3. ' saisir' → logprob: -1.958571434020996
    4. ' somme' → logprob: -2.583571434020996
    5. ' ajouter' → logprob: -2.958571434020996
    6. ' calcul' → logprob: -2.958571434020996
    7. 's' → logprob: -3.583571434020996
    8. ' addition' → logprob: -3.708571434020996
    9. ' ' → logprob: -4.083571434020996
    10. ' factor' → logprob: -4.458571434020996

Token 12: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009894612012431026
    2. '(' → logprob: -7.6259894371032715
    3. '_ent' → logprob: -8.87598991394043
    4. '_s' → logprob: -9.12598991394043
    5. '_sat' → logprob: -10.62598991394043
    6. '_a' → logprob: -11.00098991394043
    7. '_l' → logprob: -11.00098991394043
    8. ' _' → logprob: -11.75098991394043
    9. '_b' → logprob: -11.87598991394043
    10. '()' → logprob: -11.87598991394043

Token 13: 'iste' (ID: 4872)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.15037134289741516
    2. 'ine' → logprob: -3.2753713130950928
    3. '_ent' → logprob: -3.5253713130950928
    4. 'ent' → logprob: -3.9003713130950928
    5. '_' → logprob: -4.525371551513672
    6. 'ong' → logprob: -4.775371551513672
    7. 'ire' → logprob: -4.900371551513672
    8. 'iste' → logprob: -5.025371551513672
    9. 'e' → logprob: -5.650371551513672
    10. 'ist' → logprob: -6.400371551513672

Token 14: '_ent' (ID: 66249)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2231515645980835
    2. '()' → logprob: -1.3481515645980835
    3. '_' → logprob: -1.4731515645980835
    4. '():' → logprob: -1.5981515645980835
    5. '```' → logprob: -5.973151683807373
    6. '_list' → logprob: -6.473151683807373
    7. '()">' → logprob: -6.973151683807373
    8. '_l' → logprob: -7.598151683807373
    9. '[' → logprob: -7.723151683807373
    10. '_a' → logprob: -7.848151683807373

Token 15: 'iers' (ID: 11012)
  Prédit: 'iere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iere' → logprob: -0.6631381511688232
    2. 'ier' → logprob: -0.7881381511688232
    3. 'i' → logprob: -4.538138389587402
    4. 'iers' → logprob: -5.038138389587402
    5. 'ière' → logprob: -5.788138389587402
    6. 'ire' → logprob: -6.163138389587402
    7. '```' → logprob: -6.288138389587402
    8. '(' → logprob: -6.788138389587402
    9. '_' → logprob: -7.163138389587402
    10. '()' → logprob: -7.413138389587402

Token 16: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1526140421628952
    2. '():' → logprob: -2.027614116668701
    3. '()' → logprob: -5.152614116668701
    4. '("("' → logprob: -6.652614116668701
    5. '(()' → logprob: -7.652614116668701
    6. '(n' → logprob: -7.902614116668701
    7. '```' → logprob: -8.402613639831543
    8. '((' → logprob: -8.652613639831543
    9. '_' → logprob: -8.652613639831543
    10. '('' → logprob: -8.777613639831543

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20855657756328583
    2. '[]' → logprob: -2.083556652069092
    3. '[' → logprob: -2.833556652069092
    4. ' []' → logprob: -5.708556652069092
    5. '    ' → logprob: -7.833556652069092
    6. '(' → logprob: -8.458556175231934
    7. ' ' → logprob: -8.583556175231934
    8. ' return' → logprob: -8.958556175231934
    9. '()' → logprob: -8.958556175231934
    10. '[:]' → logprob: -9.083556175231934

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2753627598285675
    2. ' return' → logprob: -1.7753627300262451
    3. 'return' (adapté à ' return') → logprob: -3.650362730026245
    4. '[' → logprob: -4.275362968444824
    5. ' lst' → logprob: -5.025362968444824
    6. '[]' → logprob: -5.400362968444824
    7. ' []' → logprob: -5.650362968444824
    8. 'l' → logprob: -5.775362968444824
    9. 'liste' → logprob: -5.900362968444824
    10. ' liste' → logprob: -5.900362968444824

Token 19: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5500402450561523
    2. ' list' → logprob: -1.1750402450561523
    3. '[list' → logprob: -2.8000402450561523
    4. '[' → logprob: -3.5500402450561523
    5. 'list' → logprob: -3.8000402450561523
    6. '[int' → logprob: -6.425040245056152
    7. ' []' → logprob: -8.050040245056152
    8. '[input' → logprob: -8.925040245056152
    9. '[]' → logprob: -9.300040245056152
    10. '[l' → logprob: -9.800040245056152

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010116089135408401
    2. '(map' → logprob: -4.885116100311279
    3. '(int' → logprob: -6.010116100311279
    4. '(range' → logprob: -11.135115623474121
    5. '(input' → logprob: -11.635115623474121
    6. '(

' → logprob: -11.760115623474121
    7. '(eval' → logprob: -11.885115623474121
    8. '(s' → logprob: -12.885115623474121
    9. '(
' → logprob: -13.135115623474121
    10. '()' → logprob: -13.510115623474121

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009997950866818428
    2. '(' → logprob: -4.634997844696045
    3. 'int' → logprob: -8.509998321533203
    4. ' int' → logprob: -10.884998321533203
    5. ' (' → logprob: -12.134998321533203
    6. '   ' → logprob: -12.634998321533203
    7. '<int' → logprob: -12.634998321533203
    8. ')' → logprob: -13.009998321533203
    9. '(
' → logprob: -13.009998321533203
    10. '=int' → logprob: -13.009998321533203

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02316291257739067
    2. ',input' → logprob: -4.023162841796875
    3. ',' → logprob: -5.773162841796875
    4. 'input' → logprob: -6.648162841796875
    5. '(' → logprob: -7.773162841796875
    6. '))' → logprob: -9.773162841796875
    7. ' input' → logprob: -10.398162841796875
    8. ' ,' → logprob: -10.648162841796875
    9. ' (' → logprob: -10.773162841796875
    10. '=input' → logprob: -11.148162841796875

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2259543538093567
    2. ' input' → logprob: -1.600954294204712
    3. '(input' → logprob: -7.600954532623291
    4. ',input' → logprob: -10.600954055786133
    5. '=input' → logprob: -11.975954055786133
    6. '   ' → logprob: -12.350954055786133
    7. '<input' → logprob: -12.975954055786133
    8. '	input' → logprob: -13.350954055786133
    9. ' ' → logprob: -14.100954055786133
    10. '[input' → logprob: -14.725954055786133

Token 24: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.933661162853241
    2. '()))' → logprob: -0.933661162853241
    3. '())' → logprob: -2.5586612224578857
    4. '())))' → logprob: -2.5586612224578857
    5. '().' → logprob: -3.1836612224578857
    6. ')' → logprob: -5.183660984039307
    7. ')))' → logprob: -5.558660984039307
    8. '))' → logprob: -6.058660984039307
    9. '()));' → logprob: -6.308660984039307
    10. '(' → logprob: -6.433660984039307

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031836593989282846
    2. 'strip' → logprob: -5.753183841705322
    3. 'rstrip' → logprob: -12.503183364868164
    4. ' split' → logprob: -13.128183364868164
    5. 'read' → logprob: -16.253183364868164
    6. '(split' → logprob: -17.003183364868164
    7. '.split' → logprob: -17.128183364868164
    8. 'spl' → logprob: -17.253183364868164
    9. ' strip' → logprob: -18.003183364868164
    10. '_split' → logprob: -19.003183364868164

Token 26: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16338960826396942
    2. '())))' → logprob: -2.7883896827697754
    3. '()' → logprob: -2.9133896827697754
    4. ')))' → logprob: -4.163389682769775
    5. '))' → logprob: -4.663389682769775
    6. '())' → logprob: -4.663389682769775
    7. '(' → logprob: -8.413389205932617
    8. ')' → logprob: -8.538389205932617
    9. '())))
' → logprob: -10.788389205932617
    10. '()))
' → logprob: -11.038389205932617

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0042049516923725605
    2. '
' → logprob: -6.004204750061035
    3. '#' → logprob: -7.129204750061035
    4. '

' → logprob: -8.254204750061035
    5. 'n' → logprob: -8.504204750061035
    6. '<|end|>' → logprob: -8.879204750061035
    7. 'class' → logprob: -9.379204750061035
    8. 'd' → logprob: -10.004204750061035
    9. '\' → logprob: -10.129204750061035
    10. '```' → logprob: -10.629204750061035

Token 28: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.9372081160545349
    2. ' main' → logprob: -1.8122081756591797
    3. ' somme' → logprob: -2.3122081756591797
    4. ' lire' → logprob: -2.8122081756591797
    5. ' factor' → logprob: -3.3122081756591797
    6. ' addition' → logprob: -3.3122081756591797
    7. 's' → logprob: -3.5622081756591797
    8. ' saisir' → logprob: -3.5622081756591797
    9. ' tr' → logprob: -4.18720817565918
    10. ' compter' → logprob: -4.31220817565918

Token 29: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0875573605298996
    2. '_' → logprob: -3.212557315826416
    3. 'atrice' → logprob: -4.712557315826416
    4. '_sum' → logprob: -5.212557315826416
    5. '_factor' → logprob: -5.212557315826416
    6. '_average' → logprob: -5.462557315826416
    7. '_er' → logprob: -5.837557315826416
    8. '_surface' → logprob: -6.212557315826416
    9. '_m' → logprob: -6.337557315826416
    10. '_s' → logprob: -6.337557315826416

Token 30: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009821493178606033
    2. '_s' → logprob: -5.63482141494751
    3. '_m' → logprob: -6.25982141494751
    4. '_max' → logprob: -7.88482141494751
    5. '_nombre' → logprob: -8.009821891784668
    6. '_factor' → logprob: -8.134821891784668
    7. '_val' → logprob: -8.259821891784668
    8. '_p' → logprob: -8.259821891784668
    9. '_total' → logprob: -8.384821891784668
    10. '_f' → logprob: -8.634821891784668

Token 31: 'arre' (ID: 55489)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.156814694404602
    2. 'ont' → logprob: -1.656814694404602
    3. 'arre' → logprob: -2.1568145751953125
    4. 'o' → logprob: -3.1568145751953125
    5. 'ho' → logprob: -3.5318145751953125
    6. 'ham' → logprob: -3.6568145751953125
    7. 'om' → logprob: -3.7818145751953125
    8. 'omp' → logprob: -3.8443145751953125
    9. 'oe' → logprob: -3.9068145751953125
    10. 'umul' → logprob: -4.0943145751953125

Token 32: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4468291401863098
    2. 's' → logprob: -1.071829080581665
    3. '_' → logprob: -4.946829319000244
    4. '(s' → logprob: -5.071829319000244
    5. '(x' → logprob: -6.571829319000244
    6. '(n' → logprob: -7.196829319000244
    7. '(_)' → logprob: -7.321829319000244
    8. '(_' → logprob: -7.946829319000244
    9. '()' → logprob: -8.446828842163086
    10. '_s' → logprob: -8.821828842163086

Token 33: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.005916827358305454
    2. ')' → logprob: -5.880916595458984
    3. 'e' → logprob: -6.005916595458984
    4. 'eu' → logprob: -8.505916595458984
    5. 'eurs' → logprob: -8.880916595458984
    6. 'ue' → logprob: -9.255916595458984
    7. '))' → logprob: -9.755916595458984
    8. 'ur' → logprob: -10.005916595458984
    9. 'uer' → logprob: -10.255916595458984
    10. 'u' → logprob: -10.880916595458984

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03054303117096424
    2. ')' → logprob: -3.655543088912964
    3. ')):' → logprob: -5.905542850494385
    4. ' ):' → logprob: -7.280542850494385
    5. '   ' → logprob: -7.905542850494385
    6. ' ' → logprob: -9.030543327331543
    7. '(' → logprob: -9.155543327331543
    8. '))' → logprob: -10.155543327331543
    9. '  ' → logprob: -10.280543327331543
    10. '):
' → logprob: -10.530543327331543

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010538244619965553
    2. 'val' → logprob: -5.260538101196289
    3. ' valeur' → logprob: -5.385538101196289
    4. '    ' → logprob: -8.885538101196289
    5. ' val' → logprob: -8.885538101196289
    6. ':' → logprob: -8.885538101196289
    7. ' return' → logprob: -9.385538101196289
    8. ' ' → logprob: -9.885538101196289
    9. 'return' → logprob: -10.135538101196289
    10. '  ' → logprob: -10.760538101196289

Token 36: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24777790904045105
    2. ' return' → logprob: -1.6227779388427734
    3. 'return' (adapté à ' return') → logprob: -4.122777938842773
    4. '    ' → logprob: -5.497777938842773
    5. ' ' → logprob: -7.497777938842773
    6. ' val' → logprob: -8.122777938842773
    7. ' )' → logprob: -8.622777938842773
    8. ')' → logprob: -8.622777938842773
    9. ' valeur' → logprob: -9.122777938842773
    10. 'val' → logprob: -9.247777938842773

Token 37: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.013361150398850441
    2. 'val' → logprob: -4.388360977172852
    3. ' ' → logprob: -7.138360977172852
    4. ' val' → logprob: -10.763360977172852
    5. 'value' → logprob: -11.513360977172852
    6. '```' → logprob: -11.763360977172852
    7. ' value' → logprob: -11.888360977172852
    8. ' vale' → logprob: -12.513360977172852
    9. ' valeurs' → logprob: -13.763360977172852
    10. ' valore' → logprob: -14.013360977172852

Token 38: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8755419850349426
    2. ' *' → logprob: -1.2505419254302979
    3. ' **' → logprob: -1.3755419254302979
    4. '*' → logprob: -3.125541925430298
    5. ' ' → logprob: -8.500541687011719
    6. '²' → logprob: -9.250541687011719
    7. '   ' → logprob: -10.750541687011719
    8. '  ' → logprob: -10.875541687011719
    9. ' ' → logprob: -11.125541687011719
    10. '***' → logprob: -11.750541687011719

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.000335693359375
    4. ' ' → logprob: -17.125335693359375
    5. '```' → logprob: -17.250335693359375
    6. '  ' → logprob: -17.875335693359375
    7. '۲' → logprob: -19.500335693359375
    8. '２' → logprob: -19.750335693359375
    9. '²' → logprob: -19.875335693359375
    10. '٢' → logprob: -19.937835693359375

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. '  ' → logprob: -22.5
    6. '0' → logprob: -22.625
    7. '٢' → logprob: -23.0
    8. '۲' → logprob: -23.125
    9. '２' → logprob: -23.25
    10. '=' → logprob: -23.25

Token 41: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2955789268016815
    2. '
' → logprob: -2.045578956604004
    3. 'def' → logprob: -3.295578956604004
    4. '

' → logprob: -3.420578956604004
    5. '\n' → logprob: -4.045578956604004
    6. '\' → logprob: -4.170578956604004
    7. '(
' → logprob: -5.045578956604004
    8. '_' → logprob: -5.295578956604004
    9. '<|end|>' → logprob: -6.420578956604004
    10. '#' → logprob: -6.795578956604004

Token 42: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27186906337738037
    2. 'def' → logprob: -1.8968690633773804
    3. '
' → logprob: -3.39686918258667
    4. '\' → logprob: -3.77186918258667
    5. '#' → logprob: -4.14686918258667
    6. 'n' → logprob: -5.52186918258667
    7. 'e' → logprob: -5.52186918258667
    8. '\n' → logprob: -6.39686918258667
    9. 'a' → logprob: -6.52186918258667
    10. '

' → logprob: -6.77186918258667

Token 43: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.012703885324299335
    2. ' carre' → logprob: -5.512703895568848
    3. ' somme' → logprob: -5.887703895568848
    4. 'calcul' → logprob: -7.012703895568848
    5. ' addition' → logprob: -7.137703895568848
    6. ' ' → logprob: -7.137703895568848
    7. ' multiplication' → logprob: -7.887703895568848
    8. ' calc' → logprob: -8.012703895568848
    9. ' cube' → logprob: -8.262703895568848
    10. ' main' → logprob: -8.762703895568848

Token 44: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.001054603373631835
    2. 'e' → logprob: -6.876054763793945
    3. '_e' → logprob: -11.001054763793945
    4. '_' → logprob: -12.626054763793945
    5. '_er' → logprob: -14.251054763793945
    6. 'é' → logprob: -15.126054763793945
    7. 'a' → logprob: -15.251054763793945
    8. '_c' → logprob: -16.251054763793945
    9. '```' → logprob: -16.251054763793945
    10. '   ' → logprob: -16.501054763793945

Token 45: '_car' (ID: 62991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27936285734176636
    2. '_s' → logprob: -2.154362916946411
    3. '_c' → logprob: -2.279362916946411
    4. '_cube' → logprob: -4.904362678527832
    5. '_la' → logprob: -5.154362678527832
    6. '_m' → logprob: -5.779362678527832
    7. '_l' → logprob: -5.779362678527832
    8. '_sum' → logprob: -7.029362678527832
    9. '_r' → logprob: -7.154362678527832
    10. '_factor' → logprob: -7.404362678527832

Token 46: 'res' (ID: 430)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.001256303396075964
    2. 'r' → logprob: -7.501256465911865
    3. 'e' → logprob: -7.626256465911865
    4. 'ré' → logprob: -8.751255989074707
    5. 'ree' → logprob: -10.501255989074707
    6. '_re' → logprob: -11.251255989074707
    7. 'res' → logprob: -11.876255989074707
    8. '_' → logprob: -13.001255989074707
    9. 'rer' → logprob: -13.501255989074707
    10. 'reau' → logprob: -13.626255989074707

Token 47: '(l' (ID: 4179)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.6194298267364502
    2. '_' → logprob: -0.9944298267364502
    3. 's' → logprob: -3.11942982673645
    4. '(' → logprob: -3.74442982673645
    5. '_de' → logprob: -4.869429588317871
    6. '_(' → logprob: -5.244429588317871
    7. '(_)' → logprob: -5.994429588317871
    8. 'des' → logprob: -6.244429588317871
    9. '_val' → logprob: -6.494429588317871
    10. '(_' → logprob: -6.619429588317871

Token 48: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0018536734860390425
    2. 'istes' → logprob: -6.7518534660339355
    3. 'ist' → logprob: -7.5018534660339355
    4. 'i' → logprob: -10.251853942871094
    5. 'is' → logprob: -10.626853942871094
    6. '   ' → logprob: -11.876853942871094
    7. 'a' → logprob: -11.876853942871094
    8. 'isted' → logprob: -12.001853942871094
    9. ')' → logprob: -12.376853942871094
    10. 'liste' → logprob: -12.501853942871094

Token 49: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6303547024726868
    2. '_' → logprob: -1.005354642868042
    3. '_)' → logprob: -3.505354642868042
    4. '):' → logprob: -3.755354642868042
    5. '_l' → logprob: -4.005354881286621
    6. '(l' → logprob: -4.880354881286621
    7. ')_' → logprob: -4.880354881286621
    8. '(' → logprob: -5.380354881286621
    9. '_val' → logprob: -5.755354881286621
    10. ',' → logprob: -6.755354881286621

Token 50: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8321107029914856
    2. '(' → logprob: -0.9571107029914856
    3. '   ' → logprob: -1.9571106433868408
    4. '[:]' → logprob: -4.45711088180542
    5. '_' → logprob: -4.83211088180542
    6. ':' → logprob: -4.83211088180542
    7. '[]' → logprob: -4.95711088180542
    8. '(l' → logprob: -6.95711088180542
    9. '=' → logprob: -7.20711088180542
    10. 'return' → logprob: -7.45711088180542

Token 51: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.803827166557312
    2. '[' → logprob: -1.053827166557312
    3. ' [' → logprob: -2.6788272857666016
    4. 'return' (adapté à ' return') → logprob: -2.8038272857666016
    5. ' return' → logprob: -3.3038272857666016
    6. ' list' → logprob: -3.8038272857666016
    7. 'list' → logprob: -4.803827285766602
    8. '[list' → logprob: -5.178827285766602
    9. '[]' → logprob: -7.303827285766602
    10. '[i' → logprob: -8.553827285766602

Token 52: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.10921135544776917
    2. '[' → logprob: -2.6092114448547363
    3. ' [' → logprob: -3.6092114448547363
    4. ' list' → logprob: -6.609211444854736
    5. 'list' → logprob: -6.609211444854736
    6. '[l' → logprob: -9.734210968017578
    7. '[len' → logprob: -11.359210968017578
    8. '[List' → logprob: -11.984210968017578
    9. '[val' → logprob: -11.984210968017578
    10. '[m' → logprob: -13.359210968017578

Token 53: 'calcul' (ID: 157994)
  Prédit: 'calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0006565583753399551
    2. 'x' → logprob: -7.500656604766846
    3. 'val' → logprob: -9.375656127929688
    4. ' calcul' → logprob: -11.375656127929688
    5. 'v' → logprob: -12.875656127929688
    6. 'cal' → logprob: -13.625656127929688
    7. '   ' → logprob: -14.000656127929688
    8. 'calc' → logprob: -14.375656127929688
    9. 'Calcul' → logprob: -14.875656127929688
    10. ' x' → logprob: -15.000656127929688

Token 54: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06755059212446213
    2. 'ler' → logprob: -2.9425506591796875
    3. 'l' → logprob: -5.0675506591796875
    4. 'uler' → logprob: -6.0675506591796875
    5. '   ' → logprob: -7.1925506591796875
    6. 'rer' → logprob: -7.6925506591796875
    7. 'f' → logprob: -7.9425506591796875
    8. 'calcul' → logprob: -8.442550659179688
    9. 'e' → logprob: -8.567550659179688
    10. 'uer' → logprob: -8.692550659179688

Token 55: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.741137283621356e-05
    2. '_' → logprob: -10.000057220458984
    3. '_car' → logprob: -11.375057220458984
    4. 'c' → logprob: -15.750057220458984
    5. '_ca' → logprob: -16.000057220458984
    6. 'car' → logprob: -16.250057220458984
    7. '_val' → logprob: -18.250057220458984
    8. ' ' → logprob: -18.250057220458984
    9. '```' → logprob: -18.250057220458984
    10. '_cal' → logprob: -18.375057220458984

Token 56: 'arre' (ID: 55489)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3518710136413574
    2. 'arre' → logprob: -1.8518710136413574
    3. 'ar' → logprob: -1.9768710136413574
    4. 'arr' → logprob: -6.851871013641357
    5. 'arrer' → logprob: -10.726871490478516
    6. 'are' → logprob: -10.851871490478516
    7. 'arro' → logprob: -10.976871490478516
    8. 'arra' → logprob: -11.351871490478516
    9. 'car' → logprob: -11.851871490478516
    10. 'arle' → logprob: -11.851871490478516

Token 57: '(x' (ID: 4061)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.27653035521507263
    2. '(x' → logprob: -1.776530385017395
    3. '(v' → logprob: -3.2765302658081055
    4. '(' → logprob: -3.4015302658081055
    5. '(i' → logprob: -7.5265302658081055
    6. '(element' → logprob: -8.526530265808105
    7. '(elem' → logprob: -8.526530265808105
    8. '(e' → logprob: -9.151530265808105
    9. '(el' → logprob: -9.776530265808105
    10. '(ele' → logprob: -9.776530265808105

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.090760431718081e-05
    2. ' )' → logprob: -9.375090599060059
    3. '   ' → logprob: -13.250090599060059
    4. 'for' → logprob: -13.625090599060059
    5. ' for' → logprob: -14.250090599060059
    6. ' ' → logprob: -14.500090599060059
    7. ')
' → logprob: -15.125090599060059
    8. ')]' → logprob: -15.500090599060059
    9. '))' → logprob: -15.625090599060059
    10. '),' → logprob: -15.625090599060059

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38372790813446045
    2. ')' → logprob: -1.8837279081344604
    3. 'for' → logprob: -1.8837279081344604
    4. ' ' → logprob: -4.88372802734375
    5. '   ' → logprob: -5.25872802734375
    6. ']' → logprob: -7.13372802734375
    7. ' x' → logprob: -7.88372802734375
    8. '  ' → logprob: -8.75872802734375
    9. ' )' → logprob: -8.88372802734375
    10. '    ' → logprob: -9.00872802734375

Token 60: ' x' (ID: 1215)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6310571432113647
    2. ' x' → logprob: -1.3810571432113647
    3. ' ' → logprob: -2.2560572624206543
    4. 'x' → logprob: -2.3810572624206543
    5. 'liste' → logprob: -4.256057262420654
    6. '   ' → logprob: -6.381057262420654
    7. '  ' → logprob: -7.131057262420654
    8. ' l' → logprob: -7.756057262420654
    9. ' lst' → logprob: -7.756057262420654
    10. ' ' → logprob: -7.881057262420654

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13707350194454193
    2. 'in' → logprob: -2.137073516845703
    3. ' liste' → logprob: -5.512073516845703
    4. 's' → logprob: -6.262073516845703
    5. ' ' → logprob: -6.262073516845703
    6. 'liste' → logprob: -6.887073516845703
    7. ')' → logprob: -8.637073516845703
    8. '.' → logprob: -8.637073516845703
    9. ' dans' → logprob: -8.762073516845703
    10. ' ' → logprob: -9.387073516845703

Token 62: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.31350740790367126
    2. ' liste' → logprob: -1.3135074377059937
    3. ' ' → logprob: -9.063507080078125
    4. '   ' → logprob: -9.813507080078125
    5. 'list' → logprob: -11.063507080078125
    6. 'lst' → logprob: -11.438507080078125
    7. 'l' → logprob: -11.438507080078125
    8. 'lis' → logprob: -11.813507080078125
    9. '  ' → logprob: -12.438507080078125
    10. 'lista' → logprob: -12.813507080078125

Token 63: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02340306155383587
    2. ')]' → logprob: -3.7734031677246094
    3. '])' → logprob: -8.89840316772461
    4. ' ]' → logprob: -11.27340316772461
    5. '])]' → logprob: -12.39840316772461
    6. '()]' → logprob: -13.02340316772461
    7. ')' → logprob: -13.89840316772461
    8. ']
' → logprob: -15.14840316772461
    9. ']]' → logprob: -15.27340316772461
    10. ']}' → logprob: -15.89840316772461

Token 64: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4721188247203827
    2. 'def' → logprob: -1.472118854522705
    3. 'd' → logprob: -2.847118854522705
    4. '[' → logprob: -3.847118854522705
    5. 'l' → logprob: -4.597118854522705
    6. '(' → logprob: -4.597118854522705
    7. 'p' → logprob: -4.972118854522705
    8. 'print' → logprob: -4.972118854522705
    9. '\' → logprob: -5.097118854522705
    10. 'n' → logprob: -5.347118854522705

Token 65: ' somme' (ID: 64484)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7364067435264587
    2. ' calcul' → logprob: -0.7364067435264587
    3. ' lire' → logprob: -4.1114068031311035
    4. ' main' → logprob: -4.3614068031311035
    5. ' _' → logprob: -5.4864068031311035
    6. 'calcul' → logprob: -5.9864068031311035
    7. ' ' → logprob: -6.2364068031311035
    8. '_cal' → logprob: -7.3614068031311035
    9. ' somme' → logprob: -7.4864068031311035
    10. '_c' → logprob: -7.9864068031311035

Token 66: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05871562659740448
    2. '(' → logprob: -2.933715581893921
    3. '_(' → logprob: -6.1837158203125
    4. 's' → logprob: -7.5587158203125
    5. '_des' → logprob: -7.9337158203125
    6. '_s' → logprob: -8.0587158203125
    7. '(_' → logprob: -9.0587158203125
    8. '(_)' → logprob: -9.6837158203125
    9. '(l' → logprob: -9.8087158203125
    10. '_total' → logprob: -10.1837158203125

Token 67: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0065948134288191795
    2. 'ist' → logprob: -5.256594657897949
    3. 'istes' → logprob: -7.131594657897949
    4. 'is' → logprob: -8.63159465789795
    5. 'i' → logprob: -9.00659465789795
    6. '_' → logprob: -10.13159465789795
    7. 'liste' → logprob: -10.50659465789795
    8. 'ste' → logprob: -10.88159465789795
    9. ' iste' → logprob: -11.00659465789795
    10. '   ' → logprob: -11.00659465789795

Token 68: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5374128222465515
    2. '(l' → logprob: -0.9124128222465515
    3. '_' → logprob: -4.662412643432617
    4. 's' → logprob: -6.287412643432617
    5. '(s' → logprob: -6.912412643432617
    6. '_l' → logprob: -7.162412643432617
    7. '(lst' → logprob: -8.162412643432617
    8. ' (' → logprob: -8.787412643432617
    9. '(ls' → logprob: -9.287412643432617
    10. '_(' → logprob: -9.412412643432617

Token 69: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.000104616025055293
    2. 'ist' → logprob: -9.750104904174805
    3. ')' → logprob: -11.250104904174805
    4. '(' → logprob: -12.250104904174805
    5. 'ste' → logprob: -12.250104904174805
    6. '   ' → logprob: -12.625104904174805
    7. 'is' → logprob: -12.750104904174805
    8. 'a' → logprob: -12.750104904174805
    9. 'istes' → logprob: -12.750104904174805
    10. ' iste' → logprob: -12.875104904174805

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42900338768959045
    2. ')' → logprob: -1.054003357887268
    3. '):
' → logprob: -9.054003715515137
    4. ' ):' → logprob: -9.304003715515137
    5. ' )' → logprob: -9.929003715515137
    6. '   ' → logprob: -10.804003715515137
    7. ')}' → logprob: -12.554003715515137
    8. ')**' → logprob: -12.929003715515137
    9. ' ' → logprob: -13.054003715515137
    10. '):

' → logprob: -13.304003715515137

Token 71: '   ' (ID: 271)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2619825005531311
    2. 'sum' → logprob: -1.6369824409484863
    3. ' return' → logprob: -3.8869824409484863
    4. '   ' → logprob: -4.261982440948486
    5. 'return' → logprob: -7.511982440948486
    6. ' somme' → logprob: -7.886982440948486
    7. '    ' → logprob: -9.011982917785645
    8. ' ' → logprob: -9.136982917785645
    9. '=sum' → logprob: -10.011982917785645
    10. '  ' → logprob: -10.261982917785645

Token 72: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1044187992811203
    2. 'return' (adapté à ' return') → logprob: -2.3544187545776367
    3. '   ' → logprob: -5.729418754577637
    4. ' sum' → logprob: -7.604418754577637
    5. 'sum' → logprob: -7.729418754577637
    6. 's' → logprob: -12.354418754577637
    7. '    ' → logprob: -12.479418754577637
    8. ' ' → logprob: -13.104418754577637
    9. ' retour' → logprob: -13.604418754577637
    10. ' s' → logprob: -13.729418754577637

Token 73: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.020571667701005936
    2. 'sum' → logprob: -3.895571708679199
    3. ' ' → logprob: -11.0205717086792
    4. ' ' → logprob: -11.7705717086792
    5. '	sum' → logprob: -13.2705717086792
    6. '   ' → logprob: -13.3955717086792
    7. '(sum' → logprob: -14.0205717086792
    8. '  ' → logprob: -14.6455717086792
    9. '=sum' → logprob: -15.5205717086792
    10. ' suma' → logprob: -15.6455717086792

Token 74: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04868490621447563
    2. '(l' → logprob: -3.04868483543396
    3. '(s' → logprob: -10.048685073852539
    4. '(list' → logprob: -10.673685073852539
    5. '(lst' → logprob: -11.173685073852539
    6. '(lista' → logprob: -11.798685073852539
    7. '(
' → logprob: -12.548685073852539
    8. ' (' → logprob: -13.298685073852539
    9. '(

' → logprob: -14.048685073852539
    10. '()' → logprob: -14.298685073852539

Token 75: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0006567967939190567
    2. 'ist' → logprob: -8.625657081604004
    3. ')' → logprob: -8.750657081604004
    4. '_' → logprob: -9.000657081604004
    5. 'ste' → logprob: -9.500657081604004
    6. '[' → logprob: -10.250657081604004
    7. ' iste' → logprob: -10.500657081604004
    8. '```' → logprob: -12.125657081604004
    9. '   ' → logprob: -12.375657081604004
    10. '),' → logprob: -12.375657081604004

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.875
    3. ')
' → logprob: -17.125
    4. ' )' → logprob: -17.25
    5. ')`' → logprob: -18.0
    6. ')return' → logprob: -18.875
    7. '   ' → logprob: -19.125
    8. ')}' → logprob: -19.25
    9. '`)' → logprob: -19.25
    10. '())' → logprob: -19.25

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02780923992395401
    2. '#' → logprob: -4.652809143066406
    3. '
' → logprob: -5.277809143066406
    4. '<|end|>' → logprob: -5.902809143066406
    5. '\' → logprob: -6.027809143066406
    6. '(' → logprob: -6.277809143066406
    7. '```' → logprob: -6.652809143066406
    8. '\n' → logprob: -6.902809143066406
    9. 'print' → logprob: -7.152809143066406
    10. 'd' → logprob: -7.902809143066406

Token 78: ' calcul' (ID: 7559)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18628863990306854
    2. ' calcul' → logprob: -1.936288595199585
    3. ' somme' → logprob: -4.936288833618164
    4. 'main' → logprob: -5.311288833618164
    5. ' principale' → logprob: -5.811288833618164
    6. 'calcul' → logprob: -5.936288833618164
    7. ' ' → logprob: -6.811288833618164
    8. ' multiplication' → logprob: -6.811288833618164
    9. ' moyenne' → logprob: -7.561288833618164
    10. ' afficher' → logprob: -7.686288833618164

Token 79: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.0100624169572257e-05
    2. '_er' → logprob: -11.250020027160645
    3. '_' → logprob: -12.500020027160645
    4. 'e' → logprob: -14.125020027160645
    5. '```' → logprob: -14.250020027160645
    6. '_e' → logprob: -15.125020027160645
    7. '   ' → logprob: -15.250020027160645
    8. 's' → logprob: -15.375020027160645
    9. 'erer' → logprob: -15.625020027160645
    10. '_c' → logprob: -15.625020027160645

Token 80: '_pro' (ID: 4617)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2346367985010147
    2. '_c' → logprob: -2.2346367835998535
    3. '_car' → logprob: -2.9846367835998535
    4. '_' → logprob: -3.1096367835998535
    5. '_l' → logprob: -5.8596367835998535
    6. '_sum' → logprob: -7.3596367835998535
    7. '_total' → logprob: -7.4846367835998535
    8. '_m' → logprob: -7.9846367835998535
    9. 's' → logprob: -7.9846367835998535
    10. '_la' → logprob: -8.234637260437012

Token 81: 'duit' (ID: 90246)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.7176765203475952
    2. 'duit' → logprob: -0.7176765203475952
    3. 'd' → logprob: -4.342676639556885
    4. 'f' → logprob: -5.592676639556885
    5. 'duction' → logprob: -6.342676639556885
    6. 'duct' → logprob: -6.342676639556885
    7. 'gram' → logprob: -6.967676639556885
    8. 'fit' → logprob: -7.092676639556885
    9. '_' → logprob: -8.342676162719727
    10. 'portion' → logprob: -8.467676162719727

Token 82: '(val' (ID: 17391)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1006806269288063
    2. '(' → logprob: -2.4756805896759033
    3. '_' → logprob: -4.600680828094482
    4. '(lst' → logprob: -7.225680828094482
    5. '_l' → logprob: -7.475680828094482
    6. '_(' → logprob: -9.475680351257324
    7. ' (' → logprob: -9.725680351257324
    8. '(_' → logprob: -10.475680351257324
    9. '(s' → logprob: -10.600680351257324
    10. '(lista' → logprob: -10.725680351257324

Token 83: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.002235543681308627
    2. 'e' → logprob: -6.252235412597656
    3. 'eurs' → logprob: -8.752235412597656
    4. 'eu' → logprob: -9.627235412597656
    5. '(e' → logprob: -10.002235412597656
    6. 'uer' → logprob: -11.502235412597656
    7. 'eux' → logprob: -12.002235412597656
    8. '(' → logprob: -12.627235412597656
    9. '_e' → logprob: -12.627235412597656
    10. 'ueur' → logprob: -12.627235412597656

Token 84: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012897484935820103
    2. '):' → logprob: -4.637897491455078
    3. ')' → logprob: -6.012897491455078
    4. ' ,' → logprob: -7.512897491455078
    5. ',val' → logprob: -10.137897491455078
    6. ' ):' → logprob: -10.387897491455078
    7. ' )' → logprob: -11.262897491455078
    8. '   ' → logprob: -11.387897491455078
    9. ' ' → logprob: -11.637897491455078
    10. ',
' → logprob: -11.887897491455078

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001576506474521011
    2. ',val' → logprob: -8.875157356262207
    3. ' ,' → logprob: -11.000157356262207
    4. ',v' → logprob: -14.625157356262207
    5. ',value' → logprob: -15.250157356262207
    6. ',
' → logprob: -15.500157356262207
    7. '‌,' → logprob: -16.125158309936523
    8. ',

' → logprob: -16.625158309936523
    9. ')' → logprob: -17.625158309936523
    10. ' ' → logprob: -17.625158309936523

Token 86: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.013552636839449406
    2. ' valeur' → logprob: -4.513552665710449
    3. ' val' → logprob: -6.013552665710449
    4. ' ' → logprob: -10.76355266571045
    5. ' ' → logprob: -10.88855266571045
    6. '	val' → logprob: -11.88855266571045
    7. ' vale' → logprob: -12.88855266571045
    8. '_val' → logprob: -13.38855266571045
    9. ',val' → logprob: -13.63855266571045
    10. ' valeurs' → logprob: -14.01355266571045

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.500004768371582
    4. ',' → logprob: -14.000004768371582
    5. ')' → logprob: -15.750004768371582
    6. '_' → logprob: -16.5000057220459
    7. ' ,' → logprob: -16.6250057220459
    8. '₂' → logprob: -16.8750057220459
    9. 's' → logprob: -17.0000057220459
    10. '۲' → logprob: -17.1250057220459

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008216609712690115
    2. ')' → logprob: -7.125821590423584
    3. ':' → logprob: -11.875822067260742
    4. '):
' → logprob: -12.000822067260742
    5. ' ):' → logprob: -12.625822067260742
    6. ',' → logprob: -14.625822067260742
    7. '=' → logprob: -16.250822067260742
    8. ' ' → logprob: -16.625822067260742
    9. '   ' → logprob: -16.875822067260742
    10. '():' → logprob: -17.375822067260742

Token 89: '   ' (ID: 271)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.1653369963169098
    2. '   ' → logprob: -2.915337085723877
    3. ' return' → logprob: -3.165337085723877
    4. ' val' → logprob: -3.540337085723877
    5. 'val' → logprob: -3.665337085723877
    6. ' ' → logprob: -7.915337085723877
    7. 'return' → logprob: -8.540336608886719
    8. '    ' → logprob: -8.790336608886719
    9. '    
' → logprob: -9.165336608886719
    10. ' vaut' → logprob: -9.165336608886719

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03391561657190323
    2. 'return' (adapté à ' return') → logprob: -4.0339155197143555
    3. '   ' → logprob: -4.1589155197143555
    4. '    ' → logprob: -11.908915519714355
    5. ' retour' → logprob: -12.783915519714355
    6. '	return' → logprob: -12.908915519714355
    7. ' ' → logprob: -14.033915519714355
    8. '    
' → logprob: -14.158915519714355
    9. '```' → logprob: -14.283915519714355
    10. 'eturn' → logprob: -14.408915519714355

Token 91: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.3137061595916748
    2. 'val' → logprob: -1.3137061595916748
    3. ' val' → logprob: -7.813706398010254
    4. ' vale' → logprob: -10.813706398010254
    5. ' ' → logprob: -11.563706398010254
    6. '	val' → logprob: -12.438706398010254
    7. ' Vale' → logprob: -13.938706398010254
    8. ' valeurs' → logprob: -14.063706398010254
    9. ' valore' → logprob: -14.063706398010254
    10. 'value' → logprob: -14.188706398010254

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014741938561201096
    2. '2' → logprob: -4.639741897583008
    3. ' ' → logprob: -5.514741897583008
    4. ' *' → logprob: -8.014741897583008
    5. '_' → logprob: -8.139741897583008
    6. ' _' → logprob: -8.889741897583008
    7. '*' → logprob: -9.764741897583008
    8. '  ' → logprob: -9.889741897583008
    9. '   ' → logprob: -10.764741897583008
    10. '    ' → logprob: -10.889741897583008

Token 93: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0024859998375177383
    2. ' ' → logprob: -6.252486228942871
    3. '*' → logprob: -7.502486228942871
    4. ' ' → logprob: -12.752486228942871
    5. '_' → logprob: -13.752486228942871
    6. ' **' → logprob: -14.502486228942871
    7. ' *
' → logprob: -16.002485275268555
    8. '1' → logprob: -16.127485275268555
    9. '  ' → logprob: -16.127485275268555
    10. ' ,' → logprob: -16.377485275268555

Token 94: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00782167911529541
    2. ' valeur' → logprob: -4.882821559906006
    3. ' val' → logprob: -8.507822036743164
    4. ' ' → logprob: -12.382822036743164
    5. 'vale' → logprob: -13.007822036743164
    6. '	val' → logprob: -13.007822036743164
    7. ' vale' → logprob: -13.257822036743164
    8. ' ' → logprob: -13.757822036743164
    9. 'v' → logprob: -14.257822036743164
    10. 'value' → logprob: -14.757822036743164

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.87501049041748
    4. '1' → logprob: -14.06251049041748
    5. '```' → logprob: -14.62501049041748
    6. '   ' → logprob: -15.81251049041748
    7. '۲' → logprob: -15.93751049041748
    8. 'val' → logprob: -16.937511444091797
    9. 'r' → logprob: -16.937511444091797
    10. '٢' → logprob: -17.250011444091797

Token 96: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5888645052909851
    2. 'def' → logprob: -1.0888645648956299
    3. '

' → logprob: -2.71386456489563
    4. '(' → logprob: -4.588864326477051
    5. '<|end|>' → logprob: -4.588864326477051
    6. '\n' → logprob: -4.838864326477051
    7. '\' → logprob: -5.963864326477051
    8. '(
' → logprob: -5.963864326477051
    9. '*' → logprob: -6.338864326477051
    10. '#' → logprob: -6.588864326477051

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014721974730491638
    2. '
' → logprob: -4.264721870422363
    3. '

' → logprob: -8.389721870422363
    4. '\' → logprob: -9.139721870422363
    5. '<|end|>' → logprob: -9.264721870422363
    6. '\n' → logprob: -10.514721870422363
    7. '#' → logprob: -10.514721870422363
    8. '```' → logprob: -10.639721870422363
    9. '  
' → logprob: -11.389721870422363
    10. '
' → logprob: -12.389721870422363

Token 98: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1705993264913559
    2. ' main' → logprob: -2.4205992221832275
    3. 'calcul' → logprob: -3.9205992221832275
    4. ' multiplication' → logprob: -4.170599460601807
    5. ' multiplier' → logprob: -4.795599460601807
    6. ' afficher' → logprob: -5.295599460601807
    7. ' somme' → logprob: -6.170599460601807
    8. ' factor' → logprob: -6.170599460601807
    9. ' multip' → logprob: -6.170599460601807
    10. ' lire' → logprob: -6.295599460601807

Token 99: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.1186566047836095e-05
    2. '_er' → logprob: -11.000031471252441
    3. 'e' → logprob: -11.625031471252441
    4. '_' → logprob: -13.625031471252441
    5. 'erer' → logprob: -13.750031471252441
    6. ' er' → logprob: -15.000031471252441
    7. '_e' → logprob: -15.000031471252441
    8. 'ler' → logprob: -15.000031471252441
    9. '```' → logprob: -15.125031471252441
    10. '   ' → logprob: -15.375031471252441

Token 100: '_difference' (ID: 123771)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.9149512648582458
    2. '_c' → logprob: -1.1649513244628906
    3. '_m' → logprob: -2.0399513244628906
    4. '_factor' → logprob: -3.1649513244628906
    5. '_cube' → logprob: -3.5399513244628906
    6. '_div' → logprob: -3.9149513244628906
    7. '_car' → logprob: -4.164951324462891
    8. '_fact' → logprob: -4.289951324462891
    9. '_p' → logprob: -4.289951324462891
    10. '_' → logprob: -4.914951324462891

Token 101: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.03958016261458397
    2. '(' → logprob: -3.2895801067352295
    3. ' (' → logprob: -6.539580345153809
    4. '(valor' → logprob: -10.289580345153809
    5. ' ' → logprob: -11.289580345153809
    6. '_' → logprob: -11.539580345153809
    7. '(value' → logprob: -11.664580345153809
    8. '(a' → logprob: -12.039580345153809
    9. '(v' → logprob: -12.289580345153809
    10. '(var' → logprob: -12.414580345153809

Token 102: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -8.017927029868588e-05
    2. 'e' → logprob: -9.625080108642578
    3. 'eurs' → logprob: -12.750080108642578
    4. '(e' → logprob: -12.875080108642578
    5. 'er' → logprob: -13.125080108642578
    6. 'ueur' → logprob: -13.125080108642578
    7. 'alue' → logprob: -13.625080108642578
    8. 'uer' → logprob: -13.625080108642578
    9. 'eu' → logprob: -14.375080108642578
    10. 'ence' → logprob: -14.625080108642578

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011292786337435246
    2. '2' → logprob: -5.261292934417725
    3. '(val' → logprob: -5.261292934417725
    4. ',' → logprob: -8.261292457580566
    5. ',val' → logprob: -8.386292457580566
    6. '(' → logprob: -9.261292457580566
    7. ' (' → logprob: -9.511292457580566
    8. ' ' → logprob: -10.261292457580566
    9. '```' → logprob: -10.261292457580566
    10. ')' → logprob: -10.511292457580566

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002190352650359273
    2. ',val' → logprob: -6.252190589904785
    3. ' ,' → logprob: -8.252190589904785
    4. ',value' → logprob: -14.002190589904785
    5. ',v' → logprob: -16.25218963623047
    6. ',
' → logprob: -16.87718963623047
    7. 'val' → logprob: -16.87718963623047
    8. ' ' → logprob: -17.87718963623047
    9. '[val' → logprob: -18.50218963623047
    10. '‌,' → logprob: -18.75218963623047

Token 105: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07898132503032684
    2. ' valeur' → logprob: -2.578981399536133
    3. ' val' → logprob: -9.453981399536133
    4. ' ' → logprob: -12.703981399536133
    5. ' vale' → logprob: -12.828981399536133
    6. ' valeurs' → logprob: -13.453981399536133
    7. '	val' → logprob: -13.578981399536133
    8. '   ' → logprob: -13.953981399536133
    9. 'Vale' → logprob: -14.578981399536133
    10. ' ' → logprob: -14.578981399536133

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014132341311778873
    2. ',' → logprob: -9.000141143798828
    3. ' ' → logprob: -11.375141143798828
    4. '1' → logprob: -12.875141143798828
    5. ' ,' → logprob: -14.125141143798828
    6. '   ' → logprob: -14.125141143798828
    7. '```' → logprob: -14.375141143798828
    8. ' -' → logprob: -14.750141143798828
    9. ')' → logprob: -15.250141143798828
    10. '۲' → logprob: -15.250141143798828

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002538296685088426
    2. ')' → logprob: -8.375253677368164
    3. '):
' → logprob: -10.875253677368164
    4. ':' → logprob: -12.750253677368164
    5. ' ):' → logprob: -13.875253677368164
    6. '():' → logprob: -15.500253677368164
    7. ',' → logprob: -16.500253677368164
    8. '   ' → logprob: -17.000253677368164
    9. '):
' → logprob: -17.250253677368164
    10. '=' → logprob: -18.000253677368164

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1523461937904358
    2. ' return' → logprob: -2.027346134185791
    3. ' valeur' → logprob: -5.402346134185791
    4. 'val' → logprob: -6.152346134185791
    5. ' val' → logprob: -6.277346134185791
    6. 'return' → logprob: -7.277346134185791
    7. ' retour' → logprob: -8.52734661102295
    8. '    ' → logprob: -8.90234661102295
    9. ' ' → logprob: -11.27734661102295
    10. '```' → logprob: -11.27734661102295

Token 109: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3298321068286896
    2. 'return' (adapté à ' return') → logprob: -1.7048320770263672
    3. '   ' → logprob: -2.329832077026367
    4. 'val' → logprob: -6.454832077026367
    5. ' val' → logprob: -8.704832077026367
    6. ' retour' → logprob: -10.204832077026367
    7. ' valeur' → logprob: -10.579832077026367
    8. 'ret' → logprob: -11.704832077026367
    9. '```' → logprob: -11.829832077026367
    10. '{return' → logprob: -12.329832077026367

Token 110: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5610052347183228
    2. 'val' → logprob: -0.9360052347183228
    3. ' abs' → logprob: -3.561005115509033
    4. 'abs' → logprob: -5.186005115509033
    5. ' val' → logprob: -5.811005115509033
    6. ' vale' → logprob: -9.936005592346191
    7. ' ' → logprob: -10.061005592346191
    8. '   ' → logprob: -10.311005592346191
    9. '	val' → logprob: -11.686005592346191
    10. ' valore' → logprob: -11.936005592346191

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012013008818030357
    2. '2' → logprob: -7.126201152801514
    3. '_difference' → logprob: -8.376201629638672
    4. ' -' → logprob: -9.751201629638672
    5. 'val' → logprob: -9.876201629638672
    6. 'difference' → logprob: -11.126201629638672
    7. '-' → logprob: -11.626201629638672
    8. '_diff' → logprob: -11.751201629638672
    9. '```' → logprob: -11.751201629638672
    10. '_val' → logprob: -12.376201629638672

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061981916427612305
    2. '-' → logprob: -2.8119819164276123
    3. ' ' → logprob: -11.936982154846191
    4. '_' → logprob: -12.311982154846191
    5. ' ' → logprob: -12.936982154846191
    6. '<|end|>' → logprob: -15.686982154846191
    7. '-val' → logprob: -16.061981201171875
    8. ' -
' → logprob: -16.436981201171875
    9. ')' → logprob: -17.061981201171875
    10. 'def' → logprob: -17.061981201171875

Token 113: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0036246657837182283
    2. ' valeur' → logprob: -5.628624439239502
    3. ' val' → logprob: -10.75362491607666
    4. ' ' → logprob: -13.62862491607666
    5. 'vale' → logprob: -14.37862491607666
    6. ' vale' → logprob: -15.12862491607666
    7. '	val' → logprob: -15.12862491607666
    8. '1' → logprob: -15.75362491607666
    9. '2' → logprob: -15.87862491607666
    10. 'value' → logprob: -16.003623962402344

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.50003719329834
    3. '_' → logprob: -12.87503719329834
    4. 'de' → logprob: -13.12503719329834
    5. '1' → logprob: -13.50003719329834
    6. '```' → logprob: -14.81253719329834
    7. ')' → logprob: -14.87503719329834
    8. '   ' → logprob: -15.37503719329834
    9. 's' → logprob: -15.37503719329834
    10. '₂' → logprob: -15.43753719329834

Token 115: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020006978884339333
    2. '
' → logprob: -4.520007133483887
    3. 'd' → logprob: -5.395007133483887
    4. '

' → logprob: -6.270007133483887
    5. '\' → logprob: -6.520007133483887
    6. '#' → logprob: -7.895007133483887
    7. '\n' → logprob: -8.020007133483887
    8. '```' → logprob: -9.770007133483887
    9. '  
' → logprob: -10.145007133483887
    10. 'de' → logprob: -10.770007133483887

Token 117: ' division' (ID: 21629)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.14156010746955872
    2. ' somme' → logprob: -3.3915600776672363
    3. ' addition' → logprob: -3.6415600776672363
    4. ' multiplication' → logprob: -3.6415600776672363
    5. ' main' → logprob: -4.016560077667236
    6. ' division' → logprob: -4.891560077667236
    7. 'calcul' → logprob: -5.391560077667236
    8. ' lire' → logprob: -6.391560077667236
    9. ' multip' → logprob: -6.516560077667236
    10. ' multiplier' → logprob: -6.641560077667236

Token 118: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6399739384651184
    2. '(val' → logprob: -0.7649739384651184
    3. 'def' → logprob: -5.514974117279053
    4. '_' → logprob: -6.889974117279053
    5. '_def' → logprob: -7.264974117279053
    6. '(def' → logprob: -7.889974117279053
    7. ' (' → logprob: -8.139973640441895
    8. '(a' → logprob: -8.764973640441895
    9. '(div' → logprob: -8.764973640441895
    10. '(valor' → logprob: -9.139973640441895

Token 119: 'enti' (ID: 14989)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2512821853160858
    2. 'enti' → logprob: -2.126282215118408
    3. 'val' → logprob: -2.376282215118408
    4. 'exact' → logprob: -5.751282215118408
    5. 'safe' → logprob: -6.126282215118408
    6. '(val' → logprob: -7.126282215118408
    7. '```' → logprob: -7.376282215118408
    8. 'calcul' → logprob: -7.626282215118408
    9. 'def' → logprob: -7.751282215118408
    10. 's' → logprob: -7.876282215118408

Token 120: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.007817894220352173
    2. 'ère' → logprob: -5.00781774520874
    3. 're' → logprob: -7.25781774520874
    4. 'e' → logprob: -8.507818222045898
    5. '`' → logprob: -9.007818222045898
    6. 'er' → logprob: -10.132818222045898
    7. '```' → logprob: -12.632818222045898
    8. '_re' → logprob: -12.757818222045898
    9. 'è' → logprob: -12.757818222045898
    10. 'ére' → logprob: -12.757818222045898

Token 121: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.08194302767515182
    2. '(' → logprob: -2.5819430351257324
    3. '(a' → logprob: -6.081943035125732
    4. ' (' → logprob: -7.831943035125732
    5. '(v' → logprob: -9.081942558288574
    6. '(valor' → logprob: -9.581942558288574
    7. '(def' → logprob: -9.956942558288574
    8. '(var' → logprob: -10.456942558288574
    9. '(x' → logprob: -10.581942558288574
    10. '(div' → logprob: -10.831942558288574

Token 122: 'eur' (ID: 8671)
  Prédit: 'ere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.0009153862483799458
    2. 'er' → logprob: -7.37591552734375
    3. 'ère' → logprob: -8.50091552734375
    4. 'e' → logprob: -9.50091552734375
    5. '   ' → logprob: -12.75091552734375
    6. '`' → logprob: -13.25091552734375
    7. 're' → logprob: -14.00091552734375
    8. '```' → logprob: -14.00091552734375
    9. ' ' → logprob: -14.75091552734375
    10. '\' → logprob: -14.75091552734375

Token 123: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3471495509147644
    2. '(val' → logprob: -1.3471496105194092
    3. ')' → logprob: -3.847149610519409
    4. '(' → logprob: -4.84714937210083
    5. '```' → logprob: -6.72214937210083
    6. '_' → logprob: -7.22214937210083
    7. 'def' → logprob: -7.59714937210083
    8. ' (' → logprob: -7.59714937210083
    9. ',val' → logprob: -8.722149848937988
    10. '   ' → logprob: -9.222149848937988

Token 124: ' div' (ID: 4223)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16940753161907196
    2. 'div' → logprob: -1.9194074869155884
    3. ' valeur' → logprob: -5.294407367706299
    4. ' ' → logprob: -6.294407367706299
    5. '2' → logprob: -7.044407367706299
    6. 'den' → logprob: -8.044407844543457
    7. '   ' → logprob: -8.044407844543457
    8. 'ent' → logprob: -8.294407844543457
    9. ' div' → logprob: -9.044407844543457
    10. ' val' → logprob: -9.169407844543457

Token 125: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.006008429452776909
    2. 'ise' → logprob: -5.131008625030518
    3. 'iser' → logprob: -10.50600814819336
    4. 'ision' → logprob: -11.00600814819336
    5. 'isateur' → logprob: -11.38100814819336
    6. '```' → logprob: -11.63100814819336
    7. '   ' → logprob: -12.38100814819336
    8. 'is' → logprob: -13.00600814819336
    9. ' is' → logprob: -13.75600814819336
    10. 'isor' → logprob: -14.25600814819336

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002492999192327261
    2. '):
' → logprob: -8.500248908996582
    3. ')' → logprob: -10.125248908996582
    4. ' ):' → logprob: -12.750248908996582
    5. '):
' → logprob: -13.750248908996582
    6. '   ' → logprob: -14.875248908996582
    7. 'def' → logprob: -15.250248908996582
    8. ':' → logprob: -15.375248908996582
    9. '():' → logprob: -15.625248908996582
    10. '=' → logprob: -15.750248908996582

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006213408894836903
    2. ' return' → logprob: -5.131213188171387
    3. 'return' → logprob: -9.131213188171387
    4. ' if' → logprob: -9.631213188171387
    5. ':' → logprob: -9.631213188171387
    6. '   ' → logprob: -11.006213188171387
    7. '    
' → logprob: -11.506213188171387
    8. ':return' → logprob: -12.631213188171387
    9. ' ' → logprob: -13.006213188171387
    10. '    ' → logprob: -13.006213188171387

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5875826478004456
    2. ' return' → logprob: -0.8375826478004456
    3. '   ' → logprob: -4.462582588195801
    4. ' if' → logprob: -10.8375825881958
    5. 'if' → logprob: -11.2125825881958
    6. '```' → logprob: -13.3375825881958
    7. '	return' → logprob: -13.4625825881958
    8. 'try' → logprob: -13.5875825881958
    9. 'eturn' → logprob: -13.7125825881958
    10. ' ' → logprob: -13.8375825881958

Token 129: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25202080607414246
    2. ' valeur' → logprob: -1.5020208358764648
    3. ' val' → logprob: -9.502020835876465
    4. ' ' → logprob: -11.877020835876465
    5. '	val' → logprob: -12.627020835876465
    6. '```' → logprob: -12.877020835876465
    7. ' ' → logprob: -13.502020835876465
    8. ' vale' → logprob: -13.502020835876465
    9. ' valeurs' → logprob: -14.502020835876465
    10. '   ' → logprob: -15.752020835876465

Token 130: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0014721262268722057
    2. '//' → logprob: -6.751471996307373
    3. ' ' → logprob: -8.751472473144531
    4. ' ' → logprob: -8.876472473144531
    5. 'div' → logprob: -13.501472473144531
    6. ' //
' → logprob: -14.251472473144531
    7. '```' → logprob: -14.376472473144531
    8. '_' → logprob: -15.251472473144531
    9. '	' → logprob: -16.12647247314453
    10. '`' → logprob: -16.25147247314453

Token 131: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0009117019944824278
    2. ' div' → logprob: -7.000911712646484
    3. '	div' → logprob: -15.625911712646484
    4. '<div' → logprob: -17.875911712646484
    5. '(div' → logprob: -17.875911712646484
    6. 'division' → logprob: -19.250911712646484
    7. ' divisor' → logprob: -19.500911712646484
    8. 'd' → logprob: -19.750911712646484
    9. ' divis' → logprob: -19.875911712646484
    10. ' ' → logprob: -20.000911712646484

Token 132: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.003047343110665679
    2. 'ise' → logprob: -6.503047466278076
    3. 'is' → logprob: -7.253047466278076
    4. 'isseur' → logprob: -7.628047466278076
    5. 'isateur' → logprob: -9.128046989440918
    6. 's' → logprob: -9.878046989440918
    7. 'ision' → logprob: -10.503046989440918
    8. 'isor' → logprob: -10.878046989440918
    9. 'aisseur' → logprob: -11.003046989440918
    10. 'isure' → logprob: -11.003046989440918

Token 133: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1651858389377594
    2. '
' → logprob: -1.915185809135437
    3. '

' → logprob: -5.915185928344727
    4. '<|end|>' → logprob: -6.415185928344727
    5. '\n' → logprob: -9.165185928344727
    6. '#' → logprob: -9.165185928344727
    7. '\' → logprob: -9.540185928344727
    8. ' 
' → logprob: -10.040185928344727
    9. '  
' → logprob: -10.290185928344727
    10. ' def' → logprob: -10.415185928344727

Token 135: ' afficher' (ID: 146524)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.8538209199905396
    2. ' main' → logprob: -1.2288209199905396
    3. ' modulo' → logprob: -2.22882080078125
    4. ' mod' → logprob: -2.97882080078125
    5. ' lire' → logprob: -3.97882080078125
    6. 'mod' → logprob: -4.10382080078125
    7. 'calcul' → logprob: -4.47882080078125
    8. ' est' → logprob: -4.47882080078125
    9. 'main' → logprob: -4.60382080078125
    10. ' multiplication' → logprob: -4.72882080078125

Token 136: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10519695281982422
    2. '(' → logprob: -2.355196952819824
    3. '_l' → logprob: -6.480196952819824
    4. '_(' → logprob: -6.730196952819824
    5. '()' → logprob: -6.980196952819824
    6. '_s' → logprob: -8.355196952819824
    7. '(_' → logprob: -8.980196952819824
    8. '(_)' → logprob: -9.480196952819824
    9. '_parent' → logprob: -9.605196952819824
    10. '_result' → logprob: -9.980196952819824

Token 137: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00027134892297908664
    2. 'ats' → logprob: -8.250271797180176
    3. '(at' → logprob: -12.750271797180176
    4. 'a' → logprob: -13.000271797180176
    5. 'ат' → logprob: -13.750271797180176
    6. '_at' → logprob: -14.250271797180176
    7. '()' → logprob: -14.500271797180176
    8. 'e' → logprob: -14.750271797180176
    9. '(' → logprob: -14.875271797180176
    10. 'é' → logprob: -15.000271797180176

Token 138: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03336718678474426
    2. '()' → logprob: -3.783367156982422
    3. '():' → logprob: -4.908367156982422
    4. '(result' → logprob: -7.283367156982422
    5. '(message' → logprob: -7.408367156982422
    6. '(value' → logprob: -7.908367156982422
    7. '(data' → logprob: -9.033367156982422
    8. '(val' → logprob: -9.158367156982422
    9. '(s' → logprob: -9.283367156982422
    10. '("("' → logprob: -9.283367156982422

Token 139: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.52919222577475e-05
    2. ')' → logprob: -10.625075340270996
    3. 'ats' → logprob: -10.625075340270996
    4. '(at' → logprob: -11.125075340270996
    5. '):' → logprob: -12.875075340270996
    6. 'ат' → logprob: -13.000075340270996
    7. '(result' → logprob: -13.250075340270996
    8. ' at' → logprob: -14.000075340270996
    9. '```' → logprob: -14.250075340270996
    10. '_at' → logprob: -14.250075340270996

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062496837228536606
    2. ')' → logprob: -2.8124969005584717
    3. '):
' → logprob: -7.687496662139893
    4. '(result' → logprob: -10.43749713897705
    5. ' ):' → logprob: -10.68749713897705
    6. '   ' → logprob: -12.56249713897705
    7. '(' → logprob: -12.68749713897705
    8. ',' → logprob: -12.93749713897705
    9. ',result' → logprob: -12.93749713897705
    10. ' )' → logprob: -13.43749713897705

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024884531274437904
    2. ' print' → logprob: -4.3998847007751465
    3. 'print' → logprob: -4.3998847007751465
    4. ':' → logprob: -11.774884223937988
    5. '   ' → logprob: -12.774884223937988
    6. '```' → logprob: -12.774884223937988
    7. '(print' → logprob: -13.024884223937988
    8. '	print' → logprob: -13.274884223937988
    9. '    ' → logprob: -14.149884223937988
    10. '(' → logprob: -14.524884223937988

Token 142: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38702815771102905
    2. ' print' → logprob: -1.1370282173156738
    3. '   ' → logprob: -8.762027740478516
    4. '```' → logprob: -15.887027740478516
    5. '	print' → logprob: -16.262027740478516
    6. ' prin' → logprob: -16.637027740478516
    7. 'prin' → logprob: -16.637027740478516
    8. 'pr' → logprob: -16.887027740478516
    9. '.print' → logprob: -17.387027740478516
    10. '(print' → logprob: -17.762027740478516

Token 143: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06205933168530464
    2. '(result' → logprob: -2.8120594024658203
    3. '(resultado' → logprob: -10.43705940246582
    4. '()' → logprob: -10.56205940246582
    5. '(res' → logprob: -10.93705940246582
    6. '(f' → logprob: -11.93705940246582
    7. '('' → logprob: -12.81205940246582
    8. '("("' → logprob: -13.06205940246582
    9. '(
' → logprob: -13.43705940246582
    10. '((' → logprob: -13.93705940246582

Token 144: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0004049322451464832
    2. '_at' → logprob: -8.250405311584473
    3. ')' → logprob: -9.875405311584473
    4. ' at' → logprob: -11.125405311584473
    5. 'a' → logprob: -11.375405311584473
    6. 'al' → logprob: -11.500405311584473
    7. '_' → logprob: -11.875405311584473
    8. 't' → logprob: -11.875405311584473
    9. ''at' → logprob: -12.000405311584473
    10. '_result' → logprob: -12.250405311584473

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. '()' → logprob: -17.125
    4. '))' → logprob: -17.375
    5. ')
' → logprob: -17.5
    6. ')`' → logprob: -17.5
    7. '())' → logprob: -17.75
    8. '')' → logprob: -18.375
    9. '(' → logprob: -19.5
    10. '`)' → logprob: -19.625

Token 146: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004581942630466074
    2. 'd' → logprob: -7.875458240509033
    3. '
' → logprob: -9.875457763671875
    4. '

' → logprob: -11.375457763671875
    5. '\' → logprob: -11.750457763671875
    6. '#' → logprob: -13.500457763671875
    7. '  
' → logprob: -13.875457763671875
    8. 'de' → logprob: -14.375457763671875
    9. '    
' → logprob: -14.500457763671875
    10. ' 
' → logprob: -14.500457763671875

Token 147: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.044332828372716904
    2. 'main' → logprob: -4.044332981109619
    3. ' calcul' → logprob: -4.419332981109619
    4. ' principale' → logprob: -5.669332981109619
    5. ' programme' → logprob: -5.919332981109619
    6. ' fonction' → logprob: -6.419332981109619
    7. ' factor' → logprob: -6.794332981109619
    8. ' multiplication' → logprob: -6.794332981109619
    9. ' principal' → logprob: -7.419332981109619
    10. 'calcul' → logprob: -7.669332981109619

Token 148: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00047261794679798186
    2. '()' → logprob: -8.000473022460938
    3. '(' → logprob: -9.375473022460938
    4. '():
' → logprob: -10.250473022460938
    5. ' ():' → logprob: -11.125473022460938
    6. '()>' → logprob: -14.000473022460938
    7. '_' → logprob: -14.375473022460938
    8. '(:' → logprob: -15.750473022460938
    9. ':' → logprob: -15.875473022460938
    10. '():
' → logprob: -16.125473022460938

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022350670769810677
    2. '    
' → logprob: -7.252234935760498
    3. 'val' → logprob: -7.252234935760498
    4. 'n' → logprob: -8.502235412597656
    5. ' val' → logprob: -9.377235412597656
    6. '    ' → logprob: -9.627235412597656
    7. '  ' → logprob: -9.877235412597656
    8. ' valeur' → logprob: -10.002235412597656
    9. '   ' → logprob: -10.252235412597656
    10. ' n' → logprob: -10.377235412597656

Token 150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9817624688148499
    2. 'val' → logprob: -1.106762409210205
    3. '   ' → logprob: -1.481762409210205
    4. ' n' → logprob: -3.356762409210205
    5. 'nombre' → logprob: -4.731762409210205
    6. 'ent' → logprob: -4.856762409210205
    7. 'a' → logprob: -5.481762409210205
    8. 'liste' → logprob: -5.856762409210205
    9. 'print' → logprob: -6.481762409210205
    10. ' valeur' → logprob: -6.481762409210205

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019401769386604428
    2. '=' → logprob: -6.2519402503967285
    3. '=int' → logprob: -12.75193977355957
    4. '1' → logprob: -12.87693977355957
    5. ' ' → logprob: -13.50193977355957
    6. '_' → logprob: -13.50193977355957
    7. ' =
' → logprob: -14.25193977355957
    8. 's' → logprob: -14.75193977355957
    9. '   ' → logprob: -14.87693977355957
    10. ',' → logprob: -14.87693977355957

Token 152: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.38747531175613403
    2. 'l' → logprob: -1.1374752521514893
    3. ' ' → logprob: -8.26247501373291
    4. ' l' → logprob: -9.38747501373291
    5. 'int' → logprob: -9.76247501373291
    6. '   ' → logprob: -10.26247501373291
    7. 'Lire' → logprob: -10.26247501373291
    8. '	l' → logprob: -10.51247501373291
    9. '  ' → logprob: -10.88747501373291
    10. ' int' → logprob: -11.38747501373291

Token 153: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0009654151508584619
    2. '_' → logprob: -7.250965595245361
    3. '_l' → logprob: -8.375965118408203
    4. '_en' → logprob: -10.875965118408203
    5. '_entropy' → logprob: -13.000965118408203
    6. '_e' → logprob: -13.500965118408203
    7. '_int' → logprob: -14.500965118408203
    8. '__' → logprob: -14.750965118408203
    9. '_n' → logprob: -15.125965118408203
    10. ' _' → logprob: -15.125965118408203

Token 154: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.00021152703266125172
    2. 't' → logprob: -9.375211715698242
    3. 'er' → logprob: -9.625211715698242
    4. 'iert' → logprob: -10.625211715698242
    5. 'ent' → logprob: -11.125211715698242
    6. 'et' → logprob: -12.000211715698242
    7. 'tier' → logprob: -12.625211715698242
    8. '```' → logprob: -12.750211715698242
    9. '   ' → logprob: -13.250211715698242
    10. 'iet' → logprob: -13.625211715698242

Token 155: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3544423381972592e-05
    2. '()
' → logprob: -11.87501335144043
    3. '(' → logprob: -12.12501335144043
    4. '()

' → logprob: -14.37501335144043
    5. ' ()' → logprob: -15.50001335144043
    6. '()\' → logprob: -16.62501335144043
    7. '(),' → logprob: -16.87501335144043
    8. '()<' → logprob: -17.12501335144043
    9. '()"' → logprob: -17.12501335144043
    10. '(
' → logprob: -17.12501335144043

Token 156: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' d' (ID: 272)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4703969657421112
    2. ' liste' → logprob: -1.8453969955444336
    3. '   ' → logprob: -2.4703969955444336
    4. 'l' → logprob: -2.7203969955444336
    5. 'lst' → logprob: -3.9703969955444336
    6. ' lst' → logprob: -4.095396995544434
    7. ' l' → logprob: -5.220396995544434
    8. 'a' → logprob: -5.220396995544434
    9. ' a' → logprob: -5.845396995544434
    10. 'n' → logprob: -6.095396995544434

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.877354621887207
    2. 'ef' → logprob: -1.002354621887207
    3. '=' → logprob: -2.752354621887207
    4. 'onne' → logprob: -3.127354621887207
    5. 'ist' → logprob: -3.377354621887207
    6. 'ata' → logprob: -4.127354621887207
    7. 'e' → logprob: -4.502354621887207
    8. 'iv' → logprob: -4.752354621887207
    9. 'on' → logprob: -5.377354621887207
    10. ' ' → logprob: -5.377354621887207

Token 159: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.27236664295196533
    2. 'l' → logprob: -1.6473666429519653
    3. ' division' → logprob: -3.522366523742676
    4. 'n' → logprob: -4.647366523742676
    5. ' n' → logprob: -6.397366523742676
    6. ' l' → logprob: -6.522366523742676
    7. 'division' → logprob: -7.022366523742676
    8. ' ' → logprob: -7.147366523742676
    9. '   ' → logprob: -8.147366523742676
    10. '	l' → logprob: -9.022366523742676

Token 160: '_l' (ID: 1478)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.47591954469680786
    2. '_l' → logprob: -0.9759195446968079
    3. '_' → logprob: -6.350919723510742
    4. '_int' → logprob: -10.100919723510742
    5. '_list' → logprob: -11.225919723510742
    6. '_en' → logprob: -12.100919723510742
    7. '_s' → logprob: -12.225919723510742
    8. 'ent' → logprob: -12.350919723510742
    9. '_entropy' → logprob: -12.725919723510742
    10. '_n' → logprob: -13.100919723510742

Token 161: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00010509284038562328
    2. 'liste' → logprob: -10.500104904174805
    3. 'ist' → logprob: -10.625104904174805
    4. 'ste' → logprob: -10.875104904174805
    5. 'site' → logprob: -11.625104904174805
    6. 'ite' → logprob: -12.875104904174805
    7. '[' → logprob: -13.375104904174805
    8. 'ise' → logprob: -13.500104904174805
    9. '#' → logprob: -13.500104904174805
    10. 'istes' → logprob: -13.875104904174805

Token 162: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -1.1637164789135568e-05
    2. '_' → logprob: -12.000011444091797
    3. '_int' → logprob: -12.875011444091797
    4. '_en' → logprob: -13.750011444091797
    5. 'ent' → logprob: -14.625011444091797
    6. '(ent' → logprob: -14.750011444091797
    7. '_val' → logprob: -15.000011444091797
    8. '_l' → logprob: -16.250011444091797
    9. '_des' → logprob: -16.375011444091797
    10. '_est' → logprob: -16.750011444091797

Token 163: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -9.329167369287461e-05
    2. 'ers' → logprob: -10.000093460083008
    3. 't' → logprob: -10.500093460083008
    4. 'ier' → logprob: -11.625093460083008
    5. 'ters' → logprob: -12.875093460083008
    6. 'tiers' → logprob: -12.875093460083008
    7. '```' → logprob: -13.875093460083008
    8. 'ents' → logprob: -13.875093460083008
    9. '()' → logprob: -14.250093460083008
    10. 'ets' → logprob: -14.500093460083008

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3306015716807451e-05
    2. '()
' → logprob: -11.87501335144043
    3. ' ()' → logprob: -12.50001335144043
    4. '()]' → logprob: -13.62501335144043
    5. '(' → logprob: -14.62501335144043
    6. '()

' → logprob: -15.62501335144043
    7. '())' → logprob: -15.87501335144043
    8. '().' → logprob: -16.00001335144043
    9. '()<' → logprob: -16.12501335144043
    10. '()[' → logprob: -16.37501335144043

Token 165: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03642745688557625
    2. '()
' → logprob: -3.6614274978637695
    3. '   ' → logprob: -4.6614274978637695
    4. '(' → logprob: -8.53642749786377
    5. '[' → logprob: -9.28642749786377
    6. '()[' → logprob: -9.78642749786377
    7. '    
' → logprob: -9.91142749786377
    8. '(n' → logprob: -9.91142749786377
    9. '()

' → logprob: -10.16142749786377
    10. '[]' → logprob: -10.53642749786377

Token 166: ' dd' (ID: 18636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3742096424102783
    2. ' car' → logprob: -1.4992096424102783
    3. 'car' → logprob: -1.6242096424102783
    4. 'c' → logprob: -2.6242096424102783
    5. ' for' → logprob: -2.8742096424102783
    6. 'r' → logprob: -3.2492096424102783
    7. 's' → logprob: -3.3742096424102783
    8. ' s' → logprob: -4.249209403991699
    9. 'for' → logprob: -4.499209403991699
    10. 'q' → logprob: -4.749209403991699

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1198963075876236
    2. '=' → logprob: -2.369896411895752
    3. '_' → logprob: -4.119896411895752
    4. 'd' → logprob: -6.244896411895752
    5. '=[]' → logprob: -7.494896411895752
    6. '_d' → logprob: -9.244895935058594
    7. 's' → logprob: -9.744895935058594
    8. '   ' → logprob: -9.744895935058594
    9. '=[' → logprob: -9.994895935058594
    10. '[:]' → logprob: -10.244895935058594

Token 168: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.25266584753990173
    2. ' calcul' → logprob: -1.5026658773422241
    3. 'cal' → logprob: -8.252665519714355
    4. '[' → logprob: -8.877665519714355
    5. ' [' → logprob: -9.252665519714355
    6. ' ' → logprob: -9.752665519714355
    7. '[]' → logprob: -9.877665519714355
    8. ' calcular' → logprob: -10.502665519714355
    9. '[d' → logprob: -10.752665519714355
    10. '[s' → logprob: -11.127665519714355

Token 169: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.963691804325208e-05
    2. 'd' → logprob: -11.875029563903809
    3. 'ler' → logprob: -12.375029563903809
    4. '_er' → logprob: -12.375029563903809
    5. 'uer' → logprob: -12.500029563903809
    6. '[' → logprob: -13.125029563903809
    7. 'uler' → logprob: -13.125029563903809
    8. 'e' → logprob: -13.875029563903809
    9. '_' → logprob: -14.000029563903809
    10. '{' → logprob: -14.500029563903809

Token 170: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0035972176119685173
    2. '_c' → logprob: -6.003597259521484
    3. '_' → logprob: -6.878597259521484
    4. '_ca' → logprob: -10.378597259521484
    5. '_pro' → logprob: -10.503597259521484
    6. '_cal' → logprob: -11.628597259521484
    7. '_d' → logprob: -11.628597259521484
    8. 'car' → logprob: -12.878597259521484
    9. '_l' → logprob: -13.753597259521484
    10. '_s' → logprob: -13.878597259521484

Token 171: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00023298001906368881
    2. '_res' → logprob: -9.125232696533203
    3. 'es' → logprob: -10.000232696533203
    4. 're' → logprob: -10.250232696533203
    5. '(res' → logprob: -10.375232696533203
    6. 'r' → logprob: -12.250232696533203
    7. 's' → logprob: -13.375232696533203
    8. '_' → logprob: -14.000232696533203
    9. '$res' → logprob: -14.125232696533203
    10. '	res' → logprob: -14.375232696533203

Token 172: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.875008583068848
    3. '(n' → logprob: -13.750008583068848
    4. '(de' → logprob: -17.00000762939453
    5. 'd' → logprob: -17.50000762939453
    6. ' (' → logprob: -17.87500762939453
    7. '([' → logprob: -18.12500762939453
    8. '(D' → logprob: -18.37500762939453
    9. '(s' → logprob: -18.62500762939453
    10. '(dd' → logprob: -18.62500762939453

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010282796574756503
    2. ')
' → logprob: -9.875102996826172
    3. ')d' → logprob: -11.250102996826172
    4. '()' → logprob: -12.000102996826172
    5. '())' → logprob: -12.000102996826172
    6. '(' → logprob: -12.125102996826172
    7. ')

' → logprob: -12.250102996826172
    8. '(n' → logprob: -12.250102996826172
    9. ' )' → logprob: -12.375102996826172
    10. '(d' → logprob: -12.875102996826172

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012083626352250576
    2. '    
' → logprob: -4.887083530426025
    3. '
' → logprob: -6.387083530426025
    4. 's' → logprob: -6.762083530426025
    5. '<|end|>' → logprob: -7.012083530426025
    6. 'n' → logprob: -8.637084007263184
    7. '  
' → logprob: -9.262084007263184
    8. ' for' → logprob: -9.387084007263184
    9. '   
' → logprob: -9.637084007263184
    10. 'result' → logprob: -9.887084007263184

Token 175: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21091245114803314
    2. ' s' → logprob: -2.3359124660491943
    3. '   ' → logprob: -3.0859124660491943
    4. 'r' → logprob: -3.8359124660491943
    5. 'result' → logprob: -4.460912227630615
    6. 'total' → logprob: -5.335912227630615
    7. 'p' → logprob: -6.460912227630615
    8. ' r' → logprob: -6.585912227630615
    9. 'res' → logprob: -6.835912227630615
    10. ' total' → logprob: -6.960912227630615

Token 176: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.24367398023605347
    2. '_' → logprob: -1.7436740398406982
    3. '_dd' → logprob: -3.7436740398406982
    4. '_result' → logprob: -4.618673801422119
    5. 'd' → logprob: -5.368673801422119
    6. '_val' → logprob: -6.993673801422119
    7. ' =' → logprob: -7.368673801422119
    8. 's' → logprob: -7.868673801422119
    9. '_total' → logprob: -8.493674278259277
    10. '_s' → logprob: -8.868674278259277

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42077821493148804
    2. 'd' → logprob: -1.1707782745361328
    3. '=' → logprob: -3.795778274536133
    4. '_d' → logprob: -4.670778274536133
    5. '_' → logprob: -6.795778274536133
    6. '_dd' → logprob: -8.920778274536133
    7. ' ' → logprob: -9.545778274536133
    8. 'dd' → logprob: -9.670778274536133
    9. 's' → logprob: -10.670778274536133
    10. '_s' → logprob: -11.170778274536133

Token 178: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016136184334754944
    2. ' somme' → logprob: -4.141136169433594
    3. 'sum' → logprob: -9.391136169433594
    4. '   ' → logprob: -12.016136169433594
    5. 'som' → logprob: -12.141136169433594
    6. ' sum' → logprob: -13.016136169433594
    7. ' ' → logprob: -13.016136169433594
    8. '(s' → logprob: -14.516136169433594
    9. ' s' → logprob: -14.766136169433594
    10. ' som' → logprob: -14.891136169433594

Token 179: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0014498754171654582
    2. '(d' → logprob: -7.251450061798096
    3. '_d' → logprob: -7.626450061798096
    4. '_' → logprob: -8.501449584960938
    5. '_list' → logprob: -11.126449584960938
    6. '_(' → logprob: -11.251449584960938
    7. '(s' → logprob: -12.001449584960938
    8. 'Liste' → logprob: -12.626449584960938
    9. '_s' → logprob: -12.751449584960938
    10. '(l' → logprob: -13.376449584960938

Token 180: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -3.953082341467962e-05
    2. 'ste' → logprob: -10.875039100646973
    3. 'liste' → logprob: -11.875039100646973
    4. 'ist' → logprob: -12.250039100646973
    5. '(' → logprob: -13.750039100646973
    6. '[' → logprob: -14.000039100646973
    7. 'ise' → logprob: -14.000039100646973
    8. 'i' → logprob: -14.125039100646973
    9. 'Liste' → logprob: -14.375039100646973
    10. 'site' → logprob: -14.750039100646973

Token 181: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.25276046991348267
    2. '(dd' → logprob: -1.502760410308838
    3. '(' → logprob: -7.127760410308838
    4. ' (' → logprob: -10.877760887145996
    5. '(s' → logprob: -11.627760887145996
    6. '(
' → logprob: -15.377760887145996
    7. '(de' → logprob: -16.37775993347168
    8. '(ss' → logprob: -16.62775993347168
    9. '(div' → logprob: -16.62775993347168
    10. '(D' → logprob: -16.75275993347168

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001684981834841892
    2. ')
' → logprob: -8.875168800354004
    3. ' )' → logprob: -11.250168800354004
    4. '+' → logprob: -11.500168800354004
    5. ')

' → logprob: -12.750168800354004
    6. ')+' → logprob: -14.625168800354004
    7. '   ' → logprob: -14.875168800354004
    8. ' +' → logprob: -15.125168800354004
    9. 'd' → logprob: -15.250168800354004
    10. ')
' → logprob: -15.375168800354004

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007453164551407099
    2. 's' → logprob: -5.257452964782715
    3. '    
' → logprob: -6.382452964782715
    4. ' somme' → logprob: -8.507452964782715
    5. '
' → logprob: -9.007452964782715
    6. 'sum' → logprob: -10.632452964782715
    7. '   ' → logprob: -11.007452964782715
    8. '  ' → logprob: -11.007452964782715
    9. '	s' → logprob: -11.132452964782715
    10. ' s' → logprob: -11.257452964782715

Token 184: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.295751690864563
    2. 'produ' → logprob: -1.795751690864563
    3. '   ' → logprob: -3.5457515716552734
    4. 'prod' → logprob: -4.045751571655273
    5. ' somme' → logprob: -4.670751571655273
    6. 'for' → logprob: -5.295751571655273
    7. 'som' → logprob: -5.420751571655273
    8. ' produit' → logprob: -5.545751571655273
    9. 'diff' → logprob: -5.545751571655273
    10. 'pro' → logprob: -5.795751571655273

Token 185: '_dd' (ID: 102571)
  Prédit: '_dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dd' → logprob: -0.00709540443494916
    2. '_d' → logprob: -5.0070953369140625
    3. '_' → logprob: -7.8820953369140625
    4. '_de' → logprob: -14.507095336914062
    5. '_c' → logprob: -15.007095336914062
    6. 'dd' → logprob: -15.757095336914062
    7. '_s' → logprob: -15.757095336914062
    8. '_=' → logprob: -16.007095336914062
    9. '_car' → logprob: -16.257095336914062
    10. '_du' → logprob: -16.507095336914062

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4484025239944458
    2. '=' → logprob: -1.1984025239944458
    3. '_' → logprob: -2.8234024047851562
    4. ')' → logprob: -9.448402404785156
    5. '_=' → logprob: -9.573402404785156
    6. '<|end|>' → logprob: -10.323402404785156
    7. 's' → logprob: -10.448402404785156
    8. ',' → logprob: -10.823402404785156
    9. '(' → logprob: -11.323402404785156
    10. ' _' → logprob: -11.573402404785156

Token 187: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6361210346221924
    2. ' somme' → logprob: -0.7611210346221924
    3. 'sum' → logprob: -5.761120796203613
    4. ' sum' → logprob: -8.386120796203613
    5. 'som' → logprob: -9.511120796203613
    6. ' som' → logprob: -11.636120796203613
    7. ' sommet' → logprob: -11.761120796203613
    8. ' ' → logprob: -11.886120796203613
    9. ' somm' → logprob: -12.011120796203613
    10. ' suma' → logprob: -12.011120796203613

Token 188: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0001305950863752514
    2. '_' → logprob: -9.000130653381348
    3. '_d' → logprob: -12.250130653381348
    4. '_list' → logprob: -13.250130653381348
    5. '_dd' → logprob: -15.375130653381348
    6. '_s' → logprob: -16.00012969970703
    7. 'd' → logprob: -16.25012969970703
    8. 'l' → logprob: -16.62512969970703
    9. 'liste' → logprob: -16.62512969970703
    10. '_lst' → logprob: -17.50012969970703

Token 189: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0005212200339883566
    2. 'liste' → logprob: -8.125521659851074
    3. 'ste' → logprob: -9.625521659851074
    4. 'ist' → logprob: -9.750521659851074
    5. '_' → logprob: -10.750521659851074
    6. 'l' → logprob: -11.125521659851074
    7. 'site' → logprob: -11.375521659851074
    8. '_l' → logprob: -11.625521659851074
    9. '
' → logprob: -11.875521659851074
    10. 's' → logprob: -12.125521659851074

Token 190: '(dd' (ID: 131879)
  Prédit: '(dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dd' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. '(d' → logprob: -17.375
    4. 'dd' → logprob: -17.875
    5. '/dd' → logprob: -19.75
    6. '(
' → logprob: -20.125
    7. ' (' → logprob: -20.25
    8. '(dl' → logprob: -22.25
    9. '_dd' → logprob: -22.625
    10. '(df' → logprob: -22.625

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01933862827718258
    2. ')
' → logprob: -4.394338607788086
    3. '()' → logprob: -5.269338607788086
    4. '   ' → logprob: -6.644338607788086
    5. '())' → logprob: -8.519338607788086
    6. '()
' → logprob: -9.019338607788086
    7. '())
' → logprob: -11.269338607788086
    8. '(' → logprob: -11.769338607788086
    9. ')

' → logprob: -12.269338607788086
    10. ')
' → logprob: -12.894338607788086

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019135229522362351
    2. 's' → logprob: -7.876913547515869
    3. '    
' → logprob: -7.876913547515869
    4. 'result' → logprob: -8.251913070678711
    5. 'n' → logprob: -8.501913070678711
    6. 'for' → logprob: -9.001913070678711
    7. 'm' → logprob: -9.626913070678711
    8. ' for' → logprob: -9.876913070678711
    9. 'res' → logprob: -10.126913070678711
    10. 'a' → logprob: -10.376913070678711

Token 193: ' prod' (ID: 10207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6459245681762695
    2. 'produ' → logprob: -1.7709245681762695
    3. 'prod' (adapté à ' prod') → logprob: -1.7709245681762695
    4. 'result' → logprob: -2.0209245681762695
    5. 'p' → logprob: -3.0209245681762695
    6. '   ' → logprob: -3.1459245681762695
    7. 'diff' → logprob: -3.5209245681762695
    8. 's' → logprob: -3.5209245681762695
    9. 'res' → logprob: -3.6459245681762695
    10. 'if' → logprob: -3.8959245681762695

Token 194: ' =' (ID: 314)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uct' → logprob: -1.0286608934402466
    2. ' =' → logprob: -1.4036608934402466
    3. 'uit' → logprob: -1.5286608934402466
    4. '=' → logprob: -2.403660774230957
    5. 'u' → logprob: -3.028660774230957
    6. '_s' → logprob: -4.528660774230957
    7. 'ruit' → logprob: -5.653660774230957
    8. 'duit' → logprob: -5.653660774230957
    9. 'uction' → logprob: -5.778660774230957
    10. '=s' → logprob: -5.903660774230957

Token 195: ' calcul' (ID: 7559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4288736581802368
    2. 'calcul' → logprob: -1.5538736581802368
    3. ' somme' → logprob: -2.5538735389709473
    4. ' calcul' → logprob: -2.9288735389709473
    5. 'som' → logprob: -6.428873538970947
    6. 'cal' → logprob: -6.428873538970947
    7. '0' → logprob: -7.803873538970947
    8. 'sum' → logprob: -7.928873538970947
    9. ' ' → logprob: -8.053874015808105
    10. '(s' → logprob: -8.178874015808105

Token 196: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2664456789934775e-06
    2. '_er' → logprob: -14.625000953674316
    3. 'ar' → logprob: -15.500000953674316
    4. 'e' → logprob: -15.750000953674316
    5. 'r' → logprob: -15.875000953674316
    6. ' er' → logprob: -16.625001907348633
    7. 'uer' → logprob: -16.875001907348633
    8. '   ' → logprob: -16.875001907348633
    9. 'rer' → logprob: -17.625001907348633
    10. 'ier' → logprob: -18.000001907348633

Token 197: '_pro' (ID: 4617)
  Prédit: '_pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pro' → logprob: -0.00025514091248624027
    2. '_difference' → logprob: -9.000255584716797
    3. '_' → logprob: -9.750255584716797
    4. '_s' → logprob: -10.125255584716797
    5. 'produ' → logprob: -11.000255584716797
    6. '_product' → logprob: -11.875255584716797
    7. '_prod' → logprob: -12.125255584716797
    8. 's' → logprob: -14.000255584716797
    9. 'Produit' → logprob: -14.250255584716797
    10. '_c' → logprob: -14.250255584716797

Token 198: 'duit' (ID: 90246)
  Prédit: 'duit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duit' → logprob: -0.0006133131100796163
    2. 'du' → logprob: -7.500613212585449
    3. 'dut' → logprob: -10.62561321258545
    4. 'd' → logprob: -11.37561321258545
    5. 'dit' → logprob: -11.37561321258545
    6. 'uit' → logprob: -12.00061321258545
    7. '   ' → logprob: -14.12561321258545
    8. 'od' → logprob: -14.25061321258545
    9. 'duct' → logprob: -14.37561321258545
    10. '```' → logprob: -14.62561321258545

Token 199: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03743846341967583
    2. '(n' → logprob: -3.41243839263916
    3. '(' → logprob: -5.66243839263916
    4. 's' → logprob: -8.16243839263916
    5. ' (' → logprob: -11.16243839263916
    6. 'n' → logprob: -12.41243839263916
    7. '(d' → logprob: -12.78743839263916
    8. '(
' → logprob: -13.28743839263916
    9. '(sum' → logprob: -13.78743839263916
    10. '(prod' → logprob: -14.53743839263916

Token 200: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.004901180975139141
    2. 's' → logprob: -6.12990140914917
    3. '(s' → logprob: -6.50490140914917
    4. '(' → logprob: -8.254900932312012
    5. 'umme' → logprob: -8.254900932312012
    6. '(n' → logprob: -9.129900932312012
    7. 'o' → logprob: -9.254900932312012
    8. 'ome' → logprob: -9.629900932312012
    9. 'omm' → logprob: -9.754900932312012
    10. 'om' → logprob: -10.004900932312012

Token 201: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00037895687273703516
    2. '_' → logprob: -8.625378608703613
    3. 'd' → logprob: -8.875378608703613
    4. '_s' → logprob: -10.375378608703613
    5. '(d' → logprob: -11.750378608703613
    6. 's' → logprob: -12.500378608703613
    7. '_l' → logprob: -12.750378608703613
    8. '(' → logprob: -12.875378608703613
    9. '_n' → logprob: -13.000378608703613
    10. '(s' → logprob: -13.375378608703613

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007524527609348297
    2. ' ,' → logprob: -5.882524490356445
    3. 's' → logprob: -6.007524490356445
    4. ',s' → logprob: -6.132524490356445
    5. '(' → logprob: -10.507524490356445
    6. ',n' → logprob: -10.632524490356445
    7. ',sum' → logprob: -12.382524490356445
    8. ',
' → logprob: -12.507524490356445
    9. '(s' → logprob: -12.757524490356445
    10. ' s' → logprob: -13.132524490356445

Token 203: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023878896608948708
    2. ' somme' → logprob: -3.773878812789917
    3. '   ' → logprob: -8.148879051208496
    4. 'som' → logprob: -9.273879051208496
    5. 'n' → logprob: -9.398879051208496
    6. 'sum' → logprob: -9.648879051208496
    7. ' ' → logprob: -10.523879051208496
    8. 'sou' → logprob: -10.648879051208496
    9. '    ' → logprob: -11.523879051208496
    10. '2' → logprob: -12.273879051208496

Token 204: '_d' (ID: 1565)
  Prédit: '_dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dd' → logprob: -0.0021111206151545048
    2. 'dd' → logprob: -6.502110958099365
    3. '_d' → logprob: -7.627110958099365
    4. 's' → logprob: -10.127111434936523
    5. '_s' → logprob: -10.627111434936523
    6. '(dd' → logprob: -11.127111434936523
    7. 'd' → logprob: -11.252111434936523
    8. '_' → logprob: -11.252111434936523
    9. '```' → logprob: -12.877111434936523
    10. '(s' → logprob: -13.127111434936523

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.538490950129926e-05
    2. '(' → logprob: -10.250055313110352
    3. ' )' → logprob: -12.500055313110352
    4. ')
' → logprob: -13.000055313110352
    5. '))' → logprob: -13.125055313110352
    6. '()' → logprob: -13.125055313110352
    7. '[' → logprob: -13.500055313110352
    8. '   ' → logprob: -13.875055313110352
    9. '())' → logprob: -14.125055313110352
    10. ',' → logprob: -14.250055313110352

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012661826331168413
    2. 'diff' → logprob: -7.626266002655029
    3. '    
' → logprob: -8.626266479492188
    4. 's' → logprob: -9.126266479492188
    5. '```' → logprob: -9.876266479492188
    6. ',' → logprob: -10.001266479492188
    7. 'div' → logprob: -10.001266479492188
    8. ' diff' → logprob: -10.251266479492188
    9. 'n' → logprob: -10.626266479492188
    10. 'd' → logprob: -10.688766479492188

Token 207: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.2665688097476959
    2. 'difference' → logprob: -1.8915687799453735
    3. '   ' → logprob: -2.891568899154663
    4. 'if' → logprob: -4.016568660736084
    5. 'd' → logprob: -6.141568660736084
    6. ' diff' → logprob: -6.391568660736084
    7. 'car' → logprob: -6.641568660736084
    8. 'result' → logprob: -6.766568660736084
    9. ' difference' → logprob: -7.641568660736084
    10. ' if' → logprob: -7.766568660736084

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11509300023317337
    2. '=' → logprob: -2.2400929927825928
    3. '_' → logprob: -6.115093231201172
    4. 'er' → logprob: -11.490093231201172
    5. '_=' → logprob: -11.740093231201172
    6. 'uer' → logprob: -11.865093231201172
    7. 'u' → logprob: -12.115093231201172
    8. 's' → logprob: -12.490093231201172
    9. '  ' → logprob: -12.740093231201172
    10. ' ' → logprob: -12.740093231201172

Token 209: ' calcul' (ID: 7559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11270302534103394
    2. ' calcul' → logprob: -2.8627030849456787
    3. ' somme' → logprob: -3.6127030849456787
    4. 'calcul' → logprob: -4.2377028465271
    5. '   ' → logprob: -5.2377028465271
    6. '(s' → logprob: -6.3627028465271
    7. 'cal' → logprob: -8.987703323364258
    8. ' prod' → logprob: -8.987703323364258
    9. 'prod' → logprob: -9.237703323364258
    10. 'sum' → logprob: -9.237703323364258

Token 210: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.9361264946837764e-07
    2. '_er' → logprob: -15.875
    3. 'e' → logprob: -18.5
    4. ' er' → logprob: -19.5
    5. 'rer' → logprob: -19.5
    6. '   ' → logprob: -19.625
    7. 'erer' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. '­er' → logprob: -20.375
    10. 'ер' → logprob: -20.5

Token 211: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -3.7697225252486533e-06
    2. '_pro' → logprob: -13.375003814697266
    3. '_distance' → logprob: -14.625003814697266
    4. 'difference' → logprob: -14.750003814697266
    5. '_car' → logprob: -14.875003814697266
    6. '_c' → logprob: -14.875003814697266
    7. '_' → logprob: -15.250003814697266
    8. '_d' → logprob: -15.500003814697266
    9. '_diff' → logprob: -16.250003814697266
    10. '_s' → logprob: -16.375003814697266

Token 212: '(prod' (ID: 129733)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009308716980740428
    2. '(prod' → logprob: -7.6259307861328125
    3. '(pro' → logprob: -8.250930786132812
    4. '(' → logprob: -8.750930786132812
    5. 's' → logprob: -11.125930786132812
    6. ' (' → logprob: -12.125930786132812
    7. '(proc' → logprob: -14.250930786132812
    8. 'prod' → logprob: -14.250930786132812
    9. '(sum' → logprob: -14.375930786132812
    10. '   ' → logprob: -15.125930786132812

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001805130043067038
    2. ',s' → logprob: -6.626805305480957
    3. ' ,' → logprob: -8.001805305480957
    4. 's' → logprob: -9.001805305480957
    5. '(' → logprob: -11.751805305480957
    6. '(s' → logprob: -11.751805305480957
    7. ',(' → logprob: -12.876805305480957
    8. ',S' → logprob: -14.251805305480957
    9. ',
' → logprob: -14.501805305480957
    10. ',d' → logprob: -14.501805305480957

Token 214: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.190178904333152e-05
    2. ' somme' → logprob: -10.375031471252441
    3. '   ' → logprob: -14.625031471252441
    4. 'sum' → logprob: -16.250032424926758
    5. '(s' → logprob: -17.500032424926758
    6. 'som' → logprob: -17.500032424926758
    7. ')s' → logprob: -18.625032424926758
    8. '	s' → logprob: -18.875032424926758
    9. ' ' → logprob: -19.250032424926758
    10. '    ' → logprob: -19.250032424926758

Token 215: '_dd' (ID: 102571)
  Prédit: '_dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dd' → logprob: -4.811348480870947e-05
    2. 'dd' → logprob: -10.00004768371582
    3. '(dd' → logprob: -13.75004768371582
    4. '_' → logprob: -14.00004768371582
    5. '_d' → logprob: -14.62504768371582
    6. 'd' → logprob: -17.37504768371582
    7. '```' → logprob: -17.62504768371582
    8. '\' → logprob: -17.75004768371582
    9. '_
' → logprob: -18.75004768371582
    10. '__' → logprob: -18.87504768371582

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008702974766492844
    2. ')
' → logprob: -4.758702754974365
    3. '   ' → logprob: -9.508703231811523
    4. ')
' → logprob: -11.758703231811523
    5. '()' → logprob: -12.883703231811523
    6. ')

' → logprob: -13.133703231811523
    7. ' )' → logprob: -14.258703231811523
    8. '())' → logprob: -14.883703231811523
    9. '))' → logprob: -15.383703231811523
    10. ',' → logprob: -16.633703231811523

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002311073010787368
    2. 'if' → logprob: -6.6273112297058105
    3. 'result' → logprob: -8.002310752868652
    4. '```' → logprob: -9.252310752868652
    5. 'div' → logprob: -9.502310752868652
    6. 'n' → logprob: -9.627310752868652
    7. 'ratio' → logprob: -9.627310752868652
    8. '    
' → logprob: -9.627310752868652
    9. 'aff' → logprob: -10.002310752868652
    10. ' if' → logprob: -10.002310752868652

Token 218: ' resultat' (ID: 67404)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.484341025352478
    2. 'if' → logprob: -1.234341025352478
    3. 'result' → logprob: -3.2343411445617676
    4. 'div' → logprob: -4.109341144561768
    5. 'print' → logprob: -4.359341144561768
    6. 'q' → logprob: -5.359341144561768
    7. ' if' → logprob: -5.734341144561768
    8. 'r' → logprob: -5.984341144561768
    9. 'res' → logprob: -5.984341144561768
    10. 'p' → logprob: -6.109341144561768

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22048896551132202
    2. '_' → logprob: -1.7204890251159668
    3. '=' → logprob: -4.095489025115967
    4. '   ' → logprob: -6.470489025115967
    5. ' _' → logprob: -8.595488548278809
    6. '(' → logprob: -8.845488548278809
    7. ')' → logprob: -9.470488548278809
    8. ' ' → logprob: -9.720488548278809
    9. '()' → logprob: -9.845488548278809
    10. ':' → logprob: -9.970488548278809

Token 220: ' division' (ID: 21629)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.27856242656707764
    2. 'division' → logprob: -1.6535624265670776
    3. ' division' → logprob: -3.653562545776367
    4. ' diff' → logprob: -3.778562545776367
    5. '2' → logprob: -7.528562545776367
    6. 'div' → logprob: -7.903562545776367
    7. 'result' → logprob: -8.028562545776367
    8. ' ' → logprob: -8.278562545776367
    9. '(diff' → logprob: -8.278562545776367
    10. 'difference' → logprob: -8.278562545776367

Token 221: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00045379105722531676
    2. '_ent' → logprob: -8.37545394897461
    3. '_diff' → logprob: -8.87545394897461
    4. '_difference' → logprob: -9.50045394897461
    5. '_result' → logprob: -12.62545394897461
    6. 'diff' → logprob: -13.50045394897461
    7. '(diff' → logprob: -14.12545394897461
    8. '_entropy' → logprob: -14.37545394897461
    9. '_
' → logprob: -14.50045394897461
    10. '\' → logprob: -15.00045394897461

Token 222: 'enti' (ID: 14989)
  Prédit: 'enti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enti' → logprob: -0.049850668758153915
    2. 'ent' → logprob: -3.0498507022857666
    3. 'diff' → logprob: -7.0498504638671875
    4. 'entie' → logprob: -8.174850463867188
    5. 'ente' → logprob: -9.924850463867188
    6. '(ent' → logprob: -11.424850463867188
    7. 'difference' → logprob: -11.674850463867188
    8. 'inte' → logprob: -11.924850463867188
    9. 'enta' → logprob: -12.299850463867188
    10. '_ent' → logprob: -12.299850463867188

Token 223: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -1.759734732331708e-05
    2. 'ère' → logprob: -11.500017166137695
    3. 're' → logprob: -12.875017166137695
    4. '   ' → logprob: -13.625017166137695
    5. 'e' → logprob: -13.875017166137695
    6. '`' → logprob: -14.625017166137695
    7. 'er' → logprob: -15.000017166137695
    8. ' ' → logprob: -15.375017166137695
    9. '\' → logprob: -15.750017166137695
    10. '[' → logprob: -15.875017166137695

Token 224: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -6.468279752880335e-05
    2. '(' → logprob: -9.750064849853516
    3. 'diff' → logprob: -12.750064849853516
    4. ' (' → logprob: -13.125064849853516
    5. '(result' → logprob: -14.000064849853516
    6. '(d' → logprob: -15.250064849853516
    7. '(
' → logprob: -15.750064849853516
    8. ' diff' → logprob: -16.375064849853516
    9. '(div' → logprob: -16.875064849853516
    10. '	diff' → logprob: -17.000064849853516

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025636592879891396
    2. '(n' → logprob: -4.150636672973633
    3. ' ,' → logprob: -5.400636672973633
    4. ',n' → logprob: -5.650636672973633
    5. '(' → logprob: -6.900636672973633
    6. ' (' → logprob: -8.525636672973633
    7. '(s' → logprob: -9.775636672973633
    8. '   ' → logprob: -9.775636672973633
    9. ',(' → logprob: -9.900636672973633
    10. ')' → logprob: -10.525636672973633

Token 226: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2991801500320435
    2. '4' → logprob: -1.2991801500320435
    3. 'n' → logprob: -1.4241801500320435
    4. '(' → logprob: -1.6741801500320435
    5. ' n' → logprob: -4.049180030822754
    6. ' (' → logprob: -5.549180030822754
    7. ' ' → logprob: -6.049180030822754
    8. '(n' → logprob: -6.799180030822754
    9. '   ' → logprob: -6.924180030822754
    10. ')' → logprob: -7.799180030822754

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023321760818362236
    2. '4' → logprob: -3.7733218669891357
    3. 'n' → logprob: -9.523322105407715
    4. ' ' → logprob: -14.398322105407715
    5. '(' → logprob: -14.773322105407715
    6. 'm' → logprob: -15.148322105407715
    7. '(n' → logprob: -15.148322105407715
    8. 'de' → logprob: -15.273322105407715
    9. '   ' → logprob: -15.398322105407715
    10. ')' → logprob: -15.398322105407715

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.50001335144043
    4. ')

' → logprob: -17.75001335144043
    5. '))' → logprob: -18.12501335144043
    6. '   ' → logprob: -18.12501335144043
    7. ')
' → logprob: -18.62501335144043
    8. '')' → logprob: -18.62501335144043
    9. ')`' → logprob: -18.75001335144043
    10. ')return' → logprob: -19.12501335144043

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014291671104729176
    2. '    
' → logprob: -7.126429080963135
    3. '
' → logprob: -7.626429080963135
    4. '  
' → logprob: -10.126429557800293
    5. 'aff' → logprob: -10.626429557800293
    6. 'Afficher' → logprob: -11.376429557800293
    7. ' afficher' → logprob: -11.501429557800293
    8. ' 
' → logprob: -11.626429557800293
    9. '   ' → logprob: -11.876429557800293
    10. '   
' → logprob: -11.876429557800293

Token 230: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.47436946630477905
    2. '   ' → logprob: -0.974369466304779
    3. ' afficher' → logprob: -8.474369049072266
    4. '  ' → logprob: -10.099369049072266
    5. 'Afficher' → logprob: -10.599369049072266
    6. '   ' → logprob: -12.099369049072266
    7. '    
' → logprob: -12.599369049072266
    8. 'af' → logprob: -13.099369049072266
    9. ' ' → logprob: -13.474369049072266
    10. '
' → logprob: -13.849369049072266

Token 231: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.375006675720215
    3. '_res' → logprob: -13.250006675720215
    4. '_Result' → logprob: -15.125006675720215
    5. '_results' → logprob: -15.875006675720215
    6. ' _' → logprob: -15.875006675720215
    7. '_r' → logprob: -16.37500762939453
    8. 'result' → logprob: -16.37500762939453
    9. '_RESULT' → logprob: -17.25000762939453
    10. 's' → logprob: -17.37500762939453

Token 232: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0016872010892257094
    2. '_result' → logprob: -7.126687049865723
    3. 't' → logprob: -7.501687049865723
    4. 'ation' → logprob: -8.876687049865723
    5. 'er' → logprob: -9.501687049865723
    6. 'result' → logprob: -9.876687049865723
    7. 'ent' → logprob: -10.876687049865723
    8. '_at' → logprob: -11.376687049865723
    9. '(result' → logprob: -12.501687049865723
    10. 'a' → logprob: -12.626687049865723

Token 233: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00046022076276130974
    2. '(' → logprob: -7.750460147857666
    3. 'result' → logprob: -10.500460624694824
    4. '(resultado' → logprob: -13.875460624694824
    5. ' (' → logprob: -15.000460624694824
    6. '(res' → logprob: -15.250460624694824
    7. '(r' → logprob: -15.750460624694824
    8. '(results' → logprob: -15.875460624694824
    9. '(
' → logprob: -16.750459671020508
    10. '=result' → logprob: -17.125459671020508

Token 234: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.9361264946837764e-07
    2. 't' → logprob: -16.75
    3. 'a' → logprob: -18.0
    4. 'result' → logprob: -18.5
    5. 'ent' → logprob: -18.875
    6. 'ат' → logprob: -19.25
    7. 'ant' → logprob: -19.625
    8. 'al' → logprob: -20.25
    9. ' at' → logprob: -20.25
    10. 'et' → logprob: -20.875

Token 235: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033337296918034554
    2. '()' → logprob: -5.753333568572998
    3. '())' → logprob: -9.003334045410156
    4. ')
' → logprob: -10.503334045410156
    5. '()
' → logprob: -12.628334045410156
    6. ' )' → logprob: -13.253334045410156
    7. '(' → logprob: -14.753334045410156
    8. '))' → logprob: -16.878334045410156
    9. ')

' → logprob: -17.003334045410156
    10. '())
' → logprob: -17.503334045410156

Token 236: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003209229907952249
    2. 'main' → logprob: -8.125321388244629
    3. '
' → logprob: -11.375321388244629
    4. ' if' → logprob: -11.750321388244629
    5. '```' → logprob: -13.125321388244629
    6. '#' → logprob: -13.375321388244629
    7. '<|end|>' → logprob: -14.375321388244629
    8. '\n' → logprob: -14.625321388244629
    9. '_' → logprob: -15.875321388244629
    10. '\' → logprob: -16.125320434570312

Token 237: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038288687937892973
    2. '(' → logprob: -7.875382900238037
    3. '()
' → logprob: -13.500382423400879
    4. '();' → logprob: -14.625382423400879
    5. ' ()' → logprob: -14.750382423400879
    6. '()`' → logprob: -15.625382423400879
    7. '()

' → logprob: -16.250383377075195
    8. '()">' → logprob: -16.875383377075195
    9. '()"' → logprob: -17.500383377075195
    10. '()<' → logprob: -17.500383377075195


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 235
Tokens correctement prédits (1ère position, stricte): 120
Tokens correctement prédits (1ère position, avec adaptation): 124
Tokens correctement prédits (top 10): 207
Précision stricte (1ère position): 51.06%
Précision adaptée (1ère position): 52.77%
Précision (top 10): 88.09%
================================================================================
