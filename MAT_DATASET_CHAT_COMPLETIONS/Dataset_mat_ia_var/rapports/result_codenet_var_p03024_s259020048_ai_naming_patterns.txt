================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_string = input()
input_length = len(input_string)

count_x = input_string.count('x')

if count_x <= 7:
    print('YES')
else:
    print('NO')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01838649809360504
    2. ''' → logprob: -4.143386363983154
    3. ' ' → logprob: -6.518386363983154
    4. ' "' → logprob: -7.518386363983154
    5. '"""' → logprob: -8.768386840820312
    6. '""' → logprob: -9.518386840820312
    7. '"user' → logprob: -10.518386840820312
    8. ' '' → logprob: -10.893386840820312
    9. '`' → logprob: -11.268386840820312
    10. 'input' → logprob: -11.518386840820312

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005510857328772545
    2. ''' → logprob: -5.5055108070373535
    3. '"' → logprob: -8.130511283874512
    4. '('' → logprob: -8.130511283874512
    5. '```' → logprob: -8.130511283874512
    6. '`' → logprob: -8.755511283874512
    7. '(
' → logprob: -8.880511283874512
    8. ')' → logprob: -9.630511283874512
    9. '()' → logprob: -10.255511283874512
    10. '[' → logprob: -10.630511283874512

Token 5: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026091501116752625
    2. '.strip' → logprob: -3.7760915756225586
    3. '.split' → logprob: -7.026091575622559
    4. '.lower' → logprob: -7.151091575622559
    5. 'if' → logprob: -8.026091575622559
    6. 'print' → logprob: -8.276091575622559
    7. '=' → logprob: -8.651091575622559
    8. 'strip' → logprob: -9.901091575622559
    9. '.replace' → logprob: -9.901091575622559
    10. ' if' → logprob: -10.026091575622559

Token 6: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2161850780248642
    2. '_string' → logprob: -1.8411850929260254
    3. '.' → logprob: -4.091185092926025
    4. '(' → logprob: -4.341185092926025
    5. '._' → logprob: -5.966185092926025
    6. ')' → logprob: -7.216185092926025
    7. '_str' → logprob: -7.466185092926025
    8. '()' → logprob: -8.091184616088867
    9. '_.' → logprob: -8.091184616088867
    10. '[' → logprob: -8.091184616088867

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3733881711959839
    2. '_' → logprob: -1.6233881711959839
    3. ')' → logprob: -1.9983881711959839
    4. '```' → logprob: -2.2483882904052734
    5. '=' → logprob: -2.4983882904052734
    6. '<|end|>' → logprob: -2.8733882904052734
    7. '.' → logprob: -3.2483882904052734
    8. '+' → logprob: -3.4983882904052734
    9. '()' → logprob: -3.6233882904052734
    10. '[:]' → logprob: -3.9983882904052734

Token 8: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.001507601235061884
    2. 'len' → logprob: -6.501507759094238
    3. ' ' → logprob: -12.501507759094238
    4. ' input' → logprob: -13.376507759094238
    5. ' int' → logprob: -17.501506805419922
    6. '(len' → logprob: -18.001506805419922
    7. '=len' → logprob: -18.501506805419922
    8. 'input' → logprob: -18.626506805419922
    9. '	len' → logprob: -20.251506805419922
    10. ' ' → logprob: -20.251506805419922

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016080472618341446
    2. '(input' → logprob: -4.141080379486084
    3. ' (' → logprob: -11.266080856323242
    4. '(
' → logprob: -11.641080856323242
    5. '(user' → logprob: -12.266080856323242
    6. '(

' → logprob: -12.391080856323242
    7. '((' → logprob: -12.891080856323242
    8. '(**' → logprob: -12.891080856323242
    9. '()' → logprob: -13.141080856323242
    10. '("("' → logprob: -13.516080856323242

Token 10: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0025587803684175014
    2. '_' → logprob: -6.002558708190918
    3. '_)' → logprob: -9.877558708190918
    4. '_s' → logprob: -11.252558708190918
    5. '_str' → logprob: -12.002558708190918
    6. ')' → logprob: -12.752558708190918
    7. ')_' → logprob: -12.877558708190918
    8. 'string' → logprob: -13.877558708190918
    9. '(_' → logprob: -13.877558708190918
    10. ' _' → logprob: -14.002558708190918

Token 11: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -13.125004768371582
    3. '))' → logprob: -13.750004768371582
    4. '`)' → logprob: -14.875004768371582
    5. '()' → logprob: -15.125004768371582
    6. '[' → logprob: -15.250004768371582
    7. '')' → logprob: -15.625004768371582
    8. '(' → logprob: -15.750004768371582
    9. ')))' → logprob: -16.875003814697266
    10. ')`' → logprob: -17.000003814697266

Token 12: 'count' (ID: 5420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45661571621894836
    2. 'i' → logprob: -1.081615686416626
    3. ' if' → logprob: -4.331615924835205
    4. '#' → logprob: -5.831615924835205
    5. 'for' → logprob: -6.081615924835205
    6. ' ' → logprob: -6.456615924835205
    7. '.' → logprob: -7.081615924835205
    8. '>' → logprob: -7.206615924835205
    9. '=' → logprob: -7.206615924835205
    10. '_' → logprob: -7.206615924835205

Token 13: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01576557569205761
    2. '(' → logprob: -4.39076566696167
    3. 's' → logprob: -6.14076566696167
    4. '[' → logprob: -7.14076566696167
    5. '=' → logprob: -9.265765190124512
    6. ')' → logprob: -9.265765190124512
    7. '_space' → logprob: -10.515765190124512
    8. '_counts' → logprob: -11.765765190124512
    9. '_count' → logprob: -11.890765190124512
    10. ' ' → logprob: -12.015765190124512

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2237490713596344
    2. 's' → logprob: -1.848749041557312
    3. ' =' → logprob: -4.098749160766602
    4. '[' → logprob: -4.473749160766602
    5. '=' → logprob: -4.723749160766602
    6. ' ' → logprob: -5.348749160766602
    7. '(' → logprob: -8.098749160766602
    8. ')' → logprob: -8.348749160766602
    9. '_x' → logprob: -8.473749160766602
    10. '_space' → logprob: -9.473749160766602

Token 15: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07912882417440414
    2. ' ' → logprob: -2.5791287422180176
    3. 'input' → logprob: -8.704129219055176
    4. ' input' → logprob: -10.079129219055176
    5. '{}' → logprob: -10.704129219055176
    6. ' {}' → logprob: -12.579129219055176
    7. '{' → logprob: -12.954129219055176
    8. ' ' → logprob: -14.579129219055176
    9. 'int' → logprob: -14.704129219055176
    10. '1' → logprob: -14.954129219055176

Token 16: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7011469602584839
    2. '_string' → logprob: -0.7011469602584839
    3. '[' → logprob: -5.826147079467773
    4. '```' → logprob: -6.826147079467773
    5. '_length' → logprob: -7.451147079467773
    6. '[_' → logprob: -7.576147079467773
    7. '_x' → logprob: -7.701147079467773
    8. '_count' → logprob: -8.076147079467773
    9. '_[' → logprob: -8.451147079467773
    10. ''_' → logprob: -8.576147079467773

Token 17: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.01632607914507389
    2. '.' → logprob: -4.141325950622559
    3. '.replace' → logprob: -8.266325950622559
    4. '.lower' → logprob: -11.516325950622559
    5. '.c' → logprob: -11.641325950622559
    6. '.split' → logprob: -12.141325950622559
    7. '.startswith' → logprob: -12.516325950622559
    8. '.upper' → logprob: -13.391325950622559
    9. '.Count' → logprob: -13.516325950622559
    10. 'count' → logprob: -13.766325950622559

Token 18: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16485470533370972
    2. '(' → logprob: -1.9148547649383545
    3. '("("' → logprob: -5.414854526519775
    4. '('(' → logprob: -9.539855003356934
    5. '(x' → logprob: -10.164855003356934
    6. '("' → logprob: -11.039855003356934
    7. ''' → logprob: -11.164855003356934
    8. '("(' → logprob: -11.664855003356934
    9. '("""' → logprob: -12.414855003356934
    10. ''(' → logprob: -12.539855003356934

Token 19: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005785631947219372
    2. ''x' → logprob: -5.6307854652404785
    3. 'a' → logprob: -6.8807854652404785
    4. ''' → logprob: -7.2557854652404785
    5. 'X' → logprob: -9.130785942077637
    6. '')' → logprob: -9.755785942077637
    7. '"x' → logprob: -9.880785942077637
    8. ')' → logprob: -9.880785942077637
    9. ' x' → logprob: -10.130785942077637
    10. '(' → logprob: -10.255785942077637

Token 20: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.029812278226017952
    2. ')' → logprob: -3.5298123359680176
    3. ''' → logprob: -9.77981185913086
    4. '('' → logprob: -13.27981185913086
    5. ''))' → logprob: -14.02981185913086
    6. 'x' → logprob: -14.15481185913086
    7. '')
' → logprob: -14.27981185913086
    8. '")' → logprob: -14.52981185913086
    9. ''x' → logprob: -15.52981185913086
    10. '}')' → logprob: -16.15481185913086

Token 21: 'if' (ID: 366)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.428802490234375
    2. '
' → logprob: -1.803802490234375
    3. ' ' → logprob: -1.803802490234375
    4. 'if' → logprob: -1.803802490234375
    5. ' if' → logprob: -2.178802490234375
    6. ' /' → logprob: -3.303802490234375
    7. '>' → logprob: -3.803802490234375
    8. '/' → logprob: -4.053802490234375
    9. '+' → logprob: -4.428802490234375
    10. '<|end|>' → logprob: -4.553802490234375

Token 22: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.701693058013916
    2. ' count' → logprob: -0.701693058013916
    3. 'count' → logprob: -4.826693058013916
    4. '  ' → logprob: -8.326692581176758
    5. ' input' → logprob: -8.826692581176758
    6. ' space' → logprob: -9.701692581176758
    7. ' x' → logprob: -10.826692581176758
    8. '(count' → logprob: -12.326692581176758
    9. ' ' → logprob: -12.576692581176758
    10. '[count' → logprob: -13.076692581176758

Token 23: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5233702063560486
    2. '_x' → logprob: -0.8983702063560486
    3. ' _' → logprob: -9.398369789123535
    4. ' ' → logprob: -10.023369789123535
    5. '>' → logprob: -10.898369789123535
    6. '_)' → logprob: -11.398369789123535
    7. 'x' → logprob: -11.398369789123535
    8. '_<' → logprob: -11.773369789123535
    9. '('_' → logprob: -11.773369789123535
    10. '(' → logprob: -12.273369789123535

Token 24: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1206875592470169
    2. ' ==' → logprob: -3.120687484741211
    3. ' <' → logprob: -3.245687484741211
    4. '>' → logprob: -4.120687484741211
    5. ' ' → logprob: -4.495687484741211
    6. '==' → logprob: -6.745687484741211
    7. ' >=' → logprob: -6.745687484741211
    8. '<' → logprob: -7.995687484741211
    9. '  ' → logprob: -8.370687484741211
    10. ')' → logprob: -9.620687484741211

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41656923294067383
    2. ' input' → logprob: -1.2915692329406738
    3. 'input' → logprob: -2.791569232940674
    4. '0' → logprob: -6.541569232940674
    5. '2' → logprob: -7.166569232940674
    6. '1' → logprob: -7.166569232940674
    7. '3' → logprob: -7.541569232940674
    8. '5' → logprob: -7.666569232940674
    9. '10' → logprob: -7.916569232940674
    10. '4' → logprob: -10.166568756103516

Token 26: '7' (ID: 22)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11757662147283554
    2. '0' → logprob: -3.2425765991210938
    3. ' input' → logprob: -3.2425765991210938
    4. '1' → logprob: -4.492576599121094
    5. ' ' → logprob: -4.617576599121094
    6. '2' → logprob: -5.367576599121094
    7. '3' → logprob: -5.367576599121094
    8. '5' → logprob: -6.492576599121094
    9. '10' → logprob: -7.367576599121094
    10. '(input' → logprob: -9.242576599121094

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011677479778882116
    2. ' :' → logprob: -9.125116348266602
    3. ':**' → logprob: -12.500116348266602
    4. ' and' → logprob: -13.000116348266602
    5. ':
' → logprob: -14.250116348266602
    6. '):' → logprob: -15.250116348266602
    7. '>:' → logprob: -15.250116348266602
    8. 'and' → logprob: -16.2501163482666
    9. '：' → logprob: -16.5001163482666
    10. '>' → logprob: -16.6251163482666

Token 28: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0569090843200684
    2. ':' → logprob: -1.3069090843200684
    3. '   ' → logprob: -1.4319090843200684
    4. ' print' → logprob: -2.3069090843200684
    5. '    ' → logprob: -4.556909084320068
    6. ' :' → logprob: -4.806909084320068
    7. '    
' → logprob: -5.056909084320068
    8. ' 
' → logprob: -5.556909084320068
    9. ':
' → logprob: -5.806909084320068
    10. '\n' → logprob: -5.931909084320068

Token 29: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.22476311028003693
    2. 'print' (adapté à ' print') → logprob: -1.7247631549835205
    3. '   ' → logprob: -4.599762916564941
    4. '    ' → logprob: -4.849762916564941
    5. ' pass' → logprob: -5.599762916564941
    6. ' ' → logprob: -7.224762916564941
    7. ' 
' → logprob: -8.474762916564941
    8. 'pass' → logprob: -8.724762916564941
    9. '    
' → logprob: -9.974762916564941
    10. ' ' → logprob: -10.224762916564941

Token 30: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10761290788650513
    2. '('' → logprob: -2.3576128482818604
    3. '(count' → logprob: -5.6076130867004395
    4. '("' → logprob: -6.4826130867004395
    5. '("("' → logprob: -6.7326130867004395
    6. '()' → logprob: -8.107612609863281
    7. '(input' → logprob: -8.607612609863281
    8. '(True' → logprob: -8.982612609863281
    9. '(x' → logprob: -9.107612609863281
    10. '(len' → logprob: -9.482612609863281

Token 31: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -1.4348996877670288
    2. 'Yes' → logprob: -1.5598996877670288
    3. 'x' → logprob: -2.3098998069763184
    4. 'Valid' → logprob: -2.4348998069763184
    5. 'yes' → logprob: -2.9348998069763184
    6. 'No' → logprob: -3.0598998069763184
    7. 'Accepted' → logprob: -3.0598998069763184
    8. 'True' → logprob: -4.059899806976318
    9. 'Good' → logprob: -4.309899806976318
    10. 'valid' → logprob: -4.309899806976318

Token 32: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004511685692705214
    2. '')
' → logprob: -8.25045108795166
    3. ')' → logprob: -8.62545108795166
    4. '')
' → logprob: -11.75045108795166
    5. ''' → logprob: -13.62545108795166
    6. '")' → logprob: -14.00045108795166
    7. '')

' → logprob: -15.37545108795166
    8. '!' → logprob: -16.625452041625977
    9. ' ')' → logprob: -17.125452041625977
    10. '',' → logprob: -17.500452041625977

Token 33: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02225648984313011
    2. ' else' → logprob: -4.022256374359131
    3. 'elif' → logprob: -5.647256374359131
    4. '<|end|>' → logprob: -7.647256374359131
    5. ' elif' → logprob: -10.647256851196289
    6. '
' → logprob: -11.522256851196289
    7. '```' → logprob: -11.522256851196289
    8. ')' → logprob: -11.772256851196289
    9. '<|end|>' → logprob: -11.897256851196289
    10. '	else' → logprob: -12.272256851196289

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.027225754223764e-05
    2. ':
' → logprob: -9.875060081481934
    3. ' :' → logprob: -11.750060081481934
    4. '   ' → logprob: -14.125060081481934
    5. 'if' → logprob: -17.62506103515625
    6. ' :
' → logprob: -17.75006103515625
    7. ':

' → logprob: -18.12506103515625
    8. ':
' → logprob: -18.37506103515625
    9. '):' → logprob: -18.37506103515625
    10. ':**' → logprob: -18.50006103515625

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013047284446656704
    2. '    ' → logprob: -4.638047218322754
    3. ' print' → logprob: -6.388047218322754
    4. 'print' → logprob: -6.513047218322754
    5. '    
' → logprob: -10.263047218322754
    6. '```' → logprob: -10.513047218322754
    7. '     
' → logprob: -11.388047218322754
    8. '\n' → logprob: -11.513047218322754
    9. ' ' → logprob: -11.888047218322754
    10. ' if' → logprob: -12.138047218322754

Token 36: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3898201882839203
    2. 'print' (adapté à ' print') → logprob: -1.1398202180862427
    3. '   ' → logprob: -5.889820098876953
    4. '    ' → logprob: -10.264820098876953
    5. ' ' → logprob: -10.764820098876953
    6. ' NO' → logprob: -10.764820098876953
    7. ''' → logprob: -10.764820098876953
    8. '\n' → logprob: -10.889820098876953
    9. '.print' → logprob: -11.514820098876953
    10. '	print' → logprob: -11.764820098876953

Token 37: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07890499383211136
    2. '(' → logprob: -2.5789051055908203
    3. '("' → logprob: -11.82890510559082
    4. '()' → logprob: -13.07890510559082
    5. '(False' → logprob: -13.57890510559082
    6. '('(' → logprob: -13.70390510559082
    7. ' (' → logprob: -13.82890510559082
    8. ' ('' → logprob: -14.57890510559082
    9. ' ' → logprob: -14.70390510559082
    10. ''' → logprob: -15.20390510559082

Token 38: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.060494016855955124
    2. 'NO' → logprob: -3.3104939460754395
    3. ''N' → logprob: -3.8104939460754395
    4. 'N' → logprob: -9.935494422912598
    5. ' '' → logprob: -12.185494422912598
    6. ' NO' → logprob: -12.310494422912598
    7. ''O' → logprob: -13.435494422912598
    8. '   ' → logprob: -13.435494422912598
    9. ''S' → logprob: -13.810494422912598
    10. '')' → logprob: -14.060494422912598

Token 39: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0011760591296479106
    2. ')' → logprob: -6.751175880432129
    3. ''' → logprob: -12.626175880432129
    4. '')
' → logprob: -13.126175880432129
    5. '")' → logprob: -15.126175880432129
    6. '}')' → logprob: -16.501176834106445
    7. '('' → logprob: -16.626176834106445
    8. ')'' → logprob: -16.876176834106445
    9. '')

' → logprob: -18.251176834106445
    10. '()' → logprob: -18.251176834106445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 35.14%
Précision adaptée (1ère position): 35.14%
Précision (top 10): 70.27%
================================================================================
