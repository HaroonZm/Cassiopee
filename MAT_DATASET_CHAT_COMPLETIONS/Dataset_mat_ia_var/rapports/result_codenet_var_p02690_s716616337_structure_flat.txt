================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
from decimal import Decimal

input = sys.stdin.readline

x = int(input())

i = 1
found = False
while i < 1000 and not found:
    j = -1000
    while j < 1000 and not found:
        if i**5 - j**5 == x:
            print(i, j)
            found = True
            sys.exit(0)
        j += 1
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3440817594528198
    2. '.' → logprob: -1.5940817594528198
    3. '<|end|>' → logprob: -2.9690818786621094
    4. '\' → logprob: -4.469081878662109
    5. 'import' → logprob: -5.094081878662109
    6. 'newline' → logprob: -5.094081878662109
    7. '' → logprob: -5.844081878662109
    8. '<|end|>' → logprob: -5.969081878662109
    9. '\r' → logprob: -6.094081878662109
    10. '
' → logprob: -6.344081878662109

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006277294596657157
    2. 'os' → logprob: -7.375627517700195
    3. ' math' → logprob: -14.500627517700195
    4. ' re' → logprob: -15.375627517700195
    5. '"os' → logprob: -15.625627517700195
    6. ' json' → logprob: -16.125627517700195
    7. '_os' → logprob: -17.000627517700195
    8. '	os' → logprob: -17.625627517700195
    9. ' io' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.250627517700195

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9274612665176392
    2. '.' → logprob: -1.1774612665176392
    3. '\n' → logprob: -1.3024612665176392
    4. '
' → logprob: -4.92746114730835
    5. '```' → logprob: -5.17746114730835
    6. '<|end|>' → logprob: -5.80246114730835
    7. '

' → logprob: -6.80246114730835
    8. 'import' → logprob: -7.05246114730835
    9. 'def' → logprob: -7.05246114730835
    10. '.
' → logprob: -7.17746114730835

Token 8: ' decimal' (ID: 26964)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.013028695248067379
    2. 'collections' → logprob: -4.513028621673584
    3. ' queue' → logprob: -6.638028621673584
    4. ' math' → logprob: -7.888028621673584
    5. ' itertools' → logprob: -8.888029098510742
    6. ' typing' → logprob: -9.388029098510742
    7. '_' → logprob: -11.138029098510742
    8. 'queue' → logprob: -11.388029098510742
    9. ' operator' → logprob: -11.513029098510742
    10. ' ' → logprob: -11.763029098510742

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01562546007335186
    2. 'import' → logprob: -4.265625476837158
    3. ' ' → logprob: -6.640625476837158
    4. '<|end|>' → logprob: -9.140625
    5. '	import' → logprob: -11.015625
    6. '.' → logprob: -11.765625
    7. '<|end|>' → logprob: -12.390625
    8. '_import' → logprob: -12.390625
    9. ' im' → logprob: -13.015625
    10. ' impor' → logprob: -13.390625

Token 10: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.07897725701332092
    2. 'Decimal' → logprob: -2.578977346420288
    3. '.Decimal' → logprob: -9.453977584838867
    4. ' decimal' → logprob: -13.078977584838867
    5. ' ' → logprob: -13.203977584838867
    6. '```' → logprob: -13.328977584838867
    7. 'decimal' → logprob: -13.453977584838867
    8. ' Dec' → logprob: -14.328977584838867
    9. 'Decimals' → logprob: -14.328977584838867
    10. '_decimal' → logprob: -14.703977584838867

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6647186279296875
    2. '\n' → logprob: -1.6647186279296875
    3. '

' → logprob: -1.9147186279296875
    4. '```' → logprob: -2.5397186279296875
    5. '\' → logprob: -3.7897186279296875
    6. 'def' → logprob: -4.2897186279296875
    7. 'import' → logprob: -5.0397186279296875
    8. '' → logprob: -5.4147186279296875
    9. 'newline' → logprob: -5.4147186279296875
    10. ' 

' → logprob: -5.4147186279296875

Token 12: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8520533442497253
    2. 'def' → logprob: -1.3520534038543701
    3. 'class' → logprob: -2.10205340385437
    4. 'd' → logprob: -2.35205340385437
    5. '```' → logprob: -3.97705340385437
    6. '\n' → logprob: -4.102053165435791
    7. '`' → logprob: -4.352053165435791
    8. '
' → logprob: -4.602053165435791
    9. '' → logprob: -4.727053165435791
    10. '#' → logprob: -4.852053165435791

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004325433634221554
    2. '.' → logprob: -5.5043253898620605
    3. '(
' → logprob: -9.379325866699219
    4. ')' → logprob: -10.504325866699219
    5. ''' → logprob: -10.754325866699219
    6. '```' → logprob: -11.004325866699219
    7. '"' → logprob: -11.254325866699219
    8. '(

' → logprob: -11.504325866699219
    9. ',' → logprob: -11.504325866699219
    10. '()' → logprob: -11.754325866699219

Token 14: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31585755944252014
    2. ' sys' → logprob: -1.3158575296401978
    3. 'input' → logprob: -6.065857410430908
    4. ' input' → logprob: -8.565857887268066
    5. 'lambda' → logprob: -10.190857887268066
    6. '=sys' → logprob: -11.065857887268066
    7. '	sys' → logprob: -11.440857887268066
    8. ' lambda' → logprob: -11.565857887268066
    9. '```' → logprob: -12.565857887268066
    10. '(sys' → logprob: -12.940857887268066

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023580050095915794
    2. '.stdin' → logprob: -4.273580074310303
    3. '.readline' → logprob: -4.898580074310303
    4. '.stdout' → logprob: -7.398580074310303
    5. '```' → logprob: -7.898580074310303
    6. ' .' → logprob: -8.398579597473145
    7. '.setdefault' → logprob: -9.523579597473145
    8. '<|end|>' → logprob: -9.648579597473145
    9. '.argv' → logprob: -10.023579597473145
    10. '.exit' → logprob: -10.148579597473145

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023418734781444073
    2. '.read' → logprob: -6.3773417472839355
    3. '.' → logprob: -7.3773417472839355
    4. '.readlines' → logprob: -12.002342224121094
    5. '.buffer' → logprob: -12.252342224121094
    6. '.stdin' → logprob: -13.502342224121094
    7. 'read' → logprob: -14.252342224121094
    8. '.Read' → logprob: -14.377342224121094
    9. ' .' → logprob: -15.377342224121094
    10. ' readline' → logprob: -16.002342224121094

Token 17: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04934585466980934
    2. '(' → logprob: -3.2993459701538086
    3. '()
' → logprob: -4.799345970153809
    4. 'def' → logprob: -7.049345970153809
    5. '()

' → logprob: -7.424345970153809
    6. '(
' → logprob: -7.424345970153809
    7. '
' → logprob: -7.924345970153809
    8. '()\' → logprob: -8.174345970153809
    9. ')' → logprob: -9.299345970153809
    10. '().' → logprob: -9.549345970153809

Token 18: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2755780816078186
    2. 'def' → logprob: -1.5255780220031738
    3. 'class' → logprob: -3.775578022003174
    4. 'N' → logprob: -8.650578498840332
    5. 't' → logprob: -9.150578498840332
    6. 's' → logprob: -9.775578498840332
    7. '(n' → logprob: -10.150578498840332
    8. 'd' → logprob: -10.900578498840332
    9. '
' → logprob: -11.775578498840332
    10. 'a' → logprob: -12.025578498840332

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21696169674396515
    2. '[' → logprob: -2.716961622238159
    3. ')' → logprob: -3.216961622238159
    4. ',' → logprob: -3.716961622238159
    5. '=' → logprob: -3.966961622238159
    6. ' ' → logprob: -4.216961860656738
    7. '.' → logprob: -4.466961860656738
    8. 's' → logprob: -5.091961860656738
    9. '_' → logprob: -5.341961860656738
    10. '(' → logprob: -6.466961860656738

Token 20: ' int' (ID: 677)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.03636549413204193
    2. ' Decimal' → logprob: -3.911365509033203
    3. 'input' → logprob: -4.911365509033203
    4. 'int' → logprob: -4.911365509033203
    5. 'x' → logprob: -7.786365509033203
    6. '[]' → logprob: -8.411365509033203
    7. ' int' → logprob: -9.286365509033203
    8. ' input' → logprob: -9.536365509033203
    9. '0' → logprob: -9.786365509033203
    10. 'float' → logprob: -11.286365509033203

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09453423321247101
    2. '(input' → logprob: -2.469534158706665
    3. '(x' → logprob: -5.219534397125244
    4. '('' → logprob: -9.719533920288086
    5. ' (' → logprob: -10.594533920288086
    6. '(sys' → logprob: -10.969533920288086
    7. '()' → logprob: -11.094533920288086
    8. '(user' → logprob: -11.469533920288086
    9. 'input' → logprob: -11.844533920288086
    10. '((' → logprob: -12.094533920288086

Token 22: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40814709663391113
    2. '()' → logprob: -1.1581470966339111
    3. ')' → logprob: -3.908147096633911
    4. '(' → logprob: -7.033146858215332
    5. '().' → logprob: -10.283146858215332
    6. ' ())' → logprob: -10.658146858215332
    7. '()))' → logprob: -12.158146858215332
    8. '()
' → logprob: -12.783146858215332
    9. '())
' → logprob: -12.783146858215332
    10. '()`' → logprob: -12.908146858215332

Token 23: 'i' (ID: 72)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7828065156936646
    2. ')' → logprob: -1.9078065156936646
    3. 'a' → logprob: -1.9078065156936646
    4. 's' → logprob: -2.032806396484375
    5. ',' → logprob: -2.657806396484375
    6. 'data' → logprob: -2.782806396484375
    7. ' ' → logprob: -3.282806396484375
    8. 'result' → logprob: -3.532806396484375
    9. 'x' → logprob: -3.782806396484375
    10. '.' → logprob: -4.032806396484375

Token 24: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24229800701141357
    2. 'f' → logprob: -1.6172980070114136
    3. 't' → logprob: -4.992298126220703
    4. '=' → logprob: -5.867298126220703
    5. 'nt' → logprob: -6.242298126220703
    6. 'm' → logprob: -6.242298126220703
    7. ' =' → logprob: -6.617298126220703
    8. 's' → logprob: -7.367298126220703
    9. ' ' → logprob: -7.867298126220703
    10. ' n' → logprob: -8.992298126220703

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4647951126098633
    2. '1' → logprob: -1.4647951126098633
    3. ' ' → logprob: -1.9647951126098633
    4. '2' → logprob: -8.464795112609863
    5. 'x' → logprob: -8.839795112609863
    6. ' x' → logprob: -9.964795112609863
    7. '(' → logprob: -12.339795112609863
    8. '3' → logprob: -12.839795112609863
    9. '-' → logprob: -12.839795112609863
    10. '  ' → logprob: -12.964795112609863

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2847496271133423
    2. '0' → logprob: -1.4097496271133423
    3. '2' → logprob: -5.784749507904053
    4. 'x' → logprob: -8.159749984741211
    5. ' ' → logprob: -9.159749984741211
    6. '10' → logprob: -10.784749984741211
    7. '3' → logprob: -10.909749984741211
    8. '(' → logprob: -11.159749984741211
    9. '100' → logprob: -11.159749984741211
    10. '-' → logprob: -11.284749984741211

Token 27: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.028163194656372
    2. '+' → logprob: -1.278163194656372
    3. '
' → logprob: -1.653163194656372
    4. '<|end|>' → logprob: -2.778163194656372
    5. ' while' → logprob: -3.653163194656372
    6. '0' → logprob: -3.653163194656372
    7. ',' → logprob: -4.028162956237793
    8. 'while' → logprob: -4.528162956237793
    9. ' ,' → logprob: -5.278162956237793
    10. ' 
' → logprob: -5.278162956237793

Token 28: 'found' (ID: 26334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.202884316444397
    2. ' while' → logprob: -1.327884316444397
    3. '+' → logprob: -1.452884316444397
    4. ',' → logprob: -2.5778841972351074
    5. ' ' → logprob: -2.5778841972351074
    6. '**' → logprob: -4.952884197235107
    7. ' +' → logprob: -5.077884197235107
    8. ' ,' → logprob: -5.202884197235107
    9. '.' → logprob: -5.577884197235107
    10. '0' → logprob: -5.702884197235107

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1461341232061386
    2. '=' → logprob: -2.1461341381073
    3. '_' → logprob: -4.271133899688721
    4. ' ' → logprob: -6.021133899688721
    5. ',' → logprob: -7.021133899688721
    6. '_numbers' → logprob: -7.771133899688721
    7. '_values' → logprob: -8.396134376525879
    8. '_tokens' → logprob: -8.521134376525879
    9. '_nums' → logprob: -9.021134376525879
    10. 's' → logprob: -9.396134376525879

Token 30: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.0751100704073906
    2. 'False' → logprob: -3.2001099586486816
    3. ' ' → logprob: -3.8251099586486816
    4. ' []' → logprob: -5.075109958648682
    5. ' set' → logprob: -6.200109958648682
    6. ' True' → logprob: -6.700109958648682
    7. '0' → logprob: -9.07511043548584
    8. '[]' → logprob: -9.70011043548584
    9. 'set' → logprob: -10.20011043548584
    10. ' {}' → logprob: -10.57511043548584

Token 31: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22787049412727356
    2. '
' → logprob: -1.9778704643249512
    3. ' while' → logprob: -3.852870464324951
    4. ' ' → logprob: -4.227870464324951
    5. 'while' → logprob: -4.727870464324951
    6. '<|end|>' → logprob: -5.102870464324951
    7. ' 
' → logprob: -5.477870464324951
    8. ',' → logprob: -5.727870464324951
    9. ':
' → logprob: -5.852870464324951
    10. '' → logprob: -7.227870464324951

Token 32: 'while' (ID: 7032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11131803691387177
    2. '
' → logprob: -2.7363181114196777
    3. ' while' → logprob: -4.236318111419678
    4. ' ' → logprob: -4.986318111419678
    5. 'while' → logprob: -5.236318111419678
    6. ' 
' → logprob: -5.361318111419678
    7. ':
' → logprob: -5.611318111419678
    8. ',' → logprob: -7.111318111419678
    9. '```' → logprob: -7.111318111419678
    10. '\n' → logprob: -7.486318111419678

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1559167504310608
    2. ' not' → logprob: -2.280916690826416
    3. ' True' → logprob: -3.405916690826416
    4. 'i' → logprob: -5.905916690826416
    5. ' x' → logprob: -5.905916690826416
    6. ' ' → logprob: -6.905916690826416
    7. ' found' → logprob: -7.030916690826416
    8. 'True' → logprob: -7.280916690826416
    9. 'not' → logprob: -7.780916690826416
    10. ' (' → logprob: -8.280917167663574

Token 34: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4675523042678833
    2. ' *' → logprob: -1.3425523042678833
    3. '*' → logprob: -2.8425521850585938
    4. '<=' → logprob: -3.0925521850585938
    5. '**' → logprob: -5.592552185058594
    6. '*i' → logprob: -5.967552185058594
    7. ' **' → logprob: -6.717552185058594
    8. ' <' → logprob: -7.592552185058594
    9. ' ' → logprob: -7.842552185058594
    10. '<' → logprob: -8.842552185058594

Token 35: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07751849293708801
    2. 'x' → logprob: -2.9525184631347656
    3. ' x' → logprob: -4.827518463134766
    4. '100' → logprob: -4.827518463134766
    5. '10' → logprob: -5.452518463134766
    6. ' ' → logprob: -6.827518463134766
    7. '=x' → logprob: -8.577518463134766
    8. ' =' → logprob: -8.952518463134766
    9. '20' → logprob: -9.202518463134766
    10. '1' → logprob: -9.577518463134766

Token 36: '100' (ID: 1353)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3093613088130951
    2. 'x' → logprob: -1.4343613386154175
    3. '100' → logprob: -3.934361219406128
    4. '10' → logprob: -5.059361457824707
    5. '=x' → logprob: -8.184361457824707
    6. '=(' → logprob: -8.434361457824707
    7. '1' → logprob: -8.809361457824707
    8. '999' → logprob: -9.059361457824707
    9. '200' → logprob: -9.059361457824707
    10. '500' → logprob: -9.184361457824707

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6751057505607605
    2. ':' → logprob: -0.8001057505607605
    3. '00' → logprob: -3.6751058101654053
    4. '000' → logprob: -4.175105571746826
    5. ':
' → logprob: -7.425105571746826
    6. '**' → logprob: -9.050106048583984
    7. '1' → logprob: -9.425106048583984
    8. '_' → logprob: -9.925106048583984
    9. '():' → logprob: -11.800106048583984
    10. '_:' → logprob: -11.800106048583984

Token 38: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005647073267027736
    2. ' :' → logprob: -7.7505645751953125
    3. ':
' → logprob: -9.375564575195312
    4. ' and' → logprob: -10.625564575195312
    5. '0' → logprob: -11.875564575195312
    6. ':**' → logprob: -11.875564575195312
    7. '6' → logprob: -13.625564575195312
    8. '**' → logprob: -13.625564575195312
    9. '):' → logprob: -13.750564575195312
    10. '():' → logprob: -13.750564575195312

Token 39: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023330383002758026
    2. 'not' → logprob: -3.7733304500579834
    3. '(not' → logprob: -10.648330688476562
    4. ' i' → logprob: -11.023330688476562
    5. ' x' → logprob: -11.273330688476562
    6. ' found' → logprob: -11.773330688476562
    7. 'x' → logprob: -12.023330688476562
    8. 'i' → logprob: -12.023330688476562
    9. '	not' → logprob: -12.773330688476562
    10. ' (' → logprob: -12.898330688476562

Token 40: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.00861669983714819
    2. 'found' → logprob: -4.758616924285889
    3. '	found' → logprob: -13.75861644744873
    4. '(found' → logprob: -14.88361644744873
    5. '_found' → logprob: -15.13361644744873
    6. ' ' → logprob: -15.38361644744873
    7. 'Found' → logprob: -15.75861644744873
    8. ' Found' → logprob: -17.258617401123047
    9. ' ' → logprob: -17.383617401123047
    10. ' x' → logprob: -20.008617401123047

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016432604752480984
    2. ':
' → logprob: -9.250164031982422
    3. ' :' → logprob: -9.625164031982422
    4. ':**' → logprob: -14.375164031982422
    5. '):' → logprob: -14.750164031982422
    6. '：' → logprob: -15.500164031982422
    7. '():' → logprob: -15.625164031982422
    8. '+:' → logprob: -15.875164031982422
    9. ' :
' → logprob: -16.125164031982422
    10. ':

' → logprob: -16.125164031982422

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5333577990531921
    2. ':' → logprob: -0.9083577990531921
    3. ' :' → logprob: -5.283357620239258
    4. ':
' → logprob: -5.658357620239258
    5. ' ' → logprob: -7.283357620239258
    6. ' :
' → logprob: -7.908357620239258
    7. '  ' → logprob: -9.158357620239258
    8. '    
' → logprob: -9.158357620239258
    9. '    ' → logprob: -9.658357620239258
    10. '<|end|>' → logprob: -9.908357620239258

Token 43: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.194290280342102
    2. ' ' → logprob: -1.694290280342102
    3. '    ' → logprob: -1.944290280342102
    4. ':' → logprob: -1.944290280342102
    5. ' i' → logprob: -2.3192901611328125
    6. ' :' → logprob: -3.0692901611328125
    7. ' :
' → logprob: -3.6942901611328125
    8. ' for' → logprob: -4.0692901611328125
    9. ':
' → logprob: -4.6942901611328125
    10. ' =' → logprob: -5.3192901611328125

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07895137369632721
    2. '=' → logprob: -2.578951358795166
    3. '<|end|>' → logprob: -10.453951835632324
    4. ' ' → logprob: -10.578951835632324
    5. '<|end|>' → logprob: -13.328951835632324
    6. ')' → logprob: -14.203951835632324
    7. ' +=' → logprob: -14.328951835632324
    8. 's' → logprob: -14.453951835632324
    9. '=int' → logprob: -14.453951835632324
    10. ' =
' → logprob: -14.578951835632324

Token 45: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11204130202531815
    2. ' ' → logprob: -2.4870412349700928
    3. '0' → logprob: -3.9870412349700928
    4. ' i' → logprob: -6.237041473388672
    5. 'i' → logprob: -6.362041473388672
    6. '2' → logprob: -7.612041473388672
    7. '   ' → logprob: -10.737041473388672
    8. '100' → logprob: -11.299541473388672
    9. '10' → logprob: -11.424541473388672
    10. 'j' → logprob: -11.799541473388672

Token 46: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.601074755191803
    2. '1' → logprob: -1.3510746955871582
    3. '500' → logprob: -2.851074695587158
    4. '999' → logprob: -3.226074695587158
    5. 'i' → logprob: -3.976074695587158
    6. '10' → logprob: -3.976074695587158
    7. '50' → logprob: -4.101074695587158
    8. '(' → logprob: -4.226074695587158
    9. '99' → logprob: -5.351074695587158
    10. '200' → logprob: -5.976074695587158

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001208211062476039
    2. '000' → logprob: -7.251208305358887
    3. '100' → logprob: -8.126208305358887
    4. ' ' → logprob: -9.751208305358887
    5. 'j' → logprob: -10.126208305358887
    6. '<|end|>' → logprob: -10.501208305358887
    7. '1' → logprob: -10.626208305358887
    8. '00' → logprob: -11.126208305358887
    9. '   ' → logprob: -11.376208305358887
    10. '```' → logprob: -12.251208305358887

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07892228662967682
    2. 'j' → logprob: -2.5789222717285156
    3. ' not' → logprob: -11.828922271728516
    4. '<|end|>' → logprob: -11.828922271728516
    5. ' ' → logprob: -12.578922271728516
    6. '   ' → logprob: -13.203922271728516
    7. 'not' → logprob: -13.203922271728516
    8. '$j' → logprob: -13.328922271728516
    9. '	j' → logprob: -13.453922271728516
    10. '    ' → logprob: -13.578922271728516

Token 52: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.42863208055496216
    2. '<=' → logprob: -1.8036320209503174
    3. ' <' → logprob: -2.1786320209503174
    4. '<' → logprob: -2.6786320209503174
    5. '<|end|>' → logprob: -6.9286322593688965
    6. ' ' → logprob: -7.3036322593688965
    7. 'le' → logprob: -10.053631782531738
    8. '<|end|>' → logprob: -10.366131782531738
    9. '1' → logprob: -10.491131782531738
    10. '```' → logprob: -10.803631782531738

Token 53: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02162427082657814
    2. ' ' → logprob: -3.8966243267059326
    3. '=' → logprob: -7.1466240882873535
    4. 'i' → logprob: -9.396624565124512
    5. 'x' → logprob: -10.084124565124512
    6. 'j' → logprob: -10.396624565124512
    7. '0' → logprob: -10.709124565124512
    8. '200' → logprob: -10.959124565124512
    9. '1' → logprob: -11.271624565124512
    10. '10' → logprob: -11.334124565124512

Token 54: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0004873955331277102
    2. ' ' → logprob: -8.250487327575684
    3. 'j' → logprob: -9.625487327575684
    4. 'i' → logprob: -9.875487327575684
    5. '200' → logprob: -10.375487327575684
    6. 'x' → logprob: -11.125487327575684
    7. '0' → logprob: -11.562987327575684
    8. '=' → logprob: -11.875487327575684
    9. '101' → logprob: -12.062987327575684
    10. '1' → logprob: -12.250487327575684

Token 55: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38701197504997253
    2. '0' → logprob: -1.137012004852295
    3. '00' → logprob: -10.012011528015137
    4. ' ' → logprob: -10.762011528015137
    5. '000' → logprob: -11.012011528015137
    6. '100' → logprob: -11.199511528015137
    7. '2' → logprob: -11.387011528015137
    8. '01' → logprob: -11.762011528015137
    9. '001' → logprob: -12.012011528015137
    10. '```' → logprob: -12.137011528015137

Token 56: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02035512961447239
    2. ':
' → logprob: -4.145355224609375
    3. ' and' → logprob: -5.645355224609375
    4. '   ' → logprob: -7.895355224609375
    5. 'and' → logprob: -8.770355224609375
    6. ' :' → logprob: -9.270355224609375
    7. '<|end|>' → logprob: -10.145355224609375
    8. ':

' → logprob: -10.270355224609375
    9. ' :
' → logprob: -10.395355224609375
    10. '):' → logprob: -11.520355224609375

Token 57: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00800713524222374
    2. 'not' → logprob: -4.883007049560547
    3. ' and' → logprob: -7.883007049560547
    4. 'and' → logprob: -11.508007049560547
    5. ' ' → logprob: -12.133007049560547
    6. '   ' → logprob: -12.508007049560547
    7. ' j' → logprob: -13.758007049560547
    8. '	not' → logprob: -13.883007049560547
    9. ' !' → logprob: -14.508007049560547
    10. ' ' → logprob: -15.008007049560547

Token 58: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.08897403627634048
    2. 'found' → logprob: -2.4639739990234375
    3. '	found' → logprob: -10.838973999023438
    4. '   ' → logprob: -11.588973999023438
    5. '(found' → logprob: -12.963973999023438
    6. '_found' → logprob: -13.588973999023438
    7. 'Found' → logprob: -14.463973999023438
    8. ' ' → logprob: -14.463973999023438
    9. ' ' → logprob: -15.213973999023438
    10. '    ' → logprob: -15.963973999023438

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024962294846773148
    2. ':
' → logprob: -6.002496242523193
    3. ':

' → logprob: -11.627495765686035
    4. '   ' → logprob: -12.377495765686035
    5. '):' → logprob: -13.377495765686035
    6. ' and' → logprob: -13.627495765686035
    7. ' :' → logprob: -14.252495765686035
    8. ':
' → logprob: -14.377495765686035
    9. '```' → logprob: -14.627495765686035
    10. '):
' → logprob: -14.752495765686035

Token 60: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038310715463012457
    2. '       ' → logprob: -5.878830909729004
    3. ':
' → logprob: -7.878830909729004
    4. '<|end|>' → logprob: -8.378830909729004
    5. '   ' → logprob: -8.503830909729004
    6. '):' → logprob: -9.003830909729004
    7. ',' → logprob: -10.628830909729004
    8. '<|end|>' → logprob: -11.378830909729004
    9. ' :' → logprob: -11.753830909729004
    10. ':

' → logprob: -11.878830909729004

Token 61: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8435829877853394
    2. '       ' → logprob: -1.5935829877853394
    3. '           ' → logprob: -1.7185829877853394
    4. ':
' → logprob: -2.093583106994629
    5. ' :' → logprob: -4.093583106994629
    6. ' if' → logprob: -4.218583106994629
    7. '   ' → logprob: -4.593583106994629
    8. '<|end|>' → logprob: -5.093583106994629
    9. ' ' → logprob: -5.593583106994629
    10. ' :
' → logprob: -5.968583106994629

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20467372238636017
    2. ' x' → logprob: -2.3296737670898438
    3. 'i' → logprob: -3.4546737670898438
    4. ' (' → logprob: -3.5796737670898438
    5. 'x' → logprob: -4.579673767089844
    6. ' abs' → logprob: -4.579673767089844
    7. ' ' → logprob: -5.954673767089844
    8. 'abs' → logprob: -6.829673767089844
    9. ' Decimal' → logprob: -6.829673767089844
    10. '(i' → logprob: -7.204673767089844

Token 63: '**' (ID: 410)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8097680807113647
    2. '*' → logprob: -1.3097680807113647
    3. '**' → logprob: -1.5597680807113647
    4. ' +' → logprob: -3.5597681999206543
    5. '*i' → logprob: -4.184768199920654
    6. ' **' → logprob: -4.434768199920654
    7. '*j' → logprob: -4.684768199920654
    8. '+' → logprob: -4.809768199920654
    9. ' ==' → logprob: -7.059768199920654
    10. ' ' → logprob: -8.059767723083496

Token 64: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5692116618156433
    2. '3' → logprob: -0.9442116618156433
    3. '5' → logprob: -3.819211721420288
    4. '4' → logprob: -3.944211721420288
    5. '6' → logprob: -6.444211483001709
    6. '7' → logprob: -6.819211483001709
    7. '**' → logprob: -8.069211959838867
    8. ' ' → logprob: -8.069211959838867
    9. '```' → logprob: -9.069211959838867
    10. '8' → logprob: -9.819211959838867

Token 65: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11164817214012146
    2. '+' → logprob: -2.3616480827331543
    3. '<|end|>' → logprob: -4.861648082733154
    4. ' -' → logprob: -5.736648082733154
    5. '-' → logprob: -8.361648559570312
    6. ' ==' → logprob: -9.986648559570312
    7. '<|end|>' → logprob: -10.236648559570312
    8. ' ' → logprob: -10.486648559570312
    9. ' plus' → logprob: -10.736648559570312
    10. ' >' → logprob: -11.236648559570312

Token 66: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07897350937128067
    2. ' j' → logprob: -2.5789735317230225
    3. ' ' → logprob: -9.578973770141602
    4. '3' → logprob: -13.078973770141602
    5. '	j' → logprob: -13.328973770141602
    6. '<|end|>' → logprob: -13.328973770141602
    7. '5' → logprob: -13.578973770141602
    8. '  ' → logprob: -13.953973770141602
    9. '7' → logprob: -13.953973770141602
    10. '10' → logprob: -13.953973770141602

Token 67: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0012667786795645952
    2. '<|end|>' → logprob: -7.251266956329346
    3. '5' → logprob: -7.876266956329346
    4. ' **' → logprob: -8.876266479492188
    5. '*' → logprob: -11.001266479492188
    6. ' ' → logprob: -11.751266479492188
    7. ')' → logprob: -12.751266479492188
    8. '<|end|>' → logprob: -12.876266479492188
    9. '```' → logprob: -13.501266479492188
    10. ')**' → logprob: -13.626266479492188

Token 68: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.500017166137695
    3. '```' → logprob: -12.750017166137695
    4. '3' → logprob: -13.750017166137695
    5. '<|end|>' → logprob: -15.062517166137695
    6. '<|end|>' → logprob: -15.125017166137695
    7. '   ' → logprob: -15.250017166137695
    8. '=' → logprob: -15.500017166137695
    9. '**' → logprob: -15.687517166137695
    10. '  ' → logprob: -15.750017166137695

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10275653004646301
    2. '==' → logprob: -2.3527565002441406
    3. '<|end|>' → logprob: -6.227756500244141
    4. '=' → logprob: -7.977756500244141
    5. ' =' → logprob: -9.60275650024414
    6. '<|end|>' → logprob: -9.72775650024414
    7. ')' → logprob: -10.35275650024414
    8. ')==' → logprob: -10.72775650024414
    9. ' ' → logprob: -11.10275650024414
    10. ']==' → logprob: -11.10275650024414

Token 70: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06995344161987305
    2. ' x' → logprob: -2.694953441619873
    3. '<|end|>' → logprob: -12.194953918457031
    4. ' ' → logprob: -12.569953918457031
    5. '	x' → logprob: -12.694953918457031
    6. ')x' → logprob: -13.319953918457031
    7. '%x' → logprob: -14.319953918457031
    8. '>x' → logprob: -14.444953918457031
    9. '"x' → logprob: -14.944953918457031
    10. '   ' → logprob: -14.944953918457031

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023739055905025452
    2. ' :' → logprob: -9.000237464904785
    3. ':
' → logprob: -9.125237464904785
    4. ':return' → logprob: -13.500237464904785
    5. '<|end|>' → logprob: -13.750237464904785
    6. ':

' → logprob: -14.000237464904785
    7. '):' → logprob: -14.000237464904785
    8. '>:' → logprob: -15.250237464904785
    9. ':**' → logprob: -15.875237464904785
    10. ' :
' → logprob: -16.12523651123047

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19093288481235504
    2. ':' → logprob: -2.0659329891204834
    3. ':
' → logprob: -3.6909329891204834
    4. '       ' → logprob: -4.690932750701904
    5. ' found' → logprob: -6.065932750701904
    6. 'print' → logprob: -6.065932750701904
    7. '
' → logprob: -6.440932750701904
    8. ' :' → logprob: -6.565932750701904
    9. ' print' → logprob: -7.065932750701904
    10. ' ' → logprob: -7.190932750701904

Token 73: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3983915150165558
    2. 'print' (adapté à ' print') → logprob: -1.1483914852142334
    3. '           ' → logprob: -5.0233917236328125
    4. ' found' → logprob: -5.5233917236328125
    5. '   ' → logprob: -7.7733917236328125
    6. '       ' → logprob: -8.523391723632812
    7. 'found' → logprob: -8.648391723632812
    8. '    ' → logprob: -10.773391723632812
    9. '	print' → logprob: -10.773391723632812
    10. ' ' → logprob: -10.773391723632812

Token 74: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.016332292929291725
    2. '(' → logprob: -4.266332149505615
    3. '(f' → logprob: -6.141332149505615
    4. 'i' → logprob: -11.391332626342773
    5. 'f' → logprob: -13.766332626342773
    6. '((' → logprob: -14.391332626342773
    7. ' (' → logprob: -14.641332626342773
    8. ' i' → logprob: -15.016332626342773
    9. '(
' → logprob: -15.266332626342773
    10. '(x' → logprob: -16.016332626342773

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03919210657477379
    2. ',j' → logprob: -3.5391921997070312
    3. ' ,' → logprob: -4.914192199707031
    4. 'j' → logprob: -6.289192199707031
    5. ' j' → logprob: -8.664192199707031
    6. '           ' → logprob: -11.789192199707031
    7. ',end' → logprob: -12.414192199707031
    8. ')' → logprob: -12.414192199707031
    9. ',
' → logprob: -12.539192199707031
    10. ' ' → logprob: -14.414192199707031

Token 76: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0036089823115617037
    2. ' j' → logprob: -5.6286091804504395
    3. ' ' → logprob: -12.753608703613281
    4. '    ' → logprob: -12.753608703613281
    5. '   ' → logprob: -13.003608703613281
    6. '     ' → logprob: -15.253608703613281
    7. '  ' → logprob: -15.253608703613281
    8. '	j' → logprob: -15.878608703613281
    9. '       ' → logprob: -16.12860870361328
    10. ',j' → logprob: -16.12860870361328

Token 77: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869331479072571
    2. ')' → logprob: -1.1369330883026123
    3. ')
' → logprob: -9.886933326721191
    4. ')`
' → logprob: -12.261933326721191
    5. ')

' → logprob: -12.761933326721191
    6. ')')
' → logprob: -14.011933326721191
    7. ' )
' → logprob: -14.636933326721191
    8. ')")
' → logprob: -14.886933326721191
    9. ')`' → logprob: -14.886933326721191
    10. ')return' → logprob: -15.386933326721191

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001090331468731165
    2. '            
' → logprob: -7.2510905265808105
    3. '            ' → logprob: -8.626090049743652
    4. '          ' → logprob: -10.001090049743652
    5. '
' → logprob: -10.626090049743652
    6. '               ' → logprob: -10.876090049743652
    7. '       ' → logprob: -11.001090049743652
    8. ' ' → logprob: -11.251090049743652
    9. 'found' → logprob: -11.501090049743652
    10. '```' → logprob: -11.501090049743652

Token 79: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.00489500816911459
    2. ' found' → logprob: -5.379895210266113
    3. '           ' → logprob: -8.379895210266113
    4. '
' → logprob: -10.504895210266113
    5. '   ' → logprob: -11.879895210266113
    6. '	found' → logprob: -12.254895210266113
    7. '(found' → logprob: -13.504895210266113
    8. 'Found' → logprob: -13.629895210266113
    9. '            
' → logprob: -13.629895210266113
    10. '```' → logprob: -13.879895210266113

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251935213804245
    2. '=' → logprob: -1.5019352436065674
    3. '=True' → logprob: -12.126935005187988
    4. ' ' → logprob: -14.376935005187988
    5. 's' → logprob: -17.126935958862305
    6. 'True' → logprob: -17.376935958862305
    7. '=False' → logprob: -17.376935958862305
    8. ' True' → logprob: -17.626935958862305
    9. ' =
' → logprob: -17.876935958862305
    10. '<|end|>' → logprob: -17.876935958862305

Token 81: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. '=True' → logprob: -17.22520637512207
    4. '(True' → logprob: -19.60020637512207
    5. ' ' → logprob: -21.10020637512207
    6. ' Tru' → logprob: -21.60020637512207
    7. '.True' → logprob: -21.97520637512207
    8. '_true' → logprob: -22.10020637512207
    9. 'Tr' → logprob: -22.47520637512207
    10. 'true' → logprob: -22.97520637512207

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027254095766693354
    2. '<|end|>' → logprob: -9.125272750854492
    3. '
' → logprob: -9.875272750854492
    4. '        
' → logprob: -10.250272750854492
    5. '	' → logprob: -10.875272750854492
    6. 'j' → logprob: -11.000272750854492
    7. '<|end|>' → logprob: -11.375272750854492
    8. '```' → logprob: -11.875272750854492
    9. '           ' → logprob: -12.500272750854492
    10. '   ' → logprob: -12.625272750854492

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009345670696347952
    2. '	' → logprob: -7.750934600830078
    3. '           ' → logprob: -8.500934600830078
    4. 'j' → logprob: -9.000934600830078
    5. 'else' → logprob: -10.500934600830078
    6. '        
' → logprob: -10.500934600830078
    7. '```' → logprob: -10.625934600830078
    8. '<|end|>' → logprob: -11.250934600830078
    9. '
' → logprob: -11.375934600830078
    10. '   ' → logprob: -11.375934600830078

Token 84: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005340131931006908
    2. 'j' → logprob: -5.255340099334717
    3. '           ' → logprob: -9.630340576171875
    4. '   ' → logprob: -10.505340576171875
    5. ' j' → logprob: -12.005340576171875
    6. '```' → logprob: -13.255340576171875
    7. 'break' → logprob: -13.505340576171875
    8. 'else' → logprob: -13.880340576171875
    9. '	' → logprob: -14.505340576171875
    10. '        
' → logprob: -14.630340576171875

Token 85: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0016010295366868377
    2. '.' → logprob: -6.751601219177246
    3. '.ex' → logprob: -7.876601219177246
    4. '.stdout' → logprob: -10.251601219177246
    5. '.stderr' → logprob: -12.751601219177246
    6. '.quit' → logprob: -13.126601219177246
    7. '	exit' → logprob: -13.376601219177246
    8. ' .' → logprob: -13.501601219177246
    9. '.setdefault' → logprob: -13.501601219177246
    10. '.break' → logprob: -13.626601219177246

Token 86: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0046706609427928925
    2. '(' → logprob: -5.3796706199646
    3. '()`' → logprob: -10.879671096801758
    4. '()
' → logprob: -11.004671096801758
    5. '()

' → logprob: -12.004671096801758
    6. ' ()' → logprob: -12.879671096801758
    7. '`()' → logprob: -13.629671096801758
    8. '().' → logprob: -14.004671096801758
    9. '()\' → logprob: -14.254671096801758
    10. '```' → logprob: -14.504671096801758

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693272531032562
    2. ')' → logprob: -2.1269326210021973
    3. ' ' → logprob: -13.501933097839355
    4. '()' → logprob: -14.001933097839355
    5. '))' → logprob: -14.251933097839355
    6. ' )' → logprob: -14.376933097839355
    7. '(' → logprob: -14.376933097839355
    8. ')
' → logprob: -15.126933097839355
    9. '1' → logprob: -15.751933097839355
    10. '   ' → logprob: -16.25193214416504

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005647073267027736
    2. ')
' → logprob: -7.5005645751953125
    3. '       ' → logprob: -11.750564575195312
    4. '   ' → logprob: -13.750564575195312
    5. ' )' → logprob: -13.750564575195312
    6. '))' → logprob: -14.500564575195312
    7. ')

' → logprob: -14.625564575195312
    8. '`)' → logprob: -15.625564575195312
    9. ')`' → logprob: -16.250564575195312
    10. '
' → logprob: -16.500564575195312

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023917861108202487
    2. 'j' → logprob: -9.000239372253418
    3. '	' → logprob: -9.875239372253418
    4. '        
' → logprob: -10.750239372253418
    5. '<|end|>' → logprob: -10.875239372253418
    6. '   ' → logprob: -12.250239372253418
    7. '<|end|>' → logprob: -12.500239372253418
    8. '	j' → logprob: -12.500239372253418
    9. '```' → logprob: -12.750239372253418
    10. ' j' → logprob: -13.875239372253418

Token 90: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007535241893492639
    2. 'j' (adapté à ' j') → logprob: -7.250753402709961
    3. '	' → logprob: -11.125753402709961
    4. '   ' → logprob: -11.250753402709961
    5. ' j' → logprob: -12.750753402709961
    6. '           ' → logprob: -12.875753402709961
    7. '	j' → logprob: -12.875753402709961
    8. '	   ' → logprob: -12.875753402709961
    9. '++' → logprob: -13.000753402709961
    10. '        
' → logprob: -14.125753402709961

Token 91: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01260313019156456
    2. ' +=' → logprob: -4.512603282928467
    3. '+' → logprob: -6.512603282928467
    4. '++' → logprob: -9.762602806091309
    5. ']+=' → logprob: -12.387602806091309
    6. '=' → logprob: -12.887602806091309
    7. '+='' → logprob: -13.762602806091309
    8. '<|end|>' → logprob: -13.762602806091309
    9. ' ' → logprob: -14.262602806091309
    10. '+="' → logprob: -14.387602806091309

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -17.125001907348633
    4. '```' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '<|end|>' → logprob: -20.125001907348633
    7. '１' → logprob: -20.250001907348633
    8. '۱' → logprob: -20.500001907348633
    9. '+' → logprob: -20.750001907348633
    10. '  ' → logprob: -20.875001907348633

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -17.750001907348633
    4. '```' → logprob: -18.375001907348633
    5. '１' → logprob: -19.625001907348633
    6. '۱' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.812501907348633
    8. '  ' → logprob: -20.187501907348633
    9. '+' → logprob: -20.375001907348633
    10. '<|end|>' → logprob: -20.375001907348633

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005745976231992245
    2. 'i' → logprob: -7.750574588775635
    3. '<|end|>' → logprob: -9.750575065612793
    4. ' i' → logprob: -10.375575065612793
    5. '	i' → logprob: -11.250575065612793
    6. '<|end|>' → logprob: -11.375575065612793
    7. '
' → logprob: -11.625575065612793
    8. '    
' → logprob: -11.875575065612793
    9. '  ' → logprob: -12.625575065612793
    10. '```' → logprob: -13.000575065612793

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004377022560220212
    2. 'i' → logprob: -7.8754377365112305
    3. '<|end|>' → logprob: -10.87543773651123
    4. ' i' → logprob: -11.37543773651123
    5. '```' → logprob: -11.62543773651123
    6. '<|end|>' → logprob: -12.00043773651123
    7. '	i' → logprob: -12.37543773651123
    8. '    
' → logprob: -13.25043773651123
    9. '  ' → logprob: -13.50043773651123
    10. ' ' → logprob: -13.62543773651123

Token 96: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3883051574230194
    2. 'i' (adapté à ' i') → logprob: -1.1383051872253418
    3. ' i' → logprob: -6.763305187225342
    4. ' ' → logprob: -8.888304710388184
    5. '  ' → logprob: -9.888304710388184
    6. '<|end|>' → logprob: -10.013304710388184
    7. '	i' → logprob: -10.763304710388184
    8. '    
' → logprob: -12.138304710388184
    9. '<|end|>' → logprob: -12.138304710388184
    10. '1' → logprob: -12.763304710388184

Token 97: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.013215411454439163
    2. ' +=' → logprob: -4.5132155418396
    3. '+' → logprob: -6.1382155418396
    4. '=' → logprob: -13.138215065002441
    5. ']+=' → logprob: -13.763215065002441
    6. '+='' → logprob: -13.763215065002441
    7. '+="' → logprob: -14.013215065002441
    8. '++' → logprob: -14.263215065002441
    9. ' ' → logprob: -14.638215065002441
    10. '<|end|>' → logprob: -16.013216018676758

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -17.25037956237793
    4. '   ' → logprob: -17.37537956237793
    5. '  ' → logprob: -18.25037956237793
    6. '+' → logprob: -18.93787956237793
    7. '    ' → logprob: -19.18787956237793
    8. '2' → logprob: -19.43787956237793
    9. '<|end|>' → logprob: -19.43787956237793
    10. ' ' → logprob: -19.81287956237793

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '' → logprob: -19.437501907348633
    6. '+' → logprob: -19.562501907348633
    7. '<|end|>' → logprob: -19.937501907348633
    8. '  ' → logprob: -20.000001907348633
    9. '१' → logprob: -20.187501907348633
    10. '.' → logprob: -20.312501907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 38.14%
Précision adaptée (1ère position): 39.18%
Précision (top 10): 83.51%
================================================================================
