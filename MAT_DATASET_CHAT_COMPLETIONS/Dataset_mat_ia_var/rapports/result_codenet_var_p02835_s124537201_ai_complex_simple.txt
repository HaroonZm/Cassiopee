================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

A = list(map(int, map(str, input().split())))
judge = (lambda x: (lambda y: ["win", "bust"][y])(int(x >= 22)))
print(judge(reduce(add, A, 0)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03677820786833763
    2. '(
' → logprob: -4.161777973175049
    3. '#' → logprob: -5.161777973175049
    4. ',' → logprob: -5.411777973175049
    5. '\' → logprob: -5.536777973175049
    6. 'def' → logprob: -6.161777973175049
    7. 'print' → logprob: -7.411777973175049
    8. 'result' → logprob: -7.536777973175049
    9. '\n' → logprob: -7.536777973175049
    10. '(

' → logprob: -8.036778450012207

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11845871806144714
    2. '=' → logprob: -3.1184587478637695
    3. '_' → logprob: -3.7434587478637695
    4. '[' → logprob: -4.1184587478637695
    5. ' ' → logprob: -4.7434587478637695
    6. 'dd' → logprob: -5.3684587478637695
    7. ',' → logprob: -5.6184587478637695
    8. '.' → logprob: -5.9934587478637695
    9. 'rray' → logprob: -6.1184587478637695
    10. '[:]' → logprob: -7.2434587478637695

Token 12: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2821269929409027
    2. ' [' → logprob: -1.407127022743225
    3. '[]' → logprob: -7.2821269035339355
    4. ' []' → logprob: -8.657127380371094
    5. 'range' → logprob: -11.032127380371094
    6. ' ' → logprob: -11.157127380371094
    7. '[int' → logprob: -11.157127380371094
    8. '['' → logprob: -11.282127380371094
    9. 'list' → logprob: -11.657127380371094
    10. ' range' → logprob: -12.157127380371094

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001111520454287529
    2. '(range' → logprob: -7.0011115074157715
    3. '[' → logprob: -9.37611198425293
    4. ' (' → logprob: -11.12611198425293
    5. '(
' → logprob: -11.12611198425293
    6. '<|end|>' → logprob: -11.37611198425293
    7. '([' → logprob: -11.62611198425293
    8. '(filter' → logprob: -11.75111198425293
    9. 's' → logprob: -12.37611198425293
    10. ')' → logprob: -12.50111198425293

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1439019739627838
    2. '(lambda' → logprob: -2.018902063369751
    3. '(int' → logprob: -7.518901824951172
    4. '(str' → logprob: -8.518901824951172
    5. '<|end|>' → logprob: -8.893901824951172
    6. '(range' → logprob: -9.768901824951172
    7. ' (' → logprob: -9.893901824951172
    8. 'lambda' → logprob: -10.143901824951172
    9. '(add' → logprob: -10.768901824951172
    10. '(s' → logprob: -10.768901824951172

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008602989837527275
    2. '))' → logprob: -6.133603096008301
    3. '(input' → logprob: -6.133603096008301
    4. ',' → logprob: -6.883603096008301
    5. ')' → logprob: -7.133603096008301
    6. '(data' → logprob: -8.2586030960083
    7. '('' → logprob: -8.3836030960083
    8. '(A' → logprob: -8.3836030960083
    9. '(token' → logprob: -8.6336030960083
    10. '()))' → logprob: -8.6336030960083

Token 16: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.192825049161911
    2. ' input' → logprob: -1.8178250789642334
    3. ''' → logprob: -5.067824840545654
    4. '"' → logprob: -6.067824840545654
    5. '(input' → logprob: -6.192824840545654
    6. ' '' → logprob: -7.942824840545654
    7. '[' → logprob: -8.067825317382812
    8. '['' → logprob: -8.067825317382812
    9. 'range' → logprob: -8.567825317382812
    10. ',input' → logprob: -8.817825317382812

Token 17: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.4404877722263336
    2. '(' → logprob: -1.1904877424240112
    3. '(input' → logprob: -3.190487861633301
    4. '(lambda' → logprob: -5.565487861633301
    5. '(int' → logprob: -7.065487861633301
    6. '(eval' → logprob: -7.065487861633301
    7. 'str' → logprob: -7.190487861633301
    8. '('' → logprob: -7.190487861633301
    9. '(list' → logprob: -7.565487861633301
    10. '(ord' → logprob: -7.690487861633301

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019032111391425133
    2. ',A' → logprob: -5.019032001495361
    3. ',input' → logprob: -5.644032001495361
    4. '.strip' → logprob: -5.894032001495361
    5. ',[' → logprob: -7.019032001495361
    6. ',list' → logprob: -7.269032001495361
    7. ')))' → logprob: -7.394032001495361
    8. ',float' → logprob: -7.519032001495361
    9. ',int' → logprob: -7.644032001495361
    10. ',str' → logprob: -8.01903247833252

Token 19: ' input' (ID: 3422)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.27968043088912964
    2. ' range' → logprob: -1.9046804904937744
    3. '[' → logprob: -2.5296804904937744
    4. ' [' → logprob: -4.904680252075195
    5. 'A' → logprob: -5.529680252075195
    6. ' A' → logprob: -6.154680252075195
    7. '['' → logprob: -7.404680252075195
    8. '[A' → logprob: -8.154680252075195
    9. '(' → logprob: -8.279680252075195
    10. '(range' → logprob: -9.029680252075195

Token 20: '().' (ID: 1454)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.49320417642593384
    2. '())' → logprob: -1.868204116821289
    3. '()))' → logprob: -2.493204116821289
    4. '().' → logprob: -2.493204116821289
    5. '()' → logprob: -3.118204116821289
    6. '(' → logprob: -4.368204116821289
    7. ')))' → logprob: -5.243204116821289
    8. '('' → logprob: -5.868204116821289
    9. '(()' → logprob: -5.868204116821289
    10. '()),' → logprob: -8.243204116821289

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20223140716552734
    2. 'strip' → logprob: -1.7022314071655273
    3. ' split' → logprob: -7.952231407165527
    4. 'rstrip' → logprob: -7.952231407165527
    5. ' strip' → logprob: -9.827231407165527
    6. ')' → logprob: -10.952231407165527
    7. 'replace' → logprob: -11.077231407165527
    8. 'read' → logprob: -11.077231407165527
    9. ').' → logprob: -12.827231407165527
    10. '().' → logprob: -12.952231407165527

Token 22: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.46529924869537354
    2. ')))' → logprob: -1.4652992486953735
    3. '())' → logprob: -2.590299129486084
    4. '()))' → logprob: -3.590299129486084
    5. ')' → logprob: -4.090299129486084
    6. '))))' → logprob: -4.590299129486084
    7. '()' → logprob: -4.715299129486084
    8. '(' → logprob: -6.840299129486084
    9. '())))
' → logprob: -7.215299129486084
    10. '))' → logprob: -8.215299606323242

Token 23: 'judge' (ID: 163735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18935203552246094
    2. '))' → logprob: -1.939352035522461
    3. '[' → logprob: -4.314352035522461
    4. ')
' → logprob: -5.814352035522461
    5. ')))' → logprob: -5.939352035522461
    6. '
' → logprob: -6.564352035522461
    7. '))
' → logprob: -6.814352035522461
    8. '+' → logprob: -6.939352035522461
    9. '+
' → logprob: -7.314352035522461
    10. '[::-' → logprob: -7.314352035522461

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1909847855567932
    2. 'r' → logprob: -2.9409847259521484
    3. '_' → logprob: -3.0659847259521484
    4. 's' → logprob: -3.0659847259521484
    5. 'd' → logprob: -4.440984725952148
    6. '=' → logprob: -5.565984725952148
    7. '[' → logprob: -5.690984725952148
    8. '()' → logprob: -6.565984725952148
    9. '(r' → logprob: -6.940984725952148
    10. '(d' → logprob: -7.065984725952148

Token 25: ' (' (ID: 350)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.1194658279418945
    2. ' reduce' → logprob: -1.7444658279418945
    3. ' True' → logprob: -1.8694658279418945
    4. ' all' → logprob: -1.8694658279418945
    5. 'all' → logprob: -2.6194658279418945
    6. 'True' → logprob: -3.4944658279418945
    7. ' lambda' → logprob: -3.6194658279418945
    8. 'lambda' → logprob: -4.2444658279418945
    9. ' A' → logprob: -5.1194658279418945
    10. 'False' → logprob: -5.2444658279418945

Token 26: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3932861089706421
    2. 'lambda' → logprob: -2.0182862281799316
    3. ' reduce' → logprob: -2.2682862281799316
    4. 'sum' → logprob: -3.8932862281799316
    5. ' lambda' → logprob: -4.018286228179932
    6. 'A' → logprob: -4.268286228179932
    7. 'len' → logprob: -4.268286228179932
    8. ' len' → logprob: -5.393286228179932
    9. 'add' → logprob: -5.518286228179932
    10. ' A' → logprob: -5.768286228179932

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5531272888183594
    2. 'x' → logprob: -0.9281272888183594
    3. 'a' → logprob: -4.428127288818359
    4. ' a' → logprob: -4.928127288818359
    5. 'A' → logprob: -6.178127288818359
    6. ' A' → logprob: -6.428127288818359
    7. ' s' → logprob: -7.053127288818359
    8. 's' → logprob: -7.178127288818359
    9. ' lst' → logprob: -7.178127288818359
    10. ' n' → logprob: -7.303127288818359

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04766760766506195
    2. ',' → logprob: -3.1726675033569336
    3. ' :' → logprob: -5.422667503356934
    4. ':x' → logprob: -9.547667503356934
    5. ',x' → logprob: -10.047667503356934
    6. ' ,' → logprob: -10.172667503356934
    7. '=' → logprob: -10.797667503356934
    8. ',:' → logprob: -11.422667503356934
    9. 'x' → logprob: -12.172667503356934
    10. ':list' → logprob: -12.297667503356934

Token 29: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2927895784378052
    2. ' all' → logprob: -1.4177895784378052
    3. ' reduce' → logprob: -2.0427894592285156
    4. 'x' → logprob: -2.2927894592285156
    5. ' sum' → logprob: -2.6677894592285156
    6. ' add' → logprob: -2.7927894592285156
    7. 'reduce' → logprob: -3.0427894592285156
    8. 'all' → logprob: -3.6677894592285156
    9. 'sum' → logprob: -3.6677894592285156
    10. ' len' → logprob: -5.042789459228516

Token 30: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9962582588195801
    2. 'reduce' → logprob: -1.24625825881958
    3. 'sum' → logprob: -2.12125825881958
    4. ' x' → logprob: -2.62125825881958
    5. ' reduce' → logprob: -2.99625825881958
    6. 'len' → logprob: -3.49625825881958
    7. ' sum' → logprob: -3.74625825881958
    8. 'all' → logprob: -3.99625825881958
    9. ' all' → logprob: -4.49625825881958
    10. ' len' → logprob: -5.37125825881958

Token 31: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5597705245018005
    2. ' y' → logprob: -1.0597705841064453
    3. 'f' → logprob: -3.4347705841064453
    4. 'x' → logprob: -4.059770584106445
    5. 'a' → logprob: -4.434770584106445
    6. ' f' → logprob: -5.184770584106445
    7. ' x' → logprob: -5.434770584106445
    8. 'lambda' → logprob: -6.309770584106445
    9. ' a' → logprob: -6.434770584106445
    10. 'n' → logprob: -6.809770584106445

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004446139559149742
    2. ' :' → logprob: -6.004446029663086
    3. ',' → logprob: -7.379446029663086
    4. ':x' → logprob: -7.879446029663086
    5. 'y' → logprob: -8.379446029663086
    6. ':y' → logprob: -8.504446029663086
    7. ' y' → logprob: -9.379446029663086
    8. '=' → logprob: -9.504446029663086
    9. 'x' → logprob: -9.504446029663086
    10. ':add' → logprob: -9.879446029663086

Token 33: ' ["' (ID: 9129)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.112965703010559
    2. 'x' → logprob: -1.237965703010559
    3. ' y' → logprob: -1.862965703010559
    4. ' add' → logprob: -2.7379655838012695
    5. 'y' → logprob: -3.1129655838012695
    6. 'add' → logprob: -3.6129655838012695
    7. ' reduce' → logprob: -3.6129655838012695
    8. 'reduce' → logprob: -3.7379655838012695
    9. ' all' → logprob: -4.7379655838012695
    10. ' True' → logprob: -5.6129655838012695

Token 34: 'win' (ID: 11668)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.3327033519744873
    2. 'even' → logprob: -2.4577033519744873
    3. 'x' → logprob: -2.7077033519744873
    4. 'YES' → logprob: -2.8327033519744873
    5. '0' → logprob: -3.0827033519744873
    6. 'Even' → logprob: -3.2077033519744873
    7. '"' → logprob: -3.2077033519744873
    8. 'True' → logprob: -3.3327033519744873
    9. ' "' → logprob: -3.3327033519744873
    10. 'y' → logprob: -3.7077033519744873

Token 35: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4943884611129761
    2. '",' → logprob: -1.119388461112976
    3. '","' → logprob: -2.8693885803222656
    4. '"]' → logprob: -6.369388580322266
    5. '\n' → logprob: -6.869388580322266
    6. 's' → logprob: -6.994388580322266
    7. 'ner' → logprob: -7.244388580322266
    8. 'er' → logprob: -7.744388580322266
    9. '",'' → logprob: -7.869388580322266
    10. ' ",' → logprob: -8.494388580322266

Token 36: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22644732892513275
    2. ' "' → logprob: -1.601447343826294
    3. '"user' → logprob: -8.476447105407715
    4. '"x' → logprob: -8.726447105407715
    5. ''' → logprob: -9.476447105407715
    6. '"value' → logprob: -9.601447105407715
    7. 'None' → logprob: -9.726447105407715
    8. '"time' → logprob: -10.101447105407715
    9. '"net' → logprob: -10.476447105407715
    10. '"s' → logprob: -10.476447105407715

Token 37: 'b' (ID: 65)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.06611331552267075
    2. 'draw' → logprob: -3.441113233566284
    3. ' lose' → logprob: -4.316113471984863
    4. 'loss' → logprob: -4.816113471984863
    5. 'tie' → logprob: -5.691113471984863
    6. 'fail' → logprob: -6.316113471984863
    7. '"' → logprob: -7.066113471984863
    8. 'lost' → logprob: -7.191113471984863
    9. 'continue' → logprob: -7.316113471984863
    10. ' draw' → logprob: -7.878613471984863

Token 38: 'ust' (ID: 570)
  Prédit: 'reak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reak' → logprob: -1.088432788848877
    2. 'eat' → logprob: -1.588432788848877
    3. 'y' → logprob: -2.588432788848877
    4. 'ye' → logprob: -2.713432788848877
    5. 'ust' → logprob: -3.088432788848877
    6. 'e' → logprob: -3.338432788848877
    7. 'ad' → logprob: -3.713432788848877
    8. 'ack' → logprob: -3.963432788848877
    9. 'etter' → logprob: -4.088432788848877
    10. 'at' → logprob: -4.088432788848877

Token 39: '"][' (ID: 40438)
  Prédit: '"]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"][' → logprob: -0.004214094020426273
    2. '"]' → logprob: -5.879214286804199
    3. '"]["' → logprob: -7.004214286804199
    4. '"])' → logprob: -9.0042142868042
    5. '"' → logprob: -9.3792142868042
    6. '",' → logprob: -9.8792142868042
    7. '")[' → logprob: -10.2542142868042
    8. '][' → logprob: -10.3792142868042
    9. '"]))' → logprob: -10.3792142868042
    10. ''][' → logprob: -10.5042142868042

Token 40: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1553233563899994
    2. ' y' → logprob: -2.5303232669830322
    3. 'x' → logprob: -3.5303232669830322
    4. 'int' → logprob: -4.155323505401611
    5. '(y' → logprob: -4.655323505401611
    6. ' int' → logprob: -6.530323505401611
    7. ' x' → logprob: -6.780323505401611
    8. 'not' → logprob: -6.780323505401611
    9. '(x' → logprob: -6.905323505401611
    10. '(int' → logprob: -7.030323505401611

Token 41: '])(' (ID: 164063)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2521192133426666
    2. ' >' → logprob: -1.8771191835403442
    3. '>=' → logprob: -3.127119302749634
    4. '>x' → logprob: -4.002119064331055
    5. ' >=' → logprob: -5.377119064331055
    6. '<' → logprob: -6.252119064331055
    7. ' y' → logprob: -8.127119064331055
    8. ' <' → logprob: -8.502119064331055
    9. '<=' → logprob: -8.627119064331055
    10. ' ' → logprob: -9.002119064331055

Token 42: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40007418394088745
    2. ' x' → logprob: -2.1500742435455322
    3. 'reduce' → logprob: -3.0250742435455322
    4. 'sum' → logprob: -3.2750742435455322
    5. '(x' → logprob: -4.150074005126953
    6. 'int' → logprob: -4.150074005126953
    7. '(' → logprob: -4.275074005126953
    8. ' sum' → logprob: -4.525074005126953
    9. ' reduce' → logprob: -4.525074005126953
    10. '0' → logprob: -4.900074005126953

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.012396866455674171
    2. '(' → logprob: -5.012396812438965
    3. '((' → logprob: -6.637396812438965
    4. '(not' → logprob: -6.762396812438965
    5. '(str' → logprob: -7.012396812438965
    6. '(sum' → logprob: -7.512396812438965
    7. '(len' → logprob: -8.262396812438965
    8. 'x' → logprob: -8.262396812438965
    9. '('' → logprob: -8.637396812438965
    10. '(y' → logprob: -8.637396812438965

Token 44: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05711216852068901
    2. '>=' → logprob: -3.807112216949463
    3. ' >' → logprob: -4.432112216949463
    4. '[' → logprob: -4.932112216949463
    5. ')' → logprob: -5.682112216949463
    6. ')>' → logprob: -5.807112216949463
    7. '>x' → logprob: -6.182112216949463
    8. ' >=' → logprob: -6.432112216949463
    9. '>)' → logprob: -7.307112216949463
    10. '<' → logprob: -7.682112216949463

Token 45: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.7441113591194153
    2. '22' → logprob: -1.1191112995147705
    3. ' ' → logprob: -1.9941112995147705
    4. '18' → logprob: -3.3691112995147705
    5. '17' → logprob: -4.74411153793335
    6. '16' → logprob: -5.99411153793335
    7. '2' → logprob: -5.99411153793335
    8. '23' → logprob: -6.24411153793335
    9. '20' → logprob: -6.36911153793335
    10. '19' → logprob: -6.36911153793335

Token 46: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.6597051024436951
    2. '21' → logprob: -0.9097051024436951
    3. ' ' → logprob: -3.15970516204834
    4. '18' → logprob: -4.53470516204834
    5. '2' → logprob: -5.28470516204834
    6. '17' → logprob: -5.53470516204834
    7. '16' → logprob: -5.78470516204834
    8. '1' → logprob: -5.90970516204834
    9. '20' → logprob: -6.28470516204834
    10. '100' → logprob: -6.78470516204834

Token 47: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.07893507182598114
    2. '))' → logprob: -2.828935146331787
    3. ')' → logprob: -4.203935146331787
    4. '))))' → logprob: -7.328935146331787
    5. ')))
' → logprob: -7.828935146331787
    6. ' ' → logprob: -8.203934669494629
    7. ')))

' → logprob: -8.703934669494629
    8. ' ))' → logprob: -9.578934669494629
    9. ')));' → logprob: -10.203934669494629
    10. '))
' → logprob: -10.328934669494629

Token 48: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22176553308963776
    2. '(A' → logprob: -2.3467655181884766
    3. ')' → logprob: -2.7217655181884766
    4. '(
' → logprob: -3.5967655181884766
    5. 'A' → logprob: -6.221765518188477
    6. '('' → logprob: -6.346765518188477
    7. '(input' → logprob: -6.721765518188477
    8. '[' → logprob: -7.471765518188477
    9. '))' → logprob: -7.596765518188477
    10. ' ' → logprob: -7.846765518188477

Token 49: '(j' (ID: 4997)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5307445526123047
    2. '(j' → logprob: -0.9057445526123047
    3. '(re' → logprob: -5.780744552612305
    4. '('' → logprob: -6.155744552612305
    5. '("' → logprob: -7.780744552612305
    6. '(sum' → logprob: -8.030744552612305
    7. '(A' → logprob: -8.030744552612305
    8. '((' → logprob: -8.155744552612305
    9. '(print' → logprob: -8.405744552612305
    10. '(lambda' → logprob: -8.780744552612305

Token 50: 'udge' (ID: 35933)
  Prédit: 'udge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udge' → logprob: -0.00012821101699955761
    2. 'ud' → logprob: -9.125127792358398
    3. 'judge' → logprob: -11.000127792358398
    4. 'u' → logprob: -13.500127792358398
    5. 'UDGE' → logprob: -14.625127792358398
    6. 'udget' → logprob: -15.000127792358398
    7. 'udit' → logprob: -15.500127792358398
    8. 'uge' → logprob: -16.1251277923584
    9. 'ude' → logprob: -16.3751277923584
    10. 'adge' → logprob: -16.8751277923584

Token 51: '(re' (ID: 8178)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04342525824904442
    2. '(' → logprob: -3.1684253215789795
    3. ')' → logprob: -9.043425559997559
    4. '((' → logprob: -9.418425559997559
    5. 'A' → logprob: -9.918425559997559
    6. '()' → logprob: -10.293425559997559
    7. '(a' → logprob: -10.668425559997559
    8. '(`' → logprob: -11.168425559997559
    9. '(
' → logprob: -11.293425559997559
    10. '(len' → logprob: -11.293425559997559

Token 52: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0013013073476031423
    2. 'd' → logprob: -6.751301288604736
    3. 'A' → logprob: -9.751301765441895
    4. 'du' → logprob: -9.876301765441895
    5. 'duced' → logprob: -12.251301765441895
    6. '(A' → logprob: -12.501301765441895
    7. 'ad' → logprob: -12.876301765441895
    8. 'dice' → logprob: -13.126301765441895
    9. 'D' → logprob: -13.626301765441895
    10. 'duc' → logprob: -13.876301765441895

Token 53: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.010055196471512318
    2. '(' → logprob: -4.635055065155029
    3. 'add' → logprob: -8.635055541992188
    4. ' (' → logprob: -9.760055541992188
    5. '(lambda' → logprob: -10.510055541992188
    6. ' add' → logprob: -10.885055541992188
    7. ')' → logprob: -11.885055541992188
    8. ')add' → logprob: -11.885055541992188
    9. '(operator' → logprob: -13.760055541992188
    10. ' ' → logprob: -14.010055541992188

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08176102489233017
    2. ',A' → logprob: -2.581761121749878
    3. '(A' → logprob: -6.581760883331299
    4. ' ,' → logprob: -7.081760883331299
    5. 'A' → logprob: -7.456760883331299
    6. '(' → logprob: -11.081761360168457
    7. ' A' → logprob: -11.206761360168457
    8. '(),' → logprob: -11.706761360168457
    9. ',(' → logprob: -11.956761360168457
    10. ',
' → logprob: -12.581761360168457

Token 55: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.47413164377212524
    2. 'A' → logprob: -0.9741316437721252
    3. '(A' → logprob: -10.97413158416748
    4. ',A' → logprob: -11.22413158416748
    5. '<|end|>' → logprob: -11.97413158416748
    6. ')' → logprob: -12.47413158416748
    7. ' ' → logprob: -12.72413158416748
    8. ',' → logprob: -12.84913158416748
    9. '	A' → logprob: -13.47413158416748
    10. '>A' → logprob: -13.72413158416748

Token 56: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0016827977960929275
    2. '))' → logprob: -6.626682758331299
    3. ')' → logprob: -8.376683235168457
    4. '))))' → logprob: -9.876683235168457
    5. ')))
' → logprob: -9.876683235168457
    6. ' ' → logprob: -11.126683235168457
    7. ')))

' → logprob: -12.501683235168457
    8. '())))' → logprob: -13.501683235168457
    9. ')));' → logprob: -13.501683235168457
    10. '),' → logprob: -13.751683235168457

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12715750932693481
    2. ' ' → logprob: -2.12715744972229
    3. '1' → logprob: -9.002157211303711
    4. '-' → logprob: -11.002157211303711
    5. ')' → logprob: -11.127157211303711
    6. ')))' → logprob: -11.252157211303711
    7. ' ))' → logprob: -11.752157211303711
    8. '))' → logprob: -11.814657211303711
    9. '  ' → logprob: -11.877157211303711
    10. '10' → logprob: -12.002157211303711

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004673156887292862
    2. ' ' → logprob: -5.379673004150391
    3. '))' → logprob: -11.25467300415039
    4. '1' → logprob: -11.37967300415039
    5. ')' → logprob: -12.12967300415039
    6. '  ' → logprob: -12.31717300415039
    7. ')))' → logprob: -12.62967300415039
    8. '-' → logprob: -13.00467300415039
    9. '   ' → logprob: -13.06717300415039
    10. ' ))' → logprob: -13.75467300415039

Token 59: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6987177133560181
    2. ')))' → logprob: -0.6987177133560181
    3. ')' → logprob: -5.1987175941467285
    4. '))))' → logprob: -10.698718070983887
    5. ')))
' → logprob: -12.948718070983887
    6. '))
' → logprob: -12.948718070983887
    7. '),' → logprob: -13.698718070983887
    8. ')));' → logprob: -14.448718070983887
    9. ' ))' → logprob: -14.573718070983887
    10. ' ' → logprob: -15.323718070983887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 35.09%
Précision adaptée (1ère position): 35.09%
Précision (top 10): 63.16%
================================================================================
