================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate

def E(i, x):
    if i == 1:
        return 5*x
    return (2*i+1)*x

N, X = map(int, input().split())
G = list(map(int, input().split()))
G.sort(reverse=True)
accG = list(accumulate(G))
accG.insert(0, 0)
ans = X*2*N + G[0]*N*5
for k in range(1, N+1):
    now = 0
    for i in range(1, N+1):
        if i*k <= N:
            now += E(i, accG[i*k] - accG[(i-1)*k])
        else:
            now += E(i, accG[-1] - accG[(i-1)*k])
            break
    ans = min(ans, now + (N + k)*X)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008777545881457627
    2. '(
' → logprob: -7.125877857208252
    3. '\(' → logprob: -10.625877380371094
    4. ',' → logprob: -11.375877380371094
    5. '.' → logprob: -12.000877380371094
    6. '\n' → logprob: -12.500877380371094
    7. '```' → logprob: -12.500877380371094
    8. '\' → logprob: -12.500877380371094
    9. 'def' → logprob: -12.625877380371094
    10. '(

' → logprob: -12.875877380371094

Token 6: ' E' (ID: 457)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027708823326975107
    2. ' accumulate' → logprob: -6.252770900726318
    3. ' calculate' → logprob: -8.37777042388916
    4. ' space' → logprob: -8.87777042388916
    5. ' accumulated' → logprob: -9.50277042388916
    6. ' ' → logprob: -9.62777042388916
    7. ' add' → logprob: -9.87777042388916
    8. ' sum' → logprob: -9.87777042388916
    9. ' accumulator' → logprob: -10.12777042388916
    10. ' process' → logprob: -10.75277042388916

Token 7: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3183096945285797
    2. '(' → logprob: -1.6933096647262573
    3. '(n' → logprob: -2.943309783935547
    4. 'x' → logprob: -4.568309783935547
    5. '(m' → logprob: -4.943309783935547
    6. '(val' → logprob: -5.693309783935547
    7. '(s' → logprob: -6.693309783935547
    8. '(:' → logprob: -6.693309783935547
    9. '(E' → logprob: -6.693309783935547
    10. 'm' → logprob: -6.693309783935547

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05959651619195938
    2. ')' → logprob: -2.934596538543701
    3. ',' → logprob: -5.559596538543701
    4. 'x' → logprob: -8.184596061706543
    5. '_' → logprob: -9.309596061706543
    6. ' ):' → logprob: -9.309596061706543
    7. 'n' → logprob: -9.434596061706543
    8. ')n' → logprob: -9.559596061706543
    9. '):
' → logprob: -10.059596061706543
    10. ')x' → logprob: -10.184596061706543

Token 9: ' x' (ID: 1215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.919577419757843
    2. 'j' → logprob: -1.0445773601531982
    3. ' n' → logprob: -2.4195773601531982
    4. 'n' → logprob: -2.6695773601531982
    5. 'x' → logprob: -3.4195773601531982
    6. ' x' → logprob: -3.4195773601531982
    7. 'a' → logprob: -5.919577598571777
    8. 'i' → logprob: -6.169577598571777
    9. ' a' → logprob: -6.419577598571777
    10. 'k' → logprob: -6.544577598571777

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00443652831017971
    2. ')' → logprob: -5.629436492919922
    3. ',' → logprob: -7.504436492919922
    4. ':' → logprob: -9.129436492919922
    5. '):
' → logprob: -9.879436492919922
    6. '[' → logprob: -10.379436492919922
    7. ' ):' → logprob: -10.629436492919922
    8. 's' → logprob: -10.754436492919922
    9. '=' → logprob: -11.004436492919922
    10. 'j' → logprob: -12.754436492919922

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4661843478679657
    2. '[' → logprob: -1.841184377670288
    3. ':' → logprob: -3.091184377670288
    4. '):' → logprob: -3.216184377670288
    5. ')' → logprob: -3.591184377670288
    6. '    ' → logprob: -4.091184139251709
    7. '(' → logprob: -4.216184139251709
    8. '*' → logprob: -4.341184139251709
    9. '[i' → logprob: -4.466184139251709
    10. ' (' → logprob: -4.716184139251709

Token 12: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45455119013786316
    2. ' x' → logprob: -2.2045512199401855
    3. ' ' → logprob: -2.3295512199401855
    4. '    ' → logprob: -2.5795512199401855
    5. 'return' → logprob: -3.5795512199401855
    6. '   ' → logprob: -3.7045512199401855
    7. 'x' → logprob: -3.8295512199401855
    8. ' i' → logprob: -6.3295512199401855
    9. '0' → logprob: -7.0795512199401855
    10. 'e' → logprob: -7.2045512199401855

Token 13: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11280643194913864
    2. ' x' → logprob: -2.4878063201904297
    3. 'i' → logprob: -4.36280632019043
    4. 'x' → logprob: -4.98780632019043
    5. ' ' → logprob: -5.73780632019043
    6. ' not' → logprob: -7.36280632019043
    7. ' isinstance' → logprob: -9.48780632019043
    8. '   ' → logprob: -10.86280632019043
    9. '    ' → logprob: -11.36280632019043
    10. ' ' → logprob: -11.48780632019043

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46967336535453796
    2. '==' → logprob: -1.5946733951568604
    3. ' <' → logprob: -2.2196733951568604
    4. ' >' → logprob: -3.8446733951568604
    5. ' <=' → logprob: -4.094673156738281
    6. '>' → logprob: -4.719673156738281
    7. '<' → logprob: -5.094673156738281
    8. ' ' → logprob: -5.719673156738281
    9. ' >=' → logprob: -5.969673156738281
    10. '<=' → logprob: -6.469673156738281

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22545970976352692
    2. '0' → logprob: -1.6004596948623657
    3. '1' → logprob: -10.975460052490234
    4. ' x' → logprob: -11.350460052490234
    5. 'x' → logprob: -12.100460052490234
    6. '    ' → logprob: -13.350460052490234
    7. '   ' → logprob: -13.475460052490234
    8. '  ' → logprob: -13.600460052490234
    9. ' None' → logprob: -13.975460052490234
    10. '=' → logprob: -13.975460052490234

Token 16: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000855597376357764
    2. 'x' → logprob: -7.750855445861816
    3. ' ' → logprob: -8.000855445861816
    4. '1' → logprob: -9.875855445861816
    5. '-' → logprob: -11.375855445861816
    6. 'len' → logprob: -12.250855445861816
    7. 'i' → logprob: -12.625855445861816
    8. '   ' → logprob: -12.875855445861816
    9. '3' → logprob: -13.375855445861816
    10. 'n' → logprob: -13.500855445861816

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002990536391735077
    2. ':return' → logprob: -6.62799072265625
    3. ':
' → logprob: -6.75299072265625
    4. ' and' → logprob: -8.25299072265625
    5. ' :' → logprob: -9.37799072265625
    6. ',' → logprob: -9.87799072265625
    7. '):' → logprob: -10.12799072265625
    8. '():' → logprob: -11.50299072265625
    9. 'and' → logprob: -11.62799072265625
    10. '       ' → logprob: -11.75299072265625

Token 18: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04614149034023285
    2. '       ' → logprob: -3.7961413860321045
    3. ':return' → logprob: -5.296141624450684
    4. ' return' → logprob: -5.546141624450684
    5. ' :' → logprob: -5.671141624450684
    6. '0' → logprob: -5.671141624450684
    7. '    ' → logprob: -6.171141624450684
    8. ':
' → logprob: -6.296141624450684
    9. '   ' → logprob: -6.546141624450684
    10. 'return' → logprob: -7.921141624450684

Token 19: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16275322437286377
    2. ' x' → logprob: -2.162753105163574
    3. 'return' (adapté à ' return') → logprob: -3.912753105163574
    4. 'x' → logprob: -5.162753105163574
    5. ' ' → logprob: -5.412753105163574
    6. '       ' → logprob: -6.287753105163574
    7. '0' → logprob: -7.162753105163574
    8. '    ' → logprob: -7.662753105163574
    9. ':return' → logprob: -8.037753105163574
    10. ' abs' → logprob: -8.162753105163574

Token 20: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6169191598892212
    2. 'x' → logprob: -0.8669191598892212
    3. ' ' → logprob: -4.116919040679932
    4. '0' → logprob: -4.241919040679932
    5. '1' → logprob: -4.866919040679932
    6. ' None' → logprob: -7.491919040679932
    7. 'None' → logprob: -8.11691951751709
    8. '   ' → logprob: -8.36691951751709
    9. '(x' → logprob: -9.74191951751709
    10. ' (' → logprob: -9.92941951751709

Token 21: '5' (ID: 20)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012067490257322788
    2. '1' → logprob: -4.8870673179626465
    3. ' x' → logprob: -6.2620673179626465
    4. '0' → logprob: -6.2620673179626465
    5. '2' → logprob: -9.262067794799805
    6. '(x' → logprob: -9.262067794799805
    7. ' ' → logprob: -9.762067794799805
    8. '(' → logprob: -9.762067794799805
    9. '   ' → logprob: -10.012067794799805
    10. 'sum' → logprob: -10.262067794799805

Token 22: '*x' (ID: 46987)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8120187520980835
    2. '*' → logprob: -0.9370187520980835
    3. ' *' → logprob: -3.562018871307373
    4. ' ' → logprob: -3.937018871307373
    5. '    
' → logprob: -3.937018871307373
    6. '    ' → logprob: -4.312018871307373
    7. '.' → logprob: -4.312018871307373
    8. 'else' → logprob: -4.437018871307373
    9. ' else' → logprob: -4.562018871307373
    10. 'elif' → logprob: -4.937018871307373

Token 23: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03933056443929672
    2. '+' → logprob: -4.91433048248291
    3. '
' → logprob: -4.91433048248291
    4. '    
' → logprob: -5.03933048248291
    5. '*' → logprob: -5.41433048248291
    6. ' 
' → logprob: -5.78933048248291
    7. ' ' → logprob: -5.78933048248291
    8. '  
' → logprob: -6.53933048248291
    9. '\n' → logprob: -6.78933048248291
    10. '<|end|>' → logprob: -7.41433048248291

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012800154276192188
    2. '    
' → logprob: -4.887800216674805
    3. '\n' → logprob: -6.137800216674805
    4. '
' → logprob: -6.762800216674805
    5. ' ' → logprob: -7.887800216674805
    6. ' else' → logprob: -7.887800216674805
    7. ' 
' → logprob: -8.637800216674805
    8. ')' → logprob: -8.762800216674805
    9. '  
' → logprob: -9.012800216674805
    10. '   
' → logprob: -9.262800216674805

Token 25: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03762148693203926
    2. ' else' → logprob: -4.41262149810791
    3. 'else' → logprob: -4.78762149810791
    4. ' ' → logprob: -5.03762149810791
    5. 'elif' → logprob: -5.91262149810791
    6. '
' → logprob: -6.41262149810791
    7. ' elif' → logprob: -6.41262149810791
    8. '    
' → logprob: -7.03762149810791
    9. '```' → logprob: -7.41262149810791
    10. '\n' → logprob: -7.78762149810791

Token 26: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2562119960784912
    2. ' E' → logprob: -1.8812119960784912
    3. ' i' → logprob: -3.631211996078491
    4. '5' → logprob: -4.00621223449707
    5. 'E' → logprob: -4.63121223449707
    6. ' x' → logprob: -5.13121223449707
    7. '10' → logprob: -5.63121223449707
    8. '2' → logprob: -6.25621223449707
    9. 'i' → logprob: -6.50621223449707
    10. 'x' → logprob: -6.63121223449707

Token 27: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4012877345085144
    2. 'E' → logprob: -1.9012877941131592
    3. '5' → logprob: -2.526287794113159
    4. 'x' → logprob: -2.776287794113159
    5. '2' → logprob: -5.02628755569458
    6. ' i' → logprob: -5.15128755569458
    7. '1' → logprob: -5.52628755569458
    8. '4' → logprob: -5.52628755569458
    9. ' E' → logprob: -5.90128755569458
    10. '   ' → logprob: -5.90128755569458

Token 28: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.5743169784545898
    2. '*' → logprob: -1.5743169784545898
    3. ' *' → logprob: -1.6993169784545898
    4. '*x' → logprob: -3.82431697845459
    5. '**' → logprob: -4.44931697845459
    6. ' +' → logprob: -5.44931697845459
    7. ' -' → logprob: -5.82431697845459
    8. '-' → logprob: -6.19931697845459
    9. ' **' → logprob: -6.82431697845459
    10. '*(' → logprob: -7.07431697845459

Token 29: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6627139449119568
    2. ' -' → logprob: -1.2877140045166016
    3. '*' → logprob: -2.1627140045166016
    4. ' *' → logprob: -3.5377140045166016
    5. '*x' → logprob: -3.5377140045166016
    6. '+' → logprob: -4.412714004516602
    7. ' +' → logprob: -4.662714004516602
    8. ')' → logprob: -5.037714004516602
    9. ')*' → logprob: -5.912714004516602
    10. ' ' → logprob: -6.037714004516602

Token 30: '1' (ID: 16)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8385369181632996
    2. '1' → logprob: -1.7135369777679443
    3. 'x' → logprob: -1.7135369777679443
    4. ' ' → logprob: -1.8385369777679443
    5. '3' → logprob: -3.7135369777679443
    6. ')x' → logprob: -5.338536739349365
    7. ')' → logprob: -5.838536739349365
    8. ' )' → logprob: -6.088536739349365
    9. '5' → logprob: -6.213536739349365
    10. '7' → logprob: -6.338536739349365

Token 31: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5889514684677124
    2. ')*' → logprob: -0.8389514684677124
    3. '*' → logprob: -4.963951587677002
    4. ' )' → logprob: -5.588951587677002
    5. '*x' → logprob: -7.213951587677002
    6. ')*(' → logprob: -7.463951587677002
    7. ' *' → logprob: -7.963951587677002
    8. ')**' → logprob: -8.338951110839844
    9. '*i' → logprob: -9.088951110839844
    10. '*)' → logprob: -9.463951110839844

Token 32: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0166370440274477
    2. ' x' → logprob: -4.141636848449707
    3. 'E' → logprob: -8.391636848449707
    4. '(x' → logprob: -9.391636848449707
    5. '(' → logprob: -9.766636848449707
    6. ' ' → logprob: -9.891636848449707
    7. '5' → logprob: -10.016636848449707
    8. ' E' → logprob: -10.641636848449707
    9. '*x' → logprob: -10.891636848449707
    10. ' (' → logprob: -11.016636848449707

Token 33: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: 'N' (ID: 45)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2725653648376465
    2. '+' → logprob: -1.5225653648376465
    3. '<|end|>' → logprob: -4.3975653648376465
    4. '\' → logprob: -6.6475653648376465
    5. '*(' → logprob: -7.0225653648376465
    6. '(' → logprob: -7.1475653648376465
    7. ' *' → logprob: -7.1475653648376465
    8. ')' → logprob: -7.2725653648376465
    9. '**' → logprob: -7.3975653648376465
    10. '\n' → logprob: -7.6475653648376465

Token 35: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9536198973655701
    2. ')' → logprob: -1.8286199569702148
    3. ' ' → logprob: -2.078619956970215
    4. '=' → logprob: -2.328619956970215
    5. '>' → logprob: -2.953619956970215
    6. '[' → logprob: -3.203619956970215
    7. '<|end|>' → logprob: -3.203619956970215
    8. '_' → logprob: -3.453619956970215
    9. '  ' → logprob: -3.578619956970215
    10. ',' → logprob: -4.703619956970215

Token 36: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15255028009414673
    2. 'K' → logprob: -3.402550220489502
    3. 'M' → logprob: -3.652550220489502
    4. '<|end|>' → logprob: -3.652550220489502
    5. ' x' → logprob: -3.902550220489502
    6. ' ' → logprob: -4.402550220489502
    7. ' M' → logprob: -5.027550220489502
    8. ' K' → logprob: -5.527550220489502
    9. '=' → logprob: -6.152550220489502
    10. 'X' → logprob: -6.527550220489502

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016059592366218567
    2. '=' → logprob: -4.141059398651123
    3. ',' → logprob: -10.891059875488281
    4. '<|end|>' → logprob: -12.766059875488281
    5. '=input' → logprob: -13.891059875488281
    6. ')' → logprob: -13.891059875488281
    7. '=int' → logprob: -14.141059875488281
    8. ' =
' → logprob: -15.016059875488281
    9. ' ' → logprob: -15.766059875488281
    10. '<|end|>' → logprob: -16.14105987548828

Token 38: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.41723528504371643
    2. '10' → logprob: -2.0422353744506836
    3. ' map' → logprob: -2.1672353744506836
    4. '5' → logprob: -2.5422353744506836
    5. ' ' → logprob: -4.667235374450684
    6. 'int' → logprob: -5.417235374450684
    7. 'input' → logprob: -6.542235374450684
    8. '100' → logprob: -7.417235374450684
    9. '3' → logprob: -7.542235374450684
    10. 'list' → logprob: -7.542235374450684

Token 39: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30475202202796936
    2. '(int' → logprob: -1.429751992225647
    3. '(lambda' → logprob: -4.054751873016357
    4. '<|end|>' → logprob: -5.804751873016357
    5. '(str' → logprob: -6.429751873016357
    6. '(input' → logprob: -7.179751873016357
    7. '[int' → logprob: -8.804752349853516
    8. '(range' → logprob: -9.304752349853516
    9. 'int' → logprob: -9.929752349853516
    10. '(
' → logprob: -10.429752349853516

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2610408663749695
    2. 'input' → logprob: -1.7610409259796143
    3. ')' → logprob: -3.3860409259796143
    4. ',input' → logprob: -4.261040687561035
    5. '(' → logprob: -5.136040687561035
    6. ',' → logprob: -5.886040687561035
    7. ' input' → logprob: -7.011040687561035
    8. '=input' → logprob: -8.386040687561035
    9. '```' → logprob: -10.011040687561035
    10. '<input' → logprob: -10.636040687561035

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10049629211425781
    2. ' input' → logprob: -2.350496292114258
    3. ')' → logprob: -8.225496292114258
    4. ' )' → logprob: -11.475496292114258
    5. '(input' → logprob: -11.975496292114258
    6. '))' → logprob: -13.850496292114258
    7. ',input' → logprob: -13.975496292114258
    8. '=input' → logprob: -14.100496292114258
    9. '```' → logprob: -14.475496292114258
    10. '	input' → logprob: -15.100496292114258

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5972180962562561
    2. '())' → logprob: -1.0972180366516113
    3. '()' → logprob: -2.2222180366516113
    4. '(' → logprob: -5.472218036651611
    5. '('' → logprob: -6.597218036651611
    6. ')' → logprob: -7.847218036651611
    7. '());' → logprob: -8.09721851348877
    8. '()>' → logprob: -8.47221851348877
    9. '()))' → logprob: -8.47221851348877
    10. '(()' → logprob: -8.72221851348877

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.79811754100956e-05
    2. 'strip' → logprob: -10.250038146972656
    3. ' split' → logprob: -13.375038146972656
    4. 'spl' → logprob: -14.875038146972656
    5. 'rstrip' → logprob: -15.125038146972656
    6. '(split' → logprob: -15.125038146972656
    7. ')' → logprob: -17.375038146972656
    8. 's' → logprob: -18.875038146972656
    9. '```' → logprob: -19.000038146972656
    10. 'sp' → logprob: -19.625038146972656

Token 44: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20878654718399048
    2. '())' → logprob: -1.7087864875793457
    3. '))' → logprob: -5.333786487579346
    4. '()' → logprob: -6.208786487579346
    5. '('' → logprob: -8.458786964416504
    6. '()))' → logprob: -9.083786964416504
    7. '(' → logprob: -9.333786964416504
    8. '),' → logprob: -10.708786964416504
    9. '')' → logprob: -10.833786964416504
    10. '(','' → logprob: -11.208786964416504

Token 45: 'G' (ID: 38)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8870633840560913
    2. 'a' → logprob: -2.137063503265381
    3. 's' → logprob: -2.137063503265381
    4. 'values' → logprob: -2.762063503265381
    5. '
' → logprob: -2.887063503265381
    6. 'res' → logprob: -2.887063503265381
    7. 'arr' → logprob: -3.262063503265381
    8. 'results' → logprob: -3.387063503265381
    9. 'acc' → logprob: -4.262063503265381
    10. 'S' → logprob: -4.387063503265381

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12746934592723846
    2. ' =' → logprob: -2.127469301223755
    3. 'enerate' → logprob: -9.877469062805176
    4. 'G' → logprob: -10.002469062805176
    5. 'x' → logprob: -10.127469062805176
    6. 's' → logprob: -10.127469062805176
    7. '=[]' → logprob: -10.377469062805176
    8. '1' → logprob: -10.752469062805176
    9. '=g' → logprob: -10.752469062805176
    10. 'r' → logprob: -10.877469062805176

Token 47: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8387636542320251
    2. ' list' → logprob: -1.46376371383667
    3. '[' → logprob: -1.96376371383667
    4. 'list' → logprob: -1.96376371383667
    5. ' accumulate' → logprob: -4.33876371383667
    6. '[i' → logprob: -4.46376371383667
    7. '[list' → logprob: -4.96376371383667
    8. '[]' → logprob: -5.33876371383667
    9. 'acc' → logprob: -5.71376371383667
    10. '[x' → logprob: -5.96376371383667

Token 48: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -11.500029563903809
    3. 'acc' → logprob: -11.625029563903809
    4. '(ac' → logprob: -11.875029563903809
    5. '(it' → logprob: -13.250029563903809
    6. '	acc' → logprob: -14.875029563903809
    7. '(t' → logprob: -15.375029563903809
    8. '.acc' → logprob: -15.500029563903809
    9. '(map' → logprob: -15.625029563903809
    10. '(range' → logprob: -15.875029563903809

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009778168052434921
    2. '(' → logprob: -4.634778022766113
    3. 'int' → logprob: -11.384778022766113
    4. '[int' → logprob: -13.259778022766113
    5. '(input' → logprob: -13.259778022766113
    6. ',int' → logprob: -13.384778022766113
    7. ')' → logprob: -13.509778022766113
    8. '<int' → logprob: -14.009778022766113
    9. '(eval' → logprob: -14.259778022766113
    10. ')(' → logprob: -14.384778022766113

Token 50: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.25531476736068726
    2. ',' → logprob: -1.505314826965332
    3. '(input' → logprob: -5.880314826965332
    4. '(' → logprob: -8.005314826965332
    5. 'input' → logprob: -8.630314826965332
    6. ' ,' → logprob: -10.255314826965332
    7. '(),' → logprob: -11.130314826965332
    8. ',int' → logprob: -11.630314826965332
    9. ',(' → logprob: -13.130314826965332
    10. '=input' → logprob: -13.255314826965332

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011726059019565582
    2. ' input' → logprob: -6.7511725425720215
    3. ',input' → logprob: -14.25117301940918
    4. '(input' → logprob: -14.75117301940918
    5. ' ' → logprob: -15.12617301940918
    6. ')' → logprob: -15.12617301940918
    7. '=input' → logprob: -15.37617301940918
    8. 'list' → logprob: -15.62617301940918
    9. 'x' → logprob: -16.37617301940918
    10. '	input' → logprob: -16.37617301940918

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.64708495605737e-05
    2. '()' → logprob: -9.750066757202148
    3. '(' → logprob: -12.375066757202148
    4. '(input' → logprob: -13.500066757202148
    5. ' ().' → logprob: -13.500066757202148
    6. ')' → logprob: -15.125066757202148
    7. '.' → logprob: -15.875066757202148
    8. '(.' → logprob: -16.00006675720215
    9. ').' → logprob: -16.75006675720215
    10. '>().' → logprob: -16.87506675720215

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.4153549020411447e-05
    2. 'strip' → logprob: -10.75002384185791
    3. ' split' → logprob: -13.12502384185791
    4. 'rstrip' → logprob: -15.00002384185791
    5. '(split' → logprob: -16.375024795532227
    6. 'read' → logprob: -16.625024795532227
    7. 'spl' → logprob: -16.875024795532227
    8. ')' → logprob: -18.500024795532227
    9. 's' → logprob: -18.625024795532227
    10. ' ' → logprob: -18.750024795532227

Token 54: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06660672277212143
    2. '))' → logprob: -3.5666067600250244
    3. '())' → logprob: -4.066606521606445
    4. '()' → logprob: -4.066606521606445
    5. '(' → logprob: -6.566606521606445
    6. ')' → logprob: -8.066606521606445
    7. '()))
' → logprob: -9.566606521606445
    8. '(),' → logprob: -10.316606521606445
    9. '()));' → logprob: -10.316606521606445
    10. '())))' → logprob: -11.691606521606445

Token 55: 'G' (ID: 38)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0485432147979736
    2. 'res' → logprob: -1.9235432147979736
    3. ')' → logprob: -2.2985432147979736
    4. 's' → logprob: -2.6735432147979736
    5. 'G' → logprob: -2.7985432147979736
    6. 'S' → logprob: -3.1735432147979736
    7. 'acc' → logprob: -3.1735432147979736
    8. 'A' → logprob: -3.6735432147979736
    9. 'E' → logprob: -4.1735429763793945
    10. 'ans' → logprob: -4.1735429763793945

Token 56: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08528498560190201
    2. '()
' → logprob: -2.710284948348999
    3. '(' → logprob: -4.460285186767578
    4. '()

' → logprob: -7.210285186767578
    5. 'def' → logprob: -7.335285186767578
    6. '(
' → logprob: -7.835285186767578
    7. 'G' → logprob: -8.085285186767578
    8. '(reverse' → logprob: -8.460285186767578
    9. 'for' → logprob: -8.835285186767578
    10. '+' → logprob: -8.960285186767578

Token 58: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6422888040542603
    2. '())' → logprob: -1.0172888040542603
    3. '=True' → logprob: -2.6422886848449707
    4. '))' → logprob: -3.6422886848449707
    5. '()' → logprob: -4.892288684844971
    6. '()))' → logprob: -5.017288684844971
    7. '=' → logprob: -7.642288684844971
    8. '(True' → logprob: -9.017289161682129
    9. '(),' → logprob: -10.267289161682129
    10. '(' → logprob: -10.392289161682129

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.551721889991313e-05
    2. ')
' → logprob: -9.875065803527832
    3. '))' → logprob: -11.375065803527832
    4. ' )' → logprob: -13.375065803527832
    5. ')`' → logprob: -15.250065803527832
    6. ')

' → logprob: -15.500065803527832
    7. '`)' → logprob: -15.875065803527832
    8. '),' → logprob: -16.000064849853516
    9. ')**' → logprob: -17.000064849853516
    10. '')' → logprob: -17.125064849853516

Token 60: 'acc' (ID: 3717)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.976441502571106
    2. 'result' → logprob: -2.3514413833618164
    3. 'g' → logprob: -2.3514413833618164
    4. 'G' → logprob: -2.4764413833618164
    5. 's' → logprob: -2.6014413833618164
    6. 'acc' → logprob: -2.7264413833618164
    7. '+' → logprob: -3.1014413833618164
    8. ')' → logprob: -3.1014413833618164
    9. '```' → logprob: -3.2264413833618164
    10. 'E' → logprob: -3.3514413833618164

Token 61: 'G' (ID: 38)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.6768574714660645
    2. '=' → logprob: -1.1768574714660645
    3. 'um' → logprob: -2.1768574714660645
    4. 's' → logprob: -4.0518574714660645
    5. 'umul' → logprob: -4.4268574714660645
    6. 'G' → logprob: -4.4268574714660645
    7. ' =' → logprob: -4.5518574714660645
    8. 'umulator' → logprob: -5.1768574714660645
    9. 'ulate' → logprob: -5.5518574714660645
    10. 'ul' → logprob: -6.8018574714660645

Token 62: ' =' (ID: 314)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.7081122398376465
    2. 'ulate' → logprob: -1.5831122398376465
    3. 'ul' → logprob: -1.9581122398376465
    4. '=' → logprob: -2.2081122398376465
    5. 'umul' → logprob: -4.7081122398376465
    6. 'ulative' → logprob: -5.2081122398376465
    7. ')' → logprob: -5.3331122398376465
    8. 'ulates' → logprob: -5.4581122398376465
    9. ' =' → logprob: -5.5831122398376465
    10. 'ulated' → logprob: -5.5831122398376465

Token 63: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12149180471897125
    2. ' list' → logprob: -2.2464919090270996
    3. 'acc' → logprob: -4.8714919090271
    4. ' accumulate' → logprob: -6.9964919090271
    5. ' acc' → logprob: -10.871491432189941
    6. 'ac' → logprob: -11.121491432189941
    7. '(list' → logprob: -11.621491432189941
    8. '(acc' → logprob: -12.246491432189941
    9. '[' → logprob: -13.496491432189941
    10. '[list' → logprob: -13.871491432189941

Token 64: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -9.329167369287461e-05
    2. '(ac' → logprob: -9.875093460083008
    3. '(' → logprob: -10.125093460083008
    4. 'acc' → logprob: -14.125093460083008
    5. '	acc' → logprob: -14.750093460083008
    6. '(it' → logprob: -15.500093460083008
    7. ' (' → logprob: -16.125093460083008
    8. '(
' → logprob: -16.750093460083008
    9. '_acc' → logprob: -17.250093460083008
    10. ')' → logprob: -17.500093460083008

Token 65: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0028576552867889404
    2. 'ulate' → logprob: -5.877857685089111
    3. 'um' → logprob: -10.252857208251953
    4. 'ul' → logprob: -11.752857208251953
    5. 'umul' → logprob: -12.752857208251953
    6. 'om' → logprob: -12.752857208251953
    7. 'uminate' → logprob: -13.627857208251953
    8. 'culate' → logprob: -14.252857208251953
    9. 'umulative' → logprob: -14.627857208251953
    10. 'umu' → logprob: -15.377857208251953

Token 66: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.00019328886992298067
    2. '(' → logprob: -9.25019359588623
    3. ')(' → logprob: -9.37519359588623
    4. ')' → logprob: -11.87519359588623
    5. ',G' → logprob: -12.75019359588623
    6. '(g' → logprob: -13.87519359588623
    7. ' (' → logprob: -14.00019359588623
    8. '(
' → logprob: -15.87519359588623
    9. '((' → logprob: -16.250192642211914
    10. ',' → logprob: -17.250192642211914

Token 67: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0040970430709421635
    2. ',' → logprob: -5.629096984863281
    3. ' ))' → logprob: -8.254096984863281
    4. '))
' → logprob: -9.379096984863281
    5. ')' → logprob: -9.629096984863281
    6. ')))' → logprob: -10.629096984863281
    7. '[' → logprob: -11.379096984863281
    8. ' ,' → logprob: -12.004096984863281
    9. '))

' → logprob: -12.004096984863281
    10. '1' → logprob: -12.504096984863281

Token 68: 'acc' (ID: 3717)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053677402436733246
    2. ')' → logprob: -4.053677558898926
    3. ')
' → logprob: -4.928677558898926
    4. 'for' → logprob: -6.053677558898926
    5. 'def' → logprob: -6.053677558898926
    6. '<|end|>' → logprob: -6.053677558898926
    7. '

' → logprob: -6.178677558898926
    8. 'result' → logprob: -6.303677558898926
    9. ' 
' → logprob: -6.303677558898926
    10. '[' → logprob: -6.428677558898926

Token 69: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.5213274309644476e-05
    2. '<|end|>' → logprob: -11.250015258789062
    3. 'X' → logprob: -15.000015258789062
    4. 'acc' → logprob: -15.125015258789062
    5. 'umulate' → logprob: -15.625015258789062
    6. '<G' → logprob: -15.625015258789062
    7. '<|end|>' → logprob: -15.750015258789062
    8. ' G' → logprob: -15.875015258789062
    9. ')' → logprob: -15.875015258789062
    10. 'um' → logprob: -15.875015258789062

Token 70: '.insert' (ID: 13222)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '0' → logprob: -13.125004768371582
    3. '(
' → logprob: -13.250004768371582
    4. ' (' → logprob: -14.375004768371582
    5. '(-' → logprob: -14.750004768371582
    6. '((' → logprob: -16.0000057220459
    7. '(

' → logprob: -16.8750057220459
    8. '```' → logprob: -17.0000057220459
    9. '(len' → logprob: -17.2500057220459
    10. '()' → logprob: -17.3750057220459

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '(' → logprob: -14.250008583068848
    4. '   ' → logprob: -14.625008583068848
    5. '
' → logprob: -14.625008583068848
    6. ')' → logprob: -14.875008583068848
    7. '  ' → logprob: -15.750008583068848
    8. '    ' → logprob: -16.50000762939453
    9. ',' → logprob: -17.68750762939453
    10. '1' → logprob: -17.87500762939453

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -11.000027656555176
    3. ' ,' → logprob: -11.500027656555176
    4. '(' → logprob: -15.125027656555176
    5. '),' → logprob: -15.750027656555176
    6. ',
' → logprob: -16.00002670288086
    7. ')' → logprob: -16.25002670288086
    8. '，' → logprob: -17.50002670288086
    9. ' ' → logprob: -17.62502670288086
    10. '‌,' → logprob: -18.43752670288086

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.500017166137695
    4. '00' → logprob: -17.875017166137695
    5. ')' → logprob: -18.375017166137695
    6. '  ' → logprob: -19.625017166137695
    7. '۰' → logprob: -20.125017166137695
    8. '    ' → logprob: -20.500017166137695
    9. '000' → logprob: -20.625017166137695
    10. '-' → logprob: -21.000017166137695

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '00' → logprob: -15.125085830688477
    4. ')' → logprob: -15.750085830688477
    5. '   ' → logprob: -15.875085830688477
    6. '  ' → logprob: -16.687585830688477
    7. '-' → logprob: -17.312585830688477
    8. '000' → logprob: -17.437585830688477
    9. '<|end|>' → logprob: -17.687585830688477
    10. '    ' → logprob: -17.750085830688477

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.625006675720215
    4. '))' → logprob: -17.25000762939453
    5. ')

' → logprob: -17.50000762939453
    6. '),' → logprob: -18.25000762939453
    7. ')`' → logprob: -18.37500762939453
    8. ')#' → logprob: -18.62500762939453
    9. ')
' → logprob: -18.75000762939453
    10. '`)' → logprob: -19.12500762939453

Token 77: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.6971166133880615
    2. 'answer' → logprob: -1.6971166133880615
    3. 'S' → logprob: -1.8221166133880615
    4. 'ans' → logprob: -2.1971166133880615
    5. 'M' → logprob: -3.0721166133880615
    6. 'res' → logprob: -3.1971166133880615
    7. 'a' → logprob: -3.6971166133880615
    8. 'A' → logprob: -4.072116851806641
    9. 's' → logprob: -4.197116851806641
    10. 'C' → logprob: -4.197116851806641

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033647891134023666
    2. '=' → logprob: -3.4086477756500244
    3. ',' → logprob: -14.283647537231445
    4. 's' → logprob: -14.783647537231445
    5. ' ' → logprob: -15.283647537231445
    6. '＝' → logprob: -15.408647537231445
    7. ' =)' → logprob: -15.783647537231445
    8. '_' → logprob: -16.158647537231445
    9. ' +=' → logprob: -16.533647537231445
    10. ')' → logprob: -17.033647537231445

Token 79: ' X' (ID: 2127)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3008256256580353
    2. ' ' → logprob: -1.675825595855713
    3. 'float' → logprob: -3.550825595855713
    4. ' float' → logprob: -4.425825595855713
    5. '-' → logprob: -4.675825595855713
    6. 'max' → logprob: -4.800825595855713
    7. ' max' → logprob: -5.550825595855713
    8. ' -' → logprob: -5.800825595855713
    9. '10' → logprob: -6.550825595855713
    10. 'acc' → logprob: -6.550825595855713

Token 80: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2528429627418518
    2. ' ' → logprob: -1.877842903137207
    3. '*' → logprob: -2.877842903137207
    4. '<|end|>' → logprob: -5.877842903137207
    5. '-' → logprob: -6.002842903137207
    6. '0' → logprob: -6.502842903137207
    7. ' +' → logprob: -6.627842903137207
    8. ' 
' → logprob: -6.877842903137207
    9. ' *' → logprob: -7.127842903137207
    10. '
' → logprob: -7.127842903137207

Token 81: '2' (ID: 17)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7026134729385376
    2. 'N' → logprob: -0.8276134729385376
    3. 'len' → logprob: -4.077613353729248
    4. '(' → logprob: -4.202613353729248
    5. '(N' → logprob: -4.702613353729248
    6. 'G' → logprob: -4.952613353729248
    7. 'E' → logprob: -5.077613353729248
    8. '2' → logprob: -5.577613353729248
    9. '(acc' → logprob: -5.827613353729248
    10. '5' → logprob: -6.452613353729248

Token 82: '*N' (ID: 107360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.606377363204956
    2. '<|end|>' → logprob: -1.856377363204956
    3. ' 
' → logprob: -2.481377363204956
    4. '\n' → logprob: -2.481377363204956
    5. '
' → logprob: -2.856377363204956
    6. ' ' → logprob: -3.606377363204956
    7. '*' → logprob: -4.606377601623535
    8. '\' → logprob: -4.731377601623535
    9. '+
' → logprob: -4.731377601623535
    10. 'for' → logprob: -5.606377601623535

Token 83: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16334901750087738
    2. '\n' → logprob: -2.413348913192749
    3. ' 
' → logprob: -3.413348913192749
    4. '
' → logprob: -4.913349151611328
    5. '  
' → logprob: -5.288349151611328
    6. 'for' → logprob: -5.288349151611328
    7. '+' → logprob: -5.538349151611328
    8. '+
' → logprob: -5.663349151611328
    9. '' → logprob: -7.288349151611328
    10. ' for' → logprob: -7.538349151611328

Token 84: ' G' (ID: 499)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.1585567742586136
    2. ' acc' → logprob: -2.6585566997528076
    3. 'sum' → logprob: -3.5335566997528076
    4. '(acc' → logprob: -4.408556938171387
    5. '5' → logprob: -5.158556938171387
    6. ' sum' → logprob: -5.158556938171387
    7. '2' → logprob: -5.283556938171387
    8. 'max' → logprob: -5.658556938171387
    9. 'X' → logprob: -5.783556938171387
    10. ' (' → logprob: -5.783556938171387

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004106658045202494
    2. '[-' → logprob: -5.754106521606445
    3. '[N' → logprob: -7.379106521606445
    4. '0' → logprob: -8.504106521606445
    5. '[len' → logprob: -9.879106521606445
    6. '1' → logprob: -11.504106521606445
    7. '\[' → logprob: -12.379106521606445
    8. '[n' → logprob: -12.504106521606445
    9. ''[' → logprob: -12.754106521606445
    10. '[i' → logprob: -12.754106521606445

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020103710994590074
    2. ' ' → logprob: -8.875201225280762
    3. '[' → logprob: -9.750201225280762
    4. '1' → logprob: -13.625201225280762
    5. '<|end|>' → logprob: -14.500201225280762
    6. '00' → logprob: -15.500201225280762
    7. '
' → logprob: -15.500201225280762
    8. '-' → logprob: -15.625201225280762
    9. '2' → logprob: -15.875201225280762
    10. ':' → logprob: -16.500200271606445

Token 87: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5438055396080017
    2. ')' → logprob: -0.9188055396080017
    3. '+' → logprob: -5.2938055992126465
    4. ' *' → logprob: -5.4188055992126465
    5. '<|end|>' → logprob: -5.4188055992126465
    6. ')*' → logprob: -5.6688055992126465
    7. '*)' → logprob: -7.1688055992126465
    8. ' +' → logprob: -7.2938055992126465
    9. ' )' → logprob: -8.293805122375488
    10. '}' → logprob: -8.668805122375488

Token 88: 'N' (ID: 45)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3192635178565979
    2. ' ' → logprob: -2.444263458251953
    3. 'X' → logprob: -2.819263458251953
    4. '(' → logprob: -3.444263458251953
    5. 'N' → logprob: -3.569263458251953
    6. ' X' → logprob: -3.569263458251953
    7. ' N' → logprob: -4.069263458251953
    8. ' (' → logprob: -4.569263458251953
    9. '3' → logprob: -5.444263458251953
    10. '4' → logprob: -6.319263458251953

Token 89: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33132508397102356
    2. '*' → logprob: -1.9563250541687012
    3. '-' → logprob: -3.456325054168701
    4. '<|end|>' → logprob: -3.456325054168701
    5. '
' → logprob: -3.706325054168701
    6. 'for' → logprob: -4.081325054168701
    7. '\n' → logprob: -4.206325054168701
    8. '+
' → logprob: -5.081325054168701
    9. ')' → logprob: -5.831325054168701
    10. ' ' → logprob: -5.956325054168701

Token 90: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06688271462917328
    2. 'N' → logprob: -3.441882610321045
    3. '(' → logprob: -4.441882610321045
    4. ' ' → logprob: -4.816882610321045
    5. '3' → logprob: -5.191882610321045
    6. '(N' → logprob: -6.566882610321045
    7. ' N' → logprob: -6.566882610321045
    8. ' (' → logprob: -6.816882610321045
    9. '5' → logprob: -7.191882610321045
    10. 'X' → logprob: -7.316882610321045

Token 91: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0342317633330822
    2. '<|end|>' → logprob: -3.909231662750244
    3. '*' → logprob: -5.284231662750244
    4. '+
' → logprob: -6.159231662750244
    5. '
' → logprob: -6.409231662750244
    6. '\n' → logprob: -6.659231662750244
    7. ')' → logprob: -7.284231662750244
    8. ' ' → logprob: -7.409231662750244
    9. '-' → logprob: -7.534231662750244
    10. '```' → logprob: -8.284232139587402

Token 92: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22071115672588348
    2. ' for' → logprob: -1.9707111120224
    3. '\n' → logprob: -3.0957112312316895
    4. '+' → logprob: -4.7207112312316895
    5. '
' → logprob: -6.2207112312316895
    6. ')' → logprob: -7.7207112312316895
    7. '+
' → logprob: -7.7207112312316895
    8. ' 
' → logprob: -8.470710754394531
    9. ' ' → logprob: -8.595710754394531
    10. '-' → logprob: -8.595710754394531

Token 93: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0011908221058547497
    2. ' ' → logprob: -7.001190662384033
    3. 'i' → logprob: -8.751191139221191
    4. ' _' → logprob: -9.376191139221191
    5. '_' → logprob: -10.626191139221191
    6. '_i' → logprob: -12.376191139221191
    7. ' ' → logprob: -13.501191139221191
    8. '  ' → logprob: -13.626191139221191
    9. ' N' → logprob: -14.376191139221191
    10. '	i' → logprob: -14.626191139221191

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005915523506700993
    2. 'in' → logprob: -5.255915641784668
    3. ' ' → logprob: -7.505915641784668
    4. ',' → logprob: -9.380915641784668
    5. 'n' → logprob: -11.380915641784668
    6. '  ' → logprob: -11.880915641784668
    7. 'range' → logprob: -11.880915641784668
    8. 'k' → logprob: -12.505915641784668
    9. ' i' → logprob: -12.880915641784668
    10. ' ,' → logprob: -13.130915641784668

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00015062130114529282
    2. 'range' → logprob: -9.250150680541992
    3. ' ' → logprob: -10.000150680541992
    4. '  ' → logprob: -12.625150680541992
    5. '(range' → logprob: -13.375150680541992
    6. '	range' → logprob: -13.500150680541992
    7. ' xrange' → logprob: -13.625150680541992
    8. ' ran' → logprob: -14.625150680541992
    9. '   ' → logprob: -15.250150680541992
    10. ' ' → logprob: -15.500150680541992

Token 96: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036175278946757317
    2. '(N' → logprob: -5.628617763519287
    3. ' (' → logprob: -12.253617286682129
    4. '(n' → logprob: -12.378617286682129
    5. '1' → logprob: -12.753617286682129
    6. '(len' → logprob: -13.003617286682129
    7. '(k' → logprob: -13.753617286682129
    8. '(
' → logprob: -14.628617286682129
    9. '((' → logprob: -15.128617286682129
    10. ' ' → logprob: -15.253617286682129

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036717530339956284
    2. 'N' → logprob: -3.411717414855957
    3. '2' → logprob: -5.911717414855957
    4. '0' → logprob: -8.661717414855957
    5. '   ' → logprob: -9.286717414855957
    6. ' ' → logprob: -10.161717414855957
    7. '(' → logprob: -11.036717414855957
    8. ' N' → logprob: -11.036717414855957
    9. 'len' → logprob: -12.036717414855957
    10. '3' → logprob: -12.161717414855957

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019176900386810303
    2. ' ,' → logprob: -4.019176959991455
    3. ',N' → logprob: -6.894176959991455
    4. '(N' → logprob: -11.769176483154297
    5. ' N' → logprob: -13.019176483154297
    6. ',n' → logprob: -13.894176483154297
    7. 'N' → logprob: -14.144176483154297
    8. '(' → logprob: -14.519176483154297
    9. ',len' → logprob: -15.269176483154297
    10. ' (' → logprob: -16.644176483154297

Token 99: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00040528984391130507
    2. ' N' → logprob: -7.875405311584473
    3. '2' → logprob: -11.000405311584473
    4. '   ' → logprob: -12.750405311584473
    5. 'len' → logprob: -13.000405311584473
    6. '6' → logprob: -13.750405311584473
    7. ' ' → logprob: -14.750405311584473
    8. 'n' → logprob: -15.250405311584473
    9. 'k' → logprob: -15.250405311584473
    10. '7' → logprob: -15.375405311584473

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013813918456435204
    2. '):' → logprob: -4.6388139724731445
    3. ' +' → logprob: -5.6388139724731445
    4. '):
' → logprob: -7.6388139724731445
    5. '+k' → logprob: -12.013813972473145
    6. ')' → logprob: -13.388813972473145
    7. ' ):' → logprob: -13.763813972473145
    8. '+
' → logprob: -15.138813972473145
    9. '+n' → logprob: -15.138813972473145
    10. ':' → logprob: -15.138813972473145

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.625012397766113
    3. '):
' → logprob: -13.000012397766113
    4. '2' → logprob: -14.375012397766113
    5. '```' → logprob: -15.000012397766113
    6. '   ' → logprob: -15.500012397766113
    7. '
' → logprob: -16.62501335144043
    8. ')' → logprob: -16.75001335144043
    9. '):' → logprob: -16.87501335144043
    10. '+' → logprob: -17.25001335144043

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01442744955420494
    2. ':' → logprob: -4.264427661895752
    3. ')' → logprob: -8.889427185058594
    4. '):
' → logprob: -9.139427185058594
    5. ' ):' → logprob: -11.264427185058594
    6. '   ' → logprob: -13.389427185058594
    7. ',' → logprob: -13.889427185058594
    8. '():' → logprob: -14.764427185058594
    9. '+' → logprob: -14.889427185058594
    10. ':**' → logprob: -14.889427185058594

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3582058250904083
    2. '<|end|>' → logprob: -1.733205795288086
    3. ' ' → logprob: -2.483205795288086
    4. ':' → logprob: -4.858205795288086
    5. ' 
' → logprob: -4.858205795288086
    6. '    
' → logprob: -4.858205795288086
    7. ' ans' → logprob: -4.983205795288086
    8. '    ' → logprob: -5.608205795288086
    9. '  ' → logprob: -6.483205795288086
    10. '```' → logprob: -6.858205795288086

Token 104: ' now' (ID: 1954)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.023926030844449997
    2. ' 
' → logprob: -4.273926258087158
    3. '   ' → logprob: -6.148926258087158
    4. '<|end|>' → logprob: -6.148926258087158
    5. '
' → logprob: -6.773926258087158
    6. ' ' → logprob: -6.898926258087158
    7. '	ans' → logprob: -7.273926258087158
    8. '    
' → logprob: -7.648926258087158
    9. ' for' → logprob: -8.02392578125
    10. '```' → logprob: -8.02392578125

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38725313544273376
    2. '=' → logprob: -1.1372531652450562
    3. ' +=' → logprob: -8.512252807617188
    4. '_' → logprob: -10.012252807617188
    5. ' ' → logprob: -10.512252807617188
    6. '+=' → logprob: -10.762252807617188
    7. '＝' → logprob: -11.012252807617188
    8. ' *=' → logprob: -11.387252807617188
    9. ',' → logprob: -11.637252807617188
    10. ' ' → logprob: -11.887252807617188

Token 106: ' ' (ID: 220)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.919237494468689
    2. 'acc' → logprob: -1.669237494468689
    3. 'X' → logprob: -1.794237494468689
    4. ' X' → logprob: -2.2942376136779785
    5. ' ans' → logprob: -2.7942376136779785
    6. ' (' → logprob: -3.7942376136779785
    7. 'ans' → logprob: -3.9192376136779785
    8. '(acc' → logprob: -4.5442376136779785
    9. '(ans' → logprob: -4.7942376136779785
    10. '(X' → logprob: -5.1692376136779785

Token 107: '0' (ID: 15)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4683626592159271
    2. 'X' → logprob: -1.3433626890182495
    3. 'ans' → logprob: -3.21836256980896
    4. '(X' → logprob: -3.71836256980896
    5. '(acc' → logprob: -4.468362808227539
    6. ' acc' → logprob: -4.843362808227539
    7. '(' → logprob: -5.343362808227539
    8. 'G' → logprob: -5.593362808227539
    9. '2' → logprob: -5.593362808227539
    10. '(ans' → logprob: -5.593362808227539

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4371791183948517
    2. '<|end|>' → logprob: -1.1871790885925293
    3. ' for' → logprob: -3.4371790885925293
    4. 'for' → logprob: -4.812179088592529
    5. ' ' → logprob: -5.812179088592529
    6. '<|end|>' → logprob: -6.437179088592529
    7. ')' → logprob: -6.687179088592529
    8. '    ' → logprob: -7.062179088592529
    9. '+' → logprob: -7.187179088592529
    10. '    
' → logprob: -8.187179565429688

Token 109: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1457434892654419
    2. ' for' → logprob: -2.0207433700561523
    3. '   ' → logprob: -5.895743370056152
    4. ' now' → logprob: -9.145743370056152
    5. 'now' → logprob: -9.270743370056152
    6. '	for' → logprob: -10.645743370056152
    7. 'f' → logprob: -11.145743370056152
    8. ' ' → logprob: -11.270743370056152
    9. '    ' → logprob: -11.645743370056152
    10. '+' → logprob: -11.895743370056152

Token 111: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.500641405582428
    2. 'i' → logprob: -1.0006413459777832
    3. ' j' → logprob: -4.250641345977783
    4. 'j' → logprob: -4.625641345977783
    5. ' ' → logprob: -7.500641345977783
    6. 'm' → logprob: -9.063141822814941
    7. 'x' → logprob: -9.250641822814941
    8. ' d' → logprob: -9.250641822814941
    9. '   ' → logprob: -9.313141822814941
    10. ' m' → logprob: -9.313141822814941

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03370644152164459
    2. 'in' → logprob: -3.4087064266204834
    3. ' ' → logprob: -10.283706665039062
    4. '<|end|>' → logprob: -11.658706665039062
    5. '	in' → logprob: -12.533706665039062
    6. '    ' → logprob: -12.908706665039062
    7. 'range' → logprob: -13.033706665039062
    8. 'k' → logprob: -13.158706665039062
    9. '   ' → logprob: -13.408706665039062
    10. ' range' → logprob: -14.158706665039062

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008639034815132618
    2. ' range' → logprob: -4.758638858795166
    3. '(range' → logprob: -10.758639335632324
    4. '	range' → logprob: -13.133639335632324
    5. '   ' → logprob: -13.883639335632324
    6. ' ' → logprob: -15.508639335632324
    7. '(' → logprob: -17.258638381958008
    8. '1' → logprob: -17.758638381958008
    9. '  ' → logprob: -18.008638381958008
    10. '.range' → logprob: -18.383638381958008

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10030317306518555
    2. '(k' → logprob: -2.3503031730651855
    3. ' (' → logprob: -10.600303649902344
    4. '(N' → logprob: -10.600303649902344
    5. '(i' → logprob: -10.975303649902344
    6. '1' → logprob: -10.975303649902344
    7. 'k' → logprob: -12.475303649902344
    8. '(n' → logprob: -12.600303649902344
    9. ' k' → logprob: -13.600303649902344
    10. '((' → logprob: -13.975303649902344

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11404503881931305
    2. 'k' → logprob: -2.2390451431274414
    3. '   ' → logprob: -7.489045143127441
    4. '(' → logprob: -8.239045143127441
    5. ' ' → logprob: -8.864045143127441
    6. ' k' → logprob: -9.489045143127441
    7. '2' → logprob: -9.614045143127441
    8. 'N' → logprob: -9.864045143127441
    9. '(k' → logprob: -10.114045143127441
    10. '(N' → logprob: -12.614045143127441

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007989751175045967
    2. ',k' → logprob: -4.882989883422852
    3. ' ,' → logprob: -7.882989883422852
    4. '   ' → logprob: -12.757989883422852
    5. ',N' → logprob: -14.007989883422852
    6. 'k' → logprob: -14.132989883422852
    7. '(k' → logprob: -14.382989883422852
    8. ',n' → logprob: -14.757989883422852
    9. ' k' → logprob: -15.382989883422852
    10. '    ' → logprob: -15.757989883422852

Token 117: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029755808413028717
    2. ' k' → logprob: -3.5297558307647705
    3. 'N' → logprob: -12.529755592346191
    4. ' N' → logprob: -14.279755592346191
    5. '	k' → logprob: -14.779755592346191
    6. ' ' → logprob: -15.029755592346191
    7. '   ' → logprob: -15.529755592346191
    8. '{k' → logprob: -16.904756546020508
    9. ')' → logprob: -17.154756546020508
    10. '6' → logprob: -17.404756546020508

Token 118: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.637786231702194e-05
    2. ' +' → logprob: -9.625086784362793
    3. '+k' → logprob: -11.125086784362793
    4. '-' → logprob: -13.750086784362793
    5. '+
' → logprob: -14.000086784362793
    6. '[' → logprob: -14.000086784362793
    7. '):
' → logprob: -14.375086784362793
    8. '//' → logprob: -14.750086784362793
    9. '<|end|>' → logprob: -14.875086784362793
    10. '()+' → logprob: -15.375086784362793

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001093903905712068
    2. 'k' → logprob: -7.001093864440918
    3. '+' → logprob: -9.001093864440918
    4. '   ' → logprob: -10.626093864440918
    5. ' ' → logprob: -11.251093864440918
    6. '2' → logprob: -11.876093864440918
    7. '```' → logprob: -11.876093864440918
    8. ' k' → logprob: -12.626093864440918
    9. '+k' → logprob: -13.876093864440918
    10. '  ' → logprob: -14.001093864440918

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08944069594144821
    2. '):
' → logprob: -2.4644405841827393
    3. '+' → logprob: -8.58944034576416
    4. ':' → logprob: -8.58944034576416
    5. '   ' → logprob: -9.83944034576416
    6. '):
' → logprob: -10.46444034576416
    7. ',' → logprob: -11.33944034576416
    8. '       ' → logprob: -11.83944034576416
    9. '<|end|>' → logprob: -12.33944034576416
    10. '):

' → logprob: -12.58944034576416

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16843847930431366
    2. '<|end|>' → logprob: -1.91843843460083
    3. '   ' → logprob: -6.04343843460083
    4. '    ' → logprob: -6.16843843460083
    5. ' ' → logprob: -6.66843843460083
    6. ' now' → logprob: -7.04343843460083
    7. '<|end|>' → logprob: -7.79343843460083
    8. '        ' → logprob: -8.543438911437988
    9. ' i' → logprob: -8.793438911437988
    10. '```' → logprob: -9.043438911437988

Token 122: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.872403621673584
    2. ' now' → logprob: -0.872403621673584
    3. ' if' → logprob: -1.872403621673584
    4. '<|end|>' → logprob: -5.872403621673584
    5. 'now' → logprob: -6.372403621673584
    6. '   ' → logprob: -6.497403621673584
    7. '	now' → logprob: -6.872403621673584
    8. 'if' (adapté à ' if') → logprob: -7.372403621673584
    9. ' ' → logprob: -7.497403621673584
    10. '[now' → logprob: -7.622403621673584

Token 123: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1481749415397644
    2. 'i' → logprob: -2.273175001144409
    3. ' k' → logprob: -3.898175001144409
    4. 'k' → logprob: -4.27317476272583
    5. ' ' → logprob: -8.773175239562988
    6. '   ' → logprob: -8.898175239562988
    7. ' (' → logprob: -9.648175239562988
    8. ' G' → logprob: -10.273175239562988
    9. '    ' → logprob: -10.523175239562988
    10. '(i' → logprob: -10.648175239562988

Token 124: '*k' (ID: 81061)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4730614423751831
    2. ' <=' → logprob: -1.098061442375183
    3. '>=' → logprob: -3.7230615615844727
    4. ' >=' → logprob: -4.598061561584473
    5. '==' → logprob: -5.098061561584473
    6. ' ==' → logprob: -6.223061561584473
    7. '>' → logprob: -8.098061561584473
    8. '<' → logprob: -8.723061561584473
    9. ' >' → logprob: -9.098061561584473
    10. '   ' → logprob: -9.473061561584473

Token 125: ' <=' (ID: 5017)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4295558035373688
    2. '%' → logprob: -1.1795557737350464
    3. ' ==' → logprob: -4.179555892944336
    4. '==' → logprob: -4.429555892944336
    5. ' <=' → logprob: -5.179555892944336
    6. ' ' → logprob: -5.304555892944336
    7. '<=' → logprob: -6.679555892944336
    8. '<|end|>' → logprob: -7.179555892944336
    9. ' >=' → logprob: -7.679555892944336
    10. '%i' → logprob: -7.804555892944336

Token 126: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00045605594641529024
    2. ' N' → logprob: -7.875455856323242
    3. 'len' → logprob: -10.625455856323242
    4. '2' → logprob: -10.875455856323242
    5. '   ' → logprob: -11.125455856323242
    6. ' ' → logprob: -12.000455856323242
    7. 'i' → logprob: -12.250455856323242
    8. 'n' → logprob: -12.625455856323242
    9. '  ' → logprob: -13.625455856323242
    10. '    ' → logprob: -14.375455856323242

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25400274991989136
    2. ':
' → logprob: -1.5040028095245361
    3. ' and' → logprob: -6.379002571105957
    4. '       ' → logprob: -9.129002571105957
    5. '):
' → logprob: -9.629002571105957
    6. 'and' → logprob: -10.379002571105957
    7. '):' → logprob: -10.754002571105957
    8. '   ' → logprob: -11.004002571105957
    9. ':

' → logprob: -11.004002571105957
    10. '<|end|>' → logprob: -11.004002571105957

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5474133491516113
    2. ':' → logprob: -1.2974133491516113
    3. '       ' → logprob: -2.6724133491516113
    4. ' now' → logprob: -3.1724133491516113
    5. '<|end|>' → logprob: -4.547413349151611
    6. 'now' → logprob: -4.672413349151611
    7. ':
' → logprob: -5.047413349151611
    8. '[now' → logprob: -5.422413349151611
    9. '<|end|>' → logprob: -6.547413349151611
    10. '```' → logprob: -6.797413349151611

Token 129: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.5822656154632568
    2. 'now' (adapté à ' now') → logprob: -0.8322656154632568
    3. '	now' → logprob: -6.332265853881836
    4. '               ' → logprob: -6.457265853881836
    5. '[now' → logprob: -6.832265853881836
    6. '           ' → logprob: -7.457265853881836
    7. '
' → logprob: -7.582265853881836
    8. '```' → logprob: -8.457265853881836
    9. '<|end|>' → logprob: -9.582265853881836
    10. '       ' → logprob: -9.832265853881836

Token 130: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12707646191120148
    2. '+=' → logprob: -2.1270763874053955
    3. '+' → logprob: -9.752076148986816
    4. ']+=' → logprob: -10.377076148986816
    5. ' =' → logprob: -11.252076148986816
    6. '=' → logprob: -11.252076148986816
    7. ' -=' → logprob: -11.627076148986816
    8. '<|end|>' → logprob: -12.002076148986816
    9. '+=(' → logprob: -12.252076148986816
    10. '   ' → logprob: -12.877076148986816

Token 131: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.013060462661087513
    2. 'acc' → logprob: -4.888060569763184
    3. '(E' → logprob: -5.888060569763184
    4. '(' → logprob: -6.888060569763184
    5. 'G' → logprob: -7.263060569763184
    6. ' E' → logprob: -7.888060569763184
    7. '(acc' → logprob: -7.888060569763184
    8. '(G' → logprob: -9.638060569763184
    9. '   ' → logprob: -10.763060569763184
    10. ' acc' → logprob: -11.013060569763184

Token 132: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00024822709383443
    2. '(k' → logprob: -8.625247955322266
    3. '(' → logprob: -9.625247955322266
    4. 'i' → logprob: -14.000247955322266
    5. ' (' → logprob: -14.500247955322266
    6. '((' → logprob: -15.000247955322266
    7. '[i' → logprob: -15.125247955322266
    8. '(
' → logprob: -16.000247955322266
    9. '{i' → logprob: -16.250247955322266
    10. '```' → logprob: -16.500247955322266

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08779542148113251
    2. ',k' → logprob: -2.9627954959869385
    3. '(i' → logprob: -3.9627954959869385
    4. '(k' → logprob: -5.337795257568359
    5. '(' → logprob: -5.587795257568359
    6. 'k' → logprob: -5.837795257568359
    7. ',i' → logprob: -6.462795257568359
    8. ' ,' → logprob: -9.46279525756836
    9. '*k' → logprob: -10.08779525756836
    10. 'i' → logprob: -10.71279525756836

Token 134: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.3681608736515045
    2. 'G' → logprob: -1.3681608438491821
    3. ' acc' → logprob: -3.1181609630584717
    4. ' G' → logprob: -4.868160724639893
    5. '   ' → logprob: -7.618160724639893
    6. ' ' → logprob: -7.868160724639893
    7. '(acc' → logprob: -8.99316120147705
    8. '  ' → logprob: -9.24316120147705
    9. 'ac' → logprob: -9.49316120147705
    10. '1' → logprob: -9.61816120147705

Token 135: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.375001907348633
    3. '[i' → logprob: -14.750001907348633
    4. 'acc' → logprob: -14.750001907348633
    5. '(acc' → logprob: -15.375001907348633
    6. '(' → logprob: -16.000001907348633
    7. ')' → logprob: -16.500001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '(i' → logprob: -17.500001907348633
    10. ' G' → logprob: -17.500001907348633

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002883913984987885
    2. '[' → logprob: -8.750288009643555
    3. '[k' → logprob: -10.000288009643555
    4. '(i' → logprob: -10.125288009643555
    5. 'i' → logprob: -11.000288009643555
    6. '[(' → logprob: -11.125288009643555
    7. ' [' → logprob: -12.625288009643555
    8. '   ' → logprob: -13.000288009643555
    9. '[int' → logprob: -13.750288009643555
    10. ')' → logprob: -14.125288009643555

Token 137: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.03890595585107803
    2. 'k' → logprob: -3.2889058589935303
    3. '[k' → logprob: -8.03890609741211
    4. ' *' → logprob: -8.41390609741211
    5. '   ' → logprob: -9.66390609741211
    6. '(k' → logprob: -10.03890609741211
    7. ']' → logprob: -10.41390609741211
    8. '*' → logprob: -10.91390609741211
    9. '[' → logprob: -10.91390609741211
    10. ' ' → logprob: -11.28890609741211

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17582643032073975
    2. '])' → logprob: -2.3008265495300293
    3. '-' → logprob: -3.1758265495300293
    4. ']-' → logprob: -4.050826549530029
    5. '])-' → logprob: -7.675826549530029
    6. ' ]' → logprob: -8.050826072692871
    7. ' -' → logprob: -8.050826072692871
    8. '//' → logprob: -8.300826072692871
    9. '-k' → logprob: -8.800826072692871
    10. '   ' → logprob: -9.425826072692871

Token 139: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23231609165668488
    2. ' -' → logprob: -2.107316017150879
    3. ')' → logprob: -2.482316017150879
    4. '-)' → logprob: -7.232316017150879
    5. '[' → logprob: -7.607316017150879
    6. '-k' → logprob: -8.857316017150879
    7. '-E' → logprob: -9.107316017150879
    8. ' )' → logprob: -9.107316017150879
    9. '-X' → logprob: -9.357316017150879
    10. '   ' → logprob: -9.357316017150879

Token 140: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0009645807440392673
    2. ' acc' → logprob: -7.000964641571045
    3. '           ' → logprob: -10.375964164733887
    4. '   ' → logprob: -11.125964164733887
    5. '(acc' → logprob: -12.875964164733887
    6. '	acc' → logprob: -13.375964164733887
    7. ' ' → logprob: -13.875964164733887
    8. '               ' → logprob: -14.250964164733887
    9. '                   ' → logprob: -15.000964164733887
    10. '  ' → logprob: -15.125964164733887

Token 141: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. 'acc' → logprob: -16.75
    4. '[i' → logprob: -16.875
    5. '{' → logprob: -17.875
    6. ' G' → logprob: -18.25
    7. '   ' → logprob: -18.75
    8. 'user' → logprob: -19.625
    9. '(' → logprob: -19.75
    10. '       ' → logprob: -20.125

Token 142: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7606319785118103
    2. '[(' → logprob: -1.135632038116455
    3. '((' → logprob: -1.885632038116455
    4. '[i' → logprob: -3.010632038116455
    5. 'i' → logprob: -5.385632038116455
    6. ' (' → logprob: -5.760632038116455
    7. '   ' → logprob: -6.510632038116455
    8. '{i' → logprob: -7.510632038116455
    9. '(' → logprob: -8.635631561279297
    10. ' ' → logprob: -8.760631561279297

Token 143: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.025404643267393112
    2. ' (' → logprob: -3.775404691696167
    3. '   ' → logprob: -6.775404453277588
    4. 'i' → logprob: -7.150404453277588
    5. '(' → logprob: -9.650404930114746
    6. ' ' → logprob: -10.025404930114746
    7. '           ' → logprob: -10.400404930114746
    8. 'k' → logprob: -10.650404930114746
    9. '(k' → logprob: -11.150404930114746
    10. '               ' → logprob: -11.525404930114746

Token 144: '-' (ID: 12)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.13096487522125244
    2. '(i' → logprob: -2.755964756011963
    3. ' (' → logprob: -3.130964756011963
    4. 'k' → logprob: -5.005964756011963
    5. '   ' → logprob: -5.755964756011963
    6. '           ' → logprob: -6.505964756011963
    7. '       ' → logprob: -6.755964756011963
    8. '(' → logprob: -7.505964756011963
    9. '*(' → logprob: -7.755964756011963
    10. '{k' → logprob: -7.755964756011963

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004120073281228542
    2. 'k' → logprob: -5.629119873046875
    3. '   ' → logprob: -8.629119873046875
    4. ' ' → logprob: -9.129119873046875
    5. ')' → logprob: -9.629119873046875
    6. '<|end|>' → logprob: -9.754119873046875
    7. '*k' → logprob: -10.879119873046875
    8. '  ' → logprob: -11.629119873046875
    9. '0' → logprob: -11.754119873046875
    10. '(' → logprob: -11.754119873046875

Token 146: ')*' (ID: 11043)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.0004306692280806601
    2. '*i' → logprob: -8.375431060791016
    3. 'k' → logprob: -9.125431060791016
    4. ' *' → logprob: -10.125431060791016
    5. ')*' → logprob: -10.875431060791016
    6. '*' → logprob: -11.500431060791016
    7. ']*' → logprob: -11.625431060791016
    8. '][' → logprob: -13.000431060791016
    9. '   ' → logprob: -13.500431060791016
    10. '[k' → logprob: -13.625431060791016

Token 147: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.8087270038668066e-05
    2. 'kx' → logprob: -11.500027656555176
    3. '*k' → logprob: -11.750027656555176
    4. ' k' → logprob: -12.000027656555176
    5. '(' → logprob: -14.000027656555176
    6. '(k' → logprob: -14.125027656555176
    7. '{k' → logprob: -14.750027656555176
    8. '<|end|>' → logprob: -14.875027656555176
    9. '	k' → logprob: -15.375027656555176
    10. ')' → logprob: -15.375027656555176

Token 148: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0031210333108901978
    2. ')' → logprob: -6.2531208992004395
    3. ' ])' → logprob: -7.5031208992004395
    4. '])
' → logprob: -7.7531208992004395
    5. ')])' → logprob: -9.378121376037598
    6. ']' → logprob: -10.003121376037598
    7. '   ' → logprob: -11.503121376037598
    8. ')]' → logprob: -11.503121376037598
    9. ']))' → logprob: -11.753121376037598
    10. ' )' → logprob: -11.753121376037598

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0611426942050457
    2. ' else' → logprob: -4.061142921447754
    3. '<|end|>' → logprob: -4.811142921447754
    4. 'else' → logprob: -5.061142921447754
    5. '+' → logprob: -5.061142921447754
    6. 'print' → logprob: -5.436142921447754
    7. ')' → logprob: -5.561142921447754
    8. '    
' → logprob: -5.811142921447754
    9. '
' → logprob: -6.311142921447754
    10. '    ' → logprob: -6.561142921447754

Token 150: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.33305367827415466
    2. 'else' (adapté à ' else') → logprob: -1.458053708076477
    3. '   ' → logprob: -3.0830535888671875
    4. ' ' → logprob: -6.5830535888671875
    5. '\n' → logprob: -6.7080535888671875
    6. '	else' → logprob: -8.083053588867188
    7. '    ' → logprob: -8.208053588867188
    8. 'elif' → logprob: -8.208053588867188
    9. ' elif' → logprob: -8.458053588867188
    10. '+' → logprob: -8.833053588867188

Token 151: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7216200232505798
    2. ':' → logprob: -1.5966200828552246
    3. ':
' → logprob: -1.5966200828552246
    4. ' break' → logprob: -3.0966200828552246
    5. '       ' → logprob: -3.4716200828552246
    6. 'break' → logprob: -4.471620082855225
    7. ' now' → logprob: -4.846620082855225
    8. ' :
' → logprob: -5.221620082855225
    9. '   ' → logprob: -6.471620082855225
    10. ' ' → logprob: -6.596620082855225

Token 152: '           ' (ID: 352)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.14848388731479645
    2. '           ' → logprob: -2.773483991622925
    3. 'break' → logprob: -3.148483991622925
    4. '       ' → logprob: -4.148483753204346
    5. ' now' → logprob: -4.273483753204346
    6. '               ' → logprob: -6.898483753204346
    7. '   ' → logprob: -7.398483753204346
    8. ' ' → logprob: -8.023484230041504
    9. '	break' → logprob: -8.148484230041504
    10. '0' → logprob: -8.398484230041504

Token 153: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.2715437710285187
    2. ' now' → logprob: -1.5215437412261963
    3. 'break' → logprob: -4.146543979644775
    4. ' break' → logprob: -5.646543979644775
    5. '           ' → logprob: -11.146543502807617
    6. '(now' → logprob: -11.521543502807617
    7. '[now' → logprob: -11.521543502807617
    8. 'for' → logprob: -11.896543502807617
    9. ' ' → logprob: -12.271543502807617
    10. '   ' → logprob: -12.271543502807617

Token 154: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18003173172473907
    2. ' +=' → logprob: -1.8050317764282227
    3. '+' → logprob: -8.430031776428223
    4. '=' → logprob: -10.805031776428223
    5. '   ' → logprob: -10.805031776428223
    6. '    ' → logprob: -12.180031776428223
    7. ' -=' → logprob: -12.680031776428223
    8. ' ' → logprob: -12.930031776428223
    9. ']+=' → logprob: -13.055031776428223
    10. ' +' → logprob: -13.180031776428223

Token 155: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.13297471404075623
    2. '(' → logprob: -2.507974624633789
    3. ' E' → logprob: -3.257974624633789
    4. ' (' → logprob: -6.007974624633789
    5. '(E' → logprob: -7.382974624633789
    6. 'X' → logprob: -7.757974624633789
    7. '0' → logprob: -8.382974624633789
    8. '2' → logprob: -8.632974624633789
    9. 'G' → logprob: -8.757974624633789
    10. ' ' → logprob: -9.007974624633789

Token 156: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.3438327843905427e-05
    2. '(' → logprob: -10.75002384185791
    3. '(N' → logprob: -14.12502384185791
    4. 'i' → logprob: -14.25002384185791
    5. '(len' → logprob: -15.87502384185791
    6. '(n' → logprob: -16.375022888183594
    7. '(I' → logprob: -16.625022888183594
    8. '(k' → logprob: -16.625022888183594
    9. '((' → logprob: -17.000022888183594
    10. ' (' → logprob: -17.250022888183594

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004404124803841114
    2. '(' → logprob: -5.629404067993164
    3. ',(' → logprob: -7.629404067993164
    4. ' ,' → logprob: -9.754404067993164
    5. '1' → logprob: -9.879404067993164
    6. '(N' → logprob: -10.004404067993164
    7. '(i' → logprob: -10.254404067993164
    8. ',i' → logprob: -11.004404067993164
    9. ',x' → logprob: -11.004404067993164
    10. '((' → logprob: -11.129404067993164

Token 158: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2309013307094574
    2. ' acc' → logprob: -1.6059013605117798
    3. '(acc' → logprob: -5.23090124130249
    4. '   ' → logprob: -10.105901718139648
    5. ' (' → logprob: -10.230901718139648
    6. ' ' → logprob: -10.605901718139648
    7. '  ' → logprob: -12.480901718139648
    8. '	acc' → logprob: -12.855901718139648
    9. '(' → logprob: -12.980901718139648
    10. '           ' → logprob: -13.105901718139648

Token 159: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0012216555187478662
    2. 'N' → logprob: -7.376221656799316
    3. '[i' → logprob: -8.376221656799316
    4. 'i' → logprob: -8.751221656799316
    5. 'k' → logprob: -9.251221656799316
    6. '[k' → logprob: -10.626221656799316
    7. '   ' → logprob: -10.876221656799316
    8. '(i' → logprob: -11.251221656799316
    9. '[' → logprob: -11.376221656799316
    10. '       ' → logprob: -12.501221656799316

Token 160: '[-' (ID: 17503)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.03862326592206955
    2. '[-' → logprob: -3.288623332977295
    3. 'N' → logprob: -7.788623332977295
    4. '(N' → logprob: -9.788622856140137
    5. '[' → logprob: -10.038622856140137
    6. '[len' → logprob: -10.413622856140137
    7. 'len' → logprob: -11.538622856140137
    8. '[n' → logprob: -12.163622856140137
    9. '[i' → logprob: -12.538622856140137
    10. '
' → logprob: -12.788622856140137

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.750006675720215
    3. '2' → logprob: -13.812506675720215
    4. 'k' → logprob: -14.125006675720215
    5. '0' → logprob: -14.312506675720215
    6. '   ' → logprob: -14.937506675720215
    7. '```' → logprob: -15.437506675720215
    8. '(' → logprob: -15.625006675720215
    9. 'i' → logprob: -16.18750762939453
    10. 'N' → logprob: -16.43750762939453

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023249832447618246
    2. '])' → logprob: -6.377325057983398
    3. ' ]' → logprob: -8.127325057983398
    4. ']-' → logprob: -8.502325057983398
    5. ')' → logprob: -9.127325057983398
    6. ')]' → logprob: -12.627325057983398
    7. ']
' → logprob: -13.127325057983398
    8. ' ])' → logprob: -13.127325057983398
    9. '-' → logprob: -13.377325057983398
    10. '()]' → logprob: -13.627325057983398

Token 163: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002272296929731965
    2. ' )' → logprob: -6.502272129058838
    3. ')-' → logprob: -7.502272129058838
    4. '[' → logprob: -9.252272605895996
    5. ']' → logprob: -9.502272605895996
    6. '))' → logprob: -10.877272605895996
    7. '-' → logprob: -12.127272605895996
    8. '])' → logprob: -12.127272605895996
    9. ')
' → logprob: -12.502272605895996
    10. '[-' → logprob: -12.752272605895996

Token 164: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.023287402465939522
    2. ' acc' → logprob: -3.773287296295166
    3. '(acc' → logprob: -10.773287773132324
    4. '	acc' → logprob: -11.523287773132324
    5. '   ' → logprob: -12.398287773132324
    6. ' ' → logprob: -12.773287773132324
    7. '  ' → logprob: -13.898287773132324
    8. ' accu' → logprob: -14.273287773132324
    9. ''acc' → logprob: -14.648287773132324
    10. '       ' → logprob: -14.898287773132324

Token 165: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0002502535644453019
    2. '[-' → logprob: -8.750249862670898
    3. '[' → logprob: -9.625249862670898
    4. '[(' → logprob: -11.375249862670898
    5. '(' → logprob: -13.000249862670898
    6. '[[' → logprob: -13.812749862670898
    7. '
' → logprob: -13.812749862670898
    8. '[i' → logprob: -14.125249862670898
    9. '(-' → logprob: -14.375249862670898
    10. 'acc' → logprob: -14.437749862670898

Token 166: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05819302052259445
    2. '[i' → logprob: -3.4331929683685303
    3. '[k' → logprob: -4.183193206787109
    4. '[-' → logprob: -4.933193206787109
    5. '((' → logprob: -7.433193206787109
    6. '(i' → logprob: -7.683193206787109
    7. '[((' → logprob: -8.05819320678711
    8. '[' → logprob: -8.68319320678711
    9. '(k' → logprob: -8.80819320678711
    10. '[N' → logprob: -9.43319320678711

Token 167: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5376632809638977
    2. '(i' → logprob: -0.9126632809638977
    3. ' (' → logprob: -4.412663459777832
    4. '   ' → logprob: -6.787663459777832
    5. ' i' → logprob: -7.787663459777832
    6. '(k' → logprob: -8.412663459777832
    7. '(N' → logprob: -9.037663459777832
    8. ' ' → logprob: -9.412663459777832
    9. '       ' → logprob: -9.537663459777832
    10. '           ' → logprob: -9.662663459777832

Token 168: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16160458326339722
    2. '*k' → logprob: -1.911604642868042
    3. '-k' → logprob: -7.911604404449463
    4. 'k' → logprob: -8.286604881286621
    5. '*i' → logprob: -9.286604881286621
    6. '*(' → logprob: -9.286604881286621
    7. '#' → logprob: -9.536604881286621
    8. '-i' → logprob: -9.911604881286621
    9. '//' → logprob: -9.911604881286621
    10. '[-' → logprob: -10.161604881286621

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002798087371047586
    2. 'k' → logprob: -8.750279426574707
    3. '(' → logprob: -9.875279426574707
    4. 'i' → logprob: -10.625279426574707
    5. '(k' → logprob: -10.750279426574707
    6. ' ' → logprob: -11.625279426574707
    7. '(i' → logprob: -12.250279426574707
    8. '   ' → logprob: -13.000279426574707
    9. '```' → logprob: -13.750279426574707
    10. '           ' → logprob: -13.750279426574707

Token 170: ')*' (ID: 11043)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.01891373284161091
    2. ')*' → logprob: -4.018913745880127
    3. ']*' → logprob: -7.518913745880127
    4. 'k' → logprob: -9.018913269042969
    5. ')' → logprob: -9.518913269042969
    6. '[k' → logprob: -11.768913269042969
    7. '```' → logprob: -11.768913269042969
    8. ']' → logprob: -13.393913269042969
    9. '(k' → logprob: -13.518913269042969
    10. ''*' → logprob: -13.643913269042969

Token 171: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.438573680294212e-06
    2. ' k' → logprob: -13.125005722045898
    3. '(' → logprob: -14.125005722045898
    4. '```' → logprob: -14.125005722045898
    5. '*k' → logprob: -14.500005722045898
    6. '(k' → logprob: -15.375005722045898
    7. ']' → logprob: -15.625005722045898
    8. '[k' → logprob: -15.750005722045898
    9. '
' → logprob: -16.1250057220459
    10. '[' → logprob: -16.1250057220459

Token 172: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017904938431456685
    2. '])
' → logprob: -6.501790523529053
    3. ')' → logprob: -8.626790046691895
    4. ')])' → logprob: -9.501790046691895
    5. ']))' → logprob: -11.376790046691895
    6. '))' → logprob: -11.876790046691895
    7. ' ])' → logprob: -12.501790046691895
    8. ')]' → logprob: -13.001790046691895
    9. '])

' → logprob: -13.126790046691895
    10. '])
' → logprob: -13.376790046691895

Token 173: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0478123426437378
    2. 'if' → logprob: -1.9228123426437378
    3. ')
' → logprob: -2.0478124618530273
    4. ')' → logprob: -2.2978124618530273
    5. '
' → logprob: -2.2978124618530273
    6. '   ' → logprob: -3.0478124618530273
    7. ' 
' → logprob: -3.4228124618530273
    8. '    
' → logprob: -3.5478124618530273
    9. 'print' → logprob: -4.547812461853027
    10. ' ans' → logprob: -4.797812461853027

Token 174: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7558599710464478
    2. 'break' (adapté à ' break') → logprob: -1.1308599710464478
    3. '       ' → logprob: -1.8808599710464478
    4. '   ' → logprob: -3.380859851837158
    5. '           ' → logprob: -4.255859851837158
    6. '	break' → logprob: -5.130859851837158
    7. '               ' → logprob: -7.380859851837158
    8. '```' → logprob: -8.880860328674316
    9. ')' → logprob: -9.880860328674316
    10. '    
' → logprob: -10.255860328674316

Token 175: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30051717162132263
    2. '   ' → logprob: -1.675517201423645
    3. '    
' → logprob: -4.0505170822143555
    4. ')' → logprob: -4.3005170822143555
    5. ' ans' → logprob: -4.5505170822143555
    6. ' if' → logprob: -4.9255170822143555
    7. '+' → logprob: -5.0505170822143555
    8. ' 
' → logprob: -5.0505170822143555
    9. ')
' → logprob: -5.8005170822143555
    10. '  
' → logprob: -6.5505170822143555

Token 176: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6335644721984863
    2. '   ' → logprob: -2.2585644721984863
    3. '
' → logprob: -2.3835644721984863
    4. ' ans' → logprob: -2.6335644721984863
    5. ')' → logprob: -2.8835644721984863
    6. 'if' → logprob: -3.1335644721984863
    7. '    
' → logprob: -3.2585644721984863
    8. 'ans' → logprob: -4.133564472198486
    9. ' 
' → logprob: -4.133564472198486
    10. '  
' → logprob: -4.258564472198486

Token 177: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.9437099099159241
    2. 'if' → logprob: -1.0687098503112793
    3. ' if' → logprob: -1.5687098503112793
    4. ' ans' → logprob: -3.4437098503112793
    5. '   ' → logprob: -3.9437098503112793
    6. '
' → logprob: -5.443709850311279
    7. '+' → logprob: -7.568709850311279
    8. ' ' → logprob: -7.693709850311279
    9. '(ans' → logprob: -7.818709850311279
    10. '	ans' → logprob: -7.943709850311279

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09170375019311905
    2. '=' → logprob: -2.4667036533355713
    3. ' +=' → logprob: -6.46670389175415
    4. '+=' → logprob: -7.09170389175415
    5. ' -=' → logprob: -8.591703414916992
    6. '=max' → logprob: -9.091703414916992
    7. '-=' → logprob: -10.966703414916992
    8. '>' → logprob: -11.341703414916992
    9. '=min' → logprob: -11.466703414916992
    10. '   ' → logprob: -11.966703414916992

Token 179: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.31582799553871155
    2. ' max' → logprob: -1.3158279657363892
    3. 'min' → logprob: -6.4408278465271
    4. 'max' → logprob: -6.9408278465271
    5. ' ans' → logprob: -15.065828323364258
    6. '	min' → logprob: -17.315828323364258
    7. '(min' → logprob: -17.690828323364258
    8. '(max' → logprob: -17.940828323364258
    9. '	max' → logprob: -18.315828323364258
    10. ' ' → logprob: -18.315828323364258

Token 180: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.003177952254191041
    2. '(' → logprob: -5.753178119659424
    3. '(answer' → logprob: -16.253177642822266
    4. '(now' → logprob: -16.253177642822266
    5. '(
' → logprob: -16.378177642822266
    6. ' (' → logprob: -18.128177642822266
    7. 'ans' → logprob: -18.378177642822266
    8. '(an' → logprob: -18.878177642822266
    9. '(min' → logprob: -19.128177642822266
    10. '	ans' → logprob: -19.128177642822266

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006830069469287992
    2. ' ,' → logprob: -7.625682830810547
    3. '(now' → logprob: -8.625682830810547
    4. '(ans' → logprob: -11.750682830810547
    5. ' now' → logprob: -12.875682830810547
    6. '(' → logprob: -13.750682830810547
    7. '[now' → logprob: -13.750682830810547
    8. ',n' → logprob: -14.125682830810547
    9. ',
' → logprob: -14.125682830810547
    10. 'now' → logprob: -15.250682830810547

Token 182: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.3132738173007965
    2. 'now' → logprob: -1.3132737874984741
    3. '	now' → logprob: -12.063273429870605
    4. '[now' → logprob: -12.313273429870605
    5. '   ' → logprob: -14.438273429870605
    6. '_now' → logprob: -14.938273429870605
    7. 'nown' → logprob: -15.438273429870605
    8. '(now' → logprob: -15.563273429870605
    9. ' ' → logprob: -15.938273429870605
    10. '.now' → logprob: -16.563274383544922

Token 183: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001345592550933361
    2. ' )' → logprob: -7.251345634460449
    3. ')
' → logprob: -7.376345634460449
    4. '+' → logprob: -12.25134563446045
    5. ' )
' → logprob: -13.00134563446045
    6. '+)' → logprob: -14.75134563446045
    7. ')

' → logprob: -15.00134563446045
    8. ',)' → logprob: -15.25134563446045
    9. ')
' → logprob: -15.37634563446045
    10. '-)' → logprob: -15.62634563446045

Token 184: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.278824120759964
    2. ' X' → logprob: -1.5288240909576416
    3. 'G' → logprob: -4.903824329376221
    4. '2' → logprob: -5.653824329376221
    5. ' (' → logprob: -5.653824329376221
    6. '5' → logprob: -5.903824329376221
    7. 'k' → logprob: -5.903824329376221
    8. ' ' → logprob: -6.153824329376221
    9. ' G' → logprob: -6.528824329376221
    10. ' k' → logprob: -7.278824329376221

Token 185: 'N' (ID: 45)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.15745332837104797
    2. 'N' → logprob: -2.0324532985687256
    3. '2' → logprob: -4.782453536987305
    4. 'k' → logprob: -6.532453536987305
    5. '(X' → logprob: -6.532453536987305
    6. '5' → logprob: -6.657453536987305
    7. '(N' → logprob: -6.657453536987305
    8. ' X' → logprob: -8.282453536987305
    9. 'G' → logprob: -8.907453536987305
    10. '(k' → logprob: -9.282453536987305

Token 186: ' +' (ID: 659)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.12840907275676727
    2. ' -' → logprob: -2.5034091472625732
    3. '-' → logprob: -3.2534091472625732
    4. ' ' → logprob: -10.503409385681152
    5. '   ' → logprob: -11.128409385681152
    6. ')' → logprob: -12.253409385681152
    7. '*' → logprob: -12.253409385681152
    8. '  ' → logprob: -13.128409385681152
    9. '-i' → logprob: -14.128409385681152
    10. '-K' → logprob: -14.378409385681152

Token 187: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21738074719905853
    2. '1' → logprob: -1.7173807621002197
    3. 'X' → logprob: -5.342380523681641
    4. ' k' → logprob: -5.717380523681641
    5. '-k' → logprob: -5.717380523681641
    6. 'N' → logprob: -6.217380523681641
    7. '   ' → logprob: -7.467380523681641
    8. ' ' → logprob: -7.467380523681641
    9. '(k' → logprob: -8.34238052368164
    10. '2' → logprob: -8.59238052368164

Token 188: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3963667154312134
    2. ')*' → logprob: -1.1463667154312134
    3. '))' → logprob: -5.021366596221924
    4. ' )' → logprob: -6.396366596221924
    5. '-' → logprob: -7.896366596221924
    6. '*' → logprob: -8.146367073059082
    7. ')*(' → logprob: -8.646367073059082
    8. '+' → logprob: -9.271367073059082
    9. '*)' → logprob: -9.771367073059082
    10. ')))' → logprob: -10.146367073059082

Token 189: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.09372568130493164
    2. ' X' → logprob: -2.8437256813049316
    3. '2' → logprob: -3.8437256813049316
    4. '5' → logprob: -5.093725681304932
    5. ' ' → logprob: -6.843725681304932
    6. '(' → logprob: -6.968725681304932
    7. '(X' → logprob: -7.468725681304932
    8. ' (' → logprob: -7.843725681304932
    9. ')' → logprob: -8.593725204467773
    10. '6' → logprob: -9.093725204467773

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.794061770662665e-05
    2. ')
' → logprob: -9.37509822845459
    3. ' )' → logprob: -12.25009822845459
    4. '))' → logprob: -12.75009822845459
    5. '*)' → logprob: -13.75009822845459
    6. '())' → logprob: -14.25009822845459
    7. '*' → logprob: -14.50009822845459
    8. ')`' → logprob: -14.50009822845459
    9. '')' → logprob: -14.62509822845459
    10. '`)' → logprob: -14.62509822845459

Token 191: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003500050224829465
    2. ' print' → logprob: -8.125349998474121
    3. ')' → logprob: -10.000349998474121
    4. '
' → logprob: -12.250349998474121
    5. '<|end|>' → logprob: -13.125349998474121
    6. '```' → logprob: -14.500349998474121
    7. '(print' → logprob: -14.875349998474121
    8. '.print' → logprob: -15.500349998474121
    9. ')
' → logprob: -15.750349998474121
    10. '#print' → logprob: -16.250350952148438

Token 192: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.038063064217567444
    2. '(' → logprob: -3.2880630493164062
    3. 'ans' → logprob: -11.163063049316406
    4. '()' → logprob: -12.538063049316406
    5. '(
' → logprob: -13.663063049316406
    6. '(answer' → logprob: -13.788063049316406
    7. '('' → logprob: -14.788063049316406
    8. ' (' → logprob: -15.038063049316406
    9. '(abs' → logprob: -15.538063049316406
    10. '(

' → logprob: -16.038063049316406

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.25000286102295
    4. '))' → logprob: -15.00000286102295
    5. ')`' → logprob: -15.00000286102295
    6. '')' → logprob: -16.375003814697266
    7. ')}' → logprob: -17.250003814697266
    8. '`)' → logprob: -17.500003814697266
    9. '),' → logprob: -17.875003814697266
    10. '())' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 191
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 41.36%
Précision adaptée (1ère position): 42.93%
Précision (top 10): 81.68%
================================================================================
