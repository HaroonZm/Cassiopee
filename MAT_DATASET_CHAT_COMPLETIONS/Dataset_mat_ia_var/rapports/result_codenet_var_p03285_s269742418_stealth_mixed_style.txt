================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import exit as e
def yes(): print('Yes'); e()
def no(): print('No')
a = int(input())
i = 0
while i < 25:
    j = 0
    for _ in range(15):
        if not (a - (4 * i + 7 * j)):
            yes()
        j += 1
    i += 1
no()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' exit' (ID: 10654)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019259221851825714
    2. '.' → logprob: -4.769259452819824
    3. '\' → logprob: -5.894259452819824
    4. '\n' → logprob: -5.894259452819824
    5. '(
' → logprob: -6.394259452819824
    6. '
' → logprob: -7.519259452819824
    7. ',' → logprob: -7.644259452819824
    8. ':' → logprob: -7.644259452819824
    9. '\(' → logprob: -7.644259452819824
    10. '()' → logprob: -7.894259452819824

Token 5: ' e' (ID: 319)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.012315497733652592
    2. '_exit' → logprob: -5.387315273284912
    3. 'ex' → logprob: -5.512315273284912
    4. ' exit' → logprob: -6.262315273284912
    5. 'e' → logprob: -6.637315273284912
    6. 'Exit' → logprob: -8.26231575012207
    7. '`' → logprob: -10.01231575012207
    8. 'sys' → logprob: -10.38731575012207
    9. '_' → logprob: -11.01231575012207
    10. ' e' → logprob: -11.01231575012207

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7981457710266113
    2. 'x' → logprob: -1.1731457710266113
    3. '(' → logprob: -2.0481457710266113
    4. ',' → logprob: -2.5481457710266113
    5. '_' → logprob: -4.798145771026611
    6. 'n' → logprob: -5.423145771026611
    7. ';' → logprob: -5.548145771026611
    8. 'm' → logprob: -5.798145771026611
    9. ':' → logprob: -5.923145771026611
    10. '\' → logprob: -6.298145771026611

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4090721607208252
    2. '(' → logprob: -1.2840721607208252
    3. ',' → logprob: -3.909072160720825
    4. ':' → logprob: -4.409071922302246
    5. '\' → logprob: -5.159071922302246
    6. '' → logprob: -5.534071922302246
    7. '\n' → logprob: -5.534071922302246
    8. '()' → logprob: -5.659071922302246
    9. '
' → logprob: -6.409071922302246
    10. '#' → logprob: -7.159071922302246

Token 8: ' yes' (ID: 14531)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5996994972229004
    2. ' main' → logprob: -0.9746994972229004
    3. '_' → logprob: -2.9746994972229004
    4. ' f' → logprob: -4.7246994972229
    5. ' _' → logprob: -5.0996994972229
    6. ' exit' → logprob: -6.0996994972229
    7. ' func' → logprob: -6.8496994972229
    8. ' ' → logprob: -7.3496994972229
    9. ' foo' → logprob: -7.4746994972229
    10. ' test' → logprob: -7.7246994972229

Token 9: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1437211036682129
    2. '():' → logprob: -2.143721103668213
    3. ' (' → logprob: -5.643721103668213
    4. '_' → logprob: -5.768721103668213
    5. '(x' → logprob: -6.393721103668213
    6. '()' → logprob: -6.393721103668213
    7. ' ():' → logprob: -6.393721103668213
    8. '(s' → logprob: -7.268721103668213
    9. '(r' → logprob: -7.268721103668213
    10. 's' → logprob: -7.268721103668213

Token 10: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007698433008044958
    2. 'print' → logprob: -6.1326985359191895
    3. ' print' → logprob: -6.6326985359191895
    4. '    
' → logprob: -7.2576985359191895
    5. '	print' → logprob: -7.3826985359191895
    6. '<|end|>' → logprob: -7.6326985359191895
    7. ' return' → logprob: -7.7576985359191895
    8. '
' → logprob: -7.7576985359191895
    9. '\n' → logprob: -8.132698059082031
    10. '```' → logprob: -8.382698059082031

Token 11: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3864268660545349
    2. '()' → logprob: -1.6364269256591797
    3. '("' → logprob: -2.5114269256591797
    4. '('' → logprob: -3.1364269256591797
    5. '("")' → logprob: -7.51142692565918
    6. ' ()' → logprob: -8.88642692565918
    7. ' (' → logprob: -9.26142692565918
    8. ' ' → logprob: -9.51142692565918
    9. '("""' → logprob: -9.51142692565918
    10. '(True' → logprob: -9.63642692565918

Token 12: 'Yes' (ID: 13022)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.31073570251464844
    2. 'Yes' → logprob: -1.5607357025146484
    3. 'YES' → logprob: -3.4357357025146484
    4. 'y' → logprob: -4.685735702514648
    5. ' yes' → logprob: -4.935735702514648
    6. 'You' → logprob: -6.435735702514648
    7. 'Y' → logprob: -6.810735702514648
    8. ' Yes' → logprob: -7.435735702514648
    9. 'you' → logprob: -7.560735702514648
    10. 'ok' → logprob: -7.873235702514648

Token 13: '');' (ID: 10477)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00019626895664259791
    2. ')' → logprob: -9.00019645690918
    3. '!' → logprob: -9.87519645690918
    4. '')
' → logprob: -11.50019645690918
    5. '")' → logprob: -12.37519645690918
    6. ''' → logprob: -12.87519645690918
    7. '');' → logprob: -13.12519645690918
    8. '')
' → logprob: -14.00019645690918
    9. '\n' → logprob: -15.12519645690918
    10. '',' → logprob: -15.25019645690918

Token 14: ' e' (ID: 319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9448827505111694
    2. ' 
' → logprob: -1.8198827505111694
    3. '<|end|>' → logprob: -2.319882869720459
    4. 'e' → logprob: -2.694882869720459
    5. '
' → logprob: -3.069882869720459
    6. '\n' → logprob: -3.319882869720459
    7. ' yes' → logprob: -3.444882869720459
    8. ')' → logprob: -3.444882869720459
    9. '  
' → logprob: -3.569882869720459
    10. ' e' → logprob: -3.819882869720459

Token 15: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043223895132541656
    2. '(' → logprob: -3.1682238578796387
    3. '()(' → logprob: -9.043224334716797
    4. '()`' → logprob: -10.418224334716797
    5. ' ()' → logprob: -10.793224334716797
    6. '()
' → logprob: -11.168224334716797
    7. '();' → logprob: -11.668224334716797
    8. '()\' → logprob: -12.043224334716797
    9. '```' → logprob: -12.168224334716797
    10. '())' → logprob: -12.543224334716797

Token 16: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49499520659446716
    2. '()' → logprob: -1.7449952363967896
    3. '<|end|>' → logprob: -1.9949952363967896
    4. '
' → logprob: -4.1199951171875
    5. ')' → logprob: -4.2449951171875
    6. ' ' → logprob: -4.2449951171875
    7. '()
' → logprob: -4.9949951171875
    8. '(
' → logprob: -5.3699951171875
    9. '  
' → logprob: -5.6199951171875
    10. '\' → logprob: -5.6199951171875

Token 17: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.011567858047783375
    2. 'no' → logprob: -4.511568069458008
    3. ' ' → logprob: -8.386568069458008
    4. ' main' → logprob: -9.136568069458008
    5. ' n' → logprob: -10.261568069458008
    6. ' not' → logprob: -10.386568069458008
    7. '	no' → logprob: -10.511568069458008
    8. '_no' → logprob: -11.511568069458008
    9. ' yes' → logprob: -11.511568069458008
    10. 'o' → logprob: -11.761568069458008

Token 18: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004988207365386188
    2. '()' → logprob: -8.37549877166748
    3. ' ():' → logprob: -8.62549877166748
    4. ':' → logprob: -9.37549877166748
    5. '(':' → logprob: -13.75049877166748
    6. '():
' → logprob: -13.87549877166748
    7. '('' → logprob: -14.50049877166748
    8. ' ()' → logprob: -14.62549877166748
    9. ' :' → logprob: -15.62549877166748
    10. '(' → logprob: -15.87549877166748

Token 19: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0013685694430023432
    2. 'print' → logprob: -6.751368522644043
    3. ' ' → logprob: -9.501368522644043
    4. ' pass' → logprob: -9.876368522644043
    5. '    ' → logprob: -10.626368522644043
    6. '	print' → logprob: -10.751368522644043
    7. '   ' → logprob: -12.001368522644043
    8. '```' → logprob: -12.501368522644043
    9. ' ' → logprob: -12.626368522644043
    10. ' ()' → logprob: -12.876368522644043

Token 20: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10021582990884781
    2. '(' → logprob: -2.3502159118652344
    3. '("' → logprob: -12.350215911865234
    4. '()' → logprob: -13.600215911865234
    5. '(False' → logprob: -14.100215911865234
    6. '(\'' → logprob: -14.100215911865234
    7. '('(' → logprob: -14.850215911865234
    8. '(

' → logprob: -15.100215911865234
    9. '(`' → logprob: -15.100215911865234
    10. ' ('' → logprob: -15.225215911865234

Token 21: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16146379709243774
    2. 'No' → logprob: -1.911463737487793
    3. '('' → logprob: -7.036463737487793
    4. '"No' → logprob: -8.661463737487793
    5. '(No' → logprob: -9.661463737487793
    6. '')' → logprob: -10.786463737487793
    7. 'NO' → logprob: -10.911463737487793
    8. 'no' → logprob: -11.661463737487793
    9. '`' → logprob: -12.036463737487793
    10. '```' → logprob: -12.036463737487793

Token 22: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.007959708571434021
    2. '');' → logprob: -4.882959842681885
    3. ')' → logprob: -8.132959365844727
    4. '()' → logprob: -10.132959365844727
    5. ''' → logprob: -12.007959365844727
    6. '")' → logprob: -12.382959365844727
    7. '')
' → logprob: -12.507959365844727
    8. '('' → logprob: -12.757959365844727
    9. '')
' → logprob: -14.132959365844727
    10. '')

' → logprob: -14.882959365844727

Token 23: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12894614040851593
    2. '()' → logprob: -2.37894606590271
    3. ':' → logprob: -4.503946304321289
    4. '(
' → logprob: -5.628946304321289
    5. '<|end|>' → logprob: -5.628946304321289
    6. 'def' → logprob: -5.753946304321289
    7. ')' → logprob: -6.628946304321289
    8. '():' → logprob: -7.128946304321289
    9. '()
' → logprob: -7.378946304321289
    10. '(n' → logprob: -7.503946304321289

Token 24: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.6022849082946777
    2. '=' → logprob: -1.7272849082946777
    3. 'b' → logprob: -2.1022849082946777
    4. ' =' → logprob: -2.4772849082946777
    5. 'rg' → logprob: -2.6022849082946777
    6. '==' → logprob: -2.9772849082946777
    7. ' ' → logprob: -2.9772849082946777
    8. ' ==' → logprob: -2.9772849082946777
    9. 's' → logprob: -3.3522849082946777
    10. '()' → logprob: -3.6022849082946777

Token 25: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7887223958969116
    2. 'input' → logprob: -1.4137223958969116
    3. ' int' → logprob: -1.6637223958969116
    4. 'int' → logprob: -2.413722515106201
    5. ' ' → logprob: -5.163722515106201
    6. ''' → logprob: -5.663722515106201
    7. ' '' → logprob: -5.788722515106201
    8. '[int' → logprob: -6.913722515106201
    9. '1' → logprob: -7.038722515106201
    10. ' list' → logprob: -7.038722515106201

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16032658517360687
    2. '(' → logprob: -1.910326600074768
    3. 'input' → logprob: -9.410326957702637
    4. '('' → logprob: -12.285326957702637
    5. ' (' → logprob: -12.785326957702637
    6. '(a' → logprob: -12.785326957702637
    7. '(int' → logprob: -13.285326957702637
    8. '(raw' → logprob: -13.535326957702637
    9. ' input' → logprob: -13.910326957702637
    10. '(in' → logprob: -14.285326957702637

Token 27: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.582516074180603
    2. '())' → logprob: -1.082516074180603
    3. '(' → logprob: -2.4575161933898926
    4. '('' → logprob: -4.207516193389893
    5. '()))' → logprob: -7.707516193389893
    6. '()>' → logprob: -8.082515716552734
    7. '(()' → logprob: -8.207515716552734
    8. '());' → logprob: -8.707515716552734
    9. '("("' → logprob: -8.832515716552734
    10. '(),' → logprob: -8.957515716552734

Token 28: 'i' (ID: 72)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6130521297454834
    2. '>' → logprob: -1.8630521297454834
    3. '<|end|>' → logprob: -2.2380521297454834
    4. '(' → logprob: -2.8630521297454834
    5. '+' → logprob: -3.8630521297454834
    6. ' ' → logprob: -3.9880521297454834
    7. '*' → logprob: -4.1130523681640625
    8. '
' → logprob: -4.3630523681640625
    9. ':' → logprob: -4.3630523681640625
    10. 'if' → logprob: -4.4880523681640625

Token 29: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.976922744186595e-05
    2. 'n' → logprob: -11.250040054321289
    3. ' f' → logprob: -11.625040054321289
    4. '=' → logprob: -12.000040054321289
    5. '```' → logprob: -12.875040054321289
    6. ' ' → logprob: -13.625040054321289
    7. 'ф' → logprob: -14.000040054321289
    8. '%' → logprob: -14.250040054321289
    9. ' =' → logprob: -14.375040054321289
    10. 'm' → logprob: -14.625040054321289

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6836824417114258
    2. '0' → logprob: -1.4336824417114258
    3. '1' → logprob: -1.5586824417114258
    4. '2' → logprob: -3.683682441711426
    5. ' a' → logprob: -4.183682441711426
    6. 'a' → logprob: -5.558682441711426
    7. '10' → logprob: -7.683682441711426
    8. '3' → logprob: -7.808682441711426
    9. '100' → logprob: -8.183682441711426
    10. '5' → logprob: -8.558682441711426

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6153903007507324
    2. '1' → logprob: -1.3653903007507324
    3. 'a' → logprob: -1.7403903007507324
    4. '2' → logprob: -3.9903903007507324
    5. 'int' → logprob: -5.740390300750732
    6. '100' → logprob: -6.490390300750732
    7. '10' → logprob: -6.740390300750732
    8. '3' → logprob: -7.115390300750732
    9. '5' → logprob: -7.490390300750732
    10. '-' → logprob: -7.740390300750732

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6448203921318054
    2. ' while' → logprob: -0.8948203921318054
    3. '\n' → logprob: -3.89482045173645
    4. '\' → logprob: -4.144820213317871
    5. '<|end|>' → logprob: -4.394820213317871
    6. '
' → logprob: -5.644820213317871
    7. ' 
' → logprob: -5.769820213317871
    8. '```' → logprob: -5.894820213317871
    9. ' ' → logprob: -6.144820213317871
    10. ')' → logprob: -7.019820213317871

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009786196984350681
    2. ' a' → logprob: -5.259786128997803
    3. 'i' → logprob: -6.009786128997803
    4. ' ' → logprob: -6.259786128997803
    5. 'a' → logprob: -8.759786605834961
    6. ' True' → logprob: -12.259786605834961
    7. ' ' → logprob: -12.509786605834961
    8. '(i' → logprob: -13.384786605834961
    9. '	i' → logprob: -13.509786605834961
    10. ' (' → logprob: -13.884786605834961

Token 35: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3139860928058624
    2. '<' → logprob: -1.31398606300354
    3. ' <=' → logprob: -7.438986301422119
    4. '<=' → logprob: -9.188985824584961
    5. ' ' → logprob: -10.688985824584961
    6. '<len' → logprob: -12.313985824584961
    7. '<n' → logprob: -13.188985824584961
    8. '<num' → logprob: -14.313985824584961
    9. 'a' → logprob: -14.313985824584961
    10. '<size' → logprob: -14.813985824584961

Token 36: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6935513019561768
    2. ' a' → logprob: -0.6935513019561768
    3. ' ' → logprob: -7.943551063537598
    4. '10' → logprob: -11.193551063537598
    5. '1' → logprob: -12.443551063537598
    6. '100' → logprob: -12.568551063537598
    7. '	a' → logprob: -12.568551063537598
    8. '4' → logprob: -12.818551063537598
    9. '20' → logprob: -12.943551063537598
    10. '6' → logprob: -13.318551063537598

Token 37: '25' (ID: 1161)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010810455307364464
    2. ' a' → logprob: -4.635810375213623
    3. '10' → logprob: -7.635810375213623
    4. '3' → logprob: -9.135810852050781
    5. '5' → logprob: -9.135810852050781
    6. '100' → logprob: -9.260810852050781
    7. ' ' → logprob: -9.885810852050781
    8. '2' → logprob: -10.260810852050781
    9. '6' → logprob: -10.385810852050781
    10. '1' → logprob: -10.510810852050781

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027800898998975754
    2. ' :' → logprob: -3.6528007984161377
    3. ':
' → logprob: -7.152801036834717
    4. '+:' → logprob: -7.902801036834717
    5. ' :
' → logprob: -8.777800559997559
    6. '+' → logprob: -8.777800559997559
    7. ':**' → logprob: -12.277800559997559
    8. '**' → logprob: -12.402800559997559
    9. '):' → logprob: -12.777800559997559
    10. '*' → logprob: -12.777800559997559

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3176172971725464
    2. '<|end|>' → logprob: -1.6926172971725464
    3. '    ' → logprob: -3.817617416381836
    4. '   ' → logprob: -3.942617416381836
    5. ':' → logprob: -4.442617416381836
    6. ' i' → logprob: -4.567617416381836
    7. ' 
' → logprob: -4.817617416381836
    8. ' if' → logprob: -5.442617416381836
    9. 'i' → logprob: -6.067617416381836
    10. 'a' → logprob: -6.317617416381836

Token 40: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7933970093727112
    2. ' ' → logprob: -1.1683969497680664
    3. ' a' → logprob: -2.1683969497680664
    4. ' 
' → logprob: -3.2933969497680664
    5. '    ' → logprob: -3.5433969497680664
    6. ' if' → logprob: -4.043396949768066
    7. 'a' → logprob: -4.168396949768066
    8. '   ' → logprob: -5.043396949768066
    9. '     
' → logprob: -5.043396949768066
    10. 'i' → logprob: -5.793396949768066

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007637747563421726
    2. '=' → logprob: -5.257637977600098
    3. ' +=' → logprob: -6.632637977600098
    4. ' ' → logprob: -7.132637977600098
    5. '   ' → logprob: -10.007637977600098
    6. '<|end|>' → logprob: -10.007637977600098
    7. ')' → logprob: -10.757637977600098
    8. ' ==' → logprob: -10.757637977600098
    9. ' in' → logprob: -10.882637977600098
    10. '    ' → logprob: -10.882637977600098

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12497540563344955
    2. 'i' → logprob: -3.1249754428863525
    3. ' ' → logprob: -3.3749754428863525
    4. ' i' → logprob: -4.249975204467773
    5. '25' → logprob: -4.624975204467773
    6. '1' → logprob: -5.374975204467773
    7. 'a' → logprob: -5.874975204467773
    8. 'int' → logprob: -6.374975204467773
    9. '10' → logprob: -6.749975204467773
    10. '5' → logprob: -6.749975204467773

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06943231076002121
    2. 'i' → logprob: -3.319432258605957
    3. '1' → logprob: -4.819432258605957
    4. '25' → logprob: -5.069432258605957
    5. 'a' → logprob: -5.444432258605957
    6. '2' → logprob: -6.069432258605957
    7. 'int' → logprob: -6.069432258605957
    8. '5' → logprob: -6.819432258605957
    9. '10' → logprob: -6.944432258605957
    10. ' ' → logprob: -6.944432258605957

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13586384057998657
    2. '<|end|>' → logprob: -2.135863780975342
    3. '   ' → logprob: -5.260863780975342
    4. ' while' → logprob: -6.635863780975342
    5. '  ' → logprob: -7.010863780975342
    6. '    ' → logprob: -7.510863780975342
    7. '<|end|>' → logprob: -7.635863780975342
    8. 'while' → logprob: -9.1358642578125
    9. ' 
' → logprob: -9.5108642578125
    10. ' ,' → logprob: -10.1358642578125

Token 47: ' _' (ID: 1175)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1065356433391571
    2. ' ' → logprob: -2.6065356731414795
    3. ' range' → logprob: -3.7315356731414795
    4. 'j' → logprob: -6.6065354347229
    5. ' in' → logprob: -7.1065354347229
    6. 'range' → logprob: -7.6065354347229
    7. '    ' → logprob: -8.106535911560059
    8. ' _' → logprob: -9.106535911560059
    9. '_' → logprob: -10.481535911560059
    10. ''' → logprob: -10.606535911560059

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07015039026737213
    2. 'in' → logprob: -2.695150375366211
    3. ' ' → logprob: -8.695150375366211
    4. '    ' → logprob: -10.820150375366211
    5. '   ' → logprob: -12.195150375366211
    6. '	in' → logprob: -12.445150375366211
    7. '_' → logprob: -12.945150375366211
    8. '  ' → logprob: -13.070150375366211
    9. 'range' → logprob: -13.570150375366211
    10. 'j' → logprob: -14.070150375366211

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2521997094154358
    2. 'range' → logprob: -1.502199649810791
    3. '[' → logprob: -9.00220012664795
    4. ' ' → logprob: -10.00220012664795
    5. '	range' → logprob: -10.87720012664795
    6. '(range' → logprob: -11.62720012664795
    7. '_' → logprob: -11.87720012664795
    8. ' xrange' → logprob: -12.00220012664795
    9. ' [' → logprob: -12.12720012664795
    10. ''' → logprob: -12.12720012664795

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011328381486237049
    2. '(a' → logprob: -4.636328220367432
    3. '(i' → logprob: -6.761328220367432
    4. ' (' → logprob: -8.13632869720459
    5. '25' → logprob: -11.01132869720459
    6. '(j' → logprob: -11.01132869720459
    7. ' ' → logprob: -11.63632869720459
    8. 'a' → logprob: -11.63632869720459
    9. '(s' → logprob: -11.76132869720459
    10. '(n' → logprob: -11.88632869720459

Token 51: '15' (ID: 1055)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.985280454158783
    2. '25' → logprob: -0.985280454158783
    3. 'a' → logprob: -2.6102805137634277
    4. '10' → logprob: -3.1102805137634277
    5. '26' → logprob: -3.8602805137634277
    6. '4' → logprob: -3.8602805137634277
    7. 'i' → logprob: -3.9852805137634277
    8. '9' → logprob: -4.485280513763428
    9. '3' → logprob: -4.485280513763428
    10. '100' → logprob: -4.985280513763428

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02942725084722042
    2. ')' → logprob: -4.2794270515441895
    3. ' ):' → logprob: -4.6544270515441895
    4. '):
' → logprob: -5.9044270515441895
    5. '   ' → logprob: -6.1544270515441895
    6. ' )' → logprob: -7.9044270515441895
    7. '+' → logprob: -8.529427528381348
    8. ':' → logprob: -9.654427528381348
    9. ' ):
' → logprob: -10.279427528381348
    10. '       ' → logprob: -10.404427528381348

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49694907665252686
    2. ' ' → logprob: -1.2469490766525269
    3. '    ' → logprob: -3.1219491958618164
    4. '<|end|>' → logprob: -3.1219491958618164
    5. '        ' → logprob: -5.371949195861816
    6. '   ' → logprob: -5.746949195861816
    7. ' if' → logprob: -5.871949195861816
    8. '_' → logprob: -7.371949195861816
    9. ',' → logprob: -7.621949195861816
    10. 'if' → logprob: -7.746949195861816

Token 54: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12816748023033142
    2. ' if' → logprob: -2.5031673908233643
    3. ' print' → logprob: -4.378167629241943
    4. 'print' → logprob: -4.878167629241943
    5. 'if' (adapté à ' if') → logprob: -5.378167629241943
    6. '        ' → logprob: -5.503167629241943
    7. '    ' → logprob: -6.128167629241943
    8. '       ' → logprob: -7.003167629241943
    9. ' pass' → logprob: -7.128167629241943
    10. ' a' → logprob: -7.128167629241943

Token 55: ' not' (ID: 625)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6542809009552002
    2. ' (' → logprob: -1.5292809009552002
    3. 'a' → logprob: -2.1542809009552
    4. ' i' → logprob: -2.2792809009552
    5. ' ' → logprob: -4.654280662536621
    6. 'i' → logprob: -4.904280662536621
    7. ' j' → logprob: -5.029280662536621
    8. '(a' → logprob: -5.029280662536621
    9. '(' → logprob: -5.154280662536621
    10. '(i' → logprob: -5.779280662536621

Token 56: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1388386487960815
    2. ' a' → logprob: -1.2638386487960815
    3. 'a' → logprob: -2.013838768005371
    4. ' i' → logprob: -2.638838768005371
    5. ' j' → logprob: -2.638838768005371
    6. '(a' → logprob: -3.388838768005371
    7. '(i' → logprob: -3.763838768005371
    8. 'j' → logprob: -3.888838768005371
    9. 'i' → logprob: -4.263838768005371
    10. '(' → logprob: -4.263838768005371

Token 57: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.357280433177948
    2. '(a' → logprob: -2.3572804927825928
    3. ' a' → logprob: -2.9822804927825928
    4. ' (' → logprob: -3.2322804927825928
    5. 'i' → logprob: -3.4822804927825928
    6. '(' → logprob: -3.6072804927825928
    7. '(i' → logprob: -3.6072804927825928
    8. ' i' → logprob: -4.982280254364014
    9. 'j' → logprob: -5.107280254364014
    10. '((' → logprob: -5.232280254364014

Token 58: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1798607110977173
    2. ' %' → logprob: -1.1798607110977173
    3. ' &' → logprob: -1.4298607110977173
    4. '>>' → logprob: -3.3048605918884277
    5. ' >>' → logprob: -3.3048605918884277
    6. '&' → logprob: -3.9298605918884277
    7. '+' → logprob: -4.304860591888428
    8. ' +' → logprob: -4.679860591888428
    9. '*' → logprob: -5.429860591888428
    10. '-' → logprob: -5.804860591888428

Token 59: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6955897212028503
    2. ' i' → logprob: -1.5705897808074951
    3. '1' → logprob: -2.695589780807495
    4. 'j' → logprob: -2.820589780807495
    5. ' ' → logprob: -3.070589780807495
    6. '2' → logprob: -3.820589780807495
    7. ' (' → logprob: -3.945589780807495
    8. ' j' → logprob: -4.320589542388916
    9. '25' → logprob: -4.695589542388916
    10. '(i' → logprob: -4.945589542388916

Token 60: '4' (ID: 19)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1278931051492691
    2. 'j' → logprob: -3.6278932094573975
    3. '2' → logprob: -4.002892971038818
    4. '5' → logprob: -4.627892971038818
    5. '10' → logprob: -4.627892971038818
    6. '25' → logprob: -4.877892971038818
    7. '1' → logprob: -5.002892971038818
    8. '3' → logprob: -5.252892971038818
    9. '(' → logprob: -5.252892971038818
    10. '(i' → logprob: -5.252892971038818

Token 61: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3590916097164154
    2. '*' → logprob: -2.3590915203094482
    3. ' *' → logprob: -2.6090915203094482
    4. '**' → logprob: -2.7340915203094482
    5. '*j' → logprob: -2.8590915203094482
    6. ' **' → logprob: -5.484091758728027
    7. '+' → logprob: -6.859091758728027
    8. ' +' → logprob: -6.984091758728027
    9. ' ' → logprob: -7.109091758728027
    10. '<<' → logprob: -7.234091758728027

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043179482221603394
    2. ' i' → logprob: -3.918179512023926
    3. 'j' → logprob: -4.168179512023926
    4. '(i' → logprob: -5.793179512023926
    5. ' (' → logprob: -6.668179512023926
    6. '(' → logprob: -6.793179512023926
    7. ' j' → logprob: -8.043179512023926
    8. ' ' → logprob: -9.043179512023926
    9. '5' → logprob: -9.293179512023926
    10. '2' → logprob: -9.293179512023926

Token 63: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4501813054084778
    2. ')' → logprob: -1.700181245803833
    3. '+' → logprob: -1.950181245803833
    4. ' -' → logprob: -4.075181484222412
    5. ' )' → logprob: -4.700181484222412
    6. '-' → logprob: -6.075181484222412
    7. '+j' → logprob: -6.075181484222412
    8. '))' → logprob: -6.200181484222412
    9. ' ' → logprob: -6.450181484222412
    10. '*' → logprob: -7.575181484222412

Token 64: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19944031536579132
    2. ' j' → logprob: -1.949440360069275
    3. '3' → logprob: -3.6994402408599854
    4. '2' → logprob: -5.4494404792785645
    5. ' ' → logprob: -5.8244404792785645
    6. '7' → logprob: -6.4494404792785645
    7. '1' → logprob: -6.6994404792785645
    8. '5' → logprob: -6.6994404792785645
    9. '   ' → logprob: -7.0744404792785645
    10. ')' → logprob: -7.4494404792785645

Token 65: '7' (ID: 22)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0356915257871151
    2. ' j' → logprob: -3.660691499710083
    3. '3' → logprob: -5.535691738128662
    4. '_j' → logprob: -6.410691738128662
    5. '1' → logprob: -7.035691738128662
    6. '2' → logprob: -7.160691738128662
    7. ' ' → logprob: -7.785691738128662
    8. '_' → logprob: -7.910691738128662
    9. '7' → logprob: -8.035691261291504
    10. '5' → logprob: -8.285691261291504

Token 66: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6888758540153503
    2. ' *' → logprob: -1.6888759136199951
    3. '*j' → logprob: -2.063875913619995
    4. ')' → logprob: -2.188875913619995
    5. 'j' → logprob: -2.688875913619995
    6. ' j' → logprob: -5.813875675201416
    7. ')*' → logprob: -7.313875675201416
    8. ' )' → logprob: -7.563875675201416
    9. '   ' → logprob: -7.688875675201416
    10. '+' → logprob: -7.688875675201416

Token 67: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009796937927603722
    2. ' j' → logprob: -4.634797096252441
    3. '   ' → logprob: -10.884797096252441
    4. ' ' → logprob: -11.634797096252441
    5. ')' → logprob: -12.634797096252441
    6. '	j' → logprob: -13.134797096252441
    7. '_j' → logprob: -13.509797096252441
    8. '  ' → logprob: -13.634797096252441
    9. '(j' → logprob: -13.884797096252441
    10. '    ' → logprob: -13.884797096252441

Token 68: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028975604102015495
    2. '))' → logprob: -4.153975486755371
    3. ' )' → logprob: -4.528975486755371
    4. ')>=' → logprob: -7.153975486755371
    5. ' ))' → logprob: -8.153975486755371
    6. ')<=' → logprob: -8.403975486755371
    7. ' ' → logprob: -8.653975486755371
    8. ')>' → logprob: -9.028975486755371
    9. '>' → logprob: -9.653975486755371
    10. '>=' → logprob: -9.653975486755371

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7777040004730225
    2. '            ' → logprob: -1.6527040004730225
    3. ':' → logprob: -2.2777040004730225
    4. '):' → logprob: -2.4027040004730225
    5. ' or' → logprob: -3.1527040004730225
    6. ' ' → logprob: -3.1527040004730225
    7. ' :' → logprob: -3.9027040004730225
    8. ')' → logprob: -4.277704238891602
    9. ' ):' → logprob: -4.402704238891602
    10. '        ' → logprob: -5.777704238891602

Token 70: ' yes' (ID: 14531)
  Prédit: ' yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.012309144251048565
    2. '               ' → logprob: -5.1373090744018555
    3. 'yes' (adapté à ' yes') → logprob: -5.7623090744018555
    4. ' no' → logprob: -5.8873090744018555
    5. '           ' → logprob: -8.387309074401855
    6. 'no' → logprob: -9.512309074401855
    7. ' y' → logprob: -10.262309074401855
    8. '              ' → logprob: -11.262309074401855
    9. ' Yes' → logprob: -11.387309074401855
    10. 'Yes' → logprob: -11.637309074401855

Token 71: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015550498210359365
    2. '()
' → logprob: -9.750155448913574
    3. '`()' → logprob: -9.875155448913574
    4. '()`' → logprob: -10.750155448913574
    5. '|()
' → logprob: -11.875155448913574
    6. ']()' → logprob: -12.500155448913574
    7. '(' → logprob: -13.000155448913574
    8. '()(' → logprob: -13.000155448913574
    9. '()
' → logprob: -13.500155448913574
    10. ' ()' → logprob: -13.500155448913574

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067925783805549145
    2. 'j' → logprob: -6.3817925453186035
    3. '           ' → logprob: -6.7567925453186035
    4. '        
' → logprob: -7.0067925453186035
    5. '   ' → logprob: -7.3817925453186035
    6. ' j' → logprob: -7.5067925453186035
    7. ' ' → logprob: -7.6317925453186035
    8. '    ' → logprob: -8.131793022155762
    9. '+' → logprob: -8.756793022155762
    10. '        ' → logprob: -8.881793022155762

Token 73: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09366359561681747
    2. 'j' (adapté à ' j') → logprob: -2.7186636924743652
    3. ' j' → logprob: -4.343663692474365
    4. ' ' → logprob: -5.843663692474365
    5. '        
' → logprob: -6.718663692474365
    6. '	' → logprob: -6.968663692474365
    7. '	j' → logprob: -6.968663692474365
    8. '   ' → logprob: -6.968663692474365
    9. ' 
' → logprob: -7.093663692474365
    10. '    ' → logprob: -7.093663692474365

Token 74: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06590093672275543
    2. '+' → logprob: -3.065901041030884
    3. ' +=' → logprob: -4.065900802612305
    4. '=' → logprob: -11.940900802612305
    5. '++' → logprob: -12.315900802612305
    6. ' +' → logprob: -12.315900802612305
    7. '+='' → logprob: -14.815900802612305
    8. ']+=' → logprob: -15.065900802612305
    9. '+="' → logprob: -15.190900802612305
    10. '+++' → logprob: -15.315900802612305

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003601021133363247
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -15.19110107421875
    4. '  ' → logprob: -15.56610107421875
    5. '2' → logprob: -16.31610107421875
    6. '0' → logprob: -16.56610107421875
    7. ' ' → logprob: -16.87860107421875
    8. '4' → logprob: -17.25360107421875
    9. '+' → logprob: -17.44110107421875
    10. '3' → logprob: -17.44110107421875

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -17.500036239624023
    4. '0' → logprob: -18.125036239624023
    5. '   ' → logprob: -18.437536239624023
    6. '```' → logprob: -18.437536239624023
    7. '+' → logprob: -18.625036239624023
    8. '  ' → logprob: -18.687536239624023
    9. '１' → logprob: -19.000036239624023
    10. '4' → logprob: -19.000036239624023

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20805460214614868
    2. '   ' → logprob: -2.083054542541504
    3. '<|end|>' → logprob: -2.958054542541504
    4. '\n' → logprob: -5.583054542541504
    5. ' ' → logprob: -5.708054542541504
    6. '
' → logprob: -6.208054542541504
    7. ' 
' → logprob: -7.333054542541504
    8. '  
' → logprob: -7.583054542541504
    9. '<|end|>' → logprob: -7.708054542541504
    10. '    
' → logprob: -8.208054542541504

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1141359731554985
    2. '
' → logprob: -3.114135980606079
    3. '<|end|>' → logprob: -3.864135980606079
    4. ' i' → logprob: -3.989135980606079
    5. ' ' → logprob: -4.1141357421875
    6. 'i' → logprob: -5.7391357421875
    7. '```' → logprob: -6.1141357421875
    8. '<|end|>' → logprob: -8.1141357421875
    9. ' 
' → logprob: -8.2391357421875
    10. '  ' → logprob: -8.2391357421875

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2561779320240021
    2. '   ' → logprob: -1.6311779022216797
    3. ' i' → logprob: -3.5061779022216797
    4. ' ' → logprob: -8.50617790222168
    5. '	i' → logprob: -9.88117790222168
    6. '```' → logprob: -11.75617790222168
    7. '<|end|>' → logprob: -12.50617790222168
    8. '  ' → logprob: -12.63117790222168
    9. '       ' → logprob: -13.50617790222168
    10. ',i' → logprob: -13.50617790222168

Token 80: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5822242498397827
    2. '+=' → logprob: -0.8322242498397827
    3. ' +=' → logprob: -5.082224369049072
    4. '=' → logprob: -10.207223892211914
    5. '++' → logprob: -11.207223892211914
    6. ' +' → logprob: -12.957223892211914
    7. '+++' → logprob: -12.957223892211914
    8. '+="' → logprob: -13.582223892211914
    9. '+='' → logprob: -13.582223892211914
    10. '1' → logprob: -15.332223892211914

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.501703262329102
    4. '```' → logprob: -16.5017032623291
    5. ' ' → logprob: -16.6892032623291
    6. '2' → logprob: -17.1892032623291
    7. '  ' → logprob: -17.2517032623291
    8. '+' → logprob: -17.5017032623291
    9. '１' → logprob: -18.1267032623291
    10. '    ' → logprob: -18.3142032623291

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -16.187519073486328
    4. '```' → logprob: -16.687519073486328
    5. '6' → logprob: -16.750019073486328
    6. '16' → logprob: -17.000019073486328
    7. '   ' → logprob: -17.312519073486328
    8. '0' → logprob: -17.375019073486328
    9. '  ' → logprob: -17.562519073486328
    10. '+' → logprob: -18.000019073486328

Token 83: '
' (ID: 198)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.012786387465894222
    2. ' no' → logprob: -4.762786388397217
    3. 'n' → logprob: -5.637786388397217
    4. '<|end|>' → logprob: -7.887786388397217
    5. '(no' → logprob: -9.512785911560059
    6. '	no' → logprob: -10.637785911560059
    7. '
' → logprob: -10.637785911560059
    8. ')' → logprob: -11.012785911560059
    9. '```' → logprob: -11.262785911560059
    10. '#' → logprob: -11.512785911560059

Token 84: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0005388548015616834
    2. 'n' → logprob: -8.25053882598877
    3. ' no' → logprob: -8.25053882598877
    4. '(no' → logprob: -12.50053882598877
    5. '<|end|>' → logprob: -12.62553882598877
    6. 'print' → logprob: -13.25053882598877
    7. '```' → logprob: -13.50053882598877
    8. '	no' → logprob: -13.62553882598877
    9. '
' → logprob: -13.75053882598877
    10. '#' → logprob: -13.87553882598877

Token 85: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8312570318812504e-05
    2. '`()' → logprob: -12.250018119812012
    3. '()`' → logprob: -12.625018119812012
    4. '()
' → logprob: -12.875018119812012
    5. '()<' → logprob: -13.375018119812012
    6. '())' → logprob: -14.125018119812012
    7. '()</' → logprob: -14.125018119812012
    8. ' ()' → logprob: -14.250018119812012
    9. ']()' → logprob: -14.375018119812012
    10. '()\' → logprob: -14.500018119812012


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 33.73%
Précision adaptée (1ère position): 34.94%
Précision (top 10): 77.11%
================================================================================
