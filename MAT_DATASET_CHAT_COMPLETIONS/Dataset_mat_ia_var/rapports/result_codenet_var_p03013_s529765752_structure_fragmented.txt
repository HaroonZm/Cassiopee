================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def parse_nm(line):
    parts = line.split()
    return int(parts[0]), int(parts[1])

def init_blocked(n):
    return [0 for _ in range(n + 1)]

def read_blocked_indices(m):
    indices = []
    for _ in range(m):
        idx = int(read_input())
        indices.append(idx)
    return indices

def update_blocked_array(b, blocked_indices):
    for idx in blocked_indices:
        b[idx] = 1

def init_ways_array(n):
    return [0 for _ in range(n + 1)]

def set_initial_ways(s):
    s[0] = 1

def set_first_step_ways(s, b):
    if b[1] == 0:
        s[1] = 1
    else:
        s[1] = 0

def compute_ways(n, b, s):
    MOD = 1000000007
    for ni in range(2, n + 1):
        if b[ni] == 0:
            s[ni] = (s[ni - 1] + s[ni - 2]) % MOD
        else:
            s[ni] = 0

def output_result(s, n):
    print(s[n])

def main():
    nm_line = read_input()
    n, m = parse_nm(nm_line)
    b = init_blocked(n)
    blocked_indices = read_blocked_indices(m)
    update_blocked_array(b, blocked_indices)
    s = init_ways_array(n)
    set_initial_ways(s)
    set_first_step_ways(s, b)
    compute_ways(n, b, s)
    output_result(s, n)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0041423882357776165
    2. '_' → logprob: -5.7541422843933105
    3. '():' → logprob: -7.3791422843933105
    4. '(:' → logprob: -8.629142761230469
    5. '(_:' → logprob: -10.129142761230469
    6. ' (' → logprob: -10.254142761230469
    7. ':' → logprob: -11.129142761230469
    8. '```' → logprob: -11.254142761230469
    9. '(_' → logprob: -11.379142761230469
    10. '()' → logprob: -11.504142761230469

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.202744960784912
    2. '```' → logprob: -1.202744960784912
    3. '\n' → logprob: -1.577744960784912
    4. '   ' → logprob: -2.077744960784912
    5. '    
' → logprob: -4.452744960784912
    6. '(' → logprob: -4.452744960784912
    7. ':' → logprob: -4.577744960784912
    8. '``' → logprob: -4.827744960784912
    9. '():' → logprob: -5.702744960784912
    10. ''\' → logprob: -6.327744960784912

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6232112646102905
    2. '   ' → logprob: -1.4982112646102905
    3. 'input' → logprob: -2.24821138381958
    4. 'r' → logprob: -3.37321138381958
    5. '```' → logprob: -3.62321138381958
    6. 'x' → logprob: -4.12321138381958
    7. 'data' → logprob: -4.12321138381958
    8. 'text' → logprob: -4.74821138381958
    9. 'n' → logprob: -5.24821138381958
    10. 'pass' → logprob: -5.37321138381958

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.273018479347229
    2. '"' → logprob: -2.2730183601379395
    3. 'input' → logprob: -2.6480183601379395
    4. ' input' → logprob: -3.0230183601379395
    5. ''' → logprob: -4.2730183601379395
    6. '  ' → logprob: -7.3980183601379395
    7. ' "' → logprob: -8.148018836975098
    8. '(' → logprob: -8.273018836975098
    9. '(input' → logprob: -8.398018836975098
    10. ' []' → logprob: -8.523018836975098

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0061602164059877396
    2. '()' → logprob: -5.131160259246826
    3. '```' → logprob: -9.881159782409668
    4. '(
' → logprob: -10.256159782409668
    5. '.' → logprob: -10.381159782409668
    6. ' (' → logprob: -10.756159782409668
    7. '('' → logprob: -11.256159782409668
    8. '(

' → logprob: -11.506159782409668
    9. '("("' → logprob: -11.631159782409668
    10. '(.)' → logprob: -11.881159782409668

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5337697267532349
    2. '(' → logprob: -1.6587697267532349
    3. '()' → logprob: -3.0337696075439453
    4. ':' → logprob: -3.2837696075439453
    5. 'def' → logprob: -3.2837696075439453
    6. '\' → logprob: -3.7837696075439453
    7. '```' → logprob: -4.033769607543945
    8. '(
' → logprob: -4.283769607543945
    9. '#' → logprob: -4.908769607543945
    10. '
' → logprob: -5.033769607543945

Token 9: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.137978196144104
    2. ' calculate' → logprob: -1.512978196144104
    3. ' read' → logprob: -1.762978196144104
    4. ' main' → logprob: -2.0129780769348145
    5. ' write' → logprob: -2.3879780769348145
    6. ' compute' → logprob: -4.2629780769348145
    7. ' user' → logprob: -4.6379780769348145
    8. ' parse' → logprob: -5.0129780769348145
    9. ' print' → logprob: -5.2629780769348145
    10. ' space' → logprob: -5.3879780769348145

Token 10: '_nm' (ID: 136334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11011704802513123
    2. '_input' → logprob: -2.985116958618164
    3. '(' → logprob: -3.110116958618164
    4. '_line' → logprob: -5.110116958618164
    5. '_text' → logprob: -7.735116958618164
    6. '_token' → logprob: -8.110116958618164
    7. '_data' → logprob: -8.110116958618164
    8. '_user' → logprob: -8.735116958618164
    9. '(_' → logprob: -9.110116958618164
    10. '_function' → logprob: -9.110116958618164

Token 11: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5061514377593994
    2. '()' → logprob: -1.0061514377593994
    3. '():' → logprob: -4.13115119934082
    4. '())' → logprob: -4.75615119934082
    5. '_' → logprob: -6.75615119934082
    6. '(_' → logprob: -7.00615119934082
    7. ' (' → logprob: -7.13115119934082
    8. '(s' → logprob: -7.25615119934082
    9. '(line' → logprob: -7.75615119934082
    10. '(a' → logprob: -7.88115119934082

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007096939254552126
    2. ')' → logprob: -5.382096767425537
    3. '):
' → logprob: -6.507096767425537
    4. ' ):' → logprob: -8.507097244262695
    5. '():' → logprob: -8.757097244262695
    6. ':' → logprob: -8.757097244262695
    7. ',' → logprob: -9.257097244262695
    8. 's' → logprob: -9.257097244262695
    9. '   ' → logprob: -9.757097244262695
    10. '[' → logprob: -10.257097244262695

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015205919742584229
    2. ' line' → logprob: -4.5152058601379395
    3. 'line' → logprob: -6.6402058601379395
    4. '(' → logprob: -7.7652058601379395
    5. ' return' → logprob: -8.265206336975098
    6. 'return' → logprob: -8.640206336975098
    7. ':' → logprob: -8.765206336975098
    8. '_' → logprob: -8.890206336975098
    9. '):' → logprob: -8.890206336975098
    10. '(line' → logprob: -9.015206336975098

Token 14: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.244234099984169
    2. ' line' → logprob: -2.369234085083008
    3. ' return' → logprob: -3.369234085083008
    4. ' n' → logprob: -3.494234085083008
    5. ' parts' → logprob: -3.869234085083008
    6. 'n' → logprob: -4.369234085083008
    7. 'return' → logprob: -4.994234085083008
    8. ' tokens' → logprob: -5.619234085083008
    9. ' split' → logprob: -5.869234085083008
    10. 'line' → logprob: -5.994234085083008

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015068859793245792
    2. '=' → logprob: -6.501506805419922
    3. ')' → logprob: -13.501506805419922
    4. '[' → logprob: -14.251506805419922
    5. '=line' → logprob: -14.376506805419922
    6. '_' → logprob: -14.501506805419922
    7. ' ' → logprob: -14.626506805419922
    8. '   ' → logprob: -15.376506805419922
    9. ' =)' → logprob: -15.751506805419922
    10. '.' → logprob: -15.751506805419922

Token 16: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.023253168910741806
    2. 'line' → logprob: -3.7732532024383545
    3. '	line' → logprob: -12.273253440856934
    4. '[line' → logprob: -13.148253440856934
    5. '=line' → logprob: -14.773253440856934
    6. '(line' → logprob: -15.148253440856934
    7. '[' → logprob: -16.273252487182617
    8. ' ' → logprob: -16.648252487182617
    9. '#line' → logprob: -16.898252487182617
    10. '[]' → logprob: -17.148252487182617

Token 17: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.2591691017150879
    2. '.strip' → logprob: -1.759169101715088
    3. '.' → logprob: -2.884169101715088
    4. '.rstrip' → logprob: -9.00916862487793
    5. ' .' → logprob: -9.38416862487793
    6. '   ' → logprob: -12.50916862487793
    7. '().' → logprob: -13.25916862487793
    8. 'split' → logprob: -13.50916862487793
    9. '.startswith' → logprob: -13.63416862487793
    10. '.replace' → logprob: -13.88416862487793

Token 18: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005946809891611338
    2. '("("' → logprob: -5.505946636199951
    3. '(' → logprob: -7.005946636199951
    4. '()' → logprob: -7.130946636199951
    5. ''' → logprob: -9.50594711303711
    6. '('.')' → logprob: -10.25594711303711
    7. '("' → logprob: -10.50594711303711
    8. '(',' → logprob: -11.50594711303711
    9. '('(' → logprob: -12.00594711303711
    10. '```' → logprob: -13.63094711303711

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19366855919361115
    2. 'n' → logprob: -2.3186686038970947
    3. '[' → logprob: -3.6936686038970947
    4. ' n' → logprob: -3.8186686038970947
    5. ' ' → logprob: -4.568668365478516
    6. 'm' → logprob: -4.818668365478516
    7. '[n' → logprob: -5.693668365478516
    8. 'return' → logprob: -6.318668365478516
    9. ' return' → logprob: -6.818668365478516
    10. '  ' → logprob: -7.068668365478516

Token 20: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06133353337645531
    2. ' n' → logprob: -2.936333417892456
    3. '   ' → logprob: -5.686333656311035
    4. 'N' → logprob: -6.436333656311035
    5. ' return' → logprob: -7.686333656311035
    6. 'return' (adapté à ' return') → logprob: -7.811333656311035
    7. 'm' → logprob: -8.061333656311035
    8. ' N' → logprob: -9.311333656311035
    9. ' ' → logprob: -10.186333656311035
    10. ' if' → logprob: -10.686333656311035

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28199806809425354
    2. 'int' → logprob: -1.4069980382919312
    3. '(int' → logprob: -7.156998157501221
    4. '[int' → logprob: -10.156997680664062
    5. ' tuple' → logprob: -11.781997680664062
    6. ' (' → logprob: -12.156997680664062
    7. ' map' → logprob: -12.406997680664062
    8. ' ' → logprob: -12.406997680664062
    9. '  ' → logprob: -13.156997680664062
    10. '   ' → logprob: -13.281997680664062

Token 22: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.014163863845169544
    2. '(' → logprob: -4.264163970947266
    3. 'parts' → logprob: -16.014163970947266
    4. ' parts' → logprob: -17.014163970947266
    5. '("("' → logprob: -17.014163970947266
    6. ' (' → logprob: -17.139163970947266
    7. '(

' → logprob: -17.389163970947266
    8. '(part' → logprob: -17.514163970947266
    9. '(
' → logprob: -18.014163970947266
    10. '('' → logprob: -18.264163970947266

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.662937372922897e-05
    2. '0' → logprob: -9.250096321105957
    3. ' [' → logprob: -16.250097274780273
    4. ')' → logprob: -16.375097274780273
    5. '1' → logprob: -16.500097274780273
    6. ')[' → logprob: -16.625097274780273
    7. '(' → logprob: -16.750097274780273
    8. '   ' → logprob: -18.125097274780273
    9. '[
' → logprob: -18.125097274780273
    10. '\[' → logprob: -18.125097274780273

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -15.750001907348633
    4. '   ' → logprob: -17.250001907348633
    5. ')' → logprob: -18.000001907348633
    6. '  ' → logprob: -18.250001907348633
    7. '```' → logprob: -19.625001907348633
    8. '    ' → logprob: -19.687501907348633
    9. '۰' → logprob: -19.687501907348633
    10. ']' → logprob: -19.687501907348633

Token 25: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.525627076625824
    2. ']),' → logprob: -1.2756271362304688
    3. '),' → logprob: -2.2756271362304688
    4. ')' → logprob: -3.9006271362304688
    5. '],' → logprob: -5.150627136230469
    6. ']' → logprob: -7.525627136230469
    7. ')],' → logprob: -9.525627136230469
    8. ')]' → logprob: -9.650627136230469
    9. ' ])' → logprob: -10.275627136230469
    10. ',' → logprob: -10.650627136230469

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01814994215965271
    2. 'int' → logprob: -4.0181498527526855
    3. ' ' → logprob: -18.018150329589844
    4. '=int' → logprob: -18.268150329589844
    5. '	int' → logprob: -18.393150329589844
    6. ' ' → logprob: -18.393150329589844
    7. '(int' → logprob: -18.643150329589844
    8. '<int' → logprob: -18.893150329589844
    9. '   ' → logprob: -19.268150329589844
    10. '[int' → logprob: -19.393150329589844

Token 27: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.004079828038811684
    2. '(' → logprob: -5.504079818725586
    3. ' (' → logprob: -14.754079818725586
    4. '(part' → logprob: -15.379079818725586
    5. 'parts' → logprob: -15.379079818725586
    6. ' parts' → logprob: -15.754079818725586
    7. ')' → logprob: -16.254079818725586
    8. '(posts' → logprob: -16.629079818725586
    9. '('' → logprob: -17.129079818725586
    10. '(

' → logprob: -17.254079818725586

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.125
    3. '```' → logprob: -18.0
    4. ')' → logprob: -19.0
    5. '[
' → logprob: -19.125
    6. '2' → logprob: -19.125
    7. ' [' → logprob: -19.375
    8. '0' → logprob: -19.375
    9. '3' → logprob: -20.75
    10. '   ' → logprob: -21.0

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. '0' → logprob: -9.875052452087402
    3. '])' → logprob: -15.500052452087402
    4. ' ' → logprob: -15.875052452087402
    5. '   ' → logprob: -17.000051498413086
    6. '-' → logprob: -17.125051498413086
    7. '```' → logprob: -17.875051498413086
    8. '  ' → logprob: -18.500051498413086
    9. '2' → logprob: -18.875051498413086
    10. '4' → logprob: -19.375051498413086

Token 30: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -14.625000953674316
    3. '}' → logprob: -17.375
    4. ')return' → logprob: -17.375
    5. ' )' → logprob: -17.375
    6. ')}' → logprob: -17.375
    7. '),' → logprob: -17.625
    8. ')
' → logprob: -17.875
    9. ')}}' → logprob: -18.0
    10. ')))' → logprob: -18.375

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007038947660475969
    2. '
' → logprob: -5.2570390701293945
    3. '

' → logprob: -6.7570390701293945
    4. '```' → logprob: -8.257039070129395
    5. '\' → logprob: -8.507039070129395
    6. '#' → logprob: -9.632039070129395
    7. 'd' → logprob: -10.007039070129395
    8. 'n' → logprob: -10.632039070129395
    9. '\n' → logprob: -11.007039070129395
    10. '<|end|>' → logprob: -11.882039070129395

Token 32: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9985737204551697
    2. ' read' → logprob: -1.4985737800598145
    3. ' process' → logprob: -2.1235737800598145
    4. ' solve' → logprob: -2.1235737800598145
    5. ' parse' → logprob: -2.1235737800598145
    6. ' calculate' → logprob: -3.7485737800598145
    7. ' compute' → logprob: -4.3735737800598145
    8. ' multiply' → logprob: -6.2485737800598145
    9. ' sum' → logprob: -6.6235737800598145
    10. ' is' → logprob: -6.6235737800598145

Token 33: '_block' (ID: 15644)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.9481070637702942
    2. '_' → logprob: -1.3231070041656494
    3. '_array' → logprob: -1.6981070041656494
    4. '_board' → logprob: -2.6981070041656494
    5. '_grid' → logprob: -3.0731070041656494
    6. '_map' → logprob: -3.4481070041656494
    7. '_graph' → logprob: -5.5731072425842285
    8. '_data' → logprob: -6.3231072425842285
    9. '_table' → logprob: -6.4481072425842285
    10. '_list' → logprob: -6.5731072425842285

Token 34: 'ed' (ID: 295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20512650907039642
    2. '_size' → logprob: -2.2051265239715576
    3. 'size' → logprob: -3.3301265239715576
    4. '_' → logprob: -4.3301262855529785
    5. '_sizes' → logprob: -4.9551262855529785
    6. '()' → logprob: -5.3301262855529785
    7. '_matrix' → logprob: -5.3301262855529785
    8. '_map' → logprob: -6.5801262855529785
    9. '(' → logprob: -6.8301262855529785
    10. '_s' → logprob: -6.9551262855529785

Token 35: '(n' (ID: 2406)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.5357018709182739
    2. '_positions' → logprob: -1.035701870918274
    3. '_' → logprob: -4.035701751708984
    4. '():' → logprob: -4.535701751708984
    5. '_blocks' → logprob: -4.660701751708984
    6. '(' → logprob: -5.035701751708984
    7. '()' → logprob: -5.785701751708984
    8. '_rows' → logprob: -6.285701751708984
    9. '_lines' → logprob: -6.410701751708984
    10. '_spaces' → logprob: -6.535701751708984

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06885318458080292
    2. ',' → logprob: -2.9438531398773193
    3. ')' → logprob: -4.693853378295898
    4. '):
' → logprob: -5.818853378295898
    5. '_' → logprob: -7.318853378295898
    6. '_blocks' → logprob: -8.318853378295898
    7. ' ):' → logprob: -8.693853378295898
    8. '_cells' → logprob: -8.943853378295898
    9. 's' → logprob: -9.818853378295898
    10. '_nodes' → logprob: -10.068853378295898

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034053747076541185
    2. 'blocked' → logprob: -6.378405570983887
    3. ' return' → logprob: -7.253405570983887
    4. 'return' → logprob: -8.128405570983887
    5. ' blocked' → logprob: -8.378405570983887
    6. '[' → logprob: -8.753405570983887
    7. '    ' → logprob: -9.628405570983887
    8. '[]' → logprob: -10.253405570983887
    9. '  ' → logprob: -10.253405570983887
    10. ' [' → logprob: -10.503405570983887

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32931676506996155
    2. '   ' → logprob: -1.5793167352676392
    3. 'return' (adapté à ' return') → logprob: -2.9543168544769287
    4. 'blocked' → logprob: -4.32931661605835
    5. ' blocked' → logprob: -4.95431661605835
    6. ' [' → logprob: -6.57931661605835
    7. '[' → logprob: -8.579317092895508
    8. '    ' → logprob: -8.704317092895508
    9. ' []' → logprob: -8.954317092895508
    10. '[]' → logprob: -9.704317092895508

Token 39: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022219298407435417
    2. '[[' → logprob: -4.772219181060791
    3. 'set' → logprob: -5.147219181060791
    4. ' [' → logprob: -5.147219181060791
    5. '[]' → logprob: -6.897219181060791
    6. '[n' → logprob: -7.647219181060791
    7. ' [[' → logprob: -8.89721965789795
    8. ' set' → logprob: -9.39721965789795
    9. '[s' → logprob: -9.77221965789795
    10. '[m' → logprob: -11.64721965789795

Token 40: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.007809970062226057
    2. '[' → logprob: -4.882810115814209
    3. ' False' → logprob: -8.88280963897705
    4. '0' → logprob: -10.38280963897705
    5. '[]' → logprob: -11.00780963897705
    6. '   ' → logprob: -11.75780963897705
    7. ' [' → logprob: -12.50780963897705
    8. '(False' → logprob: -12.88280963897705
    9. 'True' → logprob: -13.13280963897705
    10. ']' → logprob: -14.50780963897705

Token 41: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019536903128027916
    2. ']*' → logprob: -4.019536972045898
    3. ' for' → logprob: -6.894536972045898
    4. ' ]' → logprob: -8.019536972045898
    5. ']*(' → logprob: -10.269536972045898
    6. 'for' → logprob: -11.769536972045898
    7. '   ' → logprob: -15.019536972045898
    8. ']+' → logprob: -15.269536972045898
    9. ')' → logprob: -15.894536972045898
    10. ',' → logprob: -16.0195369720459

Token 42: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.387052446603775
    2. ' _' → logprob: -1.1370524168014526
    3. ' i' → logprob: -9.012052536010742
    4. ' range' → logprob: -10.137052536010742
    5. '_range' → logprob: -11.637052536010742
    6. 'range' → logprob: -12.387052536010742
    7. ' ' → logprob: -13.012052536010742
    8. 'i' → logprob: -13.012052536010742
    9. '_i' → logprob: -13.262052536010742
    10. ' ' → logprob: -15.137052536010742

Token 43: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010273974388837814
    2. ' range' → logprob: -4.6352739334106445
    3. 'in' → logprob: -8.010273933410645
    4. ' in' → logprob: -8.760273933410645
    5. '_' → logprob: -10.635273933410645
    6. ' ' → logprob: -14.010273933410645
    7. '_range' → logprob: -14.135273933410645
    8. '	range' → logprob: -14.135273933410645
    9. '(range' → logprob: -14.260273933410645
    10. '  ' → logprob: -14.385273933410645

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716436706483364
    2. ' range' → logprob: -5.006716251373291
    3. '(range' → logprob: -14.75671672821045
    4. '	range' → logprob: -15.25671672821045
    5. ' ' → logprob: -15.50671672821045
    6. '  ' → logprob: -16.506715774536133
    7. '   ' → logprob: -17.131715774536133
    8. ')' → logprob: -17.506715774536133
    9. ' xrange' → logprob: -17.506715774536133
    10. 'ange' → logprob: -17.506715774536133

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029637437546625733
    2. '(' → logprob: -8.125296592712402
    3. ' (' → logprob: -15.125296592712402
    4. 'n' → logprob: -17.875295639038086
    5. '((' → logprob: -19.500295639038086
    6. ')n' → logprob: -20.125295639038086
    7. '(
' → logprob: -20.625295639038086
    8. '(N' → logprob: -20.875295639038086
    9. ' n' → logprob: -21.250295639038086
    10. ' ' → logprob: -21.375295639038086

Token 46: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.2729995988775045e-06
    2. ']' → logprob: -13.000006675720215
    3. ' )' → logprob: -13.125006675720215
    4. ')' → logprob: -14.125006675720215
    5. ')]
' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.125006675720215
    7. '')]' → logprob: -15.875006675720215
    8. ' ' → logprob: -16.2500057220459
    9. ' ]' → logprob: -16.3750057220459
    10. '")]' → logprob: -16.8750057220459

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2531023323535919
    2. ' ' → logprob: -1.5031023025512695
    3. '2' → logprob: -6.7531023025512695
    4. '3' → logprob: -13.62810230255127
    5. '  ' → logprob: -13.62810230255127
    6. '   ' → logprob: -14.62810230255127
    7. '5' → logprob: -14.62810230255127
    8. '10' → logprob: -14.75310230255127
    9. '7' → logprob: -14.87810230255127
    10. '4' → logprob: -15.37810230255127

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020091719925403595
    2. '2' → logprob: -6.252009391784668
    3. ' ' → logprob: -9.627009391784668
    4. '3' → logprob: -11.877009391784668
    5. '10' → logprob: -12.502009391784668
    6. '5' → logprob: -13.502009391784668
    7. '0' → logprob: -14.377009391784668
    8. '4' → logprob: -14.627009391784668
    9. '   ' → logprob: -14.752009391784668
    10. '7' → logprob: -14.877009391784668

Token 49: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.248469718324486e-05
    2. ']' → logprob: -11.375022888183594
    3. ')' → logprob: -11.750022888183594
    4. ' )' → logprob: -13.750022888183594
    5. ')]
' → logprob: -14.625022888183594
    6. '   ' → logprob: -14.875022888183594
    7. '')]' → logprob: -14.875022888183594
    8. '])]' → logprob: -15.750022888183594
    9. ')])' → logprob: -15.750022888183594
    10. ')],' → logprob: -16.375022888183594

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010895253159105778
    2. '

' → logprob: -4.885895252227783
    3. '
' → logprob: -5.760895252227783
    4. '```' → logprob: -9.760895729064941
    5. '<|end|>' → logprob: -10.635895729064941
    6. '<|end|>' → logprob: -11.385895729064941
    7. '\' → logprob: -11.635895729064941
    8. '
' → logprob: -11.760895729064941
    9. 'class' → logprob: -12.135895729064941
    10. 'ndef' → logprob: -12.260895729064941

Token 51: ' read' (ID: 1729)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.478075623512268
    2. ' mark' → logprob: -1.728075623512268
    3. ' count' → logprob: -1.853075623512268
    4. ' block' → logprob: -1.978075623512268
    5. ' solve' → logprob: -3.1030755043029785
    6. ' update' → logprob: -3.3530755043029785
    7. ' read' → logprob: -3.4780755043029785
    8. ' main' → logprob: -3.8530755043029785
    9. ' blocked' → logprob: -3.8530755043029785
    10. ' process' → logprob: -3.9780755043029785

Token 52: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.8559805154800415
    2. '_input' → logprob: -1.1059805154800415
    3. '_line' → logprob: -2.230980396270752
    4. '_' → logprob: -3.105980396270752
    5. '_blocks' → logprob: -3.355980396270752
    6. '_lines' → logprob: -4.355980396270752
    7. '_data' → logprob: -4.730980396270752
    8. '()' → logprob: -4.855980396270752
    9. '_b' → logprob: -5.730980396270752
    10. '_constraints' → logprob: -5.730980396270752

Token 53: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -6.194110756041482e-05
    2. 's' → logprob: -10.500061988830566
    3. '_' → logprob: -11.125061988830566
    4. '_list' → logprob: -12.000061988830566
    5. '_ed' → logprob: -12.500061988830566
    6. '_block' → logprob: -13.250061988830566
    7. '_blocks' → logprob: -13.625061988830566
    8. 'eded' → logprob: -13.875061988830566
    9. 'eds' → logprob: -14.125061988830566
    10. 'aded' → logprob: -14.500061988830566

Token 54: '_indices' (ID: 43508)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03518860414624214
    2. '(' → logprob: -3.660188674926758
    3. '()' → logprob: -5.660188674926758
    4. '_line' → logprob: -6.160188674926758
    5. '(n' → logprob: -6.285188674926758
    6. '(line' → logprob: -7.910188674926758
    7. '_lines' → logprob: -8.160188674926758
    8. '()(' → logprob: -8.285188674926758
    9. 's' → logprob: -8.910188674926758
    10. '_list' → logprob: -9.160188674926758

Token 55: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004775906912982464
    2. '(' → logprob: -5.6297760009765625
    3. '(line' → logprob: -7.1297760009765625
    4. '()' → logprob: -8.254776000976562
    5. '(n' → logprob: -9.879776000976562
    6. '()(' → logprob: -10.504776000976562
    7. ' ():' → logprob: -10.504776000976562
    8. '():
' → logprob: -13.629776000976562
    9. '(()' → logprob: -13.754776000976562
    10. '```' → logprob: -13.879776000976562

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028266964363865554
    2. ')' → logprob: -9.125282287597656
    3. ' ):' → logprob: -9.250282287597656
    4. '):
' → logprob: -9.500282287597656
    5. '():' → logprob: -14.125282287597656
    6. ':' → logprob: -14.500282287597656
    7. '=' → logprob: -14.875282287597656
    8. '_' → logprob: -15.250282287597656
    9. '   ' → logprob: -15.500282287597656
    10. '):
' → logprob: -15.500282287597656

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006359593011438847
    2. 'blocked' → logprob: -5.381359577178955
    3. 'indices' → logprob: -6.506359577178955
    4. '
' → logprob: -9.881360054016113
    5. '	block' → logprob: -10.131360054016113
    6. ' indices' → logprob: -10.131360054016113
    7. '    
' → logprob: -10.131360054016113
    8. ' blocked' → logprob: -10.756360054016113
    9. 'block' → logprob: -10.756360054016113
    10. '```' → logprob: -11.631360054016113

Token 58: ' indices' (ID: 30378)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.6424633264541626
    2. 'indices' (adapté à ' indices') → logprob: -0.7674633264541626
    3. '   ' → logprob: -5.142463207244873
    4. ' indices' → logprob: -6.767463207244873
    5. 'lines' → logprob: -6.767463207244873
    6. 'result' → logprob: -7.892463207244873
    7. 'return' → logprob: -8.267463684082031
    8. 'block' → logprob: -8.392463684082031
    9. ' blocked' → logprob: -8.517463684082031
    10. 'arr' → logprob: -9.017463684082031

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00318353995680809
    2. '=' → logprob: -5.753183364868164
    3. '=[]' → logprob: -12.628183364868164
    4. ' []' → logprob: -14.503183364868164
    5. '[]' → logprob: -14.753183364868164
    6. ' ' → logprob: -14.878183364868164
    7. '   ' → logprob: -15.003183364868164
    8. '  ' → logprob: -15.503183364868164
    9. '_' → logprob: -16.253183364868164
    10. '.' → logprob: -16.253183364868164

Token 60: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26044920086860657
    2. ' []' → logprob: -1.5104491710662842
    3. 'list' → logprob: -6.010449409484863
    4. ' list' → logprob: -6.135449409484863
    5. '[]
' → logprob: -7.010449409484863
    6. ' [' → logprob: -7.135449409484863
    7. '[' → logprob: -7.135449409484863
    8. 'read' → logprob: -8.010449409484863
    9. ' read' → logprob: -8.385449409484863
    10. ' []
' → logprob: -8.760449409484863

Token 61: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9794207811355591
    2. '   ' → logprob: -1.104420781135559
    3. 'for' → logprob: -1.229420781135559
    4. '    
' → logprob: -8.35442066192627
    5. '	for' → logprob: -8.60442066192627
    6. '<|end|>' → logprob: -9.35442066192627
    7. '  ' → logprob: -10.47942066192627
    8. ' ' → logprob: -10.60442066192627
    9. '    ' → logprob: -11.10442066192627
    10. '
' → logprob: -11.35442066192627

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002925598528236151
    2. ' for' → logprob: -8.250292778015137
    3. '   ' → logprob: -10.375292778015137
    4. '	for' → logprob: -16.00029182434082
    5. '
' → logprob: -18.37529182434082
    6. '```' → logprob: -18.62529182434082
    7. ' ' → logprob: -18.75029182434082
    8. '    
' → logprob: -18.87529182434082
    9. 'line' → logprob: -19.00029182434082
    10. 'while' → logprob: -19.25029182434082

Token 63: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2014746367931366
    2. '_' → logprob: -1.701474666595459
    3. ' i' → logprob: -9.9514741897583
    4. ' ' → logprob: -11.8264741897583
    5. ' in' → logprob: -12.5764741897583
    6. ' range' → logprob: -13.2014741897583
    7. '_range' → logprob: -14.4514741897583
    8. '_i' → logprob: -15.5764741897583
    9. 'range' → logprob: -15.8264741897583
    10. 'i' → logprob: -16.076475143432617

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5242804288864136
    2. 'in' → logprob: -0.8992804288864136
    3. ' ' → logprob: -7.274280548095703
    4. '_' → logprob: -8.649280548095703
    5. 'range' → logprob: -9.024280548095703
    6. ' _' → logprob: -9.399280548095703
    7. '  ' → logprob: -10.399280548095703
    8. 'n' → logprob: -10.899280548095703
    9. '   ' → logprob: -11.649280548095703
    10. 'i' → logprob: -12.649280548095703

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028105827514082193
    2. ' range' → logprob: -5.877810478210449
    3. '(range' → logprob: -12.75281047821045
    4. '	range' → logprob: -13.50281047821045
    5. '_range' → logprob: -14.25281047821045
    6. 'ange' → logprob: -15.87781047821045
    7. 'in' → logprob: -16.002811431884766
    8. '   ' → logprob: -16.127811431884766
    9. 'read' → logprob: -16.252811431884766
    10. ' ' → logprob: -16.377811431884766

Token 66: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04749824106693268
    2. '(' → logprob: -3.4224982261657715
    3. ' (' → logprob: -4.5474982261657715
    4. ' m' → logprob: -5.7974982261657715
    5. 'm' → logprob: -9.17249870300293
    6. ' ' → logprob: -11.42249870300293
    7. '	m' → logprob: -11.67249870300293
    8. '   ' → logprob: -12.54749870300293
    9. '<|end|>' → logprob: -15.04749870300293
    10. '(
' → logprob: -15.67249870300293

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038331784307956696
    2. ')' → logprob: -3.6633317470550537
    3. ' ):' → logprob: -4.913331985473633
    4. '):
' → logprob: -5.663331985473633
    5. ' )' → logprob: -6.913331985473633
    6. ':' → logprob: -9.788331985473633
    7. ' ):
' → logprob: -10.163331985473633
    8. '   ' → logprob: -10.663331985473633
    9. ' ' → logprob: -11.413331985473633
    10. '>' → logprob: -13.288331985473633

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605312764644623
    2. '       ' → logprob: -1.7605313062667847
    3. ' indices' → logprob: -3.010531187057495
    4. 'indices' → logprob: -5.010531425476074
    5. '    
' → logprob: -7.885531425476074
    6. '    ' → logprob: -8.385531425476074
    7. ' ind' → logprob: -8.385531425476074
    8. '(indices' → logprob: -8.760531425476074
    9. '"indices' → logprob: -9.510531425476074
    10. '_indices' → logprob: -9.635531425476074

Token 69: ' idx' (ID: 14016)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.5533513426780701
    2. ' idx' → logprob: -1.9283514022827148
    3. 'indices' → logprob: -2.428351402282715
    4. ' index' → logprob: -2.803351402282715
    5. '   ' → logprob: -3.178351402282715
    6. ' line' → logprob: -3.428351402282715
    7. 'idx' (adapté à ' idx') → logprob: -3.678351402282715
    8. 'index' → logprob: -3.928351402282715
    9. 'line' → logprob: -5.428351402282715
    10. ' ind' → logprob: -5.678351402282715

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030354207381606102
    2. '=' → logprob: -3.5303542613983154
    3. '   ' → logprob: -7.905354022979736
    4. 's' → logprob: -8.530354499816895
    5. ' ' → logprob: -11.155354499816895
    6. '.append' → logprob: -12.155354499816895
    7. '  ' → logprob: -12.530354499816895
    8. '    ' → logprob: -12.905354499816895
    9. '_indices' → logprob: -13.155354499816895
    10. '=line' → logprob: -13.530354499816895

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008328508585691452
    2. 'int' → logprob: -4.883328437805176
    3. ' read' → logprob: -7.258328437805176
    4. 'read' → logprob: -11.633328437805176
    5. '   ' → logprob: -12.758328437805176
    6. ' ' → logprob: -13.008328437805176
    7. '    ' → logprob: -13.758328437805176
    8. '	int' → logprob: -14.008328437805176
    9. '(int' → logprob: -14.258328437805176
    10. '  ' → logprob: -14.758328437805176

Token 72: '(read' (ID: 45738)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.897412822581828e-05
    2. '(' → logprob: -9.875068664550781
    3. '(read' → logprob: -11.125068664550781
    4. 'input' → logprob: -13.000068664550781
    5. ' (' → logprob: -15.875068664550781
    6. '=input' → logprob: -16.50006866455078
    7. ' input' → logprob: -17.00006866455078
    8. '(
' → logprob: -17.50006866455078
    9. '	input' → logprob: -17.50006866455078
    10. ',input' → logprob: -18.00006866455078

Token 73: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.320199877838604e-07
    2. '_block' → logprob: -15.5
    3. 'input' → logprob: -16.375
    4. '_' → logprob: -16.75
    5. '(input' → logprob: -18.125
    6. '_line' → logprob: -18.5
    7. '_in' → logprob: -19.0
    8. '_output' → logprob: -19.375
    9. '()' → logprob: -19.75
    10. '_INPUT' → logprob: -20.25

Token 74: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.025715136900544167
    2. '()' → logprob: -3.7757151126861572
    3. '()))' → logprob: -6.025715351104736
    4. '())
' → logprob: -11.025714874267578
    5. ')' → logprob: -11.025714874267578
    6. ' ())' → logprob: -11.775714874267578
    7. '();)' → logprob: -12.900714874267578
    8. '()
' → logprob: -13.525714874267578
    9. '().' → logprob: -13.650714874267578
    10. '())

' → logprob: -13.775714874267578

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001998704159632325
    2. '   ' → logprob: -6.8769989013671875
    3. '<|end|>' → logprob: -7.6269989013671875
    4. 'indices' → logprob: -8.626998901367188
    5. ')' → logprob: -9.126998901367188
    6. '(indices' → logprob: -9.876998901367188
    7. '<|end|>' → logprob: -10.251998901367188
    8. '"indices' → logprob: -10.626998901367188
    9. '	' → logprob: -11.501998901367188
    10. '()' → logprob: -11.626998901367188

Token 76: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' (adapté à ' indices') → logprob: -0.23924045264720917
    2. '       ' → logprob: -2.1142404079437256
    3. ' indices' → logprob: -2.9892404079437256
    4. '   ' → logprob: -3.2392404079437256
    5. '(indices' → logprob: -6.739240646362305
    6. '"indices' → logprob: -6.989240646362305
    7. '        
' → logprob: -9.114240646362305
    8. '
' → logprob: -9.239240646362305
    9. '.indices' → logprob: -9.489240646362305
    10. '    
' → logprob: -10.364240646362305

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04868104308843613
    2. '.' → logprob: -3.0486810207366943
    3. '.app' → logprob: -9.673681259155273
    4. ' .' → logprob: -11.923681259155273
    5. '.ap' → logprob: -11.923681259155273
    6. '.add' → logprob: -12.423681259155273
    7. '.extend' → logprob: -12.548681259155273
    8. '.push' → logprob: -12.673681259155273
    9. ').' → logprob: -13.548681259155273
    10. '.py' → logprob: -13.673681259155273

Token 78: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.10020828247070312
    2. '(' → logprob: -2.350208282470703
    3. '(
' → logprob: -14.475208282470703
    4. '(id' → logprob: -15.600208282470703
    5. ' (' → logprob: -15.725208282470703
    6. '(ix' → logprob: -15.850208282470703
    7. '(i' → logprob: -15.975208282470703
    8. '(

' → logprob: -16.100208282470703
    9. '(index' → logprob: -16.100208282470703
    10. '(indices' → logprob: -16.350208282470703

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006666870322078466
    2. ')
' → logprob: -7.375666618347168
    3. '   ' → logprob: -10.250666618347168
    4. ')return' → logprob: -12.625666618347168
    5. ' )' → logprob: -15.125666618347168
    6. '))' → logprob: -15.375666618347168
    7. '`)' → logprob: -15.625666618347168
    8. '       ' → logprob: -16.000667572021484
    9. ')
' → logprob: -16.000667572021484
    10. ')

' → logprob: -16.125667572021484

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005365899996832013
    2. 'return' → logprob: -7.8755364418029785
    3. ' return' → logprob: -9.750536918640137
    4. '<|end|>' → logprob: -10.250536918640137
    5. '
' → logprob: -10.750536918640137
    6. '	return' → logprob: -10.875536918640137
    7. '    
' → logprob: -11.750536918640137
    8. '       ' → logprob: -11.875536918640137
    9. ':return' → logprob: -12.875536918640137
    10. '<|end|>' → logprob: -13.625536918640137

Token 81: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148440420627594
    2. 'return' (adapté à ' return') → logprob: -1.314844012260437
    3. ' return' → logprob: -6.814844131469727
    4. '	return' → logprob: -7.814844131469727
    5. '    
' → logprob: -10.314844131469727
    6. '       ' → logprob: -11.439844131469727
    7. '<|end|>' → logprob: -11.439844131469727
    8. '```' → logprob: -11.814844131469727
    9. ' ' → logprob: -12.064844131469727
    10. ':return' → logprob: -12.314844131469727

Token 82: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.38688966631889343
    2. 'indices' → logprob: -1.1368896961212158
    3. '(indices' → logprob: -11.136889457702637
    4. '"indices' → logprob: -13.386889457702637
    5. ' indexes' → logprob: -13.886889457702637
    6. 'indexes' → logprob: -14.386889457702637
    7. 'Indices' → logprob: -14.886889457702637
    8. 'ind' → logprob: -15.261889457702637
    9. '.indices' → logprob: -15.386889457702637
    10. '_indices' → logprob: -16.011890411376953

Token 83: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03166200965642929
    2. '
' → logprob: -3.7816619873046875
    3. '

' → logprob: -5.0316619873046875
    4. '<|end|>' → logprob: -6.5316619873046875
    5. '```' → logprob: -8.156661987304688
    6. '<|end|>' → logprob: -10.656661987304688
    7. '[' → logprob: -11.156661987304688
    8. '\' → logprob: -11.406661987304688
    9. '
' → logprob: -11.531661987304688
    10. ' def' → logprob: -11.781661987304688

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009077174589037895
    2. '
' → logprob: -5.134077072143555
    3. '

' → logprob: -5.884077072143555
    4. '<|end|>' → logprob: -8.259077072143555
    5. '```' → logprob: -10.009077072143555
    6. '<|end|>' → logprob: -10.634077072143555
    7. '
' → logprob: -12.134077072143555
    8. 'ndef' → logprob: -12.509077072143555
    9. '#' → logprob: -12.634077072143555
    10. '\' → logprob: -12.884077072143555

Token 85: ' update' (ID: 4027)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0640956163406372
    2. ' solve' → logprob: -1.5640956163406372
    3. ' main' → logprob: -2.0640954971313477
    4. ' calculate' → logprob: -2.8140954971313477
    5. ' count' → logprob: -2.8140954971313477
    6. ' find' → logprob: -3.1890954971313477
    7. ' max' → logprob: -3.3140954971313477
    8. ' is' → logprob: -3.6890954971313477
    9. ' compute' → logprob: -3.6890954971313477
    10. ' process' → logprob: -3.6890954971313477

Token 86: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.00016384923947043717
    2. '_blocks' → logprob: -9.500164031982422
    3. '(block' → logprob: -9.750164031982422
    4. '_' → logprob: -11.125164031982422
    5. '(_' → logprob: -12.375164031982422
    6. '_bloc' → logprob: -13.125164031982422
    7. 'blocked' → logprob: -13.375164031982422
    8. '(' → logprob: -13.500164031982422
    9. '_(' → logprob: -13.625164031982422
    10. '```' → logprob: -14.250164031982422

Token 87: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -4.286852345103398e-05
    2. '_block' → logprob: -11.000042915344238
    3. '(block' → logprob: -12.250042915344238
    4. 'blocked' → logprob: -12.250042915344238
    5. 'eds' → logprob: -12.750042915344238
    6. 'eded' → logprob: -12.875042915344238
    7. '```' → logprob: -13.500042915344238
    8. '[' → logprob: -13.750042915344238
    9. '_blocks' → logprob: -13.750042915344238
    10. '(ed' → logprob: -13.875042915344238

Token 88: '_array' (ID: 8766)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.010229134932160378
    2. '(' → logprob: -4.635229110717773
    3. '(_' → logprob: -8.010229110717773
    4. '(indices' → logprob: -9.635229110717773
    5. '(Block' → logprob: -10.885229110717773
    6. '(n' → logprob: -11.135229110717773
    7. '_block' → logprob: -11.260229110717773
    8. ' (' → logprob: -11.760229110717773
    9. '(s' → logprob: -12.760229110717773
    10. '(b' → logprob: -13.010229110717773

Token 89: '(b' (ID: 3229)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.0005294414004310966
    2. '(' → logprob: -7.8755292892456055
    3. '(n' → logprob: -9.375529289245605
    4. ' (' → logprob: -10.125529289245605
    5. '(indices' → logprob: -10.875529289245605
    6. '(Block' → logprob: -13.500529289245605
    7. '(b' → logprob: -13.750529289245605
    8. '(m' → logprob: -14.375529289245605
    9. 'blocked' → logprob: -14.875529289245605
    10. '(index' → logprob: -14.875529289245605

Token 90: ',' (ID: 11)
  Prédit: 'locked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locked' → logprob: -0.0011200957233086228
    2. '_locked' → logprob: -7.376120090484619
    3. 'blocked' → logprob: -8.501120567321777
    4. 'lock' → logprob: -8.501120567321777
    5. 'l' → logprob: -10.501120567321777
    6. '[' → logprob: -10.501120567321777
    7. 'ocked' → logprob: -11.626120567321777
    8. '_' → logprob: -12.126120567321777
    9. '_lock' → logprob: -12.751120567321777
    10. '_block' → logprob: -12.751120567321777

Token 91: ' blocked' (ID: 35275)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.076575756072998
    2. 'blocked' → logprob: -1.201575756072998
    3. ' blocked' → logprob: -1.701575756072998
    4. 'indices' → logprob: -1.826575756072998
    5. ' idx' → logprob: -4.826575756072998
    6. 'idx' → logprob: -5.326575756072998
    7. 'block' → logprob: -7.826575756072998
    8. 'b' → logprob: -8.326576232910156
    9. ' block' → logprob: -8.451576232910156
    10. 'blocks' → logprob: -8.701576232910156

Token 92: '_indices' (ID: 43508)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7327587008476257
    2. '_indices' → logprob: -0.7327587008476257
    3. ',' → logprob: -3.7327587604522705
    4. '):
' → logprob: -5.232758522033691
    5. 's' → logprob: -5.482758522033691
    6. 'indices' → logprob: -6.107758522033691
    7. ')' → logprob: -7.607758522033691
    8. '   ' → logprob: -7.607758522033691
    9. ' ):' → logprob: -7.982758522033691
    10. '  ' → logprob: -8.482758522033691

Token 93: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3135778307914734
    2. '):' → logprob: -1.3135778903961182
    3. ' ,' → logprob: -8.938577651977539
    4. ' ):' → logprob: -9.688577651977539
    5. ')' → logprob: -10.063577651977539
    6. '):
' → logprob: -10.563577651977539
    7. ',b' → logprob: -10.813577651977539
    8. ':' → logprob: -11.688577651977539
    9. ',n' → logprob: -12.438577651977539
    10. '   ' → logprob: -12.813577651977539

Token 94: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020193805918097496
    2. '):' → logprob: -4.145193576812744
    3. '():' → logprob: -6.145193576812744
    4. ':
' → logprob: -7.770193576812744
    5. ' :' → logprob: -7.895193576812744
    6. '<|end|>' → logprob: -7.895193576812744
    7. '   ' → logprob: -8.270194053649902
    8. '):
' → logprob: -8.770194053649902
    9. '```' → logprob: -9.645194053649902
    10. ':**' → logprob: -9.770194053649902

Token 95: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4829871952533722
    2. ' for' → logprob: -0.9829871654510498
    3. 'for' (adapté à ' for') → logprob: -4.982987403869629
    4. '
' → logprob: -6.732987403869629
    5. '    
' → logprob: -7.607987403869629
    6. '```' → logprob: -8.732987403869629
    7. '	for' → logprob: -9.232987403869629
    8. ' 
' → logprob: -10.357987403869629
    9. '``' → logprob: -11.232987403869629
    10. '    ' → logprob: -11.982987403869629

Token 96: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.002801555907353759
    2. 'idx' → logprob: -6.627801418304443
    3. ' i' → logprob: -6.877801418304443
    4. ' index' → logprob: -8.127801895141602
    5. ' ' → logprob: -10.002801895141602
    6. 'i' → logprob: -10.752801895141602
    7. ' _' → logprob: -11.002801895141602
    8. ' block' → logprob: -11.252801895141602
    9. ' blocked' → logprob: -11.502801895141602
    10. ' b' → logprob: -11.627801895141602

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005290681030601263
    2. 'in' → logprob: -5.255290508270264
    3. ' ' → logprob: -10.130290985107422
    4. ')' → logprob: -11.880290985107422
    5. '   ' → logprob: -12.880290985107422
    6. 's' → logprob: -13.130290985107422
    7. ',' → logprob: -13.630290985107422
    8. '	in' → logprob: -14.130290985107422
    9. '_in' → logprob: -14.380290985107422
    10. '  ' → logprob: -14.380290985107422

Token 98: ' blocked' (ID: 35275)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.004094666335731745
    2. ' blocked' → logprob: -5.50409460067749
    3. '   ' → logprob: -12.254095077514648
    4. ' ' → logprob: -12.379095077514648
    5. 'b' → logprob: -13.129095077514648
    6. 'Blocked' → logprob: -13.254095077514648
    7. 'bidden' → logprob: -13.754095077514648
    8. '  ' → logprob: -14.004095077514648
    9. '```' → logprob: -15.004095077514648
    10. 'range' → logprob: -15.254095077514648

Token 99: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0218818299472332
    2. '_' → logprob: -3.8968818187713623
    3. 's' → logprob: -8.146882057189941
    4. ')' → logprob: -8.896882057189941
    5. 'indices' → logprob: -8.896882057189941
    6. ' _' → logprob: -9.021882057189941
    7. '_)' → logprob: -9.271882057189941
    8. '_indexes' → logprob: -9.396882057189941
    9. ')_' → logprob: -9.771882057189941
    10. '):' → logprob: -10.021882057189941

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008129054680466652
    2. ':
' → logprob: -4.883129119873047
    3. ' :' → logprob: -8.133129119873047
    4. '):' → logprob: -8.883129119873047
    5. '   ' → logprob: -10.133129119873047
    6. '):
' → logprob: -10.758129119873047
    7. ' :
' → logprob: -10.883129119873047
    8. '       ' → logprob: -12.758129119873047
    9. ']:' → logprob: -13.383129119873047
    10. ')' → logprob: -13.383129119873047

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058790482580661774
    2. ':' → logprob: -3.308790445327759
    3. '   ' → logprob: -5.058790683746338
    4. ' b' → logprob: -5.433790683746338
    5. ':
' → logprob: -5.808790683746338
    6. '```' → logprob: -6.808790683746338
    7. ' 
' → logprob: -6.933790683746338
    8. 'b' → logprob: -6.933790683746338
    9. '
' → logprob: -7.058790683746338
    10. '):
' → logprob: -7.183790683746338

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.47636112570762634
    2. ' b' → logprob: -0.9763611555099487
    3. '   ' → logprob: -6.101361274719238
    4. ' if' → logprob: -10.851361274719238
    5. '       ' → logprob: -11.976361274719238
    6. 'if' → logprob: -12.226361274719238
    7. ' ' → logprob: -12.476361274719238
    8. '	b' → logprob: -13.101361274719238
    9. '```' → logprob: -13.476361274719238
    10. '    ' → logprob: -13.601361274719238

Token 103: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011689399980241433
    2. '[' → logprob: -9.125117301940918
    3. '[b' → logprob: -12.500117301940918
    4. '```' → logprob: -13.375117301940918
    5. '[int' → logprob: -13.625117301940918
    6. 'idx' → logprob: -14.875117301940918
    7. ' [' → logprob: -15.125117301940918
    8. '[i' → logprob: -15.625117301940918
    9. '[index' → logprob: -15.875117301940918
    10. 'b' → logprob: -16.3751163482666

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019267325988039374
    2. ']=' → logprob: -6.626926898956299
    3. ' ]' → logprob: -7.501926898956299
    4. '=' → logprob: -10.12692642211914
    5. ']+=' → logprob: -12.50192642211914
    6. ')' → logprob: -13.25192642211914
    7. ' =' → logprob: -13.37692642211914
    8. ']==' → logprob: -14.75192642211914
    9. '   ' → logprob: -15.00192642211914
    10. ']
' → logprob: -15.50192642211914

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014210169203579426
    2. ' =' → logprob: -4.264210224151611
    3. '+=' → logprob: -10.139209747314453
    4. ' +=' → logprob: -12.014209747314453
    5. '=True' → logprob: -14.889209747314453
    6. ' |=' → logprob: -14.889209747314453
    7. '.=' → logprob: -15.764209747314453
    8. ' ' → logprob: -16.389209747314453
    9. '1' → logprob: -17.014209747314453
    10. '=int' → logprob: -17.139209747314453

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015893694944679737
    2. '-' → logprob: -6.626589298248291
    3. 'True' → logprob: -8.50158977508545
    4. ' ' → logprob: -10.50158977508545
    5. '0' → logprob: -11.00158977508545
    6. ' -' → logprob: -11.87658977508545
    7. ' True' → logprob: -13.25158977508545
    8. '2' → logprob: -13.50158977508545
    9. '   ' → logprob: -13.75158977508545
    10. 'False' → logprob: -14.12658977508545

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006341706961393356
    2. '-' → logprob: -5.256341934204102
    3. 'True' → logprob: -6.881341934204102
    4. ' ' → logprob: -10.881341934204102
    5. '0' → logprob: -11.006341934204102
    6. ' -' → logprob: -11.256341934204102
    7. '2' → logprob: -12.006341934204102
    8. 'False' → logprob: -12.006341934204102
    9. ' True' → logprob: -12.756341934204102
    10. '100' → logprob: -13.006341934204102

Token 108: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4548768997192383
    2. '<|end|>' → logprob: -1.3298768997192383
    3. 'def' → logprob: -2.4548768997192383
    4. '

' → logprob: -4.454876899719238
    5. '\n' → logprob: -6.954876899719238
    6. '<|end|>' → logprob: -7.079876899719238
    7. 'newline' → logprob: -7.954876899719238
    8. '```' → logprob: -8.079876899719238
    9. '    
' → logprob: -8.454876899719238
    10. 'return' → logprob: -8.954876899719238

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037578094750642776
    2. '
' → logprob: -3.4125781059265137
    3. '<|end|>' → logprob: -6.537578105926514
    4. '

' → logprob: -6.662578105926514
    5. '    
' → logprob: -8.412577629089355
    6. '```' → logprob: -8.662577629089355
    7. '  
' → logprob: -8.912577629089355
    8. '\n' → logprob: -9.037577629089355
    9. '\' → logprob: -9.037577629089355
    10. ')' → logprob: -9.787577629089355

Token 110: ' init' (ID: 6327)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5356485247612
    2. ' find' → logprob: -2.2856485843658447
    3. ' max' → logprob: -2.4106485843658447
    4. ' can' → logprob: -2.5356485843658447
    5. ' solve' → logprob: -3.2856485843658447
    6. 'count' → logprob: -3.5356485843658447
    7. ' main' → logprob: -4.660648345947266
    8. ' is' → logprob: -4.910648345947266
    9. ' compute' → logprob: -4.910648345947266
    10. 'can' → logprob: -5.160648345947266

Token 111: '_' (ID: 62)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.13838428258895874
    2. '_' → logprob: -3.5133843421936035
    3. '(dp' → logprob: -4.0133843421936035
    4. '_block' → logprob: -4.5133843421936035
    5. 'dp' → logprob: -4.6383843421936035
    6. '(n' → logprob: -5.0133843421936035
    7. '_array' → logprob: -5.1383843421936035
    8. '_arr' → logprob: -5.2633843421936035
    9. '_queue' → logprob: -5.3883843421936035
    10. '_dist' → logprob: -5.3883843421936035

Token 112: 'ways' (ID: 2771)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15549030900001526
    2. 'blocked' → logprob: -2.5304903984069824
    3. 'visited' → logprob: -4.655490398406982
    4. 'ways' → logprob: -4.655490398406982
    5. 'b' → logprob: -5.030490398406982
    6. 'queue' → logprob: -5.530490398406982
    7. 'dist' → logprob: -5.655490398406982
    8. 'paths' → logprob: -6.155490398406982
    9. 'block' → logprob: -6.405490398406982
    10. 'answer' → logprob: -6.530490398406982

Token 113: '_array' (ID: 8766)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013607845176011324
    2. '(' → logprob: -9.000136375427246
    3. ' (' → logprob: -11.500136375427246
    4. '(size' → logprob: -13.875136375427246
    5. '(num' → logprob: -15.250136375427246
    6. '(len' → logprob: -15.625136375427246
    7. '_array' → logprob: -15.625136375427246
    8. '(N' → logprob: -15.625136375427246
    9. '_(' → logprob: -15.875136375427246
    10. '```' → logprob: -16.12513542175293

Token 114: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013929695705883205
    2. ' (' → logprob: -9.000139236450195
    3. '(' → logprob: -11.500139236450195
    4. '(size' → logprob: -12.375139236450195
    5. '(m' → logprob: -14.250139236450195
    6. '(length' → logprob: -14.500139236450195
    7. '(N' → logprob: -16.250139236450195
    8. '(num' → logprob: -16.375139236450195
    9. '(s' → logprob: -16.500139236450195
    10. 'def' → logprob: -16.625139236450195

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01423625461757183
    2. '):
' → logprob: -4.2642364501953125
    3. '):
' → logprob: -9.889236450195312
    4. ' ):' → logprob: -11.514236450195312
    5. ')' → logprob: -11.639236450195312
    6. '   ' → logprob: -13.639236450195312
    7. '):

' → logprob: -15.014236450195312
    8. ':' → logprob: -15.014236450195312
    9. ',' → logprob: -15.139236450195312
    10. '():' → logprob: -15.264236450195312

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10848100483417511
    2. '[' → logprob: -2.358480930328369
    3. ' [' → logprob: -5.483480930328369
    4. 'return' → logprob: -6.108480930328369
    5. ' return' → logprob: -6.483480930328369
    6. 'ways' → logprob: -9.358481407165527
    7. '[n' → logprob: -9.858481407165527
    8. ' ' → logprob: -10.483481407165527
    9. '0' → logprob: -10.608481407165527
    10. '  ' → logprob: -10.608481407165527

Token 117: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021093323826789856
    2. ' [' → logprob: -4.146093368530273
    3. '   ' → logprob: -5.771093368530273
    4. 'return' (adapté à ' return') → logprob: -6.896093368530273
    5. ' return' → logprob: -7.021093368530273
    6. '0' → logprob: -11.396093368530273
    7. ' ' → logprob: -12.021093368530273
    8. '  ' → logprob: -12.646093368530273
    9. 'ways' → logprob: -13.271093368530273
    10. ' ways' → logprob: -14.271093368530273

Token 118: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889176905155182
    2. ' [' → logprob: -2.5788917541503906
    3. '[n' → logprob: -13.45389175415039
    4. ' ' → logprob: -15.45389175415039
    5. '   ' → logprob: -15.57889175415039
    6. '0' → logprob: -16.95389175415039
    7. ' ' → logprob: -17.20389175415039
    8. '[int' → logprob: -17.32889175415039
    9. '([' → logprob: -17.32889175415039
    10. '[-' → logprob: -17.45389175415039

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. '1' → logprob: -11.250021934509277
    3. ' ' → logprob: -11.750021934509277
    4. '-' → logprob: -14.750021934509277
    5. '[' → logprob: -16.437522888183594
    6. '(' → logprob: -16.500022888183594
    7. ']' → logprob: -16.500022888183594
    8. '۰' → logprob: -16.812522888183594
    9. '```' → logprob: -16.875022888183594
    10. '   ' → logprob: -17.000022888183594

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021580755710601807
    2. 'for' → logprob: -3.896580696105957
    3. ']' → logprob: -6.896580696105957
    4. ' ' → logprob: -11.771580696105957
    5. '	for' → logprob: -11.771580696105957
    6. ' ]' → logprob: -12.771580696105957
    7. '   ' → logprob: -13.021580696105957
    8. ']*(' → logprob: -13.021580696105957
    9. 'n' → logprob: -14.146580696105957
    10. '(n' → logprob: -14.396580696105957

Token 121: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03238426521420479
    2. ' _' → logprob: -3.782384157180786
    3. ' range' → logprob: -4.782384395599365
    4. 'range' → logprob: -7.657384395599365
    5. '_range' → logprob: -8.532383918762207
    6. '(range' → logprob: -10.657383918762207
    7. ' in' → logprob: -11.282383918762207
    8. ' ' → logprob: -11.657383918762207
    9. '(' → logprob: -12.657383918762207
    10. '_in' → logprob: -13.032383918762207

Token 122: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08440099656581879
    2. ' range' → logprob: -2.5844008922576904
    3. ' in' → logprob: -6.0844011306762695
    4. '_range' → logprob: -6.5844011306762695
    5. '_' → logprob: -6.8344011306762695
    6. ' _' → logprob: -7.9594011306762695
    7. 'in' → logprob: -7.9594011306762695
    8. '(range' → logprob: -9.83440113067627
    9. 'ange' → logprob: -12.58440113067627
    10. ' ' → logprob: -13.45940113067627

Token 123: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38706105947494507
    2. 'range' → logprob: -1.1370611190795898
    3. '_' → logprob: -8.76206111907959
    4. '_range' → logprob: -10.88706111907959
    5. ' _' → logprob: -11.38706111907959
    6. '   ' → logprob: -14.01206111907959
    7. ' ' → logprob: -14.26206111907959
    8. '	range' → logprob: -14.38706111907959
    9. '(range' → logprob: -14.51206111907959
    10. '  ' → logprob: -15.76206111907959

Token 124: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4377422332763672
    2. 'range' → logprob: -1.3127422332763672
    3. '(range' → logprob: -2.687742233276367
    4. '(n' → logprob: -4.187742233276367
    5. '(' → logprob: -6.812742233276367
    6. ' (' → logprob: -7.062742233276367
    7. '_' → logprob: -8.812742233276367
    8. '_range' → logprob: -10.187742233276367
    9. ' ' → logprob: -10.437742233276367
    10. '   ' → logprob: -11.187742233276367

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021605342626572
    2. ' +' → logprob: -2.3502161502838135
    3. '+
' → logprob: -12.850215911865234
    4. ')' → logprob: -13.100215911865234
    5. ')]' → logprob: -13.600215911865234
    6. '   ' → logprob: -13.975215911865234
    7. ' ' → logprob: -14.600215911865234
    8. '1' → logprob: -14.975215911865234
    9. '
' → logprob: -15.225215911865234
    10. ' +
' → logprob: -15.350215911865234

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013447580859065056
    2. ' ' → logprob: -7.251344680786133
    3. '2' → logprob: -7.376344680786133
    4. '(' → logprob: -12.876344680786133
    5. '   ' → logprob: -13.126344680786133
    6. '
' → logprob: -13.876344680786133
    7. '7' → logprob: -14.626344680786133
    8. '  ' → logprob: -14.813844680786133
    9. ')' → logprob: -14.938844680786133
    10. '```' → logprob: -14.938844680786133

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006998073076829314
    2. '2' → logprob: -7.625699996948242
    3. ' ' → logprob: -8.500699996948242
    4. '   ' → logprob: -12.813199996948242
    5. '(' → logprob: -13.500699996948242
    6. '+' → logprob: -14.313199996948242
    7. '```' → logprob: -14.500699996948242
    8. '3' → logprob: -14.813199996948242
    9. '
' → logprob: -14.875699996948242
    10. '  ' → logprob: -14.938199996948242

Token 128: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008212057873606682
    2. ']' → logprob: -5.008212089538574
    3. ')' → logprob: -6.508212089538574
    4. '])' → logprob: -13.258212089538574
    5. ')]
' → logprob: -14.758212089538574
    6. '   ' → logprob: -14.883212089538574
    7. ' ]' → logprob: -15.008212089538574
    8. ']
' → logprob: -15.008212089538574
    9. ')])' → logprob: -15.008212089538574
    10. ')],' → logprob: -15.633212089538574

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005699523026123643
    2. '<|end|>' → logprob: -7.625569820404053
    3. '
' → logprob: -10.250570297241211
    4. '```' → logprob: -10.750570297241211
    5. ')' → logprob: -11.625570297241211
    6. ' def' → logprob: -12.250570297241211
    7. '<|end|>' → logprob: -12.625570297241211
    8. '

' → logprob: -13.000570297241211
    9. '  
' → logprob: -14.000570297241211
    10. 'ndef' → logprob: -14.125570297241211

Token 130: ' set' (ID: 920)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5450658798217773
    2. 'count' → logprob: -1.6700658798217773
    3. ' compute' → logprob: -2.2950658798217773
    4. ' calculate' → logprob: -3.2950658798217773
    5. 'compute' → logprob: -3.4200658798217773
    6. 'calculate' → logprob: -3.9200658798217773
    7. 'def' → logprob: -4.045065879821777
    8. ' def' → logprob: -4.920065879821777
    9. ' calc' → logprob: -5.170065879821777
    10. 'calc' → logprob: -5.795065879821777

Token 131: '_initial' (ID: 45740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021608758717775345
    2. '_initial' → logprob: -4.021608829498291
    3. '_start' → logprob: -7.271608829498291
    4. '_up' → logprob: -7.646608829498291
    5. '_max' → logprob: -8.396608352661133
    6. '_w' → logprob: -8.396608352661133
    7. '_init' → logprob: -8.646608352661133
    8. '_default' → logprob: -8.771608352661133
    9. '_first' → logprob: -8.771608352661133
    10. '_zero' → logprob: -9.021608352661133

Token 132: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009155054576694965
    2. '_conditions' → logprob: -8.12591552734375
    3. '_positions' → logprob: -8.75091552734375
    4. '_position' → logprob: -9.00091552734375
    5. '_values' → logprob: -9.00091552734375
    6. '_way' → logprob: -9.87591552734375
    7. '_value' → logprob: -10.37591552734375
    8. 's' → logprob: -10.75091552734375
    9. '_w' → logprob: -10.87591552734375
    10. '(' → logprob: -10.87591552734375

Token 133: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.016730008646845818
    2. 'conditions' → logprob: -4.766729831695557
    3. 'values' → logprob: -5.266729831695557
    4. 'way' → logprob: -6.016729831695557
    5. 'positions' → logprob: -8.266730308532715
    6. 'dp' → logprob: -9.641730308532715
    7. 'condition' → logprob: -10.016730308532715
    8. 'states' → logprob: -10.516730308532715
    9. 'value' → logprob: -10.766730308532715
    10. 'position' → logprob: -11.016730308532715

Token 134: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021276555955410004
    2. '(arr' → logprob: -4.896276473999023
    3. '()' → logprob: -5.521276473999023
    4. '(n' → logprob: -5.646276473999023
    5. '(w' → logprob: -5.646276473999023
    6. '(b' → logprob: -7.271276473999023
    7. '(a' → logprob: -7.396276473999023
    8. '():' → logprob: -7.896276473999023
    9. ' (' → logprob: -8.146276473999023
    10. 'ways' → logprob: -9.396276473999023

Token 135: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9299637079238892
    2. '[' → logprob: -1.3049637079238892
    3. ')' → logprob: -1.6799637079238892
    4. 't' → logprob: -2.9299635887145996
    5. '):' → logprob: -3.0549635887145996
    6. ')]' → logprob: -3.9299635887145996
    7. ')[' → logprob: -5.3049635887146
    8. ']' → logprob: -5.9299635887146
    9. '(s' → logprob: -6.3049635887146
    10. '])' → logprob: -6.5549635887146

Token 136: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8202751874923706
    2. '(s' → logprob: -1.1952751874923706
    3. '   ' → logprob: -1.8202751874923706
    4. '[s' → logprob: -2.57027530670166
    5. ' =' → logprob: -4.44527530670166
    6. '(' → logprob: -6.44527530670166
    7. '=' → logprob: -6.69527530670166
    8. 'def' → logprob: -6.82027530670166
    9. 's' → logprob: -7.19527530670166
    10. ':' → logprob: -7.32027530670166

Token 137: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06544558703899384
    2. 'ways' → logprob: -3.1904456615448
    3. '   ' → logprob: -4.440445423126221
    4. 'if' → logprob: -5.440445423126221
    5. ' s' → logprob: -5.815445423126221
    6. ' ways' → logprob: -6.565445423126221
    7. '[' → logprob: -6.940445423126221
    8. ' if' → logprob: -9.065445899963379
    9. '[s' → logprob: -9.440445899963379
    10. 'for' → logprob: -9.440445899963379

Token 138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006955484393984079
    2. ' =' → logprob: -5.756955623626709
    3. '[s' → logprob: -6.506955623626709
    4. 't' → logprob: -7.256955623626709
    5. 'et' → logprob: -7.506955623626709
    6. '=' → logprob: -7.756955623626709
    7. '   ' → logprob: -9.50695514678955
    8. ' ' → logprob: -10.13195514678955
    9. 'ways' → logprob: -10.38195514678955
    10. '[:' → logprob: -10.38195514678955

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.901345038088039e-05
    2. '1' → logprob: -9.750099182128906
    3. ']' → logprob: -10.250099182128906
    4. ' ' → logprob: -13.125099182128906
    5. '[' → logprob: -14.000099182128906
    6. '2' → logprob: -14.125099182128906
    7. '-' → logprob: -14.625099182128906
    8. ']=' → logprob: -15.625099182128906
    9. '][' → logprob: -15.875099182128906
    10. ''s' → logprob: -16.250099182128906

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001721934968372807
    2. ']=' → logprob: -8.87517261505127
    3. ' ]' → logprob: -10.37517261505127
    4. ']>' → logprob: -15.62517261505127
    5. '()]' → logprob: -15.62517261505127
    6. ')]' → logprob: -15.87517261505127
    7. '`]' → logprob: -15.87517261505127
    8. ']==' → logprob: -16.000171661376953
    9. ']
' → logprob: -16.125171661376953
    10. ']+=' → logprob: -16.250171661376953

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04815337434411049
    2. ' =' → logprob: -3.4231534004211426
    3. ']' → logprob: -4.298153400421143
    4. ']=' → logprob: -7.173153400421143
    5. '[' → logprob: -10.298152923583984
    6. ')' → logprob: -12.798152923583984
    7. ')=' → logprob: -13.673152923583984
    8. ' ' → logprob: -13.923152923583984
    9. ' ]' → logprob: -13.923152923583984
    10. '1' → logprob: -14.048152923583984

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.125016212463379
    3. '0' → logprob: -14.000016212463379
    4. '   ' → logprob: -14.125016212463379
    5. '  ' → logprob: -15.875016212463379
    6. ' ' → logprob: -17.312517166137695
    7. '۱' → logprob: -17.625017166137695
    8. '
' → logprob: -17.750017166137695
    9. '```' → logprob: -18.375017166137695
    10. '`' → logprob: -18.375017166137695

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.87501049041748
    3. '0' → logprob: -12.75001049041748
    4. '   ' → logprob: -16.562509536743164
    5. '۱' → logprob: -16.937509536743164
    6. '`' → logprob: -17.375009536743164
    7. '2' → logprob: -17.500009536743164
    8. ' ' → logprob: -17.562509536743164
    9. '```' → logprob: -17.687509536743164
    10. '' → logprob: -18.000009536743164

Token 144: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001126763760112226
    2. '
' → logprob: -6.876126766204834
    3. '<|end|>' → logprob: -9.501126289367676
    4. ' def' → logprob: -12.126126289367676
    5. '

' → logprob: -12.751126289367676
    6. '  
' → logprob: -13.126126289367676
    7. 'ndef' → logprob: -13.376126289367676
    8. '    
' → logprob: -13.501126289367676
    9. '\' → logprob: -13.501126289367676
    10. ')' → logprob: -13.751126289367676

Token 146: ' set' (ID: 920)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.055394172668457
    2. ' compute' → logprob: -1.305394172668457
    3. ' def' → logprob: -1.430394172668457
    4. 'def' → logprob: -2.930394172668457
    5. ' calculate' → logprob: -3.055394172668457
    6. ' solve' → logprob: -4.555394172668457
    7. 'count' → logprob: -5.055394172668457
    8. 'compute' → logprob: -5.180394172668457
    9. ' find' → logprob: -5.305394172668457
    10. ' calc' → logprob: -5.555394172668457

Token 147: '_first' (ID: 29347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16794830560684204
    2. '_initial' → logprob: -2.0429482460021973
    3. ' s' → logprob: -4.542948246002197
    4. ' _' → logprob: -5.542948246002197
    5. '_max' → logprob: -5.667948246002197
    6. '_final' → logprob: -6.042948246002197
    7. '(s' → logprob: -7.167948246002197
    8. '_next' → logprob: -8.167948722839355
    9. '_up' → logprob: -8.167948722839355
    10. '_s' → logprob: -8.292948722839355

Token 148: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08992455899715424
    2. '(s' → logprob: -3.0899245738983154
    3. '_way' → logprob: -3.9649245738983154
    4. '_block' → logprob: -4.964924335479736
    5. '(' → logprob: -5.589924335479736
    6. '_step' → logprob: -6.089924335479736
    7. '_two' → logprob: -6.589924335479736
    8. '_position' → logprob: -7.089924335479736
    9. '_element' → logprob: -7.464924335479736
    10. '(_' → logprob: -7.464924335479736

Token 149: '_' (ID: 62)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002196409972384572
    2. '(' → logprob: -6.377196311950684
    3. '_' → logprob: -8.377196311950684
    4. 's' → logprob: -8.502196311950684
    5. 'ways' → logprob: -11.127196311950684
    6. ' (' → logprob: -11.752196311950684
    7. '_step' → logprob: -11.877196311950684
    8. '   ' → logprob: -12.752196311950684
    9. '_index' → logprob: -12.752196311950684
    10. '(w' → logprob: -12.877196311950684

Token 150: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.1671687662601471
    2. 'way' → logprob: -1.9171687364578247
    3. 'step' → logprob: -5.292168617248535
    4. '(' → logprob: -7.417168617248535
    5. 's' → logprob: -8.167168617248535
    6. 'steps' → logprob: -8.167168617248535
    7. '1' → logprob: -8.542168617248535
    8. '(s' → logprob: -8.792168617248535
    9. 'value' → logprob: -8.917168617248535
    10. 'position' → logprob: -9.292168617248535

Token 151: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008740628836676478
    2. '(' → logprob: -7.750874042510986
    3. ' (' → logprob: -7.875874042510986
    4. 's' → logprob: -10.000874519348145
    5. ' s' → logprob: -12.250874519348145
    6. 'def' → logprob: -13.000874519348145
    7. '(n' → logprob: -13.250874519348145
    8. '(
' → logprob: -13.375874519348145
    9. '(w' → logprob: -13.625874519348145
    10. '(t' → logprob: -13.875874519348145

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016251133754849434
    2. '):' → logprob: -5.391251087188721
    3. ' ,' → logprob: -5.516251087188721
    4. ',s' → logprob: -6.016251087188721
    5. ',n' → logprob: -6.391251087188721
    6. '(s' → logprob: -6.891251087188721
    7. '):
' → logprob: -7.391251087188721
    8. '[' → logprob: -7.516251087188721
    9. ')' → logprob: -8.016251564025879
    10. '(n' → logprob: -8.141251564025879

Token 153: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.607612669467926
    2. 'n' → logprob: -1.7326126098632812
    3. 'b' → logprob: -1.9826126098632812
    4. ' b' → logprob: -2.9826126098632812
    5. ' n' → logprob: -3.1076126098632812
    6. ' ' → logprob: -4.107612609863281
    7. 's' → logprob: -4.732612609863281
    8. ' s' → logprob: -4.982612609863281
    9. '0' → logprob: -5.107612609863281
    10. ')' → logprob: -5.607612609863281

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11803369224071503
    2. ',' → logprob: -2.6180336475372314
    3. '):
' → logprob: -3.3680336475372314
    4. ')' → logprob: -5.6180338859558105
    5. ' ):' → logprob: -9.118033409118652
    6. '):

' → logprob: -9.868033409118652
    7. '[' → logprob: -10.243033409118652
    8. '   ' → logprob: -10.368033409118652
    9. '):
' → logprob: -10.618033409118652
    10. ' ,' → logprob: -11.368033409118652

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09894983470439911
    2. ' if' → logprob: -3.223949909210205
    3. '[' → logprob: -3.473949909210205
    4. 'if' → logprob: -4.598949909210205
    5. '(s' → logprob: -4.848949909210205
    6. ' s' → logprob: -6.348949909210205
    7. 'def' → logprob: -6.598949909210205
    8. '(' → logprob: -7.098949909210205
    9. 's' → logprob: -8.223949432373047
    10. ' ' → logprob: -8.348949432373047

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2138519138097763
    2. ' if' → logprob: -2.2138519287109375
    3. 's' → logprob: -2.9638519287109375
    4. '   ' → logprob: -3.5888519287109375
    5. ' s' → logprob: -5.8388519287109375
    6. 'for' → logprob: -7.0888519287109375
    7. ' for' → logprob: -8.713851928710938
    8. ' ' → logprob: -10.338851928710938
    9. '```' → logprob: -10.713851928710938
    10. '1' → logprob: -11.588851928710938

Token 157: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.41463717818260193
    2. 'b' → logprob: -1.2896372079849243
    3. ' not' → logprob: -3.1646370887756348
    4. ' len' → logprob: -4.289637088775635
    5. 'len' → logprob: -5.414637088775635
    6. 'not' → logprob: -5.664637088775635
    7. '   ' → logprob: -8.914637565612793
    8. ' ' → logprob: -11.539637565612793
    9. 'n' → logprob: -11.539637565612793
    10. '(len' → logprob: -12.039637565612793

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. ' [' → logprob: -12.375005722045898
    3. '1' → logprob: -14.500005722045898
    4. '```' → logprob: -14.625005722045898
    5. '   ' → logprob: -15.500005722045898
    6. ' ' → logprob: -15.750005722045898
    7. '0' → logprob: -15.750005722045898
    8. '==' → logprob: -15.875005722045898
    9. '[
' → logprob: -17.1250057220459
    10. '>' → logprob: -17.6250057220459

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005380433984100819
    2. '0' → logprob: -5.255380630493164
    3. ' ' → logprob: -9.130380630493164
    4. '[' → logprob: -10.880380630493164
    5. '   ' → logprob: -11.380380630493164
    6. '```' → logprob: -12.880380630493164
    7. ']' → logprob: -13.380380630493164
    8. '
' → logprob: -13.630380630493164
    9. '  ' → logprob: -14.630380630493164
    10. '(' → logprob: -14.942880630493164

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00816038716584444
    2. ']==' → logprob: -4.883160591125488
    3. ' ]' → logprob: -7.633160591125488
    4. '==' → logprob: -9.758160591125488
    5. '[' → logprob: -12.133160591125488
    6. ' ' → logprob: -12.883160591125488
    7. ' ==' → logprob: -13.633160591125488
    8. ']!=' → logprob: -14.383160591125488
    9. '   ' → logprob: -14.758160591125488
    10. '0' → logprob: -15.258160591125488

Token 161: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0033545205369591713
    2. ' ==' → logprob: -5.878354549407959
    3. ']==' → logprob: -8.2533540725708
    4. '!=' → logprob: -8.6283540725708
    5. '=' → logprob: -9.7533540725708
    6. ']' → logprob: -11.0033540725708
    7. '[' → logprob: -11.2533540725708
    8. ')' → logprob: -12.3783540725708
    9. '0' → logprob: -12.5033540725708
    10. ')==' → logprob: -12.7533540725708

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028268657624721527
    2. ' ' → logprob: -6.502826690673828
    3. '1' → logprob: -6.627826690673828
    4. '   ' → logprob: -15.002826690673828
    5. '=' → logprob: -16.252826690673828
    6. '۰' → logprob: -17.127826690673828
    7. '==' → logprob: -17.440326690673828
    8. '	' → logprob: -17.690326690673828
    9. '  ' → logprob: -17.877826690673828
    10. '```' → logprob: -18.127826690673828

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000933017407078296
    2. ' ' → logprob: -7.5009331703186035
    3. '1' → logprob: -7.8759331703186035
    4. '   ' → logprob: -16.563432693481445
    5. '۰' → logprob: -17.438432693481445
    6. '```' → logprob: -17.438432693481445
    7. '  ' → logprob: -18.313432693481445
    8. ' ' → logprob: -18.625932693481445
    9. '=' → logprob: -18.625932693481445
    10. ' ' → logprob: -18.750932693481445

Token 164: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5762648582458496
    2. ':' → logprob: -0.8262648582458496
    3. ':s' → logprob: -9.201265335083008
    4. '   ' → logprob: -9.576265335083008
    5. ' :
' → logprob: -9.701265335083008
    6. '       ' → logprob: -10.201265335083008
    7. '):
' → logprob: -10.826265335083008
    8. ' :' → logprob: -11.201265335083008
    9. ':
' → logprob: -11.951265335083008
    10. ':

' → logprob: -12.076265335083008

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014097454957664013
    2. ' s' → logprob: -4.889097690582275
    3. '   ' → logprob: -5.514097690582275
    4. 's' → logprob: -6.264097690582275
    5. '
' → logprob: -8.514097213745117
    6. ',' → logprob: -8.889097213745117
    7. ',s' → logprob: -9.889097213745117
    8. '    
' → logprob: -10.389097213745117
    9. ':
' → logprob: -10.889097213745117
    10. ':' → logprob: -10.889097213745117

Token 166: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.22589825093746185
    2. ' s' → logprob: -1.600898265838623
    3. '   ' → logprob: -7.725898265838623
    4. '       ' → logprob: -10.850897789001465
    5. ' ' → logprob: -11.350897789001465
    6. '           ' → logprob: -12.475897789001465
    7. '  ' → logprob: -12.850897789001465
    8. '    ' → logprob: -12.975897789001465
    9. '	s' → logprob: -13.850897789001465
    10. '```' → logprob: -13.850897789001465

Token 167: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. ' [' → logprob: -12.875004768371582
    3. '1' → logprob: -13.500004768371582
    4. '```' → logprob: -15.000004768371582
    5. ' ' → logprob: -16.625003814697266
    6. '\[' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.875003814697266
    8. '[
' → logprob: -18.125003814697266
    9. '][' → logprob: -18.750003814697266
    10. ')[' → logprob: -19.125003814697266

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.000003814697266
    3. '0' → logprob: -13.375003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '```' → logprob: -18.000003814697266
    6. '[' → logprob: -18.125003814697266
    7. ']' → logprob: -18.500003814697266
    8. '  ' → logprob: -18.625003814697266
    9. '
' → logprob: -19.250003814697266
    10. '    ' → logprob: -20.250003814697266

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002555688377469778
    2. ' ]' → logprob: -6.252555847167969
    3. ']=' → logprob: -7.377555847167969
    4. '=' → logprob: -13.377555847167969
    5. ']+=' → logprob: -16.00255584716797
    6. '   ' → logprob: -16.12755584716797
    7. ')' → logprob: -17.50255584716797
    8. ']
' → logprob: -17.50255584716797
    9. ']==' → logprob: -18.00255584716797
    10. ' ' → logprob: -18.12755584716797

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602257490158081
    2. ' =' → logprob: -1.910225749015808
    3. ']=' → logprob: -14.285225868225098
    4. ']' → logprob: -15.410225868225098
    5. ')=' → logprob: -16.03522491455078
    6. '[' → logprob: -16.16022491455078
    7. '.=' → logprob: -16.28522491455078
    8. ' +=' → logprob: -16.53522491455078
    9. '+=' → logprob: -16.66022491455078
    10. ')' → logprob: -16.78522491455078

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. 's' → logprob: -8.87515926361084
    3. ' ' → logprob: -10.87515926361084
    4. ' s' → logprob: -16.000158309936523
    5. '   ' → logprob: -16.250158309936523
    6. '  ' → logprob: -19.125158309936523
    7. '0' → logprob: -20.187658309936523
    8. '```' → logprob: -20.437658309936523
    9. '１' → logprob: -20.500158309936523
    10. '۱' → logprob: -20.875158309936523

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015300170343834907
    2. 's' → logprob: -8.875152587890625
    3. ' ' → logprob: -11.250152587890625
    4. ' s' → logprob: -16.000152587890625
    5. '   ' → logprob: -17.375152587890625
    6. '0' → logprob: -18.562652587890625
    7. '(s' → logprob: -18.937652587890625
    8. '۱' → logprob: -19.312652587890625
    9. '１' → logprob: -19.375152587890625
    10. '  ' → logprob: -19.437652587890625

Token 173: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.776914656162262
    2. '<|end|>' → logprob: -0.776914656162262
    3. '
' → logprob: -2.776914596557617
    4. '\n' → logprob: -4.901914596557617
    5. '\' → logprob: -5.526914596557617
    6. '<|end|>' → logprob: -6.026914596557617
    7. '```' → logprob: -6.651914596557617
    8. ')' → logprob: -7.026914596557617
    9. ' def' → logprob: -7.526914596557617
    10. '...' → logprob: -8.401914596557617

Token 175: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17211459577083588
    2. ':' → logprob: -2.172114610671997
    3. ':
' → logprob: -4.047114372253418
    4. '0' → logprob: -4.672114372253418
    5. '
' → logprob: -5.047114372253418
    6. '   ' → logprob: -5.047114372253418
    7. ' s' → logprob: -6.797114372253418
    8. ',' → logprob: -7.047114372253418
    9. '1' → logprob: -7.797114372253418
    10. '<|end|>' → logprob: -7.922114372253418

Token 177: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16135454177856445
    2. '       ' → logprob: -2.4113545417785645
    3. ' s' → logprob: -2.9113545417785645
    4. '   ' → logprob: -5.4113545417785645
    5. '0' → logprob: -7.7863545417785645
    6. ' ' → logprob: -11.786354064941406
    7. '    ' → logprob: -12.661354064941406
    8. '	s' → logprob: -12.661354064941406
    9. '        
' → logprob: -12.786354064941406
    10. ' pass' → logprob: -12.786354064941406

Token 178: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.25222593545913696
    2. ' s' → logprob: -1.5022258758544922
    3. '0' → logprob: -8.252225875854492
    4. '   ' → logprob: -10.502225875854492
    5. '       ' → logprob: -12.377225875854492
    6. ' ' → logprob: -12.502225875854492
    7. '	s' → logprob: -15.627225875854492
    8. '    ' → logprob: -15.877225875854492
    9. ' 
' → logprob: -16.127225875854492
    10. '1' → logprob: -16.627225875854492

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '0' → logprob: -12.750007629394531
    3. ' [' → logprob: -13.750007629394531
    4. '\[' → logprob: -14.000007629394531
    5. '=' → logprob: -14.125007629394531
    6. '1' → logprob: -14.125007629394531
    7. '```' → logprob: -14.500007629394531
    8. ' =' → logprob: -15.375007629394531
    9. '[
' → logprob: -16.00000762939453
    10. ' ' → logprob: -16.12500762939453

Token 180: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00118368084076792
    2. '1' → logprob: -7.37618350982666
    3. ' ' → logprob: -7.50118350982666
    4. '[' → logprob: -13.87618350982666
    5. '   ' → logprob: -13.87618350982666
    6. '  ' → logprob: -14.12618350982666
    7. '```' → logprob: -14.43868350982666
    8. '2' → logprob: -15.12618350982666
    9. '-' → logprob: -15.62618350982666
    10. ')' → logprob: -15.62618350982666

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002243631286546588
    2. ']=' → logprob: -6.377243518829346
    3. '=' → logprob: -8.127243995666504
    4. '[' → logprob: -8.752243995666504
    5. ' ]' → logprob: -9.377243995666504
    6. ' =' → logprob: -13.752243995666504
    7. ')' → logprob: -14.252243995666504
    8. '   ' → logprob: -14.377243995666504
    9. ']==' → logprob: -15.752243995666504
    10. '0' → logprob: -15.877243995666504

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '0' → logprob: -17.375553131103516
    4. '=int' → logprob: -18.500553131103516
    5. '=
' → logprob: -18.500553131103516
    6. ']=' → logprob: -19.375553131103516
    7. '   ' → logprob: -19.375553131103516
    8. ' ' → logprob: -19.375553131103516
    9. '[' → logprob: -20.000553131103516
    10. '```' → logprob: -20.250553131103516

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '۰' → logprob: -18.750001907348633
    5. '000' → logprob: -19.687501907348633
    6. '```' → logprob: -19.750001907348633
    7. '  ' → logprob: -19.812501907348633
    8. '00' → logprob: -19.937501907348633
    9. '=' → logprob: -21.000001907348633
    10. 'def' → logprob: -21.125001907348633

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.375
    4. '۰' → logprob: -18.875
    5. '000' → logprob: -19.0
    6. '00' → logprob: -19.5
    7. '```' → logprob: -20.0625
    8. '  ' → logprob: -20.375
    9. '  ' → logprob: -20.9375
    10. 'def' → logprob: -21.0625

Token 185: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006924704648554325
    2. '
' → logprob: -5.131924629211426
    3. '<|end|>' → logprob: -7.256924629211426
    4. '

' → logprob: -9.006924629211426
    5. ' def' → logprob: -9.381924629211426
    6. ')' → logprob: -10.881924629211426
    7. '\n' → logprob: -11.131924629211426
    8. '\' → logprob: -11.131924629211426
    9. '<|end|>' → logprob: -11.631924629211426
    10. '```' → logprob: -11.631924629211426

Token 186: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026575818192213774
    2. '\' → logprob: -6.877657413482666
    3. '
' → logprob: -7.377657413482666
    4. '<|end|>' → logprob: -7.627657413482666
    5. '_' → logprob: -8.752657890319824
    6. '\n' → logprob: -9.377657890319824
    7. ')' → logprob: -9.752657890319824
    8. ' def' → logprob: -9.752657890319824
    9. '```' → logprob: -10.252657890319824
    10. 'd' → logprob: -10.877657890319824

Token 187: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.8743396401405334
    2. 'def' → logprob: -1.6243395805358887
    3. 'compute' → logprob: -2.1243395805358887
    4. ' calculate' → logprob: -2.2493395805358887
    5. ' def' → logprob: -2.6243395805358887
    6. 'calculate' → logprob: -3.3743395805358887
    7. ' calc' → logprob: -3.7493395805358887
    8. ' count' → logprob: -4.499339580535889
    9. 'calc' → logprob: -4.874339580535889
    10. 'count' → logprob: -5.749339580535889

Token 188: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005604196921922266
    2. '_next' → logprob: -8.625560760498047
    3. '(s' → logprob: -9.125560760498047
    4. '_steps' → logprob: -9.250560760498047
    5. '(n' → logprob: -9.750560760498047
    6. '_step' → logprob: -10.375560760498047
    7. '_s' → logprob: -10.500560760498047
    8. '(' → logprob: -12.000560760498047
    9. '(_' → logprob: -12.125560760498047
    10. '_(' → logprob: -12.125560760498047

Token 189: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0015752100152894855
    2. 'steps' → logprob: -7.001574993133545
    3. 'dp' → logprob: -8.251575469970703
    4. 'paths' → logprob: -8.376575469970703
    5. 's' → logprob: -10.126575469970703
    6. 'number' → logprob: -10.501575469970703
    7. '_' → logprob: -10.876575469970703
    8. 'stairs' → logprob: -10.876575469970703
    9. 'way' → logprob: -11.251575469970703
    10. 'step' → logprob: -11.376575469970703

Token 190: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3902074098587036
    2. '(n' → logprob: -1.1402074098587036
    3. '(' → logprob: -5.890207290649414
    4. ' (' → logprob: -7.515207290649414
    5. 's' → logprob: -12.640207290649414
    6. '(i' → logprob: -13.140207290649414
    7. '(
' → logprob: -13.265207290649414
    8. '(b' → logprob: -13.515207290649414
    9. '(a' → logprob: -13.765207290649414
    10. '((' → logprob: -13.890207290649414

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00320563861168921
    2. ',s' → logprob: -6.1282057762146
    3. '):' → logprob: -7.0032057762146
    4. 's' → logprob: -10.003205299377441
    5. ' ,' → logprob: -10.253205299377441
    6. ' s' → logprob: -11.753205299377441
    7. '   ' → logprob: -11.878205299377441
    8. '):
' → logprob: -12.128205299377441
    9. ')' → logprob: -12.378205299377441
    10. ',n' → logprob: -13.378205299377441

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023590294644236565
    2. ' b' → logprob: -3.898590326309204
    3. 's' → logprob: -5.898590087890625
    4. ' s' → logprob: -8.148590087890625
    5. ' ' → logprob: -12.898590087890625
    6. '   ' → logprob: -13.023590087890625
    7. ')' → logprob: -13.711090087890625
    8. 'block' → logprob: -13.961090087890625
    9. 'n' → logprob: -14.023590087890625
    10. 'blocked' → logprob: -14.586090087890625

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008095058728940785
    2. ',s' → logprob: -7.250809669494629
    3. ' ,' → logprob: -9.500809669494629
    4. 's' → logprob: -11.375809669494629
    5. '):' → logprob: -12.000809669494629
    6. '   ' → logprob: -12.750809669494629
    7. ' s' → logprob: -13.000809669494629
    8. '):
' → logprob: -13.875809669494629
    9. ',
' → logprob: -15.000809669494629
    10. '_,' → logprob: -15.375809669494629

Token 194: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06993954628705978
    2. ' s' → logprob: -2.694939613342285
    3. ')' → logprob: -14.194939613342285
    4. '   ' → logprob: -14.444939613342285
    5. ' ways' → logprob: -14.569939613342285
    6. 'ways' → logprob: -15.069939613342285
    7. ' ' → logprob: -15.194939613342285
    8. '_s' → logprob: -15.944939613342285
    9. ' )' → logprob: -15.944939613342285
    10. '	s' → logprob: -16.31993865966797

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0298176072537899
    2. '):
' → logprob: -3.529817581176758
    3. ')' → logprob: -10.404817581176758
    4. '   ' → logprob: -11.279817581176758
    5. '):
' → logprob: -11.529817581176758
    6. ' ):' → logprob: -11.904817581176758
    7. ',' → logprob: -12.154817581176758
    8. ':' → logprob: -14.404817581176758
    9. '):

' → logprob: -14.404817581176758
    10. ' ' → logprob: -14.904817581176758

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03081359714269638
    2. '
' → logprob: -3.530813694000244
    3. ' for' → logprob: -6.905813694000244
    4. 'for' → logprob: -10.405813217163086
    5. '    
' → logprob: -10.905813217163086
    6. '```' → logprob: -12.405813217163086
    7. '
' → logprob: -12.655813217163086
    8. '	for' → logprob: -13.780813217163086
    9. '\n' → logprob: -13.905813217163086
    10. ' ' → logprob: -14.405813217163086

Token 197: ' MOD' (ID: 32868)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14315564930438995
    2. '   ' → logprob: -2.143155574798584
    3. ' for' → logprob: -4.143155574798584
    4. '
' → logprob: -8.518156051635742
    5. 'i' → logprob: -11.143156051635742
    6. ' ' → logprob: -12.518156051635742
    7. '    
' → logprob: -12.893156051635742
    8. ' i' → logprob: -13.518156051635742
    9. '	for' → logprob: -14.018156051635742
    10. '  ' → logprob: -14.143156051635742

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868962228298187
    2. ' =' → logprob: -1.1368962526321411
    3. ',' → logprob: -11.011896133422852
    4. ' ' → logprob: -12.886896133422852
    5. '   ' → logprob: -13.011896133422852
    6. ':' → logprob: -14.011896133422852
    7. '  ' → logprob: -14.386896133422852
    8. '=int' → logprob: -14.386896133422852
    9. ' =
' → logprob: -14.511896133422852
    10. '_' → logprob: -14.761896133422852

Token 199: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21163661777973175
    2. ' ' → logprob: -1.8366366624832153
    3. '10' → logprob: -3.461636543273926
    4. '1' → logprob: -11.711636543273926
    5. ' ' → logprob: -14.711636543273926
    6. '123' → logprob: -14.836636543273926
    7. 'int' → logprob: -14.961636543273926
    8. '101' → logprob: -15.461636543273926
    9. '   ' → logprob: -15.711636543273926
    10. '```' → logprob: -16.336637496948242

Token 200: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1602790653705597
    2. '10' → logprob: -1.9102790355682373
    3. '1' → logprob: -10.410279273986816
    4. '123' → logprob: -11.785279273986816
    5. '998' → logprob: -11.785279273986816
    6. 'int' → logprob: -12.160279273986816
    7. ' ' → logprob: -13.660279273986816
    8. '(' → logprob: -13.660279273986816
    9. '101' → logprob: -14.660279273986816
    10. '```' → logprob: -15.035279273986816

Token 201: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0002908910100813955
    2. '9' → logprob: -8.500290870666504
    3. '_' → logprob: -9.875290870666504
    4. '09' → logprob: -11.250290870666504
    5. '```' → logprob: -11.500290870666504
    6. '009' → logprob: -12.500290870666504
    7. '07' → logprob: -13.000290870666504
    8. '+' → logprob: -13.375290870666504
    9. '007' → logprob: -13.500290870666504
    10. '   ' → logprob: -13.625290870666504

Token 202: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -3.666993507067673e-05
    2. '7' → logprob: -10.875036239624023
    3. '19' → logprob: -12.125036239624023
    4. '007' → logprob: -12.500036239624023
    5. '```' → logprob: -13.375036239624023
    6. '0' → logprob: -13.500036239624023
    7. '3' → logprob: -13.625036239624023
    8. '   ' → logprob: -13.750036239624023
    9. '+' → logprob: -13.750036239624023
    10. '_' → logprob: -14.000036239624023

Token 203: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -17.0
    3. '07' → logprob: -17.125
    4. ' ' → logprob: -17.375
    5. '+' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. '
' → logprob: -19.0
    8. '   ' → logprob: -19.375
    9. '0' → logprob: -20.25
    10. '

' → logprob: -20.625

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14346542954444885
    2. '   ' → logprob: -2.018465518951416
    3. ' for' → logprob: -7.518465518951416
    4. '    
' → logprob: -8.768465042114258
    5. 'for' → logprob: -9.768465042114258
    6. '\n' → logprob: -11.768465042114258
    7. '	for' → logprob: -12.018465042114258
    8. '
' → logprob: -12.018465042114258
    9. ' 
' → logprob: -12.393465042114258
    10. '  
' → logprob: -12.893465042114258

Token 205: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003367469646036625
    2. '   ' → logprob: -6.1283674240112305
    3. ' for' → logprob: -6.8783674240112305
    4. 'for' → logprob: -9.50336742401123
    5. '    
' → logprob: -10.50336742401123
    6. ' 
' → logprob: -11.12836742401123
    7. '
' → logprob: -11.12836742401123
    8. '  
' → logprob: -12.12836742401123
    9. '\n' → logprob: -12.37836742401123
    10. '	for' → logprob: -12.62836742401123

Token 206: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004403294064104557
    2. ' for' → logprob: -5.754403114318848
    3. '   ' → logprob: -6.754403114318848
    4. '
' → logprob: -9.754403114318848
    5. '	for' → logprob: -14.629403114318848
    6. ' ' → logprob: -15.629403114318848
    7. '```' → logprob: -16.004404067993164
    8. '    
' → logprob: -16.254404067993164
    9. 'def' → logprob: -16.379404067993164
    10. 'i' → logprob: -16.379404067993164

Token 207: ' ni' (ID: 2565)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06995721906423569
    2. 'i' → logprob: -2.6949572563171387
    3. ' ' → logprob: -11.69495677947998
    4. '_' → logprob: -12.44495677947998
    5. ' _' → logprob: -12.56995677947998
    6. '	i' → logprob: -13.56995677947998
    7. '_i' → logprob: -13.81995677947998
    8. '   ' → logprob: -13.94495677947998
    9. ' x' → logprob: -14.69495677947998
    10. 'x' → logprob: -14.69495677947998

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11381325125694275
    2. 'in' → logprob: -2.2388131618499756
    3. ' ' → logprob: -7.613813400268555
    4. 'n' → logprob: -7.863813400268555
    5. 'i' → logprob: -10.238813400268555
    6. '_' → logprob: -10.613813400268555
    7. '   ' → logprob: -10.988813400268555
    8. 'x' → logprob: -11.363813400268555
    9. ' i' → logprob: -11.488813400268555
    10. '  ' → logprob: -11.988813400268555

Token 209: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20144784450531006
    2. 'range' → logprob: -1.70144784450531
    3. ' in' → logprob: -10.826447486877441
    4. '(range' → logprob: -11.826447486877441
    5. 'in' → logprob: -12.576447486877441
    6. ' ' → logprob: -13.326447486877441
    7. '	range' → logprob: -13.701447486877441
    8. '   ' → logprob: -14.201447486877441
    9. '  ' → logprob: -15.826447486877441
    10. '_range' → logprob: -15.951447486877441

Token 210: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10040410608053207
    2. '2' → logprob: -2.3504040241241455
    3. ' ' → logprob: -8.600403785705566
    4. ' (' → logprob: -11.475403785705566
    5. '   ' → logprob: -12.975403785705566
    6. '(
' → logprob: -14.725403785705566
    7. '    ' → logprob: -16.100404739379883
    8. ',' → logprob: -16.475404739379883
    9. '
' → logprob: -17.225404739379883
    10. '	' → logprob: -17.600404739379883

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '
' → logprob: -16.75020408630371
    5. '  ' → logprob: -17.37520408630371
    6. '(' → logprob: -17.62520408630371
    7. '

' → logprob: -18.12520408630371
    8. '    ' → logprob: -18.25020408630371
    9. ')' → logprob: -18.68770408630371
    10. '２' → logprob: -18.68770408630371

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036080284044146538
    2. ' ,' → logprob: -5.878608226776123
    3. ',n' → logprob: -7.128608226776123
    4. '   ' → logprob: -15.003607749938965
    5. ',
' → logprob: -15.628607749938965
    6. '(n' → logprob: -15.878607749938965
    7. ' ' → logprob: -16.12860870361328
    8. 'n' → logprob: -16.12860870361328
    9. '```' → logprob: -17.00360870361328
    10. ' n' → logprob: -17.25360870361328

Token 213: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692926824092865
    2. ' n' → logprob: -2.12692928314209
    3. '	n' → logprob: -13.87692928314209
    4. '   ' → logprob: -15.37692928314209
    5. ')n' → logprob: -17.501928329467773
    6. ' ' → logprob: -17.626928329467773
    7. '    ' → logprob: -17.751928329467773
    8. '(n' → logprob: -18.501928329467773
    9. ' ' → logprob: -19.251928329467773
    10. ')' → logprob: -19.376928329467773

Token 214: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687339425086975
    2. ' +' → logprob: -1.1368733644485474
    3. ' +
' → logprob: -14.136873245239258
    4. '   ' → logprob: -14.386873245239258
    5. '+
' → logprob: -14.511873245239258
    6. ' ' → logprob: -15.136873245239258
    7. ')' → logprob: -16.136873245239258
    8. '1' → logprob: -16.636873245239258
    9. '):
' → logprob: -17.011873245239258
    10. '+n' → logprob: -17.011873245239258

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. ')' → logprob: -15.87523078918457
    4. '   ' → logprob: -16.87523078918457
    5. '2' → logprob: -18.62523078918457
    6. '```' → logprob: -18.75023078918457
    7. '  ' → logprob: -19.62523078918457
    8. ' )' → logprob: -19.75023078918457
    9. '
' → logprob: -20.12523078918457
    10. '(' → logprob: -20.37523078918457

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.125045776367188
    4. ')' → logprob: -16.375045776367188
    5. '```' → logprob: -17.625045776367188
    6. '  ' → logprob: -18.000045776367188
    7. '
' → logprob: -18.625045776367188
    8. '):
' → logprob: -19.375045776367188
    9. '    ' → logprob: -19.562545776367188
    10. '2' → logprob: -19.937545776367188

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026589859277009964
    2. '):
' → logprob: -3.651589870452881
    3. ':' → logprob: -8.776589393615723
    4. ' ):' → logprob: -9.151589393615723
    5. ')' → logprob: -11.401589393615723
    6. ' ):
' → logprob: -11.901589393615723
    7. '   ' → logprob: -12.026589393615723
    8. '):
' → logprob: -12.901589393615723
    9. ',' → logprob: -13.776589393615723
    10. '):

' → logprob: -14.276589393615723

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00402508769184351
    2. ' if' → logprob: -5.629024982452393
    3. 'if' → logprob: -8.87902545928955
    4. ',' → logprob: -9.12902545928955
    5. ' s' → logprob: -9.62902545928955
    6. '   ' → logprob: -9.87902545928955
    7. 's' → logprob: -10.37902545928955
    8. '        
' → logprob: -11.50402545928955
    9. '           ' → logprob: -12.75402545928955
    10. '      ' → logprob: -13.00402545928955

Token 219: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7047837376594543
    2. 'if' (adapté à ' if') → logprob: -0.9547837376594543
    3. ' if' → logprob: -2.4547836780548096
    4. '       ' → logprob: -3.8297836780548096
    5. ' s' → logprob: -4.454783916473389
    6. '   ' → logprob: -6.454783916473389
    7. '           ' → logprob: -10.70478343963623
    8. '
' → logprob: -10.82978343963623
    9. ' ' → logprob: -11.20478343963623
    10. '        ' → logprob: -11.70478343963623

Token 220: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03807925060391426
    2. 'b' → logprob: -3.288079261779785
    3. ' not' → logprob: -10.288079261779785
    4. ' ' → logprob: -14.163079261779785
    5. 'not' → logprob: -14.288079261779785
    6. '(b' → logprob: -14.288079261779785
    7. '   ' → logprob: -14.413079261779785
    8. '	b' → logprob: -14.413079261779785
    9. ' ' → logprob: -14.913079261779785
    10. '_b' → logprob: -16.16307830810547

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. '[n' → logprob: -12.750004768371582
    3. ' [' → logprob: -14.375004768371582
    4. '[
' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. '
' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '[num' → logprob: -17.500003814697266
    9. '[in' → logprob: -17.625003814697266
    10. '	' → logprob: -17.875003814697266

Token 222: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00019066639652010053
    2. '[' → logprob: -8.750190734863281
    3. ']' → logprob: -11.625190734863281
    4. ' ni' → logprob: -11.625190734863281
    5. '   ' → logprob: -12.250190734863281
    6. 'n' → logprob: -12.250190734863281
    7. '```' → logprob: -13.625190734863281
    8. '][' → logprob: -13.875190734863281
    9. '
' → logprob: -14.500190734863281
    10. 'i' → logprob: -15.000190734863281

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00720418244600296
    2. ']==' → logprob: -5.007204055786133
    3. ' ]' → logprob: -7.882204055786133
    4. '[' → logprob: -9.257204055786133
    5. '==' → logprob: -11.632204055786133
    6. ' ==' → logprob: -12.632204055786133
    7. ']!=' → logprob: -14.382204055786133
    8. '   ' → logprob: -14.632204055786133
    9. ' ' → logprob: -14.882204055786133
    10. '[]' → logprob: -15.257204055786133

Token 224: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4624927341938019
    2. ' ==' → logprob: -1.2124927043914795
    3. ']' → logprob: -3.3374927043914795
    4. ']==' → logprob: -3.3374927043914795
    5. '[' → logprob: -6.587492942810059
    6. '0' → logprob: -9.212492942810059
    7. '=' → logprob: -9.712492942810059
    8. ' ]' → logprob: -9.837492942810059
    9. ')==' → logprob: -9.962492942810059
    10. ')' → logprob: -10.212492942810059

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011425618082284927
    2. ' ' → logprob: -4.511425495147705
    3. '1' → logprob: -7.886425495147705
    4. '   ' → logprob: -13.636425971984863
    5. '
' → logprob: -15.636425971984863
    6. '=' → logprob: -16.073925018310547
    7. '<|end|>' → logprob: -16.386425018310547
    8. '```' → logprob: -16.698925018310547
    9. '  ' → logprob: -17.011425018310547
    10. '       ' → logprob: -17.073925018310547

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002225310541689396
    2. '1' → logprob: -6.252225399017334
    3. ' ' → logprob: -8.127224922180176
    4. '   ' → logprob: -14.689724922180176
    5. '
' → logprob: -15.689724922180176
    6. '۰' → logprob: -16.564725875854492
    7. '

' → logprob: -16.627225875854492
    8. '```' → logprob: -16.814725875854492
    9. '=' → logprob: -17.314725875854492
    10. ')' → logprob: -17.314725875854492

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761113166809082
    2. ':
' → logprob: -0.8261113166809082
    3. '):
' → logprob: -9.57611083984375
    4. '       ' → logprob: -9.82611083984375
    5. ':

' → logprob: -10.95111083984375
    6. ',' → logprob: -11.70111083984375
    7. ':
' → logprob: -12.32611083984375
    8. ' and' → logprob: -12.32611083984375
    9. '           ' → logprob: -12.45111083984375
    10. ' :
' → logprob: -12.70111083984375

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2299909144639969
    2. 's' → logprob: -2.3549909591674805
    3. '       ' → logprob: -2.7299909591674805
    4. ' s' → logprob: -3.2299909591674805
    5. '
' → logprob: -5.6049909591674805
    6. '               ' → logprob: -6.6049909591674805
    7. ',' → logprob: -8.72999095916748
    8. '   ' → logprob: -8.97999095916748
    9. '	       ' → logprob: -8.97999095916748
    10. '        ' → logprob: -9.85499095916748

Token 229: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.001946248929016292
    2. ' s' → logprob: -6.251946449279785
    3. '           ' → logprob: -11.376946449279785
    4. '               ' → logprob: -12.126946449279785
    5. '       ' → logprob: -14.876946449279785
    6. '   ' → logprob: -15.626946449279785
    7. '
' → logprob: -16.25194549560547
    8. '                   ' → logprob: -17.12694549560547
    9. '	s' → logprob: -17.75194549560547
    10. '```' → logprob: -17.75194549560547

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[n' → logprob: -15.250000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.875
    5. '```' → logprob: -17.0
    6. '
' → logprob: -18.0
    7. '[s' → logprob: -18.125
    8. '[
' → logprob: -18.5
    9. '       ' → logprob: -18.5
    10. ')[' → logprob: -19.0

Token 231: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.6240566083070007e-06
    2. ' ni' → logprob: -13.625001907348633
    3. '   ' → logprob: -16.125001907348633
    4. ']' → logprob: -16.250001907348633
    5. 'n' → logprob: -17.000001907348633
    6. '[' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '-ni' → logprob: -18.000001907348633
    9. '
' → logprob: -18.250001907348633
    10. '-' → logprob: -18.875001907348633

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011780819622799754
    2. ' ]' → logprob: -7.00117826461792
    3. ']=' → logprob: -8.251177787780762
    4. '=' → logprob: -13.001177787780762
    5. ']+=' → logprob: -13.001177787780762
    6. ' =' → logprob: -15.376177787780762
    7. '[' → logprob: -15.751177787780762
    8. '   ' → logprob: -15.876177787780762
    9. '-' → logprob: -16.251178741455078
    10. ']+' → logprob: -16.376178741455078

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132915198802948
    2. ' =' → logprob: -1.3132915496826172
    3. ' +=' → logprob: -11.188291549682617
    4. '+=' → logprob: -11.813291549682617
    5. '=(' → logprob: -13.063291549682617
    6. ' =(' → logprob: -13.813291549682617
    7. ']' → logprob: -13.938291549682617
    8. ' ' → logprob: -13.938291549682617
    9. '=s' → logprob: -14.188291549682617
    10. '   ' → logprob: -14.313291549682617

Token 234: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005294477101415396
    2. ' (' → logprob: -5.255294322967529
    3. '   ' → logprob: -9.880294799804688
    4. '(' → logprob: -12.130294799804688
    5. '(S' → logprob: -13.380294799804688
    6. ' ' → logprob: -14.505294799804688
    7. '  ' → logprob: -14.630294799804688
    8. '           ' → logprob: -15.005294799804688
    9. '(ss' → logprob: -15.505294799804688
    10. '(si' → logprob: -15.630294799804688

Token 235: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007117166533134878
    2. ' s' → logprob: -7.250711917877197
    3. '(s' → logprob: -14.125711441040039
    4. '   ' → logprob: -14.375711441040039
    5. '	s' → logprob: -16.25071144104004
    6. '           ' → logprob: -16.50071144104004
    7. '_s' → logprob: -16.62571144104004
    8. '       ' → logprob: -16.62571144104004
    9. '`s' → logprob: -17.62571144104004
    10. ')' → logprob: -17.87571144104004

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.25
    3. '   ' → logprob: -17.25
    4. '[
' → logprob: -18.25
    5. 'ni' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '```' → logprob: -18.625
    8. '[n' → logprob: -19.5
    9. '	' → logprob: -19.625
    10. ' ' → logprob: -20.0

Token 237: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -8.363617962459102e-05
    2. '[' → logprob: -10.125083923339844
    3. '-' → logprob: -10.500083923339844
    4. ' ni' → logprob: -12.000083923339844
    5. '   ' → logprob: -12.375083923339844
    6. 'n' → logprob: -12.875083923339844
    7. ' ' → logprob: -14.125083923339844
    8. ' -' → logprob: -14.750083923339844
    9. '
' → logprob: -15.125083923339844
    10. '(' → logprob: -15.125083923339844

Token 238: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012416596291586757
    2. ' -' → logprob: -6.751241683959961
    3. '[' → logprob: -10.251241683959961
    4. ']' → logprob: -10.251241683959961
    5. '1' → logprob: -15.251241683959961
    6. '-
' → logprob: -15.376241683959961
    7. '[-' → logprob: -16.25124168395996
    8. '−' → logprob: -17.00124168395996
    9. '-ni' → logprob: -17.12624168395996
    10. ']+' → logprob: -17.62624168395996

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. ' ' → logprob: -10.75003433227539
    3. '2' → logprob: -11.62503433227539
    4. '   ' → logprob: -12.87503433227539
    5. '```' → logprob: -15.50003433227539
    6. '       ' → logprob: -15.62503433227539
    7. ']' → logprob: -15.75003433227539
    8. '           ' → logprob: -16.43753433227539
    9. '  ' → logprob: -16.62503433227539
    10. '-' → logprob: -16.87503433227539

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '2' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.750020980834961
    4. '
' → logprob: -15.937520980834961
    5. '```' → logprob: -16.25002098083496
    6. '   ' → logprob: -16.56252098083496
    7. '۱' → logprob: -17.25002098083496
    8. ']' → logprob: -17.25002098083496
    9. '１' → logprob: -18.00002098083496
    10. '-' → logprob: -18.12502098083496

Token 241: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28151753544807434
    2. '+' → logprob: -1.406517505645752
    3. ']' → logprob: -8.28151798248291
    4. ']+' → logprob: -9.28151798248291
    5. ' ' → logprob: -11.90651798248291
    6. '+s' → logprob: -12.28151798248291
    7. ' ' → logprob: -12.65651798248291
    8. 's' → logprob: -13.15651798248291
    9. '}' → logprob: -13.65651798248291
    10. ' plus' → logprob: -14.28151798248291

Token 242: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03804803267121315
    2. '+' → logprob: -3.288048028945923
    3. '+s' → logprob: -12.663047790527344
    4. ' ' → logprob: -13.538047790527344
    5. ' ' → logprob: -13.663047790527344
    6. ' +
' → logprob: -14.538047790527344
    7. '+
' → logprob: -15.413047790527344
    8. ' plus' → logprob: -16.663047790527344
    9. 's' → logprob: -17.038047790527344
    10. '   ' → logprob: -17.538047790527344

Token 243: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889220863580704
    2. ' s' → logprob: -2.578892230987549
    3. '           ' → logprob: -13.57889175415039
    4. '               ' → logprob: -14.70389175415039
    5. '       ' → logprob: -15.70389175415039
    6. '   ' → logprob: -15.82889175415039
    7. ' ' → logprob: -15.82889175415039
    8. '(s' → logprob: -16.57889175415039
    9. '                   ' → logprob: -16.82889175415039
    10. '            ' → logprob: -17.07889175415039

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '[n' → logprob: -16.25
    5. '[
' → logprob: -16.375
    6. 'ni' → logprob: -17.625
    7. 's' → logprob: -18.0
    8. '       ' → logprob: -18.125
    9. 'n' → logprob: -18.625
    10. ' ' → logprob: -18.875

Token 245: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. ' ni' → logprob: -14.75000286102295
    4. '   ' → logprob: -14.87500286102295
    5. '2' → logprob: -16.000003814697266
    6. '  ' → logprob: -17.250003814697266
    7. 'n' → logprob: -17.500003814697266
    8. ' ' → logprob: -17.875003814697266
    9. '(' → logprob: -18.750003814697266
    10. '     ' → logprob: -19.125003814697266

Token 246: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141635835170746
    2. ' -' → logprob: -1.7014163732528687
    3. '   ' → logprob: -13.576416015625
    4. ' ' → logprob: -13.826416015625
    5. '2' → logprob: -15.076416015625
    6. ']' → logprob: -15.451416015625
    7. '```' → logprob: -16.826416015625
    8. '  ' → logprob: -16.951416015625
    9. '[' → logprob: -17.076416015625
    10. '	' → logprob: -17.201416015625

Token 247: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.750003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '۲' → logprob: -18.625003814697266
    6. '२' → logprob: -19.500003814697266
    7. ')' → logprob: -19.625003814697266
    8. '-' → logprob: -19.812503814697266
    9. '২' → logprob: -19.937503814697266
    10. '２' → logprob: -20.187503814697266

Token 248: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '۲' → logprob: -19.062501907348633
    6. '-' → logprob: -19.625001907348633
    7. '
' → logprob: -19.875001907348633
    8. '0' → logprob: -20.125001907348633
    9. '1' → logprob: -20.187501907348633
    10. '２' → logprob: -20.250001907348633

Token 249: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005289731081575155
    2. '])' → logprob: -5.255289554595947
    3. ' )' → logprob: -10.880290031433105
    4. ')%' → logprob: -11.005290031433105
    5. ']' → logprob: -11.130290031433105
    6. '})' → logprob: -13.255290031433105
    7. '）' → logprob: -13.255290031433105
    8. '   ' → logprob: -14.005290031433105
    9. ' ])' → logprob: -15.255290031433105
    10. '))' → logprob: -15.380290031433105

Token 250: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31326213479042053
    2. ' %' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.563261985778809
    4. ')%' → logprob: -16.188262939453125
    5. ')' → logprob: -16.438262939453125
    6. '%s' → logprob: -17.313262939453125
    7. '   ' → logprob: -17.688262939453125
    8. '%c' → logprob: -18.063262939453125
    9. '%D' → logprob: -18.438262939453125
    10. ' ' → logprob: -18.563262939453125

Token 251: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.011048882268369198
    2. ' MOD' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.636049270629883
    4. '_MOD' → logprob: -15.136049270629883
    5. '   ' → logprob: -15.886049270629883
    6. '.MOD' → logprob: -16.261049270629883
    7. 'MO' → logprob: -16.886049270629883
    8. '
' → logprob: -18.386049270629883
    9. '100' → logprob: -19.011049270629883
    10. '```' → logprob: -19.136049270629883

Token 252: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5384402871131897
    2. '       ' → logprob: -1.413440227508545
    3. ' else' → logprob: -2.663440227508545
    4. '<|end|>' → logprob: -3.038440227508545
    5. 'else' → logprob: -3.788440227508545
    6. 'return' → logprob: -3.913440227508545
    7. ' return' → logprob: -5.288440227508545
    8. '	else' → logprob: -6.038440227508545
    9. '	return' → logprob: -6.038440227508545
    10. '```' → logprob: -7.163440227508545

Token 254: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.024481184780597687
    2. ' else' → logprob: -3.7744812965393066
    3. '       ' → logprob: -6.774481296539307
    4. '   ' → logprob: -10.024480819702148
    5. '	else' → logprob: -10.024480819702148
    6. '_else' → logprob: -13.774480819702148
    7. '<|end|>' → logprob: -14.274480819702148
    8. '           ' → logprob: -14.399480819702148
    9. '```' → logprob: -15.024480819702148
    10. '  ' → logprob: -15.524480819702148

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07500488311052322
    2. ':
' → logprob: -2.700004816055298
    3. '       ' → logprob: -5.575005054473877
    4. '           ' → logprob: -6.950005054473877
    5. '0' → logprob: -8.950004577636719
    6. '=' → logprob: -9.325004577636719
    7. ',' → logprob: -11.325004577636719
    8. '	       ' → logprob: -11.325004577636719
    9. ' s' → logprob: -11.450004577636719
    10. '<|end|>' → logprob: -11.950004577636719

Token 256: '           ' (ID: 352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6856038570404053
    2. '       ' → logprob: -0.9356038570404053
    3. ' s' → logprob: -2.5606038570404053
    4. '0' → logprob: -3.6856038570404053
    5. '
' → logprob: -7.185604095458984
    6. '           ' → logprob: -7.810604095458984
    7. ' ' → logprob: -8.935604095458984
    8. '   ' → logprob: -9.685604095458984
    9. '        
' → logprob: -9.685604095458984
    10. ' 
' → logprob: -10.435604095458984

Token 257: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.014710931107401848
    2. ' s' → logprob: -4.264710903167725
    3. '0' → logprob: -7.514710903167725
    4. ' ' → logprob: -13.389711380004883
    5. '       ' → logprob: -14.514711380004883
    6. '           ' → logprob: -15.889711380004883
    7. '   ' → logprob: -16.264711380004883
    8. '	s' → logprob: -17.139711380004883
    9. ' ' → logprob: -19.139711380004883
    10. '  ' → logprob: -20.014711380004883

Token 258: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[s' → logprob: -17.125
    3. ' [' → logprob: -17.625
    4. '[
' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. '```' → logprob: -18.375
    7. '[n' → logprob: -18.5
    8. '[...]' → logprob: -19.625
    9. '\[' → logprob: -19.625
    10. 's' → logprob: -19.75

Token 259: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.625000953674316
    3. '0' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. ' ni' → logprob: -17.750001907348633
    6. 'n' → logprob: -18.250001907348633
    7. '```' → logprob: -19.250001907348633
    8. 'ни' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.625001907348633
    10. '	' → logprob: -20.250001907348633

Token 260: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24790053069591522
    2. ']' → logprob: -1.6229004859924316
    3. ' =' → logprob: -3.8729004859924316
    4. ']=' → logprob: -6.622900485992432
    5. ')' → logprob: -9.49790096282959
    6. ' ]' → logprob: -10.87290096282959
    7. ' ' → logprob: -12.12290096282959
    8. '[' → logprob: -12.74790096282959
    9. ')=' → logprob: -12.99790096282959
    10. '0' → logprob: -13.74790096282959

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=
' → logprob: -17.250431060791016
    4. ']=' → logprob: -17.500431060791016
    5. '[' → logprob: -17.625431060791016
    6. ' ' → logprob: -19.000431060791016
    7. '.=' → logprob: -19.000431060791016
    8. ')=' → logprob: -19.000431060791016
    9. '0' → logprob: -19.125431060791016
    10. '=int' → logprob: -20.000431060791016

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -19.375015258789062
    4. '   ' → logprob: -20.125015258789062
    5. '00' → logprob: -21.000015258789062
    6. ' ' → logprob: -21.125015258789062
    7. '000' → logprob: -21.625015258789062
    8. '```' → logprob: -22.187515258789062
    9. '  ' → logprob: -22.312515258789062
    10. '	' → logprob: -22.500015258789062

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -20.25
    4. '000' → logprob: -20.75
    5. '00' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. 's' → logprob: -22.625
    8. '```' → logprob: -22.6875
    9. '  ' → logprob: -22.8125
    10. '০' → logprob: -23.0

Token 264: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013536880724132061
    2. '<|end|>' → logprob: -4.3885369300842285
    3. 'return' → logprob: -7.3885369300842285
    4. '```' → logprob: -8.88853645324707
    5. ')' → logprob: -9.88853645324707
    6. 'n' → logprob: -9.88853645324707
    7. '   ' → logprob: -10.01353645324707
    8. '
' → logprob: -10.13853645324707
    9. '#' → logprob: -10.13853645324707
    10. '<|end|>' → logprob: -11.51353645324707

Token 266: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5877936482429504
    2. 'main' → logprob: -0.8377936482429504
    3. 'def' → logprob: -4.587793827056885
    4. ' solve' → logprob: -7.337793827056885
    5. ' def' → logprob: -7.712793827056885
    6. 'solve' → logprob: -7.712793827056885
    7. 'read' → logprob: -11.337793350219727
    8. 'calculate' → logprob: -11.712793350219727
    9. ' calculate' → logprob: -12.337793350219727
    10. 'run' → logprob: -12.462793350219727

Token 267: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46885132789611816
    2. '_result' → logprob: -1.5938513278961182
    3. '()' → logprob: -1.9688513278961182
    4. '(' → logprob: -4.343851089477539
    5. '(s' → logprob: -5.218851089477539
    6. 's' → logprob: -5.843851089477539
    7. '_s' → logprob: -6.218851089477539
    8. 'result' → logprob: -6.718851089477539
    9. '_count' → logprob: -6.718851089477539
    10. '():' → logprob: -6.718851089477539

Token 268: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0052145482040941715
    2. '(' → logprob: -5.755214691162109
    3. '(result' → logprob: -6.380214691162109
    4. ' (' → logprob: -8.88021469116211
    5. '(n' → logprob: -9.75521469116211
    6. '(w' → logprob: -10.50521469116211
    7. '(value' → logprob: -10.63021469116211
    8. '(sum' → logprob: -11.00521469116211
    9. '(total' → logprob: -11.38021469116211
    10. '(res' → logprob: -11.38021469116211

Token 269: ',' (ID: 11)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.12987913191318512
    2. '[-' → logprob: -2.1298792362213135
    3. '[' → logprob: -6.754878997802734
    4. ',' → logprob: -6.879878997802734
    5. '[N' → logprob: -8.254878997802734
    6. '[len' → logprob: -8.254878997802734
    7. ',n' → logprob: -9.129878997802734
    8. ')' → logprob: -9.379878997802734
    9. '):' → logprob: -11.629878997802734
    10. '   ' → logprob: -11.879878997802734

Token 270: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09771996736526489
    2. ' n' → logprob: -2.47271990776062
    3. ' -' → logprob: -5.347720146179199
    4. '-' → logprob: -5.722720146179199
    5. '-n' → logprob: -7.347720146179199
    6. '_n' → logprob: -10.0977201461792
    7. '	n' → logprob: -12.2227201461792
    8. ' len' → logprob: -12.2227201461792
    9. 'len' → logprob: -12.5977201461792
    10. ')' → logprob: -12.7227201461792

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05095651373267174
    2. '):
' → logprob: -3.0509564876556396
    3. ')' → logprob: -6.050956726074219
    4. '   ' → logprob: -12.175956726074219
    5. '):
' → logprob: -13.300956726074219
    6. ' ):' → logprob: -13.800956726074219
    7. '[' → logprob: -13.925956726074219
    8. '):

' → logprob: -14.675956726074219
    9. '[n' → logprob: -14.925956726074219
    10. ')
' → logprob: -15.175956726074219

Token 272: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40301021933555603
    2. '   ' → logprob: -1.1530102491378784
    3. ' print' → logprob: -4.153010368347168
    4. '```' → logprob: -8.153010368347168
    5. 'return' → logprob: -13.278010368347168
    6. '``' → logprob: -13.653010368347168
    7. '
' → logprob: -14.278010368347168
    8. '	print' → logprob: -14.403010368347168
    9. '`' → logprob: -14.903010368347168
    10. ' return' → logprob: -15.653010368347168

Token 273: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.000001907348633
    3. ' print' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.250001907348633
    5. 'return' → logprob: -17.500001907348633
    6. '``' → logprob: -18.750001907348633
    7. '
' → logprob: -18.875001907348633
    8. 'for' → logprob: -22.500001907348633
    9. '    
' → logprob: -22.750001907348633
    10. '`' → logprob: -22.875001907348633

Token 274: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00023119196703191847
    2. '(' → logprob: -8.37523078918457
    3. 's' → logprob: -14.87523078918457
    4. ' (' → logprob: -16.50023078918457
    5. '(
' → logprob: -16.87523078918457
    6. '((' → logprob: -18.25023078918457
    7. ' s' → logprob: -19.37523078918457
    8. '(ss' → logprob: -20.50023078918457
    9. '(

' → logprob: -20.75023078918457
    10. '(S' → logprob: -21.00023078918457

Token 275: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.625003814697266
    3. 'n' → logprob: -17.250003814697266
    4. '[
' → logprob: -17.625003814697266
    5. ' [' → logprob: -17.625003814697266
    6. '[-' → logprob: -18.875003814697266
    7. '```' → logprob: -19.000003814697266
    8. ')' → logprob: -19.250003814697266
    9. '[N' → logprob: -19.750003814697266
    10. '
' → logprob: -20.500003814697266

Token 276: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002764710516203195
    2. ')' → logprob: -8.250276565551758
    3. ']' → logprob: -12.125276565551758
    4. '])
' → logprob: -12.250276565551758
    5. ' ])' → logprob: -12.500276565551758
    6. ')]' → logprob: -14.750276565551758
    7. '))' → logprob: -15.125276565551758
    8. ')])' → logprob: -15.750276565551758
    9. ' )' → logprob: -16.125276565551758
    10. '],' → logprob: -16.375276565551758

Token 277: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. 'if' → logprob: -13.250001907348633
    3. 'n' → logprob: -15.125001907348633
    4. 'line' → logprob: -19.375001907348633
    5. 'ndef' → logprob: -19.500001907348633
    6. '```' → logprob: -19.625001907348633
    7. ' def' → logprob: -19.750001907348633
    8. '#' → logprob: -20.875001907348633
    9. 'for' → logprob: -21.375001907348633
    10. 'nm' → logprob: -23.125001907348633

Token 278: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1620226502418518
    2. ' main' → logprob: -1.912022590637207
    3. 'def' → logprob: -6.412022590637207
    4. '__' → logprob: -9.037022590637207
    5. ' __' → logprob: -11.162022590637207
    6. ' def' → logprob: -11.662022590637207
    7. 'read' → logprob: -12.037022590637207
    8. 'if' → logprob: -12.537022590637207
    9. '_main' → logprob: -13.537022590637207
    10. 'run' → logprob: -13.787022590637207

Token 279: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.226628895296017e-06
    2. '():
' → logprob: -12.250007629394531
    3. ' ():' → logprob: -13.125007629394531
    4. '()' → logprob: -15.375007629394531
    5. '(' → logprob: -16.37500762939453
    6. '_' → logprob: -18.00000762939453
    7. '():
' → logprob: -18.62500762939453
    8. '():

' → logprob: -19.37500762939453
    9. '(":' → logprob: -19.62500762939453
    10. '()>' → logprob: -19.62500762939453

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10783253610134125
    2. ' line' → logprob: -2.482832431793213
    3. 'line' → logprob: -3.982832431793213
    4. '	line' → logprob: -10.357832908630371
    5. ' n' → logprob: -11.232832908630371
    6. 'n' → logprob: -11.482832908630371
    7. '    
' → logprob: -12.357832908630371
    8. '_line' → logprob: -12.357832908630371
    9. '(line' → logprob: -12.732832908630371
    10. ' lines' → logprob: -12.982832908630371

Token 281: ' nm' (ID: 43183)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.27001985907554626
    2. '   ' → logprob: -1.8950198888778687
    3. 'nm' (adapté à ' nm') → logprob: -2.895019769668579
    4. 'n' → logprob: -3.895019769668579
    5. ' line' → logprob: -4.770020008087158
    6. ' nm' → logprob: -6.395020008087158
    7. ' n' → logprob: -9.02001953125
    8. 'input' → logprob: -9.39501953125
    9. 'ln' → logprob: -9.52001953125
    10. 'lines' → logprob: -9.64501953125

Token 282: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.35211828351020813
    2. ' =' → logprob: -1.7271182537078857
    3. 'line' → logprob: -2.6021182537078857
    4. '=' → logprob: -3.2271182537078857
    5. '_input' → logprob: -5.977118492126465
    6. '_' → logprob: -6.227118492126465
    7. '()' → logprob: -8.602118492126465
    8. '=line' → logprob: -8.977118492126465
    9. 'input' → logprob: -9.227118492126465
    10. ' line' → logprob: -9.602118492126465

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. '   ' → logprob: -14.910224914550781
    4. ' ' → logprob: -14.910224914550781
    5. '  ' → logprob: -16.53522491455078
    6. '    ' → logprob: -17.28522491455078
    7. ' ' → logprob: -18.16022491455078
    8. '=line' → logprob: -18.53522491455078
    9. '=input' → logprob: -18.53522491455078
    10. ' =
' → logprob: -18.78522491455078

Token 284: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10021670162677765
    2. ' read' → logprob: -2.3502166271209717
    3. 'input' → logprob: -12.10021686553955
    4. ' input' → logprob: -12.47521686553955
    5. ' ' → logprob: -15.22521686553955
    6. '	read' → logprob: -15.85021686553955
    7. '   ' → logprob: -15.97521686553955
    8. '  ' → logprob: -16.350215911865234
    9. '(read' → logprob: -16.850215911865234
    10. 'parse' → logprob: -17.475215911865234

Token 285: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005871102912351489
    2. '()' → logprob: -8.000587463378906
    3. 'input' → logprob: -8.500587463378906
    4. '_' → logprob: -10.250587463378906
    5. 'Input' → logprob: -12.875587463378906
    6. '()
' → logprob: -13.125587463378906
    7. ' input' → logprob: -13.375587463378906
    8. '_inputs' → logprob: -13.625587463378906
    9. '_INPUT' → logprob: -14.000587463378906
    10. '_line' → logprob: -14.250587463378906

Token 286: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001037214300595224
    2. '()
' → logprob: -6.876037120819092
    3. '().' → logprob: -13.87603759765625
    4. '()

' → logprob: -14.00103759765625
    5. '())' → logprob: -14.00103759765625
    6. '()
' → logprob: -14.25103759765625
    7. ')' → logprob: -14.25103759765625
    8. ' ()' → logprob: -15.50103759765625
    9. '(' → logprob: -16.37603759765625
    10. '()\' → logprob: -16.37603759765625

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20350924134254456
    2. 'n' → logprob: -1.7035092115402222
    3. ' n' → logprob: -6.203509330749512
    4. '	n' → logprob: -10.328509330749512
    5. '(n' → logprob: -10.828509330749512
    6. ',n' → logprob: -11.828509330749512
    7. ',' → logprob: -12.453509330749512
    8. '    
' → logprob: -12.953509330749512
    9. 'N' → logprob: -13.703509330749512
    10. '_n' → logprob: -13.703509330749512

Token 288: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0003476209531072527
    2. ' n' → logprob: -8.000348091125488
    3. '   ' → logprob: -11.500348091125488
    4. '	n' → logprob: -14.000348091125488
    5. '(n' → logprob: -14.000348091125488
    6. '_n' → logprob: -15.750348091125488
    7. '    
' → logprob: -16.375347137451172
    8. '```' → logprob: -17.000347137451172
    9. '  ' → logprob: -17.125347137451172
    10. '[n' → logprob: -17.625347137451172

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021486106561496854
    2. ',m' → logprob: -8.750214576721191
    3. ' ,' → logprob: -10.375214576721191
    4. ',n' → logprob: -10.875214576721191
    5. ',
' → logprob: -12.750214576721191
    6. 'm' → logprob: -14.000214576721191
    7. ',M' → logprob: -14.750214576721191
    8. '_,' → logprob: -15.000214576721191
    9. '‌,' → logprob: -15.375214576721191
    10. ',num' → logprob: -15.500214576721191

Token 290: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06201854720711708
    2. 'm' → logprob: -2.812018632888794
    3. ' ' → logprob: -10.312018394470215
    4. '<|end|>' → logprob: -11.687018394470215
    5. ' 
' → logprob: -12.562018394470215
    6. ' n' → logprob: -13.187018394470215
    7. ' ' → logprob: -13.937018394470215
    8. ',m' → logprob: -14.812018394470215
    9. '	m' → logprob: -15.437018394470215
    10. '=' → logprob: -15.437018394470215

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ',' → logprob: -15.035224914550781
    4. ')' → logprob: -15.410224914550781
    5. '<|end|>' → logprob: -16.16022491455078
    6. '=parse' → logprob: -16.41022491455078
    7. '=n' → logprob: -16.78522491455078
    8. ' ' → logprob: -17.41022491455078
    9. ')=' → logprob: -17.66022491455078
    10. ' =
' → logprob: -17.91022491455078

Token 292: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.001929228543303907
    2. 'parse' → logprob: -6.25192928314209
    3. '=parse' → logprob: -15.25192928314209
    4. '(parse' → logprob: -15.62692928314209
    5. '	parse' → logprob: -16.501928329467773
    6. '_parse' → logprob: -16.501928329467773
    7. '.parse' → logprob: -18.876928329467773
    8. ' parses' → logprob: -20.001928329467773
    9. ' ' → logprob: -20.626928329467773
    10. ' parsed' → logprob: -20.876928329467773

Token 293: '_nm' (ID: 136334)
  Prédit: '_nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nm' → logprob: -0.000205566844670102
    2. 'nm' → logprob: -8.500205993652344
    3. '(n' → logprob: -14.125205993652344
    4. 'NM' → logprob: -14.375205993652344
    5. '_' → logprob: -15.750205993652344
    6. ' nm' → logprob: -15.875205993652344
    7. '```' → logprob: -16.000205993652344
    8. '_mm' → logprob: -16.250205993652344
    9. '_nv' → logprob: -17.250205993652344
    10. '_n' → logprob: -17.750205993652344

Token 294: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. ' (' → logprob: -17.375
    4. '(s' → logprob: -21.0
    5. '(
' → logprob: -21.125
    6. '(m' → logprob: -21.125
    7. '((' → logprob: -21.75
    8. '(nx' → logprob: -22.5
    9. '(N' → logprob: -22.625
    10. '(nt' → logprob: -22.875

Token 295: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07946083694696426
    2. '_line' → logprob: -2.579460859298706
    3. '_m' → logprob: -8.329461097717285
    4. 'м' → logprob: -9.329461097717285
    5. 'line' → logprob: -9.329461097717285
    6. ')' → logprob: -9.579461097717285
    7. 'nm' → logprob: -10.954461097717285
    8. ')_' → logprob: -11.329461097717285
    9. '_nm' → logprob: -11.579461097717285
    10. '_' → logprob: -12.204461097717285

Token 296: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00034023032640106976
    2. 'line' → logprob: -8.000340461730957
    3. '_' → logprob: -13.625340461730957
    4. '_LINE' → logprob: -13.875340461730957
    5. ')' → logprob: -14.500340461730957
    6. 'ine' → logprob: -14.750340461730957
    7. ')_' → logprob: -15.000340461730957
    8. '_lin' → logprob: -15.000340461730957
    9. 'lin' → logprob: -15.625340461730957
    10. '   ' → logprob: -16.00033950805664

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.662937372922897e-05
    2. ')
' → logprob: -9.250096321105957
    3. ' )' → logprob: -15.875096321105957
    4. ')

' → logprob: -16.375097274780273
    5. '   ' → logprob: -16.625097274780273
    6. '),' → logprob: -17.250097274780273
    7. ')#' → logprob: -17.375097274780273
    8. ')`' → logprob: -17.875097274780273
    9. ')
' → logprob: -18.000097274780273
    10. '))' → logprob: -18.750097274780273

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1912592202425003
    2. 'b' → logprob: -2.0662591457366943
    3. '
' → logprob: -3.4412591457366943
    4. '```' → logprob: -5.316259384155273
    5. ' b' → logprob: -5.816259384155273
    6. 'blocked' → logprob: -6.066259384155273
    7. '    
' → logprob: -6.191259384155273
    8. '	b' → logprob: -6.191259384155273
    9. '	
' → logprob: -8.191259384155273
    10. '  
' → logprob: -8.941259384155273

Token 299: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0430619902908802
    2. ' b' → logprob: -3.9180619716644287
    3. '   ' → logprob: -4.043062210083008
    4. 'blocked' → logprob: -5.418062210083008
    5. ' blocked' → logprob: -8.293062210083008
    6. '	b' → logprob: -10.668062210083008
    7. '```' → logprob: -11.918062210083008
    8. 'block' → logprob: -12.293062210083008
    9. 'Blocked' → logprob: -13.418062210083008
    10. ' ' → logprob: -14.293062210083008

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858771339058876
    2. '=' → logprob: -3.0485877990722656
    3. 'b' → logprob: -15.923587799072266
    4. ',' → logprob: -16.298587799072266
    5. '[' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '=b' → logprob: -17.798587799072266
    8. '=create' → logprob: -18.548587799072266
    9. '```' → logprob: -18.673587799072266
    10. '<|end|>' → logprob: -18.798587799072266

Token 301: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.038042064756155014
    2. ' init' → logprob: -3.2880420684814453
    3. '_init' → logprob: -14.538042068481445
    4. '(init' → logprob: -16.163042068481445
    5. '	init' → logprob: -18.038042068481445
    6. '.init' → logprob: -18.663042068481445
    7. '   ' → logprob: -19.163042068481445
    8. '/init' → logprob: -19.538042068481445
    9. ':init' → logprob: -19.663042068481445
    10. ')init' → logprob: -19.663042068481445

Token 302: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -6.511406809295295e-06
    2. 'blocked' → logprob: -12.000006675720215
    3. '_b' → logprob: -15.875006675720215
    4. 'Blocked' → logprob: -16.1250057220459
    5. '_BLOCK' → logprob: -18.6250057220459
    6. '(block' → logprob: -20.1250057220459
    7. '_blocks' → logprob: -20.2500057220459
    8. 'block' → logprob: -20.3750057220459
    9. ' blocked' → logprob: -20.6250057220459
    10. '_bloc' → logprob: -20.6250057220459

Token 303: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5370771884918213
    2. 'locked' → logprob: -1.2870771884918213
    3. 'ocked' → logprob: -2.2870771884918213
    4. 'blocked' → logprob: -3.2870771884918213
    5. '_locked' → logprob: -8.787076950073242
    6. 'lock' → logprob: -9.412076950073242
    7. 'ock' → logprob: -9.912076950073242
    8. 'acked' → logprob: -10.537076950073242
    9. '(' → logprob: -10.537076950073242
    10. '   ' → logprob: -11.037076950073242

Token 304: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.250001907348633
    4. '```' → logprob: -19.125001907348633
    5. ')(' → logprob: -19.500001907348633
    6. '(N' → logprob: -19.500001907348633
    7. '\(' → logprob: -20.125001907348633
    8. 'n' → logprob: -20.625001907348633
    9. '`' → logprob: -21.000001907348633
    10. ',n' → logprob: -21.000001907348633

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029758011922240257
    2. ')
' → logprob: -3.5297579765319824
    3. ')
' → logprob: -11.90475845336914
    4. '   ' → logprob: -14.77975845336914
    5. ')

' → logprob: -15.40475845336914
    6. ' )' → logprob: -16.40475845336914
    7. '),' → logprob: -17.90475845336914
    8. ' ' → logprob: -17.90475845336914
    9. ')`' → logprob: -17.90475845336914
    10. ')b' → logprob: -17.90475845336914

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01387222670018673
    2. 'blocked' → logprob: -4.513872146606445
    3. 'm' → logprob: -6.013872146606445
    4. ' blocked' → logprob: -8.263872146606445
    5. ' m' → logprob: -10.138872146606445
    6. 'block' → logprob: -10.763872146606445
    7. '```' → logprob: -10.888872146606445
    8. 'b' → logprob: -11.138872146606445
    9. 's' → logprob: -12.013872146606445
    10. '    
' → logprob: -12.513872146606445

Token 307: ' blocked' (ID: 35275)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' (adapté à ' blocked') → logprob: -0.0004724987084046006
    2. '   ' → logprob: -8.000472068786621
    3. ' blocked' → logprob: -9.125472068786621
    4. 'block' → logprob: -10.500472068786621
    5. 'indices' → logprob: -15.750472068786621
    6. '    
' → logprob: -16.000473022460938
    7. 'Blocked' → logprob: -16.500473022460938
    8. 'b' → logprob: -16.625473022460938
    9. '  ' → logprob: -16.625473022460938
    10. 'blocking' → logprob: -16.750473022460938

Token 308: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -9.491498531133402e-06
    2. 'indices' → logprob: -12.125009536743164
    3. '_' → logprob: -13.250009536743164
    4. '_block' → logprob: -14.625009536743164
    5. ' =' → logprob: -14.625009536743164
    6. '"indices' → logprob: -14.875009536743164
    7. 'Indices' → logprob: -15.250009536743164
    8. '_line' → logprob: -15.500009536743164
    9. '=' → logprob: -16.125009536743164
    10. '_lines' → logprob: -16.250009536743164

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.40475082397461
    4. ' =
' → logprob: -16.90475082397461
    5. ' ' → logprob: -17.27975082397461
    6. '_' → logprob: -17.90475082397461
    7. '<|end|>' → logprob: -18.40475082397461
    8. ':' → logprob: -18.52975082397461
    9. '＝' → logprob: -18.52975082397461
    10. ' =[' → logprob: -18.52975082397461

Token 310: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3132617771625519
    2. 'read' → logprob: -1.3132617473602295
    3. '	read' → logprob: -17.563261032104492
    4. '(read' → logprob: -18.188261032104492
    5. ' ' → logprob: -19.688261032104492
    6. '_read' → logprob: -19.688261032104492
    7. '.read' → logprob: -19.938261032104492
    8. '   ' → logprob: -21.063261032104492
    9. ' reading' → logprob: -21.688261032104492
    10. 'Read' → logprob: -21.813261032104492

Token 311: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -1.5928495486150496e-05
    2. 'blocked' → logprob: -11.125016212463379
    3. 'Blocked' → logprob: -14.750016212463379
    4. '_blocks' → logprob: -15.250016212463379
    5. 'block' → logprob: -15.250016212463379
    6. '(block' → logprob: -16.250015258789062
    7. '_BLOCK' → logprob: -17.250015258789062
    8. '_bloc' → logprob: -17.875015258789062
    9. '_indices' → logprob: -18.000015258789062
    10. '_' → logprob: -18.250015258789062

Token 312: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -7.941850526549388e-06
    2. 'locked' → logprob: -12.875007629394531
    3. 'ocked' → logprob: -13.500007629394531
    4. '_indices' → logprob: -14.000007629394531
    5. 'blocked' → logprob: -14.000007629394531
    6. 'eded' → logprob: -14.750007629394531
    7. '_locked' → logprob: -15.250007629394531
    8. 'ED' → logprob: -15.625007629394531
    9. '
' → logprob: -15.875007629394531
    10. 'ock' → logprob: -16.12500762939453

Token 313: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -3.166338137816638e-05
    2. 'indices' → logprob: -11.125031471252441
    3. '_' → logprob: -12.250031471252441
    4. 's' → logprob: -12.500031471252441
    5. ' _' → logprob: -12.875031471252441
    6. '"indices' → logprob: -13.000031471252441
    7. '(indices' → logprob: -14.500031471252441
    8. ')_' → logprob: -15.000031471252441
    9. '_block' → logprob: -15.000031471252441
    10. '_lines' → logprob: -15.125031471252441

Token 314: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.576823890209198
    2. ' m' → logprob: -1.0768239498138428
    3. '(m' → logprob: -2.3268239498138428
    4. ' (' → logprob: -10.451824188232422
    5. '	m' → logprob: -11.701824188232422
    6. '(' → logprob: -13.451824188232422
    7. ')m' → logprob: -14.576824188232422
    8. ' м' → logprob: -16.076824188232422
    9. '   ' → logprob: -16.451824188232422
    10. '_m' → logprob: -17.576824188232422

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001933397026732564
    2. ')
' → logprob: -6.251933574676514
    3. '   ' → logprob: -12.376933097839355
    4. ' )' → logprob: -15.376933097839355
    5. ')
' → logprob: -15.876933097839355
    6. ')

' → logprob: -16.376934051513672
    7. '))' → logprob: -18.251934051513672
    8. ' ' → logprob: -18.251934051513672
    9. '),' → logprob: -18.376934051513672
    10. ')#' → logprob: -18.376934051513672

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004982439801096916
    2. 'update' → logprob: -6.1299824714660645
    3. '
' → logprob: -6.3799824714660645
    4. ' update' → logprob: -7.2549824714660645
    5. '	update' → logprob: -8.379981994628906
    6. '    
' → logprob: -9.504981994628906
    7. '(update' → logprob: -10.629981994628906
    8. '```' → logprob: -11.129981994628906
    9. '  ' → logprob: -11.379981994628906
    10. '.update' → logprob: -11.879981994628906

Token 317: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.3133460581302643
    2. 'update' (adapté à ' update') → logprob: -1.313346028327942
    3. '   ' → logprob: -9.563345909118652
    4. '	update' → logprob: -11.938345909118652
    5. '.update' → logprob: -12.313345909118652
    6. '(update' → logprob: -13.438345909118652
    7. '_update' → logprob: -14.438345909118652
    8. ' b' → logprob: -14.938345909118652
    9. '```' → logprob: -15.188345909118652
    10. ' ' → logprob: -15.813345909118652

Token 318: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -9.088346359931165e-07
    2. 'blocked' → logprob: -14.000000953674316
    3. '_bloc' → logprob: -17.875
    4. '_' → logprob: -18.0
    5. '(block' → logprob: -18.0
    6. '_BLOCK' → logprob: -18.25
    7. 'block' → logprob: -19.5
    8. 'Blocked' → logprob: -19.625
    9. ' blocked' → logprob: -20.5
    10. '```' → logprob: -21.125

Token 319: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.02239626832306385
    2. '_block' → logprob: -3.8973963260650635
    3. 'blocked' → logprob: -6.397396087646484
    4. '_locked' → logprob: -9.147396087646484
    5. 'locked' → logprob: -10.272396087646484
    6. '(b' → logprob: -12.022396087646484
    7. 's' → logprob: -12.272396087646484
    8. '(block' → logprob: -12.272396087646484
    9. 'led' → logprob: -12.397396087646484
    10. 'b' → logprob: -12.522396087646484

Token 320: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0280383548888494e-06
    2. '_arrays' → logprob: -14.375000953674316
    3. 'array' → logprob: -15.000000953674316
    4. '_' → logprob: -18.500001907348633
    5. '_ARRAY' → logprob: -18.875001907348633
    6. 'Array' → logprob: -19.000001907348633
    7. '```' → logprob: -19.125001907348633
    8. 's' → logprob: -19.375001907348633
    9. '_arr' → logprob: -20.250001907348633
    10. '_Array' → logprob: -20.375001907348633

Token 321: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.25000286102295
    3. ' (' → logprob: -14.50000286102295
    4. '(block' → logprob: -15.37500286102295
    5. '(
' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '(a' → logprob: -17.500001907348633
    8. '(s' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -17.750001907348633
    10. '=b' → logprob: -18.250001907348633

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ',b' → logprob: -11.000025749206543
    3. ',
' → logprob: -11.750025749206543
    4. ' ,' → logprob: -14.375025749206543
    5. '(block' → logprob: -15.375025749206543
    6. ')' → logprob: -16.375024795532227
    7. ',

' → logprob: -16.875024795532227
    8. 'b' → logprob: -17.875024795532227
    9. '(b' → logprob: -18.000024795532227
    10. 'blocked' → logprob: -18.125024795532227

Token 323: ' blocked' (ID: 35275)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.023252001032233238
    2. ' blocked' → logprob: -3.773252010345459
    3. 'block' → logprob: -12.0232515335083
    4. 'Blocked' → logprob: -15.5232515335083
    5. '(block' → logprob: -16.773252487182617
    6. '   ' → logprob: -16.773252487182617
    7. ' block' → logprob: -16.773252487182617
    8. '
' → logprob: -17.148252487182617
    9. 'b' → logprob: -17.898252487182617
    10. 'blocking' → logprob: -18.148252487182617

Token 324: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.01964164525270462
    2. 'ed' → logprob: -4.144641876220703
    3. 'indices' → logprob: -5.644641876220703
    4. 'blocked' → logprob: -10.144641876220703
    5. 'Indices' → logprob: -11.019641876220703
    6. '"indices' → logprob: -13.394641876220703
    7. 'block' → logprob: -13.519641876220703
    8. 'led' → logprob: -14.144641876220703
    9. 'd' → logprob: -14.269641876220703
    10. 's' → logprob: -14.519641876220703

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005616007838398218
    2. ')
' → logprob: -5.255616188049316
    3. '   ' → logprob: -7.880616188049316
    4. '
' → logprob: -13.880616188049316
    5. ' )' → logprob: -14.255616188049316
    6. ')

' → logprob: -14.380616188049316
    7. ',' → logprob: -14.505616188049316
    8. ')n' → logprob: -14.755616188049316
    9. ')s' → logprob: -15.130616188049316
    10. ')
' → logprob: -15.505616188049316

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022696983069181442
    2. 's' → logprob: -4.0226969718933105
    3. ' s' → logprob: -5.3976969718933105
    4. '
' → logprob: -12.772697448730469
    5. '    
' → logprob: -12.897697448730469
    6. '```' → logprob: -13.022697448730469
    7. '  ' → logprob: -14.022697448730469
    8. ' ' → logprob: -14.272697448730469
    9. '	s' → logprob: -15.022697448730469
    10. 'n' → logprob: -16.27269744873047

Token 327: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.01930401287972927
    2. ' s' → logprob: -4.019303798675537
    3. '   ' → logprob: -6.769303798675537
    4. ' ' → logprob: -13.144304275512695
    5. '```' → logprob: -14.019304275512695
    6. '  ' → logprob: -14.269304275512695
    7. ' ways' → logprob: -14.644304275512695
    8. 'ways' → logprob: -14.894304275512695
    9. '	s' → logprob: -15.394304275512695
    10. '    
' → logprob: -15.394304275512695

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324605919420719
    2. '=' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.648245811462402
    4. 's' → logprob: -16.02324676513672
    5. '<|end|>' → logprob: -16.14824676513672
    6. '=s' → logprob: -16.52324676513672
    7. '=create' → logprob: -16.89824676513672
    8. ')' → logprob: -17.39824676513672
    9. ',' → logprob: -17.64824676513672
    10. '```' → logprob: -18.14824676513672

Token 329: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.47408050298690796
    2. ' init' → logprob: -0.974080502986908
    3. '_init' → logprob: -12.849080085754395
    4. '(init' → logprob: -14.474080085754395
    5. '	init' → logprob: -15.224080085754395
    6. '.init' → logprob: -17.22408103942871
    7. '/init' → logprob: -17.34908103942871
    8. ':init' → logprob: -17.72408103942871
    9. ')init' → logprob: -17.97408103942871
    10. 'inite' → logprob: -18.22408103942871

Token 330: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_block' → logprob: -16.875
    3. '[' → logprob: -22.0
    4. '```' → logprob: -22.25
    5. '_
' → logprob: -23.125
    6. 's' → logprob: -23.125
    7. '_way' → logprob: -23.75
    8. 'ways' → logprob: -24.0
    9. '\' → logprob: -24.125
    10. '`' → logprob: -24.25

Token 331: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -9.088346359931165e-07
    2. ' ways' → logprob: -14.500000953674316
    3. '[' → logprob: -16.125
    4. '```' → logprob: -16.75
    5. '_' → logprob: -17.0
    6. 's' → logprob: -17.625
    7. 'way' → logprob: -17.875
    8. 'aways' → logprob: -18.0
    9. '
' → logprob: -18.75
    10. '-' → logprob: -18.875

Token 332: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00118856446351856
    2. '(n' → logprob: -6.7511887550354
    3. 'array' → logprob: -11.876188278198242
    4. '_' → logprob: -12.126188278198242
    5. '_arrays' → logprob: -12.626188278198242
    6. 'Array' → logprob: -13.751188278198242
    7. '_(' → logprob: -13.751188278198242
    8. 's' → logprob: -15.001188278198242
    9. '_arr' → logprob: -15.751188278198242
    10. '_ARRAY' → logprob: -17.126188278198242

Token 333: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. 'n' → logprob: -15.375000953674316
    4. ' (' → logprob: -17.75
    5. ')n' → logprob: -18.375
    6. '(
' → logprob: -18.5
    7. '	n' → logprob: -18.625
    8. '```' → logprob: -19.25
    9. ',n' → logprob: -19.5
    10. ')(' → logprob: -19.5

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018152514472603798
    2. ')
' → logprob: -4.018152713775635
    3. ')
' → logprob: -13.893152236938477
    4. ')

' → logprob: -14.018152236938477
    5. '   ' → logprob: -14.768152236938477
    6. '()' → logprob: -15.393152236938477
    7. ' )' → logprob: -15.643152236938477
    8. '())' → logprob: -16.143152236938477
    9. ')s' → logprob: -17.393152236938477
    10. '())
' → logprob: -17.768152236938477

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018337702378630638
    2. 'set' → logprob: -4.018337726593018
    3. ' set' → logprob: -8.76833724975586
    4. '	set' → logprob: -10.64333724975586
    5. ')set' → logprob: -12.26833724975586
    6. '(set' → logprob: -13.64333724975586
    7. '```' → logprob: -14.14333724975586
    8. '=set' → logprob: -14.39333724975586
    9. '_set' → logprob: -15.14333724975586
    10. '#set' → logprob: -15.76833724975586

Token 336: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -9.090760431718081e-05
    2. '   ' → logprob: -9.875090599060059
    3. ' set' → logprob: -10.250090599060059
    4. '	set' → logprob: -12.750090599060059
    5. '(set' → logprob: -14.500090599060059
    6. ')set' → logprob: -14.750090599060059
    7. '#set' → logprob: -16.125091552734375
    8. '_set' → logprob: -16.875091552734375
    9. '=set' → logprob: -16.875091552734375
    10. '.set' → logprob: -17.375091552734375

Token 337: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -1.676292231422849e-05
    2. 'initial' → logprob: -11.000017166137695
    3. '_first' → logprob: -17.000017166137695
    4. '_' → logprob: -17.250017166137695
    5. '_init' → logprob: -18.375017166137695
    6. ' initial' → logprob: -19.750017166137695
    7. '_in' → logprob: -19.750017166137695
    8. 's' → logprob: -19.750017166137695
    9. '_INITIAL' → logprob: -20.000017166137695
    10. '_initialized' → logprob: -20.250017166137695

Token 338: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 's' → logprob: -19.875
    3. '```' → logprob: -21.75
    4. '_
' → logprob: -22.875
    5. '`' → logprob: -23.5
    6. '_way' → logprob: -23.875
    7. 'ways' → logprob: -24.0
    8. ' _' → logprob: -24.0
    9. '(s' → logprob: -24.25
    10. '\' → logprob: -24.625

Token 339: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -8.65707261255011e-06
    2. 's' → logprob: -11.750008583068848
    3. ' ways' → logprob: -14.500008583068848
    4. 'way' → logprob: -16.000009536743164
    5. ' ' → logprob: -18.000009536743164
    6. '```' → logprob: -18.250009536743164
    7. 'WAYS' → logprob: -18.250009536743164
    8. 'steps' → logprob: -18.875009536743164
    9. ' s' → logprob: -19.000009536743164
    10. '_' → logprob: -19.125009536743164

Token 340: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.250032424926758
    4. 's' → logprob: -14.625032424926758
    5. '(
' → logprob: -18.000032424926758
    6. '```' → logprob: -20.000032424926758
    7. '\(' → logprob: -20.375032424926758
    8. ')' → logprob: -20.375032424926758
    9. '(space' → logprob: -20.375032424926758
    10. '('' → logprob: -21.500032424926758

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0259150157216936e-05
    2. ')
' → logprob: -10.00005054473877
    3. '   ' → logprob: -12.75005054473877
    4. ')s' → logprob: -13.62505054473877
    5. ' )' → logprob: -14.87505054473877
    6. '(s' → logprob: -16.625049591064453
    7. ' ' → logprob: -16.625049591064453
    8. 's' → logprob: -17.250049591064453
    9. ',' → logprob: -18.000049591064453
    10. '),' → logprob: -18.250049591064453

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00562004279345274
    2. 'set' → logprob: -5.505620002746582
    3. ' set' → logprob: -6.505620002746582
    4. '    
' → logprob: -11.130620002746582
    5. '	set' → logprob: -11.130620002746582
    6. '(set' → logprob: -11.755620002746582
    7. '```' → logprob: -13.005620002746582
    8. ')set' → logprob: -13.255620002746582
    9. '
' → logprob: -13.380620002746582
    10. '_set' → logprob: -13.880620002746582

Token 343: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -7.719917630311102e-05
    2. ' set' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.000077247619629
    4. '```' → logprob: -17.875076293945312
    5. '	set' → logprob: -18.000076293945312
    6. ')set' → logprob: -18.875076293945312
    7. '(set' → logprob: -19.125076293945312
    8. '_set' → logprob: -19.625076293945312
    9. '=set' → logprob: -20.500076293945312
    10. '
' → logprob: -20.500076293945312

Token 344: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -3.292907877039397e-06
    2. 'first' → logprob: -12.75000286102295
    3. '```' → logprob: -16.250003814697266
    4. '_' → logprob: -16.875003814697266
    5. '_initial' → logprob: -17.500003814697266
    6. ' _' → logprob: -17.750003814697266
    7. '_FIRST' → logprob: -18.125003814697266
    8. ' first' → logprob: -18.125003814697266
    9. ''_' → logprob: -18.500003814697266
    10. '_f' → logprob: -18.625003814697266

Token 345: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0006441685254685581
    2. '_' → logprob: -7.375644207000732
    3. '_steps' → logprob: -11.125643730163574
    4. 'step' → logprob: -13.500643730163574
    5. ' _' → logprob: -14.625643730163574
    6. '```' → logprob: -14.625643730163574
    7. '_s' → logprob: -15.875643730163574
    8. '_first' → logprob: -16.50064468383789
    9. '_second' → logprob: -17.37564468383789
    10. '
' → logprob: -17.37564468383789

Token 346: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. 's' → logprob: -13.625000953674316
    3. 'ways' → logprob: -17.750001907348633
    4. '```' → logprob: -19.000001907348633
    5. '\' → logprob: -20.000001907348633
    6. 'Ways' → logprob: -20.250001907348633
    7. '(s' → logprob: -21.125001907348633
    8. ' ways' → logprob: -21.250001907348633
    9. '_steps' → logprob: -21.250001907348633
    10. ' _' → logprob: -21.375001907348633

Token 347: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -9.05499910004437e-05
    2. 's' → logprob: -9.625090599060059
    3. ' ways' → logprob: -11.000090599060059
    4. '_' → logprob: -12.625090599060059
    5. 'way' → logprob: -13.000090599060059
    6. 'Ways' → logprob: -14.125090599060059
    7. 'WAYS' → logprob: -14.375090599060059
    8. 'ays' → logprob: -15.750090599060059
    9. '```' → logprob: -15.750090599060059
    10. '(s' → logprob: -16.375089645385742

Token 348: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014931005716789514
    2. '(' → logprob: -9.000149726867676
    3. ' (' → logprob: -10.625149726867676
    4. 's' → logprob: -13.500149726867676
    5. '(
' → logprob: -15.500149726867676
    6. '```' → logprob: -18.12514877319336
    7. ')' → logprob: -19.00014877319336
    8. ',' → logprob: -19.50014877319336
    9. ''s' → logprob: -20.25014877319336
    10. ' ' → logprob: -20.25014877319336

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009986326331272721
    2. ',b' → logprob: -7.625998497009277
    3. ',s' → logprob: -8.125998497009277
    4. ' ,' → logprob: -8.500998497009277
    5. 's' → logprob: -11.625998497009277
    6. ',
' → logprob: -14.250998497009277
    7. ')' → logprob: -14.500998497009277
    8. ' s' → logprob: -15.000998497009277
    9. '(' → logprob: -15.250998497009277
    10. '(s' → logprob: -15.500998497009277

Token 350: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ')b' → logprob: -17.52975082397461
    4. '	b' → logprob: -18.40475082397461
    5. ' б' → logprob: -19.40475082397461
    6. ')' → logprob: -19.52975082397461
    7. ',b' → logprob: -19.77975082397461
    8. '(b' → logprob: -19.77975082397461
    9. '_b' → logprob: -20.77975082397461
    10. '=b' → logprob: -21.40475082397461

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015147423837333918
    2. ')
' → logprob: -6.501514911651611
    3. '   ' → logprob: -11.376514434814453
    4. ' )' → logprob: -14.501514434814453
    5. ')
' → logprob: -16.001514434814453
    6. ')

' → logprob: -16.876514434814453
    7. '()' → logprob: -16.876514434814453
    8. ')#' → logprob: -17.126514434814453
    9. 'def' → logprob: -17.376514434814453
    10. ')`' → logprob: -17.501514434814453

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01506607886403799
    2. 'compute' → logprob: -4.265066146850586
    3. ' compute' → logprob: -7.015066146850586
    4. '```' → logprob: -13.140066146850586
    5. '
' → logprob: -13.765066146850586
    6. 'def' → logprob: -14.390066146850586
    7. '.compute' → logprob: -16.140066146850586
    8. '_compute' → logprob: -16.265066146850586
    9. '(com' → logprob: -17.140066146850586
    10. '    
' → logprob: -17.390066146850586

Token 353: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.007010767702013254
    2. '   ' → logprob: -5.0070109367370605
    3. ' compute' → logprob: -8.132010459899902
    4. '```' → logprob: -14.007010459899902
    5. '.compute' → logprob: -15.757010459899902
    6. '  ' → logprob: -16.13201141357422
    7. '
' → logprob: -16.63201141357422
    8. '_compute' → logprob: -16.75701141357422
    9. ' ' → logprob: -17.00701141357422
    10. 'calculate' → logprob: -17.13201141357422

Token 354: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. 'ways' → logprob: -19.25
    4. '_way' → logprob: -19.625
    5. '(n' → logprob: -20.0
    6. '\' → logprob: -20.125
    7. 's' → logprob: -20.25
    8. '(' → logprob: -20.375
    9. '_compute' → logprob: -20.5
    10. ' _' → logprob: -20.875

Token 355: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -3.2020991056924686e-05
    2. '_' → logprob: -10.375032424926758
    3. ' ways' → logprob: -14.500032424926758
    4. 'way' → logprob: -15.625032424926758
    5. 'WAYS' → logprob: -16.750032424926758
    6. 's' → logprob: -17.250032424926758
    7. '```' → logprob: -17.250032424926758
    8. 'Ways' → logprob: -19.125032424926758
    9. 'compute' → logprob: -19.625032424926758
    10. 'aways' → logprob: -19.625032424926758

Token 356: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009236076730303466
    2. '(' → logprob: -7.0009236335754395
    3. ' (' → logprob: -11.375923156738281
    4. '(
' → logprob: -14.750923156738281
    5. '```' → logprob: -15.750923156738281
    6. '(noun' → logprob: -17.50092315673828
    7. '   ' → logprob: -18.12592315673828
    8. '(s' → logprob: -18.25092315673828
    9. ',' → logprob: -18.37592315673828
    10. ')' → logprob: -18.62592315673828

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013360745506361127
    2. ',b' → logprob: -6.626336097717285
    3. ' ,' → logprob: -11.751336097717285
    4. ',
' → logprob: -13.626336097717285
    5. 'b' → logprob: -14.501336097717285
    6. ')' → logprob: -15.126336097717285
    7. '   ' → logprob: -17.12633514404297
    8. ' b' → logprob: -17.25133514404297
    9. '```' → logprob: -17.75133514404297
    10. '‌,' → logprob: -17.87633514404297

Token 358: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. '	b' → logprob: -19.505233764648438
    4. ')b' → logprob: -20.130233764648438
    5. '   ' → logprob: -20.755233764648438
    6. ' ' → logprob: -21.130233764648438
    7. ')' → logprob: -22.130233764648438
    8. '```' → logprob: -22.255233764648438
    9. ',b' → logprob: -22.505233764648438
    10. 's' → logprob: -22.880233764648438

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ',s' → logprob: -11.37501335144043
    3. ' ,' → logprob: -13.87501335144043
    4. ',
' → logprob: -14.50001335144043
    5. 's' → logprob: -16.62501335144043
    6. ',

' → logprob: -18.12501335144043
    7. ')' → logprob: -19.50001335144043
    8. '‌,' → logprob: -20.37501335144043
    9. ',
' → logprob: -20.75001335144043
    10. '，' → logprob: -20.87501335144043

Token 360: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004078401252627373
    2. ' s' → logprob: -5.504078388214111
    3. ')' → logprob: -18.129077911376953
    4. ')s' → logprob: -20.504077911376953
    5. '	s' → logprob: -20.754077911376953
    6. '(s' → logprob: -20.879077911376953
    7. '_s' → logprob: -21.129077911376953
    8. '`s' → logprob: -22.379077911376953
    9. '   ' → logprob: -23.004077911376953
    10. '```' → logprob: -23.004077911376953

Token 361: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0031803252641111612
    2. ')' → logprob: -5.753180503845215
    3. ')
' → logprob: -13.003180503845215
    4. ' )
' → logprob: -15.503180503845215
    5. ')

' → logprob: -16.5031795501709
    6. '   ' → logprob: -16.5031795501709
    7. ' ' → logprob: -19.3781795501709
    8. ')
/' → logprob: -19.8781795501709
    9. ')`
' → logprob: -20.6281795501709
    10. ')\
' → logprob: -20.6281795501709

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071113863959908485
    2. 'output' → logprob: -5.007111549377441
    3. '
' → logprob: -8.382111549377441
    4. ' output' → logprob: -9.257111549377441
    5. '```' → logprob: -9.882111549377441
    6. '    
' → logprob: -11.632111549377441
    7. '(output' → logprob: -12.382111549377441
    8. '	output' → logprob: -12.382111549377441
    9. '`' → logprob: -14.007111549377441
    10. '``' → logprob: -14.257111549377441

Token 363: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -1.759734732331708e-05
    2. ' output' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.000017166137695
    4. '(output' → logprob: -20.125017166137695
    5. '
' → logprob: -20.625017166137695
    6. '	output' → logprob: -20.625017166137695
    7. '```' → logprob: -22.000017166137695
    8. ' ' → logprob: -22.000017166137695
    9. '  ' → logprob: -22.375017166137695
    10. '_output' → logprob: -22.625017166137695

Token 364: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.250000953674316
    3. '_res' → logprob: -16.875
    4. '_results' → logprob: -17.0
    5. '_output' → logprob: -17.375
    6. '_RESULT' → logprob: -17.75
    7. '_Result' → logprob: -18.625
    8. ' _' → logprob: -18.875
    9. 'result' → logprob: -18.875
    10. '"_' → logprob: -19.5

Token 365: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.875001907348633
    3. 's' → logprob: -14.000001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '```' → logprob: -19.500001907348633
    6. ' ' → logprob: -20.500001907348633
    7. '(
' → logprob: -20.750001907348633
    8. ' s' → logprob: -21.000001907348633
    9. ')' → logprob: -22.625001907348633
    10. '<s' → logprob: -22.625001907348633

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031812789384275675
    2. ',n' → logprob: -5.753181457519531
    3. ' ,' → logprob: -13.378181457519531
    4. '(n' → logprob: -13.378181457519531
    5. ',
' → logprob: -15.253181457519531
    6. '(' → logprob: -16.50318145751953
    7. ',s' → logprob: -17.87818145751953
    8. ',N' → logprob: -18.12818145751953
    9. ',b' → logprob: -18.75318145751953
    10. ' ' → logprob: -18.87818145751953

Token 367: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602243334054947
    2. ' n' → logprob: -1.9102243185043335
    3. '	n' → logprob: -15.660223960876465
    4. ')n' → logprob: -17.03522491455078
    5. '_n' → logprob: -17.78522491455078
    6. ')' → logprob: -18.16022491455078
    7. ' ' → logprob: -18.53522491455078
    8. '   ' → logprob: -19.53522491455078
    9. ',n' → logprob: -19.53522491455078
    10. ' ' → logprob: -19.78522491455078

Token 368: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -15.250007629394531
    4. '())' → logprob: -16.87500762939453
    5. ')`' → logprob: -17.25000762939453
    6. '))' → logprob: -17.87500762939453
    7. '()' → logprob: -17.87500762939453
    8. ')

' → logprob: -18.12500762939453
    9. ')n' → logprob: -18.75000762939453
    10. ')#' → logprob: -19.00000762939453

Token 369: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.764977686339989e-05
    2. 'main' → logprob: -9.875057220458984
    3. ' if' → logprob: -12.125057220458984
    4. '```' → logprob: -14.875057220458984
    5. '
' → logprob: -15.375057220458984
    6. '#' → logprob: -15.875057220458984
    7. '\n' → logprob: -17.875057220458984
    8. '\' → logprob: -18.250057220458984
    9. ' main' → logprob: -19.000057220458984
    10. 'If' → logprob: -19.000057220458984

Token 370: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009894796647131443
    2. '(' → logprob: -4.884894847869873
    3. '#' → logprob: -7.509894847869873
    4. '```' → logprob: -7.509894847869873
    5. '
' → logprob: -7.634894847869873
    6. '()
' → logprob: -7.884894847869873
    7. ')' → logprob: -9.134894371032715
    8. '(
' → logprob: -9.634894371032715
    9. '<|end|>' → logprob: -9.884894371032715
    10. '\n' → logprob: -10.134894371032715


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 368
Tokens correctement prédits (1ère position, stricte): 184
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 335
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 55.71%
Précision (top 10): 91.03%
================================================================================
