================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
i = list(input())
if (i[0] == i[1] or i[1] == i[2] or i[2] == i[3]):
    print("Bad")
else:
    print("Good")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'i' (ID: 72)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5915127396583557
    2. '(' → logprob: -0.8415127396583557
    3. '.' → logprob: -4.216512680053711
    4. '[i' → logprob: -9.466512680053711
    5. '\[' → logprob: -9.466512680053711
    6. '```' → logprob: -9.591512680053711
    7. '_' → logprob: -9.716512680053711
    8. '=' → logprob: -9.841512680053711
    9. '(
' → logprob: -9.841512680053711
    10. ' (' → logprob: -9.841512680053711

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23034122586250305
    2. '())' → logprob: -1.6053411960601807
    3. '(' → logprob: -5.98034143447876
    4. '()' → logprob: -6.23034143447876
    5. '))' → logprob: -8.355340957641602
    6. ' ())' → logprob: -9.980340957641602
    7. ' )' → logprob: -10.355340957641602
    8. '`)' → logprob: -10.730340957641602
    9. '()))' → logprob: -11.105340957641602
    10. '')' → logprob: -11.480340957641602

Token 5: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4368458390235901
    2. '.reverse' → logprob: -2.4368457794189453
    3. '.sort' → logprob: -2.8118457794189453
    4. '.append' → logprob: -2.9368457794189453
    5. '[::-' → logprob: -3.1868457794189453
    6. '[' → logprob: -3.4368457794189453
    7. '.pop' → logprob: -3.8118457794189453
    8. '.count' → logprob: -3.9368457794189453
    9. '[:]' → logprob: -4.311845779418945
    10. '.remove' → logprob: -5.436845779418945

Token 6: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7264595627784729
    2. ' i' → logprob: -1.4764595031738281
    3. ' not' → logprob: -1.7264595031738281
    4. 'i' → logprob: -2.976459503173828
    5. ' len' → logprob: -3.226459503173828
    6. ''' → logprob: -4.601459503173828
    7. 'len' → logprob: -5.601459503173828
    8. '  ' → logprob: -6.601459503173828
    9. ' '' → logprob: -6.601459503173828
    10. 'not' → logprob: -6.851459503173828

Token 7: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5343160033226013
    2. 'len' → logprob: -1.409316062927246
    3. ''' → logprob: -3.034316062927246
    4. ' i' → logprob: -3.534316062927246
    5. ' len' → logprob: -3.534316062927246
    6. ')' → logprob: -4.034316062927246
    7. ' not' → logprob: -4.034316062927246
    8. ''i' → logprob: -4.784316062927246
    9. 'not' → logprob: -5.284316062927246
    10. ' ' → logprob: -5.534316062927246

Token 8: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01794693060219288
    2. '==' → logprob: -5.017946720123291
    3. ' ==' → logprob: -5.392946720123291
    4. ')' → logprob: -5.642946720123291
    5. '[i' → logprob: -6.892946720123291
    6. '.' → logprob: -7.892946720123291
    7. ' ' → logprob: -7.892946720123291
    8. '[-' → logprob: -8.26794719696045
    9. ' !=' → logprob: -8.51794719696045
    10. '!=' → logprob: -8.89294719696045

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012474933173507452
    2. ' ' → logprob: -6.751247406005859
    3. '1' → logprob: -9.62624740600586
    4. ')' → logprob: -12.87624740600586
    5. '2' → logprob: -13.37624740600586
    6. '==' → logprob: -13.75124740600586
    7. '-' → logprob: -14.00124740600586
    8. ' ==' → logprob: -14.06374740600586
    9. ']' → logprob: -14.25124740600586
    10. '   ' → logprob: -14.43874740600586

Token 10: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9483264088630676
    2. '==' → logprob: -1.0733263492584229
    3. ']' → logprob: -1.8233263492584229
    4. ')' → logprob: -3.073326349258423
    5. '=' → logprob: -3.323326349258423
    6. '[' → logprob: -4.823326587677002
    7. ' ' → logprob: -5.073326587677002
    8. ']==' → logprob: -5.698326587677002
    9. ' !=' → logprob: -5.823326587677002
    10. '!=' → logprob: -5.823326587677002

Token 11: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3103197515010834
    2. ' ==' → logprob: -1.5603197813034058
    3. '=' → logprob: -3.435319662094116
    4. ')' → logprob: -4.185319900512695
    5. '!=' → logprob: -5.060319900512695
    6. ' !=' → logprob: -6.685319900512695
    7. ' ' → logprob: -7.810319900512695
    8. '>' → logprob: -7.935319900512695
    9. '[' → logprob: -8.685319900512695
    10. '+' → logprob: -9.060319900512695

Token 12: ' i' (ID: 575)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19736284017562866
    2. ''i' → logprob: -2.5723628997802734
    3. '"' → logprob: -3.1973628997802734
    4. ''a' → logprob: -3.9473628997802734
    5. ''"' → logprob: -4.197362899780273
    6. ' '('' → logprob: -5.072362899780273
    7. ''-' → logprob: -6.072362899780273
    8. ' '' → logprob: -6.072362899780273
    9. ''A' → logprob: -6.197362899780273
    10. '"'' → logprob: -6.572362899780273

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019348548725247383
    2. '[-' → logprob: -4.019348621368408
    3. '-' → logprob: -7.394348621368408
    4. '])' → logprob: -8.39434814453125
    5. '```' → logprob: -9.76934814453125
    6. '[::-' → logprob: -9.89434814453125
    7. '1' → logprob: -10.01934814453125
    8. ' [' → logprob: -10.14434814453125
    9. ']' → logprob: -10.26934814453125
    10. '[len' → logprob: -10.26934814453125

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24130618572235107
    2. '-' → logprob: -1.741306185722351
    3. '0' → logprob: -3.3663063049316406
    4. 'len' → logprob: -6.241306304931641
    5. '])' → logprob: -6.866306304931641
    6. '2' → logprob: -7.116306304931641
    7. ' ' → logprob: -7.991306304931641
    8. '3' → logprob: -9.11630630493164
    9. ' -' → logprob: -9.36630630493164
    10. '```' → logprob: -9.61630630493164

Token 15: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8636378049850464
    2. ']' → logprob: -1.2386378049850464
    3. '):' → logprob: -2.113637924194336
    4. '])' → logprob: -2.363637924194336
    5. ']):' → logprob: -2.988637924194336
    6. ']:' → logprob: -4.488637924194336
    7. ' )' → logprob: -6.238637924194336
    8. '[' → logprob: -6.363637924194336
    9. ' ]' → logprob: -6.363637924194336
    10. ']==' → logprob: -6.738637924194336

Token 16: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5524250864982605
    2. '):' → logprob: -0.9274250864982605
    3. ' and' → logprob: -3.6774251461029053
    4. ':' → logprob: -6.552424907684326
    5. ' ):' → logprob: -7.427424907684326
    6. 'and' → logprob: -7.552424907684326
    7. '==' → logprob: -7.927424907684326
    8. ' )' → logprob: -7.927424907684326
    9. ' ==' → logprob: -9.427425384521484
    10. ' or' → logprob: -9.427425384521484

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07908971607685089
    2. 'i' → logprob: -2.579089641571045
    3. ' ' → logprob: -9.079090118408203
    4. ' ' → logprob: -9.579090118408203
    5. ' not' → logprob: -12.204090118408203
    6. 'len' → logprob: -13.329090118408203
    7. '	i' → logprob: -13.329090118408203
    8. ')' → logprob: -13.579090118408203
    9. ' (' → logprob: -13.954090118408203
    10. '(i' → logprob: -14.329090118408203

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2233183042553719e-05
    2. ' [' → logprob: -11.750012397766113
    3. ')' → logprob: -13.500012397766113
    4. '```' → logprob: -14.250012397766113
    5. '[i' → logprob: -14.625012397766113
    6. '<|end|>' → logprob: -14.750012397766113
    7. ' ' → logprob: -15.000012397766113
    8. '==' → logprob: -15.500012397766113
    9. '[
' → logprob: -15.500012397766113
    10. '[-' → logprob: -16.000011444091797

Token 19: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5962517857551575
    2. '2' → logprob: -0.9712517857551575
    3. '1' → logprob: -2.7212517261505127
    4. '-' → logprob: -5.721251964569092
    5. ' ' → logprob: -6.721251964569092
    6. '[' → logprob: -8.721251487731934
    7. '```' → logprob: -10.721251487731934
    8. '3' → logprob: -10.846251487731934
    9. ']' → logprob: -11.533751487731934
    10. ' -' → logprob: -11.658751487731934

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.541663646697998
    2. ' ==' → logprob: -1.291663646697998
    3. '[' → logprob: -2.541663646697998
    4. ' ]' → logprob: -3.541663646697998
    5. ']==' → logprob: -3.791663646697998
    6. '==' → logprob: -4.916663646697998
    7. ')' → logprob: -6.041663646697998
    8. ' ' → logprob: -7.041663646697998
    9. '[i' → logprob: -7.666663646697998
    10. ' )' → logprob: -7.666663646697998

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21037839353084564
    2. '==' → logprob: -2.085378408432007
    3. '[' → logprob: -3.710378408432007
    4. ' !=' → logprob: -3.960378408432007
    5. ')' → logprob: -4.210378170013428
    6. '!=' → logprob: -6.085378170013428
    7. ' )' → logprob: -6.210378170013428
    8. ' ' → logprob: -6.710378170013428
    9. ' ' → logprob: -7.210378170013428
    10. '=' → logprob: -9.085378646850586

Token 22: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05490214377641678
    2. ' i' → logprob: -2.9299020767211914
    3. ' ' → logprob: -11.429902076721191
    4. ')' → logprob: -13.054902076721191
    5. ''i' → logprob: -13.054902076721191
    6. '	i' → logprob: -13.804902076721191
    7. ')i' → logprob: -13.804902076721191
    8. '  ' → logprob: -14.804902076721191
    9. '[i' → logprob: -15.429902076721191
    10. '(i' → logprob: -15.429902076721191

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -14.375001907348633
    3. '2' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.375001907348633
    5. ']' → logprob: -15.500001907348633
    6. '```' → logprob: -15.750001907348633
    7. '[
' → logprob: -15.750001907348633
    8. '(' → logprob: -15.875001907348633
    9. '[i' → logprob: -16.625001907348633
    10. '][' → logprob: -16.625001907348633

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6060808522743173e-05
    2. '0' → logprob: -10.875025749206543
    3. ' ' → logprob: -12.000025749206543
    4. '```' → logprob: -15.000025749206543
    5. '-' → logprob: -16.18752670288086
    6. '3' → logprob: -16.18752670288086
    7. '   ' → logprob: -16.50002670288086
    8. '۲' → logprob: -16.87502670288086
    9. ']' → logprob: -16.93752670288086
    10. '２' → logprob: -17.00002670288086

Token 25: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009594115428626537
    2. '):' → logprob: -4.759593963623047
    3. ' )' → logprob: -7.134593963623047
    4. ' or' → logprob: -8.884593963623047
    5. ' ):' → logprob: -10.884593963623047
    6. ']' → logprob: -11.259593963623047
    7. 'or' → logprob: -13.009593963623047
    8. '])' → logprob: -13.009593963623047
    9. '`)' → logprob: -14.134593963623047
    10. '))' → logprob: -14.259593963623047

Token 26: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6303997039794922
    2. '):' → logprob: -0.8803997039794922
    3. ' or' → logprob: -3.005399703979492
    4. ' )' → logprob: -6.505399703979492
    5. ' ):' → logprob: -6.880399703979492
    6. 'or' → logprob: -7.005399703979492
    7. ':' → logprob: -11.130399703979492
    8. ' and' → logprob: -11.630399703979492
    9. ' ' → logprob: -12.130399703979492
    10. '):
' → logprob: -12.255399703979492

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.054915908724069595
    2. 'i' → logprob: -2.9299159049987793
    3. ' ' → logprob: -10.554916381835938
    4. ' ' → logprob: -12.179916381835938
    5. '(i' → logprob: -14.679916381835938
    6. '	i' → logprob: -14.804916381835938
    7. ')' → logprob: -14.929916381835938
    8. ',i' → logprob: -15.179916381835938
    9. '...' → logprob: -15.429916381835938
    10. '  ' → logprob: -15.554916381835938

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. 's' → logprob: -13.750005722045898
    3. '<|end|>' → logprob: -13.875005722045898
    4. '```' → logprob: -14.375005722045898
    5. ' [' → logprob: -14.625005722045898
    6. '[
' → logprob: -14.875005722045898
    7. '==' → logprob: -15.250005722045898
    8. '2' → logprob: -15.250005722045898
    9. 'and' → logprob: -15.562505722045898
    10. '...' → logprob: -15.562505722045898

Token 29: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03371324762701988
    2. '2' → logprob: -3.4087133407592773
    3. '[' → logprob: -9.658713340759277
    4. ' ' → logprob: -12.908713340759277
    5. '```' → logprob: -14.658713340759277
    6. '3' → logprob: -15.033713340759277
    7. '-' → logprob: -16.47121238708496
    8. ']' → logprob: -16.84621238708496
    9. '۰' → logprob: -16.90871238708496
    10. '(' → logprob: -17.22121238708496

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0831774473190308
    2. ' ==' → logprob: -1.2081774473190308
    3. '==' → logprob: -1.3331774473190308
    4. ']==' → logprob: -2.5831775665283203
    5. '[' → logprob: -3.8331775665283203
    6. ')' → logprob: -7.20817756652832
    7. ' ]' → logprob: -7.33317756652832
    8. ' ' → logprob: -8.70817756652832
    9. '[i' → logprob: -9.45817756652832
    10. ')==' → logprob: -10.20817756652832

Token 31: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2814478278160095
    2. ' ==' → logprob: -1.4064478874206543
    3. '[' → logprob: -8.406447410583496
    4. ')' → logprob: -10.406447410583496
    5. ' ' → logprob: -11.281447410583496
    6. '<|end|>' → logprob: -11.531447410583496
    7. '=' → logprob: -12.281447410583496
    8. ']==' → logprob: -12.656447410583496
    9. ')==' → logprob: -12.656447410583496
    10. '==
' → logprob: -13.031447410583496

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005957002751529217
    2. ' i' → logprob: -5.130957126617432
    3. ' ' → logprob: -11.005956649780273
    4. '   ' → logprob: -12.505956649780273
    5. ')' → logprob: -13.130956649780273
    6. '`' → logprob: -13.880956649780273
    7. '	i' → logprob: -14.130956649780273
    8. '  ' → logprob: -14.130956649780273
    9. '[i' → logprob: -14.443456649780273
    10. ''i' → logprob: -14.630956649780273

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022218646481633186
    2. '3' → logprob: -6.127222061157227
    3. '0' → logprob: -10.627222061157227
    4. ' ' → logprob: -11.877222061157227
    5. ' [' → logprob: -13.502222061157227
    6. ']' → logprob: -13.752222061157227
    7. '1' → logprob: -14.377222061157227
    8. '```' → logprob: -14.377222061157227
    9. '][' → logprob: -15.002222061157227
    10. ''[' → logprob: -15.377222061157227

Token 34: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20142494142055511
    2. '0' → logprob: -1.7014249563217163
    3. '1' → logprob: -11.826424598693848
    4. ']' → logprob: -13.201424598693848
    5. '])' → logprob: -13.451424598693848
    6. ' ' → logprob: -14.451424598693848
    7. ']))' → logprob: -16.451425552368164
    8. ']])' → logprob: -16.638925552368164
    9. '[' → logprob: -17.076425552368164
    10. ')' → logprob: -17.076425552368164

Token 35: ']):
' (ID: 51989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3830195963382721
    2. ']' → logprob: -1.2580195665359497
    3. ' or' → logprob: -3.7580196857452393
    4. '])' → logprob: -4.63301944732666
    5. '):' → logprob: -8.38301944732666
    6. 'or' → logprob: -8.75801944732666
    7. ')]' → logprob: -9.00801944732666
    8. ']):' → logprob: -9.13301944732666
    9. ' )' → logprob: -9.25801944732666
    10. ')])' → logprob: -9.88301944732666

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10079110413789749
    2. ' print' → logprob: -3.1007912158966064
    3. 'print' → logprob: -3.4757912158966064
    4. ':' → logprob: -4.475790977478027
    5. '    ' → logprob: -6.225790977478027
    6. ' or' → logprob: -6.350790977478027
    7. ')' → logprob: -6.975790977478027
    8. ' ' → logprob: -7.100790977478027
    9. ' and' → logprob: -7.350790977478027
    10. ' :' → logprob: -8.350790977478027

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07729452848434448
    2. ' print' → logprob: -3.0772945880889893
    3. '   ' → logprob: -3.5772945880889893
    4. ' ' → logprob: -8.57729434967041
    5. 'pass' → logprob: -10.45229434967041
    6. '```' → logprob: -10.82729434967041
    7. 'i' → logprob: -10.95229434967041
    8. ' i' → logprob: -10.95229434967041
    9. '    ' → logprob: -11.32729434967041
    10. 'pr' → logprob: -11.95229434967041

Token 38: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20619738101959229
    2. '("' → logprob: -1.7061973810195923
    3. '(True' → logprob: -6.206197261810303
    4. '('' → logprob: -6.456197261810303
    5. '("("' → logprob: -7.206197261810303
    6. '()' → logprob: -8.206197738647461
    7. '(False' → logprob: -9.831197738647461
    8. '(i' → logprob: -10.081197738647461
    9. '(":' → logprob: -10.956197738647461
    10. '("")' → logprob: -11.331197738647461

Token 39: 'Bad' (ID: 22048)
  Prédit: 'Bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bad' → logprob: -0.01854437217116356
    2. 'Yes' → logprob: -4.2685441970825195
    3. 'Lost' → logprob: -6.2685441970825195
    4. 'Weak' → logprob: -6.5185441970825195
    5. ' Bad' → logprob: -8.51854419708252
    6. 'No' → logprob: -8.51854419708252
    7. 'BAD' → logprob: -9.26854419708252
    8. 'YES' → logprob: -9.64354419708252
    9. '?' → logprob: -9.64354419708252
    10. 'bad' → logprob: -9.76854419708252

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0066856564953923225
    2. ' ")' → logprob: -5.381685733795166
    3. ')' → logprob: -7.131685733795166
    4. ' )' → logprob: -7.256685733795166
    5. ')")' → logprob: -7.631685733795166
    6. ' ' → logprob: -11.006685256958008
    7. '")
' → logprob: -11.631685256958008
    8. '!")' → logprob: -11.756685256958008
    9. '`)' → logprob: -12.506685256958008
    10. ' ")"' → logprob: -12.506685256958008

Token 41: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16900864243507385
    2. ' else' → logprob: -2.044008731842041
    3. ')' → logprob: -4.669008731842041
    4. 'elif' → logprob: -5.044008731842041
    5. '<|end|>' → logprob: -5.044008731842041
    6. '
' → logprob: -6.169008731842041
    7. '```' → logprob: -7.419008731842041
    8. ' elif' → logprob: -8.294008255004883
    9. '\n' → logprob: -9.294008255004883
    10. '    
' → logprob: -9.294008255004883

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2723104848410003e-05
    2. ':
' → logprob: -10.750022888183594
    3. ' :' → logprob: -14.500022888183594
    4. '   ' → logprob: -14.875022888183594
    5. '):' → logprob: -15.500022888183594
    6. '():' → logprob: -16.250022888183594
    7. ':

' → logprob: -17.000022888183594
    8. '```' → logprob: -18.375022888183594
    9. ':return' → logprob: -18.500022888183594
    10. ':**' → logprob: -18.500022888183594

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008891209028661251
    2. ' print' → logprob: -6.0088911056518555
    3. '```' → logprob: -6.3838911056518555
    4. ' ' → logprob: -6.5088911056518555
    5. '<|end|>' → logprob: -7.0088911056518555
    6. '    ' → logprob: -7.2588911056518555
    7. 'print' → logprob: -7.7588911056518555
    8. '       ' → logprob: -8.133891105651855
    9. ' ' → logprob: -8.633891105651855
    10. '    
' → logprob: -9.008891105651855

Token 44: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03024376556277275
    2. ' print' → logprob: -3.5302438735961914
    3. '   ' → logprob: -7.655243873596191
    4. '```' → logprob: -11.655243873596191
    5. 'Print' → logprob: -12.030243873596191
    6. '	print' → logprob: -13.030243873596191
    7. ' ' → logprob: -13.655243873596191
    8. '.print' → logprob: -15.030243873596191
    9. '       ' → logprob: -15.280243873596191
    10. '    ' → logprob: -15.405243873596191

Token 45: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056905776262283325
    2. '("' → logprob: -3.056905746459961
    3. '("("' → logprob: -4.806905746459961
    4. '("")' → logprob: -9.306905746459961
    5. '('' → logprob: -11.681905746459961
    6. '()' → logprob: -12.556905746459961
    7. '("(' → logprob: -12.806905746459961
    8. '(">' → logprob: -13.806905746459961
    9. '("="' → logprob: -13.806905746459961
    10. '(""' → logprob: -14.056905746459961

Token 46: 'Good' (ID: 17212)
  Prédit: 'Good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Good' → logprob: -0.0010437668533995748
    2. '"' → logprob: -6.876043796539307
    3. 'Nice' → logprob: -12.126043319702148
    4. 'Yes' → logprob: -13.751043319702148
    5. '")' → logprob: -14.251043319702148
    6. 'Bad' → logprob: -14.251043319702148
    7. 'Ok' → logprob: -14.501043319702148
    8. 'Okay' → logprob: -14.501043319702148
    9. 'Beautiful' → logprob: -14.751043319702148
    10. 'Happy' → logprob: -14.876043319702148

Token 47: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.650518920039758e-06
    2. ')' → logprob: -12.750003814697266
    3. '")
' → logprob: -14.875003814697266
    4. ')")' → logprob: -15.500003814697266
    5. '"' → logprob: -15.750003814697266
    6. '!")' → logprob: -17.750003814697266
    7. '')' → logprob: -18.250003814697266
    8. '")

' → logprob: -19.000003814697266
    9. ' ")' → logprob: -19.750003814697266
    10. '”)' → logprob: -20.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 48.89%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 86.67%
================================================================================
